// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: grafeas/v1/slsa_provenance_zero_two.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { Struct } from "../../google/protobuf/struct.js";
import { Timestamp } from "../../google/protobuf/timestamp.js";

export const protobufPackage = "grafeas.v1";

/** See full explanation of fields at slsa.dev/provenance/v0.2. */
export interface SlsaProvenanceZeroTwo {
  builder: SlsaProvenanceZeroTwo_SlsaBuilder | undefined;
  buildType: string;
  invocation: SlsaProvenanceZeroTwo_SlsaInvocation | undefined;
  buildConfig: { [key: string]: any } | undefined;
  metadata: SlsaProvenanceZeroTwo_SlsaMetadata | undefined;
  materials: SlsaProvenanceZeroTwo_SlsaMaterial[];
}

/**
 * Identifies the entity that executed the recipe, which is trusted to have
 * correctly performed the operation and populated this provenance.
 */
export interface SlsaProvenanceZeroTwo_SlsaBuilder {
  id: string;
}

/**
 * The collection of artifacts that influenced the build including sources,
 * dependencies, build tools, base images, and so on.
 */
export interface SlsaProvenanceZeroTwo_SlsaMaterial {
  uri: string;
  digest: { [key: string]: string };
}

export interface SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry {
  key: string;
  value: string;
}

/** Identifies the event that kicked off the build. */
export interface SlsaProvenanceZeroTwo_SlsaInvocation {
  configSource: SlsaProvenanceZeroTwo_SlsaConfigSource | undefined;
  parameters: { [key: string]: any } | undefined;
  environment: { [key: string]: any } | undefined;
}

/**
 * Describes where the config file that kicked off the build came from.
 * This is effectively a pointer to the source where buildConfig came from.
 */
export interface SlsaProvenanceZeroTwo_SlsaConfigSource {
  uri: string;
  digest: { [key: string]: string };
  entryPoint: string;
}

export interface SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry {
  key: string;
  value: string;
}

/** Other properties of the build. */
export interface SlsaProvenanceZeroTwo_SlsaMetadata {
  buildInvocationId: string;
  buildStartedOn: Date | undefined;
  buildFinishedOn: Date | undefined;
  completeness: SlsaProvenanceZeroTwo_SlsaCompleteness | undefined;
  reproducible: boolean;
}

/**
 * Indicates that the builder claims certain fields in this message to be
 * complete.
 */
export interface SlsaProvenanceZeroTwo_SlsaCompleteness {
  parameters: boolean;
  environment: boolean;
  materials: boolean;
}

function createBaseSlsaProvenanceZeroTwo(): SlsaProvenanceZeroTwo {
  return {
    builder: undefined,
    buildType: "",
    invocation: undefined,
    buildConfig: undefined,
    metadata: undefined,
    materials: [],
  };
}

export const SlsaProvenanceZeroTwo: MessageFns<SlsaProvenanceZeroTwo> = {
  encode(message: SlsaProvenanceZeroTwo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.builder !== undefined) {
      SlsaProvenanceZeroTwo_SlsaBuilder.encode(message.builder, writer.uint32(10).fork()).join();
    }
    if (message.buildType !== "") {
      writer.uint32(18).string(message.buildType);
    }
    if (message.invocation !== undefined) {
      SlsaProvenanceZeroTwo_SlsaInvocation.encode(message.invocation, writer.uint32(26).fork()).join();
    }
    if (message.buildConfig !== undefined) {
      Struct.encode(Struct.wrap(message.buildConfig), writer.uint32(34).fork()).join();
    }
    if (message.metadata !== undefined) {
      SlsaProvenanceZeroTwo_SlsaMetadata.encode(message.metadata, writer.uint32(42).fork()).join();
    }
    for (const v of message.materials) {
      SlsaProvenanceZeroTwo_SlsaMaterial.encode(v!, writer.uint32(50).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SlsaProvenanceZeroTwo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSlsaProvenanceZeroTwo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.builder = SlsaProvenanceZeroTwo_SlsaBuilder.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.buildType = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.invocation = SlsaProvenanceZeroTwo_SlsaInvocation.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.buildConfig = Struct.unwrap(Struct.decode(reader, reader.uint32()));
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.metadata = SlsaProvenanceZeroTwo_SlsaMetadata.decode(reader, reader.uint32());
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.materials.push(SlsaProvenanceZeroTwo_SlsaMaterial.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SlsaProvenanceZeroTwo {
    return {
      builder: isSet(object.builder) ? SlsaProvenanceZeroTwo_SlsaBuilder.fromJSON(object.builder) : undefined,
      buildType: isSet(object.buildType) ? globalThis.String(object.buildType) : "",
      invocation: isSet(object.invocation)
        ? SlsaProvenanceZeroTwo_SlsaInvocation.fromJSON(object.invocation)
        : undefined,
      buildConfig: isObject(object.buildConfig) ? object.buildConfig : undefined,
      metadata: isSet(object.metadata) ? SlsaProvenanceZeroTwo_SlsaMetadata.fromJSON(object.metadata) : undefined,
      materials: globalThis.Array.isArray(object?.materials)
        ? object.materials.map((e: any) => SlsaProvenanceZeroTwo_SlsaMaterial.fromJSON(e))
        : [],
    };
  },

  toJSON(message: SlsaProvenanceZeroTwo): unknown {
    const obj: any = {};
    if (message.builder !== undefined) {
      obj.builder = SlsaProvenanceZeroTwo_SlsaBuilder.toJSON(message.builder);
    }
    if (message.buildType !== "") {
      obj.buildType = message.buildType;
    }
    if (message.invocation !== undefined) {
      obj.invocation = SlsaProvenanceZeroTwo_SlsaInvocation.toJSON(message.invocation);
    }
    if (message.buildConfig !== undefined) {
      obj.buildConfig = message.buildConfig;
    }
    if (message.metadata !== undefined) {
      obj.metadata = SlsaProvenanceZeroTwo_SlsaMetadata.toJSON(message.metadata);
    }
    if (message.materials?.length) {
      obj.materials = message.materials.map((e) => SlsaProvenanceZeroTwo_SlsaMaterial.toJSON(e));
    }
    return obj;
  },

  create(base?: DeepPartial<SlsaProvenanceZeroTwo>): SlsaProvenanceZeroTwo {
    return SlsaProvenanceZeroTwo.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SlsaProvenanceZeroTwo>): SlsaProvenanceZeroTwo {
    const message = createBaseSlsaProvenanceZeroTwo();
    message.builder = (object.builder !== undefined && object.builder !== null)
      ? SlsaProvenanceZeroTwo_SlsaBuilder.fromPartial(object.builder)
      : undefined;
    message.buildType = object.buildType ?? "";
    message.invocation = (object.invocation !== undefined && object.invocation !== null)
      ? SlsaProvenanceZeroTwo_SlsaInvocation.fromPartial(object.invocation)
      : undefined;
    message.buildConfig = object.buildConfig ?? undefined;
    message.metadata = (object.metadata !== undefined && object.metadata !== null)
      ? SlsaProvenanceZeroTwo_SlsaMetadata.fromPartial(object.metadata)
      : undefined;
    message.materials = object.materials?.map((e) => SlsaProvenanceZeroTwo_SlsaMaterial.fromPartial(e)) || [];
    return message;
  },
};

function createBaseSlsaProvenanceZeroTwo_SlsaBuilder(): SlsaProvenanceZeroTwo_SlsaBuilder {
  return { id: "" };
}

export const SlsaProvenanceZeroTwo_SlsaBuilder: MessageFns<SlsaProvenanceZeroTwo_SlsaBuilder> = {
  encode(message: SlsaProvenanceZeroTwo_SlsaBuilder, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SlsaProvenanceZeroTwo_SlsaBuilder {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSlsaProvenanceZeroTwo_SlsaBuilder();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.id = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SlsaProvenanceZeroTwo_SlsaBuilder {
    return { id: isSet(object.id) ? globalThis.String(object.id) : "" };
  },

  toJSON(message: SlsaProvenanceZeroTwo_SlsaBuilder): unknown {
    const obj: any = {};
    if (message.id !== "") {
      obj.id = message.id;
    }
    return obj;
  },

  create(base?: DeepPartial<SlsaProvenanceZeroTwo_SlsaBuilder>): SlsaProvenanceZeroTwo_SlsaBuilder {
    return SlsaProvenanceZeroTwo_SlsaBuilder.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SlsaProvenanceZeroTwo_SlsaBuilder>): SlsaProvenanceZeroTwo_SlsaBuilder {
    const message = createBaseSlsaProvenanceZeroTwo_SlsaBuilder();
    message.id = object.id ?? "";
    return message;
  },
};

function createBaseSlsaProvenanceZeroTwo_SlsaMaterial(): SlsaProvenanceZeroTwo_SlsaMaterial {
  return { uri: "", digest: {} };
}

export const SlsaProvenanceZeroTwo_SlsaMaterial: MessageFns<SlsaProvenanceZeroTwo_SlsaMaterial> = {
  encode(message: SlsaProvenanceZeroTwo_SlsaMaterial, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.uri !== "") {
      writer.uint32(10).string(message.uri);
    }
    Object.entries(message.digest).forEach(([key, value]) => {
      SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry.encode({ key: key as any, value }, writer.uint32(18).fork())
        .join();
    });
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SlsaProvenanceZeroTwo_SlsaMaterial {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSlsaProvenanceZeroTwo_SlsaMaterial();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.uri = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          const entry2 = SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry.decode(reader, reader.uint32());
          if (entry2.value !== undefined) {
            message.digest[entry2.key] = entry2.value;
          }
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SlsaProvenanceZeroTwo_SlsaMaterial {
    return {
      uri: isSet(object.uri) ? globalThis.String(object.uri) : "",
      digest: isObject(object.digest)
        ? Object.entries(object.digest).reduce<{ [key: string]: string }>((acc, [key, value]) => {
          acc[key] = String(value);
          return acc;
        }, {})
        : {},
    };
  },

  toJSON(message: SlsaProvenanceZeroTwo_SlsaMaterial): unknown {
    const obj: any = {};
    if (message.uri !== "") {
      obj.uri = message.uri;
    }
    if (message.digest) {
      const entries = Object.entries(message.digest);
      if (entries.length > 0) {
        obj.digest = {};
        entries.forEach(([k, v]) => {
          obj.digest[k] = v;
        });
      }
    }
    return obj;
  },

  create(base?: DeepPartial<SlsaProvenanceZeroTwo_SlsaMaterial>): SlsaProvenanceZeroTwo_SlsaMaterial {
    return SlsaProvenanceZeroTwo_SlsaMaterial.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SlsaProvenanceZeroTwo_SlsaMaterial>): SlsaProvenanceZeroTwo_SlsaMaterial {
    const message = createBaseSlsaProvenanceZeroTwo_SlsaMaterial();
    message.uri = object.uri ?? "";
    message.digest = Object.entries(object.digest ?? {}).reduce<{ [key: string]: string }>((acc, [key, value]) => {
      if (value !== undefined) {
        acc[key] = globalThis.String(value);
      }
      return acc;
    }, {});
    return message;
  },
};

function createBaseSlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry(): SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry {
  return { key: "", value: "" };
}

export const SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry: MessageFns<
  SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry
> = {
  encode(
    message: SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.key !== "") {
      writer.uint32(10).string(message.key);
    }
    if (message.value !== "") {
      writer.uint32(18).string(message.value);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.key = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.value = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry {
    return {
      key: isSet(object.key) ? globalThis.String(object.key) : "",
      value: isSet(object.value) ? globalThis.String(object.value) : "",
    };
  },

  toJSON(message: SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry): unknown {
    const obj: any = {};
    if (message.key !== "") {
      obj.key = message.key;
    }
    if (message.value !== "") {
      obj.value = message.value;
    }
    return obj;
  },

  create(
    base?: DeepPartial<SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry>,
  ): SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry {
    return SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry>,
  ): SlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry {
    const message = createBaseSlsaProvenanceZeroTwo_SlsaMaterial_DigestEntry();
    message.key = object.key ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseSlsaProvenanceZeroTwo_SlsaInvocation(): SlsaProvenanceZeroTwo_SlsaInvocation {
  return { configSource: undefined, parameters: undefined, environment: undefined };
}

export const SlsaProvenanceZeroTwo_SlsaInvocation: MessageFns<SlsaProvenanceZeroTwo_SlsaInvocation> = {
  encode(message: SlsaProvenanceZeroTwo_SlsaInvocation, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.configSource !== undefined) {
      SlsaProvenanceZeroTwo_SlsaConfigSource.encode(message.configSource, writer.uint32(10).fork()).join();
    }
    if (message.parameters !== undefined) {
      Struct.encode(Struct.wrap(message.parameters), writer.uint32(18).fork()).join();
    }
    if (message.environment !== undefined) {
      Struct.encode(Struct.wrap(message.environment), writer.uint32(26).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SlsaProvenanceZeroTwo_SlsaInvocation {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSlsaProvenanceZeroTwo_SlsaInvocation();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.configSource = SlsaProvenanceZeroTwo_SlsaConfigSource.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.parameters = Struct.unwrap(Struct.decode(reader, reader.uint32()));
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.environment = Struct.unwrap(Struct.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SlsaProvenanceZeroTwo_SlsaInvocation {
    return {
      configSource: isSet(object.configSource)
        ? SlsaProvenanceZeroTwo_SlsaConfigSource.fromJSON(object.configSource)
        : undefined,
      parameters: isObject(object.parameters) ? object.parameters : undefined,
      environment: isObject(object.environment) ? object.environment : undefined,
    };
  },

  toJSON(message: SlsaProvenanceZeroTwo_SlsaInvocation): unknown {
    const obj: any = {};
    if (message.configSource !== undefined) {
      obj.configSource = SlsaProvenanceZeroTwo_SlsaConfigSource.toJSON(message.configSource);
    }
    if (message.parameters !== undefined) {
      obj.parameters = message.parameters;
    }
    if (message.environment !== undefined) {
      obj.environment = message.environment;
    }
    return obj;
  },

  create(base?: DeepPartial<SlsaProvenanceZeroTwo_SlsaInvocation>): SlsaProvenanceZeroTwo_SlsaInvocation {
    return SlsaProvenanceZeroTwo_SlsaInvocation.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SlsaProvenanceZeroTwo_SlsaInvocation>): SlsaProvenanceZeroTwo_SlsaInvocation {
    const message = createBaseSlsaProvenanceZeroTwo_SlsaInvocation();
    message.configSource = (object.configSource !== undefined && object.configSource !== null)
      ? SlsaProvenanceZeroTwo_SlsaConfigSource.fromPartial(object.configSource)
      : undefined;
    message.parameters = object.parameters ?? undefined;
    message.environment = object.environment ?? undefined;
    return message;
  },
};

function createBaseSlsaProvenanceZeroTwo_SlsaConfigSource(): SlsaProvenanceZeroTwo_SlsaConfigSource {
  return { uri: "", digest: {}, entryPoint: "" };
}

export const SlsaProvenanceZeroTwo_SlsaConfigSource: MessageFns<SlsaProvenanceZeroTwo_SlsaConfigSource> = {
  encode(message: SlsaProvenanceZeroTwo_SlsaConfigSource, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.uri !== "") {
      writer.uint32(10).string(message.uri);
    }
    Object.entries(message.digest).forEach(([key, value]) => {
      SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry.encode({ key: key as any, value }, writer.uint32(18).fork())
        .join();
    });
    if (message.entryPoint !== "") {
      writer.uint32(26).string(message.entryPoint);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SlsaProvenanceZeroTwo_SlsaConfigSource {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSlsaProvenanceZeroTwo_SlsaConfigSource();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.uri = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          const entry2 = SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry.decode(reader, reader.uint32());
          if (entry2.value !== undefined) {
            message.digest[entry2.key] = entry2.value;
          }
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.entryPoint = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SlsaProvenanceZeroTwo_SlsaConfigSource {
    return {
      uri: isSet(object.uri) ? globalThis.String(object.uri) : "",
      digest: isObject(object.digest)
        ? Object.entries(object.digest).reduce<{ [key: string]: string }>((acc, [key, value]) => {
          acc[key] = String(value);
          return acc;
        }, {})
        : {},
      entryPoint: isSet(object.entryPoint) ? globalThis.String(object.entryPoint) : "",
    };
  },

  toJSON(message: SlsaProvenanceZeroTwo_SlsaConfigSource): unknown {
    const obj: any = {};
    if (message.uri !== "") {
      obj.uri = message.uri;
    }
    if (message.digest) {
      const entries = Object.entries(message.digest);
      if (entries.length > 0) {
        obj.digest = {};
        entries.forEach(([k, v]) => {
          obj.digest[k] = v;
        });
      }
    }
    if (message.entryPoint !== "") {
      obj.entryPoint = message.entryPoint;
    }
    return obj;
  },

  create(base?: DeepPartial<SlsaProvenanceZeroTwo_SlsaConfigSource>): SlsaProvenanceZeroTwo_SlsaConfigSource {
    return SlsaProvenanceZeroTwo_SlsaConfigSource.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SlsaProvenanceZeroTwo_SlsaConfigSource>): SlsaProvenanceZeroTwo_SlsaConfigSource {
    const message = createBaseSlsaProvenanceZeroTwo_SlsaConfigSource();
    message.uri = object.uri ?? "";
    message.digest = Object.entries(object.digest ?? {}).reduce<{ [key: string]: string }>((acc, [key, value]) => {
      if (value !== undefined) {
        acc[key] = globalThis.String(value);
      }
      return acc;
    }, {});
    message.entryPoint = object.entryPoint ?? "";
    return message;
  },
};

function createBaseSlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry(): SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry {
  return { key: "", value: "" };
}

export const SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry: MessageFns<
  SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry
> = {
  encode(
    message: SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.key !== "") {
      writer.uint32(10).string(message.key);
    }
    if (message.value !== "") {
      writer.uint32(18).string(message.value);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.key = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.value = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry {
    return {
      key: isSet(object.key) ? globalThis.String(object.key) : "",
      value: isSet(object.value) ? globalThis.String(object.value) : "",
    };
  },

  toJSON(message: SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry): unknown {
    const obj: any = {};
    if (message.key !== "") {
      obj.key = message.key;
    }
    if (message.value !== "") {
      obj.value = message.value;
    }
    return obj;
  },

  create(
    base?: DeepPartial<SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry>,
  ): SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry {
    return SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry>,
  ): SlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry {
    const message = createBaseSlsaProvenanceZeroTwo_SlsaConfigSource_DigestEntry();
    message.key = object.key ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseSlsaProvenanceZeroTwo_SlsaMetadata(): SlsaProvenanceZeroTwo_SlsaMetadata {
  return {
    buildInvocationId: "",
    buildStartedOn: undefined,
    buildFinishedOn: undefined,
    completeness: undefined,
    reproducible: false,
  };
}

export const SlsaProvenanceZeroTwo_SlsaMetadata: MessageFns<SlsaProvenanceZeroTwo_SlsaMetadata> = {
  encode(message: SlsaProvenanceZeroTwo_SlsaMetadata, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.buildInvocationId !== "") {
      writer.uint32(10).string(message.buildInvocationId);
    }
    if (message.buildStartedOn !== undefined) {
      Timestamp.encode(toTimestamp(message.buildStartedOn), writer.uint32(18).fork()).join();
    }
    if (message.buildFinishedOn !== undefined) {
      Timestamp.encode(toTimestamp(message.buildFinishedOn), writer.uint32(26).fork()).join();
    }
    if (message.completeness !== undefined) {
      SlsaProvenanceZeroTwo_SlsaCompleteness.encode(message.completeness, writer.uint32(34).fork()).join();
    }
    if (message.reproducible !== false) {
      writer.uint32(40).bool(message.reproducible);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SlsaProvenanceZeroTwo_SlsaMetadata {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSlsaProvenanceZeroTwo_SlsaMetadata();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.buildInvocationId = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.buildStartedOn = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.buildFinishedOn = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.completeness = SlsaProvenanceZeroTwo_SlsaCompleteness.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.reproducible = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SlsaProvenanceZeroTwo_SlsaMetadata {
    return {
      buildInvocationId: isSet(object.buildInvocationId) ? globalThis.String(object.buildInvocationId) : "",
      buildStartedOn: isSet(object.buildStartedOn) ? fromJsonTimestamp(object.buildStartedOn) : undefined,
      buildFinishedOn: isSet(object.buildFinishedOn) ? fromJsonTimestamp(object.buildFinishedOn) : undefined,
      completeness: isSet(object.completeness)
        ? SlsaProvenanceZeroTwo_SlsaCompleteness.fromJSON(object.completeness)
        : undefined,
      reproducible: isSet(object.reproducible) ? globalThis.Boolean(object.reproducible) : false,
    };
  },

  toJSON(message: SlsaProvenanceZeroTwo_SlsaMetadata): unknown {
    const obj: any = {};
    if (message.buildInvocationId !== "") {
      obj.buildInvocationId = message.buildInvocationId;
    }
    if (message.buildStartedOn !== undefined) {
      obj.buildStartedOn = message.buildStartedOn.toISOString();
    }
    if (message.buildFinishedOn !== undefined) {
      obj.buildFinishedOn = message.buildFinishedOn.toISOString();
    }
    if (message.completeness !== undefined) {
      obj.completeness = SlsaProvenanceZeroTwo_SlsaCompleteness.toJSON(message.completeness);
    }
    if (message.reproducible !== false) {
      obj.reproducible = message.reproducible;
    }
    return obj;
  },

  create(base?: DeepPartial<SlsaProvenanceZeroTwo_SlsaMetadata>): SlsaProvenanceZeroTwo_SlsaMetadata {
    return SlsaProvenanceZeroTwo_SlsaMetadata.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SlsaProvenanceZeroTwo_SlsaMetadata>): SlsaProvenanceZeroTwo_SlsaMetadata {
    const message = createBaseSlsaProvenanceZeroTwo_SlsaMetadata();
    message.buildInvocationId = object.buildInvocationId ?? "";
    message.buildStartedOn = object.buildStartedOn ?? undefined;
    message.buildFinishedOn = object.buildFinishedOn ?? undefined;
    message.completeness = (object.completeness !== undefined && object.completeness !== null)
      ? SlsaProvenanceZeroTwo_SlsaCompleteness.fromPartial(object.completeness)
      : undefined;
    message.reproducible = object.reproducible ?? false;
    return message;
  },
};

function createBaseSlsaProvenanceZeroTwo_SlsaCompleteness(): SlsaProvenanceZeroTwo_SlsaCompleteness {
  return { parameters: false, environment: false, materials: false };
}

export const SlsaProvenanceZeroTwo_SlsaCompleteness: MessageFns<SlsaProvenanceZeroTwo_SlsaCompleteness> = {
  encode(message: SlsaProvenanceZeroTwo_SlsaCompleteness, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parameters !== false) {
      writer.uint32(8).bool(message.parameters);
    }
    if (message.environment !== false) {
      writer.uint32(16).bool(message.environment);
    }
    if (message.materials !== false) {
      writer.uint32(24).bool(message.materials);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SlsaProvenanceZeroTwo_SlsaCompleteness {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSlsaProvenanceZeroTwo_SlsaCompleteness();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.parameters = reader.bool();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.environment = reader.bool();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.materials = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SlsaProvenanceZeroTwo_SlsaCompleteness {
    return {
      parameters: isSet(object.parameters) ? globalThis.Boolean(object.parameters) : false,
      environment: isSet(object.environment) ? globalThis.Boolean(object.environment) : false,
      materials: isSet(object.materials) ? globalThis.Boolean(object.materials) : false,
    };
  },

  toJSON(message: SlsaProvenanceZeroTwo_SlsaCompleteness): unknown {
    const obj: any = {};
    if (message.parameters !== false) {
      obj.parameters = message.parameters;
    }
    if (message.environment !== false) {
      obj.environment = message.environment;
    }
    if (message.materials !== false) {
      obj.materials = message.materials;
    }
    return obj;
  },

  create(base?: DeepPartial<SlsaProvenanceZeroTwo_SlsaCompleteness>): SlsaProvenanceZeroTwo_SlsaCompleteness {
    return SlsaProvenanceZeroTwo_SlsaCompleteness.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SlsaProvenanceZeroTwo_SlsaCompleteness>): SlsaProvenanceZeroTwo_SlsaCompleteness {
    const message = createBaseSlsaProvenanceZeroTwo_SlsaCompleteness();
    message.parameters = object.parameters ?? false;
    message.environment = object.environment ?? false;
    message.materials = object.materials ?? false;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function toTimestamp(date: Date): Timestamp {
  const seconds = numberToLong(Math.trunc(date.getTime() / 1_000));
  const nanos = (date.getTime() % 1_000) * 1_000_000;
  return { seconds, nanos };
}

function fromTimestamp(t: Timestamp): Date {
  let millis = (t.seconds.toNumber() || 0) * 1_000;
  millis += (t.nanos || 0) / 1_000_000;
  return new globalThis.Date(millis);
}

function fromJsonTimestamp(o: any): Date {
  if (o instanceof globalThis.Date) {
    return o;
  } else if (typeof o === "string") {
    return new globalThis.Date(o);
  } else {
    return fromTimestamp(Timestamp.fromJSON(o));
  }
}

function numberToLong(number: number) {
  return Long.fromNumber(number);
}

function isObject(value: any): boolean {
  return typeof value === "object" && value !== null;
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
