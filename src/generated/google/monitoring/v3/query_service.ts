// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/monitoring/v3/query_service.proto

/* eslint-disable */
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { QueryTimeSeriesRequest, QueryTimeSeriesResponse } from "./metric_service.js";

export const protobufPackage = "google.monitoring.v3";

/**
 * The QueryService API is used to manage time series data in Cloud
 * Monitoring. Time series data is a collection of data points that describes
 * the time-varying values of a metric.
 */
export type QueryServiceDefinition = typeof QueryServiceDefinition;
export const QueryServiceDefinition = {
  name: "QueryService",
  fullName: "google.monitoring.v3.QueryService",
  methods: {
    /** Queries time series using Monitoring Query Language. */
    queryTimeSeries: {
      name: "QueryTimeSeries",
      requestType: QueryTimeSeriesRequest,
      requestStream: false,
      responseType: QueryTimeSeriesResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            Buffer.from([
              43,
              58,
              1,
              42,
              34,
              38,
              47,
              118,
              51,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              125,
              47,
              116,
              105,
              109,
              101,
              83,
              101,
              114,
              105,
              101,
              115,
              58,
              113,
              117,
              101,
              114,
              121,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface QueryServiceImplementation<CallContextExt = {}> {
  /** Queries time series using Monitoring Query Language. */
  queryTimeSeries(
    request: QueryTimeSeriesRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<QueryTimeSeriesResponse>>;
}

export interface QueryServiceClient<CallOptionsExt = {}> {
  /** Queries time series using Monitoring Query Language. */
  queryTimeSeries(
    request: DeepPartial<QueryTimeSeriesRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<QueryTimeSeriesResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;
