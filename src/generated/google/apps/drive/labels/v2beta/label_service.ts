// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/apps/drive/labels/v2beta/label_service.proto

/* eslint-disable */
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { Empty } from "../../../../protobuf/empty.js";
import { Label } from "./label.js";
import { LabelLimits } from "./label_limits.js";
import { LabelPermission } from "./label_permission.js";
import {
  BatchDeleteLabelPermissionsRequest,
  BatchUpdateLabelPermissionsRequest,
  BatchUpdateLabelPermissionsResponse,
  CreateLabelPermissionRequest,
  CreateLabelRequest,
  DeleteLabelPermissionRequest,
  DeleteLabelRequest,
  DeltaUpdateLabelRequest,
  DeltaUpdateLabelResponse,
  DisableLabelRequest,
  EnableLabelRequest,
  GetLabelLimitsRequest,
  GetLabelRequest,
  GetUserCapabilitiesRequest,
  ListLabelLocksRequest,
  ListLabelLocksResponse,
  ListLabelPermissionsRequest,
  ListLabelPermissionsResponse,
  ListLabelsRequest,
  ListLabelsResponse,
  PublishLabelRequest,
  UpdateLabelCopyModeRequest,
  UpdateLabelPermissionRequest,
} from "./requests.js";
import { UserCapabilities } from "./user_capabilities.js";

export const protobufPackage = "google.apps.drive.labels.v2beta";

/**
 * Manage metadata taxonomies based on Labels and Fields that may be used within
 * Google Drive to organize and find files using custom metadata.
 */
export type LabelServiceDefinition = typeof LabelServiceDefinition;
export const LabelServiceDefinition = {
  name: "LabelService",
  fullName: "google.apps.drive.labels.v2beta.LabelService",
  methods: {
    /** Gets the user capabilities. */
    getUserCapabilities: {
      name: "GetUserCapabilities",
      requestType: GetUserCapabilitiesRequest,
      requestStream: false,
      responseType: UserCapabilities,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              37,
              18,
              35,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              117,
              115,
              101,
              114,
              115,
              47,
              42,
              47,
              99,
              97,
              112,
              97,
              98,
              105,
              108,
              105,
              116,
              105,
              101,
              115,
              125,
            ]),
          ],
        },
      },
    },
    /** List labels. */
    listLabels: {
      name: "ListLabels",
      requestType: ListLabelsRequest,
      requestStream: false,
      responseType: ListLabelsResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [Buffer.from([16, 18, 14, 47, 118, 50, 98, 101, 116, 97, 47, 108, 97, 98, 101, 108, 115])],
        },
      },
    },
    /**
     * Get a label by its resource name.
     * Resource name may be any of:
     *
     * * `labels/{id}` - See `labels/{id}@latest`
     * * `labels/{id}@latest` - Gets the latest revision of the label.
     * * `labels/{id}@published` - Gets the current published revision of the
     *   label.
     * * `labels/{id}@{revision_id}` - Gets the label at the specified revision
     *   ID.
     */
    getLabel: {
      name: "GetLabel",
      requestType: GetLabelRequest,
      requestStream: false,
      responseType: Label,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              25,
              18,
              23,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /**
     * Get the constraints on the structure of a Label; such as, the maximum
     * number of Fields allowed and maximum length of the label title.
     */
    getLabelLimits: {
      name: "GetLabelLimits",
      requestType: GetLabelLimitsRequest,
      requestStream: false,
      responseType: LabelLimits,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            Buffer.from([
              22,
              18,
              20,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              108,
              105,
              109,
              105,
              116,
              115,
              47,
              108,
              97,
              98,
              101,
              108,
            ]),
          ],
        },
      },
    },
    /** Creates a new Label. */
    createLabel: {
      name: "CreateLabel",
      requestType: CreateLabelRequest,
      requestStream: false,
      responseType: Label,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([5, 108, 97, 98, 101, 108])],
          578365826: [
            Buffer.from([
              23,
              58,
              5,
              108,
              97,
              98,
              101,
              108,
              34,
              14,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              108,
              97,
              98,
              101,
              108,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Updates a single Label by applying a set of update requests resulting in a
     * new draft revision. The batch update is all-or-nothing: If any of the
     * update requests are invalid, no changes are applied. The resulting draft
     * revision must be published before the changes may be used with Drive Items.
     */
    deltaUpdateLabel: {
      name: "DeltaUpdateLabel",
      requestType: DeltaUpdateLabelRequest,
      requestStream: false,
      responseType: DeltaUpdateLabelResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              34,
              58,
              1,
              42,
              34,
              29,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              58,
              100,
              101,
              108,
              116,
              97,
            ]),
          ],
        },
      },
    },
    /**
     * Updates a Label's `CopyMode`. Changes to this policy are not revisioned, do
     * not require publishing, and take effect immediately.
     */
    updateLabelCopyMode: {
      name: "UpdateLabelCopyMode",
      requestType: UpdateLabelCopyModeRequest,
      requestStream: false,
      responseType: Label,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              48,
              58,
              1,
              42,
              34,
              43,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              58,
              117,
              112,
              100,
              97,
              116,
              101,
              76,
              97,
              98,
              101,
              108,
              67,
              111,
              112,
              121,
              77,
              111,
              100,
              101,
            ]),
          ],
        },
      },
    },
    /**
     * Publish all draft changes to the Label. Once published, the Label may not
     * return to its draft state. See
     * `google.apps.drive.labels.v2.Lifecycle` for more information.
     *
     * Publishing a Label will result in a new published revision. All previous
     * draft revisions will be deleted. Previous published revisions will be kept
     * but are subject to automated deletion as needed.
     *
     * Once published, some changes are no longer permitted. Generally, any change
     * that would invalidate or cause new restrictions on existing metadata
     * related to the Label will be rejected. For example, the following changes
     * to a Label will be rejected after the Label is published:
     * * The label cannot be directly deleted. It must be disabled first, then
     *   deleted.
     * * Field.FieldType cannot be changed.
     * * Changes to Field validation options cannot reject something that was
     *   previously accepted.
     * * Reducing the max entries.
     */
    publishLabel: {
      name: "PublishLabel",
      requestType: PublishLabelRequest,
      requestStream: false,
      responseType: Label,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              36,
              58,
              1,
              42,
              34,
              31,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              58,
              112,
              117,
              98,
              108,
              105,
              115,
              104,
            ]),
          ],
        },
      },
    },
    /**
     * Disable a published Label.
     * Disabling a Label will result in a new disabled published revision based on
     * the current published revision. If there is a draft revision, a new
     * disabled draft revision will be created based on the latest draft revision.
     * Older draft revisions will be deleted.
     *
     * Once disabled, a label may be deleted with `DeleteLabel`.
     */
    disableLabel: {
      name: "DisableLabel",
      requestType: DisableLabelRequest,
      requestStream: false,
      responseType: Label,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              36,
              58,
              1,
              42,
              34,
              31,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              58,
              100,
              105,
              115,
              97,
              98,
              108,
              101,
            ]),
          ],
        },
      },
    },
    /**
     * Enable a disabled Label and restore it to its published state.
     * This will result in a new published revision based on the current disabled
     * published revision. If there is an existing disabled draft revision, a new
     * revision will be created based on that draft and will be enabled.
     */
    enableLabel: {
      name: "EnableLabel",
      requestType: EnableLabelRequest,
      requestStream: false,
      responseType: Label,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              35,
              58,
              1,
              42,
              34,
              30,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              58,
              101,
              110,
              97,
              98,
              108,
              101,
            ]),
          ],
        },
      },
    },
    /**
     * Permanently deletes a Label and related metadata on Drive Items.
     *
     * Once deleted, the Label and related Drive item metadata will be deleted.
     * Only draft Labels, and disabled Labels may be deleted.
     */
    deleteLabel: {
      name: "DeleteLabel",
      requestType: DeleteLabelRequest,
      requestStream: false,
      responseType: Empty,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              25,
              42,
              23,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Lists a Label's permissions. */
    listLabelPermissions: {
      name: "ListLabelPermissions",
      requestType: ListLabelPermissionsRequest,
      requestStream: false,
      responseType: ListLabelPermissionsResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              92,
              90,
              51,
              18,
              49,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              47,
              114,
              101,
              118,
              105,
              115,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              18,
              37,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Updates a Label's permissions. If a permission for the indicated principal
     * doesn't exist, a new Label Permission is created, otherwise the existing
     * permission is updated. Permissions affect the Label resource as a whole,
     * are not revisioned, and do not require publishing.
     */
    createLabelPermission: {
      name: "CreateLabelPermission",
      requestType: CreateLabelPermissionRequest,
      requestStream: false,
      responseType: LabelPermission,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              23,
              112,
              97,
              114,
              101,
              110,
              116,
              44,
              108,
              97,
              98,
              101,
              108,
              95,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
            ]),
          ],
          578365826: [
            Buffer.from([
              128,
              1,
              58,
              16,
              108,
              97,
              98,
              101,
              108,
              95,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              90,
              69,
              58,
              16,
              108,
              97,
              98,
              101,
              108,
              95,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              34,
              49,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              47,
              114,
              101,
              118,
              105,
              115,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              34,
              37,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Updates a Label's permissions. If a permission for the indicated principal
     * doesn't exist, a new Label Permission is created, otherwise the existing
     * permission is updated. Permissions affect the Label resource as a whole,
     * are not revisioned, and do not require publishing.
     */
    updateLabelPermission: {
      name: "UpdateLabelPermission",
      requestType: UpdateLabelPermissionRequest,
      requestStream: false,
      responseType: LabelPermission,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              128,
              1,
              58,
              16,
              108,
              97,
              98,
              101,
              108,
              95,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              90,
              69,
              58,
              16,
              108,
              97,
              98,
              101,
              108,
              95,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              50,
              49,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              47,
              114,
              101,
              118,
              105,
              115,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              50,
              37,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Deletes a Label's permission. Permissions affect the Label resource as a
     * whole, are not revisioned, and do not require publishing.
     */
    deleteLabelPermission: {
      name: "DeleteLabelPermission",
      requestType: DeleteLabelPermissionRequest,
      requestStream: false,
      responseType: Empty,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              92,
              90,
              51,
              42,
              49,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              47,
              114,
              101,
              118,
              105,
              115,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              42,
              37,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /**
     * Updates Label permissions. If a permission for the
     * indicated principal doesn't exist, a new Label Permission is created,
     * otherwise the existing permission is updated. Permissions affect the Label
     * resource as a whole, are not revisioned, and do not require publishing.
     */
    batchUpdateLabelPermissions: {
      name: "BatchUpdateLabelPermissions",
      requestType: BatchUpdateLabelPermissionsRequest,
      requestStream: false,
      responseType: BatchUpdateLabelPermissionsResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              122,
              58,
              1,
              42,
              90,
              66,
              58,
              1,
              42,
              34,
              61,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              47,
              114,
              101,
              118,
              105,
              115,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              58,
              98,
              97,
              116,
              99,
              104,
              85,
              112,
              100,
              97,
              116,
              101,
              34,
              49,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              58,
              98,
              97,
              116,
              99,
              104,
              85,
              112,
              100,
              97,
              116,
              101,
            ]),
          ],
        },
      },
    },
    /**
     * Deletes Label permissions. Permissions affect the Label resource as a
     * whole, are not revisioned, and do not require publishing.
     */
    batchDeleteLabelPermissions: {
      name: "BatchDeleteLabelPermissions",
      requestType: BatchDeleteLabelPermissionsRequest,
      requestStream: false,
      responseType: Empty,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              122,
              58,
              1,
              42,
              90,
              66,
              58,
              1,
              42,
              34,
              61,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              47,
              114,
              101,
              118,
              105,
              115,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              58,
              98,
              97,
              116,
              99,
              104,
              68,
              101,
              108,
              101,
              116,
              101,
              34,
              49,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              58,
              98,
              97,
              116,
              99,
              104,
              68,
              101,
              108,
              101,
              116,
              101,
            ]),
          ],
        },
      },
    },
    /** Lists the LabelLocks on a Label. */
    listLabelLocks: {
      name: "ListLabelLocks",
      requestType: ListLabelLocksRequest,
      requestStream: false,
      responseType: ListLabelLocksResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              80,
              90,
              45,
              18,
              43,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              47,
              114,
              101,
              118,
              105,
              115,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              108,
              111,
              99,
              107,
              115,
              18,
              31,
              47,
              118,
              50,
              98,
              101,
              116,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              108,
              97,
              98,
              101,
              108,
              115,
              47,
              42,
              125,
              47,
              108,
              111,
              99,
              107,
              115,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface LabelServiceImplementation<CallContextExt = {}> {
  /** Gets the user capabilities. */
  getUserCapabilities(
    request: GetUserCapabilitiesRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<UserCapabilities>>;
  /** List labels. */
  listLabels(
    request: ListLabelsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListLabelsResponse>>;
  /**
   * Get a label by its resource name.
   * Resource name may be any of:
   *
   * * `labels/{id}` - See `labels/{id}@latest`
   * * `labels/{id}@latest` - Gets the latest revision of the label.
   * * `labels/{id}@published` - Gets the current published revision of the
   *   label.
   * * `labels/{id}@{revision_id}` - Gets the label at the specified revision
   *   ID.
   */
  getLabel(request: GetLabelRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Label>>;
  /**
   * Get the constraints on the structure of a Label; such as, the maximum
   * number of Fields allowed and maximum length of the label title.
   */
  getLabelLimits(
    request: GetLabelLimitsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<LabelLimits>>;
  /** Creates a new Label. */
  createLabel(request: CreateLabelRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Label>>;
  /**
   * Updates a single Label by applying a set of update requests resulting in a
   * new draft revision. The batch update is all-or-nothing: If any of the
   * update requests are invalid, no changes are applied. The resulting draft
   * revision must be published before the changes may be used with Drive Items.
   */
  deltaUpdateLabel(
    request: DeltaUpdateLabelRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<DeltaUpdateLabelResponse>>;
  /**
   * Updates a Label's `CopyMode`. Changes to this policy are not revisioned, do
   * not require publishing, and take effect immediately.
   */
  updateLabelCopyMode(
    request: UpdateLabelCopyModeRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Label>>;
  /**
   * Publish all draft changes to the Label. Once published, the Label may not
   * return to its draft state. See
   * `google.apps.drive.labels.v2.Lifecycle` for more information.
   *
   * Publishing a Label will result in a new published revision. All previous
   * draft revisions will be deleted. Previous published revisions will be kept
   * but are subject to automated deletion as needed.
   *
   * Once published, some changes are no longer permitted. Generally, any change
   * that would invalidate or cause new restrictions on existing metadata
   * related to the Label will be rejected. For example, the following changes
   * to a Label will be rejected after the Label is published:
   * * The label cannot be directly deleted. It must be disabled first, then
   *   deleted.
   * * Field.FieldType cannot be changed.
   * * Changes to Field validation options cannot reject something that was
   *   previously accepted.
   * * Reducing the max entries.
   */
  publishLabel(request: PublishLabelRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Label>>;
  /**
   * Disable a published Label.
   * Disabling a Label will result in a new disabled published revision based on
   * the current published revision. If there is a draft revision, a new
   * disabled draft revision will be created based on the latest draft revision.
   * Older draft revisions will be deleted.
   *
   * Once disabled, a label may be deleted with `DeleteLabel`.
   */
  disableLabel(request: DisableLabelRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Label>>;
  /**
   * Enable a disabled Label and restore it to its published state.
   * This will result in a new published revision based on the current disabled
   * published revision. If there is an existing disabled draft revision, a new
   * revision will be created based on that draft and will be enabled.
   */
  enableLabel(request: EnableLabelRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Label>>;
  /**
   * Permanently deletes a Label and related metadata on Drive Items.
   *
   * Once deleted, the Label and related Drive item metadata will be deleted.
   * Only draft Labels, and disabled Labels may be deleted.
   */
  deleteLabel(request: DeleteLabelRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Empty>>;
  /** Lists a Label's permissions. */
  listLabelPermissions(
    request: ListLabelPermissionsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListLabelPermissionsResponse>>;
  /**
   * Updates a Label's permissions. If a permission for the indicated principal
   * doesn't exist, a new Label Permission is created, otherwise the existing
   * permission is updated. Permissions affect the Label resource as a whole,
   * are not revisioned, and do not require publishing.
   */
  createLabelPermission(
    request: CreateLabelPermissionRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<LabelPermission>>;
  /**
   * Updates a Label's permissions. If a permission for the indicated principal
   * doesn't exist, a new Label Permission is created, otherwise the existing
   * permission is updated. Permissions affect the Label resource as a whole,
   * are not revisioned, and do not require publishing.
   */
  updateLabelPermission(
    request: UpdateLabelPermissionRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<LabelPermission>>;
  /**
   * Deletes a Label's permission. Permissions affect the Label resource as a
   * whole, are not revisioned, and do not require publishing.
   */
  deleteLabelPermission(
    request: DeleteLabelPermissionRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Empty>>;
  /**
   * Updates Label permissions. If a permission for the
   * indicated principal doesn't exist, a new Label Permission is created,
   * otherwise the existing permission is updated. Permissions affect the Label
   * resource as a whole, are not revisioned, and do not require publishing.
   */
  batchUpdateLabelPermissions(
    request: BatchUpdateLabelPermissionsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<BatchUpdateLabelPermissionsResponse>>;
  /**
   * Deletes Label permissions. Permissions affect the Label resource as a
   * whole, are not revisioned, and do not require publishing.
   */
  batchDeleteLabelPermissions(
    request: BatchDeleteLabelPermissionsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Empty>>;
  /** Lists the LabelLocks on a Label. */
  listLabelLocks(
    request: ListLabelLocksRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListLabelLocksResponse>>;
}

export interface LabelServiceClient<CallOptionsExt = {}> {
  /** Gets the user capabilities. */
  getUserCapabilities(
    request: DeepPartial<GetUserCapabilitiesRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<UserCapabilities>;
  /** List labels. */
  listLabels(
    request: DeepPartial<ListLabelsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListLabelsResponse>;
  /**
   * Get a label by its resource name.
   * Resource name may be any of:
   *
   * * `labels/{id}` - See `labels/{id}@latest`
   * * `labels/{id}@latest` - Gets the latest revision of the label.
   * * `labels/{id}@published` - Gets the current published revision of the
   *   label.
   * * `labels/{id}@{revision_id}` - Gets the label at the specified revision
   *   ID.
   */
  getLabel(request: DeepPartial<GetLabelRequest>, options?: CallOptions & CallOptionsExt): Promise<Label>;
  /**
   * Get the constraints on the structure of a Label; such as, the maximum
   * number of Fields allowed and maximum length of the label title.
   */
  getLabelLimits(
    request: DeepPartial<GetLabelLimitsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<LabelLimits>;
  /** Creates a new Label. */
  createLabel(request: DeepPartial<CreateLabelRequest>, options?: CallOptions & CallOptionsExt): Promise<Label>;
  /**
   * Updates a single Label by applying a set of update requests resulting in a
   * new draft revision. The batch update is all-or-nothing: If any of the
   * update requests are invalid, no changes are applied. The resulting draft
   * revision must be published before the changes may be used with Drive Items.
   */
  deltaUpdateLabel(
    request: DeepPartial<DeltaUpdateLabelRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<DeltaUpdateLabelResponse>;
  /**
   * Updates a Label's `CopyMode`. Changes to this policy are not revisioned, do
   * not require publishing, and take effect immediately.
   */
  updateLabelCopyMode(
    request: DeepPartial<UpdateLabelCopyModeRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Label>;
  /**
   * Publish all draft changes to the Label. Once published, the Label may not
   * return to its draft state. See
   * `google.apps.drive.labels.v2.Lifecycle` for more information.
   *
   * Publishing a Label will result in a new published revision. All previous
   * draft revisions will be deleted. Previous published revisions will be kept
   * but are subject to automated deletion as needed.
   *
   * Once published, some changes are no longer permitted. Generally, any change
   * that would invalidate or cause new restrictions on existing metadata
   * related to the Label will be rejected. For example, the following changes
   * to a Label will be rejected after the Label is published:
   * * The label cannot be directly deleted. It must be disabled first, then
   *   deleted.
   * * Field.FieldType cannot be changed.
   * * Changes to Field validation options cannot reject something that was
   *   previously accepted.
   * * Reducing the max entries.
   */
  publishLabel(request: DeepPartial<PublishLabelRequest>, options?: CallOptions & CallOptionsExt): Promise<Label>;
  /**
   * Disable a published Label.
   * Disabling a Label will result in a new disabled published revision based on
   * the current published revision. If there is a draft revision, a new
   * disabled draft revision will be created based on the latest draft revision.
   * Older draft revisions will be deleted.
   *
   * Once disabled, a label may be deleted with `DeleteLabel`.
   */
  disableLabel(request: DeepPartial<DisableLabelRequest>, options?: CallOptions & CallOptionsExt): Promise<Label>;
  /**
   * Enable a disabled Label and restore it to its published state.
   * This will result in a new published revision based on the current disabled
   * published revision. If there is an existing disabled draft revision, a new
   * revision will be created based on that draft and will be enabled.
   */
  enableLabel(request: DeepPartial<EnableLabelRequest>, options?: CallOptions & CallOptionsExt): Promise<Label>;
  /**
   * Permanently deletes a Label and related metadata on Drive Items.
   *
   * Once deleted, the Label and related Drive item metadata will be deleted.
   * Only draft Labels, and disabled Labels may be deleted.
   */
  deleteLabel(request: DeepPartial<DeleteLabelRequest>, options?: CallOptions & CallOptionsExt): Promise<Empty>;
  /** Lists a Label's permissions. */
  listLabelPermissions(
    request: DeepPartial<ListLabelPermissionsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListLabelPermissionsResponse>;
  /**
   * Updates a Label's permissions. If a permission for the indicated principal
   * doesn't exist, a new Label Permission is created, otherwise the existing
   * permission is updated. Permissions affect the Label resource as a whole,
   * are not revisioned, and do not require publishing.
   */
  createLabelPermission(
    request: DeepPartial<CreateLabelPermissionRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<LabelPermission>;
  /**
   * Updates a Label's permissions. If a permission for the indicated principal
   * doesn't exist, a new Label Permission is created, otherwise the existing
   * permission is updated. Permissions affect the Label resource as a whole,
   * are not revisioned, and do not require publishing.
   */
  updateLabelPermission(
    request: DeepPartial<UpdateLabelPermissionRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<LabelPermission>;
  /**
   * Deletes a Label's permission. Permissions affect the Label resource as a
   * whole, are not revisioned, and do not require publishing.
   */
  deleteLabelPermission(
    request: DeepPartial<DeleteLabelPermissionRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Empty>;
  /**
   * Updates Label permissions. If a permission for the
   * indicated principal doesn't exist, a new Label Permission is created,
   * otherwise the existing permission is updated. Permissions affect the Label
   * resource as a whole, are not revisioned, and do not require publishing.
   */
  batchUpdateLabelPermissions(
    request: DeepPartial<BatchUpdateLabelPermissionsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<BatchUpdateLabelPermissionsResponse>;
  /**
   * Deletes Label permissions. Permissions affect the Label resource as a
   * whole, are not revisioned, and do not require publishing.
   */
  batchDeleteLabelPermissions(
    request: DeepPartial<BatchDeleteLabelPermissionsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Empty>;
  /** Lists the LabelLocks on a Label. */
  listLabelLocks(
    request: DeepPartial<ListLabelLocksRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListLabelLocksResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;
