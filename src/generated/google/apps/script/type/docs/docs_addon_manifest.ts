// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/apps/script/type/docs/docs_addon_manifest.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { HomepageExtensionPoint } from "../extension_point.js";

export const protobufPackage = "google.apps.script.type.docs";

/** Docs add-on manifest. */
export interface DocsAddOnManifest {
  /**
   * If present, this overrides the configuration from
   * `addOns.common.homepageTrigger`.
   */
  homepageTrigger:
    | HomepageExtensionPoint
    | undefined;
  /**
   * Endpoint to execute when file scope authorization is granted
   * for this document/user pair.
   */
  onFileScopeGrantedTrigger: DocsExtensionPoint | undefined;
}

/** Common format for declaring a Docs add-on's triggers. */
export interface DocsExtensionPoint {
  /** Required. The endpoint to execute when this extension point is activated. */
  runFunction: string;
}

function createBaseDocsAddOnManifest(): DocsAddOnManifest {
  return { homepageTrigger: undefined, onFileScopeGrantedTrigger: undefined };
}

export const DocsAddOnManifest: MessageFns<DocsAddOnManifest> = {
  encode(message: DocsAddOnManifest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.homepageTrigger !== undefined) {
      HomepageExtensionPoint.encode(message.homepageTrigger, writer.uint32(10).fork()).join();
    }
    if (message.onFileScopeGrantedTrigger !== undefined) {
      DocsExtensionPoint.encode(message.onFileScopeGrantedTrigger, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DocsAddOnManifest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDocsAddOnManifest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.homepageTrigger = HomepageExtensionPoint.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.onFileScopeGrantedTrigger = DocsExtensionPoint.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DocsAddOnManifest {
    return {
      homepageTrigger: isSet(object.homepageTrigger)
        ? HomepageExtensionPoint.fromJSON(object.homepageTrigger)
        : undefined,
      onFileScopeGrantedTrigger: isSet(object.onFileScopeGrantedTrigger)
        ? DocsExtensionPoint.fromJSON(object.onFileScopeGrantedTrigger)
        : undefined,
    };
  },

  toJSON(message: DocsAddOnManifest): unknown {
    const obj: any = {};
    if (message.homepageTrigger !== undefined) {
      obj.homepageTrigger = HomepageExtensionPoint.toJSON(message.homepageTrigger);
    }
    if (message.onFileScopeGrantedTrigger !== undefined) {
      obj.onFileScopeGrantedTrigger = DocsExtensionPoint.toJSON(message.onFileScopeGrantedTrigger);
    }
    return obj;
  },

  create(base?: DeepPartial<DocsAddOnManifest>): DocsAddOnManifest {
    return DocsAddOnManifest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DocsAddOnManifest>): DocsAddOnManifest {
    const message = createBaseDocsAddOnManifest();
    message.homepageTrigger = (object.homepageTrigger !== undefined && object.homepageTrigger !== null)
      ? HomepageExtensionPoint.fromPartial(object.homepageTrigger)
      : undefined;
    message.onFileScopeGrantedTrigger =
      (object.onFileScopeGrantedTrigger !== undefined && object.onFileScopeGrantedTrigger !== null)
        ? DocsExtensionPoint.fromPartial(object.onFileScopeGrantedTrigger)
        : undefined;
    return message;
  },
};

function createBaseDocsExtensionPoint(): DocsExtensionPoint {
  return { runFunction: "" };
}

export const DocsExtensionPoint: MessageFns<DocsExtensionPoint> = {
  encode(message: DocsExtensionPoint, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.runFunction !== "") {
      writer.uint32(10).string(message.runFunction);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DocsExtensionPoint {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDocsExtensionPoint();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.runFunction = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DocsExtensionPoint {
    return { runFunction: isSet(object.runFunction) ? globalThis.String(object.runFunction) : "" };
  },

  toJSON(message: DocsExtensionPoint): unknown {
    const obj: any = {};
    if (message.runFunction !== "") {
      obj.runFunction = message.runFunction;
    }
    return obj;
  },

  create(base?: DeepPartial<DocsExtensionPoint>): DocsExtensionPoint {
    return DocsExtensionPoint.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DocsExtensionPoint>): DocsExtensionPoint {
    const message = createBaseDocsExtensionPoint();
    message.runFunction = object.runFunction ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
