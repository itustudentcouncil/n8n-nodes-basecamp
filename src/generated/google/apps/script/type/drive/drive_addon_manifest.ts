// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/apps/script/type/drive/drive_addon_manifest.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { HomepageExtensionPoint } from "../extension_point.js";

export const protobufPackage = "google.apps.script.type.drive";

/** Drive add-on manifest. */
export interface DriveAddOnManifest {
  /**
   * If present, this overrides the configuration from
   * `addOns.common.homepageTrigger`.
   */
  homepageTrigger:
    | HomepageExtensionPoint
    | undefined;
  /**
   * Corresponds to behvior that should execute when items are selected
   * in relevant Drive view (e.g. the My Drive Doclist).
   */
  onItemsSelectedTrigger: DriveExtensionPoint | undefined;
}

/**
 * A generic extension point with common features, e.g. something that simply
 * needs a corresponding run function to work.
 */
export interface DriveExtensionPoint {
  /**
   * Required. The endpoint to execute when this extension point is
   * activated.
   */
  runFunction: string;
}

function createBaseDriveAddOnManifest(): DriveAddOnManifest {
  return { homepageTrigger: undefined, onItemsSelectedTrigger: undefined };
}

export const DriveAddOnManifest: MessageFns<DriveAddOnManifest> = {
  encode(message: DriveAddOnManifest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.homepageTrigger !== undefined) {
      HomepageExtensionPoint.encode(message.homepageTrigger, writer.uint32(10).fork()).join();
    }
    if (message.onItemsSelectedTrigger !== undefined) {
      DriveExtensionPoint.encode(message.onItemsSelectedTrigger, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DriveAddOnManifest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDriveAddOnManifest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.homepageTrigger = HomepageExtensionPoint.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.onItemsSelectedTrigger = DriveExtensionPoint.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DriveAddOnManifest {
    return {
      homepageTrigger: isSet(object.homepageTrigger)
        ? HomepageExtensionPoint.fromJSON(object.homepageTrigger)
        : undefined,
      onItemsSelectedTrigger: isSet(object.onItemsSelectedTrigger)
        ? DriveExtensionPoint.fromJSON(object.onItemsSelectedTrigger)
        : undefined,
    };
  },

  toJSON(message: DriveAddOnManifest): unknown {
    const obj: any = {};
    if (message.homepageTrigger !== undefined) {
      obj.homepageTrigger = HomepageExtensionPoint.toJSON(message.homepageTrigger);
    }
    if (message.onItemsSelectedTrigger !== undefined) {
      obj.onItemsSelectedTrigger = DriveExtensionPoint.toJSON(message.onItemsSelectedTrigger);
    }
    return obj;
  },

  create(base?: DeepPartial<DriveAddOnManifest>): DriveAddOnManifest {
    return DriveAddOnManifest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DriveAddOnManifest>): DriveAddOnManifest {
    const message = createBaseDriveAddOnManifest();
    message.homepageTrigger = (object.homepageTrigger !== undefined && object.homepageTrigger !== null)
      ? HomepageExtensionPoint.fromPartial(object.homepageTrigger)
      : undefined;
    message.onItemsSelectedTrigger =
      (object.onItemsSelectedTrigger !== undefined && object.onItemsSelectedTrigger !== null)
        ? DriveExtensionPoint.fromPartial(object.onItemsSelectedTrigger)
        : undefined;
    return message;
  },
};

function createBaseDriveExtensionPoint(): DriveExtensionPoint {
  return { runFunction: "" };
}

export const DriveExtensionPoint: MessageFns<DriveExtensionPoint> = {
  encode(message: DriveExtensionPoint, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.runFunction !== "") {
      writer.uint32(10).string(message.runFunction);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DriveExtensionPoint {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDriveExtensionPoint();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.runFunction = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DriveExtensionPoint {
    return { runFunction: isSet(object.runFunction) ? globalThis.String(object.runFunction) : "" };
  },

  toJSON(message: DriveExtensionPoint): unknown {
    const obj: any = {};
    if (message.runFunction !== "") {
      obj.runFunction = message.runFunction;
    }
    return obj;
  },

  create(base?: DeepPartial<DriveExtensionPoint>): DriveExtensionPoint {
    return DriveExtensionPoint.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DriveExtensionPoint>): DriveExtensionPoint {
    const message = createBaseDriveExtensionPoint();
    message.runFunction = object.runFunction ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
