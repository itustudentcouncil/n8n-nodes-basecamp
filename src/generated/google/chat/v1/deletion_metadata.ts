// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/chat/v1/deletion_metadata.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.chat.v1";

/**
 * Information about a deleted message. A message is deleted when `delete_time`
 * is set.
 */
export interface DeletionMetadata {
  /** Indicates who deleted the message. */
  deletionType: DeletionMetadata_DeletionType;
}

/** Who deleted the message and how it was deleted. */
export enum DeletionMetadata_DeletionType {
  /** DELETION_TYPE_UNSPECIFIED - This value is unused. */
  DELETION_TYPE_UNSPECIFIED = 0,
  /** CREATOR - User deleted their own message. */
  CREATOR = 1,
  /** SPACE_OWNER - The space owner deleted the message. */
  SPACE_OWNER = 2,
  /** ADMIN - A Google Workspace admin deleted the message. */
  ADMIN = 3,
  /** APP_MESSAGE_EXPIRY - A Chat app deleted its own message when it expired. */
  APP_MESSAGE_EXPIRY = 4,
  /** CREATOR_VIA_APP - A Chat app deleted the message on behalf of the user. */
  CREATOR_VIA_APP = 5,
  /** SPACE_OWNER_VIA_APP - A Chat app deleted the message on behalf of the space owner. */
  SPACE_OWNER_VIA_APP = 6,
  UNRECOGNIZED = -1,
}

export function deletionMetadata_DeletionTypeFromJSON(object: any): DeletionMetadata_DeletionType {
  switch (object) {
    case 0:
    case "DELETION_TYPE_UNSPECIFIED":
      return DeletionMetadata_DeletionType.DELETION_TYPE_UNSPECIFIED;
    case 1:
    case "CREATOR":
      return DeletionMetadata_DeletionType.CREATOR;
    case 2:
    case "SPACE_OWNER":
      return DeletionMetadata_DeletionType.SPACE_OWNER;
    case 3:
    case "ADMIN":
      return DeletionMetadata_DeletionType.ADMIN;
    case 4:
    case "APP_MESSAGE_EXPIRY":
      return DeletionMetadata_DeletionType.APP_MESSAGE_EXPIRY;
    case 5:
    case "CREATOR_VIA_APP":
      return DeletionMetadata_DeletionType.CREATOR_VIA_APP;
    case 6:
    case "SPACE_OWNER_VIA_APP":
      return DeletionMetadata_DeletionType.SPACE_OWNER_VIA_APP;
    case -1:
    case "UNRECOGNIZED":
    default:
      return DeletionMetadata_DeletionType.UNRECOGNIZED;
  }
}

export function deletionMetadata_DeletionTypeToJSON(object: DeletionMetadata_DeletionType): string {
  switch (object) {
    case DeletionMetadata_DeletionType.DELETION_TYPE_UNSPECIFIED:
      return "DELETION_TYPE_UNSPECIFIED";
    case DeletionMetadata_DeletionType.CREATOR:
      return "CREATOR";
    case DeletionMetadata_DeletionType.SPACE_OWNER:
      return "SPACE_OWNER";
    case DeletionMetadata_DeletionType.ADMIN:
      return "ADMIN";
    case DeletionMetadata_DeletionType.APP_MESSAGE_EXPIRY:
      return "APP_MESSAGE_EXPIRY";
    case DeletionMetadata_DeletionType.CREATOR_VIA_APP:
      return "CREATOR_VIA_APP";
    case DeletionMetadata_DeletionType.SPACE_OWNER_VIA_APP:
      return "SPACE_OWNER_VIA_APP";
    case DeletionMetadata_DeletionType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseDeletionMetadata(): DeletionMetadata {
  return { deletionType: 0 };
}

export const DeletionMetadata: MessageFns<DeletionMetadata> = {
  encode(message: DeletionMetadata, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.deletionType !== 0) {
      writer.uint32(8).int32(message.deletionType);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DeletionMetadata {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDeletionMetadata();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.deletionType = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DeletionMetadata {
    return {
      deletionType: isSet(object.deletionType) ? deletionMetadata_DeletionTypeFromJSON(object.deletionType) : 0,
    };
  },

  toJSON(message: DeletionMetadata): unknown {
    const obj: any = {};
    if (message.deletionType !== 0) {
      obj.deletionType = deletionMetadata_DeletionTypeToJSON(message.deletionType);
    }
    return obj;
  },

  create(base?: DeepPartial<DeletionMetadata>): DeletionMetadata {
    return DeletionMetadata.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DeletionMetadata>): DeletionMetadata {
    const message = createBaseDeletionMetadata();
    message.deletionType = object.deletionType ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
