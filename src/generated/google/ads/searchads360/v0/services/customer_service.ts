// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/searchads360/v0/services/customer_service.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";

export const protobufPackage = "google.ads.searchads360.v0.services";

/**
 * Request message for
 * [CustomerService.ListAccessibleCustomers][google.ads.searchads360.v0.services.CustomerService.ListAccessibleCustomers].
 */
export interface ListAccessibleCustomersRequest {
}

/**
 * Response message for
 * [CustomerService.ListAccessibleCustomers][google.ads.searchads360.v0.services.CustomerService.ListAccessibleCustomers].
 */
export interface ListAccessibleCustomersResponse {
  /**
   * Resource name of customers directly accessible by the
   * user authenticating the call.
   */
  resourceNames: string[];
}

function createBaseListAccessibleCustomersRequest(): ListAccessibleCustomersRequest {
  return {};
}

export const ListAccessibleCustomersRequest: MessageFns<ListAccessibleCustomersRequest> = {
  encode(_: ListAccessibleCustomersRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListAccessibleCustomersRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListAccessibleCustomersRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ListAccessibleCustomersRequest {
    return {};
  },

  toJSON(_: ListAccessibleCustomersRequest): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ListAccessibleCustomersRequest>): ListAccessibleCustomersRequest {
    return ListAccessibleCustomersRequest.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ListAccessibleCustomersRequest>): ListAccessibleCustomersRequest {
    const message = createBaseListAccessibleCustomersRequest();
    return message;
  },
};

function createBaseListAccessibleCustomersResponse(): ListAccessibleCustomersResponse {
  return { resourceNames: [] };
}

export const ListAccessibleCustomersResponse: MessageFns<ListAccessibleCustomersResponse> = {
  encode(message: ListAccessibleCustomersResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.resourceNames) {
      writer.uint32(10).string(v!);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListAccessibleCustomersResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListAccessibleCustomersResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceNames.push(reader.string());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListAccessibleCustomersResponse {
    return {
      resourceNames: globalThis.Array.isArray(object?.resourceNames)
        ? object.resourceNames.map((e: any) => globalThis.String(e))
        : [],
    };
  },

  toJSON(message: ListAccessibleCustomersResponse): unknown {
    const obj: any = {};
    if (message.resourceNames?.length) {
      obj.resourceNames = message.resourceNames;
    }
    return obj;
  },

  create(base?: DeepPartial<ListAccessibleCustomersResponse>): ListAccessibleCustomersResponse {
    return ListAccessibleCustomersResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListAccessibleCustomersResponse>): ListAccessibleCustomersResponse {
    const message = createBaseListAccessibleCustomersResponse();
    message.resourceNames = object.resourceNames?.map((e) => e) || [];
    return message;
  },
};

/** Service to manage customers. */
export type CustomerServiceDefinition = typeof CustomerServiceDefinition;
export const CustomerServiceDefinition = {
  name: "CustomerService",
  fullName: "google.ads.searchads360.v0.services.CustomerService",
  methods: {
    /**
     * Returns resource names of customers directly accessible by the
     * user authenticating the call.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     */
    listAccessibleCustomers: {
      name: "ListAccessibleCustomers",
      requestType: ListAccessibleCustomersRequest,
      requestStream: false,
      responseType: ListAccessibleCustomersResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            Buffer.from([
              39,
              18,
              37,
              47,
              118,
              48,
              47,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              115,
              58,
              108,
              105,
              115,
              116,
              65,
              99,
              99,
              101,
              115,
              115,
              105,
              98,
              108,
              101,
              67,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              115,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface CustomerServiceImplementation<CallContextExt = {}> {
  /**
   * Returns resource names of customers directly accessible by the
   * user authenticating the call.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  listAccessibleCustomers(
    request: ListAccessibleCustomersRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListAccessibleCustomersResponse>>;
}

export interface CustomerServiceClient<CallOptionsExt = {}> {
  /**
   * Returns resource names of customers directly accessible by the
   * user authenticating the call.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  listAccessibleCustomers(
    request: DeepPartial<ListAccessibleCustomersRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListAccessibleCustomersResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
