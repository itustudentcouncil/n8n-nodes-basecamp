// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/searchads360/v0/services/search_ads360_service.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { FieldMask } from "../../../../protobuf/field_mask.js";
import { Metrics } from "../common/metrics.js";
import { Segments } from "../common/segments.js";
import { Value } from "../common/value.js";
import {
  SummaryRowSettingEnum_SummaryRowSetting,
  summaryRowSettingEnum_SummaryRowSettingFromJSON,
  summaryRowSettingEnum_SummaryRowSettingToJSON,
} from "../enums/summary_row_setting.js";
import { AccessibleBiddingStrategy } from "../resources/accessible_bidding_strategy.js";
import { AdGroup } from "../resources/ad_group.js";
import { AdGroupAd } from "../resources/ad_group_ad.js";
import { AdGroupAdLabel } from "../resources/ad_group_ad_label.js";
import { AdGroupAsset } from "../resources/ad_group_asset.js";
import { AdGroupAssetSet } from "../resources/ad_group_asset_set.js";
import { AdGroupAudienceView } from "../resources/ad_group_audience_view.js";
import { AdGroupBidModifier } from "../resources/ad_group_bid_modifier.js";
import { AdGroupCriterion } from "../resources/ad_group_criterion.js";
import { AdGroupCriterionLabel } from "../resources/ad_group_criterion_label.js";
import { AdGroupLabel } from "../resources/ad_group_label.js";
import { AgeRangeView } from "../resources/age_range_view.js";
import { Asset } from "../resources/asset.js";
import { AssetGroup } from "../resources/asset_group.js";
import { AssetGroupAsset } from "../resources/asset_group_asset.js";
import { AssetGroupListingGroupFilter } from "../resources/asset_group_listing_group_filter.js";
import { AssetGroupSignal } from "../resources/asset_group_signal.js";
import { AssetGroupTopCombinationView } from "../resources/asset_group_top_combination_view.js";
import { AssetSet } from "../resources/asset_set.js";
import { AssetSetAsset } from "../resources/asset_set_asset.js";
import { Audience } from "../resources/audience.js";
import { BiddingStrategy } from "../resources/bidding_strategy.js";
import { Campaign } from "../resources/campaign.js";
import { CampaignAsset } from "../resources/campaign_asset.js";
import { CampaignAssetSet } from "../resources/campaign_asset_set.js";
import { CampaignAudienceView } from "../resources/campaign_audience_view.js";
import { CampaignBudget } from "../resources/campaign_budget.js";
import { CampaignCriterion } from "../resources/campaign_criterion.js";
import { CampaignLabel } from "../resources/campaign_label.js";
import { CartDataSalesView } from "../resources/cart_data_sales_view.js";
import { Conversion } from "../resources/conversion.js";
import { ConversionAction } from "../resources/conversion_action.js";
import { ConversionCustomVariable } from "../resources/conversion_custom_variable.js";
import { Customer } from "../resources/customer.js";
import { CustomerAsset } from "../resources/customer_asset.js";
import { CustomerAssetSet } from "../resources/customer_asset_set.js";
import { CustomerClient } from "../resources/customer_client.js";
import { CustomerManagerLink } from "../resources/customer_manager_link.js";
import { DynamicSearchAdsSearchTermView } from "../resources/dynamic_search_ads_search_term_view.js";
import { GenderView } from "../resources/gender_view.js";
import { GeoTargetConstant } from "../resources/geo_target_constant.js";
import { KeywordView } from "../resources/keyword_view.js";
import { Label } from "../resources/label.js";
import { LanguageConstant } from "../resources/language_constant.js";
import { LocationView } from "../resources/location_view.js";
import { ProductBiddingCategoryConstant } from "../resources/product_bidding_category_constant.js";
import { ProductGroupView } from "../resources/product_group_view.js";
import { ShoppingPerformanceView } from "../resources/shopping_performance_view.js";
import { UserList } from "../resources/user_list.js";
import { Visit } from "../resources/visit.js";
import { WebpageView } from "../resources/webpage_view.js";

export const protobufPackage = "google.ads.searchads360.v0.services";

/**
 * Request message for
 * [SearchAds360Service.Search][google.ads.searchads360.v0.services.SearchAds360Service.Search].
 */
export interface SearchSearchAds360Request {
  /** Required. The ID of the customer being queried. */
  customerId: string;
  /** Required. The query string. */
  query: string;
  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   */
  pageToken: string;
  /**
   * Number of elements to retrieve in a single page.
   * When too large a page is requested, the server may decide to
   * further limit the number of returned resources.
   */
  pageSize: number;
  /** If true, the request is validated but not executed. */
  validateOnly: boolean;
  /**
   * If true, the total number of results that match the query ignoring the
   * LIMIT clause will be included in the response.
   * Default is false.
   */
  returnTotalResultsCount: boolean;
  /**
   * Determines whether a summary row will be returned. By default, summary row
   * is not returned. If requested, the summary row will be sent in a response
   * by itself after all other query results are returned.
   */
  summaryRowSetting: SummaryRowSettingEnum_SummaryRowSetting;
}

/**
 * Response message for
 * [SearchAds360Service.Search][google.ads.searchads360.v0.services.SearchAds360Service.Search].
 */
export interface SearchSearchAds360Response {
  /** The list of rows that matched the query. */
  results: SearchAds360Row[];
  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   */
  nextPageToken: string;
  /**
   * Total number of results that match the query ignoring the LIMIT
   * clause.
   */
  totalResultsCount: Long;
  /** FieldMask that represents what fields were requested by the user. */
  fieldMask:
    | string[]
    | undefined;
  /**
   * Summary row that contains summary of metrics in results.
   * Summary of metrics means aggregation of metrics across all results,
   * here aggregation could be sum, average, rate, etc.
   */
  summaryRow:
    | SearchAds360Row
    | undefined;
  /** The headers of the custom columns in the results. */
  customColumnHeaders: CustomColumnHeader[];
  /** The headers of the conversion custom metrics in the results. */
  conversionCustomMetricHeaders: ConversionCustomMetricHeader[];
  /** The headers of the conversion custom dimensions in the results. */
  conversionCustomDimensionHeaders: ConversionCustomDimensionHeader[];
  /** The headers of the raw event conversion metrics in the results. */
  rawEventConversionMetricHeaders: RawEventConversionMetricHeader[];
  /** The headers of the raw event conversion dimensions in the results. */
  rawEventConversionDimensionHeaders: RawEventConversionDimensionHeader[];
}

/**
 * Request message for
 * [SearchAds360Service.SearchStream][google.ads.searchads360.v0.services.SearchAds360Service.SearchStream].
 */
export interface SearchSearchAds360StreamRequest {
  /** Required. The ID of the customer being queried. */
  customerId: string;
  /** Required. The query string. */
  query: string;
  /**
   * The number of rows that are returned in each stream response batch.
   * When too large batch is requested, the server may decide to further limit
   * the number of returned rows.
   */
  batchSize: number;
  /**
   * Determines whether a summary row will be returned. By default, summary row
   * is not returned. If requested, the summary row will be sent in a response
   * by itself after all other query results are returned.
   */
  summaryRowSetting: SummaryRowSettingEnum_SummaryRowSetting;
}

/**
 * Response message for
 * [SearchAds360Service.SearchStream][google.ads.searchads360.v0.services.SearchAds360Service.SearchStream].
 */
export interface SearchSearchAds360StreamResponse {
  /** The list of rows that matched the query. */
  results: SearchAds360Row[];
  /** FieldMask that represents what fields were requested by the user. */
  fieldMask:
    | string[]
    | undefined;
  /**
   * Summary row that contains summary of metrics in results.
   * Summary of metrics means aggregation of metrics across all results,
   * here aggregation could be sum, average, rate, etc.
   */
  summaryRow:
    | SearchAds360Row
    | undefined;
  /** The headers of the custom columns in the results. */
  customColumnHeaders: CustomColumnHeader[];
  /** The headers of the conversion custom metrics in the results. */
  conversionCustomMetricHeaders: ConversionCustomMetricHeader[];
  /** The headers of the conversion custom dimension in the results. */
  conversionCustomDimensionHeaders: ConversionCustomDimensionHeader[];
  /** The headers of the raw event conversion metrics in the results. */
  rawEventConversionMetricHeaders: RawEventConversionMetricHeader[];
  /** The headers of the raw event conversion dimensions in the results. */
  rawEventConversionDimensionHeaders: RawEventConversionDimensionHeader[];
  /** The unique id of the request that is used for debugging purposes. */
  requestId: string;
}

/** A returned row from the query. */
export interface SearchAds360Row {
  /** The ad group referenced in the query. */
  adGroup:
    | AdGroup
    | undefined;
  /** The ad referenced in the query. */
  adGroupAd:
    | AdGroupAd
    | undefined;
  /** The ad group ad label referenced in the query. */
  adGroupAdLabel:
    | AdGroupAdLabel
    | undefined;
  /** The ad group asset referenced in the query. */
  adGroupAsset:
    | AdGroupAsset
    | undefined;
  /** The ad group asset set referenced in the query. */
  adGroupAssetSet:
    | AdGroupAssetSet
    | undefined;
  /** The ad group audience view referenced in the query. */
  adGroupAudienceView:
    | AdGroupAudienceView
    | undefined;
  /** The bid modifier referenced in the query. */
  adGroupBidModifier:
    | AdGroupBidModifier
    | undefined;
  /** The criterion referenced in the query. */
  adGroupCriterion:
    | AdGroupCriterion
    | undefined;
  /** The ad group criterion label referenced in the query. */
  adGroupCriterionLabel:
    | AdGroupCriterionLabel
    | undefined;
  /** The ad group label referenced in the query. */
  adGroupLabel:
    | AdGroupLabel
    | undefined;
  /** The age range view referenced in the query. */
  ageRangeView:
    | AgeRangeView
    | undefined;
  /** The asset referenced in the query. */
  asset:
    | Asset
    | undefined;
  /** The asset group asset referenced in the query. */
  assetGroupAsset:
    | AssetGroupAsset
    | undefined;
  /** The asset group signal referenced in the query. */
  assetGroupSignal:
    | AssetGroupSignal
    | undefined;
  /** The asset group listing group filter referenced in the query. */
  assetGroupListingGroupFilter:
    | AssetGroupListingGroupFilter
    | undefined;
  /** The asset group top combination view referenced in the query. */
  assetGroupTopCombinationView:
    | AssetGroupTopCombinationView
    | undefined;
  /** The asset group referenced in the query. */
  assetGroup:
    | AssetGroup
    | undefined;
  /** The asset set asset referenced in the query. */
  assetSetAsset:
    | AssetSetAsset
    | undefined;
  /** The asset set referenced in the query. */
  assetSet:
    | AssetSet
    | undefined;
  /** The bidding strategy referenced in the query. */
  biddingStrategy:
    | BiddingStrategy
    | undefined;
  /** The campaign budget referenced in the query. */
  campaignBudget:
    | CampaignBudget
    | undefined;
  /** The campaign referenced in the query. */
  campaign:
    | Campaign
    | undefined;
  /** The campaign asset referenced in the query. */
  campaignAsset:
    | CampaignAsset
    | undefined;
  /** The campaign asset set referenced in the query. */
  campaignAssetSet:
    | CampaignAssetSet
    | undefined;
  /** The campaign audience view referenced in the query. */
  campaignAudienceView:
    | CampaignAudienceView
    | undefined;
  /** The campaign criterion referenced in the query. */
  campaignCriterion:
    | CampaignCriterion
    | undefined;
  /** The campaign label referenced in the query. */
  campaignLabel:
    | CampaignLabel
    | undefined;
  /** The cart data sales view referenced in the query. */
  cartDataSalesView:
    | CartDataSalesView
    | undefined;
  /** The Audience referenced in the query. */
  audience:
    | Audience
    | undefined;
  /** The conversion action referenced in the query. */
  conversionAction:
    | ConversionAction
    | undefined;
  /** The conversion custom variable referenced in the query. */
  conversionCustomVariable:
    | ConversionCustomVariable
    | undefined;
  /** The customer referenced in the query. */
  customer:
    | Customer
    | undefined;
  /** The customer asset referenced in the query. */
  customerAsset:
    | CustomerAsset
    | undefined;
  /** The customer asset set referenced in the query. */
  customerAssetSet:
    | CustomerAssetSet
    | undefined;
  /** The accessible bidding strategy referenced in the query. */
  accessibleBiddingStrategy:
    | AccessibleBiddingStrategy
    | undefined;
  /** The CustomerManagerLink referenced in the query. */
  customerManagerLink:
    | CustomerManagerLink
    | undefined;
  /** The CustomerClient referenced in the query. */
  customerClient:
    | CustomerClient
    | undefined;
  /** The dynamic search ads search term view referenced in the query. */
  dynamicSearchAdsSearchTermView:
    | DynamicSearchAdsSearchTermView
    | undefined;
  /** The gender view referenced in the query. */
  genderView:
    | GenderView
    | undefined;
  /** The geo target constant referenced in the query. */
  geoTargetConstant:
    | GeoTargetConstant
    | undefined;
  /** The keyword view referenced in the query. */
  keywordView:
    | KeywordView
    | undefined;
  /** The label referenced in the query. */
  label:
    | Label
    | undefined;
  /** The language constant referenced in the query. */
  languageConstant:
    | LanguageConstant
    | undefined;
  /** The location view referenced in the query. */
  locationView:
    | LocationView
    | undefined;
  /** The Product Bidding Category referenced in the query. */
  productBiddingCategoryConstant:
    | ProductBiddingCategoryConstant
    | undefined;
  /** The product group view referenced in the query. */
  productGroupView:
    | ProductGroupView
    | undefined;
  /** The shopping performance view referenced in the query. */
  shoppingPerformanceView:
    | ShoppingPerformanceView
    | undefined;
  /** The user list referenced in the query. */
  userList:
    | UserList
    | undefined;
  /** The webpage view referenced in the query. */
  webpageView:
    | WebpageView
    | undefined;
  /** The event level visit referenced in the query. */
  visit:
    | Visit
    | undefined;
  /** The event level conversion referenced in the query. */
  conversion:
    | Conversion
    | undefined;
  /** The metrics. */
  metrics:
    | Metrics
    | undefined;
  /** The segments. */
  segments:
    | Segments
    | undefined;
  /** The custom columns. */
  customColumns: Value[];
}

/** Message for custom column header. */
export interface CustomColumnHeader {
  /** The custom column ID. */
  id: Long;
  /** The user defined name of the custom column. */
  name: string;
  /** True when the custom column references metrics. */
  referencesMetrics: boolean;
}

/** Message for conversion custom metric header. */
export interface ConversionCustomMetricHeader {
  /** The conversion custom metric ID. */
  id: Long;
  /** The user defined name of the conversion custom metric. */
  name: string;
}

/** Message for conversion custom dimension header. */
export interface ConversionCustomDimensionHeader {
  /** The conversion custom dimension ID. */
  id: Long;
  /** The user defined name of the conversion custom dimension. */
  name: string;
}

/** Message for raw event conversion metric header. */
export interface RawEventConversionMetricHeader {
  /** The conversion custom variable ID. */
  id: Long;
  /** The user defined name of the raw event metric. */
  name: string;
}

/** Message for raw event conversion dimension header. */
export interface RawEventConversionDimensionHeader {
  /** The conversion custom variable ID. */
  id: Long;
  /** The user defined name of the raw event dimension. */
  name: string;
}

function createBaseSearchSearchAds360Request(): SearchSearchAds360Request {
  return {
    customerId: "",
    query: "",
    pageToken: "",
    pageSize: 0,
    validateOnly: false,
    returnTotalResultsCount: false,
    summaryRowSetting: 0,
  };
}

export const SearchSearchAds360Request: MessageFns<SearchSearchAds360Request> = {
  encode(message: SearchSearchAds360Request, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.customerId !== "") {
      writer.uint32(10).string(message.customerId);
    }
    if (message.query !== "") {
      writer.uint32(18).string(message.query);
    }
    if (message.pageToken !== "") {
      writer.uint32(26).string(message.pageToken);
    }
    if (message.pageSize !== 0) {
      writer.uint32(32).int32(message.pageSize);
    }
    if (message.validateOnly !== false) {
      writer.uint32(40).bool(message.validateOnly);
    }
    if (message.returnTotalResultsCount !== false) {
      writer.uint32(56).bool(message.returnTotalResultsCount);
    }
    if (message.summaryRowSetting !== 0) {
      writer.uint32(64).int32(message.summaryRowSetting);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SearchSearchAds360Request {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSearchSearchAds360Request();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.customerId = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.query = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.pageToken = reader.string();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.pageSize = reader.int32();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.validateOnly = reader.bool();
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.returnTotalResultsCount = reader.bool();
          continue;
        case 8:
          if (tag !== 64) {
            break;
          }

          message.summaryRowSetting = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SearchSearchAds360Request {
    return {
      customerId: isSet(object.customerId) ? globalThis.String(object.customerId) : "",
      query: isSet(object.query) ? globalThis.String(object.query) : "",
      pageToken: isSet(object.pageToken) ? globalThis.String(object.pageToken) : "",
      pageSize: isSet(object.pageSize) ? globalThis.Number(object.pageSize) : 0,
      validateOnly: isSet(object.validateOnly) ? globalThis.Boolean(object.validateOnly) : false,
      returnTotalResultsCount: isSet(object.returnTotalResultsCount)
        ? globalThis.Boolean(object.returnTotalResultsCount)
        : false,
      summaryRowSetting: isSet(object.summaryRowSetting)
        ? summaryRowSettingEnum_SummaryRowSettingFromJSON(object.summaryRowSetting)
        : 0,
    };
  },

  toJSON(message: SearchSearchAds360Request): unknown {
    const obj: any = {};
    if (message.customerId !== "") {
      obj.customerId = message.customerId;
    }
    if (message.query !== "") {
      obj.query = message.query;
    }
    if (message.pageToken !== "") {
      obj.pageToken = message.pageToken;
    }
    if (message.pageSize !== 0) {
      obj.pageSize = Math.round(message.pageSize);
    }
    if (message.validateOnly !== false) {
      obj.validateOnly = message.validateOnly;
    }
    if (message.returnTotalResultsCount !== false) {
      obj.returnTotalResultsCount = message.returnTotalResultsCount;
    }
    if (message.summaryRowSetting !== 0) {
      obj.summaryRowSetting = summaryRowSettingEnum_SummaryRowSettingToJSON(message.summaryRowSetting);
    }
    return obj;
  },

  create(base?: DeepPartial<SearchSearchAds360Request>): SearchSearchAds360Request {
    return SearchSearchAds360Request.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SearchSearchAds360Request>): SearchSearchAds360Request {
    const message = createBaseSearchSearchAds360Request();
    message.customerId = object.customerId ?? "";
    message.query = object.query ?? "";
    message.pageToken = object.pageToken ?? "";
    message.pageSize = object.pageSize ?? 0;
    message.validateOnly = object.validateOnly ?? false;
    message.returnTotalResultsCount = object.returnTotalResultsCount ?? false;
    message.summaryRowSetting = object.summaryRowSetting ?? 0;
    return message;
  },
};

function createBaseSearchSearchAds360Response(): SearchSearchAds360Response {
  return {
    results: [],
    nextPageToken: "",
    totalResultsCount: Long.ZERO,
    fieldMask: undefined,
    summaryRow: undefined,
    customColumnHeaders: [],
    conversionCustomMetricHeaders: [],
    conversionCustomDimensionHeaders: [],
    rawEventConversionMetricHeaders: [],
    rawEventConversionDimensionHeaders: [],
  };
}

export const SearchSearchAds360Response: MessageFns<SearchSearchAds360Response> = {
  encode(message: SearchSearchAds360Response, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.results) {
      SearchAds360Row.encode(v!, writer.uint32(10).fork()).join();
    }
    if (message.nextPageToken !== "") {
      writer.uint32(18).string(message.nextPageToken);
    }
    if (!message.totalResultsCount.equals(Long.ZERO)) {
      writer.uint32(24).int64(message.totalResultsCount.toString());
    }
    if (message.fieldMask !== undefined) {
      FieldMask.encode(FieldMask.wrap(message.fieldMask), writer.uint32(42).fork()).join();
    }
    if (message.summaryRow !== undefined) {
      SearchAds360Row.encode(message.summaryRow, writer.uint32(50).fork()).join();
    }
    for (const v of message.customColumnHeaders) {
      CustomColumnHeader.encode(v!, writer.uint32(58).fork()).join();
    }
    for (const v of message.conversionCustomMetricHeaders) {
      ConversionCustomMetricHeader.encode(v!, writer.uint32(74).fork()).join();
    }
    for (const v of message.conversionCustomDimensionHeaders) {
      ConversionCustomDimensionHeader.encode(v!, writer.uint32(82).fork()).join();
    }
    for (const v of message.rawEventConversionMetricHeaders) {
      RawEventConversionMetricHeader.encode(v!, writer.uint32(90).fork()).join();
    }
    for (const v of message.rawEventConversionDimensionHeaders) {
      RawEventConversionDimensionHeader.encode(v!, writer.uint32(98).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SearchSearchAds360Response {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSearchSearchAds360Response();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.results.push(SearchAds360Row.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.nextPageToken = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.totalResultsCount = Long.fromString(reader.int64().toString());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.fieldMask = FieldMask.unwrap(FieldMask.decode(reader, reader.uint32()));
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.summaryRow = SearchAds360Row.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.customColumnHeaders.push(CustomColumnHeader.decode(reader, reader.uint32()));
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.conversionCustomMetricHeaders.push(ConversionCustomMetricHeader.decode(reader, reader.uint32()));
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.conversionCustomDimensionHeaders.push(
            ConversionCustomDimensionHeader.decode(reader, reader.uint32()),
          );
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.rawEventConversionMetricHeaders.push(RawEventConversionMetricHeader.decode(reader, reader.uint32()));
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.rawEventConversionDimensionHeaders.push(
            RawEventConversionDimensionHeader.decode(reader, reader.uint32()),
          );
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SearchSearchAds360Response {
    return {
      results: globalThis.Array.isArray(object?.results)
        ? object.results.map((e: any) => SearchAds360Row.fromJSON(e))
        : [],
      nextPageToken: isSet(object.nextPageToken) ? globalThis.String(object.nextPageToken) : "",
      totalResultsCount: isSet(object.totalResultsCount) ? Long.fromValue(object.totalResultsCount) : Long.ZERO,
      fieldMask: isSet(object.fieldMask) ? FieldMask.unwrap(FieldMask.fromJSON(object.fieldMask)) : undefined,
      summaryRow: isSet(object.summaryRow) ? SearchAds360Row.fromJSON(object.summaryRow) : undefined,
      customColumnHeaders: globalThis.Array.isArray(object?.customColumnHeaders)
        ? object.customColumnHeaders.map((e: any) => CustomColumnHeader.fromJSON(e))
        : [],
      conversionCustomMetricHeaders: globalThis.Array.isArray(object?.conversionCustomMetricHeaders)
        ? object.conversionCustomMetricHeaders.map((e: any) => ConversionCustomMetricHeader.fromJSON(e))
        : [],
      conversionCustomDimensionHeaders: globalThis.Array.isArray(object?.conversionCustomDimensionHeaders)
        ? object.conversionCustomDimensionHeaders.map((e: any) => ConversionCustomDimensionHeader.fromJSON(e))
        : [],
      rawEventConversionMetricHeaders: globalThis.Array.isArray(object?.rawEventConversionMetricHeaders)
        ? object.rawEventConversionMetricHeaders.map((e: any) => RawEventConversionMetricHeader.fromJSON(e))
        : [],
      rawEventConversionDimensionHeaders: globalThis.Array.isArray(object?.rawEventConversionDimensionHeaders)
        ? object.rawEventConversionDimensionHeaders.map((e: any) => RawEventConversionDimensionHeader.fromJSON(e))
        : [],
    };
  },

  toJSON(message: SearchSearchAds360Response): unknown {
    const obj: any = {};
    if (message.results?.length) {
      obj.results = message.results.map((e) => SearchAds360Row.toJSON(e));
    }
    if (message.nextPageToken !== "") {
      obj.nextPageToken = message.nextPageToken;
    }
    if (!message.totalResultsCount.equals(Long.ZERO)) {
      obj.totalResultsCount = (message.totalResultsCount || Long.ZERO).toString();
    }
    if (message.fieldMask !== undefined) {
      obj.fieldMask = FieldMask.toJSON(FieldMask.wrap(message.fieldMask));
    }
    if (message.summaryRow !== undefined) {
      obj.summaryRow = SearchAds360Row.toJSON(message.summaryRow);
    }
    if (message.customColumnHeaders?.length) {
      obj.customColumnHeaders = message.customColumnHeaders.map((e) => CustomColumnHeader.toJSON(e));
    }
    if (message.conversionCustomMetricHeaders?.length) {
      obj.conversionCustomMetricHeaders = message.conversionCustomMetricHeaders.map((e) =>
        ConversionCustomMetricHeader.toJSON(e)
      );
    }
    if (message.conversionCustomDimensionHeaders?.length) {
      obj.conversionCustomDimensionHeaders = message.conversionCustomDimensionHeaders.map((e) =>
        ConversionCustomDimensionHeader.toJSON(e)
      );
    }
    if (message.rawEventConversionMetricHeaders?.length) {
      obj.rawEventConversionMetricHeaders = message.rawEventConversionMetricHeaders.map((e) =>
        RawEventConversionMetricHeader.toJSON(e)
      );
    }
    if (message.rawEventConversionDimensionHeaders?.length) {
      obj.rawEventConversionDimensionHeaders = message.rawEventConversionDimensionHeaders.map((e) =>
        RawEventConversionDimensionHeader.toJSON(e)
      );
    }
    return obj;
  },

  create(base?: DeepPartial<SearchSearchAds360Response>): SearchSearchAds360Response {
    return SearchSearchAds360Response.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SearchSearchAds360Response>): SearchSearchAds360Response {
    const message = createBaseSearchSearchAds360Response();
    message.results = object.results?.map((e) => SearchAds360Row.fromPartial(e)) || [];
    message.nextPageToken = object.nextPageToken ?? "";
    message.totalResultsCount = (object.totalResultsCount !== undefined && object.totalResultsCount !== null)
      ? Long.fromValue(object.totalResultsCount)
      : Long.ZERO;
    message.fieldMask = object.fieldMask ?? undefined;
    message.summaryRow = (object.summaryRow !== undefined && object.summaryRow !== null)
      ? SearchAds360Row.fromPartial(object.summaryRow)
      : undefined;
    message.customColumnHeaders = object.customColumnHeaders?.map((e) => CustomColumnHeader.fromPartial(e)) || [];
    message.conversionCustomMetricHeaders =
      object.conversionCustomMetricHeaders?.map((e) => ConversionCustomMetricHeader.fromPartial(e)) || [];
    message.conversionCustomDimensionHeaders =
      object.conversionCustomDimensionHeaders?.map((e) => ConversionCustomDimensionHeader.fromPartial(e)) || [];
    message.rawEventConversionMetricHeaders =
      object.rawEventConversionMetricHeaders?.map((e) => RawEventConversionMetricHeader.fromPartial(e)) || [];
    message.rawEventConversionDimensionHeaders =
      object.rawEventConversionDimensionHeaders?.map((e) => RawEventConversionDimensionHeader.fromPartial(e)) || [];
    return message;
  },
};

function createBaseSearchSearchAds360StreamRequest(): SearchSearchAds360StreamRequest {
  return { customerId: "", query: "", batchSize: 0, summaryRowSetting: 0 };
}

export const SearchSearchAds360StreamRequest: MessageFns<SearchSearchAds360StreamRequest> = {
  encode(message: SearchSearchAds360StreamRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.customerId !== "") {
      writer.uint32(10).string(message.customerId);
    }
    if (message.query !== "") {
      writer.uint32(18).string(message.query);
    }
    if (message.batchSize !== 0) {
      writer.uint32(32).int32(message.batchSize);
    }
    if (message.summaryRowSetting !== 0) {
      writer.uint32(24).int32(message.summaryRowSetting);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SearchSearchAds360StreamRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSearchSearchAds360StreamRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.customerId = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.query = reader.string();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.batchSize = reader.int32();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.summaryRowSetting = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SearchSearchAds360StreamRequest {
    return {
      customerId: isSet(object.customerId) ? globalThis.String(object.customerId) : "",
      query: isSet(object.query) ? globalThis.String(object.query) : "",
      batchSize: isSet(object.batchSize) ? globalThis.Number(object.batchSize) : 0,
      summaryRowSetting: isSet(object.summaryRowSetting)
        ? summaryRowSettingEnum_SummaryRowSettingFromJSON(object.summaryRowSetting)
        : 0,
    };
  },

  toJSON(message: SearchSearchAds360StreamRequest): unknown {
    const obj: any = {};
    if (message.customerId !== "") {
      obj.customerId = message.customerId;
    }
    if (message.query !== "") {
      obj.query = message.query;
    }
    if (message.batchSize !== 0) {
      obj.batchSize = Math.round(message.batchSize);
    }
    if (message.summaryRowSetting !== 0) {
      obj.summaryRowSetting = summaryRowSettingEnum_SummaryRowSettingToJSON(message.summaryRowSetting);
    }
    return obj;
  },

  create(base?: DeepPartial<SearchSearchAds360StreamRequest>): SearchSearchAds360StreamRequest {
    return SearchSearchAds360StreamRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SearchSearchAds360StreamRequest>): SearchSearchAds360StreamRequest {
    const message = createBaseSearchSearchAds360StreamRequest();
    message.customerId = object.customerId ?? "";
    message.query = object.query ?? "";
    message.batchSize = object.batchSize ?? 0;
    message.summaryRowSetting = object.summaryRowSetting ?? 0;
    return message;
  },
};

function createBaseSearchSearchAds360StreamResponse(): SearchSearchAds360StreamResponse {
  return {
    results: [],
    fieldMask: undefined,
    summaryRow: undefined,
    customColumnHeaders: [],
    conversionCustomMetricHeaders: [],
    conversionCustomDimensionHeaders: [],
    rawEventConversionMetricHeaders: [],
    rawEventConversionDimensionHeaders: [],
    requestId: "",
  };
}

export const SearchSearchAds360StreamResponse: MessageFns<SearchSearchAds360StreamResponse> = {
  encode(message: SearchSearchAds360StreamResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.results) {
      SearchAds360Row.encode(v!, writer.uint32(10).fork()).join();
    }
    if (message.fieldMask !== undefined) {
      FieldMask.encode(FieldMask.wrap(message.fieldMask), writer.uint32(18).fork()).join();
    }
    if (message.summaryRow !== undefined) {
      SearchAds360Row.encode(message.summaryRow, writer.uint32(26).fork()).join();
    }
    for (const v of message.customColumnHeaders) {
      CustomColumnHeader.encode(v!, writer.uint32(42).fork()).join();
    }
    for (const v of message.conversionCustomMetricHeaders) {
      ConversionCustomMetricHeader.encode(v!, writer.uint32(58).fork()).join();
    }
    for (const v of message.conversionCustomDimensionHeaders) {
      ConversionCustomDimensionHeader.encode(v!, writer.uint32(66).fork()).join();
    }
    for (const v of message.rawEventConversionMetricHeaders) {
      RawEventConversionMetricHeader.encode(v!, writer.uint32(74).fork()).join();
    }
    for (const v of message.rawEventConversionDimensionHeaders) {
      RawEventConversionDimensionHeader.encode(v!, writer.uint32(82).fork()).join();
    }
    if (message.requestId !== "") {
      writer.uint32(34).string(message.requestId);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SearchSearchAds360StreamResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSearchSearchAds360StreamResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.results.push(SearchAds360Row.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.fieldMask = FieldMask.unwrap(FieldMask.decode(reader, reader.uint32()));
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.summaryRow = SearchAds360Row.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.customColumnHeaders.push(CustomColumnHeader.decode(reader, reader.uint32()));
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.conversionCustomMetricHeaders.push(ConversionCustomMetricHeader.decode(reader, reader.uint32()));
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.conversionCustomDimensionHeaders.push(
            ConversionCustomDimensionHeader.decode(reader, reader.uint32()),
          );
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.rawEventConversionMetricHeaders.push(RawEventConversionMetricHeader.decode(reader, reader.uint32()));
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.rawEventConversionDimensionHeaders.push(
            RawEventConversionDimensionHeader.decode(reader, reader.uint32()),
          );
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.requestId = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SearchSearchAds360StreamResponse {
    return {
      results: globalThis.Array.isArray(object?.results)
        ? object.results.map((e: any) => SearchAds360Row.fromJSON(e))
        : [],
      fieldMask: isSet(object.fieldMask) ? FieldMask.unwrap(FieldMask.fromJSON(object.fieldMask)) : undefined,
      summaryRow: isSet(object.summaryRow) ? SearchAds360Row.fromJSON(object.summaryRow) : undefined,
      customColumnHeaders: globalThis.Array.isArray(object?.customColumnHeaders)
        ? object.customColumnHeaders.map((e: any) => CustomColumnHeader.fromJSON(e))
        : [],
      conversionCustomMetricHeaders: globalThis.Array.isArray(object?.conversionCustomMetricHeaders)
        ? object.conversionCustomMetricHeaders.map((e: any) => ConversionCustomMetricHeader.fromJSON(e))
        : [],
      conversionCustomDimensionHeaders: globalThis.Array.isArray(object?.conversionCustomDimensionHeaders)
        ? object.conversionCustomDimensionHeaders.map((e: any) => ConversionCustomDimensionHeader.fromJSON(e))
        : [],
      rawEventConversionMetricHeaders: globalThis.Array.isArray(object?.rawEventConversionMetricHeaders)
        ? object.rawEventConversionMetricHeaders.map((e: any) => RawEventConversionMetricHeader.fromJSON(e))
        : [],
      rawEventConversionDimensionHeaders: globalThis.Array.isArray(object?.rawEventConversionDimensionHeaders)
        ? object.rawEventConversionDimensionHeaders.map((e: any) => RawEventConversionDimensionHeader.fromJSON(e))
        : [],
      requestId: isSet(object.requestId) ? globalThis.String(object.requestId) : "",
    };
  },

  toJSON(message: SearchSearchAds360StreamResponse): unknown {
    const obj: any = {};
    if (message.results?.length) {
      obj.results = message.results.map((e) => SearchAds360Row.toJSON(e));
    }
    if (message.fieldMask !== undefined) {
      obj.fieldMask = FieldMask.toJSON(FieldMask.wrap(message.fieldMask));
    }
    if (message.summaryRow !== undefined) {
      obj.summaryRow = SearchAds360Row.toJSON(message.summaryRow);
    }
    if (message.customColumnHeaders?.length) {
      obj.customColumnHeaders = message.customColumnHeaders.map((e) => CustomColumnHeader.toJSON(e));
    }
    if (message.conversionCustomMetricHeaders?.length) {
      obj.conversionCustomMetricHeaders = message.conversionCustomMetricHeaders.map((e) =>
        ConversionCustomMetricHeader.toJSON(e)
      );
    }
    if (message.conversionCustomDimensionHeaders?.length) {
      obj.conversionCustomDimensionHeaders = message.conversionCustomDimensionHeaders.map((e) =>
        ConversionCustomDimensionHeader.toJSON(e)
      );
    }
    if (message.rawEventConversionMetricHeaders?.length) {
      obj.rawEventConversionMetricHeaders = message.rawEventConversionMetricHeaders.map((e) =>
        RawEventConversionMetricHeader.toJSON(e)
      );
    }
    if (message.rawEventConversionDimensionHeaders?.length) {
      obj.rawEventConversionDimensionHeaders = message.rawEventConversionDimensionHeaders.map((e) =>
        RawEventConversionDimensionHeader.toJSON(e)
      );
    }
    if (message.requestId !== "") {
      obj.requestId = message.requestId;
    }
    return obj;
  },

  create(base?: DeepPartial<SearchSearchAds360StreamResponse>): SearchSearchAds360StreamResponse {
    return SearchSearchAds360StreamResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SearchSearchAds360StreamResponse>): SearchSearchAds360StreamResponse {
    const message = createBaseSearchSearchAds360StreamResponse();
    message.results = object.results?.map((e) => SearchAds360Row.fromPartial(e)) || [];
    message.fieldMask = object.fieldMask ?? undefined;
    message.summaryRow = (object.summaryRow !== undefined && object.summaryRow !== null)
      ? SearchAds360Row.fromPartial(object.summaryRow)
      : undefined;
    message.customColumnHeaders = object.customColumnHeaders?.map((e) => CustomColumnHeader.fromPartial(e)) || [];
    message.conversionCustomMetricHeaders =
      object.conversionCustomMetricHeaders?.map((e) => ConversionCustomMetricHeader.fromPartial(e)) || [];
    message.conversionCustomDimensionHeaders =
      object.conversionCustomDimensionHeaders?.map((e) => ConversionCustomDimensionHeader.fromPartial(e)) || [];
    message.rawEventConversionMetricHeaders =
      object.rawEventConversionMetricHeaders?.map((e) => RawEventConversionMetricHeader.fromPartial(e)) || [];
    message.rawEventConversionDimensionHeaders =
      object.rawEventConversionDimensionHeaders?.map((e) => RawEventConversionDimensionHeader.fromPartial(e)) || [];
    message.requestId = object.requestId ?? "";
    return message;
  },
};

function createBaseSearchAds360Row(): SearchAds360Row {
  return {
    adGroup: undefined,
    adGroupAd: undefined,
    adGroupAdLabel: undefined,
    adGroupAsset: undefined,
    adGroupAssetSet: undefined,
    adGroupAudienceView: undefined,
    adGroupBidModifier: undefined,
    adGroupCriterion: undefined,
    adGroupCriterionLabel: undefined,
    adGroupLabel: undefined,
    ageRangeView: undefined,
    asset: undefined,
    assetGroupAsset: undefined,
    assetGroupSignal: undefined,
    assetGroupListingGroupFilter: undefined,
    assetGroupTopCombinationView: undefined,
    assetGroup: undefined,
    assetSetAsset: undefined,
    assetSet: undefined,
    biddingStrategy: undefined,
    campaignBudget: undefined,
    campaign: undefined,
    campaignAsset: undefined,
    campaignAssetSet: undefined,
    campaignAudienceView: undefined,
    campaignCriterion: undefined,
    campaignLabel: undefined,
    cartDataSalesView: undefined,
    audience: undefined,
    conversionAction: undefined,
    conversionCustomVariable: undefined,
    customer: undefined,
    customerAsset: undefined,
    customerAssetSet: undefined,
    accessibleBiddingStrategy: undefined,
    customerManagerLink: undefined,
    customerClient: undefined,
    dynamicSearchAdsSearchTermView: undefined,
    genderView: undefined,
    geoTargetConstant: undefined,
    keywordView: undefined,
    label: undefined,
    languageConstant: undefined,
    locationView: undefined,
    productBiddingCategoryConstant: undefined,
    productGroupView: undefined,
    shoppingPerformanceView: undefined,
    userList: undefined,
    webpageView: undefined,
    visit: undefined,
    conversion: undefined,
    metrics: undefined,
    segments: undefined,
    customColumns: [],
  };
}

export const SearchAds360Row: MessageFns<SearchAds360Row> = {
  encode(message: SearchAds360Row, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.adGroup !== undefined) {
      AdGroup.encode(message.adGroup, writer.uint32(26).fork()).join();
    }
    if (message.adGroupAd !== undefined) {
      AdGroupAd.encode(message.adGroupAd, writer.uint32(130).fork()).join();
    }
    if (message.adGroupAdLabel !== undefined) {
      AdGroupAdLabel.encode(message.adGroupAdLabel, writer.uint32(962).fork()).join();
    }
    if (message.adGroupAsset !== undefined) {
      AdGroupAsset.encode(message.adGroupAsset, writer.uint32(1234).fork()).join();
    }
    if (message.adGroupAssetSet !== undefined) {
      AdGroupAssetSet.encode(message.adGroupAssetSet, writer.uint32(1570).fork()).join();
    }
    if (message.adGroupAudienceView !== undefined) {
      AdGroupAudienceView.encode(message.adGroupAudienceView, writer.uint32(458).fork()).join();
    }
    if (message.adGroupBidModifier !== undefined) {
      AdGroupBidModifier.encode(message.adGroupBidModifier, writer.uint32(194).fork()).join();
    }
    if (message.adGroupCriterion !== undefined) {
      AdGroupCriterion.encode(message.adGroupCriterion, writer.uint32(138).fork()).join();
    }
    if (message.adGroupCriterionLabel !== undefined) {
      AdGroupCriterionLabel.encode(message.adGroupCriterionLabel, writer.uint32(970).fork()).join();
    }
    if (message.adGroupLabel !== undefined) {
      AdGroupLabel.encode(message.adGroupLabel, writer.uint32(922).fork()).join();
    }
    if (message.ageRangeView !== undefined) {
      AgeRangeView.encode(message.ageRangeView, writer.uint32(386).fork()).join();
    }
    if (message.asset !== undefined) {
      Asset.encode(message.asset, writer.uint32(842).fork()).join();
    }
    if (message.assetGroupAsset !== undefined) {
      AssetGroupAsset.encode(message.assetGroupAsset, writer.uint32(1386).fork()).join();
    }
    if (message.assetGroupSignal !== undefined) {
      AssetGroupSignal.encode(message.assetGroupSignal, writer.uint32(1530).fork()).join();
    }
    if (message.assetGroupListingGroupFilter !== undefined) {
      AssetGroupListingGroupFilter.encode(message.assetGroupListingGroupFilter, writer.uint32(1458).fork()).join();
    }
    if (message.assetGroupTopCombinationView !== undefined) {
      AssetGroupTopCombinationView.encode(message.assetGroupTopCombinationView, writer.uint32(1594).fork()).join();
    }
    if (message.assetGroup !== undefined) {
      AssetGroup.encode(message.assetGroup, writer.uint32(1378).fork()).join();
    }
    if (message.assetSetAsset !== undefined) {
      AssetSetAsset.encode(message.assetSetAsset, writer.uint32(1442).fork()).join();
    }
    if (message.assetSet !== undefined) {
      AssetSet.encode(message.assetSet, writer.uint32(1434).fork()).join();
    }
    if (message.biddingStrategy !== undefined) {
      BiddingStrategy.encode(message.biddingStrategy, writer.uint32(146).fork()).join();
    }
    if (message.campaignBudget !== undefined) {
      CampaignBudget.encode(message.campaignBudget, writer.uint32(154).fork()).join();
    }
    if (message.campaign !== undefined) {
      Campaign.encode(message.campaign, writer.uint32(18).fork()).join();
    }
    if (message.campaignAsset !== undefined) {
      CampaignAsset.encode(message.campaignAsset, writer.uint32(1138).fork()).join();
    }
    if (message.campaignAssetSet !== undefined) {
      CampaignAssetSet.encode(message.campaignAssetSet, writer.uint32(1450).fork()).join();
    }
    if (message.campaignAudienceView !== undefined) {
      CampaignAudienceView.encode(message.campaignAudienceView, writer.uint32(554).fork()).join();
    }
    if (message.campaignCriterion !== undefined) {
      CampaignCriterion.encode(message.campaignCriterion, writer.uint32(162).fork()).join();
    }
    if (message.campaignLabel !== undefined) {
      CampaignLabel.encode(message.campaignLabel, writer.uint32(866).fork()).join();
    }
    if (message.cartDataSalesView !== undefined) {
      CartDataSalesView.encode(message.cartDataSalesView, writer.uint32(1770).fork()).join();
    }
    if (message.audience !== undefined) {
      Audience.encode(message.audience, writer.uint32(1522).fork()).join();
    }
    if (message.conversionAction !== undefined) {
      ConversionAction.encode(message.conversionAction, writer.uint32(826).fork()).join();
    }
    if (message.conversionCustomVariable !== undefined) {
      ConversionCustomVariable.encode(message.conversionCustomVariable, writer.uint32(1226).fork()).join();
    }
    if (message.customer !== undefined) {
      Customer.encode(message.customer, writer.uint32(10).fork()).join();
    }
    if (message.customerAsset !== undefined) {
      CustomerAsset.encode(message.customerAsset, writer.uint32(1242).fork()).join();
    }
    if (message.customerAssetSet !== undefined) {
      CustomerAssetSet.encode(message.customerAssetSet, writer.uint32(1562).fork()).join();
    }
    if (message.accessibleBiddingStrategy !== undefined) {
      AccessibleBiddingStrategy.encode(message.accessibleBiddingStrategy, writer.uint32(1354).fork()).join();
    }
    if (message.customerManagerLink !== undefined) {
      CustomerManagerLink.encode(message.customerManagerLink, writer.uint32(490).fork()).join();
    }
    if (message.customerClient !== undefined) {
      CustomerClient.encode(message.customerClient, writer.uint32(562).fork()).join();
    }
    if (message.dynamicSearchAdsSearchTermView !== undefined) {
      DynamicSearchAdsSearchTermView.encode(message.dynamicSearchAdsSearchTermView, writer.uint32(850).fork()).join();
    }
    if (message.genderView !== undefined) {
      GenderView.encode(message.genderView, writer.uint32(322).fork()).join();
    }
    if (message.geoTargetConstant !== undefined) {
      GeoTargetConstant.encode(message.geoTargetConstant, writer.uint32(186).fork()).join();
    }
    if (message.keywordView !== undefined) {
      KeywordView.encode(message.keywordView, writer.uint32(170).fork()).join();
    }
    if (message.label !== undefined) {
      Label.encode(message.label, writer.uint32(418).fork()).join();
    }
    if (message.languageConstant !== undefined) {
      LanguageConstant.encode(message.languageConstant, writer.uint32(442).fork()).join();
    }
    if (message.locationView !== undefined) {
      LocationView.encode(message.locationView, writer.uint32(986).fork()).join();
    }
    if (message.productBiddingCategoryConstant !== undefined) {
      ProductBiddingCategoryConstant.encode(message.productBiddingCategoryConstant, writer.uint32(874).fork()).join();
    }
    if (message.productGroupView !== undefined) {
      ProductGroupView.encode(message.productGroupView, writer.uint32(434).fork()).join();
    }
    if (message.shoppingPerformanceView !== undefined) {
      ShoppingPerformanceView.encode(message.shoppingPerformanceView, writer.uint32(938).fork()).join();
    }
    if (message.userList !== undefined) {
      UserList.encode(message.userList, writer.uint32(306).fork()).join();
    }
    if (message.webpageView !== undefined) {
      WebpageView.encode(message.webpageView, writer.uint32(1298).fork()).join();
    }
    if (message.visit !== undefined) {
      Visit.encode(message.visit, writer.uint32(1626).fork()).join();
    }
    if (message.conversion !== undefined) {
      Conversion.encode(message.conversion, writer.uint32(1650).fork()).join();
    }
    if (message.metrics !== undefined) {
      Metrics.encode(message.metrics, writer.uint32(34).fork()).join();
    }
    if (message.segments !== undefined) {
      Segments.encode(message.segments, writer.uint32(818).fork()).join();
    }
    for (const v of message.customColumns) {
      Value.encode(v!, writer.uint32(1250).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SearchAds360Row {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSearchAds360Row();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 3:
          if (tag !== 26) {
            break;
          }

          message.adGroup = AdGroup.decode(reader, reader.uint32());
          continue;
        case 16:
          if (tag !== 130) {
            break;
          }

          message.adGroupAd = AdGroupAd.decode(reader, reader.uint32());
          continue;
        case 120:
          if (tag !== 962) {
            break;
          }

          message.adGroupAdLabel = AdGroupAdLabel.decode(reader, reader.uint32());
          continue;
        case 154:
          if (tag !== 1234) {
            break;
          }

          message.adGroupAsset = AdGroupAsset.decode(reader, reader.uint32());
          continue;
        case 196:
          if (tag !== 1570) {
            break;
          }

          message.adGroupAssetSet = AdGroupAssetSet.decode(reader, reader.uint32());
          continue;
        case 57:
          if (tag !== 458) {
            break;
          }

          message.adGroupAudienceView = AdGroupAudienceView.decode(reader, reader.uint32());
          continue;
        case 24:
          if (tag !== 194) {
            break;
          }

          message.adGroupBidModifier = AdGroupBidModifier.decode(reader, reader.uint32());
          continue;
        case 17:
          if (tag !== 138) {
            break;
          }

          message.adGroupCriterion = AdGroupCriterion.decode(reader, reader.uint32());
          continue;
        case 121:
          if (tag !== 970) {
            break;
          }

          message.adGroupCriterionLabel = AdGroupCriterionLabel.decode(reader, reader.uint32());
          continue;
        case 115:
          if (tag !== 922) {
            break;
          }

          message.adGroupLabel = AdGroupLabel.decode(reader, reader.uint32());
          continue;
        case 48:
          if (tag !== 386) {
            break;
          }

          message.ageRangeView = AgeRangeView.decode(reader, reader.uint32());
          continue;
        case 105:
          if (tag !== 842) {
            break;
          }

          message.asset = Asset.decode(reader, reader.uint32());
          continue;
        case 173:
          if (tag !== 1386) {
            break;
          }

          message.assetGroupAsset = AssetGroupAsset.decode(reader, reader.uint32());
          continue;
        case 191:
          if (tag !== 1530) {
            break;
          }

          message.assetGroupSignal = AssetGroupSignal.decode(reader, reader.uint32());
          continue;
        case 182:
          if (tag !== 1458) {
            break;
          }

          message.assetGroupListingGroupFilter = AssetGroupListingGroupFilter.decode(reader, reader.uint32());
          continue;
        case 199:
          if (tag !== 1594) {
            break;
          }

          message.assetGroupTopCombinationView = AssetGroupTopCombinationView.decode(reader, reader.uint32());
          continue;
        case 172:
          if (tag !== 1378) {
            break;
          }

          message.assetGroup = AssetGroup.decode(reader, reader.uint32());
          continue;
        case 180:
          if (tag !== 1442) {
            break;
          }

          message.assetSetAsset = AssetSetAsset.decode(reader, reader.uint32());
          continue;
        case 179:
          if (tag !== 1434) {
            break;
          }

          message.assetSet = AssetSet.decode(reader, reader.uint32());
          continue;
        case 18:
          if (tag !== 146) {
            break;
          }

          message.biddingStrategy = BiddingStrategy.decode(reader, reader.uint32());
          continue;
        case 19:
          if (tag !== 154) {
            break;
          }

          message.campaignBudget = CampaignBudget.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.campaign = Campaign.decode(reader, reader.uint32());
          continue;
        case 142:
          if (tag !== 1138) {
            break;
          }

          message.campaignAsset = CampaignAsset.decode(reader, reader.uint32());
          continue;
        case 181:
          if (tag !== 1450) {
            break;
          }

          message.campaignAssetSet = CampaignAssetSet.decode(reader, reader.uint32());
          continue;
        case 69:
          if (tag !== 554) {
            break;
          }

          message.campaignAudienceView = CampaignAudienceView.decode(reader, reader.uint32());
          continue;
        case 20:
          if (tag !== 162) {
            break;
          }

          message.campaignCriterion = CampaignCriterion.decode(reader, reader.uint32());
          continue;
        case 108:
          if (tag !== 866) {
            break;
          }

          message.campaignLabel = CampaignLabel.decode(reader, reader.uint32());
          continue;
        case 221:
          if (tag !== 1770) {
            break;
          }

          message.cartDataSalesView = CartDataSalesView.decode(reader, reader.uint32());
          continue;
        case 190:
          if (tag !== 1522) {
            break;
          }

          message.audience = Audience.decode(reader, reader.uint32());
          continue;
        case 103:
          if (tag !== 826) {
            break;
          }

          message.conversionAction = ConversionAction.decode(reader, reader.uint32());
          continue;
        case 153:
          if (tag !== 1226) {
            break;
          }

          message.conversionCustomVariable = ConversionCustomVariable.decode(reader, reader.uint32());
          continue;
        case 1:
          if (tag !== 10) {
            break;
          }

          message.customer = Customer.decode(reader, reader.uint32());
          continue;
        case 155:
          if (tag !== 1242) {
            break;
          }

          message.customerAsset = CustomerAsset.decode(reader, reader.uint32());
          continue;
        case 195:
          if (tag !== 1562) {
            break;
          }

          message.customerAssetSet = CustomerAssetSet.decode(reader, reader.uint32());
          continue;
        case 169:
          if (tag !== 1354) {
            break;
          }

          message.accessibleBiddingStrategy = AccessibleBiddingStrategy.decode(reader, reader.uint32());
          continue;
        case 61:
          if (tag !== 490) {
            break;
          }

          message.customerManagerLink = CustomerManagerLink.decode(reader, reader.uint32());
          continue;
        case 70:
          if (tag !== 562) {
            break;
          }

          message.customerClient = CustomerClient.decode(reader, reader.uint32());
          continue;
        case 106:
          if (tag !== 850) {
            break;
          }

          message.dynamicSearchAdsSearchTermView = DynamicSearchAdsSearchTermView.decode(reader, reader.uint32());
          continue;
        case 40:
          if (tag !== 322) {
            break;
          }

          message.genderView = GenderView.decode(reader, reader.uint32());
          continue;
        case 23:
          if (tag !== 186) {
            break;
          }

          message.geoTargetConstant = GeoTargetConstant.decode(reader, reader.uint32());
          continue;
        case 21:
          if (tag !== 170) {
            break;
          }

          message.keywordView = KeywordView.decode(reader, reader.uint32());
          continue;
        case 52:
          if (tag !== 418) {
            break;
          }

          message.label = Label.decode(reader, reader.uint32());
          continue;
        case 55:
          if (tag !== 442) {
            break;
          }

          message.languageConstant = LanguageConstant.decode(reader, reader.uint32());
          continue;
        case 123:
          if (tag !== 986) {
            break;
          }

          message.locationView = LocationView.decode(reader, reader.uint32());
          continue;
        case 109:
          if (tag !== 874) {
            break;
          }

          message.productBiddingCategoryConstant = ProductBiddingCategoryConstant.decode(reader, reader.uint32());
          continue;
        case 54:
          if (tag !== 434) {
            break;
          }

          message.productGroupView = ProductGroupView.decode(reader, reader.uint32());
          continue;
        case 117:
          if (tag !== 938) {
            break;
          }

          message.shoppingPerformanceView = ShoppingPerformanceView.decode(reader, reader.uint32());
          continue;
        case 38:
          if (tag !== 306) {
            break;
          }

          message.userList = UserList.decode(reader, reader.uint32());
          continue;
        case 162:
          if (tag !== 1298) {
            break;
          }

          message.webpageView = WebpageView.decode(reader, reader.uint32());
          continue;
        case 203:
          if (tag !== 1626) {
            break;
          }

          message.visit = Visit.decode(reader, reader.uint32());
          continue;
        case 206:
          if (tag !== 1650) {
            break;
          }

          message.conversion = Conversion.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.metrics = Metrics.decode(reader, reader.uint32());
          continue;
        case 102:
          if (tag !== 818) {
            break;
          }

          message.segments = Segments.decode(reader, reader.uint32());
          continue;
        case 156:
          if (tag !== 1250) {
            break;
          }

          message.customColumns.push(Value.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SearchAds360Row {
    return {
      adGroup: isSet(object.adGroup) ? AdGroup.fromJSON(object.adGroup) : undefined,
      adGroupAd: isSet(object.adGroupAd) ? AdGroupAd.fromJSON(object.adGroupAd) : undefined,
      adGroupAdLabel: isSet(object.adGroupAdLabel) ? AdGroupAdLabel.fromJSON(object.adGroupAdLabel) : undefined,
      adGroupAsset: isSet(object.adGroupAsset) ? AdGroupAsset.fromJSON(object.adGroupAsset) : undefined,
      adGroupAssetSet: isSet(object.adGroupAssetSet) ? AdGroupAssetSet.fromJSON(object.adGroupAssetSet) : undefined,
      adGroupAudienceView: isSet(object.adGroupAudienceView)
        ? AdGroupAudienceView.fromJSON(object.adGroupAudienceView)
        : undefined,
      adGroupBidModifier: isSet(object.adGroupBidModifier)
        ? AdGroupBidModifier.fromJSON(object.adGroupBidModifier)
        : undefined,
      adGroupCriterion: isSet(object.adGroupCriterion) ? AdGroupCriterion.fromJSON(object.adGroupCriterion) : undefined,
      adGroupCriterionLabel: isSet(object.adGroupCriterionLabel)
        ? AdGroupCriterionLabel.fromJSON(object.adGroupCriterionLabel)
        : undefined,
      adGroupLabel: isSet(object.adGroupLabel) ? AdGroupLabel.fromJSON(object.adGroupLabel) : undefined,
      ageRangeView: isSet(object.ageRangeView) ? AgeRangeView.fromJSON(object.ageRangeView) : undefined,
      asset: isSet(object.asset) ? Asset.fromJSON(object.asset) : undefined,
      assetGroupAsset: isSet(object.assetGroupAsset) ? AssetGroupAsset.fromJSON(object.assetGroupAsset) : undefined,
      assetGroupSignal: isSet(object.assetGroupSignal) ? AssetGroupSignal.fromJSON(object.assetGroupSignal) : undefined,
      assetGroupListingGroupFilter: isSet(object.assetGroupListingGroupFilter)
        ? AssetGroupListingGroupFilter.fromJSON(object.assetGroupListingGroupFilter)
        : undefined,
      assetGroupTopCombinationView: isSet(object.assetGroupTopCombinationView)
        ? AssetGroupTopCombinationView.fromJSON(object.assetGroupTopCombinationView)
        : undefined,
      assetGroup: isSet(object.assetGroup) ? AssetGroup.fromJSON(object.assetGroup) : undefined,
      assetSetAsset: isSet(object.assetSetAsset) ? AssetSetAsset.fromJSON(object.assetSetAsset) : undefined,
      assetSet: isSet(object.assetSet) ? AssetSet.fromJSON(object.assetSet) : undefined,
      biddingStrategy: isSet(object.biddingStrategy) ? BiddingStrategy.fromJSON(object.biddingStrategy) : undefined,
      campaignBudget: isSet(object.campaignBudget) ? CampaignBudget.fromJSON(object.campaignBudget) : undefined,
      campaign: isSet(object.campaign) ? Campaign.fromJSON(object.campaign) : undefined,
      campaignAsset: isSet(object.campaignAsset) ? CampaignAsset.fromJSON(object.campaignAsset) : undefined,
      campaignAssetSet: isSet(object.campaignAssetSet) ? CampaignAssetSet.fromJSON(object.campaignAssetSet) : undefined,
      campaignAudienceView: isSet(object.campaignAudienceView)
        ? CampaignAudienceView.fromJSON(object.campaignAudienceView)
        : undefined,
      campaignCriterion: isSet(object.campaignCriterion)
        ? CampaignCriterion.fromJSON(object.campaignCriterion)
        : undefined,
      campaignLabel: isSet(object.campaignLabel) ? CampaignLabel.fromJSON(object.campaignLabel) : undefined,
      cartDataSalesView: isSet(object.cartDataSalesView)
        ? CartDataSalesView.fromJSON(object.cartDataSalesView)
        : undefined,
      audience: isSet(object.audience) ? Audience.fromJSON(object.audience) : undefined,
      conversionAction: isSet(object.conversionAction) ? ConversionAction.fromJSON(object.conversionAction) : undefined,
      conversionCustomVariable: isSet(object.conversionCustomVariable)
        ? ConversionCustomVariable.fromJSON(object.conversionCustomVariable)
        : undefined,
      customer: isSet(object.customer) ? Customer.fromJSON(object.customer) : undefined,
      customerAsset: isSet(object.customerAsset) ? CustomerAsset.fromJSON(object.customerAsset) : undefined,
      customerAssetSet: isSet(object.customerAssetSet) ? CustomerAssetSet.fromJSON(object.customerAssetSet) : undefined,
      accessibleBiddingStrategy: isSet(object.accessibleBiddingStrategy)
        ? AccessibleBiddingStrategy.fromJSON(object.accessibleBiddingStrategy)
        : undefined,
      customerManagerLink: isSet(object.customerManagerLink)
        ? CustomerManagerLink.fromJSON(object.customerManagerLink)
        : undefined,
      customerClient: isSet(object.customerClient) ? CustomerClient.fromJSON(object.customerClient) : undefined,
      dynamicSearchAdsSearchTermView: isSet(object.dynamicSearchAdsSearchTermView)
        ? DynamicSearchAdsSearchTermView.fromJSON(object.dynamicSearchAdsSearchTermView)
        : undefined,
      genderView: isSet(object.genderView) ? GenderView.fromJSON(object.genderView) : undefined,
      geoTargetConstant: isSet(object.geoTargetConstant)
        ? GeoTargetConstant.fromJSON(object.geoTargetConstant)
        : undefined,
      keywordView: isSet(object.keywordView) ? KeywordView.fromJSON(object.keywordView) : undefined,
      label: isSet(object.label) ? Label.fromJSON(object.label) : undefined,
      languageConstant: isSet(object.languageConstant) ? LanguageConstant.fromJSON(object.languageConstant) : undefined,
      locationView: isSet(object.locationView) ? LocationView.fromJSON(object.locationView) : undefined,
      productBiddingCategoryConstant: isSet(object.productBiddingCategoryConstant)
        ? ProductBiddingCategoryConstant.fromJSON(object.productBiddingCategoryConstant)
        : undefined,
      productGroupView: isSet(object.productGroupView) ? ProductGroupView.fromJSON(object.productGroupView) : undefined,
      shoppingPerformanceView: isSet(object.shoppingPerformanceView)
        ? ShoppingPerformanceView.fromJSON(object.shoppingPerformanceView)
        : undefined,
      userList: isSet(object.userList) ? UserList.fromJSON(object.userList) : undefined,
      webpageView: isSet(object.webpageView) ? WebpageView.fromJSON(object.webpageView) : undefined,
      visit: isSet(object.visit) ? Visit.fromJSON(object.visit) : undefined,
      conversion: isSet(object.conversion) ? Conversion.fromJSON(object.conversion) : undefined,
      metrics: isSet(object.metrics) ? Metrics.fromJSON(object.metrics) : undefined,
      segments: isSet(object.segments) ? Segments.fromJSON(object.segments) : undefined,
      customColumns: globalThis.Array.isArray(object?.customColumns)
        ? object.customColumns.map((e: any) => Value.fromJSON(e))
        : [],
    };
  },

  toJSON(message: SearchAds360Row): unknown {
    const obj: any = {};
    if (message.adGroup !== undefined) {
      obj.adGroup = AdGroup.toJSON(message.adGroup);
    }
    if (message.adGroupAd !== undefined) {
      obj.adGroupAd = AdGroupAd.toJSON(message.adGroupAd);
    }
    if (message.adGroupAdLabel !== undefined) {
      obj.adGroupAdLabel = AdGroupAdLabel.toJSON(message.adGroupAdLabel);
    }
    if (message.adGroupAsset !== undefined) {
      obj.adGroupAsset = AdGroupAsset.toJSON(message.adGroupAsset);
    }
    if (message.adGroupAssetSet !== undefined) {
      obj.adGroupAssetSet = AdGroupAssetSet.toJSON(message.adGroupAssetSet);
    }
    if (message.adGroupAudienceView !== undefined) {
      obj.adGroupAudienceView = AdGroupAudienceView.toJSON(message.adGroupAudienceView);
    }
    if (message.adGroupBidModifier !== undefined) {
      obj.adGroupBidModifier = AdGroupBidModifier.toJSON(message.adGroupBidModifier);
    }
    if (message.adGroupCriterion !== undefined) {
      obj.adGroupCriterion = AdGroupCriterion.toJSON(message.adGroupCriterion);
    }
    if (message.adGroupCriterionLabel !== undefined) {
      obj.adGroupCriterionLabel = AdGroupCriterionLabel.toJSON(message.adGroupCriterionLabel);
    }
    if (message.adGroupLabel !== undefined) {
      obj.adGroupLabel = AdGroupLabel.toJSON(message.adGroupLabel);
    }
    if (message.ageRangeView !== undefined) {
      obj.ageRangeView = AgeRangeView.toJSON(message.ageRangeView);
    }
    if (message.asset !== undefined) {
      obj.asset = Asset.toJSON(message.asset);
    }
    if (message.assetGroupAsset !== undefined) {
      obj.assetGroupAsset = AssetGroupAsset.toJSON(message.assetGroupAsset);
    }
    if (message.assetGroupSignal !== undefined) {
      obj.assetGroupSignal = AssetGroupSignal.toJSON(message.assetGroupSignal);
    }
    if (message.assetGroupListingGroupFilter !== undefined) {
      obj.assetGroupListingGroupFilter = AssetGroupListingGroupFilter.toJSON(message.assetGroupListingGroupFilter);
    }
    if (message.assetGroupTopCombinationView !== undefined) {
      obj.assetGroupTopCombinationView = AssetGroupTopCombinationView.toJSON(message.assetGroupTopCombinationView);
    }
    if (message.assetGroup !== undefined) {
      obj.assetGroup = AssetGroup.toJSON(message.assetGroup);
    }
    if (message.assetSetAsset !== undefined) {
      obj.assetSetAsset = AssetSetAsset.toJSON(message.assetSetAsset);
    }
    if (message.assetSet !== undefined) {
      obj.assetSet = AssetSet.toJSON(message.assetSet);
    }
    if (message.biddingStrategy !== undefined) {
      obj.biddingStrategy = BiddingStrategy.toJSON(message.biddingStrategy);
    }
    if (message.campaignBudget !== undefined) {
      obj.campaignBudget = CampaignBudget.toJSON(message.campaignBudget);
    }
    if (message.campaign !== undefined) {
      obj.campaign = Campaign.toJSON(message.campaign);
    }
    if (message.campaignAsset !== undefined) {
      obj.campaignAsset = CampaignAsset.toJSON(message.campaignAsset);
    }
    if (message.campaignAssetSet !== undefined) {
      obj.campaignAssetSet = CampaignAssetSet.toJSON(message.campaignAssetSet);
    }
    if (message.campaignAudienceView !== undefined) {
      obj.campaignAudienceView = CampaignAudienceView.toJSON(message.campaignAudienceView);
    }
    if (message.campaignCriterion !== undefined) {
      obj.campaignCriterion = CampaignCriterion.toJSON(message.campaignCriterion);
    }
    if (message.campaignLabel !== undefined) {
      obj.campaignLabel = CampaignLabel.toJSON(message.campaignLabel);
    }
    if (message.cartDataSalesView !== undefined) {
      obj.cartDataSalesView = CartDataSalesView.toJSON(message.cartDataSalesView);
    }
    if (message.audience !== undefined) {
      obj.audience = Audience.toJSON(message.audience);
    }
    if (message.conversionAction !== undefined) {
      obj.conversionAction = ConversionAction.toJSON(message.conversionAction);
    }
    if (message.conversionCustomVariable !== undefined) {
      obj.conversionCustomVariable = ConversionCustomVariable.toJSON(message.conversionCustomVariable);
    }
    if (message.customer !== undefined) {
      obj.customer = Customer.toJSON(message.customer);
    }
    if (message.customerAsset !== undefined) {
      obj.customerAsset = CustomerAsset.toJSON(message.customerAsset);
    }
    if (message.customerAssetSet !== undefined) {
      obj.customerAssetSet = CustomerAssetSet.toJSON(message.customerAssetSet);
    }
    if (message.accessibleBiddingStrategy !== undefined) {
      obj.accessibleBiddingStrategy = AccessibleBiddingStrategy.toJSON(message.accessibleBiddingStrategy);
    }
    if (message.customerManagerLink !== undefined) {
      obj.customerManagerLink = CustomerManagerLink.toJSON(message.customerManagerLink);
    }
    if (message.customerClient !== undefined) {
      obj.customerClient = CustomerClient.toJSON(message.customerClient);
    }
    if (message.dynamicSearchAdsSearchTermView !== undefined) {
      obj.dynamicSearchAdsSearchTermView = DynamicSearchAdsSearchTermView.toJSON(
        message.dynamicSearchAdsSearchTermView,
      );
    }
    if (message.genderView !== undefined) {
      obj.genderView = GenderView.toJSON(message.genderView);
    }
    if (message.geoTargetConstant !== undefined) {
      obj.geoTargetConstant = GeoTargetConstant.toJSON(message.geoTargetConstant);
    }
    if (message.keywordView !== undefined) {
      obj.keywordView = KeywordView.toJSON(message.keywordView);
    }
    if (message.label !== undefined) {
      obj.label = Label.toJSON(message.label);
    }
    if (message.languageConstant !== undefined) {
      obj.languageConstant = LanguageConstant.toJSON(message.languageConstant);
    }
    if (message.locationView !== undefined) {
      obj.locationView = LocationView.toJSON(message.locationView);
    }
    if (message.productBiddingCategoryConstant !== undefined) {
      obj.productBiddingCategoryConstant = ProductBiddingCategoryConstant.toJSON(
        message.productBiddingCategoryConstant,
      );
    }
    if (message.productGroupView !== undefined) {
      obj.productGroupView = ProductGroupView.toJSON(message.productGroupView);
    }
    if (message.shoppingPerformanceView !== undefined) {
      obj.shoppingPerformanceView = ShoppingPerformanceView.toJSON(message.shoppingPerformanceView);
    }
    if (message.userList !== undefined) {
      obj.userList = UserList.toJSON(message.userList);
    }
    if (message.webpageView !== undefined) {
      obj.webpageView = WebpageView.toJSON(message.webpageView);
    }
    if (message.visit !== undefined) {
      obj.visit = Visit.toJSON(message.visit);
    }
    if (message.conversion !== undefined) {
      obj.conversion = Conversion.toJSON(message.conversion);
    }
    if (message.metrics !== undefined) {
      obj.metrics = Metrics.toJSON(message.metrics);
    }
    if (message.segments !== undefined) {
      obj.segments = Segments.toJSON(message.segments);
    }
    if (message.customColumns?.length) {
      obj.customColumns = message.customColumns.map((e) => Value.toJSON(e));
    }
    return obj;
  },

  create(base?: DeepPartial<SearchAds360Row>): SearchAds360Row {
    return SearchAds360Row.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SearchAds360Row>): SearchAds360Row {
    const message = createBaseSearchAds360Row();
    message.adGroup = (object.adGroup !== undefined && object.adGroup !== null)
      ? AdGroup.fromPartial(object.adGroup)
      : undefined;
    message.adGroupAd = (object.adGroupAd !== undefined && object.adGroupAd !== null)
      ? AdGroupAd.fromPartial(object.adGroupAd)
      : undefined;
    message.adGroupAdLabel = (object.adGroupAdLabel !== undefined && object.adGroupAdLabel !== null)
      ? AdGroupAdLabel.fromPartial(object.adGroupAdLabel)
      : undefined;
    message.adGroupAsset = (object.adGroupAsset !== undefined && object.adGroupAsset !== null)
      ? AdGroupAsset.fromPartial(object.adGroupAsset)
      : undefined;
    message.adGroupAssetSet = (object.adGroupAssetSet !== undefined && object.adGroupAssetSet !== null)
      ? AdGroupAssetSet.fromPartial(object.adGroupAssetSet)
      : undefined;
    message.adGroupAudienceView = (object.adGroupAudienceView !== undefined && object.adGroupAudienceView !== null)
      ? AdGroupAudienceView.fromPartial(object.adGroupAudienceView)
      : undefined;
    message.adGroupBidModifier = (object.adGroupBidModifier !== undefined && object.adGroupBidModifier !== null)
      ? AdGroupBidModifier.fromPartial(object.adGroupBidModifier)
      : undefined;
    message.adGroupCriterion = (object.adGroupCriterion !== undefined && object.adGroupCriterion !== null)
      ? AdGroupCriterion.fromPartial(object.adGroupCriterion)
      : undefined;
    message.adGroupCriterionLabel =
      (object.adGroupCriterionLabel !== undefined && object.adGroupCriterionLabel !== null)
        ? AdGroupCriterionLabel.fromPartial(object.adGroupCriterionLabel)
        : undefined;
    message.adGroupLabel = (object.adGroupLabel !== undefined && object.adGroupLabel !== null)
      ? AdGroupLabel.fromPartial(object.adGroupLabel)
      : undefined;
    message.ageRangeView = (object.ageRangeView !== undefined && object.ageRangeView !== null)
      ? AgeRangeView.fromPartial(object.ageRangeView)
      : undefined;
    message.asset = (object.asset !== undefined && object.asset !== null) ? Asset.fromPartial(object.asset) : undefined;
    message.assetGroupAsset = (object.assetGroupAsset !== undefined && object.assetGroupAsset !== null)
      ? AssetGroupAsset.fromPartial(object.assetGroupAsset)
      : undefined;
    message.assetGroupSignal = (object.assetGroupSignal !== undefined && object.assetGroupSignal !== null)
      ? AssetGroupSignal.fromPartial(object.assetGroupSignal)
      : undefined;
    message.assetGroupListingGroupFilter =
      (object.assetGroupListingGroupFilter !== undefined && object.assetGroupListingGroupFilter !== null)
        ? AssetGroupListingGroupFilter.fromPartial(object.assetGroupListingGroupFilter)
        : undefined;
    message.assetGroupTopCombinationView =
      (object.assetGroupTopCombinationView !== undefined && object.assetGroupTopCombinationView !== null)
        ? AssetGroupTopCombinationView.fromPartial(object.assetGroupTopCombinationView)
        : undefined;
    message.assetGroup = (object.assetGroup !== undefined && object.assetGroup !== null)
      ? AssetGroup.fromPartial(object.assetGroup)
      : undefined;
    message.assetSetAsset = (object.assetSetAsset !== undefined && object.assetSetAsset !== null)
      ? AssetSetAsset.fromPartial(object.assetSetAsset)
      : undefined;
    message.assetSet = (object.assetSet !== undefined && object.assetSet !== null)
      ? AssetSet.fromPartial(object.assetSet)
      : undefined;
    message.biddingStrategy = (object.biddingStrategy !== undefined && object.biddingStrategy !== null)
      ? BiddingStrategy.fromPartial(object.biddingStrategy)
      : undefined;
    message.campaignBudget = (object.campaignBudget !== undefined && object.campaignBudget !== null)
      ? CampaignBudget.fromPartial(object.campaignBudget)
      : undefined;
    message.campaign = (object.campaign !== undefined && object.campaign !== null)
      ? Campaign.fromPartial(object.campaign)
      : undefined;
    message.campaignAsset = (object.campaignAsset !== undefined && object.campaignAsset !== null)
      ? CampaignAsset.fromPartial(object.campaignAsset)
      : undefined;
    message.campaignAssetSet = (object.campaignAssetSet !== undefined && object.campaignAssetSet !== null)
      ? CampaignAssetSet.fromPartial(object.campaignAssetSet)
      : undefined;
    message.campaignAudienceView = (object.campaignAudienceView !== undefined && object.campaignAudienceView !== null)
      ? CampaignAudienceView.fromPartial(object.campaignAudienceView)
      : undefined;
    message.campaignCriterion = (object.campaignCriterion !== undefined && object.campaignCriterion !== null)
      ? CampaignCriterion.fromPartial(object.campaignCriterion)
      : undefined;
    message.campaignLabel = (object.campaignLabel !== undefined && object.campaignLabel !== null)
      ? CampaignLabel.fromPartial(object.campaignLabel)
      : undefined;
    message.cartDataSalesView = (object.cartDataSalesView !== undefined && object.cartDataSalesView !== null)
      ? CartDataSalesView.fromPartial(object.cartDataSalesView)
      : undefined;
    message.audience = (object.audience !== undefined && object.audience !== null)
      ? Audience.fromPartial(object.audience)
      : undefined;
    message.conversionAction = (object.conversionAction !== undefined && object.conversionAction !== null)
      ? ConversionAction.fromPartial(object.conversionAction)
      : undefined;
    message.conversionCustomVariable =
      (object.conversionCustomVariable !== undefined && object.conversionCustomVariable !== null)
        ? ConversionCustomVariable.fromPartial(object.conversionCustomVariable)
        : undefined;
    message.customer = (object.customer !== undefined && object.customer !== null)
      ? Customer.fromPartial(object.customer)
      : undefined;
    message.customerAsset = (object.customerAsset !== undefined && object.customerAsset !== null)
      ? CustomerAsset.fromPartial(object.customerAsset)
      : undefined;
    message.customerAssetSet = (object.customerAssetSet !== undefined && object.customerAssetSet !== null)
      ? CustomerAssetSet.fromPartial(object.customerAssetSet)
      : undefined;
    message.accessibleBiddingStrategy =
      (object.accessibleBiddingStrategy !== undefined && object.accessibleBiddingStrategy !== null)
        ? AccessibleBiddingStrategy.fromPartial(object.accessibleBiddingStrategy)
        : undefined;
    message.customerManagerLink = (object.customerManagerLink !== undefined && object.customerManagerLink !== null)
      ? CustomerManagerLink.fromPartial(object.customerManagerLink)
      : undefined;
    message.customerClient = (object.customerClient !== undefined && object.customerClient !== null)
      ? CustomerClient.fromPartial(object.customerClient)
      : undefined;
    message.dynamicSearchAdsSearchTermView =
      (object.dynamicSearchAdsSearchTermView !== undefined && object.dynamicSearchAdsSearchTermView !== null)
        ? DynamicSearchAdsSearchTermView.fromPartial(object.dynamicSearchAdsSearchTermView)
        : undefined;
    message.genderView = (object.genderView !== undefined && object.genderView !== null)
      ? GenderView.fromPartial(object.genderView)
      : undefined;
    message.geoTargetConstant = (object.geoTargetConstant !== undefined && object.geoTargetConstant !== null)
      ? GeoTargetConstant.fromPartial(object.geoTargetConstant)
      : undefined;
    message.keywordView = (object.keywordView !== undefined && object.keywordView !== null)
      ? KeywordView.fromPartial(object.keywordView)
      : undefined;
    message.label = (object.label !== undefined && object.label !== null) ? Label.fromPartial(object.label) : undefined;
    message.languageConstant = (object.languageConstant !== undefined && object.languageConstant !== null)
      ? LanguageConstant.fromPartial(object.languageConstant)
      : undefined;
    message.locationView = (object.locationView !== undefined && object.locationView !== null)
      ? LocationView.fromPartial(object.locationView)
      : undefined;
    message.productBiddingCategoryConstant =
      (object.productBiddingCategoryConstant !== undefined && object.productBiddingCategoryConstant !== null)
        ? ProductBiddingCategoryConstant.fromPartial(object.productBiddingCategoryConstant)
        : undefined;
    message.productGroupView = (object.productGroupView !== undefined && object.productGroupView !== null)
      ? ProductGroupView.fromPartial(object.productGroupView)
      : undefined;
    message.shoppingPerformanceView =
      (object.shoppingPerformanceView !== undefined && object.shoppingPerformanceView !== null)
        ? ShoppingPerformanceView.fromPartial(object.shoppingPerformanceView)
        : undefined;
    message.userList = (object.userList !== undefined && object.userList !== null)
      ? UserList.fromPartial(object.userList)
      : undefined;
    message.webpageView = (object.webpageView !== undefined && object.webpageView !== null)
      ? WebpageView.fromPartial(object.webpageView)
      : undefined;
    message.visit = (object.visit !== undefined && object.visit !== null) ? Visit.fromPartial(object.visit) : undefined;
    message.conversion = (object.conversion !== undefined && object.conversion !== null)
      ? Conversion.fromPartial(object.conversion)
      : undefined;
    message.metrics = (object.metrics !== undefined && object.metrics !== null)
      ? Metrics.fromPartial(object.metrics)
      : undefined;
    message.segments = (object.segments !== undefined && object.segments !== null)
      ? Segments.fromPartial(object.segments)
      : undefined;
    message.customColumns = object.customColumns?.map((e) => Value.fromPartial(e)) || [];
    return message;
  },
};

function createBaseCustomColumnHeader(): CustomColumnHeader {
  return { id: Long.ZERO, name: "", referencesMetrics: false };
}

export const CustomColumnHeader: MessageFns<CustomColumnHeader> = {
  encode(message: CustomColumnHeader, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (!message.id.equals(Long.ZERO)) {
      writer.uint32(8).int64(message.id.toString());
    }
    if (message.name !== "") {
      writer.uint32(18).string(message.name);
    }
    if (message.referencesMetrics !== false) {
      writer.uint32(24).bool(message.referencesMetrics);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomColumnHeader {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomColumnHeader();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.name = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.referencesMetrics = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CustomColumnHeader {
    return {
      id: isSet(object.id) ? Long.fromValue(object.id) : Long.ZERO,
      name: isSet(object.name) ? globalThis.String(object.name) : "",
      referencesMetrics: isSet(object.referencesMetrics) ? globalThis.Boolean(object.referencesMetrics) : false,
    };
  },

  toJSON(message: CustomColumnHeader): unknown {
    const obj: any = {};
    if (!message.id.equals(Long.ZERO)) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.name !== "") {
      obj.name = message.name;
    }
    if (message.referencesMetrics !== false) {
      obj.referencesMetrics = message.referencesMetrics;
    }
    return obj;
  },

  create(base?: DeepPartial<CustomColumnHeader>): CustomColumnHeader {
    return CustomColumnHeader.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CustomColumnHeader>): CustomColumnHeader {
    const message = createBaseCustomColumnHeader();
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : Long.ZERO;
    message.name = object.name ?? "";
    message.referencesMetrics = object.referencesMetrics ?? false;
    return message;
  },
};

function createBaseConversionCustomMetricHeader(): ConversionCustomMetricHeader {
  return { id: Long.ZERO, name: "" };
}

export const ConversionCustomMetricHeader: MessageFns<ConversionCustomMetricHeader> = {
  encode(message: ConversionCustomMetricHeader, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (!message.id.equals(Long.ZERO)) {
      writer.uint32(8).int64(message.id.toString());
    }
    if (message.name !== "") {
      writer.uint32(18).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ConversionCustomMetricHeader {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseConversionCustomMetricHeader();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ConversionCustomMetricHeader {
    return {
      id: isSet(object.id) ? Long.fromValue(object.id) : Long.ZERO,
      name: isSet(object.name) ? globalThis.String(object.name) : "",
    };
  },

  toJSON(message: ConversionCustomMetricHeader): unknown {
    const obj: any = {};
    if (!message.id.equals(Long.ZERO)) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<ConversionCustomMetricHeader>): ConversionCustomMetricHeader {
    return ConversionCustomMetricHeader.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ConversionCustomMetricHeader>): ConversionCustomMetricHeader {
    const message = createBaseConversionCustomMetricHeader();
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : Long.ZERO;
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseConversionCustomDimensionHeader(): ConversionCustomDimensionHeader {
  return { id: Long.ZERO, name: "" };
}

export const ConversionCustomDimensionHeader: MessageFns<ConversionCustomDimensionHeader> = {
  encode(message: ConversionCustomDimensionHeader, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (!message.id.equals(Long.ZERO)) {
      writer.uint32(8).int64(message.id.toString());
    }
    if (message.name !== "") {
      writer.uint32(18).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ConversionCustomDimensionHeader {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseConversionCustomDimensionHeader();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ConversionCustomDimensionHeader {
    return {
      id: isSet(object.id) ? Long.fromValue(object.id) : Long.ZERO,
      name: isSet(object.name) ? globalThis.String(object.name) : "",
    };
  },

  toJSON(message: ConversionCustomDimensionHeader): unknown {
    const obj: any = {};
    if (!message.id.equals(Long.ZERO)) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<ConversionCustomDimensionHeader>): ConversionCustomDimensionHeader {
    return ConversionCustomDimensionHeader.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ConversionCustomDimensionHeader>): ConversionCustomDimensionHeader {
    const message = createBaseConversionCustomDimensionHeader();
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : Long.ZERO;
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseRawEventConversionMetricHeader(): RawEventConversionMetricHeader {
  return { id: Long.ZERO, name: "" };
}

export const RawEventConversionMetricHeader: MessageFns<RawEventConversionMetricHeader> = {
  encode(message: RawEventConversionMetricHeader, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (!message.id.equals(Long.ZERO)) {
      writer.uint32(8).int64(message.id.toString());
    }
    if (message.name !== "") {
      writer.uint32(18).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): RawEventConversionMetricHeader {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRawEventConversionMetricHeader();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): RawEventConversionMetricHeader {
    return {
      id: isSet(object.id) ? Long.fromValue(object.id) : Long.ZERO,
      name: isSet(object.name) ? globalThis.String(object.name) : "",
    };
  },

  toJSON(message: RawEventConversionMetricHeader): unknown {
    const obj: any = {};
    if (!message.id.equals(Long.ZERO)) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<RawEventConversionMetricHeader>): RawEventConversionMetricHeader {
    return RawEventConversionMetricHeader.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<RawEventConversionMetricHeader>): RawEventConversionMetricHeader {
    const message = createBaseRawEventConversionMetricHeader();
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : Long.ZERO;
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseRawEventConversionDimensionHeader(): RawEventConversionDimensionHeader {
  return { id: Long.ZERO, name: "" };
}

export const RawEventConversionDimensionHeader: MessageFns<RawEventConversionDimensionHeader> = {
  encode(message: RawEventConversionDimensionHeader, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (!message.id.equals(Long.ZERO)) {
      writer.uint32(8).int64(message.id.toString());
    }
    if (message.name !== "") {
      writer.uint32(18).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): RawEventConversionDimensionHeader {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRawEventConversionDimensionHeader();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): RawEventConversionDimensionHeader {
    return {
      id: isSet(object.id) ? Long.fromValue(object.id) : Long.ZERO,
      name: isSet(object.name) ? globalThis.String(object.name) : "",
    };
  },

  toJSON(message: RawEventConversionDimensionHeader): unknown {
    const obj: any = {};
    if (!message.id.equals(Long.ZERO)) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<RawEventConversionDimensionHeader>): RawEventConversionDimensionHeader {
    return RawEventConversionDimensionHeader.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<RawEventConversionDimensionHeader>): RawEventConversionDimensionHeader {
    const message = createBaseRawEventConversionDimensionHeader();
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : Long.ZERO;
    message.name = object.name ?? "";
    return message;
  },
};

/** Service to fetch data and metrics across resources. */
export type SearchAds360ServiceDefinition = typeof SearchAds360ServiceDefinition;
export const SearchAds360ServiceDefinition = {
  name: "SearchAds360Service",
  fullName: "google.ads.searchads360.v0.services.SearchAds360Service",
  methods: {
    /**
     * Returns all rows that match the search query.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QueryError]()
     *   [QuotaError]()
     *   [RequestError]()
     */
    search: {
      name: "Search",
      requestType: SearchSearchAds360Request,
      requestStream: false,
      responseType: SearchSearchAds360Response,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([17, 99, 117, 115, 116, 111, 109, 101, 114, 95, 105, 100, 44, 113, 117, 101, 114, 121])],
          578365826: [
            Buffer.from([
              54,
              58,
              1,
              42,
              34,
              49,
              47,
              118,
              48,
              47,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              115,
              47,
              123,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              95,
              105,
              100,
              61,
              42,
              125,
              47,
              115,
              101,
              97,
              114,
              99,
              104,
              65,
              100,
              115,
              51,
              54,
              48,
              58,
              115,
              101,
              97,
              114,
              99,
              104,
            ]),
          ],
        },
      },
    },
    /**
     * Returns all rows that match the search stream query.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QueryError]()
     *   [QuotaError]()
     *   [RequestError]()
     */
    searchStream: {
      name: "SearchStream",
      requestType: SearchSearchAds360StreamRequest,
      requestStream: false,
      responseType: SearchSearchAds360StreamResponse,
      responseStream: true,
      options: {
        _unknownFields: {
          8410: [Buffer.from([17, 99, 117, 115, 116, 111, 109, 101, 114, 95, 105, 100, 44, 113, 117, 101, 114, 121])],
          578365826: [
            Buffer.from([
              60,
              58,
              1,
              42,
              34,
              55,
              47,
              118,
              48,
              47,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              115,
              47,
              123,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              95,
              105,
              100,
              61,
              42,
              125,
              47,
              115,
              101,
              97,
              114,
              99,
              104,
              65,
              100,
              115,
              51,
              54,
              48,
              58,
              115,
              101,
              97,
              114,
              99,
              104,
              83,
              116,
              114,
              101,
              97,
              109,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface SearchAds360ServiceImplementation<CallContextExt = {}> {
  /**
   * Returns all rows that match the search query.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QueryError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  search(
    request: SearchSearchAds360Request,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<SearchSearchAds360Response>>;
  /**
   * Returns all rows that match the search stream query.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QueryError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  searchStream(
    request: SearchSearchAds360StreamRequest,
    context: CallContext & CallContextExt,
  ): ServerStreamingMethodResult<DeepPartial<SearchSearchAds360StreamResponse>>;
}

export interface SearchAds360ServiceClient<CallOptionsExt = {}> {
  /**
   * Returns all rows that match the search query.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QueryError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  search(
    request: DeepPartial<SearchSearchAds360Request>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<SearchSearchAds360Response>;
  /**
   * Returns all rows that match the search stream query.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QueryError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  searchStream(
    request: DeepPartial<SearchSearchAds360StreamRequest>,
    options?: CallOptions & CallOptionsExt,
  ): AsyncIterable<SearchSearchAds360StreamResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export type ServerStreamingMethodResult<Response> = { [Symbol.asyncIterator](): AsyncIterator<Response, void> };

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
