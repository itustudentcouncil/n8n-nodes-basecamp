// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/searchads360/v0/resources/ad.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  SearchAds360ExpandedDynamicSearchAdInfo,
  SearchAds360ExpandedTextAdInfo,
  SearchAds360ProductAdInfo,
  SearchAds360ResponsiveSearchAdInfo,
  SearchAds360TextAdInfo,
} from "../common/ad_type_infos.js";
import { AdTypeEnum_AdType, adTypeEnum_AdTypeFromJSON, adTypeEnum_AdTypeToJSON } from "../enums/ad_type.js";

export const protobufPackage = "google.ads.searchads360.v0.resources";

/** An ad. */
export interface Ad {
  /**
   * Immutable. The resource name of the ad.
   * Ad resource names have the form:
   *
   * `customers/{customer_id}/ads/{ad_id}`
   */
  resourceName: string;
  /** Output only. The ID of the ad. */
  id?:
    | Long
    | undefined;
  /**
   * The list of possible final URLs after all cross-domain redirects for the
   * ad.
   */
  finalUrls: string[];
  /** The URL that appears in the ad description for some ad formats. */
  displayUrl?:
    | string
    | undefined;
  /** Output only. The type of ad. */
  type: AdTypeEnum_AdType;
  /**
   * Immutable. The name of the ad. This is only used to be able to identify the
   * ad. It does not need to be unique and does not affect the served ad. The
   * name field is currently only supported for DisplayUploadAd, ImageAd,
   * ShoppingComparisonListingAd and VideoAd.
   */
  name?:
    | string
    | undefined;
  /** Immutable. Details pertaining to a text ad. */
  textAd?:
    | SearchAds360TextAdInfo
    | undefined;
  /** Immutable. Details pertaining to an expanded text ad. */
  expandedTextAd?:
    | SearchAds360ExpandedTextAdInfo
    | undefined;
  /** Immutable. Details pertaining to a responsive search ad. */
  responsiveSearchAd?:
    | SearchAds360ResponsiveSearchAdInfo
    | undefined;
  /** Immutable. Details pertaining to a product ad. */
  productAd?:
    | SearchAds360ProductAdInfo
    | undefined;
  /** Immutable. Details pertaining to an expanded dynamic search ad. */
  expandedDynamicSearchAd?: SearchAds360ExpandedDynamicSearchAdInfo | undefined;
}

function createBaseAd(): Ad {
  return {
    resourceName: "",
    id: undefined,
    finalUrls: [],
    displayUrl: undefined,
    type: 0,
    name: undefined,
    textAd: undefined,
    expandedTextAd: undefined,
    responsiveSearchAd: undefined,
    productAd: undefined,
    expandedDynamicSearchAd: undefined,
  };
}

export const Ad: MessageFns<Ad> = {
  encode(message: Ad, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(298).string(message.resourceName);
    }
    if (message.id !== undefined) {
      writer.uint32(320).int64(message.id.toString());
    }
    for (const v of message.finalUrls) {
      writer.uint32(330).string(v!);
    }
    if (message.displayUrl !== undefined) {
      writer.uint32(362).string(message.displayUrl);
    }
    if (message.type !== 0) {
      writer.uint32(40).int32(message.type);
    }
    if (message.name !== undefined) {
      writer.uint32(378).string(message.name);
    }
    if (message.textAd !== undefined) {
      SearchAds360TextAdInfo.encode(message.textAd, writer.uint32(442).fork()).join();
    }
    if (message.expandedTextAd !== undefined) {
      SearchAds360ExpandedTextAdInfo.encode(message.expandedTextAd, writer.uint32(450).fork()).join();
    }
    if (message.responsiveSearchAd !== undefined) {
      SearchAds360ResponsiveSearchAdInfo.encode(message.responsiveSearchAd, writer.uint32(458).fork()).join();
    }
    if (message.productAd !== undefined) {
      SearchAds360ProductAdInfo.encode(message.productAd, writer.uint32(466).fork()).join();
    }
    if (message.expandedDynamicSearchAd !== undefined) {
      SearchAds360ExpandedDynamicSearchAdInfo.encode(message.expandedDynamicSearchAd, writer.uint32(474).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Ad {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAd();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 37:
          if (tag !== 298) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 40:
          if (tag !== 320) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 41:
          if (tag !== 330) {
            break;
          }

          message.finalUrls.push(reader.string());
          continue;
        case 45:
          if (tag !== 362) {
            break;
          }

          message.displayUrl = reader.string();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.type = reader.int32() as any;
          continue;
        case 47:
          if (tag !== 378) {
            break;
          }

          message.name = reader.string();
          continue;
        case 55:
          if (tag !== 442) {
            break;
          }

          message.textAd = SearchAds360TextAdInfo.decode(reader, reader.uint32());
          continue;
        case 56:
          if (tag !== 450) {
            break;
          }

          message.expandedTextAd = SearchAds360ExpandedTextAdInfo.decode(reader, reader.uint32());
          continue;
        case 57:
          if (tag !== 458) {
            break;
          }

          message.responsiveSearchAd = SearchAds360ResponsiveSearchAdInfo.decode(reader, reader.uint32());
          continue;
        case 58:
          if (tag !== 466) {
            break;
          }

          message.productAd = SearchAds360ProductAdInfo.decode(reader, reader.uint32());
          continue;
        case 59:
          if (tag !== 474) {
            break;
          }

          message.expandedDynamicSearchAd = SearchAds360ExpandedDynamicSearchAdInfo.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Ad {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      id: isSet(object.id) ? Long.fromValue(object.id) : undefined,
      finalUrls: globalThis.Array.isArray(object?.finalUrls)
        ? object.finalUrls.map((e: any) => globalThis.String(e))
        : [],
      displayUrl: isSet(object.displayUrl) ? globalThis.String(object.displayUrl) : undefined,
      type: isSet(object.type) ? adTypeEnum_AdTypeFromJSON(object.type) : 0,
      name: isSet(object.name) ? globalThis.String(object.name) : undefined,
      textAd: isSet(object.textAd) ? SearchAds360TextAdInfo.fromJSON(object.textAd) : undefined,
      expandedTextAd: isSet(object.expandedTextAd)
        ? SearchAds360ExpandedTextAdInfo.fromJSON(object.expandedTextAd)
        : undefined,
      responsiveSearchAd: isSet(object.responsiveSearchAd)
        ? SearchAds360ResponsiveSearchAdInfo.fromJSON(object.responsiveSearchAd)
        : undefined,
      productAd: isSet(object.productAd) ? SearchAds360ProductAdInfo.fromJSON(object.productAd) : undefined,
      expandedDynamicSearchAd: isSet(object.expandedDynamicSearchAd)
        ? SearchAds360ExpandedDynamicSearchAdInfo.fromJSON(object.expandedDynamicSearchAd)
        : undefined,
    };
  },

  toJSON(message: Ad): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.id !== undefined) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.finalUrls?.length) {
      obj.finalUrls = message.finalUrls;
    }
    if (message.displayUrl !== undefined) {
      obj.displayUrl = message.displayUrl;
    }
    if (message.type !== 0) {
      obj.type = adTypeEnum_AdTypeToJSON(message.type);
    }
    if (message.name !== undefined) {
      obj.name = message.name;
    }
    if (message.textAd !== undefined) {
      obj.textAd = SearchAds360TextAdInfo.toJSON(message.textAd);
    }
    if (message.expandedTextAd !== undefined) {
      obj.expandedTextAd = SearchAds360ExpandedTextAdInfo.toJSON(message.expandedTextAd);
    }
    if (message.responsiveSearchAd !== undefined) {
      obj.responsiveSearchAd = SearchAds360ResponsiveSearchAdInfo.toJSON(message.responsiveSearchAd);
    }
    if (message.productAd !== undefined) {
      obj.productAd = SearchAds360ProductAdInfo.toJSON(message.productAd);
    }
    if (message.expandedDynamicSearchAd !== undefined) {
      obj.expandedDynamicSearchAd = SearchAds360ExpandedDynamicSearchAdInfo.toJSON(message.expandedDynamicSearchAd);
    }
    return obj;
  },

  create(base?: DeepPartial<Ad>): Ad {
    return Ad.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<Ad>): Ad {
    const message = createBaseAd();
    message.resourceName = object.resourceName ?? "";
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : undefined;
    message.finalUrls = object.finalUrls?.map((e) => e) || [];
    message.displayUrl = object.displayUrl ?? undefined;
    message.type = object.type ?? 0;
    message.name = object.name ?? undefined;
    message.textAd = (object.textAd !== undefined && object.textAd !== null)
      ? SearchAds360TextAdInfo.fromPartial(object.textAd)
      : undefined;
    message.expandedTextAd = (object.expandedTextAd !== undefined && object.expandedTextAd !== null)
      ? SearchAds360ExpandedTextAdInfo.fromPartial(object.expandedTextAd)
      : undefined;
    message.responsiveSearchAd = (object.responsiveSearchAd !== undefined && object.responsiveSearchAd !== null)
      ? SearchAds360ResponsiveSearchAdInfo.fromPartial(object.responsiveSearchAd)
      : undefined;
    message.productAd = (object.productAd !== undefined && object.productAd !== null)
      ? SearchAds360ProductAdInfo.fromPartial(object.productAd)
      : undefined;
    message.expandedDynamicSearchAd =
      (object.expandedDynamicSearchAd !== undefined && object.expandedDynamicSearchAd !== null)
        ? SearchAds360ExpandedDynamicSearchAdInfo.fromPartial(object.expandedDynamicSearchAd)
        : undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
