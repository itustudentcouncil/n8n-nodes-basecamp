// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/searchads360/v0/resources/ad_group_bid_modifier.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { DeviceInfo } from "../common/criteria.js";

export const protobufPackage = "google.ads.searchads360.v0.resources";

/** Represents an ad group bid modifier. */
export interface AdGroupBidModifier {
  /**
   * Immutable. The resource name of the ad group bid modifier.
   * Ad group bid modifier resource names have the form:
   *
   * `customers/{customer_id}/adGroupBidModifiers/{ad_group_id}~{criterion_id}`
   */
  resourceName: string;
  /**
   * The modifier for the bid when the criterion matches. The modifier must be
   * in the range: 0.1 - 10.0. The range is 1.0 - 6.0 for PreferredContent.
   * Use 0 to opt out of a Device type.
   */
  bidModifier?:
    | number
    | undefined;
  /** Immutable. A device criterion. */
  device?: DeviceInfo | undefined;
}

function createBaseAdGroupBidModifier(): AdGroupBidModifier {
  return { resourceName: "", bidModifier: undefined, device: undefined };
}

export const AdGroupBidModifier: MessageFns<AdGroupBidModifier> = {
  encode(message: AdGroupBidModifier, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.bidModifier !== undefined) {
      writer.uint32(121).double(message.bidModifier);
    }
    if (message.device !== undefined) {
      DeviceInfo.encode(message.device, writer.uint32(90).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AdGroupBidModifier {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAdGroupBidModifier();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 15:
          if (tag !== 121) {
            break;
          }

          message.bidModifier = reader.double();
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.device = DeviceInfo.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): AdGroupBidModifier {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      bidModifier: isSet(object.bidModifier) ? globalThis.Number(object.bidModifier) : undefined,
      device: isSet(object.device) ? DeviceInfo.fromJSON(object.device) : undefined,
    };
  },

  toJSON(message: AdGroupBidModifier): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.bidModifier !== undefined) {
      obj.bidModifier = message.bidModifier;
    }
    if (message.device !== undefined) {
      obj.device = DeviceInfo.toJSON(message.device);
    }
    return obj;
  },

  create(base?: DeepPartial<AdGroupBidModifier>): AdGroupBidModifier {
    return AdGroupBidModifier.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<AdGroupBidModifier>): AdGroupBidModifier {
    const message = createBaseAdGroupBidModifier();
    message.resourceName = object.resourceName ?? "";
    message.bidModifier = object.bidModifier ?? undefined;
    message.device = (object.device !== undefined && object.device !== null)
      ? DeviceInfo.fromPartial(object.device)
      : undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
