// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/searchads360/v0/enums/served_asset_field_type.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.searchads360.v0.enums";

/** Container for enum describing possible asset field types. */
export interface ServedAssetFieldTypeEnum {
}

/** The possible asset field types. */
export enum ServedAssetFieldTypeEnum_ServedAssetFieldType {
  /** UNSPECIFIED - No value has been specified. */
  UNSPECIFIED = 0,
  /**
   * UNKNOWN - The received value is not known in this version.
   *
   * This is a response-only value.
   */
  UNKNOWN = 1,
  /** HEADLINE_1 - The asset is used in headline 1. */
  HEADLINE_1 = 2,
  /** HEADLINE_2 - The asset is used in headline 2. */
  HEADLINE_2 = 3,
  /** HEADLINE_3 - The asset is used in headline 3. */
  HEADLINE_3 = 4,
  /** DESCRIPTION_1 - The asset is used in description 1. */
  DESCRIPTION_1 = 5,
  /** DESCRIPTION_2 - The asset is used in description 2. */
  DESCRIPTION_2 = 6,
  /**
   * HEADLINE - The asset was used in a headline. Use this only if there is only one
   * headline in the ad. Otherwise, use the HEADLINE_1, HEADLINE_2 or
   * HEADLINE_3 enums
   */
  HEADLINE = 7,
  /** HEADLINE_IN_PORTRAIT - The asset was used as a headline in portrait image. */
  HEADLINE_IN_PORTRAIT = 8,
  /** LONG_HEADLINE - The asset was used in a long headline (used in MultiAssetResponsiveAd). */
  LONG_HEADLINE = 9,
  /**
   * DESCRIPTION - The asset was used in a description. Use this only if there is only one
   * description in the ad. Otherwise, use the DESCRIPTION_1 or DESCRIPTION_@
   * enums
   */
  DESCRIPTION = 10,
  /** DESCRIPTION_IN_PORTRAIT - The asset was used as description in portrait image. */
  DESCRIPTION_IN_PORTRAIT = 11,
  /** BUSINESS_NAME_IN_PORTRAIT - The asset was used as business name in portrait image. */
  BUSINESS_NAME_IN_PORTRAIT = 12,
  /** BUSINESS_NAME - The asset was used as business name. */
  BUSINESS_NAME = 13,
  /** MARKETING_IMAGE - The asset was used as a marketing image. */
  MARKETING_IMAGE = 14,
  /** MARKETING_IMAGE_IN_PORTRAIT - The asset was used as a marketing image in portrait image. */
  MARKETING_IMAGE_IN_PORTRAIT = 15,
  /** SQUARE_MARKETING_IMAGE - The asset was used as a square marketing image. */
  SQUARE_MARKETING_IMAGE = 16,
  /** PORTRAIT_MARKETING_IMAGE - The asset was used as a portrait marketing image. */
  PORTRAIT_MARKETING_IMAGE = 17,
  /** LOGO - The asset was used as a logo. */
  LOGO = 18,
  /** LANDSCAPE_LOGO - The asset was used as a landscape logo. */
  LANDSCAPE_LOGO = 19,
  /** CALL_TO_ACTION - The asset was used as a call-to-action. */
  CALL_TO_ACTION = 20,
  /** YOU_TUBE_VIDEO - The asset was used as a YouTube video. */
  YOU_TUBE_VIDEO = 21,
  /** SITELINK - This asset is used as a sitelink. */
  SITELINK = 22,
  /** CALL - This asset is used as a call. */
  CALL = 23,
  /** MOBILE_APP - This asset is used as a mobile app. */
  MOBILE_APP = 24,
  /** CALLOUT - This asset is used as a callout. */
  CALLOUT = 25,
  /** STRUCTURED_SNIPPET - This asset is used as a structured snippet. */
  STRUCTURED_SNIPPET = 26,
  /** PRICE - This asset is used as a price. */
  PRICE = 27,
  /** PROMOTION - This asset is used as a promotion. */
  PROMOTION = 28,
  /** AD_IMAGE - This asset is used as an image. */
  AD_IMAGE = 29,
  /** LEAD_FORM - The asset is used as a lead form. */
  LEAD_FORM = 30,
  /** BUSINESS_LOGO - The asset is used as a business logo. */
  BUSINESS_LOGO = 31,
  UNRECOGNIZED = -1,
}

export function servedAssetFieldTypeEnum_ServedAssetFieldTypeFromJSON(
  object: any,
): ServedAssetFieldTypeEnum_ServedAssetFieldType {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.UNKNOWN;
    case 2:
    case "HEADLINE_1":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.HEADLINE_1;
    case 3:
    case "HEADLINE_2":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.HEADLINE_2;
    case 4:
    case "HEADLINE_3":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.HEADLINE_3;
    case 5:
    case "DESCRIPTION_1":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.DESCRIPTION_1;
    case 6:
    case "DESCRIPTION_2":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.DESCRIPTION_2;
    case 7:
    case "HEADLINE":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.HEADLINE;
    case 8:
    case "HEADLINE_IN_PORTRAIT":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.HEADLINE_IN_PORTRAIT;
    case 9:
    case "LONG_HEADLINE":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.LONG_HEADLINE;
    case 10:
    case "DESCRIPTION":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.DESCRIPTION;
    case 11:
    case "DESCRIPTION_IN_PORTRAIT":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.DESCRIPTION_IN_PORTRAIT;
    case 12:
    case "BUSINESS_NAME_IN_PORTRAIT":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.BUSINESS_NAME_IN_PORTRAIT;
    case 13:
    case "BUSINESS_NAME":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.BUSINESS_NAME;
    case 14:
    case "MARKETING_IMAGE":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.MARKETING_IMAGE;
    case 15:
    case "MARKETING_IMAGE_IN_PORTRAIT":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.MARKETING_IMAGE_IN_PORTRAIT;
    case 16:
    case "SQUARE_MARKETING_IMAGE":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.SQUARE_MARKETING_IMAGE;
    case 17:
    case "PORTRAIT_MARKETING_IMAGE":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.PORTRAIT_MARKETING_IMAGE;
    case 18:
    case "LOGO":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.LOGO;
    case 19:
    case "LANDSCAPE_LOGO":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.LANDSCAPE_LOGO;
    case 20:
    case "CALL_TO_ACTION":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.CALL_TO_ACTION;
    case 21:
    case "YOU_TUBE_VIDEO":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.YOU_TUBE_VIDEO;
    case 22:
    case "SITELINK":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.SITELINK;
    case 23:
    case "CALL":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.CALL;
    case 24:
    case "MOBILE_APP":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.MOBILE_APP;
    case 25:
    case "CALLOUT":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.CALLOUT;
    case 26:
    case "STRUCTURED_SNIPPET":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.STRUCTURED_SNIPPET;
    case 27:
    case "PRICE":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.PRICE;
    case 28:
    case "PROMOTION":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.PROMOTION;
    case 29:
    case "AD_IMAGE":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.AD_IMAGE;
    case 30:
    case "LEAD_FORM":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.LEAD_FORM;
    case 31:
    case "BUSINESS_LOGO":
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.BUSINESS_LOGO;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ServedAssetFieldTypeEnum_ServedAssetFieldType.UNRECOGNIZED;
  }
}

export function servedAssetFieldTypeEnum_ServedAssetFieldTypeToJSON(
  object: ServedAssetFieldTypeEnum_ServedAssetFieldType,
): string {
  switch (object) {
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.UNSPECIFIED:
      return "UNSPECIFIED";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.UNKNOWN:
      return "UNKNOWN";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.HEADLINE_1:
      return "HEADLINE_1";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.HEADLINE_2:
      return "HEADLINE_2";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.HEADLINE_3:
      return "HEADLINE_3";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.DESCRIPTION_1:
      return "DESCRIPTION_1";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.DESCRIPTION_2:
      return "DESCRIPTION_2";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.HEADLINE:
      return "HEADLINE";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.HEADLINE_IN_PORTRAIT:
      return "HEADLINE_IN_PORTRAIT";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.LONG_HEADLINE:
      return "LONG_HEADLINE";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.DESCRIPTION:
      return "DESCRIPTION";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.DESCRIPTION_IN_PORTRAIT:
      return "DESCRIPTION_IN_PORTRAIT";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.BUSINESS_NAME_IN_PORTRAIT:
      return "BUSINESS_NAME_IN_PORTRAIT";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.BUSINESS_NAME:
      return "BUSINESS_NAME";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.MARKETING_IMAGE:
      return "MARKETING_IMAGE";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.MARKETING_IMAGE_IN_PORTRAIT:
      return "MARKETING_IMAGE_IN_PORTRAIT";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.SQUARE_MARKETING_IMAGE:
      return "SQUARE_MARKETING_IMAGE";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.PORTRAIT_MARKETING_IMAGE:
      return "PORTRAIT_MARKETING_IMAGE";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.LOGO:
      return "LOGO";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.LANDSCAPE_LOGO:
      return "LANDSCAPE_LOGO";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.CALL_TO_ACTION:
      return "CALL_TO_ACTION";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.YOU_TUBE_VIDEO:
      return "YOU_TUBE_VIDEO";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.SITELINK:
      return "SITELINK";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.CALL:
      return "CALL";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.MOBILE_APP:
      return "MOBILE_APP";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.CALLOUT:
      return "CALLOUT";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.STRUCTURED_SNIPPET:
      return "STRUCTURED_SNIPPET";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.PRICE:
      return "PRICE";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.PROMOTION:
      return "PROMOTION";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.AD_IMAGE:
      return "AD_IMAGE";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.LEAD_FORM:
      return "LEAD_FORM";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.BUSINESS_LOGO:
      return "BUSINESS_LOGO";
    case ServedAssetFieldTypeEnum_ServedAssetFieldType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseServedAssetFieldTypeEnum(): ServedAssetFieldTypeEnum {
  return {};
}

export const ServedAssetFieldTypeEnum: MessageFns<ServedAssetFieldTypeEnum> = {
  encode(_: ServedAssetFieldTypeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ServedAssetFieldTypeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseServedAssetFieldTypeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ServedAssetFieldTypeEnum {
    return {};
  },

  toJSON(_: ServedAssetFieldTypeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ServedAssetFieldTypeEnum>): ServedAssetFieldTypeEnum {
    return ServedAssetFieldTypeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ServedAssetFieldTypeEnum>): ServedAssetFieldTypeEnum {
    const message = createBaseServedAssetFieldTypeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
