// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/enums/linked_product_type.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.enums";

/** Container for enum describing different types of linked products. */
export interface LinkedProductTypeEnum {
}

/**
 * Describes the possible link types for a link between a Google
 * Ads customer and another product.
 */
export enum LinkedProductTypeEnum_LinkedProductType {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** DATA_PARTNER - A link to Data partner. */
  DATA_PARTNER = 2,
  /** GOOGLE_ADS - A link to Google Ads. */
  GOOGLE_ADS = 3,
  /** HOTEL_CENTER - A link to Hotel Center. */
  HOTEL_CENTER = 7,
  /** MERCHANT_CENTER - A link to Google Merchant Center. */
  MERCHANT_CENTER = 8,
  /** ADVERTISING_PARTNER - A link to the Google Ads account of the advertising partner. */
  ADVERTISING_PARTNER = 9,
  UNRECOGNIZED = -1,
}

export function linkedProductTypeEnum_LinkedProductTypeFromJSON(object: any): LinkedProductTypeEnum_LinkedProductType {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return LinkedProductTypeEnum_LinkedProductType.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return LinkedProductTypeEnum_LinkedProductType.UNKNOWN;
    case 2:
    case "DATA_PARTNER":
      return LinkedProductTypeEnum_LinkedProductType.DATA_PARTNER;
    case 3:
    case "GOOGLE_ADS":
      return LinkedProductTypeEnum_LinkedProductType.GOOGLE_ADS;
    case 7:
    case "HOTEL_CENTER":
      return LinkedProductTypeEnum_LinkedProductType.HOTEL_CENTER;
    case 8:
    case "MERCHANT_CENTER":
      return LinkedProductTypeEnum_LinkedProductType.MERCHANT_CENTER;
    case 9:
    case "ADVERTISING_PARTNER":
      return LinkedProductTypeEnum_LinkedProductType.ADVERTISING_PARTNER;
    case -1:
    case "UNRECOGNIZED":
    default:
      return LinkedProductTypeEnum_LinkedProductType.UNRECOGNIZED;
  }
}

export function linkedProductTypeEnum_LinkedProductTypeToJSON(object: LinkedProductTypeEnum_LinkedProductType): string {
  switch (object) {
    case LinkedProductTypeEnum_LinkedProductType.UNSPECIFIED:
      return "UNSPECIFIED";
    case LinkedProductTypeEnum_LinkedProductType.UNKNOWN:
      return "UNKNOWN";
    case LinkedProductTypeEnum_LinkedProductType.DATA_PARTNER:
      return "DATA_PARTNER";
    case LinkedProductTypeEnum_LinkedProductType.GOOGLE_ADS:
      return "GOOGLE_ADS";
    case LinkedProductTypeEnum_LinkedProductType.HOTEL_CENTER:
      return "HOTEL_CENTER";
    case LinkedProductTypeEnum_LinkedProductType.MERCHANT_CENTER:
      return "MERCHANT_CENTER";
    case LinkedProductTypeEnum_LinkedProductType.ADVERTISING_PARTNER:
      return "ADVERTISING_PARTNER";
    case LinkedProductTypeEnum_LinkedProductType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseLinkedProductTypeEnum(): LinkedProductTypeEnum {
  return {};
}

export const LinkedProductTypeEnum: MessageFns<LinkedProductTypeEnum> = {
  encode(_: LinkedProductTypeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): LinkedProductTypeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseLinkedProductTypeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): LinkedProductTypeEnum {
    return {};
  },

  toJSON(_: LinkedProductTypeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<LinkedProductTypeEnum>): LinkedProductTypeEnum {
    return LinkedProductTypeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<LinkedProductTypeEnum>): LinkedProductTypeEnum {
    const message = createBaseLinkedProductTypeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
