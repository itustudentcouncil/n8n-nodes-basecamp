// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/enums/bid_modifier_source.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.enums";

/** Container for enum describing possible bid modifier sources. */
export interface BidModifierSourceEnum {
}

/** Enum describing possible bid modifier sources. */
export enum BidModifierSourceEnum_BidModifierSource {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /**
   * CAMPAIGN - The bid modifier is specified at the campaign level, on the campaign
   * level criterion.
   */
  CAMPAIGN = 2,
  /** AD_GROUP - The bid modifier is specified (overridden) at the ad group level. */
  AD_GROUP = 3,
  UNRECOGNIZED = -1,
}

export function bidModifierSourceEnum_BidModifierSourceFromJSON(object: any): BidModifierSourceEnum_BidModifierSource {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return BidModifierSourceEnum_BidModifierSource.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return BidModifierSourceEnum_BidModifierSource.UNKNOWN;
    case 2:
    case "CAMPAIGN":
      return BidModifierSourceEnum_BidModifierSource.CAMPAIGN;
    case 3:
    case "AD_GROUP":
      return BidModifierSourceEnum_BidModifierSource.AD_GROUP;
    case -1:
    case "UNRECOGNIZED":
    default:
      return BidModifierSourceEnum_BidModifierSource.UNRECOGNIZED;
  }
}

export function bidModifierSourceEnum_BidModifierSourceToJSON(object: BidModifierSourceEnum_BidModifierSource): string {
  switch (object) {
    case BidModifierSourceEnum_BidModifierSource.UNSPECIFIED:
      return "UNSPECIFIED";
    case BidModifierSourceEnum_BidModifierSource.UNKNOWN:
      return "UNKNOWN";
    case BidModifierSourceEnum_BidModifierSource.CAMPAIGN:
      return "CAMPAIGN";
    case BidModifierSourceEnum_BidModifierSource.AD_GROUP:
      return "AD_GROUP";
    case BidModifierSourceEnum_BidModifierSource.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseBidModifierSourceEnum(): BidModifierSourceEnum {
  return {};
}

export const BidModifierSourceEnum: MessageFns<BidModifierSourceEnum> = {
  encode(_: BidModifierSourceEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): BidModifierSourceEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseBidModifierSourceEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): BidModifierSourceEnum {
    return {};
  },

  toJSON(_: BidModifierSourceEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<BidModifierSourceEnum>): BidModifierSourceEnum {
    return BidModifierSourceEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<BidModifierSourceEnum>): BidModifierSourceEnum {
    const message = createBaseBidModifierSourceEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
