// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/enums/google_ads_field_data_type.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.enums";

/** Container holding the various data types. */
export interface GoogleAdsFieldDataTypeEnum {
}

/** These are the various types a GoogleAdsService artifact may take on. */
export enum GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType {
  /** UNSPECIFIED - Unspecified */
  UNSPECIFIED = 0,
  /** UNKNOWN - Unknown */
  UNKNOWN = 1,
  /**
   * BOOLEAN - Maps to google.protobuf.BoolValue
   *
   * Applicable operators:  =, !=
   */
  BOOLEAN = 2,
  /**
   * DATE - Maps to google.protobuf.StringValue. It can be compared using the set of
   * operators specific to dates however.
   *
   * Applicable operators:  =, <, >, <=, >=, BETWEEN, DURING, and IN
   */
  DATE = 3,
  /**
   * DOUBLE - Maps to google.protobuf.DoubleValue
   *
   * Applicable operators:  =, !=, <, >, IN, NOT IN
   */
  DOUBLE = 4,
  /**
   * ENUM - Maps to an enum. It's specific definition can be found at type_url.
   *
   * Applicable operators:  =, !=, IN, NOT IN
   */
  ENUM = 5,
  /**
   * FLOAT - Maps to google.protobuf.FloatValue
   *
   * Applicable operators:  =, !=, <, >, IN, NOT IN
   */
  FLOAT = 6,
  /**
   * INT32 - Maps to google.protobuf.Int32Value
   *
   * Applicable operators:  =, !=, <, >, <=, >=, BETWEEN, IN, NOT IN
   */
  INT32 = 7,
  /**
   * INT64 - Maps to google.protobuf.Int64Value
   *
   * Applicable operators:  =, !=, <, >, <=, >=, BETWEEN, IN, NOT IN
   */
  INT64 = 8,
  /**
   * MESSAGE - Maps to a protocol buffer message type. The data type's details can be
   * found in type_url.
   *
   * No operators work with MESSAGE fields.
   */
  MESSAGE = 9,
  /**
   * RESOURCE_NAME - Maps to google.protobuf.StringValue. Represents the resource name
   * (unique id) of a resource or one of its foreign keys.
   *
   * No operators work with RESOURCE_NAME fields.
   */
  RESOURCE_NAME = 10,
  /**
   * STRING - Maps to google.protobuf.StringValue.
   *
   * Applicable operators:  =, !=, LIKE, NOT LIKE, IN, NOT IN
   */
  STRING = 11,
  /**
   * UINT64 - Maps to google.protobuf.UInt64Value
   *
   * Applicable operators:  =, !=, <, >, <=, >=, BETWEEN, IN, NOT IN
   */
  UINT64 = 12,
  UNRECOGNIZED = -1,
}

export function googleAdsFieldDataTypeEnum_GoogleAdsFieldDataTypeFromJSON(
  object: any,
): GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.UNKNOWN;
    case 2:
    case "BOOLEAN":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.BOOLEAN;
    case 3:
    case "DATE":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.DATE;
    case 4:
    case "DOUBLE":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.DOUBLE;
    case 5:
    case "ENUM":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.ENUM;
    case 6:
    case "FLOAT":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.FLOAT;
    case 7:
    case "INT32":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.INT32;
    case 8:
    case "INT64":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.INT64;
    case 9:
    case "MESSAGE":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.MESSAGE;
    case 10:
    case "RESOURCE_NAME":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.RESOURCE_NAME;
    case 11:
    case "STRING":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.STRING;
    case 12:
    case "UINT64":
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.UINT64;
    case -1:
    case "UNRECOGNIZED":
    default:
      return GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.UNRECOGNIZED;
  }
}

export function googleAdsFieldDataTypeEnum_GoogleAdsFieldDataTypeToJSON(
  object: GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType,
): string {
  switch (object) {
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.UNSPECIFIED:
      return "UNSPECIFIED";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.UNKNOWN:
      return "UNKNOWN";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.BOOLEAN:
      return "BOOLEAN";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.DATE:
      return "DATE";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.DOUBLE:
      return "DOUBLE";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.ENUM:
      return "ENUM";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.FLOAT:
      return "FLOAT";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.INT32:
      return "INT32";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.INT64:
      return "INT64";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.MESSAGE:
      return "MESSAGE";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.RESOURCE_NAME:
      return "RESOURCE_NAME";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.STRING:
      return "STRING";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.UINT64:
      return "UINT64";
    case GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseGoogleAdsFieldDataTypeEnum(): GoogleAdsFieldDataTypeEnum {
  return {};
}

export const GoogleAdsFieldDataTypeEnum: MessageFns<GoogleAdsFieldDataTypeEnum> = {
  encode(_: GoogleAdsFieldDataTypeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GoogleAdsFieldDataTypeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGoogleAdsFieldDataTypeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): GoogleAdsFieldDataTypeEnum {
    return {};
  },

  toJSON(_: GoogleAdsFieldDataTypeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<GoogleAdsFieldDataTypeEnum>): GoogleAdsFieldDataTypeEnum {
    return GoogleAdsFieldDataTypeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<GoogleAdsFieldDataTypeEnum>): GoogleAdsFieldDataTypeEnum {
    const message = createBaseGoogleAdsFieldDataTypeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
