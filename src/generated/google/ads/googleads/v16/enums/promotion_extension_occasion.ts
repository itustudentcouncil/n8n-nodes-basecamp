// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/enums/promotion_extension_occasion.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.enums";

/**
 * Container for enum describing a promotion extension occasion.
 * For more information about the occasions  check:
 * https://support.google.com/google-ads/answer/7367521
 */
export interface PromotionExtensionOccasionEnum {
}

/** A promotion extension occasion. */
export enum PromotionExtensionOccasionEnum_PromotionExtensionOccasion {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** NEW_YEARS - New Year's. */
  NEW_YEARS = 2,
  /** CHINESE_NEW_YEAR - Chinese New Year. */
  CHINESE_NEW_YEAR = 3,
  /** VALENTINES_DAY - Valentine's Day. */
  VALENTINES_DAY = 4,
  /** EASTER - Easter. */
  EASTER = 5,
  /** MOTHERS_DAY - Mother's Day. */
  MOTHERS_DAY = 6,
  /** FATHERS_DAY - Father's Day. */
  FATHERS_DAY = 7,
  /** LABOR_DAY - Labor Day. */
  LABOR_DAY = 8,
  /** BACK_TO_SCHOOL - Back To School. */
  BACK_TO_SCHOOL = 9,
  /** HALLOWEEN - Halloween. */
  HALLOWEEN = 10,
  /** BLACK_FRIDAY - Black Friday. */
  BLACK_FRIDAY = 11,
  /** CYBER_MONDAY - Cyber Monday. */
  CYBER_MONDAY = 12,
  /** CHRISTMAS - Christmas. */
  CHRISTMAS = 13,
  /** BOXING_DAY - Boxing Day. */
  BOXING_DAY = 14,
  /** INDEPENDENCE_DAY - Independence Day in any country. */
  INDEPENDENCE_DAY = 15,
  /** NATIONAL_DAY - National Day in any country. */
  NATIONAL_DAY = 16,
  /** END_OF_SEASON - End of any season. */
  END_OF_SEASON = 17,
  /** WINTER_SALE - Winter Sale. */
  WINTER_SALE = 18,
  /** SUMMER_SALE - Summer sale. */
  SUMMER_SALE = 19,
  /** FALL_SALE - Fall Sale. */
  FALL_SALE = 20,
  /** SPRING_SALE - Spring Sale. */
  SPRING_SALE = 21,
  /** RAMADAN - Ramadan. */
  RAMADAN = 22,
  /** EID_AL_FITR - Eid al-Fitr. */
  EID_AL_FITR = 23,
  /** EID_AL_ADHA - Eid al-Adha. */
  EID_AL_ADHA = 24,
  /** SINGLES_DAY - Singles Day. */
  SINGLES_DAY = 25,
  /** WOMENS_DAY - Women's Day. */
  WOMENS_DAY = 26,
  /** HOLI - Holi. */
  HOLI = 27,
  /** PARENTS_DAY - Parent's Day. */
  PARENTS_DAY = 28,
  /** ST_NICHOLAS_DAY - St. Nicholas Day. */
  ST_NICHOLAS_DAY = 29,
  /** CARNIVAL - Carnival. */
  CARNIVAL = 30,
  /** EPIPHANY - Epiphany, also known as Three Kings' Day. */
  EPIPHANY = 31,
  /** ROSH_HASHANAH - Rosh Hashanah. */
  ROSH_HASHANAH = 32,
  /** PASSOVER - Passover. */
  PASSOVER = 33,
  /** HANUKKAH - Hanukkah. */
  HANUKKAH = 34,
  /** DIWALI - Diwali. */
  DIWALI = 35,
  /** NAVRATRI - Navratri. */
  NAVRATRI = 36,
  /** SONGKRAN - Available in Thai: Songkran. */
  SONGKRAN = 37,
  /** YEAR_END_GIFT - Available in Japanese: Year-end Gift. */
  YEAR_END_GIFT = 38,
  UNRECOGNIZED = -1,
}

export function promotionExtensionOccasionEnum_PromotionExtensionOccasionFromJSON(
  object: any,
): PromotionExtensionOccasionEnum_PromotionExtensionOccasion {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.UNKNOWN;
    case 2:
    case "NEW_YEARS":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.NEW_YEARS;
    case 3:
    case "CHINESE_NEW_YEAR":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.CHINESE_NEW_YEAR;
    case 4:
    case "VALENTINES_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.VALENTINES_DAY;
    case 5:
    case "EASTER":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.EASTER;
    case 6:
    case "MOTHERS_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.MOTHERS_DAY;
    case 7:
    case "FATHERS_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.FATHERS_DAY;
    case 8:
    case "LABOR_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.LABOR_DAY;
    case 9:
    case "BACK_TO_SCHOOL":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.BACK_TO_SCHOOL;
    case 10:
    case "HALLOWEEN":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.HALLOWEEN;
    case 11:
    case "BLACK_FRIDAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.BLACK_FRIDAY;
    case 12:
    case "CYBER_MONDAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.CYBER_MONDAY;
    case 13:
    case "CHRISTMAS":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.CHRISTMAS;
    case 14:
    case "BOXING_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.BOXING_DAY;
    case 15:
    case "INDEPENDENCE_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.INDEPENDENCE_DAY;
    case 16:
    case "NATIONAL_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.NATIONAL_DAY;
    case 17:
    case "END_OF_SEASON":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.END_OF_SEASON;
    case 18:
    case "WINTER_SALE":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.WINTER_SALE;
    case 19:
    case "SUMMER_SALE":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.SUMMER_SALE;
    case 20:
    case "FALL_SALE":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.FALL_SALE;
    case 21:
    case "SPRING_SALE":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.SPRING_SALE;
    case 22:
    case "RAMADAN":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.RAMADAN;
    case 23:
    case "EID_AL_FITR":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.EID_AL_FITR;
    case 24:
    case "EID_AL_ADHA":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.EID_AL_ADHA;
    case 25:
    case "SINGLES_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.SINGLES_DAY;
    case 26:
    case "WOMENS_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.WOMENS_DAY;
    case 27:
    case "HOLI":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.HOLI;
    case 28:
    case "PARENTS_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.PARENTS_DAY;
    case 29:
    case "ST_NICHOLAS_DAY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.ST_NICHOLAS_DAY;
    case 30:
    case "CARNIVAL":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.CARNIVAL;
    case 31:
    case "EPIPHANY":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.EPIPHANY;
    case 32:
    case "ROSH_HASHANAH":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.ROSH_HASHANAH;
    case 33:
    case "PASSOVER":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.PASSOVER;
    case 34:
    case "HANUKKAH":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.HANUKKAH;
    case 35:
    case "DIWALI":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.DIWALI;
    case 36:
    case "NAVRATRI":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.NAVRATRI;
    case 37:
    case "SONGKRAN":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.SONGKRAN;
    case 38:
    case "YEAR_END_GIFT":
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.YEAR_END_GIFT;
    case -1:
    case "UNRECOGNIZED":
    default:
      return PromotionExtensionOccasionEnum_PromotionExtensionOccasion.UNRECOGNIZED;
  }
}

export function promotionExtensionOccasionEnum_PromotionExtensionOccasionToJSON(
  object: PromotionExtensionOccasionEnum_PromotionExtensionOccasion,
): string {
  switch (object) {
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.UNSPECIFIED:
      return "UNSPECIFIED";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.UNKNOWN:
      return "UNKNOWN";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.NEW_YEARS:
      return "NEW_YEARS";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.CHINESE_NEW_YEAR:
      return "CHINESE_NEW_YEAR";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.VALENTINES_DAY:
      return "VALENTINES_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.EASTER:
      return "EASTER";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.MOTHERS_DAY:
      return "MOTHERS_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.FATHERS_DAY:
      return "FATHERS_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.LABOR_DAY:
      return "LABOR_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.BACK_TO_SCHOOL:
      return "BACK_TO_SCHOOL";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.HALLOWEEN:
      return "HALLOWEEN";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.BLACK_FRIDAY:
      return "BLACK_FRIDAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.CYBER_MONDAY:
      return "CYBER_MONDAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.CHRISTMAS:
      return "CHRISTMAS";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.BOXING_DAY:
      return "BOXING_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.INDEPENDENCE_DAY:
      return "INDEPENDENCE_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.NATIONAL_DAY:
      return "NATIONAL_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.END_OF_SEASON:
      return "END_OF_SEASON";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.WINTER_SALE:
      return "WINTER_SALE";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.SUMMER_SALE:
      return "SUMMER_SALE";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.FALL_SALE:
      return "FALL_SALE";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.SPRING_SALE:
      return "SPRING_SALE";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.RAMADAN:
      return "RAMADAN";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.EID_AL_FITR:
      return "EID_AL_FITR";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.EID_AL_ADHA:
      return "EID_AL_ADHA";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.SINGLES_DAY:
      return "SINGLES_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.WOMENS_DAY:
      return "WOMENS_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.HOLI:
      return "HOLI";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.PARENTS_DAY:
      return "PARENTS_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.ST_NICHOLAS_DAY:
      return "ST_NICHOLAS_DAY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.CARNIVAL:
      return "CARNIVAL";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.EPIPHANY:
      return "EPIPHANY";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.ROSH_HASHANAH:
      return "ROSH_HASHANAH";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.PASSOVER:
      return "PASSOVER";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.HANUKKAH:
      return "HANUKKAH";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.DIWALI:
      return "DIWALI";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.NAVRATRI:
      return "NAVRATRI";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.SONGKRAN:
      return "SONGKRAN";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.YEAR_END_GIFT:
      return "YEAR_END_GIFT";
    case PromotionExtensionOccasionEnum_PromotionExtensionOccasion.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBasePromotionExtensionOccasionEnum(): PromotionExtensionOccasionEnum {
  return {};
}

export const PromotionExtensionOccasionEnum: MessageFns<PromotionExtensionOccasionEnum> = {
  encode(_: PromotionExtensionOccasionEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PromotionExtensionOccasionEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePromotionExtensionOccasionEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): PromotionExtensionOccasionEnum {
    return {};
  },

  toJSON(_: PromotionExtensionOccasionEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<PromotionExtensionOccasionEnum>): PromotionExtensionOccasionEnum {
    return PromotionExtensionOccasionEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<PromotionExtensionOccasionEnum>): PromotionExtensionOccasionEnum {
    const message = createBasePromotionExtensionOccasionEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
