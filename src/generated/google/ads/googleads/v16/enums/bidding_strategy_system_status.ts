// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/enums/bidding_strategy_system_status.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.enums";

/** Message describing BiddingStrategy system statuses. */
export interface BiddingStrategySystemStatusEnum {
}

/** The possible system statuses of a BiddingStrategy. */
export enum BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus {
  /**
   * UNSPECIFIED - Signals that an unexpected error occurred, for example, no bidding
   * strategy type was found, or no status information was found.
   */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /**
   * ENABLED - The bid strategy is active, and AdWords cannot find any specific issues
   * with the strategy.
   */
  ENABLED = 2,
  /**
   * LEARNING_NEW - The bid strategy is learning because it has been recently created or
   * recently reactivated.
   */
  LEARNING_NEW = 3,
  /** LEARNING_SETTING_CHANGE - The bid strategy is learning because of a recent setting change. */
  LEARNING_SETTING_CHANGE = 4,
  /** LEARNING_BUDGET_CHANGE - The bid strategy is learning because of a recent budget change. */
  LEARNING_BUDGET_CHANGE = 5,
  /**
   * LEARNING_COMPOSITION_CHANGE - The bid strategy is learning because of recent change in number of
   * campaigns, ad groups or keywords attached to it.
   */
  LEARNING_COMPOSITION_CHANGE = 6,
  /**
   * LEARNING_CONVERSION_TYPE_CHANGE - The bid strategy depends on conversion reporting and the customer
   * recently modified conversion types that were relevant to the
   * bid strategy.
   */
  LEARNING_CONVERSION_TYPE_CHANGE = 7,
  /**
   * LEARNING_CONVERSION_SETTING_CHANGE - The bid strategy depends on conversion reporting and the customer
   * recently changed their conversion settings.
   */
  LEARNING_CONVERSION_SETTING_CHANGE = 8,
  /** LIMITED_BY_CPC_BID_CEILING - The bid strategy is limited by its bid ceiling. */
  LIMITED_BY_CPC_BID_CEILING = 9,
  /** LIMITED_BY_CPC_BID_FLOOR - The bid strategy is limited by its bid floor. */
  LIMITED_BY_CPC_BID_FLOOR = 10,
  /**
   * LIMITED_BY_DATA - The bid strategy is limited because there was not enough conversion
   * traffic over the past weeks.
   */
  LIMITED_BY_DATA = 11,
  /**
   * LIMITED_BY_BUDGET - A significant fraction of keywords in this bid strategy are limited by
   * budget.
   */
  LIMITED_BY_BUDGET = 12,
  /**
   * LIMITED_BY_LOW_PRIORITY_SPEND - The bid strategy cannot reach its target spend because its spend has
   * been de-prioritized.
   */
  LIMITED_BY_LOW_PRIORITY_SPEND = 13,
  /**
   * LIMITED_BY_LOW_QUALITY - A significant fraction of keywords in this bid strategy have a low
   * Quality Score.
   */
  LIMITED_BY_LOW_QUALITY = 14,
  /**
   * LIMITED_BY_INVENTORY - The bid strategy cannot fully spend its budget because of narrow
   * targeting.
   */
  LIMITED_BY_INVENTORY = 15,
  /**
   * MISCONFIGURED_ZERO_ELIGIBILITY - Missing conversion tracking (no pings present) and/or remarketing lists
   * for SSC.
   */
  MISCONFIGURED_ZERO_ELIGIBILITY = 16,
  /**
   * MISCONFIGURED_CONVERSION_TYPES - The bid strategy depends on conversion reporting and the customer is
   * lacking conversion types that might be reported against this strategy.
   */
  MISCONFIGURED_CONVERSION_TYPES = 17,
  /**
   * MISCONFIGURED_CONVERSION_SETTINGS - The bid strategy depends on conversion reporting and the customer's
   * conversion settings are misconfigured.
   */
  MISCONFIGURED_CONVERSION_SETTINGS = 18,
  /**
   * MISCONFIGURED_SHARED_BUDGET - There are campaigns outside the bid strategy that share budgets with
   * campaigns included in the strategy.
   */
  MISCONFIGURED_SHARED_BUDGET = 19,
  /** MISCONFIGURED_STRATEGY_TYPE - The campaign has an invalid strategy type and is not serving. */
  MISCONFIGURED_STRATEGY_TYPE = 20,
  /**
   * PAUSED - The bid strategy is not active. Either there are no active campaigns,
   * ad groups or keywords attached to the bid strategy. Or there are no
   * active budgets connected to the bid strategy.
   */
  PAUSED = 21,
  /** UNAVAILABLE - This bid strategy currently does not support status reporting. */
  UNAVAILABLE = 22,
  /**
   * MULTIPLE_LEARNING - There were multiple LEARNING_* system statuses for this bid strategy
   * during the time in question.
   */
  MULTIPLE_LEARNING = 23,
  /**
   * MULTIPLE_LIMITED - There were multiple LIMITED_* system statuses for this bid strategy
   * during the time in question.
   */
  MULTIPLE_LIMITED = 24,
  /**
   * MULTIPLE_MISCONFIGURED - There were multiple MISCONFIGURED_* system statuses for this bid strategy
   * during the time in question.
   */
  MULTIPLE_MISCONFIGURED = 25,
  /**
   * MULTIPLE - There were multiple system statuses for this bid strategy during the
   * time in question.
   */
  MULTIPLE = 26,
  UNRECOGNIZED = -1,
}

export function biddingStrategySystemStatusEnum_BiddingStrategySystemStatusFromJSON(
  object: any,
): BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.UNKNOWN;
    case 2:
    case "ENABLED":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.ENABLED;
    case 3:
    case "LEARNING_NEW":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_NEW;
    case 4:
    case "LEARNING_SETTING_CHANGE":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_SETTING_CHANGE;
    case 5:
    case "LEARNING_BUDGET_CHANGE":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_BUDGET_CHANGE;
    case 6:
    case "LEARNING_COMPOSITION_CHANGE":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_COMPOSITION_CHANGE;
    case 7:
    case "LEARNING_CONVERSION_TYPE_CHANGE":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_CONVERSION_TYPE_CHANGE;
    case 8:
    case "LEARNING_CONVERSION_SETTING_CHANGE":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_CONVERSION_SETTING_CHANGE;
    case 9:
    case "LIMITED_BY_CPC_BID_CEILING":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_CPC_BID_CEILING;
    case 10:
    case "LIMITED_BY_CPC_BID_FLOOR":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_CPC_BID_FLOOR;
    case 11:
    case "LIMITED_BY_DATA":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_DATA;
    case 12:
    case "LIMITED_BY_BUDGET":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_BUDGET;
    case 13:
    case "LIMITED_BY_LOW_PRIORITY_SPEND":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_LOW_PRIORITY_SPEND;
    case 14:
    case "LIMITED_BY_LOW_QUALITY":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_LOW_QUALITY;
    case 15:
    case "LIMITED_BY_INVENTORY":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_INVENTORY;
    case 16:
    case "MISCONFIGURED_ZERO_ELIGIBILITY":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MISCONFIGURED_ZERO_ELIGIBILITY;
    case 17:
    case "MISCONFIGURED_CONVERSION_TYPES":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MISCONFIGURED_CONVERSION_TYPES;
    case 18:
    case "MISCONFIGURED_CONVERSION_SETTINGS":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MISCONFIGURED_CONVERSION_SETTINGS;
    case 19:
    case "MISCONFIGURED_SHARED_BUDGET":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MISCONFIGURED_SHARED_BUDGET;
    case 20:
    case "MISCONFIGURED_STRATEGY_TYPE":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MISCONFIGURED_STRATEGY_TYPE;
    case 21:
    case "PAUSED":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.PAUSED;
    case 22:
    case "UNAVAILABLE":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.UNAVAILABLE;
    case 23:
    case "MULTIPLE_LEARNING":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MULTIPLE_LEARNING;
    case 24:
    case "MULTIPLE_LIMITED":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MULTIPLE_LIMITED;
    case 25:
    case "MULTIPLE_MISCONFIGURED":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MULTIPLE_MISCONFIGURED;
    case 26:
    case "MULTIPLE":
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MULTIPLE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.UNRECOGNIZED;
  }
}

export function biddingStrategySystemStatusEnum_BiddingStrategySystemStatusToJSON(
  object: BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus,
): string {
  switch (object) {
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.UNSPECIFIED:
      return "UNSPECIFIED";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.UNKNOWN:
      return "UNKNOWN";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.ENABLED:
      return "ENABLED";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_NEW:
      return "LEARNING_NEW";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_SETTING_CHANGE:
      return "LEARNING_SETTING_CHANGE";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_BUDGET_CHANGE:
      return "LEARNING_BUDGET_CHANGE";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_COMPOSITION_CHANGE:
      return "LEARNING_COMPOSITION_CHANGE";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_CONVERSION_TYPE_CHANGE:
      return "LEARNING_CONVERSION_TYPE_CHANGE";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LEARNING_CONVERSION_SETTING_CHANGE:
      return "LEARNING_CONVERSION_SETTING_CHANGE";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_CPC_BID_CEILING:
      return "LIMITED_BY_CPC_BID_CEILING";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_CPC_BID_FLOOR:
      return "LIMITED_BY_CPC_BID_FLOOR";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_DATA:
      return "LIMITED_BY_DATA";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_BUDGET:
      return "LIMITED_BY_BUDGET";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_LOW_PRIORITY_SPEND:
      return "LIMITED_BY_LOW_PRIORITY_SPEND";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_LOW_QUALITY:
      return "LIMITED_BY_LOW_QUALITY";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.LIMITED_BY_INVENTORY:
      return "LIMITED_BY_INVENTORY";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MISCONFIGURED_ZERO_ELIGIBILITY:
      return "MISCONFIGURED_ZERO_ELIGIBILITY";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MISCONFIGURED_CONVERSION_TYPES:
      return "MISCONFIGURED_CONVERSION_TYPES";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MISCONFIGURED_CONVERSION_SETTINGS:
      return "MISCONFIGURED_CONVERSION_SETTINGS";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MISCONFIGURED_SHARED_BUDGET:
      return "MISCONFIGURED_SHARED_BUDGET";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MISCONFIGURED_STRATEGY_TYPE:
      return "MISCONFIGURED_STRATEGY_TYPE";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.PAUSED:
      return "PAUSED";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.UNAVAILABLE:
      return "UNAVAILABLE";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MULTIPLE_LEARNING:
      return "MULTIPLE_LEARNING";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MULTIPLE_LIMITED:
      return "MULTIPLE_LIMITED";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MULTIPLE_MISCONFIGURED:
      return "MULTIPLE_MISCONFIGURED";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.MULTIPLE:
      return "MULTIPLE";
    case BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseBiddingStrategySystemStatusEnum(): BiddingStrategySystemStatusEnum {
  return {};
}

export const BiddingStrategySystemStatusEnum: MessageFns<BiddingStrategySystemStatusEnum> = {
  encode(_: BiddingStrategySystemStatusEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): BiddingStrategySystemStatusEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseBiddingStrategySystemStatusEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): BiddingStrategySystemStatusEnum {
    return {};
  },

  toJSON(_: BiddingStrategySystemStatusEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<BiddingStrategySystemStatusEnum>): BiddingStrategySystemStatusEnum {
    return BiddingStrategySystemStatusEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<BiddingStrategySystemStatusEnum>): BiddingStrategySystemStatusEnum {
    const message = createBaseBiddingStrategySystemStatusEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
