// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/enums/day_of_week.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.enums";

/** Container for enumeration of days of the week, for example, "Monday". */
export interface DayOfWeekEnum {
}

/** Enumerates days of the week, for example, "Monday". */
export enum DayOfWeekEnum_DayOfWeek {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The value is unknown in this version. */
  UNKNOWN = 1,
  /** MONDAY - Monday. */
  MONDAY = 2,
  /** TUESDAY - Tuesday. */
  TUESDAY = 3,
  /** WEDNESDAY - Wednesday. */
  WEDNESDAY = 4,
  /** THURSDAY - Thursday. */
  THURSDAY = 5,
  /** FRIDAY - Friday. */
  FRIDAY = 6,
  /** SATURDAY - Saturday. */
  SATURDAY = 7,
  /** SUNDAY - Sunday. */
  SUNDAY = 8,
  UNRECOGNIZED = -1,
}

export function dayOfWeekEnum_DayOfWeekFromJSON(object: any): DayOfWeekEnum_DayOfWeek {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return DayOfWeekEnum_DayOfWeek.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return DayOfWeekEnum_DayOfWeek.UNKNOWN;
    case 2:
    case "MONDAY":
      return DayOfWeekEnum_DayOfWeek.MONDAY;
    case 3:
    case "TUESDAY":
      return DayOfWeekEnum_DayOfWeek.TUESDAY;
    case 4:
    case "WEDNESDAY":
      return DayOfWeekEnum_DayOfWeek.WEDNESDAY;
    case 5:
    case "THURSDAY":
      return DayOfWeekEnum_DayOfWeek.THURSDAY;
    case 6:
    case "FRIDAY":
      return DayOfWeekEnum_DayOfWeek.FRIDAY;
    case 7:
    case "SATURDAY":
      return DayOfWeekEnum_DayOfWeek.SATURDAY;
    case 8:
    case "SUNDAY":
      return DayOfWeekEnum_DayOfWeek.SUNDAY;
    case -1:
    case "UNRECOGNIZED":
    default:
      return DayOfWeekEnum_DayOfWeek.UNRECOGNIZED;
  }
}

export function dayOfWeekEnum_DayOfWeekToJSON(object: DayOfWeekEnum_DayOfWeek): string {
  switch (object) {
    case DayOfWeekEnum_DayOfWeek.UNSPECIFIED:
      return "UNSPECIFIED";
    case DayOfWeekEnum_DayOfWeek.UNKNOWN:
      return "UNKNOWN";
    case DayOfWeekEnum_DayOfWeek.MONDAY:
      return "MONDAY";
    case DayOfWeekEnum_DayOfWeek.TUESDAY:
      return "TUESDAY";
    case DayOfWeekEnum_DayOfWeek.WEDNESDAY:
      return "WEDNESDAY";
    case DayOfWeekEnum_DayOfWeek.THURSDAY:
      return "THURSDAY";
    case DayOfWeekEnum_DayOfWeek.FRIDAY:
      return "FRIDAY";
    case DayOfWeekEnum_DayOfWeek.SATURDAY:
      return "SATURDAY";
    case DayOfWeekEnum_DayOfWeek.SUNDAY:
      return "SUNDAY";
    case DayOfWeekEnum_DayOfWeek.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseDayOfWeekEnum(): DayOfWeekEnum {
  return {};
}

export const DayOfWeekEnum: MessageFns<DayOfWeekEnum> = {
  encode(_: DayOfWeekEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DayOfWeekEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDayOfWeekEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): DayOfWeekEnum {
    return {};
  },

  toJSON(_: DayOfWeekEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<DayOfWeekEnum>): DayOfWeekEnum {
    return DayOfWeekEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<DayOfWeekEnum>): DayOfWeekEnum {
    const message = createBaseDayOfWeekEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
