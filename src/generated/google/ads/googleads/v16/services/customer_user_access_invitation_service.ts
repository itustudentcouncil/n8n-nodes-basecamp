// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/services/customer_user_access_invitation_service.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { CustomerUserAccessInvitation } from "../resources/customer_user_access_invitation.js";

export const protobufPackage = "google.ads.googleads.v16.services";

/**
 * Request message for
 * [CustomerUserAccessInvitationService.MutateCustomerUserAccessInvitation][google.ads.googleads.v16.services.CustomerUserAccessInvitationService.MutateCustomerUserAccessInvitation]
 */
export interface MutateCustomerUserAccessInvitationRequest {
  /** Required. The ID of the customer whose access invitation is being modified. */
  customerId: string;
  /** Required. The operation to perform on the access invitation */
  operation: CustomerUserAccessInvitationOperation | undefined;
}

/** A single operation (create or remove) on customer user access invitation. */
export interface CustomerUserAccessInvitationOperation {
  /**
   * Create operation: No resource name is expected for the new access
   * invitation.
   */
  create?:
    | CustomerUserAccessInvitation
    | undefined;
  /**
   * Remove operation: A resource name for the revoke invitation is
   * expected, in this format:
   *
   * `customers/{customer_id}/customerUserAccessInvitations/{invitation_id}`
   */
  remove?: string | undefined;
}

/** Response message for access invitation mutate. */
export interface MutateCustomerUserAccessInvitationResponse {
  /** Result for the mutate. */
  result: MutateCustomerUserAccessInvitationResult | undefined;
}

/** The result for the access invitation mutate. */
export interface MutateCustomerUserAccessInvitationResult {
  /** Returned for successful operations. */
  resourceName: string;
}

function createBaseMutateCustomerUserAccessInvitationRequest(): MutateCustomerUserAccessInvitationRequest {
  return { customerId: "", operation: undefined };
}

export const MutateCustomerUserAccessInvitationRequest: MessageFns<MutateCustomerUserAccessInvitationRequest> = {
  encode(message: MutateCustomerUserAccessInvitationRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.customerId !== "") {
      writer.uint32(10).string(message.customerId);
    }
    if (message.operation !== undefined) {
      CustomerUserAccessInvitationOperation.encode(message.operation, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): MutateCustomerUserAccessInvitationRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMutateCustomerUserAccessInvitationRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.customerId = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.operation = CustomerUserAccessInvitationOperation.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MutateCustomerUserAccessInvitationRequest {
    return {
      customerId: isSet(object.customerId) ? globalThis.String(object.customerId) : "",
      operation: isSet(object.operation) ? CustomerUserAccessInvitationOperation.fromJSON(object.operation) : undefined,
    };
  },

  toJSON(message: MutateCustomerUserAccessInvitationRequest): unknown {
    const obj: any = {};
    if (message.customerId !== "") {
      obj.customerId = message.customerId;
    }
    if (message.operation !== undefined) {
      obj.operation = CustomerUserAccessInvitationOperation.toJSON(message.operation);
    }
    return obj;
  },

  create(base?: DeepPartial<MutateCustomerUserAccessInvitationRequest>): MutateCustomerUserAccessInvitationRequest {
    return MutateCustomerUserAccessInvitationRequest.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<MutateCustomerUserAccessInvitationRequest>,
  ): MutateCustomerUserAccessInvitationRequest {
    const message = createBaseMutateCustomerUserAccessInvitationRequest();
    message.customerId = object.customerId ?? "";
    message.operation = (object.operation !== undefined && object.operation !== null)
      ? CustomerUserAccessInvitationOperation.fromPartial(object.operation)
      : undefined;
    return message;
  },
};

function createBaseCustomerUserAccessInvitationOperation(): CustomerUserAccessInvitationOperation {
  return { create: undefined, remove: undefined };
}

export const CustomerUserAccessInvitationOperation: MessageFns<CustomerUserAccessInvitationOperation> = {
  encode(message: CustomerUserAccessInvitationOperation, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.create !== undefined) {
      CustomerUserAccessInvitation.encode(message.create, writer.uint32(10).fork()).join();
    }
    if (message.remove !== undefined) {
      writer.uint32(18).string(message.remove);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomerUserAccessInvitationOperation {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomerUserAccessInvitationOperation();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.create = CustomerUserAccessInvitation.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.remove = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CustomerUserAccessInvitationOperation {
    return {
      create: isSet(object.create) ? CustomerUserAccessInvitation.fromJSON(object.create) : undefined,
      remove: isSet(object.remove) ? globalThis.String(object.remove) : undefined,
    };
  },

  toJSON(message: CustomerUserAccessInvitationOperation): unknown {
    const obj: any = {};
    if (message.create !== undefined) {
      obj.create = CustomerUserAccessInvitation.toJSON(message.create);
    }
    if (message.remove !== undefined) {
      obj.remove = message.remove;
    }
    return obj;
  },

  create(base?: DeepPartial<CustomerUserAccessInvitationOperation>): CustomerUserAccessInvitationOperation {
    return CustomerUserAccessInvitationOperation.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CustomerUserAccessInvitationOperation>): CustomerUserAccessInvitationOperation {
    const message = createBaseCustomerUserAccessInvitationOperation();
    message.create = (object.create !== undefined && object.create !== null)
      ? CustomerUserAccessInvitation.fromPartial(object.create)
      : undefined;
    message.remove = object.remove ?? undefined;
    return message;
  },
};

function createBaseMutateCustomerUserAccessInvitationResponse(): MutateCustomerUserAccessInvitationResponse {
  return { result: undefined };
}

export const MutateCustomerUserAccessInvitationResponse: MessageFns<MutateCustomerUserAccessInvitationResponse> = {
  encode(message: MutateCustomerUserAccessInvitationResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.result !== undefined) {
      MutateCustomerUserAccessInvitationResult.encode(message.result, writer.uint32(10).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): MutateCustomerUserAccessInvitationResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMutateCustomerUserAccessInvitationResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.result = MutateCustomerUserAccessInvitationResult.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MutateCustomerUserAccessInvitationResponse {
    return {
      result: isSet(object.result) ? MutateCustomerUserAccessInvitationResult.fromJSON(object.result) : undefined,
    };
  },

  toJSON(message: MutateCustomerUserAccessInvitationResponse): unknown {
    const obj: any = {};
    if (message.result !== undefined) {
      obj.result = MutateCustomerUserAccessInvitationResult.toJSON(message.result);
    }
    return obj;
  },

  create(base?: DeepPartial<MutateCustomerUserAccessInvitationResponse>): MutateCustomerUserAccessInvitationResponse {
    return MutateCustomerUserAccessInvitationResponse.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<MutateCustomerUserAccessInvitationResponse>,
  ): MutateCustomerUserAccessInvitationResponse {
    const message = createBaseMutateCustomerUserAccessInvitationResponse();
    message.result = (object.result !== undefined && object.result !== null)
      ? MutateCustomerUserAccessInvitationResult.fromPartial(object.result)
      : undefined;
    return message;
  },
};

function createBaseMutateCustomerUserAccessInvitationResult(): MutateCustomerUserAccessInvitationResult {
  return { resourceName: "" };
}

export const MutateCustomerUserAccessInvitationResult: MessageFns<MutateCustomerUserAccessInvitationResult> = {
  encode(message: MutateCustomerUserAccessInvitationResult, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): MutateCustomerUserAccessInvitationResult {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMutateCustomerUserAccessInvitationResult();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MutateCustomerUserAccessInvitationResult {
    return { resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "" };
  },

  toJSON(message: MutateCustomerUserAccessInvitationResult): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    return obj;
  },

  create(base?: DeepPartial<MutateCustomerUserAccessInvitationResult>): MutateCustomerUserAccessInvitationResult {
    return MutateCustomerUserAccessInvitationResult.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<MutateCustomerUserAccessInvitationResult>): MutateCustomerUserAccessInvitationResult {
    const message = createBaseMutateCustomerUserAccessInvitationResult();
    message.resourceName = object.resourceName ?? "";
    return message;
  },
};

/**
 * This service manages the access invitation extended to users for a given
 * customer.
 */
export type CustomerUserAccessInvitationServiceDefinition = typeof CustomerUserAccessInvitationServiceDefinition;
export const CustomerUserAccessInvitationServiceDefinition = {
  name: "CustomerUserAccessInvitationService",
  fullName: "google.ads.googleads.v16.services.CustomerUserAccessInvitationService",
  methods: {
    /**
     * Creates or removes an access invitation.
     *
     * List of thrown errors:
     *   [AccessInvitationError]()
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     */
    mutateCustomerUserAccessInvitation: {
      name: "MutateCustomerUserAccessInvitation",
      requestType: MutateCustomerUserAccessInvitationRequest,
      requestStream: false,
      responseType: MutateCustomerUserAccessInvitationResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              21,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              95,
              105,
              100,
              44,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
            ]),
          ],
          578365826: [
            Buffer.from([
              72,
              58,
              1,
              42,
              34,
              67,
              47,
              118,
              49,
              54,
              47,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              115,
              47,
              123,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              95,
              105,
              100,
              61,
              42,
              125,
              47,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              85,
              115,
              101,
              114,
              65,
              99,
              99,
              101,
              115,
              115,
              73,
              110,
              118,
              105,
              116,
              97,
              116,
              105,
              111,
              110,
              115,
              58,
              109,
              117,
              116,
              97,
              116,
              101,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface CustomerUserAccessInvitationServiceImplementation<CallContextExt = {}> {
  /**
   * Creates or removes an access invitation.
   *
   * List of thrown errors:
   *   [AccessInvitationError]()
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  mutateCustomerUserAccessInvitation(
    request: MutateCustomerUserAccessInvitationRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<MutateCustomerUserAccessInvitationResponse>>;
}

export interface CustomerUserAccessInvitationServiceClient<CallOptionsExt = {}> {
  /**
   * Creates or removes an access invitation.
   *
   * List of thrown errors:
   *   [AccessInvitationError]()
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  mutateCustomerUserAccessInvitation(
    request: DeepPartial<MutateCustomerUserAccessInvitationRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<MutateCustomerUserAccessInvitationResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
