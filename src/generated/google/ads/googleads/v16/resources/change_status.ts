// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/resources/change_status.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  ChangeStatusOperationEnum_ChangeStatusOperation,
  changeStatusOperationEnum_ChangeStatusOperationFromJSON,
  changeStatusOperationEnum_ChangeStatusOperationToJSON,
} from "../enums/change_status_operation.js";
import {
  ChangeStatusResourceTypeEnum_ChangeStatusResourceType,
  changeStatusResourceTypeEnum_ChangeStatusResourceTypeFromJSON,
  changeStatusResourceTypeEnum_ChangeStatusResourceTypeToJSON,
} from "../enums/change_status_resource_type.js";

export const protobufPackage = "google.ads.googleads.v16.resources";

/**
 * Describes the status of returned resource. ChangeStatus could have up to 3
 * minutes delay to reflect a new change.
 */
export interface ChangeStatus {
  /**
   * Output only. The resource name of the change status.
   * Change status resource names have the form:
   *
   * `customers/{customer_id}/changeStatus/{change_status_id}`
   */
  resourceName: string;
  /**
   * Output only. Time at which the most recent change has occurred on this
   * resource.
   */
  lastChangeDateTime?:
    | string
    | undefined;
  /**
   * Output only. Represents the type of the changed resource. This dictates
   * what fields will be set. For example, for AD_GROUP, campaign and ad_group
   * fields will be set.
   */
  resourceType: ChangeStatusResourceTypeEnum_ChangeStatusResourceType;
  /** Output only. The Campaign affected by this change. */
  campaign?:
    | string
    | undefined;
  /** Output only. The AdGroup affected by this change. */
  adGroup?:
    | string
    | undefined;
  /** Output only. Represents the status of the changed resource. */
  resourceStatus: ChangeStatusOperationEnum_ChangeStatusOperation;
  /** Output only. The AdGroupAd affected by this change. */
  adGroupAd?:
    | string
    | undefined;
  /** Output only. The AdGroupCriterion affected by this change. */
  adGroupCriterion?:
    | string
    | undefined;
  /** Output only. The CampaignCriterion affected by this change. */
  campaignCriterion?:
    | string
    | undefined;
  /** Output only. The Feed affected by this change. */
  feed?:
    | string
    | undefined;
  /** Output only. The FeedItem affected by this change. */
  feedItem?:
    | string
    | undefined;
  /** Output only. The AdGroupFeed affected by this change. */
  adGroupFeed?:
    | string
    | undefined;
  /** Output only. The CampaignFeed affected by this change. */
  campaignFeed?:
    | string
    | undefined;
  /** Output only. The AdGroupBidModifier affected by this change. */
  adGroupBidModifier?:
    | string
    | undefined;
  /** Output only. The SharedSet affected by this change. */
  sharedSet: string;
  /** Output only. The CampaignSharedSet affected by this change. */
  campaignSharedSet: string;
  /** Output only. The Asset affected by this change. */
  asset: string;
  /** Output only. The CustomerAsset affected by this change. */
  customerAsset: string;
  /** Output only. The CampaignAsset affected by this change. */
  campaignAsset: string;
  /** Output only. The AdGroupAsset affected by this change. */
  adGroupAsset: string;
  /** Output only. The CombinedAudience affected by this change. */
  combinedAudience: string;
}

function createBaseChangeStatus(): ChangeStatus {
  return {
    resourceName: "",
    lastChangeDateTime: undefined,
    resourceType: 0,
    campaign: undefined,
    adGroup: undefined,
    resourceStatus: 0,
    adGroupAd: undefined,
    adGroupCriterion: undefined,
    campaignCriterion: undefined,
    feed: undefined,
    feedItem: undefined,
    adGroupFeed: undefined,
    campaignFeed: undefined,
    adGroupBidModifier: undefined,
    sharedSet: "",
    campaignSharedSet: "",
    asset: "",
    customerAsset: "",
    campaignAsset: "",
    adGroupAsset: "",
    combinedAudience: "",
  };
}

export const ChangeStatus: MessageFns<ChangeStatus> = {
  encode(message: ChangeStatus, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.lastChangeDateTime !== undefined) {
      writer.uint32(194).string(message.lastChangeDateTime);
    }
    if (message.resourceType !== 0) {
      writer.uint32(32).int32(message.resourceType);
    }
    if (message.campaign !== undefined) {
      writer.uint32(138).string(message.campaign);
    }
    if (message.adGroup !== undefined) {
      writer.uint32(146).string(message.adGroup);
    }
    if (message.resourceStatus !== 0) {
      writer.uint32(64).int32(message.resourceStatus);
    }
    if (message.adGroupAd !== undefined) {
      writer.uint32(202).string(message.adGroupAd);
    }
    if (message.adGroupCriterion !== undefined) {
      writer.uint32(210).string(message.adGroupCriterion);
    }
    if (message.campaignCriterion !== undefined) {
      writer.uint32(218).string(message.campaignCriterion);
    }
    if (message.feed !== undefined) {
      writer.uint32(226).string(message.feed);
    }
    if (message.feedItem !== undefined) {
      writer.uint32(234).string(message.feedItem);
    }
    if (message.adGroupFeed !== undefined) {
      writer.uint32(242).string(message.adGroupFeed);
    }
    if (message.campaignFeed !== undefined) {
      writer.uint32(250).string(message.campaignFeed);
    }
    if (message.adGroupBidModifier !== undefined) {
      writer.uint32(258).string(message.adGroupBidModifier);
    }
    if (message.sharedSet !== "") {
      writer.uint32(266).string(message.sharedSet);
    }
    if (message.campaignSharedSet !== "") {
      writer.uint32(274).string(message.campaignSharedSet);
    }
    if (message.asset !== "") {
      writer.uint32(282).string(message.asset);
    }
    if (message.customerAsset !== "") {
      writer.uint32(290).string(message.customerAsset);
    }
    if (message.campaignAsset !== "") {
      writer.uint32(298).string(message.campaignAsset);
    }
    if (message.adGroupAsset !== "") {
      writer.uint32(306).string(message.adGroupAsset);
    }
    if (message.combinedAudience !== "") {
      writer.uint32(322).string(message.combinedAudience);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ChangeStatus {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseChangeStatus();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 24:
          if (tag !== 194) {
            break;
          }

          message.lastChangeDateTime = reader.string();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.resourceType = reader.int32() as any;
          continue;
        case 17:
          if (tag !== 138) {
            break;
          }

          message.campaign = reader.string();
          continue;
        case 18:
          if (tag !== 146) {
            break;
          }

          message.adGroup = reader.string();
          continue;
        case 8:
          if (tag !== 64) {
            break;
          }

          message.resourceStatus = reader.int32() as any;
          continue;
        case 25:
          if (tag !== 202) {
            break;
          }

          message.adGroupAd = reader.string();
          continue;
        case 26:
          if (tag !== 210) {
            break;
          }

          message.adGroupCriterion = reader.string();
          continue;
        case 27:
          if (tag !== 218) {
            break;
          }

          message.campaignCriterion = reader.string();
          continue;
        case 28:
          if (tag !== 226) {
            break;
          }

          message.feed = reader.string();
          continue;
        case 29:
          if (tag !== 234) {
            break;
          }

          message.feedItem = reader.string();
          continue;
        case 30:
          if (tag !== 242) {
            break;
          }

          message.adGroupFeed = reader.string();
          continue;
        case 31:
          if (tag !== 250) {
            break;
          }

          message.campaignFeed = reader.string();
          continue;
        case 32:
          if (tag !== 258) {
            break;
          }

          message.adGroupBidModifier = reader.string();
          continue;
        case 33:
          if (tag !== 266) {
            break;
          }

          message.sharedSet = reader.string();
          continue;
        case 34:
          if (tag !== 274) {
            break;
          }

          message.campaignSharedSet = reader.string();
          continue;
        case 35:
          if (tag !== 282) {
            break;
          }

          message.asset = reader.string();
          continue;
        case 36:
          if (tag !== 290) {
            break;
          }

          message.customerAsset = reader.string();
          continue;
        case 37:
          if (tag !== 298) {
            break;
          }

          message.campaignAsset = reader.string();
          continue;
        case 38:
          if (tag !== 306) {
            break;
          }

          message.adGroupAsset = reader.string();
          continue;
        case 40:
          if (tag !== 322) {
            break;
          }

          message.combinedAudience = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ChangeStatus {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      lastChangeDateTime: isSet(object.lastChangeDateTime) ? globalThis.String(object.lastChangeDateTime) : undefined,
      resourceType: isSet(object.resourceType)
        ? changeStatusResourceTypeEnum_ChangeStatusResourceTypeFromJSON(object.resourceType)
        : 0,
      campaign: isSet(object.campaign) ? globalThis.String(object.campaign) : undefined,
      adGroup: isSet(object.adGroup) ? globalThis.String(object.adGroup) : undefined,
      resourceStatus: isSet(object.resourceStatus)
        ? changeStatusOperationEnum_ChangeStatusOperationFromJSON(object.resourceStatus)
        : 0,
      adGroupAd: isSet(object.adGroupAd) ? globalThis.String(object.adGroupAd) : undefined,
      adGroupCriterion: isSet(object.adGroupCriterion) ? globalThis.String(object.adGroupCriterion) : undefined,
      campaignCriterion: isSet(object.campaignCriterion) ? globalThis.String(object.campaignCriterion) : undefined,
      feed: isSet(object.feed) ? globalThis.String(object.feed) : undefined,
      feedItem: isSet(object.feedItem) ? globalThis.String(object.feedItem) : undefined,
      adGroupFeed: isSet(object.adGroupFeed) ? globalThis.String(object.adGroupFeed) : undefined,
      campaignFeed: isSet(object.campaignFeed) ? globalThis.String(object.campaignFeed) : undefined,
      adGroupBidModifier: isSet(object.adGroupBidModifier) ? globalThis.String(object.adGroupBidModifier) : undefined,
      sharedSet: isSet(object.sharedSet) ? globalThis.String(object.sharedSet) : "",
      campaignSharedSet: isSet(object.campaignSharedSet) ? globalThis.String(object.campaignSharedSet) : "",
      asset: isSet(object.asset) ? globalThis.String(object.asset) : "",
      customerAsset: isSet(object.customerAsset) ? globalThis.String(object.customerAsset) : "",
      campaignAsset: isSet(object.campaignAsset) ? globalThis.String(object.campaignAsset) : "",
      adGroupAsset: isSet(object.adGroupAsset) ? globalThis.String(object.adGroupAsset) : "",
      combinedAudience: isSet(object.combinedAudience) ? globalThis.String(object.combinedAudience) : "",
    };
  },

  toJSON(message: ChangeStatus): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.lastChangeDateTime !== undefined) {
      obj.lastChangeDateTime = message.lastChangeDateTime;
    }
    if (message.resourceType !== 0) {
      obj.resourceType = changeStatusResourceTypeEnum_ChangeStatusResourceTypeToJSON(message.resourceType);
    }
    if (message.campaign !== undefined) {
      obj.campaign = message.campaign;
    }
    if (message.adGroup !== undefined) {
      obj.adGroup = message.adGroup;
    }
    if (message.resourceStatus !== 0) {
      obj.resourceStatus = changeStatusOperationEnum_ChangeStatusOperationToJSON(message.resourceStatus);
    }
    if (message.adGroupAd !== undefined) {
      obj.adGroupAd = message.adGroupAd;
    }
    if (message.adGroupCriterion !== undefined) {
      obj.adGroupCriterion = message.adGroupCriterion;
    }
    if (message.campaignCriterion !== undefined) {
      obj.campaignCriterion = message.campaignCriterion;
    }
    if (message.feed !== undefined) {
      obj.feed = message.feed;
    }
    if (message.feedItem !== undefined) {
      obj.feedItem = message.feedItem;
    }
    if (message.adGroupFeed !== undefined) {
      obj.adGroupFeed = message.adGroupFeed;
    }
    if (message.campaignFeed !== undefined) {
      obj.campaignFeed = message.campaignFeed;
    }
    if (message.adGroupBidModifier !== undefined) {
      obj.adGroupBidModifier = message.adGroupBidModifier;
    }
    if (message.sharedSet !== "") {
      obj.sharedSet = message.sharedSet;
    }
    if (message.campaignSharedSet !== "") {
      obj.campaignSharedSet = message.campaignSharedSet;
    }
    if (message.asset !== "") {
      obj.asset = message.asset;
    }
    if (message.customerAsset !== "") {
      obj.customerAsset = message.customerAsset;
    }
    if (message.campaignAsset !== "") {
      obj.campaignAsset = message.campaignAsset;
    }
    if (message.adGroupAsset !== "") {
      obj.adGroupAsset = message.adGroupAsset;
    }
    if (message.combinedAudience !== "") {
      obj.combinedAudience = message.combinedAudience;
    }
    return obj;
  },

  create(base?: DeepPartial<ChangeStatus>): ChangeStatus {
    return ChangeStatus.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ChangeStatus>): ChangeStatus {
    const message = createBaseChangeStatus();
    message.resourceName = object.resourceName ?? "";
    message.lastChangeDateTime = object.lastChangeDateTime ?? undefined;
    message.resourceType = object.resourceType ?? 0;
    message.campaign = object.campaign ?? undefined;
    message.adGroup = object.adGroup ?? undefined;
    message.resourceStatus = object.resourceStatus ?? 0;
    message.adGroupAd = object.adGroupAd ?? undefined;
    message.adGroupCriterion = object.adGroupCriterion ?? undefined;
    message.campaignCriterion = object.campaignCriterion ?? undefined;
    message.feed = object.feed ?? undefined;
    message.feedItem = object.feedItem ?? undefined;
    message.adGroupFeed = object.adGroupFeed ?? undefined;
    message.campaignFeed = object.campaignFeed ?? undefined;
    message.adGroupBidModifier = object.adGroupBidModifier ?? undefined;
    message.sharedSet = object.sharedSet ?? "";
    message.campaignSharedSet = object.campaignSharedSet ?? "";
    message.asset = object.asset ?? "";
    message.customerAsset = object.customerAsset ?? "";
    message.campaignAsset = object.campaignAsset ?? "";
    message.adGroupAsset = object.adGroupAsset ?? "";
    message.combinedAudience = object.combinedAudience ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
