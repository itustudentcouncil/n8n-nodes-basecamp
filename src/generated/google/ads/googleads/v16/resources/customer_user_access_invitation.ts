// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/resources/customer_user_access_invitation.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  AccessInvitationStatusEnum_AccessInvitationStatus,
  accessInvitationStatusEnum_AccessInvitationStatusFromJSON,
  accessInvitationStatusEnum_AccessInvitationStatusToJSON,
} from "../enums/access_invitation_status.js";
import {
  AccessRoleEnum_AccessRole,
  accessRoleEnum_AccessRoleFromJSON,
  accessRoleEnum_AccessRoleToJSON,
} from "../enums/access_role.js";

export const protobufPackage = "google.ads.googleads.v16.resources";

/** Represent an invitation to a new user on this customer account. */
export interface CustomerUserAccessInvitation {
  /**
   * Immutable. Name of the resource.
   * Resource names have the form:
   * `customers/{customer_id}/customerUserAccessInvitations/{invitation_id}`
   */
  resourceName: string;
  /**
   * Output only. The ID of the invitation.
   * This field is read-only.
   */
  invitationId: Long;
  /** Immutable. Access role of the user. */
  accessRole: AccessRoleEnum_AccessRole;
  /**
   * Immutable. Email address the invitation was sent to.
   * This can differ from the email address of the account
   * that accepts the invite.
   */
  emailAddress: string;
  /**
   * Output only. Time invitation was created.
   * This field is read-only.
   * The format is "YYYY-MM-DD HH:MM:SS".
   * Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
   */
  creationDateTime: string;
  /** Output only. Invitation status of the user. */
  invitationStatus: AccessInvitationStatusEnum_AccessInvitationStatus;
}

function createBaseCustomerUserAccessInvitation(): CustomerUserAccessInvitation {
  return {
    resourceName: "",
    invitationId: Long.ZERO,
    accessRole: 0,
    emailAddress: "",
    creationDateTime: "",
    invitationStatus: 0,
  };
}

export const CustomerUserAccessInvitation: MessageFns<CustomerUserAccessInvitation> = {
  encode(message: CustomerUserAccessInvitation, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (!message.invitationId.equals(Long.ZERO)) {
      writer.uint32(16).int64(message.invitationId.toString());
    }
    if (message.accessRole !== 0) {
      writer.uint32(24).int32(message.accessRole);
    }
    if (message.emailAddress !== "") {
      writer.uint32(34).string(message.emailAddress);
    }
    if (message.creationDateTime !== "") {
      writer.uint32(42).string(message.creationDateTime);
    }
    if (message.invitationStatus !== 0) {
      writer.uint32(48).int32(message.invitationStatus);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomerUserAccessInvitation {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomerUserAccessInvitation();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.invitationId = Long.fromString(reader.int64().toString());
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.accessRole = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.emailAddress = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.creationDateTime = reader.string();
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.invitationStatus = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CustomerUserAccessInvitation {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      invitationId: isSet(object.invitationId) ? Long.fromValue(object.invitationId) : Long.ZERO,
      accessRole: isSet(object.accessRole) ? accessRoleEnum_AccessRoleFromJSON(object.accessRole) : 0,
      emailAddress: isSet(object.emailAddress) ? globalThis.String(object.emailAddress) : "",
      creationDateTime: isSet(object.creationDateTime) ? globalThis.String(object.creationDateTime) : "",
      invitationStatus: isSet(object.invitationStatus)
        ? accessInvitationStatusEnum_AccessInvitationStatusFromJSON(object.invitationStatus)
        : 0,
    };
  },

  toJSON(message: CustomerUserAccessInvitation): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (!message.invitationId.equals(Long.ZERO)) {
      obj.invitationId = (message.invitationId || Long.ZERO).toString();
    }
    if (message.accessRole !== 0) {
      obj.accessRole = accessRoleEnum_AccessRoleToJSON(message.accessRole);
    }
    if (message.emailAddress !== "") {
      obj.emailAddress = message.emailAddress;
    }
    if (message.creationDateTime !== "") {
      obj.creationDateTime = message.creationDateTime;
    }
    if (message.invitationStatus !== 0) {
      obj.invitationStatus = accessInvitationStatusEnum_AccessInvitationStatusToJSON(message.invitationStatus);
    }
    return obj;
  },

  create(base?: DeepPartial<CustomerUserAccessInvitation>): CustomerUserAccessInvitation {
    return CustomerUserAccessInvitation.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CustomerUserAccessInvitation>): CustomerUserAccessInvitation {
    const message = createBaseCustomerUserAccessInvitation();
    message.resourceName = object.resourceName ?? "";
    message.invitationId = (object.invitationId !== undefined && object.invitationId !== null)
      ? Long.fromValue(object.invitationId)
      : Long.ZERO;
    message.accessRole = object.accessRole ?? 0;
    message.emailAddress = object.emailAddress ?? "";
    message.creationDateTime = object.creationDateTime ?? "";
    message.invitationStatus = object.invitationStatus ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
