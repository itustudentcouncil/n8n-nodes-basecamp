// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/resources/campaign_lifecycle_goal.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { LifecycleGoalValueSettings } from "../common/lifecycle_goals.js";
import {
  CustomerAcquisitionOptimizationModeEnum_CustomerAcquisitionOptimizationMode,
  customerAcquisitionOptimizationModeEnum_CustomerAcquisitionOptimizationModeFromJSON,
  customerAcquisitionOptimizationModeEnum_CustomerAcquisitionOptimizationModeToJSON,
} from "../enums/customer_acquisition_optimization_mode.js";

export const protobufPackage = "google.ads.googleads.v16.resources";

/** Campaign level customer lifecycle goal settings. */
export interface CampaignLifecycleGoal {
  /**
   * Immutable. The resource name of the customer lifecycle goal of a campaign.
   *
   * `customers/{customer_id}/campaignLifecycleGoal/{campaign_id}`
   */
  resourceName: string;
  /** Output only. The campaign where the goal is attached. */
  campaign: string;
  /**
   * Output only. The customer acquisition goal settings for the campaign. The
   * customer acquisition goal is described in this article:
   * https://support.google.com/google-ads/answer/12080169
   */
  customerAcquisitionGoalSettings: CustomerAcquisitionGoalSettings | undefined;
}

/** The customer acquisition goal settings for the campaign. */
export interface CustomerAcquisitionGoalSettings {
  /** Output only. Customer acquisition optimization mode of this campaign. */
  optimizationMode: CustomerAcquisitionOptimizationModeEnum_CustomerAcquisitionOptimizationMode;
  /** Output only. Campaign specific values for the customer acquisition goal. */
  valueSettings: LifecycleGoalValueSettings | undefined;
}

function createBaseCampaignLifecycleGoal(): CampaignLifecycleGoal {
  return { resourceName: "", campaign: "", customerAcquisitionGoalSettings: undefined };
}

export const CampaignLifecycleGoal: MessageFns<CampaignLifecycleGoal> = {
  encode(message: CampaignLifecycleGoal, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.campaign !== "") {
      writer.uint32(18).string(message.campaign);
    }
    if (message.customerAcquisitionGoalSettings !== undefined) {
      CustomerAcquisitionGoalSettings.encode(message.customerAcquisitionGoalSettings, writer.uint32(26).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CampaignLifecycleGoal {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCampaignLifecycleGoal();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.campaign = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.customerAcquisitionGoalSettings = CustomerAcquisitionGoalSettings.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CampaignLifecycleGoal {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      campaign: isSet(object.campaign) ? globalThis.String(object.campaign) : "",
      customerAcquisitionGoalSettings: isSet(object.customerAcquisitionGoalSettings)
        ? CustomerAcquisitionGoalSettings.fromJSON(object.customerAcquisitionGoalSettings)
        : undefined,
    };
  },

  toJSON(message: CampaignLifecycleGoal): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.campaign !== "") {
      obj.campaign = message.campaign;
    }
    if (message.customerAcquisitionGoalSettings !== undefined) {
      obj.customerAcquisitionGoalSettings = CustomerAcquisitionGoalSettings.toJSON(
        message.customerAcquisitionGoalSettings,
      );
    }
    return obj;
  },

  create(base?: DeepPartial<CampaignLifecycleGoal>): CampaignLifecycleGoal {
    return CampaignLifecycleGoal.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CampaignLifecycleGoal>): CampaignLifecycleGoal {
    const message = createBaseCampaignLifecycleGoal();
    message.resourceName = object.resourceName ?? "";
    message.campaign = object.campaign ?? "";
    message.customerAcquisitionGoalSettings =
      (object.customerAcquisitionGoalSettings !== undefined && object.customerAcquisitionGoalSettings !== null)
        ? CustomerAcquisitionGoalSettings.fromPartial(object.customerAcquisitionGoalSettings)
        : undefined;
    return message;
  },
};

function createBaseCustomerAcquisitionGoalSettings(): CustomerAcquisitionGoalSettings {
  return { optimizationMode: 0, valueSettings: undefined };
}

export const CustomerAcquisitionGoalSettings: MessageFns<CustomerAcquisitionGoalSettings> = {
  encode(message: CustomerAcquisitionGoalSettings, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.optimizationMode !== 0) {
      writer.uint32(8).int32(message.optimizationMode);
    }
    if (message.valueSettings !== undefined) {
      LifecycleGoalValueSettings.encode(message.valueSettings, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomerAcquisitionGoalSettings {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomerAcquisitionGoalSettings();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.optimizationMode = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.valueSettings = LifecycleGoalValueSettings.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CustomerAcquisitionGoalSettings {
    return {
      optimizationMode: isSet(object.optimizationMode)
        ? customerAcquisitionOptimizationModeEnum_CustomerAcquisitionOptimizationModeFromJSON(object.optimizationMode)
        : 0,
      valueSettings: isSet(object.valueSettings)
        ? LifecycleGoalValueSettings.fromJSON(object.valueSettings)
        : undefined,
    };
  },

  toJSON(message: CustomerAcquisitionGoalSettings): unknown {
    const obj: any = {};
    if (message.optimizationMode !== 0) {
      obj.optimizationMode = customerAcquisitionOptimizationModeEnum_CustomerAcquisitionOptimizationModeToJSON(
        message.optimizationMode,
      );
    }
    if (message.valueSettings !== undefined) {
      obj.valueSettings = LifecycleGoalValueSettings.toJSON(message.valueSettings);
    }
    return obj;
  },

  create(base?: DeepPartial<CustomerAcquisitionGoalSettings>): CustomerAcquisitionGoalSettings {
    return CustomerAcquisitionGoalSettings.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CustomerAcquisitionGoalSettings>): CustomerAcquisitionGoalSettings {
    const message = createBaseCustomerAcquisitionGoalSettings();
    message.optimizationMode = object.optimizationMode ?? 0;
    message.valueSettings = (object.valueSettings !== undefined && object.valueSettings !== null)
      ? LifecycleGoalValueSettings.fromPartial(object.valueSettings)
      : undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
