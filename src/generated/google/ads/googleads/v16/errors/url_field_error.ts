// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/errors/url_field_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.errors";

/** Container for enum describing possible url field errors. */
export interface UrlFieldErrorEnum {
}

/** Enum describing possible url field errors. */
export enum UrlFieldErrorEnum_UrlFieldError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /** INVALID_TRACKING_URL_TEMPLATE - The tracking url template is invalid. */
  INVALID_TRACKING_URL_TEMPLATE = 2,
  /** INVALID_TAG_IN_TRACKING_URL_TEMPLATE - The tracking url template contains invalid tag. */
  INVALID_TAG_IN_TRACKING_URL_TEMPLATE = 3,
  /**
   * MISSING_TRACKING_URL_TEMPLATE_TAG - The tracking url template must contain at least one tag (for example,
   * {lpurl}), This applies only to tracking url template associated with
   * website ads or product ads.
   */
  MISSING_TRACKING_URL_TEMPLATE_TAG = 4,
  /**
   * MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE - The tracking url template must start with a valid protocol (or lpurl
   * tag).
   */
  MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE = 5,
  /** INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE - The tracking url template starts with an invalid protocol. */
  INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE = 6,
  /** MALFORMED_TRACKING_URL_TEMPLATE - The tracking url template contains illegal characters. */
  MALFORMED_TRACKING_URL_TEMPLATE = 7,
  /** MISSING_HOST_IN_TRACKING_URL_TEMPLATE - The tracking url template must contain a host name (or lpurl tag). */
  MISSING_HOST_IN_TRACKING_URL_TEMPLATE = 8,
  /**
   * INVALID_TLD_IN_TRACKING_URL_TEMPLATE - The tracking url template has an invalid or missing top level domain
   * extension.
   */
  INVALID_TLD_IN_TRACKING_URL_TEMPLATE = 9,
  /**
   * REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG - The tracking url template contains nested occurrences of the same
   * conditional tag (for example, {ifmobile:{ifmobile:x}}).
   */
  REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG = 10,
  /** INVALID_FINAL_URL - The final url is invalid. */
  INVALID_FINAL_URL = 11,
  /** INVALID_TAG_IN_FINAL_URL - The final url contains invalid tag. */
  INVALID_TAG_IN_FINAL_URL = 12,
  /**
   * REDUNDANT_NESTED_FINAL_URL_TAG - The final url contains nested occurrences of the same conditional tag
   * (for example, {ifmobile:{ifmobile:x}}).
   */
  REDUNDANT_NESTED_FINAL_URL_TAG = 13,
  /** MISSING_PROTOCOL_IN_FINAL_URL - The final url must start with a valid protocol. */
  MISSING_PROTOCOL_IN_FINAL_URL = 14,
  /** INVALID_PROTOCOL_IN_FINAL_URL - The final url starts with an invalid protocol. */
  INVALID_PROTOCOL_IN_FINAL_URL = 15,
  /** MALFORMED_FINAL_URL - The final url contains illegal characters. */
  MALFORMED_FINAL_URL = 16,
  /** MISSING_HOST_IN_FINAL_URL - The final url must contain a host name. */
  MISSING_HOST_IN_FINAL_URL = 17,
  /**
   * INVALID_TLD_IN_FINAL_URL - The tracking url template has an invalid or missing top level domain
   * extension.
   */
  INVALID_TLD_IN_FINAL_URL = 18,
  /** INVALID_FINAL_MOBILE_URL - The final mobile url is invalid. */
  INVALID_FINAL_MOBILE_URL = 19,
  /** INVALID_TAG_IN_FINAL_MOBILE_URL - The final mobile url contains invalid tag. */
  INVALID_TAG_IN_FINAL_MOBILE_URL = 20,
  /**
   * REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG - The final mobile url contains nested occurrences of the same conditional
   * tag (for example, {ifmobile:{ifmobile:x}}).
   */
  REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG = 21,
  /** MISSING_PROTOCOL_IN_FINAL_MOBILE_URL - The final mobile url must start with a valid protocol. */
  MISSING_PROTOCOL_IN_FINAL_MOBILE_URL = 22,
  /** INVALID_PROTOCOL_IN_FINAL_MOBILE_URL - The final mobile url starts with an invalid protocol. */
  INVALID_PROTOCOL_IN_FINAL_MOBILE_URL = 23,
  /** MALFORMED_FINAL_MOBILE_URL - The final mobile url contains illegal characters. */
  MALFORMED_FINAL_MOBILE_URL = 24,
  /** MISSING_HOST_IN_FINAL_MOBILE_URL - The final mobile url must contain a host name. */
  MISSING_HOST_IN_FINAL_MOBILE_URL = 25,
  /**
   * INVALID_TLD_IN_FINAL_MOBILE_URL - The tracking url template has an invalid or missing top level domain
   * extension.
   */
  INVALID_TLD_IN_FINAL_MOBILE_URL = 26,
  /** INVALID_FINAL_APP_URL - The final app url is invalid. */
  INVALID_FINAL_APP_URL = 27,
  /** INVALID_TAG_IN_FINAL_APP_URL - The final app url contains invalid tag. */
  INVALID_TAG_IN_FINAL_APP_URL = 28,
  /**
   * REDUNDANT_NESTED_FINAL_APP_URL_TAG - The final app url contains nested occurrences of the same conditional tag
   * (for example, {ifmobile:{ifmobile:x}}).
   */
  REDUNDANT_NESTED_FINAL_APP_URL_TAG = 29,
  /** MULTIPLE_APP_URLS_FOR_OSTYPE - More than one app url found for the same OS type. */
  MULTIPLE_APP_URLS_FOR_OSTYPE = 30,
  /** INVALID_OSTYPE - The OS type given for an app url is not valid. */
  INVALID_OSTYPE = 31,
  /**
   * INVALID_PROTOCOL_FOR_APP_URL - The protocol given for an app url is not valid. (For example,
   * "android-app://")
   */
  INVALID_PROTOCOL_FOR_APP_URL = 32,
  /** INVALID_PACKAGE_ID_FOR_APP_URL - The package id (app id) given for an app url is not valid. */
  INVALID_PACKAGE_ID_FOR_APP_URL = 33,
  /**
   * URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT - The number of url custom parameters for an resource exceeds the maximum
   * limit allowed.
   */
  URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT = 34,
  /** INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY - An invalid character appears in the parameter key. */
  INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY = 39,
  /** INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE - An invalid character appears in the parameter value. */
  INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE = 40,
  /** INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE - The url custom parameter value fails url tag validation. */
  INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE = 41,
  /**
   * REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG - The custom parameter contains nested occurrences of the same conditional
   * tag (for example, {ifmobile:{ifmobile:x}}).
   */
  REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG = 42,
  /** MISSING_PROTOCOL - The protocol (http:// or https://) is missing. */
  MISSING_PROTOCOL = 43,
  /** INVALID_PROTOCOL - Unsupported protocol in URL. Only http and https are supported. */
  INVALID_PROTOCOL = 52,
  /** INVALID_URL - The url is invalid. */
  INVALID_URL = 44,
  /** DESTINATION_URL_DEPRECATED - Destination Url is deprecated. */
  DESTINATION_URL_DEPRECATED = 45,
  /** INVALID_TAG_IN_URL - The url contains invalid tag. */
  INVALID_TAG_IN_URL = 46,
  /** MISSING_URL_TAG - The url must contain at least one tag (for example, {lpurl}). */
  MISSING_URL_TAG = 47,
  /** DUPLICATE_URL_ID - Duplicate url id. */
  DUPLICATE_URL_ID = 48,
  /** INVALID_URL_ID - Invalid url id. */
  INVALID_URL_ID = 49,
  /**
   * FINAL_URL_SUFFIX_MALFORMED - The final url suffix cannot begin with '?' or '&' characters and must be
   * a valid query string.
   */
  FINAL_URL_SUFFIX_MALFORMED = 50,
  /** INVALID_TAG_IN_FINAL_URL_SUFFIX - The final url suffix cannot contain {lpurl} related or {ignore} tags. */
  INVALID_TAG_IN_FINAL_URL_SUFFIX = 51,
  /**
   * INVALID_TOP_LEVEL_DOMAIN - The top level domain is invalid, for example, not a public top level
   * domain listed in publicsuffix.org.
   */
  INVALID_TOP_LEVEL_DOMAIN = 53,
  /** MALFORMED_TOP_LEVEL_DOMAIN - Malformed top level domain in URL. */
  MALFORMED_TOP_LEVEL_DOMAIN = 54,
  /** MALFORMED_URL - Malformed URL. */
  MALFORMED_URL = 55,
  /** MISSING_HOST - No host found in URL. */
  MISSING_HOST = 56,
  /** NULL_CUSTOM_PARAMETER_VALUE - Custom parameter value cannot be null. */
  NULL_CUSTOM_PARAMETER_VALUE = 57,
  /** VALUE_TRACK_PARAMETER_NOT_SUPPORTED - Track parameter is not supported. */
  VALUE_TRACK_PARAMETER_NOT_SUPPORTED = 58,
  UNRECOGNIZED = -1,
}

export function urlFieldErrorEnum_UrlFieldErrorFromJSON(object: any): UrlFieldErrorEnum_UrlFieldError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return UrlFieldErrorEnum_UrlFieldError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return UrlFieldErrorEnum_UrlFieldError.UNKNOWN;
    case 2:
    case "INVALID_TRACKING_URL_TEMPLATE":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TRACKING_URL_TEMPLATE;
    case 3:
    case "INVALID_TAG_IN_TRACKING_URL_TEMPLATE":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_TRACKING_URL_TEMPLATE;
    case 4:
    case "MISSING_TRACKING_URL_TEMPLATE_TAG":
      return UrlFieldErrorEnum_UrlFieldError.MISSING_TRACKING_URL_TEMPLATE_TAG;
    case 5:
    case "MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE":
      return UrlFieldErrorEnum_UrlFieldError.MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE;
    case 6:
    case "INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE;
    case 7:
    case "MALFORMED_TRACKING_URL_TEMPLATE":
      return UrlFieldErrorEnum_UrlFieldError.MALFORMED_TRACKING_URL_TEMPLATE;
    case 8:
    case "MISSING_HOST_IN_TRACKING_URL_TEMPLATE":
      return UrlFieldErrorEnum_UrlFieldError.MISSING_HOST_IN_TRACKING_URL_TEMPLATE;
    case 9:
    case "INVALID_TLD_IN_TRACKING_URL_TEMPLATE":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TLD_IN_TRACKING_URL_TEMPLATE;
    case 10:
    case "REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG":
      return UrlFieldErrorEnum_UrlFieldError.REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG;
    case 11:
    case "INVALID_FINAL_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_FINAL_URL;
    case 12:
    case "INVALID_TAG_IN_FINAL_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_FINAL_URL;
    case 13:
    case "REDUNDANT_NESTED_FINAL_URL_TAG":
      return UrlFieldErrorEnum_UrlFieldError.REDUNDANT_NESTED_FINAL_URL_TAG;
    case 14:
    case "MISSING_PROTOCOL_IN_FINAL_URL":
      return UrlFieldErrorEnum_UrlFieldError.MISSING_PROTOCOL_IN_FINAL_URL;
    case 15:
    case "INVALID_PROTOCOL_IN_FINAL_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_PROTOCOL_IN_FINAL_URL;
    case 16:
    case "MALFORMED_FINAL_URL":
      return UrlFieldErrorEnum_UrlFieldError.MALFORMED_FINAL_URL;
    case 17:
    case "MISSING_HOST_IN_FINAL_URL":
      return UrlFieldErrorEnum_UrlFieldError.MISSING_HOST_IN_FINAL_URL;
    case 18:
    case "INVALID_TLD_IN_FINAL_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TLD_IN_FINAL_URL;
    case 19:
    case "INVALID_FINAL_MOBILE_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_FINAL_MOBILE_URL;
    case 20:
    case "INVALID_TAG_IN_FINAL_MOBILE_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_FINAL_MOBILE_URL;
    case 21:
    case "REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG":
      return UrlFieldErrorEnum_UrlFieldError.REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG;
    case 22:
    case "MISSING_PROTOCOL_IN_FINAL_MOBILE_URL":
      return UrlFieldErrorEnum_UrlFieldError.MISSING_PROTOCOL_IN_FINAL_MOBILE_URL;
    case 23:
    case "INVALID_PROTOCOL_IN_FINAL_MOBILE_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_PROTOCOL_IN_FINAL_MOBILE_URL;
    case 24:
    case "MALFORMED_FINAL_MOBILE_URL":
      return UrlFieldErrorEnum_UrlFieldError.MALFORMED_FINAL_MOBILE_URL;
    case 25:
    case "MISSING_HOST_IN_FINAL_MOBILE_URL":
      return UrlFieldErrorEnum_UrlFieldError.MISSING_HOST_IN_FINAL_MOBILE_URL;
    case 26:
    case "INVALID_TLD_IN_FINAL_MOBILE_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TLD_IN_FINAL_MOBILE_URL;
    case 27:
    case "INVALID_FINAL_APP_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_FINAL_APP_URL;
    case 28:
    case "INVALID_TAG_IN_FINAL_APP_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_FINAL_APP_URL;
    case 29:
    case "REDUNDANT_NESTED_FINAL_APP_URL_TAG":
      return UrlFieldErrorEnum_UrlFieldError.REDUNDANT_NESTED_FINAL_APP_URL_TAG;
    case 30:
    case "MULTIPLE_APP_URLS_FOR_OSTYPE":
      return UrlFieldErrorEnum_UrlFieldError.MULTIPLE_APP_URLS_FOR_OSTYPE;
    case 31:
    case "INVALID_OSTYPE":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_OSTYPE;
    case 32:
    case "INVALID_PROTOCOL_FOR_APP_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_PROTOCOL_FOR_APP_URL;
    case 33:
    case "INVALID_PACKAGE_ID_FOR_APP_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_PACKAGE_ID_FOR_APP_URL;
    case 34:
    case "URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT":
      return UrlFieldErrorEnum_UrlFieldError.URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT;
    case 39:
    case "INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY;
    case 40:
    case "INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE;
    case 41:
    case "INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE;
    case 42:
    case "REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG":
      return UrlFieldErrorEnum_UrlFieldError.REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG;
    case 43:
    case "MISSING_PROTOCOL":
      return UrlFieldErrorEnum_UrlFieldError.MISSING_PROTOCOL;
    case 52:
    case "INVALID_PROTOCOL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_PROTOCOL;
    case 44:
    case "INVALID_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_URL;
    case 45:
    case "DESTINATION_URL_DEPRECATED":
      return UrlFieldErrorEnum_UrlFieldError.DESTINATION_URL_DEPRECATED;
    case 46:
    case "INVALID_TAG_IN_URL":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_URL;
    case 47:
    case "MISSING_URL_TAG":
      return UrlFieldErrorEnum_UrlFieldError.MISSING_URL_TAG;
    case 48:
    case "DUPLICATE_URL_ID":
      return UrlFieldErrorEnum_UrlFieldError.DUPLICATE_URL_ID;
    case 49:
    case "INVALID_URL_ID":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_URL_ID;
    case 50:
    case "FINAL_URL_SUFFIX_MALFORMED":
      return UrlFieldErrorEnum_UrlFieldError.FINAL_URL_SUFFIX_MALFORMED;
    case 51:
    case "INVALID_TAG_IN_FINAL_URL_SUFFIX":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_FINAL_URL_SUFFIX;
    case 53:
    case "INVALID_TOP_LEVEL_DOMAIN":
      return UrlFieldErrorEnum_UrlFieldError.INVALID_TOP_LEVEL_DOMAIN;
    case 54:
    case "MALFORMED_TOP_LEVEL_DOMAIN":
      return UrlFieldErrorEnum_UrlFieldError.MALFORMED_TOP_LEVEL_DOMAIN;
    case 55:
    case "MALFORMED_URL":
      return UrlFieldErrorEnum_UrlFieldError.MALFORMED_URL;
    case 56:
    case "MISSING_HOST":
      return UrlFieldErrorEnum_UrlFieldError.MISSING_HOST;
    case 57:
    case "NULL_CUSTOM_PARAMETER_VALUE":
      return UrlFieldErrorEnum_UrlFieldError.NULL_CUSTOM_PARAMETER_VALUE;
    case 58:
    case "VALUE_TRACK_PARAMETER_NOT_SUPPORTED":
      return UrlFieldErrorEnum_UrlFieldError.VALUE_TRACK_PARAMETER_NOT_SUPPORTED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return UrlFieldErrorEnum_UrlFieldError.UNRECOGNIZED;
  }
}

export function urlFieldErrorEnum_UrlFieldErrorToJSON(object: UrlFieldErrorEnum_UrlFieldError): string {
  switch (object) {
    case UrlFieldErrorEnum_UrlFieldError.UNSPECIFIED:
      return "UNSPECIFIED";
    case UrlFieldErrorEnum_UrlFieldError.UNKNOWN:
      return "UNKNOWN";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TRACKING_URL_TEMPLATE:
      return "INVALID_TRACKING_URL_TEMPLATE";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_TRACKING_URL_TEMPLATE:
      return "INVALID_TAG_IN_TRACKING_URL_TEMPLATE";
    case UrlFieldErrorEnum_UrlFieldError.MISSING_TRACKING_URL_TEMPLATE_TAG:
      return "MISSING_TRACKING_URL_TEMPLATE_TAG";
    case UrlFieldErrorEnum_UrlFieldError.MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE:
      return "MISSING_PROTOCOL_IN_TRACKING_URL_TEMPLATE";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE:
      return "INVALID_PROTOCOL_IN_TRACKING_URL_TEMPLATE";
    case UrlFieldErrorEnum_UrlFieldError.MALFORMED_TRACKING_URL_TEMPLATE:
      return "MALFORMED_TRACKING_URL_TEMPLATE";
    case UrlFieldErrorEnum_UrlFieldError.MISSING_HOST_IN_TRACKING_URL_TEMPLATE:
      return "MISSING_HOST_IN_TRACKING_URL_TEMPLATE";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TLD_IN_TRACKING_URL_TEMPLATE:
      return "INVALID_TLD_IN_TRACKING_URL_TEMPLATE";
    case UrlFieldErrorEnum_UrlFieldError.REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG:
      return "REDUNDANT_NESTED_TRACKING_URL_TEMPLATE_TAG";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_FINAL_URL:
      return "INVALID_FINAL_URL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_FINAL_URL:
      return "INVALID_TAG_IN_FINAL_URL";
    case UrlFieldErrorEnum_UrlFieldError.REDUNDANT_NESTED_FINAL_URL_TAG:
      return "REDUNDANT_NESTED_FINAL_URL_TAG";
    case UrlFieldErrorEnum_UrlFieldError.MISSING_PROTOCOL_IN_FINAL_URL:
      return "MISSING_PROTOCOL_IN_FINAL_URL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_PROTOCOL_IN_FINAL_URL:
      return "INVALID_PROTOCOL_IN_FINAL_URL";
    case UrlFieldErrorEnum_UrlFieldError.MALFORMED_FINAL_URL:
      return "MALFORMED_FINAL_URL";
    case UrlFieldErrorEnum_UrlFieldError.MISSING_HOST_IN_FINAL_URL:
      return "MISSING_HOST_IN_FINAL_URL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TLD_IN_FINAL_URL:
      return "INVALID_TLD_IN_FINAL_URL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_FINAL_MOBILE_URL:
      return "INVALID_FINAL_MOBILE_URL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_FINAL_MOBILE_URL:
      return "INVALID_TAG_IN_FINAL_MOBILE_URL";
    case UrlFieldErrorEnum_UrlFieldError.REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG:
      return "REDUNDANT_NESTED_FINAL_MOBILE_URL_TAG";
    case UrlFieldErrorEnum_UrlFieldError.MISSING_PROTOCOL_IN_FINAL_MOBILE_URL:
      return "MISSING_PROTOCOL_IN_FINAL_MOBILE_URL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_PROTOCOL_IN_FINAL_MOBILE_URL:
      return "INVALID_PROTOCOL_IN_FINAL_MOBILE_URL";
    case UrlFieldErrorEnum_UrlFieldError.MALFORMED_FINAL_MOBILE_URL:
      return "MALFORMED_FINAL_MOBILE_URL";
    case UrlFieldErrorEnum_UrlFieldError.MISSING_HOST_IN_FINAL_MOBILE_URL:
      return "MISSING_HOST_IN_FINAL_MOBILE_URL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TLD_IN_FINAL_MOBILE_URL:
      return "INVALID_TLD_IN_FINAL_MOBILE_URL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_FINAL_APP_URL:
      return "INVALID_FINAL_APP_URL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_FINAL_APP_URL:
      return "INVALID_TAG_IN_FINAL_APP_URL";
    case UrlFieldErrorEnum_UrlFieldError.REDUNDANT_NESTED_FINAL_APP_URL_TAG:
      return "REDUNDANT_NESTED_FINAL_APP_URL_TAG";
    case UrlFieldErrorEnum_UrlFieldError.MULTIPLE_APP_URLS_FOR_OSTYPE:
      return "MULTIPLE_APP_URLS_FOR_OSTYPE";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_OSTYPE:
      return "INVALID_OSTYPE";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_PROTOCOL_FOR_APP_URL:
      return "INVALID_PROTOCOL_FOR_APP_URL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_PACKAGE_ID_FOR_APP_URL:
      return "INVALID_PACKAGE_ID_FOR_APP_URL";
    case UrlFieldErrorEnum_UrlFieldError.URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT:
      return "URL_CUSTOM_PARAMETERS_COUNT_EXCEEDS_LIMIT";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY:
      return "INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_KEY";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE:
      return "INVALID_CHARACTERS_IN_URL_CUSTOM_PARAMETER_VALUE";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE:
      return "INVALID_TAG_IN_URL_CUSTOM_PARAMETER_VALUE";
    case UrlFieldErrorEnum_UrlFieldError.REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG:
      return "REDUNDANT_NESTED_URL_CUSTOM_PARAMETER_TAG";
    case UrlFieldErrorEnum_UrlFieldError.MISSING_PROTOCOL:
      return "MISSING_PROTOCOL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_PROTOCOL:
      return "INVALID_PROTOCOL";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_URL:
      return "INVALID_URL";
    case UrlFieldErrorEnum_UrlFieldError.DESTINATION_URL_DEPRECATED:
      return "DESTINATION_URL_DEPRECATED";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_URL:
      return "INVALID_TAG_IN_URL";
    case UrlFieldErrorEnum_UrlFieldError.MISSING_URL_TAG:
      return "MISSING_URL_TAG";
    case UrlFieldErrorEnum_UrlFieldError.DUPLICATE_URL_ID:
      return "DUPLICATE_URL_ID";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_URL_ID:
      return "INVALID_URL_ID";
    case UrlFieldErrorEnum_UrlFieldError.FINAL_URL_SUFFIX_MALFORMED:
      return "FINAL_URL_SUFFIX_MALFORMED";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TAG_IN_FINAL_URL_SUFFIX:
      return "INVALID_TAG_IN_FINAL_URL_SUFFIX";
    case UrlFieldErrorEnum_UrlFieldError.INVALID_TOP_LEVEL_DOMAIN:
      return "INVALID_TOP_LEVEL_DOMAIN";
    case UrlFieldErrorEnum_UrlFieldError.MALFORMED_TOP_LEVEL_DOMAIN:
      return "MALFORMED_TOP_LEVEL_DOMAIN";
    case UrlFieldErrorEnum_UrlFieldError.MALFORMED_URL:
      return "MALFORMED_URL";
    case UrlFieldErrorEnum_UrlFieldError.MISSING_HOST:
      return "MISSING_HOST";
    case UrlFieldErrorEnum_UrlFieldError.NULL_CUSTOM_PARAMETER_VALUE:
      return "NULL_CUSTOM_PARAMETER_VALUE";
    case UrlFieldErrorEnum_UrlFieldError.VALUE_TRACK_PARAMETER_NOT_SUPPORTED:
      return "VALUE_TRACK_PARAMETER_NOT_SUPPORTED";
    case UrlFieldErrorEnum_UrlFieldError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseUrlFieldErrorEnum(): UrlFieldErrorEnum {
  return {};
}

export const UrlFieldErrorEnum: MessageFns<UrlFieldErrorEnum> = {
  encode(_: UrlFieldErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): UrlFieldErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseUrlFieldErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): UrlFieldErrorEnum {
    return {};
  },

  toJSON(_: UrlFieldErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<UrlFieldErrorEnum>): UrlFieldErrorEnum {
    return UrlFieldErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<UrlFieldErrorEnum>): UrlFieldErrorEnum {
    const message = createBaseUrlFieldErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
