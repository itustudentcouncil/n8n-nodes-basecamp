// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/errors/ad_group_criterion_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.errors";

/** Container for enum describing possible ad group criterion errors. */
export interface AdGroupCriterionErrorEnum {
}

/** Enum describing possible ad group criterion errors. */
export enum AdGroupCriterionErrorEnum_AdGroupCriterionError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /** AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST - No link found between the AdGroupCriterion and the label. */
  AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST = 2,
  /** AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS - The label has already been attached to the AdGroupCriterion. */
  AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS = 3,
  /** CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION - Negative AdGroupCriterion cannot have labels. */
  CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION = 4,
  /** TOO_MANY_OPERATIONS - Too many operations for a single call. */
  TOO_MANY_OPERATIONS = 5,
  /** CANT_UPDATE_NEGATIVE - Negative ad group criteria are not updateable. */
  CANT_UPDATE_NEGATIVE = 6,
  /**
   * CONCRETE_TYPE_REQUIRED - Concrete type of criterion (keyword v.s. placement) is required for ADD
   * and SET operations.
   */
  CONCRETE_TYPE_REQUIRED = 7,
  /** BID_INCOMPATIBLE_WITH_ADGROUP - Bid is incompatible with ad group's bidding settings. */
  BID_INCOMPATIBLE_WITH_ADGROUP = 8,
  /** CANNOT_TARGET_AND_EXCLUDE - Cannot target and exclude the same criterion at once. */
  CANNOT_TARGET_AND_EXCLUDE = 9,
  /** ILLEGAL_URL - The URL of a placement is invalid. */
  ILLEGAL_URL = 10,
  /** INVALID_KEYWORD_TEXT - Keyword text was invalid. */
  INVALID_KEYWORD_TEXT = 11,
  /** INVALID_DESTINATION_URL - Destination URL was invalid. */
  INVALID_DESTINATION_URL = 12,
  /** MISSING_DESTINATION_URL_TAG - The destination url must contain at least one tag (for example, {lpurl}) */
  MISSING_DESTINATION_URL_TAG = 13,
  /** KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM - Keyword-level cpm bid is not supported */
  KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM = 14,
  /**
   * INVALID_USER_STATUS - For example, cannot add a biddable ad group criterion that had been
   * removed.
   */
  INVALID_USER_STATUS = 15,
  /**
   * CANNOT_ADD_CRITERIA_TYPE - Criteria type cannot be targeted for the ad group. Either the account is
   * restricted to keywords only, the criteria type is incompatible with the
   * campaign's bidding strategy, or the criteria type can only be applied to
   * campaigns.
   */
  CANNOT_ADD_CRITERIA_TYPE = 16,
  /**
   * CANNOT_EXCLUDE_CRITERIA_TYPE - Criteria type cannot be excluded for the ad group. Refer to the
   * documentation for a specific criterion to check if it is excludable.
   */
  CANNOT_EXCLUDE_CRITERIA_TYPE = 17,
  /** CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE - Partial failure is not supported for shopping campaign mutate operations. */
  CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE = 27,
  /**
   * OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS - Operations in the mutate request changes too many shopping ad groups.
   * Split requests for multiple shopping ad groups across multiple
   * requests.
   */
  OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS = 28,
  /**
   * CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS - Not allowed to modify url fields of an ad group criterion if there are
   * duplicate elements for that ad group criterion in the request.
   */
  CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS = 29,
  /** CANNOT_SET_WITHOUT_FINAL_URLS - Cannot set url fields without also setting final urls. */
  CANNOT_SET_WITHOUT_FINAL_URLS = 30,
  /** CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST - Cannot clear final urls if final mobile urls exist. */
  CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST = 31,
  /** CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST - Cannot clear final urls if final app urls exist. */
  CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST = 32,
  /** CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS - Cannot clear final urls if tracking url template exists. */
  CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS = 33,
  /** CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST - Cannot clear final urls if url custom parameters exist. */
  CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST = 34,
  /** CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS - Cannot set both destination url and final urls. */
  CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS = 35,
  /** CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE - Cannot set both destination url and tracking url template. */
  CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE = 36,
  /** FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE - Final urls are not supported for this criterion type. */
  FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE = 37,
  /** FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE - Final mobile urls are not supported for this criterion type. */
  FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE = 38,
  UNRECOGNIZED = -1,
}

export function adGroupCriterionErrorEnum_AdGroupCriterionErrorFromJSON(
  object: any,
): AdGroupCriterionErrorEnum_AdGroupCriterionError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.UNKNOWN;
    case 2:
    case "AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST;
    case 3:
    case "AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS;
    case 4:
    case "CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION;
    case 5:
    case "TOO_MANY_OPERATIONS":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.TOO_MANY_OPERATIONS;
    case 6:
    case "CANT_UPDATE_NEGATIVE":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANT_UPDATE_NEGATIVE;
    case 7:
    case "CONCRETE_TYPE_REQUIRED":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CONCRETE_TYPE_REQUIRED;
    case 8:
    case "BID_INCOMPATIBLE_WITH_ADGROUP":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.BID_INCOMPATIBLE_WITH_ADGROUP;
    case 9:
    case "CANNOT_TARGET_AND_EXCLUDE":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_TARGET_AND_EXCLUDE;
    case 10:
    case "ILLEGAL_URL":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.ILLEGAL_URL;
    case 11:
    case "INVALID_KEYWORD_TEXT":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.INVALID_KEYWORD_TEXT;
    case 12:
    case "INVALID_DESTINATION_URL":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.INVALID_DESTINATION_URL;
    case 13:
    case "MISSING_DESTINATION_URL_TAG":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.MISSING_DESTINATION_URL_TAG;
    case 14:
    case "KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM;
    case 15:
    case "INVALID_USER_STATUS":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.INVALID_USER_STATUS;
    case 16:
    case "CANNOT_ADD_CRITERIA_TYPE":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_ADD_CRITERIA_TYPE;
    case 17:
    case "CANNOT_EXCLUDE_CRITERIA_TYPE":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_EXCLUDE_CRITERIA_TYPE;
    case 27:
    case "CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE;
    case 28:
    case "OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS;
    case 29:
    case "CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS;
    case 30:
    case "CANNOT_SET_WITHOUT_FINAL_URLS":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_SET_WITHOUT_FINAL_URLS;
    case 31:
    case "CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST;
    case 32:
    case "CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST;
    case 33:
    case "CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS;
    case 34:
    case "CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST;
    case 35:
    case "CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS;
    case 36:
    case "CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE;
    case 37:
    case "FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE;
    case 38:
    case "FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE":
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return AdGroupCriterionErrorEnum_AdGroupCriterionError.UNRECOGNIZED;
  }
}

export function adGroupCriterionErrorEnum_AdGroupCriterionErrorToJSON(
  object: AdGroupCriterionErrorEnum_AdGroupCriterionError,
): string {
  switch (object) {
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.UNSPECIFIED:
      return "UNSPECIFIED";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.UNKNOWN:
      return "UNKNOWN";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST:
      return "AD_GROUP_CRITERION_LABEL_DOES_NOT_EXIST";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS:
      return "AD_GROUP_CRITERION_LABEL_ALREADY_EXISTS";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION:
      return "CANNOT_ADD_LABEL_TO_NEGATIVE_CRITERION";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.TOO_MANY_OPERATIONS:
      return "TOO_MANY_OPERATIONS";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANT_UPDATE_NEGATIVE:
      return "CANT_UPDATE_NEGATIVE";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CONCRETE_TYPE_REQUIRED:
      return "CONCRETE_TYPE_REQUIRED";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.BID_INCOMPATIBLE_WITH_ADGROUP:
      return "BID_INCOMPATIBLE_WITH_ADGROUP";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_TARGET_AND_EXCLUDE:
      return "CANNOT_TARGET_AND_EXCLUDE";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.ILLEGAL_URL:
      return "ILLEGAL_URL";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.INVALID_KEYWORD_TEXT:
      return "INVALID_KEYWORD_TEXT";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.INVALID_DESTINATION_URL:
      return "INVALID_DESTINATION_URL";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.MISSING_DESTINATION_URL_TAG:
      return "MISSING_DESTINATION_URL_TAG";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM:
      return "KEYWORD_LEVEL_BID_NOT_SUPPORTED_FOR_MANUALCPM";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.INVALID_USER_STATUS:
      return "INVALID_USER_STATUS";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_ADD_CRITERIA_TYPE:
      return "CANNOT_ADD_CRITERIA_TYPE";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_EXCLUDE_CRITERIA_TYPE:
      return "CANNOT_EXCLUDE_CRITERIA_TYPE";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE:
      return "CAMPAIGN_TYPE_NOT_COMPATIBLE_WITH_PARTIAL_FAILURE";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS:
      return "OPERATIONS_FOR_TOO_MANY_SHOPPING_ADGROUPS";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS:
      return "CANNOT_MODIFY_URL_FIELDS_WITH_DUPLICATE_ELEMENTS";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_SET_WITHOUT_FINAL_URLS:
      return "CANNOT_SET_WITHOUT_FINAL_URLS";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST:
      return "CANNOT_CLEAR_FINAL_URLS_IF_FINAL_MOBILE_URLS_EXIST";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST:
      return "CANNOT_CLEAR_FINAL_URLS_IF_FINAL_APP_URLS_EXIST";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS:
      return "CANNOT_CLEAR_FINAL_URLS_IF_TRACKING_URL_TEMPLATE_EXISTS";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST:
      return "CANNOT_CLEAR_FINAL_URLS_IF_URL_CUSTOM_PARAMETERS_EXIST";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS:
      return "CANNOT_SET_BOTH_DESTINATION_URL_AND_FINAL_URLS";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE:
      return "CANNOT_SET_BOTH_DESTINATION_URL_AND_TRACKING_URL_TEMPLATE";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE:
      return "FINAL_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE:
      return "FINAL_MOBILE_URLS_NOT_SUPPORTED_FOR_CRITERION_TYPE";
    case AdGroupCriterionErrorEnum_AdGroupCriterionError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseAdGroupCriterionErrorEnum(): AdGroupCriterionErrorEnum {
  return {};
}

export const AdGroupCriterionErrorEnum: MessageFns<AdGroupCriterionErrorEnum> = {
  encode(_: AdGroupCriterionErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AdGroupCriterionErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAdGroupCriterionErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): AdGroupCriterionErrorEnum {
    return {};
  },

  toJSON(_: AdGroupCriterionErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<AdGroupCriterionErrorEnum>): AdGroupCriterionErrorEnum {
    return AdGroupCriterionErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<AdGroupCriterionErrorEnum>): AdGroupCriterionErrorEnum {
    const message = createBaseAdGroupCriterionErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
