// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/errors/errors.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { Duration } from "../../../../protobuf/duration.js";
import { PolicyTopicEntry, PolicyViolationKey } from "../common/policy.js";
import { Value } from "../common/value.js";
import {
  ResourceLimitTypeEnum_ResourceLimitType,
  resourceLimitTypeEnum_ResourceLimitTypeFromJSON,
  resourceLimitTypeEnum_ResourceLimitTypeToJSON,
} from "../enums/resource_limit_type.js";
import {
  AccessInvitationErrorEnum_AccessInvitationError,
  accessInvitationErrorEnum_AccessInvitationErrorFromJSON,
  accessInvitationErrorEnum_AccessInvitationErrorToJSON,
} from "./access_invitation_error.js";
import {
  AccountBudgetProposalErrorEnum_AccountBudgetProposalError,
  accountBudgetProposalErrorEnum_AccountBudgetProposalErrorFromJSON,
  accountBudgetProposalErrorEnum_AccountBudgetProposalErrorToJSON,
} from "./account_budget_proposal_error.js";
import {
  AccountLinkErrorEnum_AccountLinkError,
  accountLinkErrorEnum_AccountLinkErrorFromJSON,
  accountLinkErrorEnum_AccountLinkErrorToJSON,
} from "./account_link_error.js";
import {
  AdCustomizerErrorEnum_AdCustomizerError,
  adCustomizerErrorEnum_AdCustomizerErrorFromJSON,
  adCustomizerErrorEnum_AdCustomizerErrorToJSON,
} from "./ad_customizer_error.js";
import { AdErrorEnum_AdError, adErrorEnum_AdErrorFromJSON, adErrorEnum_AdErrorToJSON } from "./ad_error.js";
import {
  AdGroupAdErrorEnum_AdGroupAdError,
  adGroupAdErrorEnum_AdGroupAdErrorFromJSON,
  adGroupAdErrorEnum_AdGroupAdErrorToJSON,
} from "./ad_group_ad_error.js";
import {
  AdGroupBidModifierErrorEnum_AdGroupBidModifierError,
  adGroupBidModifierErrorEnum_AdGroupBidModifierErrorFromJSON,
  adGroupBidModifierErrorEnum_AdGroupBidModifierErrorToJSON,
} from "./ad_group_bid_modifier_error.js";
import {
  AdGroupCriterionCustomizerErrorEnum_AdGroupCriterionCustomizerError,
  adGroupCriterionCustomizerErrorEnum_AdGroupCriterionCustomizerErrorFromJSON,
  adGroupCriterionCustomizerErrorEnum_AdGroupCriterionCustomizerErrorToJSON,
} from "./ad_group_criterion_customizer_error.js";
import {
  AdGroupCriterionErrorEnum_AdGroupCriterionError,
  adGroupCriterionErrorEnum_AdGroupCriterionErrorFromJSON,
  adGroupCriterionErrorEnum_AdGroupCriterionErrorToJSON,
} from "./ad_group_criterion_error.js";
import {
  AdGroupCustomizerErrorEnum_AdGroupCustomizerError,
  adGroupCustomizerErrorEnum_AdGroupCustomizerErrorFromJSON,
  adGroupCustomizerErrorEnum_AdGroupCustomizerErrorToJSON,
} from "./ad_group_customizer_error.js";
import {
  AdGroupErrorEnum_AdGroupError,
  adGroupErrorEnum_AdGroupErrorFromJSON,
  adGroupErrorEnum_AdGroupErrorToJSON,
} from "./ad_group_error.js";
import {
  AdGroupFeedErrorEnum_AdGroupFeedError,
  adGroupFeedErrorEnum_AdGroupFeedErrorFromJSON,
  adGroupFeedErrorEnum_AdGroupFeedErrorToJSON,
} from "./ad_group_feed_error.js";
import {
  AdParameterErrorEnum_AdParameterError,
  adParameterErrorEnum_AdParameterErrorFromJSON,
  adParameterErrorEnum_AdParameterErrorToJSON,
} from "./ad_parameter_error.js";
import {
  AdSharingErrorEnum_AdSharingError,
  adSharingErrorEnum_AdSharingErrorFromJSON,
  adSharingErrorEnum_AdSharingErrorToJSON,
} from "./ad_sharing_error.js";
import { AdxErrorEnum_AdxError, adxErrorEnum_AdxErrorFromJSON, adxErrorEnum_AdxErrorToJSON } from "./adx_error.js";
import {
  AssetErrorEnum_AssetError,
  assetErrorEnum_AssetErrorFromJSON,
  assetErrorEnum_AssetErrorToJSON,
} from "./asset_error.js";
import {
  AssetGroupAssetErrorEnum_AssetGroupAssetError,
  assetGroupAssetErrorEnum_AssetGroupAssetErrorFromJSON,
  assetGroupAssetErrorEnum_AssetGroupAssetErrorToJSON,
} from "./asset_group_asset_error.js";
import {
  AssetGroupErrorEnum_AssetGroupError,
  assetGroupErrorEnum_AssetGroupErrorFromJSON,
  assetGroupErrorEnum_AssetGroupErrorToJSON,
} from "./asset_group_error.js";
import {
  AssetGroupListingGroupFilterErrorEnum_AssetGroupListingGroupFilterError,
  assetGroupListingGroupFilterErrorEnum_AssetGroupListingGroupFilterErrorFromJSON,
  assetGroupListingGroupFilterErrorEnum_AssetGroupListingGroupFilterErrorToJSON,
} from "./asset_group_listing_group_filter_error.js";
import {
  AssetGroupSignalErrorEnum_AssetGroupSignalError,
  assetGroupSignalErrorEnum_AssetGroupSignalErrorFromJSON,
  assetGroupSignalErrorEnum_AssetGroupSignalErrorToJSON,
} from "./asset_group_signal_error.js";
import {
  AssetLinkErrorEnum_AssetLinkError,
  assetLinkErrorEnum_AssetLinkErrorFromJSON,
  assetLinkErrorEnum_AssetLinkErrorToJSON,
} from "./asset_link_error.js";
import {
  AssetSetAssetErrorEnum_AssetSetAssetError,
  assetSetAssetErrorEnum_AssetSetAssetErrorFromJSON,
  assetSetAssetErrorEnum_AssetSetAssetErrorToJSON,
} from "./asset_set_asset_error.js";
import {
  AssetSetErrorEnum_AssetSetError,
  assetSetErrorEnum_AssetSetErrorFromJSON,
  assetSetErrorEnum_AssetSetErrorToJSON,
} from "./asset_set_error.js";
import {
  AssetSetLinkErrorEnum_AssetSetLinkError,
  assetSetLinkErrorEnum_AssetSetLinkErrorFromJSON,
  assetSetLinkErrorEnum_AssetSetLinkErrorToJSON,
} from "./asset_set_link_error.js";
import {
  AudienceErrorEnum_AudienceError,
  audienceErrorEnum_AudienceErrorFromJSON,
  audienceErrorEnum_AudienceErrorToJSON,
} from "./audience_error.js";
import {
  AudienceInsightsErrorEnum_AudienceInsightsError,
  audienceInsightsErrorEnum_AudienceInsightsErrorFromJSON,
  audienceInsightsErrorEnum_AudienceInsightsErrorToJSON,
} from "./audience_insights_error.js";
import {
  AuthenticationErrorEnum_AuthenticationError,
  authenticationErrorEnum_AuthenticationErrorFromJSON,
  authenticationErrorEnum_AuthenticationErrorToJSON,
} from "./authentication_error.js";
import {
  AuthorizationErrorEnum_AuthorizationError,
  authorizationErrorEnum_AuthorizationErrorFromJSON,
  authorizationErrorEnum_AuthorizationErrorToJSON,
} from "./authorization_error.js";
import {
  BatchJobErrorEnum_BatchJobError,
  batchJobErrorEnum_BatchJobErrorFromJSON,
  batchJobErrorEnum_BatchJobErrorToJSON,
} from "./batch_job_error.js";
import {
  BiddingErrorEnum_BiddingError,
  biddingErrorEnum_BiddingErrorFromJSON,
  biddingErrorEnum_BiddingErrorToJSON,
} from "./bidding_error.js";
import {
  BiddingStrategyErrorEnum_BiddingStrategyError,
  biddingStrategyErrorEnum_BiddingStrategyErrorFromJSON,
  biddingStrategyErrorEnum_BiddingStrategyErrorToJSON,
} from "./bidding_strategy_error.js";
import {
  BillingSetupErrorEnum_BillingSetupError,
  billingSetupErrorEnum_BillingSetupErrorFromJSON,
  billingSetupErrorEnum_BillingSetupErrorToJSON,
} from "./billing_setup_error.js";
import {
  CampaignBudgetErrorEnum_CampaignBudgetError,
  campaignBudgetErrorEnum_CampaignBudgetErrorFromJSON,
  campaignBudgetErrorEnum_CampaignBudgetErrorToJSON,
} from "./campaign_budget_error.js";
import {
  CampaignConversionGoalErrorEnum_CampaignConversionGoalError,
  campaignConversionGoalErrorEnum_CampaignConversionGoalErrorFromJSON,
  campaignConversionGoalErrorEnum_CampaignConversionGoalErrorToJSON,
} from "./campaign_conversion_goal_error.js";
import {
  CampaignCriterionErrorEnum_CampaignCriterionError,
  campaignCriterionErrorEnum_CampaignCriterionErrorFromJSON,
  campaignCriterionErrorEnum_CampaignCriterionErrorToJSON,
} from "./campaign_criterion_error.js";
import {
  CampaignCustomizerErrorEnum_CampaignCustomizerError,
  campaignCustomizerErrorEnum_CampaignCustomizerErrorFromJSON,
  campaignCustomizerErrorEnum_CampaignCustomizerErrorToJSON,
} from "./campaign_customizer_error.js";
import {
  CampaignDraftErrorEnum_CampaignDraftError,
  campaignDraftErrorEnum_CampaignDraftErrorFromJSON,
  campaignDraftErrorEnum_CampaignDraftErrorToJSON,
} from "./campaign_draft_error.js";
import {
  CampaignErrorEnum_CampaignError,
  campaignErrorEnum_CampaignErrorFromJSON,
  campaignErrorEnum_CampaignErrorToJSON,
} from "./campaign_error.js";
import {
  CampaignExperimentErrorEnum_CampaignExperimentError,
  campaignExperimentErrorEnum_CampaignExperimentErrorFromJSON,
  campaignExperimentErrorEnum_CampaignExperimentErrorToJSON,
} from "./campaign_experiment_error.js";
import {
  CampaignFeedErrorEnum_CampaignFeedError,
  campaignFeedErrorEnum_CampaignFeedErrorFromJSON,
  campaignFeedErrorEnum_CampaignFeedErrorToJSON,
} from "./campaign_feed_error.js";
import {
  CampaignLifecycleGoalErrorEnum_CampaignLifecycleGoalError,
  campaignLifecycleGoalErrorEnum_CampaignLifecycleGoalErrorFromJSON,
  campaignLifecycleGoalErrorEnum_CampaignLifecycleGoalErrorToJSON,
} from "./campaign_lifecycle_goal_error.js";
import {
  CampaignSharedSetErrorEnum_CampaignSharedSetError,
  campaignSharedSetErrorEnum_CampaignSharedSetErrorFromJSON,
  campaignSharedSetErrorEnum_CampaignSharedSetErrorToJSON,
} from "./campaign_shared_set_error.js";
import {
  ChangeEventErrorEnum_ChangeEventError,
  changeEventErrorEnum_ChangeEventErrorFromJSON,
  changeEventErrorEnum_ChangeEventErrorToJSON,
} from "./change_event_error.js";
import {
  ChangeStatusErrorEnum_ChangeStatusError,
  changeStatusErrorEnum_ChangeStatusErrorFromJSON,
  changeStatusErrorEnum_ChangeStatusErrorToJSON,
} from "./change_status_error.js";
import {
  CollectionSizeErrorEnum_CollectionSizeError,
  collectionSizeErrorEnum_CollectionSizeErrorFromJSON,
  collectionSizeErrorEnum_CollectionSizeErrorToJSON,
} from "./collection_size_error.js";
import {
  ContextErrorEnum_ContextError,
  contextErrorEnum_ContextErrorFromJSON,
  contextErrorEnum_ContextErrorToJSON,
} from "./context_error.js";
import {
  ConversionActionErrorEnum_ConversionActionError,
  conversionActionErrorEnum_ConversionActionErrorFromJSON,
  conversionActionErrorEnum_ConversionActionErrorToJSON,
} from "./conversion_action_error.js";
import {
  ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError,
  conversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadErrorFromJSON,
  conversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadErrorToJSON,
} from "./conversion_adjustment_upload_error.js";
import {
  ConversionCustomVariableErrorEnum_ConversionCustomVariableError,
  conversionCustomVariableErrorEnum_ConversionCustomVariableErrorFromJSON,
  conversionCustomVariableErrorEnum_ConversionCustomVariableErrorToJSON,
} from "./conversion_custom_variable_error.js";
import {
  ConversionGoalCampaignConfigErrorEnum_ConversionGoalCampaignConfigError,
  conversionGoalCampaignConfigErrorEnum_ConversionGoalCampaignConfigErrorFromJSON,
  conversionGoalCampaignConfigErrorEnum_ConversionGoalCampaignConfigErrorToJSON,
} from "./conversion_goal_campaign_config_error.js";
import {
  ConversionUploadErrorEnum_ConversionUploadError,
  conversionUploadErrorEnum_ConversionUploadErrorFromJSON,
  conversionUploadErrorEnum_ConversionUploadErrorToJSON,
} from "./conversion_upload_error.js";
import {
  ConversionValueRuleErrorEnum_ConversionValueRuleError,
  conversionValueRuleErrorEnum_ConversionValueRuleErrorFromJSON,
  conversionValueRuleErrorEnum_ConversionValueRuleErrorToJSON,
} from "./conversion_value_rule_error.js";
import {
  ConversionValueRuleSetErrorEnum_ConversionValueRuleSetError,
  conversionValueRuleSetErrorEnum_ConversionValueRuleSetErrorFromJSON,
  conversionValueRuleSetErrorEnum_ConversionValueRuleSetErrorToJSON,
} from "./conversion_value_rule_set_error.js";
import {
  CountryCodeErrorEnum_CountryCodeError,
  countryCodeErrorEnum_CountryCodeErrorFromJSON,
  countryCodeErrorEnum_CountryCodeErrorToJSON,
} from "./country_code_error.js";
import {
  CriterionErrorEnum_CriterionError,
  criterionErrorEnum_CriterionErrorFromJSON,
  criterionErrorEnum_CriterionErrorToJSON,
} from "./criterion_error.js";
import {
  CurrencyCodeErrorEnum_CurrencyCodeError,
  currencyCodeErrorEnum_CurrencyCodeErrorFromJSON,
  currencyCodeErrorEnum_CurrencyCodeErrorToJSON,
} from "./currency_code_error.js";
import {
  CurrencyErrorEnum_CurrencyError,
  currencyErrorEnum_CurrencyErrorFromJSON,
  currencyErrorEnum_CurrencyErrorToJSON,
} from "./currency_error.js";
import {
  CustomAudienceErrorEnum_CustomAudienceError,
  customAudienceErrorEnum_CustomAudienceErrorFromJSON,
  customAudienceErrorEnum_CustomAudienceErrorToJSON,
} from "./custom_audience_error.js";
import {
  CustomConversionGoalErrorEnum_CustomConversionGoalError,
  customConversionGoalErrorEnum_CustomConversionGoalErrorFromJSON,
  customConversionGoalErrorEnum_CustomConversionGoalErrorToJSON,
} from "./custom_conversion_goal_error.js";
import {
  CustomInterestErrorEnum_CustomInterestError,
  customInterestErrorEnum_CustomInterestErrorFromJSON,
  customInterestErrorEnum_CustomInterestErrorToJSON,
} from "./custom_interest_error.js";
import {
  CustomerClientLinkErrorEnum_CustomerClientLinkError,
  customerClientLinkErrorEnum_CustomerClientLinkErrorFromJSON,
  customerClientLinkErrorEnum_CustomerClientLinkErrorToJSON,
} from "./customer_client_link_error.js";
import {
  CustomerCustomizerErrorEnum_CustomerCustomizerError,
  customerCustomizerErrorEnum_CustomerCustomizerErrorFromJSON,
  customerCustomizerErrorEnum_CustomerCustomizerErrorToJSON,
} from "./customer_customizer_error.js";
import {
  CustomerErrorEnum_CustomerError,
  customerErrorEnum_CustomerErrorFromJSON,
  customerErrorEnum_CustomerErrorToJSON,
} from "./customer_error.js";
import {
  CustomerFeedErrorEnum_CustomerFeedError,
  customerFeedErrorEnum_CustomerFeedErrorFromJSON,
  customerFeedErrorEnum_CustomerFeedErrorToJSON,
} from "./customer_feed_error.js";
import {
  CustomerLifecycleGoalErrorEnum_CustomerLifecycleGoalError,
  customerLifecycleGoalErrorEnum_CustomerLifecycleGoalErrorFromJSON,
  customerLifecycleGoalErrorEnum_CustomerLifecycleGoalErrorToJSON,
} from "./customer_lifecycle_goal_error.js";
import {
  CustomerManagerLinkErrorEnum_CustomerManagerLinkError,
  customerManagerLinkErrorEnum_CustomerManagerLinkErrorFromJSON,
  customerManagerLinkErrorEnum_CustomerManagerLinkErrorToJSON,
} from "./customer_manager_link_error.js";
import {
  CustomerSkAdNetworkConversionValueSchemaErrorEnum_CustomerSkAdNetworkConversionValueSchemaError,
  customerSkAdNetworkConversionValueSchemaErrorEnum_CustomerSkAdNetworkConversionValueSchemaErrorFromJSON,
  customerSkAdNetworkConversionValueSchemaErrorEnum_CustomerSkAdNetworkConversionValueSchemaErrorToJSON,
} from "./customer_sk_ad_network_conversion_value_schema_error.js";
import {
  CustomerUserAccessErrorEnum_CustomerUserAccessError,
  customerUserAccessErrorEnum_CustomerUserAccessErrorFromJSON,
  customerUserAccessErrorEnum_CustomerUserAccessErrorToJSON,
} from "./customer_user_access_error.js";
import {
  CustomizerAttributeErrorEnum_CustomizerAttributeError,
  customizerAttributeErrorEnum_CustomizerAttributeErrorFromJSON,
  customizerAttributeErrorEnum_CustomizerAttributeErrorToJSON,
} from "./customizer_attribute_error.js";
import {
  DatabaseErrorEnum_DatabaseError,
  databaseErrorEnum_DatabaseErrorFromJSON,
  databaseErrorEnum_DatabaseErrorToJSON,
} from "./database_error.js";
import {
  DateErrorEnum_DateError,
  dateErrorEnum_DateErrorFromJSON,
  dateErrorEnum_DateErrorToJSON,
} from "./date_error.js";
import {
  DateRangeErrorEnum_DateRangeError,
  dateRangeErrorEnum_DateRangeErrorFromJSON,
  dateRangeErrorEnum_DateRangeErrorToJSON,
} from "./date_range_error.js";
import {
  DistinctErrorEnum_DistinctError,
  distinctErrorEnum_DistinctErrorFromJSON,
  distinctErrorEnum_DistinctErrorToJSON,
} from "./distinct_error.js";
import {
  EnumErrorEnum_EnumError,
  enumErrorEnum_EnumErrorFromJSON,
  enumErrorEnum_EnumErrorToJSON,
} from "./enum_error.js";
import {
  ExperimentArmErrorEnum_ExperimentArmError,
  experimentArmErrorEnum_ExperimentArmErrorFromJSON,
  experimentArmErrorEnum_ExperimentArmErrorToJSON,
} from "./experiment_arm_error.js";
import {
  ExperimentErrorEnum_ExperimentError,
  experimentErrorEnum_ExperimentErrorFromJSON,
  experimentErrorEnum_ExperimentErrorToJSON,
} from "./experiment_error.js";
import {
  ExtensionFeedItemErrorEnum_ExtensionFeedItemError,
  extensionFeedItemErrorEnum_ExtensionFeedItemErrorFromJSON,
  extensionFeedItemErrorEnum_ExtensionFeedItemErrorToJSON,
} from "./extension_feed_item_error.js";
import {
  ExtensionSettingErrorEnum_ExtensionSettingError,
  extensionSettingErrorEnum_ExtensionSettingErrorFromJSON,
  extensionSettingErrorEnum_ExtensionSettingErrorToJSON,
} from "./extension_setting_error.js";
import {
  FeedAttributeReferenceErrorEnum_FeedAttributeReferenceError,
  feedAttributeReferenceErrorEnum_FeedAttributeReferenceErrorFromJSON,
  feedAttributeReferenceErrorEnum_FeedAttributeReferenceErrorToJSON,
} from "./feed_attribute_reference_error.js";
import {
  FeedErrorEnum_FeedError,
  feedErrorEnum_FeedErrorFromJSON,
  feedErrorEnum_FeedErrorToJSON,
} from "./feed_error.js";
import {
  FeedItemErrorEnum_FeedItemError,
  feedItemErrorEnum_FeedItemErrorFromJSON,
  feedItemErrorEnum_FeedItemErrorToJSON,
} from "./feed_item_error.js";
import {
  FeedItemSetErrorEnum_FeedItemSetError,
  feedItemSetErrorEnum_FeedItemSetErrorFromJSON,
  feedItemSetErrorEnum_FeedItemSetErrorToJSON,
} from "./feed_item_set_error.js";
import {
  FeedItemSetLinkErrorEnum_FeedItemSetLinkError,
  feedItemSetLinkErrorEnum_FeedItemSetLinkErrorFromJSON,
  feedItemSetLinkErrorEnum_FeedItemSetLinkErrorToJSON,
} from "./feed_item_set_link_error.js";
import {
  FeedItemTargetErrorEnum_FeedItemTargetError,
  feedItemTargetErrorEnum_FeedItemTargetErrorFromJSON,
  feedItemTargetErrorEnum_FeedItemTargetErrorToJSON,
} from "./feed_item_target_error.js";
import {
  FeedItemValidationErrorEnum_FeedItemValidationError,
  feedItemValidationErrorEnum_FeedItemValidationErrorFromJSON,
  feedItemValidationErrorEnum_FeedItemValidationErrorToJSON,
} from "./feed_item_validation_error.js";
import {
  FeedMappingErrorEnum_FeedMappingError,
  feedMappingErrorEnum_FeedMappingErrorFromJSON,
  feedMappingErrorEnum_FeedMappingErrorToJSON,
} from "./feed_mapping_error.js";
import {
  FieldErrorEnum_FieldError,
  fieldErrorEnum_FieldErrorFromJSON,
  fieldErrorEnum_FieldErrorToJSON,
} from "./field_error.js";
import {
  FieldMaskErrorEnum_FieldMaskError,
  fieldMaskErrorEnum_FieldMaskErrorFromJSON,
  fieldMaskErrorEnum_FieldMaskErrorToJSON,
} from "./field_mask_error.js";
import {
  FunctionErrorEnum_FunctionError,
  functionErrorEnum_FunctionErrorFromJSON,
  functionErrorEnum_FunctionErrorToJSON,
} from "./function_error.js";
import {
  FunctionParsingErrorEnum_FunctionParsingError,
  functionParsingErrorEnum_FunctionParsingErrorFromJSON,
  functionParsingErrorEnum_FunctionParsingErrorToJSON,
} from "./function_parsing_error.js";
import {
  GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError,
  geoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionErrorFromJSON,
  geoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionErrorToJSON,
} from "./geo_target_constant_suggestion_error.js";
import {
  HeaderErrorEnum_HeaderError,
  headerErrorEnum_HeaderErrorFromJSON,
  headerErrorEnum_HeaderErrorToJSON,
} from "./header_error.js";
import { IdErrorEnum_IdError, idErrorEnum_IdErrorFromJSON, idErrorEnum_IdErrorToJSON } from "./id_error.js";
import {
  IdentityVerificationErrorEnum_IdentityVerificationError,
  identityVerificationErrorEnum_IdentityVerificationErrorFromJSON,
  identityVerificationErrorEnum_IdentityVerificationErrorToJSON,
} from "./identity_verification_error.js";
import {
  ImageErrorEnum_ImageError,
  imageErrorEnum_ImageErrorFromJSON,
  imageErrorEnum_ImageErrorToJSON,
} from "./image_error.js";
import {
  InternalErrorEnum_InternalError,
  internalErrorEnum_InternalErrorFromJSON,
  internalErrorEnum_InternalErrorToJSON,
} from "./internal_error.js";
import {
  InvoiceErrorEnum_InvoiceError,
  invoiceErrorEnum_InvoiceErrorFromJSON,
  invoiceErrorEnum_InvoiceErrorToJSON,
} from "./invoice_error.js";
import {
  KeywordPlanAdGroupErrorEnum_KeywordPlanAdGroupError,
  keywordPlanAdGroupErrorEnum_KeywordPlanAdGroupErrorFromJSON,
  keywordPlanAdGroupErrorEnum_KeywordPlanAdGroupErrorToJSON,
} from "./keyword_plan_ad_group_error.js";
import {
  KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError,
  keywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordErrorFromJSON,
  keywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordErrorToJSON,
} from "./keyword_plan_ad_group_keyword_error.js";
import {
  KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError,
  keywordPlanCampaignErrorEnum_KeywordPlanCampaignErrorFromJSON,
  keywordPlanCampaignErrorEnum_KeywordPlanCampaignErrorToJSON,
} from "./keyword_plan_campaign_error.js";
import {
  KeywordPlanCampaignKeywordErrorEnum_KeywordPlanCampaignKeywordError,
  keywordPlanCampaignKeywordErrorEnum_KeywordPlanCampaignKeywordErrorFromJSON,
  keywordPlanCampaignKeywordErrorEnum_KeywordPlanCampaignKeywordErrorToJSON,
} from "./keyword_plan_campaign_keyword_error.js";
import {
  KeywordPlanErrorEnum_KeywordPlanError,
  keywordPlanErrorEnum_KeywordPlanErrorFromJSON,
  keywordPlanErrorEnum_KeywordPlanErrorToJSON,
} from "./keyword_plan_error.js";
import {
  KeywordPlanIdeaErrorEnum_KeywordPlanIdeaError,
  keywordPlanIdeaErrorEnum_KeywordPlanIdeaErrorFromJSON,
  keywordPlanIdeaErrorEnum_KeywordPlanIdeaErrorToJSON,
} from "./keyword_plan_idea_error.js";
import {
  LabelErrorEnum_LabelError,
  labelErrorEnum_LabelErrorFromJSON,
  labelErrorEnum_LabelErrorToJSON,
} from "./label_error.js";
import {
  LanguageCodeErrorEnum_LanguageCodeError,
  languageCodeErrorEnum_LanguageCodeErrorFromJSON,
  languageCodeErrorEnum_LanguageCodeErrorToJSON,
} from "./language_code_error.js";
import {
  ListOperationErrorEnum_ListOperationError,
  listOperationErrorEnum_ListOperationErrorFromJSON,
  listOperationErrorEnum_ListOperationErrorToJSON,
} from "./list_operation_error.js";
import {
  ManagerLinkErrorEnum_ManagerLinkError,
  managerLinkErrorEnum_ManagerLinkErrorFromJSON,
  managerLinkErrorEnum_ManagerLinkErrorToJSON,
} from "./manager_link_error.js";
import {
  MediaBundleErrorEnum_MediaBundleError,
  mediaBundleErrorEnum_MediaBundleErrorFromJSON,
  mediaBundleErrorEnum_MediaBundleErrorToJSON,
} from "./media_bundle_error.js";
import {
  MediaFileErrorEnum_MediaFileError,
  mediaFileErrorEnum_MediaFileErrorFromJSON,
  mediaFileErrorEnum_MediaFileErrorToJSON,
} from "./media_file_error.js";
import {
  MediaUploadErrorEnum_MediaUploadError,
  mediaUploadErrorEnum_MediaUploadErrorFromJSON,
  mediaUploadErrorEnum_MediaUploadErrorToJSON,
} from "./media_upload_error.js";
import {
  MerchantCenterErrorEnum_MerchantCenterError,
  merchantCenterErrorEnum_MerchantCenterErrorFromJSON,
  merchantCenterErrorEnum_MerchantCenterErrorToJSON,
} from "./merchant_center_error.js";
import {
  MultiplierErrorEnum_MultiplierError,
  multiplierErrorEnum_MultiplierErrorFromJSON,
  multiplierErrorEnum_MultiplierErrorToJSON,
} from "./multiplier_error.js";
import {
  MutateErrorEnum_MutateError,
  mutateErrorEnum_MutateErrorFromJSON,
  mutateErrorEnum_MutateErrorToJSON,
} from "./mutate_error.js";
import {
  NewResourceCreationErrorEnum_NewResourceCreationError,
  newResourceCreationErrorEnum_NewResourceCreationErrorFromJSON,
  newResourceCreationErrorEnum_NewResourceCreationErrorToJSON,
} from "./new_resource_creation_error.js";
import {
  NotAllowlistedErrorEnum_NotAllowlistedError,
  notAllowlistedErrorEnum_NotAllowlistedErrorFromJSON,
  notAllowlistedErrorEnum_NotAllowlistedErrorToJSON,
} from "./not_allowlisted_error.js";
import {
  NotEmptyErrorEnum_NotEmptyError,
  notEmptyErrorEnum_NotEmptyErrorFromJSON,
  notEmptyErrorEnum_NotEmptyErrorToJSON,
} from "./not_empty_error.js";
import {
  NullErrorEnum_NullError,
  nullErrorEnum_NullErrorFromJSON,
  nullErrorEnum_NullErrorToJSON,
} from "./null_error.js";
import {
  OfflineUserDataJobErrorEnum_OfflineUserDataJobError,
  offlineUserDataJobErrorEnum_OfflineUserDataJobErrorFromJSON,
  offlineUserDataJobErrorEnum_OfflineUserDataJobErrorToJSON,
} from "./offline_user_data_job_error.js";
import {
  OperationAccessDeniedErrorEnum_OperationAccessDeniedError,
  operationAccessDeniedErrorEnum_OperationAccessDeniedErrorFromJSON,
  operationAccessDeniedErrorEnum_OperationAccessDeniedErrorToJSON,
} from "./operation_access_denied_error.js";
import {
  OperatorErrorEnum_OperatorError,
  operatorErrorEnum_OperatorErrorFromJSON,
  operatorErrorEnum_OperatorErrorToJSON,
} from "./operator_error.js";
import {
  PartialFailureErrorEnum_PartialFailureError,
  partialFailureErrorEnum_PartialFailureErrorFromJSON,
  partialFailureErrorEnum_PartialFailureErrorToJSON,
} from "./partial_failure_error.js";
import {
  PaymentsAccountErrorEnum_PaymentsAccountError,
  paymentsAccountErrorEnum_PaymentsAccountErrorFromJSON,
  paymentsAccountErrorEnum_PaymentsAccountErrorToJSON,
} from "./payments_account_error.js";
import {
  PolicyFindingErrorEnum_PolicyFindingError,
  policyFindingErrorEnum_PolicyFindingErrorFromJSON,
  policyFindingErrorEnum_PolicyFindingErrorToJSON,
} from "./policy_finding_error.js";
import {
  PolicyValidationParameterErrorEnum_PolicyValidationParameterError,
  policyValidationParameterErrorEnum_PolicyValidationParameterErrorFromJSON,
  policyValidationParameterErrorEnum_PolicyValidationParameterErrorToJSON,
} from "./policy_validation_parameter_error.js";
import {
  PolicyViolationErrorEnum_PolicyViolationError,
  policyViolationErrorEnum_PolicyViolationErrorFromJSON,
  policyViolationErrorEnum_PolicyViolationErrorToJSON,
} from "./policy_violation_error.js";
import {
  ProductLinkErrorEnum_ProductLinkError,
  productLinkErrorEnum_ProductLinkErrorFromJSON,
  productLinkErrorEnum_ProductLinkErrorToJSON,
} from "./product_link_error.js";
import {
  ProductLinkInvitationErrorEnum_ProductLinkInvitationError,
  productLinkInvitationErrorEnum_ProductLinkInvitationErrorFromJSON,
  productLinkInvitationErrorEnum_ProductLinkInvitationErrorToJSON,
} from "./product_link_invitation_error.js";
import {
  QueryErrorEnum_QueryError,
  queryErrorEnum_QueryErrorFromJSON,
  queryErrorEnum_QueryErrorToJSON,
} from "./query_error.js";
import {
  QuotaErrorEnum_QuotaError,
  quotaErrorEnum_QuotaErrorFromJSON,
  quotaErrorEnum_QuotaErrorToJSON,
} from "./quota_error.js";
import {
  RangeErrorEnum_RangeError,
  rangeErrorEnum_RangeErrorFromJSON,
  rangeErrorEnum_RangeErrorToJSON,
} from "./range_error.js";
import {
  ReachPlanErrorEnum_ReachPlanError,
  reachPlanErrorEnum_ReachPlanErrorFromJSON,
  reachPlanErrorEnum_ReachPlanErrorToJSON,
} from "./reach_plan_error.js";
import {
  RecommendationErrorEnum_RecommendationError,
  recommendationErrorEnum_RecommendationErrorFromJSON,
  recommendationErrorEnum_RecommendationErrorToJSON,
} from "./recommendation_error.js";
import {
  RecommendationSubscriptionErrorEnum_RecommendationSubscriptionError,
  recommendationSubscriptionErrorEnum_RecommendationSubscriptionErrorFromJSON,
  recommendationSubscriptionErrorEnum_RecommendationSubscriptionErrorToJSON,
} from "./recommendation_subscription_error.js";
import {
  RegionCodeErrorEnum_RegionCodeError,
  regionCodeErrorEnum_RegionCodeErrorFromJSON,
  regionCodeErrorEnum_RegionCodeErrorToJSON,
} from "./region_code_error.js";
import {
  RequestErrorEnum_RequestError,
  requestErrorEnum_RequestErrorFromJSON,
  requestErrorEnum_RequestErrorToJSON,
} from "./request_error.js";
import {
  ResourceAccessDeniedErrorEnum_ResourceAccessDeniedError,
  resourceAccessDeniedErrorEnum_ResourceAccessDeniedErrorFromJSON,
  resourceAccessDeniedErrorEnum_ResourceAccessDeniedErrorToJSON,
} from "./resource_access_denied_error.js";
import {
  ResourceCountLimitExceededErrorEnum_ResourceCountLimitExceededError,
  resourceCountLimitExceededErrorEnum_ResourceCountLimitExceededErrorFromJSON,
  resourceCountLimitExceededErrorEnum_ResourceCountLimitExceededErrorToJSON,
} from "./resource_count_limit_exceeded_error.js";
import {
  SearchTermInsightErrorEnum_SearchTermInsightError,
  searchTermInsightErrorEnum_SearchTermInsightErrorFromJSON,
  searchTermInsightErrorEnum_SearchTermInsightErrorToJSON,
} from "./search_term_insight_error.js";
import {
  SettingErrorEnum_SettingError,
  settingErrorEnum_SettingErrorFromJSON,
  settingErrorEnum_SettingErrorToJSON,
} from "./setting_error.js";
import {
  SharedCriterionErrorEnum_SharedCriterionError,
  sharedCriterionErrorEnum_SharedCriterionErrorFromJSON,
  sharedCriterionErrorEnum_SharedCriterionErrorToJSON,
} from "./shared_criterion_error.js";
import {
  SharedSetErrorEnum_SharedSetError,
  sharedSetErrorEnum_SharedSetErrorFromJSON,
  sharedSetErrorEnum_SharedSetErrorToJSON,
} from "./shared_set_error.js";
import {
  SizeLimitErrorEnum_SizeLimitError,
  sizeLimitErrorEnum_SizeLimitErrorFromJSON,
  sizeLimitErrorEnum_SizeLimitErrorToJSON,
} from "./size_limit_error.js";
import {
  SmartCampaignErrorEnum_SmartCampaignError,
  smartCampaignErrorEnum_SmartCampaignErrorFromJSON,
  smartCampaignErrorEnum_SmartCampaignErrorToJSON,
} from "./smart_campaign_error.js";
import {
  StringFormatErrorEnum_StringFormatError,
  stringFormatErrorEnum_StringFormatErrorFromJSON,
  stringFormatErrorEnum_StringFormatErrorToJSON,
} from "./string_format_error.js";
import {
  StringLengthErrorEnum_StringLengthError,
  stringLengthErrorEnum_StringLengthErrorFromJSON,
  stringLengthErrorEnum_StringLengthErrorToJSON,
} from "./string_length_error.js";
import {
  ThirdPartyAppAnalyticsLinkErrorEnum_ThirdPartyAppAnalyticsLinkError,
  thirdPartyAppAnalyticsLinkErrorEnum_ThirdPartyAppAnalyticsLinkErrorFromJSON,
  thirdPartyAppAnalyticsLinkErrorEnum_ThirdPartyAppAnalyticsLinkErrorToJSON,
} from "./third_party_app_analytics_link_error.js";
import {
  TimeZoneErrorEnum_TimeZoneError,
  timeZoneErrorEnum_TimeZoneErrorFromJSON,
  timeZoneErrorEnum_TimeZoneErrorToJSON,
} from "./time_zone_error.js";
import {
  UrlFieldErrorEnum_UrlFieldError,
  urlFieldErrorEnum_UrlFieldErrorFromJSON,
  urlFieldErrorEnum_UrlFieldErrorToJSON,
} from "./url_field_error.js";
import {
  UserDataErrorEnum_UserDataError,
  userDataErrorEnum_UserDataErrorFromJSON,
  userDataErrorEnum_UserDataErrorToJSON,
} from "./user_data_error.js";
import {
  UserListErrorEnum_UserListError,
  userListErrorEnum_UserListErrorFromJSON,
  userListErrorEnum_UserListErrorToJSON,
} from "./user_list_error.js";
import {
  VideoCampaignErrorEnum_VideoCampaignError,
  videoCampaignErrorEnum_VideoCampaignErrorFromJSON,
  videoCampaignErrorEnum_VideoCampaignErrorToJSON,
} from "./video_campaign_error.js";
import {
  YoutubeVideoRegistrationErrorEnum_YoutubeVideoRegistrationError,
  youtubeVideoRegistrationErrorEnum_YoutubeVideoRegistrationErrorFromJSON,
  youtubeVideoRegistrationErrorEnum_YoutubeVideoRegistrationErrorToJSON,
} from "./youtube_video_registration_error.js";

export const protobufPackage = "google.ads.googleads.v16.errors";

/**
 * Describes how a GoogleAds API call failed. It's returned inside
 * google.rpc.Status.details when a call fails.
 */
export interface GoogleAdsFailure {
  /** The list of errors that occurred. */
  errors: GoogleAdsError[];
  /** The unique ID of the request that is used for debugging purposes. */
  requestId: string;
}

/** GoogleAds-specific error. */
export interface GoogleAdsError {
  /** An enum value that indicates which error occurred. */
  errorCode:
    | ErrorCode
    | undefined;
  /** A human-readable description of the error. */
  message: string;
  /** The value that triggered the error. */
  trigger:
    | Value
    | undefined;
  /** Describes the part of the request proto that caused the error. */
  location:
    | ErrorLocation
    | undefined;
  /**
   * Additional error details, which are returned by certain error codes. Most
   * error codes do not include details.
   */
  details: ErrorDetails | undefined;
}

/** The error reason represented by type and enum. */
export interface ErrorCode {
  /** An error caused by the request */
  requestError?:
    | RequestErrorEnum_RequestError
    | undefined;
  /** An error with a Bidding Strategy mutate. */
  biddingStrategyError?:
    | BiddingStrategyErrorEnum_BiddingStrategyError
    | undefined;
  /** An error with a URL field mutate. */
  urlFieldError?:
    | UrlFieldErrorEnum_UrlFieldError
    | undefined;
  /** An error with a list operation. */
  listOperationError?:
    | ListOperationErrorEnum_ListOperationError
    | undefined;
  /** An error with an AWQL query */
  queryError?:
    | QueryErrorEnum_QueryError
    | undefined;
  /** An error with a mutate */
  mutateError?:
    | MutateErrorEnum_MutateError
    | undefined;
  /** An error with a field mask */
  fieldMaskError?:
    | FieldMaskErrorEnum_FieldMaskError
    | undefined;
  /** An error encountered when trying to authorize a user. */
  authorizationError?:
    | AuthorizationErrorEnum_AuthorizationError
    | undefined;
  /** An unexpected server-side error. */
  internalError?:
    | InternalErrorEnum_InternalError
    | undefined;
  /** An error with the amount of quota remaining. */
  quotaError?:
    | QuotaErrorEnum_QuotaError
    | undefined;
  /** An error with an Ad Group Ad mutate. */
  adError?:
    | AdErrorEnum_AdError
    | undefined;
  /** An error with an Ad Group mutate. */
  adGroupError?:
    | AdGroupErrorEnum_AdGroupError
    | undefined;
  /** An error with a Campaign Budget mutate. */
  campaignBudgetError?:
    | CampaignBudgetErrorEnum_CampaignBudgetError
    | undefined;
  /** An error with a Campaign mutate. */
  campaignError?:
    | CampaignErrorEnum_CampaignError
    | undefined;
  /** An error with a Video Campaign mutate. */
  videoCampaignError?:
    | VideoCampaignErrorEnum_VideoCampaignError
    | undefined;
  /** Indicates failure to properly authenticate user. */
  authenticationError?:
    | AuthenticationErrorEnum_AuthenticationError
    | undefined;
  /** The reasons for the ad group criterion customizer error. */
  adGroupCriterionCustomizerError?:
    | AdGroupCriterionCustomizerErrorEnum_AdGroupCriterionCustomizerError
    | undefined;
  /** Indicates failure to properly authenticate user. */
  adGroupCriterionError?:
    | AdGroupCriterionErrorEnum_AdGroupCriterionError
    | undefined;
  /** The reasons for the ad group customizer error. */
  adGroupCustomizerError?:
    | AdGroupCustomizerErrorEnum_AdGroupCustomizerError
    | undefined;
  /** The reasons for the ad customizer error */
  adCustomizerError?:
    | AdCustomizerErrorEnum_AdCustomizerError
    | undefined;
  /** The reasons for the ad group ad error */
  adGroupAdError?:
    | AdGroupAdErrorEnum_AdGroupAdError
    | undefined;
  /** The reasons for the ad sharing error */
  adSharingError?:
    | AdSharingErrorEnum_AdSharingError
    | undefined;
  /** The reasons for the adx error */
  adxError?:
    | AdxErrorEnum_AdxError
    | undefined;
  /** The reasons for the asset error */
  assetError?:
    | AssetErrorEnum_AssetError
    | undefined;
  /** The reasons for the asset group asset error */
  assetGroupAssetError?:
    | AssetGroupAssetErrorEnum_AssetGroupAssetError
    | undefined;
  /** The reasons for the asset group listing group filter error */
  assetGroupListingGroupFilterError?:
    | AssetGroupListingGroupFilterErrorEnum_AssetGroupListingGroupFilterError
    | undefined;
  /** The reasons for the asset group error */
  assetGroupError?:
    | AssetGroupErrorEnum_AssetGroupError
    | undefined;
  /** The reasons for the asset set asset error */
  assetSetAssetError?:
    | AssetSetAssetErrorEnum_AssetSetAssetError
    | undefined;
  /** The reasons for the asset set link error */
  assetSetLinkError?:
    | AssetSetLinkErrorEnum_AssetSetLinkError
    | undefined;
  /** The reasons for the asset set error */
  assetSetError?:
    | AssetSetErrorEnum_AssetSetError
    | undefined;
  /** The reasons for the bidding errors */
  biddingError?:
    | BiddingErrorEnum_BiddingError
    | undefined;
  /** The reasons for the campaign criterion error */
  campaignCriterionError?:
    | CampaignCriterionErrorEnum_CampaignCriterionError
    | undefined;
  /** The reasons for the campaign conversion goal error */
  campaignConversionGoalError?:
    | CampaignConversionGoalErrorEnum_CampaignConversionGoalError
    | undefined;
  /** The reasons for the campaign customizer error. */
  campaignCustomizerError?:
    | CampaignCustomizerErrorEnum_CampaignCustomizerError
    | undefined;
  /** The reasons for the collection size error */
  collectionSizeError?:
    | CollectionSizeErrorEnum_CollectionSizeError
    | undefined;
  /** The reasons for the conversion goal campaign config error */
  conversionGoalCampaignConfigError?:
    | ConversionGoalCampaignConfigErrorEnum_ConversionGoalCampaignConfigError
    | undefined;
  /** The reasons for the country code error */
  countryCodeError?:
    | CountryCodeErrorEnum_CountryCodeError
    | undefined;
  /** The reasons for the criterion error */
  criterionError?:
    | CriterionErrorEnum_CriterionError
    | undefined;
  /** The reasons for the custom conversion goal error */
  customConversionGoalError?:
    | CustomConversionGoalErrorEnum_CustomConversionGoalError
    | undefined;
  /** The reasons for the customer customizer error. */
  customerCustomizerError?:
    | CustomerCustomizerErrorEnum_CustomerCustomizerError
    | undefined;
  /** The reasons for the customer error */
  customerError?:
    | CustomerErrorEnum_CustomerError
    | undefined;
  /** The reasons for the customizer attribute error. */
  customizerAttributeError?:
    | CustomizerAttributeErrorEnum_CustomizerAttributeError
    | undefined;
  /** The reasons for the date error */
  dateError?:
    | DateErrorEnum_DateError
    | undefined;
  /** The reasons for the date range error */
  dateRangeError?:
    | DateRangeErrorEnum_DateRangeError
    | undefined;
  /** The reasons for the distinct error */
  distinctError?:
    | DistinctErrorEnum_DistinctError
    | undefined;
  /** The reasons for the feed attribute reference error */
  feedAttributeReferenceError?:
    | FeedAttributeReferenceErrorEnum_FeedAttributeReferenceError
    | undefined;
  /** The reasons for the function error */
  functionError?:
    | FunctionErrorEnum_FunctionError
    | undefined;
  /** The reasons for the function parsing error */
  functionParsingError?:
    | FunctionParsingErrorEnum_FunctionParsingError
    | undefined;
  /** The reasons for the id error */
  idError?:
    | IdErrorEnum_IdError
    | undefined;
  /** The reasons for the image error */
  imageError?:
    | ImageErrorEnum_ImageError
    | undefined;
  /** The reasons for the language code error */
  languageCodeError?:
    | LanguageCodeErrorEnum_LanguageCodeError
    | undefined;
  /** The reasons for the media bundle error */
  mediaBundleError?:
    | MediaBundleErrorEnum_MediaBundleError
    | undefined;
  /** The reasons for media uploading errors. */
  mediaUploadError?:
    | MediaUploadErrorEnum_MediaUploadError
    | undefined;
  /** The reasons for the media file error */
  mediaFileError?:
    | MediaFileErrorEnum_MediaFileError
    | undefined;
  /** Container for enum describing possible merchant center errors. */
  merchantCenterError?:
    | MerchantCenterErrorEnum_MerchantCenterError
    | undefined;
  /** The reasons for the multiplier error */
  multiplierError?:
    | MultiplierErrorEnum_MultiplierError
    | undefined;
  /** The reasons for the new resource creation error */
  newResourceCreationError?:
    | NewResourceCreationErrorEnum_NewResourceCreationError
    | undefined;
  /** The reasons for the not empty error */
  notEmptyError?:
    | NotEmptyErrorEnum_NotEmptyError
    | undefined;
  /** The reasons for the null error */
  nullError?:
    | NullErrorEnum_NullError
    | undefined;
  /** The reasons for the operator error */
  operatorError?:
    | OperatorErrorEnum_OperatorError
    | undefined;
  /** The reasons for the range error */
  rangeError?:
    | RangeErrorEnum_RangeError
    | undefined;
  /** The reasons for error in applying a recommendation */
  recommendationError?:
    | RecommendationErrorEnum_RecommendationError
    | undefined;
  /** The reasons for the recommendation subscription error. */
  recommendationSubscriptionError?:
    | RecommendationSubscriptionErrorEnum_RecommendationSubscriptionError
    | undefined;
  /** The reasons for the region code error */
  regionCodeError?:
    | RegionCodeErrorEnum_RegionCodeError
    | undefined;
  /** The reasons for the setting error */
  settingError?:
    | SettingErrorEnum_SettingError
    | undefined;
  /** The reasons for the string format error */
  stringFormatError?:
    | StringFormatErrorEnum_StringFormatError
    | undefined;
  /** The reasons for the string length error */
  stringLengthError?:
    | StringLengthErrorEnum_StringLengthError
    | undefined;
  /** The reasons for the operation access denied error */
  operationAccessDeniedError?:
    | OperationAccessDeniedErrorEnum_OperationAccessDeniedError
    | undefined;
  /** The reasons for the resource access denied error */
  resourceAccessDeniedError?:
    | ResourceAccessDeniedErrorEnum_ResourceAccessDeniedError
    | undefined;
  /** The reasons for the resource count limit exceeded error */
  resourceCountLimitExceededError?:
    | ResourceCountLimitExceededErrorEnum_ResourceCountLimitExceededError
    | undefined;
  /** The reasons for YouTube video registration errors. */
  youtubeVideoRegistrationError?:
    | YoutubeVideoRegistrationErrorEnum_YoutubeVideoRegistrationError
    | undefined;
  /** The reasons for the ad group bid modifier error */
  adGroupBidModifierError?:
    | AdGroupBidModifierErrorEnum_AdGroupBidModifierError
    | undefined;
  /** The reasons for the context error */
  contextError?:
    | ContextErrorEnum_ContextError
    | undefined;
  /** The reasons for the field error */
  fieldError?:
    | FieldErrorEnum_FieldError
    | undefined;
  /** The reasons for the shared set error */
  sharedSetError?:
    | SharedSetErrorEnum_SharedSetError
    | undefined;
  /** The reasons for the shared criterion error */
  sharedCriterionError?:
    | SharedCriterionErrorEnum_SharedCriterionError
    | undefined;
  /** The reasons for the campaign shared set error */
  campaignSharedSetError?:
    | CampaignSharedSetErrorEnum_CampaignSharedSetError
    | undefined;
  /** The reasons for the conversion action error */
  conversionActionError?:
    | ConversionActionErrorEnum_ConversionActionError
    | undefined;
  /** The reasons for the conversion adjustment upload error */
  conversionAdjustmentUploadError?:
    | ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError
    | undefined;
  /** The reasons for the conversion custom variable error */
  conversionCustomVariableError?:
    | ConversionCustomVariableErrorEnum_ConversionCustomVariableError
    | undefined;
  /** The reasons for the conversion upload error */
  conversionUploadError?:
    | ConversionUploadErrorEnum_ConversionUploadError
    | undefined;
  /** The reasons for the conversion value rule error */
  conversionValueRuleError?:
    | ConversionValueRuleErrorEnum_ConversionValueRuleError
    | undefined;
  /** The reasons for the conversion value rule set error */
  conversionValueRuleSetError?:
    | ConversionValueRuleSetErrorEnum_ConversionValueRuleSetError
    | undefined;
  /** The reasons for the header error. */
  headerError?:
    | HeaderErrorEnum_HeaderError
    | undefined;
  /** The reasons for the database error. */
  databaseError?:
    | DatabaseErrorEnum_DatabaseError
    | undefined;
  /** The reasons for the policy finding error. */
  policyFindingError?:
    | PolicyFindingErrorEnum_PolicyFindingError
    | undefined;
  /** The reason for enum error. */
  enumError?:
    | EnumErrorEnum_EnumError
    | undefined;
  /** The reason for keyword plan error. */
  keywordPlanError?:
    | KeywordPlanErrorEnum_KeywordPlanError
    | undefined;
  /** The reason for keyword plan campaign error. */
  keywordPlanCampaignError?:
    | KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError
    | undefined;
  /** The reason for keyword plan campaign keyword error. */
  keywordPlanCampaignKeywordError?:
    | KeywordPlanCampaignKeywordErrorEnum_KeywordPlanCampaignKeywordError
    | undefined;
  /** The reason for keyword plan ad group error. */
  keywordPlanAdGroupError?:
    | KeywordPlanAdGroupErrorEnum_KeywordPlanAdGroupError
    | undefined;
  /** The reason for keyword plan ad group keyword error. */
  keywordPlanAdGroupKeywordError?:
    | KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError
    | undefined;
  /** The reason for keyword idea error. */
  keywordPlanIdeaError?:
    | KeywordPlanIdeaErrorEnum_KeywordPlanIdeaError
    | undefined;
  /** The reasons for account budget proposal errors. */
  accountBudgetProposalError?:
    | AccountBudgetProposalErrorEnum_AccountBudgetProposalError
    | undefined;
  /** The reasons for the user list error */
  userListError?:
    | UserListErrorEnum_UserListError
    | undefined;
  /** The reasons for the change event error */
  changeEventError?:
    | ChangeEventErrorEnum_ChangeEventError
    | undefined;
  /** The reasons for the change status error */
  changeStatusError?:
    | ChangeStatusErrorEnum_ChangeStatusError
    | undefined;
  /** The reasons for the feed error */
  feedError?:
    | FeedErrorEnum_FeedError
    | undefined;
  /** The reasons for the geo target constant suggestion error. */
  geoTargetConstantSuggestionError?:
    | GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError
    | undefined;
  /** The reasons for the campaign draft error */
  campaignDraftError?:
    | CampaignDraftErrorEnum_CampaignDraftError
    | undefined;
  /** The reasons for the feed item error */
  feedItemError?:
    | FeedItemErrorEnum_FeedItemError
    | undefined;
  /** The reason for the label error. */
  labelError?:
    | LabelErrorEnum_LabelError
    | undefined;
  /** The reasons for the billing setup error */
  billingSetupError?:
    | BillingSetupErrorEnum_BillingSetupError
    | undefined;
  /** The reasons for the customer client link error */
  customerClientLinkError?:
    | CustomerClientLinkErrorEnum_CustomerClientLinkError
    | undefined;
  /** The reasons for the customer manager link error */
  customerManagerLinkError?:
    | CustomerManagerLinkErrorEnum_CustomerManagerLinkError
    | undefined;
  /** The reasons for the feed mapping error */
  feedMappingError?:
    | FeedMappingErrorEnum_FeedMappingError
    | undefined;
  /** The reasons for the customer feed error */
  customerFeedError?:
    | CustomerFeedErrorEnum_CustomerFeedError
    | undefined;
  /** The reasons for the ad group feed error */
  adGroupFeedError?:
    | AdGroupFeedErrorEnum_AdGroupFeedError
    | undefined;
  /** The reasons for the campaign feed error */
  campaignFeedError?:
    | CampaignFeedErrorEnum_CampaignFeedError
    | undefined;
  /** The reasons for the custom interest error */
  customInterestError?:
    | CustomInterestErrorEnum_CustomInterestError
    | undefined;
  /** The reasons for the campaign experiment error */
  campaignExperimentError?:
    | CampaignExperimentErrorEnum_CampaignExperimentError
    | undefined;
  /** The reasons for the extension feed item error */
  extensionFeedItemError?:
    | ExtensionFeedItemErrorEnum_ExtensionFeedItemError
    | undefined;
  /** The reasons for the ad parameter error */
  adParameterError?:
    | AdParameterErrorEnum_AdParameterError
    | undefined;
  /** The reasons for the feed item validation error */
  feedItemValidationError?:
    | FeedItemValidationErrorEnum_FeedItemValidationError
    | undefined;
  /** The reasons for the extension setting error */
  extensionSettingError?:
    | ExtensionSettingErrorEnum_ExtensionSettingError
    | undefined;
  /** The reasons for the feed item set error */
  feedItemSetError?:
    | FeedItemSetErrorEnum_FeedItemSetError
    | undefined;
  /** The reasons for the feed item set link error */
  feedItemSetLinkError?:
    | FeedItemSetLinkErrorEnum_FeedItemSetLinkError
    | undefined;
  /** The reasons for the feed item target error */
  feedItemTargetError?:
    | FeedItemTargetErrorEnum_FeedItemTargetError
    | undefined;
  /** The reasons for the policy violation error */
  policyViolationError?:
    | PolicyViolationErrorEnum_PolicyViolationError
    | undefined;
  /** The reasons for the mutate job error */
  partialFailureError?:
    | PartialFailureErrorEnum_PartialFailureError
    | undefined;
  /** The reasons for the policy validation parameter error */
  policyValidationParameterError?:
    | PolicyValidationParameterErrorEnum_PolicyValidationParameterError
    | undefined;
  /** The reasons for the size limit error */
  sizeLimitError?:
    | SizeLimitErrorEnum_SizeLimitError
    | undefined;
  /** The reasons for the offline user data job error. */
  offlineUserDataJobError?:
    | OfflineUserDataJobErrorEnum_OfflineUserDataJobError
    | undefined;
  /** The reasons for the not allowlisted error */
  notAllowlistedError?:
    | NotAllowlistedErrorEnum_NotAllowlistedError
    | undefined;
  /** The reasons for the manager link error */
  managerLinkError?:
    | ManagerLinkErrorEnum_ManagerLinkError
    | undefined;
  /** The reasons for the currency code error */
  currencyCodeError?:
    | CurrencyCodeErrorEnum_CurrencyCodeError
    | undefined;
  /** The reasons for the experiment error */
  experimentError?:
    | ExperimentErrorEnum_ExperimentError
    | undefined;
  /** The reasons for the access invitation error */
  accessInvitationError?:
    | AccessInvitationErrorEnum_AccessInvitationError
    | undefined;
  /** The reasons for the reach plan error */
  reachPlanError?:
    | ReachPlanErrorEnum_ReachPlanError
    | undefined;
  /** The reasons for the invoice error */
  invoiceError?:
    | InvoiceErrorEnum_InvoiceError
    | undefined;
  /** The reasons for errors in payments accounts service */
  paymentsAccountError?:
    | PaymentsAccountErrorEnum_PaymentsAccountError
    | undefined;
  /** The reasons for the time zone error */
  timeZoneError?:
    | TimeZoneErrorEnum_TimeZoneError
    | undefined;
  /** The reasons for the asset link error */
  assetLinkError?:
    | AssetLinkErrorEnum_AssetLinkError
    | undefined;
  /** The reasons for the user data error. */
  userDataError?:
    | UserDataErrorEnum_UserDataError
    | undefined;
  /** The reasons for the batch job error */
  batchJobError?:
    | BatchJobErrorEnum_BatchJobError
    | undefined;
  /** The reasons for the account link status change error */
  accountLinkError?:
    | AccountLinkErrorEnum_AccountLinkError
    | undefined;
  /** The reasons for the third party app analytics link mutate error */
  thirdPartyAppAnalyticsLinkError?:
    | ThirdPartyAppAnalyticsLinkErrorEnum_ThirdPartyAppAnalyticsLinkError
    | undefined;
  /** The reasons for the customer user access mutate error */
  customerUserAccessError?:
    | CustomerUserAccessErrorEnum_CustomerUserAccessError
    | undefined;
  /** The reasons for the custom audience error */
  customAudienceError?:
    | CustomAudienceErrorEnum_CustomAudienceError
    | undefined;
  /** The reasons for the audience error */
  audienceError?:
    | AudienceErrorEnum_AudienceError
    | undefined;
  /** The reasons for the Search term insight error */
  searchTermInsightError?:
    | SearchTermInsightErrorEnum_SearchTermInsightError
    | undefined;
  /** The reasons for the Smart campaign error */
  smartCampaignError?:
    | SmartCampaignErrorEnum_SmartCampaignError
    | undefined;
  /** The reasons for the experiment arm error */
  experimentArmError?:
    | ExperimentArmErrorEnum_ExperimentArmError
    | undefined;
  /** The reasons for the Audience Insights error */
  audienceInsightsError?:
    | AudienceInsightsErrorEnum_AudienceInsightsError
    | undefined;
  /** The reasons for the product link error */
  productLinkError?:
    | ProductLinkErrorEnum_ProductLinkError
    | undefined;
  /** The reasons for the customer SK Ad network conversion value schema error */
  customerSkAdNetworkConversionValueSchemaError?:
    | CustomerSkAdNetworkConversionValueSchemaErrorEnum_CustomerSkAdNetworkConversionValueSchemaError
    | undefined;
  /** The reasons for the currency errors. */
  currencyError?:
    | CurrencyErrorEnum_CurrencyError
    | undefined;
  /** The reasons for the asset group hint error */
  assetGroupSignalError?:
    | AssetGroupSignalErrorEnum_AssetGroupSignalError
    | undefined;
  /** The reasons for the product link invitation error */
  productLinkInvitationError?:
    | ProductLinkInvitationErrorEnum_ProductLinkInvitationError
    | undefined;
  /** The reasons for the customer lifecycle goal error */
  customerLifecycleGoalError?:
    | CustomerLifecycleGoalErrorEnum_CustomerLifecycleGoalError
    | undefined;
  /** The reasons for the campaign lifecycle goal error */
  campaignLifecycleGoalError?:
    | CampaignLifecycleGoalErrorEnum_CampaignLifecycleGoalError
    | undefined;
  /** The reasons for an identity verification error. */
  identityVerificationError?: IdentityVerificationErrorEnum_IdentityVerificationError | undefined;
}

/** Describes the part of the request proto that caused the error. */
export interface ErrorLocation {
  /** A field path that indicates which field was invalid in the request. */
  fieldPathElements: ErrorLocation_FieldPathElement[];
}

/** A part of a field path. */
export interface ErrorLocation_FieldPathElement {
  /** The name of a field or a oneof */
  fieldName: string;
  /** If field_name is a repeated field, this is the element that failed */
  index?: number | undefined;
}

/** Additional error details. */
export interface ErrorDetails {
  /**
   * The error code that should have been returned, but wasn't. This is used
   * when the error code is not published in the client specified version.
   */
  unpublishedErrorCode: string;
  /** Describes an ad policy violation. */
  policyViolationDetails:
    | PolicyViolationDetails
    | undefined;
  /** Describes policy violation findings. */
  policyFindingDetails:
    | PolicyFindingDetails
    | undefined;
  /**
   * Details on the quota error, including the scope (account or developer), the
   * rate bucket name and the retry delay.
   */
  quotaErrorDetails:
    | QuotaErrorDetails
    | undefined;
  /** Details for a resource count limit exceeded error. */
  resourceCountDetails: ResourceCountDetails | undefined;
}

/**
 * Error returned as part of a mutate response.
 * This error indicates single policy violation by some text
 * in one of the fields.
 */
export interface PolicyViolationDetails {
  /** Human readable description of policy violation. */
  externalPolicyDescription: string;
  /**
   * Unique identifier for this violation.
   * If policy is exemptible, this key may be used to request exemption.
   */
  key:
    | PolicyViolationKey
    | undefined;
  /** Human readable name of the policy. */
  externalPolicyName: string;
  /** Whether user can file an exemption request for this violation. */
  isExemptible: boolean;
}

/**
 * Error returned as part of a mutate response.
 * This error indicates one or more policy findings in the fields of a
 * resource.
 */
export interface PolicyFindingDetails {
  /**
   * The list of policy topics for the resource. Contains the PROHIBITED or
   * FULLY_LIMITED policy topic entries that prevented the resource from being
   * saved (among any other entries the resource may also have).
   */
  policyTopicEntries: PolicyTopicEntry[];
}

/** Additional quota error details when there is QuotaError. */
export interface QuotaErrorDetails {
  /** The rate scope of the quota limit. */
  rateScope: QuotaErrorDetails_QuotaRateScope;
  /**
   * The high level description of the quota bucket.
   * Examples are "Get requests for standard access" or "Requests per account".
   */
  rateName: string;
  /** Backoff period that customers should wait before sending next request. */
  retryDelay: Duration | undefined;
}

/** Enum of possible scopes that quota buckets belong to. */
export enum QuotaErrorDetails_QuotaRateScope {
  /** UNSPECIFIED - Unspecified enum */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** ACCOUNT - Per customer account quota */
  ACCOUNT = 2,
  /** DEVELOPER - Per project or DevToken quota */
  DEVELOPER = 3,
  UNRECOGNIZED = -1,
}

export function quotaErrorDetails_QuotaRateScopeFromJSON(object: any): QuotaErrorDetails_QuotaRateScope {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return QuotaErrorDetails_QuotaRateScope.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return QuotaErrorDetails_QuotaRateScope.UNKNOWN;
    case 2:
    case "ACCOUNT":
      return QuotaErrorDetails_QuotaRateScope.ACCOUNT;
    case 3:
    case "DEVELOPER":
      return QuotaErrorDetails_QuotaRateScope.DEVELOPER;
    case -1:
    case "UNRECOGNIZED":
    default:
      return QuotaErrorDetails_QuotaRateScope.UNRECOGNIZED;
  }
}

export function quotaErrorDetails_QuotaRateScopeToJSON(object: QuotaErrorDetails_QuotaRateScope): string {
  switch (object) {
    case QuotaErrorDetails_QuotaRateScope.UNSPECIFIED:
      return "UNSPECIFIED";
    case QuotaErrorDetails_QuotaRateScope.UNKNOWN:
      return "UNKNOWN";
    case QuotaErrorDetails_QuotaRateScope.ACCOUNT:
      return "ACCOUNT";
    case QuotaErrorDetails_QuotaRateScope.DEVELOPER:
      return "DEVELOPER";
    case QuotaErrorDetails_QuotaRateScope.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** Error details returned when an resource count limit was exceeded. */
export interface ResourceCountDetails {
  /**
   * The ID of the resource whose limit was exceeded.
   * External customer ID if the limit is for a customer.
   */
  enclosingId: string;
  /**
   * The name of the resource (Customer, Campaign etc.) whose limit was
   * exceeded.
   */
  enclosingResource: string;
  /** The limit which was exceeded. */
  limit: number;
  /** The resource limit type which was exceeded. */
  limitType: ResourceLimitTypeEnum_ResourceLimitType;
  /** The count of existing entities. */
  existingCount: number;
}

function createBaseGoogleAdsFailure(): GoogleAdsFailure {
  return { errors: [], requestId: "" };
}

export const GoogleAdsFailure: MessageFns<GoogleAdsFailure> = {
  encode(message: GoogleAdsFailure, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.errors) {
      GoogleAdsError.encode(v!, writer.uint32(10).fork()).join();
    }
    if (message.requestId !== "") {
      writer.uint32(18).string(message.requestId);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GoogleAdsFailure {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGoogleAdsFailure();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.errors.push(GoogleAdsError.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.requestId = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GoogleAdsFailure {
    return {
      errors: globalThis.Array.isArray(object?.errors) ? object.errors.map((e: any) => GoogleAdsError.fromJSON(e)) : [],
      requestId: isSet(object.requestId) ? globalThis.String(object.requestId) : "",
    };
  },

  toJSON(message: GoogleAdsFailure): unknown {
    const obj: any = {};
    if (message.errors?.length) {
      obj.errors = message.errors.map((e) => GoogleAdsError.toJSON(e));
    }
    if (message.requestId !== "") {
      obj.requestId = message.requestId;
    }
    return obj;
  },

  create(base?: DeepPartial<GoogleAdsFailure>): GoogleAdsFailure {
    return GoogleAdsFailure.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GoogleAdsFailure>): GoogleAdsFailure {
    const message = createBaseGoogleAdsFailure();
    message.errors = object.errors?.map((e) => GoogleAdsError.fromPartial(e)) || [];
    message.requestId = object.requestId ?? "";
    return message;
  },
};

function createBaseGoogleAdsError(): GoogleAdsError {
  return { errorCode: undefined, message: "", trigger: undefined, location: undefined, details: undefined };
}

export const GoogleAdsError: MessageFns<GoogleAdsError> = {
  encode(message: GoogleAdsError, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.errorCode !== undefined) {
      ErrorCode.encode(message.errorCode, writer.uint32(10).fork()).join();
    }
    if (message.message !== "") {
      writer.uint32(18).string(message.message);
    }
    if (message.trigger !== undefined) {
      Value.encode(message.trigger, writer.uint32(26).fork()).join();
    }
    if (message.location !== undefined) {
      ErrorLocation.encode(message.location, writer.uint32(34).fork()).join();
    }
    if (message.details !== undefined) {
      ErrorDetails.encode(message.details, writer.uint32(42).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GoogleAdsError {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGoogleAdsError();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.errorCode = ErrorCode.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.message = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.trigger = Value.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.location = ErrorLocation.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.details = ErrorDetails.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GoogleAdsError {
    return {
      errorCode: isSet(object.errorCode) ? ErrorCode.fromJSON(object.errorCode) : undefined,
      message: isSet(object.message) ? globalThis.String(object.message) : "",
      trigger: isSet(object.trigger) ? Value.fromJSON(object.trigger) : undefined,
      location: isSet(object.location) ? ErrorLocation.fromJSON(object.location) : undefined,
      details: isSet(object.details) ? ErrorDetails.fromJSON(object.details) : undefined,
    };
  },

  toJSON(message: GoogleAdsError): unknown {
    const obj: any = {};
    if (message.errorCode !== undefined) {
      obj.errorCode = ErrorCode.toJSON(message.errorCode);
    }
    if (message.message !== "") {
      obj.message = message.message;
    }
    if (message.trigger !== undefined) {
      obj.trigger = Value.toJSON(message.trigger);
    }
    if (message.location !== undefined) {
      obj.location = ErrorLocation.toJSON(message.location);
    }
    if (message.details !== undefined) {
      obj.details = ErrorDetails.toJSON(message.details);
    }
    return obj;
  },

  create(base?: DeepPartial<GoogleAdsError>): GoogleAdsError {
    return GoogleAdsError.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GoogleAdsError>): GoogleAdsError {
    const message = createBaseGoogleAdsError();
    message.errorCode = (object.errorCode !== undefined && object.errorCode !== null)
      ? ErrorCode.fromPartial(object.errorCode)
      : undefined;
    message.message = object.message ?? "";
    message.trigger = (object.trigger !== undefined && object.trigger !== null)
      ? Value.fromPartial(object.trigger)
      : undefined;
    message.location = (object.location !== undefined && object.location !== null)
      ? ErrorLocation.fromPartial(object.location)
      : undefined;
    message.details = (object.details !== undefined && object.details !== null)
      ? ErrorDetails.fromPartial(object.details)
      : undefined;
    return message;
  },
};

function createBaseErrorCode(): ErrorCode {
  return {
    requestError: undefined,
    biddingStrategyError: undefined,
    urlFieldError: undefined,
    listOperationError: undefined,
    queryError: undefined,
    mutateError: undefined,
    fieldMaskError: undefined,
    authorizationError: undefined,
    internalError: undefined,
    quotaError: undefined,
    adError: undefined,
    adGroupError: undefined,
    campaignBudgetError: undefined,
    campaignError: undefined,
    videoCampaignError: undefined,
    authenticationError: undefined,
    adGroupCriterionCustomizerError: undefined,
    adGroupCriterionError: undefined,
    adGroupCustomizerError: undefined,
    adCustomizerError: undefined,
    adGroupAdError: undefined,
    adSharingError: undefined,
    adxError: undefined,
    assetError: undefined,
    assetGroupAssetError: undefined,
    assetGroupListingGroupFilterError: undefined,
    assetGroupError: undefined,
    assetSetAssetError: undefined,
    assetSetLinkError: undefined,
    assetSetError: undefined,
    biddingError: undefined,
    campaignCriterionError: undefined,
    campaignConversionGoalError: undefined,
    campaignCustomizerError: undefined,
    collectionSizeError: undefined,
    conversionGoalCampaignConfigError: undefined,
    countryCodeError: undefined,
    criterionError: undefined,
    customConversionGoalError: undefined,
    customerCustomizerError: undefined,
    customerError: undefined,
    customizerAttributeError: undefined,
    dateError: undefined,
    dateRangeError: undefined,
    distinctError: undefined,
    feedAttributeReferenceError: undefined,
    functionError: undefined,
    functionParsingError: undefined,
    idError: undefined,
    imageError: undefined,
    languageCodeError: undefined,
    mediaBundleError: undefined,
    mediaUploadError: undefined,
    mediaFileError: undefined,
    merchantCenterError: undefined,
    multiplierError: undefined,
    newResourceCreationError: undefined,
    notEmptyError: undefined,
    nullError: undefined,
    operatorError: undefined,
    rangeError: undefined,
    recommendationError: undefined,
    recommendationSubscriptionError: undefined,
    regionCodeError: undefined,
    settingError: undefined,
    stringFormatError: undefined,
    stringLengthError: undefined,
    operationAccessDeniedError: undefined,
    resourceAccessDeniedError: undefined,
    resourceCountLimitExceededError: undefined,
    youtubeVideoRegistrationError: undefined,
    adGroupBidModifierError: undefined,
    contextError: undefined,
    fieldError: undefined,
    sharedSetError: undefined,
    sharedCriterionError: undefined,
    campaignSharedSetError: undefined,
    conversionActionError: undefined,
    conversionAdjustmentUploadError: undefined,
    conversionCustomVariableError: undefined,
    conversionUploadError: undefined,
    conversionValueRuleError: undefined,
    conversionValueRuleSetError: undefined,
    headerError: undefined,
    databaseError: undefined,
    policyFindingError: undefined,
    enumError: undefined,
    keywordPlanError: undefined,
    keywordPlanCampaignError: undefined,
    keywordPlanCampaignKeywordError: undefined,
    keywordPlanAdGroupError: undefined,
    keywordPlanAdGroupKeywordError: undefined,
    keywordPlanIdeaError: undefined,
    accountBudgetProposalError: undefined,
    userListError: undefined,
    changeEventError: undefined,
    changeStatusError: undefined,
    feedError: undefined,
    geoTargetConstantSuggestionError: undefined,
    campaignDraftError: undefined,
    feedItemError: undefined,
    labelError: undefined,
    billingSetupError: undefined,
    customerClientLinkError: undefined,
    customerManagerLinkError: undefined,
    feedMappingError: undefined,
    customerFeedError: undefined,
    adGroupFeedError: undefined,
    campaignFeedError: undefined,
    customInterestError: undefined,
    campaignExperimentError: undefined,
    extensionFeedItemError: undefined,
    adParameterError: undefined,
    feedItemValidationError: undefined,
    extensionSettingError: undefined,
    feedItemSetError: undefined,
    feedItemSetLinkError: undefined,
    feedItemTargetError: undefined,
    policyViolationError: undefined,
    partialFailureError: undefined,
    policyValidationParameterError: undefined,
    sizeLimitError: undefined,
    offlineUserDataJobError: undefined,
    notAllowlistedError: undefined,
    managerLinkError: undefined,
    currencyCodeError: undefined,
    experimentError: undefined,
    accessInvitationError: undefined,
    reachPlanError: undefined,
    invoiceError: undefined,
    paymentsAccountError: undefined,
    timeZoneError: undefined,
    assetLinkError: undefined,
    userDataError: undefined,
    batchJobError: undefined,
    accountLinkError: undefined,
    thirdPartyAppAnalyticsLinkError: undefined,
    customerUserAccessError: undefined,
    customAudienceError: undefined,
    audienceError: undefined,
    searchTermInsightError: undefined,
    smartCampaignError: undefined,
    experimentArmError: undefined,
    audienceInsightsError: undefined,
    productLinkError: undefined,
    customerSkAdNetworkConversionValueSchemaError: undefined,
    currencyError: undefined,
    assetGroupSignalError: undefined,
    productLinkInvitationError: undefined,
    customerLifecycleGoalError: undefined,
    campaignLifecycleGoalError: undefined,
    identityVerificationError: undefined,
  };
}

export const ErrorCode: MessageFns<ErrorCode> = {
  encode(message: ErrorCode, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.requestError !== undefined) {
      writer.uint32(8).int32(message.requestError);
    }
    if (message.biddingStrategyError !== undefined) {
      writer.uint32(16).int32(message.biddingStrategyError);
    }
    if (message.urlFieldError !== undefined) {
      writer.uint32(24).int32(message.urlFieldError);
    }
    if (message.listOperationError !== undefined) {
      writer.uint32(32).int32(message.listOperationError);
    }
    if (message.queryError !== undefined) {
      writer.uint32(40).int32(message.queryError);
    }
    if (message.mutateError !== undefined) {
      writer.uint32(56).int32(message.mutateError);
    }
    if (message.fieldMaskError !== undefined) {
      writer.uint32(64).int32(message.fieldMaskError);
    }
    if (message.authorizationError !== undefined) {
      writer.uint32(72).int32(message.authorizationError);
    }
    if (message.internalError !== undefined) {
      writer.uint32(80).int32(message.internalError);
    }
    if (message.quotaError !== undefined) {
      writer.uint32(88).int32(message.quotaError);
    }
    if (message.adError !== undefined) {
      writer.uint32(96).int32(message.adError);
    }
    if (message.adGroupError !== undefined) {
      writer.uint32(104).int32(message.adGroupError);
    }
    if (message.campaignBudgetError !== undefined) {
      writer.uint32(112).int32(message.campaignBudgetError);
    }
    if (message.campaignError !== undefined) {
      writer.uint32(120).int32(message.campaignError);
    }
    if (message.videoCampaignError !== undefined) {
      writer.uint32(1456).int32(message.videoCampaignError);
    }
    if (message.authenticationError !== undefined) {
      writer.uint32(136).int32(message.authenticationError);
    }
    if (message.adGroupCriterionCustomizerError !== undefined) {
      writer.uint32(1288).int32(message.adGroupCriterionCustomizerError);
    }
    if (message.adGroupCriterionError !== undefined) {
      writer.uint32(144).int32(message.adGroupCriterionError);
    }
    if (message.adGroupCustomizerError !== undefined) {
      writer.uint32(1272).int32(message.adGroupCustomizerError);
    }
    if (message.adCustomizerError !== undefined) {
      writer.uint32(152).int32(message.adCustomizerError);
    }
    if (message.adGroupAdError !== undefined) {
      writer.uint32(168).int32(message.adGroupAdError);
    }
    if (message.adSharingError !== undefined) {
      writer.uint32(192).int32(message.adSharingError);
    }
    if (message.adxError !== undefined) {
      writer.uint32(200).int32(message.adxError);
    }
    if (message.assetError !== undefined) {
      writer.uint32(856).int32(message.assetError);
    }
    if (message.assetGroupAssetError !== undefined) {
      writer.uint32(1192).int32(message.assetGroupAssetError);
    }
    if (message.assetGroupListingGroupFilterError !== undefined) {
      writer.uint32(1240).int32(message.assetGroupListingGroupFilterError);
    }
    if (message.assetGroupError !== undefined) {
      writer.uint32(1184).int32(message.assetGroupError);
    }
    if (message.assetSetAssetError !== undefined) {
      writer.uint32(1224).int32(message.assetSetAssetError);
    }
    if (message.assetSetLinkError !== undefined) {
      writer.uint32(1232).int32(message.assetSetLinkError);
    }
    if (message.assetSetError !== undefined) {
      writer.uint32(1216).int32(message.assetSetError);
    }
    if (message.biddingError !== undefined) {
      writer.uint32(208).int32(message.biddingError);
    }
    if (message.campaignCriterionError !== undefined) {
      writer.uint32(232).int32(message.campaignCriterionError);
    }
    if (message.campaignConversionGoalError !== undefined) {
      writer.uint32(1328).int32(message.campaignConversionGoalError);
    }
    if (message.campaignCustomizerError !== undefined) {
      writer.uint32(1280).int32(message.campaignCustomizerError);
    }
    if (message.collectionSizeError !== undefined) {
      writer.uint32(248).int32(message.collectionSizeError);
    }
    if (message.conversionGoalCampaignConfigError !== undefined) {
      writer.uint32(1320).int32(message.conversionGoalCampaignConfigError);
    }
    if (message.countryCodeError !== undefined) {
      writer.uint32(872).int32(message.countryCodeError);
    }
    if (message.criterionError !== undefined) {
      writer.uint32(256).int32(message.criterionError);
    }
    if (message.customConversionGoalError !== undefined) {
      writer.uint32(1200).int32(message.customConversionGoalError);
    }
    if (message.customerCustomizerError !== undefined) {
      writer.uint32(1264).int32(message.customerCustomizerError);
    }
    if (message.customerError !== undefined) {
      writer.uint32(720).int32(message.customerError);
    }
    if (message.customizerAttributeError !== undefined) {
      writer.uint32(1208).int32(message.customizerAttributeError);
    }
    if (message.dateError !== undefined) {
      writer.uint32(264).int32(message.dateError);
    }
    if (message.dateRangeError !== undefined) {
      writer.uint32(272).int32(message.dateRangeError);
    }
    if (message.distinctError !== undefined) {
      writer.uint32(280).int32(message.distinctError);
    }
    if (message.feedAttributeReferenceError !== undefined) {
      writer.uint32(288).int32(message.feedAttributeReferenceError);
    }
    if (message.functionError !== undefined) {
      writer.uint32(296).int32(message.functionError);
    }
    if (message.functionParsingError !== undefined) {
      writer.uint32(304).int32(message.functionParsingError);
    }
    if (message.idError !== undefined) {
      writer.uint32(312).int32(message.idError);
    }
    if (message.imageError !== undefined) {
      writer.uint32(320).int32(message.imageError);
    }
    if (message.languageCodeError !== undefined) {
      writer.uint32(880).int32(message.languageCodeError);
    }
    if (message.mediaBundleError !== undefined) {
      writer.uint32(336).int32(message.mediaBundleError);
    }
    if (message.mediaUploadError !== undefined) {
      writer.uint32(928).int32(message.mediaUploadError);
    }
    if (message.mediaFileError !== undefined) {
      writer.uint32(688).int32(message.mediaFileError);
    }
    if (message.merchantCenterError !== undefined) {
      writer.uint32(1296).int32(message.merchantCenterError);
    }
    if (message.multiplierError !== undefined) {
      writer.uint32(352).int32(message.multiplierError);
    }
    if (message.newResourceCreationError !== undefined) {
      writer.uint32(360).int32(message.newResourceCreationError);
    }
    if (message.notEmptyError !== undefined) {
      writer.uint32(368).int32(message.notEmptyError);
    }
    if (message.nullError !== undefined) {
      writer.uint32(376).int32(message.nullError);
    }
    if (message.operatorError !== undefined) {
      writer.uint32(384).int32(message.operatorError);
    }
    if (message.rangeError !== undefined) {
      writer.uint32(392).int32(message.rangeError);
    }
    if (message.recommendationError !== undefined) {
      writer.uint32(464).int32(message.recommendationError);
    }
    if (message.recommendationSubscriptionError !== undefined) {
      writer.uint32(1440).int32(message.recommendationSubscriptionError);
    }
    if (message.regionCodeError !== undefined) {
      writer.uint32(408).int32(message.regionCodeError);
    }
    if (message.settingError !== undefined) {
      writer.uint32(416).int32(message.settingError);
    }
    if (message.stringFormatError !== undefined) {
      writer.uint32(424).int32(message.stringFormatError);
    }
    if (message.stringLengthError !== undefined) {
      writer.uint32(432).int32(message.stringLengthError);
    }
    if (message.operationAccessDeniedError !== undefined) {
      writer.uint32(440).int32(message.operationAccessDeniedError);
    }
    if (message.resourceAccessDeniedError !== undefined) {
      writer.uint32(448).int32(message.resourceAccessDeniedError);
    }
    if (message.resourceCountLimitExceededError !== undefined) {
      writer.uint32(456).int32(message.resourceCountLimitExceededError);
    }
    if (message.youtubeVideoRegistrationError !== undefined) {
      writer.uint32(936).int32(message.youtubeVideoRegistrationError);
    }
    if (message.adGroupBidModifierError !== undefined) {
      writer.uint32(472).int32(message.adGroupBidModifierError);
    }
    if (message.contextError !== undefined) {
      writer.uint32(480).int32(message.contextError);
    }
    if (message.fieldError !== undefined) {
      writer.uint32(488).int32(message.fieldError);
    }
    if (message.sharedSetError !== undefined) {
      writer.uint32(496).int32(message.sharedSetError);
    }
    if (message.sharedCriterionError !== undefined) {
      writer.uint32(504).int32(message.sharedCriterionError);
    }
    if (message.campaignSharedSetError !== undefined) {
      writer.uint32(512).int32(message.campaignSharedSetError);
    }
    if (message.conversionActionError !== undefined) {
      writer.uint32(520).int32(message.conversionActionError);
    }
    if (message.conversionAdjustmentUploadError !== undefined) {
      writer.uint32(920).int32(message.conversionAdjustmentUploadError);
    }
    if (message.conversionCustomVariableError !== undefined) {
      writer.uint32(1144).int32(message.conversionCustomVariableError);
    }
    if (message.conversionUploadError !== undefined) {
      writer.uint32(888).int32(message.conversionUploadError);
    }
    if (message.conversionValueRuleError !== undefined) {
      writer.uint32(1160).int32(message.conversionValueRuleError);
    }
    if (message.conversionValueRuleSetError !== undefined) {
      writer.uint32(1168).int32(message.conversionValueRuleSetError);
    }
    if (message.headerError !== undefined) {
      writer.uint32(528).int32(message.headerError);
    }
    if (message.databaseError !== undefined) {
      writer.uint32(536).int32(message.databaseError);
    }
    if (message.policyFindingError !== undefined) {
      writer.uint32(544).int32(message.policyFindingError);
    }
    if (message.enumError !== undefined) {
      writer.uint32(560).int32(message.enumError);
    }
    if (message.keywordPlanError !== undefined) {
      writer.uint32(568).int32(message.keywordPlanError);
    }
    if (message.keywordPlanCampaignError !== undefined) {
      writer.uint32(576).int32(message.keywordPlanCampaignError);
    }
    if (message.keywordPlanCampaignKeywordError !== undefined) {
      writer.uint32(1056).int32(message.keywordPlanCampaignKeywordError);
    }
    if (message.keywordPlanAdGroupError !== undefined) {
      writer.uint32(592).int32(message.keywordPlanAdGroupError);
    }
    if (message.keywordPlanAdGroupKeywordError !== undefined) {
      writer.uint32(1064).int32(message.keywordPlanAdGroupKeywordError);
    }
    if (message.keywordPlanIdeaError !== undefined) {
      writer.uint32(608).int32(message.keywordPlanIdeaError);
    }
    if (message.accountBudgetProposalError !== undefined) {
      writer.uint32(616).int32(message.accountBudgetProposalError);
    }
    if (message.userListError !== undefined) {
      writer.uint32(624).int32(message.userListError);
    }
    if (message.changeEventError !== undefined) {
      writer.uint32(1088).int32(message.changeEventError);
    }
    if (message.changeStatusError !== undefined) {
      writer.uint32(632).int32(message.changeStatusError);
    }
    if (message.feedError !== undefined) {
      writer.uint32(640).int32(message.feedError);
    }
    if (message.geoTargetConstantSuggestionError !== undefined) {
      writer.uint32(648).int32(message.geoTargetConstantSuggestionError);
    }
    if (message.campaignDraftError !== undefined) {
      writer.uint32(656).int32(message.campaignDraftError);
    }
    if (message.feedItemError !== undefined) {
      writer.uint32(664).int32(message.feedItemError);
    }
    if (message.labelError !== undefined) {
      writer.uint32(672).int32(message.labelError);
    }
    if (message.billingSetupError !== undefined) {
      writer.uint32(696).int32(message.billingSetupError);
    }
    if (message.customerClientLinkError !== undefined) {
      writer.uint32(704).int32(message.customerClientLinkError);
    }
    if (message.customerManagerLinkError !== undefined) {
      writer.uint32(728).int32(message.customerManagerLinkError);
    }
    if (message.feedMappingError !== undefined) {
      writer.uint32(736).int32(message.feedMappingError);
    }
    if (message.customerFeedError !== undefined) {
      writer.uint32(744).int32(message.customerFeedError);
    }
    if (message.adGroupFeedError !== undefined) {
      writer.uint32(752).int32(message.adGroupFeedError);
    }
    if (message.campaignFeedError !== undefined) {
      writer.uint32(768).int32(message.campaignFeedError);
    }
    if (message.customInterestError !== undefined) {
      writer.uint32(776).int32(message.customInterestError);
    }
    if (message.campaignExperimentError !== undefined) {
      writer.uint32(784).int32(message.campaignExperimentError);
    }
    if (message.extensionFeedItemError !== undefined) {
      writer.uint32(800).int32(message.extensionFeedItemError);
    }
    if (message.adParameterError !== undefined) {
      writer.uint32(808).int32(message.adParameterError);
    }
    if (message.feedItemValidationError !== undefined) {
      writer.uint32(816).int32(message.feedItemValidationError);
    }
    if (message.extensionSettingError !== undefined) {
      writer.uint32(824).int32(message.extensionSettingError);
    }
    if (message.feedItemSetError !== undefined) {
      writer.uint32(1120).int32(message.feedItemSetError);
    }
    if (message.feedItemSetLinkError !== undefined) {
      writer.uint32(1128).int32(message.feedItemSetLinkError);
    }
    if (message.feedItemTargetError !== undefined) {
      writer.uint32(832).int32(message.feedItemTargetError);
    }
    if (message.policyViolationError !== undefined) {
      writer.uint32(840).int32(message.policyViolationError);
    }
    if (message.partialFailureError !== undefined) {
      writer.uint32(896).int32(message.partialFailureError);
    }
    if (message.policyValidationParameterError !== undefined) {
      writer.uint32(912).int32(message.policyValidationParameterError);
    }
    if (message.sizeLimitError !== undefined) {
      writer.uint32(944).int32(message.sizeLimitError);
    }
    if (message.offlineUserDataJobError !== undefined) {
      writer.uint32(952).int32(message.offlineUserDataJobError);
    }
    if (message.notAllowlistedError !== undefined) {
      writer.uint32(1096).int32(message.notAllowlistedError);
    }
    if (message.managerLinkError !== undefined) {
      writer.uint32(968).int32(message.managerLinkError);
    }
    if (message.currencyCodeError !== undefined) {
      writer.uint32(976).int32(message.currencyCodeError);
    }
    if (message.experimentError !== undefined) {
      writer.uint32(984).int32(message.experimentError);
    }
    if (message.accessInvitationError !== undefined) {
      writer.uint32(992).int32(message.accessInvitationError);
    }
    if (message.reachPlanError !== undefined) {
      writer.uint32(1000).int32(message.reachPlanError);
    }
    if (message.invoiceError !== undefined) {
      writer.uint32(1008).int32(message.invoiceError);
    }
    if (message.paymentsAccountError !== undefined) {
      writer.uint32(1016).int32(message.paymentsAccountError);
    }
    if (message.timeZoneError !== undefined) {
      writer.uint32(1024).int32(message.timeZoneError);
    }
    if (message.assetLinkError !== undefined) {
      writer.uint32(1032).int32(message.assetLinkError);
    }
    if (message.userDataError !== undefined) {
      writer.uint32(1040).int32(message.userDataError);
    }
    if (message.batchJobError !== undefined) {
      writer.uint32(1048).int32(message.batchJobError);
    }
    if (message.accountLinkError !== undefined) {
      writer.uint32(1072).int32(message.accountLinkError);
    }
    if (message.thirdPartyAppAnalyticsLinkError !== undefined) {
      writer.uint32(1080).int32(message.thirdPartyAppAnalyticsLinkError);
    }
    if (message.customerUserAccessError !== undefined) {
      writer.uint32(1104).int32(message.customerUserAccessError);
    }
    if (message.customAudienceError !== undefined) {
      writer.uint32(1112).int32(message.customAudienceError);
    }
    if (message.audienceError !== undefined) {
      writer.uint32(1312).int32(message.audienceError);
    }
    if (message.searchTermInsightError !== undefined) {
      writer.uint32(1392).int32(message.searchTermInsightError);
    }
    if (message.smartCampaignError !== undefined) {
      writer.uint32(1176).int32(message.smartCampaignError);
    }
    if (message.experimentArmError !== undefined) {
      writer.uint32(1248).int32(message.experimentArmError);
    }
    if (message.audienceInsightsError !== undefined) {
      writer.uint32(1336).int32(message.audienceInsightsError);
    }
    if (message.productLinkError !== undefined) {
      writer.uint32(1352).int32(message.productLinkError);
    }
    if (message.customerSkAdNetworkConversionValueSchemaError !== undefined) {
      writer.uint32(1360).int32(message.customerSkAdNetworkConversionValueSchemaError);
    }
    if (message.currencyError !== undefined) {
      writer.uint32(1368).int32(message.currencyError);
    }
    if (message.assetGroupSignalError !== undefined) {
      writer.uint32(1408).int32(message.assetGroupSignalError);
    }
    if (message.productLinkInvitationError !== undefined) {
      writer.uint32(1416).int32(message.productLinkInvitationError);
    }
    if (message.customerLifecycleGoalError !== undefined) {
      writer.uint32(1424).int32(message.customerLifecycleGoalError);
    }
    if (message.campaignLifecycleGoalError !== undefined) {
      writer.uint32(1432).int32(message.campaignLifecycleGoalError);
    }
    if (message.identityVerificationError !== undefined) {
      writer.uint32(1448).int32(message.identityVerificationError);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ErrorCode {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseErrorCode();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.requestError = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.biddingStrategyError = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.urlFieldError = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.listOperationError = reader.int32() as any;
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.queryError = reader.int32() as any;
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.mutateError = reader.int32() as any;
          continue;
        case 8:
          if (tag !== 64) {
            break;
          }

          message.fieldMaskError = reader.int32() as any;
          continue;
        case 9:
          if (tag !== 72) {
            break;
          }

          message.authorizationError = reader.int32() as any;
          continue;
        case 10:
          if (tag !== 80) {
            break;
          }

          message.internalError = reader.int32() as any;
          continue;
        case 11:
          if (tag !== 88) {
            break;
          }

          message.quotaError = reader.int32() as any;
          continue;
        case 12:
          if (tag !== 96) {
            break;
          }

          message.adError = reader.int32() as any;
          continue;
        case 13:
          if (tag !== 104) {
            break;
          }

          message.adGroupError = reader.int32() as any;
          continue;
        case 14:
          if (tag !== 112) {
            break;
          }

          message.campaignBudgetError = reader.int32() as any;
          continue;
        case 15:
          if (tag !== 120) {
            break;
          }

          message.campaignError = reader.int32() as any;
          continue;
        case 182:
          if (tag !== 1456) {
            break;
          }

          message.videoCampaignError = reader.int32() as any;
          continue;
        case 17:
          if (tag !== 136) {
            break;
          }

          message.authenticationError = reader.int32() as any;
          continue;
        case 161:
          if (tag !== 1288) {
            break;
          }

          message.adGroupCriterionCustomizerError = reader.int32() as any;
          continue;
        case 18:
          if (tag !== 144) {
            break;
          }

          message.adGroupCriterionError = reader.int32() as any;
          continue;
        case 159:
          if (tag !== 1272) {
            break;
          }

          message.adGroupCustomizerError = reader.int32() as any;
          continue;
        case 19:
          if (tag !== 152) {
            break;
          }

          message.adCustomizerError = reader.int32() as any;
          continue;
        case 21:
          if (tag !== 168) {
            break;
          }

          message.adGroupAdError = reader.int32() as any;
          continue;
        case 24:
          if (tag !== 192) {
            break;
          }

          message.adSharingError = reader.int32() as any;
          continue;
        case 25:
          if (tag !== 200) {
            break;
          }

          message.adxError = reader.int32() as any;
          continue;
        case 107:
          if (tag !== 856) {
            break;
          }

          message.assetError = reader.int32() as any;
          continue;
        case 149:
          if (tag !== 1192) {
            break;
          }

          message.assetGroupAssetError = reader.int32() as any;
          continue;
        case 155:
          if (tag !== 1240) {
            break;
          }

          message.assetGroupListingGroupFilterError = reader.int32() as any;
          continue;
        case 148:
          if (tag !== 1184) {
            break;
          }

          message.assetGroupError = reader.int32() as any;
          continue;
        case 153:
          if (tag !== 1224) {
            break;
          }

          message.assetSetAssetError = reader.int32() as any;
          continue;
        case 154:
          if (tag !== 1232) {
            break;
          }

          message.assetSetLinkError = reader.int32() as any;
          continue;
        case 152:
          if (tag !== 1216) {
            break;
          }

          message.assetSetError = reader.int32() as any;
          continue;
        case 26:
          if (tag !== 208) {
            break;
          }

          message.biddingError = reader.int32() as any;
          continue;
        case 29:
          if (tag !== 232) {
            break;
          }

          message.campaignCriterionError = reader.int32() as any;
          continue;
        case 166:
          if (tag !== 1328) {
            break;
          }

          message.campaignConversionGoalError = reader.int32() as any;
          continue;
        case 160:
          if (tag !== 1280) {
            break;
          }

          message.campaignCustomizerError = reader.int32() as any;
          continue;
        case 31:
          if (tag !== 248) {
            break;
          }

          message.collectionSizeError = reader.int32() as any;
          continue;
        case 165:
          if (tag !== 1320) {
            break;
          }

          message.conversionGoalCampaignConfigError = reader.int32() as any;
          continue;
        case 109:
          if (tag !== 872) {
            break;
          }

          message.countryCodeError = reader.int32() as any;
          continue;
        case 32:
          if (tag !== 256) {
            break;
          }

          message.criterionError = reader.int32() as any;
          continue;
        case 150:
          if (tag !== 1200) {
            break;
          }

          message.customConversionGoalError = reader.int32() as any;
          continue;
        case 158:
          if (tag !== 1264) {
            break;
          }

          message.customerCustomizerError = reader.int32() as any;
          continue;
        case 90:
          if (tag !== 720) {
            break;
          }

          message.customerError = reader.int32() as any;
          continue;
        case 151:
          if (tag !== 1208) {
            break;
          }

          message.customizerAttributeError = reader.int32() as any;
          continue;
        case 33:
          if (tag !== 264) {
            break;
          }

          message.dateError = reader.int32() as any;
          continue;
        case 34:
          if (tag !== 272) {
            break;
          }

          message.dateRangeError = reader.int32() as any;
          continue;
        case 35:
          if (tag !== 280) {
            break;
          }

          message.distinctError = reader.int32() as any;
          continue;
        case 36:
          if (tag !== 288) {
            break;
          }

          message.feedAttributeReferenceError = reader.int32() as any;
          continue;
        case 37:
          if (tag !== 296) {
            break;
          }

          message.functionError = reader.int32() as any;
          continue;
        case 38:
          if (tag !== 304) {
            break;
          }

          message.functionParsingError = reader.int32() as any;
          continue;
        case 39:
          if (tag !== 312) {
            break;
          }

          message.idError = reader.int32() as any;
          continue;
        case 40:
          if (tag !== 320) {
            break;
          }

          message.imageError = reader.int32() as any;
          continue;
        case 110:
          if (tag !== 880) {
            break;
          }

          message.languageCodeError = reader.int32() as any;
          continue;
        case 42:
          if (tag !== 336) {
            break;
          }

          message.mediaBundleError = reader.int32() as any;
          continue;
        case 116:
          if (tag !== 928) {
            break;
          }

          message.mediaUploadError = reader.int32() as any;
          continue;
        case 86:
          if (tag !== 688) {
            break;
          }

          message.mediaFileError = reader.int32() as any;
          continue;
        case 162:
          if (tag !== 1296) {
            break;
          }

          message.merchantCenterError = reader.int32() as any;
          continue;
        case 44:
          if (tag !== 352) {
            break;
          }

          message.multiplierError = reader.int32() as any;
          continue;
        case 45:
          if (tag !== 360) {
            break;
          }

          message.newResourceCreationError = reader.int32() as any;
          continue;
        case 46:
          if (tag !== 368) {
            break;
          }

          message.notEmptyError = reader.int32() as any;
          continue;
        case 47:
          if (tag !== 376) {
            break;
          }

          message.nullError = reader.int32() as any;
          continue;
        case 48:
          if (tag !== 384) {
            break;
          }

          message.operatorError = reader.int32() as any;
          continue;
        case 49:
          if (tag !== 392) {
            break;
          }

          message.rangeError = reader.int32() as any;
          continue;
        case 58:
          if (tag !== 464) {
            break;
          }

          message.recommendationError = reader.int32() as any;
          continue;
        case 180:
          if (tag !== 1440) {
            break;
          }

          message.recommendationSubscriptionError = reader.int32() as any;
          continue;
        case 51:
          if (tag !== 408) {
            break;
          }

          message.regionCodeError = reader.int32() as any;
          continue;
        case 52:
          if (tag !== 416) {
            break;
          }

          message.settingError = reader.int32() as any;
          continue;
        case 53:
          if (tag !== 424) {
            break;
          }

          message.stringFormatError = reader.int32() as any;
          continue;
        case 54:
          if (tag !== 432) {
            break;
          }

          message.stringLengthError = reader.int32() as any;
          continue;
        case 55:
          if (tag !== 440) {
            break;
          }

          message.operationAccessDeniedError = reader.int32() as any;
          continue;
        case 56:
          if (tag !== 448) {
            break;
          }

          message.resourceAccessDeniedError = reader.int32() as any;
          continue;
        case 57:
          if (tag !== 456) {
            break;
          }

          message.resourceCountLimitExceededError = reader.int32() as any;
          continue;
        case 117:
          if (tag !== 936) {
            break;
          }

          message.youtubeVideoRegistrationError = reader.int32() as any;
          continue;
        case 59:
          if (tag !== 472) {
            break;
          }

          message.adGroupBidModifierError = reader.int32() as any;
          continue;
        case 60:
          if (tag !== 480) {
            break;
          }

          message.contextError = reader.int32() as any;
          continue;
        case 61:
          if (tag !== 488) {
            break;
          }

          message.fieldError = reader.int32() as any;
          continue;
        case 62:
          if (tag !== 496) {
            break;
          }

          message.sharedSetError = reader.int32() as any;
          continue;
        case 63:
          if (tag !== 504) {
            break;
          }

          message.sharedCriterionError = reader.int32() as any;
          continue;
        case 64:
          if (tag !== 512) {
            break;
          }

          message.campaignSharedSetError = reader.int32() as any;
          continue;
        case 65:
          if (tag !== 520) {
            break;
          }

          message.conversionActionError = reader.int32() as any;
          continue;
        case 115:
          if (tag !== 920) {
            break;
          }

          message.conversionAdjustmentUploadError = reader.int32() as any;
          continue;
        case 143:
          if (tag !== 1144) {
            break;
          }

          message.conversionCustomVariableError = reader.int32() as any;
          continue;
        case 111:
          if (tag !== 888) {
            break;
          }

          message.conversionUploadError = reader.int32() as any;
          continue;
        case 145:
          if (tag !== 1160) {
            break;
          }

          message.conversionValueRuleError = reader.int32() as any;
          continue;
        case 146:
          if (tag !== 1168) {
            break;
          }

          message.conversionValueRuleSetError = reader.int32() as any;
          continue;
        case 66:
          if (tag !== 528) {
            break;
          }

          message.headerError = reader.int32() as any;
          continue;
        case 67:
          if (tag !== 536) {
            break;
          }

          message.databaseError = reader.int32() as any;
          continue;
        case 68:
          if (tag !== 544) {
            break;
          }

          message.policyFindingError = reader.int32() as any;
          continue;
        case 70:
          if (tag !== 560) {
            break;
          }

          message.enumError = reader.int32() as any;
          continue;
        case 71:
          if (tag !== 568) {
            break;
          }

          message.keywordPlanError = reader.int32() as any;
          continue;
        case 72:
          if (tag !== 576) {
            break;
          }

          message.keywordPlanCampaignError = reader.int32() as any;
          continue;
        case 132:
          if (tag !== 1056) {
            break;
          }

          message.keywordPlanCampaignKeywordError = reader.int32() as any;
          continue;
        case 74:
          if (tag !== 592) {
            break;
          }

          message.keywordPlanAdGroupError = reader.int32() as any;
          continue;
        case 133:
          if (tag !== 1064) {
            break;
          }

          message.keywordPlanAdGroupKeywordError = reader.int32() as any;
          continue;
        case 76:
          if (tag !== 608) {
            break;
          }

          message.keywordPlanIdeaError = reader.int32() as any;
          continue;
        case 77:
          if (tag !== 616) {
            break;
          }

          message.accountBudgetProposalError = reader.int32() as any;
          continue;
        case 78:
          if (tag !== 624) {
            break;
          }

          message.userListError = reader.int32() as any;
          continue;
        case 136:
          if (tag !== 1088) {
            break;
          }

          message.changeEventError = reader.int32() as any;
          continue;
        case 79:
          if (tag !== 632) {
            break;
          }

          message.changeStatusError = reader.int32() as any;
          continue;
        case 80:
          if (tag !== 640) {
            break;
          }

          message.feedError = reader.int32() as any;
          continue;
        case 81:
          if (tag !== 648) {
            break;
          }

          message.geoTargetConstantSuggestionError = reader.int32() as any;
          continue;
        case 82:
          if (tag !== 656) {
            break;
          }

          message.campaignDraftError = reader.int32() as any;
          continue;
        case 83:
          if (tag !== 664) {
            break;
          }

          message.feedItemError = reader.int32() as any;
          continue;
        case 84:
          if (tag !== 672) {
            break;
          }

          message.labelError = reader.int32() as any;
          continue;
        case 87:
          if (tag !== 696) {
            break;
          }

          message.billingSetupError = reader.int32() as any;
          continue;
        case 88:
          if (tag !== 704) {
            break;
          }

          message.customerClientLinkError = reader.int32() as any;
          continue;
        case 91:
          if (tag !== 728) {
            break;
          }

          message.customerManagerLinkError = reader.int32() as any;
          continue;
        case 92:
          if (tag !== 736) {
            break;
          }

          message.feedMappingError = reader.int32() as any;
          continue;
        case 93:
          if (tag !== 744) {
            break;
          }

          message.customerFeedError = reader.int32() as any;
          continue;
        case 94:
          if (tag !== 752) {
            break;
          }

          message.adGroupFeedError = reader.int32() as any;
          continue;
        case 96:
          if (tag !== 768) {
            break;
          }

          message.campaignFeedError = reader.int32() as any;
          continue;
        case 97:
          if (tag !== 776) {
            break;
          }

          message.customInterestError = reader.int32() as any;
          continue;
        case 98:
          if (tag !== 784) {
            break;
          }

          message.campaignExperimentError = reader.int32() as any;
          continue;
        case 100:
          if (tag !== 800) {
            break;
          }

          message.extensionFeedItemError = reader.int32() as any;
          continue;
        case 101:
          if (tag !== 808) {
            break;
          }

          message.adParameterError = reader.int32() as any;
          continue;
        case 102:
          if (tag !== 816) {
            break;
          }

          message.feedItemValidationError = reader.int32() as any;
          continue;
        case 103:
          if (tag !== 824) {
            break;
          }

          message.extensionSettingError = reader.int32() as any;
          continue;
        case 140:
          if (tag !== 1120) {
            break;
          }

          message.feedItemSetError = reader.int32() as any;
          continue;
        case 141:
          if (tag !== 1128) {
            break;
          }

          message.feedItemSetLinkError = reader.int32() as any;
          continue;
        case 104:
          if (tag !== 832) {
            break;
          }

          message.feedItemTargetError = reader.int32() as any;
          continue;
        case 105:
          if (tag !== 840) {
            break;
          }

          message.policyViolationError = reader.int32() as any;
          continue;
        case 112:
          if (tag !== 896) {
            break;
          }

          message.partialFailureError = reader.int32() as any;
          continue;
        case 114:
          if (tag !== 912) {
            break;
          }

          message.policyValidationParameterError = reader.int32() as any;
          continue;
        case 118:
          if (tag !== 944) {
            break;
          }

          message.sizeLimitError = reader.int32() as any;
          continue;
        case 119:
          if (tag !== 952) {
            break;
          }

          message.offlineUserDataJobError = reader.int32() as any;
          continue;
        case 137:
          if (tag !== 1096) {
            break;
          }

          message.notAllowlistedError = reader.int32() as any;
          continue;
        case 121:
          if (tag !== 968) {
            break;
          }

          message.managerLinkError = reader.int32() as any;
          continue;
        case 122:
          if (tag !== 976) {
            break;
          }

          message.currencyCodeError = reader.int32() as any;
          continue;
        case 123:
          if (tag !== 984) {
            break;
          }

          message.experimentError = reader.int32() as any;
          continue;
        case 124:
          if (tag !== 992) {
            break;
          }

          message.accessInvitationError = reader.int32() as any;
          continue;
        case 125:
          if (tag !== 1000) {
            break;
          }

          message.reachPlanError = reader.int32() as any;
          continue;
        case 126:
          if (tag !== 1008) {
            break;
          }

          message.invoiceError = reader.int32() as any;
          continue;
        case 127:
          if (tag !== 1016) {
            break;
          }

          message.paymentsAccountError = reader.int32() as any;
          continue;
        case 128:
          if (tag !== 1024) {
            break;
          }

          message.timeZoneError = reader.int32() as any;
          continue;
        case 129:
          if (tag !== 1032) {
            break;
          }

          message.assetLinkError = reader.int32() as any;
          continue;
        case 130:
          if (tag !== 1040) {
            break;
          }

          message.userDataError = reader.int32() as any;
          continue;
        case 131:
          if (tag !== 1048) {
            break;
          }

          message.batchJobError = reader.int32() as any;
          continue;
        case 134:
          if (tag !== 1072) {
            break;
          }

          message.accountLinkError = reader.int32() as any;
          continue;
        case 135:
          if (tag !== 1080) {
            break;
          }

          message.thirdPartyAppAnalyticsLinkError = reader.int32() as any;
          continue;
        case 138:
          if (tag !== 1104) {
            break;
          }

          message.customerUserAccessError = reader.int32() as any;
          continue;
        case 139:
          if (tag !== 1112) {
            break;
          }

          message.customAudienceError = reader.int32() as any;
          continue;
        case 164:
          if (tag !== 1312) {
            break;
          }

          message.audienceError = reader.int32() as any;
          continue;
        case 174:
          if (tag !== 1392) {
            break;
          }

          message.searchTermInsightError = reader.int32() as any;
          continue;
        case 147:
          if (tag !== 1176) {
            break;
          }

          message.smartCampaignError = reader.int32() as any;
          continue;
        case 156:
          if (tag !== 1248) {
            break;
          }

          message.experimentArmError = reader.int32() as any;
          continue;
        case 167:
          if (tag !== 1336) {
            break;
          }

          message.audienceInsightsError = reader.int32() as any;
          continue;
        case 169:
          if (tag !== 1352) {
            break;
          }

          message.productLinkError = reader.int32() as any;
          continue;
        case 170:
          if (tag !== 1360) {
            break;
          }

          message.customerSkAdNetworkConversionValueSchemaError = reader.int32() as any;
          continue;
        case 171:
          if (tag !== 1368) {
            break;
          }

          message.currencyError = reader.int32() as any;
          continue;
        case 176:
          if (tag !== 1408) {
            break;
          }

          message.assetGroupSignalError = reader.int32() as any;
          continue;
        case 177:
          if (tag !== 1416) {
            break;
          }

          message.productLinkInvitationError = reader.int32() as any;
          continue;
        case 178:
          if (tag !== 1424) {
            break;
          }

          message.customerLifecycleGoalError = reader.int32() as any;
          continue;
        case 179:
          if (tag !== 1432) {
            break;
          }

          message.campaignLifecycleGoalError = reader.int32() as any;
          continue;
        case 181:
          if (tag !== 1448) {
            break;
          }

          message.identityVerificationError = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ErrorCode {
    return {
      requestError: isSet(object.requestError) ? requestErrorEnum_RequestErrorFromJSON(object.requestError) : undefined,
      biddingStrategyError: isSet(object.biddingStrategyError)
        ? biddingStrategyErrorEnum_BiddingStrategyErrorFromJSON(object.biddingStrategyError)
        : undefined,
      urlFieldError: isSet(object.urlFieldError)
        ? urlFieldErrorEnum_UrlFieldErrorFromJSON(object.urlFieldError)
        : undefined,
      listOperationError: isSet(object.listOperationError)
        ? listOperationErrorEnum_ListOperationErrorFromJSON(object.listOperationError)
        : undefined,
      queryError: isSet(object.queryError) ? queryErrorEnum_QueryErrorFromJSON(object.queryError) : undefined,
      mutateError: isSet(object.mutateError) ? mutateErrorEnum_MutateErrorFromJSON(object.mutateError) : undefined,
      fieldMaskError: isSet(object.fieldMaskError)
        ? fieldMaskErrorEnum_FieldMaskErrorFromJSON(object.fieldMaskError)
        : undefined,
      authorizationError: isSet(object.authorizationError)
        ? authorizationErrorEnum_AuthorizationErrorFromJSON(object.authorizationError)
        : undefined,
      internalError: isSet(object.internalError)
        ? internalErrorEnum_InternalErrorFromJSON(object.internalError)
        : undefined,
      quotaError: isSet(object.quotaError) ? quotaErrorEnum_QuotaErrorFromJSON(object.quotaError) : undefined,
      adError: isSet(object.adError) ? adErrorEnum_AdErrorFromJSON(object.adError) : undefined,
      adGroupError: isSet(object.adGroupError) ? adGroupErrorEnum_AdGroupErrorFromJSON(object.adGroupError) : undefined,
      campaignBudgetError: isSet(object.campaignBudgetError)
        ? campaignBudgetErrorEnum_CampaignBudgetErrorFromJSON(object.campaignBudgetError)
        : undefined,
      campaignError: isSet(object.campaignError)
        ? campaignErrorEnum_CampaignErrorFromJSON(object.campaignError)
        : undefined,
      videoCampaignError: isSet(object.videoCampaignError)
        ? videoCampaignErrorEnum_VideoCampaignErrorFromJSON(object.videoCampaignError)
        : undefined,
      authenticationError: isSet(object.authenticationError)
        ? authenticationErrorEnum_AuthenticationErrorFromJSON(object.authenticationError)
        : undefined,
      adGroupCriterionCustomizerError: isSet(object.adGroupCriterionCustomizerError)
        ? adGroupCriterionCustomizerErrorEnum_AdGroupCriterionCustomizerErrorFromJSON(
          object.adGroupCriterionCustomizerError,
        )
        : undefined,
      adGroupCriterionError: isSet(object.adGroupCriterionError)
        ? adGroupCriterionErrorEnum_AdGroupCriterionErrorFromJSON(object.adGroupCriterionError)
        : undefined,
      adGroupCustomizerError: isSet(object.adGroupCustomizerError)
        ? adGroupCustomizerErrorEnum_AdGroupCustomizerErrorFromJSON(object.adGroupCustomizerError)
        : undefined,
      adCustomizerError: isSet(object.adCustomizerError)
        ? adCustomizerErrorEnum_AdCustomizerErrorFromJSON(object.adCustomizerError)
        : undefined,
      adGroupAdError: isSet(object.adGroupAdError)
        ? adGroupAdErrorEnum_AdGroupAdErrorFromJSON(object.adGroupAdError)
        : undefined,
      adSharingError: isSet(object.adSharingError)
        ? adSharingErrorEnum_AdSharingErrorFromJSON(object.adSharingError)
        : undefined,
      adxError: isSet(object.adxError) ? adxErrorEnum_AdxErrorFromJSON(object.adxError) : undefined,
      assetError: isSet(object.assetError) ? assetErrorEnum_AssetErrorFromJSON(object.assetError) : undefined,
      assetGroupAssetError: isSet(object.assetGroupAssetError)
        ? assetGroupAssetErrorEnum_AssetGroupAssetErrorFromJSON(object.assetGroupAssetError)
        : undefined,
      assetGroupListingGroupFilterError: isSet(object.assetGroupListingGroupFilterError)
        ? assetGroupListingGroupFilterErrorEnum_AssetGroupListingGroupFilterErrorFromJSON(
          object.assetGroupListingGroupFilterError,
        )
        : undefined,
      assetGroupError: isSet(object.assetGroupError)
        ? assetGroupErrorEnum_AssetGroupErrorFromJSON(object.assetGroupError)
        : undefined,
      assetSetAssetError: isSet(object.assetSetAssetError)
        ? assetSetAssetErrorEnum_AssetSetAssetErrorFromJSON(object.assetSetAssetError)
        : undefined,
      assetSetLinkError: isSet(object.assetSetLinkError)
        ? assetSetLinkErrorEnum_AssetSetLinkErrorFromJSON(object.assetSetLinkError)
        : undefined,
      assetSetError: isSet(object.assetSetError)
        ? assetSetErrorEnum_AssetSetErrorFromJSON(object.assetSetError)
        : undefined,
      biddingError: isSet(object.biddingError) ? biddingErrorEnum_BiddingErrorFromJSON(object.biddingError) : undefined,
      campaignCriterionError: isSet(object.campaignCriterionError)
        ? campaignCriterionErrorEnum_CampaignCriterionErrorFromJSON(object.campaignCriterionError)
        : undefined,
      campaignConversionGoalError: isSet(object.campaignConversionGoalError)
        ? campaignConversionGoalErrorEnum_CampaignConversionGoalErrorFromJSON(object.campaignConversionGoalError)
        : undefined,
      campaignCustomizerError: isSet(object.campaignCustomizerError)
        ? campaignCustomizerErrorEnum_CampaignCustomizerErrorFromJSON(object.campaignCustomizerError)
        : undefined,
      collectionSizeError: isSet(object.collectionSizeError)
        ? collectionSizeErrorEnum_CollectionSizeErrorFromJSON(object.collectionSizeError)
        : undefined,
      conversionGoalCampaignConfigError: isSet(object.conversionGoalCampaignConfigError)
        ? conversionGoalCampaignConfigErrorEnum_ConversionGoalCampaignConfigErrorFromJSON(
          object.conversionGoalCampaignConfigError,
        )
        : undefined,
      countryCodeError: isSet(object.countryCodeError)
        ? countryCodeErrorEnum_CountryCodeErrorFromJSON(object.countryCodeError)
        : undefined,
      criterionError: isSet(object.criterionError)
        ? criterionErrorEnum_CriterionErrorFromJSON(object.criterionError)
        : undefined,
      customConversionGoalError: isSet(object.customConversionGoalError)
        ? customConversionGoalErrorEnum_CustomConversionGoalErrorFromJSON(object.customConversionGoalError)
        : undefined,
      customerCustomizerError: isSet(object.customerCustomizerError)
        ? customerCustomizerErrorEnum_CustomerCustomizerErrorFromJSON(object.customerCustomizerError)
        : undefined,
      customerError: isSet(object.customerError)
        ? customerErrorEnum_CustomerErrorFromJSON(object.customerError)
        : undefined,
      customizerAttributeError: isSet(object.customizerAttributeError)
        ? customizerAttributeErrorEnum_CustomizerAttributeErrorFromJSON(object.customizerAttributeError)
        : undefined,
      dateError: isSet(object.dateError) ? dateErrorEnum_DateErrorFromJSON(object.dateError) : undefined,
      dateRangeError: isSet(object.dateRangeError)
        ? dateRangeErrorEnum_DateRangeErrorFromJSON(object.dateRangeError)
        : undefined,
      distinctError: isSet(object.distinctError)
        ? distinctErrorEnum_DistinctErrorFromJSON(object.distinctError)
        : undefined,
      feedAttributeReferenceError: isSet(object.feedAttributeReferenceError)
        ? feedAttributeReferenceErrorEnum_FeedAttributeReferenceErrorFromJSON(object.feedAttributeReferenceError)
        : undefined,
      functionError: isSet(object.functionError)
        ? functionErrorEnum_FunctionErrorFromJSON(object.functionError)
        : undefined,
      functionParsingError: isSet(object.functionParsingError)
        ? functionParsingErrorEnum_FunctionParsingErrorFromJSON(object.functionParsingError)
        : undefined,
      idError: isSet(object.idError) ? idErrorEnum_IdErrorFromJSON(object.idError) : undefined,
      imageError: isSet(object.imageError) ? imageErrorEnum_ImageErrorFromJSON(object.imageError) : undefined,
      languageCodeError: isSet(object.languageCodeError)
        ? languageCodeErrorEnum_LanguageCodeErrorFromJSON(object.languageCodeError)
        : undefined,
      mediaBundleError: isSet(object.mediaBundleError)
        ? mediaBundleErrorEnum_MediaBundleErrorFromJSON(object.mediaBundleError)
        : undefined,
      mediaUploadError: isSet(object.mediaUploadError)
        ? mediaUploadErrorEnum_MediaUploadErrorFromJSON(object.mediaUploadError)
        : undefined,
      mediaFileError: isSet(object.mediaFileError)
        ? mediaFileErrorEnum_MediaFileErrorFromJSON(object.mediaFileError)
        : undefined,
      merchantCenterError: isSet(object.merchantCenterError)
        ? merchantCenterErrorEnum_MerchantCenterErrorFromJSON(object.merchantCenterError)
        : undefined,
      multiplierError: isSet(object.multiplierError)
        ? multiplierErrorEnum_MultiplierErrorFromJSON(object.multiplierError)
        : undefined,
      newResourceCreationError: isSet(object.newResourceCreationError)
        ? newResourceCreationErrorEnum_NewResourceCreationErrorFromJSON(object.newResourceCreationError)
        : undefined,
      notEmptyError: isSet(object.notEmptyError)
        ? notEmptyErrorEnum_NotEmptyErrorFromJSON(object.notEmptyError)
        : undefined,
      nullError: isSet(object.nullError) ? nullErrorEnum_NullErrorFromJSON(object.nullError) : undefined,
      operatorError: isSet(object.operatorError)
        ? operatorErrorEnum_OperatorErrorFromJSON(object.operatorError)
        : undefined,
      rangeError: isSet(object.rangeError) ? rangeErrorEnum_RangeErrorFromJSON(object.rangeError) : undefined,
      recommendationError: isSet(object.recommendationError)
        ? recommendationErrorEnum_RecommendationErrorFromJSON(object.recommendationError)
        : undefined,
      recommendationSubscriptionError: isSet(object.recommendationSubscriptionError)
        ? recommendationSubscriptionErrorEnum_RecommendationSubscriptionErrorFromJSON(
          object.recommendationSubscriptionError,
        )
        : undefined,
      regionCodeError: isSet(object.regionCodeError)
        ? regionCodeErrorEnum_RegionCodeErrorFromJSON(object.regionCodeError)
        : undefined,
      settingError: isSet(object.settingError) ? settingErrorEnum_SettingErrorFromJSON(object.settingError) : undefined,
      stringFormatError: isSet(object.stringFormatError)
        ? stringFormatErrorEnum_StringFormatErrorFromJSON(object.stringFormatError)
        : undefined,
      stringLengthError: isSet(object.stringLengthError)
        ? stringLengthErrorEnum_StringLengthErrorFromJSON(object.stringLengthError)
        : undefined,
      operationAccessDeniedError: isSet(object.operationAccessDeniedError)
        ? operationAccessDeniedErrorEnum_OperationAccessDeniedErrorFromJSON(object.operationAccessDeniedError)
        : undefined,
      resourceAccessDeniedError: isSet(object.resourceAccessDeniedError)
        ? resourceAccessDeniedErrorEnum_ResourceAccessDeniedErrorFromJSON(object.resourceAccessDeniedError)
        : undefined,
      resourceCountLimitExceededError: isSet(object.resourceCountLimitExceededError)
        ? resourceCountLimitExceededErrorEnum_ResourceCountLimitExceededErrorFromJSON(
          object.resourceCountLimitExceededError,
        )
        : undefined,
      youtubeVideoRegistrationError: isSet(object.youtubeVideoRegistrationError)
        ? youtubeVideoRegistrationErrorEnum_YoutubeVideoRegistrationErrorFromJSON(object.youtubeVideoRegistrationError)
        : undefined,
      adGroupBidModifierError: isSet(object.adGroupBidModifierError)
        ? adGroupBidModifierErrorEnum_AdGroupBidModifierErrorFromJSON(object.adGroupBidModifierError)
        : undefined,
      contextError: isSet(object.contextError) ? contextErrorEnum_ContextErrorFromJSON(object.contextError) : undefined,
      fieldError: isSet(object.fieldError) ? fieldErrorEnum_FieldErrorFromJSON(object.fieldError) : undefined,
      sharedSetError: isSet(object.sharedSetError)
        ? sharedSetErrorEnum_SharedSetErrorFromJSON(object.sharedSetError)
        : undefined,
      sharedCriterionError: isSet(object.sharedCriterionError)
        ? sharedCriterionErrorEnum_SharedCriterionErrorFromJSON(object.sharedCriterionError)
        : undefined,
      campaignSharedSetError: isSet(object.campaignSharedSetError)
        ? campaignSharedSetErrorEnum_CampaignSharedSetErrorFromJSON(object.campaignSharedSetError)
        : undefined,
      conversionActionError: isSet(object.conversionActionError)
        ? conversionActionErrorEnum_ConversionActionErrorFromJSON(object.conversionActionError)
        : undefined,
      conversionAdjustmentUploadError: isSet(object.conversionAdjustmentUploadError)
        ? conversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadErrorFromJSON(
          object.conversionAdjustmentUploadError,
        )
        : undefined,
      conversionCustomVariableError: isSet(object.conversionCustomVariableError)
        ? conversionCustomVariableErrorEnum_ConversionCustomVariableErrorFromJSON(object.conversionCustomVariableError)
        : undefined,
      conversionUploadError: isSet(object.conversionUploadError)
        ? conversionUploadErrorEnum_ConversionUploadErrorFromJSON(object.conversionUploadError)
        : undefined,
      conversionValueRuleError: isSet(object.conversionValueRuleError)
        ? conversionValueRuleErrorEnum_ConversionValueRuleErrorFromJSON(object.conversionValueRuleError)
        : undefined,
      conversionValueRuleSetError: isSet(object.conversionValueRuleSetError)
        ? conversionValueRuleSetErrorEnum_ConversionValueRuleSetErrorFromJSON(object.conversionValueRuleSetError)
        : undefined,
      headerError: isSet(object.headerError) ? headerErrorEnum_HeaderErrorFromJSON(object.headerError) : undefined,
      databaseError: isSet(object.databaseError)
        ? databaseErrorEnum_DatabaseErrorFromJSON(object.databaseError)
        : undefined,
      policyFindingError: isSet(object.policyFindingError)
        ? policyFindingErrorEnum_PolicyFindingErrorFromJSON(object.policyFindingError)
        : undefined,
      enumError: isSet(object.enumError) ? enumErrorEnum_EnumErrorFromJSON(object.enumError) : undefined,
      keywordPlanError: isSet(object.keywordPlanError)
        ? keywordPlanErrorEnum_KeywordPlanErrorFromJSON(object.keywordPlanError)
        : undefined,
      keywordPlanCampaignError: isSet(object.keywordPlanCampaignError)
        ? keywordPlanCampaignErrorEnum_KeywordPlanCampaignErrorFromJSON(object.keywordPlanCampaignError)
        : undefined,
      keywordPlanCampaignKeywordError: isSet(object.keywordPlanCampaignKeywordError)
        ? keywordPlanCampaignKeywordErrorEnum_KeywordPlanCampaignKeywordErrorFromJSON(
          object.keywordPlanCampaignKeywordError,
        )
        : undefined,
      keywordPlanAdGroupError: isSet(object.keywordPlanAdGroupError)
        ? keywordPlanAdGroupErrorEnum_KeywordPlanAdGroupErrorFromJSON(object.keywordPlanAdGroupError)
        : undefined,
      keywordPlanAdGroupKeywordError: isSet(object.keywordPlanAdGroupKeywordError)
        ? keywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordErrorFromJSON(
          object.keywordPlanAdGroupKeywordError,
        )
        : undefined,
      keywordPlanIdeaError: isSet(object.keywordPlanIdeaError)
        ? keywordPlanIdeaErrorEnum_KeywordPlanIdeaErrorFromJSON(object.keywordPlanIdeaError)
        : undefined,
      accountBudgetProposalError: isSet(object.accountBudgetProposalError)
        ? accountBudgetProposalErrorEnum_AccountBudgetProposalErrorFromJSON(object.accountBudgetProposalError)
        : undefined,
      userListError: isSet(object.userListError)
        ? userListErrorEnum_UserListErrorFromJSON(object.userListError)
        : undefined,
      changeEventError: isSet(object.changeEventError)
        ? changeEventErrorEnum_ChangeEventErrorFromJSON(object.changeEventError)
        : undefined,
      changeStatusError: isSet(object.changeStatusError)
        ? changeStatusErrorEnum_ChangeStatusErrorFromJSON(object.changeStatusError)
        : undefined,
      feedError: isSet(object.feedError) ? feedErrorEnum_FeedErrorFromJSON(object.feedError) : undefined,
      geoTargetConstantSuggestionError: isSet(object.geoTargetConstantSuggestionError)
        ? geoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionErrorFromJSON(
          object.geoTargetConstantSuggestionError,
        )
        : undefined,
      campaignDraftError: isSet(object.campaignDraftError)
        ? campaignDraftErrorEnum_CampaignDraftErrorFromJSON(object.campaignDraftError)
        : undefined,
      feedItemError: isSet(object.feedItemError)
        ? feedItemErrorEnum_FeedItemErrorFromJSON(object.feedItemError)
        : undefined,
      labelError: isSet(object.labelError) ? labelErrorEnum_LabelErrorFromJSON(object.labelError) : undefined,
      billingSetupError: isSet(object.billingSetupError)
        ? billingSetupErrorEnum_BillingSetupErrorFromJSON(object.billingSetupError)
        : undefined,
      customerClientLinkError: isSet(object.customerClientLinkError)
        ? customerClientLinkErrorEnum_CustomerClientLinkErrorFromJSON(object.customerClientLinkError)
        : undefined,
      customerManagerLinkError: isSet(object.customerManagerLinkError)
        ? customerManagerLinkErrorEnum_CustomerManagerLinkErrorFromJSON(object.customerManagerLinkError)
        : undefined,
      feedMappingError: isSet(object.feedMappingError)
        ? feedMappingErrorEnum_FeedMappingErrorFromJSON(object.feedMappingError)
        : undefined,
      customerFeedError: isSet(object.customerFeedError)
        ? customerFeedErrorEnum_CustomerFeedErrorFromJSON(object.customerFeedError)
        : undefined,
      adGroupFeedError: isSet(object.adGroupFeedError)
        ? adGroupFeedErrorEnum_AdGroupFeedErrorFromJSON(object.adGroupFeedError)
        : undefined,
      campaignFeedError: isSet(object.campaignFeedError)
        ? campaignFeedErrorEnum_CampaignFeedErrorFromJSON(object.campaignFeedError)
        : undefined,
      customInterestError: isSet(object.customInterestError)
        ? customInterestErrorEnum_CustomInterestErrorFromJSON(object.customInterestError)
        : undefined,
      campaignExperimentError: isSet(object.campaignExperimentError)
        ? campaignExperimentErrorEnum_CampaignExperimentErrorFromJSON(object.campaignExperimentError)
        : undefined,
      extensionFeedItemError: isSet(object.extensionFeedItemError)
        ? extensionFeedItemErrorEnum_ExtensionFeedItemErrorFromJSON(object.extensionFeedItemError)
        : undefined,
      adParameterError: isSet(object.adParameterError)
        ? adParameterErrorEnum_AdParameterErrorFromJSON(object.adParameterError)
        : undefined,
      feedItemValidationError: isSet(object.feedItemValidationError)
        ? feedItemValidationErrorEnum_FeedItemValidationErrorFromJSON(object.feedItemValidationError)
        : undefined,
      extensionSettingError: isSet(object.extensionSettingError)
        ? extensionSettingErrorEnum_ExtensionSettingErrorFromJSON(object.extensionSettingError)
        : undefined,
      feedItemSetError: isSet(object.feedItemSetError)
        ? feedItemSetErrorEnum_FeedItemSetErrorFromJSON(object.feedItemSetError)
        : undefined,
      feedItemSetLinkError: isSet(object.feedItemSetLinkError)
        ? feedItemSetLinkErrorEnum_FeedItemSetLinkErrorFromJSON(object.feedItemSetLinkError)
        : undefined,
      feedItemTargetError: isSet(object.feedItemTargetError)
        ? feedItemTargetErrorEnum_FeedItemTargetErrorFromJSON(object.feedItemTargetError)
        : undefined,
      policyViolationError: isSet(object.policyViolationError)
        ? policyViolationErrorEnum_PolicyViolationErrorFromJSON(object.policyViolationError)
        : undefined,
      partialFailureError: isSet(object.partialFailureError)
        ? partialFailureErrorEnum_PartialFailureErrorFromJSON(object.partialFailureError)
        : undefined,
      policyValidationParameterError: isSet(object.policyValidationParameterError)
        ? policyValidationParameterErrorEnum_PolicyValidationParameterErrorFromJSON(
          object.policyValidationParameterError,
        )
        : undefined,
      sizeLimitError: isSet(object.sizeLimitError)
        ? sizeLimitErrorEnum_SizeLimitErrorFromJSON(object.sizeLimitError)
        : undefined,
      offlineUserDataJobError: isSet(object.offlineUserDataJobError)
        ? offlineUserDataJobErrorEnum_OfflineUserDataJobErrorFromJSON(object.offlineUserDataJobError)
        : undefined,
      notAllowlistedError: isSet(object.notAllowlistedError)
        ? notAllowlistedErrorEnum_NotAllowlistedErrorFromJSON(object.notAllowlistedError)
        : undefined,
      managerLinkError: isSet(object.managerLinkError)
        ? managerLinkErrorEnum_ManagerLinkErrorFromJSON(object.managerLinkError)
        : undefined,
      currencyCodeError: isSet(object.currencyCodeError)
        ? currencyCodeErrorEnum_CurrencyCodeErrorFromJSON(object.currencyCodeError)
        : undefined,
      experimentError: isSet(object.experimentError)
        ? experimentErrorEnum_ExperimentErrorFromJSON(object.experimentError)
        : undefined,
      accessInvitationError: isSet(object.accessInvitationError)
        ? accessInvitationErrorEnum_AccessInvitationErrorFromJSON(object.accessInvitationError)
        : undefined,
      reachPlanError: isSet(object.reachPlanError)
        ? reachPlanErrorEnum_ReachPlanErrorFromJSON(object.reachPlanError)
        : undefined,
      invoiceError: isSet(object.invoiceError) ? invoiceErrorEnum_InvoiceErrorFromJSON(object.invoiceError) : undefined,
      paymentsAccountError: isSet(object.paymentsAccountError)
        ? paymentsAccountErrorEnum_PaymentsAccountErrorFromJSON(object.paymentsAccountError)
        : undefined,
      timeZoneError: isSet(object.timeZoneError)
        ? timeZoneErrorEnum_TimeZoneErrorFromJSON(object.timeZoneError)
        : undefined,
      assetLinkError: isSet(object.assetLinkError)
        ? assetLinkErrorEnum_AssetLinkErrorFromJSON(object.assetLinkError)
        : undefined,
      userDataError: isSet(object.userDataError)
        ? userDataErrorEnum_UserDataErrorFromJSON(object.userDataError)
        : undefined,
      batchJobError: isSet(object.batchJobError)
        ? batchJobErrorEnum_BatchJobErrorFromJSON(object.batchJobError)
        : undefined,
      accountLinkError: isSet(object.accountLinkError)
        ? accountLinkErrorEnum_AccountLinkErrorFromJSON(object.accountLinkError)
        : undefined,
      thirdPartyAppAnalyticsLinkError: isSet(object.thirdPartyAppAnalyticsLinkError)
        ? thirdPartyAppAnalyticsLinkErrorEnum_ThirdPartyAppAnalyticsLinkErrorFromJSON(
          object.thirdPartyAppAnalyticsLinkError,
        )
        : undefined,
      customerUserAccessError: isSet(object.customerUserAccessError)
        ? customerUserAccessErrorEnum_CustomerUserAccessErrorFromJSON(object.customerUserAccessError)
        : undefined,
      customAudienceError: isSet(object.customAudienceError)
        ? customAudienceErrorEnum_CustomAudienceErrorFromJSON(object.customAudienceError)
        : undefined,
      audienceError: isSet(object.audienceError)
        ? audienceErrorEnum_AudienceErrorFromJSON(object.audienceError)
        : undefined,
      searchTermInsightError: isSet(object.searchTermInsightError)
        ? searchTermInsightErrorEnum_SearchTermInsightErrorFromJSON(object.searchTermInsightError)
        : undefined,
      smartCampaignError: isSet(object.smartCampaignError)
        ? smartCampaignErrorEnum_SmartCampaignErrorFromJSON(object.smartCampaignError)
        : undefined,
      experimentArmError: isSet(object.experimentArmError)
        ? experimentArmErrorEnum_ExperimentArmErrorFromJSON(object.experimentArmError)
        : undefined,
      audienceInsightsError: isSet(object.audienceInsightsError)
        ? audienceInsightsErrorEnum_AudienceInsightsErrorFromJSON(object.audienceInsightsError)
        : undefined,
      productLinkError: isSet(object.productLinkError)
        ? productLinkErrorEnum_ProductLinkErrorFromJSON(object.productLinkError)
        : undefined,
      customerSkAdNetworkConversionValueSchemaError: isSet(object.customerSkAdNetworkConversionValueSchemaError)
        ? customerSkAdNetworkConversionValueSchemaErrorEnum_CustomerSkAdNetworkConversionValueSchemaErrorFromJSON(
          object.customerSkAdNetworkConversionValueSchemaError,
        )
        : undefined,
      currencyError: isSet(object.currencyError)
        ? currencyErrorEnum_CurrencyErrorFromJSON(object.currencyError)
        : undefined,
      assetGroupSignalError: isSet(object.assetGroupSignalError)
        ? assetGroupSignalErrorEnum_AssetGroupSignalErrorFromJSON(object.assetGroupSignalError)
        : undefined,
      productLinkInvitationError: isSet(object.productLinkInvitationError)
        ? productLinkInvitationErrorEnum_ProductLinkInvitationErrorFromJSON(object.productLinkInvitationError)
        : undefined,
      customerLifecycleGoalError: isSet(object.customerLifecycleGoalError)
        ? customerLifecycleGoalErrorEnum_CustomerLifecycleGoalErrorFromJSON(object.customerLifecycleGoalError)
        : undefined,
      campaignLifecycleGoalError: isSet(object.campaignLifecycleGoalError)
        ? campaignLifecycleGoalErrorEnum_CampaignLifecycleGoalErrorFromJSON(object.campaignLifecycleGoalError)
        : undefined,
      identityVerificationError: isSet(object.identityVerificationError)
        ? identityVerificationErrorEnum_IdentityVerificationErrorFromJSON(object.identityVerificationError)
        : undefined,
    };
  },

  toJSON(message: ErrorCode): unknown {
    const obj: any = {};
    if (message.requestError !== undefined) {
      obj.requestError = requestErrorEnum_RequestErrorToJSON(message.requestError);
    }
    if (message.biddingStrategyError !== undefined) {
      obj.biddingStrategyError = biddingStrategyErrorEnum_BiddingStrategyErrorToJSON(message.biddingStrategyError);
    }
    if (message.urlFieldError !== undefined) {
      obj.urlFieldError = urlFieldErrorEnum_UrlFieldErrorToJSON(message.urlFieldError);
    }
    if (message.listOperationError !== undefined) {
      obj.listOperationError = listOperationErrorEnum_ListOperationErrorToJSON(message.listOperationError);
    }
    if (message.queryError !== undefined) {
      obj.queryError = queryErrorEnum_QueryErrorToJSON(message.queryError);
    }
    if (message.mutateError !== undefined) {
      obj.mutateError = mutateErrorEnum_MutateErrorToJSON(message.mutateError);
    }
    if (message.fieldMaskError !== undefined) {
      obj.fieldMaskError = fieldMaskErrorEnum_FieldMaskErrorToJSON(message.fieldMaskError);
    }
    if (message.authorizationError !== undefined) {
      obj.authorizationError = authorizationErrorEnum_AuthorizationErrorToJSON(message.authorizationError);
    }
    if (message.internalError !== undefined) {
      obj.internalError = internalErrorEnum_InternalErrorToJSON(message.internalError);
    }
    if (message.quotaError !== undefined) {
      obj.quotaError = quotaErrorEnum_QuotaErrorToJSON(message.quotaError);
    }
    if (message.adError !== undefined) {
      obj.adError = adErrorEnum_AdErrorToJSON(message.adError);
    }
    if (message.adGroupError !== undefined) {
      obj.adGroupError = adGroupErrorEnum_AdGroupErrorToJSON(message.adGroupError);
    }
    if (message.campaignBudgetError !== undefined) {
      obj.campaignBudgetError = campaignBudgetErrorEnum_CampaignBudgetErrorToJSON(message.campaignBudgetError);
    }
    if (message.campaignError !== undefined) {
      obj.campaignError = campaignErrorEnum_CampaignErrorToJSON(message.campaignError);
    }
    if (message.videoCampaignError !== undefined) {
      obj.videoCampaignError = videoCampaignErrorEnum_VideoCampaignErrorToJSON(message.videoCampaignError);
    }
    if (message.authenticationError !== undefined) {
      obj.authenticationError = authenticationErrorEnum_AuthenticationErrorToJSON(message.authenticationError);
    }
    if (message.adGroupCriterionCustomizerError !== undefined) {
      obj.adGroupCriterionCustomizerError = adGroupCriterionCustomizerErrorEnum_AdGroupCriterionCustomizerErrorToJSON(
        message.adGroupCriterionCustomizerError,
      );
    }
    if (message.adGroupCriterionError !== undefined) {
      obj.adGroupCriterionError = adGroupCriterionErrorEnum_AdGroupCriterionErrorToJSON(message.adGroupCriterionError);
    }
    if (message.adGroupCustomizerError !== undefined) {
      obj.adGroupCustomizerError = adGroupCustomizerErrorEnum_AdGroupCustomizerErrorToJSON(
        message.adGroupCustomizerError,
      );
    }
    if (message.adCustomizerError !== undefined) {
      obj.adCustomizerError = adCustomizerErrorEnum_AdCustomizerErrorToJSON(message.adCustomizerError);
    }
    if (message.adGroupAdError !== undefined) {
      obj.adGroupAdError = adGroupAdErrorEnum_AdGroupAdErrorToJSON(message.adGroupAdError);
    }
    if (message.adSharingError !== undefined) {
      obj.adSharingError = adSharingErrorEnum_AdSharingErrorToJSON(message.adSharingError);
    }
    if (message.adxError !== undefined) {
      obj.adxError = adxErrorEnum_AdxErrorToJSON(message.adxError);
    }
    if (message.assetError !== undefined) {
      obj.assetError = assetErrorEnum_AssetErrorToJSON(message.assetError);
    }
    if (message.assetGroupAssetError !== undefined) {
      obj.assetGroupAssetError = assetGroupAssetErrorEnum_AssetGroupAssetErrorToJSON(message.assetGroupAssetError);
    }
    if (message.assetGroupListingGroupFilterError !== undefined) {
      obj.assetGroupListingGroupFilterError =
        assetGroupListingGroupFilterErrorEnum_AssetGroupListingGroupFilterErrorToJSON(
          message.assetGroupListingGroupFilterError,
        );
    }
    if (message.assetGroupError !== undefined) {
      obj.assetGroupError = assetGroupErrorEnum_AssetGroupErrorToJSON(message.assetGroupError);
    }
    if (message.assetSetAssetError !== undefined) {
      obj.assetSetAssetError = assetSetAssetErrorEnum_AssetSetAssetErrorToJSON(message.assetSetAssetError);
    }
    if (message.assetSetLinkError !== undefined) {
      obj.assetSetLinkError = assetSetLinkErrorEnum_AssetSetLinkErrorToJSON(message.assetSetLinkError);
    }
    if (message.assetSetError !== undefined) {
      obj.assetSetError = assetSetErrorEnum_AssetSetErrorToJSON(message.assetSetError);
    }
    if (message.biddingError !== undefined) {
      obj.biddingError = biddingErrorEnum_BiddingErrorToJSON(message.biddingError);
    }
    if (message.campaignCriterionError !== undefined) {
      obj.campaignCriterionError = campaignCriterionErrorEnum_CampaignCriterionErrorToJSON(
        message.campaignCriterionError,
      );
    }
    if (message.campaignConversionGoalError !== undefined) {
      obj.campaignConversionGoalError = campaignConversionGoalErrorEnum_CampaignConversionGoalErrorToJSON(
        message.campaignConversionGoalError,
      );
    }
    if (message.campaignCustomizerError !== undefined) {
      obj.campaignCustomizerError = campaignCustomizerErrorEnum_CampaignCustomizerErrorToJSON(
        message.campaignCustomizerError,
      );
    }
    if (message.collectionSizeError !== undefined) {
      obj.collectionSizeError = collectionSizeErrorEnum_CollectionSizeErrorToJSON(message.collectionSizeError);
    }
    if (message.conversionGoalCampaignConfigError !== undefined) {
      obj.conversionGoalCampaignConfigError =
        conversionGoalCampaignConfigErrorEnum_ConversionGoalCampaignConfigErrorToJSON(
          message.conversionGoalCampaignConfigError,
        );
    }
    if (message.countryCodeError !== undefined) {
      obj.countryCodeError = countryCodeErrorEnum_CountryCodeErrorToJSON(message.countryCodeError);
    }
    if (message.criterionError !== undefined) {
      obj.criterionError = criterionErrorEnum_CriterionErrorToJSON(message.criterionError);
    }
    if (message.customConversionGoalError !== undefined) {
      obj.customConversionGoalError = customConversionGoalErrorEnum_CustomConversionGoalErrorToJSON(
        message.customConversionGoalError,
      );
    }
    if (message.customerCustomizerError !== undefined) {
      obj.customerCustomizerError = customerCustomizerErrorEnum_CustomerCustomizerErrorToJSON(
        message.customerCustomizerError,
      );
    }
    if (message.customerError !== undefined) {
      obj.customerError = customerErrorEnum_CustomerErrorToJSON(message.customerError);
    }
    if (message.customizerAttributeError !== undefined) {
      obj.customizerAttributeError = customizerAttributeErrorEnum_CustomizerAttributeErrorToJSON(
        message.customizerAttributeError,
      );
    }
    if (message.dateError !== undefined) {
      obj.dateError = dateErrorEnum_DateErrorToJSON(message.dateError);
    }
    if (message.dateRangeError !== undefined) {
      obj.dateRangeError = dateRangeErrorEnum_DateRangeErrorToJSON(message.dateRangeError);
    }
    if (message.distinctError !== undefined) {
      obj.distinctError = distinctErrorEnum_DistinctErrorToJSON(message.distinctError);
    }
    if (message.feedAttributeReferenceError !== undefined) {
      obj.feedAttributeReferenceError = feedAttributeReferenceErrorEnum_FeedAttributeReferenceErrorToJSON(
        message.feedAttributeReferenceError,
      );
    }
    if (message.functionError !== undefined) {
      obj.functionError = functionErrorEnum_FunctionErrorToJSON(message.functionError);
    }
    if (message.functionParsingError !== undefined) {
      obj.functionParsingError = functionParsingErrorEnum_FunctionParsingErrorToJSON(message.functionParsingError);
    }
    if (message.idError !== undefined) {
      obj.idError = idErrorEnum_IdErrorToJSON(message.idError);
    }
    if (message.imageError !== undefined) {
      obj.imageError = imageErrorEnum_ImageErrorToJSON(message.imageError);
    }
    if (message.languageCodeError !== undefined) {
      obj.languageCodeError = languageCodeErrorEnum_LanguageCodeErrorToJSON(message.languageCodeError);
    }
    if (message.mediaBundleError !== undefined) {
      obj.mediaBundleError = mediaBundleErrorEnum_MediaBundleErrorToJSON(message.mediaBundleError);
    }
    if (message.mediaUploadError !== undefined) {
      obj.mediaUploadError = mediaUploadErrorEnum_MediaUploadErrorToJSON(message.mediaUploadError);
    }
    if (message.mediaFileError !== undefined) {
      obj.mediaFileError = mediaFileErrorEnum_MediaFileErrorToJSON(message.mediaFileError);
    }
    if (message.merchantCenterError !== undefined) {
      obj.merchantCenterError = merchantCenterErrorEnum_MerchantCenterErrorToJSON(message.merchantCenterError);
    }
    if (message.multiplierError !== undefined) {
      obj.multiplierError = multiplierErrorEnum_MultiplierErrorToJSON(message.multiplierError);
    }
    if (message.newResourceCreationError !== undefined) {
      obj.newResourceCreationError = newResourceCreationErrorEnum_NewResourceCreationErrorToJSON(
        message.newResourceCreationError,
      );
    }
    if (message.notEmptyError !== undefined) {
      obj.notEmptyError = notEmptyErrorEnum_NotEmptyErrorToJSON(message.notEmptyError);
    }
    if (message.nullError !== undefined) {
      obj.nullError = nullErrorEnum_NullErrorToJSON(message.nullError);
    }
    if (message.operatorError !== undefined) {
      obj.operatorError = operatorErrorEnum_OperatorErrorToJSON(message.operatorError);
    }
    if (message.rangeError !== undefined) {
      obj.rangeError = rangeErrorEnum_RangeErrorToJSON(message.rangeError);
    }
    if (message.recommendationError !== undefined) {
      obj.recommendationError = recommendationErrorEnum_RecommendationErrorToJSON(message.recommendationError);
    }
    if (message.recommendationSubscriptionError !== undefined) {
      obj.recommendationSubscriptionError = recommendationSubscriptionErrorEnum_RecommendationSubscriptionErrorToJSON(
        message.recommendationSubscriptionError,
      );
    }
    if (message.regionCodeError !== undefined) {
      obj.regionCodeError = regionCodeErrorEnum_RegionCodeErrorToJSON(message.regionCodeError);
    }
    if (message.settingError !== undefined) {
      obj.settingError = settingErrorEnum_SettingErrorToJSON(message.settingError);
    }
    if (message.stringFormatError !== undefined) {
      obj.stringFormatError = stringFormatErrorEnum_StringFormatErrorToJSON(message.stringFormatError);
    }
    if (message.stringLengthError !== undefined) {
      obj.stringLengthError = stringLengthErrorEnum_StringLengthErrorToJSON(message.stringLengthError);
    }
    if (message.operationAccessDeniedError !== undefined) {
      obj.operationAccessDeniedError = operationAccessDeniedErrorEnum_OperationAccessDeniedErrorToJSON(
        message.operationAccessDeniedError,
      );
    }
    if (message.resourceAccessDeniedError !== undefined) {
      obj.resourceAccessDeniedError = resourceAccessDeniedErrorEnum_ResourceAccessDeniedErrorToJSON(
        message.resourceAccessDeniedError,
      );
    }
    if (message.resourceCountLimitExceededError !== undefined) {
      obj.resourceCountLimitExceededError = resourceCountLimitExceededErrorEnum_ResourceCountLimitExceededErrorToJSON(
        message.resourceCountLimitExceededError,
      );
    }
    if (message.youtubeVideoRegistrationError !== undefined) {
      obj.youtubeVideoRegistrationError = youtubeVideoRegistrationErrorEnum_YoutubeVideoRegistrationErrorToJSON(
        message.youtubeVideoRegistrationError,
      );
    }
    if (message.adGroupBidModifierError !== undefined) {
      obj.adGroupBidModifierError = adGroupBidModifierErrorEnum_AdGroupBidModifierErrorToJSON(
        message.adGroupBidModifierError,
      );
    }
    if (message.contextError !== undefined) {
      obj.contextError = contextErrorEnum_ContextErrorToJSON(message.contextError);
    }
    if (message.fieldError !== undefined) {
      obj.fieldError = fieldErrorEnum_FieldErrorToJSON(message.fieldError);
    }
    if (message.sharedSetError !== undefined) {
      obj.sharedSetError = sharedSetErrorEnum_SharedSetErrorToJSON(message.sharedSetError);
    }
    if (message.sharedCriterionError !== undefined) {
      obj.sharedCriterionError = sharedCriterionErrorEnum_SharedCriterionErrorToJSON(message.sharedCriterionError);
    }
    if (message.campaignSharedSetError !== undefined) {
      obj.campaignSharedSetError = campaignSharedSetErrorEnum_CampaignSharedSetErrorToJSON(
        message.campaignSharedSetError,
      );
    }
    if (message.conversionActionError !== undefined) {
      obj.conversionActionError = conversionActionErrorEnum_ConversionActionErrorToJSON(message.conversionActionError);
    }
    if (message.conversionAdjustmentUploadError !== undefined) {
      obj.conversionAdjustmentUploadError = conversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadErrorToJSON(
        message.conversionAdjustmentUploadError,
      );
    }
    if (message.conversionCustomVariableError !== undefined) {
      obj.conversionCustomVariableError = conversionCustomVariableErrorEnum_ConversionCustomVariableErrorToJSON(
        message.conversionCustomVariableError,
      );
    }
    if (message.conversionUploadError !== undefined) {
      obj.conversionUploadError = conversionUploadErrorEnum_ConversionUploadErrorToJSON(message.conversionUploadError);
    }
    if (message.conversionValueRuleError !== undefined) {
      obj.conversionValueRuleError = conversionValueRuleErrorEnum_ConversionValueRuleErrorToJSON(
        message.conversionValueRuleError,
      );
    }
    if (message.conversionValueRuleSetError !== undefined) {
      obj.conversionValueRuleSetError = conversionValueRuleSetErrorEnum_ConversionValueRuleSetErrorToJSON(
        message.conversionValueRuleSetError,
      );
    }
    if (message.headerError !== undefined) {
      obj.headerError = headerErrorEnum_HeaderErrorToJSON(message.headerError);
    }
    if (message.databaseError !== undefined) {
      obj.databaseError = databaseErrorEnum_DatabaseErrorToJSON(message.databaseError);
    }
    if (message.policyFindingError !== undefined) {
      obj.policyFindingError = policyFindingErrorEnum_PolicyFindingErrorToJSON(message.policyFindingError);
    }
    if (message.enumError !== undefined) {
      obj.enumError = enumErrorEnum_EnumErrorToJSON(message.enumError);
    }
    if (message.keywordPlanError !== undefined) {
      obj.keywordPlanError = keywordPlanErrorEnum_KeywordPlanErrorToJSON(message.keywordPlanError);
    }
    if (message.keywordPlanCampaignError !== undefined) {
      obj.keywordPlanCampaignError = keywordPlanCampaignErrorEnum_KeywordPlanCampaignErrorToJSON(
        message.keywordPlanCampaignError,
      );
    }
    if (message.keywordPlanCampaignKeywordError !== undefined) {
      obj.keywordPlanCampaignKeywordError = keywordPlanCampaignKeywordErrorEnum_KeywordPlanCampaignKeywordErrorToJSON(
        message.keywordPlanCampaignKeywordError,
      );
    }
    if (message.keywordPlanAdGroupError !== undefined) {
      obj.keywordPlanAdGroupError = keywordPlanAdGroupErrorEnum_KeywordPlanAdGroupErrorToJSON(
        message.keywordPlanAdGroupError,
      );
    }
    if (message.keywordPlanAdGroupKeywordError !== undefined) {
      obj.keywordPlanAdGroupKeywordError = keywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordErrorToJSON(
        message.keywordPlanAdGroupKeywordError,
      );
    }
    if (message.keywordPlanIdeaError !== undefined) {
      obj.keywordPlanIdeaError = keywordPlanIdeaErrorEnum_KeywordPlanIdeaErrorToJSON(message.keywordPlanIdeaError);
    }
    if (message.accountBudgetProposalError !== undefined) {
      obj.accountBudgetProposalError = accountBudgetProposalErrorEnum_AccountBudgetProposalErrorToJSON(
        message.accountBudgetProposalError,
      );
    }
    if (message.userListError !== undefined) {
      obj.userListError = userListErrorEnum_UserListErrorToJSON(message.userListError);
    }
    if (message.changeEventError !== undefined) {
      obj.changeEventError = changeEventErrorEnum_ChangeEventErrorToJSON(message.changeEventError);
    }
    if (message.changeStatusError !== undefined) {
      obj.changeStatusError = changeStatusErrorEnum_ChangeStatusErrorToJSON(message.changeStatusError);
    }
    if (message.feedError !== undefined) {
      obj.feedError = feedErrorEnum_FeedErrorToJSON(message.feedError);
    }
    if (message.geoTargetConstantSuggestionError !== undefined) {
      obj.geoTargetConstantSuggestionError =
        geoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionErrorToJSON(
          message.geoTargetConstantSuggestionError,
        );
    }
    if (message.campaignDraftError !== undefined) {
      obj.campaignDraftError = campaignDraftErrorEnum_CampaignDraftErrorToJSON(message.campaignDraftError);
    }
    if (message.feedItemError !== undefined) {
      obj.feedItemError = feedItemErrorEnum_FeedItemErrorToJSON(message.feedItemError);
    }
    if (message.labelError !== undefined) {
      obj.labelError = labelErrorEnum_LabelErrorToJSON(message.labelError);
    }
    if (message.billingSetupError !== undefined) {
      obj.billingSetupError = billingSetupErrorEnum_BillingSetupErrorToJSON(message.billingSetupError);
    }
    if (message.customerClientLinkError !== undefined) {
      obj.customerClientLinkError = customerClientLinkErrorEnum_CustomerClientLinkErrorToJSON(
        message.customerClientLinkError,
      );
    }
    if (message.customerManagerLinkError !== undefined) {
      obj.customerManagerLinkError = customerManagerLinkErrorEnum_CustomerManagerLinkErrorToJSON(
        message.customerManagerLinkError,
      );
    }
    if (message.feedMappingError !== undefined) {
      obj.feedMappingError = feedMappingErrorEnum_FeedMappingErrorToJSON(message.feedMappingError);
    }
    if (message.customerFeedError !== undefined) {
      obj.customerFeedError = customerFeedErrorEnum_CustomerFeedErrorToJSON(message.customerFeedError);
    }
    if (message.adGroupFeedError !== undefined) {
      obj.adGroupFeedError = adGroupFeedErrorEnum_AdGroupFeedErrorToJSON(message.adGroupFeedError);
    }
    if (message.campaignFeedError !== undefined) {
      obj.campaignFeedError = campaignFeedErrorEnum_CampaignFeedErrorToJSON(message.campaignFeedError);
    }
    if (message.customInterestError !== undefined) {
      obj.customInterestError = customInterestErrorEnum_CustomInterestErrorToJSON(message.customInterestError);
    }
    if (message.campaignExperimentError !== undefined) {
      obj.campaignExperimentError = campaignExperimentErrorEnum_CampaignExperimentErrorToJSON(
        message.campaignExperimentError,
      );
    }
    if (message.extensionFeedItemError !== undefined) {
      obj.extensionFeedItemError = extensionFeedItemErrorEnum_ExtensionFeedItemErrorToJSON(
        message.extensionFeedItemError,
      );
    }
    if (message.adParameterError !== undefined) {
      obj.adParameterError = adParameterErrorEnum_AdParameterErrorToJSON(message.adParameterError);
    }
    if (message.feedItemValidationError !== undefined) {
      obj.feedItemValidationError = feedItemValidationErrorEnum_FeedItemValidationErrorToJSON(
        message.feedItemValidationError,
      );
    }
    if (message.extensionSettingError !== undefined) {
      obj.extensionSettingError = extensionSettingErrorEnum_ExtensionSettingErrorToJSON(message.extensionSettingError);
    }
    if (message.feedItemSetError !== undefined) {
      obj.feedItemSetError = feedItemSetErrorEnum_FeedItemSetErrorToJSON(message.feedItemSetError);
    }
    if (message.feedItemSetLinkError !== undefined) {
      obj.feedItemSetLinkError = feedItemSetLinkErrorEnum_FeedItemSetLinkErrorToJSON(message.feedItemSetLinkError);
    }
    if (message.feedItemTargetError !== undefined) {
      obj.feedItemTargetError = feedItemTargetErrorEnum_FeedItemTargetErrorToJSON(message.feedItemTargetError);
    }
    if (message.policyViolationError !== undefined) {
      obj.policyViolationError = policyViolationErrorEnum_PolicyViolationErrorToJSON(message.policyViolationError);
    }
    if (message.partialFailureError !== undefined) {
      obj.partialFailureError = partialFailureErrorEnum_PartialFailureErrorToJSON(message.partialFailureError);
    }
    if (message.policyValidationParameterError !== undefined) {
      obj.policyValidationParameterError = policyValidationParameterErrorEnum_PolicyValidationParameterErrorToJSON(
        message.policyValidationParameterError,
      );
    }
    if (message.sizeLimitError !== undefined) {
      obj.sizeLimitError = sizeLimitErrorEnum_SizeLimitErrorToJSON(message.sizeLimitError);
    }
    if (message.offlineUserDataJobError !== undefined) {
      obj.offlineUserDataJobError = offlineUserDataJobErrorEnum_OfflineUserDataJobErrorToJSON(
        message.offlineUserDataJobError,
      );
    }
    if (message.notAllowlistedError !== undefined) {
      obj.notAllowlistedError = notAllowlistedErrorEnum_NotAllowlistedErrorToJSON(message.notAllowlistedError);
    }
    if (message.managerLinkError !== undefined) {
      obj.managerLinkError = managerLinkErrorEnum_ManagerLinkErrorToJSON(message.managerLinkError);
    }
    if (message.currencyCodeError !== undefined) {
      obj.currencyCodeError = currencyCodeErrorEnum_CurrencyCodeErrorToJSON(message.currencyCodeError);
    }
    if (message.experimentError !== undefined) {
      obj.experimentError = experimentErrorEnum_ExperimentErrorToJSON(message.experimentError);
    }
    if (message.accessInvitationError !== undefined) {
      obj.accessInvitationError = accessInvitationErrorEnum_AccessInvitationErrorToJSON(message.accessInvitationError);
    }
    if (message.reachPlanError !== undefined) {
      obj.reachPlanError = reachPlanErrorEnum_ReachPlanErrorToJSON(message.reachPlanError);
    }
    if (message.invoiceError !== undefined) {
      obj.invoiceError = invoiceErrorEnum_InvoiceErrorToJSON(message.invoiceError);
    }
    if (message.paymentsAccountError !== undefined) {
      obj.paymentsAccountError = paymentsAccountErrorEnum_PaymentsAccountErrorToJSON(message.paymentsAccountError);
    }
    if (message.timeZoneError !== undefined) {
      obj.timeZoneError = timeZoneErrorEnum_TimeZoneErrorToJSON(message.timeZoneError);
    }
    if (message.assetLinkError !== undefined) {
      obj.assetLinkError = assetLinkErrorEnum_AssetLinkErrorToJSON(message.assetLinkError);
    }
    if (message.userDataError !== undefined) {
      obj.userDataError = userDataErrorEnum_UserDataErrorToJSON(message.userDataError);
    }
    if (message.batchJobError !== undefined) {
      obj.batchJobError = batchJobErrorEnum_BatchJobErrorToJSON(message.batchJobError);
    }
    if (message.accountLinkError !== undefined) {
      obj.accountLinkError = accountLinkErrorEnum_AccountLinkErrorToJSON(message.accountLinkError);
    }
    if (message.thirdPartyAppAnalyticsLinkError !== undefined) {
      obj.thirdPartyAppAnalyticsLinkError = thirdPartyAppAnalyticsLinkErrorEnum_ThirdPartyAppAnalyticsLinkErrorToJSON(
        message.thirdPartyAppAnalyticsLinkError,
      );
    }
    if (message.customerUserAccessError !== undefined) {
      obj.customerUserAccessError = customerUserAccessErrorEnum_CustomerUserAccessErrorToJSON(
        message.customerUserAccessError,
      );
    }
    if (message.customAudienceError !== undefined) {
      obj.customAudienceError = customAudienceErrorEnum_CustomAudienceErrorToJSON(message.customAudienceError);
    }
    if (message.audienceError !== undefined) {
      obj.audienceError = audienceErrorEnum_AudienceErrorToJSON(message.audienceError);
    }
    if (message.searchTermInsightError !== undefined) {
      obj.searchTermInsightError = searchTermInsightErrorEnum_SearchTermInsightErrorToJSON(
        message.searchTermInsightError,
      );
    }
    if (message.smartCampaignError !== undefined) {
      obj.smartCampaignError = smartCampaignErrorEnum_SmartCampaignErrorToJSON(message.smartCampaignError);
    }
    if (message.experimentArmError !== undefined) {
      obj.experimentArmError = experimentArmErrorEnum_ExperimentArmErrorToJSON(message.experimentArmError);
    }
    if (message.audienceInsightsError !== undefined) {
      obj.audienceInsightsError = audienceInsightsErrorEnum_AudienceInsightsErrorToJSON(message.audienceInsightsError);
    }
    if (message.productLinkError !== undefined) {
      obj.productLinkError = productLinkErrorEnum_ProductLinkErrorToJSON(message.productLinkError);
    }
    if (message.customerSkAdNetworkConversionValueSchemaError !== undefined) {
      obj.customerSkAdNetworkConversionValueSchemaError =
        customerSkAdNetworkConversionValueSchemaErrorEnum_CustomerSkAdNetworkConversionValueSchemaErrorToJSON(
          message.customerSkAdNetworkConversionValueSchemaError,
        );
    }
    if (message.currencyError !== undefined) {
      obj.currencyError = currencyErrorEnum_CurrencyErrorToJSON(message.currencyError);
    }
    if (message.assetGroupSignalError !== undefined) {
      obj.assetGroupSignalError = assetGroupSignalErrorEnum_AssetGroupSignalErrorToJSON(message.assetGroupSignalError);
    }
    if (message.productLinkInvitationError !== undefined) {
      obj.productLinkInvitationError = productLinkInvitationErrorEnum_ProductLinkInvitationErrorToJSON(
        message.productLinkInvitationError,
      );
    }
    if (message.customerLifecycleGoalError !== undefined) {
      obj.customerLifecycleGoalError = customerLifecycleGoalErrorEnum_CustomerLifecycleGoalErrorToJSON(
        message.customerLifecycleGoalError,
      );
    }
    if (message.campaignLifecycleGoalError !== undefined) {
      obj.campaignLifecycleGoalError = campaignLifecycleGoalErrorEnum_CampaignLifecycleGoalErrorToJSON(
        message.campaignLifecycleGoalError,
      );
    }
    if (message.identityVerificationError !== undefined) {
      obj.identityVerificationError = identityVerificationErrorEnum_IdentityVerificationErrorToJSON(
        message.identityVerificationError,
      );
    }
    return obj;
  },

  create(base?: DeepPartial<ErrorCode>): ErrorCode {
    return ErrorCode.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ErrorCode>): ErrorCode {
    const message = createBaseErrorCode();
    message.requestError = object.requestError ?? undefined;
    message.biddingStrategyError = object.biddingStrategyError ?? undefined;
    message.urlFieldError = object.urlFieldError ?? undefined;
    message.listOperationError = object.listOperationError ?? undefined;
    message.queryError = object.queryError ?? undefined;
    message.mutateError = object.mutateError ?? undefined;
    message.fieldMaskError = object.fieldMaskError ?? undefined;
    message.authorizationError = object.authorizationError ?? undefined;
    message.internalError = object.internalError ?? undefined;
    message.quotaError = object.quotaError ?? undefined;
    message.adError = object.adError ?? undefined;
    message.adGroupError = object.adGroupError ?? undefined;
    message.campaignBudgetError = object.campaignBudgetError ?? undefined;
    message.campaignError = object.campaignError ?? undefined;
    message.videoCampaignError = object.videoCampaignError ?? undefined;
    message.authenticationError = object.authenticationError ?? undefined;
    message.adGroupCriterionCustomizerError = object.adGroupCriterionCustomizerError ?? undefined;
    message.adGroupCriterionError = object.adGroupCriterionError ?? undefined;
    message.adGroupCustomizerError = object.adGroupCustomizerError ?? undefined;
    message.adCustomizerError = object.adCustomizerError ?? undefined;
    message.adGroupAdError = object.adGroupAdError ?? undefined;
    message.adSharingError = object.adSharingError ?? undefined;
    message.adxError = object.adxError ?? undefined;
    message.assetError = object.assetError ?? undefined;
    message.assetGroupAssetError = object.assetGroupAssetError ?? undefined;
    message.assetGroupListingGroupFilterError = object.assetGroupListingGroupFilterError ?? undefined;
    message.assetGroupError = object.assetGroupError ?? undefined;
    message.assetSetAssetError = object.assetSetAssetError ?? undefined;
    message.assetSetLinkError = object.assetSetLinkError ?? undefined;
    message.assetSetError = object.assetSetError ?? undefined;
    message.biddingError = object.biddingError ?? undefined;
    message.campaignCriterionError = object.campaignCriterionError ?? undefined;
    message.campaignConversionGoalError = object.campaignConversionGoalError ?? undefined;
    message.campaignCustomizerError = object.campaignCustomizerError ?? undefined;
    message.collectionSizeError = object.collectionSizeError ?? undefined;
    message.conversionGoalCampaignConfigError = object.conversionGoalCampaignConfigError ?? undefined;
    message.countryCodeError = object.countryCodeError ?? undefined;
    message.criterionError = object.criterionError ?? undefined;
    message.customConversionGoalError = object.customConversionGoalError ?? undefined;
    message.customerCustomizerError = object.customerCustomizerError ?? undefined;
    message.customerError = object.customerError ?? undefined;
    message.customizerAttributeError = object.customizerAttributeError ?? undefined;
    message.dateError = object.dateError ?? undefined;
    message.dateRangeError = object.dateRangeError ?? undefined;
    message.distinctError = object.distinctError ?? undefined;
    message.feedAttributeReferenceError = object.feedAttributeReferenceError ?? undefined;
    message.functionError = object.functionError ?? undefined;
    message.functionParsingError = object.functionParsingError ?? undefined;
    message.idError = object.idError ?? undefined;
    message.imageError = object.imageError ?? undefined;
    message.languageCodeError = object.languageCodeError ?? undefined;
    message.mediaBundleError = object.mediaBundleError ?? undefined;
    message.mediaUploadError = object.mediaUploadError ?? undefined;
    message.mediaFileError = object.mediaFileError ?? undefined;
    message.merchantCenterError = object.merchantCenterError ?? undefined;
    message.multiplierError = object.multiplierError ?? undefined;
    message.newResourceCreationError = object.newResourceCreationError ?? undefined;
    message.notEmptyError = object.notEmptyError ?? undefined;
    message.nullError = object.nullError ?? undefined;
    message.operatorError = object.operatorError ?? undefined;
    message.rangeError = object.rangeError ?? undefined;
    message.recommendationError = object.recommendationError ?? undefined;
    message.recommendationSubscriptionError = object.recommendationSubscriptionError ?? undefined;
    message.regionCodeError = object.regionCodeError ?? undefined;
    message.settingError = object.settingError ?? undefined;
    message.stringFormatError = object.stringFormatError ?? undefined;
    message.stringLengthError = object.stringLengthError ?? undefined;
    message.operationAccessDeniedError = object.operationAccessDeniedError ?? undefined;
    message.resourceAccessDeniedError = object.resourceAccessDeniedError ?? undefined;
    message.resourceCountLimitExceededError = object.resourceCountLimitExceededError ?? undefined;
    message.youtubeVideoRegistrationError = object.youtubeVideoRegistrationError ?? undefined;
    message.adGroupBidModifierError = object.adGroupBidModifierError ?? undefined;
    message.contextError = object.contextError ?? undefined;
    message.fieldError = object.fieldError ?? undefined;
    message.sharedSetError = object.sharedSetError ?? undefined;
    message.sharedCriterionError = object.sharedCriterionError ?? undefined;
    message.campaignSharedSetError = object.campaignSharedSetError ?? undefined;
    message.conversionActionError = object.conversionActionError ?? undefined;
    message.conversionAdjustmentUploadError = object.conversionAdjustmentUploadError ?? undefined;
    message.conversionCustomVariableError = object.conversionCustomVariableError ?? undefined;
    message.conversionUploadError = object.conversionUploadError ?? undefined;
    message.conversionValueRuleError = object.conversionValueRuleError ?? undefined;
    message.conversionValueRuleSetError = object.conversionValueRuleSetError ?? undefined;
    message.headerError = object.headerError ?? undefined;
    message.databaseError = object.databaseError ?? undefined;
    message.policyFindingError = object.policyFindingError ?? undefined;
    message.enumError = object.enumError ?? undefined;
    message.keywordPlanError = object.keywordPlanError ?? undefined;
    message.keywordPlanCampaignError = object.keywordPlanCampaignError ?? undefined;
    message.keywordPlanCampaignKeywordError = object.keywordPlanCampaignKeywordError ?? undefined;
    message.keywordPlanAdGroupError = object.keywordPlanAdGroupError ?? undefined;
    message.keywordPlanAdGroupKeywordError = object.keywordPlanAdGroupKeywordError ?? undefined;
    message.keywordPlanIdeaError = object.keywordPlanIdeaError ?? undefined;
    message.accountBudgetProposalError = object.accountBudgetProposalError ?? undefined;
    message.userListError = object.userListError ?? undefined;
    message.changeEventError = object.changeEventError ?? undefined;
    message.changeStatusError = object.changeStatusError ?? undefined;
    message.feedError = object.feedError ?? undefined;
    message.geoTargetConstantSuggestionError = object.geoTargetConstantSuggestionError ?? undefined;
    message.campaignDraftError = object.campaignDraftError ?? undefined;
    message.feedItemError = object.feedItemError ?? undefined;
    message.labelError = object.labelError ?? undefined;
    message.billingSetupError = object.billingSetupError ?? undefined;
    message.customerClientLinkError = object.customerClientLinkError ?? undefined;
    message.customerManagerLinkError = object.customerManagerLinkError ?? undefined;
    message.feedMappingError = object.feedMappingError ?? undefined;
    message.customerFeedError = object.customerFeedError ?? undefined;
    message.adGroupFeedError = object.adGroupFeedError ?? undefined;
    message.campaignFeedError = object.campaignFeedError ?? undefined;
    message.customInterestError = object.customInterestError ?? undefined;
    message.campaignExperimentError = object.campaignExperimentError ?? undefined;
    message.extensionFeedItemError = object.extensionFeedItemError ?? undefined;
    message.adParameterError = object.adParameterError ?? undefined;
    message.feedItemValidationError = object.feedItemValidationError ?? undefined;
    message.extensionSettingError = object.extensionSettingError ?? undefined;
    message.feedItemSetError = object.feedItemSetError ?? undefined;
    message.feedItemSetLinkError = object.feedItemSetLinkError ?? undefined;
    message.feedItemTargetError = object.feedItemTargetError ?? undefined;
    message.policyViolationError = object.policyViolationError ?? undefined;
    message.partialFailureError = object.partialFailureError ?? undefined;
    message.policyValidationParameterError = object.policyValidationParameterError ?? undefined;
    message.sizeLimitError = object.sizeLimitError ?? undefined;
    message.offlineUserDataJobError = object.offlineUserDataJobError ?? undefined;
    message.notAllowlistedError = object.notAllowlistedError ?? undefined;
    message.managerLinkError = object.managerLinkError ?? undefined;
    message.currencyCodeError = object.currencyCodeError ?? undefined;
    message.experimentError = object.experimentError ?? undefined;
    message.accessInvitationError = object.accessInvitationError ?? undefined;
    message.reachPlanError = object.reachPlanError ?? undefined;
    message.invoiceError = object.invoiceError ?? undefined;
    message.paymentsAccountError = object.paymentsAccountError ?? undefined;
    message.timeZoneError = object.timeZoneError ?? undefined;
    message.assetLinkError = object.assetLinkError ?? undefined;
    message.userDataError = object.userDataError ?? undefined;
    message.batchJobError = object.batchJobError ?? undefined;
    message.accountLinkError = object.accountLinkError ?? undefined;
    message.thirdPartyAppAnalyticsLinkError = object.thirdPartyAppAnalyticsLinkError ?? undefined;
    message.customerUserAccessError = object.customerUserAccessError ?? undefined;
    message.customAudienceError = object.customAudienceError ?? undefined;
    message.audienceError = object.audienceError ?? undefined;
    message.searchTermInsightError = object.searchTermInsightError ?? undefined;
    message.smartCampaignError = object.smartCampaignError ?? undefined;
    message.experimentArmError = object.experimentArmError ?? undefined;
    message.audienceInsightsError = object.audienceInsightsError ?? undefined;
    message.productLinkError = object.productLinkError ?? undefined;
    message.customerSkAdNetworkConversionValueSchemaError = object.customerSkAdNetworkConversionValueSchemaError ??
      undefined;
    message.currencyError = object.currencyError ?? undefined;
    message.assetGroupSignalError = object.assetGroupSignalError ?? undefined;
    message.productLinkInvitationError = object.productLinkInvitationError ?? undefined;
    message.customerLifecycleGoalError = object.customerLifecycleGoalError ?? undefined;
    message.campaignLifecycleGoalError = object.campaignLifecycleGoalError ?? undefined;
    message.identityVerificationError = object.identityVerificationError ?? undefined;
    return message;
  },
};

function createBaseErrorLocation(): ErrorLocation {
  return { fieldPathElements: [] };
}

export const ErrorLocation: MessageFns<ErrorLocation> = {
  encode(message: ErrorLocation, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.fieldPathElements) {
      ErrorLocation_FieldPathElement.encode(v!, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ErrorLocation {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseErrorLocation();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 2:
          if (tag !== 18) {
            break;
          }

          message.fieldPathElements.push(ErrorLocation_FieldPathElement.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ErrorLocation {
    return {
      fieldPathElements: globalThis.Array.isArray(object?.fieldPathElements)
        ? object.fieldPathElements.map((e: any) => ErrorLocation_FieldPathElement.fromJSON(e))
        : [],
    };
  },

  toJSON(message: ErrorLocation): unknown {
    const obj: any = {};
    if (message.fieldPathElements?.length) {
      obj.fieldPathElements = message.fieldPathElements.map((e) => ErrorLocation_FieldPathElement.toJSON(e));
    }
    return obj;
  },

  create(base?: DeepPartial<ErrorLocation>): ErrorLocation {
    return ErrorLocation.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ErrorLocation>): ErrorLocation {
    const message = createBaseErrorLocation();
    message.fieldPathElements = object.fieldPathElements?.map((e) => ErrorLocation_FieldPathElement.fromPartial(e)) ||
      [];
    return message;
  },
};

function createBaseErrorLocation_FieldPathElement(): ErrorLocation_FieldPathElement {
  return { fieldName: "", index: undefined };
}

export const ErrorLocation_FieldPathElement: MessageFns<ErrorLocation_FieldPathElement> = {
  encode(message: ErrorLocation_FieldPathElement, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.fieldName !== "") {
      writer.uint32(10).string(message.fieldName);
    }
    if (message.index !== undefined) {
      writer.uint32(24).int32(message.index);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ErrorLocation_FieldPathElement {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseErrorLocation_FieldPathElement();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.fieldName = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.index = reader.int32();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ErrorLocation_FieldPathElement {
    return {
      fieldName: isSet(object.fieldName) ? globalThis.String(object.fieldName) : "",
      index: isSet(object.index) ? globalThis.Number(object.index) : undefined,
    };
  },

  toJSON(message: ErrorLocation_FieldPathElement): unknown {
    const obj: any = {};
    if (message.fieldName !== "") {
      obj.fieldName = message.fieldName;
    }
    if (message.index !== undefined) {
      obj.index = Math.round(message.index);
    }
    return obj;
  },

  create(base?: DeepPartial<ErrorLocation_FieldPathElement>): ErrorLocation_FieldPathElement {
    return ErrorLocation_FieldPathElement.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ErrorLocation_FieldPathElement>): ErrorLocation_FieldPathElement {
    const message = createBaseErrorLocation_FieldPathElement();
    message.fieldName = object.fieldName ?? "";
    message.index = object.index ?? undefined;
    return message;
  },
};

function createBaseErrorDetails(): ErrorDetails {
  return {
    unpublishedErrorCode: "",
    policyViolationDetails: undefined,
    policyFindingDetails: undefined,
    quotaErrorDetails: undefined,
    resourceCountDetails: undefined,
  };
}

export const ErrorDetails: MessageFns<ErrorDetails> = {
  encode(message: ErrorDetails, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.unpublishedErrorCode !== "") {
      writer.uint32(10).string(message.unpublishedErrorCode);
    }
    if (message.policyViolationDetails !== undefined) {
      PolicyViolationDetails.encode(message.policyViolationDetails, writer.uint32(18).fork()).join();
    }
    if (message.policyFindingDetails !== undefined) {
      PolicyFindingDetails.encode(message.policyFindingDetails, writer.uint32(26).fork()).join();
    }
    if (message.quotaErrorDetails !== undefined) {
      QuotaErrorDetails.encode(message.quotaErrorDetails, writer.uint32(34).fork()).join();
    }
    if (message.resourceCountDetails !== undefined) {
      ResourceCountDetails.encode(message.resourceCountDetails, writer.uint32(42).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ErrorDetails {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseErrorDetails();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.unpublishedErrorCode = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.policyViolationDetails = PolicyViolationDetails.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.policyFindingDetails = PolicyFindingDetails.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.quotaErrorDetails = QuotaErrorDetails.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.resourceCountDetails = ResourceCountDetails.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ErrorDetails {
    return {
      unpublishedErrorCode: isSet(object.unpublishedErrorCode) ? globalThis.String(object.unpublishedErrorCode) : "",
      policyViolationDetails: isSet(object.policyViolationDetails)
        ? PolicyViolationDetails.fromJSON(object.policyViolationDetails)
        : undefined,
      policyFindingDetails: isSet(object.policyFindingDetails)
        ? PolicyFindingDetails.fromJSON(object.policyFindingDetails)
        : undefined,
      quotaErrorDetails: isSet(object.quotaErrorDetails)
        ? QuotaErrorDetails.fromJSON(object.quotaErrorDetails)
        : undefined,
      resourceCountDetails: isSet(object.resourceCountDetails)
        ? ResourceCountDetails.fromJSON(object.resourceCountDetails)
        : undefined,
    };
  },

  toJSON(message: ErrorDetails): unknown {
    const obj: any = {};
    if (message.unpublishedErrorCode !== "") {
      obj.unpublishedErrorCode = message.unpublishedErrorCode;
    }
    if (message.policyViolationDetails !== undefined) {
      obj.policyViolationDetails = PolicyViolationDetails.toJSON(message.policyViolationDetails);
    }
    if (message.policyFindingDetails !== undefined) {
      obj.policyFindingDetails = PolicyFindingDetails.toJSON(message.policyFindingDetails);
    }
    if (message.quotaErrorDetails !== undefined) {
      obj.quotaErrorDetails = QuotaErrorDetails.toJSON(message.quotaErrorDetails);
    }
    if (message.resourceCountDetails !== undefined) {
      obj.resourceCountDetails = ResourceCountDetails.toJSON(message.resourceCountDetails);
    }
    return obj;
  },

  create(base?: DeepPartial<ErrorDetails>): ErrorDetails {
    return ErrorDetails.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ErrorDetails>): ErrorDetails {
    const message = createBaseErrorDetails();
    message.unpublishedErrorCode = object.unpublishedErrorCode ?? "";
    message.policyViolationDetails =
      (object.policyViolationDetails !== undefined && object.policyViolationDetails !== null)
        ? PolicyViolationDetails.fromPartial(object.policyViolationDetails)
        : undefined;
    message.policyFindingDetails = (object.policyFindingDetails !== undefined && object.policyFindingDetails !== null)
      ? PolicyFindingDetails.fromPartial(object.policyFindingDetails)
      : undefined;
    message.quotaErrorDetails = (object.quotaErrorDetails !== undefined && object.quotaErrorDetails !== null)
      ? QuotaErrorDetails.fromPartial(object.quotaErrorDetails)
      : undefined;
    message.resourceCountDetails = (object.resourceCountDetails !== undefined && object.resourceCountDetails !== null)
      ? ResourceCountDetails.fromPartial(object.resourceCountDetails)
      : undefined;
    return message;
  },
};

function createBasePolicyViolationDetails(): PolicyViolationDetails {
  return { externalPolicyDescription: "", key: undefined, externalPolicyName: "", isExemptible: false };
}

export const PolicyViolationDetails: MessageFns<PolicyViolationDetails> = {
  encode(message: PolicyViolationDetails, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.externalPolicyDescription !== "") {
      writer.uint32(18).string(message.externalPolicyDescription);
    }
    if (message.key !== undefined) {
      PolicyViolationKey.encode(message.key, writer.uint32(34).fork()).join();
    }
    if (message.externalPolicyName !== "") {
      writer.uint32(42).string(message.externalPolicyName);
    }
    if (message.isExemptible !== false) {
      writer.uint32(48).bool(message.isExemptible);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PolicyViolationDetails {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePolicyViolationDetails();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 2:
          if (tag !== 18) {
            break;
          }

          message.externalPolicyDescription = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.key = PolicyViolationKey.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.externalPolicyName = reader.string();
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.isExemptible = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PolicyViolationDetails {
    return {
      externalPolicyDescription: isSet(object.externalPolicyDescription)
        ? globalThis.String(object.externalPolicyDescription)
        : "",
      key: isSet(object.key) ? PolicyViolationKey.fromJSON(object.key) : undefined,
      externalPolicyName: isSet(object.externalPolicyName) ? globalThis.String(object.externalPolicyName) : "",
      isExemptible: isSet(object.isExemptible) ? globalThis.Boolean(object.isExemptible) : false,
    };
  },

  toJSON(message: PolicyViolationDetails): unknown {
    const obj: any = {};
    if (message.externalPolicyDescription !== "") {
      obj.externalPolicyDescription = message.externalPolicyDescription;
    }
    if (message.key !== undefined) {
      obj.key = PolicyViolationKey.toJSON(message.key);
    }
    if (message.externalPolicyName !== "") {
      obj.externalPolicyName = message.externalPolicyName;
    }
    if (message.isExemptible !== false) {
      obj.isExemptible = message.isExemptible;
    }
    return obj;
  },

  create(base?: DeepPartial<PolicyViolationDetails>): PolicyViolationDetails {
    return PolicyViolationDetails.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PolicyViolationDetails>): PolicyViolationDetails {
    const message = createBasePolicyViolationDetails();
    message.externalPolicyDescription = object.externalPolicyDescription ?? "";
    message.key = (object.key !== undefined && object.key !== null)
      ? PolicyViolationKey.fromPartial(object.key)
      : undefined;
    message.externalPolicyName = object.externalPolicyName ?? "";
    message.isExemptible = object.isExemptible ?? false;
    return message;
  },
};

function createBasePolicyFindingDetails(): PolicyFindingDetails {
  return { policyTopicEntries: [] };
}

export const PolicyFindingDetails: MessageFns<PolicyFindingDetails> = {
  encode(message: PolicyFindingDetails, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.policyTopicEntries) {
      PolicyTopicEntry.encode(v!, writer.uint32(10).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PolicyFindingDetails {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePolicyFindingDetails();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.policyTopicEntries.push(PolicyTopicEntry.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PolicyFindingDetails {
    return {
      policyTopicEntries: globalThis.Array.isArray(object?.policyTopicEntries)
        ? object.policyTopicEntries.map((e: any) => PolicyTopicEntry.fromJSON(e))
        : [],
    };
  },

  toJSON(message: PolicyFindingDetails): unknown {
    const obj: any = {};
    if (message.policyTopicEntries?.length) {
      obj.policyTopicEntries = message.policyTopicEntries.map((e) => PolicyTopicEntry.toJSON(e));
    }
    return obj;
  },

  create(base?: DeepPartial<PolicyFindingDetails>): PolicyFindingDetails {
    return PolicyFindingDetails.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PolicyFindingDetails>): PolicyFindingDetails {
    const message = createBasePolicyFindingDetails();
    message.policyTopicEntries = object.policyTopicEntries?.map((e) => PolicyTopicEntry.fromPartial(e)) || [];
    return message;
  },
};

function createBaseQuotaErrorDetails(): QuotaErrorDetails {
  return { rateScope: 0, rateName: "", retryDelay: undefined };
}

export const QuotaErrorDetails: MessageFns<QuotaErrorDetails> = {
  encode(message: QuotaErrorDetails, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.rateScope !== 0) {
      writer.uint32(8).int32(message.rateScope);
    }
    if (message.rateName !== "") {
      writer.uint32(18).string(message.rateName);
    }
    if (message.retryDelay !== undefined) {
      Duration.encode(message.retryDelay, writer.uint32(26).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): QuotaErrorDetails {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseQuotaErrorDetails();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.rateScope = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.rateName = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.retryDelay = Duration.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): QuotaErrorDetails {
    return {
      rateScope: isSet(object.rateScope) ? quotaErrorDetails_QuotaRateScopeFromJSON(object.rateScope) : 0,
      rateName: isSet(object.rateName) ? globalThis.String(object.rateName) : "",
      retryDelay: isSet(object.retryDelay) ? Duration.fromJSON(object.retryDelay) : undefined,
    };
  },

  toJSON(message: QuotaErrorDetails): unknown {
    const obj: any = {};
    if (message.rateScope !== 0) {
      obj.rateScope = quotaErrorDetails_QuotaRateScopeToJSON(message.rateScope);
    }
    if (message.rateName !== "") {
      obj.rateName = message.rateName;
    }
    if (message.retryDelay !== undefined) {
      obj.retryDelay = Duration.toJSON(message.retryDelay);
    }
    return obj;
  },

  create(base?: DeepPartial<QuotaErrorDetails>): QuotaErrorDetails {
    return QuotaErrorDetails.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<QuotaErrorDetails>): QuotaErrorDetails {
    const message = createBaseQuotaErrorDetails();
    message.rateScope = object.rateScope ?? 0;
    message.rateName = object.rateName ?? "";
    message.retryDelay = (object.retryDelay !== undefined && object.retryDelay !== null)
      ? Duration.fromPartial(object.retryDelay)
      : undefined;
    return message;
  },
};

function createBaseResourceCountDetails(): ResourceCountDetails {
  return { enclosingId: "", enclosingResource: "", limit: 0, limitType: 0, existingCount: 0 };
}

export const ResourceCountDetails: MessageFns<ResourceCountDetails> = {
  encode(message: ResourceCountDetails, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.enclosingId !== "") {
      writer.uint32(10).string(message.enclosingId);
    }
    if (message.enclosingResource !== "") {
      writer.uint32(42).string(message.enclosingResource);
    }
    if (message.limit !== 0) {
      writer.uint32(16).int32(message.limit);
    }
    if (message.limitType !== 0) {
      writer.uint32(24).int32(message.limitType);
    }
    if (message.existingCount !== 0) {
      writer.uint32(32).int32(message.existingCount);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ResourceCountDetails {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseResourceCountDetails();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.enclosingId = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.enclosingResource = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.limit = reader.int32();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.limitType = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.existingCount = reader.int32();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ResourceCountDetails {
    return {
      enclosingId: isSet(object.enclosingId) ? globalThis.String(object.enclosingId) : "",
      enclosingResource: isSet(object.enclosingResource) ? globalThis.String(object.enclosingResource) : "",
      limit: isSet(object.limit) ? globalThis.Number(object.limit) : 0,
      limitType: isSet(object.limitType) ? resourceLimitTypeEnum_ResourceLimitTypeFromJSON(object.limitType) : 0,
      existingCount: isSet(object.existingCount) ? globalThis.Number(object.existingCount) : 0,
    };
  },

  toJSON(message: ResourceCountDetails): unknown {
    const obj: any = {};
    if (message.enclosingId !== "") {
      obj.enclosingId = message.enclosingId;
    }
    if (message.enclosingResource !== "") {
      obj.enclosingResource = message.enclosingResource;
    }
    if (message.limit !== 0) {
      obj.limit = Math.round(message.limit);
    }
    if (message.limitType !== 0) {
      obj.limitType = resourceLimitTypeEnum_ResourceLimitTypeToJSON(message.limitType);
    }
    if (message.existingCount !== 0) {
      obj.existingCount = Math.round(message.existingCount);
    }
    return obj;
  },

  create(base?: DeepPartial<ResourceCountDetails>): ResourceCountDetails {
    return ResourceCountDetails.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ResourceCountDetails>): ResourceCountDetails {
    const message = createBaseResourceCountDetails();
    message.enclosingId = object.enclosingId ?? "";
    message.enclosingResource = object.enclosingResource ?? "";
    message.limit = object.limit ?? 0;
    message.limitType = object.limitType ?? 0;
    message.existingCount = object.existingCount ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
