// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/errors/product_link_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.errors";

/** Container for enum describing possible ProductLink errors. */
export interface ProductLinkErrorEnum {
}

/** Enum describing possible ProductLink errors. */
export enum ProductLinkErrorEnum_ProductLinkError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /**
   * INVALID_OPERATION - The requested operation is invalid. For example, you are not allowed to
   * remove a link from a partner account.
   */
  INVALID_OPERATION = 2,
  /** CREATION_NOT_PERMITTED - The creation request is not permitted. */
  CREATION_NOT_PERMITTED = 3,
  /** INVITATION_EXISTS - A link cannot be created because a pending link already exists. */
  INVITATION_EXISTS = 4,
  /** LINK_EXISTS - A link cannot be created because an active link already exists. */
  LINK_EXISTS = 5,
  UNRECOGNIZED = -1,
}

export function productLinkErrorEnum_ProductLinkErrorFromJSON(object: any): ProductLinkErrorEnum_ProductLinkError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return ProductLinkErrorEnum_ProductLinkError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return ProductLinkErrorEnum_ProductLinkError.UNKNOWN;
    case 2:
    case "INVALID_OPERATION":
      return ProductLinkErrorEnum_ProductLinkError.INVALID_OPERATION;
    case 3:
    case "CREATION_NOT_PERMITTED":
      return ProductLinkErrorEnum_ProductLinkError.CREATION_NOT_PERMITTED;
    case 4:
    case "INVITATION_EXISTS":
      return ProductLinkErrorEnum_ProductLinkError.INVITATION_EXISTS;
    case 5:
    case "LINK_EXISTS":
      return ProductLinkErrorEnum_ProductLinkError.LINK_EXISTS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ProductLinkErrorEnum_ProductLinkError.UNRECOGNIZED;
  }
}

export function productLinkErrorEnum_ProductLinkErrorToJSON(object: ProductLinkErrorEnum_ProductLinkError): string {
  switch (object) {
    case ProductLinkErrorEnum_ProductLinkError.UNSPECIFIED:
      return "UNSPECIFIED";
    case ProductLinkErrorEnum_ProductLinkError.UNKNOWN:
      return "UNKNOWN";
    case ProductLinkErrorEnum_ProductLinkError.INVALID_OPERATION:
      return "INVALID_OPERATION";
    case ProductLinkErrorEnum_ProductLinkError.CREATION_NOT_PERMITTED:
      return "CREATION_NOT_PERMITTED";
    case ProductLinkErrorEnum_ProductLinkError.INVITATION_EXISTS:
      return "INVITATION_EXISTS";
    case ProductLinkErrorEnum_ProductLinkError.LINK_EXISTS:
      return "LINK_EXISTS";
    case ProductLinkErrorEnum_ProductLinkError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseProductLinkErrorEnum(): ProductLinkErrorEnum {
  return {};
}

export const ProductLinkErrorEnum: MessageFns<ProductLinkErrorEnum> = {
  encode(_: ProductLinkErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ProductLinkErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseProductLinkErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ProductLinkErrorEnum {
    return {};
  },

  toJSON(_: ProductLinkErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ProductLinkErrorEnum>): ProductLinkErrorEnum {
    return ProductLinkErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ProductLinkErrorEnum>): ProductLinkErrorEnum {
    const message = createBaseProductLinkErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
