// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/errors/campaign_feed_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.errors";

/** Container for enum describing possible campaign feed errors. */
export interface CampaignFeedErrorEnum {
}

/** Enum describing possible campaign feed errors. */
export enum CampaignFeedErrorEnum_CampaignFeedError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /** FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE - An active feed already exists for this campaign and placeholder type. */
  FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE = 2,
  /** CANNOT_CREATE_FOR_REMOVED_FEED - The specified feed is removed. */
  CANNOT_CREATE_FOR_REMOVED_FEED = 4,
  /**
   * CANNOT_CREATE_ALREADY_EXISTING_CAMPAIGN_FEED - The CampaignFeed already exists. UPDATE should be used to modify the
   * existing CampaignFeed.
   */
  CANNOT_CREATE_ALREADY_EXISTING_CAMPAIGN_FEED = 5,
  /** CANNOT_MODIFY_REMOVED_CAMPAIGN_FEED - Cannot update removed campaign feed. */
  CANNOT_MODIFY_REMOVED_CAMPAIGN_FEED = 6,
  /** INVALID_PLACEHOLDER_TYPE - Invalid placeholder type. */
  INVALID_PLACEHOLDER_TYPE = 7,
  /** MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE - Feed mapping for this placeholder type does not exist. */
  MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE = 8,
  /**
   * NO_EXISTING_LOCATION_CUSTOMER_FEED - Location CampaignFeeds cannot be created unless there is a location
   * CustomerFeed for the specified feed.
   */
  NO_EXISTING_LOCATION_CUSTOMER_FEED = 9,
  /** LEGACY_FEED_TYPE_READ_ONLY - Feed is read only. */
  LEGACY_FEED_TYPE_READ_ONLY = 10,
  UNRECOGNIZED = -1,
}

export function campaignFeedErrorEnum_CampaignFeedErrorFromJSON(object: any): CampaignFeedErrorEnum_CampaignFeedError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return CampaignFeedErrorEnum_CampaignFeedError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return CampaignFeedErrorEnum_CampaignFeedError.UNKNOWN;
    case 2:
    case "FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE":
      return CampaignFeedErrorEnum_CampaignFeedError.FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE;
    case 4:
    case "CANNOT_CREATE_FOR_REMOVED_FEED":
      return CampaignFeedErrorEnum_CampaignFeedError.CANNOT_CREATE_FOR_REMOVED_FEED;
    case 5:
    case "CANNOT_CREATE_ALREADY_EXISTING_CAMPAIGN_FEED":
      return CampaignFeedErrorEnum_CampaignFeedError.CANNOT_CREATE_ALREADY_EXISTING_CAMPAIGN_FEED;
    case 6:
    case "CANNOT_MODIFY_REMOVED_CAMPAIGN_FEED":
      return CampaignFeedErrorEnum_CampaignFeedError.CANNOT_MODIFY_REMOVED_CAMPAIGN_FEED;
    case 7:
    case "INVALID_PLACEHOLDER_TYPE":
      return CampaignFeedErrorEnum_CampaignFeedError.INVALID_PLACEHOLDER_TYPE;
    case 8:
    case "MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE":
      return CampaignFeedErrorEnum_CampaignFeedError.MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE;
    case 9:
    case "NO_EXISTING_LOCATION_CUSTOMER_FEED":
      return CampaignFeedErrorEnum_CampaignFeedError.NO_EXISTING_LOCATION_CUSTOMER_FEED;
    case 10:
    case "LEGACY_FEED_TYPE_READ_ONLY":
      return CampaignFeedErrorEnum_CampaignFeedError.LEGACY_FEED_TYPE_READ_ONLY;
    case -1:
    case "UNRECOGNIZED":
    default:
      return CampaignFeedErrorEnum_CampaignFeedError.UNRECOGNIZED;
  }
}

export function campaignFeedErrorEnum_CampaignFeedErrorToJSON(object: CampaignFeedErrorEnum_CampaignFeedError): string {
  switch (object) {
    case CampaignFeedErrorEnum_CampaignFeedError.UNSPECIFIED:
      return "UNSPECIFIED";
    case CampaignFeedErrorEnum_CampaignFeedError.UNKNOWN:
      return "UNKNOWN";
    case CampaignFeedErrorEnum_CampaignFeedError.FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE:
      return "FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE";
    case CampaignFeedErrorEnum_CampaignFeedError.CANNOT_CREATE_FOR_REMOVED_FEED:
      return "CANNOT_CREATE_FOR_REMOVED_FEED";
    case CampaignFeedErrorEnum_CampaignFeedError.CANNOT_CREATE_ALREADY_EXISTING_CAMPAIGN_FEED:
      return "CANNOT_CREATE_ALREADY_EXISTING_CAMPAIGN_FEED";
    case CampaignFeedErrorEnum_CampaignFeedError.CANNOT_MODIFY_REMOVED_CAMPAIGN_FEED:
      return "CANNOT_MODIFY_REMOVED_CAMPAIGN_FEED";
    case CampaignFeedErrorEnum_CampaignFeedError.INVALID_PLACEHOLDER_TYPE:
      return "INVALID_PLACEHOLDER_TYPE";
    case CampaignFeedErrorEnum_CampaignFeedError.MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE:
      return "MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE";
    case CampaignFeedErrorEnum_CampaignFeedError.NO_EXISTING_LOCATION_CUSTOMER_FEED:
      return "NO_EXISTING_LOCATION_CUSTOMER_FEED";
    case CampaignFeedErrorEnum_CampaignFeedError.LEGACY_FEED_TYPE_READ_ONLY:
      return "LEGACY_FEED_TYPE_READ_ONLY";
    case CampaignFeedErrorEnum_CampaignFeedError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseCampaignFeedErrorEnum(): CampaignFeedErrorEnum {
  return {};
}

export const CampaignFeedErrorEnum: MessageFns<CampaignFeedErrorEnum> = {
  encode(_: CampaignFeedErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CampaignFeedErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCampaignFeedErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): CampaignFeedErrorEnum {
    return {};
  },

  toJSON(_: CampaignFeedErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<CampaignFeedErrorEnum>): CampaignFeedErrorEnum {
    return CampaignFeedErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<CampaignFeedErrorEnum>): CampaignFeedErrorEnum {
    const message = createBaseCampaignFeedErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
