// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/resources/feed_item_set.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  DynamicAffiliateLocationSetFilter,
  DynamicLocationSetFilter,
} from "../common/feed_item_set_filter_type_infos.js";
import {
  FeedItemSetStatusEnum_FeedItemSetStatus,
  feedItemSetStatusEnum_FeedItemSetStatusFromJSON,
  feedItemSetStatusEnum_FeedItemSetStatusToJSON,
} from "../enums/feed_item_set_status.js";

export const protobufPackage = "google.ads.googleads.v17.resources";

/**
 * Represents a set of feed items. The set can be used and shared among certain
 * feed item features. For instance, the set can be referenced within the
 * matching functions of CustomerFeed, CampaignFeed, and AdGroupFeed.
 */
export interface FeedItemSet {
  /**
   * Immutable. The resource name of the feed item set.
   * Feed item set resource names have the form:
   * `customers/{customer_id}/feedItemSets/{feed_id}~{feed_item_set_id}`
   */
  resourceName: string;
  /**
   * Immutable. The resource name of the feed containing the feed items in the
   * set. Immutable. Required.
   */
  feed: string;
  /** Output only. ID of the set. */
  feedItemSetId: Long;
  /** Name of the set. Must be unique within the account. */
  displayName: string;
  /**
   * Output only. Status of the feed item set.
   * This field is read-only.
   */
  status: FeedItemSetStatusEnum_FeedItemSetStatus;
  /**
   * Filter for dynamic location set.
   * It is only used for sets of locations.
   */
  dynamicLocationSetFilter?:
    | DynamicLocationSetFilter
    | undefined;
  /**
   * Filter for dynamic affiliate location set.
   * This field doesn't apply generally to feed item sets. It is only used for
   * sets of affiliate locations.
   */
  dynamicAffiliateLocationSetFilter?: DynamicAffiliateLocationSetFilter | undefined;
}

function createBaseFeedItemSet(): FeedItemSet {
  return {
    resourceName: "",
    feed: "",
    feedItemSetId: Long.ZERO,
    displayName: "",
    status: 0,
    dynamicLocationSetFilter: undefined,
    dynamicAffiliateLocationSetFilter: undefined,
  };
}

export const FeedItemSet: MessageFns<FeedItemSet> = {
  encode(message: FeedItemSet, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.feed !== "") {
      writer.uint32(18).string(message.feed);
    }
    if (!message.feedItemSetId.equals(Long.ZERO)) {
      writer.uint32(24).int64(message.feedItemSetId.toString());
    }
    if (message.displayName !== "") {
      writer.uint32(34).string(message.displayName);
    }
    if (message.status !== 0) {
      writer.uint32(64).int32(message.status);
    }
    if (message.dynamicLocationSetFilter !== undefined) {
      DynamicLocationSetFilter.encode(message.dynamicLocationSetFilter, writer.uint32(42).fork()).join();
    }
    if (message.dynamicAffiliateLocationSetFilter !== undefined) {
      DynamicAffiliateLocationSetFilter.encode(message.dynamicAffiliateLocationSetFilter, writer.uint32(50).fork())
        .join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): FeedItemSet {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseFeedItemSet();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.feed = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.feedItemSetId = Long.fromString(reader.int64().toString());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.displayName = reader.string();
          continue;
        case 8:
          if (tag !== 64) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.dynamicLocationSetFilter = DynamicLocationSetFilter.decode(reader, reader.uint32());
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.dynamicAffiliateLocationSetFilter = DynamicAffiliateLocationSetFilter.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): FeedItemSet {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      feed: isSet(object.feed) ? globalThis.String(object.feed) : "",
      feedItemSetId: isSet(object.feedItemSetId) ? Long.fromValue(object.feedItemSetId) : Long.ZERO,
      displayName: isSet(object.displayName) ? globalThis.String(object.displayName) : "",
      status: isSet(object.status) ? feedItemSetStatusEnum_FeedItemSetStatusFromJSON(object.status) : 0,
      dynamicLocationSetFilter: isSet(object.dynamicLocationSetFilter)
        ? DynamicLocationSetFilter.fromJSON(object.dynamicLocationSetFilter)
        : undefined,
      dynamicAffiliateLocationSetFilter: isSet(object.dynamicAffiliateLocationSetFilter)
        ? DynamicAffiliateLocationSetFilter.fromJSON(object.dynamicAffiliateLocationSetFilter)
        : undefined,
    };
  },

  toJSON(message: FeedItemSet): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.feed !== "") {
      obj.feed = message.feed;
    }
    if (!message.feedItemSetId.equals(Long.ZERO)) {
      obj.feedItemSetId = (message.feedItemSetId || Long.ZERO).toString();
    }
    if (message.displayName !== "") {
      obj.displayName = message.displayName;
    }
    if (message.status !== 0) {
      obj.status = feedItemSetStatusEnum_FeedItemSetStatusToJSON(message.status);
    }
    if (message.dynamicLocationSetFilter !== undefined) {
      obj.dynamicLocationSetFilter = DynamicLocationSetFilter.toJSON(message.dynamicLocationSetFilter);
    }
    if (message.dynamicAffiliateLocationSetFilter !== undefined) {
      obj.dynamicAffiliateLocationSetFilter = DynamicAffiliateLocationSetFilter.toJSON(
        message.dynamicAffiliateLocationSetFilter,
      );
    }
    return obj;
  },

  create(base?: DeepPartial<FeedItemSet>): FeedItemSet {
    return FeedItemSet.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<FeedItemSet>): FeedItemSet {
    const message = createBaseFeedItemSet();
    message.resourceName = object.resourceName ?? "";
    message.feed = object.feed ?? "";
    message.feedItemSetId = (object.feedItemSetId !== undefined && object.feedItemSetId !== null)
      ? Long.fromValue(object.feedItemSetId)
      : Long.ZERO;
    message.displayName = object.displayName ?? "";
    message.status = object.status ?? 0;
    message.dynamicLocationSetFilter =
      (object.dynamicLocationSetFilter !== undefined && object.dynamicLocationSetFilter !== null)
        ? DynamicLocationSetFilter.fromPartial(object.dynamicLocationSetFilter)
        : undefined;
    message.dynamicAffiliateLocationSetFilter =
      (object.dynamicAffiliateLocationSetFilter !== undefined && object.dynamicAffiliateLocationSetFilter !== null)
        ? DynamicAffiliateLocationSetFilter.fromPartial(object.dynamicAffiliateLocationSetFilter)
        : undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
