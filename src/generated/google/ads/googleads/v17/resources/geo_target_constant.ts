// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/resources/geo_target_constant.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  GeoTargetConstantStatusEnum_GeoTargetConstantStatus,
  geoTargetConstantStatusEnum_GeoTargetConstantStatusFromJSON,
  geoTargetConstantStatusEnum_GeoTargetConstantStatusToJSON,
} from "../enums/geo_target_constant_status.js";

export const protobufPackage = "google.ads.googleads.v17.resources";

/** A geo target constant. */
export interface GeoTargetConstant {
  /**
   * Output only. The resource name of the geo target constant.
   * Geo target constant resource names have the form:
   *
   * `geoTargetConstants/{geo_target_constant_id}`
   */
  resourceName: string;
  /** Output only. The ID of the geo target constant. */
  id?:
    | Long
    | undefined;
  /** Output only. Geo target constant English name. */
  name?:
    | string
    | undefined;
  /**
   * Output only. The ISO-3166-1 alpha-2 country code that is associated with
   * the target.
   */
  countryCode?:
    | string
    | undefined;
  /** Output only. Geo target constant target type. */
  targetType?:
    | string
    | undefined;
  /** Output only. Geo target constant status. */
  status: GeoTargetConstantStatusEnum_GeoTargetConstantStatus;
  /**
   * Output only. The fully qualified English name, consisting of the target's
   * name and that of its parent and country.
   */
  canonicalName?:
    | string
    | undefined;
  /**
   * Output only. The resource name of the parent geo target constant.
   * Geo target constant resource names have the form:
   *
   * `geoTargetConstants/{parent_geo_target_constant_id}`
   */
  parentGeoTarget?: string | undefined;
}

function createBaseGeoTargetConstant(): GeoTargetConstant {
  return {
    resourceName: "",
    id: undefined,
    name: undefined,
    countryCode: undefined,
    targetType: undefined,
    status: 0,
    canonicalName: undefined,
    parentGeoTarget: undefined,
  };
}

export const GeoTargetConstant: MessageFns<GeoTargetConstant> = {
  encode(message: GeoTargetConstant, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.id !== undefined) {
      writer.uint32(80).int64(message.id.toString());
    }
    if (message.name !== undefined) {
      writer.uint32(90).string(message.name);
    }
    if (message.countryCode !== undefined) {
      writer.uint32(98).string(message.countryCode);
    }
    if (message.targetType !== undefined) {
      writer.uint32(106).string(message.targetType);
    }
    if (message.status !== 0) {
      writer.uint32(56).int32(message.status);
    }
    if (message.canonicalName !== undefined) {
      writer.uint32(114).string(message.canonicalName);
    }
    if (message.parentGeoTarget !== undefined) {
      writer.uint32(74).string(message.parentGeoTarget);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GeoTargetConstant {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGeoTargetConstant();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 10:
          if (tag !== 80) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.name = reader.string();
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.countryCode = reader.string();
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.targetType = reader.string();
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.canonicalName = reader.string();
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.parentGeoTarget = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GeoTargetConstant {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      id: isSet(object.id) ? Long.fromValue(object.id) : undefined,
      name: isSet(object.name) ? globalThis.String(object.name) : undefined,
      countryCode: isSet(object.countryCode) ? globalThis.String(object.countryCode) : undefined,
      targetType: isSet(object.targetType) ? globalThis.String(object.targetType) : undefined,
      status: isSet(object.status) ? geoTargetConstantStatusEnum_GeoTargetConstantStatusFromJSON(object.status) : 0,
      canonicalName: isSet(object.canonicalName) ? globalThis.String(object.canonicalName) : undefined,
      parentGeoTarget: isSet(object.parentGeoTarget) ? globalThis.String(object.parentGeoTarget) : undefined,
    };
  },

  toJSON(message: GeoTargetConstant): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.id !== undefined) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.name !== undefined) {
      obj.name = message.name;
    }
    if (message.countryCode !== undefined) {
      obj.countryCode = message.countryCode;
    }
    if (message.targetType !== undefined) {
      obj.targetType = message.targetType;
    }
    if (message.status !== 0) {
      obj.status = geoTargetConstantStatusEnum_GeoTargetConstantStatusToJSON(message.status);
    }
    if (message.canonicalName !== undefined) {
      obj.canonicalName = message.canonicalName;
    }
    if (message.parentGeoTarget !== undefined) {
      obj.parentGeoTarget = message.parentGeoTarget;
    }
    return obj;
  },

  create(base?: DeepPartial<GeoTargetConstant>): GeoTargetConstant {
    return GeoTargetConstant.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GeoTargetConstant>): GeoTargetConstant {
    const message = createBaseGeoTargetConstant();
    message.resourceName = object.resourceName ?? "";
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : undefined;
    message.name = object.name ?? undefined;
    message.countryCode = object.countryCode ?? undefined;
    message.targetType = object.targetType ?? undefined;
    message.status = object.status ?? 0;
    message.canonicalName = object.canonicalName ?? undefined;
    message.parentGeoTarget = object.parentGeoTarget ?? undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
