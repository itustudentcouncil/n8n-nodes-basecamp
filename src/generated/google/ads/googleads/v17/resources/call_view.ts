// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/resources/call_view.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  CallTrackingDisplayLocationEnum_CallTrackingDisplayLocation,
  callTrackingDisplayLocationEnum_CallTrackingDisplayLocationFromJSON,
  callTrackingDisplayLocationEnum_CallTrackingDisplayLocationToJSON,
} from "../enums/call_tracking_display_location.js";
import {
  CallTypeEnum_CallType,
  callTypeEnum_CallTypeFromJSON,
  callTypeEnum_CallTypeToJSON,
} from "../enums/call_type.js";
import {
  GoogleVoiceCallStatusEnum_GoogleVoiceCallStatus,
  googleVoiceCallStatusEnum_GoogleVoiceCallStatusFromJSON,
  googleVoiceCallStatusEnum_GoogleVoiceCallStatusToJSON,
} from "../enums/google_voice_call_status.js";

export const protobufPackage = "google.ads.googleads.v17.resources";

/**
 * A call view that includes data for call tracking of call-only ads or call
 * extensions.
 */
export interface CallView {
  /**
   * Output only. The resource name of the call view.
   * Call view resource names have the form:
   *
   * `customers/{customer_id}/callViews/{call_detail_id}`
   */
  resourceName: string;
  /** Output only. Country code of the caller. */
  callerCountryCode: string;
  /**
   * Output only. Area code of the caller. Null if the call duration is shorter
   * than 15 seconds.
   */
  callerAreaCode: string;
  /** Output only. The advertiser-provided call duration in seconds. */
  callDurationSeconds: Long;
  /** Output only. The advertiser-provided call start date time. */
  startCallDateTime: string;
  /** Output only. The advertiser-provided call end date time. */
  endCallDateTime: string;
  /** Output only. The call tracking display location. */
  callTrackingDisplayLocation: CallTrackingDisplayLocationEnum_CallTrackingDisplayLocation;
  /** Output only. The type of the call. */
  type: CallTypeEnum_CallType;
  /** Output only. The status of the call. */
  callStatus: GoogleVoiceCallStatusEnum_GoogleVoiceCallStatus;
}

function createBaseCallView(): CallView {
  return {
    resourceName: "",
    callerCountryCode: "",
    callerAreaCode: "",
    callDurationSeconds: Long.ZERO,
    startCallDateTime: "",
    endCallDateTime: "",
    callTrackingDisplayLocation: 0,
    type: 0,
    callStatus: 0,
  };
}

export const CallView: MessageFns<CallView> = {
  encode(message: CallView, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.callerCountryCode !== "") {
      writer.uint32(18).string(message.callerCountryCode);
    }
    if (message.callerAreaCode !== "") {
      writer.uint32(26).string(message.callerAreaCode);
    }
    if (!message.callDurationSeconds.equals(Long.ZERO)) {
      writer.uint32(32).int64(message.callDurationSeconds.toString());
    }
    if (message.startCallDateTime !== "") {
      writer.uint32(42).string(message.startCallDateTime);
    }
    if (message.endCallDateTime !== "") {
      writer.uint32(50).string(message.endCallDateTime);
    }
    if (message.callTrackingDisplayLocation !== 0) {
      writer.uint32(56).int32(message.callTrackingDisplayLocation);
    }
    if (message.type !== 0) {
      writer.uint32(64).int32(message.type);
    }
    if (message.callStatus !== 0) {
      writer.uint32(72).int32(message.callStatus);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CallView {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCallView();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.callerCountryCode = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.callerAreaCode = reader.string();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.callDurationSeconds = Long.fromString(reader.int64().toString());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.startCallDateTime = reader.string();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.endCallDateTime = reader.string();
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.callTrackingDisplayLocation = reader.int32() as any;
          continue;
        case 8:
          if (tag !== 64) {
            break;
          }

          message.type = reader.int32() as any;
          continue;
        case 9:
          if (tag !== 72) {
            break;
          }

          message.callStatus = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CallView {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      callerCountryCode: isSet(object.callerCountryCode) ? globalThis.String(object.callerCountryCode) : "",
      callerAreaCode: isSet(object.callerAreaCode) ? globalThis.String(object.callerAreaCode) : "",
      callDurationSeconds: isSet(object.callDurationSeconds) ? Long.fromValue(object.callDurationSeconds) : Long.ZERO,
      startCallDateTime: isSet(object.startCallDateTime) ? globalThis.String(object.startCallDateTime) : "",
      endCallDateTime: isSet(object.endCallDateTime) ? globalThis.String(object.endCallDateTime) : "",
      callTrackingDisplayLocation: isSet(object.callTrackingDisplayLocation)
        ? callTrackingDisplayLocationEnum_CallTrackingDisplayLocationFromJSON(object.callTrackingDisplayLocation)
        : 0,
      type: isSet(object.type) ? callTypeEnum_CallTypeFromJSON(object.type) : 0,
      callStatus: isSet(object.callStatus)
        ? googleVoiceCallStatusEnum_GoogleVoiceCallStatusFromJSON(object.callStatus)
        : 0,
    };
  },

  toJSON(message: CallView): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.callerCountryCode !== "") {
      obj.callerCountryCode = message.callerCountryCode;
    }
    if (message.callerAreaCode !== "") {
      obj.callerAreaCode = message.callerAreaCode;
    }
    if (!message.callDurationSeconds.equals(Long.ZERO)) {
      obj.callDurationSeconds = (message.callDurationSeconds || Long.ZERO).toString();
    }
    if (message.startCallDateTime !== "") {
      obj.startCallDateTime = message.startCallDateTime;
    }
    if (message.endCallDateTime !== "") {
      obj.endCallDateTime = message.endCallDateTime;
    }
    if (message.callTrackingDisplayLocation !== 0) {
      obj.callTrackingDisplayLocation = callTrackingDisplayLocationEnum_CallTrackingDisplayLocationToJSON(
        message.callTrackingDisplayLocation,
      );
    }
    if (message.type !== 0) {
      obj.type = callTypeEnum_CallTypeToJSON(message.type);
    }
    if (message.callStatus !== 0) {
      obj.callStatus = googleVoiceCallStatusEnum_GoogleVoiceCallStatusToJSON(message.callStatus);
    }
    return obj;
  },

  create(base?: DeepPartial<CallView>): CallView {
    return CallView.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CallView>): CallView {
    const message = createBaseCallView();
    message.resourceName = object.resourceName ?? "";
    message.callerCountryCode = object.callerCountryCode ?? "";
    message.callerAreaCode = object.callerAreaCode ?? "";
    message.callDurationSeconds = (object.callDurationSeconds !== undefined && object.callDurationSeconds !== null)
      ? Long.fromValue(object.callDurationSeconds)
      : Long.ZERO;
    message.startCallDateTime = object.startCallDateTime ?? "";
    message.endCallDateTime = object.endCallDateTime ?? "";
    message.callTrackingDisplayLocation = object.callTrackingDisplayLocation ?? 0;
    message.type = object.type ?? 0;
    message.callStatus = object.callStatus ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
