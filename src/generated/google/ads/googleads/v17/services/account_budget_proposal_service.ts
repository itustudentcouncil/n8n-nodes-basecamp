// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/services/account_budget_proposal_service.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { FieldMask } from "../../../../protobuf/field_mask.js";
import { AccountBudgetProposal } from "../resources/account_budget_proposal.js";

export const protobufPackage = "google.ads.googleads.v17.services";

/**
 * Request message for
 * [AccountBudgetProposalService.MutateAccountBudgetProposal][google.ads.googleads.v17.services.AccountBudgetProposalService.MutateAccountBudgetProposal].
 */
export interface MutateAccountBudgetProposalRequest {
  /** Required. The ID of the customer. */
  customerId: string;
  /**
   * Required. The operation to perform on an individual account-level budget
   * proposal.
   */
  operation:
    | AccountBudgetProposalOperation
    | undefined;
  /**
   * If true, the request is validated but not executed. Only errors are
   * returned, not results.
   */
  validateOnly: boolean;
}

/**
 * A single operation to propose the creation of a new account-level budget or
 * edit/end/remove an existing one.
 */
export interface AccountBudgetProposalOperation {
  /**
   * FieldMask that determines which budget fields are modified.  While budgets
   * may be modified, proposals that propose such modifications are final.
   * Therefore, update operations are not supported for proposals.
   *
   * Proposals that modify budgets have the 'update' proposal type.  Specifying
   * a mask for any other proposal type is considered an error.
   */
  updateMask:
    | string[]
    | undefined;
  /**
   * Create operation: A new proposal to create a new budget, edit an
   * existing budget, end an actively running budget, or remove an approved
   * budget scheduled to start in the future.
   * No resource name is expected for the new proposal.
   */
  create?:
    | AccountBudgetProposal
    | undefined;
  /**
   * Remove operation: A resource name for the removed proposal is expected,
   * in this format:
   *
   * `customers/{customer_id}/accountBudgetProposals/{account_budget_proposal_id}`
   * A request may be cancelled iff it is pending.
   */
  remove?: string | undefined;
}

/** Response message for account-level budget mutate operations. */
export interface MutateAccountBudgetProposalResponse {
  /** The result of the mutate. */
  result: MutateAccountBudgetProposalResult | undefined;
}

/** The result for the account budget proposal mutate. */
export interface MutateAccountBudgetProposalResult {
  /** Returned for successful operations. */
  resourceName: string;
}

function createBaseMutateAccountBudgetProposalRequest(): MutateAccountBudgetProposalRequest {
  return { customerId: "", operation: undefined, validateOnly: false };
}

export const MutateAccountBudgetProposalRequest: MessageFns<MutateAccountBudgetProposalRequest> = {
  encode(message: MutateAccountBudgetProposalRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.customerId !== "") {
      writer.uint32(10).string(message.customerId);
    }
    if (message.operation !== undefined) {
      AccountBudgetProposalOperation.encode(message.operation, writer.uint32(18).fork()).join();
    }
    if (message.validateOnly !== false) {
      writer.uint32(24).bool(message.validateOnly);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): MutateAccountBudgetProposalRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMutateAccountBudgetProposalRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.customerId = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.operation = AccountBudgetProposalOperation.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.validateOnly = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MutateAccountBudgetProposalRequest {
    return {
      customerId: isSet(object.customerId) ? globalThis.String(object.customerId) : "",
      operation: isSet(object.operation) ? AccountBudgetProposalOperation.fromJSON(object.operation) : undefined,
      validateOnly: isSet(object.validateOnly) ? globalThis.Boolean(object.validateOnly) : false,
    };
  },

  toJSON(message: MutateAccountBudgetProposalRequest): unknown {
    const obj: any = {};
    if (message.customerId !== "") {
      obj.customerId = message.customerId;
    }
    if (message.operation !== undefined) {
      obj.operation = AccountBudgetProposalOperation.toJSON(message.operation);
    }
    if (message.validateOnly !== false) {
      obj.validateOnly = message.validateOnly;
    }
    return obj;
  },

  create(base?: DeepPartial<MutateAccountBudgetProposalRequest>): MutateAccountBudgetProposalRequest {
    return MutateAccountBudgetProposalRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<MutateAccountBudgetProposalRequest>): MutateAccountBudgetProposalRequest {
    const message = createBaseMutateAccountBudgetProposalRequest();
    message.customerId = object.customerId ?? "";
    message.operation = (object.operation !== undefined && object.operation !== null)
      ? AccountBudgetProposalOperation.fromPartial(object.operation)
      : undefined;
    message.validateOnly = object.validateOnly ?? false;
    return message;
  },
};

function createBaseAccountBudgetProposalOperation(): AccountBudgetProposalOperation {
  return { updateMask: undefined, create: undefined, remove: undefined };
}

export const AccountBudgetProposalOperation: MessageFns<AccountBudgetProposalOperation> = {
  encode(message: AccountBudgetProposalOperation, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.updateMask !== undefined) {
      FieldMask.encode(FieldMask.wrap(message.updateMask), writer.uint32(26).fork()).join();
    }
    if (message.create !== undefined) {
      AccountBudgetProposal.encode(message.create, writer.uint32(18).fork()).join();
    }
    if (message.remove !== undefined) {
      writer.uint32(10).string(message.remove);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AccountBudgetProposalOperation {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAccountBudgetProposalOperation();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 3:
          if (tag !== 26) {
            break;
          }

          message.updateMask = FieldMask.unwrap(FieldMask.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.create = AccountBudgetProposal.decode(reader, reader.uint32());
          continue;
        case 1:
          if (tag !== 10) {
            break;
          }

          message.remove = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): AccountBudgetProposalOperation {
    return {
      updateMask: isSet(object.updateMask) ? FieldMask.unwrap(FieldMask.fromJSON(object.updateMask)) : undefined,
      create: isSet(object.create) ? AccountBudgetProposal.fromJSON(object.create) : undefined,
      remove: isSet(object.remove) ? globalThis.String(object.remove) : undefined,
    };
  },

  toJSON(message: AccountBudgetProposalOperation): unknown {
    const obj: any = {};
    if (message.updateMask !== undefined) {
      obj.updateMask = FieldMask.toJSON(FieldMask.wrap(message.updateMask));
    }
    if (message.create !== undefined) {
      obj.create = AccountBudgetProposal.toJSON(message.create);
    }
    if (message.remove !== undefined) {
      obj.remove = message.remove;
    }
    return obj;
  },

  create(base?: DeepPartial<AccountBudgetProposalOperation>): AccountBudgetProposalOperation {
    return AccountBudgetProposalOperation.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<AccountBudgetProposalOperation>): AccountBudgetProposalOperation {
    const message = createBaseAccountBudgetProposalOperation();
    message.updateMask = object.updateMask ?? undefined;
    message.create = (object.create !== undefined && object.create !== null)
      ? AccountBudgetProposal.fromPartial(object.create)
      : undefined;
    message.remove = object.remove ?? undefined;
    return message;
  },
};

function createBaseMutateAccountBudgetProposalResponse(): MutateAccountBudgetProposalResponse {
  return { result: undefined };
}

export const MutateAccountBudgetProposalResponse: MessageFns<MutateAccountBudgetProposalResponse> = {
  encode(message: MutateAccountBudgetProposalResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.result !== undefined) {
      MutateAccountBudgetProposalResult.encode(message.result, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): MutateAccountBudgetProposalResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMutateAccountBudgetProposalResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 2:
          if (tag !== 18) {
            break;
          }

          message.result = MutateAccountBudgetProposalResult.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MutateAccountBudgetProposalResponse {
    return { result: isSet(object.result) ? MutateAccountBudgetProposalResult.fromJSON(object.result) : undefined };
  },

  toJSON(message: MutateAccountBudgetProposalResponse): unknown {
    const obj: any = {};
    if (message.result !== undefined) {
      obj.result = MutateAccountBudgetProposalResult.toJSON(message.result);
    }
    return obj;
  },

  create(base?: DeepPartial<MutateAccountBudgetProposalResponse>): MutateAccountBudgetProposalResponse {
    return MutateAccountBudgetProposalResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<MutateAccountBudgetProposalResponse>): MutateAccountBudgetProposalResponse {
    const message = createBaseMutateAccountBudgetProposalResponse();
    message.result = (object.result !== undefined && object.result !== null)
      ? MutateAccountBudgetProposalResult.fromPartial(object.result)
      : undefined;
    return message;
  },
};

function createBaseMutateAccountBudgetProposalResult(): MutateAccountBudgetProposalResult {
  return { resourceName: "" };
}

export const MutateAccountBudgetProposalResult: MessageFns<MutateAccountBudgetProposalResult> = {
  encode(message: MutateAccountBudgetProposalResult, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): MutateAccountBudgetProposalResult {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMutateAccountBudgetProposalResult();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MutateAccountBudgetProposalResult {
    return { resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "" };
  },

  toJSON(message: MutateAccountBudgetProposalResult): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    return obj;
  },

  create(base?: DeepPartial<MutateAccountBudgetProposalResult>): MutateAccountBudgetProposalResult {
    return MutateAccountBudgetProposalResult.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<MutateAccountBudgetProposalResult>): MutateAccountBudgetProposalResult {
    const message = createBaseMutateAccountBudgetProposalResult();
    message.resourceName = object.resourceName ?? "";
    return message;
  },
};

/**
 * A service for managing account-level budgets through proposals.
 *
 * A proposal is a request to create a new budget or make changes to an
 * existing one.
 *
 * Mutates:
 * The CREATE operation creates a new proposal.
 * UPDATE operations aren't supported.
 * The REMOVE operation cancels a pending proposal.
 */
export type AccountBudgetProposalServiceDefinition = typeof AccountBudgetProposalServiceDefinition;
export const AccountBudgetProposalServiceDefinition = {
  name: "AccountBudgetProposalService",
  fullName: "google.ads.googleads.v17.services.AccountBudgetProposalService",
  methods: {
    /**
     * Creates, updates, or removes account budget proposals.  Operation statuses
     * are returned.
     *
     * List of thrown errors:
     *   [AccountBudgetProposalError]()
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [DateError]()
     *   [FieldError]()
     *   [FieldMaskError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [MutateError]()
     *   [QuotaError]()
     *   [RequestError]()
     *   [StringLengthError]()
     */
    mutateAccountBudgetProposal: {
      name: "MutateAccountBudgetProposal",
      requestType: MutateAccountBudgetProposalRequest,
      requestStream: false,
      responseType: MutateAccountBudgetProposalResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              21,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              95,
              105,
              100,
              44,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
            ]),
          ],
          578365826: [
            Buffer.from([
              65,
              58,
              1,
              42,
              34,
              60,
              47,
              118,
              49,
              55,
              47,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              115,
              47,
              123,
              99,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              95,
              105,
              100,
              61,
              42,
              125,
              47,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              66,
              117,
              100,
              103,
              101,
              116,
              80,
              114,
              111,
              112,
              111,
              115,
              97,
              108,
              115,
              58,
              109,
              117,
              116,
              97,
              116,
              101,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface AccountBudgetProposalServiceImplementation<CallContextExt = {}> {
  /**
   * Creates, updates, or removes account budget proposals.  Operation statuses
   * are returned.
   *
   * List of thrown errors:
   *   [AccountBudgetProposalError]()
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [DatabaseError]()
   *   [DateError]()
   *   [FieldError]()
   *   [FieldMaskError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [MutateError]()
   *   [QuotaError]()
   *   [RequestError]()
   *   [StringLengthError]()
   */
  mutateAccountBudgetProposal(
    request: MutateAccountBudgetProposalRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<MutateAccountBudgetProposalResponse>>;
}

export interface AccountBudgetProposalServiceClient<CallOptionsExt = {}> {
  /**
   * Creates, updates, or removes account budget proposals.  Operation statuses
   * are returned.
   *
   * List of thrown errors:
   *   [AccountBudgetProposalError]()
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [DatabaseError]()
   *   [DateError]()
   *   [FieldError]()
   *   [FieldMaskError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [MutateError]()
   *   [QuotaError]()
   *   [RequestError]()
   *   [StringLengthError]()
   */
  mutateAccountBudgetProposal(
    request: DeepPartial<MutateAccountBudgetProposalRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<MutateAccountBudgetProposalResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
