// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/ad_format_type.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/** Container for enumeration of Google Ads format types. */
export interface AdFormatTypeEnum {
}

/**
 * Enumerates Google Ads format types.
 *
 * Note that this segmentation is available only for Video and Discovery
 * campaigns. For assets, only video assets are supported.
 */
export enum AdFormatTypeEnum_AdFormatType {
  /** UNSPECIFIED - No value has been specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /**
   * OTHER - Value assigned to formats (such as experimental formats) which don't
   * support format segmentation in Video and Discovery campaigns.
   *
   * Note that these formats may change categories in the future, for example
   * if an experimental format is exposed or a new format is added. We
   * strongly recommend to not rely on this field for long term decisions.
   */
  OTHER = 2,
  /**
   * UNSEGMENTED - Value assigned for Video TrueView for Action campaigns statistics.
   *
   * Note that statistics with this value may change categories in the future,
   * for example if format segmentation support is added for new campaign
   * types. We strongly recommend to not rely on this field for long term
   * decisions.
   */
  UNSEGMENTED = 3,
  /** INSTREAM_SKIPPABLE - Skippable in-stream ads. */
  INSTREAM_SKIPPABLE = 4,
  /** INSTREAM_NON_SKIPPABLE - Non-skippable in-stream ads. */
  INSTREAM_NON_SKIPPABLE = 5,
  /**
   * INFEED - In-feed YouTube or discovery image ads served on feed surfaces (e.g.
   * Discover Feed, YouTube Home, etc.).
   */
  INFEED = 6,
  /** BUMPER - Short (<7 secs) in-stream non-skippable YouTube ads. */
  BUMPER = 7,
  /** OUTSTREAM - Outstream ads. */
  OUTSTREAM = 8,
  /** MASTHEAD - Masthead ads. */
  MASTHEAD = 9,
  /** AUDIO - Audio ads. */
  AUDIO = 10,
  /**
   * SHORTS - Vertical full-screen video or discovery image ad served on YouTube Shorts
   * or BrandConnect ads served as organic YouTube Shorts.
   */
  SHORTS = 11,
  UNRECOGNIZED = -1,
}

export function adFormatTypeEnum_AdFormatTypeFromJSON(object: any): AdFormatTypeEnum_AdFormatType {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return AdFormatTypeEnum_AdFormatType.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return AdFormatTypeEnum_AdFormatType.UNKNOWN;
    case 2:
    case "OTHER":
      return AdFormatTypeEnum_AdFormatType.OTHER;
    case 3:
    case "UNSEGMENTED":
      return AdFormatTypeEnum_AdFormatType.UNSEGMENTED;
    case 4:
    case "INSTREAM_SKIPPABLE":
      return AdFormatTypeEnum_AdFormatType.INSTREAM_SKIPPABLE;
    case 5:
    case "INSTREAM_NON_SKIPPABLE":
      return AdFormatTypeEnum_AdFormatType.INSTREAM_NON_SKIPPABLE;
    case 6:
    case "INFEED":
      return AdFormatTypeEnum_AdFormatType.INFEED;
    case 7:
    case "BUMPER":
      return AdFormatTypeEnum_AdFormatType.BUMPER;
    case 8:
    case "OUTSTREAM":
      return AdFormatTypeEnum_AdFormatType.OUTSTREAM;
    case 9:
    case "MASTHEAD":
      return AdFormatTypeEnum_AdFormatType.MASTHEAD;
    case 10:
    case "AUDIO":
      return AdFormatTypeEnum_AdFormatType.AUDIO;
    case 11:
    case "SHORTS":
      return AdFormatTypeEnum_AdFormatType.SHORTS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return AdFormatTypeEnum_AdFormatType.UNRECOGNIZED;
  }
}

export function adFormatTypeEnum_AdFormatTypeToJSON(object: AdFormatTypeEnum_AdFormatType): string {
  switch (object) {
    case AdFormatTypeEnum_AdFormatType.UNSPECIFIED:
      return "UNSPECIFIED";
    case AdFormatTypeEnum_AdFormatType.UNKNOWN:
      return "UNKNOWN";
    case AdFormatTypeEnum_AdFormatType.OTHER:
      return "OTHER";
    case AdFormatTypeEnum_AdFormatType.UNSEGMENTED:
      return "UNSEGMENTED";
    case AdFormatTypeEnum_AdFormatType.INSTREAM_SKIPPABLE:
      return "INSTREAM_SKIPPABLE";
    case AdFormatTypeEnum_AdFormatType.INSTREAM_NON_SKIPPABLE:
      return "INSTREAM_NON_SKIPPABLE";
    case AdFormatTypeEnum_AdFormatType.INFEED:
      return "INFEED";
    case AdFormatTypeEnum_AdFormatType.BUMPER:
      return "BUMPER";
    case AdFormatTypeEnum_AdFormatType.OUTSTREAM:
      return "OUTSTREAM";
    case AdFormatTypeEnum_AdFormatType.MASTHEAD:
      return "MASTHEAD";
    case AdFormatTypeEnum_AdFormatType.AUDIO:
      return "AUDIO";
    case AdFormatTypeEnum_AdFormatType.SHORTS:
      return "SHORTS";
    case AdFormatTypeEnum_AdFormatType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseAdFormatTypeEnum(): AdFormatTypeEnum {
  return {};
}

export const AdFormatTypeEnum: MessageFns<AdFormatTypeEnum> = {
  encode(_: AdFormatTypeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AdFormatTypeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAdFormatTypeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): AdFormatTypeEnum {
    return {};
  },

  toJSON(_: AdFormatTypeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<AdFormatTypeEnum>): AdFormatTypeEnum {
    return AdFormatTypeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<AdFormatTypeEnum>): AdFormatTypeEnum {
    const message = createBaseAdFormatTypeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
