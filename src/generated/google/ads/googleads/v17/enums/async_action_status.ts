// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/async_action_status.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/** Container for enum describing the experiment async action status. */
export interface AsyncActionStatusEnum {
}

/** The async action status of the experiment. */
export enum AsyncActionStatusEnum_AsyncActionStatus {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The value is unknown in this version. */
  UNKNOWN = 1,
  /** NOT_STARTED - Action has not started. */
  NOT_STARTED = 2,
  /** IN_PROGRESS - Action is in progress. */
  IN_PROGRESS = 3,
  /** COMPLETED - Action has completed successfully. */
  COMPLETED = 4,
  /** FAILED - Action has failed. */
  FAILED = 5,
  /** COMPLETED_WITH_WARNING - Action has completed successfully with warnings. */
  COMPLETED_WITH_WARNING = 6,
  UNRECOGNIZED = -1,
}

export function asyncActionStatusEnum_AsyncActionStatusFromJSON(object: any): AsyncActionStatusEnum_AsyncActionStatus {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return AsyncActionStatusEnum_AsyncActionStatus.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return AsyncActionStatusEnum_AsyncActionStatus.UNKNOWN;
    case 2:
    case "NOT_STARTED":
      return AsyncActionStatusEnum_AsyncActionStatus.NOT_STARTED;
    case 3:
    case "IN_PROGRESS":
      return AsyncActionStatusEnum_AsyncActionStatus.IN_PROGRESS;
    case 4:
    case "COMPLETED":
      return AsyncActionStatusEnum_AsyncActionStatus.COMPLETED;
    case 5:
    case "FAILED":
      return AsyncActionStatusEnum_AsyncActionStatus.FAILED;
    case 6:
    case "COMPLETED_WITH_WARNING":
      return AsyncActionStatusEnum_AsyncActionStatus.COMPLETED_WITH_WARNING;
    case -1:
    case "UNRECOGNIZED":
    default:
      return AsyncActionStatusEnum_AsyncActionStatus.UNRECOGNIZED;
  }
}

export function asyncActionStatusEnum_AsyncActionStatusToJSON(object: AsyncActionStatusEnum_AsyncActionStatus): string {
  switch (object) {
    case AsyncActionStatusEnum_AsyncActionStatus.UNSPECIFIED:
      return "UNSPECIFIED";
    case AsyncActionStatusEnum_AsyncActionStatus.UNKNOWN:
      return "UNKNOWN";
    case AsyncActionStatusEnum_AsyncActionStatus.NOT_STARTED:
      return "NOT_STARTED";
    case AsyncActionStatusEnum_AsyncActionStatus.IN_PROGRESS:
      return "IN_PROGRESS";
    case AsyncActionStatusEnum_AsyncActionStatus.COMPLETED:
      return "COMPLETED";
    case AsyncActionStatusEnum_AsyncActionStatus.FAILED:
      return "FAILED";
    case AsyncActionStatusEnum_AsyncActionStatus.COMPLETED_WITH_WARNING:
      return "COMPLETED_WITH_WARNING";
    case AsyncActionStatusEnum_AsyncActionStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseAsyncActionStatusEnum(): AsyncActionStatusEnum {
  return {};
}

export const AsyncActionStatusEnum: MessageFns<AsyncActionStatusEnum> = {
  encode(_: AsyncActionStatusEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AsyncActionStatusEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAsyncActionStatusEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): AsyncActionStatusEnum {
    return {};
  },

  toJSON(_: AsyncActionStatusEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<AsyncActionStatusEnum>): AsyncActionStatusEnum {
    return AsyncActionStatusEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<AsyncActionStatusEnum>): AsyncActionStatusEnum {
    const message = createBaseAsyncActionStatusEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
