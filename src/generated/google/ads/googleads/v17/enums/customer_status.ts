// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/customer_status.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/** Container for enum describing possible statuses of a customer. */
export interface CustomerStatusEnum {
}

/** Possible statuses of a customer. */
export enum CustomerStatusEnum_CustomerStatus {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** ENABLED - Indicates an active account able to serve ads. */
  ENABLED = 2,
  /**
   * CANCELED - Indicates a canceled account unable to serve ads.
   * Can be reactivated by an admin user.
   */
  CANCELED = 3,
  /**
   * SUSPENDED - Indicates a suspended account unable to serve ads.
   * May only be activated by Google support.
   */
  SUSPENDED = 4,
  /**
   * CLOSED - Indicates a closed account unable to serve ads.
   * Test account will also have CLOSED status.
   * Status is permanent and may not be reopened.
   */
  CLOSED = 5,
  UNRECOGNIZED = -1,
}

export function customerStatusEnum_CustomerStatusFromJSON(object: any): CustomerStatusEnum_CustomerStatus {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return CustomerStatusEnum_CustomerStatus.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return CustomerStatusEnum_CustomerStatus.UNKNOWN;
    case 2:
    case "ENABLED":
      return CustomerStatusEnum_CustomerStatus.ENABLED;
    case 3:
    case "CANCELED":
      return CustomerStatusEnum_CustomerStatus.CANCELED;
    case 4:
    case "SUSPENDED":
      return CustomerStatusEnum_CustomerStatus.SUSPENDED;
    case 5:
    case "CLOSED":
      return CustomerStatusEnum_CustomerStatus.CLOSED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return CustomerStatusEnum_CustomerStatus.UNRECOGNIZED;
  }
}

export function customerStatusEnum_CustomerStatusToJSON(object: CustomerStatusEnum_CustomerStatus): string {
  switch (object) {
    case CustomerStatusEnum_CustomerStatus.UNSPECIFIED:
      return "UNSPECIFIED";
    case CustomerStatusEnum_CustomerStatus.UNKNOWN:
      return "UNKNOWN";
    case CustomerStatusEnum_CustomerStatus.ENABLED:
      return "ENABLED";
    case CustomerStatusEnum_CustomerStatus.CANCELED:
      return "CANCELED";
    case CustomerStatusEnum_CustomerStatus.SUSPENDED:
      return "SUSPENDED";
    case CustomerStatusEnum_CustomerStatus.CLOSED:
      return "CLOSED";
    case CustomerStatusEnum_CustomerStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseCustomerStatusEnum(): CustomerStatusEnum {
  return {};
}

export const CustomerStatusEnum: MessageFns<CustomerStatusEnum> = {
  encode(_: CustomerStatusEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomerStatusEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomerStatusEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): CustomerStatusEnum {
    return {};
  },

  toJSON(_: CustomerStatusEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<CustomerStatusEnum>): CustomerStatusEnum {
    return CustomerStatusEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<CustomerStatusEnum>): CustomerStatusEnum {
    const message = createBaseCustomerStatusEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
