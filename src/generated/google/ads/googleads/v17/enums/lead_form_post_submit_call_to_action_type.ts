// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/lead_form_post_submit_call_to_action_type.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/** Describes the type of post-submit call-to-action phrases for a lead form. */
export interface LeadFormPostSubmitCallToActionTypeEnum {
}

/**
 * Enum describing the type of post-submit call-to-action phrases for a lead
 * form.
 */
export enum LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** VISIT_SITE - Visit site. */
  VISIT_SITE = 2,
  /** DOWNLOAD - Download. */
  DOWNLOAD = 3,
  /** LEARN_MORE - Learn more. */
  LEARN_MORE = 4,
  /** SHOP_NOW - Shop now. */
  SHOP_NOW = 5,
  UNRECOGNIZED = -1,
}

export function leadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionTypeFromJSON(
  object: any,
): LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.UNKNOWN;
    case 2:
    case "VISIT_SITE":
      return LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.VISIT_SITE;
    case 3:
    case "DOWNLOAD":
      return LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.DOWNLOAD;
    case 4:
    case "LEARN_MORE":
      return LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.LEARN_MORE;
    case 5:
    case "SHOP_NOW":
      return LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.SHOP_NOW;
    case -1:
    case "UNRECOGNIZED":
    default:
      return LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.UNRECOGNIZED;
  }
}

export function leadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionTypeToJSON(
  object: LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType,
): string {
  switch (object) {
    case LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.UNSPECIFIED:
      return "UNSPECIFIED";
    case LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.UNKNOWN:
      return "UNKNOWN";
    case LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.VISIT_SITE:
      return "VISIT_SITE";
    case LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.DOWNLOAD:
      return "DOWNLOAD";
    case LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.LEARN_MORE:
      return "LEARN_MORE";
    case LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.SHOP_NOW:
      return "SHOP_NOW";
    case LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseLeadFormPostSubmitCallToActionTypeEnum(): LeadFormPostSubmitCallToActionTypeEnum {
  return {};
}

export const LeadFormPostSubmitCallToActionTypeEnum: MessageFns<LeadFormPostSubmitCallToActionTypeEnum> = {
  encode(_: LeadFormPostSubmitCallToActionTypeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): LeadFormPostSubmitCallToActionTypeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseLeadFormPostSubmitCallToActionTypeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): LeadFormPostSubmitCallToActionTypeEnum {
    return {};
  },

  toJSON(_: LeadFormPostSubmitCallToActionTypeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<LeadFormPostSubmitCallToActionTypeEnum>): LeadFormPostSubmitCallToActionTypeEnum {
    return LeadFormPostSubmitCallToActionTypeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<LeadFormPostSubmitCallToActionTypeEnum>): LeadFormPostSubmitCallToActionTypeEnum {
    const message = createBaseLeadFormPostSubmitCallToActionTypeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
