// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/real_estate_placeholder_field.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/**
 * Values for Real Estate placeholder fields.
 * For more information about dynamic remarketing feeds, see
 * https://support.google.com/google-ads/answer/6053288.
 */
export interface RealEstatePlaceholderFieldEnum {
}

/** Possible values for Real Estate placeholder fields. */
export enum RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** LISTING_ID - Data Type: STRING. Unique ID. */
  LISTING_ID = 2,
  /**
   * LISTING_NAME - Data Type: STRING. Main headline with listing name to be shown in dynamic
   * ad.
   */
  LISTING_NAME = 3,
  /** CITY_NAME - Data Type: STRING. City name to be shown in dynamic ad. */
  CITY_NAME = 4,
  /** DESCRIPTION - Data Type: STRING. Description of listing to be shown in dynamic ad. */
  DESCRIPTION = 5,
  /** ADDRESS - Data Type: STRING. Complete listing address, including postal code. */
  ADDRESS = 6,
  /**
   * PRICE - Data Type: STRING. Price to be shown in the ad.
   * Example: "100.00 USD"
   */
  PRICE = 7,
  /**
   * FORMATTED_PRICE - Data Type: STRING. Formatted price to be shown in the ad.
   * Example: "Starting at $100.00 USD", "$80 - $100"
   */
  FORMATTED_PRICE = 8,
  /** IMAGE_URL - Data Type: URL. Image to be displayed in the ad. */
  IMAGE_URL = 9,
  /**
   * PROPERTY_TYPE - Data Type: STRING. Type of property (house, condo, apartment, etc.) used
   * to group like items together for recommendation engine.
   */
  PROPERTY_TYPE = 10,
  /**
   * LISTING_TYPE - Data Type: STRING. Type of listing (resale, rental, foreclosure, etc.)
   * used to group like items together for recommendation engine.
   */
  LISTING_TYPE = 11,
  /** CONTEXTUAL_KEYWORDS - Data Type: STRING_LIST. Keywords used for product retrieval. */
  CONTEXTUAL_KEYWORDS = 12,
  /**
   * FINAL_URLS - Data Type: URL_LIST. Final URLs to be used in ad when using Upgraded
   * URLs; the more specific the better (for example, the individual URL of a
   * specific listing and its location).
   */
  FINAL_URLS = 13,
  /**
   * FINAL_MOBILE_URLS - Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
   * URLs.
   */
  FINAL_MOBILE_URLS = 14,
  /** TRACKING_URL - Data Type: URL. Tracking template for the ad when using Upgraded URLs. */
  TRACKING_URL = 15,
  /**
   * ANDROID_APP_LINK - Data Type: STRING. Android app link. Must be formatted as:
   * android-app://{package_id}/{scheme}/{host_path}.
   * The components are defined as follows:
   * package_id: app ID as specified in Google Play.
   * scheme: the scheme to pass to the application. Can be HTTP, or a custom
   *   scheme.
   * host_path: identifies the specific content within your application.
   */
  ANDROID_APP_LINK = 16,
  /**
   * SIMILAR_LISTING_IDS - Data Type: STRING_LIST. List of recommended listing IDs to show together
   * with this item.
   */
  SIMILAR_LISTING_IDS = 17,
  /** IOS_APP_LINK - Data Type: STRING. iOS app link. */
  IOS_APP_LINK = 18,
  /** IOS_APP_STORE_ID - Data Type: INT64. iOS app store ID. */
  IOS_APP_STORE_ID = 19,
  UNRECOGNIZED = -1,
}

export function realEstatePlaceholderFieldEnum_RealEstatePlaceholderFieldFromJSON(
  object: any,
): RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.UNKNOWN;
    case 2:
    case "LISTING_ID":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.LISTING_ID;
    case 3:
    case "LISTING_NAME":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.LISTING_NAME;
    case 4:
    case "CITY_NAME":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.CITY_NAME;
    case 5:
    case "DESCRIPTION":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.DESCRIPTION;
    case 6:
    case "ADDRESS":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.ADDRESS;
    case 7:
    case "PRICE":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.PRICE;
    case 8:
    case "FORMATTED_PRICE":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.FORMATTED_PRICE;
    case 9:
    case "IMAGE_URL":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.IMAGE_URL;
    case 10:
    case "PROPERTY_TYPE":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.PROPERTY_TYPE;
    case 11:
    case "LISTING_TYPE":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.LISTING_TYPE;
    case 12:
    case "CONTEXTUAL_KEYWORDS":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.CONTEXTUAL_KEYWORDS;
    case 13:
    case "FINAL_URLS":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.FINAL_URLS;
    case 14:
    case "FINAL_MOBILE_URLS":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.FINAL_MOBILE_URLS;
    case 15:
    case "TRACKING_URL":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.TRACKING_URL;
    case 16:
    case "ANDROID_APP_LINK":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.ANDROID_APP_LINK;
    case 17:
    case "SIMILAR_LISTING_IDS":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.SIMILAR_LISTING_IDS;
    case 18:
    case "IOS_APP_LINK":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.IOS_APP_LINK;
    case 19:
    case "IOS_APP_STORE_ID":
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.IOS_APP_STORE_ID;
    case -1:
    case "UNRECOGNIZED":
    default:
      return RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.UNRECOGNIZED;
  }
}

export function realEstatePlaceholderFieldEnum_RealEstatePlaceholderFieldToJSON(
  object: RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField,
): string {
  switch (object) {
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.UNSPECIFIED:
      return "UNSPECIFIED";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.UNKNOWN:
      return "UNKNOWN";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.LISTING_ID:
      return "LISTING_ID";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.LISTING_NAME:
      return "LISTING_NAME";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.CITY_NAME:
      return "CITY_NAME";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.DESCRIPTION:
      return "DESCRIPTION";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.ADDRESS:
      return "ADDRESS";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.PRICE:
      return "PRICE";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.FORMATTED_PRICE:
      return "FORMATTED_PRICE";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.IMAGE_URL:
      return "IMAGE_URL";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.PROPERTY_TYPE:
      return "PROPERTY_TYPE";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.LISTING_TYPE:
      return "LISTING_TYPE";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.CONTEXTUAL_KEYWORDS:
      return "CONTEXTUAL_KEYWORDS";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.FINAL_URLS:
      return "FINAL_URLS";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.FINAL_MOBILE_URLS:
      return "FINAL_MOBILE_URLS";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.TRACKING_URL:
      return "TRACKING_URL";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.ANDROID_APP_LINK:
      return "ANDROID_APP_LINK";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.SIMILAR_LISTING_IDS:
      return "SIMILAR_LISTING_IDS";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.IOS_APP_LINK:
      return "IOS_APP_LINK";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.IOS_APP_STORE_ID:
      return "IOS_APP_STORE_ID";
    case RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseRealEstatePlaceholderFieldEnum(): RealEstatePlaceholderFieldEnum {
  return {};
}

export const RealEstatePlaceholderFieldEnum: MessageFns<RealEstatePlaceholderFieldEnum> = {
  encode(_: RealEstatePlaceholderFieldEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): RealEstatePlaceholderFieldEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRealEstatePlaceholderFieldEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): RealEstatePlaceholderFieldEnum {
    return {};
  },

  toJSON(_: RealEstatePlaceholderFieldEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<RealEstatePlaceholderFieldEnum>): RealEstatePlaceholderFieldEnum {
    return RealEstatePlaceholderFieldEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<RealEstatePlaceholderFieldEnum>): RealEstatePlaceholderFieldEnum {
    const message = createBaseRealEstatePlaceholderFieldEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
