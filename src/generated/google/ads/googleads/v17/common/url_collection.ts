// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/common/url_collection.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.common";

/** Collection of urls that is tagged with a unique identifier. */
export interface UrlCollection {
  /** Unique identifier for this UrlCollection instance. */
  urlCollectionId?:
    | string
    | undefined;
  /** A list of possible final URLs. */
  finalUrls: string[];
  /** A list of possible final mobile URLs. */
  finalMobileUrls: string[];
  /** URL template for constructing a tracking URL. */
  trackingUrlTemplate?: string | undefined;
}

function createBaseUrlCollection(): UrlCollection {
  return { urlCollectionId: undefined, finalUrls: [], finalMobileUrls: [], trackingUrlTemplate: undefined };
}

export const UrlCollection: MessageFns<UrlCollection> = {
  encode(message: UrlCollection, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.urlCollectionId !== undefined) {
      writer.uint32(42).string(message.urlCollectionId);
    }
    for (const v of message.finalUrls) {
      writer.uint32(50).string(v!);
    }
    for (const v of message.finalMobileUrls) {
      writer.uint32(58).string(v!);
    }
    if (message.trackingUrlTemplate !== undefined) {
      writer.uint32(66).string(message.trackingUrlTemplate);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): UrlCollection {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseUrlCollection();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 5:
          if (tag !== 42) {
            break;
          }

          message.urlCollectionId = reader.string();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.finalUrls.push(reader.string());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.finalMobileUrls.push(reader.string());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.trackingUrlTemplate = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): UrlCollection {
    return {
      urlCollectionId: isSet(object.urlCollectionId) ? globalThis.String(object.urlCollectionId) : undefined,
      finalUrls: globalThis.Array.isArray(object?.finalUrls)
        ? object.finalUrls.map((e: any) => globalThis.String(e))
        : [],
      finalMobileUrls: globalThis.Array.isArray(object?.finalMobileUrls)
        ? object.finalMobileUrls.map((e: any) => globalThis.String(e))
        : [],
      trackingUrlTemplate: isSet(object.trackingUrlTemplate)
        ? globalThis.String(object.trackingUrlTemplate)
        : undefined,
    };
  },

  toJSON(message: UrlCollection): unknown {
    const obj: any = {};
    if (message.urlCollectionId !== undefined) {
      obj.urlCollectionId = message.urlCollectionId;
    }
    if (message.finalUrls?.length) {
      obj.finalUrls = message.finalUrls;
    }
    if (message.finalMobileUrls?.length) {
      obj.finalMobileUrls = message.finalMobileUrls;
    }
    if (message.trackingUrlTemplate !== undefined) {
      obj.trackingUrlTemplate = message.trackingUrlTemplate;
    }
    return obj;
  },

  create(base?: DeepPartial<UrlCollection>): UrlCollection {
    return UrlCollection.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<UrlCollection>): UrlCollection {
    const message = createBaseUrlCollection();
    message.urlCollectionId = object.urlCollectionId ?? undefined;
    message.finalUrls = object.finalUrls?.map((e) => e) || [];
    message.finalMobileUrls = object.finalMobileUrls?.map((e) => e) || [];
    message.trackingUrlTemplate = object.trackingUrlTemplate ?? undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
