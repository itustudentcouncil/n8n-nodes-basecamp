// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/errors/campaign_budget_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.errors";

/** Container for enum describing possible campaign budget errors. */
export interface CampaignBudgetErrorEnum {
}

/** Enum describing possible campaign budget errors. */
export enum CampaignBudgetErrorEnum_CampaignBudgetError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /** CAMPAIGN_BUDGET_CANNOT_BE_SHARED - The campaign budget cannot be shared. */
  CAMPAIGN_BUDGET_CANNOT_BE_SHARED = 17,
  /** CAMPAIGN_BUDGET_REMOVED - The requested campaign budget no longer exists. */
  CAMPAIGN_BUDGET_REMOVED = 2,
  /**
   * CAMPAIGN_BUDGET_IN_USE - The campaign budget is associated with at least one campaign, and so the
   * campaign budget cannot be removed.
   */
  CAMPAIGN_BUDGET_IN_USE = 3,
  /** CAMPAIGN_BUDGET_PERIOD_NOT_AVAILABLE - Customer is not on the allow-list for this campaign budget period. */
  CAMPAIGN_BUDGET_PERIOD_NOT_AVAILABLE = 4,
  /** CANNOT_MODIFY_FIELD_OF_IMPLICITLY_SHARED_CAMPAIGN_BUDGET - This field is not mutable on implicitly shared campaign budgets */
  CANNOT_MODIFY_FIELD_OF_IMPLICITLY_SHARED_CAMPAIGN_BUDGET = 6,
  /**
   * CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_IMPLICITLY_SHARED - Cannot change explicitly shared campaign budgets back to implicitly
   * shared ones.
   */
  CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_IMPLICITLY_SHARED = 7,
  /**
   * CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED_WITHOUT_NAME - An implicit campaign budget without a name cannot be changed to
   * explicitly shared campaign budget.
   */
  CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED_WITHOUT_NAME = 8,
  /**
   * CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED - Cannot change an implicitly shared campaign budget to an explicitly
   * shared one.
   */
  CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED = 9,
  /**
   * CANNOT_USE_IMPLICITLY_SHARED_CAMPAIGN_BUDGET_WITH_MULTIPLE_CAMPAIGNS - Only explicitly shared campaign budgets can be used with multiple
   * campaigns.
   */
  CANNOT_USE_IMPLICITLY_SHARED_CAMPAIGN_BUDGET_WITH_MULTIPLE_CAMPAIGNS = 10,
  /** DUPLICATE_NAME - A campaign budget with this name already exists. */
  DUPLICATE_NAME = 11,
  /** MONEY_AMOUNT_IN_WRONG_CURRENCY - A money amount was not in the expected currency. */
  MONEY_AMOUNT_IN_WRONG_CURRENCY = 12,
  /** MONEY_AMOUNT_LESS_THAN_CURRENCY_MINIMUM_CPC - A money amount was less than the minimum CPC for currency. */
  MONEY_AMOUNT_LESS_THAN_CURRENCY_MINIMUM_CPC = 13,
  /** MONEY_AMOUNT_TOO_LARGE - A money amount was greater than the maximum allowed. */
  MONEY_AMOUNT_TOO_LARGE = 14,
  /** NEGATIVE_MONEY_AMOUNT - A money amount was negative. */
  NEGATIVE_MONEY_AMOUNT = 15,
  /** NON_MULTIPLE_OF_MINIMUM_CURRENCY_UNIT - A money amount was not a multiple of a minimum unit. */
  NON_MULTIPLE_OF_MINIMUM_CURRENCY_UNIT = 16,
  /** TOTAL_BUDGET_AMOUNT_MUST_BE_UNSET_FOR_BUDGET_PERIOD_DAILY - Total budget amount must be unset when BudgetPeriod is DAILY. */
  TOTAL_BUDGET_AMOUNT_MUST_BE_UNSET_FOR_BUDGET_PERIOD_DAILY = 18,
  /** INVALID_PERIOD - The period of the budget is not allowed. */
  INVALID_PERIOD = 19,
  /** CANNOT_USE_ACCELERATED_DELIVERY_MODE - Cannot use accelerated delivery method on this budget. */
  CANNOT_USE_ACCELERATED_DELIVERY_MODE = 20,
  /** BUDGET_AMOUNT_MUST_BE_UNSET_FOR_CUSTOM_BUDGET_PERIOD - Budget amount must be unset when BudgetPeriod is CUSTOM. */
  BUDGET_AMOUNT_MUST_BE_UNSET_FOR_CUSTOM_BUDGET_PERIOD = 21,
  UNRECOGNIZED = -1,
}

export function campaignBudgetErrorEnum_CampaignBudgetErrorFromJSON(
  object: any,
): CampaignBudgetErrorEnum_CampaignBudgetError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return CampaignBudgetErrorEnum_CampaignBudgetError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return CampaignBudgetErrorEnum_CampaignBudgetError.UNKNOWN;
    case 17:
    case "CAMPAIGN_BUDGET_CANNOT_BE_SHARED":
      return CampaignBudgetErrorEnum_CampaignBudgetError.CAMPAIGN_BUDGET_CANNOT_BE_SHARED;
    case 2:
    case "CAMPAIGN_BUDGET_REMOVED":
      return CampaignBudgetErrorEnum_CampaignBudgetError.CAMPAIGN_BUDGET_REMOVED;
    case 3:
    case "CAMPAIGN_BUDGET_IN_USE":
      return CampaignBudgetErrorEnum_CampaignBudgetError.CAMPAIGN_BUDGET_IN_USE;
    case 4:
    case "CAMPAIGN_BUDGET_PERIOD_NOT_AVAILABLE":
      return CampaignBudgetErrorEnum_CampaignBudgetError.CAMPAIGN_BUDGET_PERIOD_NOT_AVAILABLE;
    case 6:
    case "CANNOT_MODIFY_FIELD_OF_IMPLICITLY_SHARED_CAMPAIGN_BUDGET":
      return CampaignBudgetErrorEnum_CampaignBudgetError.CANNOT_MODIFY_FIELD_OF_IMPLICITLY_SHARED_CAMPAIGN_BUDGET;
    case 7:
    case "CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_IMPLICITLY_SHARED":
      return CampaignBudgetErrorEnum_CampaignBudgetError.CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_IMPLICITLY_SHARED;
    case 8:
    case "CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED_WITHOUT_NAME":
      return CampaignBudgetErrorEnum_CampaignBudgetError
        .CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED_WITHOUT_NAME;
    case 9:
    case "CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED":
      return CampaignBudgetErrorEnum_CampaignBudgetError.CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED;
    case 10:
    case "CANNOT_USE_IMPLICITLY_SHARED_CAMPAIGN_BUDGET_WITH_MULTIPLE_CAMPAIGNS":
      return CampaignBudgetErrorEnum_CampaignBudgetError
        .CANNOT_USE_IMPLICITLY_SHARED_CAMPAIGN_BUDGET_WITH_MULTIPLE_CAMPAIGNS;
    case 11:
    case "DUPLICATE_NAME":
      return CampaignBudgetErrorEnum_CampaignBudgetError.DUPLICATE_NAME;
    case 12:
    case "MONEY_AMOUNT_IN_WRONG_CURRENCY":
      return CampaignBudgetErrorEnum_CampaignBudgetError.MONEY_AMOUNT_IN_WRONG_CURRENCY;
    case 13:
    case "MONEY_AMOUNT_LESS_THAN_CURRENCY_MINIMUM_CPC":
      return CampaignBudgetErrorEnum_CampaignBudgetError.MONEY_AMOUNT_LESS_THAN_CURRENCY_MINIMUM_CPC;
    case 14:
    case "MONEY_AMOUNT_TOO_LARGE":
      return CampaignBudgetErrorEnum_CampaignBudgetError.MONEY_AMOUNT_TOO_LARGE;
    case 15:
    case "NEGATIVE_MONEY_AMOUNT":
      return CampaignBudgetErrorEnum_CampaignBudgetError.NEGATIVE_MONEY_AMOUNT;
    case 16:
    case "NON_MULTIPLE_OF_MINIMUM_CURRENCY_UNIT":
      return CampaignBudgetErrorEnum_CampaignBudgetError.NON_MULTIPLE_OF_MINIMUM_CURRENCY_UNIT;
    case 18:
    case "TOTAL_BUDGET_AMOUNT_MUST_BE_UNSET_FOR_BUDGET_PERIOD_DAILY":
      return CampaignBudgetErrorEnum_CampaignBudgetError.TOTAL_BUDGET_AMOUNT_MUST_BE_UNSET_FOR_BUDGET_PERIOD_DAILY;
    case 19:
    case "INVALID_PERIOD":
      return CampaignBudgetErrorEnum_CampaignBudgetError.INVALID_PERIOD;
    case 20:
    case "CANNOT_USE_ACCELERATED_DELIVERY_MODE":
      return CampaignBudgetErrorEnum_CampaignBudgetError.CANNOT_USE_ACCELERATED_DELIVERY_MODE;
    case 21:
    case "BUDGET_AMOUNT_MUST_BE_UNSET_FOR_CUSTOM_BUDGET_PERIOD":
      return CampaignBudgetErrorEnum_CampaignBudgetError.BUDGET_AMOUNT_MUST_BE_UNSET_FOR_CUSTOM_BUDGET_PERIOD;
    case -1:
    case "UNRECOGNIZED":
    default:
      return CampaignBudgetErrorEnum_CampaignBudgetError.UNRECOGNIZED;
  }
}

export function campaignBudgetErrorEnum_CampaignBudgetErrorToJSON(
  object: CampaignBudgetErrorEnum_CampaignBudgetError,
): string {
  switch (object) {
    case CampaignBudgetErrorEnum_CampaignBudgetError.UNSPECIFIED:
      return "UNSPECIFIED";
    case CampaignBudgetErrorEnum_CampaignBudgetError.UNKNOWN:
      return "UNKNOWN";
    case CampaignBudgetErrorEnum_CampaignBudgetError.CAMPAIGN_BUDGET_CANNOT_BE_SHARED:
      return "CAMPAIGN_BUDGET_CANNOT_BE_SHARED";
    case CampaignBudgetErrorEnum_CampaignBudgetError.CAMPAIGN_BUDGET_REMOVED:
      return "CAMPAIGN_BUDGET_REMOVED";
    case CampaignBudgetErrorEnum_CampaignBudgetError.CAMPAIGN_BUDGET_IN_USE:
      return "CAMPAIGN_BUDGET_IN_USE";
    case CampaignBudgetErrorEnum_CampaignBudgetError.CAMPAIGN_BUDGET_PERIOD_NOT_AVAILABLE:
      return "CAMPAIGN_BUDGET_PERIOD_NOT_AVAILABLE";
    case CampaignBudgetErrorEnum_CampaignBudgetError.CANNOT_MODIFY_FIELD_OF_IMPLICITLY_SHARED_CAMPAIGN_BUDGET:
      return "CANNOT_MODIFY_FIELD_OF_IMPLICITLY_SHARED_CAMPAIGN_BUDGET";
    case CampaignBudgetErrorEnum_CampaignBudgetError.CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_IMPLICITLY_SHARED:
      return "CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_IMPLICITLY_SHARED";
    case CampaignBudgetErrorEnum_CampaignBudgetError.CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED_WITHOUT_NAME:
      return "CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED_WITHOUT_NAME";
    case CampaignBudgetErrorEnum_CampaignBudgetError.CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED:
      return "CANNOT_UPDATE_CAMPAIGN_BUDGET_TO_EXPLICITLY_SHARED";
    case CampaignBudgetErrorEnum_CampaignBudgetError
      .CANNOT_USE_IMPLICITLY_SHARED_CAMPAIGN_BUDGET_WITH_MULTIPLE_CAMPAIGNS:
      return "CANNOT_USE_IMPLICITLY_SHARED_CAMPAIGN_BUDGET_WITH_MULTIPLE_CAMPAIGNS";
    case CampaignBudgetErrorEnum_CampaignBudgetError.DUPLICATE_NAME:
      return "DUPLICATE_NAME";
    case CampaignBudgetErrorEnum_CampaignBudgetError.MONEY_AMOUNT_IN_WRONG_CURRENCY:
      return "MONEY_AMOUNT_IN_WRONG_CURRENCY";
    case CampaignBudgetErrorEnum_CampaignBudgetError.MONEY_AMOUNT_LESS_THAN_CURRENCY_MINIMUM_CPC:
      return "MONEY_AMOUNT_LESS_THAN_CURRENCY_MINIMUM_CPC";
    case CampaignBudgetErrorEnum_CampaignBudgetError.MONEY_AMOUNT_TOO_LARGE:
      return "MONEY_AMOUNT_TOO_LARGE";
    case CampaignBudgetErrorEnum_CampaignBudgetError.NEGATIVE_MONEY_AMOUNT:
      return "NEGATIVE_MONEY_AMOUNT";
    case CampaignBudgetErrorEnum_CampaignBudgetError.NON_MULTIPLE_OF_MINIMUM_CURRENCY_UNIT:
      return "NON_MULTIPLE_OF_MINIMUM_CURRENCY_UNIT";
    case CampaignBudgetErrorEnum_CampaignBudgetError.TOTAL_BUDGET_AMOUNT_MUST_BE_UNSET_FOR_BUDGET_PERIOD_DAILY:
      return "TOTAL_BUDGET_AMOUNT_MUST_BE_UNSET_FOR_BUDGET_PERIOD_DAILY";
    case CampaignBudgetErrorEnum_CampaignBudgetError.INVALID_PERIOD:
      return "INVALID_PERIOD";
    case CampaignBudgetErrorEnum_CampaignBudgetError.CANNOT_USE_ACCELERATED_DELIVERY_MODE:
      return "CANNOT_USE_ACCELERATED_DELIVERY_MODE";
    case CampaignBudgetErrorEnum_CampaignBudgetError.BUDGET_AMOUNT_MUST_BE_UNSET_FOR_CUSTOM_BUDGET_PERIOD:
      return "BUDGET_AMOUNT_MUST_BE_UNSET_FOR_CUSTOM_BUDGET_PERIOD";
    case CampaignBudgetErrorEnum_CampaignBudgetError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseCampaignBudgetErrorEnum(): CampaignBudgetErrorEnum {
  return {};
}

export const CampaignBudgetErrorEnum: MessageFns<CampaignBudgetErrorEnum> = {
  encode(_: CampaignBudgetErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CampaignBudgetErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCampaignBudgetErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): CampaignBudgetErrorEnum {
    return {};
  },

  toJSON(_: CampaignBudgetErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<CampaignBudgetErrorEnum>): CampaignBudgetErrorEnum {
    return CampaignBudgetErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<CampaignBudgetErrorEnum>): CampaignBudgetErrorEnum {
    const message = createBaseCampaignBudgetErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
