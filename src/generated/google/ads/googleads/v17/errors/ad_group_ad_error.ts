// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/errors/ad_group_ad_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.errors";

/** Container for enum describing possible ad group ad errors. */
export interface AdGroupAdErrorEnum {
}

/** Enum describing possible ad group ad errors. */
export enum AdGroupAdErrorEnum_AdGroupAdError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /** AD_GROUP_AD_LABEL_DOES_NOT_EXIST - No link found between the adgroup ad and the label. */
  AD_GROUP_AD_LABEL_DOES_NOT_EXIST = 2,
  /** AD_GROUP_AD_LABEL_ALREADY_EXISTS - The label has already been attached to the adgroup ad. */
  AD_GROUP_AD_LABEL_ALREADY_EXISTS = 3,
  /** AD_NOT_UNDER_ADGROUP - The specified ad was not found in the adgroup */
  AD_NOT_UNDER_ADGROUP = 4,
  /** CANNOT_OPERATE_ON_REMOVED_ADGROUPAD - Removed ads may not be modified */
  CANNOT_OPERATE_ON_REMOVED_ADGROUPAD = 5,
  /**
   * CANNOT_CREATE_DEPRECATED_ADS - An ad of this type is deprecated and cannot be created. Only deletions
   * are permitted.
   */
  CANNOT_CREATE_DEPRECATED_ADS = 6,
  /**
   * CANNOT_CREATE_TEXT_ADS - Text ads are deprecated and cannot be created. Use expanded text ads
   * instead.
   */
  CANNOT_CREATE_TEXT_ADS = 7,
  /** EMPTY_FIELD - A required field was not specified or is an empty string. */
  EMPTY_FIELD = 8,
  /** RESOURCE_REFERENCED_IN_MULTIPLE_OPS - An ad may only be modified once per call */
  RESOURCE_REFERENCED_IN_MULTIPLE_OPS = 9,
  /** AD_TYPE_CANNOT_BE_PAUSED - AdGroupAds with the given ad type cannot be paused. */
  AD_TYPE_CANNOT_BE_PAUSED = 10,
  /** AD_TYPE_CANNOT_BE_REMOVED - AdGroupAds with the given ad type cannot be removed. */
  AD_TYPE_CANNOT_BE_REMOVED = 11,
  /**
   * CANNOT_UPDATE_DEPRECATED_ADS - An ad of this type is deprecated and cannot be updated. Only removals
   * are permitted.
   */
  CANNOT_UPDATE_DEPRECATED_ADS = 12,
  UNRECOGNIZED = -1,
}

export function adGroupAdErrorEnum_AdGroupAdErrorFromJSON(object: any): AdGroupAdErrorEnum_AdGroupAdError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return AdGroupAdErrorEnum_AdGroupAdError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return AdGroupAdErrorEnum_AdGroupAdError.UNKNOWN;
    case 2:
    case "AD_GROUP_AD_LABEL_DOES_NOT_EXIST":
      return AdGroupAdErrorEnum_AdGroupAdError.AD_GROUP_AD_LABEL_DOES_NOT_EXIST;
    case 3:
    case "AD_GROUP_AD_LABEL_ALREADY_EXISTS":
      return AdGroupAdErrorEnum_AdGroupAdError.AD_GROUP_AD_LABEL_ALREADY_EXISTS;
    case 4:
    case "AD_NOT_UNDER_ADGROUP":
      return AdGroupAdErrorEnum_AdGroupAdError.AD_NOT_UNDER_ADGROUP;
    case 5:
    case "CANNOT_OPERATE_ON_REMOVED_ADGROUPAD":
      return AdGroupAdErrorEnum_AdGroupAdError.CANNOT_OPERATE_ON_REMOVED_ADGROUPAD;
    case 6:
    case "CANNOT_CREATE_DEPRECATED_ADS":
      return AdGroupAdErrorEnum_AdGroupAdError.CANNOT_CREATE_DEPRECATED_ADS;
    case 7:
    case "CANNOT_CREATE_TEXT_ADS":
      return AdGroupAdErrorEnum_AdGroupAdError.CANNOT_CREATE_TEXT_ADS;
    case 8:
    case "EMPTY_FIELD":
      return AdGroupAdErrorEnum_AdGroupAdError.EMPTY_FIELD;
    case 9:
    case "RESOURCE_REFERENCED_IN_MULTIPLE_OPS":
      return AdGroupAdErrorEnum_AdGroupAdError.RESOURCE_REFERENCED_IN_MULTIPLE_OPS;
    case 10:
    case "AD_TYPE_CANNOT_BE_PAUSED":
      return AdGroupAdErrorEnum_AdGroupAdError.AD_TYPE_CANNOT_BE_PAUSED;
    case 11:
    case "AD_TYPE_CANNOT_BE_REMOVED":
      return AdGroupAdErrorEnum_AdGroupAdError.AD_TYPE_CANNOT_BE_REMOVED;
    case 12:
    case "CANNOT_UPDATE_DEPRECATED_ADS":
      return AdGroupAdErrorEnum_AdGroupAdError.CANNOT_UPDATE_DEPRECATED_ADS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return AdGroupAdErrorEnum_AdGroupAdError.UNRECOGNIZED;
  }
}

export function adGroupAdErrorEnum_AdGroupAdErrorToJSON(object: AdGroupAdErrorEnum_AdGroupAdError): string {
  switch (object) {
    case AdGroupAdErrorEnum_AdGroupAdError.UNSPECIFIED:
      return "UNSPECIFIED";
    case AdGroupAdErrorEnum_AdGroupAdError.UNKNOWN:
      return "UNKNOWN";
    case AdGroupAdErrorEnum_AdGroupAdError.AD_GROUP_AD_LABEL_DOES_NOT_EXIST:
      return "AD_GROUP_AD_LABEL_DOES_NOT_EXIST";
    case AdGroupAdErrorEnum_AdGroupAdError.AD_GROUP_AD_LABEL_ALREADY_EXISTS:
      return "AD_GROUP_AD_LABEL_ALREADY_EXISTS";
    case AdGroupAdErrorEnum_AdGroupAdError.AD_NOT_UNDER_ADGROUP:
      return "AD_NOT_UNDER_ADGROUP";
    case AdGroupAdErrorEnum_AdGroupAdError.CANNOT_OPERATE_ON_REMOVED_ADGROUPAD:
      return "CANNOT_OPERATE_ON_REMOVED_ADGROUPAD";
    case AdGroupAdErrorEnum_AdGroupAdError.CANNOT_CREATE_DEPRECATED_ADS:
      return "CANNOT_CREATE_DEPRECATED_ADS";
    case AdGroupAdErrorEnum_AdGroupAdError.CANNOT_CREATE_TEXT_ADS:
      return "CANNOT_CREATE_TEXT_ADS";
    case AdGroupAdErrorEnum_AdGroupAdError.EMPTY_FIELD:
      return "EMPTY_FIELD";
    case AdGroupAdErrorEnum_AdGroupAdError.RESOURCE_REFERENCED_IN_MULTIPLE_OPS:
      return "RESOURCE_REFERENCED_IN_MULTIPLE_OPS";
    case AdGroupAdErrorEnum_AdGroupAdError.AD_TYPE_CANNOT_BE_PAUSED:
      return "AD_TYPE_CANNOT_BE_PAUSED";
    case AdGroupAdErrorEnum_AdGroupAdError.AD_TYPE_CANNOT_BE_REMOVED:
      return "AD_TYPE_CANNOT_BE_REMOVED";
    case AdGroupAdErrorEnum_AdGroupAdError.CANNOT_UPDATE_DEPRECATED_ADS:
      return "CANNOT_UPDATE_DEPRECATED_ADS";
    case AdGroupAdErrorEnum_AdGroupAdError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseAdGroupAdErrorEnum(): AdGroupAdErrorEnum {
  return {};
}

export const AdGroupAdErrorEnum: MessageFns<AdGroupAdErrorEnum> = {
  encode(_: AdGroupAdErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AdGroupAdErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAdGroupAdErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): AdGroupAdErrorEnum {
    return {};
  },

  toJSON(_: AdGroupAdErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<AdGroupAdErrorEnum>): AdGroupAdErrorEnum {
    return AdGroupAdErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<AdGroupAdErrorEnum>): AdGroupAdErrorEnum {
    const message = createBaseAdGroupAdErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
