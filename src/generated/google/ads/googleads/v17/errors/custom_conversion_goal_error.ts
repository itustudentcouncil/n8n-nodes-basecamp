// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/errors/custom_conversion_goal_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.errors";

/** Container for enum describing possible custom conversion goal errors. */
export interface CustomConversionGoalErrorEnum {
}

/** Enum describing possible custom conversion goal errors. */
export enum CustomConversionGoalErrorEnum_CustomConversionGoalError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /** INVALID_CONVERSION_ACTION - Cannot find a conversion action with the specified id. */
  INVALID_CONVERSION_ACTION = 2,
  /**
   * CONVERSION_ACTION_NOT_ENABLED - The conversion action is not enabled so it cannot be included in a custom
   * conversion goal.
   */
  CONVERSION_ACTION_NOT_ENABLED = 3,
  /**
   * CANNOT_REMOVE_LINKED_CUSTOM_CONVERSION_GOAL - The custom conversion goal cannot be removed because it's linked to a
   * campaign.
   */
  CANNOT_REMOVE_LINKED_CUSTOM_CONVERSION_GOAL = 4,
  /** CUSTOM_GOAL_DUPLICATE_NAME - Custom goal with the same name already exists. */
  CUSTOM_GOAL_DUPLICATE_NAME = 5,
  /** DUPLICATE_CONVERSION_ACTION_LIST - Custom goal with the same conversion action list already exists. */
  DUPLICATE_CONVERSION_ACTION_LIST = 6,
  /**
   * NON_BIDDABLE_CONVERSION_ACTION_NOT_ELIGIBLE_FOR_CUSTOM_GOAL - Conversion types that cannot be biddable should not be included in custom
   * goal.
   */
  NON_BIDDABLE_CONVERSION_ACTION_NOT_ELIGIBLE_FOR_CUSTOM_GOAL = 7,
  UNRECOGNIZED = -1,
}

export function customConversionGoalErrorEnum_CustomConversionGoalErrorFromJSON(
  object: any,
): CustomConversionGoalErrorEnum_CustomConversionGoalError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return CustomConversionGoalErrorEnum_CustomConversionGoalError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return CustomConversionGoalErrorEnum_CustomConversionGoalError.UNKNOWN;
    case 2:
    case "INVALID_CONVERSION_ACTION":
      return CustomConversionGoalErrorEnum_CustomConversionGoalError.INVALID_CONVERSION_ACTION;
    case 3:
    case "CONVERSION_ACTION_NOT_ENABLED":
      return CustomConversionGoalErrorEnum_CustomConversionGoalError.CONVERSION_ACTION_NOT_ENABLED;
    case 4:
    case "CANNOT_REMOVE_LINKED_CUSTOM_CONVERSION_GOAL":
      return CustomConversionGoalErrorEnum_CustomConversionGoalError.CANNOT_REMOVE_LINKED_CUSTOM_CONVERSION_GOAL;
    case 5:
    case "CUSTOM_GOAL_DUPLICATE_NAME":
      return CustomConversionGoalErrorEnum_CustomConversionGoalError.CUSTOM_GOAL_DUPLICATE_NAME;
    case 6:
    case "DUPLICATE_CONVERSION_ACTION_LIST":
      return CustomConversionGoalErrorEnum_CustomConversionGoalError.DUPLICATE_CONVERSION_ACTION_LIST;
    case 7:
    case "NON_BIDDABLE_CONVERSION_ACTION_NOT_ELIGIBLE_FOR_CUSTOM_GOAL":
      return CustomConversionGoalErrorEnum_CustomConversionGoalError
        .NON_BIDDABLE_CONVERSION_ACTION_NOT_ELIGIBLE_FOR_CUSTOM_GOAL;
    case -1:
    case "UNRECOGNIZED":
    default:
      return CustomConversionGoalErrorEnum_CustomConversionGoalError.UNRECOGNIZED;
  }
}

export function customConversionGoalErrorEnum_CustomConversionGoalErrorToJSON(
  object: CustomConversionGoalErrorEnum_CustomConversionGoalError,
): string {
  switch (object) {
    case CustomConversionGoalErrorEnum_CustomConversionGoalError.UNSPECIFIED:
      return "UNSPECIFIED";
    case CustomConversionGoalErrorEnum_CustomConversionGoalError.UNKNOWN:
      return "UNKNOWN";
    case CustomConversionGoalErrorEnum_CustomConversionGoalError.INVALID_CONVERSION_ACTION:
      return "INVALID_CONVERSION_ACTION";
    case CustomConversionGoalErrorEnum_CustomConversionGoalError.CONVERSION_ACTION_NOT_ENABLED:
      return "CONVERSION_ACTION_NOT_ENABLED";
    case CustomConversionGoalErrorEnum_CustomConversionGoalError.CANNOT_REMOVE_LINKED_CUSTOM_CONVERSION_GOAL:
      return "CANNOT_REMOVE_LINKED_CUSTOM_CONVERSION_GOAL";
    case CustomConversionGoalErrorEnum_CustomConversionGoalError.CUSTOM_GOAL_DUPLICATE_NAME:
      return "CUSTOM_GOAL_DUPLICATE_NAME";
    case CustomConversionGoalErrorEnum_CustomConversionGoalError.DUPLICATE_CONVERSION_ACTION_LIST:
      return "DUPLICATE_CONVERSION_ACTION_LIST";
    case CustomConversionGoalErrorEnum_CustomConversionGoalError
      .NON_BIDDABLE_CONVERSION_ACTION_NOT_ELIGIBLE_FOR_CUSTOM_GOAL:
      return "NON_BIDDABLE_CONVERSION_ACTION_NOT_ELIGIBLE_FOR_CUSTOM_GOAL";
    case CustomConversionGoalErrorEnum_CustomConversionGoalError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseCustomConversionGoalErrorEnum(): CustomConversionGoalErrorEnum {
  return {};
}

export const CustomConversionGoalErrorEnum: MessageFns<CustomConversionGoalErrorEnum> = {
  encode(_: CustomConversionGoalErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomConversionGoalErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomConversionGoalErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): CustomConversionGoalErrorEnum {
    return {};
  },

  toJSON(_: CustomConversionGoalErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<CustomConversionGoalErrorEnum>): CustomConversionGoalErrorEnum {
    return CustomConversionGoalErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<CustomConversionGoalErrorEnum>): CustomConversionGoalErrorEnum {
    const message = createBaseCustomConversionGoalErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
