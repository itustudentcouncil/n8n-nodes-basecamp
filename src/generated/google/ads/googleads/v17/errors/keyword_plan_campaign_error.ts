// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/errors/keyword_plan_campaign_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.errors";

/**
 * Container for enum describing possible errors from applying a keyword plan
 * campaign.
 */
export interface KeywordPlanCampaignErrorEnum {
}

/** Enum describing possible errors from applying a keyword plan campaign. */
export enum KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /**
   * INVALID_NAME - A keyword plan campaign name is missing, empty, longer than allowed limit
   * or contains invalid chars.
   */
  INVALID_NAME = 2,
  /** INVALID_LANGUAGES - A keyword plan campaign contains one or more untargetable languages. */
  INVALID_LANGUAGES = 3,
  /** INVALID_GEOS - A keyword plan campaign contains one or more invalid geo targets. */
  INVALID_GEOS = 4,
  /**
   * DUPLICATE_NAME - The keyword plan campaign name is duplicate to an existing keyword plan
   * campaign name or other keyword plan campaign name in the request.
   */
  DUPLICATE_NAME = 5,
  /** MAX_GEOS_EXCEEDED - The number of geo targets in the keyword plan campaign exceeds limits. */
  MAX_GEOS_EXCEEDED = 6,
  /** MAX_LANGUAGES_EXCEEDED - The number of languages in the keyword plan campaign exceeds limits. */
  MAX_LANGUAGES_EXCEEDED = 7,
  UNRECOGNIZED = -1,
}

export function keywordPlanCampaignErrorEnum_KeywordPlanCampaignErrorFromJSON(
  object: any,
): KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.UNKNOWN;
    case 2:
    case "INVALID_NAME":
      return KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.INVALID_NAME;
    case 3:
    case "INVALID_LANGUAGES":
      return KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.INVALID_LANGUAGES;
    case 4:
    case "INVALID_GEOS":
      return KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.INVALID_GEOS;
    case 5:
    case "DUPLICATE_NAME":
      return KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.DUPLICATE_NAME;
    case 6:
    case "MAX_GEOS_EXCEEDED":
      return KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.MAX_GEOS_EXCEEDED;
    case 7:
    case "MAX_LANGUAGES_EXCEEDED":
      return KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.MAX_LANGUAGES_EXCEEDED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.UNRECOGNIZED;
  }
}

export function keywordPlanCampaignErrorEnum_KeywordPlanCampaignErrorToJSON(
  object: KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError,
): string {
  switch (object) {
    case KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.UNSPECIFIED:
      return "UNSPECIFIED";
    case KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.UNKNOWN:
      return "UNKNOWN";
    case KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.INVALID_NAME:
      return "INVALID_NAME";
    case KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.INVALID_LANGUAGES:
      return "INVALID_LANGUAGES";
    case KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.INVALID_GEOS:
      return "INVALID_GEOS";
    case KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.DUPLICATE_NAME:
      return "DUPLICATE_NAME";
    case KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.MAX_GEOS_EXCEEDED:
      return "MAX_GEOS_EXCEEDED";
    case KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.MAX_LANGUAGES_EXCEEDED:
      return "MAX_LANGUAGES_EXCEEDED";
    case KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseKeywordPlanCampaignErrorEnum(): KeywordPlanCampaignErrorEnum {
  return {};
}

export const KeywordPlanCampaignErrorEnum: MessageFns<KeywordPlanCampaignErrorEnum> = {
  encode(_: KeywordPlanCampaignErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): KeywordPlanCampaignErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseKeywordPlanCampaignErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): KeywordPlanCampaignErrorEnum {
    return {};
  },

  toJSON(_: KeywordPlanCampaignErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<KeywordPlanCampaignErrorEnum>): KeywordPlanCampaignErrorEnum {
    return KeywordPlanCampaignErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<KeywordPlanCampaignErrorEnum>): KeywordPlanCampaignErrorEnum {
    const message = createBaseKeywordPlanCampaignErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
