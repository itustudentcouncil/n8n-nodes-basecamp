// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/admanager/v1/custom_targeting_value_enums.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.admanager.v1";

/**
 * Wrapper message for
 * [CustomTargetingValueStatus][google.ads.admanager.v1.CustomTargetingValueStatusEnum.CustomTargetingValueStatus]
 */
export interface CustomTargetingValueStatusEnum {
}

/** Status of the custom targeting value. */
export enum CustomTargetingValueStatusEnum_CustomTargetingValueStatus {
  /** CUSTOM_TARGETING_VALUE_STATUS_UNSPECIFIED - Not specified value. */
  CUSTOM_TARGETING_VALUE_STATUS_UNSPECIFIED = 0,
  /** ACTIVE - Custom targeting value is active. */
  ACTIVE = 1,
  /** INACTIVE - Custom targeting value is inactive. */
  INACTIVE = 2,
  UNRECOGNIZED = -1,
}

export function customTargetingValueStatusEnum_CustomTargetingValueStatusFromJSON(
  object: any,
): CustomTargetingValueStatusEnum_CustomTargetingValueStatus {
  switch (object) {
    case 0:
    case "CUSTOM_TARGETING_VALUE_STATUS_UNSPECIFIED":
      return CustomTargetingValueStatusEnum_CustomTargetingValueStatus.CUSTOM_TARGETING_VALUE_STATUS_UNSPECIFIED;
    case 1:
    case "ACTIVE":
      return CustomTargetingValueStatusEnum_CustomTargetingValueStatus.ACTIVE;
    case 2:
    case "INACTIVE":
      return CustomTargetingValueStatusEnum_CustomTargetingValueStatus.INACTIVE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return CustomTargetingValueStatusEnum_CustomTargetingValueStatus.UNRECOGNIZED;
  }
}

export function customTargetingValueStatusEnum_CustomTargetingValueStatusToJSON(
  object: CustomTargetingValueStatusEnum_CustomTargetingValueStatus,
): string {
  switch (object) {
    case CustomTargetingValueStatusEnum_CustomTargetingValueStatus.CUSTOM_TARGETING_VALUE_STATUS_UNSPECIFIED:
      return "CUSTOM_TARGETING_VALUE_STATUS_UNSPECIFIED";
    case CustomTargetingValueStatusEnum_CustomTargetingValueStatus.ACTIVE:
      return "ACTIVE";
    case CustomTargetingValueStatusEnum_CustomTargetingValueStatus.INACTIVE:
      return "INACTIVE";
    case CustomTargetingValueStatusEnum_CustomTargetingValueStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/**
 * Wrapper message for
 * [CustomTargetingValueMatchType][google.ads.admanager.v1.CustomTargetingValueMatchTypeEnum.CustomTargetingValueMatchType]
 */
export interface CustomTargetingValueMatchTypeEnum {
}

/** Match type of the custom targeting value. */
export enum CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType {
  /** CUSTOM_TARGETING_VALUE_MATCH_TYPE_UNSPECIFIED - Not specified value. */
  CUSTOM_TARGETING_VALUE_MATCH_TYPE_UNSPECIFIED = 0,
  /**
   * EXACT - Used for exact matching. For example, the targeting value car=honda will
   * only match to the ad request car=honda.
   */
  EXACT = 1,
  /**
   * BROAD - Used for lenient matching when at least one of the words in the ad
   * request matches the targeted value. The targeting value car=honda will
   * match to ad requests containing the word honda. So ad requests car=honda
   * or car=honda civic or car=buy honda or car=how much does a honda cost
   * will all have the line item delivered.
   * This match type can not be used within an audience segment rule.
   */
  BROAD = 2,
  /**
   * PREFIX - Used for 'starts with' matching when the first few characters in the ad
   * request match all of the characters in the targeted value. The targeting
   * value car=honda will match to ad requests car=honda or car=hondas for
   * sale but not to car=I want a honda.
   */
  PREFIX = 3,
  /**
   * BROAD_PREFIX - This is a combination of MatchType#BROAD and MatchType#PREFIX matching.
   * The targeting value car=honda will match to ad requests that contain
   * words that start with the characters in the targeted value, for example
   * with car=civic hondas.
   * This match type can not be used within an audience segment rule.
   */
  BROAD_PREFIX = 4,
  /**
   * SUFFIX - Used for 'ends with' matching when the last characters in the ad request
   * match all of the characters in the targeted value. The targeting value
   * car=honda will match with ad requests car=honda or car=I want a honda but
   * not to car=hondas for sale.
   * This match type can not be used within line item targeting.
   */
  SUFFIX = 5,
  /**
   * CONTAINS - Used for 'within' matching when the string in the ad request contains the
   * string in the targeted value. The targeting value car=honda will match
   * with ad requests car=honda, car=I want a honda, and also with car=hondas
   * for sale, but not with car=misspelled hond a. This match type can not be
   * used within line item targeting.
   */
  CONTAINS = 6,
  UNRECOGNIZED = -1,
}

export function customTargetingValueMatchTypeEnum_CustomTargetingValueMatchTypeFromJSON(
  object: any,
): CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType {
  switch (object) {
    case 0:
    case "CUSTOM_TARGETING_VALUE_MATCH_TYPE_UNSPECIFIED":
      return CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType
        .CUSTOM_TARGETING_VALUE_MATCH_TYPE_UNSPECIFIED;
    case 1:
    case "EXACT":
      return CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.EXACT;
    case 2:
    case "BROAD":
      return CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.BROAD;
    case 3:
    case "PREFIX":
      return CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.PREFIX;
    case 4:
    case "BROAD_PREFIX":
      return CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.BROAD_PREFIX;
    case 5:
    case "SUFFIX":
      return CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.SUFFIX;
    case 6:
    case "CONTAINS":
      return CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.CONTAINS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.UNRECOGNIZED;
  }
}

export function customTargetingValueMatchTypeEnum_CustomTargetingValueMatchTypeToJSON(
  object: CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType,
): string {
  switch (object) {
    case CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.CUSTOM_TARGETING_VALUE_MATCH_TYPE_UNSPECIFIED:
      return "CUSTOM_TARGETING_VALUE_MATCH_TYPE_UNSPECIFIED";
    case CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.EXACT:
      return "EXACT";
    case CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.BROAD:
      return "BROAD";
    case CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.PREFIX:
      return "PREFIX";
    case CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.BROAD_PREFIX:
      return "BROAD_PREFIX";
    case CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.SUFFIX:
      return "SUFFIX";
    case CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.CONTAINS:
      return "CONTAINS";
    case CustomTargetingValueMatchTypeEnum_CustomTargetingValueMatchType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseCustomTargetingValueStatusEnum(): CustomTargetingValueStatusEnum {
  return {};
}

export const CustomTargetingValueStatusEnum: MessageFns<CustomTargetingValueStatusEnum> = {
  encode(_: CustomTargetingValueStatusEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomTargetingValueStatusEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomTargetingValueStatusEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): CustomTargetingValueStatusEnum {
    return {};
  },

  toJSON(_: CustomTargetingValueStatusEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<CustomTargetingValueStatusEnum>): CustomTargetingValueStatusEnum {
    return CustomTargetingValueStatusEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<CustomTargetingValueStatusEnum>): CustomTargetingValueStatusEnum {
    const message = createBaseCustomTargetingValueStatusEnum();
    return message;
  },
};

function createBaseCustomTargetingValueMatchTypeEnum(): CustomTargetingValueMatchTypeEnum {
  return {};
}

export const CustomTargetingValueMatchTypeEnum: MessageFns<CustomTargetingValueMatchTypeEnum> = {
  encode(_: CustomTargetingValueMatchTypeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomTargetingValueMatchTypeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomTargetingValueMatchTypeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): CustomTargetingValueMatchTypeEnum {
    return {};
  },

  toJSON(_: CustomTargetingValueMatchTypeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<CustomTargetingValueMatchTypeEnum>): CustomTargetingValueMatchTypeEnum {
    return CustomTargetingValueMatchTypeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<CustomTargetingValueMatchTypeEnum>): CustomTargetingValueMatchTypeEnum {
    const message = createBaseCustomTargetingValueMatchTypeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
