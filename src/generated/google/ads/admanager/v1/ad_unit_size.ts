// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/admanager/v1/ad_unit_size.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  EnvironmentTypeEnum_EnvironmentType,
  environmentTypeEnum_EnvironmentTypeFromJSON,
  environmentTypeEnum_EnvironmentTypeToJSON,
} from "./environment_type_enum.js";
import { Size } from "./size.js";

export const protobufPackage = "google.ads.admanager.v1";

/** Represents the size, environment, and companions of an ad in an ad unit. */
export interface AdUnitSize {
  /** Required. The Size of the AdUnit. */
  size:
    | Size
    | undefined;
  /** Required. The EnvironmentType of the AdUnit */
  environmentType: EnvironmentTypeEnum_EnvironmentType;
  /**
   * The companions for this ad unit size. Companions are only valid if the
   * environment is
   * [VIDEO_PLAYER][google.ads.admanager.v1.EnvironmentTypeEnum.EnvironmentType].
   */
  companions: Size[];
}

function createBaseAdUnitSize(): AdUnitSize {
  return { size: undefined, environmentType: 0, companions: [] };
}

export const AdUnitSize: MessageFns<AdUnitSize> = {
  encode(message: AdUnitSize, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.size !== undefined) {
      Size.encode(message.size, writer.uint32(10).fork()).join();
    }
    if (message.environmentType !== 0) {
      writer.uint32(16).int32(message.environmentType);
    }
    for (const v of message.companions) {
      Size.encode(v!, writer.uint32(26).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AdUnitSize {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAdUnitSize();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.size = Size.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.environmentType = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.companions.push(Size.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): AdUnitSize {
    return {
      size: isSet(object.size) ? Size.fromJSON(object.size) : undefined,
      environmentType: isSet(object.environmentType)
        ? environmentTypeEnum_EnvironmentTypeFromJSON(object.environmentType)
        : 0,
      companions: globalThis.Array.isArray(object?.companions)
        ? object.companions.map((e: any) => Size.fromJSON(e))
        : [],
    };
  },

  toJSON(message: AdUnitSize): unknown {
    const obj: any = {};
    if (message.size !== undefined) {
      obj.size = Size.toJSON(message.size);
    }
    if (message.environmentType !== 0) {
      obj.environmentType = environmentTypeEnum_EnvironmentTypeToJSON(message.environmentType);
    }
    if (message.companions?.length) {
      obj.companions = message.companions.map((e) => Size.toJSON(e));
    }
    return obj;
  },

  create(base?: DeepPartial<AdUnitSize>): AdUnitSize {
    return AdUnitSize.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<AdUnitSize>): AdUnitSize {
    const message = createBaseAdUnitSize();
    message.size = (object.size !== undefined && object.size !== null) ? Size.fromPartial(object.size) : undefined;
    message.environmentType = object.environmentType ?? 0;
    message.companions = object.companions?.map((e) => Size.fromPartial(e)) || [];
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
