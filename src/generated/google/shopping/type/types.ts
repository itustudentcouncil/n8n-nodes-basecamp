// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/shopping/type/types.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.shopping.type";

/** The weight represented as the value in string and the unit. */
export interface Weight {
  /**
   * Required. The weight represented as a number in micros (1 million micros is
   * an equivalent to one's currency standard unit, for example, 1 kg = 1000000
   * micros).
   * This field can also be set as infinity by setting to -1.
   * This field only support -1 and positive value.
   */
  amountMicros?:
    | Long
    | undefined;
  /**
   * Required. The weight unit.
   * Acceptable values are: kg and lb
   */
  unit: Weight_WeightUnit;
}

/** The weight unit. */
export enum Weight_WeightUnit {
  /** WEIGHT_UNIT_UNSPECIFIED - unit unspecified */
  WEIGHT_UNIT_UNSPECIFIED = 0,
  /** POUND - lb unit. */
  POUND = 1,
  /** KILOGRAM - kg unit. */
  KILOGRAM = 2,
  UNRECOGNIZED = -1,
}

export function weight_WeightUnitFromJSON(object: any): Weight_WeightUnit {
  switch (object) {
    case 0:
    case "WEIGHT_UNIT_UNSPECIFIED":
      return Weight_WeightUnit.WEIGHT_UNIT_UNSPECIFIED;
    case 1:
    case "POUND":
      return Weight_WeightUnit.POUND;
    case 2:
    case "KILOGRAM":
      return Weight_WeightUnit.KILOGRAM;
    case -1:
    case "UNRECOGNIZED":
    default:
      return Weight_WeightUnit.UNRECOGNIZED;
  }
}

export function weight_WeightUnitToJSON(object: Weight_WeightUnit): string {
  switch (object) {
    case Weight_WeightUnit.WEIGHT_UNIT_UNSPECIFIED:
      return "WEIGHT_UNIT_UNSPECIFIED";
    case Weight_WeightUnit.POUND:
      return "POUND";
    case Weight_WeightUnit.KILOGRAM:
      return "KILOGRAM";
    case Weight_WeightUnit.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** The price represented as a number and currency. */
export interface Price {
  /**
   * The price represented as a number in micros (1 million micros is an
   * equivalent to one's currency standard unit, for example, 1 USD = 1000000
   * micros).
   */
  amountMicros?:
    | Long
    | undefined;
  /**
   * The currency of the price using three-letter acronyms according to [ISO
   * 4217](http://en.wikipedia.org/wiki/ISO_4217).
   */
  currencyCode?: string | undefined;
}

/**
 * A message that represents custom attributes. Exactly one of `value` or
 * `group_values` must not be empty.
 */
export interface CustomAttribute {
  /** The name of the attribute. */
  name?:
    | string
    | undefined;
  /**
   * The value of the attribute. If `value` is not empty, `group_values` must be
   * empty.
   */
  value?:
    | string
    | undefined;
  /**
   * Subattributes within this attribute group.  If
   * `group_values` is not empty, `value` must be empty.
   */
  groupValues: CustomAttribute[];
}

/**
 * Destinations available for a product.
 *
 * Destinations are used in Merchant Center to allow you to control where the
 * products from your data feed should be displayed.
 */
export interface Destination {
}

/** Destination values. */
export enum Destination_DestinationEnum {
  /** DESTINATION_ENUM_UNSPECIFIED - Not specified. */
  DESTINATION_ENUM_UNSPECIFIED = 0,
  /** SHOPPING_ADS - [Shopping ads](https://support.google.com/google-ads/answer/2454022). */
  SHOPPING_ADS = 1,
  /** DISPLAY_ADS - [Display ads](https://support.google.com/merchants/answer/6069387). */
  DISPLAY_ADS = 2,
  /**
   * LOCAL_INVENTORY_ADS - [Local inventory
   * ads](https://support.google.com/merchants/answer/3057972).
   */
  LOCAL_INVENTORY_ADS = 3,
  /** FREE_LISTINGS - [Free listings](https://support.google.com/merchants/answer/9199328). */
  FREE_LISTINGS = 4,
  /**
   * FREE_LOCAL_LISTINGS - [Free local product
   * listings](https://support.google.com/merchants/answer/9825611).
   */
  FREE_LOCAL_LISTINGS = 5,
  /** YOUTUBE_SHOPPING - [YouTube Shopping](https://support.google.com/merchants/answer/12362804). */
  YOUTUBE_SHOPPING = 6,
  UNRECOGNIZED = -1,
}

export function destination_DestinationEnumFromJSON(object: any): Destination_DestinationEnum {
  switch (object) {
    case 0:
    case "DESTINATION_ENUM_UNSPECIFIED":
      return Destination_DestinationEnum.DESTINATION_ENUM_UNSPECIFIED;
    case 1:
    case "SHOPPING_ADS":
      return Destination_DestinationEnum.SHOPPING_ADS;
    case 2:
    case "DISPLAY_ADS":
      return Destination_DestinationEnum.DISPLAY_ADS;
    case 3:
    case "LOCAL_INVENTORY_ADS":
      return Destination_DestinationEnum.LOCAL_INVENTORY_ADS;
    case 4:
    case "FREE_LISTINGS":
      return Destination_DestinationEnum.FREE_LISTINGS;
    case 5:
    case "FREE_LOCAL_LISTINGS":
      return Destination_DestinationEnum.FREE_LOCAL_LISTINGS;
    case 6:
    case "YOUTUBE_SHOPPING":
      return Destination_DestinationEnum.YOUTUBE_SHOPPING;
    case -1:
    case "UNRECOGNIZED":
    default:
      return Destination_DestinationEnum.UNRECOGNIZED;
  }
}

export function destination_DestinationEnumToJSON(object: Destination_DestinationEnum): string {
  switch (object) {
    case Destination_DestinationEnum.DESTINATION_ENUM_UNSPECIFIED:
      return "DESTINATION_ENUM_UNSPECIFIED";
    case Destination_DestinationEnum.SHOPPING_ADS:
      return "SHOPPING_ADS";
    case Destination_DestinationEnum.DISPLAY_ADS:
      return "DISPLAY_ADS";
    case Destination_DestinationEnum.LOCAL_INVENTORY_ADS:
      return "LOCAL_INVENTORY_ADS";
    case Destination_DestinationEnum.FREE_LISTINGS:
      return "FREE_LISTINGS";
    case Destination_DestinationEnum.FREE_LOCAL_LISTINGS:
      return "FREE_LOCAL_LISTINGS";
    case Destination_DestinationEnum.YOUTUBE_SHOPPING:
      return "YOUTUBE_SHOPPING";
    case Destination_DestinationEnum.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/**
 * Reporting contexts that your account and product issues apply to.
 *
 * Reporting contexts are groups of surfaces and formats for product results on
 * Google. They can represent the entire destination (for example, [Shopping
 * ads](https://support.google.com/merchants/answer/6149970)) or a subset of
 * formats within a destination (for example, [Demand Gen
 * ads](https://support.google.com/merchants/answer/13389785)).
 */
export interface ReportingContext {
}

/** Reporting context values. */
export enum ReportingContext_ReportingContextEnum {
  /** REPORTING_CONTEXT_ENUM_UNSPECIFIED - Not specified. */
  REPORTING_CONTEXT_ENUM_UNSPECIFIED = 0,
  /** SHOPPING_ADS - [Shopping ads](https://support.google.com/merchants/answer/6149970). */
  SHOPPING_ADS = 1,
  /**
   * DISCOVERY_ADS - Deprecated:  Use `DEMAND_GEN_ADS` instead.
   * [Discovery and Demand Gen
   * ads](https://support.google.com/merchants/answer/13389785).
   *
   * @deprecated
   */
  DISCOVERY_ADS = 2,
  /** DEMAND_GEN_ADS - [Demand Gen ads](https://support.google.com/merchants/answer/13389785). */
  DEMAND_GEN_ADS = 13,
  /**
   * DEMAND_GEN_ADS_DISCOVER_SURFACE - [Demand Gen ads on Discover
   * surface](https://support.google.com/merchants/answer/13389785).
   */
  DEMAND_GEN_ADS_DISCOVER_SURFACE = 14,
  /** VIDEO_ADS - [Video ads](https://support.google.com/google-ads/answer/6340491). */
  VIDEO_ADS = 3,
  /** DISPLAY_ADS - [Display ads](https://support.google.com/merchants/answer/6069387). */
  DISPLAY_ADS = 4,
  /**
   * LOCAL_INVENTORY_ADS - [Local inventory
   * ads](https://support.google.com/merchants/answer/3271956).
   */
  LOCAL_INVENTORY_ADS = 5,
  /**
   * VEHICLE_INVENTORY_ADS - [Vehicle inventory
   * ads](https://support.google.com/merchants/answer/11544533).
   */
  VEHICLE_INVENTORY_ADS = 6,
  /**
   * FREE_LISTINGS - [Free product
   * listings](https://support.google.com/merchants/answer/9199328).
   */
  FREE_LISTINGS = 7,
  /**
   * FREE_LOCAL_LISTINGS - [Free local product
   * listings](https://support.google.com/merchants/answer/9825611).
   */
  FREE_LOCAL_LISTINGS = 8,
  /**
   * FREE_LOCAL_VEHICLE_LISTINGS - [Free local vehicle
   * listings](https://support.google.com/merchants/answer/11544533).
   */
  FREE_LOCAL_VEHICLE_LISTINGS = 9,
  /**
   * YOUTUBE_SHOPPING - [YouTube
   * Shopping](https://support.google.com/merchants/answer/13478370).
   */
  YOUTUBE_SHOPPING = 10,
  /** CLOUD_RETAIL - [Cloud retail](https://cloud.google.com/solutions/retail). */
  CLOUD_RETAIL = 11,
  /** LOCAL_CLOUD_RETAIL - [Local cloud retail](https://cloud.google.com/solutions/retail). */
  LOCAL_CLOUD_RETAIL = 12,
  UNRECOGNIZED = -1,
}

export function reportingContext_ReportingContextEnumFromJSON(object: any): ReportingContext_ReportingContextEnum {
  switch (object) {
    case 0:
    case "REPORTING_CONTEXT_ENUM_UNSPECIFIED":
      return ReportingContext_ReportingContextEnum.REPORTING_CONTEXT_ENUM_UNSPECIFIED;
    case 1:
    case "SHOPPING_ADS":
      return ReportingContext_ReportingContextEnum.SHOPPING_ADS;
    case 2:
    case "DISCOVERY_ADS":
      return ReportingContext_ReportingContextEnum.DISCOVERY_ADS;
    case 13:
    case "DEMAND_GEN_ADS":
      return ReportingContext_ReportingContextEnum.DEMAND_GEN_ADS;
    case 14:
    case "DEMAND_GEN_ADS_DISCOVER_SURFACE":
      return ReportingContext_ReportingContextEnum.DEMAND_GEN_ADS_DISCOVER_SURFACE;
    case 3:
    case "VIDEO_ADS":
      return ReportingContext_ReportingContextEnum.VIDEO_ADS;
    case 4:
    case "DISPLAY_ADS":
      return ReportingContext_ReportingContextEnum.DISPLAY_ADS;
    case 5:
    case "LOCAL_INVENTORY_ADS":
      return ReportingContext_ReportingContextEnum.LOCAL_INVENTORY_ADS;
    case 6:
    case "VEHICLE_INVENTORY_ADS":
      return ReportingContext_ReportingContextEnum.VEHICLE_INVENTORY_ADS;
    case 7:
    case "FREE_LISTINGS":
      return ReportingContext_ReportingContextEnum.FREE_LISTINGS;
    case 8:
    case "FREE_LOCAL_LISTINGS":
      return ReportingContext_ReportingContextEnum.FREE_LOCAL_LISTINGS;
    case 9:
    case "FREE_LOCAL_VEHICLE_LISTINGS":
      return ReportingContext_ReportingContextEnum.FREE_LOCAL_VEHICLE_LISTINGS;
    case 10:
    case "YOUTUBE_SHOPPING":
      return ReportingContext_ReportingContextEnum.YOUTUBE_SHOPPING;
    case 11:
    case "CLOUD_RETAIL":
      return ReportingContext_ReportingContextEnum.CLOUD_RETAIL;
    case 12:
    case "LOCAL_CLOUD_RETAIL":
      return ReportingContext_ReportingContextEnum.LOCAL_CLOUD_RETAIL;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ReportingContext_ReportingContextEnum.UNRECOGNIZED;
  }
}

export function reportingContext_ReportingContextEnumToJSON(object: ReportingContext_ReportingContextEnum): string {
  switch (object) {
    case ReportingContext_ReportingContextEnum.REPORTING_CONTEXT_ENUM_UNSPECIFIED:
      return "REPORTING_CONTEXT_ENUM_UNSPECIFIED";
    case ReportingContext_ReportingContextEnum.SHOPPING_ADS:
      return "SHOPPING_ADS";
    case ReportingContext_ReportingContextEnum.DISCOVERY_ADS:
      return "DISCOVERY_ADS";
    case ReportingContext_ReportingContextEnum.DEMAND_GEN_ADS:
      return "DEMAND_GEN_ADS";
    case ReportingContext_ReportingContextEnum.DEMAND_GEN_ADS_DISCOVER_SURFACE:
      return "DEMAND_GEN_ADS_DISCOVER_SURFACE";
    case ReportingContext_ReportingContextEnum.VIDEO_ADS:
      return "VIDEO_ADS";
    case ReportingContext_ReportingContextEnum.DISPLAY_ADS:
      return "DISPLAY_ADS";
    case ReportingContext_ReportingContextEnum.LOCAL_INVENTORY_ADS:
      return "LOCAL_INVENTORY_ADS";
    case ReportingContext_ReportingContextEnum.VEHICLE_INVENTORY_ADS:
      return "VEHICLE_INVENTORY_ADS";
    case ReportingContext_ReportingContextEnum.FREE_LISTINGS:
      return "FREE_LISTINGS";
    case ReportingContext_ReportingContextEnum.FREE_LOCAL_LISTINGS:
      return "FREE_LOCAL_LISTINGS";
    case ReportingContext_ReportingContextEnum.FREE_LOCAL_VEHICLE_LISTINGS:
      return "FREE_LOCAL_VEHICLE_LISTINGS";
    case ReportingContext_ReportingContextEnum.YOUTUBE_SHOPPING:
      return "YOUTUBE_SHOPPING";
    case ReportingContext_ReportingContextEnum.CLOUD_RETAIL:
      return "CLOUD_RETAIL";
    case ReportingContext_ReportingContextEnum.LOCAL_CLOUD_RETAIL:
      return "LOCAL_CLOUD_RETAIL";
    case ReportingContext_ReportingContextEnum.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/**
 * [Channel](https://support.google.com/merchants/answer/7361332) of a product.
 *
 * Channel is used to distinguish between online and local products.
 */
export interface Channel {
}

/** Channel values. */
export enum Channel_ChannelEnum {
  /** CHANNEL_ENUM_UNSPECIFIED - Not specified. */
  CHANNEL_ENUM_UNSPECIFIED = 0,
  /** ONLINE - Online product. */
  ONLINE = 1,
  /** LOCAL - Local product. */
  LOCAL = 2,
  UNRECOGNIZED = -1,
}

export function channel_ChannelEnumFromJSON(object: any): Channel_ChannelEnum {
  switch (object) {
    case 0:
    case "CHANNEL_ENUM_UNSPECIFIED":
      return Channel_ChannelEnum.CHANNEL_ENUM_UNSPECIFIED;
    case 1:
    case "ONLINE":
      return Channel_ChannelEnum.ONLINE;
    case 2:
    case "LOCAL":
      return Channel_ChannelEnum.LOCAL;
    case -1:
    case "UNRECOGNIZED":
    default:
      return Channel_ChannelEnum.UNRECOGNIZED;
  }
}

export function channel_ChannelEnumToJSON(object: Channel_ChannelEnum): string {
  switch (object) {
    case Channel_ChannelEnum.CHANNEL_ENUM_UNSPECIFIED:
      return "CHANNEL_ENUM_UNSPECIFIED";
    case Channel_ChannelEnum.ONLINE:
      return "ONLINE";
    case Channel_ChannelEnum.LOCAL:
      return "LOCAL";
    case Channel_ChannelEnum.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseWeight(): Weight {
  return { amountMicros: undefined, unit: 0 };
}

export const Weight: MessageFns<Weight> = {
  encode(message: Weight, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.amountMicros !== undefined) {
      writer.uint32(8).int64(message.amountMicros.toString());
    }
    if (message.unit !== 0) {
      writer.uint32(16).int32(message.unit);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Weight {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseWeight();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.amountMicros = Long.fromString(reader.int64().toString());
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.unit = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Weight {
    return {
      amountMicros: isSet(object.amountMicros) ? Long.fromValue(object.amountMicros) : undefined,
      unit: isSet(object.unit) ? weight_WeightUnitFromJSON(object.unit) : 0,
    };
  },

  toJSON(message: Weight): unknown {
    const obj: any = {};
    if (message.amountMicros !== undefined) {
      obj.amountMicros = (message.amountMicros || Long.ZERO).toString();
    }
    if (message.unit !== 0) {
      obj.unit = weight_WeightUnitToJSON(message.unit);
    }
    return obj;
  },

  create(base?: DeepPartial<Weight>): Weight {
    return Weight.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<Weight>): Weight {
    const message = createBaseWeight();
    message.amountMicros = (object.amountMicros !== undefined && object.amountMicros !== null)
      ? Long.fromValue(object.amountMicros)
      : undefined;
    message.unit = object.unit ?? 0;
    return message;
  },
};

function createBasePrice(): Price {
  return { amountMicros: undefined, currencyCode: undefined };
}

export const Price: MessageFns<Price> = {
  encode(message: Price, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.amountMicros !== undefined) {
      writer.uint32(8).int64(message.amountMicros.toString());
    }
    if (message.currencyCode !== undefined) {
      writer.uint32(18).string(message.currencyCode);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Price {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePrice();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.amountMicros = Long.fromString(reader.int64().toString());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.currencyCode = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Price {
    return {
      amountMicros: isSet(object.amountMicros) ? Long.fromValue(object.amountMicros) : undefined,
      currencyCode: isSet(object.currencyCode) ? globalThis.String(object.currencyCode) : undefined,
    };
  },

  toJSON(message: Price): unknown {
    const obj: any = {};
    if (message.amountMicros !== undefined) {
      obj.amountMicros = (message.amountMicros || Long.ZERO).toString();
    }
    if (message.currencyCode !== undefined) {
      obj.currencyCode = message.currencyCode;
    }
    return obj;
  },

  create(base?: DeepPartial<Price>): Price {
    return Price.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<Price>): Price {
    const message = createBasePrice();
    message.amountMicros = (object.amountMicros !== undefined && object.amountMicros !== null)
      ? Long.fromValue(object.amountMicros)
      : undefined;
    message.currencyCode = object.currencyCode ?? undefined;
    return message;
  },
};

function createBaseCustomAttribute(): CustomAttribute {
  return { name: undefined, value: undefined, groupValues: [] };
}

export const CustomAttribute: MessageFns<CustomAttribute> = {
  encode(message: CustomAttribute, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== undefined) {
      writer.uint32(10).string(message.name);
    }
    if (message.value !== undefined) {
      writer.uint32(18).string(message.value);
    }
    for (const v of message.groupValues) {
      CustomAttribute.encode(v!, writer.uint32(26).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomAttribute {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomAttribute();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.value = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.groupValues.push(CustomAttribute.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CustomAttribute {
    return {
      name: isSet(object.name) ? globalThis.String(object.name) : undefined,
      value: isSet(object.value) ? globalThis.String(object.value) : undefined,
      groupValues: globalThis.Array.isArray(object?.groupValues)
        ? object.groupValues.map((e: any) => CustomAttribute.fromJSON(e))
        : [],
    };
  },

  toJSON(message: CustomAttribute): unknown {
    const obj: any = {};
    if (message.name !== undefined) {
      obj.name = message.name;
    }
    if (message.value !== undefined) {
      obj.value = message.value;
    }
    if (message.groupValues?.length) {
      obj.groupValues = message.groupValues.map((e) => CustomAttribute.toJSON(e));
    }
    return obj;
  },

  create(base?: DeepPartial<CustomAttribute>): CustomAttribute {
    return CustomAttribute.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CustomAttribute>): CustomAttribute {
    const message = createBaseCustomAttribute();
    message.name = object.name ?? undefined;
    message.value = object.value ?? undefined;
    message.groupValues = object.groupValues?.map((e) => CustomAttribute.fromPartial(e)) || [];
    return message;
  },
};

function createBaseDestination(): Destination {
  return {};
}

export const Destination: MessageFns<Destination> = {
  encode(_: Destination, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Destination {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDestination();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): Destination {
    return {};
  },

  toJSON(_: Destination): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<Destination>): Destination {
    return Destination.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<Destination>): Destination {
    const message = createBaseDestination();
    return message;
  },
};

function createBaseReportingContext(): ReportingContext {
  return {};
}

export const ReportingContext: MessageFns<ReportingContext> = {
  encode(_: ReportingContext, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ReportingContext {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseReportingContext();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ReportingContext {
    return {};
  },

  toJSON(_: ReportingContext): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ReportingContext>): ReportingContext {
    return ReportingContext.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ReportingContext>): ReportingContext {
    const message = createBaseReportingContext();
    return message;
  },
};

function createBaseChannel(): Channel {
  return {};
}

export const Channel: MessageFns<Channel> = {
  encode(_: Channel, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Channel {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseChannel();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): Channel {
    return {};
  },

  toJSON(_: Channel): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<Channel>): Channel {
    return Channel.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<Channel>): Channel {
    const message = createBaseChannel();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
