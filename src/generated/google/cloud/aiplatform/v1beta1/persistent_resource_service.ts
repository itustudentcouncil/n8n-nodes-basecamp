// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/aiplatform/v1beta1/persistent_resource_service.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { Operation } from "../../../longrunning/operations.js";
import { FieldMask } from "../../../protobuf/field_mask.js";
import { GenericOperationMetadata } from "./operation.js";
import { PersistentResource } from "./persistent_resource.js";

export const protobufPackage = "google.cloud.aiplatform.v1beta1";

/**
 * Request message for
 * [PersistentResourceService.CreatePersistentResource][google.cloud.aiplatform.v1beta1.PersistentResourceService.CreatePersistentResource].
 */
export interface CreatePersistentResourceRequest {
  /**
   * Required. The resource name of the Location to create the
   * PersistentResource in. Format: `projects/{project}/locations/{location}`
   */
  parent: string;
  /** Required. The PersistentResource to create. */
  persistentResource:
    | PersistentResource
    | undefined;
  /**
   * Required. The ID to use for the PersistentResource, which become the final
   * component of the PersistentResource's resource name.
   *
   * The maximum length is 63 characters, and valid characters
   * are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
   */
  persistentResourceId: string;
}

/** Details of operations that perform create PersistentResource. */
export interface CreatePersistentResourceOperationMetadata {
  /** Operation metadata for PersistentResource. */
  genericMetadata:
    | GenericOperationMetadata
    | undefined;
  /** Progress Message for Create LRO */
  progressMessage: string;
}

/** Details of operations that perform update PersistentResource. */
export interface UpdatePersistentResourceOperationMetadata {
  /** Operation metadata for PersistentResource. */
  genericMetadata:
    | GenericOperationMetadata
    | undefined;
  /** Progress Message for Update LRO */
  progressMessage: string;
}

/** Details of operations that perform reboot PersistentResource. */
export interface RebootPersistentResourceOperationMetadata {
  /** Operation metadata for PersistentResource. */
  genericMetadata:
    | GenericOperationMetadata
    | undefined;
  /** Progress Message for Reboot LRO */
  progressMessage: string;
}

/**
 * Request message for
 * [PersistentResourceService.GetPersistentResource][google.cloud.aiplatform.v1beta1.PersistentResourceService.GetPersistentResource].
 */
export interface GetPersistentResourceRequest {
  /**
   * Required. The name of the PersistentResource resource.
   * Format:
   * `projects/{project_id_or_number}/locations/{location_id}/persistentResources/{persistent_resource_id}`
   */
  name: string;
}

/** Request message for [PersistentResourceService.ListPersistentResource][]. */
export interface ListPersistentResourcesRequest {
  /**
   * Required. The resource name of the Location to list the PersistentResources
   * from. Format: `projects/{project}/locations/{location}`
   */
  parent: string;
  /** Optional. The standard list page size. */
  pageSize: number;
  /**
   * Optional. The standard list page token.
   * Typically obtained via
   * [ListPersistentResourceResponse.next_page_token][] of the previous
   * [PersistentResourceService.ListPersistentResource][] call.
   */
  pageToken: string;
}

/**
 * Response message for
 * [PersistentResourceService.ListPersistentResources][google.cloud.aiplatform.v1beta1.PersistentResourceService.ListPersistentResources]
 */
export interface ListPersistentResourcesResponse {
  persistentResources: PersistentResource[];
  /**
   * A token to retrieve next page of results.
   * Pass to
   * [ListPersistentResourcesRequest.page_token][google.cloud.aiplatform.v1beta1.ListPersistentResourcesRequest.page_token]
   * to obtain that page.
   */
  nextPageToken: string;
}

/**
 * Request message for
 * [PersistentResourceService.DeletePersistentResource][google.cloud.aiplatform.v1beta1.PersistentResourceService.DeletePersistentResource].
 */
export interface DeletePersistentResourceRequest {
  /**
   * Required. The name of the PersistentResource to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/persistentResources/{persistent_resource}`
   */
  name: string;
}

/** Request message for UpdatePersistentResource method. */
export interface UpdatePersistentResourceRequest {
  /**
   * Required. The PersistentResource to update.
   *
   * The PersistentResource's `name` field is used to identify the
   * PersistentResource to update. Format:
   * `projects/{project}/locations/{location}/persistentResources/{persistent_resource}`
   */
  persistentResource:
    | PersistentResource
    | undefined;
  /**
   * Required. Specify the fields to be overwritten in the PersistentResource by
   * the update method.
   */
  updateMask: string[] | undefined;
}

/**
 * Request message for
 * [PersistentResourceService.RebootPersistentResource][google.cloud.aiplatform.v1beta1.PersistentResourceService.RebootPersistentResource].
 */
export interface RebootPersistentResourceRequest {
  /**
   * Required. The name of the PersistentResource resource.
   * Format:
   * `projects/{project_id_or_number}/locations/{location_id}/persistentResources/{persistent_resource_id}`
   */
  name: string;
}

function createBaseCreatePersistentResourceRequest(): CreatePersistentResourceRequest {
  return { parent: "", persistentResource: undefined, persistentResourceId: "" };
}

export const CreatePersistentResourceRequest: MessageFns<CreatePersistentResourceRequest> = {
  encode(message: CreatePersistentResourceRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    if (message.persistentResource !== undefined) {
      PersistentResource.encode(message.persistentResource, writer.uint32(18).fork()).join();
    }
    if (message.persistentResourceId !== "") {
      writer.uint32(26).string(message.persistentResourceId);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CreatePersistentResourceRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCreatePersistentResourceRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.persistentResource = PersistentResource.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.persistentResourceId = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CreatePersistentResourceRequest {
    return {
      parent: isSet(object.parent) ? globalThis.String(object.parent) : "",
      persistentResource: isSet(object.persistentResource)
        ? PersistentResource.fromJSON(object.persistentResource)
        : undefined,
      persistentResourceId: isSet(object.persistentResourceId) ? globalThis.String(object.persistentResourceId) : "",
    };
  },

  toJSON(message: CreatePersistentResourceRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    if (message.persistentResource !== undefined) {
      obj.persistentResource = PersistentResource.toJSON(message.persistentResource);
    }
    if (message.persistentResourceId !== "") {
      obj.persistentResourceId = message.persistentResourceId;
    }
    return obj;
  },

  create(base?: DeepPartial<CreatePersistentResourceRequest>): CreatePersistentResourceRequest {
    return CreatePersistentResourceRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CreatePersistentResourceRequest>): CreatePersistentResourceRequest {
    const message = createBaseCreatePersistentResourceRequest();
    message.parent = object.parent ?? "";
    message.persistentResource = (object.persistentResource !== undefined && object.persistentResource !== null)
      ? PersistentResource.fromPartial(object.persistentResource)
      : undefined;
    message.persistentResourceId = object.persistentResourceId ?? "";
    return message;
  },
};

function createBaseCreatePersistentResourceOperationMetadata(): CreatePersistentResourceOperationMetadata {
  return { genericMetadata: undefined, progressMessage: "" };
}

export const CreatePersistentResourceOperationMetadata: MessageFns<CreatePersistentResourceOperationMetadata> = {
  encode(message: CreatePersistentResourceOperationMetadata, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.genericMetadata !== undefined) {
      GenericOperationMetadata.encode(message.genericMetadata, writer.uint32(10).fork()).join();
    }
    if (message.progressMessage !== "") {
      writer.uint32(18).string(message.progressMessage);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CreatePersistentResourceOperationMetadata {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCreatePersistentResourceOperationMetadata();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.genericMetadata = GenericOperationMetadata.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.progressMessage = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CreatePersistentResourceOperationMetadata {
    return {
      genericMetadata: isSet(object.genericMetadata)
        ? GenericOperationMetadata.fromJSON(object.genericMetadata)
        : undefined,
      progressMessage: isSet(object.progressMessage) ? globalThis.String(object.progressMessage) : "",
    };
  },

  toJSON(message: CreatePersistentResourceOperationMetadata): unknown {
    const obj: any = {};
    if (message.genericMetadata !== undefined) {
      obj.genericMetadata = GenericOperationMetadata.toJSON(message.genericMetadata);
    }
    if (message.progressMessage !== "") {
      obj.progressMessage = message.progressMessage;
    }
    return obj;
  },

  create(base?: DeepPartial<CreatePersistentResourceOperationMetadata>): CreatePersistentResourceOperationMetadata {
    return CreatePersistentResourceOperationMetadata.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<CreatePersistentResourceOperationMetadata>,
  ): CreatePersistentResourceOperationMetadata {
    const message = createBaseCreatePersistentResourceOperationMetadata();
    message.genericMetadata = (object.genericMetadata !== undefined && object.genericMetadata !== null)
      ? GenericOperationMetadata.fromPartial(object.genericMetadata)
      : undefined;
    message.progressMessage = object.progressMessage ?? "";
    return message;
  },
};

function createBaseUpdatePersistentResourceOperationMetadata(): UpdatePersistentResourceOperationMetadata {
  return { genericMetadata: undefined, progressMessage: "" };
}

export const UpdatePersistentResourceOperationMetadata: MessageFns<UpdatePersistentResourceOperationMetadata> = {
  encode(message: UpdatePersistentResourceOperationMetadata, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.genericMetadata !== undefined) {
      GenericOperationMetadata.encode(message.genericMetadata, writer.uint32(10).fork()).join();
    }
    if (message.progressMessage !== "") {
      writer.uint32(18).string(message.progressMessage);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): UpdatePersistentResourceOperationMetadata {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseUpdatePersistentResourceOperationMetadata();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.genericMetadata = GenericOperationMetadata.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.progressMessage = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): UpdatePersistentResourceOperationMetadata {
    return {
      genericMetadata: isSet(object.genericMetadata)
        ? GenericOperationMetadata.fromJSON(object.genericMetadata)
        : undefined,
      progressMessage: isSet(object.progressMessage) ? globalThis.String(object.progressMessage) : "",
    };
  },

  toJSON(message: UpdatePersistentResourceOperationMetadata): unknown {
    const obj: any = {};
    if (message.genericMetadata !== undefined) {
      obj.genericMetadata = GenericOperationMetadata.toJSON(message.genericMetadata);
    }
    if (message.progressMessage !== "") {
      obj.progressMessage = message.progressMessage;
    }
    return obj;
  },

  create(base?: DeepPartial<UpdatePersistentResourceOperationMetadata>): UpdatePersistentResourceOperationMetadata {
    return UpdatePersistentResourceOperationMetadata.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<UpdatePersistentResourceOperationMetadata>,
  ): UpdatePersistentResourceOperationMetadata {
    const message = createBaseUpdatePersistentResourceOperationMetadata();
    message.genericMetadata = (object.genericMetadata !== undefined && object.genericMetadata !== null)
      ? GenericOperationMetadata.fromPartial(object.genericMetadata)
      : undefined;
    message.progressMessage = object.progressMessage ?? "";
    return message;
  },
};

function createBaseRebootPersistentResourceOperationMetadata(): RebootPersistentResourceOperationMetadata {
  return { genericMetadata: undefined, progressMessage: "" };
}

export const RebootPersistentResourceOperationMetadata: MessageFns<RebootPersistentResourceOperationMetadata> = {
  encode(message: RebootPersistentResourceOperationMetadata, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.genericMetadata !== undefined) {
      GenericOperationMetadata.encode(message.genericMetadata, writer.uint32(10).fork()).join();
    }
    if (message.progressMessage !== "") {
      writer.uint32(18).string(message.progressMessage);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): RebootPersistentResourceOperationMetadata {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRebootPersistentResourceOperationMetadata();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.genericMetadata = GenericOperationMetadata.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.progressMessage = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): RebootPersistentResourceOperationMetadata {
    return {
      genericMetadata: isSet(object.genericMetadata)
        ? GenericOperationMetadata.fromJSON(object.genericMetadata)
        : undefined,
      progressMessage: isSet(object.progressMessage) ? globalThis.String(object.progressMessage) : "",
    };
  },

  toJSON(message: RebootPersistentResourceOperationMetadata): unknown {
    const obj: any = {};
    if (message.genericMetadata !== undefined) {
      obj.genericMetadata = GenericOperationMetadata.toJSON(message.genericMetadata);
    }
    if (message.progressMessage !== "") {
      obj.progressMessage = message.progressMessage;
    }
    return obj;
  },

  create(base?: DeepPartial<RebootPersistentResourceOperationMetadata>): RebootPersistentResourceOperationMetadata {
    return RebootPersistentResourceOperationMetadata.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<RebootPersistentResourceOperationMetadata>,
  ): RebootPersistentResourceOperationMetadata {
    const message = createBaseRebootPersistentResourceOperationMetadata();
    message.genericMetadata = (object.genericMetadata !== undefined && object.genericMetadata !== null)
      ? GenericOperationMetadata.fromPartial(object.genericMetadata)
      : undefined;
    message.progressMessage = object.progressMessage ?? "";
    return message;
  },
};

function createBaseGetPersistentResourceRequest(): GetPersistentResourceRequest {
  return { name: "" };
}

export const GetPersistentResourceRequest: MessageFns<GetPersistentResourceRequest> = {
  encode(message: GetPersistentResourceRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GetPersistentResourceRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetPersistentResourceRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetPersistentResourceRequest {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: GetPersistentResourceRequest): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<GetPersistentResourceRequest>): GetPersistentResourceRequest {
    return GetPersistentResourceRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GetPersistentResourceRequest>): GetPersistentResourceRequest {
    const message = createBaseGetPersistentResourceRequest();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseListPersistentResourcesRequest(): ListPersistentResourcesRequest {
  return { parent: "", pageSize: 0, pageToken: "" };
}

export const ListPersistentResourcesRequest: MessageFns<ListPersistentResourcesRequest> = {
  encode(message: ListPersistentResourcesRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    if (message.pageSize !== 0) {
      writer.uint32(24).int32(message.pageSize);
    }
    if (message.pageToken !== "") {
      writer.uint32(34).string(message.pageToken);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListPersistentResourcesRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListPersistentResourcesRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.pageSize = reader.int32();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.pageToken = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListPersistentResourcesRequest {
    return {
      parent: isSet(object.parent) ? globalThis.String(object.parent) : "",
      pageSize: isSet(object.pageSize) ? globalThis.Number(object.pageSize) : 0,
      pageToken: isSet(object.pageToken) ? globalThis.String(object.pageToken) : "",
    };
  },

  toJSON(message: ListPersistentResourcesRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    if (message.pageSize !== 0) {
      obj.pageSize = Math.round(message.pageSize);
    }
    if (message.pageToken !== "") {
      obj.pageToken = message.pageToken;
    }
    return obj;
  },

  create(base?: DeepPartial<ListPersistentResourcesRequest>): ListPersistentResourcesRequest {
    return ListPersistentResourcesRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListPersistentResourcesRequest>): ListPersistentResourcesRequest {
    const message = createBaseListPersistentResourcesRequest();
    message.parent = object.parent ?? "";
    message.pageSize = object.pageSize ?? 0;
    message.pageToken = object.pageToken ?? "";
    return message;
  },
};

function createBaseListPersistentResourcesResponse(): ListPersistentResourcesResponse {
  return { persistentResources: [], nextPageToken: "" };
}

export const ListPersistentResourcesResponse: MessageFns<ListPersistentResourcesResponse> = {
  encode(message: ListPersistentResourcesResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.persistentResources) {
      PersistentResource.encode(v!, writer.uint32(10).fork()).join();
    }
    if (message.nextPageToken !== "") {
      writer.uint32(18).string(message.nextPageToken);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListPersistentResourcesResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListPersistentResourcesResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.persistentResources.push(PersistentResource.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.nextPageToken = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListPersistentResourcesResponse {
    return {
      persistentResources: globalThis.Array.isArray(object?.persistentResources)
        ? object.persistentResources.map((e: any) => PersistentResource.fromJSON(e))
        : [],
      nextPageToken: isSet(object.nextPageToken) ? globalThis.String(object.nextPageToken) : "",
    };
  },

  toJSON(message: ListPersistentResourcesResponse): unknown {
    const obj: any = {};
    if (message.persistentResources?.length) {
      obj.persistentResources = message.persistentResources.map((e) => PersistentResource.toJSON(e));
    }
    if (message.nextPageToken !== "") {
      obj.nextPageToken = message.nextPageToken;
    }
    return obj;
  },

  create(base?: DeepPartial<ListPersistentResourcesResponse>): ListPersistentResourcesResponse {
    return ListPersistentResourcesResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListPersistentResourcesResponse>): ListPersistentResourcesResponse {
    const message = createBaseListPersistentResourcesResponse();
    message.persistentResources = object.persistentResources?.map((e) => PersistentResource.fromPartial(e)) || [];
    message.nextPageToken = object.nextPageToken ?? "";
    return message;
  },
};

function createBaseDeletePersistentResourceRequest(): DeletePersistentResourceRequest {
  return { name: "" };
}

export const DeletePersistentResourceRequest: MessageFns<DeletePersistentResourceRequest> = {
  encode(message: DeletePersistentResourceRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DeletePersistentResourceRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDeletePersistentResourceRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DeletePersistentResourceRequest {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: DeletePersistentResourceRequest): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<DeletePersistentResourceRequest>): DeletePersistentResourceRequest {
    return DeletePersistentResourceRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DeletePersistentResourceRequest>): DeletePersistentResourceRequest {
    const message = createBaseDeletePersistentResourceRequest();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseUpdatePersistentResourceRequest(): UpdatePersistentResourceRequest {
  return { persistentResource: undefined, updateMask: undefined };
}

export const UpdatePersistentResourceRequest: MessageFns<UpdatePersistentResourceRequest> = {
  encode(message: UpdatePersistentResourceRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.persistentResource !== undefined) {
      PersistentResource.encode(message.persistentResource, writer.uint32(10).fork()).join();
    }
    if (message.updateMask !== undefined) {
      FieldMask.encode(FieldMask.wrap(message.updateMask), writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): UpdatePersistentResourceRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseUpdatePersistentResourceRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.persistentResource = PersistentResource.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.updateMask = FieldMask.unwrap(FieldMask.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): UpdatePersistentResourceRequest {
    return {
      persistentResource: isSet(object.persistentResource)
        ? PersistentResource.fromJSON(object.persistentResource)
        : undefined,
      updateMask: isSet(object.updateMask) ? FieldMask.unwrap(FieldMask.fromJSON(object.updateMask)) : undefined,
    };
  },

  toJSON(message: UpdatePersistentResourceRequest): unknown {
    const obj: any = {};
    if (message.persistentResource !== undefined) {
      obj.persistentResource = PersistentResource.toJSON(message.persistentResource);
    }
    if (message.updateMask !== undefined) {
      obj.updateMask = FieldMask.toJSON(FieldMask.wrap(message.updateMask));
    }
    return obj;
  },

  create(base?: DeepPartial<UpdatePersistentResourceRequest>): UpdatePersistentResourceRequest {
    return UpdatePersistentResourceRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<UpdatePersistentResourceRequest>): UpdatePersistentResourceRequest {
    const message = createBaseUpdatePersistentResourceRequest();
    message.persistentResource = (object.persistentResource !== undefined && object.persistentResource !== null)
      ? PersistentResource.fromPartial(object.persistentResource)
      : undefined;
    message.updateMask = object.updateMask ?? undefined;
    return message;
  },
};

function createBaseRebootPersistentResourceRequest(): RebootPersistentResourceRequest {
  return { name: "" };
}

export const RebootPersistentResourceRequest: MessageFns<RebootPersistentResourceRequest> = {
  encode(message: RebootPersistentResourceRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): RebootPersistentResourceRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRebootPersistentResourceRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): RebootPersistentResourceRequest {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: RebootPersistentResourceRequest): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<RebootPersistentResourceRequest>): RebootPersistentResourceRequest {
    return RebootPersistentResourceRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<RebootPersistentResourceRequest>): RebootPersistentResourceRequest {
    const message = createBaseRebootPersistentResourceRequest();
    message.name = object.name ?? "";
    return message;
  },
};

/** A service for managing Vertex AI's machine learning PersistentResource. */
export type PersistentResourceServiceDefinition = typeof PersistentResourceServiceDefinition;
export const PersistentResourceServiceDefinition = {
  name: "PersistentResourceService",
  fullName: "google.cloud.aiplatform.v1beta1.PersistentResourceService",
  methods: {
    /** Creates a PersistentResource. */
    createPersistentResource: {
      name: "CreatePersistentResource",
      requestType: CreatePersistentResourceRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              63,
              10,
              18,
              80,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              18,
              41,
              67,
              114,
              101,
              97,
              116,
              101,
              80,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [
            Buffer.from([
              49,
              112,
              97,
              114,
              101,
              110,
              116,
              44,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              44,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              100,
            ]),
          ],
          578365826: [
            Buffer.from([
              83,
              58,
              19,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              34,
              60,
              47,
              118,
              49,
              98,
              101,
              116,
              97,
              49,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
            ]),
          ],
        },
      },
    },
    /** Gets a PersistentResource. */
    getPersistentResource: {
      name: "GetPersistentResource",
      requestType: GetPersistentResourceRequest,
      requestStream: false,
      responseType: PersistentResource,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              62,
              18,
              60,
              47,
              118,
              49,
              98,
              101,
              116,
              97,
              49,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Lists PersistentResources in a Location. */
    listPersistentResources: {
      name: "ListPersistentResources",
      requestType: ListPersistentResourcesRequest,
      requestStream: false,
      responseType: ListPersistentResourcesResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              62,
              18,
              60,
              47,
              118,
              49,
              98,
              101,
              116,
              97,
              49,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
            ]),
          ],
        },
      },
    },
    /** Deletes a PersistentResource. */
    deletePersistentResource: {
      name: "DeletePersistentResource",
      requestType: DeletePersistentResourceRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              48,
              10,
              21,
              103,
              111,
              111,
              103,
              108,
              101,
              46,
              112,
              114,
              111,
              116,
              111,
              98,
              117,
              102,
              46,
              69,
              109,
              112,
              116,
              121,
              18,
              23,
              68,
              101,
              108,
              101,
              116,
              101,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              62,
              42,
              60,
              47,
              118,
              49,
              98,
              101,
              116,
              97,
              49,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Updates a PersistentResource. */
    updatePersistentResource: {
      name: "UpdatePersistentResource",
      requestType: UpdatePersistentResourceRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              63,
              10,
              18,
              80,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              18,
              41,
              85,
              112,
              100,
              97,
              116,
              101,
              80,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [
            Buffer.from([
              31,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              44,
              117,
              112,
              100,
              97,
              116,
              101,
              95,
              109,
              97,
              115,
              107,
            ]),
          ],
          578365826: [
            Buffer.from([
              103,
              58,
              19,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              50,
              80,
              47,
              118,
              49,
              98,
              101,
              116,
              97,
              49,
              47,
              123,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              46,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Reboots a PersistentResource. */
    rebootPersistentResource: {
      name: "RebootPersistentResource",
      requestType: RebootPersistentResourceRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              63,
              10,
              18,
              80,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              18,
              41,
              82,
              101,
              98,
              111,
              111,
              116,
              80,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              72,
              58,
              1,
              42,
              34,
              67,
              47,
              118,
              49,
              98,
              101,
              116,
              97,
              49,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              112,
              101,
              114,
              115,
              105,
              115,
              116,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              47,
              42,
              125,
              58,
              114,
              101,
              98,
              111,
              111,
              116,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface PersistentResourceServiceImplementation<CallContextExt = {}> {
  /** Creates a PersistentResource. */
  createPersistentResource(
    request: CreatePersistentResourceRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /** Gets a PersistentResource. */
  getPersistentResource(
    request: GetPersistentResourceRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<PersistentResource>>;
  /** Lists PersistentResources in a Location. */
  listPersistentResources(
    request: ListPersistentResourcesRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListPersistentResourcesResponse>>;
  /** Deletes a PersistentResource. */
  deletePersistentResource(
    request: DeletePersistentResourceRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /** Updates a PersistentResource. */
  updatePersistentResource(
    request: UpdatePersistentResourceRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /** Reboots a PersistentResource. */
  rebootPersistentResource(
    request: RebootPersistentResourceRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
}

export interface PersistentResourceServiceClient<CallOptionsExt = {}> {
  /** Creates a PersistentResource. */
  createPersistentResource(
    request: DeepPartial<CreatePersistentResourceRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /** Gets a PersistentResource. */
  getPersistentResource(
    request: DeepPartial<GetPersistentResourceRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<PersistentResource>;
  /** Lists PersistentResources in a Location. */
  listPersistentResources(
    request: DeepPartial<ListPersistentResourcesRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListPersistentResourcesResponse>;
  /** Deletes a PersistentResource. */
  deletePersistentResource(
    request: DeepPartial<DeletePersistentResourceRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /** Updates a PersistentResource. */
  updatePersistentResource(
    request: DeepPartial<UpdatePersistentResourceRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /** Reboots a PersistentResource. */
  rebootPersistentResource(
    request: DeepPartial<RebootPersistentResourceRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
