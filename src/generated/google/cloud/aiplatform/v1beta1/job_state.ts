// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/aiplatform/v1beta1/job_state.proto

/* eslint-disable */

export const protobufPackage = "google.cloud.aiplatform.v1beta1";

/** Describes the state of a job. */
export enum JobState {
  /** JOB_STATE_UNSPECIFIED - The job state is unspecified. */
  JOB_STATE_UNSPECIFIED = 0,
  /** JOB_STATE_QUEUED - The job has been just created or resumed and processing has not yet begun. */
  JOB_STATE_QUEUED = 1,
  /** JOB_STATE_PENDING - The service is preparing to run the job. */
  JOB_STATE_PENDING = 2,
  /** JOB_STATE_RUNNING - The job is in progress. */
  JOB_STATE_RUNNING = 3,
  /** JOB_STATE_SUCCEEDED - The job completed successfully. */
  JOB_STATE_SUCCEEDED = 4,
  /** JOB_STATE_FAILED - The job failed. */
  JOB_STATE_FAILED = 5,
  /**
   * JOB_STATE_CANCELLING - The job is being cancelled. From this state the job may only go to
   * either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
   */
  JOB_STATE_CANCELLING = 6,
  /** JOB_STATE_CANCELLED - The job has been cancelled. */
  JOB_STATE_CANCELLED = 7,
  /** JOB_STATE_PAUSED - The job has been stopped, and can be resumed. */
  JOB_STATE_PAUSED = 8,
  /** JOB_STATE_EXPIRED - The job has expired. */
  JOB_STATE_EXPIRED = 9,
  /**
   * JOB_STATE_UPDATING - The job is being updated. Only jobs in the `RUNNING` state can be updated.
   * After updating, the job goes back to the `RUNNING` state.
   */
  JOB_STATE_UPDATING = 10,
  /** JOB_STATE_PARTIALLY_SUCCEEDED - The job is partially succeeded, some results may be missing due to errors. */
  JOB_STATE_PARTIALLY_SUCCEEDED = 11,
  UNRECOGNIZED = -1,
}

export function jobStateFromJSON(object: any): JobState {
  switch (object) {
    case 0:
    case "JOB_STATE_UNSPECIFIED":
      return JobState.JOB_STATE_UNSPECIFIED;
    case 1:
    case "JOB_STATE_QUEUED":
      return JobState.JOB_STATE_QUEUED;
    case 2:
    case "JOB_STATE_PENDING":
      return JobState.JOB_STATE_PENDING;
    case 3:
    case "JOB_STATE_RUNNING":
      return JobState.JOB_STATE_RUNNING;
    case 4:
    case "JOB_STATE_SUCCEEDED":
      return JobState.JOB_STATE_SUCCEEDED;
    case 5:
    case "JOB_STATE_FAILED":
      return JobState.JOB_STATE_FAILED;
    case 6:
    case "JOB_STATE_CANCELLING":
      return JobState.JOB_STATE_CANCELLING;
    case 7:
    case "JOB_STATE_CANCELLED":
      return JobState.JOB_STATE_CANCELLED;
    case 8:
    case "JOB_STATE_PAUSED":
      return JobState.JOB_STATE_PAUSED;
    case 9:
    case "JOB_STATE_EXPIRED":
      return JobState.JOB_STATE_EXPIRED;
    case 10:
    case "JOB_STATE_UPDATING":
      return JobState.JOB_STATE_UPDATING;
    case 11:
    case "JOB_STATE_PARTIALLY_SUCCEEDED":
      return JobState.JOB_STATE_PARTIALLY_SUCCEEDED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JobState.UNRECOGNIZED;
  }
}

export function jobStateToJSON(object: JobState): string {
  switch (object) {
    case JobState.JOB_STATE_UNSPECIFIED:
      return "JOB_STATE_UNSPECIFIED";
    case JobState.JOB_STATE_QUEUED:
      return "JOB_STATE_QUEUED";
    case JobState.JOB_STATE_PENDING:
      return "JOB_STATE_PENDING";
    case JobState.JOB_STATE_RUNNING:
      return "JOB_STATE_RUNNING";
    case JobState.JOB_STATE_SUCCEEDED:
      return "JOB_STATE_SUCCEEDED";
    case JobState.JOB_STATE_FAILED:
      return "JOB_STATE_FAILED";
    case JobState.JOB_STATE_CANCELLING:
      return "JOB_STATE_CANCELLING";
    case JobState.JOB_STATE_CANCELLED:
      return "JOB_STATE_CANCELLED";
    case JobState.JOB_STATE_PAUSED:
      return "JOB_STATE_PAUSED";
    case JobState.JOB_STATE_EXPIRED:
      return "JOB_STATE_EXPIRED";
    case JobState.JOB_STATE_UPDATING:
      return "JOB_STATE_UPDATING";
    case JobState.JOB_STATE_PARTIALLY_SUCCEEDED:
      return "JOB_STATE_PARTIALLY_SUCCEEDED";
    case JobState.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
