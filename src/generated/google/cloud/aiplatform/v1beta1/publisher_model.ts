// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/aiplatform/v1beta1/publisher_model.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { AutomaticResources, DedicatedResources } from "./machine_resources.js";
import { LargeModelReference, ModelContainerSpec, PredictSchemata } from "./model.js";

export const protobufPackage = "google.cloud.aiplatform.v1beta1";

/** A Model Garden Publisher Model. */
export interface PublisherModel {
  /** Output only. The resource name of the PublisherModel. */
  name: string;
  /**
   * Output only. Immutable. The version ID of the PublisherModel.
   * A new version is committed when a new model version is uploaded under an
   * existing model id. It is an auto-incrementing decimal number in string
   * representation.
   */
  versionId: string;
  /** Required. Indicates the open source category of the publisher model. */
  openSourceCategory: PublisherModel_OpenSourceCategory;
  /**
   * Optional. The parent that this model was customized from. E.g., Vision API,
   * Natural Language API, LaMDA, T5, etc. Foundation models don't have parents.
   */
  parent:
    | PublisherModel_Parent
    | undefined;
  /** Optional. Supported call-to-action options. */
  supportedActions:
    | PublisherModel_CallToAction
    | undefined;
  /** Optional. Additional information about the model's Frameworks. */
  frameworks: string[];
  /** Optional. Indicates the launch stage of the model. */
  launchStage: PublisherModel_LaunchStage;
  /** Optional. Indicates the state of the model version. */
  versionState: PublisherModel_VersionState;
  /**
   * Optional. Output only. Immutable. Used to indicate this model has a
   * publisher model and provide the template of the publisher model resource
   * name.
   */
  publisherModelTemplate: string;
  /**
   * Optional. The schemata that describes formats of the PublisherModel's
   * predictions and explanations as given and returned via
   * [PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict].
   */
  predictSchemata: PredictSchemata | undefined;
}

/** An enum representing the open source category of a PublisherModel. */
export enum PublisherModel_OpenSourceCategory {
  /** OPEN_SOURCE_CATEGORY_UNSPECIFIED - The open source category is unspecified, which should not be used. */
  OPEN_SOURCE_CATEGORY_UNSPECIFIED = 0,
  /** PROPRIETARY - Used to indicate the PublisherModel is not open sourced. */
  PROPRIETARY = 1,
  /**
   * GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT - Used to indicate the PublisherModel is a Google-owned open source model
   * w/ Google checkpoint.
   */
  GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT = 2,
  /**
   * THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT - Used to indicate the PublisherModel is a 3p-owned open source model w/
   * Google checkpoint.
   */
  THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT = 3,
  /**
   * GOOGLE_OWNED_OSS - Used to indicate the PublisherModel is a Google-owned pure open source
   * model.
   */
  GOOGLE_OWNED_OSS = 4,
  /** THIRD_PARTY_OWNED_OSS - Used to indicate the PublisherModel is a 3p-owned pure open source model. */
  THIRD_PARTY_OWNED_OSS = 5,
  UNRECOGNIZED = -1,
}

export function publisherModel_OpenSourceCategoryFromJSON(object: any): PublisherModel_OpenSourceCategory {
  switch (object) {
    case 0:
    case "OPEN_SOURCE_CATEGORY_UNSPECIFIED":
      return PublisherModel_OpenSourceCategory.OPEN_SOURCE_CATEGORY_UNSPECIFIED;
    case 1:
    case "PROPRIETARY":
      return PublisherModel_OpenSourceCategory.PROPRIETARY;
    case 2:
    case "GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT":
      return PublisherModel_OpenSourceCategory.GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT;
    case 3:
    case "THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT":
      return PublisherModel_OpenSourceCategory.THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT;
    case 4:
    case "GOOGLE_OWNED_OSS":
      return PublisherModel_OpenSourceCategory.GOOGLE_OWNED_OSS;
    case 5:
    case "THIRD_PARTY_OWNED_OSS":
      return PublisherModel_OpenSourceCategory.THIRD_PARTY_OWNED_OSS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return PublisherModel_OpenSourceCategory.UNRECOGNIZED;
  }
}

export function publisherModel_OpenSourceCategoryToJSON(object: PublisherModel_OpenSourceCategory): string {
  switch (object) {
    case PublisherModel_OpenSourceCategory.OPEN_SOURCE_CATEGORY_UNSPECIFIED:
      return "OPEN_SOURCE_CATEGORY_UNSPECIFIED";
    case PublisherModel_OpenSourceCategory.PROPRIETARY:
      return "PROPRIETARY";
    case PublisherModel_OpenSourceCategory.GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT:
      return "GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT";
    case PublisherModel_OpenSourceCategory.THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT:
      return "THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT";
    case PublisherModel_OpenSourceCategory.GOOGLE_OWNED_OSS:
      return "GOOGLE_OWNED_OSS";
    case PublisherModel_OpenSourceCategory.THIRD_PARTY_OWNED_OSS:
      return "THIRD_PARTY_OWNED_OSS";
    case PublisherModel_OpenSourceCategory.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** An enum representing the launch stage of a PublisherModel. */
export enum PublisherModel_LaunchStage {
  /** LAUNCH_STAGE_UNSPECIFIED - The model launch stage is unspecified. */
  LAUNCH_STAGE_UNSPECIFIED = 0,
  /**
   * EXPERIMENTAL - Used to indicate the PublisherModel is at Experimental launch stage,
   * available to a small set of customers.
   */
  EXPERIMENTAL = 1,
  /**
   * PRIVATE_PREVIEW - Used to indicate the PublisherModel is at Private Preview launch stage,
   * only available to a small set of customers, although a larger set of
   * customers than an Experimental launch. Previews are the first launch
   * stage used to get feedback from customers.
   */
  PRIVATE_PREVIEW = 2,
  /**
   * PUBLIC_PREVIEW - Used to indicate the PublisherModel is at Public Preview launch stage,
   * available to all customers, although not supported for production
   * workloads.
   */
  PUBLIC_PREVIEW = 3,
  /**
   * GA - Used to indicate the PublisherModel is at GA launch stage, available to
   * all customers and ready for production workload.
   */
  GA = 4,
  UNRECOGNIZED = -1,
}

export function publisherModel_LaunchStageFromJSON(object: any): PublisherModel_LaunchStage {
  switch (object) {
    case 0:
    case "LAUNCH_STAGE_UNSPECIFIED":
      return PublisherModel_LaunchStage.LAUNCH_STAGE_UNSPECIFIED;
    case 1:
    case "EXPERIMENTAL":
      return PublisherModel_LaunchStage.EXPERIMENTAL;
    case 2:
    case "PRIVATE_PREVIEW":
      return PublisherModel_LaunchStage.PRIVATE_PREVIEW;
    case 3:
    case "PUBLIC_PREVIEW":
      return PublisherModel_LaunchStage.PUBLIC_PREVIEW;
    case 4:
    case "GA":
      return PublisherModel_LaunchStage.GA;
    case -1:
    case "UNRECOGNIZED":
    default:
      return PublisherModel_LaunchStage.UNRECOGNIZED;
  }
}

export function publisherModel_LaunchStageToJSON(object: PublisherModel_LaunchStage): string {
  switch (object) {
    case PublisherModel_LaunchStage.LAUNCH_STAGE_UNSPECIFIED:
      return "LAUNCH_STAGE_UNSPECIFIED";
    case PublisherModel_LaunchStage.EXPERIMENTAL:
      return "EXPERIMENTAL";
    case PublisherModel_LaunchStage.PRIVATE_PREVIEW:
      return "PRIVATE_PREVIEW";
    case PublisherModel_LaunchStage.PUBLIC_PREVIEW:
      return "PUBLIC_PREVIEW";
    case PublisherModel_LaunchStage.GA:
      return "GA";
    case PublisherModel_LaunchStage.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** An enum representing the state of the PublicModelVersion. */
export enum PublisherModel_VersionState {
  /** VERSION_STATE_UNSPECIFIED - The version state is unspecified. */
  VERSION_STATE_UNSPECIFIED = 0,
  /** VERSION_STATE_STABLE - Used to indicate the version is stable. */
  VERSION_STATE_STABLE = 1,
  /** VERSION_STATE_UNSTABLE - Used to indicate the version is unstable. */
  VERSION_STATE_UNSTABLE = 2,
  UNRECOGNIZED = -1,
}

export function publisherModel_VersionStateFromJSON(object: any): PublisherModel_VersionState {
  switch (object) {
    case 0:
    case "VERSION_STATE_UNSPECIFIED":
      return PublisherModel_VersionState.VERSION_STATE_UNSPECIFIED;
    case 1:
    case "VERSION_STATE_STABLE":
      return PublisherModel_VersionState.VERSION_STATE_STABLE;
    case 2:
    case "VERSION_STATE_UNSTABLE":
      return PublisherModel_VersionState.VERSION_STATE_UNSTABLE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return PublisherModel_VersionState.UNRECOGNIZED;
  }
}

export function publisherModel_VersionStateToJSON(object: PublisherModel_VersionState): string {
  switch (object) {
    case PublisherModel_VersionState.VERSION_STATE_UNSPECIFIED:
      return "VERSION_STATE_UNSPECIFIED";
    case PublisherModel_VersionState.VERSION_STATE_STABLE:
      return "VERSION_STATE_STABLE";
    case PublisherModel_VersionState.VERSION_STATE_UNSTABLE:
      return "VERSION_STATE_UNSTABLE";
    case PublisherModel_VersionState.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** Reference to a resource. */
export interface PublisherModel_ResourceReference {
  /** The URI of the resource. */
  uri?:
    | string
    | undefined;
  /** The resource name of the Google Cloud resource. */
  resourceName?:
    | string
    | undefined;
  /**
   * Use case (CUJ) of the resource.
   *
   * @deprecated
   */
  useCase?:
    | string
    | undefined;
  /**
   * Description of the resource.
   *
   * @deprecated
   */
  description?: string | undefined;
}

/** The information about the parent of a model. */
export interface PublisherModel_Parent {
  /**
   * Required. The display name of the parent. E.g., LaMDA, T5, Vision API,
   * Natural Language API.
   */
  displayName: string;
  /** Optional. The Google Cloud resource name or the URI reference. */
  reference: PublisherModel_ResourceReference | undefined;
}

/** A named piece of documentation. */
export interface PublisherModel_Documentation {
  /**
   * Required. E.g., OVERVIEW, USE CASES, DOCUMENTATION, SDK & SAMPLES, JAVA,
   * NODE.JS, etc..
   */
  title: string;
  /** Required. Content of this piece of document (in Markdown format). */
  content: string;
}

/** Actions could take on this Publisher Model. */
export interface PublisherModel_CallToAction {
  /** Optional. To view Rest API docs. */
  viewRestApi:
    | PublisherModel_CallToAction_ViewRestApi
    | undefined;
  /** Optional. Open notebook of the PublisherModel. */
  openNotebook:
    | PublisherModel_CallToAction_RegionalResourceReferences
    | undefined;
  /** Optional. Open notebooks of the PublisherModel. */
  openNotebooks?:
    | PublisherModel_CallToAction_OpenNotebooks
    | undefined;
  /** Optional. Create application using the PublisherModel. */
  createApplication:
    | PublisherModel_CallToAction_RegionalResourceReferences
    | undefined;
  /** Optional. Open fine-tuning pipeline of the PublisherModel. */
  openFineTuningPipeline:
    | PublisherModel_CallToAction_RegionalResourceReferences
    | undefined;
  /** Optional. Open fine-tuning pipelines of the PublisherModel. */
  openFineTuningPipelines?:
    | PublisherModel_CallToAction_OpenFineTuningPipelines
    | undefined;
  /** Optional. Open prompt-tuning pipeline of the PublisherModel. */
  openPromptTuningPipeline:
    | PublisherModel_CallToAction_RegionalResourceReferences
    | undefined;
  /** Optional. Open Genie / Playground. */
  openGenie:
    | PublisherModel_CallToAction_RegionalResourceReferences
    | undefined;
  /** Optional. Deploy the PublisherModel to Vertex Endpoint. */
  deploy:
    | PublisherModel_CallToAction_Deploy
    | undefined;
  /** Optional. Deploy PublisherModel to Google Kubernetes Engine. */
  deployGke:
    | PublisherModel_CallToAction_DeployGke
    | undefined;
  /** Optional. Open in Generation AI Studio. */
  openGenerationAiStudio:
    | PublisherModel_CallToAction_RegionalResourceReferences
    | undefined;
  /** Optional. Request for access. */
  requestAccess:
    | PublisherModel_CallToAction_RegionalResourceReferences
    | undefined;
  /** Optional. Open evaluation pipeline of the PublisherModel. */
  openEvaluationPipeline: PublisherModel_CallToAction_RegionalResourceReferences | undefined;
}

/**
 * The regional resource name or the URI. Key is region, e.g.,
 * us-central1, europe-west2, global, etc..
 */
export interface PublisherModel_CallToAction_RegionalResourceReferences {
  /** Required. */
  references: { [key: string]: PublisherModel_ResourceReference };
  /** Required. */
  title: string;
  /** Optional. Title of the resource. */
  resourceTitle?:
    | string
    | undefined;
  /** Optional. Use case (CUJ) of the resource. */
  resourceUseCase?:
    | string
    | undefined;
  /** Optional. Description of the resource. */
  resourceDescription?: string | undefined;
}

export interface PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry {
  key: string;
  value: PublisherModel_ResourceReference | undefined;
}

/** Rest API docs. */
export interface PublisherModel_CallToAction_ViewRestApi {
  /** Required. */
  documentations: PublisherModel_Documentation[];
  /** Required. The title of the view rest API. */
  title: string;
}

/** Open notebooks. */
export interface PublisherModel_CallToAction_OpenNotebooks {
  /** Required. Regional resource references to notebooks. */
  notebooks: PublisherModel_CallToAction_RegionalResourceReferences[];
}

/** Open fine tuning pipelines. */
export interface PublisherModel_CallToAction_OpenFineTuningPipelines {
  /** Required. Regional resource references to fine tuning pipelines. */
  fineTuningPipelines: PublisherModel_CallToAction_RegionalResourceReferences[];
}

/**
 * Model metadata that is needed for UploadModel or
 * DeployModel/CreateEndpoint requests.
 */
export interface PublisherModel_CallToAction_Deploy {
  /**
   * A description of resources that are dedicated to the DeployedModel,
   * and that need a higher degree of manual configuration.
   */
  dedicatedResources?:
    | DedicatedResources
    | undefined;
  /**
   * A description of resources that to large degree are decided by Vertex
   * AI, and require only a modest additional configuration.
   */
  automaticResources?:
    | AutomaticResources
    | undefined;
  /**
   * The resource name of the shared DeploymentResourcePool to deploy on.
   * Format:
   * `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
   */
  sharedResources?:
    | string
    | undefined;
  /** Optional. Default model display name. */
  modelDisplayName: string;
  /**
   * Optional. Large model reference. When this is set, model_artifact_spec
   * is not needed.
   */
  largeModelReference:
    | LargeModelReference
    | undefined;
  /**
   * Optional. The specification of the container that is to be used when
   * deploying this Model in Vertex AI. Not present for Large Models.
   */
  containerSpec:
    | ModelContainerSpec
    | undefined;
  /**
   * Optional. The path to the directory containing the Model artifact and
   * any of its supporting files.
   */
  artifactUri: string;
  /**
   * Optional. The name of the deploy task (e.g., "text to image
   * generation").
   */
  deployTaskName?:
    | string
    | undefined;
  /** Optional. Metadata information about this deployment config. */
  deployMetadata?:
    | PublisherModel_CallToAction_Deploy_DeployMetadata
    | undefined;
  /** Required. The title of the regional resource reference. */
  title: string;
  /**
   * Optional. The signed URI for ephemeral Cloud Storage access to model
   * artifact.
   */
  publicArtifactUri: string;
}

/**
 * Metadata information about the deployment for managing deployment
 * config.
 */
export interface PublisherModel_CallToAction_Deploy_DeployMetadata {
  /**
   * Optional. Labels for the deployment. For managing deployment config
   * like verifying, source of deployment config, etc.
   */
  labels: { [key: string]: string };
  /** Optional. Sample request for deployed endpoint. */
  sampleRequest: string;
}

export interface PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry {
  key: string;
  value: string;
}

/** Configurations for PublisherModel GKE deployment */
export interface PublisherModel_CallToAction_DeployGke {
  /** Optional. GKE deployment configuration in yaml format. */
  gkeYamlConfigs: string[];
}

function createBasePublisherModel(): PublisherModel {
  return {
    name: "",
    versionId: "",
    openSourceCategory: 0,
    parent: undefined,
    supportedActions: undefined,
    frameworks: [],
    launchStage: 0,
    versionState: 0,
    publisherModelTemplate: "",
    predictSchemata: undefined,
  };
}

export const PublisherModel: MessageFns<PublisherModel> = {
  encode(message: PublisherModel, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    if (message.versionId !== "") {
      writer.uint32(18).string(message.versionId);
    }
    if (message.openSourceCategory !== 0) {
      writer.uint32(56).int32(message.openSourceCategory);
    }
    if (message.parent !== undefined) {
      PublisherModel_Parent.encode(message.parent, writer.uint32(114).fork()).join();
    }
    if (message.supportedActions !== undefined) {
      PublisherModel_CallToAction.encode(message.supportedActions, writer.uint32(154).fork()).join();
    }
    for (const v of message.frameworks) {
      writer.uint32(186).string(v!);
    }
    if (message.launchStage !== 0) {
      writer.uint32(232).int32(message.launchStage);
    }
    if (message.versionState !== 0) {
      writer.uint32(296).int32(message.versionState);
    }
    if (message.publisherModelTemplate !== "") {
      writer.uint32(242).string(message.publisherModelTemplate);
    }
    if (message.predictSchemata !== undefined) {
      PredictSchemata.encode(message.predictSchemata, writer.uint32(250).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.versionId = reader.string();
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.openSourceCategory = reader.int32() as any;
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.parent = PublisherModel_Parent.decode(reader, reader.uint32());
          continue;
        case 19:
          if (tag !== 154) {
            break;
          }

          message.supportedActions = PublisherModel_CallToAction.decode(reader, reader.uint32());
          continue;
        case 23:
          if (tag !== 186) {
            break;
          }

          message.frameworks.push(reader.string());
          continue;
        case 29:
          if (tag !== 232) {
            break;
          }

          message.launchStage = reader.int32() as any;
          continue;
        case 37:
          if (tag !== 296) {
            break;
          }

          message.versionState = reader.int32() as any;
          continue;
        case 30:
          if (tag !== 242) {
            break;
          }

          message.publisherModelTemplate = reader.string();
          continue;
        case 31:
          if (tag !== 250) {
            break;
          }

          message.predictSchemata = PredictSchemata.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel {
    return {
      name: isSet(object.name) ? globalThis.String(object.name) : "",
      versionId: isSet(object.versionId) ? globalThis.String(object.versionId) : "",
      openSourceCategory: isSet(object.openSourceCategory)
        ? publisherModel_OpenSourceCategoryFromJSON(object.openSourceCategory)
        : 0,
      parent: isSet(object.parent) ? PublisherModel_Parent.fromJSON(object.parent) : undefined,
      supportedActions: isSet(object.supportedActions)
        ? PublisherModel_CallToAction.fromJSON(object.supportedActions)
        : undefined,
      frameworks: globalThis.Array.isArray(object?.frameworks)
        ? object.frameworks.map((e: any) => globalThis.String(e))
        : [],
      launchStage: isSet(object.launchStage) ? publisherModel_LaunchStageFromJSON(object.launchStage) : 0,
      versionState: isSet(object.versionState) ? publisherModel_VersionStateFromJSON(object.versionState) : 0,
      publisherModelTemplate: isSet(object.publisherModelTemplate)
        ? globalThis.String(object.publisherModelTemplate)
        : "",
      predictSchemata: isSet(object.predictSchemata) ? PredictSchemata.fromJSON(object.predictSchemata) : undefined,
    };
  },

  toJSON(message: PublisherModel): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    if (message.versionId !== "") {
      obj.versionId = message.versionId;
    }
    if (message.openSourceCategory !== 0) {
      obj.openSourceCategory = publisherModel_OpenSourceCategoryToJSON(message.openSourceCategory);
    }
    if (message.parent !== undefined) {
      obj.parent = PublisherModel_Parent.toJSON(message.parent);
    }
    if (message.supportedActions !== undefined) {
      obj.supportedActions = PublisherModel_CallToAction.toJSON(message.supportedActions);
    }
    if (message.frameworks?.length) {
      obj.frameworks = message.frameworks;
    }
    if (message.launchStage !== 0) {
      obj.launchStage = publisherModel_LaunchStageToJSON(message.launchStage);
    }
    if (message.versionState !== 0) {
      obj.versionState = publisherModel_VersionStateToJSON(message.versionState);
    }
    if (message.publisherModelTemplate !== "") {
      obj.publisherModelTemplate = message.publisherModelTemplate;
    }
    if (message.predictSchemata !== undefined) {
      obj.predictSchemata = PredictSchemata.toJSON(message.predictSchemata);
    }
    return obj;
  },

  create(base?: DeepPartial<PublisherModel>): PublisherModel {
    return PublisherModel.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PublisherModel>): PublisherModel {
    const message = createBasePublisherModel();
    message.name = object.name ?? "";
    message.versionId = object.versionId ?? "";
    message.openSourceCategory = object.openSourceCategory ?? 0;
    message.parent = (object.parent !== undefined && object.parent !== null)
      ? PublisherModel_Parent.fromPartial(object.parent)
      : undefined;
    message.supportedActions = (object.supportedActions !== undefined && object.supportedActions !== null)
      ? PublisherModel_CallToAction.fromPartial(object.supportedActions)
      : undefined;
    message.frameworks = object.frameworks?.map((e) => e) || [];
    message.launchStage = object.launchStage ?? 0;
    message.versionState = object.versionState ?? 0;
    message.publisherModelTemplate = object.publisherModelTemplate ?? "";
    message.predictSchemata = (object.predictSchemata !== undefined && object.predictSchemata !== null)
      ? PredictSchemata.fromPartial(object.predictSchemata)
      : undefined;
    return message;
  },
};

function createBasePublisherModel_ResourceReference(): PublisherModel_ResourceReference {
  return { uri: undefined, resourceName: undefined, useCase: undefined, description: undefined };
}

export const PublisherModel_ResourceReference: MessageFns<PublisherModel_ResourceReference> = {
  encode(message: PublisherModel_ResourceReference, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.uri !== undefined) {
      writer.uint32(10).string(message.uri);
    }
    if (message.resourceName !== undefined) {
      writer.uint32(18).string(message.resourceName);
    }
    if (message.useCase !== undefined) {
      writer.uint32(26).string(message.useCase);
    }
    if (message.description !== undefined) {
      writer.uint32(34).string(message.description);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_ResourceReference {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_ResourceReference();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.uri = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.useCase = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.description = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_ResourceReference {
    return {
      uri: isSet(object.uri) ? globalThis.String(object.uri) : undefined,
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : undefined,
      useCase: isSet(object.useCase) ? globalThis.String(object.useCase) : undefined,
      description: isSet(object.description) ? globalThis.String(object.description) : undefined,
    };
  },

  toJSON(message: PublisherModel_ResourceReference): unknown {
    const obj: any = {};
    if (message.uri !== undefined) {
      obj.uri = message.uri;
    }
    if (message.resourceName !== undefined) {
      obj.resourceName = message.resourceName;
    }
    if (message.useCase !== undefined) {
      obj.useCase = message.useCase;
    }
    if (message.description !== undefined) {
      obj.description = message.description;
    }
    return obj;
  },

  create(base?: DeepPartial<PublisherModel_ResourceReference>): PublisherModel_ResourceReference {
    return PublisherModel_ResourceReference.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PublisherModel_ResourceReference>): PublisherModel_ResourceReference {
    const message = createBasePublisherModel_ResourceReference();
    message.uri = object.uri ?? undefined;
    message.resourceName = object.resourceName ?? undefined;
    message.useCase = object.useCase ?? undefined;
    message.description = object.description ?? undefined;
    return message;
  },
};

function createBasePublisherModel_Parent(): PublisherModel_Parent {
  return { displayName: "", reference: undefined };
}

export const PublisherModel_Parent: MessageFns<PublisherModel_Parent> = {
  encode(message: PublisherModel_Parent, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.displayName !== "") {
      writer.uint32(10).string(message.displayName);
    }
    if (message.reference !== undefined) {
      PublisherModel_ResourceReference.encode(message.reference, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_Parent {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_Parent();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.displayName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.reference = PublisherModel_ResourceReference.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_Parent {
    return {
      displayName: isSet(object.displayName) ? globalThis.String(object.displayName) : "",
      reference: isSet(object.reference) ? PublisherModel_ResourceReference.fromJSON(object.reference) : undefined,
    };
  },

  toJSON(message: PublisherModel_Parent): unknown {
    const obj: any = {};
    if (message.displayName !== "") {
      obj.displayName = message.displayName;
    }
    if (message.reference !== undefined) {
      obj.reference = PublisherModel_ResourceReference.toJSON(message.reference);
    }
    return obj;
  },

  create(base?: DeepPartial<PublisherModel_Parent>): PublisherModel_Parent {
    return PublisherModel_Parent.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PublisherModel_Parent>): PublisherModel_Parent {
    const message = createBasePublisherModel_Parent();
    message.displayName = object.displayName ?? "";
    message.reference = (object.reference !== undefined && object.reference !== null)
      ? PublisherModel_ResourceReference.fromPartial(object.reference)
      : undefined;
    return message;
  },
};

function createBasePublisherModel_Documentation(): PublisherModel_Documentation {
  return { title: "", content: "" };
}

export const PublisherModel_Documentation: MessageFns<PublisherModel_Documentation> = {
  encode(message: PublisherModel_Documentation, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.title !== "") {
      writer.uint32(10).string(message.title);
    }
    if (message.content !== "") {
      writer.uint32(18).string(message.content);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_Documentation {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_Documentation();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.title = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.content = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_Documentation {
    return {
      title: isSet(object.title) ? globalThis.String(object.title) : "",
      content: isSet(object.content) ? globalThis.String(object.content) : "",
    };
  },

  toJSON(message: PublisherModel_Documentation): unknown {
    const obj: any = {};
    if (message.title !== "") {
      obj.title = message.title;
    }
    if (message.content !== "") {
      obj.content = message.content;
    }
    return obj;
  },

  create(base?: DeepPartial<PublisherModel_Documentation>): PublisherModel_Documentation {
    return PublisherModel_Documentation.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PublisherModel_Documentation>): PublisherModel_Documentation {
    const message = createBasePublisherModel_Documentation();
    message.title = object.title ?? "";
    message.content = object.content ?? "";
    return message;
  },
};

function createBasePublisherModel_CallToAction(): PublisherModel_CallToAction {
  return {
    viewRestApi: undefined,
    openNotebook: undefined,
    openNotebooks: undefined,
    createApplication: undefined,
    openFineTuningPipeline: undefined,
    openFineTuningPipelines: undefined,
    openPromptTuningPipeline: undefined,
    openGenie: undefined,
    deploy: undefined,
    deployGke: undefined,
    openGenerationAiStudio: undefined,
    requestAccess: undefined,
    openEvaluationPipeline: undefined,
  };
}

export const PublisherModel_CallToAction: MessageFns<PublisherModel_CallToAction> = {
  encode(message: PublisherModel_CallToAction, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.viewRestApi !== undefined) {
      PublisherModel_CallToAction_ViewRestApi.encode(message.viewRestApi, writer.uint32(10).fork()).join();
    }
    if (message.openNotebook !== undefined) {
      PublisherModel_CallToAction_RegionalResourceReferences.encode(message.openNotebook, writer.uint32(18).fork())
        .join();
    }
    if (message.openNotebooks !== undefined) {
      PublisherModel_CallToAction_OpenNotebooks.encode(message.openNotebooks, writer.uint32(98).fork()).join();
    }
    if (message.createApplication !== undefined) {
      PublisherModel_CallToAction_RegionalResourceReferences.encode(message.createApplication, writer.uint32(26).fork())
        .join();
    }
    if (message.openFineTuningPipeline !== undefined) {
      PublisherModel_CallToAction_RegionalResourceReferences.encode(
        message.openFineTuningPipeline,
        writer.uint32(34).fork(),
      ).join();
    }
    if (message.openFineTuningPipelines !== undefined) {
      PublisherModel_CallToAction_OpenFineTuningPipelines.encode(
        message.openFineTuningPipelines,
        writer.uint32(106).fork(),
      ).join();
    }
    if (message.openPromptTuningPipeline !== undefined) {
      PublisherModel_CallToAction_RegionalResourceReferences.encode(
        message.openPromptTuningPipeline,
        writer.uint32(42).fork(),
      ).join();
    }
    if (message.openGenie !== undefined) {
      PublisherModel_CallToAction_RegionalResourceReferences.encode(message.openGenie, writer.uint32(50).fork()).join();
    }
    if (message.deploy !== undefined) {
      PublisherModel_CallToAction_Deploy.encode(message.deploy, writer.uint32(58).fork()).join();
    }
    if (message.deployGke !== undefined) {
      PublisherModel_CallToAction_DeployGke.encode(message.deployGke, writer.uint32(114).fork()).join();
    }
    if (message.openGenerationAiStudio !== undefined) {
      PublisherModel_CallToAction_RegionalResourceReferences.encode(
        message.openGenerationAiStudio,
        writer.uint32(66).fork(),
      ).join();
    }
    if (message.requestAccess !== undefined) {
      PublisherModel_CallToAction_RegionalResourceReferences.encode(message.requestAccess, writer.uint32(74).fork())
        .join();
    }
    if (message.openEvaluationPipeline !== undefined) {
      PublisherModel_CallToAction_RegionalResourceReferences.encode(
        message.openEvaluationPipeline,
        writer.uint32(90).fork(),
      ).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_CallToAction {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_CallToAction();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.viewRestApi = PublisherModel_CallToAction_ViewRestApi.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.openNotebook = PublisherModel_CallToAction_RegionalResourceReferences.decode(reader, reader.uint32());
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.openNotebooks = PublisherModel_CallToAction_OpenNotebooks.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.createApplication = PublisherModel_CallToAction_RegionalResourceReferences.decode(
            reader,
            reader.uint32(),
          );
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.openFineTuningPipeline = PublisherModel_CallToAction_RegionalResourceReferences.decode(
            reader,
            reader.uint32(),
          );
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.openFineTuningPipelines = PublisherModel_CallToAction_OpenFineTuningPipelines.decode(
            reader,
            reader.uint32(),
          );
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.openPromptTuningPipeline = PublisherModel_CallToAction_RegionalResourceReferences.decode(
            reader,
            reader.uint32(),
          );
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.openGenie = PublisherModel_CallToAction_RegionalResourceReferences.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.deploy = PublisherModel_CallToAction_Deploy.decode(reader, reader.uint32());
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.deployGke = PublisherModel_CallToAction_DeployGke.decode(reader, reader.uint32());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.openGenerationAiStudio = PublisherModel_CallToAction_RegionalResourceReferences.decode(
            reader,
            reader.uint32(),
          );
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.requestAccess = PublisherModel_CallToAction_RegionalResourceReferences.decode(
            reader,
            reader.uint32(),
          );
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.openEvaluationPipeline = PublisherModel_CallToAction_RegionalResourceReferences.decode(
            reader,
            reader.uint32(),
          );
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_CallToAction {
    return {
      viewRestApi: isSet(object.viewRestApi)
        ? PublisherModel_CallToAction_ViewRestApi.fromJSON(object.viewRestApi)
        : undefined,
      openNotebook: isSet(object.openNotebook)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromJSON(object.openNotebook)
        : undefined,
      openNotebooks: isSet(object.openNotebooks)
        ? PublisherModel_CallToAction_OpenNotebooks.fromJSON(object.openNotebooks)
        : undefined,
      createApplication: isSet(object.createApplication)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromJSON(object.createApplication)
        : undefined,
      openFineTuningPipeline: isSet(object.openFineTuningPipeline)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromJSON(object.openFineTuningPipeline)
        : undefined,
      openFineTuningPipelines: isSet(object.openFineTuningPipelines)
        ? PublisherModel_CallToAction_OpenFineTuningPipelines.fromJSON(object.openFineTuningPipelines)
        : undefined,
      openPromptTuningPipeline: isSet(object.openPromptTuningPipeline)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromJSON(object.openPromptTuningPipeline)
        : undefined,
      openGenie: isSet(object.openGenie)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromJSON(object.openGenie)
        : undefined,
      deploy: isSet(object.deploy) ? PublisherModel_CallToAction_Deploy.fromJSON(object.deploy) : undefined,
      deployGke: isSet(object.deployGke) ? PublisherModel_CallToAction_DeployGke.fromJSON(object.deployGke) : undefined,
      openGenerationAiStudio: isSet(object.openGenerationAiStudio)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromJSON(object.openGenerationAiStudio)
        : undefined,
      requestAccess: isSet(object.requestAccess)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromJSON(object.requestAccess)
        : undefined,
      openEvaluationPipeline: isSet(object.openEvaluationPipeline)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromJSON(object.openEvaluationPipeline)
        : undefined,
    };
  },

  toJSON(message: PublisherModel_CallToAction): unknown {
    const obj: any = {};
    if (message.viewRestApi !== undefined) {
      obj.viewRestApi = PublisherModel_CallToAction_ViewRestApi.toJSON(message.viewRestApi);
    }
    if (message.openNotebook !== undefined) {
      obj.openNotebook = PublisherModel_CallToAction_RegionalResourceReferences.toJSON(message.openNotebook);
    }
    if (message.openNotebooks !== undefined) {
      obj.openNotebooks = PublisherModel_CallToAction_OpenNotebooks.toJSON(message.openNotebooks);
    }
    if (message.createApplication !== undefined) {
      obj.createApplication = PublisherModel_CallToAction_RegionalResourceReferences.toJSON(message.createApplication);
    }
    if (message.openFineTuningPipeline !== undefined) {
      obj.openFineTuningPipeline = PublisherModel_CallToAction_RegionalResourceReferences.toJSON(
        message.openFineTuningPipeline,
      );
    }
    if (message.openFineTuningPipelines !== undefined) {
      obj.openFineTuningPipelines = PublisherModel_CallToAction_OpenFineTuningPipelines.toJSON(
        message.openFineTuningPipelines,
      );
    }
    if (message.openPromptTuningPipeline !== undefined) {
      obj.openPromptTuningPipeline = PublisherModel_CallToAction_RegionalResourceReferences.toJSON(
        message.openPromptTuningPipeline,
      );
    }
    if (message.openGenie !== undefined) {
      obj.openGenie = PublisherModel_CallToAction_RegionalResourceReferences.toJSON(message.openGenie);
    }
    if (message.deploy !== undefined) {
      obj.deploy = PublisherModel_CallToAction_Deploy.toJSON(message.deploy);
    }
    if (message.deployGke !== undefined) {
      obj.deployGke = PublisherModel_CallToAction_DeployGke.toJSON(message.deployGke);
    }
    if (message.openGenerationAiStudio !== undefined) {
      obj.openGenerationAiStudio = PublisherModel_CallToAction_RegionalResourceReferences.toJSON(
        message.openGenerationAiStudio,
      );
    }
    if (message.requestAccess !== undefined) {
      obj.requestAccess = PublisherModel_CallToAction_RegionalResourceReferences.toJSON(message.requestAccess);
    }
    if (message.openEvaluationPipeline !== undefined) {
      obj.openEvaluationPipeline = PublisherModel_CallToAction_RegionalResourceReferences.toJSON(
        message.openEvaluationPipeline,
      );
    }
    return obj;
  },

  create(base?: DeepPartial<PublisherModel_CallToAction>): PublisherModel_CallToAction {
    return PublisherModel_CallToAction.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PublisherModel_CallToAction>): PublisherModel_CallToAction {
    const message = createBasePublisherModel_CallToAction();
    message.viewRestApi = (object.viewRestApi !== undefined && object.viewRestApi !== null)
      ? PublisherModel_CallToAction_ViewRestApi.fromPartial(object.viewRestApi)
      : undefined;
    message.openNotebook = (object.openNotebook !== undefined && object.openNotebook !== null)
      ? PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(object.openNotebook)
      : undefined;
    message.openNotebooks = (object.openNotebooks !== undefined && object.openNotebooks !== null)
      ? PublisherModel_CallToAction_OpenNotebooks.fromPartial(object.openNotebooks)
      : undefined;
    message.createApplication = (object.createApplication !== undefined && object.createApplication !== null)
      ? PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(object.createApplication)
      : undefined;
    message.openFineTuningPipeline =
      (object.openFineTuningPipeline !== undefined && object.openFineTuningPipeline !== null)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(object.openFineTuningPipeline)
        : undefined;
    message.openFineTuningPipelines =
      (object.openFineTuningPipelines !== undefined && object.openFineTuningPipelines !== null)
        ? PublisherModel_CallToAction_OpenFineTuningPipelines.fromPartial(object.openFineTuningPipelines)
        : undefined;
    message.openPromptTuningPipeline =
      (object.openPromptTuningPipeline !== undefined && object.openPromptTuningPipeline !== null)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(object.openPromptTuningPipeline)
        : undefined;
    message.openGenie = (object.openGenie !== undefined && object.openGenie !== null)
      ? PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(object.openGenie)
      : undefined;
    message.deploy = (object.deploy !== undefined && object.deploy !== null)
      ? PublisherModel_CallToAction_Deploy.fromPartial(object.deploy)
      : undefined;
    message.deployGke = (object.deployGke !== undefined && object.deployGke !== null)
      ? PublisherModel_CallToAction_DeployGke.fromPartial(object.deployGke)
      : undefined;
    message.openGenerationAiStudio =
      (object.openGenerationAiStudio !== undefined && object.openGenerationAiStudio !== null)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(object.openGenerationAiStudio)
        : undefined;
    message.requestAccess = (object.requestAccess !== undefined && object.requestAccess !== null)
      ? PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(object.requestAccess)
      : undefined;
    message.openEvaluationPipeline =
      (object.openEvaluationPipeline !== undefined && object.openEvaluationPipeline !== null)
        ? PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(object.openEvaluationPipeline)
        : undefined;
    return message;
  },
};

function createBasePublisherModel_CallToAction_RegionalResourceReferences(): PublisherModel_CallToAction_RegionalResourceReferences {
  return {
    references: {},
    title: "",
    resourceTitle: undefined,
    resourceUseCase: undefined,
    resourceDescription: undefined,
  };
}

export const PublisherModel_CallToAction_RegionalResourceReferences: MessageFns<
  PublisherModel_CallToAction_RegionalResourceReferences
> = {
  encode(
    message: PublisherModel_CallToAction_RegionalResourceReferences,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    Object.entries(message.references).forEach(([key, value]) => {
      PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry.encode(
        { key: key as any, value },
        writer.uint32(10).fork(),
      ).join();
    });
    if (message.title !== "") {
      writer.uint32(18).string(message.title);
    }
    if (message.resourceTitle !== undefined) {
      writer.uint32(26).string(message.resourceTitle);
    }
    if (message.resourceUseCase !== undefined) {
      writer.uint32(34).string(message.resourceUseCase);
    }
    if (message.resourceDescription !== undefined) {
      writer.uint32(42).string(message.resourceDescription);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_CallToAction_RegionalResourceReferences {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_CallToAction_RegionalResourceReferences();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          const entry1 = PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry.decode(
            reader,
            reader.uint32(),
          );
          if (entry1.value !== undefined) {
            message.references[entry1.key] = entry1.value;
          }
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.title = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.resourceTitle = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.resourceUseCase = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.resourceDescription = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_CallToAction_RegionalResourceReferences {
    return {
      references: isObject(object.references)
        ? Object.entries(object.references).reduce<{ [key: string]: PublisherModel_ResourceReference }>(
          (acc, [key, value]) => {
            acc[key] = PublisherModel_ResourceReference.fromJSON(value);
            return acc;
          },
          {},
        )
        : {},
      title: isSet(object.title) ? globalThis.String(object.title) : "",
      resourceTitle: isSet(object.resourceTitle) ? globalThis.String(object.resourceTitle) : undefined,
      resourceUseCase: isSet(object.resourceUseCase) ? globalThis.String(object.resourceUseCase) : undefined,
      resourceDescription: isSet(object.resourceDescription)
        ? globalThis.String(object.resourceDescription)
        : undefined,
    };
  },

  toJSON(message: PublisherModel_CallToAction_RegionalResourceReferences): unknown {
    const obj: any = {};
    if (message.references) {
      const entries = Object.entries(message.references);
      if (entries.length > 0) {
        obj.references = {};
        entries.forEach(([k, v]) => {
          obj.references[k] = PublisherModel_ResourceReference.toJSON(v);
        });
      }
    }
    if (message.title !== "") {
      obj.title = message.title;
    }
    if (message.resourceTitle !== undefined) {
      obj.resourceTitle = message.resourceTitle;
    }
    if (message.resourceUseCase !== undefined) {
      obj.resourceUseCase = message.resourceUseCase;
    }
    if (message.resourceDescription !== undefined) {
      obj.resourceDescription = message.resourceDescription;
    }
    return obj;
  },

  create(
    base?: DeepPartial<PublisherModel_CallToAction_RegionalResourceReferences>,
  ): PublisherModel_CallToAction_RegionalResourceReferences {
    return PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<PublisherModel_CallToAction_RegionalResourceReferences>,
  ): PublisherModel_CallToAction_RegionalResourceReferences {
    const message = createBasePublisherModel_CallToAction_RegionalResourceReferences();
    message.references = Object.entries(object.references ?? {}).reduce<
      { [key: string]: PublisherModel_ResourceReference }
    >((acc, [key, value]) => {
      if (value !== undefined) {
        acc[key] = PublisherModel_ResourceReference.fromPartial(value);
      }
      return acc;
    }, {});
    message.title = object.title ?? "";
    message.resourceTitle = object.resourceTitle ?? undefined;
    message.resourceUseCase = object.resourceUseCase ?? undefined;
    message.resourceDescription = object.resourceDescription ?? undefined;
    return message;
  },
};

function createBasePublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry(): PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry {
  return { key: "", value: undefined };
}

export const PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry: MessageFns<
  PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry
> = {
  encode(
    message: PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.key !== "") {
      writer.uint32(10).string(message.key);
    }
    if (message.value !== undefined) {
      PublisherModel_ResourceReference.encode(message.value, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number,
  ): PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.key = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.value = PublisherModel_ResourceReference.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry {
    return {
      key: isSet(object.key) ? globalThis.String(object.key) : "",
      value: isSet(object.value) ? PublisherModel_ResourceReference.fromJSON(object.value) : undefined,
    };
  },

  toJSON(message: PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry): unknown {
    const obj: any = {};
    if (message.key !== "") {
      obj.key = message.key;
    }
    if (message.value !== undefined) {
      obj.value = PublisherModel_ResourceReference.toJSON(message.value);
    }
    return obj;
  },

  create(
    base?: DeepPartial<PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry>,
  ): PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry {
    return PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry>,
  ): PublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry {
    const message = createBasePublisherModel_CallToAction_RegionalResourceReferences_ReferencesEntry();
    message.key = object.key ?? "";
    message.value = (object.value !== undefined && object.value !== null)
      ? PublisherModel_ResourceReference.fromPartial(object.value)
      : undefined;
    return message;
  },
};

function createBasePublisherModel_CallToAction_ViewRestApi(): PublisherModel_CallToAction_ViewRestApi {
  return { documentations: [], title: "" };
}

export const PublisherModel_CallToAction_ViewRestApi: MessageFns<PublisherModel_CallToAction_ViewRestApi> = {
  encode(message: PublisherModel_CallToAction_ViewRestApi, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.documentations) {
      PublisherModel_Documentation.encode(v!, writer.uint32(10).fork()).join();
    }
    if (message.title !== "") {
      writer.uint32(18).string(message.title);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_CallToAction_ViewRestApi {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_CallToAction_ViewRestApi();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.documentations.push(PublisherModel_Documentation.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.title = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_CallToAction_ViewRestApi {
    return {
      documentations: globalThis.Array.isArray(object?.documentations)
        ? object.documentations.map((e: any) => PublisherModel_Documentation.fromJSON(e))
        : [],
      title: isSet(object.title) ? globalThis.String(object.title) : "",
    };
  },

  toJSON(message: PublisherModel_CallToAction_ViewRestApi): unknown {
    const obj: any = {};
    if (message.documentations?.length) {
      obj.documentations = message.documentations.map((e) => PublisherModel_Documentation.toJSON(e));
    }
    if (message.title !== "") {
      obj.title = message.title;
    }
    return obj;
  },

  create(base?: DeepPartial<PublisherModel_CallToAction_ViewRestApi>): PublisherModel_CallToAction_ViewRestApi {
    return PublisherModel_CallToAction_ViewRestApi.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PublisherModel_CallToAction_ViewRestApi>): PublisherModel_CallToAction_ViewRestApi {
    const message = createBasePublisherModel_CallToAction_ViewRestApi();
    message.documentations = object.documentations?.map((e) => PublisherModel_Documentation.fromPartial(e)) || [];
    message.title = object.title ?? "";
    return message;
  },
};

function createBasePublisherModel_CallToAction_OpenNotebooks(): PublisherModel_CallToAction_OpenNotebooks {
  return { notebooks: [] };
}

export const PublisherModel_CallToAction_OpenNotebooks: MessageFns<PublisherModel_CallToAction_OpenNotebooks> = {
  encode(message: PublisherModel_CallToAction_OpenNotebooks, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.notebooks) {
      PublisherModel_CallToAction_RegionalResourceReferences.encode(v!, writer.uint32(10).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_CallToAction_OpenNotebooks {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_CallToAction_OpenNotebooks();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.notebooks.push(
            PublisherModel_CallToAction_RegionalResourceReferences.decode(reader, reader.uint32()),
          );
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_CallToAction_OpenNotebooks {
    return {
      notebooks: globalThis.Array.isArray(object?.notebooks)
        ? object.notebooks.map((e: any) => PublisherModel_CallToAction_RegionalResourceReferences.fromJSON(e))
        : [],
    };
  },

  toJSON(message: PublisherModel_CallToAction_OpenNotebooks): unknown {
    const obj: any = {};
    if (message.notebooks?.length) {
      obj.notebooks = message.notebooks.map((e) => PublisherModel_CallToAction_RegionalResourceReferences.toJSON(e));
    }
    return obj;
  },

  create(base?: DeepPartial<PublisherModel_CallToAction_OpenNotebooks>): PublisherModel_CallToAction_OpenNotebooks {
    return PublisherModel_CallToAction_OpenNotebooks.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<PublisherModel_CallToAction_OpenNotebooks>,
  ): PublisherModel_CallToAction_OpenNotebooks {
    const message = createBasePublisherModel_CallToAction_OpenNotebooks();
    message.notebooks =
      object.notebooks?.map((e) => PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(e)) || [];
    return message;
  },
};

function createBasePublisherModel_CallToAction_OpenFineTuningPipelines(): PublisherModel_CallToAction_OpenFineTuningPipelines {
  return { fineTuningPipelines: [] };
}

export const PublisherModel_CallToAction_OpenFineTuningPipelines: MessageFns<
  PublisherModel_CallToAction_OpenFineTuningPipelines
> = {
  encode(
    message: PublisherModel_CallToAction_OpenFineTuningPipelines,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    for (const v of message.fineTuningPipelines) {
      PublisherModel_CallToAction_RegionalResourceReferences.encode(v!, writer.uint32(10).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_CallToAction_OpenFineTuningPipelines {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_CallToAction_OpenFineTuningPipelines();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.fineTuningPipelines.push(
            PublisherModel_CallToAction_RegionalResourceReferences.decode(reader, reader.uint32()),
          );
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_CallToAction_OpenFineTuningPipelines {
    return {
      fineTuningPipelines: globalThis.Array.isArray(object?.fineTuningPipelines)
        ? object.fineTuningPipelines.map((e: any) => PublisherModel_CallToAction_RegionalResourceReferences.fromJSON(e))
        : [],
    };
  },

  toJSON(message: PublisherModel_CallToAction_OpenFineTuningPipelines): unknown {
    const obj: any = {};
    if (message.fineTuningPipelines?.length) {
      obj.fineTuningPipelines = message.fineTuningPipelines.map((e) =>
        PublisherModel_CallToAction_RegionalResourceReferences.toJSON(e)
      );
    }
    return obj;
  },

  create(
    base?: DeepPartial<PublisherModel_CallToAction_OpenFineTuningPipelines>,
  ): PublisherModel_CallToAction_OpenFineTuningPipelines {
    return PublisherModel_CallToAction_OpenFineTuningPipelines.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<PublisherModel_CallToAction_OpenFineTuningPipelines>,
  ): PublisherModel_CallToAction_OpenFineTuningPipelines {
    const message = createBasePublisherModel_CallToAction_OpenFineTuningPipelines();
    message.fineTuningPipelines =
      object.fineTuningPipelines?.map((e) => PublisherModel_CallToAction_RegionalResourceReferences.fromPartial(e)) ||
      [];
    return message;
  },
};

function createBasePublisherModel_CallToAction_Deploy(): PublisherModel_CallToAction_Deploy {
  return {
    dedicatedResources: undefined,
    automaticResources: undefined,
    sharedResources: undefined,
    modelDisplayName: "",
    largeModelReference: undefined,
    containerSpec: undefined,
    artifactUri: "",
    deployTaskName: undefined,
    deployMetadata: undefined,
    title: "",
    publicArtifactUri: "",
  };
}

export const PublisherModel_CallToAction_Deploy: MessageFns<PublisherModel_CallToAction_Deploy> = {
  encode(message: PublisherModel_CallToAction_Deploy, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.dedicatedResources !== undefined) {
      DedicatedResources.encode(message.dedicatedResources, writer.uint32(42).fork()).join();
    }
    if (message.automaticResources !== undefined) {
      AutomaticResources.encode(message.automaticResources, writer.uint32(50).fork()).join();
    }
    if (message.sharedResources !== undefined) {
      writer.uint32(58).string(message.sharedResources);
    }
    if (message.modelDisplayName !== "") {
      writer.uint32(10).string(message.modelDisplayName);
    }
    if (message.largeModelReference !== undefined) {
      LargeModelReference.encode(message.largeModelReference, writer.uint32(18).fork()).join();
    }
    if (message.containerSpec !== undefined) {
      ModelContainerSpec.encode(message.containerSpec, writer.uint32(26).fork()).join();
    }
    if (message.artifactUri !== "") {
      writer.uint32(34).string(message.artifactUri);
    }
    if (message.deployTaskName !== undefined) {
      writer.uint32(82).string(message.deployTaskName);
    }
    if (message.deployMetadata !== undefined) {
      PublisherModel_CallToAction_Deploy_DeployMetadata.encode(message.deployMetadata, writer.uint32(90).fork()).join();
    }
    if (message.title !== "") {
      writer.uint32(66).string(message.title);
    }
    if (message.publicArtifactUri !== "") {
      writer.uint32(74).string(message.publicArtifactUri);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_CallToAction_Deploy {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_CallToAction_Deploy();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 5:
          if (tag !== 42) {
            break;
          }

          message.dedicatedResources = DedicatedResources.decode(reader, reader.uint32());
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.automaticResources = AutomaticResources.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.sharedResources = reader.string();
          continue;
        case 1:
          if (tag !== 10) {
            break;
          }

          message.modelDisplayName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.largeModelReference = LargeModelReference.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.containerSpec = ModelContainerSpec.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.artifactUri = reader.string();
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.deployTaskName = reader.string();
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.deployMetadata = PublisherModel_CallToAction_Deploy_DeployMetadata.decode(reader, reader.uint32());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.title = reader.string();
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.publicArtifactUri = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_CallToAction_Deploy {
    return {
      dedicatedResources: isSet(object.dedicatedResources)
        ? DedicatedResources.fromJSON(object.dedicatedResources)
        : undefined,
      automaticResources: isSet(object.automaticResources)
        ? AutomaticResources.fromJSON(object.automaticResources)
        : undefined,
      sharedResources: isSet(object.sharedResources) ? globalThis.String(object.sharedResources) : undefined,
      modelDisplayName: isSet(object.modelDisplayName) ? globalThis.String(object.modelDisplayName) : "",
      largeModelReference: isSet(object.largeModelReference)
        ? LargeModelReference.fromJSON(object.largeModelReference)
        : undefined,
      containerSpec: isSet(object.containerSpec) ? ModelContainerSpec.fromJSON(object.containerSpec) : undefined,
      artifactUri: isSet(object.artifactUri) ? globalThis.String(object.artifactUri) : "",
      deployTaskName: isSet(object.deployTaskName) ? globalThis.String(object.deployTaskName) : undefined,
      deployMetadata: isSet(object.deployMetadata)
        ? PublisherModel_CallToAction_Deploy_DeployMetadata.fromJSON(object.deployMetadata)
        : undefined,
      title: isSet(object.title) ? globalThis.String(object.title) : "",
      publicArtifactUri: isSet(object.publicArtifactUri) ? globalThis.String(object.publicArtifactUri) : "",
    };
  },

  toJSON(message: PublisherModel_CallToAction_Deploy): unknown {
    const obj: any = {};
    if (message.dedicatedResources !== undefined) {
      obj.dedicatedResources = DedicatedResources.toJSON(message.dedicatedResources);
    }
    if (message.automaticResources !== undefined) {
      obj.automaticResources = AutomaticResources.toJSON(message.automaticResources);
    }
    if (message.sharedResources !== undefined) {
      obj.sharedResources = message.sharedResources;
    }
    if (message.modelDisplayName !== "") {
      obj.modelDisplayName = message.modelDisplayName;
    }
    if (message.largeModelReference !== undefined) {
      obj.largeModelReference = LargeModelReference.toJSON(message.largeModelReference);
    }
    if (message.containerSpec !== undefined) {
      obj.containerSpec = ModelContainerSpec.toJSON(message.containerSpec);
    }
    if (message.artifactUri !== "") {
      obj.artifactUri = message.artifactUri;
    }
    if (message.deployTaskName !== undefined) {
      obj.deployTaskName = message.deployTaskName;
    }
    if (message.deployMetadata !== undefined) {
      obj.deployMetadata = PublisherModel_CallToAction_Deploy_DeployMetadata.toJSON(message.deployMetadata);
    }
    if (message.title !== "") {
      obj.title = message.title;
    }
    if (message.publicArtifactUri !== "") {
      obj.publicArtifactUri = message.publicArtifactUri;
    }
    return obj;
  },

  create(base?: DeepPartial<PublisherModel_CallToAction_Deploy>): PublisherModel_CallToAction_Deploy {
    return PublisherModel_CallToAction_Deploy.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PublisherModel_CallToAction_Deploy>): PublisherModel_CallToAction_Deploy {
    const message = createBasePublisherModel_CallToAction_Deploy();
    message.dedicatedResources = (object.dedicatedResources !== undefined && object.dedicatedResources !== null)
      ? DedicatedResources.fromPartial(object.dedicatedResources)
      : undefined;
    message.automaticResources = (object.automaticResources !== undefined && object.automaticResources !== null)
      ? AutomaticResources.fromPartial(object.automaticResources)
      : undefined;
    message.sharedResources = object.sharedResources ?? undefined;
    message.modelDisplayName = object.modelDisplayName ?? "";
    message.largeModelReference = (object.largeModelReference !== undefined && object.largeModelReference !== null)
      ? LargeModelReference.fromPartial(object.largeModelReference)
      : undefined;
    message.containerSpec = (object.containerSpec !== undefined && object.containerSpec !== null)
      ? ModelContainerSpec.fromPartial(object.containerSpec)
      : undefined;
    message.artifactUri = object.artifactUri ?? "";
    message.deployTaskName = object.deployTaskName ?? undefined;
    message.deployMetadata = (object.deployMetadata !== undefined && object.deployMetadata !== null)
      ? PublisherModel_CallToAction_Deploy_DeployMetadata.fromPartial(object.deployMetadata)
      : undefined;
    message.title = object.title ?? "";
    message.publicArtifactUri = object.publicArtifactUri ?? "";
    return message;
  },
};

function createBasePublisherModel_CallToAction_Deploy_DeployMetadata(): PublisherModel_CallToAction_Deploy_DeployMetadata {
  return { labels: {}, sampleRequest: "" };
}

export const PublisherModel_CallToAction_Deploy_DeployMetadata: MessageFns<
  PublisherModel_CallToAction_Deploy_DeployMetadata
> = {
  encode(
    message: PublisherModel_CallToAction_Deploy_DeployMetadata,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    Object.entries(message.labels).forEach(([key, value]) => {
      PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry.encode(
        { key: key as any, value },
        writer.uint32(10).fork(),
      ).join();
    });
    if (message.sampleRequest !== "") {
      writer.uint32(18).string(message.sampleRequest);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_CallToAction_Deploy_DeployMetadata {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_CallToAction_Deploy_DeployMetadata();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          const entry1 = PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry.decode(reader, reader.uint32());
          if (entry1.value !== undefined) {
            message.labels[entry1.key] = entry1.value;
          }
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.sampleRequest = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_CallToAction_Deploy_DeployMetadata {
    return {
      labels: isObject(object.labels)
        ? Object.entries(object.labels).reduce<{ [key: string]: string }>((acc, [key, value]) => {
          acc[key] = String(value);
          return acc;
        }, {})
        : {},
      sampleRequest: isSet(object.sampleRequest) ? globalThis.String(object.sampleRequest) : "",
    };
  },

  toJSON(message: PublisherModel_CallToAction_Deploy_DeployMetadata): unknown {
    const obj: any = {};
    if (message.labels) {
      const entries = Object.entries(message.labels);
      if (entries.length > 0) {
        obj.labels = {};
        entries.forEach(([k, v]) => {
          obj.labels[k] = v;
        });
      }
    }
    if (message.sampleRequest !== "") {
      obj.sampleRequest = message.sampleRequest;
    }
    return obj;
  },

  create(
    base?: DeepPartial<PublisherModel_CallToAction_Deploy_DeployMetadata>,
  ): PublisherModel_CallToAction_Deploy_DeployMetadata {
    return PublisherModel_CallToAction_Deploy_DeployMetadata.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<PublisherModel_CallToAction_Deploy_DeployMetadata>,
  ): PublisherModel_CallToAction_Deploy_DeployMetadata {
    const message = createBasePublisherModel_CallToAction_Deploy_DeployMetadata();
    message.labels = Object.entries(object.labels ?? {}).reduce<{ [key: string]: string }>((acc, [key, value]) => {
      if (value !== undefined) {
        acc[key] = globalThis.String(value);
      }
      return acc;
    }, {});
    message.sampleRequest = object.sampleRequest ?? "";
    return message;
  },
};

function createBasePublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry(): PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry {
  return { key: "", value: "" };
}

export const PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry: MessageFns<
  PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry
> = {
  encode(
    message: PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.key !== "") {
      writer.uint32(10).string(message.key);
    }
    if (message.value !== "") {
      writer.uint32(18).string(message.value);
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number,
  ): PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.key = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.value = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry {
    return {
      key: isSet(object.key) ? globalThis.String(object.key) : "",
      value: isSet(object.value) ? globalThis.String(object.value) : "",
    };
  },

  toJSON(message: PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry): unknown {
    const obj: any = {};
    if (message.key !== "") {
      obj.key = message.key;
    }
    if (message.value !== "") {
      obj.value = message.value;
    }
    return obj;
  },

  create(
    base?: DeepPartial<PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry>,
  ): PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry {
    return PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry>,
  ): PublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry {
    const message = createBasePublisherModel_CallToAction_Deploy_DeployMetadata_LabelsEntry();
    message.key = object.key ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBasePublisherModel_CallToAction_DeployGke(): PublisherModel_CallToAction_DeployGke {
  return { gkeYamlConfigs: [] };
}

export const PublisherModel_CallToAction_DeployGke: MessageFns<PublisherModel_CallToAction_DeployGke> = {
  encode(message: PublisherModel_CallToAction_DeployGke, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.gkeYamlConfigs) {
      writer.uint32(10).string(v!);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PublisherModel_CallToAction_DeployGke {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePublisherModel_CallToAction_DeployGke();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.gkeYamlConfigs.push(reader.string());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PublisherModel_CallToAction_DeployGke {
    return {
      gkeYamlConfigs: globalThis.Array.isArray(object?.gkeYamlConfigs)
        ? object.gkeYamlConfigs.map((e: any) => globalThis.String(e))
        : [],
    };
  },

  toJSON(message: PublisherModel_CallToAction_DeployGke): unknown {
    const obj: any = {};
    if (message.gkeYamlConfigs?.length) {
      obj.gkeYamlConfigs = message.gkeYamlConfigs;
    }
    return obj;
  },

  create(base?: DeepPartial<PublisherModel_CallToAction_DeployGke>): PublisherModel_CallToAction_DeployGke {
    return PublisherModel_CallToAction_DeployGke.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PublisherModel_CallToAction_DeployGke>): PublisherModel_CallToAction_DeployGke {
    const message = createBasePublisherModel_CallToAction_DeployGke();
    message.gkeYamlConfigs = object.gkeYamlConfigs?.map((e) => e) || [];
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isObject(value: any): boolean {
  return typeof value === "object" && value !== null;
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
