// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/aiplatform/v1/deployment_resource_pool_service.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { Operation } from "../../../longrunning/operations.js";
import { FieldMask } from "../../../protobuf/field_mask.js";
import { DeployedModelRef } from "./deployed_model_ref.js";
import { DeploymentResourcePool } from "./deployment_resource_pool.js";
import { DeployedModel } from "./endpoint.js";
import { GenericOperationMetadata } from "./operation.js";

export const protobufPackage = "google.cloud.aiplatform.v1";

/** Request message for CreateDeploymentResourcePool method. */
export interface CreateDeploymentResourcePoolRequest {
  /**
   * Required. The parent location resource where this DeploymentResourcePool
   * will be created. Format: `projects/{project}/locations/{location}`
   */
  parent: string;
  /** Required. The DeploymentResourcePool to create. */
  deploymentResourcePool:
    | DeploymentResourcePool
    | undefined;
  /**
   * Required. The ID to use for the DeploymentResourcePool, which
   * will become the final component of the DeploymentResourcePool's resource
   * name.
   *
   * The maximum length is 63 characters, and valid characters
   * are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
   */
  deploymentResourcePoolId: string;
}

/** Runtime operation information for CreateDeploymentResourcePool method. */
export interface CreateDeploymentResourcePoolOperationMetadata {
  /** The operation generic information. */
  genericMetadata: GenericOperationMetadata | undefined;
}

/** Request message for GetDeploymentResourcePool method. */
export interface GetDeploymentResourcePoolRequest {
  /**
   * Required. The name of the DeploymentResourcePool to retrieve.
   * Format:
   * `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
   */
  name: string;
}

/** Request message for ListDeploymentResourcePools method. */
export interface ListDeploymentResourcePoolsRequest {
  /**
   * Required. The parent Location which owns this collection of
   * DeploymentResourcePools. Format: `projects/{project}/locations/{location}`
   */
  parent: string;
  /**
   * The maximum number of DeploymentResourcePools to return. The service may
   * return fewer than this value.
   */
  pageSize: number;
  /**
   * A page token, received from a previous `ListDeploymentResourcePools` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListDeploymentResourcePools` must match the call that provided the page
   * token.
   */
  pageToken: string;
}

/** Response message for ListDeploymentResourcePools method. */
export interface ListDeploymentResourcePoolsResponse {
  /** The DeploymentResourcePools from the specified location. */
  deploymentResourcePools: DeploymentResourcePool[];
  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   */
  nextPageToken: string;
}

/** Request message for UpdateDeploymentResourcePool method. */
export interface UpdateDeploymentResourcePoolRequest {
  /**
   * Required. The DeploymentResourcePool to update.
   *
   * The DeploymentResourcePool's `name` field is used to identify the
   * DeploymentResourcePool to update.
   * Format:
   * `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
   */
  deploymentResourcePool:
    | DeploymentResourcePool
    | undefined;
  /** Required. The list of fields to update. */
  updateMask: string[] | undefined;
}

/** Runtime operation information for UpdateDeploymentResourcePool method. */
export interface UpdateDeploymentResourcePoolOperationMetadata {
  /** The operation generic information. */
  genericMetadata: GenericOperationMetadata | undefined;
}

/** Request message for DeleteDeploymentResourcePool method. */
export interface DeleteDeploymentResourcePoolRequest {
  /**
   * Required. The name of the DeploymentResourcePool to delete.
   * Format:
   * `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
   */
  name: string;
}

/** Request message for QueryDeployedModels method. */
export interface QueryDeployedModelsRequest {
  /**
   * Required. The name of the target DeploymentResourcePool to query.
   * Format:
   * `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
   */
  deploymentResourcePool: string;
  /**
   * The maximum number of DeployedModels to return. The service may return
   * fewer than this value.
   */
  pageSize: number;
  /**
   * A page token, received from a previous `QueryDeployedModels` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `QueryDeployedModels` must match the call that provided the page
   * token.
   */
  pageToken: string;
}

/** Response message for QueryDeployedModels method. */
export interface QueryDeployedModelsResponse {
  /**
   * DEPRECATED Use deployed_model_refs instead.
   *
   * @deprecated
   */
  deployedModels: DeployedModel[];
  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   */
  nextPageToken: string;
  /**
   * References to the DeployedModels that share the specified
   * deploymentResourcePool.
   */
  deployedModelRefs: DeployedModelRef[];
  /** The total number of DeployedModels on this DeploymentResourcePool. */
  totalDeployedModelCount: number;
  /**
   * The total number of Endpoints that have DeployedModels on this
   * DeploymentResourcePool.
   */
  totalEndpointCount: number;
}

function createBaseCreateDeploymentResourcePoolRequest(): CreateDeploymentResourcePoolRequest {
  return { parent: "", deploymentResourcePool: undefined, deploymentResourcePoolId: "" };
}

export const CreateDeploymentResourcePoolRequest: MessageFns<CreateDeploymentResourcePoolRequest> = {
  encode(message: CreateDeploymentResourcePoolRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    if (message.deploymentResourcePool !== undefined) {
      DeploymentResourcePool.encode(message.deploymentResourcePool, writer.uint32(18).fork()).join();
    }
    if (message.deploymentResourcePoolId !== "") {
      writer.uint32(26).string(message.deploymentResourcePoolId);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CreateDeploymentResourcePoolRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCreateDeploymentResourcePoolRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.deploymentResourcePool = DeploymentResourcePool.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.deploymentResourcePoolId = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CreateDeploymentResourcePoolRequest {
    return {
      parent: isSet(object.parent) ? globalThis.String(object.parent) : "",
      deploymentResourcePool: isSet(object.deploymentResourcePool)
        ? DeploymentResourcePool.fromJSON(object.deploymentResourcePool)
        : undefined,
      deploymentResourcePoolId: isSet(object.deploymentResourcePoolId)
        ? globalThis.String(object.deploymentResourcePoolId)
        : "",
    };
  },

  toJSON(message: CreateDeploymentResourcePoolRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    if (message.deploymentResourcePool !== undefined) {
      obj.deploymentResourcePool = DeploymentResourcePool.toJSON(message.deploymentResourcePool);
    }
    if (message.deploymentResourcePoolId !== "") {
      obj.deploymentResourcePoolId = message.deploymentResourcePoolId;
    }
    return obj;
  },

  create(base?: DeepPartial<CreateDeploymentResourcePoolRequest>): CreateDeploymentResourcePoolRequest {
    return CreateDeploymentResourcePoolRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CreateDeploymentResourcePoolRequest>): CreateDeploymentResourcePoolRequest {
    const message = createBaseCreateDeploymentResourcePoolRequest();
    message.parent = object.parent ?? "";
    message.deploymentResourcePool =
      (object.deploymentResourcePool !== undefined && object.deploymentResourcePool !== null)
        ? DeploymentResourcePool.fromPartial(object.deploymentResourcePool)
        : undefined;
    message.deploymentResourcePoolId = object.deploymentResourcePoolId ?? "";
    return message;
  },
};

function createBaseCreateDeploymentResourcePoolOperationMetadata(): CreateDeploymentResourcePoolOperationMetadata {
  return { genericMetadata: undefined };
}

export const CreateDeploymentResourcePoolOperationMetadata: MessageFns<CreateDeploymentResourcePoolOperationMetadata> =
  {
    encode(
      message: CreateDeploymentResourcePoolOperationMetadata,
      writer: BinaryWriter = new BinaryWriter(),
    ): BinaryWriter {
      if (message.genericMetadata !== undefined) {
        GenericOperationMetadata.encode(message.genericMetadata, writer.uint32(10).fork()).join();
      }
      return writer;
    },

    decode(input: BinaryReader | Uint8Array, length?: number): CreateDeploymentResourcePoolOperationMetadata {
      const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
      let end = length === undefined ? reader.len : reader.pos + length;
      const message = createBaseCreateDeploymentResourcePoolOperationMetadata();
      while (reader.pos < end) {
        const tag = reader.uint32();
        switch (tag >>> 3) {
          case 1:
            if (tag !== 10) {
              break;
            }

            message.genericMetadata = GenericOperationMetadata.decode(reader, reader.uint32());
            continue;
        }
        if ((tag & 7) === 4 || tag === 0) {
          break;
        }
        reader.skip(tag & 7);
      }
      return message;
    },

    fromJSON(object: any): CreateDeploymentResourcePoolOperationMetadata {
      return {
        genericMetadata: isSet(object.genericMetadata)
          ? GenericOperationMetadata.fromJSON(object.genericMetadata)
          : undefined,
      };
    },

    toJSON(message: CreateDeploymentResourcePoolOperationMetadata): unknown {
      const obj: any = {};
      if (message.genericMetadata !== undefined) {
        obj.genericMetadata = GenericOperationMetadata.toJSON(message.genericMetadata);
      }
      return obj;
    },

    create(
      base?: DeepPartial<CreateDeploymentResourcePoolOperationMetadata>,
    ): CreateDeploymentResourcePoolOperationMetadata {
      return CreateDeploymentResourcePoolOperationMetadata.fromPartial(base ?? {});
    },
    fromPartial(
      object: DeepPartial<CreateDeploymentResourcePoolOperationMetadata>,
    ): CreateDeploymentResourcePoolOperationMetadata {
      const message = createBaseCreateDeploymentResourcePoolOperationMetadata();
      message.genericMetadata = (object.genericMetadata !== undefined && object.genericMetadata !== null)
        ? GenericOperationMetadata.fromPartial(object.genericMetadata)
        : undefined;
      return message;
    },
  };

function createBaseGetDeploymentResourcePoolRequest(): GetDeploymentResourcePoolRequest {
  return { name: "" };
}

export const GetDeploymentResourcePoolRequest: MessageFns<GetDeploymentResourcePoolRequest> = {
  encode(message: GetDeploymentResourcePoolRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GetDeploymentResourcePoolRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetDeploymentResourcePoolRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetDeploymentResourcePoolRequest {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: GetDeploymentResourcePoolRequest): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<GetDeploymentResourcePoolRequest>): GetDeploymentResourcePoolRequest {
    return GetDeploymentResourcePoolRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GetDeploymentResourcePoolRequest>): GetDeploymentResourcePoolRequest {
    const message = createBaseGetDeploymentResourcePoolRequest();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseListDeploymentResourcePoolsRequest(): ListDeploymentResourcePoolsRequest {
  return { parent: "", pageSize: 0, pageToken: "" };
}

export const ListDeploymentResourcePoolsRequest: MessageFns<ListDeploymentResourcePoolsRequest> = {
  encode(message: ListDeploymentResourcePoolsRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    if (message.pageSize !== 0) {
      writer.uint32(16).int32(message.pageSize);
    }
    if (message.pageToken !== "") {
      writer.uint32(26).string(message.pageToken);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListDeploymentResourcePoolsRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListDeploymentResourcePoolsRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.pageSize = reader.int32();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.pageToken = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListDeploymentResourcePoolsRequest {
    return {
      parent: isSet(object.parent) ? globalThis.String(object.parent) : "",
      pageSize: isSet(object.pageSize) ? globalThis.Number(object.pageSize) : 0,
      pageToken: isSet(object.pageToken) ? globalThis.String(object.pageToken) : "",
    };
  },

  toJSON(message: ListDeploymentResourcePoolsRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    if (message.pageSize !== 0) {
      obj.pageSize = Math.round(message.pageSize);
    }
    if (message.pageToken !== "") {
      obj.pageToken = message.pageToken;
    }
    return obj;
  },

  create(base?: DeepPartial<ListDeploymentResourcePoolsRequest>): ListDeploymentResourcePoolsRequest {
    return ListDeploymentResourcePoolsRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListDeploymentResourcePoolsRequest>): ListDeploymentResourcePoolsRequest {
    const message = createBaseListDeploymentResourcePoolsRequest();
    message.parent = object.parent ?? "";
    message.pageSize = object.pageSize ?? 0;
    message.pageToken = object.pageToken ?? "";
    return message;
  },
};

function createBaseListDeploymentResourcePoolsResponse(): ListDeploymentResourcePoolsResponse {
  return { deploymentResourcePools: [], nextPageToken: "" };
}

export const ListDeploymentResourcePoolsResponse: MessageFns<ListDeploymentResourcePoolsResponse> = {
  encode(message: ListDeploymentResourcePoolsResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.deploymentResourcePools) {
      DeploymentResourcePool.encode(v!, writer.uint32(10).fork()).join();
    }
    if (message.nextPageToken !== "") {
      writer.uint32(18).string(message.nextPageToken);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListDeploymentResourcePoolsResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListDeploymentResourcePoolsResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.deploymentResourcePools.push(DeploymentResourcePool.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.nextPageToken = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListDeploymentResourcePoolsResponse {
    return {
      deploymentResourcePools: globalThis.Array.isArray(object?.deploymentResourcePools)
        ? object.deploymentResourcePools.map((e: any) => DeploymentResourcePool.fromJSON(e))
        : [],
      nextPageToken: isSet(object.nextPageToken) ? globalThis.String(object.nextPageToken) : "",
    };
  },

  toJSON(message: ListDeploymentResourcePoolsResponse): unknown {
    const obj: any = {};
    if (message.deploymentResourcePools?.length) {
      obj.deploymentResourcePools = message.deploymentResourcePools.map((e) => DeploymentResourcePool.toJSON(e));
    }
    if (message.nextPageToken !== "") {
      obj.nextPageToken = message.nextPageToken;
    }
    return obj;
  },

  create(base?: DeepPartial<ListDeploymentResourcePoolsResponse>): ListDeploymentResourcePoolsResponse {
    return ListDeploymentResourcePoolsResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListDeploymentResourcePoolsResponse>): ListDeploymentResourcePoolsResponse {
    const message = createBaseListDeploymentResourcePoolsResponse();
    message.deploymentResourcePools =
      object.deploymentResourcePools?.map((e) => DeploymentResourcePool.fromPartial(e)) || [];
    message.nextPageToken = object.nextPageToken ?? "";
    return message;
  },
};

function createBaseUpdateDeploymentResourcePoolRequest(): UpdateDeploymentResourcePoolRequest {
  return { deploymentResourcePool: undefined, updateMask: undefined };
}

export const UpdateDeploymentResourcePoolRequest: MessageFns<UpdateDeploymentResourcePoolRequest> = {
  encode(message: UpdateDeploymentResourcePoolRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.deploymentResourcePool !== undefined) {
      DeploymentResourcePool.encode(message.deploymentResourcePool, writer.uint32(10).fork()).join();
    }
    if (message.updateMask !== undefined) {
      FieldMask.encode(FieldMask.wrap(message.updateMask), writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): UpdateDeploymentResourcePoolRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseUpdateDeploymentResourcePoolRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.deploymentResourcePool = DeploymentResourcePool.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.updateMask = FieldMask.unwrap(FieldMask.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): UpdateDeploymentResourcePoolRequest {
    return {
      deploymentResourcePool: isSet(object.deploymentResourcePool)
        ? DeploymentResourcePool.fromJSON(object.deploymentResourcePool)
        : undefined,
      updateMask: isSet(object.updateMask) ? FieldMask.unwrap(FieldMask.fromJSON(object.updateMask)) : undefined,
    };
  },

  toJSON(message: UpdateDeploymentResourcePoolRequest): unknown {
    const obj: any = {};
    if (message.deploymentResourcePool !== undefined) {
      obj.deploymentResourcePool = DeploymentResourcePool.toJSON(message.deploymentResourcePool);
    }
    if (message.updateMask !== undefined) {
      obj.updateMask = FieldMask.toJSON(FieldMask.wrap(message.updateMask));
    }
    return obj;
  },

  create(base?: DeepPartial<UpdateDeploymentResourcePoolRequest>): UpdateDeploymentResourcePoolRequest {
    return UpdateDeploymentResourcePoolRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<UpdateDeploymentResourcePoolRequest>): UpdateDeploymentResourcePoolRequest {
    const message = createBaseUpdateDeploymentResourcePoolRequest();
    message.deploymentResourcePool =
      (object.deploymentResourcePool !== undefined && object.deploymentResourcePool !== null)
        ? DeploymentResourcePool.fromPartial(object.deploymentResourcePool)
        : undefined;
    message.updateMask = object.updateMask ?? undefined;
    return message;
  },
};

function createBaseUpdateDeploymentResourcePoolOperationMetadata(): UpdateDeploymentResourcePoolOperationMetadata {
  return { genericMetadata: undefined };
}

export const UpdateDeploymentResourcePoolOperationMetadata: MessageFns<UpdateDeploymentResourcePoolOperationMetadata> =
  {
    encode(
      message: UpdateDeploymentResourcePoolOperationMetadata,
      writer: BinaryWriter = new BinaryWriter(),
    ): BinaryWriter {
      if (message.genericMetadata !== undefined) {
        GenericOperationMetadata.encode(message.genericMetadata, writer.uint32(10).fork()).join();
      }
      return writer;
    },

    decode(input: BinaryReader | Uint8Array, length?: number): UpdateDeploymentResourcePoolOperationMetadata {
      const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
      let end = length === undefined ? reader.len : reader.pos + length;
      const message = createBaseUpdateDeploymentResourcePoolOperationMetadata();
      while (reader.pos < end) {
        const tag = reader.uint32();
        switch (tag >>> 3) {
          case 1:
            if (tag !== 10) {
              break;
            }

            message.genericMetadata = GenericOperationMetadata.decode(reader, reader.uint32());
            continue;
        }
        if ((tag & 7) === 4 || tag === 0) {
          break;
        }
        reader.skip(tag & 7);
      }
      return message;
    },

    fromJSON(object: any): UpdateDeploymentResourcePoolOperationMetadata {
      return {
        genericMetadata: isSet(object.genericMetadata)
          ? GenericOperationMetadata.fromJSON(object.genericMetadata)
          : undefined,
      };
    },

    toJSON(message: UpdateDeploymentResourcePoolOperationMetadata): unknown {
      const obj: any = {};
      if (message.genericMetadata !== undefined) {
        obj.genericMetadata = GenericOperationMetadata.toJSON(message.genericMetadata);
      }
      return obj;
    },

    create(
      base?: DeepPartial<UpdateDeploymentResourcePoolOperationMetadata>,
    ): UpdateDeploymentResourcePoolOperationMetadata {
      return UpdateDeploymentResourcePoolOperationMetadata.fromPartial(base ?? {});
    },
    fromPartial(
      object: DeepPartial<UpdateDeploymentResourcePoolOperationMetadata>,
    ): UpdateDeploymentResourcePoolOperationMetadata {
      const message = createBaseUpdateDeploymentResourcePoolOperationMetadata();
      message.genericMetadata = (object.genericMetadata !== undefined && object.genericMetadata !== null)
        ? GenericOperationMetadata.fromPartial(object.genericMetadata)
        : undefined;
      return message;
    },
  };

function createBaseDeleteDeploymentResourcePoolRequest(): DeleteDeploymentResourcePoolRequest {
  return { name: "" };
}

export const DeleteDeploymentResourcePoolRequest: MessageFns<DeleteDeploymentResourcePoolRequest> = {
  encode(message: DeleteDeploymentResourcePoolRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DeleteDeploymentResourcePoolRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDeleteDeploymentResourcePoolRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DeleteDeploymentResourcePoolRequest {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: DeleteDeploymentResourcePoolRequest): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<DeleteDeploymentResourcePoolRequest>): DeleteDeploymentResourcePoolRequest {
    return DeleteDeploymentResourcePoolRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DeleteDeploymentResourcePoolRequest>): DeleteDeploymentResourcePoolRequest {
    const message = createBaseDeleteDeploymentResourcePoolRequest();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseQueryDeployedModelsRequest(): QueryDeployedModelsRequest {
  return { deploymentResourcePool: "", pageSize: 0, pageToken: "" };
}

export const QueryDeployedModelsRequest: MessageFns<QueryDeployedModelsRequest> = {
  encode(message: QueryDeployedModelsRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.deploymentResourcePool !== "") {
      writer.uint32(10).string(message.deploymentResourcePool);
    }
    if (message.pageSize !== 0) {
      writer.uint32(16).int32(message.pageSize);
    }
    if (message.pageToken !== "") {
      writer.uint32(26).string(message.pageToken);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): QueryDeployedModelsRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseQueryDeployedModelsRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.deploymentResourcePool = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.pageSize = reader.int32();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.pageToken = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): QueryDeployedModelsRequest {
    return {
      deploymentResourcePool: isSet(object.deploymentResourcePool)
        ? globalThis.String(object.deploymentResourcePool)
        : "",
      pageSize: isSet(object.pageSize) ? globalThis.Number(object.pageSize) : 0,
      pageToken: isSet(object.pageToken) ? globalThis.String(object.pageToken) : "",
    };
  },

  toJSON(message: QueryDeployedModelsRequest): unknown {
    const obj: any = {};
    if (message.deploymentResourcePool !== "") {
      obj.deploymentResourcePool = message.deploymentResourcePool;
    }
    if (message.pageSize !== 0) {
      obj.pageSize = Math.round(message.pageSize);
    }
    if (message.pageToken !== "") {
      obj.pageToken = message.pageToken;
    }
    return obj;
  },

  create(base?: DeepPartial<QueryDeployedModelsRequest>): QueryDeployedModelsRequest {
    return QueryDeployedModelsRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<QueryDeployedModelsRequest>): QueryDeployedModelsRequest {
    const message = createBaseQueryDeployedModelsRequest();
    message.deploymentResourcePool = object.deploymentResourcePool ?? "";
    message.pageSize = object.pageSize ?? 0;
    message.pageToken = object.pageToken ?? "";
    return message;
  },
};

function createBaseQueryDeployedModelsResponse(): QueryDeployedModelsResponse {
  return {
    deployedModels: [],
    nextPageToken: "",
    deployedModelRefs: [],
    totalDeployedModelCount: 0,
    totalEndpointCount: 0,
  };
}

export const QueryDeployedModelsResponse: MessageFns<QueryDeployedModelsResponse> = {
  encode(message: QueryDeployedModelsResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.deployedModels) {
      DeployedModel.encode(v!, writer.uint32(10).fork()).join();
    }
    if (message.nextPageToken !== "") {
      writer.uint32(18).string(message.nextPageToken);
    }
    for (const v of message.deployedModelRefs) {
      DeployedModelRef.encode(v!, writer.uint32(26).fork()).join();
    }
    if (message.totalDeployedModelCount !== 0) {
      writer.uint32(32).int32(message.totalDeployedModelCount);
    }
    if (message.totalEndpointCount !== 0) {
      writer.uint32(40).int32(message.totalEndpointCount);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): QueryDeployedModelsResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseQueryDeployedModelsResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.deployedModels.push(DeployedModel.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.nextPageToken = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.deployedModelRefs.push(DeployedModelRef.decode(reader, reader.uint32()));
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.totalDeployedModelCount = reader.int32();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.totalEndpointCount = reader.int32();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): QueryDeployedModelsResponse {
    return {
      deployedModels: globalThis.Array.isArray(object?.deployedModels)
        ? object.deployedModels.map((e: any) => DeployedModel.fromJSON(e))
        : [],
      nextPageToken: isSet(object.nextPageToken) ? globalThis.String(object.nextPageToken) : "",
      deployedModelRefs: globalThis.Array.isArray(object?.deployedModelRefs)
        ? object.deployedModelRefs.map((e: any) => DeployedModelRef.fromJSON(e))
        : [],
      totalDeployedModelCount: isSet(object.totalDeployedModelCount)
        ? globalThis.Number(object.totalDeployedModelCount)
        : 0,
      totalEndpointCount: isSet(object.totalEndpointCount) ? globalThis.Number(object.totalEndpointCount) : 0,
    };
  },

  toJSON(message: QueryDeployedModelsResponse): unknown {
    const obj: any = {};
    if (message.deployedModels?.length) {
      obj.deployedModels = message.deployedModels.map((e) => DeployedModel.toJSON(e));
    }
    if (message.nextPageToken !== "") {
      obj.nextPageToken = message.nextPageToken;
    }
    if (message.deployedModelRefs?.length) {
      obj.deployedModelRefs = message.deployedModelRefs.map((e) => DeployedModelRef.toJSON(e));
    }
    if (message.totalDeployedModelCount !== 0) {
      obj.totalDeployedModelCount = Math.round(message.totalDeployedModelCount);
    }
    if (message.totalEndpointCount !== 0) {
      obj.totalEndpointCount = Math.round(message.totalEndpointCount);
    }
    return obj;
  },

  create(base?: DeepPartial<QueryDeployedModelsResponse>): QueryDeployedModelsResponse {
    return QueryDeployedModelsResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<QueryDeployedModelsResponse>): QueryDeployedModelsResponse {
    const message = createBaseQueryDeployedModelsResponse();
    message.deployedModels = object.deployedModels?.map((e) => DeployedModel.fromPartial(e)) || [];
    message.nextPageToken = object.nextPageToken ?? "";
    message.deployedModelRefs = object.deployedModelRefs?.map((e) => DeployedModelRef.fromPartial(e)) || [];
    message.totalDeployedModelCount = object.totalDeployedModelCount ?? 0;
    message.totalEndpointCount = object.totalEndpointCount ?? 0;
    return message;
  },
};

/** A service that manages the DeploymentResourcePool resource. */
export type DeploymentResourcePoolServiceDefinition = typeof DeploymentResourcePoolServiceDefinition;
export const DeploymentResourcePoolServiceDefinition = {
  name: "DeploymentResourcePoolService",
  fullName: "google.cloud.aiplatform.v1.DeploymentResourcePoolService",
  methods: {
    /** Create a DeploymentResourcePool. */
    createDeploymentResourcePool: {
      name: "CreateDeploymentResourcePool",
      requestType: CreateDeploymentResourcePoolRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              71,
              10,
              22,
              68,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              80,
              111,
              111,
              108,
              18,
              45,
              67,
              114,
              101,
              97,
              116,
              101,
              68,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              80,
              111,
              111,
              108,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [
            Buffer.from([
              59,
              112,
              97,
              114,
              101,
              110,
              116,
              44,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              112,
              111,
              111,
              108,
              44,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              112,
              111,
              111,
              108,
              95,
              105,
              100,
            ]),
          ],
          578365826: [
            Buffer.from([
              64,
              58,
              1,
              42,
              34,
              59,
              47,
              118,
              49,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              80,
              111,
              111,
              108,
              115,
            ]),
          ],
        },
      },
    },
    /** Get a DeploymentResourcePool. */
    getDeploymentResourcePool: {
      name: "GetDeploymentResourcePool",
      requestType: GetDeploymentResourcePoolRequest,
      requestStream: false,
      responseType: DeploymentResourcePool,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              61,
              18,
              59,
              47,
              118,
              49,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              80,
              111,
              111,
              108,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** List DeploymentResourcePools in a location. */
    listDeploymentResourcePools: {
      name: "ListDeploymentResourcePools",
      requestType: ListDeploymentResourcePoolsRequest,
      requestStream: false,
      responseType: ListDeploymentResourcePoolsResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              61,
              18,
              59,
              47,
              118,
              49,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              80,
              111,
              111,
              108,
              115,
            ]),
          ],
        },
      },
    },
    /** Update a DeploymentResourcePool. */
    updateDeploymentResourcePool: {
      name: "UpdateDeploymentResourcePool",
      requestType: UpdateDeploymentResourcePoolRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              71,
              10,
              22,
              68,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              80,
              111,
              111,
              108,
              18,
              45,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              80,
              111,
              111,
              108,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [
            Buffer.from([
              36,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              112,
              111,
              111,
              108,
              44,
              117,
              112,
              100,
              97,
              116,
              101,
              95,
              109,
              97,
              115,
              107,
            ]),
          ],
          578365826: [
            Buffer.from([
              112,
              58,
              24,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              112,
              111,
              111,
              108,
              50,
              84,
              47,
              118,
              49,
              47,
              123,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              112,
              111,
              111,
              108,
              46,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              80,
              111,
              111,
              108,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Delete a DeploymentResourcePool. */
    deleteDeploymentResourcePool: {
      name: "DeleteDeploymentResourcePool",
      requestType: DeleteDeploymentResourcePoolRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              48,
              10,
              21,
              103,
              111,
              111,
              103,
              108,
              101,
              46,
              112,
              114,
              111,
              116,
              111,
              98,
              117,
              102,
              46,
              69,
              109,
              112,
              116,
              121,
              18,
              23,
              68,
              101,
              108,
              101,
              116,
              101,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              61,
              42,
              59,
              47,
              118,
              49,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              80,
              111,
              111,
              108,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** List DeployedModels that have been deployed on this DeploymentResourcePool. */
    queryDeployedModels: {
      name: "QueryDeployedModels",
      requestType: QueryDeployedModelsRequest,
      requestStream: false,
      responseType: QueryDeployedModelsResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              24,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              112,
              111,
              111,
              108,
            ]),
          ],
          578365826: [
            Buffer.from([
              101,
              18,
              99,
              47,
              118,
              49,
              47,
              123,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              95,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              112,
              111,
              111,
              108,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              100,
              101,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              80,
              111,
              111,
              108,
              115,
              47,
              42,
              125,
              58,
              113,
              117,
              101,
              114,
              121,
              68,
              101,
              112,
              108,
              111,
              121,
              101,
              100,
              77,
              111,
              100,
              101,
              108,
              115,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface DeploymentResourcePoolServiceImplementation<CallContextExt = {}> {
  /** Create a DeploymentResourcePool. */
  createDeploymentResourcePool(
    request: CreateDeploymentResourcePoolRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /** Get a DeploymentResourcePool. */
  getDeploymentResourcePool(
    request: GetDeploymentResourcePoolRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<DeploymentResourcePool>>;
  /** List DeploymentResourcePools in a location. */
  listDeploymentResourcePools(
    request: ListDeploymentResourcePoolsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListDeploymentResourcePoolsResponse>>;
  /** Update a DeploymentResourcePool. */
  updateDeploymentResourcePool(
    request: UpdateDeploymentResourcePoolRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /** Delete a DeploymentResourcePool. */
  deleteDeploymentResourcePool(
    request: DeleteDeploymentResourcePoolRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /** List DeployedModels that have been deployed on this DeploymentResourcePool. */
  queryDeployedModels(
    request: QueryDeployedModelsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<QueryDeployedModelsResponse>>;
}

export interface DeploymentResourcePoolServiceClient<CallOptionsExt = {}> {
  /** Create a DeploymentResourcePool. */
  createDeploymentResourcePool(
    request: DeepPartial<CreateDeploymentResourcePoolRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /** Get a DeploymentResourcePool. */
  getDeploymentResourcePool(
    request: DeepPartial<GetDeploymentResourcePoolRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<DeploymentResourcePool>;
  /** List DeploymentResourcePools in a location. */
  listDeploymentResourcePools(
    request: DeepPartial<ListDeploymentResourcePoolsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListDeploymentResourcePoolsResponse>;
  /** Update a DeploymentResourcePool. */
  updateDeploymentResourcePool(
    request: DeepPartial<UpdateDeploymentResourcePoolRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /** Delete a DeploymentResourcePool. */
  deleteDeploymentResourcePool(
    request: DeepPartial<DeleteDeploymentResourcePoolRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /** List DeployedModels that have been deployed on this DeploymentResourcePool. */
  queryDeployedModels(
    request: DeepPartial<QueryDeployedModelsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<QueryDeployedModelsResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
