// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/retail/v2alpha/analytics_service.proto

/* eslint-disable */
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { Operation } from "../../../longrunning/operations.js";
import { ExportAnalyticsMetricsRequest } from "./export_config.js";

export const protobufPackage = "google.cloud.retail.v2alpha";

/**
 * Service for managing & accessing retail search business metric.
 * Retail recommendation business metric is currently not available.
 */
export type AnalyticsServiceDefinition = typeof AnalyticsServiceDefinition;
export const AnalyticsServiceDefinition = {
  name: "AnalyticsService",
  fullName: "google.cloud.retail.v2alpha.AnalyticsService",
  methods: {
    /**
     * Exports analytics metrics.
     *
     * `Operation.response` is of type `ExportAnalyticsMetricsResponse`.
     * `Operation.metadata` is of type `ExportMetadata`.
     */
    exportAnalyticsMetrics: {
      name: "ExportAnalyticsMetrics",
      requestType: ExportAnalyticsMetricsRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              104,
              10,
              58,
              103,
              111,
              111,
              103,
              108,
              101,
              46,
              99,
              108,
              111,
              117,
              100,
              46,
              114,
              101,
              116,
              97,
              105,
              108,
              46,
              118,
              50,
              97,
              108,
              112,
              104,
              97,
              46,
              69,
              120,
              112,
              111,
              114,
              116,
              65,
              110,
              97,
              108,
              121,
              116,
              105,
              99,
              115,
              77,
              101,
              116,
              114,
              105,
              99,
              115,
              82,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              18,
              42,
              103,
              111,
              111,
              103,
              108,
              101,
              46,
              99,
              108,
              111,
              117,
              100,
              46,
              114,
              101,
              116,
              97,
              105,
              108,
              46,
              118,
              50,
              97,
              108,
              112,
              104,
              97,
              46,
              69,
              120,
              112,
              111,
              114,
              116,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          578365826: [
            Buffer.from([
              80,
              58,
              1,
              42,
              34,
              75,
              47,
              118,
              50,
              97,
              108,
              112,
              104,
              97,
              47,
              123,
              99,
              97,
              116,
              97,
              108,
              111,
              103,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              99,
              97,
              116,
              97,
              108,
              111,
              103,
              115,
              47,
              42,
              125,
              58,
              101,
              120,
              112,
              111,
              114,
              116,
              65,
              110,
              97,
              108,
              121,
              116,
              105,
              99,
              115,
              77,
              101,
              116,
              114,
              105,
              99,
              115,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface AnalyticsServiceImplementation<CallContextExt = {}> {
  /**
   * Exports analytics metrics.
   *
   * `Operation.response` is of type `ExportAnalyticsMetricsResponse`.
   * `Operation.metadata` is of type `ExportMetadata`.
   */
  exportAnalyticsMetrics(
    request: ExportAnalyticsMetricsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
}

export interface AnalyticsServiceClient<CallOptionsExt = {}> {
  /**
   * Exports analytics metrics.
   *
   * `Operation.response` is of type `ExportAnalyticsMetricsResponse`.
   * `Operation.metadata` is of type `ExportMetadata`.
   */
  exportAnalyticsMetrics(
    request: DeepPartial<ExportAnalyticsMetricsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;
