// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/baremetalsolution/v2/common.proto

/* eslint-disable */

export const protobufPackage = "google.cloud.baremetalsolution.v2";

/** Performance tier of the Volume. */
export enum VolumePerformanceTier {
  /** VOLUME_PERFORMANCE_TIER_UNSPECIFIED - Value is not specified. */
  VOLUME_PERFORMANCE_TIER_UNSPECIFIED = 0,
  /** VOLUME_PERFORMANCE_TIER_SHARED - Regular volumes, shared aggregates. */
  VOLUME_PERFORMANCE_TIER_SHARED = 1,
  /** VOLUME_PERFORMANCE_TIER_ASSIGNED - Assigned aggregates. */
  VOLUME_PERFORMANCE_TIER_ASSIGNED = 2,
  /** VOLUME_PERFORMANCE_TIER_HT - High throughput aggregates. */
  VOLUME_PERFORMANCE_TIER_HT = 3,
  UNRECOGNIZED = -1,
}

export function volumePerformanceTierFromJSON(object: any): VolumePerformanceTier {
  switch (object) {
    case 0:
    case "VOLUME_PERFORMANCE_TIER_UNSPECIFIED":
      return VolumePerformanceTier.VOLUME_PERFORMANCE_TIER_UNSPECIFIED;
    case 1:
    case "VOLUME_PERFORMANCE_TIER_SHARED":
      return VolumePerformanceTier.VOLUME_PERFORMANCE_TIER_SHARED;
    case 2:
    case "VOLUME_PERFORMANCE_TIER_ASSIGNED":
      return VolumePerformanceTier.VOLUME_PERFORMANCE_TIER_ASSIGNED;
    case 3:
    case "VOLUME_PERFORMANCE_TIER_HT":
      return VolumePerformanceTier.VOLUME_PERFORMANCE_TIER_HT;
    case -1:
    case "UNRECOGNIZED":
    default:
      return VolumePerformanceTier.UNRECOGNIZED;
  }
}

export function volumePerformanceTierToJSON(object: VolumePerformanceTier): string {
  switch (object) {
    case VolumePerformanceTier.VOLUME_PERFORMANCE_TIER_UNSPECIFIED:
      return "VOLUME_PERFORMANCE_TIER_UNSPECIFIED";
    case VolumePerformanceTier.VOLUME_PERFORMANCE_TIER_SHARED:
      return "VOLUME_PERFORMANCE_TIER_SHARED";
    case VolumePerformanceTier.VOLUME_PERFORMANCE_TIER_ASSIGNED:
      return "VOLUME_PERFORMANCE_TIER_ASSIGNED";
    case VolumePerformanceTier.VOLUME_PERFORMANCE_TIER_HT:
      return "VOLUME_PERFORMANCE_TIER_HT";
    case VolumePerformanceTier.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** The possible values for a workload profile. */
export enum WorkloadProfile {
  /** WORKLOAD_PROFILE_UNSPECIFIED - The workload profile is in an unknown state. */
  WORKLOAD_PROFILE_UNSPECIFIED = 0,
  /** WORKLOAD_PROFILE_GENERIC - The workload profile is generic. */
  WORKLOAD_PROFILE_GENERIC = 1,
  /** WORKLOAD_PROFILE_HANA - The workload profile is hana. */
  WORKLOAD_PROFILE_HANA = 2,
  UNRECOGNIZED = -1,
}

export function workloadProfileFromJSON(object: any): WorkloadProfile {
  switch (object) {
    case 0:
    case "WORKLOAD_PROFILE_UNSPECIFIED":
      return WorkloadProfile.WORKLOAD_PROFILE_UNSPECIFIED;
    case 1:
    case "WORKLOAD_PROFILE_GENERIC":
      return WorkloadProfile.WORKLOAD_PROFILE_GENERIC;
    case 2:
    case "WORKLOAD_PROFILE_HANA":
      return WorkloadProfile.WORKLOAD_PROFILE_HANA;
    case -1:
    case "UNRECOGNIZED":
    default:
      return WorkloadProfile.UNRECOGNIZED;
  }
}

export function workloadProfileToJSON(object: WorkloadProfile): string {
  switch (object) {
    case WorkloadProfile.WORKLOAD_PROFILE_UNSPECIFIED:
      return "WORKLOAD_PROFILE_UNSPECIFIED";
    case WorkloadProfile.WORKLOAD_PROFILE_GENERIC:
      return "WORKLOAD_PROFILE_GENERIC";
    case WorkloadProfile.WORKLOAD_PROFILE_HANA:
      return "WORKLOAD_PROFILE_HANA";
    case WorkloadProfile.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
