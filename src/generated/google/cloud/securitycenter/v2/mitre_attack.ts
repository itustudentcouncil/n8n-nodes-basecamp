// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/securitycenter/v2/mitre_attack.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.cloud.securitycenter.v2";

/**
 * MITRE ATT&CK tactics and techniques related to this finding.
 * See: https://attack.mitre.org
 */
export interface MitreAttack {
  /** The MITRE ATT&CK tactic most closely represented by this finding, if any. */
  primaryTactic: MitreAttack_Tactic;
  /**
   * The MITRE ATT&CK technique most closely represented by this finding, if
   * any. primary_techniques is a repeated field because there are multiple
   * levels of MITRE ATT&CK techniques.  If the technique most closely
   * represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`),
   * both the sub-technique and its parent technique(s) will be listed (e.g.
   * `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`).
   */
  primaryTechniques: MitreAttack_Technique[];
  /** Additional MITRE ATT&CK tactics related to this finding, if any. */
  additionalTactics: MitreAttack_Tactic[];
  /**
   * Additional MITRE ATT&CK techniques related to this finding, if any, along
   * with any of their respective parent techniques.
   */
  additionalTechniques: MitreAttack_Technique[];
  /** The MITRE ATT&CK version referenced by the above fields. E.g. "8". */
  version: string;
}

/**
 * MITRE ATT&CK tactics that can be referenced by SCC findings.
 * See: https://attack.mitre.org/tactics/enterprise/
 */
export enum MitreAttack_Tactic {
  /** TACTIC_UNSPECIFIED - Unspecified value. */
  TACTIC_UNSPECIFIED = 0,
  /** RECONNAISSANCE - TA0043 */
  RECONNAISSANCE = 1,
  /** RESOURCE_DEVELOPMENT - TA0042 */
  RESOURCE_DEVELOPMENT = 2,
  /** INITIAL_ACCESS - TA0001 */
  INITIAL_ACCESS = 5,
  /** EXECUTION - TA0002 */
  EXECUTION = 3,
  /** PERSISTENCE - TA0003 */
  PERSISTENCE = 6,
  /** PRIVILEGE_ESCALATION - TA0004 */
  PRIVILEGE_ESCALATION = 8,
  /** DEFENSE_EVASION - TA0005 */
  DEFENSE_EVASION = 7,
  /** CREDENTIAL_ACCESS - TA0006 */
  CREDENTIAL_ACCESS = 9,
  /** DISCOVERY - TA0007 */
  DISCOVERY = 10,
  /** LATERAL_MOVEMENT - TA0008 */
  LATERAL_MOVEMENT = 11,
  /** COLLECTION - TA0009 */
  COLLECTION = 12,
  /** COMMAND_AND_CONTROL - TA0011 */
  COMMAND_AND_CONTROL = 4,
  /** EXFILTRATION - TA0010 */
  EXFILTRATION = 13,
  /** IMPACT - TA0040 */
  IMPACT = 14,
  UNRECOGNIZED = -1,
}

export function mitreAttack_TacticFromJSON(object: any): MitreAttack_Tactic {
  switch (object) {
    case 0:
    case "TACTIC_UNSPECIFIED":
      return MitreAttack_Tactic.TACTIC_UNSPECIFIED;
    case 1:
    case "RECONNAISSANCE":
      return MitreAttack_Tactic.RECONNAISSANCE;
    case 2:
    case "RESOURCE_DEVELOPMENT":
      return MitreAttack_Tactic.RESOURCE_DEVELOPMENT;
    case 5:
    case "INITIAL_ACCESS":
      return MitreAttack_Tactic.INITIAL_ACCESS;
    case 3:
    case "EXECUTION":
      return MitreAttack_Tactic.EXECUTION;
    case 6:
    case "PERSISTENCE":
      return MitreAttack_Tactic.PERSISTENCE;
    case 8:
    case "PRIVILEGE_ESCALATION":
      return MitreAttack_Tactic.PRIVILEGE_ESCALATION;
    case 7:
    case "DEFENSE_EVASION":
      return MitreAttack_Tactic.DEFENSE_EVASION;
    case 9:
    case "CREDENTIAL_ACCESS":
      return MitreAttack_Tactic.CREDENTIAL_ACCESS;
    case 10:
    case "DISCOVERY":
      return MitreAttack_Tactic.DISCOVERY;
    case 11:
    case "LATERAL_MOVEMENT":
      return MitreAttack_Tactic.LATERAL_MOVEMENT;
    case 12:
    case "COLLECTION":
      return MitreAttack_Tactic.COLLECTION;
    case 4:
    case "COMMAND_AND_CONTROL":
      return MitreAttack_Tactic.COMMAND_AND_CONTROL;
    case 13:
    case "EXFILTRATION":
      return MitreAttack_Tactic.EXFILTRATION;
    case 14:
    case "IMPACT":
      return MitreAttack_Tactic.IMPACT;
    case -1:
    case "UNRECOGNIZED":
    default:
      return MitreAttack_Tactic.UNRECOGNIZED;
  }
}

export function mitreAttack_TacticToJSON(object: MitreAttack_Tactic): string {
  switch (object) {
    case MitreAttack_Tactic.TACTIC_UNSPECIFIED:
      return "TACTIC_UNSPECIFIED";
    case MitreAttack_Tactic.RECONNAISSANCE:
      return "RECONNAISSANCE";
    case MitreAttack_Tactic.RESOURCE_DEVELOPMENT:
      return "RESOURCE_DEVELOPMENT";
    case MitreAttack_Tactic.INITIAL_ACCESS:
      return "INITIAL_ACCESS";
    case MitreAttack_Tactic.EXECUTION:
      return "EXECUTION";
    case MitreAttack_Tactic.PERSISTENCE:
      return "PERSISTENCE";
    case MitreAttack_Tactic.PRIVILEGE_ESCALATION:
      return "PRIVILEGE_ESCALATION";
    case MitreAttack_Tactic.DEFENSE_EVASION:
      return "DEFENSE_EVASION";
    case MitreAttack_Tactic.CREDENTIAL_ACCESS:
      return "CREDENTIAL_ACCESS";
    case MitreAttack_Tactic.DISCOVERY:
      return "DISCOVERY";
    case MitreAttack_Tactic.LATERAL_MOVEMENT:
      return "LATERAL_MOVEMENT";
    case MitreAttack_Tactic.COLLECTION:
      return "COLLECTION";
    case MitreAttack_Tactic.COMMAND_AND_CONTROL:
      return "COMMAND_AND_CONTROL";
    case MitreAttack_Tactic.EXFILTRATION:
      return "EXFILTRATION";
    case MitreAttack_Tactic.IMPACT:
      return "IMPACT";
    case MitreAttack_Tactic.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/**
 * MITRE ATT&CK techniques that can be referenced by SCC findings.
 * See: https://attack.mitre.org/techniques/enterprise/
 * Next ID: 65
 */
export enum MitreAttack_Technique {
  /** TECHNIQUE_UNSPECIFIED - Unspecified value. */
  TECHNIQUE_UNSPECIFIED = 0,
  /** MASQUERADING - T1036 */
  MASQUERADING = 49,
  /** MATCH_LEGITIMATE_NAME_OR_LOCATION - T1036.005 */
  MATCH_LEGITIMATE_NAME_OR_LOCATION = 50,
  /** BOOT_OR_LOGON_INITIALIZATION_SCRIPTS - T1037 */
  BOOT_OR_LOGON_INITIALIZATION_SCRIPTS = 37,
  /** STARTUP_ITEMS - T1037.005 */
  STARTUP_ITEMS = 38,
  /** NETWORK_SERVICE_DISCOVERY - T1046 */
  NETWORK_SERVICE_DISCOVERY = 32,
  /** PROCESS_DISCOVERY - T1057 */
  PROCESS_DISCOVERY = 56,
  /** COMMAND_AND_SCRIPTING_INTERPRETER - T1059 */
  COMMAND_AND_SCRIPTING_INTERPRETER = 6,
  /** UNIX_SHELL - T1059.004 */
  UNIX_SHELL = 7,
  /** PYTHON - T1059.006 */
  PYTHON = 59,
  /** EXPLOITATION_FOR_PRIVILEGE_ESCALATION - T1068 */
  EXPLOITATION_FOR_PRIVILEGE_ESCALATION = 63,
  /** PERMISSION_GROUPS_DISCOVERY - T1069 */
  PERMISSION_GROUPS_DISCOVERY = 18,
  /** CLOUD_GROUPS - T1069.003 */
  CLOUD_GROUPS = 19,
  /** INDICATOR_REMOVAL_FILE_DELETION - T1070.004 */
  INDICATOR_REMOVAL_FILE_DELETION = 64,
  /** APPLICATION_LAYER_PROTOCOL - T1071 */
  APPLICATION_LAYER_PROTOCOL = 45,
  /** DNS - T1071.004 */
  DNS = 46,
  /** SOFTWARE_DEPLOYMENT_TOOLS - T1072 */
  SOFTWARE_DEPLOYMENT_TOOLS = 47,
  /** VALID_ACCOUNTS - T1078 */
  VALID_ACCOUNTS = 14,
  /** DEFAULT_ACCOUNTS - T1078.001 */
  DEFAULT_ACCOUNTS = 35,
  /** LOCAL_ACCOUNTS - T1078.003 */
  LOCAL_ACCOUNTS = 15,
  /** CLOUD_ACCOUNTS - T1078.004 */
  CLOUD_ACCOUNTS = 16,
  /** PROXY - T1090 */
  PROXY = 9,
  /** EXTERNAL_PROXY - T1090.002 */
  EXTERNAL_PROXY = 10,
  /** MULTI_HOP_PROXY - T1090.003 */
  MULTI_HOP_PROXY = 11,
  /** ACCOUNT_MANIPULATION - T1098 */
  ACCOUNT_MANIPULATION = 22,
  /** ADDITIONAL_CLOUD_CREDENTIALS - T1098.001 */
  ADDITIONAL_CLOUD_CREDENTIALS = 40,
  /** SSH_AUTHORIZED_KEYS - T1098.004 */
  SSH_AUTHORIZED_KEYS = 23,
  /** ADDITIONAL_CONTAINER_CLUSTER_ROLES - T1098.006 */
  ADDITIONAL_CONTAINER_CLUSTER_ROLES = 58,
  /** INGRESS_TOOL_TRANSFER - T1105 */
  INGRESS_TOOL_TRANSFER = 3,
  /** NATIVE_API - T1106 */
  NATIVE_API = 4,
  /** BRUTE_FORCE - T1110 */
  BRUTE_FORCE = 44,
  /** SHARED_MODULES - T1129 */
  SHARED_MODULES = 5,
  /** ACCESS_TOKEN_MANIPULATION - T1134 */
  ACCESS_TOKEN_MANIPULATION = 33,
  /** TOKEN_IMPERSONATION_OR_THEFT - T1134.001 */
  TOKEN_IMPERSONATION_OR_THEFT = 39,
  /** EXPLOIT_PUBLIC_FACING_APPLICATION - T1190 */
  EXPLOIT_PUBLIC_FACING_APPLICATION = 27,
  /** DOMAIN_POLICY_MODIFICATION - T1484 */
  DOMAIN_POLICY_MODIFICATION = 30,
  /** DATA_DESTRUCTION - T1485 */
  DATA_DESTRUCTION = 29,
  /** SERVICE_STOP - T1489 */
  SERVICE_STOP = 52,
  /** INHIBIT_SYSTEM_RECOVERY - T1490 */
  INHIBIT_SYSTEM_RECOVERY = 36,
  /** RESOURCE_HIJACKING - T1496 */
  RESOURCE_HIJACKING = 8,
  /** NETWORK_DENIAL_OF_SERVICE - T1498 */
  NETWORK_DENIAL_OF_SERVICE = 17,
  /** CLOUD_SERVICE_DISCOVERY - T1526 */
  CLOUD_SERVICE_DISCOVERY = 48,
  /** STEAL_APPLICATION_ACCESS_TOKEN - T1528 */
  STEAL_APPLICATION_ACCESS_TOKEN = 42,
  /** ACCOUNT_ACCESS_REMOVAL - T1531 */
  ACCOUNT_ACCESS_REMOVAL = 51,
  /** STEAL_WEB_SESSION_COOKIE - T1539 */
  STEAL_WEB_SESSION_COOKIE = 25,
  /** CREATE_OR_MODIFY_SYSTEM_PROCESS - T1543 */
  CREATE_OR_MODIFY_SYSTEM_PROCESS = 24,
  /** ABUSE_ELEVATION_CONTROL_MECHANISM - T1548 */
  ABUSE_ELEVATION_CONTROL_MECHANISM = 34,
  /** UNSECURED_CREDENTIALS - T1552 */
  UNSECURED_CREDENTIALS = 13,
  /** MODIFY_AUTHENTICATION_PROCESS - T1556 */
  MODIFY_AUTHENTICATION_PROCESS = 28,
  /** IMPAIR_DEFENSES - T1562 */
  IMPAIR_DEFENSES = 31,
  /** DISABLE_OR_MODIFY_TOOLS - T1562.001 */
  DISABLE_OR_MODIFY_TOOLS = 55,
  /** EXFILTRATION_OVER_WEB_SERVICE - T1567 */
  EXFILTRATION_OVER_WEB_SERVICE = 20,
  /** EXFILTRATION_TO_CLOUD_STORAGE - T1567.002 */
  EXFILTRATION_TO_CLOUD_STORAGE = 21,
  /** DYNAMIC_RESOLUTION - T1568 */
  DYNAMIC_RESOLUTION = 12,
  /** LATERAL_TOOL_TRANSFER - T1570 */
  LATERAL_TOOL_TRANSFER = 41,
  /** MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE - T1578 */
  MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE = 26,
  /** CREATE_SNAPSHOT - T1578.001 */
  CREATE_SNAPSHOT = 54,
  /** CLOUD_INFRASTRUCTURE_DISCOVERY - T1580 */
  CLOUD_INFRASTRUCTURE_DISCOVERY = 53,
  /** OBTAIN_CAPABILITIES - T1588 */
  OBTAIN_CAPABILITIES = 43,
  /** ACTIVE_SCANNING - T1595 */
  ACTIVE_SCANNING = 1,
  /** SCANNING_IP_BLOCKS - T1595.001 */
  SCANNING_IP_BLOCKS = 2,
  /** CONTAINER_ADMINISTRATION_COMMAND - T1609 */
  CONTAINER_ADMINISTRATION_COMMAND = 60,
  /** ESCAPE_TO_HOST - T1611 */
  ESCAPE_TO_HOST = 61,
  /** CONTAINER_AND_RESOURCE_DISCOVERY - T1613 */
  CONTAINER_AND_RESOURCE_DISCOVERY = 57,
  /** STEAL_OR_FORGE_AUTHENTICATION_CERTIFICATES - T1649 */
  STEAL_OR_FORGE_AUTHENTICATION_CERTIFICATES = 62,
  UNRECOGNIZED = -1,
}

export function mitreAttack_TechniqueFromJSON(object: any): MitreAttack_Technique {
  switch (object) {
    case 0:
    case "TECHNIQUE_UNSPECIFIED":
      return MitreAttack_Technique.TECHNIQUE_UNSPECIFIED;
    case 49:
    case "MASQUERADING":
      return MitreAttack_Technique.MASQUERADING;
    case 50:
    case "MATCH_LEGITIMATE_NAME_OR_LOCATION":
      return MitreAttack_Technique.MATCH_LEGITIMATE_NAME_OR_LOCATION;
    case 37:
    case "BOOT_OR_LOGON_INITIALIZATION_SCRIPTS":
      return MitreAttack_Technique.BOOT_OR_LOGON_INITIALIZATION_SCRIPTS;
    case 38:
    case "STARTUP_ITEMS":
      return MitreAttack_Technique.STARTUP_ITEMS;
    case 32:
    case "NETWORK_SERVICE_DISCOVERY":
      return MitreAttack_Technique.NETWORK_SERVICE_DISCOVERY;
    case 56:
    case "PROCESS_DISCOVERY":
      return MitreAttack_Technique.PROCESS_DISCOVERY;
    case 6:
    case "COMMAND_AND_SCRIPTING_INTERPRETER":
      return MitreAttack_Technique.COMMAND_AND_SCRIPTING_INTERPRETER;
    case 7:
    case "UNIX_SHELL":
      return MitreAttack_Technique.UNIX_SHELL;
    case 59:
    case "PYTHON":
      return MitreAttack_Technique.PYTHON;
    case 63:
    case "EXPLOITATION_FOR_PRIVILEGE_ESCALATION":
      return MitreAttack_Technique.EXPLOITATION_FOR_PRIVILEGE_ESCALATION;
    case 18:
    case "PERMISSION_GROUPS_DISCOVERY":
      return MitreAttack_Technique.PERMISSION_GROUPS_DISCOVERY;
    case 19:
    case "CLOUD_GROUPS":
      return MitreAttack_Technique.CLOUD_GROUPS;
    case 64:
    case "INDICATOR_REMOVAL_FILE_DELETION":
      return MitreAttack_Technique.INDICATOR_REMOVAL_FILE_DELETION;
    case 45:
    case "APPLICATION_LAYER_PROTOCOL":
      return MitreAttack_Technique.APPLICATION_LAYER_PROTOCOL;
    case 46:
    case "DNS":
      return MitreAttack_Technique.DNS;
    case 47:
    case "SOFTWARE_DEPLOYMENT_TOOLS":
      return MitreAttack_Technique.SOFTWARE_DEPLOYMENT_TOOLS;
    case 14:
    case "VALID_ACCOUNTS":
      return MitreAttack_Technique.VALID_ACCOUNTS;
    case 35:
    case "DEFAULT_ACCOUNTS":
      return MitreAttack_Technique.DEFAULT_ACCOUNTS;
    case 15:
    case "LOCAL_ACCOUNTS":
      return MitreAttack_Technique.LOCAL_ACCOUNTS;
    case 16:
    case "CLOUD_ACCOUNTS":
      return MitreAttack_Technique.CLOUD_ACCOUNTS;
    case 9:
    case "PROXY":
      return MitreAttack_Technique.PROXY;
    case 10:
    case "EXTERNAL_PROXY":
      return MitreAttack_Technique.EXTERNAL_PROXY;
    case 11:
    case "MULTI_HOP_PROXY":
      return MitreAttack_Technique.MULTI_HOP_PROXY;
    case 22:
    case "ACCOUNT_MANIPULATION":
      return MitreAttack_Technique.ACCOUNT_MANIPULATION;
    case 40:
    case "ADDITIONAL_CLOUD_CREDENTIALS":
      return MitreAttack_Technique.ADDITIONAL_CLOUD_CREDENTIALS;
    case 23:
    case "SSH_AUTHORIZED_KEYS":
      return MitreAttack_Technique.SSH_AUTHORIZED_KEYS;
    case 58:
    case "ADDITIONAL_CONTAINER_CLUSTER_ROLES":
      return MitreAttack_Technique.ADDITIONAL_CONTAINER_CLUSTER_ROLES;
    case 3:
    case "INGRESS_TOOL_TRANSFER":
      return MitreAttack_Technique.INGRESS_TOOL_TRANSFER;
    case 4:
    case "NATIVE_API":
      return MitreAttack_Technique.NATIVE_API;
    case 44:
    case "BRUTE_FORCE":
      return MitreAttack_Technique.BRUTE_FORCE;
    case 5:
    case "SHARED_MODULES":
      return MitreAttack_Technique.SHARED_MODULES;
    case 33:
    case "ACCESS_TOKEN_MANIPULATION":
      return MitreAttack_Technique.ACCESS_TOKEN_MANIPULATION;
    case 39:
    case "TOKEN_IMPERSONATION_OR_THEFT":
      return MitreAttack_Technique.TOKEN_IMPERSONATION_OR_THEFT;
    case 27:
    case "EXPLOIT_PUBLIC_FACING_APPLICATION":
      return MitreAttack_Technique.EXPLOIT_PUBLIC_FACING_APPLICATION;
    case 30:
    case "DOMAIN_POLICY_MODIFICATION":
      return MitreAttack_Technique.DOMAIN_POLICY_MODIFICATION;
    case 29:
    case "DATA_DESTRUCTION":
      return MitreAttack_Technique.DATA_DESTRUCTION;
    case 52:
    case "SERVICE_STOP":
      return MitreAttack_Technique.SERVICE_STOP;
    case 36:
    case "INHIBIT_SYSTEM_RECOVERY":
      return MitreAttack_Technique.INHIBIT_SYSTEM_RECOVERY;
    case 8:
    case "RESOURCE_HIJACKING":
      return MitreAttack_Technique.RESOURCE_HIJACKING;
    case 17:
    case "NETWORK_DENIAL_OF_SERVICE":
      return MitreAttack_Technique.NETWORK_DENIAL_OF_SERVICE;
    case 48:
    case "CLOUD_SERVICE_DISCOVERY":
      return MitreAttack_Technique.CLOUD_SERVICE_DISCOVERY;
    case 42:
    case "STEAL_APPLICATION_ACCESS_TOKEN":
      return MitreAttack_Technique.STEAL_APPLICATION_ACCESS_TOKEN;
    case 51:
    case "ACCOUNT_ACCESS_REMOVAL":
      return MitreAttack_Technique.ACCOUNT_ACCESS_REMOVAL;
    case 25:
    case "STEAL_WEB_SESSION_COOKIE":
      return MitreAttack_Technique.STEAL_WEB_SESSION_COOKIE;
    case 24:
    case "CREATE_OR_MODIFY_SYSTEM_PROCESS":
      return MitreAttack_Technique.CREATE_OR_MODIFY_SYSTEM_PROCESS;
    case 34:
    case "ABUSE_ELEVATION_CONTROL_MECHANISM":
      return MitreAttack_Technique.ABUSE_ELEVATION_CONTROL_MECHANISM;
    case 13:
    case "UNSECURED_CREDENTIALS":
      return MitreAttack_Technique.UNSECURED_CREDENTIALS;
    case 28:
    case "MODIFY_AUTHENTICATION_PROCESS":
      return MitreAttack_Technique.MODIFY_AUTHENTICATION_PROCESS;
    case 31:
    case "IMPAIR_DEFENSES":
      return MitreAttack_Technique.IMPAIR_DEFENSES;
    case 55:
    case "DISABLE_OR_MODIFY_TOOLS":
      return MitreAttack_Technique.DISABLE_OR_MODIFY_TOOLS;
    case 20:
    case "EXFILTRATION_OVER_WEB_SERVICE":
      return MitreAttack_Technique.EXFILTRATION_OVER_WEB_SERVICE;
    case 21:
    case "EXFILTRATION_TO_CLOUD_STORAGE":
      return MitreAttack_Technique.EXFILTRATION_TO_CLOUD_STORAGE;
    case 12:
    case "DYNAMIC_RESOLUTION":
      return MitreAttack_Technique.DYNAMIC_RESOLUTION;
    case 41:
    case "LATERAL_TOOL_TRANSFER":
      return MitreAttack_Technique.LATERAL_TOOL_TRANSFER;
    case 26:
    case "MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE":
      return MitreAttack_Technique.MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE;
    case 54:
    case "CREATE_SNAPSHOT":
      return MitreAttack_Technique.CREATE_SNAPSHOT;
    case 53:
    case "CLOUD_INFRASTRUCTURE_DISCOVERY":
      return MitreAttack_Technique.CLOUD_INFRASTRUCTURE_DISCOVERY;
    case 43:
    case "OBTAIN_CAPABILITIES":
      return MitreAttack_Technique.OBTAIN_CAPABILITIES;
    case 1:
    case "ACTIVE_SCANNING":
      return MitreAttack_Technique.ACTIVE_SCANNING;
    case 2:
    case "SCANNING_IP_BLOCKS":
      return MitreAttack_Technique.SCANNING_IP_BLOCKS;
    case 60:
    case "CONTAINER_ADMINISTRATION_COMMAND":
      return MitreAttack_Technique.CONTAINER_ADMINISTRATION_COMMAND;
    case 61:
    case "ESCAPE_TO_HOST":
      return MitreAttack_Technique.ESCAPE_TO_HOST;
    case 57:
    case "CONTAINER_AND_RESOURCE_DISCOVERY":
      return MitreAttack_Technique.CONTAINER_AND_RESOURCE_DISCOVERY;
    case 62:
    case "STEAL_OR_FORGE_AUTHENTICATION_CERTIFICATES":
      return MitreAttack_Technique.STEAL_OR_FORGE_AUTHENTICATION_CERTIFICATES;
    case -1:
    case "UNRECOGNIZED":
    default:
      return MitreAttack_Technique.UNRECOGNIZED;
  }
}

export function mitreAttack_TechniqueToJSON(object: MitreAttack_Technique): string {
  switch (object) {
    case MitreAttack_Technique.TECHNIQUE_UNSPECIFIED:
      return "TECHNIQUE_UNSPECIFIED";
    case MitreAttack_Technique.MASQUERADING:
      return "MASQUERADING";
    case MitreAttack_Technique.MATCH_LEGITIMATE_NAME_OR_LOCATION:
      return "MATCH_LEGITIMATE_NAME_OR_LOCATION";
    case MitreAttack_Technique.BOOT_OR_LOGON_INITIALIZATION_SCRIPTS:
      return "BOOT_OR_LOGON_INITIALIZATION_SCRIPTS";
    case MitreAttack_Technique.STARTUP_ITEMS:
      return "STARTUP_ITEMS";
    case MitreAttack_Technique.NETWORK_SERVICE_DISCOVERY:
      return "NETWORK_SERVICE_DISCOVERY";
    case MitreAttack_Technique.PROCESS_DISCOVERY:
      return "PROCESS_DISCOVERY";
    case MitreAttack_Technique.COMMAND_AND_SCRIPTING_INTERPRETER:
      return "COMMAND_AND_SCRIPTING_INTERPRETER";
    case MitreAttack_Technique.UNIX_SHELL:
      return "UNIX_SHELL";
    case MitreAttack_Technique.PYTHON:
      return "PYTHON";
    case MitreAttack_Technique.EXPLOITATION_FOR_PRIVILEGE_ESCALATION:
      return "EXPLOITATION_FOR_PRIVILEGE_ESCALATION";
    case MitreAttack_Technique.PERMISSION_GROUPS_DISCOVERY:
      return "PERMISSION_GROUPS_DISCOVERY";
    case MitreAttack_Technique.CLOUD_GROUPS:
      return "CLOUD_GROUPS";
    case MitreAttack_Technique.INDICATOR_REMOVAL_FILE_DELETION:
      return "INDICATOR_REMOVAL_FILE_DELETION";
    case MitreAttack_Technique.APPLICATION_LAYER_PROTOCOL:
      return "APPLICATION_LAYER_PROTOCOL";
    case MitreAttack_Technique.DNS:
      return "DNS";
    case MitreAttack_Technique.SOFTWARE_DEPLOYMENT_TOOLS:
      return "SOFTWARE_DEPLOYMENT_TOOLS";
    case MitreAttack_Technique.VALID_ACCOUNTS:
      return "VALID_ACCOUNTS";
    case MitreAttack_Technique.DEFAULT_ACCOUNTS:
      return "DEFAULT_ACCOUNTS";
    case MitreAttack_Technique.LOCAL_ACCOUNTS:
      return "LOCAL_ACCOUNTS";
    case MitreAttack_Technique.CLOUD_ACCOUNTS:
      return "CLOUD_ACCOUNTS";
    case MitreAttack_Technique.PROXY:
      return "PROXY";
    case MitreAttack_Technique.EXTERNAL_PROXY:
      return "EXTERNAL_PROXY";
    case MitreAttack_Technique.MULTI_HOP_PROXY:
      return "MULTI_HOP_PROXY";
    case MitreAttack_Technique.ACCOUNT_MANIPULATION:
      return "ACCOUNT_MANIPULATION";
    case MitreAttack_Technique.ADDITIONAL_CLOUD_CREDENTIALS:
      return "ADDITIONAL_CLOUD_CREDENTIALS";
    case MitreAttack_Technique.SSH_AUTHORIZED_KEYS:
      return "SSH_AUTHORIZED_KEYS";
    case MitreAttack_Technique.ADDITIONAL_CONTAINER_CLUSTER_ROLES:
      return "ADDITIONAL_CONTAINER_CLUSTER_ROLES";
    case MitreAttack_Technique.INGRESS_TOOL_TRANSFER:
      return "INGRESS_TOOL_TRANSFER";
    case MitreAttack_Technique.NATIVE_API:
      return "NATIVE_API";
    case MitreAttack_Technique.BRUTE_FORCE:
      return "BRUTE_FORCE";
    case MitreAttack_Technique.SHARED_MODULES:
      return "SHARED_MODULES";
    case MitreAttack_Technique.ACCESS_TOKEN_MANIPULATION:
      return "ACCESS_TOKEN_MANIPULATION";
    case MitreAttack_Technique.TOKEN_IMPERSONATION_OR_THEFT:
      return "TOKEN_IMPERSONATION_OR_THEFT";
    case MitreAttack_Technique.EXPLOIT_PUBLIC_FACING_APPLICATION:
      return "EXPLOIT_PUBLIC_FACING_APPLICATION";
    case MitreAttack_Technique.DOMAIN_POLICY_MODIFICATION:
      return "DOMAIN_POLICY_MODIFICATION";
    case MitreAttack_Technique.DATA_DESTRUCTION:
      return "DATA_DESTRUCTION";
    case MitreAttack_Technique.SERVICE_STOP:
      return "SERVICE_STOP";
    case MitreAttack_Technique.INHIBIT_SYSTEM_RECOVERY:
      return "INHIBIT_SYSTEM_RECOVERY";
    case MitreAttack_Technique.RESOURCE_HIJACKING:
      return "RESOURCE_HIJACKING";
    case MitreAttack_Technique.NETWORK_DENIAL_OF_SERVICE:
      return "NETWORK_DENIAL_OF_SERVICE";
    case MitreAttack_Technique.CLOUD_SERVICE_DISCOVERY:
      return "CLOUD_SERVICE_DISCOVERY";
    case MitreAttack_Technique.STEAL_APPLICATION_ACCESS_TOKEN:
      return "STEAL_APPLICATION_ACCESS_TOKEN";
    case MitreAttack_Technique.ACCOUNT_ACCESS_REMOVAL:
      return "ACCOUNT_ACCESS_REMOVAL";
    case MitreAttack_Technique.STEAL_WEB_SESSION_COOKIE:
      return "STEAL_WEB_SESSION_COOKIE";
    case MitreAttack_Technique.CREATE_OR_MODIFY_SYSTEM_PROCESS:
      return "CREATE_OR_MODIFY_SYSTEM_PROCESS";
    case MitreAttack_Technique.ABUSE_ELEVATION_CONTROL_MECHANISM:
      return "ABUSE_ELEVATION_CONTROL_MECHANISM";
    case MitreAttack_Technique.UNSECURED_CREDENTIALS:
      return "UNSECURED_CREDENTIALS";
    case MitreAttack_Technique.MODIFY_AUTHENTICATION_PROCESS:
      return "MODIFY_AUTHENTICATION_PROCESS";
    case MitreAttack_Technique.IMPAIR_DEFENSES:
      return "IMPAIR_DEFENSES";
    case MitreAttack_Technique.DISABLE_OR_MODIFY_TOOLS:
      return "DISABLE_OR_MODIFY_TOOLS";
    case MitreAttack_Technique.EXFILTRATION_OVER_WEB_SERVICE:
      return "EXFILTRATION_OVER_WEB_SERVICE";
    case MitreAttack_Technique.EXFILTRATION_TO_CLOUD_STORAGE:
      return "EXFILTRATION_TO_CLOUD_STORAGE";
    case MitreAttack_Technique.DYNAMIC_RESOLUTION:
      return "DYNAMIC_RESOLUTION";
    case MitreAttack_Technique.LATERAL_TOOL_TRANSFER:
      return "LATERAL_TOOL_TRANSFER";
    case MitreAttack_Technique.MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE:
      return "MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE";
    case MitreAttack_Technique.CREATE_SNAPSHOT:
      return "CREATE_SNAPSHOT";
    case MitreAttack_Technique.CLOUD_INFRASTRUCTURE_DISCOVERY:
      return "CLOUD_INFRASTRUCTURE_DISCOVERY";
    case MitreAttack_Technique.OBTAIN_CAPABILITIES:
      return "OBTAIN_CAPABILITIES";
    case MitreAttack_Technique.ACTIVE_SCANNING:
      return "ACTIVE_SCANNING";
    case MitreAttack_Technique.SCANNING_IP_BLOCKS:
      return "SCANNING_IP_BLOCKS";
    case MitreAttack_Technique.CONTAINER_ADMINISTRATION_COMMAND:
      return "CONTAINER_ADMINISTRATION_COMMAND";
    case MitreAttack_Technique.ESCAPE_TO_HOST:
      return "ESCAPE_TO_HOST";
    case MitreAttack_Technique.CONTAINER_AND_RESOURCE_DISCOVERY:
      return "CONTAINER_AND_RESOURCE_DISCOVERY";
    case MitreAttack_Technique.STEAL_OR_FORGE_AUTHENTICATION_CERTIFICATES:
      return "STEAL_OR_FORGE_AUTHENTICATION_CERTIFICATES";
    case MitreAttack_Technique.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseMitreAttack(): MitreAttack {
  return { primaryTactic: 0, primaryTechniques: [], additionalTactics: [], additionalTechniques: [], version: "" };
}

export const MitreAttack: MessageFns<MitreAttack> = {
  encode(message: MitreAttack, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.primaryTactic !== 0) {
      writer.uint32(8).int32(message.primaryTactic);
    }
    writer.uint32(18).fork();
    for (const v of message.primaryTechniques) {
      writer.int32(v);
    }
    writer.join();
    writer.uint32(26).fork();
    for (const v of message.additionalTactics) {
      writer.int32(v);
    }
    writer.join();
    writer.uint32(34).fork();
    for (const v of message.additionalTechniques) {
      writer.int32(v);
    }
    writer.join();
    if (message.version !== "") {
      writer.uint32(42).string(message.version);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): MitreAttack {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMitreAttack();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.primaryTactic = reader.int32() as any;
          continue;
        case 2:
          if (tag === 16) {
            message.primaryTechniques.push(reader.int32() as any);

            continue;
          }

          if (tag === 18) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.primaryTechniques.push(reader.int32() as any);
            }

            continue;
          }

          break;
        case 3:
          if (tag === 24) {
            message.additionalTactics.push(reader.int32() as any);

            continue;
          }

          if (tag === 26) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.additionalTactics.push(reader.int32() as any);
            }

            continue;
          }

          break;
        case 4:
          if (tag === 32) {
            message.additionalTechniques.push(reader.int32() as any);

            continue;
          }

          if (tag === 34) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.additionalTechniques.push(reader.int32() as any);
            }

            continue;
          }

          break;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.version = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MitreAttack {
    return {
      primaryTactic: isSet(object.primaryTactic) ? mitreAttack_TacticFromJSON(object.primaryTactic) : 0,
      primaryTechniques: globalThis.Array.isArray(object?.primaryTechniques)
        ? object.primaryTechniques.map((e: any) => mitreAttack_TechniqueFromJSON(e))
        : [],
      additionalTactics: globalThis.Array.isArray(object?.additionalTactics)
        ? object.additionalTactics.map((e: any) => mitreAttack_TacticFromJSON(e))
        : [],
      additionalTechniques: globalThis.Array.isArray(object?.additionalTechniques)
        ? object.additionalTechniques.map((e: any) => mitreAttack_TechniqueFromJSON(e))
        : [],
      version: isSet(object.version) ? globalThis.String(object.version) : "",
    };
  },

  toJSON(message: MitreAttack): unknown {
    const obj: any = {};
    if (message.primaryTactic !== 0) {
      obj.primaryTactic = mitreAttack_TacticToJSON(message.primaryTactic);
    }
    if (message.primaryTechniques?.length) {
      obj.primaryTechniques = message.primaryTechniques.map((e) => mitreAttack_TechniqueToJSON(e));
    }
    if (message.additionalTactics?.length) {
      obj.additionalTactics = message.additionalTactics.map((e) => mitreAttack_TacticToJSON(e));
    }
    if (message.additionalTechniques?.length) {
      obj.additionalTechniques = message.additionalTechniques.map((e) => mitreAttack_TechniqueToJSON(e));
    }
    if (message.version !== "") {
      obj.version = message.version;
    }
    return obj;
  },

  create(base?: DeepPartial<MitreAttack>): MitreAttack {
    return MitreAttack.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<MitreAttack>): MitreAttack {
    const message = createBaseMitreAttack();
    message.primaryTactic = object.primaryTactic ?? 0;
    message.primaryTechniques = object.primaryTechniques?.map((e) => e) || [];
    message.additionalTactics = object.additionalTactics?.map((e) => e) || [];
    message.additionalTechniques = object.additionalTechniques?.map((e) => e) || [];
    message.version = object.version ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
