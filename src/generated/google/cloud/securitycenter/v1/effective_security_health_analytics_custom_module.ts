// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/securitycenter/v1/effective_security_health_analytics_custom_module.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { CustomConfig } from "./security_health_analytics_custom_config.js";

export const protobufPackage = "google.cloud.securitycenter.v1";

/**
 * An EffectiveSecurityHealthAnalyticsCustomModule is the representation of
 * a Security Health Analytics custom module at a specified level of the
 * resource hierarchy: organization, folder, or project. If a custom module is
 * inherited from a parent organization or folder, the value of the
 * `enablementState` property in EffectiveSecurityHealthAnalyticsCustomModule is
 * set to the value that is effective in the parent, instead of  `INHERITED`.
 * For example, if the module is enabled in a parent organization or folder, the
 * effective enablement_state for the module in all child folders or projects is
 * also `enabled`. EffectiveSecurityHealthAnalyticsCustomModule is read-only.
 */
export interface EffectiveSecurityHealthAnalyticsCustomModule {
  /**
   * Output only. The resource name of the custom module.
   * Its format is
   * "organizations/{organization}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}",
   * or
   * "folders/{folder}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}",
   * or
   * "projects/{project}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}"
   */
  name: string;
  /** Output only. The user-specified configuration for the module. */
  customConfig:
    | CustomConfig
    | undefined;
  /**
   * Output only. The effective state of enablement for the module at the given
   * level of the hierarchy.
   */
  enablementState: EffectiveSecurityHealthAnalyticsCustomModule_EnablementState;
  /**
   * Output only. The display name for the custom module. The name must be
   * between 1 and 128 characters, start with a lowercase letter, and contain
   * alphanumeric characters or underscores only.
   */
  displayName: string;
}

/** The enablement state of the module. */
export enum EffectiveSecurityHealthAnalyticsCustomModule_EnablementState {
  /** ENABLEMENT_STATE_UNSPECIFIED - Unspecified enablement state. */
  ENABLEMENT_STATE_UNSPECIFIED = 0,
  /** ENABLED - The module is enabled at the given level. */
  ENABLED = 1,
  /** DISABLED - The module is disabled at the given level. */
  DISABLED = 2,
  UNRECOGNIZED = -1,
}

export function effectiveSecurityHealthAnalyticsCustomModule_EnablementStateFromJSON(
  object: any,
): EffectiveSecurityHealthAnalyticsCustomModule_EnablementState {
  switch (object) {
    case 0:
    case "ENABLEMENT_STATE_UNSPECIFIED":
      return EffectiveSecurityHealthAnalyticsCustomModule_EnablementState.ENABLEMENT_STATE_UNSPECIFIED;
    case 1:
    case "ENABLED":
      return EffectiveSecurityHealthAnalyticsCustomModule_EnablementState.ENABLED;
    case 2:
    case "DISABLED":
      return EffectiveSecurityHealthAnalyticsCustomModule_EnablementState.DISABLED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return EffectiveSecurityHealthAnalyticsCustomModule_EnablementState.UNRECOGNIZED;
  }
}

export function effectiveSecurityHealthAnalyticsCustomModule_EnablementStateToJSON(
  object: EffectiveSecurityHealthAnalyticsCustomModule_EnablementState,
): string {
  switch (object) {
    case EffectiveSecurityHealthAnalyticsCustomModule_EnablementState.ENABLEMENT_STATE_UNSPECIFIED:
      return "ENABLEMENT_STATE_UNSPECIFIED";
    case EffectiveSecurityHealthAnalyticsCustomModule_EnablementState.ENABLED:
      return "ENABLED";
    case EffectiveSecurityHealthAnalyticsCustomModule_EnablementState.DISABLED:
      return "DISABLED";
    case EffectiveSecurityHealthAnalyticsCustomModule_EnablementState.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseEffectiveSecurityHealthAnalyticsCustomModule(): EffectiveSecurityHealthAnalyticsCustomModule {
  return { name: "", customConfig: undefined, enablementState: 0, displayName: "" };
}

export const EffectiveSecurityHealthAnalyticsCustomModule: MessageFns<EffectiveSecurityHealthAnalyticsCustomModule> = {
  encode(
    message: EffectiveSecurityHealthAnalyticsCustomModule,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    if (message.customConfig !== undefined) {
      CustomConfig.encode(message.customConfig, writer.uint32(18).fork()).join();
    }
    if (message.enablementState !== 0) {
      writer.uint32(24).int32(message.enablementState);
    }
    if (message.displayName !== "") {
      writer.uint32(34).string(message.displayName);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): EffectiveSecurityHealthAnalyticsCustomModule {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseEffectiveSecurityHealthAnalyticsCustomModule();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.customConfig = CustomConfig.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.enablementState = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.displayName = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): EffectiveSecurityHealthAnalyticsCustomModule {
    return {
      name: isSet(object.name) ? globalThis.String(object.name) : "",
      customConfig: isSet(object.customConfig) ? CustomConfig.fromJSON(object.customConfig) : undefined,
      enablementState: isSet(object.enablementState)
        ? effectiveSecurityHealthAnalyticsCustomModule_EnablementStateFromJSON(object.enablementState)
        : 0,
      displayName: isSet(object.displayName) ? globalThis.String(object.displayName) : "",
    };
  },

  toJSON(message: EffectiveSecurityHealthAnalyticsCustomModule): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    if (message.customConfig !== undefined) {
      obj.customConfig = CustomConfig.toJSON(message.customConfig);
    }
    if (message.enablementState !== 0) {
      obj.enablementState = effectiveSecurityHealthAnalyticsCustomModule_EnablementStateToJSON(message.enablementState);
    }
    if (message.displayName !== "") {
      obj.displayName = message.displayName;
    }
    return obj;
  },

  create(
    base?: DeepPartial<EffectiveSecurityHealthAnalyticsCustomModule>,
  ): EffectiveSecurityHealthAnalyticsCustomModule {
    return EffectiveSecurityHealthAnalyticsCustomModule.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<EffectiveSecurityHealthAnalyticsCustomModule>,
  ): EffectiveSecurityHealthAnalyticsCustomModule {
    const message = createBaseEffectiveSecurityHealthAnalyticsCustomModule();
    message.name = object.name ?? "";
    message.customConfig = (object.customConfig !== undefined && object.customConfig !== null)
      ? CustomConfig.fromPartial(object.customConfig)
      : undefined;
    message.enablementState = object.enablementState ?? 0;
    message.displayName = object.displayName ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
