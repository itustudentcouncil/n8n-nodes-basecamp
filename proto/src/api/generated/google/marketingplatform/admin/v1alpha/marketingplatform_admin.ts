// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/marketingplatform/admin/v1alpha/marketingplatform_admin.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { Empty } from "../../../protobuf/empty.js";
import { AnalyticsAccountLink, Organization } from "./resources.js";

export const protobufPackage = "google.marketingplatform.admin.v1alpha";

/** Various levels of service for Google Analytics. */
export enum AnalyticsServiceLevel {
  /** ANALYTICS_SERVICE_LEVEL_UNSPECIFIED - Service level unspecified. */
  ANALYTICS_SERVICE_LEVEL_UNSPECIFIED = 0,
  /** ANALYTICS_SERVICE_LEVEL_STANDARD - The standard version of Google Analytics. */
  ANALYTICS_SERVICE_LEVEL_STANDARD = 1,
  /** ANALYTICS_SERVICE_LEVEL_360 - The premium version of Google Analytics. */
  ANALYTICS_SERVICE_LEVEL_360 = 2,
  UNRECOGNIZED = -1,
}

export function analyticsServiceLevelFromJSON(object: any): AnalyticsServiceLevel {
  switch (object) {
    case 0:
    case "ANALYTICS_SERVICE_LEVEL_UNSPECIFIED":
      return AnalyticsServiceLevel.ANALYTICS_SERVICE_LEVEL_UNSPECIFIED;
    case 1:
    case "ANALYTICS_SERVICE_LEVEL_STANDARD":
      return AnalyticsServiceLevel.ANALYTICS_SERVICE_LEVEL_STANDARD;
    case 2:
    case "ANALYTICS_SERVICE_LEVEL_360":
      return AnalyticsServiceLevel.ANALYTICS_SERVICE_LEVEL_360;
    case -1:
    case "UNRECOGNIZED":
    default:
      return AnalyticsServiceLevel.UNRECOGNIZED;
  }
}

export function analyticsServiceLevelToJSON(object: AnalyticsServiceLevel): string {
  switch (object) {
    case AnalyticsServiceLevel.ANALYTICS_SERVICE_LEVEL_UNSPECIFIED:
      return "ANALYTICS_SERVICE_LEVEL_UNSPECIFIED";
    case AnalyticsServiceLevel.ANALYTICS_SERVICE_LEVEL_STANDARD:
      return "ANALYTICS_SERVICE_LEVEL_STANDARD";
    case AnalyticsServiceLevel.ANALYTICS_SERVICE_LEVEL_360:
      return "ANALYTICS_SERVICE_LEVEL_360";
    case AnalyticsServiceLevel.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** Request message for GetOrganization RPC. */
export interface GetOrganizationRequest {
  /**
   * Required. The name of the Organization to retrieve.
   * Format: organizations/{org_id}
   */
  name: string;
}

/** Request message for ListAnalyticsAccountLinks RPC. */
export interface ListAnalyticsAccountLinksRequest {
  /**
   * Required. The parent organization, which owns this collection of Analytics
   * account links. Format: organizations/{org_id}
   */
  parent: string;
  /**
   * Optional. The maximum number of Analytics account links to return in one
   * call. The service may return fewer than this value.
   *
   * If unspecified, at most 50 Analytics account links will be returned. The
   * maximum value is 1000; values above 1000 will be coerced to 1000.
   */
  pageSize: number;
  /**
   * Optional. A page token, received from a previous ListAnalyticsAccountLinks
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListAnalyticsAccountLinks` must match the call that provided the page
   * token.
   */
  pageToken: string;
}

/** Response message for ListAnalyticsAccountLinks RPC. */
export interface ListAnalyticsAccountLinksResponse {
  /** Analytics account links in this organization. */
  analyticsAccountLinks: AnalyticsAccountLink[];
  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   */
  nextPageToken: string;
}

/** Request message for CreateAnalyticsAccountLink RPC. */
export interface CreateAnalyticsAccountLinkRequest {
  /**
   * Required. The parent resource where this Analytics account link will be
   * created. Format: organizations/{org_id}
   */
  parent: string;
  /** Required. The Analytics account link to create. */
  analyticsAccountLink: AnalyticsAccountLink | undefined;
}

/** Request message for DeleteAnalyticsAccountLink RPC. */
export interface DeleteAnalyticsAccountLinkRequest {
  /**
   * Required. The name of the Analytics account link to delete.
   * Format:
   * organizations/{org_id}/analyticsAccountLinks/{analytics_account_link_id}
   */
  name: string;
}

/** Request message for SetPropertyServiceLevel RPC. */
export interface SetPropertyServiceLevelRequest {
  /**
   * Required. The parent AnalyticsAccountLink scope where this property is in.
   * Format:
   * organizations/{org_id}/analyticsAccountLinks/{analytics_account_link_id}
   */
  analyticsAccountLink: string;
  /**
   * Required. The Analytics property to change the ServiceLevel setting. This
   * field is the name of the Google Analytics Admin API property resource.
   *
   * Format: analyticsadmin.googleapis.com/properties/{property_id}
   */
  analyticsProperty: string;
  /** Required. The service level to set for this property. */
  serviceLevel: AnalyticsServiceLevel;
}

/** Response message for SetPropertyServiceLevel RPC. */
export interface SetPropertyServiceLevelResponse {
}

function createBaseGetOrganizationRequest(): GetOrganizationRequest {
  return { name: "" };
}

export const GetOrganizationRequest: MessageFns<GetOrganizationRequest> = {
  encode(message: GetOrganizationRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GetOrganizationRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetOrganizationRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetOrganizationRequest {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: GetOrganizationRequest): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<GetOrganizationRequest>): GetOrganizationRequest {
    return GetOrganizationRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GetOrganizationRequest>): GetOrganizationRequest {
    const message = createBaseGetOrganizationRequest();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseListAnalyticsAccountLinksRequest(): ListAnalyticsAccountLinksRequest {
  return { parent: "", pageSize: 0, pageToken: "" };
}

export const ListAnalyticsAccountLinksRequest: MessageFns<ListAnalyticsAccountLinksRequest> = {
  encode(message: ListAnalyticsAccountLinksRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    if (message.pageSize !== 0) {
      writer.uint32(16).int32(message.pageSize);
    }
    if (message.pageToken !== "") {
      writer.uint32(26).string(message.pageToken);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListAnalyticsAccountLinksRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListAnalyticsAccountLinksRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.pageSize = reader.int32();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.pageToken = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListAnalyticsAccountLinksRequest {
    return {
      parent: isSet(object.parent) ? globalThis.String(object.parent) : "",
      pageSize: isSet(object.pageSize) ? globalThis.Number(object.pageSize) : 0,
      pageToken: isSet(object.pageToken) ? globalThis.String(object.pageToken) : "",
    };
  },

  toJSON(message: ListAnalyticsAccountLinksRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    if (message.pageSize !== 0) {
      obj.pageSize = Math.round(message.pageSize);
    }
    if (message.pageToken !== "") {
      obj.pageToken = message.pageToken;
    }
    return obj;
  },

  create(base?: DeepPartial<ListAnalyticsAccountLinksRequest>): ListAnalyticsAccountLinksRequest {
    return ListAnalyticsAccountLinksRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListAnalyticsAccountLinksRequest>): ListAnalyticsAccountLinksRequest {
    const message = createBaseListAnalyticsAccountLinksRequest();
    message.parent = object.parent ?? "";
    message.pageSize = object.pageSize ?? 0;
    message.pageToken = object.pageToken ?? "";
    return message;
  },
};

function createBaseListAnalyticsAccountLinksResponse(): ListAnalyticsAccountLinksResponse {
  return { analyticsAccountLinks: [], nextPageToken: "" };
}

export const ListAnalyticsAccountLinksResponse: MessageFns<ListAnalyticsAccountLinksResponse> = {
  encode(message: ListAnalyticsAccountLinksResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.analyticsAccountLinks) {
      AnalyticsAccountLink.encode(v!, writer.uint32(10).fork()).join();
    }
    if (message.nextPageToken !== "") {
      writer.uint32(18).string(message.nextPageToken);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListAnalyticsAccountLinksResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListAnalyticsAccountLinksResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.analyticsAccountLinks.push(AnalyticsAccountLink.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.nextPageToken = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListAnalyticsAccountLinksResponse {
    return {
      analyticsAccountLinks: globalThis.Array.isArray(object?.analyticsAccountLinks)
        ? object.analyticsAccountLinks.map((e: any) => AnalyticsAccountLink.fromJSON(e))
        : [],
      nextPageToken: isSet(object.nextPageToken) ? globalThis.String(object.nextPageToken) : "",
    };
  },

  toJSON(message: ListAnalyticsAccountLinksResponse): unknown {
    const obj: any = {};
    if (message.analyticsAccountLinks?.length) {
      obj.analyticsAccountLinks = message.analyticsAccountLinks.map((e) => AnalyticsAccountLink.toJSON(e));
    }
    if (message.nextPageToken !== "") {
      obj.nextPageToken = message.nextPageToken;
    }
    return obj;
  },

  create(base?: DeepPartial<ListAnalyticsAccountLinksResponse>): ListAnalyticsAccountLinksResponse {
    return ListAnalyticsAccountLinksResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListAnalyticsAccountLinksResponse>): ListAnalyticsAccountLinksResponse {
    const message = createBaseListAnalyticsAccountLinksResponse();
    message.analyticsAccountLinks = object.analyticsAccountLinks?.map((e) => AnalyticsAccountLink.fromPartial(e)) || [];
    message.nextPageToken = object.nextPageToken ?? "";
    return message;
  },
};

function createBaseCreateAnalyticsAccountLinkRequest(): CreateAnalyticsAccountLinkRequest {
  return { parent: "", analyticsAccountLink: undefined };
}

export const CreateAnalyticsAccountLinkRequest: MessageFns<CreateAnalyticsAccountLinkRequest> = {
  encode(message: CreateAnalyticsAccountLinkRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    if (message.analyticsAccountLink !== undefined) {
      AnalyticsAccountLink.encode(message.analyticsAccountLink, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CreateAnalyticsAccountLinkRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCreateAnalyticsAccountLinkRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.analyticsAccountLink = AnalyticsAccountLink.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CreateAnalyticsAccountLinkRequest {
    return {
      parent: isSet(object.parent) ? globalThis.String(object.parent) : "",
      analyticsAccountLink: isSet(object.analyticsAccountLink)
        ? AnalyticsAccountLink.fromJSON(object.analyticsAccountLink)
        : undefined,
    };
  },

  toJSON(message: CreateAnalyticsAccountLinkRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    if (message.analyticsAccountLink !== undefined) {
      obj.analyticsAccountLink = AnalyticsAccountLink.toJSON(message.analyticsAccountLink);
    }
    return obj;
  },

  create(base?: DeepPartial<CreateAnalyticsAccountLinkRequest>): CreateAnalyticsAccountLinkRequest {
    return CreateAnalyticsAccountLinkRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CreateAnalyticsAccountLinkRequest>): CreateAnalyticsAccountLinkRequest {
    const message = createBaseCreateAnalyticsAccountLinkRequest();
    message.parent = object.parent ?? "";
    message.analyticsAccountLink = (object.analyticsAccountLink !== undefined && object.analyticsAccountLink !== null)
      ? AnalyticsAccountLink.fromPartial(object.analyticsAccountLink)
      : undefined;
    return message;
  },
};

function createBaseDeleteAnalyticsAccountLinkRequest(): DeleteAnalyticsAccountLinkRequest {
  return { name: "" };
}

export const DeleteAnalyticsAccountLinkRequest: MessageFns<DeleteAnalyticsAccountLinkRequest> = {
  encode(message: DeleteAnalyticsAccountLinkRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DeleteAnalyticsAccountLinkRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDeleteAnalyticsAccountLinkRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DeleteAnalyticsAccountLinkRequest {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: DeleteAnalyticsAccountLinkRequest): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<DeleteAnalyticsAccountLinkRequest>): DeleteAnalyticsAccountLinkRequest {
    return DeleteAnalyticsAccountLinkRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DeleteAnalyticsAccountLinkRequest>): DeleteAnalyticsAccountLinkRequest {
    const message = createBaseDeleteAnalyticsAccountLinkRequest();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseSetPropertyServiceLevelRequest(): SetPropertyServiceLevelRequest {
  return { analyticsAccountLink: "", analyticsProperty: "", serviceLevel: 0 };
}

export const SetPropertyServiceLevelRequest: MessageFns<SetPropertyServiceLevelRequest> = {
  encode(message: SetPropertyServiceLevelRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.analyticsAccountLink !== "") {
      writer.uint32(10).string(message.analyticsAccountLink);
    }
    if (message.analyticsProperty !== "") {
      writer.uint32(18).string(message.analyticsProperty);
    }
    if (message.serviceLevel !== 0) {
      writer.uint32(24).int32(message.serviceLevel);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SetPropertyServiceLevelRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSetPropertyServiceLevelRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.analyticsAccountLink = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.analyticsProperty = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.serviceLevel = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SetPropertyServiceLevelRequest {
    return {
      analyticsAccountLink: isSet(object.analyticsAccountLink) ? globalThis.String(object.analyticsAccountLink) : "",
      analyticsProperty: isSet(object.analyticsProperty) ? globalThis.String(object.analyticsProperty) : "",
      serviceLevel: isSet(object.serviceLevel) ? analyticsServiceLevelFromJSON(object.serviceLevel) : 0,
    };
  },

  toJSON(message: SetPropertyServiceLevelRequest): unknown {
    const obj: any = {};
    if (message.analyticsAccountLink !== "") {
      obj.analyticsAccountLink = message.analyticsAccountLink;
    }
    if (message.analyticsProperty !== "") {
      obj.analyticsProperty = message.analyticsProperty;
    }
    if (message.serviceLevel !== 0) {
      obj.serviceLevel = analyticsServiceLevelToJSON(message.serviceLevel);
    }
    return obj;
  },

  create(base?: DeepPartial<SetPropertyServiceLevelRequest>): SetPropertyServiceLevelRequest {
    return SetPropertyServiceLevelRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SetPropertyServiceLevelRequest>): SetPropertyServiceLevelRequest {
    const message = createBaseSetPropertyServiceLevelRequest();
    message.analyticsAccountLink = object.analyticsAccountLink ?? "";
    message.analyticsProperty = object.analyticsProperty ?? "";
    message.serviceLevel = object.serviceLevel ?? 0;
    return message;
  },
};

function createBaseSetPropertyServiceLevelResponse(): SetPropertyServiceLevelResponse {
  return {};
}

export const SetPropertyServiceLevelResponse: MessageFns<SetPropertyServiceLevelResponse> = {
  encode(_: SetPropertyServiceLevelResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SetPropertyServiceLevelResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSetPropertyServiceLevelResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): SetPropertyServiceLevelResponse {
    return {};
  },

  toJSON(_: SetPropertyServiceLevelResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<SetPropertyServiceLevelResponse>): SetPropertyServiceLevelResponse {
    return SetPropertyServiceLevelResponse.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<SetPropertyServiceLevelResponse>): SetPropertyServiceLevelResponse {
    const message = createBaseSetPropertyServiceLevelResponse();
    return message;
  },
};

/** Service Interface for the Google Marketing Platform Admin API. */
export type MarketingplatformAdminServiceDefinition = typeof MarketingplatformAdminServiceDefinition;
export const MarketingplatformAdminServiceDefinition = {
  name: "MarketingplatformAdminService",
  fullName: "google.marketingplatform.admin.v1alpha.MarketingplatformAdminService",
  methods: {
    /** Lookup for a single organization. */
    getOrganization: {
      name: "GetOrganization",
      requestType: GetOrganizationRequest,
      requestStream: false,
      responseType: Organization,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              33,
              18,
              31,
              47,
              118,
              49,
              97,
              108,
              112,
              104,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /**
     * Lists the Google Analytics accounts link to the specified Google Marketing
     * Platform organization.
     */
    listAnalyticsAccountLinks: {
      name: "ListAnalyticsAccountLinks",
      requestType: ListAnalyticsAccountLinksRequest,
      requestStream: false,
      responseType: ListAnalyticsAccountLinksResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              57,
              18,
              55,
              47,
              118,
              49,
              97,
              108,
              112,
              104,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              97,
              110,
              97,
              108,
              121,
              116,
              105,
              99,
              115,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              76,
              105,
              110,
              107,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Creates the link between the Analytics account and the Google Marketing
     * Platform organization.
     *
     * User needs to be an org user, and admin on the Analytics account to create
     * the link. If the account is already linked to an organization, user needs
     * to unlink the account from the current organization, then try link again.
     */
    createAnalyticsAccountLink: {
      name: "CreateAnalyticsAccountLink",
      requestType: CreateAnalyticsAccountLinkRequest,
      requestStream: false,
      responseType: AnalyticsAccountLink,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              29,
              112,
              97,
              114,
              101,
              110,
              116,
              44,
              97,
              110,
              97,
              108,
              121,
              116,
              105,
              99,
              115,
              95,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              108,
              105,
              110,
              107,
            ]),
          ],
          578365826: [
            Buffer.from([
              81,
              58,
              22,
              97,
              110,
              97,
              108,
              121,
              116,
              105,
              99,
              115,
              95,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              108,
              105,
              110,
              107,
              34,
              55,
              47,
              118,
              49,
              97,
              108,
              112,
              104,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              97,
              110,
              97,
              108,
              121,
              116,
              105,
              99,
              115,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              76,
              105,
              110,
              107,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Deletes the AnalyticsAccountLink, which detaches the Analytics account from
     * the Google Marketing Platform organization.
     *
     * User needs to be an org user, and admin on the Analytics account in order
     * to delete the link.
     */
    deleteAnalyticsAccountLink: {
      name: "DeleteAnalyticsAccountLink",
      requestType: DeleteAnalyticsAccountLinkRequest,
      requestStream: false,
      responseType: Empty,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              57,
              42,
              55,
              47,
              118,
              49,
              97,
              108,
              112,
              104,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              97,
              110,
              97,
              108,
              121,
              116,
              105,
              99,
              115,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              76,
              105,
              110,
              107,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Updates the service level for an Analytics property. */
    setPropertyServiceLevel: {
      name: "SetPropertyServiceLevel",
      requestType: SetPropertyServiceLevelRequest,
      requestStream: false,
      responseType: SetPropertyServiceLevelResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              22,
              97,
              110,
              97,
              108,
              121,
              116,
              105,
              99,
              115,
              95,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              108,
              105,
              110,
              107,
            ]),
          ],
          578365826: [
            Buffer.from([
              102,
              58,
              1,
              42,
              34,
              97,
              47,
              118,
              49,
              97,
              108,
              112,
              104,
              97,
              47,
              123,
              97,
              110,
              97,
              108,
              121,
              116,
              105,
              99,
              115,
              95,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              108,
              105,
              110,
              107,
              61,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              97,
              110,
              97,
              108,
              121,
              116,
              105,
              99,
              115,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              76,
              105,
              110,
              107,
              115,
              47,
              42,
              125,
              58,
              115,
              101,
              116,
              80,
              114,
              111,
              112,
              101,
              114,
              116,
              121,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              76,
              101,
              118,
              101,
              108,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface MarketingplatformAdminServiceImplementation<CallContextExt = {}> {
  /** Lookup for a single organization. */
  getOrganization(
    request: GetOrganizationRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Organization>>;
  /**
   * Lists the Google Analytics accounts link to the specified Google Marketing
   * Platform organization.
   */
  listAnalyticsAccountLinks(
    request: ListAnalyticsAccountLinksRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListAnalyticsAccountLinksResponse>>;
  /**
   * Creates the link between the Analytics account and the Google Marketing
   * Platform organization.
   *
   * User needs to be an org user, and admin on the Analytics account to create
   * the link. If the account is already linked to an organization, user needs
   * to unlink the account from the current organization, then try link again.
   */
  createAnalyticsAccountLink(
    request: CreateAnalyticsAccountLinkRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<AnalyticsAccountLink>>;
  /**
   * Deletes the AnalyticsAccountLink, which detaches the Analytics account from
   * the Google Marketing Platform organization.
   *
   * User needs to be an org user, and admin on the Analytics account in order
   * to delete the link.
   */
  deleteAnalyticsAccountLink(
    request: DeleteAnalyticsAccountLinkRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Empty>>;
  /** Updates the service level for an Analytics property. */
  setPropertyServiceLevel(
    request: SetPropertyServiceLevelRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<SetPropertyServiceLevelResponse>>;
}

export interface MarketingplatformAdminServiceClient<CallOptionsExt = {}> {
  /** Lookup for a single organization. */
  getOrganization(
    request: DeepPartial<GetOrganizationRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Organization>;
  /**
   * Lists the Google Analytics accounts link to the specified Google Marketing
   * Platform organization.
   */
  listAnalyticsAccountLinks(
    request: DeepPartial<ListAnalyticsAccountLinksRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListAnalyticsAccountLinksResponse>;
  /**
   * Creates the link between the Analytics account and the Google Marketing
   * Platform organization.
   *
   * User needs to be an org user, and admin on the Analytics account to create
   * the link. If the account is already linked to an organization, user needs
   * to unlink the account from the current organization, then try link again.
   */
  createAnalyticsAccountLink(
    request: DeepPartial<CreateAnalyticsAccountLinkRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<AnalyticsAccountLink>;
  /**
   * Deletes the AnalyticsAccountLink, which detaches the Analytics account from
   * the Google Marketing Platform organization.
   *
   * User needs to be an org user, and admin on the Analytics account in order
   * to delete the link.
   */
  deleteAnalyticsAccountLink(
    request: DeepPartial<DeleteAnalyticsAccountLinkRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Empty>;
  /** Updates the service level for an Analytics property. */
  setPropertyServiceLevel(
    request: DeepPartial<SetPropertyServiceLevelRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<SetPropertyServiceLevelResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
