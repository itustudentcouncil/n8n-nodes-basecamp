// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/shopping/merchant/promotions/v1beta/promotions_common.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { Timestamp } from "../../../../protobuf/timestamp.js";
import { Interval } from "../../../../type/interval.js";
import {
  Destination_DestinationEnum,
  destination_DestinationEnumFromJSON,
  destination_DestinationEnumToJSON,
  Price,
  ReportingContext_ReportingContextEnum,
  reportingContext_ReportingContextEnumFromJSON,
  reportingContext_ReportingContextEnumToJSON,
} from "../../../type/types.js";

export const protobufPackage = "google.shopping.merchant.promotions.v1beta";

/** Which product or list of products the promotion applies to. */
export enum ProductApplicability {
  /** PRODUCT_APPLICABILITY_UNSPECIFIED - Which products the promotion applies to is unknown. */
  PRODUCT_APPLICABILITY_UNSPECIFIED = 0,
  /** ALL_PRODUCTS - Applicable to all products. */
  ALL_PRODUCTS = 1,
  /** SPECIFIC_PRODUCTS - Applicable to only a single product or list of products. */
  SPECIFIC_PRODUCTS = 2,
  UNRECOGNIZED = -1,
}

export function productApplicabilityFromJSON(object: any): ProductApplicability {
  switch (object) {
    case 0:
    case "PRODUCT_APPLICABILITY_UNSPECIFIED":
      return ProductApplicability.PRODUCT_APPLICABILITY_UNSPECIFIED;
    case 1:
    case "ALL_PRODUCTS":
      return ProductApplicability.ALL_PRODUCTS;
    case 2:
    case "SPECIFIC_PRODUCTS":
      return ProductApplicability.SPECIFIC_PRODUCTS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ProductApplicability.UNRECOGNIZED;
  }
}

export function productApplicabilityToJSON(object: ProductApplicability): string {
  switch (object) {
    case ProductApplicability.PRODUCT_APPLICABILITY_UNSPECIFIED:
      return "PRODUCT_APPLICABILITY_UNSPECIFIED";
    case ProductApplicability.ALL_PRODUCTS:
      return "ALL_PRODUCTS";
    case ProductApplicability.SPECIFIC_PRODUCTS:
      return "SPECIFIC_PRODUCTS";
    case ProductApplicability.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/**
 * Store codes or list of store codes the promotion applies to. Only for
 * Local inventory ads promotions.
 */
export enum StoreApplicability {
  /** STORE_APPLICABILITY_UNSPECIFIED - Which store codes the promotion applies to is unknown. */
  STORE_APPLICABILITY_UNSPECIFIED = 0,
  /** ALL_STORES - Promotion applies to all stores. */
  ALL_STORES = 1,
  /** SPECIFIC_STORES - Promotion applies to only the specified stores. */
  SPECIFIC_STORES = 2,
  UNRECOGNIZED = -1,
}

export function storeApplicabilityFromJSON(object: any): StoreApplicability {
  switch (object) {
    case 0:
    case "STORE_APPLICABILITY_UNSPECIFIED":
      return StoreApplicability.STORE_APPLICABILITY_UNSPECIFIED;
    case 1:
    case "ALL_STORES":
      return StoreApplicability.ALL_STORES;
    case 2:
    case "SPECIFIC_STORES":
      return StoreApplicability.SPECIFIC_STORES;
    case -1:
    case "UNRECOGNIZED":
    default:
      return StoreApplicability.UNRECOGNIZED;
  }
}

export function storeApplicabilityToJSON(object: StoreApplicability): string {
  switch (object) {
    case StoreApplicability.STORE_APPLICABILITY_UNSPECIFIED:
      return "STORE_APPLICABILITY_UNSPECIFIED";
    case StoreApplicability.ALL_STORES:
      return "ALL_STORES";
    case StoreApplicability.SPECIFIC_STORES:
      return "SPECIFIC_STORES";
    case StoreApplicability.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** Offer type of a promotion. */
export enum OfferType {
  /** OFFER_TYPE_UNSPECIFIED - Unknown offer type. */
  OFFER_TYPE_UNSPECIFIED = 0,
  /** NO_CODE - Offer type without a code. */
  NO_CODE = 1,
  /**
   * GENERIC_CODE - Offer type with a code. Generic redemption code for the promotion is
   * required when `offerType` = `GENERIC_CODE`.
   */
  GENERIC_CODE = 2,
  UNRECOGNIZED = -1,
}

export function offerTypeFromJSON(object: any): OfferType {
  switch (object) {
    case 0:
    case "OFFER_TYPE_UNSPECIFIED":
      return OfferType.OFFER_TYPE_UNSPECIFIED;
    case 1:
    case "NO_CODE":
      return OfferType.NO_CODE;
    case 2:
    case "GENERIC_CODE":
      return OfferType.GENERIC_CODE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OfferType.UNRECOGNIZED;
  }
}

export function offerTypeToJSON(object: OfferType): string {
  switch (object) {
    case OfferType.OFFER_TYPE_UNSPECIFIED:
      return "OFFER_TYPE_UNSPECIFIED";
    case OfferType.NO_CODE:
      return "NO_CODE";
    case OfferType.GENERIC_CODE:
      return "GENERIC_CODE";
    case OfferType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** Channel of a promotion. */
export enum RedemptionChannel {
  /** REDEMPTION_CHANNEL_UNSPECIFIED - Indicates that the channel is unspecified. */
  REDEMPTION_CHANNEL_UNSPECIFIED = 0,
  /**
   * IN_STORE - Indicates that the channel is in store.
   * This is same as `local` channel used for `products`.
   */
  IN_STORE = 1,
  /** ONLINE - Indicates that the channel is online. */
  ONLINE = 2,
  UNRECOGNIZED = -1,
}

export function redemptionChannelFromJSON(object: any): RedemptionChannel {
  switch (object) {
    case 0:
    case "REDEMPTION_CHANNEL_UNSPECIFIED":
      return RedemptionChannel.REDEMPTION_CHANNEL_UNSPECIFIED;
    case 1:
    case "IN_STORE":
      return RedemptionChannel.IN_STORE;
    case 2:
    case "ONLINE":
      return RedemptionChannel.ONLINE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return RedemptionChannel.UNRECOGNIZED;
  }
}

export function redemptionChannelToJSON(object: RedemptionChannel): string {
  switch (object) {
    case RedemptionChannel.REDEMPTION_CHANNEL_UNSPECIFIED:
      return "REDEMPTION_CHANNEL_UNSPECIFIED";
    case RedemptionChannel.IN_STORE:
      return "IN_STORE";
    case RedemptionChannel.ONLINE:
      return "ONLINE";
    case RedemptionChannel.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/**
 * [Coupon value
 * type](https://support.google.com/merchants/answer/13861986?ref_topic=13773355&sjid=17642868584668136159-NC)
 * of a promotion.
 */
export enum CouponValueType {
  /** COUPON_VALUE_TYPE_UNSPECIFIED - Indicates that the coupon value type is unspecified. */
  COUPON_VALUE_TYPE_UNSPECIFIED = 0,
  /** MONEY_OFF - Money off coupon value type. */
  MONEY_OFF = 1,
  /** PERCENT_OFF - Percent off coupon value type. */
  PERCENT_OFF = 2,
  /**
   * BUY_M_GET_N_MONEY_OFF - Buy M quantity, get N money off coupon value type.
   * `minimum_purchase_quantity` and `get_this_quantity_discounted` must be
   * present. `money_off_amount` must also be present.
   */
  BUY_M_GET_N_MONEY_OFF = 3,
  /**
   * BUY_M_GET_N_PERCENT_OFF - Buy M quantity, get N percent off coupon value type.
   * `minimum_purchase_quantity` and `get_this_quantity_discounted` must be
   * present. `percent_off_percentage` must also be present.
   */
  BUY_M_GET_N_PERCENT_OFF = 4,
  /**
   * BUY_M_GET_MONEY_OFF - Buy M quantity, get money off. `minimum_purchase_quantity` and
   * `money_off_amount` must be present.
   */
  BUY_M_GET_MONEY_OFF = 5,
  /**
   * BUY_M_GET_PERCENT_OFF - Buy M quantity, get money off. `minimum_purchase_quantity` and
   * `percent_off_percentage` must be present.
   */
  BUY_M_GET_PERCENT_OFF = 6,
  /** FREE_GIFT - Free gift with description only. */
  FREE_GIFT = 7,
  /** FREE_GIFT_WITH_VALUE - Free gift with monetary value. */
  FREE_GIFT_WITH_VALUE = 8,
  /** FREE_GIFT_WITH_ITEM_ID - Free gift with item ID. */
  FREE_GIFT_WITH_ITEM_ID = 9,
  /** FREE_SHIPPING_STANDARD - Standard free shipping coupon value type. */
  FREE_SHIPPING_STANDARD = 10,
  /** FREE_SHIPPING_OVERNIGHT - Overnight free shipping coupon value type. */
  FREE_SHIPPING_OVERNIGHT = 11,
  /** FREE_SHIPPING_TWO_DAY - Two day free shipping coupon value type. */
  FREE_SHIPPING_TWO_DAY = 12,
  UNRECOGNIZED = -1,
}

export function couponValueTypeFromJSON(object: any): CouponValueType {
  switch (object) {
    case 0:
    case "COUPON_VALUE_TYPE_UNSPECIFIED":
      return CouponValueType.COUPON_VALUE_TYPE_UNSPECIFIED;
    case 1:
    case "MONEY_OFF":
      return CouponValueType.MONEY_OFF;
    case 2:
    case "PERCENT_OFF":
      return CouponValueType.PERCENT_OFF;
    case 3:
    case "BUY_M_GET_N_MONEY_OFF":
      return CouponValueType.BUY_M_GET_N_MONEY_OFF;
    case 4:
    case "BUY_M_GET_N_PERCENT_OFF":
      return CouponValueType.BUY_M_GET_N_PERCENT_OFF;
    case 5:
    case "BUY_M_GET_MONEY_OFF":
      return CouponValueType.BUY_M_GET_MONEY_OFF;
    case 6:
    case "BUY_M_GET_PERCENT_OFF":
      return CouponValueType.BUY_M_GET_PERCENT_OFF;
    case 7:
    case "FREE_GIFT":
      return CouponValueType.FREE_GIFT;
    case 8:
    case "FREE_GIFT_WITH_VALUE":
      return CouponValueType.FREE_GIFT_WITH_VALUE;
    case 9:
    case "FREE_GIFT_WITH_ITEM_ID":
      return CouponValueType.FREE_GIFT_WITH_ITEM_ID;
    case 10:
    case "FREE_SHIPPING_STANDARD":
      return CouponValueType.FREE_SHIPPING_STANDARD;
    case 11:
    case "FREE_SHIPPING_OVERNIGHT":
      return CouponValueType.FREE_SHIPPING_OVERNIGHT;
    case 12:
    case "FREE_SHIPPING_TWO_DAY":
      return CouponValueType.FREE_SHIPPING_TWO_DAY;
    case -1:
    case "UNRECOGNIZED":
    default:
      return CouponValueType.UNRECOGNIZED;
  }
}

export function couponValueTypeToJSON(object: CouponValueType): string {
  switch (object) {
    case CouponValueType.COUPON_VALUE_TYPE_UNSPECIFIED:
      return "COUPON_VALUE_TYPE_UNSPECIFIED";
    case CouponValueType.MONEY_OFF:
      return "MONEY_OFF";
    case CouponValueType.PERCENT_OFF:
      return "PERCENT_OFF";
    case CouponValueType.BUY_M_GET_N_MONEY_OFF:
      return "BUY_M_GET_N_MONEY_OFF";
    case CouponValueType.BUY_M_GET_N_PERCENT_OFF:
      return "BUY_M_GET_N_PERCENT_OFF";
    case CouponValueType.BUY_M_GET_MONEY_OFF:
      return "BUY_M_GET_MONEY_OFF";
    case CouponValueType.BUY_M_GET_PERCENT_OFF:
      return "BUY_M_GET_PERCENT_OFF";
    case CouponValueType.FREE_GIFT:
      return "FREE_GIFT";
    case CouponValueType.FREE_GIFT_WITH_VALUE:
      return "FREE_GIFT_WITH_VALUE";
    case CouponValueType.FREE_GIFT_WITH_ITEM_ID:
      return "FREE_GIFT_WITH_ITEM_ID";
    case CouponValueType.FREE_SHIPPING_STANDARD:
      return "FREE_SHIPPING_STANDARD";
    case CouponValueType.FREE_SHIPPING_OVERNIGHT:
      return "FREE_SHIPPING_OVERNIGHT";
    case CouponValueType.FREE_SHIPPING_TWO_DAY:
      return "FREE_SHIPPING_TWO_DAY";
    case CouponValueType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** Attributes. */
export interface Attributes {
  /**
   * Required. Applicability of the promotion to either all products or
   * [only specific
   * products](https://support.google.com/merchants/answer/6396257?ref_topic=6396150&sjid=17642868584668136159-NC).
   */
  productApplicability: ProductApplicability;
  /**
   * Required.
   * [Type](https://support.google.com/merchants/answer/13837405?ref_topic=13773355&sjid=17642868584668136159-NC)
   * of the promotion. Use this attribute to indicate whether or not customers
   * need a coupon code to redeem your promotion.
   */
  offerType: OfferType;
  /**
   * Optional. Generic redemption code for the promotion. To be used with the
   * `offerType` field and must meet the [minimum
   * requirements](https://support.google.com/merchants/answer/13837405?ref_topic=13773355&sjid=17642868584668136159-NC).
   */
  genericRedemptionCode: string;
  /**
   * Required. [Long
   * title](https://support.google.com/merchants/answer/13838102?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion.
   */
  longTitle: string;
  /**
   * Required. The [coupon value type]
   * (https://support.google.com/merchants/answer/13861986?ref_topic=13773355&sjid=17642868584668136159-NC)
   * attribute to signal the type of promotion that you are running. Depending
   * on type of the selected coupon value [some attributes are
   * required](https://support.google.com/merchants/answer/6393006?ref_topic=7322920).
   */
  couponValueType: CouponValueType;
  /**
   * Required. The list of destinations where the promotion applies to. If you
   * don't specify a destination by including a supported value in your data
   * source, your promotion will display in Shopping ads and free listings by
   * default.
   *
   * You may have previously submitted the following values as destinations for
   * your products: Shopping Actions, Surfaces across Google, Local surfaces
   * across Google.  To represent these values use `FREE_LISTINGS`,
   * `FREE_LOCAL_LISTINGS`, `LOCAL_INVENTORY_ADS`. For more details see
   * [Promotion
   * destination](https://support.google.com/merchants/answer/13837465?sjid=5155774230887277618-NC)
   */
  promotionDestinations: Destination_DestinationEnum[];
  /**
   * Optional. Product filter by [item
   * ID](https://support.google.com/merchants/answer/13861565?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion. The product filter attributes only applies when the
   * products eligible for promotion product applicability
   * `product_applicability` attribute is set to
   * [specific_products](https://support.google.com/merchants/answer/13837299?ref_topic=13773355&sjid=17642868584668136159-NC).
   */
  itemIdInclusion: string[];
  /**
   * Optional. Product filter by brand for the promotion. The product filter
   * attributes only applies when the products eligible for promotion product
   * applicability `product_applicability` attribute is set to
   * [specific_products](https://support.google.com/merchants/answer/13837299?ref_topic=13773355&sjid=17642868584668136159-NC).
   */
  brandInclusion: string[];
  /**
   * Optional. Product filter by item group ID for the promotion. The product
   * filter attributes only applies when the products eligible for promotion
   * product applicability [product_applicability] attribute is set to
   * [specific_products](https://support.google.com/merchants/answer/13837299?ref_topic=13773355&sjid=17642868584668136159-NC).
   */
  itemGroupIdInclusion: string[];
  /**
   * Optional. Product filter by product type for the promotion. The product
   * filter attributes only applies when the products eligible for promotion
   * product applicability `product_applicability` attribute is set to
   * [specific_products](https://support.google.com/merchants/answer/13837299?ref_topic=13773355&sjid=17642868584668136159-NC).
   */
  productTypeInclusion: string[];
  /**
   * Optional. Product filter by [item ID
   * exclusion](https://support.google.com/merchants/answer/13863524?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion. The product filter attributes only applies when the
   * products eligible for promotion product applicability
   * `product_applicability` attribute is set to
   * [specific_products](https://support.google.com/merchants/answer/13837299?ref_topic=13773355&sjid=17642868584668136159-NC).
   */
  itemIdExclusion: string[];
  /**
   * Optional. Product filter by [brand
   * exclusion](https://support.google.com/merchants/answer/13861679?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion. The product filter attributes only applies when the
   * products eligible for promotion product applicability
   * `product_applicability` attribute is set to
   * [specific_products](https://support.google.com/merchants/answer/13837299?ref_topic=13773355&sjid=17642868584668136159-NC).
   */
  brandExclusion: string[];
  /**
   * Optional. Product filter by [item group
   * ID](https://support.google.com/merchants/answer/13837298?ref_topic=13773355&sjid=17642868584668136159-NC).
   * The product filter attributes only applies when the products eligible for
   * promotion product applicability `product_applicability` attribute is set to
   * [specific_products](https://support.google.com/merchants/answer/13837299?ref_topic=13773355&sjid=17642868584668136159-NC).
   * exclusion for the promotion.
   */
  itemGroupIdExclusion: string[];
  /**
   * Optional. Product filter by [product type
   * exclusion](https://support.google.com/merchants/answer/13863746?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion. The product filter attributes only applies when the
   * products eligible for promotion product applicability
   * `product_applicability` attribute is set to
   * [specific_products](https://support.google.com/merchants/answer/13837299?ref_topic=13773355&sjid=17642868584668136159-NC).
   */
  productTypeExclusion: string[];
  /**
   * Optional. [Minimum purchase
   * amount](https://support.google.com/merchants/answer/13837705?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion.
   */
  minimumPurchaseAmount:
    | Price
    | undefined;
  /**
   * Optional. [Minimum purchase
   * quantity](https://support.google.com/merchants/answer/13838182?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion.
   */
  minimumPurchaseQuantity: Long;
  /**
   * Optional. [Maximum purchase
   * quantity](https://support.google.com/merchants/answer/13861564?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion.
   */
  limitQuantity: Long;
  /**
   * Optional. [Maximum product
   * price](https://support.google.com/merchants/answer/2906014) for
   * promotion.
   */
  limitValue:
    | Price
    | undefined;
  /**
   * Optional. The [percentage
   * discount](https://support.google.com/merchants/answer/13837404?sjid=17642868584668136159-NC)
   * offered in the promotion.
   */
  percentOff: Long;
  /**
   * Optional. The [money off
   * amount](https://support.google.com/merchants/answer/13838101?ref_topic=13773355&sjid=17642868584668136159-NC)
   * offered in the promotion.
   */
  moneyOffAmount:
    | Price
    | undefined;
  /**
   * Optional. The number of items discounted in the promotion. The attribute is
   * set when `couponValueType` is equal to `buy_m_get_n_money_off` or
   * `buy_m_get_n_percent_off`.
   */
  getThisQuantityDiscounted: Long;
  /**
   * Optional. [Free gift
   * value](https://support.google.com/merchants/answer/13844477?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion.
   */
  freeGiftValue:
    | Price
    | undefined;
  /**
   * Optional. [Free gift
   * description](https://support.google.com/merchants/answer/13847245?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion.
   */
  freeGiftDescription: string;
  /**
   * Optional. [Free gift item
   * ID](https://support.google.com/merchants/answer/13857152?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion.
   */
  freeGiftItemId: string;
  /**
   * Required. `TimePeriod` representation of the promotion's effective dates.
   * This attribute specifies that the promotion can be tested on your online
   * store during this time period.
   */
  promotionEffectiveTimePeriod:
    | Interval
    | undefined;
  /**
   * Optional. `TimePeriod` representation of the promotion's display dates.
   * This attribute specifies the date and time frame when the promotion will be
   * live on Google.com and Shopping ads. If the display time period for
   * promotion `promotion_display_time_period` attribute is not specified, the
   * promotion effective time period `promotion_effective_time_period`
   * determines the date and time frame when the promotion will be live on
   * Google.com and Shopping ads.
   */
  promotionDisplayTimePeriod:
    | Interval
    | undefined;
  /**
   * Optional. Whether the promotion applies to [all stores, or only specified
   * stores](https://support.google.com/merchants/answer/13857563?sjid=17642868584668136159-NC).
   * Local Inventory ads promotions throw an error if no store applicability is
   * included. An `INVALID_ARGUMENT` error is thrown if `store_applicability` is
   * set to `ALL_STORES` and `store_codes_inclusion` or `score_code_exclusion`
   * is set to a value.
   */
  storeApplicability: StoreApplicability;
  /**
   * Optional. [Store codes to
   * include](https://support.google.com/merchants/answer/13857470?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion. The store filter attributes only applies when the
   * `store_applicability` attribute is set to
   * [specific_stores](https://support.google.com/merchants/answer/13857563?ref_topic=13773355&sjid=17642868584668136159-NC).
   *
   * Store code (the store ID from
   * your Business Profile) of the physical store the product is sold in. See
   * the [Local product inventory data
   * specification](https://support.google.com/merchants/answer/3061342) for
   * more information.
   */
  storeCodesInclusion: string[];
  /**
   * Optional. [Store codes to
   * exclude](https://support.google.com/merchants/answer/13859586?ref_topic=13773355&sjid=17642868584668136159-NC)
   * for the promotion. The store filter attributes only applies when the
   * `store_applicability` attribute is set to
   * [specific_stores](https://support.google.com/merchants/answer/13857563?ref_topic=13773355&sjid=17642868584668136159-NC).
   */
  storeCodesExclusion: string[];
  /**
   * Optional. URL to the page on the merchant's site where the promotion shows.
   * Local Inventory ads promotions throw an error if no `promotion_url` is
   * included. URL is used to confirm that the promotion is valid and can be
   * redeemed.
   */
  promotionUrl: string;
}

/** The status of the promotion. */
export interface PromotionStatus {
  /** Output only. The intended destinations for the promotion. */
  destinationStatuses: PromotionStatus_DestinationStatus[];
  /** Output only. A list of issues associated with the promotion. */
  itemLevelIssues: PromotionStatus_ItemLevelIssue[];
  /**
   * Output only. Date on which the promotion has been created
   * in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time,
   * and offset, for example `2020-01-02T09:00:00+01:00` or
   * `2020-01-02T09:00:00Z`
   */
  creationDate:
    | Date
    | undefined;
  /**
   * Output only. Date on which the promotion status has been last updated
   * in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time,
   * and offset, for example `2020-01-02T09:00:00+01:00` or
   * `2020-01-02T09:00:00Z`
   */
  lastUpdateDate: Date | undefined;
}

/** The status for the specified destination. */
export interface PromotionStatus_DestinationStatus {
  /** Output only. The name of the promotion destination. */
  reportingContext: ReportingContext_ReportingContextEnum;
  /** Output only. The status for the specified destination. */
  status: PromotionStatus_DestinationStatus_State;
}

/** The current state of the promotion. */
export enum PromotionStatus_DestinationStatus_State {
  /** STATE_UNSPECIFIED - Unknown promotion state. */
  STATE_UNSPECIFIED = 0,
  /** IN_REVIEW - The promotion is under review. */
  IN_REVIEW = 1,
  /** REJECTED - The promotion is disapproved. */
  REJECTED = 2,
  /** LIVE - The promotion is approved and active. */
  LIVE = 3,
  /** STOPPED - The promotion is stopped by merchant. */
  STOPPED = 4,
  /** EXPIRED - The promotion is no longer active. */
  EXPIRED = 5,
  /**
   * PENDING - The promotion is not stopped, and all reviews are approved, but the
   * active date is in the future.
   */
  PENDING = 6,
  UNRECOGNIZED = -1,
}

export function promotionStatus_DestinationStatus_StateFromJSON(object: any): PromotionStatus_DestinationStatus_State {
  switch (object) {
    case 0:
    case "STATE_UNSPECIFIED":
      return PromotionStatus_DestinationStatus_State.STATE_UNSPECIFIED;
    case 1:
    case "IN_REVIEW":
      return PromotionStatus_DestinationStatus_State.IN_REVIEW;
    case 2:
    case "REJECTED":
      return PromotionStatus_DestinationStatus_State.REJECTED;
    case 3:
    case "LIVE":
      return PromotionStatus_DestinationStatus_State.LIVE;
    case 4:
    case "STOPPED":
      return PromotionStatus_DestinationStatus_State.STOPPED;
    case 5:
    case "EXPIRED":
      return PromotionStatus_DestinationStatus_State.EXPIRED;
    case 6:
    case "PENDING":
      return PromotionStatus_DestinationStatus_State.PENDING;
    case -1:
    case "UNRECOGNIZED":
    default:
      return PromotionStatus_DestinationStatus_State.UNRECOGNIZED;
  }
}

export function promotionStatus_DestinationStatus_StateToJSON(object: PromotionStatus_DestinationStatus_State): string {
  switch (object) {
    case PromotionStatus_DestinationStatus_State.STATE_UNSPECIFIED:
      return "STATE_UNSPECIFIED";
    case PromotionStatus_DestinationStatus_State.IN_REVIEW:
      return "IN_REVIEW";
    case PromotionStatus_DestinationStatus_State.REJECTED:
      return "REJECTED";
    case PromotionStatus_DestinationStatus_State.LIVE:
      return "LIVE";
    case PromotionStatus_DestinationStatus_State.STOPPED:
      return "STOPPED";
    case PromotionStatus_DestinationStatus_State.EXPIRED:
      return "EXPIRED";
    case PromotionStatus_DestinationStatus_State.PENDING:
      return "PENDING";
    case PromotionStatus_DestinationStatus_State.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** The issue associated with the promotion. */
export interface PromotionStatus_ItemLevelIssue {
  /** Output only. The error code of the issue. */
  code: string;
  /** Output only. How this issue affects serving of the promotion. */
  severity: PromotionStatus_ItemLevelIssue_Severity;
  /** Output only. Whether the issue can be resolved by the merchant. */
  resolution: string;
  /**
   * Output only. The attribute's name, if the issue is caused by a single
   * attribute.
   */
  attribute: string;
  /** Output only. The destination the issue applies to. */
  reportingContext: ReportingContext_ReportingContextEnum;
  /** Output only. A short issue description in English. */
  description: string;
  /** Output only. A detailed issue description in English. */
  detail: string;
  /** Output only. The URL of a web page to help with resolving this issue. */
  documentation: string;
  /**
   * Output only. List of country codes (ISO 3166-1 alpha-2) where issue
   * applies to the offer.
   */
  applicableCountries: string[];
}

/** The severity of the issue. */
export enum PromotionStatus_ItemLevelIssue_Severity {
  /** SEVERITY_UNSPECIFIED - Not specified. */
  SEVERITY_UNSPECIFIED = 0,
  /**
   * NOT_IMPACTED - This issue represents a warning and does not have a direct affect
   * on the promotion.
   */
  NOT_IMPACTED = 1,
  /**
   * DEMOTED - The promotion is demoted and most likely have limited performance
   * in search results
   */
  DEMOTED = 2,
  /** DISAPPROVED - Issue disapproves the promotion. */
  DISAPPROVED = 3,
  UNRECOGNIZED = -1,
}

export function promotionStatus_ItemLevelIssue_SeverityFromJSON(object: any): PromotionStatus_ItemLevelIssue_Severity {
  switch (object) {
    case 0:
    case "SEVERITY_UNSPECIFIED":
      return PromotionStatus_ItemLevelIssue_Severity.SEVERITY_UNSPECIFIED;
    case 1:
    case "NOT_IMPACTED":
      return PromotionStatus_ItemLevelIssue_Severity.NOT_IMPACTED;
    case 2:
    case "DEMOTED":
      return PromotionStatus_ItemLevelIssue_Severity.DEMOTED;
    case 3:
    case "DISAPPROVED":
      return PromotionStatus_ItemLevelIssue_Severity.DISAPPROVED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return PromotionStatus_ItemLevelIssue_Severity.UNRECOGNIZED;
  }
}

export function promotionStatus_ItemLevelIssue_SeverityToJSON(object: PromotionStatus_ItemLevelIssue_Severity): string {
  switch (object) {
    case PromotionStatus_ItemLevelIssue_Severity.SEVERITY_UNSPECIFIED:
      return "SEVERITY_UNSPECIFIED";
    case PromotionStatus_ItemLevelIssue_Severity.NOT_IMPACTED:
      return "NOT_IMPACTED";
    case PromotionStatus_ItemLevelIssue_Severity.DEMOTED:
      return "DEMOTED";
    case PromotionStatus_ItemLevelIssue_Severity.DISAPPROVED:
      return "DISAPPROVED";
    case PromotionStatus_ItemLevelIssue_Severity.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseAttributes(): Attributes {
  return {
    productApplicability: 0,
    offerType: 0,
    genericRedemptionCode: "",
    longTitle: "",
    couponValueType: 0,
    promotionDestinations: [],
    itemIdInclusion: [],
    brandInclusion: [],
    itemGroupIdInclusion: [],
    productTypeInclusion: [],
    itemIdExclusion: [],
    brandExclusion: [],
    itemGroupIdExclusion: [],
    productTypeExclusion: [],
    minimumPurchaseAmount: undefined,
    minimumPurchaseQuantity: Long.ZERO,
    limitQuantity: Long.ZERO,
    limitValue: undefined,
    percentOff: Long.ZERO,
    moneyOffAmount: undefined,
    getThisQuantityDiscounted: Long.ZERO,
    freeGiftValue: undefined,
    freeGiftDescription: "",
    freeGiftItemId: "",
    promotionEffectiveTimePeriod: undefined,
    promotionDisplayTimePeriod: undefined,
    storeApplicability: 0,
    storeCodesInclusion: [],
    storeCodesExclusion: [],
    promotionUrl: "",
  };
}

export const Attributes: MessageFns<Attributes> = {
  encode(message: Attributes, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.productApplicability !== 0) {
      writer.uint32(8).int32(message.productApplicability);
    }
    if (message.offerType !== 0) {
      writer.uint32(16).int32(message.offerType);
    }
    if (message.genericRedemptionCode !== "") {
      writer.uint32(26).string(message.genericRedemptionCode);
    }
    if (message.longTitle !== "") {
      writer.uint32(34).string(message.longTitle);
    }
    if (message.couponValueType !== 0) {
      writer.uint32(40).int32(message.couponValueType);
    }
    writer.uint32(50).fork();
    for (const v of message.promotionDestinations) {
      writer.int32(v);
    }
    writer.join();
    for (const v of message.itemIdInclusion) {
      writer.uint32(58).string(v!);
    }
    for (const v of message.brandInclusion) {
      writer.uint32(66).string(v!);
    }
    for (const v of message.itemGroupIdInclusion) {
      writer.uint32(74).string(v!);
    }
    for (const v of message.productTypeInclusion) {
      writer.uint32(82).string(v!);
    }
    for (const v of message.itemIdExclusion) {
      writer.uint32(90).string(v!);
    }
    for (const v of message.brandExclusion) {
      writer.uint32(98).string(v!);
    }
    for (const v of message.itemGroupIdExclusion) {
      writer.uint32(106).string(v!);
    }
    for (const v of message.productTypeExclusion) {
      writer.uint32(114).string(v!);
    }
    if (message.minimumPurchaseAmount !== undefined) {
      Price.encode(message.minimumPurchaseAmount, writer.uint32(122).fork()).join();
    }
    if (!message.minimumPurchaseQuantity.equals(Long.ZERO)) {
      writer.uint32(128).int64(message.minimumPurchaseQuantity.toString());
    }
    if (!message.limitQuantity.equals(Long.ZERO)) {
      writer.uint32(136).int64(message.limitQuantity.toString());
    }
    if (message.limitValue !== undefined) {
      Price.encode(message.limitValue, writer.uint32(146).fork()).join();
    }
    if (!message.percentOff.equals(Long.ZERO)) {
      writer.uint32(152).int64(message.percentOff.toString());
    }
    if (message.moneyOffAmount !== undefined) {
      Price.encode(message.moneyOffAmount, writer.uint32(162).fork()).join();
    }
    if (!message.getThisQuantityDiscounted.equals(Long.ZERO)) {
      writer.uint32(168).int64(message.getThisQuantityDiscounted.toString());
    }
    if (message.freeGiftValue !== undefined) {
      Price.encode(message.freeGiftValue, writer.uint32(178).fork()).join();
    }
    if (message.freeGiftDescription !== "") {
      writer.uint32(186).string(message.freeGiftDescription);
    }
    if (message.freeGiftItemId !== "") {
      writer.uint32(194).string(message.freeGiftItemId);
    }
    if (message.promotionEffectiveTimePeriod !== undefined) {
      Interval.encode(message.promotionEffectiveTimePeriod, writer.uint32(202).fork()).join();
    }
    if (message.promotionDisplayTimePeriod !== undefined) {
      Interval.encode(message.promotionDisplayTimePeriod, writer.uint32(210).fork()).join();
    }
    if (message.storeApplicability !== 0) {
      writer.uint32(224).int32(message.storeApplicability);
    }
    for (const v of message.storeCodesInclusion) {
      writer.uint32(234).string(v!);
    }
    for (const v of message.storeCodesExclusion) {
      writer.uint32(242).string(v!);
    }
    if (message.promotionUrl !== "") {
      writer.uint32(250).string(message.promotionUrl);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Attributes {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAttributes();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.productApplicability = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.offerType = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.genericRedemptionCode = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.longTitle = reader.string();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.couponValueType = reader.int32() as any;
          continue;
        case 6:
          if (tag === 48) {
            message.promotionDestinations.push(reader.int32() as any);

            continue;
          }

          if (tag === 50) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.promotionDestinations.push(reader.int32() as any);
            }

            continue;
          }

          break;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.itemIdInclusion.push(reader.string());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.brandInclusion.push(reader.string());
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.itemGroupIdInclusion.push(reader.string());
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.productTypeInclusion.push(reader.string());
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.itemIdExclusion.push(reader.string());
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.brandExclusion.push(reader.string());
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.itemGroupIdExclusion.push(reader.string());
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.productTypeExclusion.push(reader.string());
          continue;
        case 15:
          if (tag !== 122) {
            break;
          }

          message.minimumPurchaseAmount = Price.decode(reader, reader.uint32());
          continue;
        case 16:
          if (tag !== 128) {
            break;
          }

          message.minimumPurchaseQuantity = Long.fromString(reader.int64().toString());
          continue;
        case 17:
          if (tag !== 136) {
            break;
          }

          message.limitQuantity = Long.fromString(reader.int64().toString());
          continue;
        case 18:
          if (tag !== 146) {
            break;
          }

          message.limitValue = Price.decode(reader, reader.uint32());
          continue;
        case 19:
          if (tag !== 152) {
            break;
          }

          message.percentOff = Long.fromString(reader.int64().toString());
          continue;
        case 20:
          if (tag !== 162) {
            break;
          }

          message.moneyOffAmount = Price.decode(reader, reader.uint32());
          continue;
        case 21:
          if (tag !== 168) {
            break;
          }

          message.getThisQuantityDiscounted = Long.fromString(reader.int64().toString());
          continue;
        case 22:
          if (tag !== 178) {
            break;
          }

          message.freeGiftValue = Price.decode(reader, reader.uint32());
          continue;
        case 23:
          if (tag !== 186) {
            break;
          }

          message.freeGiftDescription = reader.string();
          continue;
        case 24:
          if (tag !== 194) {
            break;
          }

          message.freeGiftItemId = reader.string();
          continue;
        case 25:
          if (tag !== 202) {
            break;
          }

          message.promotionEffectiveTimePeriod = Interval.decode(reader, reader.uint32());
          continue;
        case 26:
          if (tag !== 210) {
            break;
          }

          message.promotionDisplayTimePeriod = Interval.decode(reader, reader.uint32());
          continue;
        case 28:
          if (tag !== 224) {
            break;
          }

          message.storeApplicability = reader.int32() as any;
          continue;
        case 29:
          if (tag !== 234) {
            break;
          }

          message.storeCodesInclusion.push(reader.string());
          continue;
        case 30:
          if (tag !== 242) {
            break;
          }

          message.storeCodesExclusion.push(reader.string());
          continue;
        case 31:
          if (tag !== 250) {
            break;
          }

          message.promotionUrl = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Attributes {
    return {
      productApplicability: isSet(object.productApplicability)
        ? productApplicabilityFromJSON(object.productApplicability)
        : 0,
      offerType: isSet(object.offerType) ? offerTypeFromJSON(object.offerType) : 0,
      genericRedemptionCode: isSet(object.genericRedemptionCode) ? globalThis.String(object.genericRedemptionCode) : "",
      longTitle: isSet(object.longTitle) ? globalThis.String(object.longTitle) : "",
      couponValueType: isSet(object.couponValueType) ? couponValueTypeFromJSON(object.couponValueType) : 0,
      promotionDestinations: globalThis.Array.isArray(object?.promotionDestinations)
        ? object.promotionDestinations.map((e: any) => destination_DestinationEnumFromJSON(e))
        : [],
      itemIdInclusion: globalThis.Array.isArray(object?.itemIdInclusion)
        ? object.itemIdInclusion.map((e: any) => globalThis.String(e))
        : [],
      brandInclusion: globalThis.Array.isArray(object?.brandInclusion)
        ? object.brandInclusion.map((e: any) => globalThis.String(e))
        : [],
      itemGroupIdInclusion: globalThis.Array.isArray(object?.itemGroupIdInclusion)
        ? object.itemGroupIdInclusion.map((e: any) => globalThis.String(e))
        : [],
      productTypeInclusion: globalThis.Array.isArray(object?.productTypeInclusion)
        ? object.productTypeInclusion.map((e: any) => globalThis.String(e))
        : [],
      itemIdExclusion: globalThis.Array.isArray(object?.itemIdExclusion)
        ? object.itemIdExclusion.map((e: any) => globalThis.String(e))
        : [],
      brandExclusion: globalThis.Array.isArray(object?.brandExclusion)
        ? object.brandExclusion.map((e: any) => globalThis.String(e))
        : [],
      itemGroupIdExclusion: globalThis.Array.isArray(object?.itemGroupIdExclusion)
        ? object.itemGroupIdExclusion.map((e: any) => globalThis.String(e))
        : [],
      productTypeExclusion: globalThis.Array.isArray(object?.productTypeExclusion)
        ? object.productTypeExclusion.map((e: any) => globalThis.String(e))
        : [],
      minimumPurchaseAmount: isSet(object.minimumPurchaseAmount)
        ? Price.fromJSON(object.minimumPurchaseAmount)
        : undefined,
      minimumPurchaseQuantity: isSet(object.minimumPurchaseQuantity)
        ? Long.fromValue(object.minimumPurchaseQuantity)
        : Long.ZERO,
      limitQuantity: isSet(object.limitQuantity) ? Long.fromValue(object.limitQuantity) : Long.ZERO,
      limitValue: isSet(object.limitValue) ? Price.fromJSON(object.limitValue) : undefined,
      percentOff: isSet(object.percentOff) ? Long.fromValue(object.percentOff) : Long.ZERO,
      moneyOffAmount: isSet(object.moneyOffAmount) ? Price.fromJSON(object.moneyOffAmount) : undefined,
      getThisQuantityDiscounted: isSet(object.getThisQuantityDiscounted)
        ? Long.fromValue(object.getThisQuantityDiscounted)
        : Long.ZERO,
      freeGiftValue: isSet(object.freeGiftValue) ? Price.fromJSON(object.freeGiftValue) : undefined,
      freeGiftDescription: isSet(object.freeGiftDescription) ? globalThis.String(object.freeGiftDescription) : "",
      freeGiftItemId: isSet(object.freeGiftItemId) ? globalThis.String(object.freeGiftItemId) : "",
      promotionEffectiveTimePeriod: isSet(object.promotionEffectiveTimePeriod)
        ? Interval.fromJSON(object.promotionEffectiveTimePeriod)
        : undefined,
      promotionDisplayTimePeriod: isSet(object.promotionDisplayTimePeriod)
        ? Interval.fromJSON(object.promotionDisplayTimePeriod)
        : undefined,
      storeApplicability: isSet(object.storeApplicability) ? storeApplicabilityFromJSON(object.storeApplicability) : 0,
      storeCodesInclusion: globalThis.Array.isArray(object?.storeCodesInclusion)
        ? object.storeCodesInclusion.map((e: any) => globalThis.String(e))
        : [],
      storeCodesExclusion: globalThis.Array.isArray(object?.storeCodesExclusion)
        ? object.storeCodesExclusion.map((e: any) => globalThis.String(e))
        : [],
      promotionUrl: isSet(object.promotionUrl) ? globalThis.String(object.promotionUrl) : "",
    };
  },

  toJSON(message: Attributes): unknown {
    const obj: any = {};
    if (message.productApplicability !== 0) {
      obj.productApplicability = productApplicabilityToJSON(message.productApplicability);
    }
    if (message.offerType !== 0) {
      obj.offerType = offerTypeToJSON(message.offerType);
    }
    if (message.genericRedemptionCode !== "") {
      obj.genericRedemptionCode = message.genericRedemptionCode;
    }
    if (message.longTitle !== "") {
      obj.longTitle = message.longTitle;
    }
    if (message.couponValueType !== 0) {
      obj.couponValueType = couponValueTypeToJSON(message.couponValueType);
    }
    if (message.promotionDestinations?.length) {
      obj.promotionDestinations = message.promotionDestinations.map((e) => destination_DestinationEnumToJSON(e));
    }
    if (message.itemIdInclusion?.length) {
      obj.itemIdInclusion = message.itemIdInclusion;
    }
    if (message.brandInclusion?.length) {
      obj.brandInclusion = message.brandInclusion;
    }
    if (message.itemGroupIdInclusion?.length) {
      obj.itemGroupIdInclusion = message.itemGroupIdInclusion;
    }
    if (message.productTypeInclusion?.length) {
      obj.productTypeInclusion = message.productTypeInclusion;
    }
    if (message.itemIdExclusion?.length) {
      obj.itemIdExclusion = message.itemIdExclusion;
    }
    if (message.brandExclusion?.length) {
      obj.brandExclusion = message.brandExclusion;
    }
    if (message.itemGroupIdExclusion?.length) {
      obj.itemGroupIdExclusion = message.itemGroupIdExclusion;
    }
    if (message.productTypeExclusion?.length) {
      obj.productTypeExclusion = message.productTypeExclusion;
    }
    if (message.minimumPurchaseAmount !== undefined) {
      obj.minimumPurchaseAmount = Price.toJSON(message.minimumPurchaseAmount);
    }
    if (!message.minimumPurchaseQuantity.equals(Long.ZERO)) {
      obj.minimumPurchaseQuantity = (message.minimumPurchaseQuantity || Long.ZERO).toString();
    }
    if (!message.limitQuantity.equals(Long.ZERO)) {
      obj.limitQuantity = (message.limitQuantity || Long.ZERO).toString();
    }
    if (message.limitValue !== undefined) {
      obj.limitValue = Price.toJSON(message.limitValue);
    }
    if (!message.percentOff.equals(Long.ZERO)) {
      obj.percentOff = (message.percentOff || Long.ZERO).toString();
    }
    if (message.moneyOffAmount !== undefined) {
      obj.moneyOffAmount = Price.toJSON(message.moneyOffAmount);
    }
    if (!message.getThisQuantityDiscounted.equals(Long.ZERO)) {
      obj.getThisQuantityDiscounted = (message.getThisQuantityDiscounted || Long.ZERO).toString();
    }
    if (message.freeGiftValue !== undefined) {
      obj.freeGiftValue = Price.toJSON(message.freeGiftValue);
    }
    if (message.freeGiftDescription !== "") {
      obj.freeGiftDescription = message.freeGiftDescription;
    }
    if (message.freeGiftItemId !== "") {
      obj.freeGiftItemId = message.freeGiftItemId;
    }
    if (message.promotionEffectiveTimePeriod !== undefined) {
      obj.promotionEffectiveTimePeriod = Interval.toJSON(message.promotionEffectiveTimePeriod);
    }
    if (message.promotionDisplayTimePeriod !== undefined) {
      obj.promotionDisplayTimePeriod = Interval.toJSON(message.promotionDisplayTimePeriod);
    }
    if (message.storeApplicability !== 0) {
      obj.storeApplicability = storeApplicabilityToJSON(message.storeApplicability);
    }
    if (message.storeCodesInclusion?.length) {
      obj.storeCodesInclusion = message.storeCodesInclusion;
    }
    if (message.storeCodesExclusion?.length) {
      obj.storeCodesExclusion = message.storeCodesExclusion;
    }
    if (message.promotionUrl !== "") {
      obj.promotionUrl = message.promotionUrl;
    }
    return obj;
  },

  create(base?: DeepPartial<Attributes>): Attributes {
    return Attributes.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<Attributes>): Attributes {
    const message = createBaseAttributes();
    message.productApplicability = object.productApplicability ?? 0;
    message.offerType = object.offerType ?? 0;
    message.genericRedemptionCode = object.genericRedemptionCode ?? "";
    message.longTitle = object.longTitle ?? "";
    message.couponValueType = object.couponValueType ?? 0;
    message.promotionDestinations = object.promotionDestinations?.map((e) => e) || [];
    message.itemIdInclusion = object.itemIdInclusion?.map((e) => e) || [];
    message.brandInclusion = object.brandInclusion?.map((e) => e) || [];
    message.itemGroupIdInclusion = object.itemGroupIdInclusion?.map((e) => e) || [];
    message.productTypeInclusion = object.productTypeInclusion?.map((e) => e) || [];
    message.itemIdExclusion = object.itemIdExclusion?.map((e) => e) || [];
    message.brandExclusion = object.brandExclusion?.map((e) => e) || [];
    message.itemGroupIdExclusion = object.itemGroupIdExclusion?.map((e) => e) || [];
    message.productTypeExclusion = object.productTypeExclusion?.map((e) => e) || [];
    message.minimumPurchaseAmount =
      (object.minimumPurchaseAmount !== undefined && object.minimumPurchaseAmount !== null)
        ? Price.fromPartial(object.minimumPurchaseAmount)
        : undefined;
    message.minimumPurchaseQuantity =
      (object.minimumPurchaseQuantity !== undefined && object.minimumPurchaseQuantity !== null)
        ? Long.fromValue(object.minimumPurchaseQuantity)
        : Long.ZERO;
    message.limitQuantity = (object.limitQuantity !== undefined && object.limitQuantity !== null)
      ? Long.fromValue(object.limitQuantity)
      : Long.ZERO;
    message.limitValue = (object.limitValue !== undefined && object.limitValue !== null)
      ? Price.fromPartial(object.limitValue)
      : undefined;
    message.percentOff = (object.percentOff !== undefined && object.percentOff !== null)
      ? Long.fromValue(object.percentOff)
      : Long.ZERO;
    message.moneyOffAmount = (object.moneyOffAmount !== undefined && object.moneyOffAmount !== null)
      ? Price.fromPartial(object.moneyOffAmount)
      : undefined;
    message.getThisQuantityDiscounted =
      (object.getThisQuantityDiscounted !== undefined && object.getThisQuantityDiscounted !== null)
        ? Long.fromValue(object.getThisQuantityDiscounted)
        : Long.ZERO;
    message.freeGiftValue = (object.freeGiftValue !== undefined && object.freeGiftValue !== null)
      ? Price.fromPartial(object.freeGiftValue)
      : undefined;
    message.freeGiftDescription = object.freeGiftDescription ?? "";
    message.freeGiftItemId = object.freeGiftItemId ?? "";
    message.promotionEffectiveTimePeriod =
      (object.promotionEffectiveTimePeriod !== undefined && object.promotionEffectiveTimePeriod !== null)
        ? Interval.fromPartial(object.promotionEffectiveTimePeriod)
        : undefined;
    message.promotionDisplayTimePeriod =
      (object.promotionDisplayTimePeriod !== undefined && object.promotionDisplayTimePeriod !== null)
        ? Interval.fromPartial(object.promotionDisplayTimePeriod)
        : undefined;
    message.storeApplicability = object.storeApplicability ?? 0;
    message.storeCodesInclusion = object.storeCodesInclusion?.map((e) => e) || [];
    message.storeCodesExclusion = object.storeCodesExclusion?.map((e) => e) || [];
    message.promotionUrl = object.promotionUrl ?? "";
    return message;
  },
};

function createBasePromotionStatus(): PromotionStatus {
  return { destinationStatuses: [], itemLevelIssues: [], creationDate: undefined, lastUpdateDate: undefined };
}

export const PromotionStatus: MessageFns<PromotionStatus> = {
  encode(message: PromotionStatus, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.destinationStatuses) {
      PromotionStatus_DestinationStatus.encode(v!, writer.uint32(10).fork()).join();
    }
    for (const v of message.itemLevelIssues) {
      PromotionStatus_ItemLevelIssue.encode(v!, writer.uint32(18).fork()).join();
    }
    if (message.creationDate !== undefined) {
      Timestamp.encode(toTimestamp(message.creationDate), writer.uint32(26).fork()).join();
    }
    if (message.lastUpdateDate !== undefined) {
      Timestamp.encode(toTimestamp(message.lastUpdateDate), writer.uint32(34).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PromotionStatus {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePromotionStatus();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.destinationStatuses.push(PromotionStatus_DestinationStatus.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.itemLevelIssues.push(PromotionStatus_ItemLevelIssue.decode(reader, reader.uint32()));
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.creationDate = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.lastUpdateDate = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PromotionStatus {
    return {
      destinationStatuses: globalThis.Array.isArray(object?.destinationStatuses)
        ? object.destinationStatuses.map((e: any) => PromotionStatus_DestinationStatus.fromJSON(e))
        : [],
      itemLevelIssues: globalThis.Array.isArray(object?.itemLevelIssues)
        ? object.itemLevelIssues.map((e: any) => PromotionStatus_ItemLevelIssue.fromJSON(e))
        : [],
      creationDate: isSet(object.creationDate) ? fromJsonTimestamp(object.creationDate) : undefined,
      lastUpdateDate: isSet(object.lastUpdateDate) ? fromJsonTimestamp(object.lastUpdateDate) : undefined,
    };
  },

  toJSON(message: PromotionStatus): unknown {
    const obj: any = {};
    if (message.destinationStatuses?.length) {
      obj.destinationStatuses = message.destinationStatuses.map((e) => PromotionStatus_DestinationStatus.toJSON(e));
    }
    if (message.itemLevelIssues?.length) {
      obj.itemLevelIssues = message.itemLevelIssues.map((e) => PromotionStatus_ItemLevelIssue.toJSON(e));
    }
    if (message.creationDate !== undefined) {
      obj.creationDate = message.creationDate.toISOString();
    }
    if (message.lastUpdateDate !== undefined) {
      obj.lastUpdateDate = message.lastUpdateDate.toISOString();
    }
    return obj;
  },

  create(base?: DeepPartial<PromotionStatus>): PromotionStatus {
    return PromotionStatus.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PromotionStatus>): PromotionStatus {
    const message = createBasePromotionStatus();
    message.destinationStatuses =
      object.destinationStatuses?.map((e) => PromotionStatus_DestinationStatus.fromPartial(e)) || [];
    message.itemLevelIssues = object.itemLevelIssues?.map((e) => PromotionStatus_ItemLevelIssue.fromPartial(e)) || [];
    message.creationDate = object.creationDate ?? undefined;
    message.lastUpdateDate = object.lastUpdateDate ?? undefined;
    return message;
  },
};

function createBasePromotionStatus_DestinationStatus(): PromotionStatus_DestinationStatus {
  return { reportingContext: 0, status: 0 };
}

export const PromotionStatus_DestinationStatus: MessageFns<PromotionStatus_DestinationStatus> = {
  encode(message: PromotionStatus_DestinationStatus, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.reportingContext !== 0) {
      writer.uint32(8).int32(message.reportingContext);
    }
    if (message.status !== 0) {
      writer.uint32(16).int32(message.status);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PromotionStatus_DestinationStatus {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePromotionStatus_DestinationStatus();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.reportingContext = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PromotionStatus_DestinationStatus {
    return {
      reportingContext: isSet(object.reportingContext)
        ? reportingContext_ReportingContextEnumFromJSON(object.reportingContext)
        : 0,
      status: isSet(object.status) ? promotionStatus_DestinationStatus_StateFromJSON(object.status) : 0,
    };
  },

  toJSON(message: PromotionStatus_DestinationStatus): unknown {
    const obj: any = {};
    if (message.reportingContext !== 0) {
      obj.reportingContext = reportingContext_ReportingContextEnumToJSON(message.reportingContext);
    }
    if (message.status !== 0) {
      obj.status = promotionStatus_DestinationStatus_StateToJSON(message.status);
    }
    return obj;
  },

  create(base?: DeepPartial<PromotionStatus_DestinationStatus>): PromotionStatus_DestinationStatus {
    return PromotionStatus_DestinationStatus.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PromotionStatus_DestinationStatus>): PromotionStatus_DestinationStatus {
    const message = createBasePromotionStatus_DestinationStatus();
    message.reportingContext = object.reportingContext ?? 0;
    message.status = object.status ?? 0;
    return message;
  },
};

function createBasePromotionStatus_ItemLevelIssue(): PromotionStatus_ItemLevelIssue {
  return {
    code: "",
    severity: 0,
    resolution: "",
    attribute: "",
    reportingContext: 0,
    description: "",
    detail: "",
    documentation: "",
    applicableCountries: [],
  };
}

export const PromotionStatus_ItemLevelIssue: MessageFns<PromotionStatus_ItemLevelIssue> = {
  encode(message: PromotionStatus_ItemLevelIssue, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.code !== "") {
      writer.uint32(10).string(message.code);
    }
    if (message.severity !== 0) {
      writer.uint32(16).int32(message.severity);
    }
    if (message.resolution !== "") {
      writer.uint32(26).string(message.resolution);
    }
    if (message.attribute !== "") {
      writer.uint32(34).string(message.attribute);
    }
    if (message.reportingContext !== 0) {
      writer.uint32(40).int32(message.reportingContext);
    }
    if (message.description !== "") {
      writer.uint32(50).string(message.description);
    }
    if (message.detail !== "") {
      writer.uint32(58).string(message.detail);
    }
    if (message.documentation !== "") {
      writer.uint32(66).string(message.documentation);
    }
    for (const v of message.applicableCountries) {
      writer.uint32(74).string(v!);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): PromotionStatus_ItemLevelIssue {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePromotionStatus_ItemLevelIssue();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.code = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.severity = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.resolution = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.attribute = reader.string();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.reportingContext = reader.int32() as any;
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.description = reader.string();
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.detail = reader.string();
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.documentation = reader.string();
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.applicableCountries.push(reader.string());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PromotionStatus_ItemLevelIssue {
    return {
      code: isSet(object.code) ? globalThis.String(object.code) : "",
      severity: isSet(object.severity) ? promotionStatus_ItemLevelIssue_SeverityFromJSON(object.severity) : 0,
      resolution: isSet(object.resolution) ? globalThis.String(object.resolution) : "",
      attribute: isSet(object.attribute) ? globalThis.String(object.attribute) : "",
      reportingContext: isSet(object.reportingContext)
        ? reportingContext_ReportingContextEnumFromJSON(object.reportingContext)
        : 0,
      description: isSet(object.description) ? globalThis.String(object.description) : "",
      detail: isSet(object.detail) ? globalThis.String(object.detail) : "",
      documentation: isSet(object.documentation) ? globalThis.String(object.documentation) : "",
      applicableCountries: globalThis.Array.isArray(object?.applicableCountries)
        ? object.applicableCountries.map((e: any) => globalThis.String(e))
        : [],
    };
  },

  toJSON(message: PromotionStatus_ItemLevelIssue): unknown {
    const obj: any = {};
    if (message.code !== "") {
      obj.code = message.code;
    }
    if (message.severity !== 0) {
      obj.severity = promotionStatus_ItemLevelIssue_SeverityToJSON(message.severity);
    }
    if (message.resolution !== "") {
      obj.resolution = message.resolution;
    }
    if (message.attribute !== "") {
      obj.attribute = message.attribute;
    }
    if (message.reportingContext !== 0) {
      obj.reportingContext = reportingContext_ReportingContextEnumToJSON(message.reportingContext);
    }
    if (message.description !== "") {
      obj.description = message.description;
    }
    if (message.detail !== "") {
      obj.detail = message.detail;
    }
    if (message.documentation !== "") {
      obj.documentation = message.documentation;
    }
    if (message.applicableCountries?.length) {
      obj.applicableCountries = message.applicableCountries;
    }
    return obj;
  },

  create(base?: DeepPartial<PromotionStatus_ItemLevelIssue>): PromotionStatus_ItemLevelIssue {
    return PromotionStatus_ItemLevelIssue.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<PromotionStatus_ItemLevelIssue>): PromotionStatus_ItemLevelIssue {
    const message = createBasePromotionStatus_ItemLevelIssue();
    message.code = object.code ?? "";
    message.severity = object.severity ?? 0;
    message.resolution = object.resolution ?? "";
    message.attribute = object.attribute ?? "";
    message.reportingContext = object.reportingContext ?? 0;
    message.description = object.description ?? "";
    message.detail = object.detail ?? "";
    message.documentation = object.documentation ?? "";
    message.applicableCountries = object.applicableCountries?.map((e) => e) || [];
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function toTimestamp(date: Date): Timestamp {
  const seconds = numberToLong(Math.trunc(date.getTime() / 1_000));
  const nanos = (date.getTime() % 1_000) * 1_000_000;
  return { seconds, nanos };
}

function fromTimestamp(t: Timestamp): Date {
  let millis = (t.seconds.toNumber() || 0) * 1_000;
  millis += (t.nanos || 0) / 1_000_000;
  return new globalThis.Date(millis);
}

function fromJsonTimestamp(o: any): Date {
  if (o instanceof globalThis.Date) {
    return o;
  } else if (typeof o === "string") {
    return new globalThis.Date(o);
  } else {
    return fromTimestamp(Timestamp.fromJSON(o));
  }
}

function numberToLong(number: number) {
  return Long.fromNumber(number);
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
