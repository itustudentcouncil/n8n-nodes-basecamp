// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/security/publicca/v1beta1/service.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { ExternalAccountKey } from "./resources.js";

export const protobufPackage = "google.cloud.security.publicca.v1beta1";

/** Creates a new [ExternalAccountKey][google.cloud.security.publicca.v1beta1.ExternalAccountKey] in a given project. */
export interface CreateExternalAccountKeyRequest {
  /**
   * Required. The parent resource where this external_account_key will be created.
   * Format: projects/[project_id]/locations/[location].
   * At present only the "global" location is supported.
   */
  parent: string;
  /**
   * Required. The external account key to create. This field only exists to future-proof
   * the API. At present, all fields in ExternalAccountKey are output only and
   * all values are ignored. For the purpose of the
   * CreateExternalAccountKeyRequest, set it to a default/empty value.
   */
  externalAccountKey: ExternalAccountKey | undefined;
}

function createBaseCreateExternalAccountKeyRequest(): CreateExternalAccountKeyRequest {
  return { parent: "", externalAccountKey: undefined };
}

export const CreateExternalAccountKeyRequest: MessageFns<CreateExternalAccountKeyRequest> = {
  encode(message: CreateExternalAccountKeyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    if (message.externalAccountKey !== undefined) {
      ExternalAccountKey.encode(message.externalAccountKey, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CreateExternalAccountKeyRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCreateExternalAccountKeyRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.externalAccountKey = ExternalAccountKey.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CreateExternalAccountKeyRequest {
    return {
      parent: isSet(object.parent) ? globalThis.String(object.parent) : "",
      externalAccountKey: isSet(object.externalAccountKey)
        ? ExternalAccountKey.fromJSON(object.externalAccountKey)
        : undefined,
    };
  },

  toJSON(message: CreateExternalAccountKeyRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    if (message.externalAccountKey !== undefined) {
      obj.externalAccountKey = ExternalAccountKey.toJSON(message.externalAccountKey);
    }
    return obj;
  },

  create(base?: DeepPartial<CreateExternalAccountKeyRequest>): CreateExternalAccountKeyRequest {
    return CreateExternalAccountKeyRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CreateExternalAccountKeyRequest>): CreateExternalAccountKeyRequest {
    const message = createBaseCreateExternalAccountKeyRequest();
    message.parent = object.parent ?? "";
    message.externalAccountKey = (object.externalAccountKey !== undefined && object.externalAccountKey !== null)
      ? ExternalAccountKey.fromPartial(object.externalAccountKey)
      : undefined;
    return message;
  },
};

/**
 * Manages the resources required for ACME [external account
 * binding](https://tools.ietf.org/html/rfc8555#section-7.3.4) for
 * the public certificate authority service.
 */
export type PublicCertificateAuthorityServiceDefinition = typeof PublicCertificateAuthorityServiceDefinition;
export const PublicCertificateAuthorityServiceDefinition = {
  name: "PublicCertificateAuthorityService",
  fullName: "google.cloud.security.publicca.v1beta1.PublicCertificateAuthorityService",
  methods: {
    /** Creates a new [ExternalAccountKey][google.cloud.security.publicca.v1beta1.ExternalAccountKey] bound to the project. */
    createExternalAccountKey: {
      name: "CreateExternalAccountKey",
      requestType: CreateExternalAccountKeyRequest,
      requestStream: false,
      responseType: ExternalAccountKey,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              27,
              112,
              97,
              114,
              101,
              110,
              116,
              44,
              101,
              120,
              116,
              101,
              114,
              110,
              97,
              108,
              95,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              107,
              101,
              121,
            ]),
          ],
          578365826: [
            Buffer.from([
              84,
              58,
              20,
              101,
              120,
              116,
              101,
              114,
              110,
              97,
              108,
              95,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              107,
              101,
              121,
              34,
              60,
              47,
              118,
              49,
              98,
              101,
              116,
              97,
              49,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              101,
              120,
              116,
              101,
              114,
              110,
              97,
              108,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              75,
              101,
              121,
              115,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface PublicCertificateAuthorityServiceImplementation<CallContextExt = {}> {
  /** Creates a new [ExternalAccountKey][google.cloud.security.publicca.v1beta1.ExternalAccountKey] bound to the project. */
  createExternalAccountKey(
    request: CreateExternalAccountKeyRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ExternalAccountKey>>;
}

export interface PublicCertificateAuthorityServiceClient<CallOptionsExt = {}> {
  /** Creates a new [ExternalAccountKey][google.cloud.security.publicca.v1beta1.ExternalAccountKey] bound to the project. */
  createExternalAccountKey(
    request: DeepPartial<CreateExternalAccountKeyRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ExternalAccountKey>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
