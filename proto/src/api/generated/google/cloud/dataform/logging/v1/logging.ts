// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/dataform/logging/v1/logging.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.cloud.dataform.logging.v1";

/**
 * Structured payload for logs generated from Dataform workflow invocation
 * completions.
 */
export interface WorkflowInvocationCompletionLogEntry {
  /** Required. Identifier of the workflow invocation. */
  workflowInvocationId: string;
  /** Optional. Identifier of the workflow config. */
  workflowConfigId: string;
  /** Optional. Identifier of the release config. */
  releaseConfigId: string;
  /** Required. The workflow invocation's final termination state. */
  terminalState: WorkflowInvocationCompletionLogEntry_TerminalState;
}

/** Represents the final termination state of a workflow invocation. */
export enum WorkflowInvocationCompletionLogEntry_TerminalState {
  /** TERMINAL_STATE_UNSPECIFIED - Default value. This value is unused. */
  TERMINAL_STATE_UNSPECIFIED = 0,
  /** SUCCEEDED - The workflow invocation succeeded. */
  SUCCEEDED = 1,
  /** CANCELLED - The workflow invocation was cancelled. */
  CANCELLED = 2,
  /** FAILED - The workflow invocation failed. */
  FAILED = 3,
  UNRECOGNIZED = -1,
}

export function workflowInvocationCompletionLogEntry_TerminalStateFromJSON(
  object: any,
): WorkflowInvocationCompletionLogEntry_TerminalState {
  switch (object) {
    case 0:
    case "TERMINAL_STATE_UNSPECIFIED":
      return WorkflowInvocationCompletionLogEntry_TerminalState.TERMINAL_STATE_UNSPECIFIED;
    case 1:
    case "SUCCEEDED":
      return WorkflowInvocationCompletionLogEntry_TerminalState.SUCCEEDED;
    case 2:
    case "CANCELLED":
      return WorkflowInvocationCompletionLogEntry_TerminalState.CANCELLED;
    case 3:
    case "FAILED":
      return WorkflowInvocationCompletionLogEntry_TerminalState.FAILED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return WorkflowInvocationCompletionLogEntry_TerminalState.UNRECOGNIZED;
  }
}

export function workflowInvocationCompletionLogEntry_TerminalStateToJSON(
  object: WorkflowInvocationCompletionLogEntry_TerminalState,
): string {
  switch (object) {
    case WorkflowInvocationCompletionLogEntry_TerminalState.TERMINAL_STATE_UNSPECIFIED:
      return "TERMINAL_STATE_UNSPECIFIED";
    case WorkflowInvocationCompletionLogEntry_TerminalState.SUCCEEDED:
      return "SUCCEEDED";
    case WorkflowInvocationCompletionLogEntry_TerminalState.CANCELLED:
      return "CANCELLED";
    case WorkflowInvocationCompletionLogEntry_TerminalState.FAILED:
      return "FAILED";
    case WorkflowInvocationCompletionLogEntry_TerminalState.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseWorkflowInvocationCompletionLogEntry(): WorkflowInvocationCompletionLogEntry {
  return { workflowInvocationId: "", workflowConfigId: "", releaseConfigId: "", terminalState: 0 };
}

export const WorkflowInvocationCompletionLogEntry: MessageFns<WorkflowInvocationCompletionLogEntry> = {
  encode(message: WorkflowInvocationCompletionLogEntry, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.workflowInvocationId !== "") {
      writer.uint32(10).string(message.workflowInvocationId);
    }
    if (message.workflowConfigId !== "") {
      writer.uint32(18).string(message.workflowConfigId);
    }
    if (message.releaseConfigId !== "") {
      writer.uint32(26).string(message.releaseConfigId);
    }
    if (message.terminalState !== 0) {
      writer.uint32(32).int32(message.terminalState);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): WorkflowInvocationCompletionLogEntry {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseWorkflowInvocationCompletionLogEntry();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.workflowInvocationId = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.workflowConfigId = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.releaseConfigId = reader.string();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.terminalState = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): WorkflowInvocationCompletionLogEntry {
    return {
      workflowInvocationId: isSet(object.workflowInvocationId) ? globalThis.String(object.workflowInvocationId) : "",
      workflowConfigId: isSet(object.workflowConfigId) ? globalThis.String(object.workflowConfigId) : "",
      releaseConfigId: isSet(object.releaseConfigId) ? globalThis.String(object.releaseConfigId) : "",
      terminalState: isSet(object.terminalState)
        ? workflowInvocationCompletionLogEntry_TerminalStateFromJSON(object.terminalState)
        : 0,
    };
  },

  toJSON(message: WorkflowInvocationCompletionLogEntry): unknown {
    const obj: any = {};
    if (message.workflowInvocationId !== "") {
      obj.workflowInvocationId = message.workflowInvocationId;
    }
    if (message.workflowConfigId !== "") {
      obj.workflowConfigId = message.workflowConfigId;
    }
    if (message.releaseConfigId !== "") {
      obj.releaseConfigId = message.releaseConfigId;
    }
    if (message.terminalState !== 0) {
      obj.terminalState = workflowInvocationCompletionLogEntry_TerminalStateToJSON(message.terminalState);
    }
    return obj;
  },

  create(base?: DeepPartial<WorkflowInvocationCompletionLogEntry>): WorkflowInvocationCompletionLogEntry {
    return WorkflowInvocationCompletionLogEntry.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<WorkflowInvocationCompletionLogEntry>): WorkflowInvocationCompletionLogEntry {
    const message = createBaseWorkflowInvocationCompletionLogEntry();
    message.workflowInvocationId = object.workflowInvocationId ?? "";
    message.workflowConfigId = object.workflowConfigId ?? "";
    message.releaseConfigId = object.releaseConfigId ?? "";
    message.terminalState = object.terminalState ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
