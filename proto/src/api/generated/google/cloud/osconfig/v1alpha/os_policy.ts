// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/osconfig/v1alpha/os_policy.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.cloud.osconfig.v1alpha";

/** An OS policy defines the desired state configuration for a VM. */
export interface OSPolicy {
  /**
   * Required. The id of the OS policy with the following restrictions:
   *
   * * Must contain only lowercase letters, numbers, and hyphens.
   * * Must start with a letter.
   * * Must be between 1-63 characters.
   * * Must end with a number or a letter.
   * * Must be unique within the assignment.
   */
  id: string;
  /**
   * Policy description.
   * Length of the description is limited to 1024 characters.
   */
  description: string;
  /** Required. Policy mode */
  mode: OSPolicy_Mode;
  /**
   * Required. List of resource groups for the policy.
   * For a particular VM, resource groups are evaluated in the order specified
   * and the first resource group that is applicable is selected and the rest
   * are ignored.
   *
   * If none of the resource groups are applicable for a VM, the VM is
   * considered to be non-compliant w.r.t this policy. This behavior can be
   * toggled by the flag `allow_no_resource_group_match`
   */
  resourceGroups: OSPolicy_ResourceGroup[];
  /**
   * This flag determines the OS policy compliance status when none of the
   * resource groups within the policy are applicable for a VM. Set this value
   * to `true` if the policy needs to be reported as compliant even if the
   * policy has nothing to validate or enforce.
   */
  allowNoResourceGroupMatch: boolean;
}

/** Policy mode */
export enum OSPolicy_Mode {
  /** MODE_UNSPECIFIED - Invalid mode */
  MODE_UNSPECIFIED = 0,
  /**
   * VALIDATION - This mode checks if the configuration resources in the policy are in
   * their desired state. No actions are performed if they are not in the
   * desired state. This mode is used for reporting purposes.
   */
  VALIDATION = 1,
  /**
   * ENFORCEMENT - This mode checks if the configuration resources in the policy are in
   * their desired state, and if not, enforces the desired state.
   */
  ENFORCEMENT = 2,
  UNRECOGNIZED = -1,
}

export function oSPolicy_ModeFromJSON(object: any): OSPolicy_Mode {
  switch (object) {
    case 0:
    case "MODE_UNSPECIFIED":
      return OSPolicy_Mode.MODE_UNSPECIFIED;
    case 1:
    case "VALIDATION":
      return OSPolicy_Mode.VALIDATION;
    case 2:
    case "ENFORCEMENT":
      return OSPolicy_Mode.ENFORCEMENT;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OSPolicy_Mode.UNRECOGNIZED;
  }
}

export function oSPolicy_ModeToJSON(object: OSPolicy_Mode): string {
  switch (object) {
    case OSPolicy_Mode.MODE_UNSPECIFIED:
      return "MODE_UNSPECIFIED";
    case OSPolicy_Mode.VALIDATION:
      return "VALIDATION";
    case OSPolicy_Mode.ENFORCEMENT:
      return "ENFORCEMENT";
    case OSPolicy_Mode.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** Filtering criteria to select VMs based on OS details. */
export interface OSPolicy_OSFilter {
  /**
   * This should match OS short name emitted by the OS inventory agent.
   * An empty value matches any OS.
   */
  osShortName: string;
  /**
   * This value should match the version emitted by the OS inventory
   * agent.
   * Prefix matches are supported if asterisk(*) is provided as the
   * last character. For example, to match all versions with a major
   * version of `7`, specify the following value for this field `7.*`
   */
  osVersion: string;
}

/** Filtering criteria to select VMs based on inventory details. */
export interface OSPolicy_InventoryFilter {
  /** Required. The OS short name */
  osShortName: string;
  /**
   * The OS version
   *
   * Prefix matches are supported if asterisk(*) is provided as the
   * last character. For example, to match all versions with a major
   * version of `7`, specify the following value for this field `7.*`
   *
   * An empty string matches all OS versions.
   */
  osVersion: string;
}

/**
 * An OS policy resource is used to define the desired state configuration
 * and provides a specific functionality like installing/removing packages,
 * executing a script etc.
 *
 * The system ensures that resources are always in their desired state by
 * taking necessary actions if they have drifted from their desired state.
 */
export interface OSPolicy_Resource {
  /**
   * Required. The id of the resource with the following restrictions:
   *
   * * Must contain only lowercase letters, numbers, and hyphens.
   * * Must start with a letter.
   * * Must be between 1-63 characters.
   * * Must end with a number or a letter.
   * * Must be unique within the OS policy.
   */
  id: string;
  /** Package resource */
  pkg?:
    | OSPolicy_Resource_PackageResource
    | undefined;
  /** Package repository resource */
  repository?:
    | OSPolicy_Resource_RepositoryResource
    | undefined;
  /** Exec resource */
  exec?:
    | OSPolicy_Resource_ExecResource
    | undefined;
  /** File resource */
  file?: OSPolicy_Resource_FileResource | undefined;
}

/** A remote or local file. */
export interface OSPolicy_Resource_File {
  /** A generic remote file. */
  remote?:
    | OSPolicy_Resource_File_Remote
    | undefined;
  /** A Cloud Storage object. */
  gcs?:
    | OSPolicy_Resource_File_Gcs
    | undefined;
  /** A local path within the VM to use. */
  localPath?:
    | string
    | undefined;
  /**
   * Defaults to false. When false, files are subject to validations
   * based on the file type:
   *
   * Remote: A checksum must be specified.
   * Cloud Storage: An object generation number must be specified.
   */
  allowInsecure: boolean;
}

/** Specifies a file available via some URI. */
export interface OSPolicy_Resource_File_Remote {
  /**
   * Required. URI from which to fetch the object. It should contain both the
   * protocol and path following the format `{protocol}://{location}`.
   */
  uri: string;
  /** SHA256 checksum of the remote file. */
  sha256Checksum: string;
}

/** Specifies a file available as a Cloud Storage Object. */
export interface OSPolicy_Resource_File_Gcs {
  /** Required. Bucket of the Cloud Storage object. */
  bucket: string;
  /** Required. Name of the Cloud Storage object. */
  object: string;
  /** Generation number of the Cloud Storage object. */
  generation: Long;
}

/** A resource that manages a system package. */
export interface OSPolicy_Resource_PackageResource {
  /** Required. The desired state the agent should maintain for this package. */
  desiredState: OSPolicy_Resource_PackageResource_DesiredState;
  /** A package managed by Apt. */
  apt?:
    | OSPolicy_Resource_PackageResource_APT
    | undefined;
  /** A deb package file. */
  deb?:
    | OSPolicy_Resource_PackageResource_Deb
    | undefined;
  /** A package managed by YUM. */
  yum?:
    | OSPolicy_Resource_PackageResource_YUM
    | undefined;
  /** A package managed by Zypper. */
  zypper?:
    | OSPolicy_Resource_PackageResource_Zypper
    | undefined;
  /** An rpm package file. */
  rpm?:
    | OSPolicy_Resource_PackageResource_RPM
    | undefined;
  /** A package managed by GooGet. */
  googet?:
    | OSPolicy_Resource_PackageResource_GooGet
    | undefined;
  /** An MSI package. */
  msi?: OSPolicy_Resource_PackageResource_MSI | undefined;
}

/** The desired state that the OS Config agent maintains on the VM. */
export enum OSPolicy_Resource_PackageResource_DesiredState {
  /** DESIRED_STATE_UNSPECIFIED - Unspecified is invalid. */
  DESIRED_STATE_UNSPECIFIED = 0,
  /** INSTALLED - Ensure that the package is installed. */
  INSTALLED = 1,
  /**
   * REMOVED - The agent ensures that the package is not installed and
   * uninstalls it if detected.
   */
  REMOVED = 2,
  UNRECOGNIZED = -1,
}

export function oSPolicy_Resource_PackageResource_DesiredStateFromJSON(
  object: any,
): OSPolicy_Resource_PackageResource_DesiredState {
  switch (object) {
    case 0:
    case "DESIRED_STATE_UNSPECIFIED":
      return OSPolicy_Resource_PackageResource_DesiredState.DESIRED_STATE_UNSPECIFIED;
    case 1:
    case "INSTALLED":
      return OSPolicy_Resource_PackageResource_DesiredState.INSTALLED;
    case 2:
    case "REMOVED":
      return OSPolicy_Resource_PackageResource_DesiredState.REMOVED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OSPolicy_Resource_PackageResource_DesiredState.UNRECOGNIZED;
  }
}

export function oSPolicy_Resource_PackageResource_DesiredStateToJSON(
  object: OSPolicy_Resource_PackageResource_DesiredState,
): string {
  switch (object) {
    case OSPolicy_Resource_PackageResource_DesiredState.DESIRED_STATE_UNSPECIFIED:
      return "DESIRED_STATE_UNSPECIFIED";
    case OSPolicy_Resource_PackageResource_DesiredState.INSTALLED:
      return "INSTALLED";
    case OSPolicy_Resource_PackageResource_DesiredState.REMOVED:
      return "REMOVED";
    case OSPolicy_Resource_PackageResource_DesiredState.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** A deb package file. dpkg packages only support INSTALLED state. */
export interface OSPolicy_Resource_PackageResource_Deb {
  /** Required. A deb package. */
  source:
    | OSPolicy_Resource_File
    | undefined;
  /**
   * Whether dependencies should also be installed.
   * - install when false: `dpkg -i package`
   * - install when true: `apt-get update && apt-get -y install
   * package.deb`
   */
  pullDeps: boolean;
}

/**
 * A package managed by APT.
 * - install: `apt-get update && apt-get -y install [name]`
 * - remove: `apt-get -y remove [name]`
 */
export interface OSPolicy_Resource_PackageResource_APT {
  /** Required. Package name. */
  name: string;
}

/** An RPM package file. RPM packages only support INSTALLED state. */
export interface OSPolicy_Resource_PackageResource_RPM {
  /** Required. An rpm package. */
  source:
    | OSPolicy_Resource_File
    | undefined;
  /**
   * Whether dependencies should also be installed.
   * - install when false: `rpm --upgrade --replacepkgs package.rpm`
   * - install when true: `yum -y install package.rpm` or
   * `zypper -y install package.rpm`
   */
  pullDeps: boolean;
}

/**
 * A package managed by YUM.
 * - install: `yum -y install package`
 * - remove: `yum -y remove package`
 */
export interface OSPolicy_Resource_PackageResource_YUM {
  /** Required. Package name. */
  name: string;
}

/**
 * A package managed by Zypper.
 * - install: `zypper -y install package`
 * - remove: `zypper -y rm package`
 */
export interface OSPolicy_Resource_PackageResource_Zypper {
  /** Required. Package name. */
  name: string;
}

/**
 * A package managed by GooGet.
 * - install: `googet -noconfirm install package`
 * - remove: `googet -noconfirm remove package`
 */
export interface OSPolicy_Resource_PackageResource_GooGet {
  /** Required. Package name. */
  name: string;
}

/** An MSI package. MSI packages only support INSTALLED state. */
export interface OSPolicy_Resource_PackageResource_MSI {
  /** Required. The MSI package. */
  source:
    | OSPolicy_Resource_File
    | undefined;
  /**
   * Additional properties to use during installation.
   * This should be in the format of Property=Setting.
   * Appended to the defaults of `ACTION=INSTALL
   * REBOOT=ReallySuppress`.
   */
  properties: string[];
}

/** A resource that manages a package repository. */
export interface OSPolicy_Resource_RepositoryResource {
  /** An Apt Repository. */
  apt?:
    | OSPolicy_Resource_RepositoryResource_AptRepository
    | undefined;
  /** A Yum Repository. */
  yum?:
    | OSPolicy_Resource_RepositoryResource_YumRepository
    | undefined;
  /** A Zypper Repository. */
  zypper?:
    | OSPolicy_Resource_RepositoryResource_ZypperRepository
    | undefined;
  /** A Goo Repository. */
  goo?: OSPolicy_Resource_RepositoryResource_GooRepository | undefined;
}

/**
 * Represents a single apt package repository. These will be added to
 * a repo file that will be managed at
 * `/etc/apt/sources.list.d/google_osconfig.list`.
 */
export interface OSPolicy_Resource_RepositoryResource_AptRepository {
  /** Required. Type of archive files in this repository. */
  archiveType: OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType;
  /** Required. URI for this repository. */
  uri: string;
  /** Required. Distribution of this repository. */
  distribution: string;
  /**
   * Required. List of components for this repository. Must contain at least one
   * item.
   */
  components: string[];
  /**
   * URI of the key file for this repository. The agent maintains a
   * keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.
   */
  gpgKey: string;
}

/** Type of archive. */
export enum OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType {
  /** ARCHIVE_TYPE_UNSPECIFIED - Unspecified is invalid. */
  ARCHIVE_TYPE_UNSPECIFIED = 0,
  /** DEB - Deb indicates that the archive contains binary files. */
  DEB = 1,
  /** DEB_SRC - Deb-src indicates that the archive contains source files. */
  DEB_SRC = 2,
  UNRECOGNIZED = -1,
}

export function oSPolicy_Resource_RepositoryResource_AptRepository_ArchiveTypeFromJSON(
  object: any,
): OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType {
  switch (object) {
    case 0:
    case "ARCHIVE_TYPE_UNSPECIFIED":
      return OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType.ARCHIVE_TYPE_UNSPECIFIED;
    case 1:
    case "DEB":
      return OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType.DEB;
    case 2:
    case "DEB_SRC":
      return OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType.DEB_SRC;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType.UNRECOGNIZED;
  }
}

export function oSPolicy_Resource_RepositoryResource_AptRepository_ArchiveTypeToJSON(
  object: OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType,
): string {
  switch (object) {
    case OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType.ARCHIVE_TYPE_UNSPECIFIED:
      return "ARCHIVE_TYPE_UNSPECIFIED";
    case OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType.DEB:
      return "DEB";
    case OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType.DEB_SRC:
      return "DEB_SRC";
    case OSPolicy_Resource_RepositoryResource_AptRepository_ArchiveType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/**
 * Represents a single yum package repository. These are added to a
 * repo file that is managed at
 * `/etc/yum.repos.d/google_osconfig.repo`.
 */
export interface OSPolicy_Resource_RepositoryResource_YumRepository {
  /**
   * Required. A one word, unique name for this repository. This is  the `repo
   * id` in the yum config file and also the `display_name` if
   * `display_name` is omitted. This id is also used as the unique
   * identifier when checking for resource conflicts.
   */
  id: string;
  /** The display name of the repository. */
  displayName: string;
  /** Required. The location of the repository directory. */
  baseUrl: string;
  /** URIs of GPG keys. */
  gpgKeys: string[];
}

/**
 * Represents a single zypper package repository. These are added to a
 * repo file that is managed at
 * `/etc/zypp/repos.d/google_osconfig.repo`.
 */
export interface OSPolicy_Resource_RepositoryResource_ZypperRepository {
  /**
   * Required. A one word, unique name for this repository. This is the `repo
   * id` in the zypper config file and also the `display_name` if
   * `display_name` is omitted. This id is also used as the unique
   * identifier when checking for GuestPolicy conflicts.
   */
  id: string;
  /** The display name of the repository. */
  displayName: string;
  /** Required. The location of the repository directory. */
  baseUrl: string;
  /** URIs of GPG keys. */
  gpgKeys: string[];
}

/**
 * Represents a Goo package repository. These are added to a repo file
 * that is managed at
 * `C:/ProgramData/GooGet/repos/google_osconfig.repo`.
 */
export interface OSPolicy_Resource_RepositoryResource_GooRepository {
  /** Required. The name of the repository. */
  name: string;
  /** Required. The url of the repository. */
  url: string;
}

/**
 * A resource that allows executing scripts on the VM.
 *
 * The `ExecResource` has 2 stages: `validate` and `enforce` and both stages
 * accept a script as an argument to execute.
 *
 * When the `ExecResource` is applied by the agent, it first executes the
 * script in the `validate` stage. The `validate` stage can signal that the
 * `ExecResource` is already in the desired state by returning an exit code
 * of `100`. If the `ExecResource` is not in the desired state, it should
 * return an exit code of `101`. Any other exit code returned by this stage
 * is considered an error.
 *
 * If the `ExecResource` is not in the desired state based on the exit code
 * from the `validate` stage, the agent proceeds to execute the script from
 * the `enforce` stage. If the `ExecResource` is already in the desired
 * state, the `enforce` stage will not be run.
 * Similar to `validate` stage, the `enforce` stage should return an exit
 * code of `100` to indicate that the resource in now in its desired state.
 * Any other exit code is considered an error.
 *
 * NOTE: An exit code of `100` was chosen over `0` (and `101` vs `1`) to
 * have an explicit indicator of `in desired state`, `not in desired state`
 * and errors. Because, for example, Powershell will always return an exit
 * code of `0` unless an `exit` statement is provided in the script. So, for
 * reasons of consistency and being explicit, exit codes `100` and `101`
 * were chosen.
 */
export interface OSPolicy_Resource_ExecResource {
  /**
   * Required. What to run to validate this resource is in the desired state.
   * An exit code of 100 indicates "in desired state", and exit code of 101
   * indicates "not in desired state". Any other exit code indicates a
   * failure running validate.
   */
  validate:
    | OSPolicy_Resource_ExecResource_Exec
    | undefined;
  /**
   * What to run to bring this resource into the desired state.
   * An exit code of 100 indicates "success", any other exit code indicates
   * a failure running enforce.
   */
  enforce: OSPolicy_Resource_ExecResource_Exec | undefined;
}

/** A file or script to execute. */
export interface OSPolicy_Resource_ExecResource_Exec {
  /** A remote or local file. */
  file?:
    | OSPolicy_Resource_File
    | undefined;
  /**
   * An inline script.
   * The size of the script is limited to 1024 characters.
   */
  script?:
    | string
    | undefined;
  /** Optional arguments to pass to the source during execution. */
  args: string[];
  /** Required. The script interpreter to use. */
  interpreter: OSPolicy_Resource_ExecResource_Exec_Interpreter;
  /**
   * Only recorded for enforce Exec.
   * Path to an output file (that is created by this Exec) whose
   * content will be recorded in OSPolicyResourceCompliance after a
   * successful run. Absence or failure to read this file will result in
   * this ExecResource being non-compliant. Output file size is limited to
   * 100K bytes.
   */
  outputFilePath: string;
}

/** The interpreter to use. */
export enum OSPolicy_Resource_ExecResource_Exec_Interpreter {
  /** INTERPRETER_UNSPECIFIED - Invalid value, the request will return validation error. */
  INTERPRETER_UNSPECIFIED = 0,
  /**
   * NONE - If an interpreter is not specified, the
   * source is executed directly. This execution, without an
   * interpreter, only succeeds for executables and scripts that have <a
   * href="https://en.wikipedia.org/wiki/Shebang_(Unix)"
   * class="external">shebang lines</a>.
   */
  NONE = 1,
  /**
   * SHELL - Indicates that the script runs with `/bin/sh` on Linux and
   * `cmd.exe` on Windows.
   */
  SHELL = 2,
  /** POWERSHELL - Indicates that the script runs with PowerShell. */
  POWERSHELL = 3,
  UNRECOGNIZED = -1,
}

export function oSPolicy_Resource_ExecResource_Exec_InterpreterFromJSON(
  object: any,
): OSPolicy_Resource_ExecResource_Exec_Interpreter {
  switch (object) {
    case 0:
    case "INTERPRETER_UNSPECIFIED":
      return OSPolicy_Resource_ExecResource_Exec_Interpreter.INTERPRETER_UNSPECIFIED;
    case 1:
    case "NONE":
      return OSPolicy_Resource_ExecResource_Exec_Interpreter.NONE;
    case 2:
    case "SHELL":
      return OSPolicy_Resource_ExecResource_Exec_Interpreter.SHELL;
    case 3:
    case "POWERSHELL":
      return OSPolicy_Resource_ExecResource_Exec_Interpreter.POWERSHELL;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OSPolicy_Resource_ExecResource_Exec_Interpreter.UNRECOGNIZED;
  }
}

export function oSPolicy_Resource_ExecResource_Exec_InterpreterToJSON(
  object: OSPolicy_Resource_ExecResource_Exec_Interpreter,
): string {
  switch (object) {
    case OSPolicy_Resource_ExecResource_Exec_Interpreter.INTERPRETER_UNSPECIFIED:
      return "INTERPRETER_UNSPECIFIED";
    case OSPolicy_Resource_ExecResource_Exec_Interpreter.NONE:
      return "NONE";
    case OSPolicy_Resource_ExecResource_Exec_Interpreter.SHELL:
      return "SHELL";
    case OSPolicy_Resource_ExecResource_Exec_Interpreter.POWERSHELL:
      return "POWERSHELL";
    case OSPolicy_Resource_ExecResource_Exec_Interpreter.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** A resource that manages the state of a file. */
export interface OSPolicy_Resource_FileResource {
  /** A remote or local source. */
  file?:
    | OSPolicy_Resource_File
    | undefined;
  /**
   * A a file with this content.
   * The size of the content is limited to 1024 characters.
   */
  content?:
    | string
    | undefined;
  /** Required. The absolute path of the file within the VM. */
  path: string;
  /** Required. Desired state of the file. */
  state: OSPolicy_Resource_FileResource_DesiredState;
  /**
   * Consists of three octal digits which represent, in
   * order, the permissions of the owner, group, and other users for the
   * file (similarly to the numeric mode used in the linux chmod
   * utility). Each digit represents a three bit number with the 4 bit
   * corresponding to the read permissions, the 2 bit corresponds to the
   * write bit, and the one bit corresponds to the execute permission.
   * Default behavior is 755.
   *
   * Below are some examples of permissions and their associated values:
   * read, write, and execute: 7
   * read and execute: 5
   * read and write: 6
   * read only: 4
   */
  permissions: string;
}

/** Desired state of the file. */
export enum OSPolicy_Resource_FileResource_DesiredState {
  /** DESIRED_STATE_UNSPECIFIED - Unspecified is invalid. */
  DESIRED_STATE_UNSPECIFIED = 0,
  /** PRESENT - Ensure file at path is present. */
  PRESENT = 1,
  /** ABSENT - Ensure file at path is absent. */
  ABSENT = 2,
  /**
   * CONTENTS_MATCH - Ensure the contents of the file at path matches. If the file does
   * not exist it will be created.
   */
  CONTENTS_MATCH = 3,
  UNRECOGNIZED = -1,
}

export function oSPolicy_Resource_FileResource_DesiredStateFromJSON(
  object: any,
): OSPolicy_Resource_FileResource_DesiredState {
  switch (object) {
    case 0:
    case "DESIRED_STATE_UNSPECIFIED":
      return OSPolicy_Resource_FileResource_DesiredState.DESIRED_STATE_UNSPECIFIED;
    case 1:
    case "PRESENT":
      return OSPolicy_Resource_FileResource_DesiredState.PRESENT;
    case 2:
    case "ABSENT":
      return OSPolicy_Resource_FileResource_DesiredState.ABSENT;
    case 3:
    case "CONTENTS_MATCH":
      return OSPolicy_Resource_FileResource_DesiredState.CONTENTS_MATCH;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OSPolicy_Resource_FileResource_DesiredState.UNRECOGNIZED;
  }
}

export function oSPolicy_Resource_FileResource_DesiredStateToJSON(
  object: OSPolicy_Resource_FileResource_DesiredState,
): string {
  switch (object) {
    case OSPolicy_Resource_FileResource_DesiredState.DESIRED_STATE_UNSPECIFIED:
      return "DESIRED_STATE_UNSPECIFIED";
    case OSPolicy_Resource_FileResource_DesiredState.PRESENT:
      return "PRESENT";
    case OSPolicy_Resource_FileResource_DesiredState.ABSENT:
      return "ABSENT";
    case OSPolicy_Resource_FileResource_DesiredState.CONTENTS_MATCH:
      return "CONTENTS_MATCH";
    case OSPolicy_Resource_FileResource_DesiredState.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/**
 * Resource groups provide a mechanism to group OS policy resources.
 *
 * Resource groups enable OS policy authors to create a single OS policy
 * to be applied to VMs running different operating Systems.
 *
 * When the OS policy is applied to a target VM, the appropriate resource
 * group within the OS policy is selected based on the `OSFilter` specified
 * within the resource group.
 */
export interface OSPolicy_ResourceGroup {
  /**
   * Deprecated. Use the `inventory_filters` field instead.
   * Used to specify the OS filter for a resource group
   *
   * @deprecated
   */
  osFilter:
    | OSPolicy_OSFilter
    | undefined;
  /**
   * List of inventory filters for the resource group.
   *
   * The resources in this resource group are applied to the target VM if it
   * satisfies at least one of the following inventory filters.
   *
   * For example, to apply this resource group to VMs running either `RHEL` or
   * `CentOS` operating systems, specify 2 items for the list with following
   * values:
   * inventory_filters[0].os_short_name='rhel' and
   * inventory_filters[1].os_short_name='centos'
   *
   * If the list is empty, this resource group will be applied to the target
   * VM unconditionally.
   */
  inventoryFilters: OSPolicy_InventoryFilter[];
  /**
   * Required. List of resources configured for this resource group.
   * The resources are executed in the exact order specified here.
   */
  resources: OSPolicy_Resource[];
}

function createBaseOSPolicy(): OSPolicy {
  return { id: "", description: "", mode: 0, resourceGroups: [], allowNoResourceGroupMatch: false };
}

export const OSPolicy: MessageFns<OSPolicy> = {
  encode(message: OSPolicy, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    if (message.description !== "") {
      writer.uint32(18).string(message.description);
    }
    if (message.mode !== 0) {
      writer.uint32(24).int32(message.mode);
    }
    for (const v of message.resourceGroups) {
      OSPolicy_ResourceGroup.encode(v!, writer.uint32(34).fork()).join();
    }
    if (message.allowNoResourceGroupMatch !== false) {
      writer.uint32(40).bool(message.allowNoResourceGroupMatch);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.id = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.description = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.mode = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.resourceGroups.push(OSPolicy_ResourceGroup.decode(reader, reader.uint32()));
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.allowNoResourceGroupMatch = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy {
    return {
      id: isSet(object.id) ? globalThis.String(object.id) : "",
      description: isSet(object.description) ? globalThis.String(object.description) : "",
      mode: isSet(object.mode) ? oSPolicy_ModeFromJSON(object.mode) : 0,
      resourceGroups: globalThis.Array.isArray(object?.resourceGroups)
        ? object.resourceGroups.map((e: any) => OSPolicy_ResourceGroup.fromJSON(e))
        : [],
      allowNoResourceGroupMatch: isSet(object.allowNoResourceGroupMatch)
        ? globalThis.Boolean(object.allowNoResourceGroupMatch)
        : false,
    };
  },

  toJSON(message: OSPolicy): unknown {
    const obj: any = {};
    if (message.id !== "") {
      obj.id = message.id;
    }
    if (message.description !== "") {
      obj.description = message.description;
    }
    if (message.mode !== 0) {
      obj.mode = oSPolicy_ModeToJSON(message.mode);
    }
    if (message.resourceGroups?.length) {
      obj.resourceGroups = message.resourceGroups.map((e) => OSPolicy_ResourceGroup.toJSON(e));
    }
    if (message.allowNoResourceGroupMatch !== false) {
      obj.allowNoResourceGroupMatch = message.allowNoResourceGroupMatch;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy>): OSPolicy {
    return OSPolicy.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy>): OSPolicy {
    const message = createBaseOSPolicy();
    message.id = object.id ?? "";
    message.description = object.description ?? "";
    message.mode = object.mode ?? 0;
    message.resourceGroups = object.resourceGroups?.map((e) => OSPolicy_ResourceGroup.fromPartial(e)) || [];
    message.allowNoResourceGroupMatch = object.allowNoResourceGroupMatch ?? false;
    return message;
  },
};

function createBaseOSPolicy_OSFilter(): OSPolicy_OSFilter {
  return { osShortName: "", osVersion: "" };
}

export const OSPolicy_OSFilter: MessageFns<OSPolicy_OSFilter> = {
  encode(message: OSPolicy_OSFilter, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.osShortName !== "") {
      writer.uint32(10).string(message.osShortName);
    }
    if (message.osVersion !== "") {
      writer.uint32(18).string(message.osVersion);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_OSFilter {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_OSFilter();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.osShortName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.osVersion = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_OSFilter {
    return {
      osShortName: isSet(object.osShortName) ? globalThis.String(object.osShortName) : "",
      osVersion: isSet(object.osVersion) ? globalThis.String(object.osVersion) : "",
    };
  },

  toJSON(message: OSPolicy_OSFilter): unknown {
    const obj: any = {};
    if (message.osShortName !== "") {
      obj.osShortName = message.osShortName;
    }
    if (message.osVersion !== "") {
      obj.osVersion = message.osVersion;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_OSFilter>): OSPolicy_OSFilter {
    return OSPolicy_OSFilter.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_OSFilter>): OSPolicy_OSFilter {
    const message = createBaseOSPolicy_OSFilter();
    message.osShortName = object.osShortName ?? "";
    message.osVersion = object.osVersion ?? "";
    return message;
  },
};

function createBaseOSPolicy_InventoryFilter(): OSPolicy_InventoryFilter {
  return { osShortName: "", osVersion: "" };
}

export const OSPolicy_InventoryFilter: MessageFns<OSPolicy_InventoryFilter> = {
  encode(message: OSPolicy_InventoryFilter, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.osShortName !== "") {
      writer.uint32(10).string(message.osShortName);
    }
    if (message.osVersion !== "") {
      writer.uint32(18).string(message.osVersion);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_InventoryFilter {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_InventoryFilter();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.osShortName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.osVersion = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_InventoryFilter {
    return {
      osShortName: isSet(object.osShortName) ? globalThis.String(object.osShortName) : "",
      osVersion: isSet(object.osVersion) ? globalThis.String(object.osVersion) : "",
    };
  },

  toJSON(message: OSPolicy_InventoryFilter): unknown {
    const obj: any = {};
    if (message.osShortName !== "") {
      obj.osShortName = message.osShortName;
    }
    if (message.osVersion !== "") {
      obj.osVersion = message.osVersion;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_InventoryFilter>): OSPolicy_InventoryFilter {
    return OSPolicy_InventoryFilter.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_InventoryFilter>): OSPolicy_InventoryFilter {
    const message = createBaseOSPolicy_InventoryFilter();
    message.osShortName = object.osShortName ?? "";
    message.osVersion = object.osVersion ?? "";
    return message;
  },
};

function createBaseOSPolicy_Resource(): OSPolicy_Resource {
  return { id: "", pkg: undefined, repository: undefined, exec: undefined, file: undefined };
}

export const OSPolicy_Resource: MessageFns<OSPolicy_Resource> = {
  encode(message: OSPolicy_Resource, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    if (message.pkg !== undefined) {
      OSPolicy_Resource_PackageResource.encode(message.pkg, writer.uint32(18).fork()).join();
    }
    if (message.repository !== undefined) {
      OSPolicy_Resource_RepositoryResource.encode(message.repository, writer.uint32(26).fork()).join();
    }
    if (message.exec !== undefined) {
      OSPolicy_Resource_ExecResource.encode(message.exec, writer.uint32(34).fork()).join();
    }
    if (message.file !== undefined) {
      OSPolicy_Resource_FileResource.encode(message.file, writer.uint32(42).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.id = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.pkg = OSPolicy_Resource_PackageResource.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.repository = OSPolicy_Resource_RepositoryResource.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.exec = OSPolicy_Resource_ExecResource.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.file = OSPolicy_Resource_FileResource.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource {
    return {
      id: isSet(object.id) ? globalThis.String(object.id) : "",
      pkg: isSet(object.pkg) ? OSPolicy_Resource_PackageResource.fromJSON(object.pkg) : undefined,
      repository: isSet(object.repository)
        ? OSPolicy_Resource_RepositoryResource.fromJSON(object.repository)
        : undefined,
      exec: isSet(object.exec) ? OSPolicy_Resource_ExecResource.fromJSON(object.exec) : undefined,
      file: isSet(object.file) ? OSPolicy_Resource_FileResource.fromJSON(object.file) : undefined,
    };
  },

  toJSON(message: OSPolicy_Resource): unknown {
    const obj: any = {};
    if (message.id !== "") {
      obj.id = message.id;
    }
    if (message.pkg !== undefined) {
      obj.pkg = OSPolicy_Resource_PackageResource.toJSON(message.pkg);
    }
    if (message.repository !== undefined) {
      obj.repository = OSPolicy_Resource_RepositoryResource.toJSON(message.repository);
    }
    if (message.exec !== undefined) {
      obj.exec = OSPolicy_Resource_ExecResource.toJSON(message.exec);
    }
    if (message.file !== undefined) {
      obj.file = OSPolicy_Resource_FileResource.toJSON(message.file);
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource>): OSPolicy_Resource {
    return OSPolicy_Resource.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource>): OSPolicy_Resource {
    const message = createBaseOSPolicy_Resource();
    message.id = object.id ?? "";
    message.pkg = (object.pkg !== undefined && object.pkg !== null)
      ? OSPolicy_Resource_PackageResource.fromPartial(object.pkg)
      : undefined;
    message.repository = (object.repository !== undefined && object.repository !== null)
      ? OSPolicy_Resource_RepositoryResource.fromPartial(object.repository)
      : undefined;
    message.exec = (object.exec !== undefined && object.exec !== null)
      ? OSPolicy_Resource_ExecResource.fromPartial(object.exec)
      : undefined;
    message.file = (object.file !== undefined && object.file !== null)
      ? OSPolicy_Resource_FileResource.fromPartial(object.file)
      : undefined;
    return message;
  },
};

function createBaseOSPolicy_Resource_File(): OSPolicy_Resource_File {
  return { remote: undefined, gcs: undefined, localPath: undefined, allowInsecure: false };
}

export const OSPolicy_Resource_File: MessageFns<OSPolicy_Resource_File> = {
  encode(message: OSPolicy_Resource_File, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.remote !== undefined) {
      OSPolicy_Resource_File_Remote.encode(message.remote, writer.uint32(10).fork()).join();
    }
    if (message.gcs !== undefined) {
      OSPolicy_Resource_File_Gcs.encode(message.gcs, writer.uint32(18).fork()).join();
    }
    if (message.localPath !== undefined) {
      writer.uint32(26).string(message.localPath);
    }
    if (message.allowInsecure !== false) {
      writer.uint32(32).bool(message.allowInsecure);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_File {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_File();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.remote = OSPolicy_Resource_File_Remote.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.gcs = OSPolicy_Resource_File_Gcs.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.localPath = reader.string();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.allowInsecure = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_File {
    return {
      remote: isSet(object.remote) ? OSPolicy_Resource_File_Remote.fromJSON(object.remote) : undefined,
      gcs: isSet(object.gcs) ? OSPolicy_Resource_File_Gcs.fromJSON(object.gcs) : undefined,
      localPath: isSet(object.localPath) ? globalThis.String(object.localPath) : undefined,
      allowInsecure: isSet(object.allowInsecure) ? globalThis.Boolean(object.allowInsecure) : false,
    };
  },

  toJSON(message: OSPolicy_Resource_File): unknown {
    const obj: any = {};
    if (message.remote !== undefined) {
      obj.remote = OSPolicy_Resource_File_Remote.toJSON(message.remote);
    }
    if (message.gcs !== undefined) {
      obj.gcs = OSPolicy_Resource_File_Gcs.toJSON(message.gcs);
    }
    if (message.localPath !== undefined) {
      obj.localPath = message.localPath;
    }
    if (message.allowInsecure !== false) {
      obj.allowInsecure = message.allowInsecure;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_File>): OSPolicy_Resource_File {
    return OSPolicy_Resource_File.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_File>): OSPolicy_Resource_File {
    const message = createBaseOSPolicy_Resource_File();
    message.remote = (object.remote !== undefined && object.remote !== null)
      ? OSPolicy_Resource_File_Remote.fromPartial(object.remote)
      : undefined;
    message.gcs = (object.gcs !== undefined && object.gcs !== null)
      ? OSPolicy_Resource_File_Gcs.fromPartial(object.gcs)
      : undefined;
    message.localPath = object.localPath ?? undefined;
    message.allowInsecure = object.allowInsecure ?? false;
    return message;
  },
};

function createBaseOSPolicy_Resource_File_Remote(): OSPolicy_Resource_File_Remote {
  return { uri: "", sha256Checksum: "" };
}

export const OSPolicy_Resource_File_Remote: MessageFns<OSPolicy_Resource_File_Remote> = {
  encode(message: OSPolicy_Resource_File_Remote, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.uri !== "") {
      writer.uint32(10).string(message.uri);
    }
    if (message.sha256Checksum !== "") {
      writer.uint32(18).string(message.sha256Checksum);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_File_Remote {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_File_Remote();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.uri = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.sha256Checksum = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_File_Remote {
    return {
      uri: isSet(object.uri) ? globalThis.String(object.uri) : "",
      sha256Checksum: isSet(object.sha256Checksum) ? globalThis.String(object.sha256Checksum) : "",
    };
  },

  toJSON(message: OSPolicy_Resource_File_Remote): unknown {
    const obj: any = {};
    if (message.uri !== "") {
      obj.uri = message.uri;
    }
    if (message.sha256Checksum !== "") {
      obj.sha256Checksum = message.sha256Checksum;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_File_Remote>): OSPolicy_Resource_File_Remote {
    return OSPolicy_Resource_File_Remote.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_File_Remote>): OSPolicy_Resource_File_Remote {
    const message = createBaseOSPolicy_Resource_File_Remote();
    message.uri = object.uri ?? "";
    message.sha256Checksum = object.sha256Checksum ?? "";
    return message;
  },
};

function createBaseOSPolicy_Resource_File_Gcs(): OSPolicy_Resource_File_Gcs {
  return { bucket: "", object: "", generation: Long.ZERO };
}

export const OSPolicy_Resource_File_Gcs: MessageFns<OSPolicy_Resource_File_Gcs> = {
  encode(message: OSPolicy_Resource_File_Gcs, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.bucket !== "") {
      writer.uint32(10).string(message.bucket);
    }
    if (message.object !== "") {
      writer.uint32(18).string(message.object);
    }
    if (!message.generation.equals(Long.ZERO)) {
      writer.uint32(24).int64(message.generation.toString());
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_File_Gcs {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_File_Gcs();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.bucket = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.object = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.generation = Long.fromString(reader.int64().toString());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_File_Gcs {
    return {
      bucket: isSet(object.bucket) ? globalThis.String(object.bucket) : "",
      object: isSet(object.object) ? globalThis.String(object.object) : "",
      generation: isSet(object.generation) ? Long.fromValue(object.generation) : Long.ZERO,
    };
  },

  toJSON(message: OSPolicy_Resource_File_Gcs): unknown {
    const obj: any = {};
    if (message.bucket !== "") {
      obj.bucket = message.bucket;
    }
    if (message.object !== "") {
      obj.object = message.object;
    }
    if (!message.generation.equals(Long.ZERO)) {
      obj.generation = (message.generation || Long.ZERO).toString();
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_File_Gcs>): OSPolicy_Resource_File_Gcs {
    return OSPolicy_Resource_File_Gcs.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_File_Gcs>): OSPolicy_Resource_File_Gcs {
    const message = createBaseOSPolicy_Resource_File_Gcs();
    message.bucket = object.bucket ?? "";
    message.object = object.object ?? "";
    message.generation = (object.generation !== undefined && object.generation !== null)
      ? Long.fromValue(object.generation)
      : Long.ZERO;
    return message;
  },
};

function createBaseOSPolicy_Resource_PackageResource(): OSPolicy_Resource_PackageResource {
  return {
    desiredState: 0,
    apt: undefined,
    deb: undefined,
    yum: undefined,
    zypper: undefined,
    rpm: undefined,
    googet: undefined,
    msi: undefined,
  };
}

export const OSPolicy_Resource_PackageResource: MessageFns<OSPolicy_Resource_PackageResource> = {
  encode(message: OSPolicy_Resource_PackageResource, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.desiredState !== 0) {
      writer.uint32(8).int32(message.desiredState);
    }
    if (message.apt !== undefined) {
      OSPolicy_Resource_PackageResource_APT.encode(message.apt, writer.uint32(18).fork()).join();
    }
    if (message.deb !== undefined) {
      OSPolicy_Resource_PackageResource_Deb.encode(message.deb, writer.uint32(26).fork()).join();
    }
    if (message.yum !== undefined) {
      OSPolicy_Resource_PackageResource_YUM.encode(message.yum, writer.uint32(34).fork()).join();
    }
    if (message.zypper !== undefined) {
      OSPolicy_Resource_PackageResource_Zypper.encode(message.zypper, writer.uint32(42).fork()).join();
    }
    if (message.rpm !== undefined) {
      OSPolicy_Resource_PackageResource_RPM.encode(message.rpm, writer.uint32(50).fork()).join();
    }
    if (message.googet !== undefined) {
      OSPolicy_Resource_PackageResource_GooGet.encode(message.googet, writer.uint32(58).fork()).join();
    }
    if (message.msi !== undefined) {
      OSPolicy_Resource_PackageResource_MSI.encode(message.msi, writer.uint32(66).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_PackageResource {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_PackageResource();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.desiredState = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.apt = OSPolicy_Resource_PackageResource_APT.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.deb = OSPolicy_Resource_PackageResource_Deb.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.yum = OSPolicy_Resource_PackageResource_YUM.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.zypper = OSPolicy_Resource_PackageResource_Zypper.decode(reader, reader.uint32());
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.rpm = OSPolicy_Resource_PackageResource_RPM.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.googet = OSPolicy_Resource_PackageResource_GooGet.decode(reader, reader.uint32());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.msi = OSPolicy_Resource_PackageResource_MSI.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_PackageResource {
    return {
      desiredState: isSet(object.desiredState)
        ? oSPolicy_Resource_PackageResource_DesiredStateFromJSON(object.desiredState)
        : 0,
      apt: isSet(object.apt) ? OSPolicy_Resource_PackageResource_APT.fromJSON(object.apt) : undefined,
      deb: isSet(object.deb) ? OSPolicy_Resource_PackageResource_Deb.fromJSON(object.deb) : undefined,
      yum: isSet(object.yum) ? OSPolicy_Resource_PackageResource_YUM.fromJSON(object.yum) : undefined,
      zypper: isSet(object.zypper) ? OSPolicy_Resource_PackageResource_Zypper.fromJSON(object.zypper) : undefined,
      rpm: isSet(object.rpm) ? OSPolicy_Resource_PackageResource_RPM.fromJSON(object.rpm) : undefined,
      googet: isSet(object.googet) ? OSPolicy_Resource_PackageResource_GooGet.fromJSON(object.googet) : undefined,
      msi: isSet(object.msi) ? OSPolicy_Resource_PackageResource_MSI.fromJSON(object.msi) : undefined,
    };
  },

  toJSON(message: OSPolicy_Resource_PackageResource): unknown {
    const obj: any = {};
    if (message.desiredState !== 0) {
      obj.desiredState = oSPolicy_Resource_PackageResource_DesiredStateToJSON(message.desiredState);
    }
    if (message.apt !== undefined) {
      obj.apt = OSPolicy_Resource_PackageResource_APT.toJSON(message.apt);
    }
    if (message.deb !== undefined) {
      obj.deb = OSPolicy_Resource_PackageResource_Deb.toJSON(message.deb);
    }
    if (message.yum !== undefined) {
      obj.yum = OSPolicy_Resource_PackageResource_YUM.toJSON(message.yum);
    }
    if (message.zypper !== undefined) {
      obj.zypper = OSPolicy_Resource_PackageResource_Zypper.toJSON(message.zypper);
    }
    if (message.rpm !== undefined) {
      obj.rpm = OSPolicy_Resource_PackageResource_RPM.toJSON(message.rpm);
    }
    if (message.googet !== undefined) {
      obj.googet = OSPolicy_Resource_PackageResource_GooGet.toJSON(message.googet);
    }
    if (message.msi !== undefined) {
      obj.msi = OSPolicy_Resource_PackageResource_MSI.toJSON(message.msi);
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_PackageResource>): OSPolicy_Resource_PackageResource {
    return OSPolicy_Resource_PackageResource.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_PackageResource>): OSPolicy_Resource_PackageResource {
    const message = createBaseOSPolicy_Resource_PackageResource();
    message.desiredState = object.desiredState ?? 0;
    message.apt = (object.apt !== undefined && object.apt !== null)
      ? OSPolicy_Resource_PackageResource_APT.fromPartial(object.apt)
      : undefined;
    message.deb = (object.deb !== undefined && object.deb !== null)
      ? OSPolicy_Resource_PackageResource_Deb.fromPartial(object.deb)
      : undefined;
    message.yum = (object.yum !== undefined && object.yum !== null)
      ? OSPolicy_Resource_PackageResource_YUM.fromPartial(object.yum)
      : undefined;
    message.zypper = (object.zypper !== undefined && object.zypper !== null)
      ? OSPolicy_Resource_PackageResource_Zypper.fromPartial(object.zypper)
      : undefined;
    message.rpm = (object.rpm !== undefined && object.rpm !== null)
      ? OSPolicy_Resource_PackageResource_RPM.fromPartial(object.rpm)
      : undefined;
    message.googet = (object.googet !== undefined && object.googet !== null)
      ? OSPolicy_Resource_PackageResource_GooGet.fromPartial(object.googet)
      : undefined;
    message.msi = (object.msi !== undefined && object.msi !== null)
      ? OSPolicy_Resource_PackageResource_MSI.fromPartial(object.msi)
      : undefined;
    return message;
  },
};

function createBaseOSPolicy_Resource_PackageResource_Deb(): OSPolicy_Resource_PackageResource_Deb {
  return { source: undefined, pullDeps: false };
}

export const OSPolicy_Resource_PackageResource_Deb: MessageFns<OSPolicy_Resource_PackageResource_Deb> = {
  encode(message: OSPolicy_Resource_PackageResource_Deb, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.source !== undefined) {
      OSPolicy_Resource_File.encode(message.source, writer.uint32(10).fork()).join();
    }
    if (message.pullDeps !== false) {
      writer.uint32(16).bool(message.pullDeps);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_PackageResource_Deb {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_PackageResource_Deb();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.source = OSPolicy_Resource_File.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.pullDeps = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_PackageResource_Deb {
    return {
      source: isSet(object.source) ? OSPolicy_Resource_File.fromJSON(object.source) : undefined,
      pullDeps: isSet(object.pullDeps) ? globalThis.Boolean(object.pullDeps) : false,
    };
  },

  toJSON(message: OSPolicy_Resource_PackageResource_Deb): unknown {
    const obj: any = {};
    if (message.source !== undefined) {
      obj.source = OSPolicy_Resource_File.toJSON(message.source);
    }
    if (message.pullDeps !== false) {
      obj.pullDeps = message.pullDeps;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_PackageResource_Deb>): OSPolicy_Resource_PackageResource_Deb {
    return OSPolicy_Resource_PackageResource_Deb.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_PackageResource_Deb>): OSPolicy_Resource_PackageResource_Deb {
    const message = createBaseOSPolicy_Resource_PackageResource_Deb();
    message.source = (object.source !== undefined && object.source !== null)
      ? OSPolicy_Resource_File.fromPartial(object.source)
      : undefined;
    message.pullDeps = object.pullDeps ?? false;
    return message;
  },
};

function createBaseOSPolicy_Resource_PackageResource_APT(): OSPolicy_Resource_PackageResource_APT {
  return { name: "" };
}

export const OSPolicy_Resource_PackageResource_APT: MessageFns<OSPolicy_Resource_PackageResource_APT> = {
  encode(message: OSPolicy_Resource_PackageResource_APT, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_PackageResource_APT {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_PackageResource_APT();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_PackageResource_APT {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: OSPolicy_Resource_PackageResource_APT): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_PackageResource_APT>): OSPolicy_Resource_PackageResource_APT {
    return OSPolicy_Resource_PackageResource_APT.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_PackageResource_APT>): OSPolicy_Resource_PackageResource_APT {
    const message = createBaseOSPolicy_Resource_PackageResource_APT();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseOSPolicy_Resource_PackageResource_RPM(): OSPolicy_Resource_PackageResource_RPM {
  return { source: undefined, pullDeps: false };
}

export const OSPolicy_Resource_PackageResource_RPM: MessageFns<OSPolicy_Resource_PackageResource_RPM> = {
  encode(message: OSPolicy_Resource_PackageResource_RPM, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.source !== undefined) {
      OSPolicy_Resource_File.encode(message.source, writer.uint32(10).fork()).join();
    }
    if (message.pullDeps !== false) {
      writer.uint32(16).bool(message.pullDeps);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_PackageResource_RPM {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_PackageResource_RPM();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.source = OSPolicy_Resource_File.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.pullDeps = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_PackageResource_RPM {
    return {
      source: isSet(object.source) ? OSPolicy_Resource_File.fromJSON(object.source) : undefined,
      pullDeps: isSet(object.pullDeps) ? globalThis.Boolean(object.pullDeps) : false,
    };
  },

  toJSON(message: OSPolicy_Resource_PackageResource_RPM): unknown {
    const obj: any = {};
    if (message.source !== undefined) {
      obj.source = OSPolicy_Resource_File.toJSON(message.source);
    }
    if (message.pullDeps !== false) {
      obj.pullDeps = message.pullDeps;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_PackageResource_RPM>): OSPolicy_Resource_PackageResource_RPM {
    return OSPolicy_Resource_PackageResource_RPM.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_PackageResource_RPM>): OSPolicy_Resource_PackageResource_RPM {
    const message = createBaseOSPolicy_Resource_PackageResource_RPM();
    message.source = (object.source !== undefined && object.source !== null)
      ? OSPolicy_Resource_File.fromPartial(object.source)
      : undefined;
    message.pullDeps = object.pullDeps ?? false;
    return message;
  },
};

function createBaseOSPolicy_Resource_PackageResource_YUM(): OSPolicy_Resource_PackageResource_YUM {
  return { name: "" };
}

export const OSPolicy_Resource_PackageResource_YUM: MessageFns<OSPolicy_Resource_PackageResource_YUM> = {
  encode(message: OSPolicy_Resource_PackageResource_YUM, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_PackageResource_YUM {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_PackageResource_YUM();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_PackageResource_YUM {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: OSPolicy_Resource_PackageResource_YUM): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_PackageResource_YUM>): OSPolicy_Resource_PackageResource_YUM {
    return OSPolicy_Resource_PackageResource_YUM.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_PackageResource_YUM>): OSPolicy_Resource_PackageResource_YUM {
    const message = createBaseOSPolicy_Resource_PackageResource_YUM();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseOSPolicy_Resource_PackageResource_Zypper(): OSPolicy_Resource_PackageResource_Zypper {
  return { name: "" };
}

export const OSPolicy_Resource_PackageResource_Zypper: MessageFns<OSPolicy_Resource_PackageResource_Zypper> = {
  encode(message: OSPolicy_Resource_PackageResource_Zypper, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_PackageResource_Zypper {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_PackageResource_Zypper();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_PackageResource_Zypper {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: OSPolicy_Resource_PackageResource_Zypper): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_PackageResource_Zypper>): OSPolicy_Resource_PackageResource_Zypper {
    return OSPolicy_Resource_PackageResource_Zypper.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_PackageResource_Zypper>): OSPolicy_Resource_PackageResource_Zypper {
    const message = createBaseOSPolicy_Resource_PackageResource_Zypper();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseOSPolicy_Resource_PackageResource_GooGet(): OSPolicy_Resource_PackageResource_GooGet {
  return { name: "" };
}

export const OSPolicy_Resource_PackageResource_GooGet: MessageFns<OSPolicy_Resource_PackageResource_GooGet> = {
  encode(message: OSPolicy_Resource_PackageResource_GooGet, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_PackageResource_GooGet {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_PackageResource_GooGet();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_PackageResource_GooGet {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: OSPolicy_Resource_PackageResource_GooGet): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_PackageResource_GooGet>): OSPolicy_Resource_PackageResource_GooGet {
    return OSPolicy_Resource_PackageResource_GooGet.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_PackageResource_GooGet>): OSPolicy_Resource_PackageResource_GooGet {
    const message = createBaseOSPolicy_Resource_PackageResource_GooGet();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseOSPolicy_Resource_PackageResource_MSI(): OSPolicy_Resource_PackageResource_MSI {
  return { source: undefined, properties: [] };
}

export const OSPolicy_Resource_PackageResource_MSI: MessageFns<OSPolicy_Resource_PackageResource_MSI> = {
  encode(message: OSPolicy_Resource_PackageResource_MSI, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.source !== undefined) {
      OSPolicy_Resource_File.encode(message.source, writer.uint32(10).fork()).join();
    }
    for (const v of message.properties) {
      writer.uint32(18).string(v!);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_PackageResource_MSI {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_PackageResource_MSI();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.source = OSPolicy_Resource_File.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.properties.push(reader.string());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_PackageResource_MSI {
    return {
      source: isSet(object.source) ? OSPolicy_Resource_File.fromJSON(object.source) : undefined,
      properties: globalThis.Array.isArray(object?.properties)
        ? object.properties.map((e: any) => globalThis.String(e))
        : [],
    };
  },

  toJSON(message: OSPolicy_Resource_PackageResource_MSI): unknown {
    const obj: any = {};
    if (message.source !== undefined) {
      obj.source = OSPolicy_Resource_File.toJSON(message.source);
    }
    if (message.properties?.length) {
      obj.properties = message.properties;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_PackageResource_MSI>): OSPolicy_Resource_PackageResource_MSI {
    return OSPolicy_Resource_PackageResource_MSI.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_PackageResource_MSI>): OSPolicy_Resource_PackageResource_MSI {
    const message = createBaseOSPolicy_Resource_PackageResource_MSI();
    message.source = (object.source !== undefined && object.source !== null)
      ? OSPolicy_Resource_File.fromPartial(object.source)
      : undefined;
    message.properties = object.properties?.map((e) => e) || [];
    return message;
  },
};

function createBaseOSPolicy_Resource_RepositoryResource(): OSPolicy_Resource_RepositoryResource {
  return { apt: undefined, yum: undefined, zypper: undefined, goo: undefined };
}

export const OSPolicy_Resource_RepositoryResource: MessageFns<OSPolicy_Resource_RepositoryResource> = {
  encode(message: OSPolicy_Resource_RepositoryResource, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.apt !== undefined) {
      OSPolicy_Resource_RepositoryResource_AptRepository.encode(message.apt, writer.uint32(10).fork()).join();
    }
    if (message.yum !== undefined) {
      OSPolicy_Resource_RepositoryResource_YumRepository.encode(message.yum, writer.uint32(18).fork()).join();
    }
    if (message.zypper !== undefined) {
      OSPolicy_Resource_RepositoryResource_ZypperRepository.encode(message.zypper, writer.uint32(26).fork()).join();
    }
    if (message.goo !== undefined) {
      OSPolicy_Resource_RepositoryResource_GooRepository.encode(message.goo, writer.uint32(34).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_RepositoryResource {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_RepositoryResource();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.apt = OSPolicy_Resource_RepositoryResource_AptRepository.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.yum = OSPolicy_Resource_RepositoryResource_YumRepository.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.zypper = OSPolicy_Resource_RepositoryResource_ZypperRepository.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.goo = OSPolicy_Resource_RepositoryResource_GooRepository.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_RepositoryResource {
    return {
      apt: isSet(object.apt) ? OSPolicy_Resource_RepositoryResource_AptRepository.fromJSON(object.apt) : undefined,
      yum: isSet(object.yum) ? OSPolicy_Resource_RepositoryResource_YumRepository.fromJSON(object.yum) : undefined,
      zypper: isSet(object.zypper)
        ? OSPolicy_Resource_RepositoryResource_ZypperRepository.fromJSON(object.zypper)
        : undefined,
      goo: isSet(object.goo) ? OSPolicy_Resource_RepositoryResource_GooRepository.fromJSON(object.goo) : undefined,
    };
  },

  toJSON(message: OSPolicy_Resource_RepositoryResource): unknown {
    const obj: any = {};
    if (message.apt !== undefined) {
      obj.apt = OSPolicy_Resource_RepositoryResource_AptRepository.toJSON(message.apt);
    }
    if (message.yum !== undefined) {
      obj.yum = OSPolicy_Resource_RepositoryResource_YumRepository.toJSON(message.yum);
    }
    if (message.zypper !== undefined) {
      obj.zypper = OSPolicy_Resource_RepositoryResource_ZypperRepository.toJSON(message.zypper);
    }
    if (message.goo !== undefined) {
      obj.goo = OSPolicy_Resource_RepositoryResource_GooRepository.toJSON(message.goo);
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_RepositoryResource>): OSPolicy_Resource_RepositoryResource {
    return OSPolicy_Resource_RepositoryResource.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_RepositoryResource>): OSPolicy_Resource_RepositoryResource {
    const message = createBaseOSPolicy_Resource_RepositoryResource();
    message.apt = (object.apt !== undefined && object.apt !== null)
      ? OSPolicy_Resource_RepositoryResource_AptRepository.fromPartial(object.apt)
      : undefined;
    message.yum = (object.yum !== undefined && object.yum !== null)
      ? OSPolicy_Resource_RepositoryResource_YumRepository.fromPartial(object.yum)
      : undefined;
    message.zypper = (object.zypper !== undefined && object.zypper !== null)
      ? OSPolicy_Resource_RepositoryResource_ZypperRepository.fromPartial(object.zypper)
      : undefined;
    message.goo = (object.goo !== undefined && object.goo !== null)
      ? OSPolicy_Resource_RepositoryResource_GooRepository.fromPartial(object.goo)
      : undefined;
    return message;
  },
};

function createBaseOSPolicy_Resource_RepositoryResource_AptRepository(): OSPolicy_Resource_RepositoryResource_AptRepository {
  return { archiveType: 0, uri: "", distribution: "", components: [], gpgKey: "" };
}

export const OSPolicy_Resource_RepositoryResource_AptRepository: MessageFns<
  OSPolicy_Resource_RepositoryResource_AptRepository
> = {
  encode(
    message: OSPolicy_Resource_RepositoryResource_AptRepository,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.archiveType !== 0) {
      writer.uint32(8).int32(message.archiveType);
    }
    if (message.uri !== "") {
      writer.uint32(18).string(message.uri);
    }
    if (message.distribution !== "") {
      writer.uint32(26).string(message.distribution);
    }
    for (const v of message.components) {
      writer.uint32(34).string(v!);
    }
    if (message.gpgKey !== "") {
      writer.uint32(42).string(message.gpgKey);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_RepositoryResource_AptRepository {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_RepositoryResource_AptRepository();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.archiveType = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.uri = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.distribution = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.components.push(reader.string());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.gpgKey = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_RepositoryResource_AptRepository {
    return {
      archiveType: isSet(object.archiveType)
        ? oSPolicy_Resource_RepositoryResource_AptRepository_ArchiveTypeFromJSON(object.archiveType)
        : 0,
      uri: isSet(object.uri) ? globalThis.String(object.uri) : "",
      distribution: isSet(object.distribution) ? globalThis.String(object.distribution) : "",
      components: globalThis.Array.isArray(object?.components)
        ? object.components.map((e: any) => globalThis.String(e))
        : [],
      gpgKey: isSet(object.gpgKey) ? globalThis.String(object.gpgKey) : "",
    };
  },

  toJSON(message: OSPolicy_Resource_RepositoryResource_AptRepository): unknown {
    const obj: any = {};
    if (message.archiveType !== 0) {
      obj.archiveType = oSPolicy_Resource_RepositoryResource_AptRepository_ArchiveTypeToJSON(message.archiveType);
    }
    if (message.uri !== "") {
      obj.uri = message.uri;
    }
    if (message.distribution !== "") {
      obj.distribution = message.distribution;
    }
    if (message.components?.length) {
      obj.components = message.components;
    }
    if (message.gpgKey !== "") {
      obj.gpgKey = message.gpgKey;
    }
    return obj;
  },

  create(
    base?: DeepPartial<OSPolicy_Resource_RepositoryResource_AptRepository>,
  ): OSPolicy_Resource_RepositoryResource_AptRepository {
    return OSPolicy_Resource_RepositoryResource_AptRepository.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<OSPolicy_Resource_RepositoryResource_AptRepository>,
  ): OSPolicy_Resource_RepositoryResource_AptRepository {
    const message = createBaseOSPolicy_Resource_RepositoryResource_AptRepository();
    message.archiveType = object.archiveType ?? 0;
    message.uri = object.uri ?? "";
    message.distribution = object.distribution ?? "";
    message.components = object.components?.map((e) => e) || [];
    message.gpgKey = object.gpgKey ?? "";
    return message;
  },
};

function createBaseOSPolicy_Resource_RepositoryResource_YumRepository(): OSPolicy_Resource_RepositoryResource_YumRepository {
  return { id: "", displayName: "", baseUrl: "", gpgKeys: [] };
}

export const OSPolicy_Resource_RepositoryResource_YumRepository: MessageFns<
  OSPolicy_Resource_RepositoryResource_YumRepository
> = {
  encode(
    message: OSPolicy_Resource_RepositoryResource_YumRepository,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    if (message.displayName !== "") {
      writer.uint32(18).string(message.displayName);
    }
    if (message.baseUrl !== "") {
      writer.uint32(26).string(message.baseUrl);
    }
    for (const v of message.gpgKeys) {
      writer.uint32(34).string(v!);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_RepositoryResource_YumRepository {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_RepositoryResource_YumRepository();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.id = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.displayName = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.baseUrl = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.gpgKeys.push(reader.string());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_RepositoryResource_YumRepository {
    return {
      id: isSet(object.id) ? globalThis.String(object.id) : "",
      displayName: isSet(object.displayName) ? globalThis.String(object.displayName) : "",
      baseUrl: isSet(object.baseUrl) ? globalThis.String(object.baseUrl) : "",
      gpgKeys: globalThis.Array.isArray(object?.gpgKeys) ? object.gpgKeys.map((e: any) => globalThis.String(e)) : [],
    };
  },

  toJSON(message: OSPolicy_Resource_RepositoryResource_YumRepository): unknown {
    const obj: any = {};
    if (message.id !== "") {
      obj.id = message.id;
    }
    if (message.displayName !== "") {
      obj.displayName = message.displayName;
    }
    if (message.baseUrl !== "") {
      obj.baseUrl = message.baseUrl;
    }
    if (message.gpgKeys?.length) {
      obj.gpgKeys = message.gpgKeys;
    }
    return obj;
  },

  create(
    base?: DeepPartial<OSPolicy_Resource_RepositoryResource_YumRepository>,
  ): OSPolicy_Resource_RepositoryResource_YumRepository {
    return OSPolicy_Resource_RepositoryResource_YumRepository.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<OSPolicy_Resource_RepositoryResource_YumRepository>,
  ): OSPolicy_Resource_RepositoryResource_YumRepository {
    const message = createBaseOSPolicy_Resource_RepositoryResource_YumRepository();
    message.id = object.id ?? "";
    message.displayName = object.displayName ?? "";
    message.baseUrl = object.baseUrl ?? "";
    message.gpgKeys = object.gpgKeys?.map((e) => e) || [];
    return message;
  },
};

function createBaseOSPolicy_Resource_RepositoryResource_ZypperRepository(): OSPolicy_Resource_RepositoryResource_ZypperRepository {
  return { id: "", displayName: "", baseUrl: "", gpgKeys: [] };
}

export const OSPolicy_Resource_RepositoryResource_ZypperRepository: MessageFns<
  OSPolicy_Resource_RepositoryResource_ZypperRepository
> = {
  encode(
    message: OSPolicy_Resource_RepositoryResource_ZypperRepository,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    if (message.displayName !== "") {
      writer.uint32(18).string(message.displayName);
    }
    if (message.baseUrl !== "") {
      writer.uint32(26).string(message.baseUrl);
    }
    for (const v of message.gpgKeys) {
      writer.uint32(34).string(v!);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_RepositoryResource_ZypperRepository {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_RepositoryResource_ZypperRepository();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.id = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.displayName = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.baseUrl = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.gpgKeys.push(reader.string());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_RepositoryResource_ZypperRepository {
    return {
      id: isSet(object.id) ? globalThis.String(object.id) : "",
      displayName: isSet(object.displayName) ? globalThis.String(object.displayName) : "",
      baseUrl: isSet(object.baseUrl) ? globalThis.String(object.baseUrl) : "",
      gpgKeys: globalThis.Array.isArray(object?.gpgKeys) ? object.gpgKeys.map((e: any) => globalThis.String(e)) : [],
    };
  },

  toJSON(message: OSPolicy_Resource_RepositoryResource_ZypperRepository): unknown {
    const obj: any = {};
    if (message.id !== "") {
      obj.id = message.id;
    }
    if (message.displayName !== "") {
      obj.displayName = message.displayName;
    }
    if (message.baseUrl !== "") {
      obj.baseUrl = message.baseUrl;
    }
    if (message.gpgKeys?.length) {
      obj.gpgKeys = message.gpgKeys;
    }
    return obj;
  },

  create(
    base?: DeepPartial<OSPolicy_Resource_RepositoryResource_ZypperRepository>,
  ): OSPolicy_Resource_RepositoryResource_ZypperRepository {
    return OSPolicy_Resource_RepositoryResource_ZypperRepository.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<OSPolicy_Resource_RepositoryResource_ZypperRepository>,
  ): OSPolicy_Resource_RepositoryResource_ZypperRepository {
    const message = createBaseOSPolicy_Resource_RepositoryResource_ZypperRepository();
    message.id = object.id ?? "";
    message.displayName = object.displayName ?? "";
    message.baseUrl = object.baseUrl ?? "";
    message.gpgKeys = object.gpgKeys?.map((e) => e) || [];
    return message;
  },
};

function createBaseOSPolicy_Resource_RepositoryResource_GooRepository(): OSPolicy_Resource_RepositoryResource_GooRepository {
  return { name: "", url: "" };
}

export const OSPolicy_Resource_RepositoryResource_GooRepository: MessageFns<
  OSPolicy_Resource_RepositoryResource_GooRepository
> = {
  encode(
    message: OSPolicy_Resource_RepositoryResource_GooRepository,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    if (message.url !== "") {
      writer.uint32(18).string(message.url);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_RepositoryResource_GooRepository {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_RepositoryResource_GooRepository();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.url = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_RepositoryResource_GooRepository {
    return {
      name: isSet(object.name) ? globalThis.String(object.name) : "",
      url: isSet(object.url) ? globalThis.String(object.url) : "",
    };
  },

  toJSON(message: OSPolicy_Resource_RepositoryResource_GooRepository): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    if (message.url !== "") {
      obj.url = message.url;
    }
    return obj;
  },

  create(
    base?: DeepPartial<OSPolicy_Resource_RepositoryResource_GooRepository>,
  ): OSPolicy_Resource_RepositoryResource_GooRepository {
    return OSPolicy_Resource_RepositoryResource_GooRepository.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<OSPolicy_Resource_RepositoryResource_GooRepository>,
  ): OSPolicy_Resource_RepositoryResource_GooRepository {
    const message = createBaseOSPolicy_Resource_RepositoryResource_GooRepository();
    message.name = object.name ?? "";
    message.url = object.url ?? "";
    return message;
  },
};

function createBaseOSPolicy_Resource_ExecResource(): OSPolicy_Resource_ExecResource {
  return { validate: undefined, enforce: undefined };
}

export const OSPolicy_Resource_ExecResource: MessageFns<OSPolicy_Resource_ExecResource> = {
  encode(message: OSPolicy_Resource_ExecResource, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.validate !== undefined) {
      OSPolicy_Resource_ExecResource_Exec.encode(message.validate, writer.uint32(10).fork()).join();
    }
    if (message.enforce !== undefined) {
      OSPolicy_Resource_ExecResource_Exec.encode(message.enforce, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_ExecResource {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_ExecResource();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.validate = OSPolicy_Resource_ExecResource_Exec.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.enforce = OSPolicy_Resource_ExecResource_Exec.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_ExecResource {
    return {
      validate: isSet(object.validate) ? OSPolicy_Resource_ExecResource_Exec.fromJSON(object.validate) : undefined,
      enforce: isSet(object.enforce) ? OSPolicy_Resource_ExecResource_Exec.fromJSON(object.enforce) : undefined,
    };
  },

  toJSON(message: OSPolicy_Resource_ExecResource): unknown {
    const obj: any = {};
    if (message.validate !== undefined) {
      obj.validate = OSPolicy_Resource_ExecResource_Exec.toJSON(message.validate);
    }
    if (message.enforce !== undefined) {
      obj.enforce = OSPolicy_Resource_ExecResource_Exec.toJSON(message.enforce);
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_ExecResource>): OSPolicy_Resource_ExecResource {
    return OSPolicy_Resource_ExecResource.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_ExecResource>): OSPolicy_Resource_ExecResource {
    const message = createBaseOSPolicy_Resource_ExecResource();
    message.validate = (object.validate !== undefined && object.validate !== null)
      ? OSPolicy_Resource_ExecResource_Exec.fromPartial(object.validate)
      : undefined;
    message.enforce = (object.enforce !== undefined && object.enforce !== null)
      ? OSPolicy_Resource_ExecResource_Exec.fromPartial(object.enforce)
      : undefined;
    return message;
  },
};

function createBaseOSPolicy_Resource_ExecResource_Exec(): OSPolicy_Resource_ExecResource_Exec {
  return { file: undefined, script: undefined, args: [], interpreter: 0, outputFilePath: "" };
}

export const OSPolicy_Resource_ExecResource_Exec: MessageFns<OSPolicy_Resource_ExecResource_Exec> = {
  encode(message: OSPolicy_Resource_ExecResource_Exec, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.file !== undefined) {
      OSPolicy_Resource_File.encode(message.file, writer.uint32(10).fork()).join();
    }
    if (message.script !== undefined) {
      writer.uint32(18).string(message.script);
    }
    for (const v of message.args) {
      writer.uint32(26).string(v!);
    }
    if (message.interpreter !== 0) {
      writer.uint32(32).int32(message.interpreter);
    }
    if (message.outputFilePath !== "") {
      writer.uint32(42).string(message.outputFilePath);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_ExecResource_Exec {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_ExecResource_Exec();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.file = OSPolicy_Resource_File.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.script = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.args.push(reader.string());
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.interpreter = reader.int32() as any;
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.outputFilePath = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_ExecResource_Exec {
    return {
      file: isSet(object.file) ? OSPolicy_Resource_File.fromJSON(object.file) : undefined,
      script: isSet(object.script) ? globalThis.String(object.script) : undefined,
      args: globalThis.Array.isArray(object?.args) ? object.args.map((e: any) => globalThis.String(e)) : [],
      interpreter: isSet(object.interpreter)
        ? oSPolicy_Resource_ExecResource_Exec_InterpreterFromJSON(object.interpreter)
        : 0,
      outputFilePath: isSet(object.outputFilePath) ? globalThis.String(object.outputFilePath) : "",
    };
  },

  toJSON(message: OSPolicy_Resource_ExecResource_Exec): unknown {
    const obj: any = {};
    if (message.file !== undefined) {
      obj.file = OSPolicy_Resource_File.toJSON(message.file);
    }
    if (message.script !== undefined) {
      obj.script = message.script;
    }
    if (message.args?.length) {
      obj.args = message.args;
    }
    if (message.interpreter !== 0) {
      obj.interpreter = oSPolicy_Resource_ExecResource_Exec_InterpreterToJSON(message.interpreter);
    }
    if (message.outputFilePath !== "") {
      obj.outputFilePath = message.outputFilePath;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_ExecResource_Exec>): OSPolicy_Resource_ExecResource_Exec {
    return OSPolicy_Resource_ExecResource_Exec.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_ExecResource_Exec>): OSPolicy_Resource_ExecResource_Exec {
    const message = createBaseOSPolicy_Resource_ExecResource_Exec();
    message.file = (object.file !== undefined && object.file !== null)
      ? OSPolicy_Resource_File.fromPartial(object.file)
      : undefined;
    message.script = object.script ?? undefined;
    message.args = object.args?.map((e) => e) || [];
    message.interpreter = object.interpreter ?? 0;
    message.outputFilePath = object.outputFilePath ?? "";
    return message;
  },
};

function createBaseOSPolicy_Resource_FileResource(): OSPolicy_Resource_FileResource {
  return { file: undefined, content: undefined, path: "", state: 0, permissions: "" };
}

export const OSPolicy_Resource_FileResource: MessageFns<OSPolicy_Resource_FileResource> = {
  encode(message: OSPolicy_Resource_FileResource, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.file !== undefined) {
      OSPolicy_Resource_File.encode(message.file, writer.uint32(10).fork()).join();
    }
    if (message.content !== undefined) {
      writer.uint32(18).string(message.content);
    }
    if (message.path !== "") {
      writer.uint32(26).string(message.path);
    }
    if (message.state !== 0) {
      writer.uint32(32).int32(message.state);
    }
    if (message.permissions !== "") {
      writer.uint32(42).string(message.permissions);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_Resource_FileResource {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_Resource_FileResource();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.file = OSPolicy_Resource_File.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.content = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.path = reader.string();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.state = reader.int32() as any;
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.permissions = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_Resource_FileResource {
    return {
      file: isSet(object.file) ? OSPolicy_Resource_File.fromJSON(object.file) : undefined,
      content: isSet(object.content) ? globalThis.String(object.content) : undefined,
      path: isSet(object.path) ? globalThis.String(object.path) : "",
      state: isSet(object.state) ? oSPolicy_Resource_FileResource_DesiredStateFromJSON(object.state) : 0,
      permissions: isSet(object.permissions) ? globalThis.String(object.permissions) : "",
    };
  },

  toJSON(message: OSPolicy_Resource_FileResource): unknown {
    const obj: any = {};
    if (message.file !== undefined) {
      obj.file = OSPolicy_Resource_File.toJSON(message.file);
    }
    if (message.content !== undefined) {
      obj.content = message.content;
    }
    if (message.path !== "") {
      obj.path = message.path;
    }
    if (message.state !== 0) {
      obj.state = oSPolicy_Resource_FileResource_DesiredStateToJSON(message.state);
    }
    if (message.permissions !== "") {
      obj.permissions = message.permissions;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_Resource_FileResource>): OSPolicy_Resource_FileResource {
    return OSPolicy_Resource_FileResource.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_Resource_FileResource>): OSPolicy_Resource_FileResource {
    const message = createBaseOSPolicy_Resource_FileResource();
    message.file = (object.file !== undefined && object.file !== null)
      ? OSPolicy_Resource_File.fromPartial(object.file)
      : undefined;
    message.content = object.content ?? undefined;
    message.path = object.path ?? "";
    message.state = object.state ?? 0;
    message.permissions = object.permissions ?? "";
    return message;
  },
};

function createBaseOSPolicy_ResourceGroup(): OSPolicy_ResourceGroup {
  return { osFilter: undefined, inventoryFilters: [], resources: [] };
}

export const OSPolicy_ResourceGroup: MessageFns<OSPolicy_ResourceGroup> = {
  encode(message: OSPolicy_ResourceGroup, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.osFilter !== undefined) {
      OSPolicy_OSFilter.encode(message.osFilter, writer.uint32(10).fork()).join();
    }
    for (const v of message.inventoryFilters) {
      OSPolicy_InventoryFilter.encode(v!, writer.uint32(26).fork()).join();
    }
    for (const v of message.resources) {
      OSPolicy_Resource.encode(v!, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicy_ResourceGroup {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicy_ResourceGroup();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.osFilter = OSPolicy_OSFilter.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.inventoryFilters.push(OSPolicy_InventoryFilter.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.resources.push(OSPolicy_Resource.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicy_ResourceGroup {
    return {
      osFilter: isSet(object.osFilter) ? OSPolicy_OSFilter.fromJSON(object.osFilter) : undefined,
      inventoryFilters: globalThis.Array.isArray(object?.inventoryFilters)
        ? object.inventoryFilters.map((e: any) => OSPolicy_InventoryFilter.fromJSON(e))
        : [],
      resources: globalThis.Array.isArray(object?.resources)
        ? object.resources.map((e: any) => OSPolicy_Resource.fromJSON(e))
        : [],
    };
  },

  toJSON(message: OSPolicy_ResourceGroup): unknown {
    const obj: any = {};
    if (message.osFilter !== undefined) {
      obj.osFilter = OSPolicy_OSFilter.toJSON(message.osFilter);
    }
    if (message.inventoryFilters?.length) {
      obj.inventoryFilters = message.inventoryFilters.map((e) => OSPolicy_InventoryFilter.toJSON(e));
    }
    if (message.resources?.length) {
      obj.resources = message.resources.map((e) => OSPolicy_Resource.toJSON(e));
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicy_ResourceGroup>): OSPolicy_ResourceGroup {
    return OSPolicy_ResourceGroup.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicy_ResourceGroup>): OSPolicy_ResourceGroup {
    const message = createBaseOSPolicy_ResourceGroup();
    message.osFilter = (object.osFilter !== undefined && object.osFilter !== null)
      ? OSPolicy_OSFilter.fromPartial(object.osFilter)
      : undefined;
    message.inventoryFilters = object.inventoryFilters?.map((e) => OSPolicy_InventoryFilter.fromPartial(e)) || [];
    message.resources = object.resources?.map((e) => OSPolicy_Resource.fromPartial(e)) || [];
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
