// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/osconfig/agentendpoint/v1/config_common.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.cloud.osconfig.agentendpoint.v1";

/** Supported OSPolicy compliance states. */
export enum OSPolicyComplianceState {
  /** OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED - Default value. This value is unused. */
  OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED = 0,
  /** COMPLIANT - Compliant state. */
  COMPLIANT = 1,
  /** NON_COMPLIANT - Non-compliant state */
  NON_COMPLIANT = 2,
  /** UNKNOWN - Unknown compliance state. */
  UNKNOWN = 3,
  /**
   * NO_OS_POLICIES_APPLICABLE - No applicable OS policies were found for the instance.
   * This state is only applicable to the instance.
   */
  NO_OS_POLICIES_APPLICABLE = 4,
  UNRECOGNIZED = -1,
}

export function oSPolicyComplianceStateFromJSON(object: any): OSPolicyComplianceState {
  switch (object) {
    case 0:
    case "OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED":
      return OSPolicyComplianceState.OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED;
    case 1:
    case "COMPLIANT":
      return OSPolicyComplianceState.COMPLIANT;
    case 2:
    case "NON_COMPLIANT":
      return OSPolicyComplianceState.NON_COMPLIANT;
    case 3:
    case "UNKNOWN":
      return OSPolicyComplianceState.UNKNOWN;
    case 4:
    case "NO_OS_POLICIES_APPLICABLE":
      return OSPolicyComplianceState.NO_OS_POLICIES_APPLICABLE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OSPolicyComplianceState.UNRECOGNIZED;
  }
}

export function oSPolicyComplianceStateToJSON(object: OSPolicyComplianceState): string {
  switch (object) {
    case OSPolicyComplianceState.OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED:
      return "OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED";
    case OSPolicyComplianceState.COMPLIANT:
      return "COMPLIANT";
    case OSPolicyComplianceState.NON_COMPLIANT:
      return "NON_COMPLIANT";
    case OSPolicyComplianceState.UNKNOWN:
      return "UNKNOWN";
    case OSPolicyComplianceState.NO_OS_POLICIES_APPLICABLE:
      return "NO_OS_POLICIES_APPLICABLE";
    case OSPolicyComplianceState.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/**
 * Step performed by the OS Config agent for configuring an `OSPolicyResource`
 * to its desired state.
 */
export interface OSPolicyResourceConfigStep {
  /** Configuration step type. */
  type: OSPolicyResourceConfigStep_Type;
  /** Outcome of the configuration step. */
  outcome: OSPolicyResourceConfigStep_Outcome;
  /**
   * An error message recorded during the execution of this step.
   * Only populated when outcome is FAILED.
   */
  errorMessage: string;
}

/** Supported configuration step types */
export enum OSPolicyResourceConfigStep_Type {
  /** TYPE_UNSPECIFIED - Default value. This value is unused. */
  TYPE_UNSPECIFIED = 0,
  /** VALIDATION - Validation to detect resource conflicts, schema errors, etc. */
  VALIDATION = 1,
  /** DESIRED_STATE_CHECK - Check the current desired state status of the resource. */
  DESIRED_STATE_CHECK = 2,
  /** DESIRED_STATE_ENFORCEMENT - Enforce the desired state for a resource that is not in desired state. */
  DESIRED_STATE_ENFORCEMENT = 3,
  /**
   * DESIRED_STATE_CHECK_POST_ENFORCEMENT - Re-check desired state status for a resource after enforcement of all
   * resources in the current configuration run.
   *
   * This step is used to determine the final desired state status for the
   * resource. It accounts for any resources that might have drifted from
   * their desired state due to side effects from configuring other resources
   * during the current configuration run.
   */
  DESIRED_STATE_CHECK_POST_ENFORCEMENT = 4,
  UNRECOGNIZED = -1,
}

export function oSPolicyResourceConfigStep_TypeFromJSON(object: any): OSPolicyResourceConfigStep_Type {
  switch (object) {
    case 0:
    case "TYPE_UNSPECIFIED":
      return OSPolicyResourceConfigStep_Type.TYPE_UNSPECIFIED;
    case 1:
    case "VALIDATION":
      return OSPolicyResourceConfigStep_Type.VALIDATION;
    case 2:
    case "DESIRED_STATE_CHECK":
      return OSPolicyResourceConfigStep_Type.DESIRED_STATE_CHECK;
    case 3:
    case "DESIRED_STATE_ENFORCEMENT":
      return OSPolicyResourceConfigStep_Type.DESIRED_STATE_ENFORCEMENT;
    case 4:
    case "DESIRED_STATE_CHECK_POST_ENFORCEMENT":
      return OSPolicyResourceConfigStep_Type.DESIRED_STATE_CHECK_POST_ENFORCEMENT;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OSPolicyResourceConfigStep_Type.UNRECOGNIZED;
  }
}

export function oSPolicyResourceConfigStep_TypeToJSON(object: OSPolicyResourceConfigStep_Type): string {
  switch (object) {
    case OSPolicyResourceConfigStep_Type.TYPE_UNSPECIFIED:
      return "TYPE_UNSPECIFIED";
    case OSPolicyResourceConfigStep_Type.VALIDATION:
      return "VALIDATION";
    case OSPolicyResourceConfigStep_Type.DESIRED_STATE_CHECK:
      return "DESIRED_STATE_CHECK";
    case OSPolicyResourceConfigStep_Type.DESIRED_STATE_ENFORCEMENT:
      return "DESIRED_STATE_ENFORCEMENT";
    case OSPolicyResourceConfigStep_Type.DESIRED_STATE_CHECK_POST_ENFORCEMENT:
      return "DESIRED_STATE_CHECK_POST_ENFORCEMENT";
    case OSPolicyResourceConfigStep_Type.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** Supported outcomes for a configuration step. */
export enum OSPolicyResourceConfigStep_Outcome {
  /** OUTCOME_UNSPECIFIED - Default value. This value is unused. */
  OUTCOME_UNSPECIFIED = 0,
  /** SUCCEEDED - The step succeeded. */
  SUCCEEDED = 1,
  /** FAILED - The step failed. */
  FAILED = 2,
  UNRECOGNIZED = -1,
}

export function oSPolicyResourceConfigStep_OutcomeFromJSON(object: any): OSPolicyResourceConfigStep_Outcome {
  switch (object) {
    case 0:
    case "OUTCOME_UNSPECIFIED":
      return OSPolicyResourceConfigStep_Outcome.OUTCOME_UNSPECIFIED;
    case 1:
    case "SUCCEEDED":
      return OSPolicyResourceConfigStep_Outcome.SUCCEEDED;
    case 2:
    case "FAILED":
      return OSPolicyResourceConfigStep_Outcome.FAILED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OSPolicyResourceConfigStep_Outcome.UNRECOGNIZED;
  }
}

export function oSPolicyResourceConfigStep_OutcomeToJSON(object: OSPolicyResourceConfigStep_Outcome): string {
  switch (object) {
    case OSPolicyResourceConfigStep_Outcome.OUTCOME_UNSPECIFIED:
      return "OUTCOME_UNSPECIFIED";
    case OSPolicyResourceConfigStep_Outcome.SUCCEEDED:
      return "SUCCEEDED";
    case OSPolicyResourceConfigStep_Outcome.FAILED:
      return "FAILED";
    case OSPolicyResourceConfigStep_Outcome.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** Compliance data for an OS policy resource. */
export interface OSPolicyResourceCompliance {
  /** The id of the OS policy resource. */
  osPolicyResourceId: string;
  /**
   * Ordered list of configuration steps taken by the agent for the OS policy
   * resource.
   */
  configSteps: OSPolicyResourceConfigStep[];
  /** Compliance state of the OS policy resource. */
  state: OSPolicyComplianceState;
  /** ExecResource specific output. */
  execResourceOutput?: OSPolicyResourceCompliance_ExecResourceOutput | undefined;
}

/** ExecResource specific output. */
export interface OSPolicyResourceCompliance_ExecResourceOutput {
  /**
   * Output from Enforcement phase output file (if run).
   * Output size is limited to 100K bytes.
   */
  enforcementOutput: Buffer;
}

function createBaseOSPolicyResourceConfigStep(): OSPolicyResourceConfigStep {
  return { type: 0, outcome: 0, errorMessage: "" };
}

export const OSPolicyResourceConfigStep: MessageFns<OSPolicyResourceConfigStep> = {
  encode(message: OSPolicyResourceConfigStep, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.type !== 0) {
      writer.uint32(8).int32(message.type);
    }
    if (message.outcome !== 0) {
      writer.uint32(16).int32(message.outcome);
    }
    if (message.errorMessage !== "") {
      writer.uint32(26).string(message.errorMessage);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicyResourceConfigStep {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicyResourceConfigStep();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.type = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.outcome = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.errorMessage = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicyResourceConfigStep {
    return {
      type: isSet(object.type) ? oSPolicyResourceConfigStep_TypeFromJSON(object.type) : 0,
      outcome: isSet(object.outcome) ? oSPolicyResourceConfigStep_OutcomeFromJSON(object.outcome) : 0,
      errorMessage: isSet(object.errorMessage) ? globalThis.String(object.errorMessage) : "",
    };
  },

  toJSON(message: OSPolicyResourceConfigStep): unknown {
    const obj: any = {};
    if (message.type !== 0) {
      obj.type = oSPolicyResourceConfigStep_TypeToJSON(message.type);
    }
    if (message.outcome !== 0) {
      obj.outcome = oSPolicyResourceConfigStep_OutcomeToJSON(message.outcome);
    }
    if (message.errorMessage !== "") {
      obj.errorMessage = message.errorMessage;
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicyResourceConfigStep>): OSPolicyResourceConfigStep {
    return OSPolicyResourceConfigStep.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicyResourceConfigStep>): OSPolicyResourceConfigStep {
    const message = createBaseOSPolicyResourceConfigStep();
    message.type = object.type ?? 0;
    message.outcome = object.outcome ?? 0;
    message.errorMessage = object.errorMessage ?? "";
    return message;
  },
};

function createBaseOSPolicyResourceCompliance(): OSPolicyResourceCompliance {
  return { osPolicyResourceId: "", configSteps: [], state: 0, execResourceOutput: undefined };
}

export const OSPolicyResourceCompliance: MessageFns<OSPolicyResourceCompliance> = {
  encode(message: OSPolicyResourceCompliance, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.osPolicyResourceId !== "") {
      writer.uint32(10).string(message.osPolicyResourceId);
    }
    for (const v of message.configSteps) {
      OSPolicyResourceConfigStep.encode(v!, writer.uint32(18).fork()).join();
    }
    if (message.state !== 0) {
      writer.uint32(24).int32(message.state);
    }
    if (message.execResourceOutput !== undefined) {
      OSPolicyResourceCompliance_ExecResourceOutput.encode(message.execResourceOutput, writer.uint32(34).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OSPolicyResourceCompliance {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSPolicyResourceCompliance();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.osPolicyResourceId = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.configSteps.push(OSPolicyResourceConfigStep.decode(reader, reader.uint32()));
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.state = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.execResourceOutput = OSPolicyResourceCompliance_ExecResourceOutput.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSPolicyResourceCompliance {
    return {
      osPolicyResourceId: isSet(object.osPolicyResourceId) ? globalThis.String(object.osPolicyResourceId) : "",
      configSteps: globalThis.Array.isArray(object?.configSteps)
        ? object.configSteps.map((e: any) => OSPolicyResourceConfigStep.fromJSON(e))
        : [],
      state: isSet(object.state) ? oSPolicyComplianceStateFromJSON(object.state) : 0,
      execResourceOutput: isSet(object.execResourceOutput)
        ? OSPolicyResourceCompliance_ExecResourceOutput.fromJSON(object.execResourceOutput)
        : undefined,
    };
  },

  toJSON(message: OSPolicyResourceCompliance): unknown {
    const obj: any = {};
    if (message.osPolicyResourceId !== "") {
      obj.osPolicyResourceId = message.osPolicyResourceId;
    }
    if (message.configSteps?.length) {
      obj.configSteps = message.configSteps.map((e) => OSPolicyResourceConfigStep.toJSON(e));
    }
    if (message.state !== 0) {
      obj.state = oSPolicyComplianceStateToJSON(message.state);
    }
    if (message.execResourceOutput !== undefined) {
      obj.execResourceOutput = OSPolicyResourceCompliance_ExecResourceOutput.toJSON(message.execResourceOutput);
    }
    return obj;
  },

  create(base?: DeepPartial<OSPolicyResourceCompliance>): OSPolicyResourceCompliance {
    return OSPolicyResourceCompliance.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSPolicyResourceCompliance>): OSPolicyResourceCompliance {
    const message = createBaseOSPolicyResourceCompliance();
    message.osPolicyResourceId = object.osPolicyResourceId ?? "";
    message.configSteps = object.configSteps?.map((e) => OSPolicyResourceConfigStep.fromPartial(e)) || [];
    message.state = object.state ?? 0;
    message.execResourceOutput = (object.execResourceOutput !== undefined && object.execResourceOutput !== null)
      ? OSPolicyResourceCompliance_ExecResourceOutput.fromPartial(object.execResourceOutput)
      : undefined;
    return message;
  },
};

function createBaseOSPolicyResourceCompliance_ExecResourceOutput(): OSPolicyResourceCompliance_ExecResourceOutput {
  return { enforcementOutput: Buffer.alloc(0) };
}

export const OSPolicyResourceCompliance_ExecResourceOutput: MessageFns<OSPolicyResourceCompliance_ExecResourceOutput> =
  {
    encode(
      message: OSPolicyResourceCompliance_ExecResourceOutput,
      writer: BinaryWriter = new BinaryWriter(),
    ): BinaryWriter {
      if (message.enforcementOutput.length !== 0) {
        writer.uint32(18).bytes(message.enforcementOutput);
      }
      return writer;
    },

    decode(input: BinaryReader | Uint8Array, length?: number): OSPolicyResourceCompliance_ExecResourceOutput {
      const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
      let end = length === undefined ? reader.len : reader.pos + length;
      const message = createBaseOSPolicyResourceCompliance_ExecResourceOutput();
      while (reader.pos < end) {
        const tag = reader.uint32();
        switch (tag >>> 3) {
          case 2:
            if (tag !== 18) {
              break;
            }

            message.enforcementOutput = Buffer.from(reader.bytes());
            continue;
        }
        if ((tag & 7) === 4 || tag === 0) {
          break;
        }
        reader.skip(tag & 7);
      }
      return message;
    },

    fromJSON(object: any): OSPolicyResourceCompliance_ExecResourceOutput {
      return {
        enforcementOutput: isSet(object.enforcementOutput)
          ? Buffer.from(bytesFromBase64(object.enforcementOutput))
          : Buffer.alloc(0),
      };
    },

    toJSON(message: OSPolicyResourceCompliance_ExecResourceOutput): unknown {
      const obj: any = {};
      if (message.enforcementOutput.length !== 0) {
        obj.enforcementOutput = base64FromBytes(message.enforcementOutput);
      }
      return obj;
    },

    create(
      base?: DeepPartial<OSPolicyResourceCompliance_ExecResourceOutput>,
    ): OSPolicyResourceCompliance_ExecResourceOutput {
      return OSPolicyResourceCompliance_ExecResourceOutput.fromPartial(base ?? {});
    },
    fromPartial(
      object: DeepPartial<OSPolicyResourceCompliance_ExecResourceOutput>,
    ): OSPolicyResourceCompliance_ExecResourceOutput {
      const message = createBaseOSPolicyResourceCompliance_ExecResourceOutput();
      message.enforcementOutput = object.enforcementOutput ?? Buffer.alloc(0);
      return message;
    },
  };

function bytesFromBase64(b64: string): Uint8Array {
  return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
}

function base64FromBytes(arr: Uint8Array): string {
  return globalThis.Buffer.from(arr).toString("base64");
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
