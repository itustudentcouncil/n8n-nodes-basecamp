// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/baremetalsolution/v2/baremetalsolution.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { Operation } from "../../../longrunning/operations.js";
import { Empty } from "../../../protobuf/empty.js";
import { Timestamp } from "../../../protobuf/timestamp.js";
import {
  DetachLunRequest,
  DisableInteractiveSerialConsoleRequest,
  EnableInteractiveSerialConsoleRequest,
  GetInstanceRequest,
  Instance,
  ListInstancesRequest,
  ListInstancesResponse,
  RenameInstanceRequest,
  ResetInstanceRequest,
  StartInstanceRequest,
  StopInstanceRequest,
  UpdateInstanceRequest,
} from "./instance.js";
import { EvictLunRequest, GetLunRequest, ListLunsRequest, ListLunsResponse, Lun } from "./lun.js";
import {
  GetNetworkRequest,
  ListNetworksRequest,
  ListNetworksResponse,
  ListNetworkUsageRequest,
  ListNetworkUsageResponse,
  Network,
  RenameNetworkRequest,
  UpdateNetworkRequest,
} from "./network.js";
import {
  CreateNfsShareRequest,
  DeleteNfsShareRequest,
  GetNfsShareRequest,
  ListNfsSharesRequest,
  ListNfsSharesResponse,
  NfsShare,
  RenameNfsShareRequest,
  UpdateNfsShareRequest,
} from "./nfs_share.js";
import { ListOSImagesRequest, ListOSImagesResponse } from "./osimage.js";
import {
  CreateProvisioningConfigRequest,
  GetProvisioningConfigRequest,
  ListProvisioningQuotasRequest,
  ListProvisioningQuotasResponse,
  ProvisioningConfig,
  SubmitProvisioningConfigRequest,
  SubmitProvisioningConfigResponse,
  UpdateProvisioningConfigRequest,
} from "./provisioning.js";
import {
  CreateSSHKeyRequest,
  DeleteSSHKeyRequest,
  ListSSHKeysRequest,
  ListSSHKeysResponse,
  SSHKey,
} from "./ssh_key.js";
import {
  EvictVolumeRequest,
  GetVolumeRequest,
  ListVolumesRequest,
  ListVolumesResponse,
  RenameVolumeRequest,
  ResizeVolumeRequest,
  UpdateVolumeRequest,
  Volume,
} from "./volume.js";
import {
  CreateVolumeSnapshotRequest,
  DeleteVolumeSnapshotRequest,
  GetVolumeSnapshotRequest,
  ListVolumeSnapshotsRequest,
  ListVolumeSnapshotsResponse,
  RestoreVolumeSnapshotRequest,
  VolumeSnapshot,
} from "./volume_snapshot.js";

export const protobufPackage = "google.cloud.baremetalsolution.v2";

/** Represents the metadata from a long-running operation. */
export interface OperationMetadata {
  /** Output only. The time the operation was created. */
  createTime:
    | Date
    | undefined;
  /** Output only. The time the operation finished running. */
  endTime:
    | Date
    | undefined;
  /** Output only. Server-defined resource path for the target of the operation. */
  target: string;
  /** Output only. Name of the action executed by the operation. */
  verb: string;
  /** Output only. Human-readable status of the operation, if any. */
  statusMessage: string;
  /**
   * Output only. Identifies whether the user requested the cancellation
   * of the operation. Operations that have been successfully cancelled
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   */
  requestedCancellation: boolean;
  /** Output only. API version used with the operation. */
  apiVersion: string;
}

/** Response message from resetting a server. */
export interface ResetInstanceResponse {
}

function createBaseOperationMetadata(): OperationMetadata {
  return {
    createTime: undefined,
    endTime: undefined,
    target: "",
    verb: "",
    statusMessage: "",
    requestedCancellation: false,
    apiVersion: "",
  };
}

export const OperationMetadata: MessageFns<OperationMetadata> = {
  encode(message: OperationMetadata, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.createTime !== undefined) {
      Timestamp.encode(toTimestamp(message.createTime), writer.uint32(10).fork()).join();
    }
    if (message.endTime !== undefined) {
      Timestamp.encode(toTimestamp(message.endTime), writer.uint32(18).fork()).join();
    }
    if (message.target !== "") {
      writer.uint32(26).string(message.target);
    }
    if (message.verb !== "") {
      writer.uint32(34).string(message.verb);
    }
    if (message.statusMessage !== "") {
      writer.uint32(42).string(message.statusMessage);
    }
    if (message.requestedCancellation !== false) {
      writer.uint32(48).bool(message.requestedCancellation);
    }
    if (message.apiVersion !== "") {
      writer.uint32(58).string(message.apiVersion);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): OperationMetadata {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOperationMetadata();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.createTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.endTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.target = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.verb = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.statusMessage = reader.string();
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.requestedCancellation = reader.bool();
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.apiVersion = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OperationMetadata {
    return {
      createTime: isSet(object.createTime) ? fromJsonTimestamp(object.createTime) : undefined,
      endTime: isSet(object.endTime) ? fromJsonTimestamp(object.endTime) : undefined,
      target: isSet(object.target) ? globalThis.String(object.target) : "",
      verb: isSet(object.verb) ? globalThis.String(object.verb) : "",
      statusMessage: isSet(object.statusMessage) ? globalThis.String(object.statusMessage) : "",
      requestedCancellation: isSet(object.requestedCancellation)
        ? globalThis.Boolean(object.requestedCancellation)
        : false,
      apiVersion: isSet(object.apiVersion) ? globalThis.String(object.apiVersion) : "",
    };
  },

  toJSON(message: OperationMetadata): unknown {
    const obj: any = {};
    if (message.createTime !== undefined) {
      obj.createTime = message.createTime.toISOString();
    }
    if (message.endTime !== undefined) {
      obj.endTime = message.endTime.toISOString();
    }
    if (message.target !== "") {
      obj.target = message.target;
    }
    if (message.verb !== "") {
      obj.verb = message.verb;
    }
    if (message.statusMessage !== "") {
      obj.statusMessage = message.statusMessage;
    }
    if (message.requestedCancellation !== false) {
      obj.requestedCancellation = message.requestedCancellation;
    }
    if (message.apiVersion !== "") {
      obj.apiVersion = message.apiVersion;
    }
    return obj;
  },

  create(base?: DeepPartial<OperationMetadata>): OperationMetadata {
    return OperationMetadata.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OperationMetadata>): OperationMetadata {
    const message = createBaseOperationMetadata();
    message.createTime = object.createTime ?? undefined;
    message.endTime = object.endTime ?? undefined;
    message.target = object.target ?? "";
    message.verb = object.verb ?? "";
    message.statusMessage = object.statusMessage ?? "";
    message.requestedCancellation = object.requestedCancellation ?? false;
    message.apiVersion = object.apiVersion ?? "";
    return message;
  },
};

function createBaseResetInstanceResponse(): ResetInstanceResponse {
  return {};
}

export const ResetInstanceResponse: MessageFns<ResetInstanceResponse> = {
  encode(_: ResetInstanceResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ResetInstanceResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseResetInstanceResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ResetInstanceResponse {
    return {};
  },

  toJSON(_: ResetInstanceResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ResetInstanceResponse>): ResetInstanceResponse {
    return ResetInstanceResponse.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ResetInstanceResponse>): ResetInstanceResponse {
    const message = createBaseResetInstanceResponse();
    return message;
  },
};

/**
 * Performs management operations on Bare Metal Solution servers.
 *
 * The `baremetalsolution.googleapis.com` service provides management
 * capabilities for Bare Metal Solution servers. To access the API methods, you
 * must assign Bare Metal Solution IAM roles containing the desired permissions
 * to your staff in your Google Cloud project. You must also enable the Bare
 * Metal Solution API. Once enabled, the methods act
 * upon specific servers in your Bare Metal Solution environment.
 */
export type BareMetalSolutionDefinition = typeof BareMetalSolutionDefinition;
export const BareMetalSolutionDefinition = {
  name: "BareMetalSolution",
  fullName: "google.cloud.baremetalsolution.v2.BareMetalSolution",
  methods: {
    /** List servers in a given project and location. */
    listInstances: {
      name: "ListInstances",
      requestType: ListInstancesRequest,
      requestStream: false,
      responseType: ListInstancesResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              47,
              18,
              45,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              115,
            ]),
          ],
        },
      },
    },
    /** Get details about a single server. */
    getInstance: {
      name: "GetInstance",
      requestType: GetInstanceRequest,
      requestStream: false,
      responseType: Instance,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              47,
              18,
              45,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Update details of a single server. */
    updateInstance: {
      name: "UpdateInstance",
      requestType: UpdateInstanceRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              29,
              10,
              8,
              73,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [
            Buffer.from([
              20,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              44,
              117,
              112,
              100,
              97,
              116,
              101,
              95,
              109,
              97,
              115,
              107,
            ]),
          ],
          578365826: [
            Buffer.from([
              66,
              58,
              8,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              50,
              54,
              47,
              118,
              50,
              47,
              123,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              46,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /**
     * RenameInstance sets a new name for an instance.
     * Use with caution, previous names become immediately invalidated.
     */
    renameInstance: {
      name: "RenameInstance",
      requestType: RenameInstanceRequest,
      requestStream: false,
      responseType: Instance,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              20,
              110,
              97,
              109,
              101,
              44,
              110,
              101,
              119,
              95,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              95,
              105,
              100,
            ]),
          ],
          578365826: [
            Buffer.from([
              57,
              58,
              1,
              42,
              34,
              52,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              115,
              47,
              42,
              125,
              58,
              114,
              101,
              110,
              97,
              109,
              101,
            ]),
          ],
        },
      },
    },
    /**
     * Perform an ungraceful, hard reset on a server. Equivalent to shutting the
     * power off and then turning it back on.
     */
    resetInstance: {
      name: "ResetInstance",
      requestType: ResetInstanceRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              42,
              10,
              21,
              82,
              101,
              115,
              101,
              116,
              73,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              82,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              56,
              58,
              1,
              42,
              34,
              51,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              115,
              47,
              42,
              125,
              58,
              114,
              101,
              115,
              101,
              116,
            ]),
          ],
        },
      },
    },
    /** Starts a server that was shutdown. */
    startInstance: {
      name: "StartInstance",
      requestType: StartInstanceRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              42,
              10,
              21,
              83,
              116,
              97,
              114,
              116,
              73,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              82,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              56,
              58,
              1,
              42,
              34,
              51,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              115,
              47,
              42,
              125,
              58,
              115,
              116,
              97,
              114,
              116,
            ]),
          ],
        },
      },
    },
    /** Stop a running server. */
    stopInstance: {
      name: "StopInstance",
      requestType: StopInstanceRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              41,
              10,
              20,
              83,
              116,
              111,
              112,
              73,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              82,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              55,
              58,
              1,
              42,
              34,
              50,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              115,
              47,
              42,
              125,
              58,
              115,
              116,
              111,
              112,
            ]),
          ],
        },
      },
    },
    /** Enable the interactive serial console feature on an instance. */
    enableInteractiveSerialConsole: {
      name: "EnableInteractiveSerialConsole",
      requestType: EnableInteractiveSerialConsoleRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              59,
              10,
              38,
              69,
              110,
              97,
              98,
              108,
              101,
              73,
              110,
              116,
              101,
              114,
              97,
              99,
              116,
              105,
              118,
              101,
              83,
              101,
              114,
              105,
              97,
              108,
              67,
              111,
              110,
              115,
              111,
              108,
              101,
              82,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              81,
              58,
              1,
              42,
              34,
              76,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              115,
              47,
              42,
              125,
              58,
              101,
              110,
              97,
              98,
              108,
              101,
              73,
              110,
              116,
              101,
              114,
              97,
              99,
              116,
              105,
              118,
              101,
              83,
              101,
              114,
              105,
              97,
              108,
              67,
              111,
              110,
              115,
              111,
              108,
              101,
            ]),
          ],
        },
      },
    },
    /** Disable the interactive serial console feature on an instance. */
    disableInteractiveSerialConsole: {
      name: "DisableInteractiveSerialConsole",
      requestType: DisableInteractiveSerialConsoleRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              60,
              10,
              39,
              68,
              105,
              115,
              97,
              98,
              108,
              101,
              73,
              110,
              116,
              101,
              114,
              97,
              99,
              116,
              105,
              118,
              101,
              83,
              101,
              114,
              105,
              97,
              108,
              67,
              111,
              110,
              115,
              111,
              108,
              101,
              82,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              82,
              58,
              1,
              42,
              34,
              77,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              115,
              47,
              42,
              125,
              58,
              100,
              105,
              115,
              97,
              98,
              108,
              101,
              73,
              110,
              116,
              101,
              114,
              97,
              99,
              116,
              105,
              118,
              101,
              83,
              101,
              114,
              105,
              97,
              108,
              67,
              111,
              110,
              115,
              111,
              108,
              101,
            ]),
          ],
        },
      },
    },
    /** Detach LUN from Instance. */
    detachLun: {
      name: "DetachLun",
      requestType: DetachLunRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              29,
              10,
              8,
              73,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([12, 105, 110, 115, 116, 97, 110, 99, 101, 44, 108, 117, 110])],
          578365826: [
            Buffer.from([
              64,
              58,
              1,
              42,
              34,
              59,
              47,
              118,
              50,
              47,
              123,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              105,
              110,
              115,
              116,
              97,
              110,
              99,
              101,
              115,
              47,
              42,
              125,
              58,
              100,
              101,
              116,
              97,
              99,
              104,
              76,
              117,
              110,
            ]),
          ],
        },
      },
    },
    /**
     * Lists the public SSH keys registered for the specified project.
     * These SSH keys are used only for the interactive serial console feature.
     */
    listSSHKeys: {
      name: "ListSSHKeys",
      requestType: ListSSHKeysRequest,
      requestStream: false,
      responseType: ListSSHKeysResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              45,
              18,
              43,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              115,
              115,
              104,
              75,
              101,
              121,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Register a public SSH key in the specified project for use with the
     * interactive serial console feature.
     */
    createSSHKey: {
      name: "CreateSSHKey",
      requestType: CreateSSHKeyRequest,
      requestStream: false,
      responseType: SSHKey,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              25,
              112,
              97,
              114,
              101,
              110,
              116,
              44,
              115,
              115,
              104,
              95,
              107,
              101,
              121,
              44,
              115,
              115,
              104,
              95,
              107,
              101,
              121,
              95,
              105,
              100,
            ]),
          ],
          578365826: [
            Buffer.from([
              54,
              58,
              7,
              115,
              115,
              104,
              95,
              107,
              101,
              121,
              34,
              43,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              115,
              115,
              104,
              75,
              101,
              121,
              115,
            ]),
          ],
        },
      },
    },
    /** Deletes a public SSH key registered in the specified project. */
    deleteSSHKey: {
      name: "DeleteSSHKey",
      requestType: DeleteSSHKeyRequest,
      requestStream: false,
      responseType: Empty,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              45,
              42,
              43,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              115,
              115,
              104,
              75,
              101,
              121,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** List storage volumes in a given project and location. */
    listVolumes: {
      name: "ListVolumes",
      requestType: ListVolumesRequest,
      requestStream: false,
      responseType: ListVolumesResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              45,
              18,
              43,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
            ]),
          ],
        },
      },
    },
    /** Get details of a single storage volume. */
    getVolume: {
      name: "GetVolume",
      requestType: GetVolumeRequest,
      requestStream: false,
      responseType: Volume,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              45,
              18,
              43,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Update details of a single storage volume. */
    updateVolume: {
      name: "UpdateVolume",
      requestType: UpdateVolumeRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              27,
              10,
              6,
              86,
              111,
              108,
              117,
              109,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [
            Buffer.from([18, 118, 111, 108, 117, 109, 101, 44, 117, 112, 100, 97, 116, 101, 95, 109, 97, 115, 107]),
          ],
          578365826: [
            Buffer.from([
              60,
              58,
              6,
              118,
              111,
              108,
              117,
              109,
              101,
              50,
              50,
              47,
              118,
              50,
              47,
              123,
              118,
              111,
              108,
              117,
              109,
              101,
              46,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /**
     * RenameVolume sets a new name for a volume.
     * Use with caution, previous names become immediately invalidated.
     */
    renameVolume: {
      name: "RenameVolume",
      requestType: RenameVolumeRequest,
      requestStream: false,
      responseType: Volume,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([18, 110, 97, 109, 101, 44, 110, 101, 119, 95, 118, 111, 108, 117, 109, 101, 95, 105, 100]),
          ],
          578365826: [
            Buffer.from([
              55,
              58,
              1,
              42,
              34,
              50,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              125,
              58,
              114,
              101,
              110,
              97,
              109,
              101,
            ]),
          ],
        },
      },
    },
    /**
     * Skips volume's cooloff and deletes it now.
     * Volume must be in cooloff state.
     */
    evictVolume: {
      name: "EvictVolume",
      requestType: EvictVolumeRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              42,
              10,
              21,
              103,
              111,
              111,
              103,
              108,
              101,
              46,
              112,
              114,
              111,
              116,
              111,
              98,
              117,
              102,
              46,
              69,
              109,
              112,
              116,
              121,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              54,
              58,
              1,
              42,
              34,
              49,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              125,
              58,
              101,
              118,
              105,
              99,
              116,
            ]),
          ],
        },
      },
    },
    /** Emergency Volume resize. */
    resizeVolume: {
      name: "ResizeVolume",
      requestType: ResizeVolumeRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              27,
              10,
              6,
              86,
              111,
              108,
              117,
              109,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([15, 118, 111, 108, 117, 109, 101, 44, 115, 105, 122, 101, 95, 103, 105, 98])],
          578365826: [
            Buffer.from([
              57,
              58,
              1,
              42,
              34,
              52,
              47,
              118,
              50,
              47,
              123,
              118,
              111,
              108,
              117,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              125,
              58,
              114,
              101,
              115,
              105,
              122,
              101,
            ]),
          ],
        },
      },
    },
    /** List network in a given project and location. */
    listNetworks: {
      name: "ListNetworks",
      requestType: ListNetworksRequest,
      requestStream: false,
      responseType: ListNetworksResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              46,
              18,
              44,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              110,
              101,
              116,
              119,
              111,
              114,
              107,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * List all Networks (and used IPs for each Network) in the vendor account
     * associated with the specified project.
     */
    listNetworkUsage: {
      name: "ListNetworkUsage",
      requestType: ListNetworkUsageRequest,
      requestStream: false,
      responseType: ListNetworkUsageResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([8, 108, 111, 99, 97, 116, 105, 111, 110])],
          578365826: [
            Buffer.from([
              65,
              18,
              63,
              47,
              118,
              50,
              47,
              123,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              110,
              101,
              116,
              119,
              111,
              114,
              107,
              115,
              58,
              108,
              105,
              115,
              116,
              78,
              101,
              116,
              119,
              111,
              114,
              107,
              85,
              115,
              97,
              103,
              101,
            ]),
          ],
        },
      },
    },
    /** Get details of a single network. */
    getNetwork: {
      name: "GetNetwork",
      requestType: GetNetworkRequest,
      requestStream: false,
      responseType: Network,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              46,
              18,
              44,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              110,
              101,
              116,
              119,
              111,
              114,
              107,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Update details of a single network. */
    updateNetwork: {
      name: "UpdateNetwork",
      requestType: UpdateNetworkRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              28,
              10,
              7,
              78,
              101,
              116,
              119,
              111,
              114,
              107,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [
            Buffer.from([
              19,
              110,
              101,
              116,
              119,
              111,
              114,
              107,
              44,
              117,
              112,
              100,
              97,
              116,
              101,
              95,
              109,
              97,
              115,
              107,
            ]),
          ],
          578365826: [
            Buffer.from([
              63,
              58,
              7,
              110,
              101,
              116,
              119,
              111,
              114,
              107,
              50,
              52,
              47,
              118,
              50,
              47,
              123,
              110,
              101,
              116,
              119,
              111,
              114,
              107,
              46,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              110,
              101,
              116,
              119,
              111,
              114,
              107,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /**
     * Takes a snapshot of a boot volume.
     * Returns INVALID_ARGUMENT if called for a non-boot volume.
     */
    createVolumeSnapshot: {
      name: "CreateVolumeSnapshot",
      requestType: CreateVolumeSnapshotRequest,
      requestStream: false,
      responseType: VolumeSnapshot,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              22,
              112,
              97,
              114,
              101,
              110,
              116,
              44,
              118,
              111,
              108,
              117,
              109,
              101,
              95,
              115,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
            ]),
          ],
          578365826: [
            Buffer.from([
              74,
              58,
              15,
              118,
              111,
              108,
              117,
              109,
              101,
              95,
              115,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
              34,
              55,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              125,
              47,
              115,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Uses the specified snapshot to restore its parent volume.
     * Returns INVALID_ARGUMENT if called for a non-boot volume.
     */
    restoreVolumeSnapshot: {
      name: "RestoreVolumeSnapshot",
      requestType: RestoreVolumeSnapshotRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              35,
              10,
              14,
              86,
              111,
              108,
              117,
              109,
              101,
              83,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([15, 118, 111, 108, 117, 109, 101, 95, 115, 110, 97, 112, 115, 104, 111, 116])],
          578365826: [
            Buffer.from([
              93,
              58,
              1,
              42,
              34,
              88,
              47,
              118,
              50,
              47,
              123,
              118,
              111,
              108,
              117,
              109,
              101,
              95,
              115,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              47,
              115,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
              115,
              47,
              42,
              125,
              58,
              114,
              101,
              115,
              116,
              111,
              114,
              101,
              86,
              111,
              108,
              117,
              109,
              101,
              83,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
            ]),
          ],
        },
      },
    },
    /**
     * Deletes a volume snapshot.
     * Returns INVALID_ARGUMENT if called for a non-boot volume.
     */
    deleteVolumeSnapshot: {
      name: "DeleteVolumeSnapshot",
      requestType: DeleteVolumeSnapshotRequest,
      requestStream: false,
      responseType: Empty,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              57,
              42,
              55,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              47,
              115,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /**
     * Returns the specified snapshot resource.
     * Returns INVALID_ARGUMENT if called for a non-boot volume.
     */
    getVolumeSnapshot: {
      name: "GetVolumeSnapshot",
      requestType: GetVolumeSnapshotRequest,
      requestStream: false,
      responseType: VolumeSnapshot,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              57,
              18,
              55,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              47,
              115,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /**
     * Retrieves the list of snapshots for the specified volume.
     * Returns a response with an empty list of snapshots if called
     * for a non-boot volume.
     */
    listVolumeSnapshots: {
      name: "ListVolumeSnapshots",
      requestType: ListVolumeSnapshotsRequest,
      requestStream: false,
      responseType: ListVolumeSnapshotsResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              57,
              18,
              55,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              125,
              47,
              115,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
              115,
            ]),
          ],
        },
      },
    },
    /** Get details of a single storage logical unit number(LUN). */
    getLun: {
      name: "GetLun",
      requestType: GetLunRequest,
      requestStream: false,
      responseType: Lun,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              52,
              18,
              50,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              47,
              108,
              117,
              110,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** List storage volume luns for given storage volume. */
    listLuns: {
      name: "ListLuns",
      requestType: ListLunsRequest,
      requestStream: false,
      responseType: ListLunsResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              52,
              18,
              50,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              125,
              47,
              108,
              117,
              110,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Skips lun's cooloff and deletes it now.
     * Lun must be in cooloff state.
     */
    evictLun: {
      name: "EvictLun",
      requestType: EvictLunRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              42,
              10,
              21,
              103,
              111,
              111,
              103,
              108,
              101,
              46,
              112,
              114,
              111,
              116,
              111,
              98,
              117,
              102,
              46,
              69,
              109,
              112,
              116,
              121,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              61,
              58,
              1,
              42,
              34,
              56,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              118,
              111,
              108,
              117,
              109,
              101,
              115,
              47,
              42,
              47,
              108,
              117,
              110,
              115,
              47,
              42,
              125,
              58,
              101,
              118,
              105,
              99,
              116,
            ]),
          ],
        },
      },
    },
    /** Get details of a single NFS share. */
    getNfsShare: {
      name: "GetNfsShare",
      requestType: GetNfsShareRequest,
      requestStream: false,
      responseType: NfsShare,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              47,
              18,
              45,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              110,
              102,
              115,
              83,
              104,
              97,
              114,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** List NFS shares. */
    listNfsShares: {
      name: "ListNfsShares",
      requestType: ListNfsSharesRequest,
      requestStream: false,
      responseType: ListNfsSharesResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              47,
              18,
              45,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              110,
              102,
              115,
              83,
              104,
              97,
              114,
              101,
              115,
            ]),
          ],
        },
      },
    },
    /** Update details of a single NFS share. */
    updateNfsShare: {
      name: "UpdateNfsShare",
      requestType: UpdateNfsShareRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              29,
              10,
              8,
              78,
              102,
              115,
              83,
              104,
              97,
              114,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [
            Buffer.from([
              21,
              110,
              102,
              115,
              95,
              115,
              104,
              97,
              114,
              101,
              44,
              117,
              112,
              100,
              97,
              116,
              101,
              95,
              109,
              97,
              115,
              107,
            ]),
          ],
          578365826: [
            Buffer.from([
              68,
              58,
              9,
              110,
              102,
              115,
              95,
              115,
              104,
              97,
              114,
              101,
              50,
              55,
              47,
              118,
              50,
              47,
              123,
              110,
              102,
              115,
              95,
              115,
              104,
              97,
              114,
              101,
              46,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              110,
              102,
              115,
              83,
              104,
              97,
              114,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Create an NFS share. */
    createNfsShare: {
      name: "CreateNfsShare",
      requestType: CreateNfsShareRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              29,
              10,
              8,
              78,
              102,
              115,
              83,
              104,
              97,
              114,
              101,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([16, 112, 97, 114, 101, 110, 116, 44, 110, 102, 115, 95, 115, 104, 97, 114, 101])],
          578365826: [
            Buffer.from([
              58,
              58,
              9,
              110,
              102,
              115,
              95,
              115,
              104,
              97,
              114,
              101,
              34,
              45,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              110,
              102,
              115,
              83,
              104,
              97,
              114,
              101,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * RenameNfsShare sets a new name for an nfsshare.
     * Use with caution, previous names become immediately invalidated.
     */
    renameNfsShare: {
      name: "RenameNfsShare",
      requestType: RenameNfsShareRequest,
      requestStream: false,
      responseType: NfsShare,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              20,
              110,
              97,
              109,
              101,
              44,
              110,
              101,
              119,
              95,
              110,
              102,
              115,
              115,
              104,
              97,
              114,
              101,
              95,
              105,
              100,
            ]),
          ],
          578365826: [
            Buffer.from([
              57,
              58,
              1,
              42,
              34,
              52,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              110,
              102,
              115,
              83,
              104,
              97,
              114,
              101,
              115,
              47,
              42,
              125,
              58,
              114,
              101,
              110,
              97,
              109,
              101,
            ]),
          ],
        },
      },
    },
    /** Delete an NFS share. The underlying volume is automatically deleted. */
    deleteNfsShare: {
      name: "DeleteNfsShare",
      requestType: DeleteNfsShareRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              42,
              10,
              21,
              103,
              111,
              111,
              103,
              108,
              101,
              46,
              112,
              114,
              111,
              116,
              111,
              98,
              117,
              102,
              46,
              69,
              109,
              112,
              116,
              121,
              18,
              17,
              79,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              47,
              42,
              45,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              110,
              102,
              115,
              83,
              104,
              97,
              114,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** List the budget details to provision resources on a given project. */
    listProvisioningQuotas: {
      name: "ListProvisioningQuotas",
      requestType: ListProvisioningQuotasRequest,
      requestStream: false,
      responseType: ListProvisioningQuotasResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              56,
              18,
              54,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              81,
              117,
              111,
              116,
              97,
              115,
            ]),
          ],
        },
      },
    },
    /** Submit a provisiong configuration for a given project. */
    submitProvisioningConfig: {
      name: "SubmitProvisioningConfig",
      requestType: SubmitProvisioningConfigRequest,
      requestStream: false,
      responseType: SubmitProvisioningConfigResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              26,
              112,
              97,
              114,
              101,
              110,
              116,
              44,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              95,
              99,
              111,
              110,
              102,
              105,
              103,
            ]),
          ],
          578365826: [
            Buffer.from([
              67,
              58,
              1,
              42,
              34,
              62,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              67,
              111,
              110,
              102,
              105,
              103,
              115,
              58,
              115,
              117,
              98,
              109,
              105,
              116,
            ]),
          ],
        },
      },
    },
    /** Get ProvisioningConfig by name. */
    getProvisioningConfig: {
      name: "GetProvisioningConfig",
      requestType: GetProvisioningConfigRequest,
      requestStream: false,
      responseType: ProvisioningConfig,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              57,
              18,
              55,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              67,
              111,
              110,
              102,
              105,
              103,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Create new ProvisioningConfig. */
    createProvisioningConfig: {
      name: "CreateProvisioningConfig",
      requestType: CreateProvisioningConfigRequest,
      requestStream: false,
      responseType: ProvisioningConfig,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              26,
              112,
              97,
              114,
              101,
              110,
              116,
              44,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              95,
              99,
              111,
              110,
              102,
              105,
              103,
            ]),
          ],
          578365826: [
            Buffer.from([
              78,
              58,
              19,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              95,
              99,
              111,
              110,
              102,
              105,
              103,
              34,
              55,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              67,
              111,
              110,
              102,
              105,
              103,
              115,
            ]),
          ],
        },
      },
    },
    /** Update existing ProvisioningConfig. */
    updateProvisioningConfig: {
      name: "UpdateProvisioningConfig",
      requestType: UpdateProvisioningConfigRequest,
      requestStream: false,
      responseType: ProvisioningConfig,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              31,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              95,
              99,
              111,
              110,
              102,
              105,
              103,
              44,
              117,
              112,
              100,
              97,
              116,
              101,
              95,
              109,
              97,
              115,
              107,
            ]),
          ],
          578365826: [
            Buffer.from([
              98,
              58,
              19,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              95,
              99,
              111,
              110,
              102,
              105,
              103,
              50,
              75,
              47,
              118,
              50,
              47,
              123,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              95,
              99,
              111,
              110,
              102,
              105,
              103,
              46,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              112,
              114,
              111,
              118,
              105,
              115,
              105,
              111,
              110,
              105,
              110,
              103,
              67,
              111,
              110,
              102,
              105,
              103,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /**
     * RenameNetwork sets a new name for a network.
     * Use with caution, previous names become immediately invalidated.
     */
    renameNetwork: {
      name: "RenameNetwork",
      requestType: RenameNetworkRequest,
      requestStream: false,
      responseType: Network,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [
            Buffer.from([
              19,
              110,
              97,
              109,
              101,
              44,
              110,
              101,
              119,
              95,
              110,
              101,
              116,
              119,
              111,
              114,
              107,
              95,
              105,
              100,
            ]),
          ],
          578365826: [
            Buffer.from([
              56,
              58,
              1,
              42,
              34,
              51,
              47,
              118,
              50,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              110,
              101,
              116,
              119,
              111,
              114,
              107,
              115,
              47,
              42,
              125,
              58,
              114,
              101,
              110,
              97,
              109,
              101,
            ]),
          ],
        },
      },
    },
    /** Retrieves the list of OS images which are currently approved. */
    listOSImages: {
      name: "ListOSImages",
      requestType: ListOSImagesRequest,
      requestStream: false,
      responseType: ListOSImagesResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              46,
              18,
              44,
              47,
              118,
              50,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              111,
              115,
              73,
              109,
              97,
              103,
              101,
              115,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface BareMetalSolutionServiceImplementation<CallContextExt = {}> {
  /** List servers in a given project and location. */
  listInstances(
    request: ListInstancesRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListInstancesResponse>>;
  /** Get details about a single server. */
  getInstance(request: GetInstanceRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Instance>>;
  /** Update details of a single server. */
  updateInstance(
    request: UpdateInstanceRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /**
   * RenameInstance sets a new name for an instance.
   * Use with caution, previous names become immediately invalidated.
   */
  renameInstance(request: RenameInstanceRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Instance>>;
  /**
   * Perform an ungraceful, hard reset on a server. Equivalent to shutting the
   * power off and then turning it back on.
   */
  resetInstance(request: ResetInstanceRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Operation>>;
  /** Starts a server that was shutdown. */
  startInstance(request: StartInstanceRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Operation>>;
  /** Stop a running server. */
  stopInstance(request: StopInstanceRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Operation>>;
  /** Enable the interactive serial console feature on an instance. */
  enableInteractiveSerialConsole(
    request: EnableInteractiveSerialConsoleRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /** Disable the interactive serial console feature on an instance. */
  disableInteractiveSerialConsole(
    request: DisableInteractiveSerialConsoleRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /** Detach LUN from Instance. */
  detachLun(request: DetachLunRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Operation>>;
  /**
   * Lists the public SSH keys registered for the specified project.
   * These SSH keys are used only for the interactive serial console feature.
   */
  listSSHKeys(
    request: ListSSHKeysRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListSSHKeysResponse>>;
  /**
   * Register a public SSH key in the specified project for use with the
   * interactive serial console feature.
   */
  createSSHKey(request: CreateSSHKeyRequest, context: CallContext & CallContextExt): Promise<DeepPartial<SSHKey>>;
  /** Deletes a public SSH key registered in the specified project. */
  deleteSSHKey(request: DeleteSSHKeyRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Empty>>;
  /** List storage volumes in a given project and location. */
  listVolumes(
    request: ListVolumesRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListVolumesResponse>>;
  /** Get details of a single storage volume. */
  getVolume(request: GetVolumeRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Volume>>;
  /** Update details of a single storage volume. */
  updateVolume(request: UpdateVolumeRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Operation>>;
  /**
   * RenameVolume sets a new name for a volume.
   * Use with caution, previous names become immediately invalidated.
   */
  renameVolume(request: RenameVolumeRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Volume>>;
  /**
   * Skips volume's cooloff and deletes it now.
   * Volume must be in cooloff state.
   */
  evictVolume(request: EvictVolumeRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Operation>>;
  /** Emergency Volume resize. */
  resizeVolume(request: ResizeVolumeRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Operation>>;
  /** List network in a given project and location. */
  listNetworks(
    request: ListNetworksRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListNetworksResponse>>;
  /**
   * List all Networks (and used IPs for each Network) in the vendor account
   * associated with the specified project.
   */
  listNetworkUsage(
    request: ListNetworkUsageRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListNetworkUsageResponse>>;
  /** Get details of a single network. */
  getNetwork(request: GetNetworkRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Network>>;
  /** Update details of a single network. */
  updateNetwork(request: UpdateNetworkRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Operation>>;
  /**
   * Takes a snapshot of a boot volume.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   */
  createVolumeSnapshot(
    request: CreateVolumeSnapshotRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<VolumeSnapshot>>;
  /**
   * Uses the specified snapshot to restore its parent volume.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   */
  restoreVolumeSnapshot(
    request: RestoreVolumeSnapshotRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /**
   * Deletes a volume snapshot.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   */
  deleteVolumeSnapshot(
    request: DeleteVolumeSnapshotRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Empty>>;
  /**
   * Returns the specified snapshot resource.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   */
  getVolumeSnapshot(
    request: GetVolumeSnapshotRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<VolumeSnapshot>>;
  /**
   * Retrieves the list of snapshots for the specified volume.
   * Returns a response with an empty list of snapshots if called
   * for a non-boot volume.
   */
  listVolumeSnapshots(
    request: ListVolumeSnapshotsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListVolumeSnapshotsResponse>>;
  /** Get details of a single storage logical unit number(LUN). */
  getLun(request: GetLunRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Lun>>;
  /** List storage volume luns for given storage volume. */
  listLuns(request: ListLunsRequest, context: CallContext & CallContextExt): Promise<DeepPartial<ListLunsResponse>>;
  /**
   * Skips lun's cooloff and deletes it now.
   * Lun must be in cooloff state.
   */
  evictLun(request: EvictLunRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Operation>>;
  /** Get details of a single NFS share. */
  getNfsShare(request: GetNfsShareRequest, context: CallContext & CallContextExt): Promise<DeepPartial<NfsShare>>;
  /** List NFS shares. */
  listNfsShares(
    request: ListNfsSharesRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListNfsSharesResponse>>;
  /** Update details of a single NFS share. */
  updateNfsShare(
    request: UpdateNfsShareRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /** Create an NFS share. */
  createNfsShare(
    request: CreateNfsShareRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /**
   * RenameNfsShare sets a new name for an nfsshare.
   * Use with caution, previous names become immediately invalidated.
   */
  renameNfsShare(request: RenameNfsShareRequest, context: CallContext & CallContextExt): Promise<DeepPartial<NfsShare>>;
  /** Delete an NFS share. The underlying volume is automatically deleted. */
  deleteNfsShare(
    request: DeleteNfsShareRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /** List the budget details to provision resources on a given project. */
  listProvisioningQuotas(
    request: ListProvisioningQuotasRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListProvisioningQuotasResponse>>;
  /** Submit a provisiong configuration for a given project. */
  submitProvisioningConfig(
    request: SubmitProvisioningConfigRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<SubmitProvisioningConfigResponse>>;
  /** Get ProvisioningConfig by name. */
  getProvisioningConfig(
    request: GetProvisioningConfigRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ProvisioningConfig>>;
  /** Create new ProvisioningConfig. */
  createProvisioningConfig(
    request: CreateProvisioningConfigRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ProvisioningConfig>>;
  /** Update existing ProvisioningConfig. */
  updateProvisioningConfig(
    request: UpdateProvisioningConfigRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ProvisioningConfig>>;
  /**
   * RenameNetwork sets a new name for a network.
   * Use with caution, previous names become immediately invalidated.
   */
  renameNetwork(request: RenameNetworkRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Network>>;
  /** Retrieves the list of OS images which are currently approved. */
  listOSImages(
    request: ListOSImagesRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListOSImagesResponse>>;
}

export interface BareMetalSolutionClient<CallOptionsExt = {}> {
  /** List servers in a given project and location. */
  listInstances(
    request: DeepPartial<ListInstancesRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListInstancesResponse>;
  /** Get details about a single server. */
  getInstance(request: DeepPartial<GetInstanceRequest>, options?: CallOptions & CallOptionsExt): Promise<Instance>;
  /** Update details of a single server. */
  updateInstance(
    request: DeepPartial<UpdateInstanceRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /**
   * RenameInstance sets a new name for an instance.
   * Use with caution, previous names become immediately invalidated.
   */
  renameInstance(
    request: DeepPartial<RenameInstanceRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Instance>;
  /**
   * Perform an ungraceful, hard reset on a server. Equivalent to shutting the
   * power off and then turning it back on.
   */
  resetInstance(request: DeepPartial<ResetInstanceRequest>, options?: CallOptions & CallOptionsExt): Promise<Operation>;
  /** Starts a server that was shutdown. */
  startInstance(request: DeepPartial<StartInstanceRequest>, options?: CallOptions & CallOptionsExt): Promise<Operation>;
  /** Stop a running server. */
  stopInstance(request: DeepPartial<StopInstanceRequest>, options?: CallOptions & CallOptionsExt): Promise<Operation>;
  /** Enable the interactive serial console feature on an instance. */
  enableInteractiveSerialConsole(
    request: DeepPartial<EnableInteractiveSerialConsoleRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /** Disable the interactive serial console feature on an instance. */
  disableInteractiveSerialConsole(
    request: DeepPartial<DisableInteractiveSerialConsoleRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /** Detach LUN from Instance. */
  detachLun(request: DeepPartial<DetachLunRequest>, options?: CallOptions & CallOptionsExt): Promise<Operation>;
  /**
   * Lists the public SSH keys registered for the specified project.
   * These SSH keys are used only for the interactive serial console feature.
   */
  listSSHKeys(
    request: DeepPartial<ListSSHKeysRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListSSHKeysResponse>;
  /**
   * Register a public SSH key in the specified project for use with the
   * interactive serial console feature.
   */
  createSSHKey(request: DeepPartial<CreateSSHKeyRequest>, options?: CallOptions & CallOptionsExt): Promise<SSHKey>;
  /** Deletes a public SSH key registered in the specified project. */
  deleteSSHKey(request: DeepPartial<DeleteSSHKeyRequest>, options?: CallOptions & CallOptionsExt): Promise<Empty>;
  /** List storage volumes in a given project and location. */
  listVolumes(
    request: DeepPartial<ListVolumesRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListVolumesResponse>;
  /** Get details of a single storage volume. */
  getVolume(request: DeepPartial<GetVolumeRequest>, options?: CallOptions & CallOptionsExt): Promise<Volume>;
  /** Update details of a single storage volume. */
  updateVolume(request: DeepPartial<UpdateVolumeRequest>, options?: CallOptions & CallOptionsExt): Promise<Operation>;
  /**
   * RenameVolume sets a new name for a volume.
   * Use with caution, previous names become immediately invalidated.
   */
  renameVolume(request: DeepPartial<RenameVolumeRequest>, options?: CallOptions & CallOptionsExt): Promise<Volume>;
  /**
   * Skips volume's cooloff and deletes it now.
   * Volume must be in cooloff state.
   */
  evictVolume(request: DeepPartial<EvictVolumeRequest>, options?: CallOptions & CallOptionsExt): Promise<Operation>;
  /** Emergency Volume resize. */
  resizeVolume(request: DeepPartial<ResizeVolumeRequest>, options?: CallOptions & CallOptionsExt): Promise<Operation>;
  /** List network in a given project and location. */
  listNetworks(
    request: DeepPartial<ListNetworksRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListNetworksResponse>;
  /**
   * List all Networks (and used IPs for each Network) in the vendor account
   * associated with the specified project.
   */
  listNetworkUsage(
    request: DeepPartial<ListNetworkUsageRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListNetworkUsageResponse>;
  /** Get details of a single network. */
  getNetwork(request: DeepPartial<GetNetworkRequest>, options?: CallOptions & CallOptionsExt): Promise<Network>;
  /** Update details of a single network. */
  updateNetwork(request: DeepPartial<UpdateNetworkRequest>, options?: CallOptions & CallOptionsExt): Promise<Operation>;
  /**
   * Takes a snapshot of a boot volume.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   */
  createVolumeSnapshot(
    request: DeepPartial<CreateVolumeSnapshotRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<VolumeSnapshot>;
  /**
   * Uses the specified snapshot to restore its parent volume.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   */
  restoreVolumeSnapshot(
    request: DeepPartial<RestoreVolumeSnapshotRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /**
   * Deletes a volume snapshot.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   */
  deleteVolumeSnapshot(
    request: DeepPartial<DeleteVolumeSnapshotRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Empty>;
  /**
   * Returns the specified snapshot resource.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   */
  getVolumeSnapshot(
    request: DeepPartial<GetVolumeSnapshotRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<VolumeSnapshot>;
  /**
   * Retrieves the list of snapshots for the specified volume.
   * Returns a response with an empty list of snapshots if called
   * for a non-boot volume.
   */
  listVolumeSnapshots(
    request: DeepPartial<ListVolumeSnapshotsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListVolumeSnapshotsResponse>;
  /** Get details of a single storage logical unit number(LUN). */
  getLun(request: DeepPartial<GetLunRequest>, options?: CallOptions & CallOptionsExt): Promise<Lun>;
  /** List storage volume luns for given storage volume. */
  listLuns(request: DeepPartial<ListLunsRequest>, options?: CallOptions & CallOptionsExt): Promise<ListLunsResponse>;
  /**
   * Skips lun's cooloff and deletes it now.
   * Lun must be in cooloff state.
   */
  evictLun(request: DeepPartial<EvictLunRequest>, options?: CallOptions & CallOptionsExt): Promise<Operation>;
  /** Get details of a single NFS share. */
  getNfsShare(request: DeepPartial<GetNfsShareRequest>, options?: CallOptions & CallOptionsExt): Promise<NfsShare>;
  /** List NFS shares. */
  listNfsShares(
    request: DeepPartial<ListNfsSharesRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListNfsSharesResponse>;
  /** Update details of a single NFS share. */
  updateNfsShare(
    request: DeepPartial<UpdateNfsShareRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /** Create an NFS share. */
  createNfsShare(
    request: DeepPartial<CreateNfsShareRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /**
   * RenameNfsShare sets a new name for an nfsshare.
   * Use with caution, previous names become immediately invalidated.
   */
  renameNfsShare(
    request: DeepPartial<RenameNfsShareRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<NfsShare>;
  /** Delete an NFS share. The underlying volume is automatically deleted. */
  deleteNfsShare(
    request: DeepPartial<DeleteNfsShareRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /** List the budget details to provision resources on a given project. */
  listProvisioningQuotas(
    request: DeepPartial<ListProvisioningQuotasRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListProvisioningQuotasResponse>;
  /** Submit a provisiong configuration for a given project. */
  submitProvisioningConfig(
    request: DeepPartial<SubmitProvisioningConfigRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<SubmitProvisioningConfigResponse>;
  /** Get ProvisioningConfig by name. */
  getProvisioningConfig(
    request: DeepPartial<GetProvisioningConfigRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ProvisioningConfig>;
  /** Create new ProvisioningConfig. */
  createProvisioningConfig(
    request: DeepPartial<CreateProvisioningConfigRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ProvisioningConfig>;
  /** Update existing ProvisioningConfig. */
  updateProvisioningConfig(
    request: DeepPartial<UpdateProvisioningConfigRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ProvisioningConfig>;
  /**
   * RenameNetwork sets a new name for a network.
   * Use with caution, previous names become immediately invalidated.
   */
  renameNetwork(request: DeepPartial<RenameNetworkRequest>, options?: CallOptions & CallOptionsExt): Promise<Network>;
  /** Retrieves the list of OS images which are currently approved. */
  listOSImages(
    request: DeepPartial<ListOSImagesRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListOSImagesResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function toTimestamp(date: Date): Timestamp {
  const seconds = numberToLong(Math.trunc(date.getTime() / 1_000));
  const nanos = (date.getTime() % 1_000) * 1_000_000;
  return { seconds, nanos };
}

function fromTimestamp(t: Timestamp): Date {
  let millis = (t.seconds.toNumber() || 0) * 1_000;
  millis += (t.nanos || 0) / 1_000_000;
  return new globalThis.Date(millis);
}

function fromJsonTimestamp(o: any): Date {
  if (o instanceof globalThis.Date) {
    return o;
  } else if (typeof o === "string") {
    return new globalThis.Date(o);
  } else {
    return fromTimestamp(Timestamp.fromJSON(o));
  }
}

function numberToLong(number: number) {
  return Long.fromNumber(number);
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
