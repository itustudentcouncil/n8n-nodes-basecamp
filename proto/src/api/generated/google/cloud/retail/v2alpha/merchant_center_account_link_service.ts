// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/retail/v2alpha/merchant_center_account_link_service.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { Operation } from "../../../longrunning/operations.js";
import { Empty } from "../../../protobuf/empty.js";
import { MerchantCenterAccountLink } from "./merchant_center_account_link.js";

export const protobufPackage = "google.cloud.retail.v2alpha";

/**
 * Request for
 * [MerchantCenterAccountLinkService.ListMerchantCenterAccountLinks][google.cloud.retail.v2alpha.MerchantCenterAccountLinkService.ListMerchantCenterAccountLinks]
 * method.
 */
export interface ListMerchantCenterAccountLinksRequest {
  /**
   * Required. The parent Catalog of the resource.
   * It must match this format:
   * `projects/{PROJECT_NUMBER}/locations/global/catalogs/{CATALOG_ID}`
   */
  parent: string;
}

/**
 * Response for
 * [MerchantCenterAccountLinkService.ListMerchantCenterAccountLinks][google.cloud.retail.v2alpha.MerchantCenterAccountLinkService.ListMerchantCenterAccountLinks]
 * method.
 */
export interface ListMerchantCenterAccountLinksResponse {
  /** The links. */
  merchantCenterAccountLinks: MerchantCenterAccountLink[];
}

/**
 * Request for
 * [MerchantCenterAccountLinkService.CreateMerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLinkService.CreateMerchantCenterAccountLink]
 * method.
 */
export interface CreateMerchantCenterAccountLinkRequest {
  /**
   * Required. The branch resource where this MerchantCenterAccountLink will be
   * created. Format:
   * `projects/{PROJECT_NUMBER}/locations/global/catalogs/{CATALOG_ID}`
   */
  parent: string;
  /**
   * Required. The
   * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink]
   * to create.
   *
   * If the caller does not have permission to create the
   * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink],
   * regardless of whether or not it exists, a PERMISSION_DENIED error is
   * returned.
   */
  merchantCenterAccountLink: MerchantCenterAccountLink | undefined;
}

/**
 * Request for
 * [MerchantCenterAccountLinkService.DeleteMerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLinkService.DeleteMerchantCenterAccountLink]
 * method.
 */
export interface DeleteMerchantCenterAccountLinkRequest {
  /**
   * Required. Full resource name. Format:
   * `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/merchantCenterAccountLinks/{merchant_center_account_link_id}`
   */
  name: string;
}

function createBaseListMerchantCenterAccountLinksRequest(): ListMerchantCenterAccountLinksRequest {
  return { parent: "" };
}

export const ListMerchantCenterAccountLinksRequest: MessageFns<ListMerchantCenterAccountLinksRequest> = {
  encode(message: ListMerchantCenterAccountLinksRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListMerchantCenterAccountLinksRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListMerchantCenterAccountLinksRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListMerchantCenterAccountLinksRequest {
    return { parent: isSet(object.parent) ? globalThis.String(object.parent) : "" };
  },

  toJSON(message: ListMerchantCenterAccountLinksRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    return obj;
  },

  create(base?: DeepPartial<ListMerchantCenterAccountLinksRequest>): ListMerchantCenterAccountLinksRequest {
    return ListMerchantCenterAccountLinksRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListMerchantCenterAccountLinksRequest>): ListMerchantCenterAccountLinksRequest {
    const message = createBaseListMerchantCenterAccountLinksRequest();
    message.parent = object.parent ?? "";
    return message;
  },
};

function createBaseListMerchantCenterAccountLinksResponse(): ListMerchantCenterAccountLinksResponse {
  return { merchantCenterAccountLinks: [] };
}

export const ListMerchantCenterAccountLinksResponse: MessageFns<ListMerchantCenterAccountLinksResponse> = {
  encode(message: ListMerchantCenterAccountLinksResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.merchantCenterAccountLinks) {
      MerchantCenterAccountLink.encode(v!, writer.uint32(10).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListMerchantCenterAccountLinksResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListMerchantCenterAccountLinksResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.merchantCenterAccountLinks.push(MerchantCenterAccountLink.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListMerchantCenterAccountLinksResponse {
    return {
      merchantCenterAccountLinks: globalThis.Array.isArray(object?.merchantCenterAccountLinks)
        ? object.merchantCenterAccountLinks.map((e: any) => MerchantCenterAccountLink.fromJSON(e))
        : [],
    };
  },

  toJSON(message: ListMerchantCenterAccountLinksResponse): unknown {
    const obj: any = {};
    if (message.merchantCenterAccountLinks?.length) {
      obj.merchantCenterAccountLinks = message.merchantCenterAccountLinks.map((e) =>
        MerchantCenterAccountLink.toJSON(e)
      );
    }
    return obj;
  },

  create(base?: DeepPartial<ListMerchantCenterAccountLinksResponse>): ListMerchantCenterAccountLinksResponse {
    return ListMerchantCenterAccountLinksResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListMerchantCenterAccountLinksResponse>): ListMerchantCenterAccountLinksResponse {
    const message = createBaseListMerchantCenterAccountLinksResponse();
    message.merchantCenterAccountLinks =
      object.merchantCenterAccountLinks?.map((e) => MerchantCenterAccountLink.fromPartial(e)) || [];
    return message;
  },
};

function createBaseCreateMerchantCenterAccountLinkRequest(): CreateMerchantCenterAccountLinkRequest {
  return { parent: "", merchantCenterAccountLink: undefined };
}

export const CreateMerchantCenterAccountLinkRequest: MessageFns<CreateMerchantCenterAccountLinkRequest> = {
  encode(message: CreateMerchantCenterAccountLinkRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    if (message.merchantCenterAccountLink !== undefined) {
      MerchantCenterAccountLink.encode(message.merchantCenterAccountLink, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CreateMerchantCenterAccountLinkRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCreateMerchantCenterAccountLinkRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.merchantCenterAccountLink = MerchantCenterAccountLink.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CreateMerchantCenterAccountLinkRequest {
    return {
      parent: isSet(object.parent) ? globalThis.String(object.parent) : "",
      merchantCenterAccountLink: isSet(object.merchantCenterAccountLink)
        ? MerchantCenterAccountLink.fromJSON(object.merchantCenterAccountLink)
        : undefined,
    };
  },

  toJSON(message: CreateMerchantCenterAccountLinkRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    if (message.merchantCenterAccountLink !== undefined) {
      obj.merchantCenterAccountLink = MerchantCenterAccountLink.toJSON(message.merchantCenterAccountLink);
    }
    return obj;
  },

  create(base?: DeepPartial<CreateMerchantCenterAccountLinkRequest>): CreateMerchantCenterAccountLinkRequest {
    return CreateMerchantCenterAccountLinkRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CreateMerchantCenterAccountLinkRequest>): CreateMerchantCenterAccountLinkRequest {
    const message = createBaseCreateMerchantCenterAccountLinkRequest();
    message.parent = object.parent ?? "";
    message.merchantCenterAccountLink =
      (object.merchantCenterAccountLink !== undefined && object.merchantCenterAccountLink !== null)
        ? MerchantCenterAccountLink.fromPartial(object.merchantCenterAccountLink)
        : undefined;
    return message;
  },
};

function createBaseDeleteMerchantCenterAccountLinkRequest(): DeleteMerchantCenterAccountLinkRequest {
  return { name: "" };
}

export const DeleteMerchantCenterAccountLinkRequest: MessageFns<DeleteMerchantCenterAccountLinkRequest> = {
  encode(message: DeleteMerchantCenterAccountLinkRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DeleteMerchantCenterAccountLinkRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDeleteMerchantCenterAccountLinkRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DeleteMerchantCenterAccountLinkRequest {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: DeleteMerchantCenterAccountLinkRequest): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<DeleteMerchantCenterAccountLinkRequest>): DeleteMerchantCenterAccountLinkRequest {
    return DeleteMerchantCenterAccountLinkRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DeleteMerchantCenterAccountLinkRequest>): DeleteMerchantCenterAccountLinkRequest {
    const message = createBaseDeleteMerchantCenterAccountLinkRequest();
    message.name = object.name ?? "";
    return message;
  },
};

/** Merchant Center Link service to link a Branch to a Merchant Center Account. */
export type MerchantCenterAccountLinkServiceDefinition = typeof MerchantCenterAccountLinkServiceDefinition;
export const MerchantCenterAccountLinkServiceDefinition = {
  name: "MerchantCenterAccountLinkService",
  fullName: "google.cloud.retail.v2alpha.MerchantCenterAccountLinkService",
  methods: {
    /**
     * Lists all
     * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink]s
     * under the specified parent [Catalog][google.cloud.retail.v2alpha.Catalog].
     */
    listMerchantCenterAccountLinks: {
      name: "ListMerchantCenterAccountLinks",
      requestType: ListMerchantCenterAccountLinksRequest,
      requestStream: false,
      responseType: ListMerchantCenterAccountLinksResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              80,
              18,
              78,
              47,
              118,
              50,
              97,
              108,
              112,
              104,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              99,
              97,
              116,
              97,
              108,
              111,
              103,
              115,
              47,
              42,
              125,
              47,
              109,
              101,
              114,
              99,
              104,
              97,
              110,
              116,
              67,
              101,
              110,
              116,
              101,
              114,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              76,
              105,
              110,
              107,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Creates a
     * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink].
     */
    createMerchantCenterAccountLink: {
      name: "CreateMerchantCenterAccountLink",
      requestType: CreateMerchantCenterAccountLinkRequest,
      requestStream: false,
      responseType: Operation,
      responseStream: false,
      options: {
        _unknownFields: {
          8394: [
            Buffer.from([
              124,
              10,
              53,
              103,
              111,
              111,
              103,
              108,
              101,
              46,
              99,
              108,
              111,
              117,
              100,
              46,
              114,
              101,
              116,
              97,
              105,
              108,
              46,
              118,
              50,
              97,
              108,
              112,
              104,
              97,
              46,
              77,
              101,
              114,
              99,
              104,
              97,
              110,
              116,
              67,
              101,
              110,
              116,
              101,
              114,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              76,
              105,
              110,
              107,
              18,
              67,
              103,
              111,
              111,
              103,
              108,
              101,
              46,
              99,
              108,
              111,
              117,
              100,
              46,
              114,
              101,
              116,
              97,
              105,
              108,
              46,
              118,
              50,
              97,
              108,
              112,
              104,
              97,
              46,
              67,
              114,
              101,
              97,
              116,
              101,
              77,
              101,
              114,
              99,
              104,
              97,
              110,
              116,
              67,
              101,
              110,
              116,
              101,
              114,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              76,
              105,
              110,
              107,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
            ]),
          ],
          8410: [
            Buffer.from([
              35,
              112,
              97,
              114,
              101,
              110,
              116,
              44,
              109,
              101,
              114,
              99,
              104,
              97,
              110,
              116,
              95,
              99,
              101,
              110,
              116,
              101,
              114,
              95,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              108,
              105,
              110,
              107,
            ]),
          ],
          578365826: [
            Buffer.from([
              110,
              58,
              28,
              109,
              101,
              114,
              99,
              104,
              97,
              110,
              116,
              95,
              99,
              101,
              110,
              116,
              101,
              114,
              95,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              108,
              105,
              110,
              107,
              34,
              78,
              47,
              118,
              50,
              97,
              108,
              112,
              104,
              97,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              99,
              97,
              116,
              97,
              108,
              111,
              103,
              115,
              47,
              42,
              125,
              47,
              109,
              101,
              114,
              99,
              104,
              97,
              110,
              116,
              67,
              101,
              110,
              116,
              101,
              114,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              76,
              105,
              110,
              107,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Deletes a
     * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink].
     * If the
     * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink]
     * to delete does not exist, a NOT_FOUND error is returned.
     */
    deleteMerchantCenterAccountLink: {
      name: "DeleteMerchantCenterAccountLink",
      requestType: DeleteMerchantCenterAccountLinkRequest,
      requestStream: false,
      responseType: Empty,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              80,
              42,
              78,
              47,
              118,
              50,
              97,
              108,
              112,
              104,
              97,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              99,
              97,
              116,
              97,
              108,
              111,
              103,
              115,
              47,
              42,
              47,
              109,
              101,
              114,
              99,
              104,
              97,
              110,
              116,
              67,
              101,
              110,
              116,
              101,
              114,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              76,
              105,
              110,
              107,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface MerchantCenterAccountLinkServiceImplementation<CallContextExt = {}> {
  /**
   * Lists all
   * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink]s
   * under the specified parent [Catalog][google.cloud.retail.v2alpha.Catalog].
   */
  listMerchantCenterAccountLinks(
    request: ListMerchantCenterAccountLinksRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListMerchantCenterAccountLinksResponse>>;
  /**
   * Creates a
   * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink].
   */
  createMerchantCenterAccountLink(
    request: CreateMerchantCenterAccountLinkRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Operation>>;
  /**
   * Deletes a
   * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink].
   * If the
   * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink]
   * to delete does not exist, a NOT_FOUND error is returned.
   */
  deleteMerchantCenterAccountLink(
    request: DeleteMerchantCenterAccountLinkRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Empty>>;
}

export interface MerchantCenterAccountLinkServiceClient<CallOptionsExt = {}> {
  /**
   * Lists all
   * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink]s
   * under the specified parent [Catalog][google.cloud.retail.v2alpha.Catalog].
   */
  listMerchantCenterAccountLinks(
    request: DeepPartial<ListMerchantCenterAccountLinksRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListMerchantCenterAccountLinksResponse>;
  /**
   * Creates a
   * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink].
   */
  createMerchantCenterAccountLink(
    request: DeepPartial<CreateMerchantCenterAccountLinkRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Operation>;
  /**
   * Deletes a
   * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink].
   * If the
   * [MerchantCenterAccountLink][google.cloud.retail.v2alpha.MerchantCenterAccountLink]
   * to delete does not exist, a NOT_FOUND error is returned.
   */
  deleteMerchantCenterAccountLink(
    request: DeepPartial<DeleteMerchantCenterAccountLinkRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Empty>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
