// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/dataproc/v1/autoscaling_policies.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { Duration } from "../../../protobuf/duration.js";
import { Empty } from "../../../protobuf/empty.js";

export const protobufPackage = "google.cloud.dataproc.v1";

/** Describes an autoscaling policy for Dataproc cluster autoscaler. */
export interface AutoscalingPolicy {
  /**
   * Required. The policy id.
   *
   * The id must contain only letters (a-z, A-Z), numbers (0-9),
   * underscores (_), and hyphens (-). Cannot begin or end with underscore
   * or hyphen. Must consist of between 3 and 50 characters.
   */
  id: string;
  /**
   * Output only. The "resource name" of the autoscaling policy, as described
   * in https://cloud.google.com/apis/design/resource_names.
   *
   * * For `projects.regions.autoscalingPolicies`, the resource name of the
   *   policy has the following format:
   *   `projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}`
   *
   * * For `projects.locations.autoscalingPolicies`, the resource name of the
   *   policy has the following format:
   *   `projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}`
   */
  name: string;
  basicAlgorithm?:
    | BasicAutoscalingAlgorithm
    | undefined;
  /** Required. Describes how the autoscaler will operate for primary workers. */
  workerConfig:
    | InstanceGroupAutoscalingPolicyConfig
    | undefined;
  /** Optional. Describes how the autoscaler will operate for secondary workers. */
  secondaryWorkerConfig:
    | InstanceGroupAutoscalingPolicyConfig
    | undefined;
  /**
   * Optional. The labels to associate with this autoscaling policy.
   * Label **keys** must contain 1 to 63 characters, and must conform to
   * [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
   * Label **values** may be empty, but, if present, must contain 1 to 63
   * characters, and must conform to [RFC
   * 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be
   * associated with an autoscaling policy.
   */
  labels: { [key: string]: string };
}

export interface AutoscalingPolicy_LabelsEntry {
  key: string;
  value: string;
}

/** Basic algorithm for autoscaling. */
export interface BasicAutoscalingAlgorithm {
  /** Required. YARN autoscaling configuration. */
  yarnConfig?:
    | BasicYarnAutoscalingConfig
    | undefined;
  /**
   * Optional. Duration between scaling events. A scaling period starts after
   * the update operation from the previous event has completed.
   *
   * Bounds: [2m, 1d]. Default: 2m.
   */
  cooldownPeriod: Duration | undefined;
}

/** Basic autoscaling configurations for YARN. */
export interface BasicYarnAutoscalingConfig {
  /**
   * Required. Timeout for YARN graceful decommissioning of Node Managers.
   * Specifies the duration to wait for jobs to complete before forcefully
   * removing workers (and potentially interrupting jobs). Only applicable to
   * downscaling operations.
   *
   * Bounds: [0s, 1d].
   */
  gracefulDecommissionTimeout:
    | Duration
    | undefined;
  /**
   * Required. Fraction of average YARN pending memory in the last cooldown
   * period for which to add workers. A scale-up factor of 1.0 will result in
   * scaling up so that there is no pending memory remaining after the update
   * (more aggressive scaling). A scale-up factor closer to 0 will result in a
   * smaller magnitude of scaling up (less aggressive scaling). See [How
   * autoscaling
   * works](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works)
   * for more information.
   *
   * Bounds: [0.0, 1.0].
   */
  scaleUpFactor: number;
  /**
   * Required. Fraction of average YARN pending memory in the last cooldown
   * period for which to remove workers. A scale-down factor of 1 will result in
   * scaling down so that there is no available memory remaining after the
   * update (more aggressive scaling). A scale-down factor of 0 disables
   * removing workers, which can be beneficial for autoscaling a single job.
   * See [How autoscaling
   * works](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works)
   * for more information.
   *
   * Bounds: [0.0, 1.0].
   */
  scaleDownFactor: number;
  /**
   * Optional. Minimum scale-up threshold as a fraction of total cluster size
   * before scaling occurs. For example, in a 20-worker cluster, a threshold of
   * 0.1 means the autoscaler must recommend at least a 2-worker scale-up for
   * the cluster to scale. A threshold of 0 means the autoscaler will scale up
   * on any recommended change.
   *
   * Bounds: [0.0, 1.0]. Default: 0.0.
   */
  scaleUpMinWorkerFraction: number;
  /**
   * Optional. Minimum scale-down threshold as a fraction of total cluster size
   * before scaling occurs. For example, in a 20-worker cluster, a threshold of
   * 0.1 means the autoscaler must recommend at least a 2 worker scale-down for
   * the cluster to scale. A threshold of 0 means the autoscaler will scale down
   * on any recommended change.
   *
   * Bounds: [0.0, 1.0]. Default: 0.0.
   */
  scaleDownMinWorkerFraction: number;
}

/**
 * Configuration for the size bounds of an instance group, including its
 * proportional size to other groups.
 */
export interface InstanceGroupAutoscalingPolicyConfig {
  /**
   * Optional. Minimum number of instances for this group.
   *
   * Primary workers - Bounds: [2, max_instances]. Default: 2.
   * Secondary workers - Bounds: [0, max_instances]. Default: 0.
   */
  minInstances: number;
  /**
   * Required. Maximum number of instances for this group. Required for primary
   * workers. Note that by default, clusters will not use secondary workers.
   * Required for secondary workers if the minimum secondary instances is set.
   *
   * Primary workers - Bounds: [min_instances, ).
   * Secondary workers - Bounds: [min_instances, ). Default: 0.
   */
  maxInstances: number;
  /**
   * Optional. Weight for the instance group, which is used to determine the
   * fraction of total workers in the cluster from this instance group.
   * For example, if primary workers have weight 2, and secondary workers have
   * weight 1, the cluster will have approximately 2 primary workers for each
   * secondary worker.
   *
   * The cluster may not reach the specified balance if constrained
   * by min/max bounds or other autoscaling settings. For example, if
   * `max_instances` for secondary workers is 0, then only primary workers will
   * be added. The cluster can also be out of balance when created.
   *
   * If weight is not set on any instance group, the cluster will default to
   * equal weight for all groups: the cluster will attempt to maintain an equal
   * number of workers in each group within the configured size bounds for each
   * group. If weight is set for one group only, the cluster will default to
   * zero weight on the unset group. For example if weight is set only on
   * primary workers, the cluster will use primary workers only and no
   * secondary workers.
   */
  weight: number;
}

/** A request to create an autoscaling policy. */
export interface CreateAutoscalingPolicyRequest {
  /**
   * Required. The "resource name" of the region or location, as described
   * in https://cloud.google.com/apis/design/resource_names.
   *
   * * For `projects.regions.autoscalingPolicies.create`, the resource name
   *   of the region has the following format:
   *   `projects/{project_id}/regions/{region}`
   *
   * * For `projects.locations.autoscalingPolicies.create`, the resource name
   *   of the location has the following format:
   *   `projects/{project_id}/locations/{location}`
   */
  parent: string;
  /** Required. The autoscaling policy to create. */
  policy: AutoscalingPolicy | undefined;
}

/** A request to fetch an autoscaling policy. */
export interface GetAutoscalingPolicyRequest {
  /**
   * Required. The "resource name" of the autoscaling policy, as described
   * in https://cloud.google.com/apis/design/resource_names.
   *
   * * For `projects.regions.autoscalingPolicies.get`, the resource name
   *   of the policy has the following format:
   *   `projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}`
   *
   * * For `projects.locations.autoscalingPolicies.get`, the resource name
   *   of the policy has the following format:
   *   `projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}`
   */
  name: string;
}

/** A request to update an autoscaling policy. */
export interface UpdateAutoscalingPolicyRequest {
  /** Required. The updated autoscaling policy. */
  policy: AutoscalingPolicy | undefined;
}

/**
 * A request to delete an autoscaling policy.
 *
 * Autoscaling policies in use by one or more clusters will not be deleted.
 */
export interface DeleteAutoscalingPolicyRequest {
  /**
   * Required. The "resource name" of the autoscaling policy, as described
   * in https://cloud.google.com/apis/design/resource_names.
   *
   * * For `projects.regions.autoscalingPolicies.delete`, the resource name
   *   of the policy has the following format:
   *   `projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}`
   *
   * * For `projects.locations.autoscalingPolicies.delete`, the resource name
   *   of the policy has the following format:
   *   `projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}`
   */
  name: string;
}

/** A request to list autoscaling policies in a project. */
export interface ListAutoscalingPoliciesRequest {
  /**
   * Required. The "resource name" of the region or location, as described
   * in https://cloud.google.com/apis/design/resource_names.
   *
   * * For `projects.regions.autoscalingPolicies.list`, the resource name
   *   of the region has the following format:
   *   `projects/{project_id}/regions/{region}`
   *
   * * For `projects.locations.autoscalingPolicies.list`, the resource name
   *   of the location has the following format:
   *   `projects/{project_id}/locations/{location}`
   */
  parent: string;
  /**
   * Optional. The maximum number of results to return in each response.
   * Must be less than or equal to 1000. Defaults to 100.
   */
  pageSize: number;
  /**
   * Optional. The page token, returned by a previous call, to request the
   * next page of results.
   */
  pageToken: string;
}

/** A response to a request to list autoscaling policies in a project. */
export interface ListAutoscalingPoliciesResponse {
  /** Output only. Autoscaling policies list. */
  policies: AutoscalingPolicy[];
  /**
   * Output only. This token is included in the response if there are more
   * results to fetch.
   */
  nextPageToken: string;
}

function createBaseAutoscalingPolicy(): AutoscalingPolicy {
  return {
    id: "",
    name: "",
    basicAlgorithm: undefined,
    workerConfig: undefined,
    secondaryWorkerConfig: undefined,
    labels: {},
  };
}

export const AutoscalingPolicy: MessageFns<AutoscalingPolicy> = {
  encode(message: AutoscalingPolicy, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    if (message.name !== "") {
      writer.uint32(18).string(message.name);
    }
    if (message.basicAlgorithm !== undefined) {
      BasicAutoscalingAlgorithm.encode(message.basicAlgorithm, writer.uint32(26).fork()).join();
    }
    if (message.workerConfig !== undefined) {
      InstanceGroupAutoscalingPolicyConfig.encode(message.workerConfig, writer.uint32(34).fork()).join();
    }
    if (message.secondaryWorkerConfig !== undefined) {
      InstanceGroupAutoscalingPolicyConfig.encode(message.secondaryWorkerConfig, writer.uint32(42).fork()).join();
    }
    Object.entries(message.labels).forEach(([key, value]) => {
      AutoscalingPolicy_LabelsEntry.encode({ key: key as any, value }, writer.uint32(50).fork()).join();
    });
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AutoscalingPolicy {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAutoscalingPolicy();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.id = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.name = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.basicAlgorithm = BasicAutoscalingAlgorithm.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.workerConfig = InstanceGroupAutoscalingPolicyConfig.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.secondaryWorkerConfig = InstanceGroupAutoscalingPolicyConfig.decode(reader, reader.uint32());
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          const entry6 = AutoscalingPolicy_LabelsEntry.decode(reader, reader.uint32());
          if (entry6.value !== undefined) {
            message.labels[entry6.key] = entry6.value;
          }
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): AutoscalingPolicy {
    return {
      id: isSet(object.id) ? globalThis.String(object.id) : "",
      name: isSet(object.name) ? globalThis.String(object.name) : "",
      basicAlgorithm: isSet(object.basicAlgorithm)
        ? BasicAutoscalingAlgorithm.fromJSON(object.basicAlgorithm)
        : undefined,
      workerConfig: isSet(object.workerConfig)
        ? InstanceGroupAutoscalingPolicyConfig.fromJSON(object.workerConfig)
        : undefined,
      secondaryWorkerConfig: isSet(object.secondaryWorkerConfig)
        ? InstanceGroupAutoscalingPolicyConfig.fromJSON(object.secondaryWorkerConfig)
        : undefined,
      labels: isObject(object.labels)
        ? Object.entries(object.labels).reduce<{ [key: string]: string }>((acc, [key, value]) => {
          acc[key] = String(value);
          return acc;
        }, {})
        : {},
    };
  },

  toJSON(message: AutoscalingPolicy): unknown {
    const obj: any = {};
    if (message.id !== "") {
      obj.id = message.id;
    }
    if (message.name !== "") {
      obj.name = message.name;
    }
    if (message.basicAlgorithm !== undefined) {
      obj.basicAlgorithm = BasicAutoscalingAlgorithm.toJSON(message.basicAlgorithm);
    }
    if (message.workerConfig !== undefined) {
      obj.workerConfig = InstanceGroupAutoscalingPolicyConfig.toJSON(message.workerConfig);
    }
    if (message.secondaryWorkerConfig !== undefined) {
      obj.secondaryWorkerConfig = InstanceGroupAutoscalingPolicyConfig.toJSON(message.secondaryWorkerConfig);
    }
    if (message.labels) {
      const entries = Object.entries(message.labels);
      if (entries.length > 0) {
        obj.labels = {};
        entries.forEach(([k, v]) => {
          obj.labels[k] = v;
        });
      }
    }
    return obj;
  },

  create(base?: DeepPartial<AutoscalingPolicy>): AutoscalingPolicy {
    return AutoscalingPolicy.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<AutoscalingPolicy>): AutoscalingPolicy {
    const message = createBaseAutoscalingPolicy();
    message.id = object.id ?? "";
    message.name = object.name ?? "";
    message.basicAlgorithm = (object.basicAlgorithm !== undefined && object.basicAlgorithm !== null)
      ? BasicAutoscalingAlgorithm.fromPartial(object.basicAlgorithm)
      : undefined;
    message.workerConfig = (object.workerConfig !== undefined && object.workerConfig !== null)
      ? InstanceGroupAutoscalingPolicyConfig.fromPartial(object.workerConfig)
      : undefined;
    message.secondaryWorkerConfig =
      (object.secondaryWorkerConfig !== undefined && object.secondaryWorkerConfig !== null)
        ? InstanceGroupAutoscalingPolicyConfig.fromPartial(object.secondaryWorkerConfig)
        : undefined;
    message.labels = Object.entries(object.labels ?? {}).reduce<{ [key: string]: string }>((acc, [key, value]) => {
      if (value !== undefined) {
        acc[key] = globalThis.String(value);
      }
      return acc;
    }, {});
    return message;
  },
};

function createBaseAutoscalingPolicy_LabelsEntry(): AutoscalingPolicy_LabelsEntry {
  return { key: "", value: "" };
}

export const AutoscalingPolicy_LabelsEntry: MessageFns<AutoscalingPolicy_LabelsEntry> = {
  encode(message: AutoscalingPolicy_LabelsEntry, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.key !== "") {
      writer.uint32(10).string(message.key);
    }
    if (message.value !== "") {
      writer.uint32(18).string(message.value);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AutoscalingPolicy_LabelsEntry {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAutoscalingPolicy_LabelsEntry();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.key = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.value = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): AutoscalingPolicy_LabelsEntry {
    return {
      key: isSet(object.key) ? globalThis.String(object.key) : "",
      value: isSet(object.value) ? globalThis.String(object.value) : "",
    };
  },

  toJSON(message: AutoscalingPolicy_LabelsEntry): unknown {
    const obj: any = {};
    if (message.key !== "") {
      obj.key = message.key;
    }
    if (message.value !== "") {
      obj.value = message.value;
    }
    return obj;
  },

  create(base?: DeepPartial<AutoscalingPolicy_LabelsEntry>): AutoscalingPolicy_LabelsEntry {
    return AutoscalingPolicy_LabelsEntry.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<AutoscalingPolicy_LabelsEntry>): AutoscalingPolicy_LabelsEntry {
    const message = createBaseAutoscalingPolicy_LabelsEntry();
    message.key = object.key ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseBasicAutoscalingAlgorithm(): BasicAutoscalingAlgorithm {
  return { yarnConfig: undefined, cooldownPeriod: undefined };
}

export const BasicAutoscalingAlgorithm: MessageFns<BasicAutoscalingAlgorithm> = {
  encode(message: BasicAutoscalingAlgorithm, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.yarnConfig !== undefined) {
      BasicYarnAutoscalingConfig.encode(message.yarnConfig, writer.uint32(10).fork()).join();
    }
    if (message.cooldownPeriod !== undefined) {
      Duration.encode(message.cooldownPeriod, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): BasicAutoscalingAlgorithm {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseBasicAutoscalingAlgorithm();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.yarnConfig = BasicYarnAutoscalingConfig.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.cooldownPeriod = Duration.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): BasicAutoscalingAlgorithm {
    return {
      yarnConfig: isSet(object.yarnConfig) ? BasicYarnAutoscalingConfig.fromJSON(object.yarnConfig) : undefined,
      cooldownPeriod: isSet(object.cooldownPeriod) ? Duration.fromJSON(object.cooldownPeriod) : undefined,
    };
  },

  toJSON(message: BasicAutoscalingAlgorithm): unknown {
    const obj: any = {};
    if (message.yarnConfig !== undefined) {
      obj.yarnConfig = BasicYarnAutoscalingConfig.toJSON(message.yarnConfig);
    }
    if (message.cooldownPeriod !== undefined) {
      obj.cooldownPeriod = Duration.toJSON(message.cooldownPeriod);
    }
    return obj;
  },

  create(base?: DeepPartial<BasicAutoscalingAlgorithm>): BasicAutoscalingAlgorithm {
    return BasicAutoscalingAlgorithm.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<BasicAutoscalingAlgorithm>): BasicAutoscalingAlgorithm {
    const message = createBaseBasicAutoscalingAlgorithm();
    message.yarnConfig = (object.yarnConfig !== undefined && object.yarnConfig !== null)
      ? BasicYarnAutoscalingConfig.fromPartial(object.yarnConfig)
      : undefined;
    message.cooldownPeriod = (object.cooldownPeriod !== undefined && object.cooldownPeriod !== null)
      ? Duration.fromPartial(object.cooldownPeriod)
      : undefined;
    return message;
  },
};

function createBaseBasicYarnAutoscalingConfig(): BasicYarnAutoscalingConfig {
  return {
    gracefulDecommissionTimeout: undefined,
    scaleUpFactor: 0,
    scaleDownFactor: 0,
    scaleUpMinWorkerFraction: 0,
    scaleDownMinWorkerFraction: 0,
  };
}

export const BasicYarnAutoscalingConfig: MessageFns<BasicYarnAutoscalingConfig> = {
  encode(message: BasicYarnAutoscalingConfig, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.gracefulDecommissionTimeout !== undefined) {
      Duration.encode(message.gracefulDecommissionTimeout, writer.uint32(42).fork()).join();
    }
    if (message.scaleUpFactor !== 0) {
      writer.uint32(9).double(message.scaleUpFactor);
    }
    if (message.scaleDownFactor !== 0) {
      writer.uint32(17).double(message.scaleDownFactor);
    }
    if (message.scaleUpMinWorkerFraction !== 0) {
      writer.uint32(25).double(message.scaleUpMinWorkerFraction);
    }
    if (message.scaleDownMinWorkerFraction !== 0) {
      writer.uint32(33).double(message.scaleDownMinWorkerFraction);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): BasicYarnAutoscalingConfig {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseBasicYarnAutoscalingConfig();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 5:
          if (tag !== 42) {
            break;
          }

          message.gracefulDecommissionTimeout = Duration.decode(reader, reader.uint32());
          continue;
        case 1:
          if (tag !== 9) {
            break;
          }

          message.scaleUpFactor = reader.double();
          continue;
        case 2:
          if (tag !== 17) {
            break;
          }

          message.scaleDownFactor = reader.double();
          continue;
        case 3:
          if (tag !== 25) {
            break;
          }

          message.scaleUpMinWorkerFraction = reader.double();
          continue;
        case 4:
          if (tag !== 33) {
            break;
          }

          message.scaleDownMinWorkerFraction = reader.double();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): BasicYarnAutoscalingConfig {
    return {
      gracefulDecommissionTimeout: isSet(object.gracefulDecommissionTimeout)
        ? Duration.fromJSON(object.gracefulDecommissionTimeout)
        : undefined,
      scaleUpFactor: isSet(object.scaleUpFactor) ? globalThis.Number(object.scaleUpFactor) : 0,
      scaleDownFactor: isSet(object.scaleDownFactor) ? globalThis.Number(object.scaleDownFactor) : 0,
      scaleUpMinWorkerFraction: isSet(object.scaleUpMinWorkerFraction)
        ? globalThis.Number(object.scaleUpMinWorkerFraction)
        : 0,
      scaleDownMinWorkerFraction: isSet(object.scaleDownMinWorkerFraction)
        ? globalThis.Number(object.scaleDownMinWorkerFraction)
        : 0,
    };
  },

  toJSON(message: BasicYarnAutoscalingConfig): unknown {
    const obj: any = {};
    if (message.gracefulDecommissionTimeout !== undefined) {
      obj.gracefulDecommissionTimeout = Duration.toJSON(message.gracefulDecommissionTimeout);
    }
    if (message.scaleUpFactor !== 0) {
      obj.scaleUpFactor = message.scaleUpFactor;
    }
    if (message.scaleDownFactor !== 0) {
      obj.scaleDownFactor = message.scaleDownFactor;
    }
    if (message.scaleUpMinWorkerFraction !== 0) {
      obj.scaleUpMinWorkerFraction = message.scaleUpMinWorkerFraction;
    }
    if (message.scaleDownMinWorkerFraction !== 0) {
      obj.scaleDownMinWorkerFraction = message.scaleDownMinWorkerFraction;
    }
    return obj;
  },

  create(base?: DeepPartial<BasicYarnAutoscalingConfig>): BasicYarnAutoscalingConfig {
    return BasicYarnAutoscalingConfig.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<BasicYarnAutoscalingConfig>): BasicYarnAutoscalingConfig {
    const message = createBaseBasicYarnAutoscalingConfig();
    message.gracefulDecommissionTimeout =
      (object.gracefulDecommissionTimeout !== undefined && object.gracefulDecommissionTimeout !== null)
        ? Duration.fromPartial(object.gracefulDecommissionTimeout)
        : undefined;
    message.scaleUpFactor = object.scaleUpFactor ?? 0;
    message.scaleDownFactor = object.scaleDownFactor ?? 0;
    message.scaleUpMinWorkerFraction = object.scaleUpMinWorkerFraction ?? 0;
    message.scaleDownMinWorkerFraction = object.scaleDownMinWorkerFraction ?? 0;
    return message;
  },
};

function createBaseInstanceGroupAutoscalingPolicyConfig(): InstanceGroupAutoscalingPolicyConfig {
  return { minInstances: 0, maxInstances: 0, weight: 0 };
}

export const InstanceGroupAutoscalingPolicyConfig: MessageFns<InstanceGroupAutoscalingPolicyConfig> = {
  encode(message: InstanceGroupAutoscalingPolicyConfig, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.minInstances !== 0) {
      writer.uint32(8).int32(message.minInstances);
    }
    if (message.maxInstances !== 0) {
      writer.uint32(16).int32(message.maxInstances);
    }
    if (message.weight !== 0) {
      writer.uint32(24).int32(message.weight);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): InstanceGroupAutoscalingPolicyConfig {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInstanceGroupAutoscalingPolicyConfig();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.minInstances = reader.int32();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.maxInstances = reader.int32();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.weight = reader.int32();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): InstanceGroupAutoscalingPolicyConfig {
    return {
      minInstances: isSet(object.minInstances) ? globalThis.Number(object.minInstances) : 0,
      maxInstances: isSet(object.maxInstances) ? globalThis.Number(object.maxInstances) : 0,
      weight: isSet(object.weight) ? globalThis.Number(object.weight) : 0,
    };
  },

  toJSON(message: InstanceGroupAutoscalingPolicyConfig): unknown {
    const obj: any = {};
    if (message.minInstances !== 0) {
      obj.minInstances = Math.round(message.minInstances);
    }
    if (message.maxInstances !== 0) {
      obj.maxInstances = Math.round(message.maxInstances);
    }
    if (message.weight !== 0) {
      obj.weight = Math.round(message.weight);
    }
    return obj;
  },

  create(base?: DeepPartial<InstanceGroupAutoscalingPolicyConfig>): InstanceGroupAutoscalingPolicyConfig {
    return InstanceGroupAutoscalingPolicyConfig.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<InstanceGroupAutoscalingPolicyConfig>): InstanceGroupAutoscalingPolicyConfig {
    const message = createBaseInstanceGroupAutoscalingPolicyConfig();
    message.minInstances = object.minInstances ?? 0;
    message.maxInstances = object.maxInstances ?? 0;
    message.weight = object.weight ?? 0;
    return message;
  },
};

function createBaseCreateAutoscalingPolicyRequest(): CreateAutoscalingPolicyRequest {
  return { parent: "", policy: undefined };
}

export const CreateAutoscalingPolicyRequest: MessageFns<CreateAutoscalingPolicyRequest> = {
  encode(message: CreateAutoscalingPolicyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    if (message.policy !== undefined) {
      AutoscalingPolicy.encode(message.policy, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CreateAutoscalingPolicyRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCreateAutoscalingPolicyRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.policy = AutoscalingPolicy.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CreateAutoscalingPolicyRequest {
    return {
      parent: isSet(object.parent) ? globalThis.String(object.parent) : "",
      policy: isSet(object.policy) ? AutoscalingPolicy.fromJSON(object.policy) : undefined,
    };
  },

  toJSON(message: CreateAutoscalingPolicyRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    if (message.policy !== undefined) {
      obj.policy = AutoscalingPolicy.toJSON(message.policy);
    }
    return obj;
  },

  create(base?: DeepPartial<CreateAutoscalingPolicyRequest>): CreateAutoscalingPolicyRequest {
    return CreateAutoscalingPolicyRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CreateAutoscalingPolicyRequest>): CreateAutoscalingPolicyRequest {
    const message = createBaseCreateAutoscalingPolicyRequest();
    message.parent = object.parent ?? "";
    message.policy = (object.policy !== undefined && object.policy !== null)
      ? AutoscalingPolicy.fromPartial(object.policy)
      : undefined;
    return message;
  },
};

function createBaseGetAutoscalingPolicyRequest(): GetAutoscalingPolicyRequest {
  return { name: "" };
}

export const GetAutoscalingPolicyRequest: MessageFns<GetAutoscalingPolicyRequest> = {
  encode(message: GetAutoscalingPolicyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GetAutoscalingPolicyRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetAutoscalingPolicyRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetAutoscalingPolicyRequest {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: GetAutoscalingPolicyRequest): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<GetAutoscalingPolicyRequest>): GetAutoscalingPolicyRequest {
    return GetAutoscalingPolicyRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GetAutoscalingPolicyRequest>): GetAutoscalingPolicyRequest {
    const message = createBaseGetAutoscalingPolicyRequest();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseUpdateAutoscalingPolicyRequest(): UpdateAutoscalingPolicyRequest {
  return { policy: undefined };
}

export const UpdateAutoscalingPolicyRequest: MessageFns<UpdateAutoscalingPolicyRequest> = {
  encode(message: UpdateAutoscalingPolicyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.policy !== undefined) {
      AutoscalingPolicy.encode(message.policy, writer.uint32(10).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): UpdateAutoscalingPolicyRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseUpdateAutoscalingPolicyRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.policy = AutoscalingPolicy.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): UpdateAutoscalingPolicyRequest {
    return { policy: isSet(object.policy) ? AutoscalingPolicy.fromJSON(object.policy) : undefined };
  },

  toJSON(message: UpdateAutoscalingPolicyRequest): unknown {
    const obj: any = {};
    if (message.policy !== undefined) {
      obj.policy = AutoscalingPolicy.toJSON(message.policy);
    }
    return obj;
  },

  create(base?: DeepPartial<UpdateAutoscalingPolicyRequest>): UpdateAutoscalingPolicyRequest {
    return UpdateAutoscalingPolicyRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<UpdateAutoscalingPolicyRequest>): UpdateAutoscalingPolicyRequest {
    const message = createBaseUpdateAutoscalingPolicyRequest();
    message.policy = (object.policy !== undefined && object.policy !== null)
      ? AutoscalingPolicy.fromPartial(object.policy)
      : undefined;
    return message;
  },
};

function createBaseDeleteAutoscalingPolicyRequest(): DeleteAutoscalingPolicyRequest {
  return { name: "" };
}

export const DeleteAutoscalingPolicyRequest: MessageFns<DeleteAutoscalingPolicyRequest> = {
  encode(message: DeleteAutoscalingPolicyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): DeleteAutoscalingPolicyRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDeleteAutoscalingPolicyRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): DeleteAutoscalingPolicyRequest {
    return { name: isSet(object.name) ? globalThis.String(object.name) : "" };
  },

  toJSON(message: DeleteAutoscalingPolicyRequest): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    return obj;
  },

  create(base?: DeepPartial<DeleteAutoscalingPolicyRequest>): DeleteAutoscalingPolicyRequest {
    return DeleteAutoscalingPolicyRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<DeleteAutoscalingPolicyRequest>): DeleteAutoscalingPolicyRequest {
    const message = createBaseDeleteAutoscalingPolicyRequest();
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseListAutoscalingPoliciesRequest(): ListAutoscalingPoliciesRequest {
  return { parent: "", pageSize: 0, pageToken: "" };
}

export const ListAutoscalingPoliciesRequest: MessageFns<ListAutoscalingPoliciesRequest> = {
  encode(message: ListAutoscalingPoliciesRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.parent !== "") {
      writer.uint32(10).string(message.parent);
    }
    if (message.pageSize !== 0) {
      writer.uint32(16).int32(message.pageSize);
    }
    if (message.pageToken !== "") {
      writer.uint32(26).string(message.pageToken);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListAutoscalingPoliciesRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListAutoscalingPoliciesRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.parent = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.pageSize = reader.int32();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.pageToken = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListAutoscalingPoliciesRequest {
    return {
      parent: isSet(object.parent) ? globalThis.String(object.parent) : "",
      pageSize: isSet(object.pageSize) ? globalThis.Number(object.pageSize) : 0,
      pageToken: isSet(object.pageToken) ? globalThis.String(object.pageToken) : "",
    };
  },

  toJSON(message: ListAutoscalingPoliciesRequest): unknown {
    const obj: any = {};
    if (message.parent !== "") {
      obj.parent = message.parent;
    }
    if (message.pageSize !== 0) {
      obj.pageSize = Math.round(message.pageSize);
    }
    if (message.pageToken !== "") {
      obj.pageToken = message.pageToken;
    }
    return obj;
  },

  create(base?: DeepPartial<ListAutoscalingPoliciesRequest>): ListAutoscalingPoliciesRequest {
    return ListAutoscalingPoliciesRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListAutoscalingPoliciesRequest>): ListAutoscalingPoliciesRequest {
    const message = createBaseListAutoscalingPoliciesRequest();
    message.parent = object.parent ?? "";
    message.pageSize = object.pageSize ?? 0;
    message.pageToken = object.pageToken ?? "";
    return message;
  },
};

function createBaseListAutoscalingPoliciesResponse(): ListAutoscalingPoliciesResponse {
  return { policies: [], nextPageToken: "" };
}

export const ListAutoscalingPoliciesResponse: MessageFns<ListAutoscalingPoliciesResponse> = {
  encode(message: ListAutoscalingPoliciesResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.policies) {
      AutoscalingPolicy.encode(v!, writer.uint32(10).fork()).join();
    }
    if (message.nextPageToken !== "") {
      writer.uint32(18).string(message.nextPageToken);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ListAutoscalingPoliciesResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseListAutoscalingPoliciesResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.policies.push(AutoscalingPolicy.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.nextPageToken = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ListAutoscalingPoliciesResponse {
    return {
      policies: globalThis.Array.isArray(object?.policies)
        ? object.policies.map((e: any) => AutoscalingPolicy.fromJSON(e))
        : [],
      nextPageToken: isSet(object.nextPageToken) ? globalThis.String(object.nextPageToken) : "",
    };
  },

  toJSON(message: ListAutoscalingPoliciesResponse): unknown {
    const obj: any = {};
    if (message.policies?.length) {
      obj.policies = message.policies.map((e) => AutoscalingPolicy.toJSON(e));
    }
    if (message.nextPageToken !== "") {
      obj.nextPageToken = message.nextPageToken;
    }
    return obj;
  },

  create(base?: DeepPartial<ListAutoscalingPoliciesResponse>): ListAutoscalingPoliciesResponse {
    return ListAutoscalingPoliciesResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ListAutoscalingPoliciesResponse>): ListAutoscalingPoliciesResponse {
    const message = createBaseListAutoscalingPoliciesResponse();
    message.policies = object.policies?.map((e) => AutoscalingPolicy.fromPartial(e)) || [];
    message.nextPageToken = object.nextPageToken ?? "";
    return message;
  },
};

/**
 * The API interface for managing autoscaling policies in the
 * Dataproc API.
 */
export type AutoscalingPolicyServiceDefinition = typeof AutoscalingPolicyServiceDefinition;
export const AutoscalingPolicyServiceDefinition = {
  name: "AutoscalingPolicyService",
  fullName: "google.cloud.dataproc.v1.AutoscalingPolicyService",
  methods: {
    /** Creates new autoscaling policy. */
    createAutoscalingPolicy: {
      name: "CreateAutoscalingPolicy",
      requestType: CreateAutoscalingPolicyRequest,
      requestStream: false,
      responseType: AutoscalingPolicy,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([13, 112, 97, 114, 101, 110, 116, 44, 112, 111, 108, 105, 99, 121])],
          578365826: [
            Buffer.from([
              130,
              1,
              58,
              6,
              112,
              111,
              108,
              105,
              99,
              121,
              90,
              63,
              58,
              6,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              53,
              47,
              118,
              49,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              114,
              101,
              103,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              97,
              117,
              116,
              111,
              115,
              99,
              97,
              108,
              105,
              110,
              103,
              80,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              34,
              55,
              47,
              118,
              49,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              97,
              117,
              116,
              111,
              115,
              99,
              97,
              108,
              105,
              110,
              103,
              80,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Updates (replaces) autoscaling policy.
     *
     * Disabled check for update_mask, because all updates will be full
     * replacements.
     */
    updateAutoscalingPolicy: {
      name: "UpdateAutoscalingPolicy",
      requestType: UpdateAutoscalingPolicyRequest,
      requestStream: false,
      responseType: AutoscalingPolicy,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 111, 108, 105, 99, 121])],
          578365826: [
            Buffer.from([
              144,
              1,
              58,
              6,
              112,
              111,
              108,
              105,
              99,
              121,
              90,
              70,
              58,
              6,
              112,
              111,
              108,
              105,
              99,
              121,
              26,
              60,
              47,
              118,
              49,
              47,
              123,
              112,
              111,
              108,
              105,
              99,
              121,
              46,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              114,
              101,
              103,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              97,
              117,
              116,
              111,
              115,
              99,
              97,
              108,
              105,
              110,
              103,
              80,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              47,
              42,
              125,
              26,
              62,
              47,
              118,
              49,
              47,
              123,
              112,
              111,
              108,
              105,
              99,
              121,
              46,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              97,
              117,
              116,
              111,
              115,
              99,
              97,
              108,
              105,
              110,
              103,
              80,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Retrieves autoscaling policy. */
    getAutoscalingPolicy: {
      name: "GetAutoscalingPolicy",
      requestType: GetAutoscalingPolicyRequest,
      requestStream: false,
      responseType: AutoscalingPolicy,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              114,
              90,
              55,
              18,
              53,
              47,
              118,
              49,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              114,
              101,
              103,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              97,
              117,
              116,
              111,
              115,
              99,
              97,
              108,
              105,
              110,
              103,
              80,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              47,
              42,
              125,
              18,
              55,
              47,
              118,
              49,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              97,
              117,
              116,
              111,
              115,
              99,
              97,
              108,
              105,
              110,
              103,
              80,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /** Lists autoscaling policies in the project. */
    listAutoscalingPolicies: {
      name: "ListAutoscalingPolicies",
      requestType: ListAutoscalingPoliciesRequest,
      requestStream: false,
      responseType: ListAutoscalingPoliciesResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([6, 112, 97, 114, 101, 110, 116])],
          578365826: [
            Buffer.from([
              114,
              90,
              55,
              18,
              53,
              47,
              118,
              49,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              114,
              101,
              103,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              97,
              117,
              116,
              111,
              115,
              99,
              97,
              108,
              105,
              110,
              103,
              80,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              18,
              55,
              47,
              118,
              49,
              47,
              123,
              112,
              97,
              114,
              101,
              110,
              116,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              125,
              47,
              97,
              117,
              116,
              111,
              115,
              99,
              97,
              108,
              105,
              110,
              103,
              80,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
            ]),
          ],
        },
      },
    },
    /**
     * Deletes an autoscaling policy. It is an error to delete an autoscaling
     * policy that is in use by one or more clusters.
     */
    deleteAutoscalingPolicy: {
      name: "DeleteAutoscalingPolicy",
      requestType: DeleteAutoscalingPolicyRequest,
      requestStream: false,
      responseType: Empty,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([4, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              114,
              90,
              55,
              42,
              53,
              47,
              118,
              49,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              114,
              101,
              103,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              97,
              117,
              116,
              111,
              115,
              99,
              97,
              108,
              105,
              110,
              103,
              80,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              47,
              42,
              125,
              42,
              55,
              47,
              118,
              49,
              47,
              123,
              110,
              97,
              109,
              101,
              61,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              42,
              47,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              47,
              42,
              47,
              97,
              117,
              116,
              111,
              115,
              99,
              97,
              108,
              105,
              110,
              103,
              80,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface AutoscalingPolicyServiceImplementation<CallContextExt = {}> {
  /** Creates new autoscaling policy. */
  createAutoscalingPolicy(
    request: CreateAutoscalingPolicyRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<AutoscalingPolicy>>;
  /**
   * Updates (replaces) autoscaling policy.
   *
   * Disabled check for update_mask, because all updates will be full
   * replacements.
   */
  updateAutoscalingPolicy(
    request: UpdateAutoscalingPolicyRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<AutoscalingPolicy>>;
  /** Retrieves autoscaling policy. */
  getAutoscalingPolicy(
    request: GetAutoscalingPolicyRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<AutoscalingPolicy>>;
  /** Lists autoscaling policies in the project. */
  listAutoscalingPolicies(
    request: ListAutoscalingPoliciesRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListAutoscalingPoliciesResponse>>;
  /**
   * Deletes an autoscaling policy. It is an error to delete an autoscaling
   * policy that is in use by one or more clusters.
   */
  deleteAutoscalingPolicy(
    request: DeleteAutoscalingPolicyRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<Empty>>;
}

export interface AutoscalingPolicyServiceClient<CallOptionsExt = {}> {
  /** Creates new autoscaling policy. */
  createAutoscalingPolicy(
    request: DeepPartial<CreateAutoscalingPolicyRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<AutoscalingPolicy>;
  /**
   * Updates (replaces) autoscaling policy.
   *
   * Disabled check for update_mask, because all updates will be full
   * replacements.
   */
  updateAutoscalingPolicy(
    request: DeepPartial<UpdateAutoscalingPolicyRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<AutoscalingPolicy>;
  /** Retrieves autoscaling policy. */
  getAutoscalingPolicy(
    request: DeepPartial<GetAutoscalingPolicyRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<AutoscalingPolicy>;
  /** Lists autoscaling policies in the project. */
  listAutoscalingPolicies(
    request: DeepPartial<ListAutoscalingPoliciesRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListAutoscalingPoliciesResponse>;
  /**
   * Deletes an autoscaling policy. It is an error to delete an autoscaling
   * policy that is in use by one or more clusters.
   */
  deleteAutoscalingPolicy(
    request: DeepPartial<DeleteAutoscalingPolicyRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<Empty>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isObject(value: any): boolean {
  return typeof value === "object" && value !== null;
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
