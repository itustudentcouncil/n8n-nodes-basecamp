// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/extended_operations.proto

/* eslint-disable */

export const protobufPackage = "google.cloud";

/**
 * This file contains custom annotations that are used by GAPIC generators to
 * handle Long Running Operation methods (LRO) that are NOT compliant with
 * https://google.aip.dev/151. These annotations are public for technical
 * reasons only. Please DO NOT USE them in your protos.
 */

/**
 * An enum to be used to mark the essential (for polling) fields in an
 * API-specific Operation object. A custom Operation object may contain many
 * different fields, but only few of them are essential to conduct a successful
 * polling process.
 */
export enum OperationResponseMapping {
  /** UNDEFINED - Do not use. */
  UNDEFINED = 0,
  /**
   * NAME - A field in an API-specific (custom) Operation object which carries the same
   * meaning as google.longrunning.Operation.name.
   */
  NAME = 1,
  /**
   * STATUS - A field in an API-specific (custom) Operation object which carries the same
   * meaning as google.longrunning.Operation.done. If the annotated field is of
   * an enum type, `annotated_field_name == EnumType.DONE` semantics should be
   * equivalent to `Operation.done == true`. If the annotated field is of type
   * boolean, then it should follow the same semantics as Operation.done.
   * Otherwise, a non-empty value should be treated as `Operation.done == true`.
   */
  STATUS = 2,
  /**
   * ERROR_CODE - A field in an API-specific (custom) Operation object which carries the same
   * meaning as google.longrunning.Operation.error.code.
   */
  ERROR_CODE = 3,
  /**
   * ERROR_MESSAGE - A field in an API-specific (custom) Operation object which carries the same
   * meaning as google.longrunning.Operation.error.message.
   */
  ERROR_MESSAGE = 4,
  UNRECOGNIZED = -1,
}

export function operationResponseMappingFromJSON(object: any): OperationResponseMapping {
  switch (object) {
    case 0:
    case "UNDEFINED":
      return OperationResponseMapping.UNDEFINED;
    case 1:
    case "NAME":
      return OperationResponseMapping.NAME;
    case 2:
    case "STATUS":
      return OperationResponseMapping.STATUS;
    case 3:
    case "ERROR_CODE":
      return OperationResponseMapping.ERROR_CODE;
    case 4:
    case "ERROR_MESSAGE":
      return OperationResponseMapping.ERROR_MESSAGE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OperationResponseMapping.UNRECOGNIZED;
  }
}

export function operationResponseMappingToJSON(object: OperationResponseMapping): string {
  switch (object) {
    case OperationResponseMapping.UNDEFINED:
      return "UNDEFINED";
    case OperationResponseMapping.NAME:
      return "NAME";
    case OperationResponseMapping.STATUS:
      return "STATUS";
    case OperationResponseMapping.ERROR_CODE:
      return "ERROR_CODE";
    case OperationResponseMapping.ERROR_MESSAGE:
      return "ERROR_MESSAGE";
    case OperationResponseMapping.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
