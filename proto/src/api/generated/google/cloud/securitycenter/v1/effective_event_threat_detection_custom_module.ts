// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/cloud/securitycenter/v1/effective_event_threat_detection_custom_module.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { Struct } from "../../../protobuf/struct.js";

export const protobufPackage = "google.cloud.securitycenter.v1";

/**
 * An EffectiveEventThreatDetectionCustomModule is the representation of
 * an Event Threat Detection custom module at a specified level of the
 * resource hierarchy: organization, folder, or project. If a custom module is
 * inherited from a parent organization or folder, the value of the
 * `enablement_state` property in EffectiveEventThreatDetectionCustomModule is
 * set to the value that is effective in the parent, instead of `INHERITED`.
 * For example, if the module is enabled in a parent organization or folder, the
 * effective `enablement_state` for the module in all child folders or projects
 * is also `enabled`. EffectiveEventThreatDetectionCustomModule is read-only.
 */
export interface EffectiveEventThreatDetectionCustomModule {
  /**
   * Output only. The resource name of the effective ETD custom module.
   *
   * Its format is:
   *
   *   * `organizations/{organization}/eventThreatDetectionSettings/effectiveCustomModules/{module}`.
   *   * `folders/{folder}/eventThreatDetectionSettings/effectiveCustomModules/{module}`.
   *   * `projects/{project}/eventThreatDetectionSettings/effectiveCustomModules/{module}`.
   */
  name: string;
  /** Output only. Config for the effective module. */
  config:
    | { [key: string]: any }
    | undefined;
  /**
   * Output only. The effective state of enablement for the module at the given
   * level of the hierarchy.
   */
  enablementState: EffectiveEventThreatDetectionCustomModule_EnablementState;
  /** Output only. Type for the module. e.g. CONFIGURABLE_BAD_IP. */
  type: string;
  /** Output only. The human readable name to be displayed for the module. */
  displayName: string;
  /** Output only. The description for the module. */
  description: string;
}

/** The enablement state of the module. */
export enum EffectiveEventThreatDetectionCustomModule_EnablementState {
  /** ENABLEMENT_STATE_UNSPECIFIED - Unspecified enablement state. */
  ENABLEMENT_STATE_UNSPECIFIED = 0,
  /** ENABLED - The module is enabled at the given level. */
  ENABLED = 1,
  /** DISABLED - The module is disabled at the given level. */
  DISABLED = 2,
  UNRECOGNIZED = -1,
}

export function effectiveEventThreatDetectionCustomModule_EnablementStateFromJSON(
  object: any,
): EffectiveEventThreatDetectionCustomModule_EnablementState {
  switch (object) {
    case 0:
    case "ENABLEMENT_STATE_UNSPECIFIED":
      return EffectiveEventThreatDetectionCustomModule_EnablementState.ENABLEMENT_STATE_UNSPECIFIED;
    case 1:
    case "ENABLED":
      return EffectiveEventThreatDetectionCustomModule_EnablementState.ENABLED;
    case 2:
    case "DISABLED":
      return EffectiveEventThreatDetectionCustomModule_EnablementState.DISABLED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return EffectiveEventThreatDetectionCustomModule_EnablementState.UNRECOGNIZED;
  }
}

export function effectiveEventThreatDetectionCustomModule_EnablementStateToJSON(
  object: EffectiveEventThreatDetectionCustomModule_EnablementState,
): string {
  switch (object) {
    case EffectiveEventThreatDetectionCustomModule_EnablementState.ENABLEMENT_STATE_UNSPECIFIED:
      return "ENABLEMENT_STATE_UNSPECIFIED";
    case EffectiveEventThreatDetectionCustomModule_EnablementState.ENABLED:
      return "ENABLED";
    case EffectiveEventThreatDetectionCustomModule_EnablementState.DISABLED:
      return "DISABLED";
    case EffectiveEventThreatDetectionCustomModule_EnablementState.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseEffectiveEventThreatDetectionCustomModule(): EffectiveEventThreatDetectionCustomModule {
  return { name: "", config: undefined, enablementState: 0, type: "", displayName: "", description: "" };
}

export const EffectiveEventThreatDetectionCustomModule: MessageFns<EffectiveEventThreatDetectionCustomModule> = {
  encode(message: EffectiveEventThreatDetectionCustomModule, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    if (message.config !== undefined) {
      Struct.encode(Struct.wrap(message.config), writer.uint32(18).fork()).join();
    }
    if (message.enablementState !== 0) {
      writer.uint32(24).int32(message.enablementState);
    }
    if (message.type !== "") {
      writer.uint32(34).string(message.type);
    }
    if (message.displayName !== "") {
      writer.uint32(42).string(message.displayName);
    }
    if (message.description !== "") {
      writer.uint32(50).string(message.description);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): EffectiveEventThreatDetectionCustomModule {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseEffectiveEventThreatDetectionCustomModule();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.config = Struct.unwrap(Struct.decode(reader, reader.uint32()));
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.enablementState = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.type = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.displayName = reader.string();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.description = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): EffectiveEventThreatDetectionCustomModule {
    return {
      name: isSet(object.name) ? globalThis.String(object.name) : "",
      config: isObject(object.config) ? object.config : undefined,
      enablementState: isSet(object.enablementState)
        ? effectiveEventThreatDetectionCustomModule_EnablementStateFromJSON(object.enablementState)
        : 0,
      type: isSet(object.type) ? globalThis.String(object.type) : "",
      displayName: isSet(object.displayName) ? globalThis.String(object.displayName) : "",
      description: isSet(object.description) ? globalThis.String(object.description) : "",
    };
  },

  toJSON(message: EffectiveEventThreatDetectionCustomModule): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    if (message.config !== undefined) {
      obj.config = message.config;
    }
    if (message.enablementState !== 0) {
      obj.enablementState = effectiveEventThreatDetectionCustomModule_EnablementStateToJSON(message.enablementState);
    }
    if (message.type !== "") {
      obj.type = message.type;
    }
    if (message.displayName !== "") {
      obj.displayName = message.displayName;
    }
    if (message.description !== "") {
      obj.description = message.description;
    }
    return obj;
  },

  create(base?: DeepPartial<EffectiveEventThreatDetectionCustomModule>): EffectiveEventThreatDetectionCustomModule {
    return EffectiveEventThreatDetectionCustomModule.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<EffectiveEventThreatDetectionCustomModule>,
  ): EffectiveEventThreatDetectionCustomModule {
    const message = createBaseEffectiveEventThreatDetectionCustomModule();
    message.name = object.name ?? "";
    message.config = object.config ?? undefined;
    message.enablementState = object.enablementState ?? 0;
    message.type = object.type ?? "";
    message.displayName = object.displayName ?? "";
    message.description = object.description ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isObject(value: any): boolean {
  return typeof value === "object" && value !== null;
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
