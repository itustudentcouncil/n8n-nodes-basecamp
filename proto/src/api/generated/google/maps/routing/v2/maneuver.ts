// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/maps/routing/v2/maneuver.proto

/* eslint-disable */

export const protobufPackage = "google.maps.routing.v2";

/**
 * A set of values that specify the navigation action to take for the current
 * step (for example, turn left, merge, or straight).
 */
export enum Maneuver {
  /** MANEUVER_UNSPECIFIED - Not used. */
  MANEUVER_UNSPECIFIED = 0,
  /** TURN_SLIGHT_LEFT - Turn slightly to the left. */
  TURN_SLIGHT_LEFT = 1,
  /** TURN_SHARP_LEFT - Turn sharply to the left. */
  TURN_SHARP_LEFT = 2,
  /** UTURN_LEFT - Make a left u-turn. */
  UTURN_LEFT = 3,
  /** TURN_LEFT - Turn left. */
  TURN_LEFT = 4,
  /** TURN_SLIGHT_RIGHT - Turn slightly to the right. */
  TURN_SLIGHT_RIGHT = 5,
  /** TURN_SHARP_RIGHT - Turn sharply to the right. */
  TURN_SHARP_RIGHT = 6,
  /** UTURN_RIGHT - Make a right u-turn. */
  UTURN_RIGHT = 7,
  /** TURN_RIGHT - Turn right. */
  TURN_RIGHT = 8,
  /** STRAIGHT - Go straight. */
  STRAIGHT = 9,
  /** RAMP_LEFT - Take the left ramp. */
  RAMP_LEFT = 10,
  /** RAMP_RIGHT - Take the right ramp. */
  RAMP_RIGHT = 11,
  /** MERGE - Merge into traffic. */
  MERGE = 12,
  /** FORK_LEFT - Take the left fork. */
  FORK_LEFT = 13,
  /** FORK_RIGHT - Take the right fork. */
  FORK_RIGHT = 14,
  /** FERRY - Take the ferry. */
  FERRY = 15,
  /** FERRY_TRAIN - Take the train leading onto the ferry. */
  FERRY_TRAIN = 16,
  /** ROUNDABOUT_LEFT - Turn left at the roundabout. */
  ROUNDABOUT_LEFT = 17,
  /** ROUNDABOUT_RIGHT - Turn right at the roundabout. */
  ROUNDABOUT_RIGHT = 18,
  /** DEPART - Initial maneuver. */
  DEPART = 19,
  /** NAME_CHANGE - Used to indicate a street name change. */
  NAME_CHANGE = 20,
  UNRECOGNIZED = -1,
}

export function maneuverFromJSON(object: any): Maneuver {
  switch (object) {
    case 0:
    case "MANEUVER_UNSPECIFIED":
      return Maneuver.MANEUVER_UNSPECIFIED;
    case 1:
    case "TURN_SLIGHT_LEFT":
      return Maneuver.TURN_SLIGHT_LEFT;
    case 2:
    case "TURN_SHARP_LEFT":
      return Maneuver.TURN_SHARP_LEFT;
    case 3:
    case "UTURN_LEFT":
      return Maneuver.UTURN_LEFT;
    case 4:
    case "TURN_LEFT":
      return Maneuver.TURN_LEFT;
    case 5:
    case "TURN_SLIGHT_RIGHT":
      return Maneuver.TURN_SLIGHT_RIGHT;
    case 6:
    case "TURN_SHARP_RIGHT":
      return Maneuver.TURN_SHARP_RIGHT;
    case 7:
    case "UTURN_RIGHT":
      return Maneuver.UTURN_RIGHT;
    case 8:
    case "TURN_RIGHT":
      return Maneuver.TURN_RIGHT;
    case 9:
    case "STRAIGHT":
      return Maneuver.STRAIGHT;
    case 10:
    case "RAMP_LEFT":
      return Maneuver.RAMP_LEFT;
    case 11:
    case "RAMP_RIGHT":
      return Maneuver.RAMP_RIGHT;
    case 12:
    case "MERGE":
      return Maneuver.MERGE;
    case 13:
    case "FORK_LEFT":
      return Maneuver.FORK_LEFT;
    case 14:
    case "FORK_RIGHT":
      return Maneuver.FORK_RIGHT;
    case 15:
    case "FERRY":
      return Maneuver.FERRY;
    case 16:
    case "FERRY_TRAIN":
      return Maneuver.FERRY_TRAIN;
    case 17:
    case "ROUNDABOUT_LEFT":
      return Maneuver.ROUNDABOUT_LEFT;
    case 18:
    case "ROUNDABOUT_RIGHT":
      return Maneuver.ROUNDABOUT_RIGHT;
    case 19:
    case "DEPART":
      return Maneuver.DEPART;
    case 20:
    case "NAME_CHANGE":
      return Maneuver.NAME_CHANGE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return Maneuver.UNRECOGNIZED;
  }
}

export function maneuverToJSON(object: Maneuver): string {
  switch (object) {
    case Maneuver.MANEUVER_UNSPECIFIED:
      return "MANEUVER_UNSPECIFIED";
    case Maneuver.TURN_SLIGHT_LEFT:
      return "TURN_SLIGHT_LEFT";
    case Maneuver.TURN_SHARP_LEFT:
      return "TURN_SHARP_LEFT";
    case Maneuver.UTURN_LEFT:
      return "UTURN_LEFT";
    case Maneuver.TURN_LEFT:
      return "TURN_LEFT";
    case Maneuver.TURN_SLIGHT_RIGHT:
      return "TURN_SLIGHT_RIGHT";
    case Maneuver.TURN_SHARP_RIGHT:
      return "TURN_SHARP_RIGHT";
    case Maneuver.UTURN_RIGHT:
      return "UTURN_RIGHT";
    case Maneuver.TURN_RIGHT:
      return "TURN_RIGHT";
    case Maneuver.STRAIGHT:
      return "STRAIGHT";
    case Maneuver.RAMP_LEFT:
      return "RAMP_LEFT";
    case Maneuver.RAMP_RIGHT:
      return "RAMP_RIGHT";
    case Maneuver.MERGE:
      return "MERGE";
    case Maneuver.FORK_LEFT:
      return "FORK_LEFT";
    case Maneuver.FORK_RIGHT:
      return "FORK_RIGHT";
    case Maneuver.FERRY:
      return "FERRY";
    case Maneuver.FERRY_TRAIN:
      return "FERRY_TRAIN";
    case Maneuver.ROUNDABOUT_LEFT:
      return "ROUNDABOUT_LEFT";
    case Maneuver.ROUNDABOUT_RIGHT:
      return "ROUNDABOUT_RIGHT";
    case Maneuver.DEPART:
      return "DEPART";
    case Maneuver.NAME_CHANGE:
      return "NAME_CHANGE";
    case Maneuver.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
