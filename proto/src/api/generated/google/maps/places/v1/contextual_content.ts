// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/maps/places/v1/contextual_content.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { Photo } from "./photo.js";
import { Review } from "./review.js";

export const protobufPackage = "google.maps.places.v1";

/**
 * Experimental: See
 * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
 * for more details.
 *
 * Content that is contextual to the place query.
 */
export interface ContextualContent {
  /** List of reviews about this place, contexual to the place query. */
  reviews: Review[];
  /**
   * Information (including references) about photos of this place, contexual to
   * the place query.
   */
  photos: Photo[];
  /**
   * Experimental: See
   * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
   * for more details.
   *
   * Justifications for the place.
   */
  justifications: ContextualContent_Justification[];
}

/**
 * Experimental: See
 * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
 * for more details.
 *
 * Justifications for the place. Justifications answers the question of why a
 * place could interest an end user.
 */
export interface ContextualContent_Justification {
  /**
   * Experimental: See
   * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
   * for more details.
   */
  reviewJustification?:
    | ContextualContent_Justification_ReviewJustification
    | undefined;
  /**
   * Experimental: See
   * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
   * for more details.
   */
  businessAvailabilityAttributesJustification?:
    | ContextualContent_Justification_BusinessAvailabilityAttributesJustification
    | undefined;
}

/**
 * Experimental: See
 * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
 * for more details.
 *
 * User review justifications. This highlights a section of the user review
 * that would interest an end user. For instance, if the search query is
 * "firewood pizza", the review justification highlights the text relevant
 * to the search query.
 */
export interface ContextualContent_Justification_ReviewJustification {
  highlightedText:
    | ContextualContent_Justification_ReviewJustification_HighlightedText
    | undefined;
  /** The review that the highlighted text is generated from. */
  review: Review | undefined;
}

/**
 * The text highlighted by the justification. This is a subset of the
 * review itself. The exact word to highlight is marked by the
 * HighlightedTextRange. There could be several words in the text being
 * highlighted.
 */
export interface ContextualContent_Justification_ReviewJustification_HighlightedText {
  text: string;
  /** The list of the ranges of the highlighted text. */
  highlightedTextRanges: ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange[];
}

/** The range of highlighted text. */
export interface ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange {
  startIndex: number;
  endIndex: number;
}

/**
 * Experimental: See
 * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
 * for more details.
 * BusinessAvailabilityAttributes justifications. This shows some attributes
 * a business has that could interest an end user.
 */
export interface ContextualContent_Justification_BusinessAvailabilityAttributesJustification {
  /** If a place provides takeout. */
  takeout: boolean;
  /** If a place provides delivery. */
  delivery: boolean;
  /** If a place provides dine-in. */
  dineIn: boolean;
}

function createBaseContextualContent(): ContextualContent {
  return { reviews: [], photos: [], justifications: [] };
}

export const ContextualContent: MessageFns<ContextualContent> = {
  encode(message: ContextualContent, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.reviews) {
      Review.encode(v!, writer.uint32(10).fork()).join();
    }
    for (const v of message.photos) {
      Photo.encode(v!, writer.uint32(18).fork()).join();
    }
    for (const v of message.justifications) {
      ContextualContent_Justification.encode(v!, writer.uint32(26).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ContextualContent {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseContextualContent();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.reviews.push(Review.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.photos.push(Photo.decode(reader, reader.uint32()));
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.justifications.push(ContextualContent_Justification.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ContextualContent {
    return {
      reviews: globalThis.Array.isArray(object?.reviews) ? object.reviews.map((e: any) => Review.fromJSON(e)) : [],
      photos: globalThis.Array.isArray(object?.photos) ? object.photos.map((e: any) => Photo.fromJSON(e)) : [],
      justifications: globalThis.Array.isArray(object?.justifications)
        ? object.justifications.map((e: any) => ContextualContent_Justification.fromJSON(e))
        : [],
    };
  },

  toJSON(message: ContextualContent): unknown {
    const obj: any = {};
    if (message.reviews?.length) {
      obj.reviews = message.reviews.map((e) => Review.toJSON(e));
    }
    if (message.photos?.length) {
      obj.photos = message.photos.map((e) => Photo.toJSON(e));
    }
    if (message.justifications?.length) {
      obj.justifications = message.justifications.map((e) => ContextualContent_Justification.toJSON(e));
    }
    return obj;
  },

  create(base?: DeepPartial<ContextualContent>): ContextualContent {
    return ContextualContent.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ContextualContent>): ContextualContent {
    const message = createBaseContextualContent();
    message.reviews = object.reviews?.map((e) => Review.fromPartial(e)) || [];
    message.photos = object.photos?.map((e) => Photo.fromPartial(e)) || [];
    message.justifications = object.justifications?.map((e) => ContextualContent_Justification.fromPartial(e)) || [];
    return message;
  },
};

function createBaseContextualContent_Justification(): ContextualContent_Justification {
  return { reviewJustification: undefined, businessAvailabilityAttributesJustification: undefined };
}

export const ContextualContent_Justification: MessageFns<ContextualContent_Justification> = {
  encode(message: ContextualContent_Justification, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.reviewJustification !== undefined) {
      ContextualContent_Justification_ReviewJustification.encode(message.reviewJustification, writer.uint32(10).fork())
        .join();
    }
    if (message.businessAvailabilityAttributesJustification !== undefined) {
      ContextualContent_Justification_BusinessAvailabilityAttributesJustification.encode(
        message.businessAvailabilityAttributesJustification,
        writer.uint32(18).fork(),
      ).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ContextualContent_Justification {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseContextualContent_Justification();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.reviewJustification = ContextualContent_Justification_ReviewJustification.decode(
            reader,
            reader.uint32(),
          );
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.businessAvailabilityAttributesJustification =
            ContextualContent_Justification_BusinessAvailabilityAttributesJustification.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ContextualContent_Justification {
    return {
      reviewJustification: isSet(object.reviewJustification)
        ? ContextualContent_Justification_ReviewJustification.fromJSON(object.reviewJustification)
        : undefined,
      businessAvailabilityAttributesJustification: isSet(object.businessAvailabilityAttributesJustification)
        ? ContextualContent_Justification_BusinessAvailabilityAttributesJustification.fromJSON(
          object.businessAvailabilityAttributesJustification,
        )
        : undefined,
    };
  },

  toJSON(message: ContextualContent_Justification): unknown {
    const obj: any = {};
    if (message.reviewJustification !== undefined) {
      obj.reviewJustification = ContextualContent_Justification_ReviewJustification.toJSON(message.reviewJustification);
    }
    if (message.businessAvailabilityAttributesJustification !== undefined) {
      obj.businessAvailabilityAttributesJustification =
        ContextualContent_Justification_BusinessAvailabilityAttributesJustification.toJSON(
          message.businessAvailabilityAttributesJustification,
        );
    }
    return obj;
  },

  create(base?: DeepPartial<ContextualContent_Justification>): ContextualContent_Justification {
    return ContextualContent_Justification.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ContextualContent_Justification>): ContextualContent_Justification {
    const message = createBaseContextualContent_Justification();
    message.reviewJustification = (object.reviewJustification !== undefined && object.reviewJustification !== null)
      ? ContextualContent_Justification_ReviewJustification.fromPartial(object.reviewJustification)
      : undefined;
    message.businessAvailabilityAttributesJustification =
      (object.businessAvailabilityAttributesJustification !== undefined &&
          object.businessAvailabilityAttributesJustification !== null)
        ? ContextualContent_Justification_BusinessAvailabilityAttributesJustification.fromPartial(
          object.businessAvailabilityAttributesJustification,
        )
        : undefined;
    return message;
  },
};

function createBaseContextualContent_Justification_ReviewJustification(): ContextualContent_Justification_ReviewJustification {
  return { highlightedText: undefined, review: undefined };
}

export const ContextualContent_Justification_ReviewJustification: MessageFns<
  ContextualContent_Justification_ReviewJustification
> = {
  encode(
    message: ContextualContent_Justification_ReviewJustification,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.highlightedText !== undefined) {
      ContextualContent_Justification_ReviewJustification_HighlightedText.encode(
        message.highlightedText,
        writer.uint32(10).fork(),
      ).join();
    }
    if (message.review !== undefined) {
      Review.encode(message.review, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ContextualContent_Justification_ReviewJustification {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseContextualContent_Justification_ReviewJustification();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.highlightedText = ContextualContent_Justification_ReviewJustification_HighlightedText.decode(
            reader,
            reader.uint32(),
          );
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.review = Review.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ContextualContent_Justification_ReviewJustification {
    return {
      highlightedText: isSet(object.highlightedText)
        ? ContextualContent_Justification_ReviewJustification_HighlightedText.fromJSON(object.highlightedText)
        : undefined,
      review: isSet(object.review) ? Review.fromJSON(object.review) : undefined,
    };
  },

  toJSON(message: ContextualContent_Justification_ReviewJustification): unknown {
    const obj: any = {};
    if (message.highlightedText !== undefined) {
      obj.highlightedText = ContextualContent_Justification_ReviewJustification_HighlightedText.toJSON(
        message.highlightedText,
      );
    }
    if (message.review !== undefined) {
      obj.review = Review.toJSON(message.review);
    }
    return obj;
  },

  create(
    base?: DeepPartial<ContextualContent_Justification_ReviewJustification>,
  ): ContextualContent_Justification_ReviewJustification {
    return ContextualContent_Justification_ReviewJustification.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<ContextualContent_Justification_ReviewJustification>,
  ): ContextualContent_Justification_ReviewJustification {
    const message = createBaseContextualContent_Justification_ReviewJustification();
    message.highlightedText = (object.highlightedText !== undefined && object.highlightedText !== null)
      ? ContextualContent_Justification_ReviewJustification_HighlightedText.fromPartial(object.highlightedText)
      : undefined;
    message.review = (object.review !== undefined && object.review !== null)
      ? Review.fromPartial(object.review)
      : undefined;
    return message;
  },
};

function createBaseContextualContent_Justification_ReviewJustification_HighlightedText(): ContextualContent_Justification_ReviewJustification_HighlightedText {
  return { text: "", highlightedTextRanges: [] };
}

export const ContextualContent_Justification_ReviewJustification_HighlightedText: MessageFns<
  ContextualContent_Justification_ReviewJustification_HighlightedText
> = {
  encode(
    message: ContextualContent_Justification_ReviewJustification_HighlightedText,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.text !== "") {
      writer.uint32(10).string(message.text);
    }
    for (const v of message.highlightedTextRanges) {
      ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange.encode(
        v!,
        writer.uint32(18).fork(),
      ).join();
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number,
  ): ContextualContent_Justification_ReviewJustification_HighlightedText {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseContextualContent_Justification_ReviewJustification_HighlightedText();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.text = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.highlightedTextRanges.push(
            ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange.decode(
              reader,
              reader.uint32(),
            ),
          );
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ContextualContent_Justification_ReviewJustification_HighlightedText {
    return {
      text: isSet(object.text) ? globalThis.String(object.text) : "",
      highlightedTextRanges: globalThis.Array.isArray(object?.highlightedTextRanges)
        ? object.highlightedTextRanges.map((e: any) =>
          ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange.fromJSON(e)
        )
        : [],
    };
  },

  toJSON(message: ContextualContent_Justification_ReviewJustification_HighlightedText): unknown {
    const obj: any = {};
    if (message.text !== "") {
      obj.text = message.text;
    }
    if (message.highlightedTextRanges?.length) {
      obj.highlightedTextRanges = message.highlightedTextRanges.map((e) =>
        ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange.toJSON(e)
      );
    }
    return obj;
  },

  create(
    base?: DeepPartial<ContextualContent_Justification_ReviewJustification_HighlightedText>,
  ): ContextualContent_Justification_ReviewJustification_HighlightedText {
    return ContextualContent_Justification_ReviewJustification_HighlightedText.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<ContextualContent_Justification_ReviewJustification_HighlightedText>,
  ): ContextualContent_Justification_ReviewJustification_HighlightedText {
    const message = createBaseContextualContent_Justification_ReviewJustification_HighlightedText();
    message.text = object.text ?? "";
    message.highlightedTextRanges =
      object.highlightedTextRanges?.map((e) =>
        ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange.fromPartial(e)
      ) || [];
    return message;
  },
};

function createBaseContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange(): ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange {
  return { startIndex: 0, endIndex: 0 };
}

export const ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange: MessageFns<
  ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange
> = {
  encode(
    message: ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.startIndex !== 0) {
      writer.uint32(8).int32(message.startIndex);
    }
    if (message.endIndex !== 0) {
      writer.uint32(16).int32(message.endIndex);
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number,
  ): ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message =
      createBaseContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.startIndex = reader.int32();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.endIndex = reader.int32();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange {
    return {
      startIndex: isSet(object.startIndex) ? globalThis.Number(object.startIndex) : 0,
      endIndex: isSet(object.endIndex) ? globalThis.Number(object.endIndex) : 0,
    };
  },

  toJSON(message: ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange): unknown {
    const obj: any = {};
    if (message.startIndex !== 0) {
      obj.startIndex = Math.round(message.startIndex);
    }
    if (message.endIndex !== 0) {
      obj.endIndex = Math.round(message.endIndex);
    }
    return obj;
  },

  create(
    base?: DeepPartial<ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange>,
  ): ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange {
    return ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange.fromPartial(
      base ?? {},
    );
  },
  fromPartial(
    object: DeepPartial<ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange>,
  ): ContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange {
    const message =
      createBaseContextualContent_Justification_ReviewJustification_HighlightedText_HighlightedTextRange();
    message.startIndex = object.startIndex ?? 0;
    message.endIndex = object.endIndex ?? 0;
    return message;
  },
};

function createBaseContextualContent_Justification_BusinessAvailabilityAttributesJustification(): ContextualContent_Justification_BusinessAvailabilityAttributesJustification {
  return { takeout: false, delivery: false, dineIn: false };
}

export const ContextualContent_Justification_BusinessAvailabilityAttributesJustification: MessageFns<
  ContextualContent_Justification_BusinessAvailabilityAttributesJustification
> = {
  encode(
    message: ContextualContent_Justification_BusinessAvailabilityAttributesJustification,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.takeout !== false) {
      writer.uint32(8).bool(message.takeout);
    }
    if (message.delivery !== false) {
      writer.uint32(16).bool(message.delivery);
    }
    if (message.dineIn !== false) {
      writer.uint32(24).bool(message.dineIn);
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number,
  ): ContextualContent_Justification_BusinessAvailabilityAttributesJustification {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseContextualContent_Justification_BusinessAvailabilityAttributesJustification();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.takeout = reader.bool();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.delivery = reader.bool();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.dineIn = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ContextualContent_Justification_BusinessAvailabilityAttributesJustification {
    return {
      takeout: isSet(object.takeout) ? globalThis.Boolean(object.takeout) : false,
      delivery: isSet(object.delivery) ? globalThis.Boolean(object.delivery) : false,
      dineIn: isSet(object.dineIn) ? globalThis.Boolean(object.dineIn) : false,
    };
  },

  toJSON(message: ContextualContent_Justification_BusinessAvailabilityAttributesJustification): unknown {
    const obj: any = {};
    if (message.takeout !== false) {
      obj.takeout = message.takeout;
    }
    if (message.delivery !== false) {
      obj.delivery = message.delivery;
    }
    if (message.dineIn !== false) {
      obj.dineIn = message.dineIn;
    }
    return obj;
  },

  create(
    base?: DeepPartial<ContextualContent_Justification_BusinessAvailabilityAttributesJustification>,
  ): ContextualContent_Justification_BusinessAvailabilityAttributesJustification {
    return ContextualContent_Justification_BusinessAvailabilityAttributesJustification.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<ContextualContent_Justification_BusinessAvailabilityAttributesJustification>,
  ): ContextualContent_Justification_BusinessAvailabilityAttributesJustification {
    const message = createBaseContextualContent_Justification_BusinessAvailabilityAttributesJustification();
    message.takeout = object.takeout ?? false;
    message.delivery = object.delivery ?? false;
    message.dineIn = object.dineIn ?? false;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
