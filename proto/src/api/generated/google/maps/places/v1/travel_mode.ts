// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/maps/places/v1/travel_mode.proto

/* eslint-disable */

export const protobufPackage = "google.maps.places.v1";

/**
 * Travel mode options.
 * These options map to what [Routes API
 * offers](https://developers.google.com/maps/documentation/routes/reference/rest/v2/RouteTravelMode).
 */
export enum TravelMode {
  /** TRAVEL_MODE_UNSPECIFIED - No travel mode specified. Defaults to `DRIVE`. */
  TRAVEL_MODE_UNSPECIFIED = 0,
  /** DRIVE - Travel by passenger car. */
  DRIVE = 1,
  /** BICYCLE - Travel by bicycle.  Not supported with `search_along_route_parameters`. */
  BICYCLE = 2,
  /** WALK - Travel by walking.  Not supported with `search_along_route_parameters`. */
  WALK = 3,
  /**
   * TWO_WHEELER - Motorized two wheeled vehicles of all kinds such as scooters and
   * motorcycles. Note that this is distinct from the `BICYCLE` travel mode
   * which covers human-powered transport.  Not supported with
   * `search_along_route_parameters`. Only supported in those countries listed
   * at [Countries and regions supported for two-wheeled
   * vehicles](https://developers.google.com/maps/documentation/routes/coverage-two-wheeled).
   */
  TWO_WHEELER = 4,
  UNRECOGNIZED = -1,
}

export function travelModeFromJSON(object: any): TravelMode {
  switch (object) {
    case 0:
    case "TRAVEL_MODE_UNSPECIFIED":
      return TravelMode.TRAVEL_MODE_UNSPECIFIED;
    case 1:
    case "DRIVE":
      return TravelMode.DRIVE;
    case 2:
    case "BICYCLE":
      return TravelMode.BICYCLE;
    case 3:
    case "WALK":
      return TravelMode.WALK;
    case 4:
    case "TWO_WHEELER":
      return TravelMode.TWO_WHEELER;
    case -1:
    case "UNRECOGNIZED":
    default:
      return TravelMode.UNRECOGNIZED;
  }
}

export function travelModeToJSON(object: TravelMode): string {
  switch (object) {
    case TravelMode.TRAVEL_MODE_UNSPECIFIED:
      return "TRAVEL_MODE_UNSPECIFIED";
    case TravelMode.DRIVE:
      return "DRIVE";
    case TravelMode.BICYCLE:
      return "BICYCLE";
    case TravelMode.WALK:
      return "WALK";
    case TravelMode.TWO_WHEELER:
      return "TWO_WHEELER";
    case TravelMode.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
