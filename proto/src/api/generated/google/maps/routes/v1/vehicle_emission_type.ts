// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/maps/routes/v1/vehicle_emission_type.proto

/* eslint-disable */

export const protobufPackage = "google.maps.routes.v1";

/**
 * A set of values describing the vehicle's emission type.
 * Applies only to the DRIVE travel mode.
 */
export enum VehicleEmissionType {
  /** VEHICLE_EMISSION_TYPE_UNSPECIFIED - No emission type specified. Default to GASOLINE. */
  VEHICLE_EMISSION_TYPE_UNSPECIFIED = 0,
  /** GASOLINE - Gasoline/petrol fueled vehicle. */
  GASOLINE = 1,
  /** ELECTRIC - Electricity powered vehicle. */
  ELECTRIC = 2,
  /** HYBRID - Hybrid fuel (such as gasoline + electric) vehicle. */
  HYBRID = 3,
  UNRECOGNIZED = -1,
}

export function vehicleEmissionTypeFromJSON(object: any): VehicleEmissionType {
  switch (object) {
    case 0:
    case "VEHICLE_EMISSION_TYPE_UNSPECIFIED":
      return VehicleEmissionType.VEHICLE_EMISSION_TYPE_UNSPECIFIED;
    case 1:
    case "GASOLINE":
      return VehicleEmissionType.GASOLINE;
    case 2:
    case "ELECTRIC":
      return VehicleEmissionType.ELECTRIC;
    case 3:
    case "HYBRID":
      return VehicleEmissionType.HYBRID;
    case -1:
    case "UNRECOGNIZED":
    default:
      return VehicleEmissionType.UNRECOGNIZED;
  }
}

export function vehicleEmissionTypeToJSON(object: VehicleEmissionType): string {
  switch (object) {
    case VehicleEmissionType.VEHICLE_EMISSION_TYPE_UNSPECIFIED:
      return "VEHICLE_EMISSION_TYPE_UNSPECIFIED";
    case VehicleEmissionType.GASOLINE:
      return "GASOLINE";
    case VehicleEmissionType.ELECTRIC:
      return "ELECTRIC";
    case VehicleEmissionType.HYBRID:
      return "HYBRID";
    case VehicleEmissionType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
