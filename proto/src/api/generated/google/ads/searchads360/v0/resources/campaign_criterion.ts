// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/searchads360/v0/resources/campaign_criterion.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  AgeRangeInfo,
  DeviceInfo,
  GenderInfo,
  KeywordInfo,
  LanguageInfo,
  LocationGroupInfo,
  LocationInfo,
  UserListInfo,
  WebpageInfo,
} from "../common/criteria.js";
import {
  CampaignCriterionStatusEnum_CampaignCriterionStatus,
  campaignCriterionStatusEnum_CampaignCriterionStatusFromJSON,
  campaignCriterionStatusEnum_CampaignCriterionStatusToJSON,
} from "../enums/campaign_criterion_status.js";
import {
  CriterionTypeEnum_CriterionType,
  criterionTypeEnum_CriterionTypeFromJSON,
  criterionTypeEnum_CriterionTypeToJSON,
} from "../enums/criterion_type.js";

export const protobufPackage = "google.ads.searchads360.v0.resources";

/** A campaign criterion. */
export interface CampaignCriterion {
  /**
   * Immutable. The resource name of the campaign criterion.
   * Campaign criterion resource names have the form:
   *
   * `customers/{customer_id}/campaignCriteria/{campaign_id}~{criterion_id}`
   */
  resourceName: string;
  /**
   * Output only. The ID of the criterion.
   *
   * This field is ignored during mutate.
   */
  criterionId?:
    | Long
    | undefined;
  /**
   * Output only. The display name of the criterion.
   *
   * This field is ignored for mutates.
   */
  displayName: string;
  /**
   * The modifier for the bids when the criterion matches. The modifier must be
   * in the range: 0.1 - 10.0. Most targetable criteria types support modifiers.
   * Use 0 to opt out of a Device type.
   */
  bidModifier?:
    | number
    | undefined;
  /** Immutable. Whether to target (`false`) or exclude (`true`) the criterion. */
  negative?:
    | boolean
    | undefined;
  /** Output only. The type of the criterion. */
  type: CriterionTypeEnum_CriterionType;
  /** The status of the criterion. */
  status: CampaignCriterionStatusEnum_CampaignCriterionStatus;
  /**
   * Output only. The datetime when this campaign criterion was last modified.
   * The datetime is in the customer's time zone and in "yyyy-MM-dd
   * HH:mm:ss.ssssss" format.
   */
  lastModifiedTime: string;
  /** Immutable. Keyword. */
  keyword?:
    | KeywordInfo
    | undefined;
  /** Immutable. Location. */
  location?:
    | LocationInfo
    | undefined;
  /** Immutable. Device. */
  device?:
    | DeviceInfo
    | undefined;
  /** Immutable. Age range. */
  ageRange?:
    | AgeRangeInfo
    | undefined;
  /** Immutable. Gender. */
  gender?:
    | GenderInfo
    | undefined;
  /** Immutable. User List. */
  userList?:
    | UserListInfo
    | undefined;
  /** Immutable. Language. */
  language?:
    | LanguageInfo
    | undefined;
  /** Immutable. Webpage. */
  webpage?:
    | WebpageInfo
    | undefined;
  /** Immutable. Location Group */
  locationGroup?: LocationGroupInfo | undefined;
}

function createBaseCampaignCriterion(): CampaignCriterion {
  return {
    resourceName: "",
    criterionId: undefined,
    displayName: "",
    bidModifier: undefined,
    negative: undefined,
    type: 0,
    status: 0,
    lastModifiedTime: "",
    keyword: undefined,
    location: undefined,
    device: undefined,
    ageRange: undefined,
    gender: undefined,
    userList: undefined,
    language: undefined,
    webpage: undefined,
    locationGroup: undefined,
  };
}

export const CampaignCriterion: MessageFns<CampaignCriterion> = {
  encode(message: CampaignCriterion, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.criterionId !== undefined) {
      writer.uint32(304).int64(message.criterionId.toString());
    }
    if (message.displayName !== "") {
      writer.uint32(346).string(message.displayName);
    }
    if (message.bidModifier !== undefined) {
      writer.uint32(317).float(message.bidModifier);
    }
    if (message.negative !== undefined) {
      writer.uint32(320).bool(message.negative);
    }
    if (message.type !== 0) {
      writer.uint32(48).int32(message.type);
    }
    if (message.status !== 0) {
      writer.uint32(280).int32(message.status);
    }
    if (message.lastModifiedTime !== "") {
      writer.uint32(354).string(message.lastModifiedTime);
    }
    if (message.keyword !== undefined) {
      KeywordInfo.encode(message.keyword, writer.uint32(66).fork()).join();
    }
    if (message.location !== undefined) {
      LocationInfo.encode(message.location, writer.uint32(98).fork()).join();
    }
    if (message.device !== undefined) {
      DeviceInfo.encode(message.device, writer.uint32(106).fork()).join();
    }
    if (message.ageRange !== undefined) {
      AgeRangeInfo.encode(message.ageRange, writer.uint32(130).fork()).join();
    }
    if (message.gender !== undefined) {
      GenderInfo.encode(message.gender, writer.uint32(138).fork()).join();
    }
    if (message.userList !== undefined) {
      UserListInfo.encode(message.userList, writer.uint32(178).fork()).join();
    }
    if (message.language !== undefined) {
      LanguageInfo.encode(message.language, writer.uint32(210).fork()).join();
    }
    if (message.webpage !== undefined) {
      WebpageInfo.encode(message.webpage, writer.uint32(250).fork()).join();
    }
    if (message.locationGroup !== undefined) {
      LocationGroupInfo.encode(message.locationGroup, writer.uint32(274).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CampaignCriterion {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCampaignCriterion();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 38:
          if (tag !== 304) {
            break;
          }

          message.criterionId = Long.fromString(reader.int64().toString());
          continue;
        case 43:
          if (tag !== 346) {
            break;
          }

          message.displayName = reader.string();
          continue;
        case 39:
          if (tag !== 317) {
            break;
          }

          message.bidModifier = reader.float();
          continue;
        case 40:
          if (tag !== 320) {
            break;
          }

          message.negative = reader.bool();
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.type = reader.int32() as any;
          continue;
        case 35:
          if (tag !== 280) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
        case 44:
          if (tag !== 354) {
            break;
          }

          message.lastModifiedTime = reader.string();
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.keyword = KeywordInfo.decode(reader, reader.uint32());
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.location = LocationInfo.decode(reader, reader.uint32());
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.device = DeviceInfo.decode(reader, reader.uint32());
          continue;
        case 16:
          if (tag !== 130) {
            break;
          }

          message.ageRange = AgeRangeInfo.decode(reader, reader.uint32());
          continue;
        case 17:
          if (tag !== 138) {
            break;
          }

          message.gender = GenderInfo.decode(reader, reader.uint32());
          continue;
        case 22:
          if (tag !== 178) {
            break;
          }

          message.userList = UserListInfo.decode(reader, reader.uint32());
          continue;
        case 26:
          if (tag !== 210) {
            break;
          }

          message.language = LanguageInfo.decode(reader, reader.uint32());
          continue;
        case 31:
          if (tag !== 250) {
            break;
          }

          message.webpage = WebpageInfo.decode(reader, reader.uint32());
          continue;
        case 34:
          if (tag !== 274) {
            break;
          }

          message.locationGroup = LocationGroupInfo.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CampaignCriterion {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      criterionId: isSet(object.criterionId) ? Long.fromValue(object.criterionId) : undefined,
      displayName: isSet(object.displayName) ? globalThis.String(object.displayName) : "",
      bidModifier: isSet(object.bidModifier) ? globalThis.Number(object.bidModifier) : undefined,
      negative: isSet(object.negative) ? globalThis.Boolean(object.negative) : undefined,
      type: isSet(object.type) ? criterionTypeEnum_CriterionTypeFromJSON(object.type) : 0,
      status: isSet(object.status) ? campaignCriterionStatusEnum_CampaignCriterionStatusFromJSON(object.status) : 0,
      lastModifiedTime: isSet(object.lastModifiedTime) ? globalThis.String(object.lastModifiedTime) : "",
      keyword: isSet(object.keyword) ? KeywordInfo.fromJSON(object.keyword) : undefined,
      location: isSet(object.location) ? LocationInfo.fromJSON(object.location) : undefined,
      device: isSet(object.device) ? DeviceInfo.fromJSON(object.device) : undefined,
      ageRange: isSet(object.ageRange) ? AgeRangeInfo.fromJSON(object.ageRange) : undefined,
      gender: isSet(object.gender) ? GenderInfo.fromJSON(object.gender) : undefined,
      userList: isSet(object.userList) ? UserListInfo.fromJSON(object.userList) : undefined,
      language: isSet(object.language) ? LanguageInfo.fromJSON(object.language) : undefined,
      webpage: isSet(object.webpage) ? WebpageInfo.fromJSON(object.webpage) : undefined,
      locationGroup: isSet(object.locationGroup) ? LocationGroupInfo.fromJSON(object.locationGroup) : undefined,
    };
  },

  toJSON(message: CampaignCriterion): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.criterionId !== undefined) {
      obj.criterionId = (message.criterionId || Long.ZERO).toString();
    }
    if (message.displayName !== "") {
      obj.displayName = message.displayName;
    }
    if (message.bidModifier !== undefined) {
      obj.bidModifier = message.bidModifier;
    }
    if (message.negative !== undefined) {
      obj.negative = message.negative;
    }
    if (message.type !== 0) {
      obj.type = criterionTypeEnum_CriterionTypeToJSON(message.type);
    }
    if (message.status !== 0) {
      obj.status = campaignCriterionStatusEnum_CampaignCriterionStatusToJSON(message.status);
    }
    if (message.lastModifiedTime !== "") {
      obj.lastModifiedTime = message.lastModifiedTime;
    }
    if (message.keyword !== undefined) {
      obj.keyword = KeywordInfo.toJSON(message.keyword);
    }
    if (message.location !== undefined) {
      obj.location = LocationInfo.toJSON(message.location);
    }
    if (message.device !== undefined) {
      obj.device = DeviceInfo.toJSON(message.device);
    }
    if (message.ageRange !== undefined) {
      obj.ageRange = AgeRangeInfo.toJSON(message.ageRange);
    }
    if (message.gender !== undefined) {
      obj.gender = GenderInfo.toJSON(message.gender);
    }
    if (message.userList !== undefined) {
      obj.userList = UserListInfo.toJSON(message.userList);
    }
    if (message.language !== undefined) {
      obj.language = LanguageInfo.toJSON(message.language);
    }
    if (message.webpage !== undefined) {
      obj.webpage = WebpageInfo.toJSON(message.webpage);
    }
    if (message.locationGroup !== undefined) {
      obj.locationGroup = LocationGroupInfo.toJSON(message.locationGroup);
    }
    return obj;
  },

  create(base?: DeepPartial<CampaignCriterion>): CampaignCriterion {
    return CampaignCriterion.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CampaignCriterion>): CampaignCriterion {
    const message = createBaseCampaignCriterion();
    message.resourceName = object.resourceName ?? "";
    message.criterionId = (object.criterionId !== undefined && object.criterionId !== null)
      ? Long.fromValue(object.criterionId)
      : undefined;
    message.displayName = object.displayName ?? "";
    message.bidModifier = object.bidModifier ?? undefined;
    message.negative = object.negative ?? undefined;
    message.type = object.type ?? 0;
    message.status = object.status ?? 0;
    message.lastModifiedTime = object.lastModifiedTime ?? "";
    message.keyword = (object.keyword !== undefined && object.keyword !== null)
      ? KeywordInfo.fromPartial(object.keyword)
      : undefined;
    message.location = (object.location !== undefined && object.location !== null)
      ? LocationInfo.fromPartial(object.location)
      : undefined;
    message.device = (object.device !== undefined && object.device !== null)
      ? DeviceInfo.fromPartial(object.device)
      : undefined;
    message.ageRange = (object.ageRange !== undefined && object.ageRange !== null)
      ? AgeRangeInfo.fromPartial(object.ageRange)
      : undefined;
    message.gender = (object.gender !== undefined && object.gender !== null)
      ? GenderInfo.fromPartial(object.gender)
      : undefined;
    message.userList = (object.userList !== undefined && object.userList !== null)
      ? UserListInfo.fromPartial(object.userList)
      : undefined;
    message.language = (object.language !== undefined && object.language !== null)
      ? LanguageInfo.fromPartial(object.language)
      : undefined;
    message.webpage = (object.webpage !== undefined && object.webpage !== null)
      ? WebpageInfo.fromPartial(object.webpage)
      : undefined;
    message.locationGroup = (object.locationGroup !== undefined && object.locationGroup !== null)
      ? LocationGroupInfo.fromPartial(object.locationGroup)
      : undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
