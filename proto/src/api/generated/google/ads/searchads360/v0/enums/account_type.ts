// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/searchads360/v0/enums/account_type.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.searchads360.v0.enums";

/** Container for enum describing engine account types. */
export interface AccountTypeEnum {
}

/** Possible engine account types. */
export enum AccountTypeEnum_AccountType {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** BAIDU - Baidu account. */
  BAIDU = 2,
  /** ENGINE_TRACK - Engine track account. */
  ENGINE_TRACK = 3,
  /** FACEBOOK - Facebook account. */
  FACEBOOK = 4,
  /** FACEBOOK_GATEWAY - Facebook account managed through gateway. */
  FACEBOOK_GATEWAY = 5,
  /** GOOGLE_ADS - Google Ads account. */
  GOOGLE_ADS = 6,
  /** MICROSOFT - Microsoft Advertising account. */
  MICROSOFT = 7,
  /** SEARCH_ADS_360 - Search Ads 360 manager account. */
  SEARCH_ADS_360 = 8,
  /** YAHOO_JAPAN - Yahoo Japan account. */
  YAHOO_JAPAN = 9,
  UNRECOGNIZED = -1,
}

export function accountTypeEnum_AccountTypeFromJSON(object: any): AccountTypeEnum_AccountType {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return AccountTypeEnum_AccountType.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return AccountTypeEnum_AccountType.UNKNOWN;
    case 2:
    case "BAIDU":
      return AccountTypeEnum_AccountType.BAIDU;
    case 3:
    case "ENGINE_TRACK":
      return AccountTypeEnum_AccountType.ENGINE_TRACK;
    case 4:
    case "FACEBOOK":
      return AccountTypeEnum_AccountType.FACEBOOK;
    case 5:
    case "FACEBOOK_GATEWAY":
      return AccountTypeEnum_AccountType.FACEBOOK_GATEWAY;
    case 6:
    case "GOOGLE_ADS":
      return AccountTypeEnum_AccountType.GOOGLE_ADS;
    case 7:
    case "MICROSOFT":
      return AccountTypeEnum_AccountType.MICROSOFT;
    case 8:
    case "SEARCH_ADS_360":
      return AccountTypeEnum_AccountType.SEARCH_ADS_360;
    case 9:
    case "YAHOO_JAPAN":
      return AccountTypeEnum_AccountType.YAHOO_JAPAN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return AccountTypeEnum_AccountType.UNRECOGNIZED;
  }
}

export function accountTypeEnum_AccountTypeToJSON(object: AccountTypeEnum_AccountType): string {
  switch (object) {
    case AccountTypeEnum_AccountType.UNSPECIFIED:
      return "UNSPECIFIED";
    case AccountTypeEnum_AccountType.UNKNOWN:
      return "UNKNOWN";
    case AccountTypeEnum_AccountType.BAIDU:
      return "BAIDU";
    case AccountTypeEnum_AccountType.ENGINE_TRACK:
      return "ENGINE_TRACK";
    case AccountTypeEnum_AccountType.FACEBOOK:
      return "FACEBOOK";
    case AccountTypeEnum_AccountType.FACEBOOK_GATEWAY:
      return "FACEBOOK_GATEWAY";
    case AccountTypeEnum_AccountType.GOOGLE_ADS:
      return "GOOGLE_ADS";
    case AccountTypeEnum_AccountType.MICROSOFT:
      return "MICROSOFT";
    case AccountTypeEnum_AccountType.SEARCH_ADS_360:
      return "SEARCH_ADS_360";
    case AccountTypeEnum_AccountType.YAHOO_JAPAN:
      return "YAHOO_JAPAN";
    case AccountTypeEnum_AccountType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseAccountTypeEnum(): AccountTypeEnum {
  return {};
}

export const AccountTypeEnum: MessageFns<AccountTypeEnum> = {
  encode(_: AccountTypeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AccountTypeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAccountTypeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): AccountTypeEnum {
    return {};
  },

  toJSON(_: AccountTypeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<AccountTypeEnum>): AccountTypeEnum {
    return AccountTypeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<AccountTypeEnum>): AccountTypeEnum {
    const message = createBaseAccountTypeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
