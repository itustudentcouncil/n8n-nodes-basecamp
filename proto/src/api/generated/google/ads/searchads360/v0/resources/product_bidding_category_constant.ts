// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/searchads360/v0/resources/product_bidding_category_constant.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  ProductBiddingCategoryLevelEnum_ProductBiddingCategoryLevel,
  productBiddingCategoryLevelEnum_ProductBiddingCategoryLevelFromJSON,
  productBiddingCategoryLevelEnum_ProductBiddingCategoryLevelToJSON,
} from "../enums/product_bidding_category_level.js";
import {
  ProductBiddingCategoryStatusEnum_ProductBiddingCategoryStatus,
  productBiddingCategoryStatusEnum_ProductBiddingCategoryStatusFromJSON,
  productBiddingCategoryStatusEnum_ProductBiddingCategoryStatusToJSON,
} from "../enums/product_bidding_category_status.js";

export const protobufPackage = "google.ads.searchads360.v0.resources";

/** A Product Bidding Category. */
export interface ProductBiddingCategoryConstant {
  /**
   * Output only. The resource name of the product bidding category.
   * Product bidding category resource names have the form:
   *
   * `productBiddingCategoryConstants/{country_code}~{level}~{id}`
   */
  resourceName: string;
  /**
   * Output only. ID of the product bidding category.
   *
   * This ID is equivalent to the google_product_category ID as described in
   * this article: https://support.google.com/merchants/answer/6324436.
   */
  id?:
    | Long
    | undefined;
  /**
   * Output only. Two-letter upper-case country code of the product bidding
   * category.
   */
  countryCode?:
    | string
    | undefined;
  /** Output only. Resource name of the parent product bidding category. */
  productBiddingCategoryConstantParent?:
    | string
    | undefined;
  /** Output only. Level of the product bidding category. */
  level: ProductBiddingCategoryLevelEnum_ProductBiddingCategoryLevel;
  /** Output only. Status of the product bidding category. */
  status: ProductBiddingCategoryStatusEnum_ProductBiddingCategoryStatus;
  /** Output only. Language code of the product bidding category. */
  languageCode?:
    | string
    | undefined;
  /**
   * Output only. Display value of the product bidding category localized
   * according to language_code.
   */
  localizedName?: string | undefined;
}

function createBaseProductBiddingCategoryConstant(): ProductBiddingCategoryConstant {
  return {
    resourceName: "",
    id: undefined,
    countryCode: undefined,
    productBiddingCategoryConstantParent: undefined,
    level: 0,
    status: 0,
    languageCode: undefined,
    localizedName: undefined,
  };
}

export const ProductBiddingCategoryConstant: MessageFns<ProductBiddingCategoryConstant> = {
  encode(message: ProductBiddingCategoryConstant, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.id !== undefined) {
      writer.uint32(80).int64(message.id.toString());
    }
    if (message.countryCode !== undefined) {
      writer.uint32(90).string(message.countryCode);
    }
    if (message.productBiddingCategoryConstantParent !== undefined) {
      writer.uint32(98).string(message.productBiddingCategoryConstantParent);
    }
    if (message.level !== 0) {
      writer.uint32(40).int32(message.level);
    }
    if (message.status !== 0) {
      writer.uint32(48).int32(message.status);
    }
    if (message.languageCode !== undefined) {
      writer.uint32(106).string(message.languageCode);
    }
    if (message.localizedName !== undefined) {
      writer.uint32(114).string(message.localizedName);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ProductBiddingCategoryConstant {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseProductBiddingCategoryConstant();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 10:
          if (tag !== 80) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.countryCode = reader.string();
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.productBiddingCategoryConstantParent = reader.string();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.level = reader.int32() as any;
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.languageCode = reader.string();
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.localizedName = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ProductBiddingCategoryConstant {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      id: isSet(object.id) ? Long.fromValue(object.id) : undefined,
      countryCode: isSet(object.countryCode) ? globalThis.String(object.countryCode) : undefined,
      productBiddingCategoryConstantParent: isSet(object.productBiddingCategoryConstantParent)
        ? globalThis.String(object.productBiddingCategoryConstantParent)
        : undefined,
      level: isSet(object.level)
        ? productBiddingCategoryLevelEnum_ProductBiddingCategoryLevelFromJSON(object.level)
        : 0,
      status: isSet(object.status)
        ? productBiddingCategoryStatusEnum_ProductBiddingCategoryStatusFromJSON(object.status)
        : 0,
      languageCode: isSet(object.languageCode) ? globalThis.String(object.languageCode) : undefined,
      localizedName: isSet(object.localizedName) ? globalThis.String(object.localizedName) : undefined,
    };
  },

  toJSON(message: ProductBiddingCategoryConstant): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.id !== undefined) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.countryCode !== undefined) {
      obj.countryCode = message.countryCode;
    }
    if (message.productBiddingCategoryConstantParent !== undefined) {
      obj.productBiddingCategoryConstantParent = message.productBiddingCategoryConstantParent;
    }
    if (message.level !== 0) {
      obj.level = productBiddingCategoryLevelEnum_ProductBiddingCategoryLevelToJSON(message.level);
    }
    if (message.status !== 0) {
      obj.status = productBiddingCategoryStatusEnum_ProductBiddingCategoryStatusToJSON(message.status);
    }
    if (message.languageCode !== undefined) {
      obj.languageCode = message.languageCode;
    }
    if (message.localizedName !== undefined) {
      obj.localizedName = message.localizedName;
    }
    return obj;
  },

  create(base?: DeepPartial<ProductBiddingCategoryConstant>): ProductBiddingCategoryConstant {
    return ProductBiddingCategoryConstant.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ProductBiddingCategoryConstant>): ProductBiddingCategoryConstant {
    const message = createBaseProductBiddingCategoryConstant();
    message.resourceName = object.resourceName ?? "";
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : undefined;
    message.countryCode = object.countryCode ?? undefined;
    message.productBiddingCategoryConstantParent = object.productBiddingCategoryConstantParent ?? undefined;
    message.level = object.level ?? 0;
    message.status = object.status ?? 0;
    message.languageCode = object.languageCode ?? undefined;
    message.localizedName = object.localizedName ?? undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
