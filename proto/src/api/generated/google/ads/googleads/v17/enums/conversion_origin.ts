// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/conversion_origin.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/** Container for enum describing possible conversion origins. */
export interface ConversionOriginEnum {
}

/** The possible places where a conversion can occur. */
export enum ConversionOriginEnum_ConversionOrigin {
  /** UNSPECIFIED - The conversion origin has not been specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The conversion origin is not known in this version. */
  UNKNOWN = 1,
  /**
   * WEBSITE - Conversion that occurs when a user visits a website or takes an action
   * there after viewing an ad.
   */
  WEBSITE = 2,
  /**
   * GOOGLE_HOSTED - Conversions reported by an offline pipeline which collects local actions
   * from Google-hosted pages (for example, Google Maps, Google Place Page,
   * etc) and attributes them to relevant ad events.
   */
  GOOGLE_HOSTED = 3,
  /**
   * APP - Conversion that occurs when a user performs an action through any app
   * platforms.
   */
  APP = 4,
  /** CALL_FROM_ADS - Conversion that occurs when a user makes a call from ads. */
  CALL_FROM_ADS = 5,
  /**
   * STORE - Conversion that occurs when a user visits or makes a purchase at a
   * physical store.
   */
  STORE = 6,
  /** YOUTUBE_HOSTED - Conversion that occurs on YouTube. */
  YOUTUBE_HOSTED = 7,
  UNRECOGNIZED = -1,
}

export function conversionOriginEnum_ConversionOriginFromJSON(object: any): ConversionOriginEnum_ConversionOrigin {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return ConversionOriginEnum_ConversionOrigin.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return ConversionOriginEnum_ConversionOrigin.UNKNOWN;
    case 2:
    case "WEBSITE":
      return ConversionOriginEnum_ConversionOrigin.WEBSITE;
    case 3:
    case "GOOGLE_HOSTED":
      return ConversionOriginEnum_ConversionOrigin.GOOGLE_HOSTED;
    case 4:
    case "APP":
      return ConversionOriginEnum_ConversionOrigin.APP;
    case 5:
    case "CALL_FROM_ADS":
      return ConversionOriginEnum_ConversionOrigin.CALL_FROM_ADS;
    case 6:
    case "STORE":
      return ConversionOriginEnum_ConversionOrigin.STORE;
    case 7:
    case "YOUTUBE_HOSTED":
      return ConversionOriginEnum_ConversionOrigin.YOUTUBE_HOSTED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ConversionOriginEnum_ConversionOrigin.UNRECOGNIZED;
  }
}

export function conversionOriginEnum_ConversionOriginToJSON(object: ConversionOriginEnum_ConversionOrigin): string {
  switch (object) {
    case ConversionOriginEnum_ConversionOrigin.UNSPECIFIED:
      return "UNSPECIFIED";
    case ConversionOriginEnum_ConversionOrigin.UNKNOWN:
      return "UNKNOWN";
    case ConversionOriginEnum_ConversionOrigin.WEBSITE:
      return "WEBSITE";
    case ConversionOriginEnum_ConversionOrigin.GOOGLE_HOSTED:
      return "GOOGLE_HOSTED";
    case ConversionOriginEnum_ConversionOrigin.APP:
      return "APP";
    case ConversionOriginEnum_ConversionOrigin.CALL_FROM_ADS:
      return "CALL_FROM_ADS";
    case ConversionOriginEnum_ConversionOrigin.STORE:
      return "STORE";
    case ConversionOriginEnum_ConversionOrigin.YOUTUBE_HOSTED:
      return "YOUTUBE_HOSTED";
    case ConversionOriginEnum_ConversionOrigin.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseConversionOriginEnum(): ConversionOriginEnum {
  return {};
}

export const ConversionOriginEnum: MessageFns<ConversionOriginEnum> = {
  encode(_: ConversionOriginEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ConversionOriginEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseConversionOriginEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ConversionOriginEnum {
    return {};
  },

  toJSON(_: ConversionOriginEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ConversionOriginEnum>): ConversionOriginEnum {
    return ConversionOriginEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ConversionOriginEnum>): ConversionOriginEnum {
    const message = createBaseConversionOriginEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
