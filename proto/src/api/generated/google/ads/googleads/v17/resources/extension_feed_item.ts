// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/resources/extension_feed_item.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { AdScheduleInfo, KeywordInfo } from "../common/criteria.js";
import {
  AffiliateLocationFeedItem,
  AppFeedItem,
  CallFeedItem,
  CalloutFeedItem,
  HotelCalloutFeedItem,
  ImageFeedItem,
  LocationFeedItem,
  PriceFeedItem,
  PromotionFeedItem,
  SitelinkFeedItem,
  StructuredSnippetFeedItem,
  TextMessageFeedItem,
} from "../common/extensions.js";
import {
  ExtensionTypeEnum_ExtensionType,
  extensionTypeEnum_ExtensionTypeFromJSON,
  extensionTypeEnum_ExtensionTypeToJSON,
} from "../enums/extension_type.js";
import {
  FeedItemStatusEnum_FeedItemStatus,
  feedItemStatusEnum_FeedItemStatusFromJSON,
  feedItemStatusEnum_FeedItemStatusToJSON,
} from "../enums/feed_item_status.js";
import {
  FeedItemTargetDeviceEnum_FeedItemTargetDevice,
  feedItemTargetDeviceEnum_FeedItemTargetDeviceFromJSON,
  feedItemTargetDeviceEnum_FeedItemTargetDeviceToJSON,
} from "../enums/feed_item_target_device.js";

export const protobufPackage = "google.ads.googleads.v17.resources";

/** An extension feed item. */
export interface ExtensionFeedItem {
  /**
   * Immutable. The resource name of the extension feed item.
   * Extension feed item resource names have the form:
   *
   * `customers/{customer_id}/extensionFeedItems/{feed_item_id}`
   */
  resourceName: string;
  /** Output only. The ID of this feed item. Read-only. */
  id?:
    | Long
    | undefined;
  /**
   * Output only. The extension type of the extension feed item.
   * This field is read-only.
   */
  extensionType: ExtensionTypeEnum_ExtensionType;
  /**
   * Start time in which this feed item is effective and can begin serving. The
   * time is in the customer's time zone.
   * The format is "YYYY-MM-DD HH:MM:SS".
   * Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
   */
  startDateTime?:
    | string
    | undefined;
  /**
   * End time in which this feed item is no longer effective and will stop
   * serving. The time is in the customer's time zone.
   * The format is "YYYY-MM-DD HH:MM:SS".
   * Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
   */
  endDateTime?:
    | string
    | undefined;
  /**
   * List of non-overlapping schedules specifying all time intervals
   * for which the feed item may serve. There can be a maximum of 6 schedules
   * per day.
   */
  adSchedules: AdScheduleInfo[];
  /** The targeted device. */
  device: FeedItemTargetDeviceEnum_FeedItemTargetDevice;
  /** The targeted geo target constant. */
  targetedGeoTargetConstant?:
    | string
    | undefined;
  /** The targeted keyword. */
  targetedKeyword:
    | KeywordInfo
    | undefined;
  /**
   * Output only. Status of the feed item.
   * This field is read-only.
   */
  status: FeedItemStatusEnum_FeedItemStatus;
  /** Sitelink. */
  sitelinkFeedItem?:
    | SitelinkFeedItem
    | undefined;
  /** Structured snippet extension. */
  structuredSnippetFeedItem?:
    | StructuredSnippetFeedItem
    | undefined;
  /** App extension. */
  appFeedItem?:
    | AppFeedItem
    | undefined;
  /** Call extension. */
  callFeedItem?:
    | CallFeedItem
    | undefined;
  /** Callout extension. */
  calloutFeedItem?:
    | CalloutFeedItem
    | undefined;
  /** Text message extension. */
  textMessageFeedItem?:
    | TextMessageFeedItem
    | undefined;
  /** Price extension. */
  priceFeedItem?:
    | PriceFeedItem
    | undefined;
  /** Promotion extension. */
  promotionFeedItem?:
    | PromotionFeedItem
    | undefined;
  /**
   * Output only. Location extension. Locations are synced from a Business
   * Profile into a feed. This field is read-only.
   */
  locationFeedItem?:
    | LocationFeedItem
    | undefined;
  /**
   * Output only. Affiliate location extension. Feed locations are populated
   * by Google Ads based on a chain ID. This field is read-only.
   */
  affiliateLocationFeedItem?:
    | AffiliateLocationFeedItem
    | undefined;
  /** Hotel Callout extension. */
  hotelCalloutFeedItem?:
    | HotelCalloutFeedItem
    | undefined;
  /** Immutable. Advertiser provided image extension. */
  imageFeedItem?:
    | ImageFeedItem
    | undefined;
  /** The targeted campaign. */
  targetedCampaign?:
    | string
    | undefined;
  /** The targeted ad group. */
  targetedAdGroup?: string | undefined;
}

function createBaseExtensionFeedItem(): ExtensionFeedItem {
  return {
    resourceName: "",
    id: undefined,
    extensionType: 0,
    startDateTime: undefined,
    endDateTime: undefined,
    adSchedules: [],
    device: 0,
    targetedGeoTargetConstant: undefined,
    targetedKeyword: undefined,
    status: 0,
    sitelinkFeedItem: undefined,
    structuredSnippetFeedItem: undefined,
    appFeedItem: undefined,
    callFeedItem: undefined,
    calloutFeedItem: undefined,
    textMessageFeedItem: undefined,
    priceFeedItem: undefined,
    promotionFeedItem: undefined,
    locationFeedItem: undefined,
    affiliateLocationFeedItem: undefined,
    hotelCalloutFeedItem: undefined,
    imageFeedItem: undefined,
    targetedCampaign: undefined,
    targetedAdGroup: undefined,
  };
}

export const ExtensionFeedItem: MessageFns<ExtensionFeedItem> = {
  encode(message: ExtensionFeedItem, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.id !== undefined) {
      writer.uint32(200).int64(message.id.toString());
    }
    if (message.extensionType !== 0) {
      writer.uint32(104).int32(message.extensionType);
    }
    if (message.startDateTime !== undefined) {
      writer.uint32(210).string(message.startDateTime);
    }
    if (message.endDateTime !== undefined) {
      writer.uint32(218).string(message.endDateTime);
    }
    for (const v of message.adSchedules) {
      AdScheduleInfo.encode(v!, writer.uint32(130).fork()).join();
    }
    if (message.device !== 0) {
      writer.uint32(136).int32(message.device);
    }
    if (message.targetedGeoTargetConstant !== undefined) {
      writer.uint32(242).string(message.targetedGeoTargetConstant);
    }
    if (message.targetedKeyword !== undefined) {
      KeywordInfo.encode(message.targetedKeyword, writer.uint32(178).fork()).join();
    }
    if (message.status !== 0) {
      writer.uint32(32).int32(message.status);
    }
    if (message.sitelinkFeedItem !== undefined) {
      SitelinkFeedItem.encode(message.sitelinkFeedItem, writer.uint32(18).fork()).join();
    }
    if (message.structuredSnippetFeedItem !== undefined) {
      StructuredSnippetFeedItem.encode(message.structuredSnippetFeedItem, writer.uint32(26).fork()).join();
    }
    if (message.appFeedItem !== undefined) {
      AppFeedItem.encode(message.appFeedItem, writer.uint32(58).fork()).join();
    }
    if (message.callFeedItem !== undefined) {
      CallFeedItem.encode(message.callFeedItem, writer.uint32(66).fork()).join();
    }
    if (message.calloutFeedItem !== undefined) {
      CalloutFeedItem.encode(message.calloutFeedItem, writer.uint32(74).fork()).join();
    }
    if (message.textMessageFeedItem !== undefined) {
      TextMessageFeedItem.encode(message.textMessageFeedItem, writer.uint32(82).fork()).join();
    }
    if (message.priceFeedItem !== undefined) {
      PriceFeedItem.encode(message.priceFeedItem, writer.uint32(90).fork()).join();
    }
    if (message.promotionFeedItem !== undefined) {
      PromotionFeedItem.encode(message.promotionFeedItem, writer.uint32(98).fork()).join();
    }
    if (message.locationFeedItem !== undefined) {
      LocationFeedItem.encode(message.locationFeedItem, writer.uint32(114).fork()).join();
    }
    if (message.affiliateLocationFeedItem !== undefined) {
      AffiliateLocationFeedItem.encode(message.affiliateLocationFeedItem, writer.uint32(122).fork()).join();
    }
    if (message.hotelCalloutFeedItem !== undefined) {
      HotelCalloutFeedItem.encode(message.hotelCalloutFeedItem, writer.uint32(186).fork()).join();
    }
    if (message.imageFeedItem !== undefined) {
      ImageFeedItem.encode(message.imageFeedItem, writer.uint32(250).fork()).join();
    }
    if (message.targetedCampaign !== undefined) {
      writer.uint32(226).string(message.targetedCampaign);
    }
    if (message.targetedAdGroup !== undefined) {
      writer.uint32(234).string(message.targetedAdGroup);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ExtensionFeedItem {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseExtensionFeedItem();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 25:
          if (tag !== 200) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 13:
          if (tag !== 104) {
            break;
          }

          message.extensionType = reader.int32() as any;
          continue;
        case 26:
          if (tag !== 210) {
            break;
          }

          message.startDateTime = reader.string();
          continue;
        case 27:
          if (tag !== 218) {
            break;
          }

          message.endDateTime = reader.string();
          continue;
        case 16:
          if (tag !== 130) {
            break;
          }

          message.adSchedules.push(AdScheduleInfo.decode(reader, reader.uint32()));
          continue;
        case 17:
          if (tag !== 136) {
            break;
          }

          message.device = reader.int32() as any;
          continue;
        case 30:
          if (tag !== 242) {
            break;
          }

          message.targetedGeoTargetConstant = reader.string();
          continue;
        case 22:
          if (tag !== 178) {
            break;
          }

          message.targetedKeyword = KeywordInfo.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.sitelinkFeedItem = SitelinkFeedItem.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.structuredSnippetFeedItem = StructuredSnippetFeedItem.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.appFeedItem = AppFeedItem.decode(reader, reader.uint32());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.callFeedItem = CallFeedItem.decode(reader, reader.uint32());
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.calloutFeedItem = CalloutFeedItem.decode(reader, reader.uint32());
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.textMessageFeedItem = TextMessageFeedItem.decode(reader, reader.uint32());
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.priceFeedItem = PriceFeedItem.decode(reader, reader.uint32());
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.promotionFeedItem = PromotionFeedItem.decode(reader, reader.uint32());
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.locationFeedItem = LocationFeedItem.decode(reader, reader.uint32());
          continue;
        case 15:
          if (tag !== 122) {
            break;
          }

          message.affiliateLocationFeedItem = AffiliateLocationFeedItem.decode(reader, reader.uint32());
          continue;
        case 23:
          if (tag !== 186) {
            break;
          }

          message.hotelCalloutFeedItem = HotelCalloutFeedItem.decode(reader, reader.uint32());
          continue;
        case 31:
          if (tag !== 250) {
            break;
          }

          message.imageFeedItem = ImageFeedItem.decode(reader, reader.uint32());
          continue;
        case 28:
          if (tag !== 226) {
            break;
          }

          message.targetedCampaign = reader.string();
          continue;
        case 29:
          if (tag !== 234) {
            break;
          }

          message.targetedAdGroup = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ExtensionFeedItem {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      id: isSet(object.id) ? Long.fromValue(object.id) : undefined,
      extensionType: isSet(object.extensionType) ? extensionTypeEnum_ExtensionTypeFromJSON(object.extensionType) : 0,
      startDateTime: isSet(object.startDateTime) ? globalThis.String(object.startDateTime) : undefined,
      endDateTime: isSet(object.endDateTime) ? globalThis.String(object.endDateTime) : undefined,
      adSchedules: globalThis.Array.isArray(object?.adSchedules)
        ? object.adSchedules.map((e: any) => AdScheduleInfo.fromJSON(e))
        : [],
      device: isSet(object.device) ? feedItemTargetDeviceEnum_FeedItemTargetDeviceFromJSON(object.device) : 0,
      targetedGeoTargetConstant: isSet(object.targetedGeoTargetConstant)
        ? globalThis.String(object.targetedGeoTargetConstant)
        : undefined,
      targetedKeyword: isSet(object.targetedKeyword) ? KeywordInfo.fromJSON(object.targetedKeyword) : undefined,
      status: isSet(object.status) ? feedItemStatusEnum_FeedItemStatusFromJSON(object.status) : 0,
      sitelinkFeedItem: isSet(object.sitelinkFeedItem) ? SitelinkFeedItem.fromJSON(object.sitelinkFeedItem) : undefined,
      structuredSnippetFeedItem: isSet(object.structuredSnippetFeedItem)
        ? StructuredSnippetFeedItem.fromJSON(object.structuredSnippetFeedItem)
        : undefined,
      appFeedItem: isSet(object.appFeedItem) ? AppFeedItem.fromJSON(object.appFeedItem) : undefined,
      callFeedItem: isSet(object.callFeedItem) ? CallFeedItem.fromJSON(object.callFeedItem) : undefined,
      calloutFeedItem: isSet(object.calloutFeedItem) ? CalloutFeedItem.fromJSON(object.calloutFeedItem) : undefined,
      textMessageFeedItem: isSet(object.textMessageFeedItem)
        ? TextMessageFeedItem.fromJSON(object.textMessageFeedItem)
        : undefined,
      priceFeedItem: isSet(object.priceFeedItem) ? PriceFeedItem.fromJSON(object.priceFeedItem) : undefined,
      promotionFeedItem: isSet(object.promotionFeedItem)
        ? PromotionFeedItem.fromJSON(object.promotionFeedItem)
        : undefined,
      locationFeedItem: isSet(object.locationFeedItem) ? LocationFeedItem.fromJSON(object.locationFeedItem) : undefined,
      affiliateLocationFeedItem: isSet(object.affiliateLocationFeedItem)
        ? AffiliateLocationFeedItem.fromJSON(object.affiliateLocationFeedItem)
        : undefined,
      hotelCalloutFeedItem: isSet(object.hotelCalloutFeedItem)
        ? HotelCalloutFeedItem.fromJSON(object.hotelCalloutFeedItem)
        : undefined,
      imageFeedItem: isSet(object.imageFeedItem) ? ImageFeedItem.fromJSON(object.imageFeedItem) : undefined,
      targetedCampaign: isSet(object.targetedCampaign) ? globalThis.String(object.targetedCampaign) : undefined,
      targetedAdGroup: isSet(object.targetedAdGroup) ? globalThis.String(object.targetedAdGroup) : undefined,
    };
  },

  toJSON(message: ExtensionFeedItem): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.id !== undefined) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.extensionType !== 0) {
      obj.extensionType = extensionTypeEnum_ExtensionTypeToJSON(message.extensionType);
    }
    if (message.startDateTime !== undefined) {
      obj.startDateTime = message.startDateTime;
    }
    if (message.endDateTime !== undefined) {
      obj.endDateTime = message.endDateTime;
    }
    if (message.adSchedules?.length) {
      obj.adSchedules = message.adSchedules.map((e) => AdScheduleInfo.toJSON(e));
    }
    if (message.device !== 0) {
      obj.device = feedItemTargetDeviceEnum_FeedItemTargetDeviceToJSON(message.device);
    }
    if (message.targetedGeoTargetConstant !== undefined) {
      obj.targetedGeoTargetConstant = message.targetedGeoTargetConstant;
    }
    if (message.targetedKeyword !== undefined) {
      obj.targetedKeyword = KeywordInfo.toJSON(message.targetedKeyword);
    }
    if (message.status !== 0) {
      obj.status = feedItemStatusEnum_FeedItemStatusToJSON(message.status);
    }
    if (message.sitelinkFeedItem !== undefined) {
      obj.sitelinkFeedItem = SitelinkFeedItem.toJSON(message.sitelinkFeedItem);
    }
    if (message.structuredSnippetFeedItem !== undefined) {
      obj.structuredSnippetFeedItem = StructuredSnippetFeedItem.toJSON(message.structuredSnippetFeedItem);
    }
    if (message.appFeedItem !== undefined) {
      obj.appFeedItem = AppFeedItem.toJSON(message.appFeedItem);
    }
    if (message.callFeedItem !== undefined) {
      obj.callFeedItem = CallFeedItem.toJSON(message.callFeedItem);
    }
    if (message.calloutFeedItem !== undefined) {
      obj.calloutFeedItem = CalloutFeedItem.toJSON(message.calloutFeedItem);
    }
    if (message.textMessageFeedItem !== undefined) {
      obj.textMessageFeedItem = TextMessageFeedItem.toJSON(message.textMessageFeedItem);
    }
    if (message.priceFeedItem !== undefined) {
      obj.priceFeedItem = PriceFeedItem.toJSON(message.priceFeedItem);
    }
    if (message.promotionFeedItem !== undefined) {
      obj.promotionFeedItem = PromotionFeedItem.toJSON(message.promotionFeedItem);
    }
    if (message.locationFeedItem !== undefined) {
      obj.locationFeedItem = LocationFeedItem.toJSON(message.locationFeedItem);
    }
    if (message.affiliateLocationFeedItem !== undefined) {
      obj.affiliateLocationFeedItem = AffiliateLocationFeedItem.toJSON(message.affiliateLocationFeedItem);
    }
    if (message.hotelCalloutFeedItem !== undefined) {
      obj.hotelCalloutFeedItem = HotelCalloutFeedItem.toJSON(message.hotelCalloutFeedItem);
    }
    if (message.imageFeedItem !== undefined) {
      obj.imageFeedItem = ImageFeedItem.toJSON(message.imageFeedItem);
    }
    if (message.targetedCampaign !== undefined) {
      obj.targetedCampaign = message.targetedCampaign;
    }
    if (message.targetedAdGroup !== undefined) {
      obj.targetedAdGroup = message.targetedAdGroup;
    }
    return obj;
  },

  create(base?: DeepPartial<ExtensionFeedItem>): ExtensionFeedItem {
    return ExtensionFeedItem.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ExtensionFeedItem>): ExtensionFeedItem {
    const message = createBaseExtensionFeedItem();
    message.resourceName = object.resourceName ?? "";
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : undefined;
    message.extensionType = object.extensionType ?? 0;
    message.startDateTime = object.startDateTime ?? undefined;
    message.endDateTime = object.endDateTime ?? undefined;
    message.adSchedules = object.adSchedules?.map((e) => AdScheduleInfo.fromPartial(e)) || [];
    message.device = object.device ?? 0;
    message.targetedGeoTargetConstant = object.targetedGeoTargetConstant ?? undefined;
    message.targetedKeyword = (object.targetedKeyword !== undefined && object.targetedKeyword !== null)
      ? KeywordInfo.fromPartial(object.targetedKeyword)
      : undefined;
    message.status = object.status ?? 0;
    message.sitelinkFeedItem = (object.sitelinkFeedItem !== undefined && object.sitelinkFeedItem !== null)
      ? SitelinkFeedItem.fromPartial(object.sitelinkFeedItem)
      : undefined;
    message.structuredSnippetFeedItem =
      (object.structuredSnippetFeedItem !== undefined && object.structuredSnippetFeedItem !== null)
        ? StructuredSnippetFeedItem.fromPartial(object.structuredSnippetFeedItem)
        : undefined;
    message.appFeedItem = (object.appFeedItem !== undefined && object.appFeedItem !== null)
      ? AppFeedItem.fromPartial(object.appFeedItem)
      : undefined;
    message.callFeedItem = (object.callFeedItem !== undefined && object.callFeedItem !== null)
      ? CallFeedItem.fromPartial(object.callFeedItem)
      : undefined;
    message.calloutFeedItem = (object.calloutFeedItem !== undefined && object.calloutFeedItem !== null)
      ? CalloutFeedItem.fromPartial(object.calloutFeedItem)
      : undefined;
    message.textMessageFeedItem = (object.textMessageFeedItem !== undefined && object.textMessageFeedItem !== null)
      ? TextMessageFeedItem.fromPartial(object.textMessageFeedItem)
      : undefined;
    message.priceFeedItem = (object.priceFeedItem !== undefined && object.priceFeedItem !== null)
      ? PriceFeedItem.fromPartial(object.priceFeedItem)
      : undefined;
    message.promotionFeedItem = (object.promotionFeedItem !== undefined && object.promotionFeedItem !== null)
      ? PromotionFeedItem.fromPartial(object.promotionFeedItem)
      : undefined;
    message.locationFeedItem = (object.locationFeedItem !== undefined && object.locationFeedItem !== null)
      ? LocationFeedItem.fromPartial(object.locationFeedItem)
      : undefined;
    message.affiliateLocationFeedItem =
      (object.affiliateLocationFeedItem !== undefined && object.affiliateLocationFeedItem !== null)
        ? AffiliateLocationFeedItem.fromPartial(object.affiliateLocationFeedItem)
        : undefined;
    message.hotelCalloutFeedItem = (object.hotelCalloutFeedItem !== undefined && object.hotelCalloutFeedItem !== null)
      ? HotelCalloutFeedItem.fromPartial(object.hotelCalloutFeedItem)
      : undefined;
    message.imageFeedItem = (object.imageFeedItem !== undefined && object.imageFeedItem !== null)
      ? ImageFeedItem.fromPartial(object.imageFeedItem)
      : undefined;
    message.targetedCampaign = object.targetedCampaign ?? undefined;
    message.targetedAdGroup = object.targetedAdGroup ?? undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
