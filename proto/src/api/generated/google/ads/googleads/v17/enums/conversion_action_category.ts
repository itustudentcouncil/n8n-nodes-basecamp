// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/conversion_action_category.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/**
 * Container for enum describing the category of conversions that are associated
 * with a ConversionAction.
 */
export interface ConversionActionCategoryEnum {
}

/** The category of conversions that are associated with a ConversionAction. */
export enum ConversionActionCategoryEnum_ConversionActionCategory {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** DEFAULT - Default category. */
  DEFAULT = 2,
  /** PAGE_VIEW - User visiting a page. */
  PAGE_VIEW = 3,
  /** PURCHASE - Purchase, sales, or "order placed" event. */
  PURCHASE = 4,
  /** SIGNUP - Signup user action. */
  SIGNUP = 5,
  /** DOWNLOAD - Software download action (as for an app). */
  DOWNLOAD = 7,
  /** ADD_TO_CART - The addition of items to a shopping cart or bag on an advertiser site. */
  ADD_TO_CART = 8,
  /** BEGIN_CHECKOUT - When someone enters the checkout flow on an advertiser site. */
  BEGIN_CHECKOUT = 9,
  /** SUBSCRIBE_PAID - The start of a paid subscription for a product or service. */
  SUBSCRIBE_PAID = 10,
  /** PHONE_CALL_LEAD - A call to indicate interest in an advertiser's offering. */
  PHONE_CALL_LEAD = 11,
  /** IMPORTED_LEAD - A lead conversion imported from an external source into Google Ads. */
  IMPORTED_LEAD = 12,
  /**
   * SUBMIT_LEAD_FORM - A submission of a form on an advertiser site indicating business
   * interest.
   */
  SUBMIT_LEAD_FORM = 13,
  /** BOOK_APPOINTMENT - A booking of an appointment with an advertiser's business. */
  BOOK_APPOINTMENT = 14,
  /** REQUEST_QUOTE - A quote or price estimate request. */
  REQUEST_QUOTE = 15,
  /** GET_DIRECTIONS - A search for an advertiser's business location with intention to visit. */
  GET_DIRECTIONS = 16,
  /** OUTBOUND_CLICK - A click to an advertiser's partner's site. */
  OUTBOUND_CLICK = 17,
  /** CONTACT - A call, SMS, email, chat or other type of contact to an advertiser. */
  CONTACT = 18,
  /**
   * ENGAGEMENT - A website engagement event such as long site time or a Google Analytics
   * (GA) Smart Goal. Intended to be used for GA, Firebase, GA Gold goal
   * imports.
   */
  ENGAGEMENT = 19,
  /** STORE_VISIT - A visit to a physical store location. */
  STORE_VISIT = 20,
  /** STORE_SALE - A sale occurring in a physical store. */
  STORE_SALE = 21,
  /**
   * QUALIFIED_LEAD - A lead conversion imported from an external source into Google Ads,
   * that has been further qualified by the advertiser (marketing/sales team).
   * In the lead-to-sale journey, advertisers get leads, then act on them
   * by reaching out to the consumer. If the consumer is interested and
   * may end up buying their product, the advertiser marks such leads as
   * "qualified leads".
   */
  QUALIFIED_LEAD = 22,
  /**
   * CONVERTED_LEAD - A lead conversion imported from an external source into Google Ads, that
   * has further completed a chosen stage as defined by the lead gen
   * advertiser.
   */
  CONVERTED_LEAD = 23,
  UNRECOGNIZED = -1,
}

export function conversionActionCategoryEnum_ConversionActionCategoryFromJSON(
  object: any,
): ConversionActionCategoryEnum_ConversionActionCategory {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return ConversionActionCategoryEnum_ConversionActionCategory.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return ConversionActionCategoryEnum_ConversionActionCategory.UNKNOWN;
    case 2:
    case "DEFAULT":
      return ConversionActionCategoryEnum_ConversionActionCategory.DEFAULT;
    case 3:
    case "PAGE_VIEW":
      return ConversionActionCategoryEnum_ConversionActionCategory.PAGE_VIEW;
    case 4:
    case "PURCHASE":
      return ConversionActionCategoryEnum_ConversionActionCategory.PURCHASE;
    case 5:
    case "SIGNUP":
      return ConversionActionCategoryEnum_ConversionActionCategory.SIGNUP;
    case 7:
    case "DOWNLOAD":
      return ConversionActionCategoryEnum_ConversionActionCategory.DOWNLOAD;
    case 8:
    case "ADD_TO_CART":
      return ConversionActionCategoryEnum_ConversionActionCategory.ADD_TO_CART;
    case 9:
    case "BEGIN_CHECKOUT":
      return ConversionActionCategoryEnum_ConversionActionCategory.BEGIN_CHECKOUT;
    case 10:
    case "SUBSCRIBE_PAID":
      return ConversionActionCategoryEnum_ConversionActionCategory.SUBSCRIBE_PAID;
    case 11:
    case "PHONE_CALL_LEAD":
      return ConversionActionCategoryEnum_ConversionActionCategory.PHONE_CALL_LEAD;
    case 12:
    case "IMPORTED_LEAD":
      return ConversionActionCategoryEnum_ConversionActionCategory.IMPORTED_LEAD;
    case 13:
    case "SUBMIT_LEAD_FORM":
      return ConversionActionCategoryEnum_ConversionActionCategory.SUBMIT_LEAD_FORM;
    case 14:
    case "BOOK_APPOINTMENT":
      return ConversionActionCategoryEnum_ConversionActionCategory.BOOK_APPOINTMENT;
    case 15:
    case "REQUEST_QUOTE":
      return ConversionActionCategoryEnum_ConversionActionCategory.REQUEST_QUOTE;
    case 16:
    case "GET_DIRECTIONS":
      return ConversionActionCategoryEnum_ConversionActionCategory.GET_DIRECTIONS;
    case 17:
    case "OUTBOUND_CLICK":
      return ConversionActionCategoryEnum_ConversionActionCategory.OUTBOUND_CLICK;
    case 18:
    case "CONTACT":
      return ConversionActionCategoryEnum_ConversionActionCategory.CONTACT;
    case 19:
    case "ENGAGEMENT":
      return ConversionActionCategoryEnum_ConversionActionCategory.ENGAGEMENT;
    case 20:
    case "STORE_VISIT":
      return ConversionActionCategoryEnum_ConversionActionCategory.STORE_VISIT;
    case 21:
    case "STORE_SALE":
      return ConversionActionCategoryEnum_ConversionActionCategory.STORE_SALE;
    case 22:
    case "QUALIFIED_LEAD":
      return ConversionActionCategoryEnum_ConversionActionCategory.QUALIFIED_LEAD;
    case 23:
    case "CONVERTED_LEAD":
      return ConversionActionCategoryEnum_ConversionActionCategory.CONVERTED_LEAD;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ConversionActionCategoryEnum_ConversionActionCategory.UNRECOGNIZED;
  }
}

export function conversionActionCategoryEnum_ConversionActionCategoryToJSON(
  object: ConversionActionCategoryEnum_ConversionActionCategory,
): string {
  switch (object) {
    case ConversionActionCategoryEnum_ConversionActionCategory.UNSPECIFIED:
      return "UNSPECIFIED";
    case ConversionActionCategoryEnum_ConversionActionCategory.UNKNOWN:
      return "UNKNOWN";
    case ConversionActionCategoryEnum_ConversionActionCategory.DEFAULT:
      return "DEFAULT";
    case ConversionActionCategoryEnum_ConversionActionCategory.PAGE_VIEW:
      return "PAGE_VIEW";
    case ConversionActionCategoryEnum_ConversionActionCategory.PURCHASE:
      return "PURCHASE";
    case ConversionActionCategoryEnum_ConversionActionCategory.SIGNUP:
      return "SIGNUP";
    case ConversionActionCategoryEnum_ConversionActionCategory.DOWNLOAD:
      return "DOWNLOAD";
    case ConversionActionCategoryEnum_ConversionActionCategory.ADD_TO_CART:
      return "ADD_TO_CART";
    case ConversionActionCategoryEnum_ConversionActionCategory.BEGIN_CHECKOUT:
      return "BEGIN_CHECKOUT";
    case ConversionActionCategoryEnum_ConversionActionCategory.SUBSCRIBE_PAID:
      return "SUBSCRIBE_PAID";
    case ConversionActionCategoryEnum_ConversionActionCategory.PHONE_CALL_LEAD:
      return "PHONE_CALL_LEAD";
    case ConversionActionCategoryEnum_ConversionActionCategory.IMPORTED_LEAD:
      return "IMPORTED_LEAD";
    case ConversionActionCategoryEnum_ConversionActionCategory.SUBMIT_LEAD_FORM:
      return "SUBMIT_LEAD_FORM";
    case ConversionActionCategoryEnum_ConversionActionCategory.BOOK_APPOINTMENT:
      return "BOOK_APPOINTMENT";
    case ConversionActionCategoryEnum_ConversionActionCategory.REQUEST_QUOTE:
      return "REQUEST_QUOTE";
    case ConversionActionCategoryEnum_ConversionActionCategory.GET_DIRECTIONS:
      return "GET_DIRECTIONS";
    case ConversionActionCategoryEnum_ConversionActionCategory.OUTBOUND_CLICK:
      return "OUTBOUND_CLICK";
    case ConversionActionCategoryEnum_ConversionActionCategory.CONTACT:
      return "CONTACT";
    case ConversionActionCategoryEnum_ConversionActionCategory.ENGAGEMENT:
      return "ENGAGEMENT";
    case ConversionActionCategoryEnum_ConversionActionCategory.STORE_VISIT:
      return "STORE_VISIT";
    case ConversionActionCategoryEnum_ConversionActionCategory.STORE_SALE:
      return "STORE_SALE";
    case ConversionActionCategoryEnum_ConversionActionCategory.QUALIFIED_LEAD:
      return "QUALIFIED_LEAD";
    case ConversionActionCategoryEnum_ConversionActionCategory.CONVERTED_LEAD:
      return "CONVERTED_LEAD";
    case ConversionActionCategoryEnum_ConversionActionCategory.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseConversionActionCategoryEnum(): ConversionActionCategoryEnum {
  return {};
}

export const ConversionActionCategoryEnum: MessageFns<ConversionActionCategoryEnum> = {
  encode(_: ConversionActionCategoryEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ConversionActionCategoryEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseConversionActionCategoryEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ConversionActionCategoryEnum {
    return {};
  },

  toJSON(_: ConversionActionCategoryEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ConversionActionCategoryEnum>): ConversionActionCategoryEnum {
    return ConversionActionCategoryEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ConversionActionCategoryEnum>): ConversionActionCategoryEnum {
    const message = createBaseConversionActionCategoryEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
