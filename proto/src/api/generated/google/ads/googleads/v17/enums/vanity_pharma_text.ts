// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/vanity_pharma_text.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/**
 * The text that will be displayed in display URL of the text ad when website
 * description is the selected display mode for vanity pharma URLs.
 */
export interface VanityPharmaTextEnum {
}

/** Enum describing possible text. */
export enum VanityPharmaTextEnum_VanityPharmaText {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** PRESCRIPTION_TREATMENT_WEBSITE_EN - Prescription treatment website with website content in English. */
  PRESCRIPTION_TREATMENT_WEBSITE_EN = 2,
  /**
   * PRESCRIPTION_TREATMENT_WEBSITE_ES - Prescription treatment website with website content in Spanish
   * (Sitio de tratamientos con receta).
   */
  PRESCRIPTION_TREATMENT_WEBSITE_ES = 3,
  /** PRESCRIPTION_DEVICE_WEBSITE_EN - Prescription device website with website content in English. */
  PRESCRIPTION_DEVICE_WEBSITE_EN = 4,
  /**
   * PRESCRIPTION_DEVICE_WEBSITE_ES - Prescription device website with website content in Spanish (Sitio de
   * dispositivos con receta).
   */
  PRESCRIPTION_DEVICE_WEBSITE_ES = 5,
  /** MEDICAL_DEVICE_WEBSITE_EN - Medical device website with website content in English. */
  MEDICAL_DEVICE_WEBSITE_EN = 6,
  /**
   * MEDICAL_DEVICE_WEBSITE_ES - Medical device website with website content in Spanish (Sitio de
   * dispositivos m√©dicos).
   */
  MEDICAL_DEVICE_WEBSITE_ES = 7,
  /** PREVENTATIVE_TREATMENT_WEBSITE_EN - Preventative treatment website with website content in English. */
  PREVENTATIVE_TREATMENT_WEBSITE_EN = 8,
  /**
   * PREVENTATIVE_TREATMENT_WEBSITE_ES - Preventative treatment website with website content in Spanish (Sitio de
   * tratamientos preventivos).
   */
  PREVENTATIVE_TREATMENT_WEBSITE_ES = 9,
  /** PRESCRIPTION_CONTRACEPTION_WEBSITE_EN - Prescription contraception website with website content in English. */
  PRESCRIPTION_CONTRACEPTION_WEBSITE_EN = 10,
  /**
   * PRESCRIPTION_CONTRACEPTION_WEBSITE_ES - Prescription contraception website with website content in Spanish (Sitio
   * de anticonceptivos con receta).
   */
  PRESCRIPTION_CONTRACEPTION_WEBSITE_ES = 11,
  /** PRESCRIPTION_VACCINE_WEBSITE_EN - Prescription vaccine website with website content in English. */
  PRESCRIPTION_VACCINE_WEBSITE_EN = 12,
  /**
   * PRESCRIPTION_VACCINE_WEBSITE_ES - Prescription vaccine website with website content in Spanish (Sitio de
   * vacunas con receta).
   */
  PRESCRIPTION_VACCINE_WEBSITE_ES = 13,
  UNRECOGNIZED = -1,
}

export function vanityPharmaTextEnum_VanityPharmaTextFromJSON(object: any): VanityPharmaTextEnum_VanityPharmaText {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return VanityPharmaTextEnum_VanityPharmaText.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return VanityPharmaTextEnum_VanityPharmaText.UNKNOWN;
    case 2:
    case "PRESCRIPTION_TREATMENT_WEBSITE_EN":
      return VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_TREATMENT_WEBSITE_EN;
    case 3:
    case "PRESCRIPTION_TREATMENT_WEBSITE_ES":
      return VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_TREATMENT_WEBSITE_ES;
    case 4:
    case "PRESCRIPTION_DEVICE_WEBSITE_EN":
      return VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_DEVICE_WEBSITE_EN;
    case 5:
    case "PRESCRIPTION_DEVICE_WEBSITE_ES":
      return VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_DEVICE_WEBSITE_ES;
    case 6:
    case "MEDICAL_DEVICE_WEBSITE_EN":
      return VanityPharmaTextEnum_VanityPharmaText.MEDICAL_DEVICE_WEBSITE_EN;
    case 7:
    case "MEDICAL_DEVICE_WEBSITE_ES":
      return VanityPharmaTextEnum_VanityPharmaText.MEDICAL_DEVICE_WEBSITE_ES;
    case 8:
    case "PREVENTATIVE_TREATMENT_WEBSITE_EN":
      return VanityPharmaTextEnum_VanityPharmaText.PREVENTATIVE_TREATMENT_WEBSITE_EN;
    case 9:
    case "PREVENTATIVE_TREATMENT_WEBSITE_ES":
      return VanityPharmaTextEnum_VanityPharmaText.PREVENTATIVE_TREATMENT_WEBSITE_ES;
    case 10:
    case "PRESCRIPTION_CONTRACEPTION_WEBSITE_EN":
      return VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_CONTRACEPTION_WEBSITE_EN;
    case 11:
    case "PRESCRIPTION_CONTRACEPTION_WEBSITE_ES":
      return VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_CONTRACEPTION_WEBSITE_ES;
    case 12:
    case "PRESCRIPTION_VACCINE_WEBSITE_EN":
      return VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_VACCINE_WEBSITE_EN;
    case 13:
    case "PRESCRIPTION_VACCINE_WEBSITE_ES":
      return VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_VACCINE_WEBSITE_ES;
    case -1:
    case "UNRECOGNIZED":
    default:
      return VanityPharmaTextEnum_VanityPharmaText.UNRECOGNIZED;
  }
}

export function vanityPharmaTextEnum_VanityPharmaTextToJSON(object: VanityPharmaTextEnum_VanityPharmaText): string {
  switch (object) {
    case VanityPharmaTextEnum_VanityPharmaText.UNSPECIFIED:
      return "UNSPECIFIED";
    case VanityPharmaTextEnum_VanityPharmaText.UNKNOWN:
      return "UNKNOWN";
    case VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_TREATMENT_WEBSITE_EN:
      return "PRESCRIPTION_TREATMENT_WEBSITE_EN";
    case VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_TREATMENT_WEBSITE_ES:
      return "PRESCRIPTION_TREATMENT_WEBSITE_ES";
    case VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_DEVICE_WEBSITE_EN:
      return "PRESCRIPTION_DEVICE_WEBSITE_EN";
    case VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_DEVICE_WEBSITE_ES:
      return "PRESCRIPTION_DEVICE_WEBSITE_ES";
    case VanityPharmaTextEnum_VanityPharmaText.MEDICAL_DEVICE_WEBSITE_EN:
      return "MEDICAL_DEVICE_WEBSITE_EN";
    case VanityPharmaTextEnum_VanityPharmaText.MEDICAL_DEVICE_WEBSITE_ES:
      return "MEDICAL_DEVICE_WEBSITE_ES";
    case VanityPharmaTextEnum_VanityPharmaText.PREVENTATIVE_TREATMENT_WEBSITE_EN:
      return "PREVENTATIVE_TREATMENT_WEBSITE_EN";
    case VanityPharmaTextEnum_VanityPharmaText.PREVENTATIVE_TREATMENT_WEBSITE_ES:
      return "PREVENTATIVE_TREATMENT_WEBSITE_ES";
    case VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_CONTRACEPTION_WEBSITE_EN:
      return "PRESCRIPTION_CONTRACEPTION_WEBSITE_EN";
    case VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_CONTRACEPTION_WEBSITE_ES:
      return "PRESCRIPTION_CONTRACEPTION_WEBSITE_ES";
    case VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_VACCINE_WEBSITE_EN:
      return "PRESCRIPTION_VACCINE_WEBSITE_EN";
    case VanityPharmaTextEnum_VanityPharmaText.PRESCRIPTION_VACCINE_WEBSITE_ES:
      return "PRESCRIPTION_VACCINE_WEBSITE_ES";
    case VanityPharmaTextEnum_VanityPharmaText.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseVanityPharmaTextEnum(): VanityPharmaTextEnum {
  return {};
}

export const VanityPharmaTextEnum: MessageFns<VanityPharmaTextEnum> = {
  encode(_: VanityPharmaTextEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): VanityPharmaTextEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseVanityPharmaTextEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): VanityPharmaTextEnum {
    return {};
  },

  toJSON(_: VanityPharmaTextEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<VanityPharmaTextEnum>): VanityPharmaTextEnum {
    return VanityPharmaTextEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<VanityPharmaTextEnum>): VanityPharmaTextEnum {
    const message = createBaseVanityPharmaTextEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
