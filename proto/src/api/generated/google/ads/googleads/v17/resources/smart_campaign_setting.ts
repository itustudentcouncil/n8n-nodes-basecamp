// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/resources/smart_campaign_setting.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.resources";

/** Settings for configuring Smart campaigns. */
export interface SmartCampaignSetting {
  /**
   * Immutable. The resource name of the Smart campaign setting.
   * Smart campaign setting resource names have the form:
   *
   * `customers/{customer_id}/smartCampaignSettings/{campaign_id}`
   */
  resourceName: string;
  /** Output only. The campaign to which these settings apply. */
  campaign: string;
  /** Phone number and country code. */
  phoneNumber:
    | SmartCampaignSetting_PhoneNumber
    | undefined;
  /**
   * The language code to advertise in from the set of
   * [supported language codes]
   * (https://developers.google.com/google-ads/api/reference/data/codes-formats#languages).
   */
  advertisingLanguageCode: string;
  /** The user-provided landing page URL for this Campaign. */
  finalUrl?:
    | string
    | undefined;
  /**
   * Settings for configuring a business profile optimized for ads as this
   * campaign's landing page.  This campaign must be linked to a business
   * profile to use this option.  For more information on this feature,
   * consult https://support.google.com/google-ads/answer/9827068.
   */
  adOptimizedBusinessProfileSetting?:
    | SmartCampaignSetting_AdOptimizedBusinessProfileSetting
    | undefined;
  /** The name of the business. */
  businessName?:
    | string
    | undefined;
  /**
   * The resource name of a Business Profile location.
   * Business Profile location resource names can be fetched through the
   * Business Profile API and adhere to the following format:
   * `locations/{locationId}`.
   *
   * See the [Business Profile API]
   * (https://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations)
   * for additional details.
   */
  businessProfileLocation?: string | undefined;
}

/** Phone number and country code in smart campaign settings. */
export interface SmartCampaignSetting_PhoneNumber {
  /** Phone number of the smart campaign. */
  phoneNumber?:
    | string
    | undefined;
  /** Upper-case, two-letter country code as defined by ISO-3166. */
  countryCode?: string | undefined;
}

/**
 * Settings for configuring a business profile optimized for ads as this
 * campaign's landing page.
 */
export interface SmartCampaignSetting_AdOptimizedBusinessProfileSetting {
  /**
   * Enabling a lead form on your business profile enables prospective
   * customers to contact your business by filling out a simple form,
   * and you'll receive their information through email.
   */
  includeLeadForm?: boolean | undefined;
}

function createBaseSmartCampaignSetting(): SmartCampaignSetting {
  return {
    resourceName: "",
    campaign: "",
    phoneNumber: undefined,
    advertisingLanguageCode: "",
    finalUrl: undefined,
    adOptimizedBusinessProfileSetting: undefined,
    businessName: undefined,
    businessProfileLocation: undefined,
  };
}

export const SmartCampaignSetting: MessageFns<SmartCampaignSetting> = {
  encode(message: SmartCampaignSetting, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.campaign !== "") {
      writer.uint32(18).string(message.campaign);
    }
    if (message.phoneNumber !== undefined) {
      SmartCampaignSetting_PhoneNumber.encode(message.phoneNumber, writer.uint32(26).fork()).join();
    }
    if (message.advertisingLanguageCode !== "") {
      writer.uint32(58).string(message.advertisingLanguageCode);
    }
    if (message.finalUrl !== undefined) {
      writer.uint32(66).string(message.finalUrl);
    }
    if (message.adOptimizedBusinessProfileSetting !== undefined) {
      SmartCampaignSetting_AdOptimizedBusinessProfileSetting.encode(
        message.adOptimizedBusinessProfileSetting,
        writer.uint32(74).fork(),
      ).join();
    }
    if (message.businessName !== undefined) {
      writer.uint32(42).string(message.businessName);
    }
    if (message.businessProfileLocation !== undefined) {
      writer.uint32(82).string(message.businessProfileLocation);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SmartCampaignSetting {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSmartCampaignSetting();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.campaign = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.phoneNumber = SmartCampaignSetting_PhoneNumber.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.advertisingLanguageCode = reader.string();
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.finalUrl = reader.string();
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.adOptimizedBusinessProfileSetting = SmartCampaignSetting_AdOptimizedBusinessProfileSetting.decode(
            reader,
            reader.uint32(),
          );
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.businessName = reader.string();
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.businessProfileLocation = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SmartCampaignSetting {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      campaign: isSet(object.campaign) ? globalThis.String(object.campaign) : "",
      phoneNumber: isSet(object.phoneNumber)
        ? SmartCampaignSetting_PhoneNumber.fromJSON(object.phoneNumber)
        : undefined,
      advertisingLanguageCode: isSet(object.advertisingLanguageCode)
        ? globalThis.String(object.advertisingLanguageCode)
        : "",
      finalUrl: isSet(object.finalUrl) ? globalThis.String(object.finalUrl) : undefined,
      adOptimizedBusinessProfileSetting: isSet(object.adOptimizedBusinessProfileSetting)
        ? SmartCampaignSetting_AdOptimizedBusinessProfileSetting.fromJSON(object.adOptimizedBusinessProfileSetting)
        : undefined,
      businessName: isSet(object.businessName) ? globalThis.String(object.businessName) : undefined,
      businessProfileLocation: isSet(object.businessProfileLocation)
        ? globalThis.String(object.businessProfileLocation)
        : undefined,
    };
  },

  toJSON(message: SmartCampaignSetting): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.campaign !== "") {
      obj.campaign = message.campaign;
    }
    if (message.phoneNumber !== undefined) {
      obj.phoneNumber = SmartCampaignSetting_PhoneNumber.toJSON(message.phoneNumber);
    }
    if (message.advertisingLanguageCode !== "") {
      obj.advertisingLanguageCode = message.advertisingLanguageCode;
    }
    if (message.finalUrl !== undefined) {
      obj.finalUrl = message.finalUrl;
    }
    if (message.adOptimizedBusinessProfileSetting !== undefined) {
      obj.adOptimizedBusinessProfileSetting = SmartCampaignSetting_AdOptimizedBusinessProfileSetting.toJSON(
        message.adOptimizedBusinessProfileSetting,
      );
    }
    if (message.businessName !== undefined) {
      obj.businessName = message.businessName;
    }
    if (message.businessProfileLocation !== undefined) {
      obj.businessProfileLocation = message.businessProfileLocation;
    }
    return obj;
  },

  create(base?: DeepPartial<SmartCampaignSetting>): SmartCampaignSetting {
    return SmartCampaignSetting.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SmartCampaignSetting>): SmartCampaignSetting {
    const message = createBaseSmartCampaignSetting();
    message.resourceName = object.resourceName ?? "";
    message.campaign = object.campaign ?? "";
    message.phoneNumber = (object.phoneNumber !== undefined && object.phoneNumber !== null)
      ? SmartCampaignSetting_PhoneNumber.fromPartial(object.phoneNumber)
      : undefined;
    message.advertisingLanguageCode = object.advertisingLanguageCode ?? "";
    message.finalUrl = object.finalUrl ?? undefined;
    message.adOptimizedBusinessProfileSetting =
      (object.adOptimizedBusinessProfileSetting !== undefined && object.adOptimizedBusinessProfileSetting !== null)
        ? SmartCampaignSetting_AdOptimizedBusinessProfileSetting.fromPartial(object.adOptimizedBusinessProfileSetting)
        : undefined;
    message.businessName = object.businessName ?? undefined;
    message.businessProfileLocation = object.businessProfileLocation ?? undefined;
    return message;
  },
};

function createBaseSmartCampaignSetting_PhoneNumber(): SmartCampaignSetting_PhoneNumber {
  return { phoneNumber: undefined, countryCode: undefined };
}

export const SmartCampaignSetting_PhoneNumber: MessageFns<SmartCampaignSetting_PhoneNumber> = {
  encode(message: SmartCampaignSetting_PhoneNumber, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.phoneNumber !== undefined) {
      writer.uint32(10).string(message.phoneNumber);
    }
    if (message.countryCode !== undefined) {
      writer.uint32(18).string(message.countryCode);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SmartCampaignSetting_PhoneNumber {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSmartCampaignSetting_PhoneNumber();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.phoneNumber = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.countryCode = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SmartCampaignSetting_PhoneNumber {
    return {
      phoneNumber: isSet(object.phoneNumber) ? globalThis.String(object.phoneNumber) : undefined,
      countryCode: isSet(object.countryCode) ? globalThis.String(object.countryCode) : undefined,
    };
  },

  toJSON(message: SmartCampaignSetting_PhoneNumber): unknown {
    const obj: any = {};
    if (message.phoneNumber !== undefined) {
      obj.phoneNumber = message.phoneNumber;
    }
    if (message.countryCode !== undefined) {
      obj.countryCode = message.countryCode;
    }
    return obj;
  },

  create(base?: DeepPartial<SmartCampaignSetting_PhoneNumber>): SmartCampaignSetting_PhoneNumber {
    return SmartCampaignSetting_PhoneNumber.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SmartCampaignSetting_PhoneNumber>): SmartCampaignSetting_PhoneNumber {
    const message = createBaseSmartCampaignSetting_PhoneNumber();
    message.phoneNumber = object.phoneNumber ?? undefined;
    message.countryCode = object.countryCode ?? undefined;
    return message;
  },
};

function createBaseSmartCampaignSetting_AdOptimizedBusinessProfileSetting(): SmartCampaignSetting_AdOptimizedBusinessProfileSetting {
  return { includeLeadForm: undefined };
}

export const SmartCampaignSetting_AdOptimizedBusinessProfileSetting: MessageFns<
  SmartCampaignSetting_AdOptimizedBusinessProfileSetting
> = {
  encode(
    message: SmartCampaignSetting_AdOptimizedBusinessProfileSetting,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.includeLeadForm !== undefined) {
      writer.uint32(8).bool(message.includeLeadForm);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SmartCampaignSetting_AdOptimizedBusinessProfileSetting {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSmartCampaignSetting_AdOptimizedBusinessProfileSetting();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.includeLeadForm = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SmartCampaignSetting_AdOptimizedBusinessProfileSetting {
    return { includeLeadForm: isSet(object.includeLeadForm) ? globalThis.Boolean(object.includeLeadForm) : undefined };
  },

  toJSON(message: SmartCampaignSetting_AdOptimizedBusinessProfileSetting): unknown {
    const obj: any = {};
    if (message.includeLeadForm !== undefined) {
      obj.includeLeadForm = message.includeLeadForm;
    }
    return obj;
  },

  create(
    base?: DeepPartial<SmartCampaignSetting_AdOptimizedBusinessProfileSetting>,
  ): SmartCampaignSetting_AdOptimizedBusinessProfileSetting {
    return SmartCampaignSetting_AdOptimizedBusinessProfileSetting.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<SmartCampaignSetting_AdOptimizedBusinessProfileSetting>,
  ): SmartCampaignSetting_AdOptimizedBusinessProfileSetting {
    const message = createBaseSmartCampaignSetting_AdOptimizedBusinessProfileSetting();
    message.includeLeadForm = object.includeLeadForm ?? undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
