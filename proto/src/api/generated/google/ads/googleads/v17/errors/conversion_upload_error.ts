// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/errors/conversion_upload_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.errors";

/** Container for enum describing possible conversion upload errors. */
export interface ConversionUploadErrorEnum {
}

/** Enum describing possible conversion upload errors. */
export enum ConversionUploadErrorEnum_ConversionUploadError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** TOO_MANY_CONVERSIONS_IN_REQUEST - Upload fewer than 2001 events in a single request. */
  TOO_MANY_CONVERSIONS_IN_REQUEST = 2,
  /**
   * UNPARSEABLE_GCLID - The imported gclid could not be decoded. Make sure you have not modified
   * the click IDs.
   */
  UNPARSEABLE_GCLID = 3,
  /**
   * CONVERSION_PRECEDES_EVENT - The imported event has a `conversion_date_time` that precedes the click.
   * Make sure your `conversion_date_time` is correct and try again.
   */
  CONVERSION_PRECEDES_EVENT = 42,
  /**
   * EXPIRED_EVENT - The imported event can't be recorded because its click occurred before
   * this conversion's click-through window. Make sure you import the most
   * recent data.
   */
  EXPIRED_EVENT = 43,
  /**
   * TOO_RECENT_EVENT - The click associated with the given identifier or iOS URL parameter
   * occurred less than 6 hours ago. Retry after 6 hours have passed.
   */
  TOO_RECENT_EVENT = 44,
  /**
   * EVENT_NOT_FOUND - The imported event could not be attributed to a click. This may be
   * because the event did not come from a Google Ads campaign.
   */
  EVENT_NOT_FOUND = 45,
  /**
   * UNAUTHORIZED_CUSTOMER - The click ID or call is associated with an Ads account you don't have
   * access to. Make sure you import conversions for accounts managed by your
   * manager account.
   */
  UNAUTHORIZED_CUSTOMER = 8,
  /**
   * TOO_RECENT_CONVERSION_ACTION - Can't import events to a conversion action that was just created. Try
   * importing again in 6 hours.
   */
  TOO_RECENT_CONVERSION_ACTION = 10,
  /**
   * CONVERSION_TRACKING_NOT_ENABLED_AT_IMPRESSION_TIME - At the time of the click, conversion tracking was not enabled in the
   * effective conversion account of the click's Google Ads account.
   */
  CONVERSION_TRACKING_NOT_ENABLED_AT_IMPRESSION_TIME = 11,
  /**
   * EXTERNAL_ATTRIBUTION_DATA_SET_FOR_NON_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION - The imported event includes external attribution data, but the conversion
   * action isn't set up to use an external attribution model. Make sure the
   * conversion action is correctly configured and try again.
   */
  EXTERNAL_ATTRIBUTION_DATA_SET_FOR_NON_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION = 12,
  /**
   * EXTERNAL_ATTRIBUTION_DATA_NOT_SET_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION - The conversion action is set up to use an external attribution model, but
   * the imported event is missing data. Make sure imported events include the
   * external attribution credit and all necessary fields.
   */
  EXTERNAL_ATTRIBUTION_DATA_NOT_SET_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION = 13,
  /**
   * ORDER_ID_NOT_PERMITTED_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION - Order IDs can't be used for a conversion measured with an external
   * attribution model. Make sure the conversion is correctly configured and
   * imported events include only necessary data and try again.
   */
  ORDER_ID_NOT_PERMITTED_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION = 14,
  /**
   * ORDER_ID_ALREADY_IN_USE - The imported event includes an order ID that was previously recorded, so
   * the event was not processed.
   */
  ORDER_ID_ALREADY_IN_USE = 15,
  /**
   * DUPLICATE_ORDER_ID - Imported events include multiple conversions with the same order ID and
   * were not processed.  Make sure order IDs are unique and try again.
   */
  DUPLICATE_ORDER_ID = 16,
  /**
   * TOO_RECENT_CALL - Can't import calls that occurred less than 6 hours ago. Try uploading
   * again in 6 hours.
   */
  TOO_RECENT_CALL = 17,
  /**
   * EXPIRED_CALL - The call can't be recorded because it occurred before this conversion
   * action's lookback window. Make sure your import is configured to get the
   * most recent data.
   */
  EXPIRED_CALL = 18,
  /**
   * CALL_NOT_FOUND - The call or click leading to the imported event can't be found. Make sure
   * your data source is set up to include correct identifiers.
   */
  CALL_NOT_FOUND = 19,
  /**
   * CONVERSION_PRECEDES_CALL - The call has a `conversion_date_time` that precedes the associated click.
   * Make sure your `conversion_date_time` is correct.
   */
  CONVERSION_PRECEDES_CALL = 20,
  /**
   * CONVERSION_TRACKING_NOT_ENABLED_AT_CALL_TIME - At the time of the imported call, conversion tracking was not enabled in
   * the effective conversion account of the click's Google Ads account.
   */
  CONVERSION_TRACKING_NOT_ENABLED_AT_CALL_TIME = 21,
  /**
   * UNPARSEABLE_CALLERS_PHONE_NUMBER - Make sure phone numbers are formatted as E.164 (+16502531234),
   * International (+64 3-331 6005), or US national number (6502531234).
   */
  UNPARSEABLE_CALLERS_PHONE_NUMBER = 22,
  /**
   * CLICK_CONVERSION_ALREADY_EXISTS - The imported event has the same click and `conversion_date_time` as an
   * existing conversion. Use a unique `conversion_date_time` or order ID for
   * each unique event and try again.
   */
  CLICK_CONVERSION_ALREADY_EXISTS = 23,
  /**
   * CALL_CONVERSION_ALREADY_EXISTS - The imported call has the same `conversion_date_time` as an existing
   * conversion. Make sure your `conversion_date_time` correctly configured
   * and try again.
   */
  CALL_CONVERSION_ALREADY_EXISTS = 24,
  /**
   * DUPLICATE_CLICK_CONVERSION_IN_REQUEST - Multiple events have the same click and `conversion_date_time`. Make sure
   * your `conversion_date_time` is correctly configured and try again.
   */
  DUPLICATE_CLICK_CONVERSION_IN_REQUEST = 25,
  /**
   * DUPLICATE_CALL_CONVERSION_IN_REQUEST - Multiple events have the same call and `conversion_date_time`. Make sure
   * your `conversion_date_time` is correctly configured and try again.
   */
  DUPLICATE_CALL_CONVERSION_IN_REQUEST = 26,
  /** CUSTOM_VARIABLE_NOT_ENABLED - Enable the custom variable in your conversion settings and try again. */
  CUSTOM_VARIABLE_NOT_ENABLED = 28,
  /**
   * CUSTOM_VARIABLE_VALUE_CONTAINS_PII - Can't import events with custom variables containing
   * personally-identifiable information (PII). Remove these variables and try
   * again.
   */
  CUSTOM_VARIABLE_VALUE_CONTAINS_PII = 29,
  /**
   * INVALID_CUSTOMER_FOR_CLICK - The click from the imported event is associated with a different Google
   * Ads account. Make sure you're importing to the correct account.
   */
  INVALID_CUSTOMER_FOR_CLICK = 30,
  /**
   * INVALID_CUSTOMER_FOR_CALL - The click from the call is associated with a different Google Ads
   * account. Make sure you're importing to the correct account. Query
   * conversion_tracking_setting.google_ads_conversion_customer on Customer to
   * identify the correct account.
   */
  INVALID_CUSTOMER_FOR_CALL = 31,
  /**
   * CONVERSION_NOT_COMPLIANT_WITH_ATT_POLICY - The connversion can't be imported because the conversion source didn't
   * comply with Apple App Transparency Tracking (ATT) policies or because the
   * customer didn't consent to tracking.
   */
  CONVERSION_NOT_COMPLIANT_WITH_ATT_POLICY = 32,
  /**
   * CLICK_NOT_FOUND - The email address or phone number for this event can't be matched to a
   * click. This may be because it didn't come from a Google Ads campaign, and
   * you can safely ignore this warning. If this includes more imported events
   * than is expected, you may need to check your setup.
   */
  CLICK_NOT_FOUND = 33,
  /**
   * INVALID_USER_IDENTIFIER - Make sure you hash user provided data using SHA-256 and ensure you are
   * normalizing according to the guidelines.
   */
  INVALID_USER_IDENTIFIER = 34,
  /**
   * EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION_NOT_PERMITTED_WITH_USER_IDENTIFIER - User provided data can't be used with external attribution models. Use a
   * different attribution model or omit user identifiers and try again.
   */
  EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION_NOT_PERMITTED_WITH_USER_IDENTIFIER = 35,
  /**
   * UNSUPPORTED_USER_IDENTIFIER - The provided user identifiers are not supported. Use only hashed email
   * or phone number and try again.
   */
  UNSUPPORTED_USER_IDENTIFIER = 36,
  /** GBRAID_WBRAID_BOTH_SET - Can't use both gbraid and wbraid parameters. Use only 1 and try again. */
  GBRAID_WBRAID_BOTH_SET = 38,
  /**
   * UNPARSEABLE_WBRAID - Can't parse event import data. Check if your wbraid parameter was
   * not modified and try again.
   */
  UNPARSEABLE_WBRAID = 39,
  /**
   * UNPARSEABLE_GBRAID - Can't parse event import data. Check if your gbraid parameter was
   * not modified and try again.
   */
  UNPARSEABLE_GBRAID = 40,
  /**
   * ONE_PER_CLICK_CONVERSION_ACTION_NOT_PERMITTED_WITH_BRAID - Conversion actions that use one-per-click counting can't be used with
   * gbraid or wbraid parameters.
   */
  ONE_PER_CLICK_CONVERSION_ACTION_NOT_PERMITTED_WITH_BRAID = 46,
  /**
   * CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCED_CONVERSIONS - Enhanced conversions can't be used for this account because of Google
   * customer data policies. Contact your Google representative.
   */
  CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCED_CONVERSIONS = 47,
  /**
   * CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS - Make sure you agree to the customer data processing terms in conversion
   * settings and try again. You can check your setting by querying
   * conversion_tracking_setting.accepted_customer_data_terms on Customer.
   */
  CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS = 48,
  /**
   * ORDER_ID_CONTAINS_PII - Can't import events with order IDs containing personally-identifiable
   * information (PII).
   */
  ORDER_ID_CONTAINS_PII = 49,
  /**
   * CUSTOMER_NOT_ENABLED_ENHANCED_CONVERSIONS_FOR_LEADS - Make sure you've turned on enhanced conversions for leads in conversion
   * settings and try again. You can check your setting by querying
   * conversion_tracking_setting.enhanced_conversions_for_leads_enabled on
   * Customer.
   */
  CUSTOMER_NOT_ENABLED_ENHANCED_CONVERSIONS_FOR_LEADS = 50,
  /**
   * INVALID_JOB_ID - The provided job id in the request is not within the allowed range. A job
   * ID must be a positive integer in the range [1, 2^31).
   */
  INVALID_JOB_ID = 52,
  /**
   * NO_CONVERSION_ACTION_FOUND - The conversion action specified in the upload request cannot be found.
   * Make sure it's available in this account.
   */
  NO_CONVERSION_ACTION_FOUND = 53,
  /**
   * INVALID_CONVERSION_ACTION_TYPE - The conversion action specified in the upload request isn't set up for
   * uploading conversions.
   */
  INVALID_CONVERSION_ACTION_TYPE = 54,
  UNRECOGNIZED = -1,
}

export function conversionUploadErrorEnum_ConversionUploadErrorFromJSON(
  object: any,
): ConversionUploadErrorEnum_ConversionUploadError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return ConversionUploadErrorEnum_ConversionUploadError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return ConversionUploadErrorEnum_ConversionUploadError.UNKNOWN;
    case 2:
    case "TOO_MANY_CONVERSIONS_IN_REQUEST":
      return ConversionUploadErrorEnum_ConversionUploadError.TOO_MANY_CONVERSIONS_IN_REQUEST;
    case 3:
    case "UNPARSEABLE_GCLID":
      return ConversionUploadErrorEnum_ConversionUploadError.UNPARSEABLE_GCLID;
    case 42:
    case "CONVERSION_PRECEDES_EVENT":
      return ConversionUploadErrorEnum_ConversionUploadError.CONVERSION_PRECEDES_EVENT;
    case 43:
    case "EXPIRED_EVENT":
      return ConversionUploadErrorEnum_ConversionUploadError.EXPIRED_EVENT;
    case 44:
    case "TOO_RECENT_EVENT":
      return ConversionUploadErrorEnum_ConversionUploadError.TOO_RECENT_EVENT;
    case 45:
    case "EVENT_NOT_FOUND":
      return ConversionUploadErrorEnum_ConversionUploadError.EVENT_NOT_FOUND;
    case 8:
    case "UNAUTHORIZED_CUSTOMER":
      return ConversionUploadErrorEnum_ConversionUploadError.UNAUTHORIZED_CUSTOMER;
    case 10:
    case "TOO_RECENT_CONVERSION_ACTION":
      return ConversionUploadErrorEnum_ConversionUploadError.TOO_RECENT_CONVERSION_ACTION;
    case 11:
    case "CONVERSION_TRACKING_NOT_ENABLED_AT_IMPRESSION_TIME":
      return ConversionUploadErrorEnum_ConversionUploadError.CONVERSION_TRACKING_NOT_ENABLED_AT_IMPRESSION_TIME;
    case 12:
    case "EXTERNAL_ATTRIBUTION_DATA_SET_FOR_NON_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION":
      return ConversionUploadErrorEnum_ConversionUploadError
        .EXTERNAL_ATTRIBUTION_DATA_SET_FOR_NON_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION;
    case 13:
    case "EXTERNAL_ATTRIBUTION_DATA_NOT_SET_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION":
      return ConversionUploadErrorEnum_ConversionUploadError
        .EXTERNAL_ATTRIBUTION_DATA_NOT_SET_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION;
    case 14:
    case "ORDER_ID_NOT_PERMITTED_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION":
      return ConversionUploadErrorEnum_ConversionUploadError
        .ORDER_ID_NOT_PERMITTED_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION;
    case 15:
    case "ORDER_ID_ALREADY_IN_USE":
      return ConversionUploadErrorEnum_ConversionUploadError.ORDER_ID_ALREADY_IN_USE;
    case 16:
    case "DUPLICATE_ORDER_ID":
      return ConversionUploadErrorEnum_ConversionUploadError.DUPLICATE_ORDER_ID;
    case 17:
    case "TOO_RECENT_CALL":
      return ConversionUploadErrorEnum_ConversionUploadError.TOO_RECENT_CALL;
    case 18:
    case "EXPIRED_CALL":
      return ConversionUploadErrorEnum_ConversionUploadError.EXPIRED_CALL;
    case 19:
    case "CALL_NOT_FOUND":
      return ConversionUploadErrorEnum_ConversionUploadError.CALL_NOT_FOUND;
    case 20:
    case "CONVERSION_PRECEDES_CALL":
      return ConversionUploadErrorEnum_ConversionUploadError.CONVERSION_PRECEDES_CALL;
    case 21:
    case "CONVERSION_TRACKING_NOT_ENABLED_AT_CALL_TIME":
      return ConversionUploadErrorEnum_ConversionUploadError.CONVERSION_TRACKING_NOT_ENABLED_AT_CALL_TIME;
    case 22:
    case "UNPARSEABLE_CALLERS_PHONE_NUMBER":
      return ConversionUploadErrorEnum_ConversionUploadError.UNPARSEABLE_CALLERS_PHONE_NUMBER;
    case 23:
    case "CLICK_CONVERSION_ALREADY_EXISTS":
      return ConversionUploadErrorEnum_ConversionUploadError.CLICK_CONVERSION_ALREADY_EXISTS;
    case 24:
    case "CALL_CONVERSION_ALREADY_EXISTS":
      return ConversionUploadErrorEnum_ConversionUploadError.CALL_CONVERSION_ALREADY_EXISTS;
    case 25:
    case "DUPLICATE_CLICK_CONVERSION_IN_REQUEST":
      return ConversionUploadErrorEnum_ConversionUploadError.DUPLICATE_CLICK_CONVERSION_IN_REQUEST;
    case 26:
    case "DUPLICATE_CALL_CONVERSION_IN_REQUEST":
      return ConversionUploadErrorEnum_ConversionUploadError.DUPLICATE_CALL_CONVERSION_IN_REQUEST;
    case 28:
    case "CUSTOM_VARIABLE_NOT_ENABLED":
      return ConversionUploadErrorEnum_ConversionUploadError.CUSTOM_VARIABLE_NOT_ENABLED;
    case 29:
    case "CUSTOM_VARIABLE_VALUE_CONTAINS_PII":
      return ConversionUploadErrorEnum_ConversionUploadError.CUSTOM_VARIABLE_VALUE_CONTAINS_PII;
    case 30:
    case "INVALID_CUSTOMER_FOR_CLICK":
      return ConversionUploadErrorEnum_ConversionUploadError.INVALID_CUSTOMER_FOR_CLICK;
    case 31:
    case "INVALID_CUSTOMER_FOR_CALL":
      return ConversionUploadErrorEnum_ConversionUploadError.INVALID_CUSTOMER_FOR_CALL;
    case 32:
    case "CONVERSION_NOT_COMPLIANT_WITH_ATT_POLICY":
      return ConversionUploadErrorEnum_ConversionUploadError.CONVERSION_NOT_COMPLIANT_WITH_ATT_POLICY;
    case 33:
    case "CLICK_NOT_FOUND":
      return ConversionUploadErrorEnum_ConversionUploadError.CLICK_NOT_FOUND;
    case 34:
    case "INVALID_USER_IDENTIFIER":
      return ConversionUploadErrorEnum_ConversionUploadError.INVALID_USER_IDENTIFIER;
    case 35:
    case "EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION_NOT_PERMITTED_WITH_USER_IDENTIFIER":
      return ConversionUploadErrorEnum_ConversionUploadError
        .EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION_NOT_PERMITTED_WITH_USER_IDENTIFIER;
    case 36:
    case "UNSUPPORTED_USER_IDENTIFIER":
      return ConversionUploadErrorEnum_ConversionUploadError.UNSUPPORTED_USER_IDENTIFIER;
    case 38:
    case "GBRAID_WBRAID_BOTH_SET":
      return ConversionUploadErrorEnum_ConversionUploadError.GBRAID_WBRAID_BOTH_SET;
    case 39:
    case "UNPARSEABLE_WBRAID":
      return ConversionUploadErrorEnum_ConversionUploadError.UNPARSEABLE_WBRAID;
    case 40:
    case "UNPARSEABLE_GBRAID":
      return ConversionUploadErrorEnum_ConversionUploadError.UNPARSEABLE_GBRAID;
    case 46:
    case "ONE_PER_CLICK_CONVERSION_ACTION_NOT_PERMITTED_WITH_BRAID":
      return ConversionUploadErrorEnum_ConversionUploadError.ONE_PER_CLICK_CONVERSION_ACTION_NOT_PERMITTED_WITH_BRAID;
    case 47:
    case "CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCED_CONVERSIONS":
      return ConversionUploadErrorEnum_ConversionUploadError.CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCED_CONVERSIONS;
    case 48:
    case "CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS":
      return ConversionUploadErrorEnum_ConversionUploadError.CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS;
    case 49:
    case "ORDER_ID_CONTAINS_PII":
      return ConversionUploadErrorEnum_ConversionUploadError.ORDER_ID_CONTAINS_PII;
    case 50:
    case "CUSTOMER_NOT_ENABLED_ENHANCED_CONVERSIONS_FOR_LEADS":
      return ConversionUploadErrorEnum_ConversionUploadError.CUSTOMER_NOT_ENABLED_ENHANCED_CONVERSIONS_FOR_LEADS;
    case 52:
    case "INVALID_JOB_ID":
      return ConversionUploadErrorEnum_ConversionUploadError.INVALID_JOB_ID;
    case 53:
    case "NO_CONVERSION_ACTION_FOUND":
      return ConversionUploadErrorEnum_ConversionUploadError.NO_CONVERSION_ACTION_FOUND;
    case 54:
    case "INVALID_CONVERSION_ACTION_TYPE":
      return ConversionUploadErrorEnum_ConversionUploadError.INVALID_CONVERSION_ACTION_TYPE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ConversionUploadErrorEnum_ConversionUploadError.UNRECOGNIZED;
  }
}

export function conversionUploadErrorEnum_ConversionUploadErrorToJSON(
  object: ConversionUploadErrorEnum_ConversionUploadError,
): string {
  switch (object) {
    case ConversionUploadErrorEnum_ConversionUploadError.UNSPECIFIED:
      return "UNSPECIFIED";
    case ConversionUploadErrorEnum_ConversionUploadError.UNKNOWN:
      return "UNKNOWN";
    case ConversionUploadErrorEnum_ConversionUploadError.TOO_MANY_CONVERSIONS_IN_REQUEST:
      return "TOO_MANY_CONVERSIONS_IN_REQUEST";
    case ConversionUploadErrorEnum_ConversionUploadError.UNPARSEABLE_GCLID:
      return "UNPARSEABLE_GCLID";
    case ConversionUploadErrorEnum_ConversionUploadError.CONVERSION_PRECEDES_EVENT:
      return "CONVERSION_PRECEDES_EVENT";
    case ConversionUploadErrorEnum_ConversionUploadError.EXPIRED_EVENT:
      return "EXPIRED_EVENT";
    case ConversionUploadErrorEnum_ConversionUploadError.TOO_RECENT_EVENT:
      return "TOO_RECENT_EVENT";
    case ConversionUploadErrorEnum_ConversionUploadError.EVENT_NOT_FOUND:
      return "EVENT_NOT_FOUND";
    case ConversionUploadErrorEnum_ConversionUploadError.UNAUTHORIZED_CUSTOMER:
      return "UNAUTHORIZED_CUSTOMER";
    case ConversionUploadErrorEnum_ConversionUploadError.TOO_RECENT_CONVERSION_ACTION:
      return "TOO_RECENT_CONVERSION_ACTION";
    case ConversionUploadErrorEnum_ConversionUploadError.CONVERSION_TRACKING_NOT_ENABLED_AT_IMPRESSION_TIME:
      return "CONVERSION_TRACKING_NOT_ENABLED_AT_IMPRESSION_TIME";
    case ConversionUploadErrorEnum_ConversionUploadError
      .EXTERNAL_ATTRIBUTION_DATA_SET_FOR_NON_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION:
      return "EXTERNAL_ATTRIBUTION_DATA_SET_FOR_NON_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION";
    case ConversionUploadErrorEnum_ConversionUploadError
      .EXTERNAL_ATTRIBUTION_DATA_NOT_SET_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION:
      return "EXTERNAL_ATTRIBUTION_DATA_NOT_SET_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION";
    case ConversionUploadErrorEnum_ConversionUploadError
      .ORDER_ID_NOT_PERMITTED_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION:
      return "ORDER_ID_NOT_PERMITTED_FOR_EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION";
    case ConversionUploadErrorEnum_ConversionUploadError.ORDER_ID_ALREADY_IN_USE:
      return "ORDER_ID_ALREADY_IN_USE";
    case ConversionUploadErrorEnum_ConversionUploadError.DUPLICATE_ORDER_ID:
      return "DUPLICATE_ORDER_ID";
    case ConversionUploadErrorEnum_ConversionUploadError.TOO_RECENT_CALL:
      return "TOO_RECENT_CALL";
    case ConversionUploadErrorEnum_ConversionUploadError.EXPIRED_CALL:
      return "EXPIRED_CALL";
    case ConversionUploadErrorEnum_ConversionUploadError.CALL_NOT_FOUND:
      return "CALL_NOT_FOUND";
    case ConversionUploadErrorEnum_ConversionUploadError.CONVERSION_PRECEDES_CALL:
      return "CONVERSION_PRECEDES_CALL";
    case ConversionUploadErrorEnum_ConversionUploadError.CONVERSION_TRACKING_NOT_ENABLED_AT_CALL_TIME:
      return "CONVERSION_TRACKING_NOT_ENABLED_AT_CALL_TIME";
    case ConversionUploadErrorEnum_ConversionUploadError.UNPARSEABLE_CALLERS_PHONE_NUMBER:
      return "UNPARSEABLE_CALLERS_PHONE_NUMBER";
    case ConversionUploadErrorEnum_ConversionUploadError.CLICK_CONVERSION_ALREADY_EXISTS:
      return "CLICK_CONVERSION_ALREADY_EXISTS";
    case ConversionUploadErrorEnum_ConversionUploadError.CALL_CONVERSION_ALREADY_EXISTS:
      return "CALL_CONVERSION_ALREADY_EXISTS";
    case ConversionUploadErrorEnum_ConversionUploadError.DUPLICATE_CLICK_CONVERSION_IN_REQUEST:
      return "DUPLICATE_CLICK_CONVERSION_IN_REQUEST";
    case ConversionUploadErrorEnum_ConversionUploadError.DUPLICATE_CALL_CONVERSION_IN_REQUEST:
      return "DUPLICATE_CALL_CONVERSION_IN_REQUEST";
    case ConversionUploadErrorEnum_ConversionUploadError.CUSTOM_VARIABLE_NOT_ENABLED:
      return "CUSTOM_VARIABLE_NOT_ENABLED";
    case ConversionUploadErrorEnum_ConversionUploadError.CUSTOM_VARIABLE_VALUE_CONTAINS_PII:
      return "CUSTOM_VARIABLE_VALUE_CONTAINS_PII";
    case ConversionUploadErrorEnum_ConversionUploadError.INVALID_CUSTOMER_FOR_CLICK:
      return "INVALID_CUSTOMER_FOR_CLICK";
    case ConversionUploadErrorEnum_ConversionUploadError.INVALID_CUSTOMER_FOR_CALL:
      return "INVALID_CUSTOMER_FOR_CALL";
    case ConversionUploadErrorEnum_ConversionUploadError.CONVERSION_NOT_COMPLIANT_WITH_ATT_POLICY:
      return "CONVERSION_NOT_COMPLIANT_WITH_ATT_POLICY";
    case ConversionUploadErrorEnum_ConversionUploadError.CLICK_NOT_FOUND:
      return "CLICK_NOT_FOUND";
    case ConversionUploadErrorEnum_ConversionUploadError.INVALID_USER_IDENTIFIER:
      return "INVALID_USER_IDENTIFIER";
    case ConversionUploadErrorEnum_ConversionUploadError
      .EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION_NOT_PERMITTED_WITH_USER_IDENTIFIER:
      return "EXTERNALLY_ATTRIBUTED_CONVERSION_ACTION_NOT_PERMITTED_WITH_USER_IDENTIFIER";
    case ConversionUploadErrorEnum_ConversionUploadError.UNSUPPORTED_USER_IDENTIFIER:
      return "UNSUPPORTED_USER_IDENTIFIER";
    case ConversionUploadErrorEnum_ConversionUploadError.GBRAID_WBRAID_BOTH_SET:
      return "GBRAID_WBRAID_BOTH_SET";
    case ConversionUploadErrorEnum_ConversionUploadError.UNPARSEABLE_WBRAID:
      return "UNPARSEABLE_WBRAID";
    case ConversionUploadErrorEnum_ConversionUploadError.UNPARSEABLE_GBRAID:
      return "UNPARSEABLE_GBRAID";
    case ConversionUploadErrorEnum_ConversionUploadError.ONE_PER_CLICK_CONVERSION_ACTION_NOT_PERMITTED_WITH_BRAID:
      return "ONE_PER_CLICK_CONVERSION_ACTION_NOT_PERMITTED_WITH_BRAID";
    case ConversionUploadErrorEnum_ConversionUploadError.CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCED_CONVERSIONS:
      return "CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCED_CONVERSIONS";
    case ConversionUploadErrorEnum_ConversionUploadError.CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS:
      return "CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS";
    case ConversionUploadErrorEnum_ConversionUploadError.ORDER_ID_CONTAINS_PII:
      return "ORDER_ID_CONTAINS_PII";
    case ConversionUploadErrorEnum_ConversionUploadError.CUSTOMER_NOT_ENABLED_ENHANCED_CONVERSIONS_FOR_LEADS:
      return "CUSTOMER_NOT_ENABLED_ENHANCED_CONVERSIONS_FOR_LEADS";
    case ConversionUploadErrorEnum_ConversionUploadError.INVALID_JOB_ID:
      return "INVALID_JOB_ID";
    case ConversionUploadErrorEnum_ConversionUploadError.NO_CONVERSION_ACTION_FOUND:
      return "NO_CONVERSION_ACTION_FOUND";
    case ConversionUploadErrorEnum_ConversionUploadError.INVALID_CONVERSION_ACTION_TYPE:
      return "INVALID_CONVERSION_ACTION_TYPE";
    case ConversionUploadErrorEnum_ConversionUploadError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseConversionUploadErrorEnum(): ConversionUploadErrorEnum {
  return {};
}

export const ConversionUploadErrorEnum: MessageFns<ConversionUploadErrorEnum> = {
  encode(_: ConversionUploadErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ConversionUploadErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseConversionUploadErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ConversionUploadErrorEnum {
    return {};
  },

  toJSON(_: ConversionUploadErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ConversionUploadErrorEnum>): ConversionUploadErrorEnum {
    return ConversionUploadErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ConversionUploadErrorEnum>): ConversionUploadErrorEnum {
    const message = createBaseConversionUploadErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
