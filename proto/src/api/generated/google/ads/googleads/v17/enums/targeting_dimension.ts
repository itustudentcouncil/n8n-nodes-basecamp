// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/targeting_dimension.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/** The dimensions that can be targeted. */
export interface TargetingDimensionEnum {
}

/** Enum describing possible targeting dimensions. */
export enum TargetingDimensionEnum_TargetingDimension {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /**
   * KEYWORD - Keyword criteria, for example, 'mars cruise'. KEYWORD may be used as a
   * custom bid dimension. Keywords are always a targeting dimension, so may
   * not be set as a target "ALL" dimension with TargetRestriction.
   */
  KEYWORD = 2,
  /**
   * AUDIENCE - Audience criteria, which include user list, user interest, custom
   * affinity,  and custom in market.
   */
  AUDIENCE = 3,
  /**
   * TOPIC - Topic criteria for targeting categories of content, for example,
   * 'category::Animals>Pets' Used for Display and Video targeting.
   */
  TOPIC = 4,
  /** GENDER - Criteria for targeting gender. */
  GENDER = 5,
  /** AGE_RANGE - Criteria for targeting age ranges. */
  AGE_RANGE = 6,
  /**
   * PLACEMENT - Placement criteria, which include websites like 'www.flowers4sale.com',
   * as well as mobile applications, mobile app categories, YouTube videos,
   * and YouTube channels.
   */
  PLACEMENT = 7,
  /** PARENTAL_STATUS - Criteria for parental status targeting. */
  PARENTAL_STATUS = 8,
  /** INCOME_RANGE - Criteria for income range targeting. */
  INCOME_RANGE = 9,
  UNRECOGNIZED = -1,
}

export function targetingDimensionEnum_TargetingDimensionFromJSON(
  object: any,
): TargetingDimensionEnum_TargetingDimension {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return TargetingDimensionEnum_TargetingDimension.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return TargetingDimensionEnum_TargetingDimension.UNKNOWN;
    case 2:
    case "KEYWORD":
      return TargetingDimensionEnum_TargetingDimension.KEYWORD;
    case 3:
    case "AUDIENCE":
      return TargetingDimensionEnum_TargetingDimension.AUDIENCE;
    case 4:
    case "TOPIC":
      return TargetingDimensionEnum_TargetingDimension.TOPIC;
    case 5:
    case "GENDER":
      return TargetingDimensionEnum_TargetingDimension.GENDER;
    case 6:
    case "AGE_RANGE":
      return TargetingDimensionEnum_TargetingDimension.AGE_RANGE;
    case 7:
    case "PLACEMENT":
      return TargetingDimensionEnum_TargetingDimension.PLACEMENT;
    case 8:
    case "PARENTAL_STATUS":
      return TargetingDimensionEnum_TargetingDimension.PARENTAL_STATUS;
    case 9:
    case "INCOME_RANGE":
      return TargetingDimensionEnum_TargetingDimension.INCOME_RANGE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return TargetingDimensionEnum_TargetingDimension.UNRECOGNIZED;
  }
}

export function targetingDimensionEnum_TargetingDimensionToJSON(
  object: TargetingDimensionEnum_TargetingDimension,
): string {
  switch (object) {
    case TargetingDimensionEnum_TargetingDimension.UNSPECIFIED:
      return "UNSPECIFIED";
    case TargetingDimensionEnum_TargetingDimension.UNKNOWN:
      return "UNKNOWN";
    case TargetingDimensionEnum_TargetingDimension.KEYWORD:
      return "KEYWORD";
    case TargetingDimensionEnum_TargetingDimension.AUDIENCE:
      return "AUDIENCE";
    case TargetingDimensionEnum_TargetingDimension.TOPIC:
      return "TOPIC";
    case TargetingDimensionEnum_TargetingDimension.GENDER:
      return "GENDER";
    case TargetingDimensionEnum_TargetingDimension.AGE_RANGE:
      return "AGE_RANGE";
    case TargetingDimensionEnum_TargetingDimension.PLACEMENT:
      return "PLACEMENT";
    case TargetingDimensionEnum_TargetingDimension.PARENTAL_STATUS:
      return "PARENTAL_STATUS";
    case TargetingDimensionEnum_TargetingDimension.INCOME_RANGE:
      return "INCOME_RANGE";
    case TargetingDimensionEnum_TargetingDimension.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseTargetingDimensionEnum(): TargetingDimensionEnum {
  return {};
}

export const TargetingDimensionEnum: MessageFns<TargetingDimensionEnum> = {
  encode(_: TargetingDimensionEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): TargetingDimensionEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseTargetingDimensionEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): TargetingDimensionEnum {
    return {};
  },

  toJSON(_: TargetingDimensionEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<TargetingDimensionEnum>): TargetingDimensionEnum {
    return TargetingDimensionEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<TargetingDimensionEnum>): TargetingDimensionEnum {
    const message = createBaseTargetingDimensionEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
