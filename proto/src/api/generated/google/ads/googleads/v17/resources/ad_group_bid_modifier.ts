// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/resources/ad_group_bid_modifier.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  DeviceInfo,
  HotelAdvanceBookingWindowInfo,
  HotelCheckInDateRangeInfo,
  HotelCheckInDayInfo,
  HotelDateSelectionTypeInfo,
  HotelLengthOfStayInfo,
} from "../common/criteria.js";
import {
  BidModifierSourceEnum_BidModifierSource,
  bidModifierSourceEnum_BidModifierSourceFromJSON,
  bidModifierSourceEnum_BidModifierSourceToJSON,
} from "../enums/bid_modifier_source.js";

export const protobufPackage = "google.ads.googleads.v17.resources";

/** Represents an ad group bid modifier. */
export interface AdGroupBidModifier {
  /**
   * Immutable. The resource name of the ad group bid modifier.
   * Ad group bid modifier resource names have the form:
   *
   * `customers/{customer_id}/adGroupBidModifiers/{ad_group_id}~{criterion_id}`
   */
  resourceName: string;
  /** Immutable. The ad group to which this criterion belongs. */
  adGroup?:
    | string
    | undefined;
  /**
   * Output only. The ID of the criterion to bid modify.
   *
   * This field is ignored for mutates.
   */
  criterionId?:
    | Long
    | undefined;
  /**
   * The modifier for the bid when the criterion matches. The modifier must be
   * in the range: 0.1 - 10.0. The range is 1.0 - 6.0 for PreferredContent.
   * Use 0 to opt out of a Device type.
   */
  bidModifier?:
    | number
    | undefined;
  /**
   * Output only. The base ad group from which this draft/trial adgroup bid
   * modifier was created. If ad_group is a base ad group then this field will
   * be equal to ad_group. If the ad group was created in the draft or trial and
   * has no corresponding base ad group, then this field will be null. This
   * field is readonly.
   */
  baseAdGroup?:
    | string
    | undefined;
  /** Output only. Bid modifier source. */
  bidModifierSource: BidModifierSourceEnum_BidModifierSource;
  /**
   * Immutable. Criterion for hotel date selection (default dates versus user
   * selected).
   */
  hotelDateSelectionType?:
    | HotelDateSelectionTypeInfo
    | undefined;
  /**
   * Immutable. Criterion for number of days prior to the stay the booking is
   * being made.
   */
  hotelAdvanceBookingWindow?:
    | HotelAdvanceBookingWindowInfo
    | undefined;
  /** Immutable. Criterion for length of hotel stay in nights. */
  hotelLengthOfStay?:
    | HotelLengthOfStayInfo
    | undefined;
  /** Immutable. Criterion for day of the week the booking is for. */
  hotelCheckInDay?:
    | HotelCheckInDayInfo
    | undefined;
  /** Immutable. A device criterion. */
  device?:
    | DeviceInfo
    | undefined;
  /** Immutable. Criterion for a hotel check-in date range. */
  hotelCheckInDateRange?: HotelCheckInDateRangeInfo | undefined;
}

function createBaseAdGroupBidModifier(): AdGroupBidModifier {
  return {
    resourceName: "",
    adGroup: undefined,
    criterionId: undefined,
    bidModifier: undefined,
    baseAdGroup: undefined,
    bidModifierSource: 0,
    hotelDateSelectionType: undefined,
    hotelAdvanceBookingWindow: undefined,
    hotelLengthOfStay: undefined,
    hotelCheckInDay: undefined,
    device: undefined,
    hotelCheckInDateRange: undefined,
  };
}

export const AdGroupBidModifier: MessageFns<AdGroupBidModifier> = {
  encode(message: AdGroupBidModifier, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.adGroup !== undefined) {
      writer.uint32(106).string(message.adGroup);
    }
    if (message.criterionId !== undefined) {
      writer.uint32(112).int64(message.criterionId.toString());
    }
    if (message.bidModifier !== undefined) {
      writer.uint32(121).double(message.bidModifier);
    }
    if (message.baseAdGroup !== undefined) {
      writer.uint32(130).string(message.baseAdGroup);
    }
    if (message.bidModifierSource !== 0) {
      writer.uint32(80).int32(message.bidModifierSource);
    }
    if (message.hotelDateSelectionType !== undefined) {
      HotelDateSelectionTypeInfo.encode(message.hotelDateSelectionType, writer.uint32(42).fork()).join();
    }
    if (message.hotelAdvanceBookingWindow !== undefined) {
      HotelAdvanceBookingWindowInfo.encode(message.hotelAdvanceBookingWindow, writer.uint32(50).fork()).join();
    }
    if (message.hotelLengthOfStay !== undefined) {
      HotelLengthOfStayInfo.encode(message.hotelLengthOfStay, writer.uint32(58).fork()).join();
    }
    if (message.hotelCheckInDay !== undefined) {
      HotelCheckInDayInfo.encode(message.hotelCheckInDay, writer.uint32(66).fork()).join();
    }
    if (message.device !== undefined) {
      DeviceInfo.encode(message.device, writer.uint32(90).fork()).join();
    }
    if (message.hotelCheckInDateRange !== undefined) {
      HotelCheckInDateRangeInfo.encode(message.hotelCheckInDateRange, writer.uint32(138).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AdGroupBidModifier {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAdGroupBidModifier();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.adGroup = reader.string();
          continue;
        case 14:
          if (tag !== 112) {
            break;
          }

          message.criterionId = Long.fromString(reader.int64().toString());
          continue;
        case 15:
          if (tag !== 121) {
            break;
          }

          message.bidModifier = reader.double();
          continue;
        case 16:
          if (tag !== 130) {
            break;
          }

          message.baseAdGroup = reader.string();
          continue;
        case 10:
          if (tag !== 80) {
            break;
          }

          message.bidModifierSource = reader.int32() as any;
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.hotelDateSelectionType = HotelDateSelectionTypeInfo.decode(reader, reader.uint32());
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.hotelAdvanceBookingWindow = HotelAdvanceBookingWindowInfo.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.hotelLengthOfStay = HotelLengthOfStayInfo.decode(reader, reader.uint32());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.hotelCheckInDay = HotelCheckInDayInfo.decode(reader, reader.uint32());
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.device = DeviceInfo.decode(reader, reader.uint32());
          continue;
        case 17:
          if (tag !== 138) {
            break;
          }

          message.hotelCheckInDateRange = HotelCheckInDateRangeInfo.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): AdGroupBidModifier {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      adGroup: isSet(object.adGroup) ? globalThis.String(object.adGroup) : undefined,
      criterionId: isSet(object.criterionId) ? Long.fromValue(object.criterionId) : undefined,
      bidModifier: isSet(object.bidModifier) ? globalThis.Number(object.bidModifier) : undefined,
      baseAdGroup: isSet(object.baseAdGroup) ? globalThis.String(object.baseAdGroup) : undefined,
      bidModifierSource: isSet(object.bidModifierSource)
        ? bidModifierSourceEnum_BidModifierSourceFromJSON(object.bidModifierSource)
        : 0,
      hotelDateSelectionType: isSet(object.hotelDateSelectionType)
        ? HotelDateSelectionTypeInfo.fromJSON(object.hotelDateSelectionType)
        : undefined,
      hotelAdvanceBookingWindow: isSet(object.hotelAdvanceBookingWindow)
        ? HotelAdvanceBookingWindowInfo.fromJSON(object.hotelAdvanceBookingWindow)
        : undefined,
      hotelLengthOfStay: isSet(object.hotelLengthOfStay)
        ? HotelLengthOfStayInfo.fromJSON(object.hotelLengthOfStay)
        : undefined,
      hotelCheckInDay: isSet(object.hotelCheckInDay) ? HotelCheckInDayInfo.fromJSON(object.hotelCheckInDay) : undefined,
      device: isSet(object.device) ? DeviceInfo.fromJSON(object.device) : undefined,
      hotelCheckInDateRange: isSet(object.hotelCheckInDateRange)
        ? HotelCheckInDateRangeInfo.fromJSON(object.hotelCheckInDateRange)
        : undefined,
    };
  },

  toJSON(message: AdGroupBidModifier): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.adGroup !== undefined) {
      obj.adGroup = message.adGroup;
    }
    if (message.criterionId !== undefined) {
      obj.criterionId = (message.criterionId || Long.ZERO).toString();
    }
    if (message.bidModifier !== undefined) {
      obj.bidModifier = message.bidModifier;
    }
    if (message.baseAdGroup !== undefined) {
      obj.baseAdGroup = message.baseAdGroup;
    }
    if (message.bidModifierSource !== 0) {
      obj.bidModifierSource = bidModifierSourceEnum_BidModifierSourceToJSON(message.bidModifierSource);
    }
    if (message.hotelDateSelectionType !== undefined) {
      obj.hotelDateSelectionType = HotelDateSelectionTypeInfo.toJSON(message.hotelDateSelectionType);
    }
    if (message.hotelAdvanceBookingWindow !== undefined) {
      obj.hotelAdvanceBookingWindow = HotelAdvanceBookingWindowInfo.toJSON(message.hotelAdvanceBookingWindow);
    }
    if (message.hotelLengthOfStay !== undefined) {
      obj.hotelLengthOfStay = HotelLengthOfStayInfo.toJSON(message.hotelLengthOfStay);
    }
    if (message.hotelCheckInDay !== undefined) {
      obj.hotelCheckInDay = HotelCheckInDayInfo.toJSON(message.hotelCheckInDay);
    }
    if (message.device !== undefined) {
      obj.device = DeviceInfo.toJSON(message.device);
    }
    if (message.hotelCheckInDateRange !== undefined) {
      obj.hotelCheckInDateRange = HotelCheckInDateRangeInfo.toJSON(message.hotelCheckInDateRange);
    }
    return obj;
  },

  create(base?: DeepPartial<AdGroupBidModifier>): AdGroupBidModifier {
    return AdGroupBidModifier.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<AdGroupBidModifier>): AdGroupBidModifier {
    const message = createBaseAdGroupBidModifier();
    message.resourceName = object.resourceName ?? "";
    message.adGroup = object.adGroup ?? undefined;
    message.criterionId = (object.criterionId !== undefined && object.criterionId !== null)
      ? Long.fromValue(object.criterionId)
      : undefined;
    message.bidModifier = object.bidModifier ?? undefined;
    message.baseAdGroup = object.baseAdGroup ?? undefined;
    message.bidModifierSource = object.bidModifierSource ?? 0;
    message.hotelDateSelectionType =
      (object.hotelDateSelectionType !== undefined && object.hotelDateSelectionType !== null)
        ? HotelDateSelectionTypeInfo.fromPartial(object.hotelDateSelectionType)
        : undefined;
    message.hotelAdvanceBookingWindow =
      (object.hotelAdvanceBookingWindow !== undefined && object.hotelAdvanceBookingWindow !== null)
        ? HotelAdvanceBookingWindowInfo.fromPartial(object.hotelAdvanceBookingWindow)
        : undefined;
    message.hotelLengthOfStay = (object.hotelLengthOfStay !== undefined && object.hotelLengthOfStay !== null)
      ? HotelLengthOfStayInfo.fromPartial(object.hotelLengthOfStay)
      : undefined;
    message.hotelCheckInDay = (object.hotelCheckInDay !== undefined && object.hotelCheckInDay !== null)
      ? HotelCheckInDayInfo.fromPartial(object.hotelCheckInDay)
      : undefined;
    message.device = (object.device !== undefined && object.device !== null)
      ? DeviceInfo.fromPartial(object.device)
      : undefined;
    message.hotelCheckInDateRange =
      (object.hotelCheckInDateRange !== undefined && object.hotelCheckInDateRange !== null)
        ? HotelCheckInDateRangeInfo.fromPartial(object.hotelCheckInDateRange)
        : undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
