// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/resources/user_list_customer_type.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  UserListCustomerTypeCategoryEnum_UserListCustomerTypeCategory,
  userListCustomerTypeCategoryEnum_UserListCustomerTypeCategoryFromJSON,
  userListCustomerTypeCategoryEnum_UserListCustomerTypeCategoryToJSON,
} from "../enums/user_list_customer_type_category.js";

export const protobufPackage = "google.ads.googleads.v17.resources";

/** A user list customer type */
export interface UserListCustomerType {
  /**
   * Immutable. The resource name of the user list customer type
   * User list customer type resource names have the form:
   * `customers/{customer_id}/userListCustomerTypes/{user_list_id}~{customer_type_category}`
   */
  resourceName: string;
  /**
   * Immutable. The resource name for the user list this user list customer type
   * is associated with
   */
  userList: string;
  /** Immutable. The user list customer type category */
  customerTypeCategory: UserListCustomerTypeCategoryEnum_UserListCustomerTypeCategory;
}

function createBaseUserListCustomerType(): UserListCustomerType {
  return { resourceName: "", userList: "", customerTypeCategory: 0 };
}

export const UserListCustomerType: MessageFns<UserListCustomerType> = {
  encode(message: UserListCustomerType, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.userList !== "") {
      writer.uint32(18).string(message.userList);
    }
    if (message.customerTypeCategory !== 0) {
      writer.uint32(24).int32(message.customerTypeCategory);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): UserListCustomerType {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseUserListCustomerType();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.userList = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.customerTypeCategory = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): UserListCustomerType {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      userList: isSet(object.userList) ? globalThis.String(object.userList) : "",
      customerTypeCategory: isSet(object.customerTypeCategory)
        ? userListCustomerTypeCategoryEnum_UserListCustomerTypeCategoryFromJSON(object.customerTypeCategory)
        : 0,
    };
  },

  toJSON(message: UserListCustomerType): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.userList !== "") {
      obj.userList = message.userList;
    }
    if (message.customerTypeCategory !== 0) {
      obj.customerTypeCategory = userListCustomerTypeCategoryEnum_UserListCustomerTypeCategoryToJSON(
        message.customerTypeCategory,
      );
    }
    return obj;
  },

  create(base?: DeepPartial<UserListCustomerType>): UserListCustomerType {
    return UserListCustomerType.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<UserListCustomerType>): UserListCustomerType {
    const message = createBaseUserListCustomerType();
    message.resourceName = object.resourceName ?? "";
    message.userList = object.userList ?? "";
    message.customerTypeCategory = object.customerTypeCategory ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
