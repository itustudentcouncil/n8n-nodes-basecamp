// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/reach_plan_age_range.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/** Message describing plannable age ranges. */
export interface ReachPlanAgeRangeEnum {
}

/** Possible plannable age range values. */
export enum ReachPlanAgeRangeEnum_ReachPlanAgeRange {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The value is unknown in this version. */
  UNKNOWN = 1,
  /** AGE_RANGE_18_24 - Between 18 and 24 years old. */
  AGE_RANGE_18_24 = 503001,
  /** AGE_RANGE_18_34 - Between 18 and 34 years old. */
  AGE_RANGE_18_34 = 2,
  /** AGE_RANGE_18_44 - Between 18 and 44 years old. */
  AGE_RANGE_18_44 = 3,
  /** AGE_RANGE_18_49 - Between 18 and 49 years old. */
  AGE_RANGE_18_49 = 4,
  /** AGE_RANGE_18_54 - Between 18 and 54 years old. */
  AGE_RANGE_18_54 = 5,
  /** AGE_RANGE_18_64 - Between 18 and 64 years old. */
  AGE_RANGE_18_64 = 6,
  /** AGE_RANGE_18_65_UP - Between 18 and 65+ years old. */
  AGE_RANGE_18_65_UP = 7,
  /** AGE_RANGE_21_34 - Between 21 and 34 years old. */
  AGE_RANGE_21_34 = 8,
  /** AGE_RANGE_25_34 - Between 25 and 34 years old. */
  AGE_RANGE_25_34 = 503002,
  /** AGE_RANGE_25_44 - Between 25 and 44 years old. */
  AGE_RANGE_25_44 = 9,
  /** AGE_RANGE_25_49 - Between 25 and 49 years old. */
  AGE_RANGE_25_49 = 10,
  /** AGE_RANGE_25_54 - Between 25 and 54 years old. */
  AGE_RANGE_25_54 = 11,
  /** AGE_RANGE_25_64 - Between 25 and 64 years old. */
  AGE_RANGE_25_64 = 12,
  /** AGE_RANGE_25_65_UP - Between 25 and 65+ years old. */
  AGE_RANGE_25_65_UP = 13,
  /** AGE_RANGE_35_44 - Between 35 and 44 years old. */
  AGE_RANGE_35_44 = 503003,
  /** AGE_RANGE_35_49 - Between 35 and 49 years old. */
  AGE_RANGE_35_49 = 14,
  /** AGE_RANGE_35_54 - Between 35 and 54 years old. */
  AGE_RANGE_35_54 = 15,
  /** AGE_RANGE_35_64 - Between 35 and 64 years old. */
  AGE_RANGE_35_64 = 16,
  /** AGE_RANGE_35_65_UP - Between 35 and 65+ years old. */
  AGE_RANGE_35_65_UP = 17,
  /** AGE_RANGE_45_54 - Between 45 and 54 years old. */
  AGE_RANGE_45_54 = 503004,
  /** AGE_RANGE_45_64 - Between 45 and 64 years old. */
  AGE_RANGE_45_64 = 18,
  /** AGE_RANGE_45_65_UP - Between 45 and 65+ years old. */
  AGE_RANGE_45_65_UP = 19,
  /** AGE_RANGE_50_65_UP - Between 50 and 65+ years old. */
  AGE_RANGE_50_65_UP = 20,
  /** AGE_RANGE_55_64 - Between 55 and 64 years old. */
  AGE_RANGE_55_64 = 503005,
  /** AGE_RANGE_55_65_UP - Between 55 and 65+ years old. */
  AGE_RANGE_55_65_UP = 21,
  /** AGE_RANGE_65_UP - 65 years old and beyond. */
  AGE_RANGE_65_UP = 503006,
  UNRECOGNIZED = -1,
}

export function reachPlanAgeRangeEnum_ReachPlanAgeRangeFromJSON(object: any): ReachPlanAgeRangeEnum_ReachPlanAgeRange {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.UNKNOWN;
    case 503001:
    case "AGE_RANGE_18_24":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_24;
    case 2:
    case "AGE_RANGE_18_34":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_34;
    case 3:
    case "AGE_RANGE_18_44":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_44;
    case 4:
    case "AGE_RANGE_18_49":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_49;
    case 5:
    case "AGE_RANGE_18_54":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_54;
    case 6:
    case "AGE_RANGE_18_64":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_64;
    case 7:
    case "AGE_RANGE_18_65_UP":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_65_UP;
    case 8:
    case "AGE_RANGE_21_34":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_21_34;
    case 503002:
    case "AGE_RANGE_25_34":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_34;
    case 9:
    case "AGE_RANGE_25_44":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_44;
    case 10:
    case "AGE_RANGE_25_49":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_49;
    case 11:
    case "AGE_RANGE_25_54":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_54;
    case 12:
    case "AGE_RANGE_25_64":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_64;
    case 13:
    case "AGE_RANGE_25_65_UP":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_65_UP;
    case 503003:
    case "AGE_RANGE_35_44":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_35_44;
    case 14:
    case "AGE_RANGE_35_49":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_35_49;
    case 15:
    case "AGE_RANGE_35_54":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_35_54;
    case 16:
    case "AGE_RANGE_35_64":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_35_64;
    case 17:
    case "AGE_RANGE_35_65_UP":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_35_65_UP;
    case 503004:
    case "AGE_RANGE_45_54":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_45_54;
    case 18:
    case "AGE_RANGE_45_64":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_45_64;
    case 19:
    case "AGE_RANGE_45_65_UP":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_45_65_UP;
    case 20:
    case "AGE_RANGE_50_65_UP":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_50_65_UP;
    case 503005:
    case "AGE_RANGE_55_64":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_55_64;
    case 21:
    case "AGE_RANGE_55_65_UP":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_55_65_UP;
    case 503006:
    case "AGE_RANGE_65_UP":
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_65_UP;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ReachPlanAgeRangeEnum_ReachPlanAgeRange.UNRECOGNIZED;
  }
}

export function reachPlanAgeRangeEnum_ReachPlanAgeRangeToJSON(object: ReachPlanAgeRangeEnum_ReachPlanAgeRange): string {
  switch (object) {
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.UNSPECIFIED:
      return "UNSPECIFIED";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.UNKNOWN:
      return "UNKNOWN";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_24:
      return "AGE_RANGE_18_24";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_34:
      return "AGE_RANGE_18_34";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_44:
      return "AGE_RANGE_18_44";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_49:
      return "AGE_RANGE_18_49";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_54:
      return "AGE_RANGE_18_54";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_64:
      return "AGE_RANGE_18_64";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_18_65_UP:
      return "AGE_RANGE_18_65_UP";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_21_34:
      return "AGE_RANGE_21_34";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_34:
      return "AGE_RANGE_25_34";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_44:
      return "AGE_RANGE_25_44";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_49:
      return "AGE_RANGE_25_49";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_54:
      return "AGE_RANGE_25_54";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_64:
      return "AGE_RANGE_25_64";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_25_65_UP:
      return "AGE_RANGE_25_65_UP";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_35_44:
      return "AGE_RANGE_35_44";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_35_49:
      return "AGE_RANGE_35_49";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_35_54:
      return "AGE_RANGE_35_54";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_35_64:
      return "AGE_RANGE_35_64";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_35_65_UP:
      return "AGE_RANGE_35_65_UP";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_45_54:
      return "AGE_RANGE_45_54";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_45_64:
      return "AGE_RANGE_45_64";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_45_65_UP:
      return "AGE_RANGE_45_65_UP";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_50_65_UP:
      return "AGE_RANGE_50_65_UP";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_55_64:
      return "AGE_RANGE_55_64";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_55_65_UP:
      return "AGE_RANGE_55_65_UP";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.AGE_RANGE_65_UP:
      return "AGE_RANGE_65_UP";
    case ReachPlanAgeRangeEnum_ReachPlanAgeRange.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseReachPlanAgeRangeEnum(): ReachPlanAgeRangeEnum {
  return {};
}

export const ReachPlanAgeRangeEnum: MessageFns<ReachPlanAgeRangeEnum> = {
  encode(_: ReachPlanAgeRangeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ReachPlanAgeRangeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseReachPlanAgeRangeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ReachPlanAgeRangeEnum {
    return {};
  },

  toJSON(_: ReachPlanAgeRangeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ReachPlanAgeRangeEnum>): ReachPlanAgeRangeEnum {
    return ReachPlanAgeRangeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ReachPlanAgeRangeEnum>): ReachPlanAgeRangeEnum {
    const message = createBaseReachPlanAgeRangeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
