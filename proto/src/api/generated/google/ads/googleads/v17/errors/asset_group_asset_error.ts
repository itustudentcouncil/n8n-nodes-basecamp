// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/errors/asset_group_asset_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.errors";

/** Container for enum describing possible asset group asset errors. */
export interface AssetGroupAssetErrorEnum {
}

/** Enum describing possible asset group asset errors. */
export enum AssetGroupAssetErrorEnum_AssetGroupAssetError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /** DUPLICATE_RESOURCE - Cannot add duplicated asset group asset. */
  DUPLICATE_RESOURCE = 2,
  /** EXPANDABLE_TAGS_NOT_ALLOWED_IN_DESCRIPTION - Expandable tags are not allowed in description assets. */
  EXPANDABLE_TAGS_NOT_ALLOWED_IN_DESCRIPTION = 3,
  /** AD_CUSTOMIZER_NOT_SUPPORTED - Ad customizers are not supported in assetgroup's text assets. */
  AD_CUSTOMIZER_NOT_SUPPORTED = 4,
  /**
   * HOTEL_PROPERTY_ASSET_NOT_LINKED_TO_CAMPAIGN - Cannot add a HotelPropertyAsset to an AssetGroup that isn't linked
   * to the parent campaign's hotel_property_asset_set field.
   */
  HOTEL_PROPERTY_ASSET_NOT_LINKED_TO_CAMPAIGN = 5,
  UNRECOGNIZED = -1,
}

export function assetGroupAssetErrorEnum_AssetGroupAssetErrorFromJSON(
  object: any,
): AssetGroupAssetErrorEnum_AssetGroupAssetError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return AssetGroupAssetErrorEnum_AssetGroupAssetError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return AssetGroupAssetErrorEnum_AssetGroupAssetError.UNKNOWN;
    case 2:
    case "DUPLICATE_RESOURCE":
      return AssetGroupAssetErrorEnum_AssetGroupAssetError.DUPLICATE_RESOURCE;
    case 3:
    case "EXPANDABLE_TAGS_NOT_ALLOWED_IN_DESCRIPTION":
      return AssetGroupAssetErrorEnum_AssetGroupAssetError.EXPANDABLE_TAGS_NOT_ALLOWED_IN_DESCRIPTION;
    case 4:
    case "AD_CUSTOMIZER_NOT_SUPPORTED":
      return AssetGroupAssetErrorEnum_AssetGroupAssetError.AD_CUSTOMIZER_NOT_SUPPORTED;
    case 5:
    case "HOTEL_PROPERTY_ASSET_NOT_LINKED_TO_CAMPAIGN":
      return AssetGroupAssetErrorEnum_AssetGroupAssetError.HOTEL_PROPERTY_ASSET_NOT_LINKED_TO_CAMPAIGN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return AssetGroupAssetErrorEnum_AssetGroupAssetError.UNRECOGNIZED;
  }
}

export function assetGroupAssetErrorEnum_AssetGroupAssetErrorToJSON(
  object: AssetGroupAssetErrorEnum_AssetGroupAssetError,
): string {
  switch (object) {
    case AssetGroupAssetErrorEnum_AssetGroupAssetError.UNSPECIFIED:
      return "UNSPECIFIED";
    case AssetGroupAssetErrorEnum_AssetGroupAssetError.UNKNOWN:
      return "UNKNOWN";
    case AssetGroupAssetErrorEnum_AssetGroupAssetError.DUPLICATE_RESOURCE:
      return "DUPLICATE_RESOURCE";
    case AssetGroupAssetErrorEnum_AssetGroupAssetError.EXPANDABLE_TAGS_NOT_ALLOWED_IN_DESCRIPTION:
      return "EXPANDABLE_TAGS_NOT_ALLOWED_IN_DESCRIPTION";
    case AssetGroupAssetErrorEnum_AssetGroupAssetError.AD_CUSTOMIZER_NOT_SUPPORTED:
      return "AD_CUSTOMIZER_NOT_SUPPORTED";
    case AssetGroupAssetErrorEnum_AssetGroupAssetError.HOTEL_PROPERTY_ASSET_NOT_LINKED_TO_CAMPAIGN:
      return "HOTEL_PROPERTY_ASSET_NOT_LINKED_TO_CAMPAIGN";
    case AssetGroupAssetErrorEnum_AssetGroupAssetError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseAssetGroupAssetErrorEnum(): AssetGroupAssetErrorEnum {
  return {};
}

export const AssetGroupAssetErrorEnum: MessageFns<AssetGroupAssetErrorEnum> = {
  encode(_: AssetGroupAssetErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AssetGroupAssetErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAssetGroupAssetErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): AssetGroupAssetErrorEnum {
    return {};
  },

  toJSON(_: AssetGroupAssetErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<AssetGroupAssetErrorEnum>): AssetGroupAssetErrorEnum {
    return AssetGroupAssetErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<AssetGroupAssetErrorEnum>): AssetGroupAssetErrorEnum {
    const message = createBaseAssetGroupAssetErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
