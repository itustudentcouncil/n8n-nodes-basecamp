// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v17/enums/local_services_lead_status.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v17.enums";

/** Container for enum describing possible statuses of lead. */
export interface LocalServicesLeadStatusEnum {
}

/** Possible statuses of lead. */
export enum LocalServicesLeadStatusEnum_LeadStatus {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** NEW - New lead which hasn't yet been seen by advertiser. */
  NEW = 2,
  /** ACTIVE - Lead that thas been interacted by advertiser. */
  ACTIVE = 3,
  /** BOOKED - Lead has been booked. */
  BOOKED = 4,
  /** DECLINED - Lead was declined by advertiser. */
  DECLINED = 5,
  /** EXPIRED - Lead has expired due to inactivity. */
  EXPIRED = 6,
  /** DISABLED - Disabled due to spam or dispute. */
  DISABLED = 7,
  /** CONSUMER_DECLINED - Consumer declined the lead. */
  CONSUMER_DECLINED = 8,
  /** WIPED_OUT - Personally Identifiable Information of the lead is wiped out. */
  WIPED_OUT = 9,
  UNRECOGNIZED = -1,
}

export function localServicesLeadStatusEnum_LeadStatusFromJSON(object: any): LocalServicesLeadStatusEnum_LeadStatus {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return LocalServicesLeadStatusEnum_LeadStatus.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return LocalServicesLeadStatusEnum_LeadStatus.UNKNOWN;
    case 2:
    case "NEW":
      return LocalServicesLeadStatusEnum_LeadStatus.NEW;
    case 3:
    case "ACTIVE":
      return LocalServicesLeadStatusEnum_LeadStatus.ACTIVE;
    case 4:
    case "BOOKED":
      return LocalServicesLeadStatusEnum_LeadStatus.BOOKED;
    case 5:
    case "DECLINED":
      return LocalServicesLeadStatusEnum_LeadStatus.DECLINED;
    case 6:
    case "EXPIRED":
      return LocalServicesLeadStatusEnum_LeadStatus.EXPIRED;
    case 7:
    case "DISABLED":
      return LocalServicesLeadStatusEnum_LeadStatus.DISABLED;
    case 8:
    case "CONSUMER_DECLINED":
      return LocalServicesLeadStatusEnum_LeadStatus.CONSUMER_DECLINED;
    case 9:
    case "WIPED_OUT":
      return LocalServicesLeadStatusEnum_LeadStatus.WIPED_OUT;
    case -1:
    case "UNRECOGNIZED":
    default:
      return LocalServicesLeadStatusEnum_LeadStatus.UNRECOGNIZED;
  }
}

export function localServicesLeadStatusEnum_LeadStatusToJSON(object: LocalServicesLeadStatusEnum_LeadStatus): string {
  switch (object) {
    case LocalServicesLeadStatusEnum_LeadStatus.UNSPECIFIED:
      return "UNSPECIFIED";
    case LocalServicesLeadStatusEnum_LeadStatus.UNKNOWN:
      return "UNKNOWN";
    case LocalServicesLeadStatusEnum_LeadStatus.NEW:
      return "NEW";
    case LocalServicesLeadStatusEnum_LeadStatus.ACTIVE:
      return "ACTIVE";
    case LocalServicesLeadStatusEnum_LeadStatus.BOOKED:
      return "BOOKED";
    case LocalServicesLeadStatusEnum_LeadStatus.DECLINED:
      return "DECLINED";
    case LocalServicesLeadStatusEnum_LeadStatus.EXPIRED:
      return "EXPIRED";
    case LocalServicesLeadStatusEnum_LeadStatus.DISABLED:
      return "DISABLED";
    case LocalServicesLeadStatusEnum_LeadStatus.CONSUMER_DECLINED:
      return "CONSUMER_DECLINED";
    case LocalServicesLeadStatusEnum_LeadStatus.WIPED_OUT:
      return "WIPED_OUT";
    case LocalServicesLeadStatusEnum_LeadStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseLocalServicesLeadStatusEnum(): LocalServicesLeadStatusEnum {
  return {};
}

export const LocalServicesLeadStatusEnum: MessageFns<LocalServicesLeadStatusEnum> = {
  encode(_: LocalServicesLeadStatusEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): LocalServicesLeadStatusEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseLocalServicesLeadStatusEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): LocalServicesLeadStatusEnum {
    return {};
  },

  toJSON(_: LocalServicesLeadStatusEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<LocalServicesLeadStatusEnum>): LocalServicesLeadStatusEnum {
    return LocalServicesLeadStatusEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<LocalServicesLeadStatusEnum>): LocalServicesLeadStatusEnum {
    const message = createBaseLocalServicesLeadStatusEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
