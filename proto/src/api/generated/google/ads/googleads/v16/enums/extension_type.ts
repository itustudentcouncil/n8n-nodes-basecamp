// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/enums/extension_type.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.enums";

/**
 * Container for enum describing possible data types for an extension in an
 * extension setting.
 */
export interface ExtensionTypeEnum {
}

/** Possible data types for an extension in an extension setting. */
export enum ExtensionTypeEnum_ExtensionType {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** NONE - None. */
  NONE = 2,
  /** APP - App. */
  APP = 3,
  /** CALL - Call. */
  CALL = 4,
  /** CALLOUT - Callout. */
  CALLOUT = 5,
  /** MESSAGE - Message. */
  MESSAGE = 6,
  /** PRICE - Price. */
  PRICE = 7,
  /** PROMOTION - Promotion. */
  PROMOTION = 8,
  /** SITELINK - Sitelink. */
  SITELINK = 10,
  /** STRUCTURED_SNIPPET - Structured snippet. */
  STRUCTURED_SNIPPET = 11,
  /** LOCATION - Location. */
  LOCATION = 12,
  /** AFFILIATE_LOCATION - Affiliate location. */
  AFFILIATE_LOCATION = 13,
  /** HOTEL_CALLOUT - Hotel callout */
  HOTEL_CALLOUT = 15,
  /** IMAGE - Image. */
  IMAGE = 16,
  UNRECOGNIZED = -1,
}

export function extensionTypeEnum_ExtensionTypeFromJSON(object: any): ExtensionTypeEnum_ExtensionType {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return ExtensionTypeEnum_ExtensionType.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return ExtensionTypeEnum_ExtensionType.UNKNOWN;
    case 2:
    case "NONE":
      return ExtensionTypeEnum_ExtensionType.NONE;
    case 3:
    case "APP":
      return ExtensionTypeEnum_ExtensionType.APP;
    case 4:
    case "CALL":
      return ExtensionTypeEnum_ExtensionType.CALL;
    case 5:
    case "CALLOUT":
      return ExtensionTypeEnum_ExtensionType.CALLOUT;
    case 6:
    case "MESSAGE":
      return ExtensionTypeEnum_ExtensionType.MESSAGE;
    case 7:
    case "PRICE":
      return ExtensionTypeEnum_ExtensionType.PRICE;
    case 8:
    case "PROMOTION":
      return ExtensionTypeEnum_ExtensionType.PROMOTION;
    case 10:
    case "SITELINK":
      return ExtensionTypeEnum_ExtensionType.SITELINK;
    case 11:
    case "STRUCTURED_SNIPPET":
      return ExtensionTypeEnum_ExtensionType.STRUCTURED_SNIPPET;
    case 12:
    case "LOCATION":
      return ExtensionTypeEnum_ExtensionType.LOCATION;
    case 13:
    case "AFFILIATE_LOCATION":
      return ExtensionTypeEnum_ExtensionType.AFFILIATE_LOCATION;
    case 15:
    case "HOTEL_CALLOUT":
      return ExtensionTypeEnum_ExtensionType.HOTEL_CALLOUT;
    case 16:
    case "IMAGE":
      return ExtensionTypeEnum_ExtensionType.IMAGE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ExtensionTypeEnum_ExtensionType.UNRECOGNIZED;
  }
}

export function extensionTypeEnum_ExtensionTypeToJSON(object: ExtensionTypeEnum_ExtensionType): string {
  switch (object) {
    case ExtensionTypeEnum_ExtensionType.UNSPECIFIED:
      return "UNSPECIFIED";
    case ExtensionTypeEnum_ExtensionType.UNKNOWN:
      return "UNKNOWN";
    case ExtensionTypeEnum_ExtensionType.NONE:
      return "NONE";
    case ExtensionTypeEnum_ExtensionType.APP:
      return "APP";
    case ExtensionTypeEnum_ExtensionType.CALL:
      return "CALL";
    case ExtensionTypeEnum_ExtensionType.CALLOUT:
      return "CALLOUT";
    case ExtensionTypeEnum_ExtensionType.MESSAGE:
      return "MESSAGE";
    case ExtensionTypeEnum_ExtensionType.PRICE:
      return "PRICE";
    case ExtensionTypeEnum_ExtensionType.PROMOTION:
      return "PROMOTION";
    case ExtensionTypeEnum_ExtensionType.SITELINK:
      return "SITELINK";
    case ExtensionTypeEnum_ExtensionType.STRUCTURED_SNIPPET:
      return "STRUCTURED_SNIPPET";
    case ExtensionTypeEnum_ExtensionType.LOCATION:
      return "LOCATION";
    case ExtensionTypeEnum_ExtensionType.AFFILIATE_LOCATION:
      return "AFFILIATE_LOCATION";
    case ExtensionTypeEnum_ExtensionType.HOTEL_CALLOUT:
      return "HOTEL_CALLOUT";
    case ExtensionTypeEnum_ExtensionType.IMAGE:
      return "IMAGE";
    case ExtensionTypeEnum_ExtensionType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseExtensionTypeEnum(): ExtensionTypeEnum {
  return {};
}

export const ExtensionTypeEnum: MessageFns<ExtensionTypeEnum> = {
  encode(_: ExtensionTypeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ExtensionTypeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseExtensionTypeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ExtensionTypeEnum {
    return {};
  },

  toJSON(_: ExtensionTypeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ExtensionTypeEnum>): ExtensionTypeEnum {
    return ExtensionTypeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ExtensionTypeEnum>): ExtensionTypeEnum {
    const message = createBaseExtensionTypeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
