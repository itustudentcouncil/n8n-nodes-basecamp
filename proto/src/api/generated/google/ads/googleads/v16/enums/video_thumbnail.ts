// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/enums/video_thumbnail.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.enums";

/**
 * Defines the thumbnail to use for In-Display video ads. Note that
 * DEFAULT_THUMBNAIL may have been uploaded by the user while thumbnails 1-3 are
 * auto-generated from the video.
 */
export interface VideoThumbnailEnum {
}

/** Enum listing the possible types of a video thumbnail. */
export enum VideoThumbnailEnum_VideoThumbnail {
  /** UNSPECIFIED - The type has not been specified. */
  UNSPECIFIED = 0,
  /**
   * UNKNOWN - The received value is not known in this version.
   * This is a response-only value.
   */
  UNKNOWN = 1,
  /** DEFAULT_THUMBNAIL - The default thumbnail. Can be auto-generated or user-uploaded. */
  DEFAULT_THUMBNAIL = 2,
  /** THUMBNAIL_1 - Thumbnail 1, generated from the video. */
  THUMBNAIL_1 = 3,
  /** THUMBNAIL_2 - Thumbnail 2, generated from the video. */
  THUMBNAIL_2 = 4,
  /** THUMBNAIL_3 - Thumbnail 3, generated from the video. */
  THUMBNAIL_3 = 5,
  UNRECOGNIZED = -1,
}

export function videoThumbnailEnum_VideoThumbnailFromJSON(object: any): VideoThumbnailEnum_VideoThumbnail {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return VideoThumbnailEnum_VideoThumbnail.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return VideoThumbnailEnum_VideoThumbnail.UNKNOWN;
    case 2:
    case "DEFAULT_THUMBNAIL":
      return VideoThumbnailEnum_VideoThumbnail.DEFAULT_THUMBNAIL;
    case 3:
    case "THUMBNAIL_1":
      return VideoThumbnailEnum_VideoThumbnail.THUMBNAIL_1;
    case 4:
    case "THUMBNAIL_2":
      return VideoThumbnailEnum_VideoThumbnail.THUMBNAIL_2;
    case 5:
    case "THUMBNAIL_3":
      return VideoThumbnailEnum_VideoThumbnail.THUMBNAIL_3;
    case -1:
    case "UNRECOGNIZED":
    default:
      return VideoThumbnailEnum_VideoThumbnail.UNRECOGNIZED;
  }
}

export function videoThumbnailEnum_VideoThumbnailToJSON(object: VideoThumbnailEnum_VideoThumbnail): string {
  switch (object) {
    case VideoThumbnailEnum_VideoThumbnail.UNSPECIFIED:
      return "UNSPECIFIED";
    case VideoThumbnailEnum_VideoThumbnail.UNKNOWN:
      return "UNKNOWN";
    case VideoThumbnailEnum_VideoThumbnail.DEFAULT_THUMBNAIL:
      return "DEFAULT_THUMBNAIL";
    case VideoThumbnailEnum_VideoThumbnail.THUMBNAIL_1:
      return "THUMBNAIL_1";
    case VideoThumbnailEnum_VideoThumbnail.THUMBNAIL_2:
      return "THUMBNAIL_2";
    case VideoThumbnailEnum_VideoThumbnail.THUMBNAIL_3:
      return "THUMBNAIL_3";
    case VideoThumbnailEnum_VideoThumbnail.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseVideoThumbnailEnum(): VideoThumbnailEnum {
  return {};
}

export const VideoThumbnailEnum: MessageFns<VideoThumbnailEnum> = {
  encode(_: VideoThumbnailEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): VideoThumbnailEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseVideoThumbnailEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): VideoThumbnailEnum {
    return {};
  },

  toJSON(_: VideoThumbnailEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<VideoThumbnailEnum>): VideoThumbnailEnum {
    return VideoThumbnailEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<VideoThumbnailEnum>): VideoThumbnailEnum {
    const message = createBaseVideoThumbnailEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
