// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/resources/billing_setup.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  BillingSetupStatusEnum_BillingSetupStatus,
  billingSetupStatusEnum_BillingSetupStatusFromJSON,
  billingSetupStatusEnum_BillingSetupStatusToJSON,
} from "../enums/billing_setup_status.js";
import {
  TimeTypeEnum_TimeType,
  timeTypeEnum_TimeTypeFromJSON,
  timeTypeEnum_TimeTypeToJSON,
} from "../enums/time_type.js";

export const protobufPackage = "google.ads.googleads.v16.resources";

/**
 * A billing setup, which associates a payments account and an advertiser. A
 * billing setup is specific to one advertiser.
 */
export interface BillingSetup {
  /**
   * Immutable. The resource name of the billing setup.
   * BillingSetup resource names have the form:
   *
   * `customers/{customer_id}/billingSetups/{billing_setup_id}`
   */
  resourceName: string;
  /** Output only. The ID of the billing setup. */
  id?:
    | Long
    | undefined;
  /** Output only. The status of the billing setup. */
  status: BillingSetupStatusEnum_BillingSetupStatus;
  /**
   * Immutable. The resource name of the payments account associated with this
   * billing setup. Payments resource names have the form:
   *
   * `customers/{customer_id}/paymentsAccounts/{payments_account_id}`
   * When setting up billing, this is used to signup with an existing payments
   * account (and then payments_account_info should not be set).
   * When getting a billing setup, this and payments_account_info will be
   * populated.
   */
  paymentsAccount?:
    | string
    | undefined;
  /**
   * Immutable. The payments account information associated with this billing
   * setup. When setting up billing, this is used to signup with a new payments
   * account (and then payments_account should not be set). When getting a
   * billing setup, this and payments_account will be populated.
   */
  paymentsAccountInfo:
    | BillingSetup_PaymentsAccountInfo
    | undefined;
  /**
   * Immutable. The start date time in yyyy-MM-dd or yyyy-MM-dd HH:mm:ss
   * format. Only a future time is allowed.
   */
  startDateTime?:
    | string
    | undefined;
  /** Immutable. The start time as a type. Only NOW is allowed. */
  startTimeType?:
    | TimeTypeEnum_TimeType
    | undefined;
  /**
   * Output only. The end date time in yyyy-MM-dd or yyyy-MM-dd HH:mm:ss
   * format.
   */
  endDateTime?:
    | string
    | undefined;
  /** Output only. The end time as a type.  The only possible value is FOREVER. */
  endTimeType?: TimeTypeEnum_TimeType | undefined;
}

/** Container of payments account information for this billing. */
export interface BillingSetup_PaymentsAccountInfo {
  /**
   * Output only. A 16 digit id used to identify the payments account
   * associated with the billing setup.
   *
   * This must be passed as a string with dashes, for example,
   * "1234-5678-9012-3456".
   */
  paymentsAccountId?:
    | string
    | undefined;
  /**
   * Immutable. The name of the payments account associated with the billing
   * setup.
   *
   * This enables the user to specify a meaningful name for a payments account
   * to aid in reconciling monthly invoices.
   *
   * This name will be printed in the monthly invoices.
   */
  paymentsAccountName?:
    | string
    | undefined;
  /**
   * Immutable. A 12 digit id used to identify the payments profile associated
   * with the billing setup.
   *
   * This must be passed in as a string with dashes, for example,
   * "1234-5678-9012".
   */
  paymentsProfileId?:
    | string
    | undefined;
  /**
   * Output only. The name of the payments profile associated with the billing
   * setup.
   */
  paymentsProfileName?:
    | string
    | undefined;
  /**
   * Output only. A secondary payments profile id present in uncommon
   * situations, for example, when a sequential liability agreement has been
   * arranged.
   */
  secondaryPaymentsProfileId?: string | undefined;
}

function createBaseBillingSetup(): BillingSetup {
  return {
    resourceName: "",
    id: undefined,
    status: 0,
    paymentsAccount: undefined,
    paymentsAccountInfo: undefined,
    startDateTime: undefined,
    startTimeType: undefined,
    endDateTime: undefined,
    endTimeType: undefined,
  };
}

export const BillingSetup: MessageFns<BillingSetup> = {
  encode(message: BillingSetup, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.id !== undefined) {
      writer.uint32(120).int64(message.id.toString());
    }
    if (message.status !== 0) {
      writer.uint32(24).int32(message.status);
    }
    if (message.paymentsAccount !== undefined) {
      writer.uint32(146).string(message.paymentsAccount);
    }
    if (message.paymentsAccountInfo !== undefined) {
      BillingSetup_PaymentsAccountInfo.encode(message.paymentsAccountInfo, writer.uint32(98).fork()).join();
    }
    if (message.startDateTime !== undefined) {
      writer.uint32(130).string(message.startDateTime);
    }
    if (message.startTimeType !== undefined) {
      writer.uint32(80).int32(message.startTimeType);
    }
    if (message.endDateTime !== undefined) {
      writer.uint32(138).string(message.endDateTime);
    }
    if (message.endTimeType !== undefined) {
      writer.uint32(112).int32(message.endTimeType);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): BillingSetup {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseBillingSetup();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 15:
          if (tag !== 120) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
        case 18:
          if (tag !== 146) {
            break;
          }

          message.paymentsAccount = reader.string();
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.paymentsAccountInfo = BillingSetup_PaymentsAccountInfo.decode(reader, reader.uint32());
          continue;
        case 16:
          if (tag !== 130) {
            break;
          }

          message.startDateTime = reader.string();
          continue;
        case 10:
          if (tag !== 80) {
            break;
          }

          message.startTimeType = reader.int32() as any;
          continue;
        case 17:
          if (tag !== 138) {
            break;
          }

          message.endDateTime = reader.string();
          continue;
        case 14:
          if (tag !== 112) {
            break;
          }

          message.endTimeType = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): BillingSetup {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      id: isSet(object.id) ? Long.fromValue(object.id) : undefined,
      status: isSet(object.status) ? billingSetupStatusEnum_BillingSetupStatusFromJSON(object.status) : 0,
      paymentsAccount: isSet(object.paymentsAccount) ? globalThis.String(object.paymentsAccount) : undefined,
      paymentsAccountInfo: isSet(object.paymentsAccountInfo)
        ? BillingSetup_PaymentsAccountInfo.fromJSON(object.paymentsAccountInfo)
        : undefined,
      startDateTime: isSet(object.startDateTime) ? globalThis.String(object.startDateTime) : undefined,
      startTimeType: isSet(object.startTimeType) ? timeTypeEnum_TimeTypeFromJSON(object.startTimeType) : undefined,
      endDateTime: isSet(object.endDateTime) ? globalThis.String(object.endDateTime) : undefined,
      endTimeType: isSet(object.endTimeType) ? timeTypeEnum_TimeTypeFromJSON(object.endTimeType) : undefined,
    };
  },

  toJSON(message: BillingSetup): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.id !== undefined) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.status !== 0) {
      obj.status = billingSetupStatusEnum_BillingSetupStatusToJSON(message.status);
    }
    if (message.paymentsAccount !== undefined) {
      obj.paymentsAccount = message.paymentsAccount;
    }
    if (message.paymentsAccountInfo !== undefined) {
      obj.paymentsAccountInfo = BillingSetup_PaymentsAccountInfo.toJSON(message.paymentsAccountInfo);
    }
    if (message.startDateTime !== undefined) {
      obj.startDateTime = message.startDateTime;
    }
    if (message.startTimeType !== undefined) {
      obj.startTimeType = timeTypeEnum_TimeTypeToJSON(message.startTimeType);
    }
    if (message.endDateTime !== undefined) {
      obj.endDateTime = message.endDateTime;
    }
    if (message.endTimeType !== undefined) {
      obj.endTimeType = timeTypeEnum_TimeTypeToJSON(message.endTimeType);
    }
    return obj;
  },

  create(base?: DeepPartial<BillingSetup>): BillingSetup {
    return BillingSetup.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<BillingSetup>): BillingSetup {
    const message = createBaseBillingSetup();
    message.resourceName = object.resourceName ?? "";
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : undefined;
    message.status = object.status ?? 0;
    message.paymentsAccount = object.paymentsAccount ?? undefined;
    message.paymentsAccountInfo = (object.paymentsAccountInfo !== undefined && object.paymentsAccountInfo !== null)
      ? BillingSetup_PaymentsAccountInfo.fromPartial(object.paymentsAccountInfo)
      : undefined;
    message.startDateTime = object.startDateTime ?? undefined;
    message.startTimeType = object.startTimeType ?? undefined;
    message.endDateTime = object.endDateTime ?? undefined;
    message.endTimeType = object.endTimeType ?? undefined;
    return message;
  },
};

function createBaseBillingSetup_PaymentsAccountInfo(): BillingSetup_PaymentsAccountInfo {
  return {
    paymentsAccountId: undefined,
    paymentsAccountName: undefined,
    paymentsProfileId: undefined,
    paymentsProfileName: undefined,
    secondaryPaymentsProfileId: undefined,
  };
}

export const BillingSetup_PaymentsAccountInfo: MessageFns<BillingSetup_PaymentsAccountInfo> = {
  encode(message: BillingSetup_PaymentsAccountInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.paymentsAccountId !== undefined) {
      writer.uint32(50).string(message.paymentsAccountId);
    }
    if (message.paymentsAccountName !== undefined) {
      writer.uint32(58).string(message.paymentsAccountName);
    }
    if (message.paymentsProfileId !== undefined) {
      writer.uint32(66).string(message.paymentsProfileId);
    }
    if (message.paymentsProfileName !== undefined) {
      writer.uint32(74).string(message.paymentsProfileName);
    }
    if (message.secondaryPaymentsProfileId !== undefined) {
      writer.uint32(82).string(message.secondaryPaymentsProfileId);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): BillingSetup_PaymentsAccountInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseBillingSetup_PaymentsAccountInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 6:
          if (tag !== 50) {
            break;
          }

          message.paymentsAccountId = reader.string();
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.paymentsAccountName = reader.string();
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.paymentsProfileId = reader.string();
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.paymentsProfileName = reader.string();
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.secondaryPaymentsProfileId = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): BillingSetup_PaymentsAccountInfo {
    return {
      paymentsAccountId: isSet(object.paymentsAccountId) ? globalThis.String(object.paymentsAccountId) : undefined,
      paymentsAccountName: isSet(object.paymentsAccountName)
        ? globalThis.String(object.paymentsAccountName)
        : undefined,
      paymentsProfileId: isSet(object.paymentsProfileId) ? globalThis.String(object.paymentsProfileId) : undefined,
      paymentsProfileName: isSet(object.paymentsProfileName)
        ? globalThis.String(object.paymentsProfileName)
        : undefined,
      secondaryPaymentsProfileId: isSet(object.secondaryPaymentsProfileId)
        ? globalThis.String(object.secondaryPaymentsProfileId)
        : undefined,
    };
  },

  toJSON(message: BillingSetup_PaymentsAccountInfo): unknown {
    const obj: any = {};
    if (message.paymentsAccountId !== undefined) {
      obj.paymentsAccountId = message.paymentsAccountId;
    }
    if (message.paymentsAccountName !== undefined) {
      obj.paymentsAccountName = message.paymentsAccountName;
    }
    if (message.paymentsProfileId !== undefined) {
      obj.paymentsProfileId = message.paymentsProfileId;
    }
    if (message.paymentsProfileName !== undefined) {
      obj.paymentsProfileName = message.paymentsProfileName;
    }
    if (message.secondaryPaymentsProfileId !== undefined) {
      obj.secondaryPaymentsProfileId = message.secondaryPaymentsProfileId;
    }
    return obj;
  },

  create(base?: DeepPartial<BillingSetup_PaymentsAccountInfo>): BillingSetup_PaymentsAccountInfo {
    return BillingSetup_PaymentsAccountInfo.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<BillingSetup_PaymentsAccountInfo>): BillingSetup_PaymentsAccountInfo {
    const message = createBaseBillingSetup_PaymentsAccountInfo();
    message.paymentsAccountId = object.paymentsAccountId ?? undefined;
    message.paymentsAccountName = object.paymentsAccountName ?? undefined;
    message.paymentsProfileId = object.paymentsProfileId ?? undefined;
    message.paymentsProfileName = object.paymentsProfileName ?? undefined;
    message.secondaryPaymentsProfileId = object.secondaryPaymentsProfileId ?? undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
