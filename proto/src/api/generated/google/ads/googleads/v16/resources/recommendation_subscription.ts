// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/resources/recommendation_subscription.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  RecommendationSubscriptionStatusEnum_RecommendationSubscriptionStatus,
  recommendationSubscriptionStatusEnum_RecommendationSubscriptionStatusFromJSON,
  recommendationSubscriptionStatusEnum_RecommendationSubscriptionStatusToJSON,
} from "../enums/recommendation_subscription_status.js";
import {
  RecommendationTypeEnum_RecommendationType,
  recommendationTypeEnum_RecommendationTypeFromJSON,
  recommendationTypeEnum_RecommendationTypeToJSON,
} from "../enums/recommendation_type.js";

export const protobufPackage = "google.ads.googleads.v16.resources";

/** Recommendation Subscription resource */
export interface RecommendationSubscription {
  /**
   * Immutable. The resource name of the recommendation subscription.
   *
   * `customers/{customer_id}/recommendationSubscriptions/{recommendation_type}`
   */
  resourceName: string;
  /** Required. Immutable. The type of recommendation subscribed to. */
  type: RecommendationTypeEnum_RecommendationType;
  /**
   * Output only. Time in seconds when the subscription was first created. The
   * datetime is in the customer's time zone and in "yyyy-MM-dd HH:mm:ss"
   * format.
   */
  createDateTime?:
    | string
    | undefined;
  /**
   * Output only. Contains the time in microseconds, when the Recommendation
   * Subscription was last updated. The datetime is in the customer's time zone
   * and in "yyyy-MM-dd HH:mm:ss.ssssss" format.
   */
  modifyDateTime?:
    | string
    | undefined;
  /** Required. Status of the subscription, either enabled or paused. */
  status?: RecommendationSubscriptionStatusEnum_RecommendationSubscriptionStatus | undefined;
}

function createBaseRecommendationSubscription(): RecommendationSubscription {
  return { resourceName: "", type: 0, createDateTime: undefined, modifyDateTime: undefined, status: undefined };
}

export const RecommendationSubscription: MessageFns<RecommendationSubscription> = {
  encode(message: RecommendationSubscription, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.type !== 0) {
      writer.uint32(16).int32(message.type);
    }
    if (message.createDateTime !== undefined) {
      writer.uint32(26).string(message.createDateTime);
    }
    if (message.modifyDateTime !== undefined) {
      writer.uint32(34).string(message.modifyDateTime);
    }
    if (message.status !== undefined) {
      writer.uint32(40).int32(message.status);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): RecommendationSubscription {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRecommendationSubscription();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.type = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.createDateTime = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.modifyDateTime = reader.string();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): RecommendationSubscription {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      type: isSet(object.type) ? recommendationTypeEnum_RecommendationTypeFromJSON(object.type) : 0,
      createDateTime: isSet(object.createDateTime) ? globalThis.String(object.createDateTime) : undefined,
      modifyDateTime: isSet(object.modifyDateTime) ? globalThis.String(object.modifyDateTime) : undefined,
      status: isSet(object.status)
        ? recommendationSubscriptionStatusEnum_RecommendationSubscriptionStatusFromJSON(object.status)
        : undefined,
    };
  },

  toJSON(message: RecommendationSubscription): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.type !== 0) {
      obj.type = recommendationTypeEnum_RecommendationTypeToJSON(message.type);
    }
    if (message.createDateTime !== undefined) {
      obj.createDateTime = message.createDateTime;
    }
    if (message.modifyDateTime !== undefined) {
      obj.modifyDateTime = message.modifyDateTime;
    }
    if (message.status !== undefined) {
      obj.status = recommendationSubscriptionStatusEnum_RecommendationSubscriptionStatusToJSON(message.status);
    }
    return obj;
  },

  create(base?: DeepPartial<RecommendationSubscription>): RecommendationSubscription {
    return RecommendationSubscription.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<RecommendationSubscription>): RecommendationSubscription {
    const message = createBaseRecommendationSubscription();
    message.resourceName = object.resourceName ?? "";
    message.type = object.type ?? 0;
    message.createDateTime = object.createDateTime ?? undefined;
    message.modifyDateTime = object.modifyDateTime ?? undefined;
    message.status = object.status ?? undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
