// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/resources/ad_group.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { CustomParameter } from "../common/custom_parameter.js";
import { TargetingSetting } from "../common/targeting_setting.js";
import {
  AdGroupAdRotationModeEnum_AdGroupAdRotationMode,
  adGroupAdRotationModeEnum_AdGroupAdRotationModeFromJSON,
  adGroupAdRotationModeEnum_AdGroupAdRotationModeToJSON,
} from "../enums/ad_group_ad_rotation_mode.js";
import {
  AdGroupPrimaryStatusEnum_AdGroupPrimaryStatus,
  adGroupPrimaryStatusEnum_AdGroupPrimaryStatusFromJSON,
  adGroupPrimaryStatusEnum_AdGroupPrimaryStatusToJSON,
} from "../enums/ad_group_primary_status.js";
import {
  AdGroupPrimaryStatusReasonEnum_AdGroupPrimaryStatusReason,
  adGroupPrimaryStatusReasonEnum_AdGroupPrimaryStatusReasonFromJSON,
  adGroupPrimaryStatusReasonEnum_AdGroupPrimaryStatusReasonToJSON,
} from "../enums/ad_group_primary_status_reason.js";
import {
  AdGroupStatusEnum_AdGroupStatus,
  adGroupStatusEnum_AdGroupStatusFromJSON,
  adGroupStatusEnum_AdGroupStatusToJSON,
} from "../enums/ad_group_status.js";
import {
  AdGroupTypeEnum_AdGroupType,
  adGroupTypeEnum_AdGroupTypeFromJSON,
  adGroupTypeEnum_AdGroupTypeToJSON,
} from "../enums/ad_group_type.js";
import {
  AssetFieldTypeEnum_AssetFieldType,
  assetFieldTypeEnum_AssetFieldTypeFromJSON,
  assetFieldTypeEnum_AssetFieldTypeToJSON,
} from "../enums/asset_field_type.js";
import {
  AssetSetTypeEnum_AssetSetType,
  assetSetTypeEnum_AssetSetTypeFromJSON,
  assetSetTypeEnum_AssetSetTypeToJSON,
} from "../enums/asset_set_type.js";
import {
  BiddingSourceEnum_BiddingSource,
  biddingSourceEnum_BiddingSourceFromJSON,
  biddingSourceEnum_BiddingSourceToJSON,
} from "../enums/bidding_source.js";
import {
  TargetingDimensionEnum_TargetingDimension,
  targetingDimensionEnum_TargetingDimensionFromJSON,
  targetingDimensionEnum_TargetingDimensionToJSON,
} from "../enums/targeting_dimension.js";

export const protobufPackage = "google.ads.googleads.v16.resources";

/** An ad group. */
export interface AdGroup {
  /**
   * Immutable. The resource name of the ad group.
   * Ad group resource names have the form:
   *
   * `customers/{customer_id}/adGroups/{ad_group_id}`
   */
  resourceName: string;
  /** Output only. The ID of the ad group. */
  id?:
    | Long
    | undefined;
  /**
   * The name of the ad group.
   *
   * This field is required and should not be empty when creating new ad
   * groups.
   *
   * It must contain fewer than 255 UTF-8 full-width characters.
   *
   * It must not contain any null (code point 0x0), NL line feed
   * (code point 0xA) or carriage return (code point 0xD) characters.
   */
  name?:
    | string
    | undefined;
  /** The status of the ad group. */
  status: AdGroupStatusEnum_AdGroupStatus;
  /** Immutable. The type of the ad group. */
  type: AdGroupTypeEnum_AdGroupType;
  /** The ad rotation mode of the ad group. */
  adRotationMode: AdGroupAdRotationModeEnum_AdGroupAdRotationMode;
  /**
   * Output only. For draft or experiment ad groups, this field is the resource
   * name of the base ad group from which this ad group was created. If a draft
   * or experiment ad group does not have a base ad group, then this field is
   * null.
   *
   * For base ad groups, this field equals the ad group resource name.
   *
   * This field is read-only.
   */
  baseAdGroup?:
    | string
    | undefined;
  /** The URL template for constructing a tracking URL. */
  trackingUrlTemplate?:
    | string
    | undefined;
  /**
   * The list of mappings used to substitute custom parameter tags in a
   * `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
   */
  urlCustomParameters: CustomParameter[];
  /** Immutable. The campaign to which the ad group belongs. */
  campaign?:
    | string
    | undefined;
  /** The maximum CPC (cost-per-click) bid. */
  cpcBidMicros?:
    | Long
    | undefined;
  /**
   * Output only. Value will be same as that of the CPC (cost-per-click) bid
   * value when the bidding strategy is one of manual cpc, enhanced cpc, page
   * one promoted or target outrank share, otherwise the value will be null.
   */
  effectiveCpcBidMicros?:
    | Long
    | undefined;
  /** The maximum CPM (cost-per-thousand viewable impressions) bid. */
  cpmBidMicros?:
    | Long
    | undefined;
  /**
   * The target CPA (cost-per-acquisition). If the ad group's campaign
   * bidding strategy is TargetCpa or MaximizeConversions (with its target_cpa
   * field set), then this field overrides the target CPA specified in the
   * campaign's bidding strategy.
   * Otherwise, this value is ignored.
   */
  targetCpaMicros?:
    | Long
    | undefined;
  /** The CPV (cost-per-view) bid. */
  cpvBidMicros?:
    | Long
    | undefined;
  /**
   * Average amount in micros that the advertiser is willing to pay for every
   * thousand times the ad is shown.
   */
  targetCpmMicros?:
    | Long
    | undefined;
  /**
   * The target ROAS (return-on-ad-spend) override. If the ad group's campaign
   * bidding strategy is TargetRoas or MaximizeConversionValue (with its
   * target_roas field set), then this field overrides the target ROAS specified
   * in the campaign's bidding strategy.
   * Otherwise, this value is ignored.
   */
  targetRoas?:
    | number
    | undefined;
  /**
   * The percent cpc bid amount, expressed as a fraction of the advertised price
   * for some good or service. The valid range for the fraction is [0,1) and the
   * value stored here is 1,000,000 * [fraction].
   */
  percentCpcBidMicros?:
    | Long
    | undefined;
  /**
   * True if optimized targeting is enabled. Optimized Targeting is the
   * replacement for Audience Expansion.
   */
  optimizedTargetingEnabled: boolean;
  /**
   * Allows advertisers to specify a targeting dimension on which to place
   * absolute bids. This is only applicable for campaigns that target only the
   * display network and not search.
   */
  displayCustomBidDimension: TargetingDimensionEnum_TargetingDimension;
  /** URL template for appending params to Final URL. */
  finalUrlSuffix?:
    | string
    | undefined;
  /** Setting for targeting related features. */
  targetingSetting:
    | TargetingSetting
    | undefined;
  /** Immutable. Setting for audience related features. */
  audienceSetting:
    | AdGroup_AudienceSetting
    | undefined;
  /**
   * Output only. The effective target CPA (cost-per-acquisition).
   * This field is read-only.
   */
  effectiveTargetCpaMicros?:
    | Long
    | undefined;
  /**
   * Output only. Source of the effective target CPA.
   * This field is read-only.
   */
  effectiveTargetCpaSource: BiddingSourceEnum_BiddingSource;
  /**
   * Output only. The effective target ROAS (return-on-ad-spend).
   * This field is read-only.
   */
  effectiveTargetRoas?:
    | number
    | undefined;
  /**
   * Output only. Source of the effective target ROAS.
   * This field is read-only.
   */
  effectiveTargetRoasSource: BiddingSourceEnum_BiddingSource;
  /** Output only. The resource names of labels attached to this ad group. */
  labels: string[];
  /**
   * The asset field types that should be excluded from this ad group. Asset
   * links with these field types will not be inherited by this ad group from
   * the upper levels.
   */
  excludedParentAssetFieldTypes: AssetFieldTypeEnum_AssetFieldType[];
  /**
   * The asset set types that should be excluded from this ad group. Asset set
   * links with these types will not be inherited by this ad group from the
   * upper levels.
   * Location group types (GMB_DYNAMIC_LOCATION_GROUP,
   * CHAIN_DYNAMIC_LOCATION_GROUP, and STATIC_LOCATION_GROUP) are child types of
   * LOCATION_SYNC. Therefore, if LOCATION_SYNC is set for this field, all
   * location group asset sets are not allowed to be linked to this ad group,
   * and all Location Extension (LE) and Affiliate Location Extensions (ALE)
   * will not be served under this ad group.
   * Only LOCATION_SYNC is currently supported.
   */
  excludedParentAssetSetTypes: AssetSetTypeEnum_AssetSetType[];
  /**
   * Output only. Provides aggregated view into why an ad group is not serving
   * or not serving optimally.
   */
  primaryStatus: AdGroupPrimaryStatusEnum_AdGroupPrimaryStatus;
  /**
   * Output only. Provides reasons for why an ad group is not serving or not
   * serving optimally.
   */
  primaryStatusReasons: AdGroupPrimaryStatusReasonEnum_AdGroupPrimaryStatusReason[];
}

/** Settings for the audience targeting. */
export interface AdGroup_AudienceSetting {
  /**
   * Immutable. If true, this ad group uses an Audience resource for audience
   * targeting. If false, this ad group may use audience segment criteria
   * instead.
   */
  useAudienceGrouped: boolean;
}

function createBaseAdGroup(): AdGroup {
  return {
    resourceName: "",
    id: undefined,
    name: undefined,
    status: 0,
    type: 0,
    adRotationMode: 0,
    baseAdGroup: undefined,
    trackingUrlTemplate: undefined,
    urlCustomParameters: [],
    campaign: undefined,
    cpcBidMicros: undefined,
    effectiveCpcBidMicros: undefined,
    cpmBidMicros: undefined,
    targetCpaMicros: undefined,
    cpvBidMicros: undefined,
    targetCpmMicros: undefined,
    targetRoas: undefined,
    percentCpcBidMicros: undefined,
    optimizedTargetingEnabled: false,
    displayCustomBidDimension: 0,
    finalUrlSuffix: undefined,
    targetingSetting: undefined,
    audienceSetting: undefined,
    effectiveTargetCpaMicros: undefined,
    effectiveTargetCpaSource: 0,
    effectiveTargetRoas: undefined,
    effectiveTargetRoasSource: 0,
    labels: [],
    excludedParentAssetFieldTypes: [],
    excludedParentAssetSetTypes: [],
    primaryStatus: 0,
    primaryStatusReasons: [],
  };
}

export const AdGroup: MessageFns<AdGroup> = {
  encode(message: AdGroup, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.id !== undefined) {
      writer.uint32(272).int64(message.id.toString());
    }
    if (message.name !== undefined) {
      writer.uint32(282).string(message.name);
    }
    if (message.status !== 0) {
      writer.uint32(40).int32(message.status);
    }
    if (message.type !== 0) {
      writer.uint32(96).int32(message.type);
    }
    if (message.adRotationMode !== 0) {
      writer.uint32(176).int32(message.adRotationMode);
    }
    if (message.baseAdGroup !== undefined) {
      writer.uint32(290).string(message.baseAdGroup);
    }
    if (message.trackingUrlTemplate !== undefined) {
      writer.uint32(298).string(message.trackingUrlTemplate);
    }
    for (const v of message.urlCustomParameters) {
      CustomParameter.encode(v!, writer.uint32(50).fork()).join();
    }
    if (message.campaign !== undefined) {
      writer.uint32(306).string(message.campaign);
    }
    if (message.cpcBidMicros !== undefined) {
      writer.uint32(312).int64(message.cpcBidMicros.toString());
    }
    if (message.effectiveCpcBidMicros !== undefined) {
      writer.uint32(456).int64(message.effectiveCpcBidMicros.toString());
    }
    if (message.cpmBidMicros !== undefined) {
      writer.uint32(320).int64(message.cpmBidMicros.toString());
    }
    if (message.targetCpaMicros !== undefined) {
      writer.uint32(328).int64(message.targetCpaMicros.toString());
    }
    if (message.cpvBidMicros !== undefined) {
      writer.uint32(336).int64(message.cpvBidMicros.toString());
    }
    if (message.targetCpmMicros !== undefined) {
      writer.uint32(344).int64(message.targetCpmMicros.toString());
    }
    if (message.targetRoas !== undefined) {
      writer.uint32(353).double(message.targetRoas);
    }
    if (message.percentCpcBidMicros !== undefined) {
      writer.uint32(360).int64(message.percentCpcBidMicros.toString());
    }
    if (message.optimizedTargetingEnabled !== false) {
      writer.uint32(472).bool(message.optimizedTargetingEnabled);
    }
    if (message.displayCustomBidDimension !== 0) {
      writer.uint32(184).int32(message.displayCustomBidDimension);
    }
    if (message.finalUrlSuffix !== undefined) {
      writer.uint32(370).string(message.finalUrlSuffix);
    }
    if (message.targetingSetting !== undefined) {
      TargetingSetting.encode(message.targetingSetting, writer.uint32(202).fork()).join();
    }
    if (message.audienceSetting !== undefined) {
      AdGroup_AudienceSetting.encode(message.audienceSetting, writer.uint32(450).fork()).join();
    }
    if (message.effectiveTargetCpaMicros !== undefined) {
      writer.uint32(376).int64(message.effectiveTargetCpaMicros.toString());
    }
    if (message.effectiveTargetCpaSource !== 0) {
      writer.uint32(232).int32(message.effectiveTargetCpaSource);
    }
    if (message.effectiveTargetRoas !== undefined) {
      writer.uint32(385).double(message.effectiveTargetRoas);
    }
    if (message.effectiveTargetRoasSource !== 0) {
      writer.uint32(256).int32(message.effectiveTargetRoasSource);
    }
    for (const v of message.labels) {
      writer.uint32(394).string(v!);
    }
    writer.uint32(434).fork();
    for (const v of message.excludedParentAssetFieldTypes) {
      writer.int32(v);
    }
    writer.join();
    writer.uint32(466).fork();
    for (const v of message.excludedParentAssetSetTypes) {
      writer.int32(v);
    }
    writer.join();
    if (message.primaryStatus !== 0) {
      writer.uint32(496).int32(message.primaryStatus);
    }
    writer.uint32(506).fork();
    for (const v of message.primaryStatusReasons) {
      writer.int32(v);
    }
    writer.join();
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AdGroup {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAdGroup();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 34:
          if (tag !== 272) {
            break;
          }

          message.id = Long.fromString(reader.int64().toString());
          continue;
        case 35:
          if (tag !== 282) {
            break;
          }

          message.name = reader.string();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
        case 12:
          if (tag !== 96) {
            break;
          }

          message.type = reader.int32() as any;
          continue;
        case 22:
          if (tag !== 176) {
            break;
          }

          message.adRotationMode = reader.int32() as any;
          continue;
        case 36:
          if (tag !== 290) {
            break;
          }

          message.baseAdGroup = reader.string();
          continue;
        case 37:
          if (tag !== 298) {
            break;
          }

          message.trackingUrlTemplate = reader.string();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.urlCustomParameters.push(CustomParameter.decode(reader, reader.uint32()));
          continue;
        case 38:
          if (tag !== 306) {
            break;
          }

          message.campaign = reader.string();
          continue;
        case 39:
          if (tag !== 312) {
            break;
          }

          message.cpcBidMicros = Long.fromString(reader.int64().toString());
          continue;
        case 57:
          if (tag !== 456) {
            break;
          }

          message.effectiveCpcBidMicros = Long.fromString(reader.int64().toString());
          continue;
        case 40:
          if (tag !== 320) {
            break;
          }

          message.cpmBidMicros = Long.fromString(reader.int64().toString());
          continue;
        case 41:
          if (tag !== 328) {
            break;
          }

          message.targetCpaMicros = Long.fromString(reader.int64().toString());
          continue;
        case 42:
          if (tag !== 336) {
            break;
          }

          message.cpvBidMicros = Long.fromString(reader.int64().toString());
          continue;
        case 43:
          if (tag !== 344) {
            break;
          }

          message.targetCpmMicros = Long.fromString(reader.int64().toString());
          continue;
        case 44:
          if (tag !== 353) {
            break;
          }

          message.targetRoas = reader.double();
          continue;
        case 45:
          if (tag !== 360) {
            break;
          }

          message.percentCpcBidMicros = Long.fromString(reader.int64().toString());
          continue;
        case 59:
          if (tag !== 472) {
            break;
          }

          message.optimizedTargetingEnabled = reader.bool();
          continue;
        case 23:
          if (tag !== 184) {
            break;
          }

          message.displayCustomBidDimension = reader.int32() as any;
          continue;
        case 46:
          if (tag !== 370) {
            break;
          }

          message.finalUrlSuffix = reader.string();
          continue;
        case 25:
          if (tag !== 202) {
            break;
          }

          message.targetingSetting = TargetingSetting.decode(reader, reader.uint32());
          continue;
        case 56:
          if (tag !== 450) {
            break;
          }

          message.audienceSetting = AdGroup_AudienceSetting.decode(reader, reader.uint32());
          continue;
        case 47:
          if (tag !== 376) {
            break;
          }

          message.effectiveTargetCpaMicros = Long.fromString(reader.int64().toString());
          continue;
        case 29:
          if (tag !== 232) {
            break;
          }

          message.effectiveTargetCpaSource = reader.int32() as any;
          continue;
        case 48:
          if (tag !== 385) {
            break;
          }

          message.effectiveTargetRoas = reader.double();
          continue;
        case 32:
          if (tag !== 256) {
            break;
          }

          message.effectiveTargetRoasSource = reader.int32() as any;
          continue;
        case 49:
          if (tag !== 394) {
            break;
          }

          message.labels.push(reader.string());
          continue;
        case 54:
          if (tag === 432) {
            message.excludedParentAssetFieldTypes.push(reader.int32() as any);

            continue;
          }

          if (tag === 434) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.excludedParentAssetFieldTypes.push(reader.int32() as any);
            }

            continue;
          }

          break;
        case 58:
          if (tag === 464) {
            message.excludedParentAssetSetTypes.push(reader.int32() as any);

            continue;
          }

          if (tag === 466) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.excludedParentAssetSetTypes.push(reader.int32() as any);
            }

            continue;
          }

          break;
        case 62:
          if (tag !== 496) {
            break;
          }

          message.primaryStatus = reader.int32() as any;
          continue;
        case 63:
          if (tag === 504) {
            message.primaryStatusReasons.push(reader.int32() as any);

            continue;
          }

          if (tag === 506) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.primaryStatusReasons.push(reader.int32() as any);
            }

            continue;
          }

          break;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): AdGroup {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      id: isSet(object.id) ? Long.fromValue(object.id) : undefined,
      name: isSet(object.name) ? globalThis.String(object.name) : undefined,
      status: isSet(object.status) ? adGroupStatusEnum_AdGroupStatusFromJSON(object.status) : 0,
      type: isSet(object.type) ? adGroupTypeEnum_AdGroupTypeFromJSON(object.type) : 0,
      adRotationMode: isSet(object.adRotationMode)
        ? adGroupAdRotationModeEnum_AdGroupAdRotationModeFromJSON(object.adRotationMode)
        : 0,
      baseAdGroup: isSet(object.baseAdGroup) ? globalThis.String(object.baseAdGroup) : undefined,
      trackingUrlTemplate: isSet(object.trackingUrlTemplate)
        ? globalThis.String(object.trackingUrlTemplate)
        : undefined,
      urlCustomParameters: globalThis.Array.isArray(object?.urlCustomParameters)
        ? object.urlCustomParameters.map((e: any) => CustomParameter.fromJSON(e))
        : [],
      campaign: isSet(object.campaign) ? globalThis.String(object.campaign) : undefined,
      cpcBidMicros: isSet(object.cpcBidMicros) ? Long.fromValue(object.cpcBidMicros) : undefined,
      effectiveCpcBidMicros: isSet(object.effectiveCpcBidMicros)
        ? Long.fromValue(object.effectiveCpcBidMicros)
        : undefined,
      cpmBidMicros: isSet(object.cpmBidMicros) ? Long.fromValue(object.cpmBidMicros) : undefined,
      targetCpaMicros: isSet(object.targetCpaMicros) ? Long.fromValue(object.targetCpaMicros) : undefined,
      cpvBidMicros: isSet(object.cpvBidMicros) ? Long.fromValue(object.cpvBidMicros) : undefined,
      targetCpmMicros: isSet(object.targetCpmMicros) ? Long.fromValue(object.targetCpmMicros) : undefined,
      targetRoas: isSet(object.targetRoas) ? globalThis.Number(object.targetRoas) : undefined,
      percentCpcBidMicros: isSet(object.percentCpcBidMicros) ? Long.fromValue(object.percentCpcBidMicros) : undefined,
      optimizedTargetingEnabled: isSet(object.optimizedTargetingEnabled)
        ? globalThis.Boolean(object.optimizedTargetingEnabled)
        : false,
      displayCustomBidDimension: isSet(object.displayCustomBidDimension)
        ? targetingDimensionEnum_TargetingDimensionFromJSON(object.displayCustomBidDimension)
        : 0,
      finalUrlSuffix: isSet(object.finalUrlSuffix) ? globalThis.String(object.finalUrlSuffix) : undefined,
      targetingSetting: isSet(object.targetingSetting) ? TargetingSetting.fromJSON(object.targetingSetting) : undefined,
      audienceSetting: isSet(object.audienceSetting)
        ? AdGroup_AudienceSetting.fromJSON(object.audienceSetting)
        : undefined,
      effectiveTargetCpaMicros: isSet(object.effectiveTargetCpaMicros)
        ? Long.fromValue(object.effectiveTargetCpaMicros)
        : undefined,
      effectiveTargetCpaSource: isSet(object.effectiveTargetCpaSource)
        ? biddingSourceEnum_BiddingSourceFromJSON(object.effectiveTargetCpaSource)
        : 0,
      effectiveTargetRoas: isSet(object.effectiveTargetRoas)
        ? globalThis.Number(object.effectiveTargetRoas)
        : undefined,
      effectiveTargetRoasSource: isSet(object.effectiveTargetRoasSource)
        ? biddingSourceEnum_BiddingSourceFromJSON(object.effectiveTargetRoasSource)
        : 0,
      labels: globalThis.Array.isArray(object?.labels)
        ? object.labels.map((e: any) => globalThis.String(e))
        : [],
      excludedParentAssetFieldTypes: globalThis.Array.isArray(object?.excludedParentAssetFieldTypes)
        ? object.excludedParentAssetFieldTypes.map((e: any) => assetFieldTypeEnum_AssetFieldTypeFromJSON(e))
        : [],
      excludedParentAssetSetTypes: globalThis.Array.isArray(object?.excludedParentAssetSetTypes)
        ? object.excludedParentAssetSetTypes.map((e: any) => assetSetTypeEnum_AssetSetTypeFromJSON(e))
        : [],
      primaryStatus: isSet(object.primaryStatus)
        ? adGroupPrimaryStatusEnum_AdGroupPrimaryStatusFromJSON(object.primaryStatus)
        : 0,
      primaryStatusReasons: globalThis.Array.isArray(object?.primaryStatusReasons)
        ? object.primaryStatusReasons.map((e: any) =>
          adGroupPrimaryStatusReasonEnum_AdGroupPrimaryStatusReasonFromJSON(e)
        )
        : [],
    };
  },

  toJSON(message: AdGroup): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.id !== undefined) {
      obj.id = (message.id || Long.ZERO).toString();
    }
    if (message.name !== undefined) {
      obj.name = message.name;
    }
    if (message.status !== 0) {
      obj.status = adGroupStatusEnum_AdGroupStatusToJSON(message.status);
    }
    if (message.type !== 0) {
      obj.type = adGroupTypeEnum_AdGroupTypeToJSON(message.type);
    }
    if (message.adRotationMode !== 0) {
      obj.adRotationMode = adGroupAdRotationModeEnum_AdGroupAdRotationModeToJSON(message.adRotationMode);
    }
    if (message.baseAdGroup !== undefined) {
      obj.baseAdGroup = message.baseAdGroup;
    }
    if (message.trackingUrlTemplate !== undefined) {
      obj.trackingUrlTemplate = message.trackingUrlTemplate;
    }
    if (message.urlCustomParameters?.length) {
      obj.urlCustomParameters = message.urlCustomParameters.map((e) => CustomParameter.toJSON(e));
    }
    if (message.campaign !== undefined) {
      obj.campaign = message.campaign;
    }
    if (message.cpcBidMicros !== undefined) {
      obj.cpcBidMicros = (message.cpcBidMicros || Long.ZERO).toString();
    }
    if (message.effectiveCpcBidMicros !== undefined) {
      obj.effectiveCpcBidMicros = (message.effectiveCpcBidMicros || Long.ZERO).toString();
    }
    if (message.cpmBidMicros !== undefined) {
      obj.cpmBidMicros = (message.cpmBidMicros || Long.ZERO).toString();
    }
    if (message.targetCpaMicros !== undefined) {
      obj.targetCpaMicros = (message.targetCpaMicros || Long.ZERO).toString();
    }
    if (message.cpvBidMicros !== undefined) {
      obj.cpvBidMicros = (message.cpvBidMicros || Long.ZERO).toString();
    }
    if (message.targetCpmMicros !== undefined) {
      obj.targetCpmMicros = (message.targetCpmMicros || Long.ZERO).toString();
    }
    if (message.targetRoas !== undefined) {
      obj.targetRoas = message.targetRoas;
    }
    if (message.percentCpcBidMicros !== undefined) {
      obj.percentCpcBidMicros = (message.percentCpcBidMicros || Long.ZERO).toString();
    }
    if (message.optimizedTargetingEnabled !== false) {
      obj.optimizedTargetingEnabled = message.optimizedTargetingEnabled;
    }
    if (message.displayCustomBidDimension !== 0) {
      obj.displayCustomBidDimension = targetingDimensionEnum_TargetingDimensionToJSON(
        message.displayCustomBidDimension,
      );
    }
    if (message.finalUrlSuffix !== undefined) {
      obj.finalUrlSuffix = message.finalUrlSuffix;
    }
    if (message.targetingSetting !== undefined) {
      obj.targetingSetting = TargetingSetting.toJSON(message.targetingSetting);
    }
    if (message.audienceSetting !== undefined) {
      obj.audienceSetting = AdGroup_AudienceSetting.toJSON(message.audienceSetting);
    }
    if (message.effectiveTargetCpaMicros !== undefined) {
      obj.effectiveTargetCpaMicros = (message.effectiveTargetCpaMicros || Long.ZERO).toString();
    }
    if (message.effectiveTargetCpaSource !== 0) {
      obj.effectiveTargetCpaSource = biddingSourceEnum_BiddingSourceToJSON(message.effectiveTargetCpaSource);
    }
    if (message.effectiveTargetRoas !== undefined) {
      obj.effectiveTargetRoas = message.effectiveTargetRoas;
    }
    if (message.effectiveTargetRoasSource !== 0) {
      obj.effectiveTargetRoasSource = biddingSourceEnum_BiddingSourceToJSON(message.effectiveTargetRoasSource);
    }
    if (message.labels?.length) {
      obj.labels = message.labels;
    }
    if (message.excludedParentAssetFieldTypes?.length) {
      obj.excludedParentAssetFieldTypes = message.excludedParentAssetFieldTypes.map((e) =>
        assetFieldTypeEnum_AssetFieldTypeToJSON(e)
      );
    }
    if (message.excludedParentAssetSetTypes?.length) {
      obj.excludedParentAssetSetTypes = message.excludedParentAssetSetTypes.map((e) =>
        assetSetTypeEnum_AssetSetTypeToJSON(e)
      );
    }
    if (message.primaryStatus !== 0) {
      obj.primaryStatus = adGroupPrimaryStatusEnum_AdGroupPrimaryStatusToJSON(message.primaryStatus);
    }
    if (message.primaryStatusReasons?.length) {
      obj.primaryStatusReasons = message.primaryStatusReasons.map((e) =>
        adGroupPrimaryStatusReasonEnum_AdGroupPrimaryStatusReasonToJSON(e)
      );
    }
    return obj;
  },

  create(base?: DeepPartial<AdGroup>): AdGroup {
    return AdGroup.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<AdGroup>): AdGroup {
    const message = createBaseAdGroup();
    message.resourceName = object.resourceName ?? "";
    message.id = (object.id !== undefined && object.id !== null) ? Long.fromValue(object.id) : undefined;
    message.name = object.name ?? undefined;
    message.status = object.status ?? 0;
    message.type = object.type ?? 0;
    message.adRotationMode = object.adRotationMode ?? 0;
    message.baseAdGroup = object.baseAdGroup ?? undefined;
    message.trackingUrlTemplate = object.trackingUrlTemplate ?? undefined;
    message.urlCustomParameters = object.urlCustomParameters?.map((e) => CustomParameter.fromPartial(e)) || [];
    message.campaign = object.campaign ?? undefined;
    message.cpcBidMicros = (object.cpcBidMicros !== undefined && object.cpcBidMicros !== null)
      ? Long.fromValue(object.cpcBidMicros)
      : undefined;
    message.effectiveCpcBidMicros =
      (object.effectiveCpcBidMicros !== undefined && object.effectiveCpcBidMicros !== null)
        ? Long.fromValue(object.effectiveCpcBidMicros)
        : undefined;
    message.cpmBidMicros = (object.cpmBidMicros !== undefined && object.cpmBidMicros !== null)
      ? Long.fromValue(object.cpmBidMicros)
      : undefined;
    message.targetCpaMicros = (object.targetCpaMicros !== undefined && object.targetCpaMicros !== null)
      ? Long.fromValue(object.targetCpaMicros)
      : undefined;
    message.cpvBidMicros = (object.cpvBidMicros !== undefined && object.cpvBidMicros !== null)
      ? Long.fromValue(object.cpvBidMicros)
      : undefined;
    message.targetCpmMicros = (object.targetCpmMicros !== undefined && object.targetCpmMicros !== null)
      ? Long.fromValue(object.targetCpmMicros)
      : undefined;
    message.targetRoas = object.targetRoas ?? undefined;
    message.percentCpcBidMicros = (object.percentCpcBidMicros !== undefined && object.percentCpcBidMicros !== null)
      ? Long.fromValue(object.percentCpcBidMicros)
      : undefined;
    message.optimizedTargetingEnabled = object.optimizedTargetingEnabled ?? false;
    message.displayCustomBidDimension = object.displayCustomBidDimension ?? 0;
    message.finalUrlSuffix = object.finalUrlSuffix ?? undefined;
    message.targetingSetting = (object.targetingSetting !== undefined && object.targetingSetting !== null)
      ? TargetingSetting.fromPartial(object.targetingSetting)
      : undefined;
    message.audienceSetting = (object.audienceSetting !== undefined && object.audienceSetting !== null)
      ? AdGroup_AudienceSetting.fromPartial(object.audienceSetting)
      : undefined;
    message.effectiveTargetCpaMicros =
      (object.effectiveTargetCpaMicros !== undefined && object.effectiveTargetCpaMicros !== null)
        ? Long.fromValue(object.effectiveTargetCpaMicros)
        : undefined;
    message.effectiveTargetCpaSource = object.effectiveTargetCpaSource ?? 0;
    message.effectiveTargetRoas = object.effectiveTargetRoas ?? undefined;
    message.effectiveTargetRoasSource = object.effectiveTargetRoasSource ?? 0;
    message.labels = object.labels?.map((e) => e) || [];
    message.excludedParentAssetFieldTypes = object.excludedParentAssetFieldTypes?.map((e) => e) || [];
    message.excludedParentAssetSetTypes = object.excludedParentAssetSetTypes?.map((e) => e) || [];
    message.primaryStatus = object.primaryStatus ?? 0;
    message.primaryStatusReasons = object.primaryStatusReasons?.map((e) => e) || [];
    return message;
  },
};

function createBaseAdGroup_AudienceSetting(): AdGroup_AudienceSetting {
  return { useAudienceGrouped: false };
}

export const AdGroup_AudienceSetting: MessageFns<AdGroup_AudienceSetting> = {
  encode(message: AdGroup_AudienceSetting, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.useAudienceGrouped !== false) {
      writer.uint32(8).bool(message.useAudienceGrouped);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AdGroup_AudienceSetting {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAdGroup_AudienceSetting();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.useAudienceGrouped = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): AdGroup_AudienceSetting {
    return {
      useAudienceGrouped: isSet(object.useAudienceGrouped) ? globalThis.Boolean(object.useAudienceGrouped) : false,
    };
  },

  toJSON(message: AdGroup_AudienceSetting): unknown {
    const obj: any = {};
    if (message.useAudienceGrouped !== false) {
      obj.useAudienceGrouped = message.useAudienceGrouped;
    }
    return obj;
  },

  create(base?: DeepPartial<AdGroup_AudienceSetting>): AdGroup_AudienceSetting {
    return AdGroup_AudienceSetting.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<AdGroup_AudienceSetting>): AdGroup_AudienceSetting {
    const message = createBaseAdGroup_AudienceSetting();
    message.useAudienceGrouped = object.useAudienceGrouped ?? false;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
