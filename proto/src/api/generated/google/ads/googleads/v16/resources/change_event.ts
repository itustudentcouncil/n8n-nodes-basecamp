// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/resources/change_event.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { FieldMask } from "../../../../protobuf/field_mask.js";
import {
  ChangeClientTypeEnum_ChangeClientType,
  changeClientTypeEnum_ChangeClientTypeFromJSON,
  changeClientTypeEnum_ChangeClientTypeToJSON,
} from "../enums/change_client_type.js";
import {
  ChangeEventResourceTypeEnum_ChangeEventResourceType,
  changeEventResourceTypeEnum_ChangeEventResourceTypeFromJSON,
  changeEventResourceTypeEnum_ChangeEventResourceTypeToJSON,
} from "../enums/change_event_resource_type.js";
import {
  ResourceChangeOperationEnum_ResourceChangeOperation,
  resourceChangeOperationEnum_ResourceChangeOperationFromJSON,
  resourceChangeOperationEnum_ResourceChangeOperationToJSON,
} from "../enums/resource_change_operation.js";
import { Ad } from "./ad.js";
import { AdGroup } from "./ad_group.js";
import { AdGroupAd } from "./ad_group_ad.js";
import { AdGroupAsset } from "./ad_group_asset.js";
import { AdGroupBidModifier } from "./ad_group_bid_modifier.js";
import { AdGroupCriterion } from "./ad_group_criterion.js";
import { AdGroupFeed } from "./ad_group_feed.js";
import { Asset } from "./asset.js";
import { AssetSet } from "./asset_set.js";
import { AssetSetAsset } from "./asset_set_asset.js";
import { Campaign } from "./campaign.js";
import { CampaignAsset } from "./campaign_asset.js";
import { CampaignAssetSet } from "./campaign_asset_set.js";
import { CampaignBudget } from "./campaign_budget.js";
import { CampaignCriterion } from "./campaign_criterion.js";
import { CampaignFeed } from "./campaign_feed.js";
import { CustomerAsset } from "./customer_asset.js";
import { Feed } from "./feed.js";
import { FeedItem } from "./feed_item.js";

export const protobufPackage = "google.ads.googleads.v16.resources";

/**
 * Describes the granular change of returned resources of certain resource
 * types. Changes made through the UI or API in the past 30 days are included.
 * Previous and new values of the changed fields are shown. ChangeEvent could
 * have up to 3 minutes delay to reflect a new change.
 */
export interface ChangeEvent {
  /**
   * Output only. The resource name of the change event.
   * Change event resource names have the form:
   *
   * `customers/{customer_id}/changeEvents/{timestamp_micros}~{command_index}~{mutate_index}`
   */
  resourceName: string;
  /** Output only. Time at which the change was committed on this resource. */
  changeDateTime: string;
  /**
   * Output only. The type of the changed resource. This dictates what resource
   * will be set in old_resource and new_resource.
   */
  changeResourceType: ChangeEventResourceTypeEnum_ChangeEventResourceType;
  /** Output only. The Simply resource this change occurred on. */
  changeResourceName: string;
  /** Output only. Where the change was made through. */
  clientType: ChangeClientTypeEnum_ChangeClientType;
  /** Output only. The email of the user who made this change. */
  userEmail: string;
  /**
   * Output only. The old resource before the change. Only changed fields will
   * be populated.
   */
  oldResource:
    | ChangeEvent_ChangedResource
    | undefined;
  /**
   * Output only. The new resource after the change. Only changed fields will be
   * populated.
   */
  newResource:
    | ChangeEvent_ChangedResource
    | undefined;
  /** Output only. The operation on the changed resource. */
  resourceChangeOperation: ResourceChangeOperationEnum_ResourceChangeOperation;
  /** Output only. A list of fields that are changed in the returned resource. */
  changedFields:
    | string[]
    | undefined;
  /** Output only. The Campaign affected by this change. */
  campaign: string;
  /** Output only. The AdGroup affected by this change. */
  adGroup: string;
  /** Output only. The Feed affected by this change. */
  feed: string;
  /** Output only. The FeedItem affected by this change. */
  feedItem: string;
  /** Output only. The Asset affected by this change. */
  asset: string;
}

/**
 * A wrapper proto presenting all supported resources.
 * Only the resource of the change_resource_type will be set.
 */
export interface ChangeEvent_ChangedResource {
  /** Output only. Set if change_resource_type == AD. */
  ad:
    | Ad
    | undefined;
  /** Output only. Set if change_resource_type == AD_GROUP. */
  adGroup:
    | AdGroup
    | undefined;
  /** Output only. Set if change_resource_type == AD_GROUP_CRITERION. */
  adGroupCriterion:
    | AdGroupCriterion
    | undefined;
  /** Output only. Set if change_resource_type == CAMPAIGN. */
  campaign:
    | Campaign
    | undefined;
  /** Output only. Set if change_resource_type == CAMPAIGN_BUDGET. */
  campaignBudget:
    | CampaignBudget
    | undefined;
  /** Output only. Set if change_resource_type == AD_GROUP_BID_MODIFIER. */
  adGroupBidModifier:
    | AdGroupBidModifier
    | undefined;
  /** Output only. Set if change_resource_type == CAMPAIGN_CRITERION. */
  campaignCriterion:
    | CampaignCriterion
    | undefined;
  /** Output only. Set if change_resource_type == FEED. */
  feed:
    | Feed
    | undefined;
  /** Output only. Set if change_resource_type == FEED_ITEM. */
  feedItem:
    | FeedItem
    | undefined;
  /** Output only. Set if change_resource_type == CAMPAIGN_FEED. */
  campaignFeed:
    | CampaignFeed
    | undefined;
  /** Output only. Set if change_resource_type == AD_GROUP_FEED. */
  adGroupFeed:
    | AdGroupFeed
    | undefined;
  /** Output only. Set if change_resource_type == AD_GROUP_AD. */
  adGroupAd:
    | AdGroupAd
    | undefined;
  /** Output only. Set if change_resource_type == ASSET. */
  asset:
    | Asset
    | undefined;
  /** Output only. Set if change_resource_type == CUSTOMER_ASSET. */
  customerAsset:
    | CustomerAsset
    | undefined;
  /** Output only. Set if change_resource_type == CAMPAIGN_ASSET. */
  campaignAsset:
    | CampaignAsset
    | undefined;
  /** Output only. Set if change_resource_type == AD_GROUP_ASSET. */
  adGroupAsset:
    | AdGroupAsset
    | undefined;
  /** Output only. Set if change_resource_type == ASSET_SET. */
  assetSet:
    | AssetSet
    | undefined;
  /** Output only. Set if change_resource_type == ASSET_SET_ASSET. */
  assetSetAsset:
    | AssetSetAsset
    | undefined;
  /** Output only. Set if change_resource_type == CAMPAIGN_ASSET_SET. */
  campaignAssetSet: CampaignAssetSet | undefined;
}

function createBaseChangeEvent(): ChangeEvent {
  return {
    resourceName: "",
    changeDateTime: "",
    changeResourceType: 0,
    changeResourceName: "",
    clientType: 0,
    userEmail: "",
    oldResource: undefined,
    newResource: undefined,
    resourceChangeOperation: 0,
    changedFields: undefined,
    campaign: "",
    adGroup: "",
    feed: "",
    feedItem: "",
    asset: "",
  };
}

export const ChangeEvent: MessageFns<ChangeEvent> = {
  encode(message: ChangeEvent, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.changeDateTime !== "") {
      writer.uint32(18).string(message.changeDateTime);
    }
    if (message.changeResourceType !== 0) {
      writer.uint32(24).int32(message.changeResourceType);
    }
    if (message.changeResourceName !== "") {
      writer.uint32(34).string(message.changeResourceName);
    }
    if (message.clientType !== 0) {
      writer.uint32(40).int32(message.clientType);
    }
    if (message.userEmail !== "") {
      writer.uint32(50).string(message.userEmail);
    }
    if (message.oldResource !== undefined) {
      ChangeEvent_ChangedResource.encode(message.oldResource, writer.uint32(58).fork()).join();
    }
    if (message.newResource !== undefined) {
      ChangeEvent_ChangedResource.encode(message.newResource, writer.uint32(66).fork()).join();
    }
    if (message.resourceChangeOperation !== 0) {
      writer.uint32(72).int32(message.resourceChangeOperation);
    }
    if (message.changedFields !== undefined) {
      FieldMask.encode(FieldMask.wrap(message.changedFields), writer.uint32(82).fork()).join();
    }
    if (message.campaign !== "") {
      writer.uint32(90).string(message.campaign);
    }
    if (message.adGroup !== "") {
      writer.uint32(98).string(message.adGroup);
    }
    if (message.feed !== "") {
      writer.uint32(106).string(message.feed);
    }
    if (message.feedItem !== "") {
      writer.uint32(114).string(message.feedItem);
    }
    if (message.asset !== "") {
      writer.uint32(162).string(message.asset);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ChangeEvent {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseChangeEvent();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.changeDateTime = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.changeResourceType = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.changeResourceName = reader.string();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.clientType = reader.int32() as any;
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.userEmail = reader.string();
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.oldResource = ChangeEvent_ChangedResource.decode(reader, reader.uint32());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.newResource = ChangeEvent_ChangedResource.decode(reader, reader.uint32());
          continue;
        case 9:
          if (tag !== 72) {
            break;
          }

          message.resourceChangeOperation = reader.int32() as any;
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.changedFields = FieldMask.unwrap(FieldMask.decode(reader, reader.uint32()));
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.campaign = reader.string();
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.adGroup = reader.string();
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.feed = reader.string();
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.feedItem = reader.string();
          continue;
        case 20:
          if (tag !== 162) {
            break;
          }

          message.asset = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ChangeEvent {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      changeDateTime: isSet(object.changeDateTime) ? globalThis.String(object.changeDateTime) : "",
      changeResourceType: isSet(object.changeResourceType)
        ? changeEventResourceTypeEnum_ChangeEventResourceTypeFromJSON(object.changeResourceType)
        : 0,
      changeResourceName: isSet(object.changeResourceName) ? globalThis.String(object.changeResourceName) : "",
      clientType: isSet(object.clientType) ? changeClientTypeEnum_ChangeClientTypeFromJSON(object.clientType) : 0,
      userEmail: isSet(object.userEmail) ? globalThis.String(object.userEmail) : "",
      oldResource: isSet(object.oldResource) ? ChangeEvent_ChangedResource.fromJSON(object.oldResource) : undefined,
      newResource: isSet(object.newResource) ? ChangeEvent_ChangedResource.fromJSON(object.newResource) : undefined,
      resourceChangeOperation: isSet(object.resourceChangeOperation)
        ? resourceChangeOperationEnum_ResourceChangeOperationFromJSON(object.resourceChangeOperation)
        : 0,
      changedFields: isSet(object.changedFields)
        ? FieldMask.unwrap(FieldMask.fromJSON(object.changedFields))
        : undefined,
      campaign: isSet(object.campaign) ? globalThis.String(object.campaign) : "",
      adGroup: isSet(object.adGroup) ? globalThis.String(object.adGroup) : "",
      feed: isSet(object.feed) ? globalThis.String(object.feed) : "",
      feedItem: isSet(object.feedItem) ? globalThis.String(object.feedItem) : "",
      asset: isSet(object.asset) ? globalThis.String(object.asset) : "",
    };
  },

  toJSON(message: ChangeEvent): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.changeDateTime !== "") {
      obj.changeDateTime = message.changeDateTime;
    }
    if (message.changeResourceType !== 0) {
      obj.changeResourceType = changeEventResourceTypeEnum_ChangeEventResourceTypeToJSON(message.changeResourceType);
    }
    if (message.changeResourceName !== "") {
      obj.changeResourceName = message.changeResourceName;
    }
    if (message.clientType !== 0) {
      obj.clientType = changeClientTypeEnum_ChangeClientTypeToJSON(message.clientType);
    }
    if (message.userEmail !== "") {
      obj.userEmail = message.userEmail;
    }
    if (message.oldResource !== undefined) {
      obj.oldResource = ChangeEvent_ChangedResource.toJSON(message.oldResource);
    }
    if (message.newResource !== undefined) {
      obj.newResource = ChangeEvent_ChangedResource.toJSON(message.newResource);
    }
    if (message.resourceChangeOperation !== 0) {
      obj.resourceChangeOperation = resourceChangeOperationEnum_ResourceChangeOperationToJSON(
        message.resourceChangeOperation,
      );
    }
    if (message.changedFields !== undefined) {
      obj.changedFields = FieldMask.toJSON(FieldMask.wrap(message.changedFields));
    }
    if (message.campaign !== "") {
      obj.campaign = message.campaign;
    }
    if (message.adGroup !== "") {
      obj.adGroup = message.adGroup;
    }
    if (message.feed !== "") {
      obj.feed = message.feed;
    }
    if (message.feedItem !== "") {
      obj.feedItem = message.feedItem;
    }
    if (message.asset !== "") {
      obj.asset = message.asset;
    }
    return obj;
  },

  create(base?: DeepPartial<ChangeEvent>): ChangeEvent {
    return ChangeEvent.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ChangeEvent>): ChangeEvent {
    const message = createBaseChangeEvent();
    message.resourceName = object.resourceName ?? "";
    message.changeDateTime = object.changeDateTime ?? "";
    message.changeResourceType = object.changeResourceType ?? 0;
    message.changeResourceName = object.changeResourceName ?? "";
    message.clientType = object.clientType ?? 0;
    message.userEmail = object.userEmail ?? "";
    message.oldResource = (object.oldResource !== undefined && object.oldResource !== null)
      ? ChangeEvent_ChangedResource.fromPartial(object.oldResource)
      : undefined;
    message.newResource = (object.newResource !== undefined && object.newResource !== null)
      ? ChangeEvent_ChangedResource.fromPartial(object.newResource)
      : undefined;
    message.resourceChangeOperation = object.resourceChangeOperation ?? 0;
    message.changedFields = object.changedFields ?? undefined;
    message.campaign = object.campaign ?? "";
    message.adGroup = object.adGroup ?? "";
    message.feed = object.feed ?? "";
    message.feedItem = object.feedItem ?? "";
    message.asset = object.asset ?? "";
    return message;
  },
};

function createBaseChangeEvent_ChangedResource(): ChangeEvent_ChangedResource {
  return {
    ad: undefined,
    adGroup: undefined,
    adGroupCriterion: undefined,
    campaign: undefined,
    campaignBudget: undefined,
    adGroupBidModifier: undefined,
    campaignCriterion: undefined,
    feed: undefined,
    feedItem: undefined,
    campaignFeed: undefined,
    adGroupFeed: undefined,
    adGroupAd: undefined,
    asset: undefined,
    customerAsset: undefined,
    campaignAsset: undefined,
    adGroupAsset: undefined,
    assetSet: undefined,
    assetSetAsset: undefined,
    campaignAssetSet: undefined,
  };
}

export const ChangeEvent_ChangedResource: MessageFns<ChangeEvent_ChangedResource> = {
  encode(message: ChangeEvent_ChangedResource, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.ad !== undefined) {
      Ad.encode(message.ad, writer.uint32(10).fork()).join();
    }
    if (message.adGroup !== undefined) {
      AdGroup.encode(message.adGroup, writer.uint32(18).fork()).join();
    }
    if (message.adGroupCriterion !== undefined) {
      AdGroupCriterion.encode(message.adGroupCriterion, writer.uint32(26).fork()).join();
    }
    if (message.campaign !== undefined) {
      Campaign.encode(message.campaign, writer.uint32(34).fork()).join();
    }
    if (message.campaignBudget !== undefined) {
      CampaignBudget.encode(message.campaignBudget, writer.uint32(42).fork()).join();
    }
    if (message.adGroupBidModifier !== undefined) {
      AdGroupBidModifier.encode(message.adGroupBidModifier, writer.uint32(50).fork()).join();
    }
    if (message.campaignCriterion !== undefined) {
      CampaignCriterion.encode(message.campaignCriterion, writer.uint32(58).fork()).join();
    }
    if (message.feed !== undefined) {
      Feed.encode(message.feed, writer.uint32(66).fork()).join();
    }
    if (message.feedItem !== undefined) {
      FeedItem.encode(message.feedItem, writer.uint32(74).fork()).join();
    }
    if (message.campaignFeed !== undefined) {
      CampaignFeed.encode(message.campaignFeed, writer.uint32(82).fork()).join();
    }
    if (message.adGroupFeed !== undefined) {
      AdGroupFeed.encode(message.adGroupFeed, writer.uint32(90).fork()).join();
    }
    if (message.adGroupAd !== undefined) {
      AdGroupAd.encode(message.adGroupAd, writer.uint32(98).fork()).join();
    }
    if (message.asset !== undefined) {
      Asset.encode(message.asset, writer.uint32(106).fork()).join();
    }
    if (message.customerAsset !== undefined) {
      CustomerAsset.encode(message.customerAsset, writer.uint32(114).fork()).join();
    }
    if (message.campaignAsset !== undefined) {
      CampaignAsset.encode(message.campaignAsset, writer.uint32(122).fork()).join();
    }
    if (message.adGroupAsset !== undefined) {
      AdGroupAsset.encode(message.adGroupAsset, writer.uint32(130).fork()).join();
    }
    if (message.assetSet !== undefined) {
      AssetSet.encode(message.assetSet, writer.uint32(138).fork()).join();
    }
    if (message.assetSetAsset !== undefined) {
      AssetSetAsset.encode(message.assetSetAsset, writer.uint32(146).fork()).join();
    }
    if (message.campaignAssetSet !== undefined) {
      CampaignAssetSet.encode(message.campaignAssetSet, writer.uint32(154).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ChangeEvent_ChangedResource {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseChangeEvent_ChangedResource();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.ad = Ad.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.adGroup = AdGroup.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.adGroupCriterion = AdGroupCriterion.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.campaign = Campaign.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.campaignBudget = CampaignBudget.decode(reader, reader.uint32());
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.adGroupBidModifier = AdGroupBidModifier.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.campaignCriterion = CampaignCriterion.decode(reader, reader.uint32());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.feed = Feed.decode(reader, reader.uint32());
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.feedItem = FeedItem.decode(reader, reader.uint32());
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.campaignFeed = CampaignFeed.decode(reader, reader.uint32());
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.adGroupFeed = AdGroupFeed.decode(reader, reader.uint32());
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.adGroupAd = AdGroupAd.decode(reader, reader.uint32());
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.asset = Asset.decode(reader, reader.uint32());
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.customerAsset = CustomerAsset.decode(reader, reader.uint32());
          continue;
        case 15:
          if (tag !== 122) {
            break;
          }

          message.campaignAsset = CampaignAsset.decode(reader, reader.uint32());
          continue;
        case 16:
          if (tag !== 130) {
            break;
          }

          message.adGroupAsset = AdGroupAsset.decode(reader, reader.uint32());
          continue;
        case 17:
          if (tag !== 138) {
            break;
          }

          message.assetSet = AssetSet.decode(reader, reader.uint32());
          continue;
        case 18:
          if (tag !== 146) {
            break;
          }

          message.assetSetAsset = AssetSetAsset.decode(reader, reader.uint32());
          continue;
        case 19:
          if (tag !== 154) {
            break;
          }

          message.campaignAssetSet = CampaignAssetSet.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ChangeEvent_ChangedResource {
    return {
      ad: isSet(object.ad) ? Ad.fromJSON(object.ad) : undefined,
      adGroup: isSet(object.adGroup) ? AdGroup.fromJSON(object.adGroup) : undefined,
      adGroupCriterion: isSet(object.adGroupCriterion) ? AdGroupCriterion.fromJSON(object.adGroupCriterion) : undefined,
      campaign: isSet(object.campaign) ? Campaign.fromJSON(object.campaign) : undefined,
      campaignBudget: isSet(object.campaignBudget) ? CampaignBudget.fromJSON(object.campaignBudget) : undefined,
      adGroupBidModifier: isSet(object.adGroupBidModifier)
        ? AdGroupBidModifier.fromJSON(object.adGroupBidModifier)
        : undefined,
      campaignCriterion: isSet(object.campaignCriterion)
        ? CampaignCriterion.fromJSON(object.campaignCriterion)
        : undefined,
      feed: isSet(object.feed) ? Feed.fromJSON(object.feed) : undefined,
      feedItem: isSet(object.feedItem) ? FeedItem.fromJSON(object.feedItem) : undefined,
      campaignFeed: isSet(object.campaignFeed) ? CampaignFeed.fromJSON(object.campaignFeed) : undefined,
      adGroupFeed: isSet(object.adGroupFeed) ? AdGroupFeed.fromJSON(object.adGroupFeed) : undefined,
      adGroupAd: isSet(object.adGroupAd) ? AdGroupAd.fromJSON(object.adGroupAd) : undefined,
      asset: isSet(object.asset) ? Asset.fromJSON(object.asset) : undefined,
      customerAsset: isSet(object.customerAsset) ? CustomerAsset.fromJSON(object.customerAsset) : undefined,
      campaignAsset: isSet(object.campaignAsset) ? CampaignAsset.fromJSON(object.campaignAsset) : undefined,
      adGroupAsset: isSet(object.adGroupAsset) ? AdGroupAsset.fromJSON(object.adGroupAsset) : undefined,
      assetSet: isSet(object.assetSet) ? AssetSet.fromJSON(object.assetSet) : undefined,
      assetSetAsset: isSet(object.assetSetAsset) ? AssetSetAsset.fromJSON(object.assetSetAsset) : undefined,
      campaignAssetSet: isSet(object.campaignAssetSet) ? CampaignAssetSet.fromJSON(object.campaignAssetSet) : undefined,
    };
  },

  toJSON(message: ChangeEvent_ChangedResource): unknown {
    const obj: any = {};
    if (message.ad !== undefined) {
      obj.ad = Ad.toJSON(message.ad);
    }
    if (message.adGroup !== undefined) {
      obj.adGroup = AdGroup.toJSON(message.adGroup);
    }
    if (message.adGroupCriterion !== undefined) {
      obj.adGroupCriterion = AdGroupCriterion.toJSON(message.adGroupCriterion);
    }
    if (message.campaign !== undefined) {
      obj.campaign = Campaign.toJSON(message.campaign);
    }
    if (message.campaignBudget !== undefined) {
      obj.campaignBudget = CampaignBudget.toJSON(message.campaignBudget);
    }
    if (message.adGroupBidModifier !== undefined) {
      obj.adGroupBidModifier = AdGroupBidModifier.toJSON(message.adGroupBidModifier);
    }
    if (message.campaignCriterion !== undefined) {
      obj.campaignCriterion = CampaignCriterion.toJSON(message.campaignCriterion);
    }
    if (message.feed !== undefined) {
      obj.feed = Feed.toJSON(message.feed);
    }
    if (message.feedItem !== undefined) {
      obj.feedItem = FeedItem.toJSON(message.feedItem);
    }
    if (message.campaignFeed !== undefined) {
      obj.campaignFeed = CampaignFeed.toJSON(message.campaignFeed);
    }
    if (message.adGroupFeed !== undefined) {
      obj.adGroupFeed = AdGroupFeed.toJSON(message.adGroupFeed);
    }
    if (message.adGroupAd !== undefined) {
      obj.adGroupAd = AdGroupAd.toJSON(message.adGroupAd);
    }
    if (message.asset !== undefined) {
      obj.asset = Asset.toJSON(message.asset);
    }
    if (message.customerAsset !== undefined) {
      obj.customerAsset = CustomerAsset.toJSON(message.customerAsset);
    }
    if (message.campaignAsset !== undefined) {
      obj.campaignAsset = CampaignAsset.toJSON(message.campaignAsset);
    }
    if (message.adGroupAsset !== undefined) {
      obj.adGroupAsset = AdGroupAsset.toJSON(message.adGroupAsset);
    }
    if (message.assetSet !== undefined) {
      obj.assetSet = AssetSet.toJSON(message.assetSet);
    }
    if (message.assetSetAsset !== undefined) {
      obj.assetSetAsset = AssetSetAsset.toJSON(message.assetSetAsset);
    }
    if (message.campaignAssetSet !== undefined) {
      obj.campaignAssetSet = CampaignAssetSet.toJSON(message.campaignAssetSet);
    }
    return obj;
  },

  create(base?: DeepPartial<ChangeEvent_ChangedResource>): ChangeEvent_ChangedResource {
    return ChangeEvent_ChangedResource.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ChangeEvent_ChangedResource>): ChangeEvent_ChangedResource {
    const message = createBaseChangeEvent_ChangedResource();
    message.ad = (object.ad !== undefined && object.ad !== null) ? Ad.fromPartial(object.ad) : undefined;
    message.adGroup = (object.adGroup !== undefined && object.adGroup !== null)
      ? AdGroup.fromPartial(object.adGroup)
      : undefined;
    message.adGroupCriterion = (object.adGroupCriterion !== undefined && object.adGroupCriterion !== null)
      ? AdGroupCriterion.fromPartial(object.adGroupCriterion)
      : undefined;
    message.campaign = (object.campaign !== undefined && object.campaign !== null)
      ? Campaign.fromPartial(object.campaign)
      : undefined;
    message.campaignBudget = (object.campaignBudget !== undefined && object.campaignBudget !== null)
      ? CampaignBudget.fromPartial(object.campaignBudget)
      : undefined;
    message.adGroupBidModifier = (object.adGroupBidModifier !== undefined && object.adGroupBidModifier !== null)
      ? AdGroupBidModifier.fromPartial(object.adGroupBidModifier)
      : undefined;
    message.campaignCriterion = (object.campaignCriterion !== undefined && object.campaignCriterion !== null)
      ? CampaignCriterion.fromPartial(object.campaignCriterion)
      : undefined;
    message.feed = (object.feed !== undefined && object.feed !== null) ? Feed.fromPartial(object.feed) : undefined;
    message.feedItem = (object.feedItem !== undefined && object.feedItem !== null)
      ? FeedItem.fromPartial(object.feedItem)
      : undefined;
    message.campaignFeed = (object.campaignFeed !== undefined && object.campaignFeed !== null)
      ? CampaignFeed.fromPartial(object.campaignFeed)
      : undefined;
    message.adGroupFeed = (object.adGroupFeed !== undefined && object.adGroupFeed !== null)
      ? AdGroupFeed.fromPartial(object.adGroupFeed)
      : undefined;
    message.adGroupAd = (object.adGroupAd !== undefined && object.adGroupAd !== null)
      ? AdGroupAd.fromPartial(object.adGroupAd)
      : undefined;
    message.asset = (object.asset !== undefined && object.asset !== null) ? Asset.fromPartial(object.asset) : undefined;
    message.customerAsset = (object.customerAsset !== undefined && object.customerAsset !== null)
      ? CustomerAsset.fromPartial(object.customerAsset)
      : undefined;
    message.campaignAsset = (object.campaignAsset !== undefined && object.campaignAsset !== null)
      ? CampaignAsset.fromPartial(object.campaignAsset)
      : undefined;
    message.adGroupAsset = (object.adGroupAsset !== undefined && object.adGroupAsset !== null)
      ? AdGroupAsset.fromPartial(object.adGroupAsset)
      : undefined;
    message.assetSet = (object.assetSet !== undefined && object.assetSet !== null)
      ? AssetSet.fromPartial(object.assetSet)
      : undefined;
    message.assetSetAsset = (object.assetSetAsset !== undefined && object.assetSetAsset !== null)
      ? AssetSetAsset.fromPartial(object.assetSetAsset)
      : undefined;
    message.campaignAssetSet = (object.campaignAssetSet !== undefined && object.campaignAssetSet !== null)
      ? CampaignAssetSet.fromPartial(object.campaignAssetSet)
      : undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
