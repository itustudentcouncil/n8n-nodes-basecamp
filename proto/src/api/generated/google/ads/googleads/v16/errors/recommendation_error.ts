// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/errors/recommendation_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.errors";

/** Container for enum describing possible errors from applying a recommendation. */
export interface RecommendationErrorEnum {
}

/** Enum describing possible errors from applying a recommendation. */
export enum RecommendationErrorEnum_RecommendationError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /**
   * BUDGET_AMOUNT_TOO_SMALL - The specified budget amount is too low for example, lower than minimum
   * currency unit or lower than ad group minimum cost-per-click.
   */
  BUDGET_AMOUNT_TOO_SMALL = 2,
  /** BUDGET_AMOUNT_TOO_LARGE - The specified budget amount is too large. */
  BUDGET_AMOUNT_TOO_LARGE = 3,
  /**
   * INVALID_BUDGET_AMOUNT - The specified budget amount is not a valid amount, for example, not a
   * multiple of minimum currency unit.
   */
  INVALID_BUDGET_AMOUNT = 4,
  /** POLICY_ERROR - The specified keyword or ad violates ad policy. */
  POLICY_ERROR = 5,
  /**
   * INVALID_BID_AMOUNT - The specified bid amount is not valid, for example, too many fractional
   * digits, or negative amount.
   */
  INVALID_BID_AMOUNT = 6,
  /** ADGROUP_KEYWORD_LIMIT - The number of keywords in ad group have reached the maximum allowed. */
  ADGROUP_KEYWORD_LIMIT = 7,
  /** RECOMMENDATION_ALREADY_APPLIED - The recommendation requested to apply has already been applied. */
  RECOMMENDATION_ALREADY_APPLIED = 8,
  /** RECOMMENDATION_INVALIDATED - The recommendation requested to apply has been invalidated. */
  RECOMMENDATION_INVALIDATED = 9,
  /** TOO_MANY_OPERATIONS - The number of operations in a single request exceeds the maximum allowed. */
  TOO_MANY_OPERATIONS = 10,
  /** NO_OPERATIONS - There are no operations in the request. */
  NO_OPERATIONS = 11,
  /**
   * DIFFERENT_TYPES_NOT_SUPPORTED - Operations with multiple recommendation types are not supported when
   * partial failure mode is not enabled.
   */
  DIFFERENT_TYPES_NOT_SUPPORTED = 12,
  /** DUPLICATE_RESOURCE_NAME - Request contains multiple operations with the same resource_name. */
  DUPLICATE_RESOURCE_NAME = 13,
  /** RECOMMENDATION_ALREADY_DISMISSED - The recommendation requested to dismiss has already been dismissed. */
  RECOMMENDATION_ALREADY_DISMISSED = 14,
  /** INVALID_APPLY_REQUEST - The recommendation apply request was malformed and invalid. */
  INVALID_APPLY_REQUEST = 15,
  /** RECOMMENDATION_TYPE_APPLY_NOT_SUPPORTED - The type of recommendation requested to apply is not supported. */
  RECOMMENDATION_TYPE_APPLY_NOT_SUPPORTED = 17,
  /** INVALID_MULTIPLIER - The target multiplier specified is invalid. */
  INVALID_MULTIPLIER = 18,
  /** ADVERTISING_CHANNEL_TYPE_GENERATE_NOT_SUPPORTED - The passed in advertising_channel_type is not supported. */
  ADVERTISING_CHANNEL_TYPE_GENERATE_NOT_SUPPORTED = 19,
  /** RECOMMENDATION_TYPE_GENERATE_NOT_SUPPORTED - The passed in recommendation_type is not supported. */
  RECOMMENDATION_TYPE_GENERATE_NOT_SUPPORTED = 20,
  /**
   * RECOMMENDATION_TYPES_CANNOT_BE_EMPTY - One or more recommendation_types need to be passed into the generate
   * recommendations request.
   */
  RECOMMENDATION_TYPES_CANNOT_BE_EMPTY = 21,
  UNRECOGNIZED = -1,
}

export function recommendationErrorEnum_RecommendationErrorFromJSON(
  object: any,
): RecommendationErrorEnum_RecommendationError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return RecommendationErrorEnum_RecommendationError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return RecommendationErrorEnum_RecommendationError.UNKNOWN;
    case 2:
    case "BUDGET_AMOUNT_TOO_SMALL":
      return RecommendationErrorEnum_RecommendationError.BUDGET_AMOUNT_TOO_SMALL;
    case 3:
    case "BUDGET_AMOUNT_TOO_LARGE":
      return RecommendationErrorEnum_RecommendationError.BUDGET_AMOUNT_TOO_LARGE;
    case 4:
    case "INVALID_BUDGET_AMOUNT":
      return RecommendationErrorEnum_RecommendationError.INVALID_BUDGET_AMOUNT;
    case 5:
    case "POLICY_ERROR":
      return RecommendationErrorEnum_RecommendationError.POLICY_ERROR;
    case 6:
    case "INVALID_BID_AMOUNT":
      return RecommendationErrorEnum_RecommendationError.INVALID_BID_AMOUNT;
    case 7:
    case "ADGROUP_KEYWORD_LIMIT":
      return RecommendationErrorEnum_RecommendationError.ADGROUP_KEYWORD_LIMIT;
    case 8:
    case "RECOMMENDATION_ALREADY_APPLIED":
      return RecommendationErrorEnum_RecommendationError.RECOMMENDATION_ALREADY_APPLIED;
    case 9:
    case "RECOMMENDATION_INVALIDATED":
      return RecommendationErrorEnum_RecommendationError.RECOMMENDATION_INVALIDATED;
    case 10:
    case "TOO_MANY_OPERATIONS":
      return RecommendationErrorEnum_RecommendationError.TOO_MANY_OPERATIONS;
    case 11:
    case "NO_OPERATIONS":
      return RecommendationErrorEnum_RecommendationError.NO_OPERATIONS;
    case 12:
    case "DIFFERENT_TYPES_NOT_SUPPORTED":
      return RecommendationErrorEnum_RecommendationError.DIFFERENT_TYPES_NOT_SUPPORTED;
    case 13:
    case "DUPLICATE_RESOURCE_NAME":
      return RecommendationErrorEnum_RecommendationError.DUPLICATE_RESOURCE_NAME;
    case 14:
    case "RECOMMENDATION_ALREADY_DISMISSED":
      return RecommendationErrorEnum_RecommendationError.RECOMMENDATION_ALREADY_DISMISSED;
    case 15:
    case "INVALID_APPLY_REQUEST":
      return RecommendationErrorEnum_RecommendationError.INVALID_APPLY_REQUEST;
    case 17:
    case "RECOMMENDATION_TYPE_APPLY_NOT_SUPPORTED":
      return RecommendationErrorEnum_RecommendationError.RECOMMENDATION_TYPE_APPLY_NOT_SUPPORTED;
    case 18:
    case "INVALID_MULTIPLIER":
      return RecommendationErrorEnum_RecommendationError.INVALID_MULTIPLIER;
    case 19:
    case "ADVERTISING_CHANNEL_TYPE_GENERATE_NOT_SUPPORTED":
      return RecommendationErrorEnum_RecommendationError.ADVERTISING_CHANNEL_TYPE_GENERATE_NOT_SUPPORTED;
    case 20:
    case "RECOMMENDATION_TYPE_GENERATE_NOT_SUPPORTED":
      return RecommendationErrorEnum_RecommendationError.RECOMMENDATION_TYPE_GENERATE_NOT_SUPPORTED;
    case 21:
    case "RECOMMENDATION_TYPES_CANNOT_BE_EMPTY":
      return RecommendationErrorEnum_RecommendationError.RECOMMENDATION_TYPES_CANNOT_BE_EMPTY;
    case -1:
    case "UNRECOGNIZED":
    default:
      return RecommendationErrorEnum_RecommendationError.UNRECOGNIZED;
  }
}

export function recommendationErrorEnum_RecommendationErrorToJSON(
  object: RecommendationErrorEnum_RecommendationError,
): string {
  switch (object) {
    case RecommendationErrorEnum_RecommendationError.UNSPECIFIED:
      return "UNSPECIFIED";
    case RecommendationErrorEnum_RecommendationError.UNKNOWN:
      return "UNKNOWN";
    case RecommendationErrorEnum_RecommendationError.BUDGET_AMOUNT_TOO_SMALL:
      return "BUDGET_AMOUNT_TOO_SMALL";
    case RecommendationErrorEnum_RecommendationError.BUDGET_AMOUNT_TOO_LARGE:
      return "BUDGET_AMOUNT_TOO_LARGE";
    case RecommendationErrorEnum_RecommendationError.INVALID_BUDGET_AMOUNT:
      return "INVALID_BUDGET_AMOUNT";
    case RecommendationErrorEnum_RecommendationError.POLICY_ERROR:
      return "POLICY_ERROR";
    case RecommendationErrorEnum_RecommendationError.INVALID_BID_AMOUNT:
      return "INVALID_BID_AMOUNT";
    case RecommendationErrorEnum_RecommendationError.ADGROUP_KEYWORD_LIMIT:
      return "ADGROUP_KEYWORD_LIMIT";
    case RecommendationErrorEnum_RecommendationError.RECOMMENDATION_ALREADY_APPLIED:
      return "RECOMMENDATION_ALREADY_APPLIED";
    case RecommendationErrorEnum_RecommendationError.RECOMMENDATION_INVALIDATED:
      return "RECOMMENDATION_INVALIDATED";
    case RecommendationErrorEnum_RecommendationError.TOO_MANY_OPERATIONS:
      return "TOO_MANY_OPERATIONS";
    case RecommendationErrorEnum_RecommendationError.NO_OPERATIONS:
      return "NO_OPERATIONS";
    case RecommendationErrorEnum_RecommendationError.DIFFERENT_TYPES_NOT_SUPPORTED:
      return "DIFFERENT_TYPES_NOT_SUPPORTED";
    case RecommendationErrorEnum_RecommendationError.DUPLICATE_RESOURCE_NAME:
      return "DUPLICATE_RESOURCE_NAME";
    case RecommendationErrorEnum_RecommendationError.RECOMMENDATION_ALREADY_DISMISSED:
      return "RECOMMENDATION_ALREADY_DISMISSED";
    case RecommendationErrorEnum_RecommendationError.INVALID_APPLY_REQUEST:
      return "INVALID_APPLY_REQUEST";
    case RecommendationErrorEnum_RecommendationError.RECOMMENDATION_TYPE_APPLY_NOT_SUPPORTED:
      return "RECOMMENDATION_TYPE_APPLY_NOT_SUPPORTED";
    case RecommendationErrorEnum_RecommendationError.INVALID_MULTIPLIER:
      return "INVALID_MULTIPLIER";
    case RecommendationErrorEnum_RecommendationError.ADVERTISING_CHANNEL_TYPE_GENERATE_NOT_SUPPORTED:
      return "ADVERTISING_CHANNEL_TYPE_GENERATE_NOT_SUPPORTED";
    case RecommendationErrorEnum_RecommendationError.RECOMMENDATION_TYPE_GENERATE_NOT_SUPPORTED:
      return "RECOMMENDATION_TYPE_GENERATE_NOT_SUPPORTED";
    case RecommendationErrorEnum_RecommendationError.RECOMMENDATION_TYPES_CANNOT_BE_EMPTY:
      return "RECOMMENDATION_TYPES_CANNOT_BE_EMPTY";
    case RecommendationErrorEnum_RecommendationError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseRecommendationErrorEnum(): RecommendationErrorEnum {
  return {};
}

export const RecommendationErrorEnum: MessageFns<RecommendationErrorEnum> = {
  encode(_: RecommendationErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): RecommendationErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRecommendationErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): RecommendationErrorEnum {
    return {};
  },

  toJSON(_: RecommendationErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<RecommendationErrorEnum>): RecommendationErrorEnum {
    return RecommendationErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<RecommendationErrorEnum>): RecommendationErrorEnum {
    const message = createBaseRecommendationErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
