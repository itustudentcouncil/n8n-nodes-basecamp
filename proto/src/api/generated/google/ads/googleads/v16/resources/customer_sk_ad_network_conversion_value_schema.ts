// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/resources/customer_sk_ad_network_conversion_value_schema.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  SkAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValue,
  skAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValueFromJSON,
  skAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValueToJSON,
} from "../enums/sk_ad_network_coarse_conversion_value.js";

export const protobufPackage = "google.ads.googleads.v16.resources";

/** A CustomerSkAdNetworkConversionValueSchema. */
export interface CustomerSkAdNetworkConversionValueSchema {
  /**
   * Output only. The resource name of the schema.
   * CustomerSkAdNetworkConversionValueSchema resource names have the form:
   * customers/{customer_id}/customerSkAdNetworkConversionValueSchemas/{account_link_id}
   */
  resourceName: string;
  /** Output only. The schema for the specified resource. */
  schema: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema | undefined;
}

/** The CustomerLink specific SkAdNetworkConversionValueSchema. */
export interface CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema {
  /** Required. Output only. Apple App Store app ID. */
  appId: string;
  /**
   * Output only. A time window (measured in hours) post-install, after which
   * the App Attribution Partner or advertiser stops calling
   * [updateConversionValue]
   * (https://developer.apple.com/documentation/storekit/skadnetwork/3566697-updateconversionvalue).
   */
  measurementWindowHours: number;
  /**
   * Output only. Fine grained conversion value mappings.
   * For SkAdNetwork versions >= 4.0 that support multiple conversion
   * windows, fine grained conversion value mappings are only applicable to
   * the first postback.
   */
  fineGrainedConversionValueMappings:
    CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings[];
  /**
   * Output only. Per-postback conversion value mappings for postbacks in
   * multiple conversion windows. Only applicable for SkAdNetwork versions
   * >= 4.0.
   */
  postbackMappings: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping[];
}

/** Mappings for fine grained conversion value. */
export interface CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings {
  /**
   * Output only. Fine grained conversion value. Valid values are in the
   * inclusive range [0,63].
   */
  fineGrainedConversionValue: number;
  /**
   * Output only. Conversion events the fine grained conversion value maps
   * to.
   */
  conversionValueMapping:
    | CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
    | undefined;
}

/** Mappings for each postback in multiple conversion windows. */
export interface CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping {
  /**
   * Output only. 0-based index that indicates the order of postback. Valid
   * values are in the inclusive range [0,2].
   */
  postbackSequenceIndex: number;
  /**
   * Output only. Conversion value mappings for all coarse grained
   * conversion values.
   */
  coarseGrainedConversionValueMappings:
    | CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings
    | undefined;
  /**
   * Output only. Coarse grained conversion value that triggers conversion
   * window lock.
   */
  lockWindowCoarseConversionValue?:
    | SkAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValue
    | undefined;
  /**
   * Output only. Fine grained conversion value that triggers conversion
   * window lock.
   */
  lockWindowFineConversionValue?:
    | number
    | undefined;
  /** Output only. Event name that triggers conversion window lock. */
  lockWindowEvent?: string | undefined;
}

/** Mappings for coarse grained conversion values. */
export interface CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings {
  /** Output only. Mapping for "low" coarse conversion value. */
  lowConversionValueMapping:
    | CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
    | undefined;
  /** Output only. Mapping for "medium" coarse conversion value. */
  mediumConversionValueMapping:
    | CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
    | undefined;
  /** Output only. Mapping for "high" coarse conversion value. */
  highConversionValueMapping:
    | CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
    | undefined;
}

/**
 * Represents mapping from one conversion value to one or more conversion
 * events.
 */
export interface CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping {
  /**
   * Output only. The minimum of the time range in which a user was last
   * active during the measurement window.
   */
  minTimePostInstallHours: Long;
  /**
   * Output only. The maximum of the time range in which a user was last
   * active during the measurement window.
   */
  maxTimePostInstallHours: Long;
  /**
   * Output only. The conversion value may be mapped to multiple events with
   * various attributes.
   */
  mappedEvents: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event[];
}

/** Defines a Google conversion event that the conversion value is mapped to. */
export interface CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event {
  /** Output only. Google event name represented by this conversion value. */
  mappedEventName: string;
  /**
   * Output only. The reported currency for the event_revenue. ISO 4217
   * three-letter currency code, for example, "USD"
   */
  currencyCode: string;
  /** Output only. The event revenue range. */
  eventRevenueRange?:
    | CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange
    | undefined;
  /** Output only. The specific event revenue value. */
  eventRevenueValue?:
    | number
    | undefined;
  /** Output only. The event counter range. */
  eventOccurrenceRange?:
    | CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange
    | undefined;
  /** Output only. For specific event counter values. */
  eventCounter?: Long | undefined;
}

/** Defines a range for revenue values. */
export interface CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange {
  /**
   * Output only. For revenue ranges, the minimum value in `currency_code`
   * for which this conversion value would be updated. A value of 0 will
   * be treated as unset.
   */
  minEventRevenue: number;
  /**
   * Output only. For revenue ranges, the maximum value in `currency_code`
   * for which this conversion value would be updated. A value of 0 will
   * be treated as unset.
   */
  maxEventRevenue: number;
}

/** Defines a range for event counter values. */
export interface CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange {
  /**
   * Output only. For event counter ranges, the minimum of the defined
   * range. A value of 0 will be treated as unset.
   */
  minEventCount: Long;
  /**
   * Output only. For event counter ranges, the maximum of the defined
   * range. A value of 0 will be treated as unset.
   */
  maxEventCount: Long;
}

function createBaseCustomerSkAdNetworkConversionValueSchema(): CustomerSkAdNetworkConversionValueSchema {
  return { resourceName: "", schema: undefined };
}

export const CustomerSkAdNetworkConversionValueSchema: MessageFns<CustomerSkAdNetworkConversionValueSchema> = {
  encode(message: CustomerSkAdNetworkConversionValueSchema, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    if (message.schema !== undefined) {
      CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema.encode(
        message.schema,
        writer.uint32(18).fork(),
      ).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomerSkAdNetworkConversionValueSchema {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomerSkAdNetworkConversionValueSchema();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.schema = CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema.decode(
            reader,
            reader.uint32(),
          );
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CustomerSkAdNetworkConversionValueSchema {
    return {
      resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "",
      schema: isSet(object.schema)
        ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema.fromJSON(object.schema)
        : undefined,
    };
  },

  toJSON(message: CustomerSkAdNetworkConversionValueSchema): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    if (message.schema !== undefined) {
      obj.schema = CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema.toJSON(message.schema);
    }
    return obj;
  },

  create(base?: DeepPartial<CustomerSkAdNetworkConversionValueSchema>): CustomerSkAdNetworkConversionValueSchema {
    return CustomerSkAdNetworkConversionValueSchema.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CustomerSkAdNetworkConversionValueSchema>): CustomerSkAdNetworkConversionValueSchema {
    const message = createBaseCustomerSkAdNetworkConversionValueSchema();
    message.resourceName = object.resourceName ?? "";
    message.schema = (object.schema !== undefined && object.schema !== null)
      ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema.fromPartial(object.schema)
      : undefined;
    return message;
  },
};

function createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema(): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema {
  return { appId: "", measurementWindowHours: 0, fineGrainedConversionValueMappings: [], postbackMappings: [] };
}

export const CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema: MessageFns<
  CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema
> = {
  encode(
    message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.appId !== "") {
      writer.uint32(10).string(message.appId);
    }
    if (message.measurementWindowHours !== 0) {
      writer.uint32(16).int32(message.measurementWindowHours);
    }
    for (const v of message.fineGrainedConversionValueMappings) {
      CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings
        .encode(v!, writer.uint32(26).fork()).join();
    }
    for (const v of message.postbackMappings) {
      CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping.encode(
        v!,
        writer.uint32(34).fork(),
      ).join();
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.appId = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.measurementWindowHours = reader.int32();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.fineGrainedConversionValueMappings.push(
            CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings
              .decode(reader, reader.uint32()),
          );
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.postbackMappings.push(
            CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping.decode(
              reader,
              reader.uint32(),
            ),
          );
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema {
    return {
      appId: isSet(object.appId) ? globalThis.String(object.appId) : "",
      measurementWindowHours: isSet(object.measurementWindowHours)
        ? globalThis.Number(object.measurementWindowHours)
        : 0,
      fineGrainedConversionValueMappings: globalThis.Array.isArray(object?.fineGrainedConversionValueMappings)
        ? object.fineGrainedConversionValueMappings.map((e: any) =>
          CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings
            .fromJSON(e)
        )
        : [],
      postbackMappings: globalThis.Array.isArray(object?.postbackMappings)
        ? object.postbackMappings.map((e: any) =>
          CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping.fromJSON(e)
        )
        : [],
    };
  },

  toJSON(message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema): unknown {
    const obj: any = {};
    if (message.appId !== "") {
      obj.appId = message.appId;
    }
    if (message.measurementWindowHours !== 0) {
      obj.measurementWindowHours = Math.round(message.measurementWindowHours);
    }
    if (message.fineGrainedConversionValueMappings?.length) {
      obj.fineGrainedConversionValueMappings = message.fineGrainedConversionValueMappings.map((e) =>
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings
          .toJSON(e)
      );
    }
    if (message.postbackMappings?.length) {
      obj.postbackMappings = message.postbackMappings.map((e) =>
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping.toJSON(e)
      );
    }
    return obj;
  },

  create(
    base?: DeepPartial<CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema>,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema {
    return CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema>,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema {
    const message = createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema();
    message.appId = object.appId ?? "";
    message.measurementWindowHours = object.measurementWindowHours ?? 0;
    message.fineGrainedConversionValueMappings =
      object.fineGrainedConversionValueMappings?.map((e) =>
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings
          .fromPartial(e)
      ) || [];
    message.postbackMappings =
      object.postbackMappings?.map((e) =>
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping.fromPartial(e)
      ) || [];
    return message;
  },
};

function createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings(): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings {
  return { fineGrainedConversionValue: 0, conversionValueMapping: undefined };
}

export const CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings:
  MessageFns<
    CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings
  > = {
    encode(
      message:
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings,
      writer: BinaryWriter = new BinaryWriter(),
    ): BinaryWriter {
      if (message.fineGrainedConversionValue !== 0) {
        writer.uint32(8).int32(message.fineGrainedConversionValue);
      }
      if (message.conversionValueMapping !== undefined) {
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.encode(
          message.conversionValueMapping,
          writer.uint32(18).fork(),
        ).join();
      }
      return writer;
    },

    decode(
      input: BinaryReader | Uint8Array,
      length?: number,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings {
      const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
      let end = length === undefined ? reader.len : reader.pos + length;
      const message =
        createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings();
      while (reader.pos < end) {
        const tag = reader.uint32();
        switch (tag >>> 3) {
          case 1:
            if (tag !== 8) {
              break;
            }

            message.fineGrainedConversionValue = reader.int32();
            continue;
          case 2:
            if (tag !== 18) {
              break;
            }

            message.conversionValueMapping =
              CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.decode(
                reader,
                reader.uint32(),
              );
            continue;
        }
        if ((tag & 7) === 4 || tag === 0) {
          break;
        }
        reader.skip(tag & 7);
      }
      return message;
    },

    fromJSON(
      object: any,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings {
      return {
        fineGrainedConversionValue: isSet(object.fineGrainedConversionValue)
          ? globalThis.Number(object.fineGrainedConversionValue)
          : 0,
        conversionValueMapping: isSet(object.conversionValueMapping)
          ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.fromJSON(
            object.conversionValueMapping,
          )
          : undefined,
      };
    },

    toJSON(
      message:
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings,
    ): unknown {
      const obj: any = {};
      if (message.fineGrainedConversionValue !== 0) {
        obj.fineGrainedConversionValue = Math.round(message.fineGrainedConversionValue);
      }
      if (message.conversionValueMapping !== undefined) {
        obj.conversionValueMapping =
          CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.toJSON(
            message.conversionValueMapping,
          );
      }
      return obj;
    },

    create(
      base?: DeepPartial<
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings
      >,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings {
      return CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings
        .fromPartial(base ?? {});
    },
    fromPartial(
      object: DeepPartial<
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings
      >,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings {
      const message =
        createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_FineGrainedConversionValueMappings();
      message.fineGrainedConversionValue = object.fineGrainedConversionValue ?? 0;
      message.conversionValueMapping =
        (object.conversionValueMapping !== undefined && object.conversionValueMapping !== null)
          ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
            .fromPartial(object.conversionValueMapping)
          : undefined;
      return message;
    },
  };

function createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping(): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping {
  return {
    postbackSequenceIndex: 0,
    coarseGrainedConversionValueMappings: undefined,
    lockWindowCoarseConversionValue: undefined,
    lockWindowFineConversionValue: undefined,
    lockWindowEvent: undefined,
  };
}

export const CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping: MessageFns<
  CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping
> = {
  encode(
    message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.postbackSequenceIndex !== 0) {
      writer.uint32(8).int32(message.postbackSequenceIndex);
    }
    if (message.coarseGrainedConversionValueMappings !== undefined) {
      CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings
        .encode(message.coarseGrainedConversionValueMappings, writer.uint32(18).fork()).join();
    }
    if (message.lockWindowCoarseConversionValue !== undefined) {
      writer.uint32(24).int32(message.lockWindowCoarseConversionValue);
    }
    if (message.lockWindowFineConversionValue !== undefined) {
      writer.uint32(32).int32(message.lockWindowFineConversionValue);
    }
    if (message.lockWindowEvent !== undefined) {
      writer.uint32(42).string(message.lockWindowEvent);
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message =
      createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.postbackSequenceIndex = reader.int32();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.coarseGrainedConversionValueMappings =
            CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings
              .decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.lockWindowCoarseConversionValue = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.lockWindowFineConversionValue = reader.int32();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.lockWindowEvent = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping {
    return {
      postbackSequenceIndex: isSet(object.postbackSequenceIndex) ? globalThis.Number(object.postbackSequenceIndex) : 0,
      coarseGrainedConversionValueMappings: isSet(object.coarseGrainedConversionValueMappings)
        ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings
          .fromJSON(object.coarseGrainedConversionValueMappings)
        : undefined,
      lockWindowCoarseConversionValue: isSet(object.lockWindowCoarseConversionValue)
        ? skAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValueFromJSON(
          object.lockWindowCoarseConversionValue,
        )
        : undefined,
      lockWindowFineConversionValue: isSet(object.lockWindowFineConversionValue)
        ? globalThis.Number(object.lockWindowFineConversionValue)
        : undefined,
      lockWindowEvent: isSet(object.lockWindowEvent) ? globalThis.String(object.lockWindowEvent) : undefined,
    };
  },

  toJSON(message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping): unknown {
    const obj: any = {};
    if (message.postbackSequenceIndex !== 0) {
      obj.postbackSequenceIndex = Math.round(message.postbackSequenceIndex);
    }
    if (message.coarseGrainedConversionValueMappings !== undefined) {
      obj.coarseGrainedConversionValueMappings =
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings
          .toJSON(message.coarseGrainedConversionValueMappings);
    }
    if (message.lockWindowCoarseConversionValue !== undefined) {
      obj.lockWindowCoarseConversionValue = skAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValueToJSON(
        message.lockWindowCoarseConversionValue,
      );
    }
    if (message.lockWindowFineConversionValue !== undefined) {
      obj.lockWindowFineConversionValue = Math.round(message.lockWindowFineConversionValue);
    }
    if (message.lockWindowEvent !== undefined) {
      obj.lockWindowEvent = message.lockWindowEvent;
    }
    return obj;
  },

  create(
    base?: DeepPartial<CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping>,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping {
    return CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping.fromPartial(
      base ?? {},
    );
  },
  fromPartial(
    object: DeepPartial<CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping>,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping {
    const message =
      createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_PostbackMapping();
    message.postbackSequenceIndex = object.postbackSequenceIndex ?? 0;
    message.coarseGrainedConversionValueMappings =
      (object.coarseGrainedConversionValueMappings !== undefined &&
          object.coarseGrainedConversionValueMappings !== null)
        ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings
          .fromPartial(object.coarseGrainedConversionValueMappings)
        : undefined;
    message.lockWindowCoarseConversionValue = object.lockWindowCoarseConversionValue ?? undefined;
    message.lockWindowFineConversionValue = object.lockWindowFineConversionValue ?? undefined;
    message.lockWindowEvent = object.lockWindowEvent ?? undefined;
    return message;
  },
};

function createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings(): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings {
  return {
    lowConversionValueMapping: undefined,
    mediumConversionValueMapping: undefined,
    highConversionValueMapping: undefined,
  };
}

export const CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings:
  MessageFns<
    CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings
  > = {
    encode(
      message:
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings,
      writer: BinaryWriter = new BinaryWriter(),
    ): BinaryWriter {
      if (message.lowConversionValueMapping !== undefined) {
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.encode(
          message.lowConversionValueMapping,
          writer.uint32(10).fork(),
        ).join();
      }
      if (message.mediumConversionValueMapping !== undefined) {
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.encode(
          message.mediumConversionValueMapping,
          writer.uint32(18).fork(),
        ).join();
      }
      if (message.highConversionValueMapping !== undefined) {
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.encode(
          message.highConversionValueMapping,
          writer.uint32(26).fork(),
        ).join();
      }
      return writer;
    },

    decode(
      input: BinaryReader | Uint8Array,
      length?: number,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings {
      const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
      let end = length === undefined ? reader.len : reader.pos + length;
      const message =
        createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings();
      while (reader.pos < end) {
        const tag = reader.uint32();
        switch (tag >>> 3) {
          case 1:
            if (tag !== 10) {
              break;
            }

            message.lowConversionValueMapping =
              CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.decode(
                reader,
                reader.uint32(),
              );
            continue;
          case 2:
            if (tag !== 18) {
              break;
            }

            message.mediumConversionValueMapping =
              CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.decode(
                reader,
                reader.uint32(),
              );
            continue;
          case 3:
            if (tag !== 26) {
              break;
            }

            message.highConversionValueMapping =
              CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.decode(
                reader,
                reader.uint32(),
              );
            continue;
        }
        if ((tag & 7) === 4 || tag === 0) {
          break;
        }
        reader.skip(tag & 7);
      }
      return message;
    },

    fromJSON(
      object: any,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings {
      return {
        lowConversionValueMapping: isSet(object.lowConversionValueMapping)
          ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.fromJSON(
            object.lowConversionValueMapping,
          )
          : undefined,
        mediumConversionValueMapping: isSet(object.mediumConversionValueMapping)
          ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.fromJSON(
            object.mediumConversionValueMapping,
          )
          : undefined,
        highConversionValueMapping: isSet(object.highConversionValueMapping)
          ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.fromJSON(
            object.highConversionValueMapping,
          )
          : undefined,
      };
    },

    toJSON(
      message:
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings,
    ): unknown {
      const obj: any = {};
      if (message.lowConversionValueMapping !== undefined) {
        obj.lowConversionValueMapping =
          CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.toJSON(
            message.lowConversionValueMapping,
          );
      }
      if (message.mediumConversionValueMapping !== undefined) {
        obj.mediumConversionValueMapping =
          CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.toJSON(
            message.mediumConversionValueMapping,
          );
      }
      if (message.highConversionValueMapping !== undefined) {
        obj.highConversionValueMapping =
          CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping.toJSON(
            message.highConversionValueMapping,
          );
      }
      return obj;
    },

    create(
      base?: DeepPartial<
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings
      >,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings {
      return CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings
        .fromPartial(base ?? {});
    },
    fromPartial(
      object: DeepPartial<
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings
      >,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings {
      const message =
        createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_CoarseGrainedConversionValueMappings();
      message.lowConversionValueMapping =
        (object.lowConversionValueMapping !== undefined && object.lowConversionValueMapping !== null)
          ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
            .fromPartial(object.lowConversionValueMapping)
          : undefined;
      message.mediumConversionValueMapping =
        (object.mediumConversionValueMapping !== undefined && object.mediumConversionValueMapping !== null)
          ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
            .fromPartial(object.mediumConversionValueMapping)
          : undefined;
      message.highConversionValueMapping =
        (object.highConversionValueMapping !== undefined && object.highConversionValueMapping !== null)
          ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
            .fromPartial(object.highConversionValueMapping)
          : undefined;
      return message;
    },
  };

function createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping(): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping {
  return { minTimePostInstallHours: Long.ZERO, maxTimePostInstallHours: Long.ZERO, mappedEvents: [] };
}

export const CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping:
  MessageFns<CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping> = {
    encode(
      message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping,
      writer: BinaryWriter = new BinaryWriter(),
    ): BinaryWriter {
      if (!message.minTimePostInstallHours.equals(Long.ZERO)) {
        writer.uint32(8).int64(message.minTimePostInstallHours.toString());
      }
      if (!message.maxTimePostInstallHours.equals(Long.ZERO)) {
        writer.uint32(16).int64(message.maxTimePostInstallHours.toString());
      }
      for (const v of message.mappedEvents) {
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event.encode(
          v!,
          writer.uint32(26).fork(),
        ).join();
      }
      return writer;
    },

    decode(
      input: BinaryReader | Uint8Array,
      length?: number,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping {
      const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
      let end = length === undefined ? reader.len : reader.pos + length;
      const message =
        createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping();
      while (reader.pos < end) {
        const tag = reader.uint32();
        switch (tag >>> 3) {
          case 1:
            if (tag !== 8) {
              break;
            }

            message.minTimePostInstallHours = Long.fromString(reader.int64().toString());
            continue;
          case 2:
            if (tag !== 16) {
              break;
            }

            message.maxTimePostInstallHours = Long.fromString(reader.int64().toString());
            continue;
          case 3:
            if (tag !== 26) {
              break;
            }

            message.mappedEvents.push(
              CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event.decode(
                reader,
                reader.uint32(),
              ),
            );
            continue;
        }
        if ((tag & 7) === 4 || tag === 0) {
          break;
        }
        reader.skip(tag & 7);
      }
      return message;
    },

    fromJSON(
      object: any,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping {
      return {
        minTimePostInstallHours: isSet(object.minTimePostInstallHours)
          ? Long.fromValue(object.minTimePostInstallHours)
          : Long.ZERO,
        maxTimePostInstallHours: isSet(object.maxTimePostInstallHours)
          ? Long.fromValue(object.maxTimePostInstallHours)
          : Long.ZERO,
        mappedEvents: globalThis.Array.isArray(object?.mappedEvents)
          ? object.mappedEvents.map((e: any) =>
            CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event.fromJSON(e)
          )
          : [],
      };
    },

    toJSON(
      message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping,
    ): unknown {
      const obj: any = {};
      if (!message.minTimePostInstallHours.equals(Long.ZERO)) {
        obj.minTimePostInstallHours = (message.minTimePostInstallHours || Long.ZERO).toString();
      }
      if (!message.maxTimePostInstallHours.equals(Long.ZERO)) {
        obj.maxTimePostInstallHours = (message.maxTimePostInstallHours || Long.ZERO).toString();
      }
      if (message.mappedEvents?.length) {
        obj.mappedEvents = message.mappedEvents.map((e) =>
          CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event.toJSON(e)
        );
      }
      return obj;
    },

    create(
      base?: DeepPartial<
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
      >,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping {
      return CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
        .fromPartial(base ?? {});
    },
    fromPartial(
      object: DeepPartial<
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping
      >,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping {
      const message =
        createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_ConversionValueMapping();
      message.minTimePostInstallHours =
        (object.minTimePostInstallHours !== undefined && object.minTimePostInstallHours !== null)
          ? Long.fromValue(object.minTimePostInstallHours)
          : Long.ZERO;
      message.maxTimePostInstallHours =
        (object.maxTimePostInstallHours !== undefined && object.maxTimePostInstallHours !== null)
          ? Long.fromValue(object.maxTimePostInstallHours)
          : Long.ZERO;
      message.mappedEvents =
        object.mappedEvents?.map((e) =>
          CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event.fromPartial(e)
        ) || [];
      return message;
    },
  };

function createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event(): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event {
  return {
    mappedEventName: "",
    currencyCode: "",
    eventRevenueRange: undefined,
    eventRevenueValue: undefined,
    eventOccurrenceRange: undefined,
    eventCounter: undefined,
  };
}

export const CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event: MessageFns<
  CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event
> = {
  encode(
    message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.mappedEventName !== "") {
      writer.uint32(10).string(message.mappedEventName);
    }
    if (message.currencyCode !== "") {
      writer.uint32(18).string(message.currencyCode);
    }
    if (message.eventRevenueRange !== undefined) {
      CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange.encode(
        message.eventRevenueRange,
        writer.uint32(26).fork(),
      ).join();
    }
    if (message.eventRevenueValue !== undefined) {
      writer.uint32(33).double(message.eventRevenueValue);
    }
    if (message.eventOccurrenceRange !== undefined) {
      CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange.encode(
        message.eventOccurrenceRange,
        writer.uint32(42).fork(),
      ).join();
    }
    if (message.eventCounter !== undefined) {
      writer.uint32(48).int64(message.eventCounter.toString());
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.mappedEventName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.currencyCode = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.eventRevenueRange =
            CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange.decode(
              reader,
              reader.uint32(),
            );
          continue;
        case 4:
          if (tag !== 33) {
            break;
          }

          message.eventRevenueValue = reader.double();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.eventOccurrenceRange =
            CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange.decode(
              reader,
              reader.uint32(),
            );
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.eventCounter = Long.fromString(reader.int64().toString());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event {
    return {
      mappedEventName: isSet(object.mappedEventName) ? globalThis.String(object.mappedEventName) : "",
      currencyCode: isSet(object.currencyCode) ? globalThis.String(object.currencyCode) : "",
      eventRevenueRange: isSet(object.eventRevenueRange)
        ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange.fromJSON(
          object.eventRevenueRange,
        )
        : undefined,
      eventRevenueValue: isSet(object.eventRevenueValue) ? globalThis.Number(object.eventRevenueValue) : undefined,
      eventOccurrenceRange: isSet(object.eventOccurrenceRange)
        ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange.fromJSON(
          object.eventOccurrenceRange,
        )
        : undefined,
      eventCounter: isSet(object.eventCounter) ? Long.fromValue(object.eventCounter) : undefined,
    };
  },

  toJSON(message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event): unknown {
    const obj: any = {};
    if (message.mappedEventName !== "") {
      obj.mappedEventName = message.mappedEventName;
    }
    if (message.currencyCode !== "") {
      obj.currencyCode = message.currencyCode;
    }
    if (message.eventRevenueRange !== undefined) {
      obj.eventRevenueRange =
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange.toJSON(
          message.eventRevenueRange,
        );
    }
    if (message.eventRevenueValue !== undefined) {
      obj.eventRevenueValue = message.eventRevenueValue;
    }
    if (message.eventOccurrenceRange !== undefined) {
      obj.eventOccurrenceRange =
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange.toJSON(
          message.eventOccurrenceRange,
        );
    }
    if (message.eventCounter !== undefined) {
      obj.eventCounter = (message.eventCounter || Long.ZERO).toString();
    }
    return obj;
  },

  create(
    base?: DeepPartial<CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event>,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event {
    return CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event>,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event {
    const message = createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event();
    message.mappedEventName = object.mappedEventName ?? "";
    message.currencyCode = object.currencyCode ?? "";
    message.eventRevenueRange = (object.eventRevenueRange !== undefined && object.eventRevenueRange !== null)
      ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange.fromPartial(
        object.eventRevenueRange,
      )
      : undefined;
    message.eventRevenueValue = object.eventRevenueValue ?? undefined;
    message.eventOccurrenceRange = (object.eventOccurrenceRange !== undefined && object.eventOccurrenceRange !== null)
      ? CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange
        .fromPartial(object.eventOccurrenceRange)
      : undefined;
    message.eventCounter = (object.eventCounter !== undefined && object.eventCounter !== null)
      ? Long.fromValue(object.eventCounter)
      : undefined;
    return message;
  },
};

function createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange(): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange {
  return { minEventRevenue: 0, maxEventRevenue: 0 };
}

export const CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange: MessageFns<
  CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange
> = {
  encode(
    message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.minEventRevenue !== 0) {
      writer.uint32(25).double(message.minEventRevenue);
    }
    if (message.maxEventRevenue !== 0) {
      writer.uint32(33).double(message.maxEventRevenue);
    }
    return writer;
  },

  decode(
    input: BinaryReader | Uint8Array,
    length?: number,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message =
      createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 3:
          if (tag !== 25) {
            break;
          }

          message.minEventRevenue = reader.double();
          continue;
        case 4:
          if (tag !== 33) {
            break;
          }

          message.maxEventRevenue = reader.double();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange {
    return {
      minEventRevenue: isSet(object.minEventRevenue) ? globalThis.Number(object.minEventRevenue) : 0,
      maxEventRevenue: isSet(object.maxEventRevenue) ? globalThis.Number(object.maxEventRevenue) : 0,
    };
  },

  toJSON(
    message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange,
  ): unknown {
    const obj: any = {};
    if (message.minEventRevenue !== 0) {
      obj.minEventRevenue = message.minEventRevenue;
    }
    if (message.maxEventRevenue !== 0) {
      obj.maxEventRevenue = message.maxEventRevenue;
    }
    return obj;
  },

  create(
    base?: DeepPartial<CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange>,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange {
    return CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange.fromPartial(
      base ?? {},
    );
  },
  fromPartial(
    object: DeepPartial<CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange>,
  ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange {
    const message =
      createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_RevenueRange();
    message.minEventRevenue = object.minEventRevenue ?? 0;
    message.maxEventRevenue = object.maxEventRevenue ?? 0;
    return message;
  },
};

function createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange(): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange {
  return { minEventCount: Long.ZERO, maxEventCount: Long.ZERO };
}

export const CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange:
  MessageFns<CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange> = {
    encode(
      message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange,
      writer: BinaryWriter = new BinaryWriter(),
    ): BinaryWriter {
      if (!message.minEventCount.equals(Long.ZERO)) {
        writer.uint32(8).int64(message.minEventCount.toString());
      }
      if (!message.maxEventCount.equals(Long.ZERO)) {
        writer.uint32(16).int64(message.maxEventCount.toString());
      }
      return writer;
    },

    decode(
      input: BinaryReader | Uint8Array,
      length?: number,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange {
      const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
      let end = length === undefined ? reader.len : reader.pos + length;
      const message =
        createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange();
      while (reader.pos < end) {
        const tag = reader.uint32();
        switch (tag >>> 3) {
          case 1:
            if (tag !== 8) {
              break;
            }

            message.minEventCount = Long.fromString(reader.int64().toString());
            continue;
          case 2:
            if (tag !== 16) {
              break;
            }

            message.maxEventCount = Long.fromString(reader.int64().toString());
            continue;
        }
        if ((tag & 7) === 4 || tag === 0) {
          break;
        }
        reader.skip(tag & 7);
      }
      return message;
    },

    fromJSON(
      object: any,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange {
      return {
        minEventCount: isSet(object.minEventCount) ? Long.fromValue(object.minEventCount) : Long.ZERO,
        maxEventCount: isSet(object.maxEventCount) ? Long.fromValue(object.maxEventCount) : Long.ZERO,
      };
    },

    toJSON(
      message: CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange,
    ): unknown {
      const obj: any = {};
      if (!message.minEventCount.equals(Long.ZERO)) {
        obj.minEventCount = (message.minEventCount || Long.ZERO).toString();
      }
      if (!message.maxEventCount.equals(Long.ZERO)) {
        obj.maxEventCount = (message.maxEventCount || Long.ZERO).toString();
      }
      return obj;
    },

    create(
      base?: DeepPartial<
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange
      >,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange {
      return CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange
        .fromPartial(base ?? {});
    },
    fromPartial(
      object: DeepPartial<
        CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange
      >,
    ): CustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange {
      const message =
        createBaseCustomerSkAdNetworkConversionValueSchema_SkAdNetworkConversionValueSchema_Event_EventOccurrenceRange();
      message.minEventCount = (object.minEventCount !== undefined && object.minEventCount !== null)
        ? Long.fromValue(object.minEventCount)
        : Long.ZERO;
      message.maxEventCount = (object.maxEventCount !== undefined && object.maxEventCount !== null)
        ? Long.fromValue(object.maxEventCount)
        : Long.ZERO;
      return message;
    },
  };

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
