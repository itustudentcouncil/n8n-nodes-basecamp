// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/enums/ad_network_type.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.enums";

/** Container for enumeration of Google Ads network types. */
export interface AdNetworkTypeEnum {
}

/** Enumerates Google Ads network types. */
export enum AdNetworkTypeEnum_AdNetworkType {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The value is unknown in this version. */
  UNKNOWN = 1,
  /** SEARCH - Google search. */
  SEARCH = 2,
  /** SEARCH_PARTNERS - Search partners. */
  SEARCH_PARTNERS = 3,
  /** CONTENT - Display Network. */
  CONTENT = 4,
  /** MIXED - Cross-network. */
  MIXED = 7,
  /** YOUTUBE - YouTube */
  YOUTUBE = 8,
  /** GOOGLE_TV - Google TV */
  GOOGLE_TV = 9,
  UNRECOGNIZED = -1,
}

export function adNetworkTypeEnum_AdNetworkTypeFromJSON(object: any): AdNetworkTypeEnum_AdNetworkType {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return AdNetworkTypeEnum_AdNetworkType.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return AdNetworkTypeEnum_AdNetworkType.UNKNOWN;
    case 2:
    case "SEARCH":
      return AdNetworkTypeEnum_AdNetworkType.SEARCH;
    case 3:
    case "SEARCH_PARTNERS":
      return AdNetworkTypeEnum_AdNetworkType.SEARCH_PARTNERS;
    case 4:
    case "CONTENT":
      return AdNetworkTypeEnum_AdNetworkType.CONTENT;
    case 7:
    case "MIXED":
      return AdNetworkTypeEnum_AdNetworkType.MIXED;
    case 8:
    case "YOUTUBE":
      return AdNetworkTypeEnum_AdNetworkType.YOUTUBE;
    case 9:
    case "GOOGLE_TV":
      return AdNetworkTypeEnum_AdNetworkType.GOOGLE_TV;
    case -1:
    case "UNRECOGNIZED":
    default:
      return AdNetworkTypeEnum_AdNetworkType.UNRECOGNIZED;
  }
}

export function adNetworkTypeEnum_AdNetworkTypeToJSON(object: AdNetworkTypeEnum_AdNetworkType): string {
  switch (object) {
    case AdNetworkTypeEnum_AdNetworkType.UNSPECIFIED:
      return "UNSPECIFIED";
    case AdNetworkTypeEnum_AdNetworkType.UNKNOWN:
      return "UNKNOWN";
    case AdNetworkTypeEnum_AdNetworkType.SEARCH:
      return "SEARCH";
    case AdNetworkTypeEnum_AdNetworkType.SEARCH_PARTNERS:
      return "SEARCH_PARTNERS";
    case AdNetworkTypeEnum_AdNetworkType.CONTENT:
      return "CONTENT";
    case AdNetworkTypeEnum_AdNetworkType.MIXED:
      return "MIXED";
    case AdNetworkTypeEnum_AdNetworkType.YOUTUBE:
      return "YOUTUBE";
    case AdNetworkTypeEnum_AdNetworkType.GOOGLE_TV:
      return "GOOGLE_TV";
    case AdNetworkTypeEnum_AdNetworkType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseAdNetworkTypeEnum(): AdNetworkTypeEnum {
  return {};
}

export const AdNetworkTypeEnum: MessageFns<AdNetworkTypeEnum> = {
  encode(_: AdNetworkTypeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AdNetworkTypeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAdNetworkTypeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): AdNetworkTypeEnum {
    return {};
  },

  toJSON(_: AdNetworkTypeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<AdNetworkTypeEnum>): AdNetworkTypeEnum {
    return AdNetworkTypeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<AdNetworkTypeEnum>): AdNetworkTypeEnum {
    const message = createBaseAdNetworkTypeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
