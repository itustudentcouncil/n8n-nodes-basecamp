// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/errors/customer_feed_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.errors";

/** Container for enum describing possible customer feed errors. */
export interface CustomerFeedErrorEnum {
}

/** Enum describing possible customer feed errors. */
export enum CustomerFeedErrorEnum_CustomerFeedError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /** FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE - An active feed already exists for this customer and place holder type. */
  FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE = 2,
  /** CANNOT_CREATE_FOR_REMOVED_FEED - The specified feed is removed. */
  CANNOT_CREATE_FOR_REMOVED_FEED = 3,
  /**
   * CANNOT_CREATE_ALREADY_EXISTING_CUSTOMER_FEED - The CustomerFeed already exists. Update should be used to modify the
   * existing CustomerFeed.
   */
  CANNOT_CREATE_ALREADY_EXISTING_CUSTOMER_FEED = 4,
  /** CANNOT_MODIFY_REMOVED_CUSTOMER_FEED - Cannot update removed customer feed. */
  CANNOT_MODIFY_REMOVED_CUSTOMER_FEED = 5,
  /** INVALID_PLACEHOLDER_TYPE - Invalid placeholder type. */
  INVALID_PLACEHOLDER_TYPE = 6,
  /** MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE - Feed mapping for this placeholder type does not exist. */
  MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE = 7,
  /** PLACEHOLDER_TYPE_NOT_ALLOWED_ON_CUSTOMER_FEED - Placeholder not allowed at the account level. */
  PLACEHOLDER_TYPE_NOT_ALLOWED_ON_CUSTOMER_FEED = 8,
  UNRECOGNIZED = -1,
}

export function customerFeedErrorEnum_CustomerFeedErrorFromJSON(object: any): CustomerFeedErrorEnum_CustomerFeedError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return CustomerFeedErrorEnum_CustomerFeedError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return CustomerFeedErrorEnum_CustomerFeedError.UNKNOWN;
    case 2:
    case "FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE":
      return CustomerFeedErrorEnum_CustomerFeedError.FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE;
    case 3:
    case "CANNOT_CREATE_FOR_REMOVED_FEED":
      return CustomerFeedErrorEnum_CustomerFeedError.CANNOT_CREATE_FOR_REMOVED_FEED;
    case 4:
    case "CANNOT_CREATE_ALREADY_EXISTING_CUSTOMER_FEED":
      return CustomerFeedErrorEnum_CustomerFeedError.CANNOT_CREATE_ALREADY_EXISTING_CUSTOMER_FEED;
    case 5:
    case "CANNOT_MODIFY_REMOVED_CUSTOMER_FEED":
      return CustomerFeedErrorEnum_CustomerFeedError.CANNOT_MODIFY_REMOVED_CUSTOMER_FEED;
    case 6:
    case "INVALID_PLACEHOLDER_TYPE":
      return CustomerFeedErrorEnum_CustomerFeedError.INVALID_PLACEHOLDER_TYPE;
    case 7:
    case "MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE":
      return CustomerFeedErrorEnum_CustomerFeedError.MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE;
    case 8:
    case "PLACEHOLDER_TYPE_NOT_ALLOWED_ON_CUSTOMER_FEED":
      return CustomerFeedErrorEnum_CustomerFeedError.PLACEHOLDER_TYPE_NOT_ALLOWED_ON_CUSTOMER_FEED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return CustomerFeedErrorEnum_CustomerFeedError.UNRECOGNIZED;
  }
}

export function customerFeedErrorEnum_CustomerFeedErrorToJSON(object: CustomerFeedErrorEnum_CustomerFeedError): string {
  switch (object) {
    case CustomerFeedErrorEnum_CustomerFeedError.UNSPECIFIED:
      return "UNSPECIFIED";
    case CustomerFeedErrorEnum_CustomerFeedError.UNKNOWN:
      return "UNKNOWN";
    case CustomerFeedErrorEnum_CustomerFeedError.FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE:
      return "FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE";
    case CustomerFeedErrorEnum_CustomerFeedError.CANNOT_CREATE_FOR_REMOVED_FEED:
      return "CANNOT_CREATE_FOR_REMOVED_FEED";
    case CustomerFeedErrorEnum_CustomerFeedError.CANNOT_CREATE_ALREADY_EXISTING_CUSTOMER_FEED:
      return "CANNOT_CREATE_ALREADY_EXISTING_CUSTOMER_FEED";
    case CustomerFeedErrorEnum_CustomerFeedError.CANNOT_MODIFY_REMOVED_CUSTOMER_FEED:
      return "CANNOT_MODIFY_REMOVED_CUSTOMER_FEED";
    case CustomerFeedErrorEnum_CustomerFeedError.INVALID_PLACEHOLDER_TYPE:
      return "INVALID_PLACEHOLDER_TYPE";
    case CustomerFeedErrorEnum_CustomerFeedError.MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE:
      return "MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE";
    case CustomerFeedErrorEnum_CustomerFeedError.PLACEHOLDER_TYPE_NOT_ALLOWED_ON_CUSTOMER_FEED:
      return "PLACEHOLDER_TYPE_NOT_ALLOWED_ON_CUSTOMER_FEED";
    case CustomerFeedErrorEnum_CustomerFeedError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseCustomerFeedErrorEnum(): CustomerFeedErrorEnum {
  return {};
}

export const CustomerFeedErrorEnum: MessageFns<CustomerFeedErrorEnum> = {
  encode(_: CustomerFeedErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CustomerFeedErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCustomerFeedErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): CustomerFeedErrorEnum {
    return {};
  },

  toJSON(_: CustomerFeedErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<CustomerFeedErrorEnum>): CustomerFeedErrorEnum {
    return CustomerFeedErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<CustomerFeedErrorEnum>): CustomerFeedErrorEnum {
    const message = createBaseCustomerFeedErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
