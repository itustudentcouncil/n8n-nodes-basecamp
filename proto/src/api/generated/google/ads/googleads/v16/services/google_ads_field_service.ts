// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/services/google_ads_field_service.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import { type CallContext, type CallOptions } from "nice-grpc-common";
import { GoogleAdsField } from "../resources/google_ads_field.js";

export const protobufPackage = "google.ads.googleads.v16.services";

/**
 * Request message for
 * [GoogleAdsFieldService.GetGoogleAdsField][google.ads.googleads.v16.services.GoogleAdsFieldService.GetGoogleAdsField].
 */
export interface GetGoogleAdsFieldRequest {
  /** Required. The resource name of the field to get. */
  resourceName: string;
}

/**
 * Request message for
 * [GoogleAdsFieldService.SearchGoogleAdsFields][google.ads.googleads.v16.services.GoogleAdsFieldService.SearchGoogleAdsFields].
 */
export interface SearchGoogleAdsFieldsRequest {
  /** Required. The query string. */
  query: string;
  /**
   * Token of the page to retrieve. If not specified, the first page of
   * results will be returned. Use the value obtained from `next_page_token`
   * in the previous response in order to request the next page of results.
   */
  pageToken: string;
  /**
   * Number of elements to retrieve in a single page.
   * When too large a page is requested, the server may decide to further
   * limit the number of returned resources.
   */
  pageSize: number;
}

/**
 * Response message for
 * [GoogleAdsFieldService.SearchGoogleAdsFields][google.ads.googleads.v16.services.GoogleAdsFieldService.SearchGoogleAdsFields].
 */
export interface SearchGoogleAdsFieldsResponse {
  /** The list of fields that matched the query. */
  results: GoogleAdsField[];
  /**
   * Pagination token used to retrieve the next page of results. Pass the
   * content of this string as the `page_token` attribute of the next request.
   * `next_page_token` is not returned for the last page.
   */
  nextPageToken: string;
  /** Total number of results that match the query ignoring the LIMIT clause. */
  totalResultsCount: Long;
}

function createBaseGetGoogleAdsFieldRequest(): GetGoogleAdsFieldRequest {
  return { resourceName: "" };
}

export const GetGoogleAdsFieldRequest: MessageFns<GetGoogleAdsFieldRequest> = {
  encode(message: GetGoogleAdsFieldRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.resourceName !== "") {
      writer.uint32(10).string(message.resourceName);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GetGoogleAdsFieldRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetGoogleAdsFieldRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.resourceName = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetGoogleAdsFieldRequest {
    return { resourceName: isSet(object.resourceName) ? globalThis.String(object.resourceName) : "" };
  },

  toJSON(message: GetGoogleAdsFieldRequest): unknown {
    const obj: any = {};
    if (message.resourceName !== "") {
      obj.resourceName = message.resourceName;
    }
    return obj;
  },

  create(base?: DeepPartial<GetGoogleAdsFieldRequest>): GetGoogleAdsFieldRequest {
    return GetGoogleAdsFieldRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GetGoogleAdsFieldRequest>): GetGoogleAdsFieldRequest {
    const message = createBaseGetGoogleAdsFieldRequest();
    message.resourceName = object.resourceName ?? "";
    return message;
  },
};

function createBaseSearchGoogleAdsFieldsRequest(): SearchGoogleAdsFieldsRequest {
  return { query: "", pageToken: "", pageSize: 0 };
}

export const SearchGoogleAdsFieldsRequest: MessageFns<SearchGoogleAdsFieldsRequest> = {
  encode(message: SearchGoogleAdsFieldsRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.query !== "") {
      writer.uint32(10).string(message.query);
    }
    if (message.pageToken !== "") {
      writer.uint32(18).string(message.pageToken);
    }
    if (message.pageSize !== 0) {
      writer.uint32(24).int32(message.pageSize);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SearchGoogleAdsFieldsRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSearchGoogleAdsFieldsRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.query = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.pageToken = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.pageSize = reader.int32();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SearchGoogleAdsFieldsRequest {
    return {
      query: isSet(object.query) ? globalThis.String(object.query) : "",
      pageToken: isSet(object.pageToken) ? globalThis.String(object.pageToken) : "",
      pageSize: isSet(object.pageSize) ? globalThis.Number(object.pageSize) : 0,
    };
  },

  toJSON(message: SearchGoogleAdsFieldsRequest): unknown {
    const obj: any = {};
    if (message.query !== "") {
      obj.query = message.query;
    }
    if (message.pageToken !== "") {
      obj.pageToken = message.pageToken;
    }
    if (message.pageSize !== 0) {
      obj.pageSize = Math.round(message.pageSize);
    }
    return obj;
  },

  create(base?: DeepPartial<SearchGoogleAdsFieldsRequest>): SearchGoogleAdsFieldsRequest {
    return SearchGoogleAdsFieldsRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SearchGoogleAdsFieldsRequest>): SearchGoogleAdsFieldsRequest {
    const message = createBaseSearchGoogleAdsFieldsRequest();
    message.query = object.query ?? "";
    message.pageToken = object.pageToken ?? "";
    message.pageSize = object.pageSize ?? 0;
    return message;
  },
};

function createBaseSearchGoogleAdsFieldsResponse(): SearchGoogleAdsFieldsResponse {
  return { results: [], nextPageToken: "", totalResultsCount: Long.ZERO };
}

export const SearchGoogleAdsFieldsResponse: MessageFns<SearchGoogleAdsFieldsResponse> = {
  encode(message: SearchGoogleAdsFieldsResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.results) {
      GoogleAdsField.encode(v!, writer.uint32(10).fork()).join();
    }
    if (message.nextPageToken !== "") {
      writer.uint32(18).string(message.nextPageToken);
    }
    if (!message.totalResultsCount.equals(Long.ZERO)) {
      writer.uint32(24).int64(message.totalResultsCount.toString());
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SearchGoogleAdsFieldsResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSearchGoogleAdsFieldsResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.results.push(GoogleAdsField.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.nextPageToken = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.totalResultsCount = Long.fromString(reader.int64().toString());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SearchGoogleAdsFieldsResponse {
    return {
      results: globalThis.Array.isArray(object?.results)
        ? object.results.map((e: any) => GoogleAdsField.fromJSON(e))
        : [],
      nextPageToken: isSet(object.nextPageToken) ? globalThis.String(object.nextPageToken) : "",
      totalResultsCount: isSet(object.totalResultsCount) ? Long.fromValue(object.totalResultsCount) : Long.ZERO,
    };
  },

  toJSON(message: SearchGoogleAdsFieldsResponse): unknown {
    const obj: any = {};
    if (message.results?.length) {
      obj.results = message.results.map((e) => GoogleAdsField.toJSON(e));
    }
    if (message.nextPageToken !== "") {
      obj.nextPageToken = message.nextPageToken;
    }
    if (!message.totalResultsCount.equals(Long.ZERO)) {
      obj.totalResultsCount = (message.totalResultsCount || Long.ZERO).toString();
    }
    return obj;
  },

  create(base?: DeepPartial<SearchGoogleAdsFieldsResponse>): SearchGoogleAdsFieldsResponse {
    return SearchGoogleAdsFieldsResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SearchGoogleAdsFieldsResponse>): SearchGoogleAdsFieldsResponse {
    const message = createBaseSearchGoogleAdsFieldsResponse();
    message.results = object.results?.map((e) => GoogleAdsField.fromPartial(e)) || [];
    message.nextPageToken = object.nextPageToken ?? "";
    message.totalResultsCount = (object.totalResultsCount !== undefined && object.totalResultsCount !== null)
      ? Long.fromValue(object.totalResultsCount)
      : Long.ZERO;
    return message;
  },
};

/** Service to fetch Google Ads API fields. */
export type GoogleAdsFieldServiceDefinition = typeof GoogleAdsFieldServiceDefinition;
export const GoogleAdsFieldServiceDefinition = {
  name: "GoogleAdsFieldService",
  fullName: "google.ads.googleads.v16.services.GoogleAdsFieldService",
  methods: {
    /**
     * Returns just the requested field.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QuotaError]()
     *   [RequestError]()
     */
    getGoogleAdsField: {
      name: "GetGoogleAdsField",
      requestType: GetGoogleAdsFieldRequest,
      requestStream: false,
      responseType: GoogleAdsField,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([13, 114, 101, 115, 111, 117, 114, 99, 101, 95, 110, 97, 109, 101])],
          578365826: [
            Buffer.from([
              40,
              18,
              38,
              47,
              118,
              49,
              54,
              47,
              123,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              110,
              97,
              109,
              101,
              61,
              103,
              111,
              111,
              103,
              108,
              101,
              65,
              100,
              115,
              70,
              105,
              101,
              108,
              100,
              115,
              47,
              42,
              125,
            ]),
          ],
        },
      },
    },
    /**
     * Returns all fields that match the search query.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [QueryError]()
     *   [QuotaError]()
     *   [RequestError]()
     */
    searchGoogleAdsFields: {
      name: "SearchGoogleAdsFields",
      requestType: SearchGoogleAdsFieldsRequest,
      requestStream: false,
      responseType: SearchGoogleAdsFieldsResponse,
      responseStream: false,
      options: {
        _unknownFields: {
          8410: [Buffer.from([5, 113, 117, 101, 114, 121])],
          578365826: [
            Buffer.from([
              32,
              58,
              1,
              42,
              34,
              27,
              47,
              118,
              49,
              54,
              47,
              103,
              111,
              111,
              103,
              108,
              101,
              65,
              100,
              115,
              70,
              105,
              101,
              108,
              100,
              115,
              58,
              115,
              101,
              97,
              114,
              99,
              104,
            ]),
          ],
        },
      },
    },
  },
} as const;

export interface GoogleAdsFieldServiceImplementation<CallContextExt = {}> {
  /**
   * Returns just the requested field.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  getGoogleAdsField(
    request: GetGoogleAdsFieldRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<GoogleAdsField>>;
  /**
   * Returns all fields that match the search query.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QueryError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  searchGoogleAdsFields(
    request: SearchGoogleAdsFieldsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<SearchGoogleAdsFieldsResponse>>;
}

export interface GoogleAdsFieldServiceClient<CallOptionsExt = {}> {
  /**
   * Returns just the requested field.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  getGoogleAdsField(
    request: DeepPartial<GetGoogleAdsFieldRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<GoogleAdsField>;
  /**
   * Returns all fields that match the search query.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [QueryError]()
   *   [QuotaError]()
   *   [RequestError]()
   */
  searchGoogleAdsFields(
    request: DeepPartial<SearchGoogleAdsFieldsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<SearchGoogleAdsFieldsResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
