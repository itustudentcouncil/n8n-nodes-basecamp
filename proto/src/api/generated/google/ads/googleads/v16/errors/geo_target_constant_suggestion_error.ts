// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/errors/geo_target_constant_suggestion_error.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.errors";

/** Container for enum describing possible geo target constant suggestion errors. */
export interface GeoTargetConstantSuggestionErrorEnum {
}

/** Enum describing possible geo target constant suggestion errors. */
export enum GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError {
  /** UNSPECIFIED - Enum unspecified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - The received error code is not known in this version. */
  UNKNOWN = 1,
  /** LOCATION_NAME_SIZE_LIMIT - A location name cannot be greater than 300 characters. */
  LOCATION_NAME_SIZE_LIMIT = 2,
  /**
   * LOCATION_NAME_LIMIT - At most 25 location names can be specified in a SuggestGeoTargetConstants
   * method.
   */
  LOCATION_NAME_LIMIT = 3,
  /** INVALID_COUNTRY_CODE - The country code is invalid. */
  INVALID_COUNTRY_CODE = 4,
  /**
   * REQUEST_PARAMETERS_UNSET - Geo target constant resource names or location names must be provided in
   * the request.
   */
  REQUEST_PARAMETERS_UNSET = 5,
  UNRECOGNIZED = -1,
}

export function geoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionErrorFromJSON(
  object: any,
): GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.UNKNOWN;
    case 2:
    case "LOCATION_NAME_SIZE_LIMIT":
      return GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.LOCATION_NAME_SIZE_LIMIT;
    case 3:
    case "LOCATION_NAME_LIMIT":
      return GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.LOCATION_NAME_LIMIT;
    case 4:
    case "INVALID_COUNTRY_CODE":
      return GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.INVALID_COUNTRY_CODE;
    case 5:
    case "REQUEST_PARAMETERS_UNSET":
      return GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.REQUEST_PARAMETERS_UNSET;
    case -1:
    case "UNRECOGNIZED":
    default:
      return GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.UNRECOGNIZED;
  }
}

export function geoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionErrorToJSON(
  object: GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError,
): string {
  switch (object) {
    case GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.UNSPECIFIED:
      return "UNSPECIFIED";
    case GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.UNKNOWN:
      return "UNKNOWN";
    case GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.LOCATION_NAME_SIZE_LIMIT:
      return "LOCATION_NAME_SIZE_LIMIT";
    case GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.LOCATION_NAME_LIMIT:
      return "LOCATION_NAME_LIMIT";
    case GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.INVALID_COUNTRY_CODE:
      return "INVALID_COUNTRY_CODE";
    case GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.REQUEST_PARAMETERS_UNSET:
      return "REQUEST_PARAMETERS_UNSET";
    case GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseGeoTargetConstantSuggestionErrorEnum(): GeoTargetConstantSuggestionErrorEnum {
  return {};
}

export const GeoTargetConstantSuggestionErrorEnum: MessageFns<GeoTargetConstantSuggestionErrorEnum> = {
  encode(_: GeoTargetConstantSuggestionErrorEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GeoTargetConstantSuggestionErrorEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGeoTargetConstantSuggestionErrorEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): GeoTargetConstantSuggestionErrorEnum {
    return {};
  },

  toJSON(_: GeoTargetConstantSuggestionErrorEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<GeoTargetConstantSuggestionErrorEnum>): GeoTargetConstantSuggestionErrorEnum {
    return GeoTargetConstantSuggestionErrorEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<GeoTargetConstantSuggestionErrorEnum>): GeoTargetConstantSuggestionErrorEnum {
    const message = createBaseGeoTargetConstantSuggestionErrorEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
