// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/enums/content_label_type.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export const protobufPackage = "google.ads.googleads.v16.enums";

/** Container for enum describing content label types in ContentLabel. */
export interface ContentLabelTypeEnum {
}

/** Enum listing the content label types supported by ContentLabel criterion. */
export enum ContentLabelTypeEnum_ContentLabelType {
  /** UNSPECIFIED - Not specified. */
  UNSPECIFIED = 0,
  /** UNKNOWN - Used for return value only. Represents value unknown in this version. */
  UNKNOWN = 1,
  /** SEXUALLY_SUGGESTIVE - Sexually suggestive content. */
  SEXUALLY_SUGGESTIVE = 2,
  /** BELOW_THE_FOLD - Below the fold placement. */
  BELOW_THE_FOLD = 3,
  /** PARKED_DOMAIN - Parked domain. */
  PARKED_DOMAIN = 4,
  /** JUVENILE - Juvenile, gross & bizarre content. */
  JUVENILE = 6,
  /** PROFANITY - Profanity & rough language. */
  PROFANITY = 7,
  /** TRAGEDY - Death & tragedy. */
  TRAGEDY = 8,
  /** VIDEO - Video. */
  VIDEO = 9,
  /** VIDEO_RATING_DV_G - Content rating: G. */
  VIDEO_RATING_DV_G = 10,
  /** VIDEO_RATING_DV_PG - Content rating: PG. */
  VIDEO_RATING_DV_PG = 11,
  /** VIDEO_RATING_DV_T - Content rating: T. */
  VIDEO_RATING_DV_T = 12,
  /** VIDEO_RATING_DV_MA - Content rating: MA. */
  VIDEO_RATING_DV_MA = 13,
  /** VIDEO_NOT_YET_RATED - Content rating: not yet rated. */
  VIDEO_NOT_YET_RATED = 14,
  /** EMBEDDED_VIDEO - Embedded video. */
  EMBEDDED_VIDEO = 15,
  /** LIVE_STREAMING_VIDEO - Live streaming video. */
  LIVE_STREAMING_VIDEO = 16,
  /** SOCIAL_ISSUES - Sensitive social issues. */
  SOCIAL_ISSUES = 17,
  UNRECOGNIZED = -1,
}

export function contentLabelTypeEnum_ContentLabelTypeFromJSON(object: any): ContentLabelTypeEnum_ContentLabelType {
  switch (object) {
    case 0:
    case "UNSPECIFIED":
      return ContentLabelTypeEnum_ContentLabelType.UNSPECIFIED;
    case 1:
    case "UNKNOWN":
      return ContentLabelTypeEnum_ContentLabelType.UNKNOWN;
    case 2:
    case "SEXUALLY_SUGGESTIVE":
      return ContentLabelTypeEnum_ContentLabelType.SEXUALLY_SUGGESTIVE;
    case 3:
    case "BELOW_THE_FOLD":
      return ContentLabelTypeEnum_ContentLabelType.BELOW_THE_FOLD;
    case 4:
    case "PARKED_DOMAIN":
      return ContentLabelTypeEnum_ContentLabelType.PARKED_DOMAIN;
    case 6:
    case "JUVENILE":
      return ContentLabelTypeEnum_ContentLabelType.JUVENILE;
    case 7:
    case "PROFANITY":
      return ContentLabelTypeEnum_ContentLabelType.PROFANITY;
    case 8:
    case "TRAGEDY":
      return ContentLabelTypeEnum_ContentLabelType.TRAGEDY;
    case 9:
    case "VIDEO":
      return ContentLabelTypeEnum_ContentLabelType.VIDEO;
    case 10:
    case "VIDEO_RATING_DV_G":
      return ContentLabelTypeEnum_ContentLabelType.VIDEO_RATING_DV_G;
    case 11:
    case "VIDEO_RATING_DV_PG":
      return ContentLabelTypeEnum_ContentLabelType.VIDEO_RATING_DV_PG;
    case 12:
    case "VIDEO_RATING_DV_T":
      return ContentLabelTypeEnum_ContentLabelType.VIDEO_RATING_DV_T;
    case 13:
    case "VIDEO_RATING_DV_MA":
      return ContentLabelTypeEnum_ContentLabelType.VIDEO_RATING_DV_MA;
    case 14:
    case "VIDEO_NOT_YET_RATED":
      return ContentLabelTypeEnum_ContentLabelType.VIDEO_NOT_YET_RATED;
    case 15:
    case "EMBEDDED_VIDEO":
      return ContentLabelTypeEnum_ContentLabelType.EMBEDDED_VIDEO;
    case 16:
    case "LIVE_STREAMING_VIDEO":
      return ContentLabelTypeEnum_ContentLabelType.LIVE_STREAMING_VIDEO;
    case 17:
    case "SOCIAL_ISSUES":
      return ContentLabelTypeEnum_ContentLabelType.SOCIAL_ISSUES;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ContentLabelTypeEnum_ContentLabelType.UNRECOGNIZED;
  }
}

export function contentLabelTypeEnum_ContentLabelTypeToJSON(object: ContentLabelTypeEnum_ContentLabelType): string {
  switch (object) {
    case ContentLabelTypeEnum_ContentLabelType.UNSPECIFIED:
      return "UNSPECIFIED";
    case ContentLabelTypeEnum_ContentLabelType.UNKNOWN:
      return "UNKNOWN";
    case ContentLabelTypeEnum_ContentLabelType.SEXUALLY_SUGGESTIVE:
      return "SEXUALLY_SUGGESTIVE";
    case ContentLabelTypeEnum_ContentLabelType.BELOW_THE_FOLD:
      return "BELOW_THE_FOLD";
    case ContentLabelTypeEnum_ContentLabelType.PARKED_DOMAIN:
      return "PARKED_DOMAIN";
    case ContentLabelTypeEnum_ContentLabelType.JUVENILE:
      return "JUVENILE";
    case ContentLabelTypeEnum_ContentLabelType.PROFANITY:
      return "PROFANITY";
    case ContentLabelTypeEnum_ContentLabelType.TRAGEDY:
      return "TRAGEDY";
    case ContentLabelTypeEnum_ContentLabelType.VIDEO:
      return "VIDEO";
    case ContentLabelTypeEnum_ContentLabelType.VIDEO_RATING_DV_G:
      return "VIDEO_RATING_DV_G";
    case ContentLabelTypeEnum_ContentLabelType.VIDEO_RATING_DV_PG:
      return "VIDEO_RATING_DV_PG";
    case ContentLabelTypeEnum_ContentLabelType.VIDEO_RATING_DV_T:
      return "VIDEO_RATING_DV_T";
    case ContentLabelTypeEnum_ContentLabelType.VIDEO_RATING_DV_MA:
      return "VIDEO_RATING_DV_MA";
    case ContentLabelTypeEnum_ContentLabelType.VIDEO_NOT_YET_RATED:
      return "VIDEO_NOT_YET_RATED";
    case ContentLabelTypeEnum_ContentLabelType.EMBEDDED_VIDEO:
      return "EMBEDDED_VIDEO";
    case ContentLabelTypeEnum_ContentLabelType.LIVE_STREAMING_VIDEO:
      return "LIVE_STREAMING_VIDEO";
    case ContentLabelTypeEnum_ContentLabelType.SOCIAL_ISSUES:
      return "SOCIAL_ISSUES";
    case ContentLabelTypeEnum_ContentLabelType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

function createBaseContentLabelTypeEnum(): ContentLabelTypeEnum {
  return {};
}

export const ContentLabelTypeEnum: MessageFns<ContentLabelTypeEnum> = {
  encode(_: ContentLabelTypeEnum, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ContentLabelTypeEnum {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseContentLabelTypeEnum();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): ContentLabelTypeEnum {
    return {};
  },

  toJSON(_: ContentLabelTypeEnum): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<ContentLabelTypeEnum>): ContentLabelTypeEnum {
    return ContentLabelTypeEnum.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<ContentLabelTypeEnum>): ContentLabelTypeEnum {
    const message = createBaseContentLabelTypeEnum();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
