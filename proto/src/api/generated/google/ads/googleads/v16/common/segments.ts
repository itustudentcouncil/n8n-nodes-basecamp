// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: google/ads/googleads/v16/common/segments.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";
import {
  AdDestinationTypeEnum_AdDestinationType,
  adDestinationTypeEnum_AdDestinationTypeFromJSON,
  adDestinationTypeEnum_AdDestinationTypeToJSON,
} from "../enums/ad_destination_type.js";
import {
  AdNetworkTypeEnum_AdNetworkType,
  adNetworkTypeEnum_AdNetworkTypeFromJSON,
  adNetworkTypeEnum_AdNetworkTypeToJSON,
} from "../enums/ad_network_type.js";
import {
  BudgetCampaignAssociationStatusEnum_BudgetCampaignAssociationStatus,
  budgetCampaignAssociationStatusEnum_BudgetCampaignAssociationStatusFromJSON,
  budgetCampaignAssociationStatusEnum_BudgetCampaignAssociationStatusToJSON,
} from "../enums/budget_campaign_association_status.js";
import {
  ClickTypeEnum_ClickType,
  clickTypeEnum_ClickTypeFromJSON,
  clickTypeEnum_ClickTypeToJSON,
} from "../enums/click_type.js";
import {
  ConversionActionCategoryEnum_ConversionActionCategory,
  conversionActionCategoryEnum_ConversionActionCategoryFromJSON,
  conversionActionCategoryEnum_ConversionActionCategoryToJSON,
} from "../enums/conversion_action_category.js";
import {
  ConversionAttributionEventTypeEnum_ConversionAttributionEventType,
  conversionAttributionEventTypeEnum_ConversionAttributionEventTypeFromJSON,
  conversionAttributionEventTypeEnum_ConversionAttributionEventTypeToJSON,
} from "../enums/conversion_attribution_event_type.js";
import {
  ConversionLagBucketEnum_ConversionLagBucket,
  conversionLagBucketEnum_ConversionLagBucketFromJSON,
  conversionLagBucketEnum_ConversionLagBucketToJSON,
} from "../enums/conversion_lag_bucket.js";
import {
  ConversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucket,
  conversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucketFromJSON,
  conversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucketToJSON,
} from "../enums/conversion_or_adjustment_lag_bucket.js";
import {
  ConversionValueRulePrimaryDimensionEnum_ConversionValueRulePrimaryDimension,
  conversionValueRulePrimaryDimensionEnum_ConversionValueRulePrimaryDimensionFromJSON,
  conversionValueRulePrimaryDimensionEnum_ConversionValueRulePrimaryDimensionToJSON,
} from "../enums/conversion_value_rule_primary_dimension.js";
import {
  ConvertingUserPriorEngagementTypeAndLtvBucketEnum_ConvertingUserPriorEngagementTypeAndLtvBucket,
  convertingUserPriorEngagementTypeAndLtvBucketEnum_ConvertingUserPriorEngagementTypeAndLtvBucketFromJSON,
  convertingUserPriorEngagementTypeAndLtvBucketEnum_ConvertingUserPriorEngagementTypeAndLtvBucketToJSON,
} from "../enums/converting_user_prior_engagement_type_and_ltv_bucket.js";
import {
  DayOfWeekEnum_DayOfWeek,
  dayOfWeekEnum_DayOfWeekFromJSON,
  dayOfWeekEnum_DayOfWeekToJSON,
} from "../enums/day_of_week.js";
import { DeviceEnum_Device, deviceEnum_DeviceFromJSON, deviceEnum_DeviceToJSON } from "../enums/device.js";
import {
  ExternalConversionSourceEnum_ExternalConversionSource,
  externalConversionSourceEnum_ExternalConversionSourceFromJSON,
  externalConversionSourceEnum_ExternalConversionSourceToJSON,
} from "../enums/external_conversion_source.js";
import {
  HotelDateSelectionTypeEnum_HotelDateSelectionType,
  hotelDateSelectionTypeEnum_HotelDateSelectionTypeFromJSON,
  hotelDateSelectionTypeEnum_HotelDateSelectionTypeToJSON,
} from "../enums/hotel_date_selection_type.js";
import {
  HotelPriceBucketEnum_HotelPriceBucket,
  hotelPriceBucketEnum_HotelPriceBucketFromJSON,
  hotelPriceBucketEnum_HotelPriceBucketToJSON,
} from "../enums/hotel_price_bucket.js";
import {
  HotelRateTypeEnum_HotelRateType,
  hotelRateTypeEnum_HotelRateTypeFromJSON,
  hotelRateTypeEnum_HotelRateTypeToJSON,
} from "../enums/hotel_rate_type.js";
import {
  MonthOfYearEnum_MonthOfYear,
  monthOfYearEnum_MonthOfYearFromJSON,
  monthOfYearEnum_MonthOfYearToJSON,
} from "../enums/month_of_year.js";
import {
  PlaceholderTypeEnum_PlaceholderType,
  placeholderTypeEnum_PlaceholderTypeFromJSON,
  placeholderTypeEnum_PlaceholderTypeToJSON,
} from "../enums/placeholder_type.js";
import {
  ProductChannelEnum_ProductChannel,
  productChannelEnum_ProductChannelFromJSON,
  productChannelEnum_ProductChannelToJSON,
} from "../enums/product_channel.js";
import {
  ProductChannelExclusivityEnum_ProductChannelExclusivity,
  productChannelExclusivityEnum_ProductChannelExclusivityFromJSON,
  productChannelExclusivityEnum_ProductChannelExclusivityToJSON,
} from "../enums/product_channel_exclusivity.js";
import {
  ProductConditionEnum_ProductCondition,
  productConditionEnum_ProductConditionFromJSON,
  productConditionEnum_ProductConditionToJSON,
} from "../enums/product_condition.js";
import {
  RecommendationTypeEnum_RecommendationType,
  recommendationTypeEnum_RecommendationTypeFromJSON,
  recommendationTypeEnum_RecommendationTypeToJSON,
} from "../enums/recommendation_type.js";
import {
  SearchEngineResultsPageTypeEnum_SearchEngineResultsPageType,
  searchEngineResultsPageTypeEnum_SearchEngineResultsPageTypeFromJSON,
  searchEngineResultsPageTypeEnum_SearchEngineResultsPageTypeToJSON,
} from "../enums/search_engine_results_page_type.js";
import {
  SearchTermMatchTypeEnum_SearchTermMatchType,
  searchTermMatchTypeEnum_SearchTermMatchTypeFromJSON,
  searchTermMatchTypeEnum_SearchTermMatchTypeToJSON,
} from "../enums/search_term_match_type.js";
import {
  SkAdNetworkAdEventTypeEnum_SkAdNetworkAdEventType,
  skAdNetworkAdEventTypeEnum_SkAdNetworkAdEventTypeFromJSON,
  skAdNetworkAdEventTypeEnum_SkAdNetworkAdEventTypeToJSON,
} from "../enums/sk_ad_network_ad_event_type.js";
import {
  SkAdNetworkAttributionCreditEnum_SkAdNetworkAttributionCredit,
  skAdNetworkAttributionCreditEnum_SkAdNetworkAttributionCreditFromJSON,
  skAdNetworkAttributionCreditEnum_SkAdNetworkAttributionCreditToJSON,
} from "../enums/sk_ad_network_attribution_credit.js";
import {
  SkAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValue,
  skAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValueFromJSON,
  skAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValueToJSON,
} from "../enums/sk_ad_network_coarse_conversion_value.js";
import {
  SkAdNetworkSourceTypeEnum_SkAdNetworkSourceType,
  skAdNetworkSourceTypeEnum_SkAdNetworkSourceTypeFromJSON,
  skAdNetworkSourceTypeEnum_SkAdNetworkSourceTypeToJSON,
} from "../enums/sk_ad_network_source_type.js";
import {
  SkAdNetworkUserTypeEnum_SkAdNetworkUserType,
  skAdNetworkUserTypeEnum_SkAdNetworkUserTypeFromJSON,
  skAdNetworkUserTypeEnum_SkAdNetworkUserTypeToJSON,
} from "../enums/sk_ad_network_user_type.js";
import { SlotEnum_Slot, slotEnum_SlotFromJSON, slotEnum_SlotToJSON } from "../enums/slot.js";
import { KeywordInfo } from "./criteria.js";

export const protobufPackage = "google.ads.googleads.v16.common";

/** Segment only fields. */
export interface Segments {
  /** Activity account ID. */
  activityAccountId?:
    | Long
    | undefined;
  /** The city where the travel activity is available. */
  activityCity?:
    | string
    | undefined;
  /** The country where the travel activity is available. */
  activityCountry?:
    | string
    | undefined;
  /** Activity rating. */
  activityRating?:
    | Long
    | undefined;
  /** The state where the travel activity is available. */
  activityState?:
    | string
    | undefined;
  /** Advertiser supplied activity ID. */
  externalActivityId?:
    | string
    | undefined;
  /** Ad Destination type. */
  adDestinationType: AdDestinationTypeEnum_AdDestinationType;
  /** Ad network type. */
  adNetworkType: AdNetworkTypeEnum_AdNetworkType;
  /** Resource name of the ad group. */
  adGroup?:
    | string
    | undefined;
  /** Resource name of the asset group. */
  assetGroup?:
    | string
    | undefined;
  /** Domain (visible URL) of a participant in the Auction Insights report. */
  auctionInsightDomain?:
    | string
    | undefined;
  /** Budget campaign association status. */
  budgetCampaignAssociationStatus:
    | BudgetCampaignAssociationStatus
    | undefined;
  /** Resource name of the campaign. */
  campaign?:
    | string
    | undefined;
  /** Click type. */
  clickType: ClickTypeEnum_ClickType;
  /** Resource name of the conversion action. */
  conversionAction?:
    | string
    | undefined;
  /** Conversion action category. */
  conversionActionCategory: ConversionActionCategoryEnum_ConversionActionCategory;
  /** Conversion action name. */
  conversionActionName?:
    | string
    | undefined;
  /**
   * This segments your conversion columns by the original conversion and
   * conversion value versus the delta if conversions were adjusted. False row
   * has the data as originally stated; While true row has the delta between
   * data now and the data as originally stated. Summing the two together
   * results post-adjustment data.
   */
  conversionAdjustment?:
    | boolean
    | undefined;
  /** Conversion attribution event type. */
  conversionAttributionEventType: ConversionAttributionEventTypeEnum_ConversionAttributionEventType;
  /**
   * An enum value representing the number of days between the impression and
   * the conversion.
   */
  conversionLagBucket: ConversionLagBucketEnum_ConversionLagBucket;
  /**
   * An enum value representing the number of days between the impression and
   * the conversion or between the impression and adjustments to the conversion.
   */
  conversionOrAdjustmentLagBucket: ConversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucket;
  /**
   * Date to which metrics apply.
   * yyyy-MM-dd format, for example, 2018-04-17.
   */
  date?:
    | string
    | undefined;
  /** Day of the week, for example, MONDAY. */
  dayOfWeek: DayOfWeekEnum_DayOfWeek;
  /** Device to which metrics apply. */
  device: DeviceEnum_Device;
  /** External conversion source. */
  externalConversionSource: ExternalConversionSourceEnum_ExternalConversionSource;
  /** Resource name of the geo target constant that represents an airport. */
  geoTargetAirport?:
    | string
    | undefined;
  /** Resource name of the geo target constant that represents a canton. */
  geoTargetCanton?:
    | string
    | undefined;
  /** Resource name of the geo target constant that represents a city. */
  geoTargetCity?:
    | string
    | undefined;
  /** Resource name of the geo target constant that represents a country. */
  geoTargetCountry?:
    | string
    | undefined;
  /** Resource name of the geo target constant that represents a county. */
  geoTargetCounty?:
    | string
    | undefined;
  /** Resource name of the geo target constant that represents a district. */
  geoTargetDistrict?:
    | string
    | undefined;
  /** Resource name of the geo target constant that represents a metro. */
  geoTargetMetro?:
    | string
    | undefined;
  /**
   * Resource name of the geo target constant that represents the most
   * specific location.
   */
  geoTargetMostSpecificLocation?:
    | string
    | undefined;
  /** Resource name of the geo target constant that represents a postal code. */
  geoTargetPostalCode?:
    | string
    | undefined;
  /** Resource name of the geo target constant that represents a province. */
  geoTargetProvince?:
    | string
    | undefined;
  /** Resource name of the geo target constant that represents a region. */
  geoTargetRegion?:
    | string
    | undefined;
  /** Resource name of the geo target constant that represents a state. */
  geoTargetState?:
    | string
    | undefined;
  /** Hotel booking window in days. */
  hotelBookingWindowDays?:
    | Long
    | undefined;
  /** Hotel center ID. */
  hotelCenterId?:
    | Long
    | undefined;
  /** Hotel check-in date. Formatted as yyyy-MM-dd. */
  hotelCheckInDate?:
    | string
    | undefined;
  /** Hotel check-in day of week. */
  hotelCheckInDayOfWeek: DayOfWeekEnum_DayOfWeek;
  /** Hotel city. */
  hotelCity?:
    | string
    | undefined;
  /** Hotel class. */
  hotelClass?:
    | number
    | undefined;
  /** Hotel country. */
  hotelCountry?:
    | string
    | undefined;
  /** Hotel date selection type. */
  hotelDateSelectionType: HotelDateSelectionTypeEnum_HotelDateSelectionType;
  /** Hotel length of stay. */
  hotelLengthOfStay?:
    | number
    | undefined;
  /** Hotel rate rule ID. */
  hotelRateRuleId?:
    | string
    | undefined;
  /** Hotel rate type. */
  hotelRateType: HotelRateTypeEnum_HotelRateType;
  /** Hotel price bucket. */
  hotelPriceBucket: HotelPriceBucketEnum_HotelPriceBucket;
  /** Hotel state. */
  hotelState?:
    | string
    | undefined;
  /** Hour of day as a number between 0 and 23, inclusive. */
  hour?:
    | number
    | undefined;
  /**
   * Only used with feed item metrics.
   * Indicates whether the interaction metrics occurred on the feed item itself
   * or a different extension or ad unit.
   */
  interactionOnThisExtension?:
    | boolean
    | undefined;
  /** Keyword criterion. */
  keyword:
    | Keyword
    | undefined;
  /**
   * Month as represented by the date of the first day of a month. Formatted as
   * yyyy-MM-dd.
   */
  month?:
    | string
    | undefined;
  /** Month of the year, for example, January. */
  monthOfYear: MonthOfYearEnum_MonthOfYear;
  /** Partner hotel ID. */
  partnerHotelId?:
    | string
    | undefined;
  /** Placeholder type. This is only used with feed item metrics. */
  placeholderType: PlaceholderTypeEnum_PlaceholderType;
  /** Aggregator ID of the product. */
  productAggregatorId?:
    | Long
    | undefined;
  /** Category (level 1) of the product. */
  productCategoryLevel1?:
    | string
    | undefined;
  /** Category (level 2) of the product. */
  productCategoryLevel2?:
    | string
    | undefined;
  /** Category (level 3) of the product. */
  productCategoryLevel3?:
    | string
    | undefined;
  /** Category (level 4) of the product. */
  productCategoryLevel4?:
    | string
    | undefined;
  /** Category (level 5) of the product. */
  productCategoryLevel5?:
    | string
    | undefined;
  /** Brand of the product. */
  productBrand?:
    | string
    | undefined;
  /** Channel of the product. */
  productChannel: ProductChannelEnum_ProductChannel;
  /** Channel exclusivity of the product. */
  productChannelExclusivity: ProductChannelExclusivityEnum_ProductChannelExclusivity;
  /** Condition of the product. */
  productCondition: ProductConditionEnum_ProductCondition;
  /**
   * Resource name of the geo target constant for the country of sale of the
   * product.
   */
  productCountry?:
    | string
    | undefined;
  /** Custom attribute 0 of the product. */
  productCustomAttribute0?:
    | string
    | undefined;
  /** Custom attribute 1 of the product. */
  productCustomAttribute1?:
    | string
    | undefined;
  /** Custom attribute 2 of the product. */
  productCustomAttribute2?:
    | string
    | undefined;
  /** Custom attribute 3 of the product. */
  productCustomAttribute3?:
    | string
    | undefined;
  /** Custom attribute 4 of the product. */
  productCustomAttribute4?:
    | string
    | undefined;
  /** Feed label of the product. */
  productFeedLabel?:
    | string
    | undefined;
  /** Item ID of the product. */
  productItemId?:
    | string
    | undefined;
  /** Resource name of the language constant for the language of the product. */
  productLanguage?:
    | string
    | undefined;
  /** Merchant ID of the product. */
  productMerchantId?:
    | Long
    | undefined;
  /** Store ID of the product. */
  productStoreId?:
    | string
    | undefined;
  /** Title of the product. */
  productTitle?:
    | string
    | undefined;
  /** Type (level 1) of the product. */
  productTypeL1?:
    | string
    | undefined;
  /** Type (level 2) of the product. */
  productTypeL2?:
    | string
    | undefined;
  /** Type (level 3) of the product. */
  productTypeL3?:
    | string
    | undefined;
  /** Type (level 4) of the product. */
  productTypeL4?:
    | string
    | undefined;
  /** Type (level 5) of the product. */
  productTypeL5?:
    | string
    | undefined;
  /**
   * Quarter as represented by the date of the first day of a quarter.
   * Uses the calendar year for quarters, for example, the second quarter of
   * 2018 starts on 2018-04-01. Formatted as yyyy-MM-dd.
   */
  quarter?:
    | string
    | undefined;
  /** Recommendation type. */
  recommendationType: RecommendationTypeEnum_RecommendationType;
  /** Type of the search engine results page. */
  searchEngineResultsPageType: SearchEngineResultsPageTypeEnum_SearchEngineResultsPageType;
  /**
   * A search term subcategory. An empty string denotes the catch-all
   * subcategory for search terms that didn't fit into another subcategory.
   */
  searchSubcategory?:
    | string
    | undefined;
  /** A search term. */
  searchTerm?:
    | string
    | undefined;
  /** Match type of the keyword that triggered the ad, including variants. */
  searchTermMatchType: SearchTermMatchTypeEnum_SearchTermMatchType;
  /** Position of the ad. */
  slot: SlotEnum_Slot;
  /**
   * Primary dimension of applied conversion value rules.
   * NO_RULE_APPLIED shows the total recorded value of conversions that
   * do not have a value rule applied.
   * ORIGINAL shows the original value of conversions to which a value rule
   * has been applied.
   * GEO_LOCATION, DEVICE, AUDIENCE show the net adjustment after value
   * rules were applied.
   */
  conversionValueRulePrimaryDimension: ConversionValueRulePrimaryDimensionEnum_ConversionValueRulePrimaryDimension;
  /** Resource name of the ad group criterion that represents webpage criterion. */
  webpage?:
    | string
    | undefined;
  /**
   * Week as defined as Monday through Sunday, and represented by the date of
   * Monday. Formatted as yyyy-MM-dd.
   */
  week?:
    | string
    | undefined;
  /** Year, formatted as yyyy. */
  year?:
    | number
    | undefined;
  /**
   * iOS Store Kit Ad Network conversion value.
   * Null value means this segment is not applicable, for example, non-iOS
   * campaign.
   */
  skAdNetworkConversionValue?:
    | Long
    | undefined;
  /** iOS Store Kit Ad Network user type. */
  skAdNetworkUserType: SkAdNetworkUserTypeEnum_SkAdNetworkUserType;
  /** iOS Store Kit Ad Network ad event type. */
  skAdNetworkAdEventType: SkAdNetworkAdEventTypeEnum_SkAdNetworkAdEventType;
  /**
   * App where the ad that drove the iOS Store Kit Ad Network install was
   * shown. Null value means this segment is not applicable, for example,
   * non-iOS campaign, or was not present in any postbacks sent by Apple.
   */
  skAdNetworkSourceApp?:
    | SkAdNetworkSourceApp
    | undefined;
  /** iOS Store Kit Ad Network attribution credit */
  skAdNetworkAttributionCredit: SkAdNetworkAttributionCreditEnum_SkAdNetworkAttributionCredit;
  /** iOS Store Kit Ad Network coarse conversion value. */
  skAdNetworkCoarseConversionValue: SkAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValue;
  /**
   * Website where the ad that drove the iOS Store Kit Ad Network install was
   * shown. Null value means this segment is not applicable, for example,
   * non-iOS campaign, or was not present in any postbacks sent by Apple.
   */
  skAdNetworkSourceDomain?:
    | string
    | undefined;
  /**
   * The source type where the ad that drove the iOS Store Kit Ad Network
   * install was shown. Null value means this segment is not applicable, for
   * example, non-iOS campaign, or neither source domain nor source app were
   * present in any postbacks sent by Apple.
   */
  skAdNetworkSourceType: SkAdNetworkSourceTypeEnum_SkAdNetworkSourceType;
  /** iOS Store Kit Ad Network postback sequence index. */
  skAdNetworkPostbackSequenceIndex?:
    | Long
    | undefined;
  /**
   * Only used with CustomerAsset, CampaignAsset and AdGroupAsset metrics.
   * Indicates whether the interaction metrics occurred on the asset itself
   * or a different asset or ad unit.
   * Interactions (for example, clicks) are counted across all the parts of the
   * served ad (for example, Ad itself and other components like Sitelinks) when
   * they are served together. When interaction_on_this_asset is true, it means
   * the interactions are on this specific asset and when
   * interaction_on_this_asset is false, it means the interactions is not on
   * this specific asset but on other parts of the served ad this asset is
   * served with.
   */
  assetInteractionTarget?:
    | AssetInteractionTarget
    | undefined;
  /**
   * This is for segmenting conversions by whether the user is a new customer
   * or a returning customer. This segmentation is typically used to measure
   * the impact of customer acquisition goal.
   */
  newVersusReturningCustomers:
    ConvertingUserPriorEngagementTypeAndLtvBucketEnum_ConvertingUserPriorEngagementTypeAndLtvBucket;
}

/** A Keyword criterion segment. */
export interface Keyword {
  /** The AdGroupCriterion resource name. */
  adGroupCriterion?:
    | string
    | undefined;
  /** Keyword info. */
  info: KeywordInfo | undefined;
}

/** A BudgetCampaignAssociationStatus segment. */
export interface BudgetCampaignAssociationStatus {
  /** The campaign resource name. */
  campaign?:
    | string
    | undefined;
  /** Budget campaign association status. */
  status: BudgetCampaignAssociationStatusEnum_BudgetCampaignAssociationStatus;
}

/** An AssetInteractionTarget segment. */
export interface AssetInteractionTarget {
  /** The asset resource name. */
  asset: string;
  /**
   * Only used with CustomerAsset, CampaignAsset and AdGroupAsset metrics.
   * Indicates whether the interaction metrics occurred on the asset itself or a
   * different asset or ad unit.
   */
  interactionOnThisAsset: boolean;
}

/** A SkAdNetworkSourceApp segment. */
export interface SkAdNetworkSourceApp {
  /**
   * App id where the ad that drove the iOS Store Kit Ad Network install was
   * shown.
   */
  skAdNetworkSourceAppId?: string | undefined;
}

function createBaseSegments(): Segments {
  return {
    activityAccountId: undefined,
    activityCity: undefined,
    activityCountry: undefined,
    activityRating: undefined,
    activityState: undefined,
    externalActivityId: undefined,
    adDestinationType: 0,
    adNetworkType: 0,
    adGroup: undefined,
    assetGroup: undefined,
    auctionInsightDomain: undefined,
    budgetCampaignAssociationStatus: undefined,
    campaign: undefined,
    clickType: 0,
    conversionAction: undefined,
    conversionActionCategory: 0,
    conversionActionName: undefined,
    conversionAdjustment: undefined,
    conversionAttributionEventType: 0,
    conversionLagBucket: 0,
    conversionOrAdjustmentLagBucket: 0,
    date: undefined,
    dayOfWeek: 0,
    device: 0,
    externalConversionSource: 0,
    geoTargetAirport: undefined,
    geoTargetCanton: undefined,
    geoTargetCity: undefined,
    geoTargetCountry: undefined,
    geoTargetCounty: undefined,
    geoTargetDistrict: undefined,
    geoTargetMetro: undefined,
    geoTargetMostSpecificLocation: undefined,
    geoTargetPostalCode: undefined,
    geoTargetProvince: undefined,
    geoTargetRegion: undefined,
    geoTargetState: undefined,
    hotelBookingWindowDays: undefined,
    hotelCenterId: undefined,
    hotelCheckInDate: undefined,
    hotelCheckInDayOfWeek: 0,
    hotelCity: undefined,
    hotelClass: undefined,
    hotelCountry: undefined,
    hotelDateSelectionType: 0,
    hotelLengthOfStay: undefined,
    hotelRateRuleId: undefined,
    hotelRateType: 0,
    hotelPriceBucket: 0,
    hotelState: undefined,
    hour: undefined,
    interactionOnThisExtension: undefined,
    keyword: undefined,
    month: undefined,
    monthOfYear: 0,
    partnerHotelId: undefined,
    placeholderType: 0,
    productAggregatorId: undefined,
    productCategoryLevel1: undefined,
    productCategoryLevel2: undefined,
    productCategoryLevel3: undefined,
    productCategoryLevel4: undefined,
    productCategoryLevel5: undefined,
    productBrand: undefined,
    productChannel: 0,
    productChannelExclusivity: 0,
    productCondition: 0,
    productCountry: undefined,
    productCustomAttribute0: undefined,
    productCustomAttribute1: undefined,
    productCustomAttribute2: undefined,
    productCustomAttribute3: undefined,
    productCustomAttribute4: undefined,
    productFeedLabel: undefined,
    productItemId: undefined,
    productLanguage: undefined,
    productMerchantId: undefined,
    productStoreId: undefined,
    productTitle: undefined,
    productTypeL1: undefined,
    productTypeL2: undefined,
    productTypeL3: undefined,
    productTypeL4: undefined,
    productTypeL5: undefined,
    quarter: undefined,
    recommendationType: 0,
    searchEngineResultsPageType: 0,
    searchSubcategory: undefined,
    searchTerm: undefined,
    searchTermMatchType: 0,
    slot: 0,
    conversionValueRulePrimaryDimension: 0,
    webpage: undefined,
    week: undefined,
    year: undefined,
    skAdNetworkConversionValue: undefined,
    skAdNetworkUserType: 0,
    skAdNetworkAdEventType: 0,
    skAdNetworkSourceApp: undefined,
    skAdNetworkAttributionCredit: 0,
    skAdNetworkCoarseConversionValue: 0,
    skAdNetworkSourceDomain: undefined,
    skAdNetworkSourceType: 0,
    skAdNetworkPostbackSequenceIndex: undefined,
    assetInteractionTarget: undefined,
    newVersusReturningCustomers: 0,
  };
}

export const Segments: MessageFns<Segments> = {
  encode(message: Segments, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.activityAccountId !== undefined) {
      writer.uint32(1184).int64(message.activityAccountId.toString());
    }
    if (message.activityCity !== undefined) {
      writer.uint32(1482).string(message.activityCity);
    }
    if (message.activityCountry !== undefined) {
      writer.uint32(1490).string(message.activityCountry);
    }
    if (message.activityRating !== undefined) {
      writer.uint32(1192).int64(message.activityRating.toString());
    }
    if (message.activityState !== undefined) {
      writer.uint32(1498).string(message.activityState);
    }
    if (message.externalActivityId !== undefined) {
      writer.uint32(1202).string(message.externalActivityId);
    }
    if (message.adDestinationType !== 0) {
      writer.uint32(1088).int32(message.adDestinationType);
    }
    if (message.adNetworkType !== 0) {
      writer.uint32(24).int32(message.adNetworkType);
    }
    if (message.adGroup !== undefined) {
      writer.uint32(1266).string(message.adGroup);
    }
    if (message.assetGroup !== undefined) {
      writer.uint32(1274).string(message.assetGroup);
    }
    if (message.auctionInsightDomain !== undefined) {
      writer.uint32(1162).string(message.auctionInsightDomain);
    }
    if (message.budgetCampaignAssociationStatus !== undefined) {
      BudgetCampaignAssociationStatus.encode(message.budgetCampaignAssociationStatus, writer.uint32(1074).fork())
        .join();
    }
    if (message.campaign !== undefined) {
      writer.uint32(1258).string(message.campaign);
    }
    if (message.clickType !== 0) {
      writer.uint32(208).int32(message.clickType);
    }
    if (message.conversionAction !== undefined) {
      writer.uint32(906).string(message.conversionAction);
    }
    if (message.conversionActionCategory !== 0) {
      writer.uint32(424).int32(message.conversionActionCategory);
    }
    if (message.conversionActionName !== undefined) {
      writer.uint32(914).string(message.conversionActionName);
    }
    if (message.conversionAdjustment !== undefined) {
      writer.uint32(920).bool(message.conversionAdjustment);
    }
    if (message.conversionAttributionEventType !== 0) {
      writer.uint32(16).int32(message.conversionAttributionEventType);
    }
    if (message.conversionLagBucket !== 0) {
      writer.uint32(400).int32(message.conversionLagBucket);
    }
    if (message.conversionOrAdjustmentLagBucket !== 0) {
      writer.uint32(408).int32(message.conversionOrAdjustmentLagBucket);
    }
    if (message.date !== undefined) {
      writer.uint32(634).string(message.date);
    }
    if (message.dayOfWeek !== 0) {
      writer.uint32(40).int32(message.dayOfWeek);
    }
    if (message.device !== 0) {
      writer.uint32(8).int32(message.device);
    }
    if (message.externalConversionSource !== 0) {
      writer.uint32(440).int32(message.externalConversionSource);
    }
    if (message.geoTargetAirport !== undefined) {
      writer.uint32(930).string(message.geoTargetAirport);
    }
    if (message.geoTargetCanton !== undefined) {
      writer.uint32(938).string(message.geoTargetCanton);
    }
    if (message.geoTargetCity !== undefined) {
      writer.uint32(946).string(message.geoTargetCity);
    }
    if (message.geoTargetCountry !== undefined) {
      writer.uint32(954).string(message.geoTargetCountry);
    }
    if (message.geoTargetCounty !== undefined) {
      writer.uint32(962).string(message.geoTargetCounty);
    }
    if (message.geoTargetDistrict !== undefined) {
      writer.uint32(970).string(message.geoTargetDistrict);
    }
    if (message.geoTargetMetro !== undefined) {
      writer.uint32(978).string(message.geoTargetMetro);
    }
    if (message.geoTargetMostSpecificLocation !== undefined) {
      writer.uint32(986).string(message.geoTargetMostSpecificLocation);
    }
    if (message.geoTargetPostalCode !== undefined) {
      writer.uint32(994).string(message.geoTargetPostalCode);
    }
    if (message.geoTargetProvince !== undefined) {
      writer.uint32(1002).string(message.geoTargetProvince);
    }
    if (message.geoTargetRegion !== undefined) {
      writer.uint32(1010).string(message.geoTargetRegion);
    }
    if (message.geoTargetState !== undefined) {
      writer.uint32(1018).string(message.geoTargetState);
    }
    if (message.hotelBookingWindowDays !== undefined) {
      writer.uint32(1080).int64(message.hotelBookingWindowDays.toString());
    }
    if (message.hotelCenterId !== undefined) {
      writer.uint32(640).int64(message.hotelCenterId.toString());
    }
    if (message.hotelCheckInDate !== undefined) {
      writer.uint32(650).string(message.hotelCheckInDate);
    }
    if (message.hotelCheckInDayOfWeek !== 0) {
      writer.uint32(72).int32(message.hotelCheckInDayOfWeek);
    }
    if (message.hotelCity !== undefined) {
      writer.uint32(658).string(message.hotelCity);
    }
    if (message.hotelClass !== undefined) {
      writer.uint32(664).int32(message.hotelClass);
    }
    if (message.hotelCountry !== undefined) {
      writer.uint32(674).string(message.hotelCountry);
    }
    if (message.hotelDateSelectionType !== 0) {
      writer.uint32(104).int32(message.hotelDateSelectionType);
    }
    if (message.hotelLengthOfStay !== undefined) {
      writer.uint32(680).int32(message.hotelLengthOfStay);
    }
    if (message.hotelRateRuleId !== undefined) {
      writer.uint32(690).string(message.hotelRateRuleId);
    }
    if (message.hotelRateType !== 0) {
      writer.uint32(592).int32(message.hotelRateType);
    }
    if (message.hotelPriceBucket !== 0) {
      writer.uint32(624).int32(message.hotelPriceBucket);
    }
    if (message.hotelState !== undefined) {
      writer.uint32(698).string(message.hotelState);
    }
    if (message.hour !== undefined) {
      writer.uint32(704).int32(message.hour);
    }
    if (message.interactionOnThisExtension !== undefined) {
      writer.uint32(712).bool(message.interactionOnThisExtension);
    }
    if (message.keyword !== undefined) {
      Keyword.encode(message.keyword, writer.uint32(490).fork()).join();
    }
    if (message.month !== undefined) {
      writer.uint32(722).string(message.month);
    }
    if (message.monthOfYear !== 0) {
      writer.uint32(144).int32(message.monthOfYear);
    }
    if (message.partnerHotelId !== undefined) {
      writer.uint32(730).string(message.partnerHotelId);
    }
    if (message.placeholderType !== 0) {
      writer.uint32(160).int32(message.placeholderType);
    }
    if (message.productAggregatorId !== undefined) {
      writer.uint32(1056).int64(message.productAggregatorId.toString());
    }
    if (message.productCategoryLevel1 !== undefined) {
      writer.uint32(1290).string(message.productCategoryLevel1);
    }
    if (message.productCategoryLevel2 !== undefined) {
      writer.uint32(1298).string(message.productCategoryLevel2);
    }
    if (message.productCategoryLevel3 !== undefined) {
      writer.uint32(1306).string(message.productCategoryLevel3);
    }
    if (message.productCategoryLevel4 !== undefined) {
      writer.uint32(1314).string(message.productCategoryLevel4);
    }
    if (message.productCategoryLevel5 !== undefined) {
      writer.uint32(1322).string(message.productCategoryLevel5);
    }
    if (message.productBrand !== undefined) {
      writer.uint32(778).string(message.productBrand);
    }
    if (message.productChannel !== 0) {
      writer.uint32(240).int32(message.productChannel);
    }
    if (message.productChannelExclusivity !== 0) {
      writer.uint32(248).int32(message.productChannelExclusivity);
    }
    if (message.productCondition !== 0) {
      writer.uint32(256).int32(message.productCondition);
    }
    if (message.productCountry !== undefined) {
      writer.uint32(786).string(message.productCountry);
    }
    if (message.productCustomAttribute0 !== undefined) {
      writer.uint32(794).string(message.productCustomAttribute0);
    }
    if (message.productCustomAttribute1 !== undefined) {
      writer.uint32(802).string(message.productCustomAttribute1);
    }
    if (message.productCustomAttribute2 !== undefined) {
      writer.uint32(810).string(message.productCustomAttribute2);
    }
    if (message.productCustomAttribute3 !== undefined) {
      writer.uint32(818).string(message.productCustomAttribute3);
    }
    if (message.productCustomAttribute4 !== undefined) {
      writer.uint32(826).string(message.productCustomAttribute4);
    }
    if (message.productFeedLabel !== undefined) {
      writer.uint32(1178).string(message.productFeedLabel);
    }
    if (message.productItemId !== undefined) {
      writer.uint32(834).string(message.productItemId);
    }
    if (message.productLanguage !== undefined) {
      writer.uint32(842).string(message.productLanguage);
    }
    if (message.productMerchantId !== undefined) {
      writer.uint32(1064).int64(message.productMerchantId.toString());
    }
    if (message.productStoreId !== undefined) {
      writer.uint32(850).string(message.productStoreId);
    }
    if (message.productTitle !== undefined) {
      writer.uint32(858).string(message.productTitle);
    }
    if (message.productTypeL1 !== undefined) {
      writer.uint32(866).string(message.productTypeL1);
    }
    if (message.productTypeL2 !== undefined) {
      writer.uint32(874).string(message.productTypeL2);
    }
    if (message.productTypeL3 !== undefined) {
      writer.uint32(882).string(message.productTypeL3);
    }
    if (message.productTypeL4 !== undefined) {
      writer.uint32(890).string(message.productTypeL4);
    }
    if (message.productTypeL5 !== undefined) {
      writer.uint32(898).string(message.productTypeL5);
    }
    if (message.quarter !== undefined) {
      writer.uint32(1026).string(message.quarter);
    }
    if (message.recommendationType !== 0) {
      writer.uint32(1120).int32(message.recommendationType);
    }
    if (message.searchEngineResultsPageType !== 0) {
      writer.uint32(560).int32(message.searchEngineResultsPageType);
    }
    if (message.searchSubcategory !== undefined) {
      writer.uint32(1242).string(message.searchSubcategory);
    }
    if (message.searchTerm !== undefined) {
      writer.uint32(1250).string(message.searchTerm);
    }
    if (message.searchTermMatchType !== 0) {
      writer.uint32(176).int32(message.searchTermMatchType);
    }
    if (message.slot !== 0) {
      writer.uint32(184).int32(message.slot);
    }
    if (message.conversionValueRulePrimaryDimension !== 0) {
      writer.uint32(1104).int32(message.conversionValueRulePrimaryDimension);
    }
    if (message.webpage !== undefined) {
      writer.uint32(1034).string(message.webpage);
    }
    if (message.week !== undefined) {
      writer.uint32(1042).string(message.week);
    }
    if (message.year !== undefined) {
      writer.uint32(1048).int32(message.year);
    }
    if (message.skAdNetworkConversionValue !== undefined) {
      writer.uint32(1096).int64(message.skAdNetworkConversionValue.toString());
    }
    if (message.skAdNetworkUserType !== 0) {
      writer.uint32(1128).int32(message.skAdNetworkUserType);
    }
    if (message.skAdNetworkAdEventType !== 0) {
      writer.uint32(1136).int32(message.skAdNetworkAdEventType);
    }
    if (message.skAdNetworkSourceApp !== undefined) {
      SkAdNetworkSourceApp.encode(message.skAdNetworkSourceApp, writer.uint32(1146).fork()).join();
    }
    if (message.skAdNetworkAttributionCredit !== 0) {
      writer.uint32(1152).int32(message.skAdNetworkAttributionCredit);
    }
    if (message.skAdNetworkCoarseConversionValue !== 0) {
      writer.uint32(1208).int32(message.skAdNetworkCoarseConversionValue);
    }
    if (message.skAdNetworkSourceDomain !== undefined) {
      writer.uint32(1218).string(message.skAdNetworkSourceDomain);
    }
    if (message.skAdNetworkSourceType !== 0) {
      writer.uint32(1224).int32(message.skAdNetworkSourceType);
    }
    if (message.skAdNetworkPostbackSequenceIndex !== undefined) {
      writer.uint32(1232).int64(message.skAdNetworkPostbackSequenceIndex.toString());
    }
    if (message.assetInteractionTarget !== undefined) {
      AssetInteractionTarget.encode(message.assetInteractionTarget, writer.uint32(1114).fork()).join();
    }
    if (message.newVersusReturningCustomers !== 0) {
      writer.uint32(1280).int32(message.newVersusReturningCustomers);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Segments {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSegments();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 148:
          if (tag !== 1184) {
            break;
          }

          message.activityAccountId = Long.fromString(reader.int64().toString());
          continue;
        case 185:
          if (tag !== 1482) {
            break;
          }

          message.activityCity = reader.string();
          continue;
        case 186:
          if (tag !== 1490) {
            break;
          }

          message.activityCountry = reader.string();
          continue;
        case 149:
          if (tag !== 1192) {
            break;
          }

          message.activityRating = Long.fromString(reader.int64().toString());
          continue;
        case 187:
          if (tag !== 1498) {
            break;
          }

          message.activityState = reader.string();
          continue;
        case 150:
          if (tag !== 1202) {
            break;
          }

          message.externalActivityId = reader.string();
          continue;
        case 136:
          if (tag !== 1088) {
            break;
          }

          message.adDestinationType = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.adNetworkType = reader.int32() as any;
          continue;
        case 158:
          if (tag !== 1266) {
            break;
          }

          message.adGroup = reader.string();
          continue;
        case 159:
          if (tag !== 1274) {
            break;
          }

          message.assetGroup = reader.string();
          continue;
        case 145:
          if (tag !== 1162) {
            break;
          }

          message.auctionInsightDomain = reader.string();
          continue;
        case 134:
          if (tag !== 1074) {
            break;
          }

          message.budgetCampaignAssociationStatus = BudgetCampaignAssociationStatus.decode(reader, reader.uint32());
          continue;
        case 157:
          if (tag !== 1258) {
            break;
          }

          message.campaign = reader.string();
          continue;
        case 26:
          if (tag !== 208) {
            break;
          }

          message.clickType = reader.int32() as any;
          continue;
        case 113:
          if (tag !== 906) {
            break;
          }

          message.conversionAction = reader.string();
          continue;
        case 53:
          if (tag !== 424) {
            break;
          }

          message.conversionActionCategory = reader.int32() as any;
          continue;
        case 114:
          if (tag !== 914) {
            break;
          }

          message.conversionActionName = reader.string();
          continue;
        case 115:
          if (tag !== 920) {
            break;
          }

          message.conversionAdjustment = reader.bool();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.conversionAttributionEventType = reader.int32() as any;
          continue;
        case 50:
          if (tag !== 400) {
            break;
          }

          message.conversionLagBucket = reader.int32() as any;
          continue;
        case 51:
          if (tag !== 408) {
            break;
          }

          message.conversionOrAdjustmentLagBucket = reader.int32() as any;
          continue;
        case 79:
          if (tag !== 634) {
            break;
          }

          message.date = reader.string();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.dayOfWeek = reader.int32() as any;
          continue;
        case 1:
          if (tag !== 8) {
            break;
          }

          message.device = reader.int32() as any;
          continue;
        case 55:
          if (tag !== 440) {
            break;
          }

          message.externalConversionSource = reader.int32() as any;
          continue;
        case 116:
          if (tag !== 930) {
            break;
          }

          message.geoTargetAirport = reader.string();
          continue;
        case 117:
          if (tag !== 938) {
            break;
          }

          message.geoTargetCanton = reader.string();
          continue;
        case 118:
          if (tag !== 946) {
            break;
          }

          message.geoTargetCity = reader.string();
          continue;
        case 119:
          if (tag !== 954) {
            break;
          }

          message.geoTargetCountry = reader.string();
          continue;
        case 120:
          if (tag !== 962) {
            break;
          }

          message.geoTargetCounty = reader.string();
          continue;
        case 121:
          if (tag !== 970) {
            break;
          }

          message.geoTargetDistrict = reader.string();
          continue;
        case 122:
          if (tag !== 978) {
            break;
          }

          message.geoTargetMetro = reader.string();
          continue;
        case 123:
          if (tag !== 986) {
            break;
          }

          message.geoTargetMostSpecificLocation = reader.string();
          continue;
        case 124:
          if (tag !== 994) {
            break;
          }

          message.geoTargetPostalCode = reader.string();
          continue;
        case 125:
          if (tag !== 1002) {
            break;
          }

          message.geoTargetProvince = reader.string();
          continue;
        case 126:
          if (tag !== 1010) {
            break;
          }

          message.geoTargetRegion = reader.string();
          continue;
        case 127:
          if (tag !== 1018) {
            break;
          }

          message.geoTargetState = reader.string();
          continue;
        case 135:
          if (tag !== 1080) {
            break;
          }

          message.hotelBookingWindowDays = Long.fromString(reader.int64().toString());
          continue;
        case 80:
          if (tag !== 640) {
            break;
          }

          message.hotelCenterId = Long.fromString(reader.int64().toString());
          continue;
        case 81:
          if (tag !== 650) {
            break;
          }

          message.hotelCheckInDate = reader.string();
          continue;
        case 9:
          if (tag !== 72) {
            break;
          }

          message.hotelCheckInDayOfWeek = reader.int32() as any;
          continue;
        case 82:
          if (tag !== 658) {
            break;
          }

          message.hotelCity = reader.string();
          continue;
        case 83:
          if (tag !== 664) {
            break;
          }

          message.hotelClass = reader.int32();
          continue;
        case 84:
          if (tag !== 674) {
            break;
          }

          message.hotelCountry = reader.string();
          continue;
        case 13:
          if (tag !== 104) {
            break;
          }

          message.hotelDateSelectionType = reader.int32() as any;
          continue;
        case 85:
          if (tag !== 680) {
            break;
          }

          message.hotelLengthOfStay = reader.int32();
          continue;
        case 86:
          if (tag !== 690) {
            break;
          }

          message.hotelRateRuleId = reader.string();
          continue;
        case 74:
          if (tag !== 592) {
            break;
          }

          message.hotelRateType = reader.int32() as any;
          continue;
        case 78:
          if (tag !== 624) {
            break;
          }

          message.hotelPriceBucket = reader.int32() as any;
          continue;
        case 87:
          if (tag !== 698) {
            break;
          }

          message.hotelState = reader.string();
          continue;
        case 88:
          if (tag !== 704) {
            break;
          }

          message.hour = reader.int32();
          continue;
        case 89:
          if (tag !== 712) {
            break;
          }

          message.interactionOnThisExtension = reader.bool();
          continue;
        case 61:
          if (tag !== 490) {
            break;
          }

          message.keyword = Keyword.decode(reader, reader.uint32());
          continue;
        case 90:
          if (tag !== 722) {
            break;
          }

          message.month = reader.string();
          continue;
        case 18:
          if (tag !== 144) {
            break;
          }

          message.monthOfYear = reader.int32() as any;
          continue;
        case 91:
          if (tag !== 730) {
            break;
          }

          message.partnerHotelId = reader.string();
          continue;
        case 20:
          if (tag !== 160) {
            break;
          }

          message.placeholderType = reader.int32() as any;
          continue;
        case 132:
          if (tag !== 1056) {
            break;
          }

          message.productAggregatorId = Long.fromString(reader.int64().toString());
          continue;
        case 161:
          if (tag !== 1290) {
            break;
          }

          message.productCategoryLevel1 = reader.string();
          continue;
        case 162:
          if (tag !== 1298) {
            break;
          }

          message.productCategoryLevel2 = reader.string();
          continue;
        case 163:
          if (tag !== 1306) {
            break;
          }

          message.productCategoryLevel3 = reader.string();
          continue;
        case 164:
          if (tag !== 1314) {
            break;
          }

          message.productCategoryLevel4 = reader.string();
          continue;
        case 165:
          if (tag !== 1322) {
            break;
          }

          message.productCategoryLevel5 = reader.string();
          continue;
        case 97:
          if (tag !== 778) {
            break;
          }

          message.productBrand = reader.string();
          continue;
        case 30:
          if (tag !== 240) {
            break;
          }

          message.productChannel = reader.int32() as any;
          continue;
        case 31:
          if (tag !== 248) {
            break;
          }

          message.productChannelExclusivity = reader.int32() as any;
          continue;
        case 32:
          if (tag !== 256) {
            break;
          }

          message.productCondition = reader.int32() as any;
          continue;
        case 98:
          if (tag !== 786) {
            break;
          }

          message.productCountry = reader.string();
          continue;
        case 99:
          if (tag !== 794) {
            break;
          }

          message.productCustomAttribute0 = reader.string();
          continue;
        case 100:
          if (tag !== 802) {
            break;
          }

          message.productCustomAttribute1 = reader.string();
          continue;
        case 101:
          if (tag !== 810) {
            break;
          }

          message.productCustomAttribute2 = reader.string();
          continue;
        case 102:
          if (tag !== 818) {
            break;
          }

          message.productCustomAttribute3 = reader.string();
          continue;
        case 103:
          if (tag !== 826) {
            break;
          }

          message.productCustomAttribute4 = reader.string();
          continue;
        case 147:
          if (tag !== 1178) {
            break;
          }

          message.productFeedLabel = reader.string();
          continue;
        case 104:
          if (tag !== 834) {
            break;
          }

          message.productItemId = reader.string();
          continue;
        case 105:
          if (tag !== 842) {
            break;
          }

          message.productLanguage = reader.string();
          continue;
        case 133:
          if (tag !== 1064) {
            break;
          }

          message.productMerchantId = Long.fromString(reader.int64().toString());
          continue;
        case 106:
          if (tag !== 850) {
            break;
          }

          message.productStoreId = reader.string();
          continue;
        case 107:
          if (tag !== 858) {
            break;
          }

          message.productTitle = reader.string();
          continue;
        case 108:
          if (tag !== 866) {
            break;
          }

          message.productTypeL1 = reader.string();
          continue;
        case 109:
          if (tag !== 874) {
            break;
          }

          message.productTypeL2 = reader.string();
          continue;
        case 110:
          if (tag !== 882) {
            break;
          }

          message.productTypeL3 = reader.string();
          continue;
        case 111:
          if (tag !== 890) {
            break;
          }

          message.productTypeL4 = reader.string();
          continue;
        case 112:
          if (tag !== 898) {
            break;
          }

          message.productTypeL5 = reader.string();
          continue;
        case 128:
          if (tag !== 1026) {
            break;
          }

          message.quarter = reader.string();
          continue;
        case 140:
          if (tag !== 1120) {
            break;
          }

          message.recommendationType = reader.int32() as any;
          continue;
        case 70:
          if (tag !== 560) {
            break;
          }

          message.searchEngineResultsPageType = reader.int32() as any;
          continue;
        case 155:
          if (tag !== 1242) {
            break;
          }

          message.searchSubcategory = reader.string();
          continue;
        case 156:
          if (tag !== 1250) {
            break;
          }

          message.searchTerm = reader.string();
          continue;
        case 22:
          if (tag !== 176) {
            break;
          }

          message.searchTermMatchType = reader.int32() as any;
          continue;
        case 23:
          if (tag !== 184) {
            break;
          }

          message.slot = reader.int32() as any;
          continue;
        case 138:
          if (tag !== 1104) {
            break;
          }

          message.conversionValueRulePrimaryDimension = reader.int32() as any;
          continue;
        case 129:
          if (tag !== 1034) {
            break;
          }

          message.webpage = reader.string();
          continue;
        case 130:
          if (tag !== 1042) {
            break;
          }

          message.week = reader.string();
          continue;
        case 131:
          if (tag !== 1048) {
            break;
          }

          message.year = reader.int32();
          continue;
        case 137:
          if (tag !== 1096) {
            break;
          }

          message.skAdNetworkConversionValue = Long.fromString(reader.int64().toString());
          continue;
        case 141:
          if (tag !== 1128) {
            break;
          }

          message.skAdNetworkUserType = reader.int32() as any;
          continue;
        case 142:
          if (tag !== 1136) {
            break;
          }

          message.skAdNetworkAdEventType = reader.int32() as any;
          continue;
        case 143:
          if (tag !== 1146) {
            break;
          }

          message.skAdNetworkSourceApp = SkAdNetworkSourceApp.decode(reader, reader.uint32());
          continue;
        case 144:
          if (tag !== 1152) {
            break;
          }

          message.skAdNetworkAttributionCredit = reader.int32() as any;
          continue;
        case 151:
          if (tag !== 1208) {
            break;
          }

          message.skAdNetworkCoarseConversionValue = reader.int32() as any;
          continue;
        case 152:
          if (tag !== 1218) {
            break;
          }

          message.skAdNetworkSourceDomain = reader.string();
          continue;
        case 153:
          if (tag !== 1224) {
            break;
          }

          message.skAdNetworkSourceType = reader.int32() as any;
          continue;
        case 154:
          if (tag !== 1232) {
            break;
          }

          message.skAdNetworkPostbackSequenceIndex = Long.fromString(reader.int64().toString());
          continue;
        case 139:
          if (tag !== 1114) {
            break;
          }

          message.assetInteractionTarget = AssetInteractionTarget.decode(reader, reader.uint32());
          continue;
        case 160:
          if (tag !== 1280) {
            break;
          }

          message.newVersusReturningCustomers = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Segments {
    return {
      activityAccountId: isSet(object.activityAccountId) ? Long.fromValue(object.activityAccountId) : undefined,
      activityCity: isSet(object.activityCity) ? globalThis.String(object.activityCity) : undefined,
      activityCountry: isSet(object.activityCountry) ? globalThis.String(object.activityCountry) : undefined,
      activityRating: isSet(object.activityRating) ? Long.fromValue(object.activityRating) : undefined,
      activityState: isSet(object.activityState) ? globalThis.String(object.activityState) : undefined,
      externalActivityId: isSet(object.externalActivityId) ? globalThis.String(object.externalActivityId) : undefined,
      adDestinationType: isSet(object.adDestinationType)
        ? adDestinationTypeEnum_AdDestinationTypeFromJSON(object.adDestinationType)
        : 0,
      adNetworkType: isSet(object.adNetworkType) ? adNetworkTypeEnum_AdNetworkTypeFromJSON(object.adNetworkType) : 0,
      adGroup: isSet(object.adGroup) ? globalThis.String(object.adGroup) : undefined,
      assetGroup: isSet(object.assetGroup) ? globalThis.String(object.assetGroup) : undefined,
      auctionInsightDomain: isSet(object.auctionInsightDomain)
        ? globalThis.String(object.auctionInsightDomain)
        : undefined,
      budgetCampaignAssociationStatus: isSet(object.budgetCampaignAssociationStatus)
        ? BudgetCampaignAssociationStatus.fromJSON(object.budgetCampaignAssociationStatus)
        : undefined,
      campaign: isSet(object.campaign) ? globalThis.String(object.campaign) : undefined,
      clickType: isSet(object.clickType) ? clickTypeEnum_ClickTypeFromJSON(object.clickType) : 0,
      conversionAction: isSet(object.conversionAction) ? globalThis.String(object.conversionAction) : undefined,
      conversionActionCategory: isSet(object.conversionActionCategory)
        ? conversionActionCategoryEnum_ConversionActionCategoryFromJSON(object.conversionActionCategory)
        : 0,
      conversionActionName: isSet(object.conversionActionName)
        ? globalThis.String(object.conversionActionName)
        : undefined,
      conversionAdjustment: isSet(object.conversionAdjustment)
        ? globalThis.Boolean(object.conversionAdjustment)
        : undefined,
      conversionAttributionEventType: isSet(object.conversionAttributionEventType)
        ? conversionAttributionEventTypeEnum_ConversionAttributionEventTypeFromJSON(
          object.conversionAttributionEventType,
        )
        : 0,
      conversionLagBucket: isSet(object.conversionLagBucket)
        ? conversionLagBucketEnum_ConversionLagBucketFromJSON(object.conversionLagBucket)
        : 0,
      conversionOrAdjustmentLagBucket: isSet(object.conversionOrAdjustmentLagBucket)
        ? conversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucketFromJSON(
          object.conversionOrAdjustmentLagBucket,
        )
        : 0,
      date: isSet(object.date) ? globalThis.String(object.date) : undefined,
      dayOfWeek: isSet(object.dayOfWeek) ? dayOfWeekEnum_DayOfWeekFromJSON(object.dayOfWeek) : 0,
      device: isSet(object.device) ? deviceEnum_DeviceFromJSON(object.device) : 0,
      externalConversionSource: isSet(object.externalConversionSource)
        ? externalConversionSourceEnum_ExternalConversionSourceFromJSON(object.externalConversionSource)
        : 0,
      geoTargetAirport: isSet(object.geoTargetAirport) ? globalThis.String(object.geoTargetAirport) : undefined,
      geoTargetCanton: isSet(object.geoTargetCanton) ? globalThis.String(object.geoTargetCanton) : undefined,
      geoTargetCity: isSet(object.geoTargetCity) ? globalThis.String(object.geoTargetCity) : undefined,
      geoTargetCountry: isSet(object.geoTargetCountry) ? globalThis.String(object.geoTargetCountry) : undefined,
      geoTargetCounty: isSet(object.geoTargetCounty) ? globalThis.String(object.geoTargetCounty) : undefined,
      geoTargetDistrict: isSet(object.geoTargetDistrict) ? globalThis.String(object.geoTargetDistrict) : undefined,
      geoTargetMetro: isSet(object.geoTargetMetro) ? globalThis.String(object.geoTargetMetro) : undefined,
      geoTargetMostSpecificLocation: isSet(object.geoTargetMostSpecificLocation)
        ? globalThis.String(object.geoTargetMostSpecificLocation)
        : undefined,
      geoTargetPostalCode: isSet(object.geoTargetPostalCode)
        ? globalThis.String(object.geoTargetPostalCode)
        : undefined,
      geoTargetProvince: isSet(object.geoTargetProvince) ? globalThis.String(object.geoTargetProvince) : undefined,
      geoTargetRegion: isSet(object.geoTargetRegion) ? globalThis.String(object.geoTargetRegion) : undefined,
      geoTargetState: isSet(object.geoTargetState) ? globalThis.String(object.geoTargetState) : undefined,
      hotelBookingWindowDays: isSet(object.hotelBookingWindowDays)
        ? Long.fromValue(object.hotelBookingWindowDays)
        : undefined,
      hotelCenterId: isSet(object.hotelCenterId) ? Long.fromValue(object.hotelCenterId) : undefined,
      hotelCheckInDate: isSet(object.hotelCheckInDate) ? globalThis.String(object.hotelCheckInDate) : undefined,
      hotelCheckInDayOfWeek: isSet(object.hotelCheckInDayOfWeek)
        ? dayOfWeekEnum_DayOfWeekFromJSON(object.hotelCheckInDayOfWeek)
        : 0,
      hotelCity: isSet(object.hotelCity) ? globalThis.String(object.hotelCity) : undefined,
      hotelClass: isSet(object.hotelClass) ? globalThis.Number(object.hotelClass) : undefined,
      hotelCountry: isSet(object.hotelCountry) ? globalThis.String(object.hotelCountry) : undefined,
      hotelDateSelectionType: isSet(object.hotelDateSelectionType)
        ? hotelDateSelectionTypeEnum_HotelDateSelectionTypeFromJSON(object.hotelDateSelectionType)
        : 0,
      hotelLengthOfStay: isSet(object.hotelLengthOfStay) ? globalThis.Number(object.hotelLengthOfStay) : undefined,
      hotelRateRuleId: isSet(object.hotelRateRuleId) ? globalThis.String(object.hotelRateRuleId) : undefined,
      hotelRateType: isSet(object.hotelRateType) ? hotelRateTypeEnum_HotelRateTypeFromJSON(object.hotelRateType) : 0,
      hotelPriceBucket: isSet(object.hotelPriceBucket)
        ? hotelPriceBucketEnum_HotelPriceBucketFromJSON(object.hotelPriceBucket)
        : 0,
      hotelState: isSet(object.hotelState) ? globalThis.String(object.hotelState) : undefined,
      hour: isSet(object.hour) ? globalThis.Number(object.hour) : undefined,
      interactionOnThisExtension: isSet(object.interactionOnThisExtension)
        ? globalThis.Boolean(object.interactionOnThisExtension)
        : undefined,
      keyword: isSet(object.keyword) ? Keyword.fromJSON(object.keyword) : undefined,
      month: isSet(object.month) ? globalThis.String(object.month) : undefined,
      monthOfYear: isSet(object.monthOfYear) ? monthOfYearEnum_MonthOfYearFromJSON(object.monthOfYear) : 0,
      partnerHotelId: isSet(object.partnerHotelId) ? globalThis.String(object.partnerHotelId) : undefined,
      placeholderType: isSet(object.placeholderType)
        ? placeholderTypeEnum_PlaceholderTypeFromJSON(object.placeholderType)
        : 0,
      productAggregatorId: isSet(object.productAggregatorId) ? Long.fromValue(object.productAggregatorId) : undefined,
      productCategoryLevel1: isSet(object.productCategoryLevel1)
        ? globalThis.String(object.productCategoryLevel1)
        : undefined,
      productCategoryLevel2: isSet(object.productCategoryLevel2)
        ? globalThis.String(object.productCategoryLevel2)
        : undefined,
      productCategoryLevel3: isSet(object.productCategoryLevel3)
        ? globalThis.String(object.productCategoryLevel3)
        : undefined,
      productCategoryLevel4: isSet(object.productCategoryLevel4)
        ? globalThis.String(object.productCategoryLevel4)
        : undefined,
      productCategoryLevel5: isSet(object.productCategoryLevel5)
        ? globalThis.String(object.productCategoryLevel5)
        : undefined,
      productBrand: isSet(object.productBrand) ? globalThis.String(object.productBrand) : undefined,
      productChannel: isSet(object.productChannel)
        ? productChannelEnum_ProductChannelFromJSON(object.productChannel)
        : 0,
      productChannelExclusivity: isSet(object.productChannelExclusivity)
        ? productChannelExclusivityEnum_ProductChannelExclusivityFromJSON(object.productChannelExclusivity)
        : 0,
      productCondition: isSet(object.productCondition)
        ? productConditionEnum_ProductConditionFromJSON(object.productCondition)
        : 0,
      productCountry: isSet(object.productCountry) ? globalThis.String(object.productCountry) : undefined,
      productCustomAttribute0: isSet(object.productCustomAttribute0)
        ? globalThis.String(object.productCustomAttribute0)
        : undefined,
      productCustomAttribute1: isSet(object.productCustomAttribute1)
        ? globalThis.String(object.productCustomAttribute1)
        : undefined,
      productCustomAttribute2: isSet(object.productCustomAttribute2)
        ? globalThis.String(object.productCustomAttribute2)
        : undefined,
      productCustomAttribute3: isSet(object.productCustomAttribute3)
        ? globalThis.String(object.productCustomAttribute3)
        : undefined,
      productCustomAttribute4: isSet(object.productCustomAttribute4)
        ? globalThis.String(object.productCustomAttribute4)
        : undefined,
      productFeedLabel: isSet(object.productFeedLabel) ? globalThis.String(object.productFeedLabel) : undefined,
      productItemId: isSet(object.productItemId) ? globalThis.String(object.productItemId) : undefined,
      productLanguage: isSet(object.productLanguage) ? globalThis.String(object.productLanguage) : undefined,
      productMerchantId: isSet(object.productMerchantId) ? Long.fromValue(object.productMerchantId) : undefined,
      productStoreId: isSet(object.productStoreId) ? globalThis.String(object.productStoreId) : undefined,
      productTitle: isSet(object.productTitle) ? globalThis.String(object.productTitle) : undefined,
      productTypeL1: isSet(object.productTypeL1) ? globalThis.String(object.productTypeL1) : undefined,
      productTypeL2: isSet(object.productTypeL2) ? globalThis.String(object.productTypeL2) : undefined,
      productTypeL3: isSet(object.productTypeL3) ? globalThis.String(object.productTypeL3) : undefined,
      productTypeL4: isSet(object.productTypeL4) ? globalThis.String(object.productTypeL4) : undefined,
      productTypeL5: isSet(object.productTypeL5) ? globalThis.String(object.productTypeL5) : undefined,
      quarter: isSet(object.quarter) ? globalThis.String(object.quarter) : undefined,
      recommendationType: isSet(object.recommendationType)
        ? recommendationTypeEnum_RecommendationTypeFromJSON(object.recommendationType)
        : 0,
      searchEngineResultsPageType: isSet(object.searchEngineResultsPageType)
        ? searchEngineResultsPageTypeEnum_SearchEngineResultsPageTypeFromJSON(object.searchEngineResultsPageType)
        : 0,
      searchSubcategory: isSet(object.searchSubcategory) ? globalThis.String(object.searchSubcategory) : undefined,
      searchTerm: isSet(object.searchTerm) ? globalThis.String(object.searchTerm) : undefined,
      searchTermMatchType: isSet(object.searchTermMatchType)
        ? searchTermMatchTypeEnum_SearchTermMatchTypeFromJSON(object.searchTermMatchType)
        : 0,
      slot: isSet(object.slot) ? slotEnum_SlotFromJSON(object.slot) : 0,
      conversionValueRulePrimaryDimension: isSet(object.conversionValueRulePrimaryDimension)
        ? conversionValueRulePrimaryDimensionEnum_ConversionValueRulePrimaryDimensionFromJSON(
          object.conversionValueRulePrimaryDimension,
        )
        : 0,
      webpage: isSet(object.webpage) ? globalThis.String(object.webpage) : undefined,
      week: isSet(object.week) ? globalThis.String(object.week) : undefined,
      year: isSet(object.year) ? globalThis.Number(object.year) : undefined,
      skAdNetworkConversionValue: isSet(object.skAdNetworkConversionValue)
        ? Long.fromValue(object.skAdNetworkConversionValue)
        : undefined,
      skAdNetworkUserType: isSet(object.skAdNetworkUserType)
        ? skAdNetworkUserTypeEnum_SkAdNetworkUserTypeFromJSON(object.skAdNetworkUserType)
        : 0,
      skAdNetworkAdEventType: isSet(object.skAdNetworkAdEventType)
        ? skAdNetworkAdEventTypeEnum_SkAdNetworkAdEventTypeFromJSON(object.skAdNetworkAdEventType)
        : 0,
      skAdNetworkSourceApp: isSet(object.skAdNetworkSourceApp)
        ? SkAdNetworkSourceApp.fromJSON(object.skAdNetworkSourceApp)
        : undefined,
      skAdNetworkAttributionCredit: isSet(object.skAdNetworkAttributionCredit)
        ? skAdNetworkAttributionCreditEnum_SkAdNetworkAttributionCreditFromJSON(object.skAdNetworkAttributionCredit)
        : 0,
      skAdNetworkCoarseConversionValue: isSet(object.skAdNetworkCoarseConversionValue)
        ? skAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValueFromJSON(
          object.skAdNetworkCoarseConversionValue,
        )
        : 0,
      skAdNetworkSourceDomain: isSet(object.skAdNetworkSourceDomain)
        ? globalThis.String(object.skAdNetworkSourceDomain)
        : undefined,
      skAdNetworkSourceType: isSet(object.skAdNetworkSourceType)
        ? skAdNetworkSourceTypeEnum_SkAdNetworkSourceTypeFromJSON(object.skAdNetworkSourceType)
        : 0,
      skAdNetworkPostbackSequenceIndex: isSet(object.skAdNetworkPostbackSequenceIndex)
        ? Long.fromValue(object.skAdNetworkPostbackSequenceIndex)
        : undefined,
      assetInteractionTarget: isSet(object.assetInteractionTarget)
        ? AssetInteractionTarget.fromJSON(object.assetInteractionTarget)
        : undefined,
      newVersusReturningCustomers: isSet(object.newVersusReturningCustomers)
        ? convertingUserPriorEngagementTypeAndLtvBucketEnum_ConvertingUserPriorEngagementTypeAndLtvBucketFromJSON(
          object.newVersusReturningCustomers,
        )
        : 0,
    };
  },

  toJSON(message: Segments): unknown {
    const obj: any = {};
    if (message.activityAccountId !== undefined) {
      obj.activityAccountId = (message.activityAccountId || Long.ZERO).toString();
    }
    if (message.activityCity !== undefined) {
      obj.activityCity = message.activityCity;
    }
    if (message.activityCountry !== undefined) {
      obj.activityCountry = message.activityCountry;
    }
    if (message.activityRating !== undefined) {
      obj.activityRating = (message.activityRating || Long.ZERO).toString();
    }
    if (message.activityState !== undefined) {
      obj.activityState = message.activityState;
    }
    if (message.externalActivityId !== undefined) {
      obj.externalActivityId = message.externalActivityId;
    }
    if (message.adDestinationType !== 0) {
      obj.adDestinationType = adDestinationTypeEnum_AdDestinationTypeToJSON(message.adDestinationType);
    }
    if (message.adNetworkType !== 0) {
      obj.adNetworkType = adNetworkTypeEnum_AdNetworkTypeToJSON(message.adNetworkType);
    }
    if (message.adGroup !== undefined) {
      obj.adGroup = message.adGroup;
    }
    if (message.assetGroup !== undefined) {
      obj.assetGroup = message.assetGroup;
    }
    if (message.auctionInsightDomain !== undefined) {
      obj.auctionInsightDomain = message.auctionInsightDomain;
    }
    if (message.budgetCampaignAssociationStatus !== undefined) {
      obj.budgetCampaignAssociationStatus = BudgetCampaignAssociationStatus.toJSON(
        message.budgetCampaignAssociationStatus,
      );
    }
    if (message.campaign !== undefined) {
      obj.campaign = message.campaign;
    }
    if (message.clickType !== 0) {
      obj.clickType = clickTypeEnum_ClickTypeToJSON(message.clickType);
    }
    if (message.conversionAction !== undefined) {
      obj.conversionAction = message.conversionAction;
    }
    if (message.conversionActionCategory !== 0) {
      obj.conversionActionCategory = conversionActionCategoryEnum_ConversionActionCategoryToJSON(
        message.conversionActionCategory,
      );
    }
    if (message.conversionActionName !== undefined) {
      obj.conversionActionName = message.conversionActionName;
    }
    if (message.conversionAdjustment !== undefined) {
      obj.conversionAdjustment = message.conversionAdjustment;
    }
    if (message.conversionAttributionEventType !== 0) {
      obj.conversionAttributionEventType = conversionAttributionEventTypeEnum_ConversionAttributionEventTypeToJSON(
        message.conversionAttributionEventType,
      );
    }
    if (message.conversionLagBucket !== 0) {
      obj.conversionLagBucket = conversionLagBucketEnum_ConversionLagBucketToJSON(message.conversionLagBucket);
    }
    if (message.conversionOrAdjustmentLagBucket !== 0) {
      obj.conversionOrAdjustmentLagBucket = conversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucketToJSON(
        message.conversionOrAdjustmentLagBucket,
      );
    }
    if (message.date !== undefined) {
      obj.date = message.date;
    }
    if (message.dayOfWeek !== 0) {
      obj.dayOfWeek = dayOfWeekEnum_DayOfWeekToJSON(message.dayOfWeek);
    }
    if (message.device !== 0) {
      obj.device = deviceEnum_DeviceToJSON(message.device);
    }
    if (message.externalConversionSource !== 0) {
      obj.externalConversionSource = externalConversionSourceEnum_ExternalConversionSourceToJSON(
        message.externalConversionSource,
      );
    }
    if (message.geoTargetAirport !== undefined) {
      obj.geoTargetAirport = message.geoTargetAirport;
    }
    if (message.geoTargetCanton !== undefined) {
      obj.geoTargetCanton = message.geoTargetCanton;
    }
    if (message.geoTargetCity !== undefined) {
      obj.geoTargetCity = message.geoTargetCity;
    }
    if (message.geoTargetCountry !== undefined) {
      obj.geoTargetCountry = message.geoTargetCountry;
    }
    if (message.geoTargetCounty !== undefined) {
      obj.geoTargetCounty = message.geoTargetCounty;
    }
    if (message.geoTargetDistrict !== undefined) {
      obj.geoTargetDistrict = message.geoTargetDistrict;
    }
    if (message.geoTargetMetro !== undefined) {
      obj.geoTargetMetro = message.geoTargetMetro;
    }
    if (message.geoTargetMostSpecificLocation !== undefined) {
      obj.geoTargetMostSpecificLocation = message.geoTargetMostSpecificLocation;
    }
    if (message.geoTargetPostalCode !== undefined) {
      obj.geoTargetPostalCode = message.geoTargetPostalCode;
    }
    if (message.geoTargetProvince !== undefined) {
      obj.geoTargetProvince = message.geoTargetProvince;
    }
    if (message.geoTargetRegion !== undefined) {
      obj.geoTargetRegion = message.geoTargetRegion;
    }
    if (message.geoTargetState !== undefined) {
      obj.geoTargetState = message.geoTargetState;
    }
    if (message.hotelBookingWindowDays !== undefined) {
      obj.hotelBookingWindowDays = (message.hotelBookingWindowDays || Long.ZERO).toString();
    }
    if (message.hotelCenterId !== undefined) {
      obj.hotelCenterId = (message.hotelCenterId || Long.ZERO).toString();
    }
    if (message.hotelCheckInDate !== undefined) {
      obj.hotelCheckInDate = message.hotelCheckInDate;
    }
    if (message.hotelCheckInDayOfWeek !== 0) {
      obj.hotelCheckInDayOfWeek = dayOfWeekEnum_DayOfWeekToJSON(message.hotelCheckInDayOfWeek);
    }
    if (message.hotelCity !== undefined) {
      obj.hotelCity = message.hotelCity;
    }
    if (message.hotelClass !== undefined) {
      obj.hotelClass = Math.round(message.hotelClass);
    }
    if (message.hotelCountry !== undefined) {
      obj.hotelCountry = message.hotelCountry;
    }
    if (message.hotelDateSelectionType !== 0) {
      obj.hotelDateSelectionType = hotelDateSelectionTypeEnum_HotelDateSelectionTypeToJSON(
        message.hotelDateSelectionType,
      );
    }
    if (message.hotelLengthOfStay !== undefined) {
      obj.hotelLengthOfStay = Math.round(message.hotelLengthOfStay);
    }
    if (message.hotelRateRuleId !== undefined) {
      obj.hotelRateRuleId = message.hotelRateRuleId;
    }
    if (message.hotelRateType !== 0) {
      obj.hotelRateType = hotelRateTypeEnum_HotelRateTypeToJSON(message.hotelRateType);
    }
    if (message.hotelPriceBucket !== 0) {
      obj.hotelPriceBucket = hotelPriceBucketEnum_HotelPriceBucketToJSON(message.hotelPriceBucket);
    }
    if (message.hotelState !== undefined) {
      obj.hotelState = message.hotelState;
    }
    if (message.hour !== undefined) {
      obj.hour = Math.round(message.hour);
    }
    if (message.interactionOnThisExtension !== undefined) {
      obj.interactionOnThisExtension = message.interactionOnThisExtension;
    }
    if (message.keyword !== undefined) {
      obj.keyword = Keyword.toJSON(message.keyword);
    }
    if (message.month !== undefined) {
      obj.month = message.month;
    }
    if (message.monthOfYear !== 0) {
      obj.monthOfYear = monthOfYearEnum_MonthOfYearToJSON(message.monthOfYear);
    }
    if (message.partnerHotelId !== undefined) {
      obj.partnerHotelId = message.partnerHotelId;
    }
    if (message.placeholderType !== 0) {
      obj.placeholderType = placeholderTypeEnum_PlaceholderTypeToJSON(message.placeholderType);
    }
    if (message.productAggregatorId !== undefined) {
      obj.productAggregatorId = (message.productAggregatorId || Long.ZERO).toString();
    }
    if (message.productCategoryLevel1 !== undefined) {
      obj.productCategoryLevel1 = message.productCategoryLevel1;
    }
    if (message.productCategoryLevel2 !== undefined) {
      obj.productCategoryLevel2 = message.productCategoryLevel2;
    }
    if (message.productCategoryLevel3 !== undefined) {
      obj.productCategoryLevel3 = message.productCategoryLevel3;
    }
    if (message.productCategoryLevel4 !== undefined) {
      obj.productCategoryLevel4 = message.productCategoryLevel4;
    }
    if (message.productCategoryLevel5 !== undefined) {
      obj.productCategoryLevel5 = message.productCategoryLevel5;
    }
    if (message.productBrand !== undefined) {
      obj.productBrand = message.productBrand;
    }
    if (message.productChannel !== 0) {
      obj.productChannel = productChannelEnum_ProductChannelToJSON(message.productChannel);
    }
    if (message.productChannelExclusivity !== 0) {
      obj.productChannelExclusivity = productChannelExclusivityEnum_ProductChannelExclusivityToJSON(
        message.productChannelExclusivity,
      );
    }
    if (message.productCondition !== 0) {
      obj.productCondition = productConditionEnum_ProductConditionToJSON(message.productCondition);
    }
    if (message.productCountry !== undefined) {
      obj.productCountry = message.productCountry;
    }
    if (message.productCustomAttribute0 !== undefined) {
      obj.productCustomAttribute0 = message.productCustomAttribute0;
    }
    if (message.productCustomAttribute1 !== undefined) {
      obj.productCustomAttribute1 = message.productCustomAttribute1;
    }
    if (message.productCustomAttribute2 !== undefined) {
      obj.productCustomAttribute2 = message.productCustomAttribute2;
    }
    if (message.productCustomAttribute3 !== undefined) {
      obj.productCustomAttribute3 = message.productCustomAttribute3;
    }
    if (message.productCustomAttribute4 !== undefined) {
      obj.productCustomAttribute4 = message.productCustomAttribute4;
    }
    if (message.productFeedLabel !== undefined) {
      obj.productFeedLabel = message.productFeedLabel;
    }
    if (message.productItemId !== undefined) {
      obj.productItemId = message.productItemId;
    }
    if (message.productLanguage !== undefined) {
      obj.productLanguage = message.productLanguage;
    }
    if (message.productMerchantId !== undefined) {
      obj.productMerchantId = (message.productMerchantId || Long.ZERO).toString();
    }
    if (message.productStoreId !== undefined) {
      obj.productStoreId = message.productStoreId;
    }
    if (message.productTitle !== undefined) {
      obj.productTitle = message.productTitle;
    }
    if (message.productTypeL1 !== undefined) {
      obj.productTypeL1 = message.productTypeL1;
    }
    if (message.productTypeL2 !== undefined) {
      obj.productTypeL2 = message.productTypeL2;
    }
    if (message.productTypeL3 !== undefined) {
      obj.productTypeL3 = message.productTypeL3;
    }
    if (message.productTypeL4 !== undefined) {
      obj.productTypeL4 = message.productTypeL4;
    }
    if (message.productTypeL5 !== undefined) {
      obj.productTypeL5 = message.productTypeL5;
    }
    if (message.quarter !== undefined) {
      obj.quarter = message.quarter;
    }
    if (message.recommendationType !== 0) {
      obj.recommendationType = recommendationTypeEnum_RecommendationTypeToJSON(message.recommendationType);
    }
    if (message.searchEngineResultsPageType !== 0) {
      obj.searchEngineResultsPageType = searchEngineResultsPageTypeEnum_SearchEngineResultsPageTypeToJSON(
        message.searchEngineResultsPageType,
      );
    }
    if (message.searchSubcategory !== undefined) {
      obj.searchSubcategory = message.searchSubcategory;
    }
    if (message.searchTerm !== undefined) {
      obj.searchTerm = message.searchTerm;
    }
    if (message.searchTermMatchType !== 0) {
      obj.searchTermMatchType = searchTermMatchTypeEnum_SearchTermMatchTypeToJSON(message.searchTermMatchType);
    }
    if (message.slot !== 0) {
      obj.slot = slotEnum_SlotToJSON(message.slot);
    }
    if (message.conversionValueRulePrimaryDimension !== 0) {
      obj.conversionValueRulePrimaryDimension =
        conversionValueRulePrimaryDimensionEnum_ConversionValueRulePrimaryDimensionToJSON(
          message.conversionValueRulePrimaryDimension,
        );
    }
    if (message.webpage !== undefined) {
      obj.webpage = message.webpage;
    }
    if (message.week !== undefined) {
      obj.week = message.week;
    }
    if (message.year !== undefined) {
      obj.year = Math.round(message.year);
    }
    if (message.skAdNetworkConversionValue !== undefined) {
      obj.skAdNetworkConversionValue = (message.skAdNetworkConversionValue || Long.ZERO).toString();
    }
    if (message.skAdNetworkUserType !== 0) {
      obj.skAdNetworkUserType = skAdNetworkUserTypeEnum_SkAdNetworkUserTypeToJSON(message.skAdNetworkUserType);
    }
    if (message.skAdNetworkAdEventType !== 0) {
      obj.skAdNetworkAdEventType = skAdNetworkAdEventTypeEnum_SkAdNetworkAdEventTypeToJSON(
        message.skAdNetworkAdEventType,
      );
    }
    if (message.skAdNetworkSourceApp !== undefined) {
      obj.skAdNetworkSourceApp = SkAdNetworkSourceApp.toJSON(message.skAdNetworkSourceApp);
    }
    if (message.skAdNetworkAttributionCredit !== 0) {
      obj.skAdNetworkAttributionCredit = skAdNetworkAttributionCreditEnum_SkAdNetworkAttributionCreditToJSON(
        message.skAdNetworkAttributionCredit,
      );
    }
    if (message.skAdNetworkCoarseConversionValue !== 0) {
      obj.skAdNetworkCoarseConversionValue =
        skAdNetworkCoarseConversionValueEnum_SkAdNetworkCoarseConversionValueToJSON(
          message.skAdNetworkCoarseConversionValue,
        );
    }
    if (message.skAdNetworkSourceDomain !== undefined) {
      obj.skAdNetworkSourceDomain = message.skAdNetworkSourceDomain;
    }
    if (message.skAdNetworkSourceType !== 0) {
      obj.skAdNetworkSourceType = skAdNetworkSourceTypeEnum_SkAdNetworkSourceTypeToJSON(message.skAdNetworkSourceType);
    }
    if (message.skAdNetworkPostbackSequenceIndex !== undefined) {
      obj.skAdNetworkPostbackSequenceIndex = (message.skAdNetworkPostbackSequenceIndex || Long.ZERO).toString();
    }
    if (message.assetInteractionTarget !== undefined) {
      obj.assetInteractionTarget = AssetInteractionTarget.toJSON(message.assetInteractionTarget);
    }
    if (message.newVersusReturningCustomers !== 0) {
      obj.newVersusReturningCustomers =
        convertingUserPriorEngagementTypeAndLtvBucketEnum_ConvertingUserPriorEngagementTypeAndLtvBucketToJSON(
          message.newVersusReturningCustomers,
        );
    }
    return obj;
  },

  create(base?: DeepPartial<Segments>): Segments {
    return Segments.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<Segments>): Segments {
    const message = createBaseSegments();
    message.activityAccountId = (object.activityAccountId !== undefined && object.activityAccountId !== null)
      ? Long.fromValue(object.activityAccountId)
      : undefined;
    message.activityCity = object.activityCity ?? undefined;
    message.activityCountry = object.activityCountry ?? undefined;
    message.activityRating = (object.activityRating !== undefined && object.activityRating !== null)
      ? Long.fromValue(object.activityRating)
      : undefined;
    message.activityState = object.activityState ?? undefined;
    message.externalActivityId = object.externalActivityId ?? undefined;
    message.adDestinationType = object.adDestinationType ?? 0;
    message.adNetworkType = object.adNetworkType ?? 0;
    message.adGroup = object.adGroup ?? undefined;
    message.assetGroup = object.assetGroup ?? undefined;
    message.auctionInsightDomain = object.auctionInsightDomain ?? undefined;
    message.budgetCampaignAssociationStatus =
      (object.budgetCampaignAssociationStatus !== undefined && object.budgetCampaignAssociationStatus !== null)
        ? BudgetCampaignAssociationStatus.fromPartial(object.budgetCampaignAssociationStatus)
        : undefined;
    message.campaign = object.campaign ?? undefined;
    message.clickType = object.clickType ?? 0;
    message.conversionAction = object.conversionAction ?? undefined;
    message.conversionActionCategory = object.conversionActionCategory ?? 0;
    message.conversionActionName = object.conversionActionName ?? undefined;
    message.conversionAdjustment = object.conversionAdjustment ?? undefined;
    message.conversionAttributionEventType = object.conversionAttributionEventType ?? 0;
    message.conversionLagBucket = object.conversionLagBucket ?? 0;
    message.conversionOrAdjustmentLagBucket = object.conversionOrAdjustmentLagBucket ?? 0;
    message.date = object.date ?? undefined;
    message.dayOfWeek = object.dayOfWeek ?? 0;
    message.device = object.device ?? 0;
    message.externalConversionSource = object.externalConversionSource ?? 0;
    message.geoTargetAirport = object.geoTargetAirport ?? undefined;
    message.geoTargetCanton = object.geoTargetCanton ?? undefined;
    message.geoTargetCity = object.geoTargetCity ?? undefined;
    message.geoTargetCountry = object.geoTargetCountry ?? undefined;
    message.geoTargetCounty = object.geoTargetCounty ?? undefined;
    message.geoTargetDistrict = object.geoTargetDistrict ?? undefined;
    message.geoTargetMetro = object.geoTargetMetro ?? undefined;
    message.geoTargetMostSpecificLocation = object.geoTargetMostSpecificLocation ?? undefined;
    message.geoTargetPostalCode = object.geoTargetPostalCode ?? undefined;
    message.geoTargetProvince = object.geoTargetProvince ?? undefined;
    message.geoTargetRegion = object.geoTargetRegion ?? undefined;
    message.geoTargetState = object.geoTargetState ?? undefined;
    message.hotelBookingWindowDays =
      (object.hotelBookingWindowDays !== undefined && object.hotelBookingWindowDays !== null)
        ? Long.fromValue(object.hotelBookingWindowDays)
        : undefined;
    message.hotelCenterId = (object.hotelCenterId !== undefined && object.hotelCenterId !== null)
      ? Long.fromValue(object.hotelCenterId)
      : undefined;
    message.hotelCheckInDate = object.hotelCheckInDate ?? undefined;
    message.hotelCheckInDayOfWeek = object.hotelCheckInDayOfWeek ?? 0;
    message.hotelCity = object.hotelCity ?? undefined;
    message.hotelClass = object.hotelClass ?? undefined;
    message.hotelCountry = object.hotelCountry ?? undefined;
    message.hotelDateSelectionType = object.hotelDateSelectionType ?? 0;
    message.hotelLengthOfStay = object.hotelLengthOfStay ?? undefined;
    message.hotelRateRuleId = object.hotelRateRuleId ?? undefined;
    message.hotelRateType = object.hotelRateType ?? 0;
    message.hotelPriceBucket = object.hotelPriceBucket ?? 0;
    message.hotelState = object.hotelState ?? undefined;
    message.hour = object.hour ?? undefined;
    message.interactionOnThisExtension = object.interactionOnThisExtension ?? undefined;
    message.keyword = (object.keyword !== undefined && object.keyword !== null)
      ? Keyword.fromPartial(object.keyword)
      : undefined;
    message.month = object.month ?? undefined;
    message.monthOfYear = object.monthOfYear ?? 0;
    message.partnerHotelId = object.partnerHotelId ?? undefined;
    message.placeholderType = object.placeholderType ?? 0;
    message.productAggregatorId = (object.productAggregatorId !== undefined && object.productAggregatorId !== null)
      ? Long.fromValue(object.productAggregatorId)
      : undefined;
    message.productCategoryLevel1 = object.productCategoryLevel1 ?? undefined;
    message.productCategoryLevel2 = object.productCategoryLevel2 ?? undefined;
    message.productCategoryLevel3 = object.productCategoryLevel3 ?? undefined;
    message.productCategoryLevel4 = object.productCategoryLevel4 ?? undefined;
    message.productCategoryLevel5 = object.productCategoryLevel5 ?? undefined;
    message.productBrand = object.productBrand ?? undefined;
    message.productChannel = object.productChannel ?? 0;
    message.productChannelExclusivity = object.productChannelExclusivity ?? 0;
    message.productCondition = object.productCondition ?? 0;
    message.productCountry = object.productCountry ?? undefined;
    message.productCustomAttribute0 = object.productCustomAttribute0 ?? undefined;
    message.productCustomAttribute1 = object.productCustomAttribute1 ?? undefined;
    message.productCustomAttribute2 = object.productCustomAttribute2 ?? undefined;
    message.productCustomAttribute3 = object.productCustomAttribute3 ?? undefined;
    message.productCustomAttribute4 = object.productCustomAttribute4 ?? undefined;
    message.productFeedLabel = object.productFeedLabel ?? undefined;
    message.productItemId = object.productItemId ?? undefined;
    message.productLanguage = object.productLanguage ?? undefined;
    message.productMerchantId = (object.productMerchantId !== undefined && object.productMerchantId !== null)
      ? Long.fromValue(object.productMerchantId)
      : undefined;
    message.productStoreId = object.productStoreId ?? undefined;
    message.productTitle = object.productTitle ?? undefined;
    message.productTypeL1 = object.productTypeL1 ?? undefined;
    message.productTypeL2 = object.productTypeL2 ?? undefined;
    message.productTypeL3 = object.productTypeL3 ?? undefined;
    message.productTypeL4 = object.productTypeL4 ?? undefined;
    message.productTypeL5 = object.productTypeL5 ?? undefined;
    message.quarter = object.quarter ?? undefined;
    message.recommendationType = object.recommendationType ?? 0;
    message.searchEngineResultsPageType = object.searchEngineResultsPageType ?? 0;
    message.searchSubcategory = object.searchSubcategory ?? undefined;
    message.searchTerm = object.searchTerm ?? undefined;
    message.searchTermMatchType = object.searchTermMatchType ?? 0;
    message.slot = object.slot ?? 0;
    message.conversionValueRulePrimaryDimension = object.conversionValueRulePrimaryDimension ?? 0;
    message.webpage = object.webpage ?? undefined;
    message.week = object.week ?? undefined;
    message.year = object.year ?? undefined;
    message.skAdNetworkConversionValue =
      (object.skAdNetworkConversionValue !== undefined && object.skAdNetworkConversionValue !== null)
        ? Long.fromValue(object.skAdNetworkConversionValue)
        : undefined;
    message.skAdNetworkUserType = object.skAdNetworkUserType ?? 0;
    message.skAdNetworkAdEventType = object.skAdNetworkAdEventType ?? 0;
    message.skAdNetworkSourceApp = (object.skAdNetworkSourceApp !== undefined && object.skAdNetworkSourceApp !== null)
      ? SkAdNetworkSourceApp.fromPartial(object.skAdNetworkSourceApp)
      : undefined;
    message.skAdNetworkAttributionCredit = object.skAdNetworkAttributionCredit ?? 0;
    message.skAdNetworkCoarseConversionValue = object.skAdNetworkCoarseConversionValue ?? 0;
    message.skAdNetworkSourceDomain = object.skAdNetworkSourceDomain ?? undefined;
    message.skAdNetworkSourceType = object.skAdNetworkSourceType ?? 0;
    message.skAdNetworkPostbackSequenceIndex =
      (object.skAdNetworkPostbackSequenceIndex !== undefined && object.skAdNetworkPostbackSequenceIndex !== null)
        ? Long.fromValue(object.skAdNetworkPostbackSequenceIndex)
        : undefined;
    message.assetInteractionTarget =
      (object.assetInteractionTarget !== undefined && object.assetInteractionTarget !== null)
        ? AssetInteractionTarget.fromPartial(object.assetInteractionTarget)
        : undefined;
    message.newVersusReturningCustomers = object.newVersusReturningCustomers ?? 0;
    return message;
  },
};

function createBaseKeyword(): Keyword {
  return { adGroupCriterion: undefined, info: undefined };
}

export const Keyword: MessageFns<Keyword> = {
  encode(message: Keyword, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.adGroupCriterion !== undefined) {
      writer.uint32(26).string(message.adGroupCriterion);
    }
    if (message.info !== undefined) {
      KeywordInfo.encode(message.info, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Keyword {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseKeyword();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 3:
          if (tag !== 26) {
            break;
          }

          message.adGroupCriterion = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.info = KeywordInfo.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Keyword {
    return {
      adGroupCriterion: isSet(object.adGroupCriterion) ? globalThis.String(object.adGroupCriterion) : undefined,
      info: isSet(object.info) ? KeywordInfo.fromJSON(object.info) : undefined,
    };
  },

  toJSON(message: Keyword): unknown {
    const obj: any = {};
    if (message.adGroupCriterion !== undefined) {
      obj.adGroupCriterion = message.adGroupCriterion;
    }
    if (message.info !== undefined) {
      obj.info = KeywordInfo.toJSON(message.info);
    }
    return obj;
  },

  create(base?: DeepPartial<Keyword>): Keyword {
    return Keyword.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<Keyword>): Keyword {
    const message = createBaseKeyword();
    message.adGroupCriterion = object.adGroupCriterion ?? undefined;
    message.info = (object.info !== undefined && object.info !== null)
      ? KeywordInfo.fromPartial(object.info)
      : undefined;
    return message;
  },
};

function createBaseBudgetCampaignAssociationStatus(): BudgetCampaignAssociationStatus {
  return { campaign: undefined, status: 0 };
}

export const BudgetCampaignAssociationStatus: MessageFns<BudgetCampaignAssociationStatus> = {
  encode(message: BudgetCampaignAssociationStatus, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.campaign !== undefined) {
      writer.uint32(10).string(message.campaign);
    }
    if (message.status !== 0) {
      writer.uint32(16).int32(message.status);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): BudgetCampaignAssociationStatus {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseBudgetCampaignAssociationStatus();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.campaign = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): BudgetCampaignAssociationStatus {
    return {
      campaign: isSet(object.campaign) ? globalThis.String(object.campaign) : undefined,
      status: isSet(object.status)
        ? budgetCampaignAssociationStatusEnum_BudgetCampaignAssociationStatusFromJSON(object.status)
        : 0,
    };
  },

  toJSON(message: BudgetCampaignAssociationStatus): unknown {
    const obj: any = {};
    if (message.campaign !== undefined) {
      obj.campaign = message.campaign;
    }
    if (message.status !== 0) {
      obj.status = budgetCampaignAssociationStatusEnum_BudgetCampaignAssociationStatusToJSON(message.status);
    }
    return obj;
  },

  create(base?: DeepPartial<BudgetCampaignAssociationStatus>): BudgetCampaignAssociationStatus {
    return BudgetCampaignAssociationStatus.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<BudgetCampaignAssociationStatus>): BudgetCampaignAssociationStatus {
    const message = createBaseBudgetCampaignAssociationStatus();
    message.campaign = object.campaign ?? undefined;
    message.status = object.status ?? 0;
    return message;
  },
};

function createBaseAssetInteractionTarget(): AssetInteractionTarget {
  return { asset: "", interactionOnThisAsset: false };
}

export const AssetInteractionTarget: MessageFns<AssetInteractionTarget> = {
  encode(message: AssetInteractionTarget, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.asset !== "") {
      writer.uint32(10).string(message.asset);
    }
    if (message.interactionOnThisAsset !== false) {
      writer.uint32(16).bool(message.interactionOnThisAsset);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): AssetInteractionTarget {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseAssetInteractionTarget();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.asset = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.interactionOnThisAsset = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): AssetInteractionTarget {
    return {
      asset: isSet(object.asset) ? globalThis.String(object.asset) : "",
      interactionOnThisAsset: isSet(object.interactionOnThisAsset)
        ? globalThis.Boolean(object.interactionOnThisAsset)
        : false,
    };
  },

  toJSON(message: AssetInteractionTarget): unknown {
    const obj: any = {};
    if (message.asset !== "") {
      obj.asset = message.asset;
    }
    if (message.interactionOnThisAsset !== false) {
      obj.interactionOnThisAsset = message.interactionOnThisAsset;
    }
    return obj;
  },

  create(base?: DeepPartial<AssetInteractionTarget>): AssetInteractionTarget {
    return AssetInteractionTarget.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<AssetInteractionTarget>): AssetInteractionTarget {
    const message = createBaseAssetInteractionTarget();
    message.asset = object.asset ?? "";
    message.interactionOnThisAsset = object.interactionOnThisAsset ?? false;
    return message;
  },
};

function createBaseSkAdNetworkSourceApp(): SkAdNetworkSourceApp {
  return { skAdNetworkSourceAppId: undefined };
}

export const SkAdNetworkSourceApp: MessageFns<SkAdNetworkSourceApp> = {
  encode(message: SkAdNetworkSourceApp, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.skAdNetworkSourceAppId !== undefined) {
      writer.uint32(10).string(message.skAdNetworkSourceAppId);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): SkAdNetworkSourceApp {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseSkAdNetworkSourceApp();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.skAdNetworkSourceAppId = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): SkAdNetworkSourceApp {
    return {
      skAdNetworkSourceAppId: isSet(object.skAdNetworkSourceAppId)
        ? globalThis.String(object.skAdNetworkSourceAppId)
        : undefined,
    };
  },

  toJSON(message: SkAdNetworkSourceApp): unknown {
    const obj: any = {};
    if (message.skAdNetworkSourceAppId !== undefined) {
      obj.skAdNetworkSourceAppId = message.skAdNetworkSourceAppId;
    }
    return obj;
  },

  create(base?: DeepPartial<SkAdNetworkSourceApp>): SkAdNetworkSourceApp {
    return SkAdNetworkSourceApp.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<SkAdNetworkSourceApp>): SkAdNetworkSourceApp {
    const message = createBaseSkAdNetworkSourceApp();
    message.skAdNetworkSourceAppId = object.skAdNetworkSourceAppId ?? undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
