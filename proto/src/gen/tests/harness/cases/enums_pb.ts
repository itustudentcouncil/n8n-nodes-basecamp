// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file tests/harness/cases/enums.proto (package tests.harness.cases, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_validate_validate } from "../../../validate/validate_pb";
import type { Embed_DoubleEmbed_DoubleEnumerated, Embed_Enumerated, Embed_FooNumber } from "./other_package/embed_pb";
import { file_tests_harness_cases_other_package_embed } from "./other_package/embed_pb";
import type { Embed_BarNumber, Embed_Enumerated as Embed_Enumerated$1 } from "./yet_another_package/embed_pb";
import { file_tests_harness_cases_yet_another_package_embed } from "./yet_another_package/embed_pb";
import type { Direction } from "./sort/sort_pb";
import { file_tests_harness_cases_sort_sort } from "./sort/sort_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tests/harness/cases/enums.proto.
 */
export const file_tests_harness_cases_enums: GenFile = /*@__PURE__*/
  fileDesc("Ch90ZXN0cy9oYXJuZXNzL2Nhc2VzL2VudW1zLnByb3RvEhN0ZXN0cy5oYXJuZXNzLmNhc2VzIjYKCEVudW1Ob25lEioKA3ZhbBgBIAEoDjIdLnRlc3RzLmhhcm5lc3MuY2FzZXMuVGVzdEVudW0iQQoJRW51bUNvbnN0EjQKA3ZhbBgBIAEoDjIdLnRlc3RzLmhhcm5lc3MuY2FzZXMuVGVzdEVudW1CCPpCBYIBAggCIksKDkVudW1BbGlhc0NvbnN0EjkKA3ZhbBgBIAEoDjIiLnRlc3RzLmhhcm5lc3MuY2FzZXMuVGVzdEVudW1BbGlhc0II+kIFggECCAIiQwoLRW51bURlZmluZWQSNAoDdmFsGAEgASgOMh0udGVzdHMuaGFybmVzcy5jYXNlcy5UZXN0RW51bUII+kIFggECEAEiTQoQRW51bUFsaWFzRGVmaW5lZBI5CgN2YWwYASABKA4yIi50ZXN0cy5oYXJuZXNzLmNhc2VzLlRlc3RFbnVtQWxpYXNCCPpCBYIBAhABIkAKBkVudW1JbhI2CgN2YWwYASABKA4yHS50ZXN0cy5oYXJuZXNzLmNhc2VzLlRlc3RFbnVtQgr6QgeCAQQYABgCIkoKC0VudW1BbGlhc0luEjsKA3ZhbBgBIAEoDjIiLnRlc3RzLmhhcm5lc3MuY2FzZXMuVGVzdEVudW1BbGlhc0IK+kIHggEEGAAYAiJBCglFbnVtTm90SW4SNAoDdmFsGAEgASgOMh0udGVzdHMuaGFybmVzcy5jYXNlcy5UZXN0RW51bUII+kIFggECIAEiSwoORW51bUFsaWFzTm90SW4SOQoDdmFsGAEgASgOMiIudGVzdHMuaGFybmVzcy5jYXNlcy5UZXN0RW51bUFsaWFzQgj6QgWCAQIgASJaCgxFbnVtRXh0ZXJuYWwSSgoDdmFsGAEgASgOMjMudGVzdHMuaGFybmVzcy5jYXNlcy5vdGhlcl9wYWNrYWdlLkVtYmVkLkVudW1lcmF0ZWRCCPpCBYIBAhABIm0KDUVudW1FeHRlcm5hbDISXAoDdmFsGAEgASgOMkUudGVzdHMuaGFybmVzcy5jYXNlcy5vdGhlcl9wYWNrYWdlLkVtYmVkLkRvdWJsZUVtYmVkLkRvdWJsZUVudW1lcmF0ZWRCCPpCBYIBAhABIq0BCg1FbnVtRXh0ZXJuYWwzEksKA2ZvbxgBIAEoDjIyLnRlc3RzLmhhcm5lc3MuY2FzZXMub3RoZXJfcGFja2FnZS5FbWJlZC5Gb29OdW1iZXJCCvpCB4IBBBgAGAISTwoDYmFyGAIgASgOMjgudGVzdHMuaGFybmVzcy5jYXNlcy55ZXRfYW5vdGhlcl9wYWNrYWdlLkVtYmVkLkJhck51bWJlckII+kIFggECIAEiVgoNRW51bUV4dGVybmFsNBJFCg5zb3J0X2RpcmVjdGlvbhgBIAEoDjIjLnRlc3RzLmhhcm5lc3MuY2FzZXMuc29ydC5EaXJlY3Rpb25CCPpCBYIBAggBIlAKE1JlcGVhdGVkRW51bURlZmluZWQSOQoDdmFsGAEgAygOMh0udGVzdHMuaGFybmVzcy5jYXNlcy5UZXN0RW51bUIN+kIKkgEHIgWCAQIQASJuChtSZXBlYXRlZEV4dGVybmFsRW51bURlZmluZWQSTwoDdmFsGAEgAygOMjMudGVzdHMuaGFybmVzcy5jYXNlcy5vdGhlcl9wYWNrYWdlLkVtYmVkLkVudW1lcmF0ZWRCDfpCCpIBByIFggECEAEifgolUmVwZWF0ZWRZZXRBbm90aGVyRXh0ZXJuYWxFbnVtRGVmaW5lZBJVCgN2YWwYASADKA4yOS50ZXN0cy5oYXJuZXNzLmNhc2VzLnlldF9hbm90aGVyX3BhY2thZ2UuRW1iZWQuRW51bWVyYXRlZEIN+kIKkgEHIgWCAQIQASK+AQoUUmVwZWF0ZWRFbnVtRXh0ZXJuYWwSUAoDZm9vGAEgAygOMjIudGVzdHMuaGFybmVzcy5jYXNlcy5vdGhlcl9wYWNrYWdlLkVtYmVkLkZvb051bWJlckIP+kIMkgEJIgeCAQQYABgCElQKA2JhchgCIAMoDjI4LnRlc3RzLmhhcm5lc3MuY2FzZXMueWV0X2Fub3RoZXJfcGFja2FnZS5FbWJlZC5CYXJOdW1iZXJCDfpCCpIBByIFggECIAEipQEKDk1hcEVudW1EZWZpbmVkEkgKA3ZhbBgBIAMoCzIsLnRlc3RzLmhhcm5lc3MuY2FzZXMuTWFwRW51bURlZmluZWQuVmFsRW50cnlCDfpCCpoBByoFggECEAEaSQoIVmFsRW50cnkSCwoDa2V5GAEgASgJEiwKBXZhbHVlGAIgASgOMh0udGVzdHMuaGFybmVzcy5jYXNlcy5UZXN0RW51bToCOAEiywEKFk1hcEV4dGVybmFsRW51bURlZmluZWQSUAoDdmFsGAEgAygLMjQudGVzdHMuaGFybmVzcy5jYXNlcy5NYXBFeHRlcm5hbEVudW1EZWZpbmVkLlZhbEVudHJ5Qg36QgqaAQcqBYIBAhABGl8KCFZhbEVudHJ5EgsKA2tleRgBIAEoCRJCCgV2YWx1ZRgCIAEoDjIzLnRlc3RzLmhhcm5lc3MuY2FzZXMub3RoZXJfcGFja2FnZS5FbWJlZC5FbnVtZXJhdGVkOgI4ASKSAQoPRW51bUluc2lkZU9uZU9mEjYKA3ZhbBgBIAEoDjIdLnRlc3RzLmhhcm5lc3MuY2FzZXMuVGVzdEVudW1CCPpCBYIBAhABSAASOQoEdmFsMhgCIAEoDjIdLnRlc3RzLmhhcm5lc3MuY2FzZXMuVGVzdEVudW1CCvpCB4IBBBABIABIAUIFCgNmb29CBQoDYmFyKiYKCFRlc3RFbnVtEggKBFpFUk8QABIHCgNPTkUQARIHCgNUV08QAipICg1UZXN0RW51bUFsaWFzEgUKAUEQABIFCgFCEAESBQoBQxACEgkKBUFMUEhBEAASCAoEQkVUQRABEgkKBUdBTU1BEAIaAhABQkhaRmdpdGh1Yi5jb20vZW52b3lwcm94eS9wcm90b2MtZ2VuLXZhbGlkYXRlL3Rlc3RzL2hhcm5lc3MvY2FzZXMvZ287Y2FzZXNiBnByb3RvMw", [file_validate_validate, file_tests_harness_cases_other_package_embed, file_tests_harness_cases_yet_another_package_embed, file_tests_harness_cases_sort_sort]);

/**
 * @generated from message tests.harness.cases.EnumNone
 */
export type EnumNone = Message<"tests.harness.cases.EnumNone"> & {
  /**
   * @generated from field: tests.harness.cases.TestEnum val = 1;
   */
  val: TestEnum;
};

/**
 * Describes the message tests.harness.cases.EnumNone.
 * Use `create(EnumNoneSchema)` to create a new message.
 */
export const EnumNoneSchema: GenMessage<EnumNone> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 0);

/**
 * @generated from message tests.harness.cases.EnumConst
 */
export type EnumConst = Message<"tests.harness.cases.EnumConst"> & {
  /**
   * @generated from field: tests.harness.cases.TestEnum val = 1;
   */
  val: TestEnum;
};

/**
 * Describes the message tests.harness.cases.EnumConst.
 * Use `create(EnumConstSchema)` to create a new message.
 */
export const EnumConstSchema: GenMessage<EnumConst> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 1);

/**
 * @generated from message tests.harness.cases.EnumAliasConst
 */
export type EnumAliasConst = Message<"tests.harness.cases.EnumAliasConst"> & {
  /**
   * @generated from field: tests.harness.cases.TestEnumAlias val = 1;
   */
  val: TestEnumAlias;
};

/**
 * Describes the message tests.harness.cases.EnumAliasConst.
 * Use `create(EnumAliasConstSchema)` to create a new message.
 */
export const EnumAliasConstSchema: GenMessage<EnumAliasConst> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 2);

/**
 * @generated from message tests.harness.cases.EnumDefined
 */
export type EnumDefined = Message<"tests.harness.cases.EnumDefined"> & {
  /**
   * @generated from field: tests.harness.cases.TestEnum val = 1;
   */
  val: TestEnum;
};

/**
 * Describes the message tests.harness.cases.EnumDefined.
 * Use `create(EnumDefinedSchema)` to create a new message.
 */
export const EnumDefinedSchema: GenMessage<EnumDefined> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 3);

/**
 * @generated from message tests.harness.cases.EnumAliasDefined
 */
export type EnumAliasDefined = Message<"tests.harness.cases.EnumAliasDefined"> & {
  /**
   * @generated from field: tests.harness.cases.TestEnumAlias val = 1;
   */
  val: TestEnumAlias;
};

/**
 * Describes the message tests.harness.cases.EnumAliasDefined.
 * Use `create(EnumAliasDefinedSchema)` to create a new message.
 */
export const EnumAliasDefinedSchema: GenMessage<EnumAliasDefined> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 4);

/**
 * @generated from message tests.harness.cases.EnumIn
 */
export type EnumIn = Message<"tests.harness.cases.EnumIn"> & {
  /**
   * @generated from field: tests.harness.cases.TestEnum val = 1;
   */
  val: TestEnum;
};

/**
 * Describes the message tests.harness.cases.EnumIn.
 * Use `create(EnumInSchema)` to create a new message.
 */
export const EnumInSchema: GenMessage<EnumIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 5);

/**
 * @generated from message tests.harness.cases.EnumAliasIn
 */
export type EnumAliasIn = Message<"tests.harness.cases.EnumAliasIn"> & {
  /**
   * @generated from field: tests.harness.cases.TestEnumAlias val = 1;
   */
  val: TestEnumAlias;
};

/**
 * Describes the message tests.harness.cases.EnumAliasIn.
 * Use `create(EnumAliasInSchema)` to create a new message.
 */
export const EnumAliasInSchema: GenMessage<EnumAliasIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 6);

/**
 * @generated from message tests.harness.cases.EnumNotIn
 */
export type EnumNotIn = Message<"tests.harness.cases.EnumNotIn"> & {
  /**
   * @generated from field: tests.harness.cases.TestEnum val = 1;
   */
  val: TestEnum;
};

/**
 * Describes the message tests.harness.cases.EnumNotIn.
 * Use `create(EnumNotInSchema)` to create a new message.
 */
export const EnumNotInSchema: GenMessage<EnumNotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 7);

/**
 * @generated from message tests.harness.cases.EnumAliasNotIn
 */
export type EnumAliasNotIn = Message<"tests.harness.cases.EnumAliasNotIn"> & {
  /**
   * @generated from field: tests.harness.cases.TestEnumAlias val = 1;
   */
  val: TestEnumAlias;
};

/**
 * Describes the message tests.harness.cases.EnumAliasNotIn.
 * Use `create(EnumAliasNotInSchema)` to create a new message.
 */
export const EnumAliasNotInSchema: GenMessage<EnumAliasNotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 8);

/**
 * @generated from message tests.harness.cases.EnumExternal
 */
export type EnumExternal = Message<"tests.harness.cases.EnumExternal"> & {
  /**
   * @generated from field: tests.harness.cases.other_package.Embed.Enumerated val = 1;
   */
  val: Embed_Enumerated;
};

/**
 * Describes the message tests.harness.cases.EnumExternal.
 * Use `create(EnumExternalSchema)` to create a new message.
 */
export const EnumExternalSchema: GenMessage<EnumExternal> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 9);

/**
 * @generated from message tests.harness.cases.EnumExternal2
 */
export type EnumExternal2 = Message<"tests.harness.cases.EnumExternal2"> & {
  /**
   * @generated from field: tests.harness.cases.other_package.Embed.DoubleEmbed.DoubleEnumerated val = 1;
   */
  val: Embed_DoubleEmbed_DoubleEnumerated;
};

/**
 * Describes the message tests.harness.cases.EnumExternal2.
 * Use `create(EnumExternal2Schema)` to create a new message.
 */
export const EnumExternal2Schema: GenMessage<EnumExternal2> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 10);

/**
 * @generated from message tests.harness.cases.EnumExternal3
 */
export type EnumExternal3 = Message<"tests.harness.cases.EnumExternal3"> & {
  /**
   * @generated from field: tests.harness.cases.other_package.Embed.FooNumber foo = 1;
   */
  foo: Embed_FooNumber;

  /**
   * @generated from field: tests.harness.cases.yet_another_package.Embed.BarNumber bar = 2;
   */
  bar: Embed_BarNumber;
};

/**
 * Describes the message tests.harness.cases.EnumExternal3.
 * Use `create(EnumExternal3Schema)` to create a new message.
 */
export const EnumExternal3Schema: GenMessage<EnumExternal3> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 11);

/**
 * @generated from message tests.harness.cases.EnumExternal4
 */
export type EnumExternal4 = Message<"tests.harness.cases.EnumExternal4"> & {
  /**
   * @generated from field: tests.harness.cases.sort.Direction sort_direction = 1;
   */
  sortDirection: Direction;
};

/**
 * Describes the message tests.harness.cases.EnumExternal4.
 * Use `create(EnumExternal4Schema)` to create a new message.
 */
export const EnumExternal4Schema: GenMessage<EnumExternal4> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 12);

/**
 * @generated from message tests.harness.cases.RepeatedEnumDefined
 */
export type RepeatedEnumDefined = Message<"tests.harness.cases.RepeatedEnumDefined"> & {
  /**
   * @generated from field: repeated tests.harness.cases.TestEnum val = 1;
   */
  val: TestEnum[];
};

/**
 * Describes the message tests.harness.cases.RepeatedEnumDefined.
 * Use `create(RepeatedEnumDefinedSchema)` to create a new message.
 */
export const RepeatedEnumDefinedSchema: GenMessage<RepeatedEnumDefined> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 13);

/**
 * @generated from message tests.harness.cases.RepeatedExternalEnumDefined
 */
export type RepeatedExternalEnumDefined = Message<"tests.harness.cases.RepeatedExternalEnumDefined"> & {
  /**
   * @generated from field: repeated tests.harness.cases.other_package.Embed.Enumerated val = 1;
   */
  val: Embed_Enumerated[];
};

/**
 * Describes the message tests.harness.cases.RepeatedExternalEnumDefined.
 * Use `create(RepeatedExternalEnumDefinedSchema)` to create a new message.
 */
export const RepeatedExternalEnumDefinedSchema: GenMessage<RepeatedExternalEnumDefined> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 14);

/**
 * @generated from message tests.harness.cases.RepeatedYetAnotherExternalEnumDefined
 */
export type RepeatedYetAnotherExternalEnumDefined = Message<"tests.harness.cases.RepeatedYetAnotherExternalEnumDefined"> & {
  /**
   * @generated from field: repeated tests.harness.cases.yet_another_package.Embed.Enumerated val = 1;
   */
  val: Embed_Enumerated$1[];
};

/**
 * Describes the message tests.harness.cases.RepeatedYetAnotherExternalEnumDefined.
 * Use `create(RepeatedYetAnotherExternalEnumDefinedSchema)` to create a new message.
 */
export const RepeatedYetAnotherExternalEnumDefinedSchema: GenMessage<RepeatedYetAnotherExternalEnumDefined> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 15);

/**
 * @generated from message tests.harness.cases.RepeatedEnumExternal
 */
export type RepeatedEnumExternal = Message<"tests.harness.cases.RepeatedEnumExternal"> & {
  /**
   * @generated from field: repeated tests.harness.cases.other_package.Embed.FooNumber foo = 1;
   */
  foo: Embed_FooNumber[];

  /**
   * @generated from field: repeated tests.harness.cases.yet_another_package.Embed.BarNumber bar = 2;
   */
  bar: Embed_BarNumber[];
};

/**
 * Describes the message tests.harness.cases.RepeatedEnumExternal.
 * Use `create(RepeatedEnumExternalSchema)` to create a new message.
 */
export const RepeatedEnumExternalSchema: GenMessage<RepeatedEnumExternal> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 16);

/**
 * @generated from message tests.harness.cases.MapEnumDefined
 */
export type MapEnumDefined = Message<"tests.harness.cases.MapEnumDefined"> & {
  /**
   * @generated from field: map<string, tests.harness.cases.TestEnum> val = 1;
   */
  val: { [key: string]: TestEnum };
};

/**
 * Describes the message tests.harness.cases.MapEnumDefined.
 * Use `create(MapEnumDefinedSchema)` to create a new message.
 */
export const MapEnumDefinedSchema: GenMessage<MapEnumDefined> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 17);

/**
 * @generated from message tests.harness.cases.MapExternalEnumDefined
 */
export type MapExternalEnumDefined = Message<"tests.harness.cases.MapExternalEnumDefined"> & {
  /**
   * @generated from field: map<string, tests.harness.cases.other_package.Embed.Enumerated> val = 1;
   */
  val: { [key: string]: Embed_Enumerated };
};

/**
 * Describes the message tests.harness.cases.MapExternalEnumDefined.
 * Use `create(MapExternalEnumDefinedSchema)` to create a new message.
 */
export const MapExternalEnumDefinedSchema: GenMessage<MapExternalEnumDefined> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 18);

/**
 * @generated from message tests.harness.cases.EnumInsideOneOf
 */
export type EnumInsideOneOf = Message<"tests.harness.cases.EnumInsideOneOf"> & {
  /**
   * @generated from oneof tests.harness.cases.EnumInsideOneOf.foo
   */
  foo: {
    /**
     * @generated from field: tests.harness.cases.TestEnum val = 1;
     */
    value: TestEnum;
    case: "val";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof tests.harness.cases.EnumInsideOneOf.bar
   */
  bar: {
    /**
     * @generated from field: tests.harness.cases.TestEnum val2 = 2;
     */
    value: TestEnum;
    case: "val2";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tests.harness.cases.EnumInsideOneOf.
 * Use `create(EnumInsideOneOfSchema)` to create a new message.
 */
export const EnumInsideOneOfSchema: GenMessage<EnumInsideOneOf> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_enums, 19);

/**
 * @generated from enum tests.harness.cases.TestEnum
 */
export enum TestEnum {
  /**
   * @generated from enum value: ZERO = 0;
   */
  ZERO = 0,

  /**
   * @generated from enum value: ONE = 1;
   */
  ONE = 1,

  /**
   * @generated from enum value: TWO = 2;
   */
  TWO = 2,
}

/**
 * Describes the enum tests.harness.cases.TestEnum.
 */
export const TestEnumSchema: GenEnum<TestEnum> = /*@__PURE__*/
  enumDesc(file_tests_harness_cases_enums, 0);

/**
 * @generated from enum tests.harness.cases.TestEnumAlias
 */
export enum TestEnumAlias {
  /**
   * @generated from enum value: A = 0;
   */
  A = 0,

  /**
   * @generated from enum value: B = 1;
   */
  B = 1,

  /**
   * @generated from enum value: C = 2;
   */
  C = 2,

  /**
   * @generated from enum value: ALPHA = 0;
   */
  ALPHA = 0,

  /**
   * @generated from enum value: BETA = 1;
   */
  BETA = 1,

  /**
   * @generated from enum value: GAMMA = 2;
   */
  GAMMA = 2,
}

/**
 * Describes the enum tests.harness.cases.TestEnumAlias.
 */
export const TestEnumAliasSchema: GenEnum<TestEnumAlias> = /*@__PURE__*/
  enumDesc(file_tests_harness_cases_enums, 1);

