// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file tests/harness/cases/kitchen_sink.proto (package tests.harness.cases, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_validate_validate } from "../../../validate/validate_pb";
import type { Any, Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tests/harness/cases/kitchen_sink.proto.
 */
export const file_tests_harness_cases_kitchen_sink: GenFile = /*@__PURE__*/
  fileDesc("CiZ0ZXN0cy9oYXJuZXNzL2Nhc2VzL2tpdGNoZW5fc2luay5wcm90bxITdGVzdHMuaGFybmVzcy5jYXNlcyLwBgoOQ29tcGxleFRlc3RNc2cSGgoFY29uc3QYASABKAlCC/pCCHIGCgRhYmNkEjMKBm5lc3RlZBgCIAEoCzIjLnRlc3RzLmhhcm5lc3MuY2FzZXMuQ29tcGxleFRlc3RNc2cSGgoJaW50X2NvbnN0GAMgASgFQgf6QgQaAggFEhsKCmJvb2xfY29uc3QYBCABKAhCB/pCBGoCCAASOgoJZmxvYXRfdmFsGAUgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkZsb2F0VmFsdWVCCvpCBwoFJQAAAAASOAoHZHVyX3ZhbBgGIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkIM+kIJqgEGCAEaAggREjYKBnRzX3ZhbBgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCCvpCB7IBBCoCCAcSNAoHYW5vdGhlchgIIAEoCzIjLnRlc3RzLmhhcm5lc3MuY2FzZXMuQ29tcGxleFRlc3RNc2cSHwoLZmxvYXRfY29uc3QYCSABKAJCCvpCBwoFFQAAAEESKgoJZG91YmxlX2luGAogASgBQhf6QhQSEjG0yHa+n4x8QDEAAAAAAMBeQBJCCgplbnVtX2NvbnN0GAsgASgOMiQudGVzdHMuaGFybmVzcy5jYXNlcy5Db21wbGV4VGVzdEVudW1CCPpCBYIBAggCElsKB2FueV92YWwYDCABKAsyFC5nb29nbGUucHJvdG9idWYuQW55QjT6QjGiAS4SLHR5cGUuZ29vZ2xlYXBpcy5jb20vZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEkEKCnJlcF90c192YWwYDSADKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQhH6Qg6SAQsiCbIBBjIEEMCEPRJOCgdtYXBfdmFsGA4gAygLMi8udGVzdHMuaGFybmVzcy5jYXNlcy5Db21wbGV4VGVzdE1zZy5NYXBWYWxFbnRyeUIM+kIJmgEGIgQ6AhAAEhwKCWJ5dGVzX3ZhbBgPIAEoDEIJ+kIGegQKAgCZEgsKAXgYECABKAlIABILCgF5GBEgASgFSAAaLQoLTWFwVmFsRW50cnkSCwoDa2V5GAEgASgREg0KBXZhbHVlGAIgASgJOgI4AUIICgFvEgP4QgEiRgoSS2l0Y2hlblNpbmtNZXNzYWdlEjAKA3ZhbBgBIAEoCzIjLnRlc3RzLmhhcm5lc3MuY2FzZXMuQ29tcGxleFRlc3RNc2cqQgoPQ29tcGxleFRlc3RFbnVtEg8KC0NvbXBsZXhaZXJvEAASDgoKQ29tcGxleE9ORRABEg4KCkNvbXBsZXhUV08QAkJIWkZnaXRodWIuY29tL2Vudm95cHJveHkvcHJvdG9jLWdlbi12YWxpZGF0ZS90ZXN0cy9oYXJuZXNzL2Nhc2VzL2dvO2Nhc2VzYgZwcm90bzM", [file_validate_validate, file_google_protobuf_wrappers, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_any]);

/**
 * @generated from message tests.harness.cases.ComplexTestMsg
 */
export type ComplexTestMsg = Message<"tests.harness.cases.ComplexTestMsg"> & {
  /**
   * @generated from field: string const = 1;
   */
  const: string;

  /**
   * @generated from field: tests.harness.cases.ComplexTestMsg nested = 2;
   */
  nested?: ComplexTestMsg;

  /**
   * @generated from field: int32 int_const = 3;
   */
  intConst: number;

  /**
   * @generated from field: bool bool_const = 4;
   */
  boolConst: boolean;

  /**
   * @generated from field: google.protobuf.FloatValue float_val = 5;
   */
  floatVal?: number;

  /**
   * @generated from field: google.protobuf.Duration dur_val = 6;
   */
  durVal?: Duration;

  /**
   * @generated from field: google.protobuf.Timestamp ts_val = 7;
   */
  tsVal?: Timestamp;

  /**
   * @generated from field: tests.harness.cases.ComplexTestMsg another = 8;
   */
  another?: ComplexTestMsg;

  /**
   * @generated from field: float float_const = 9;
   */
  floatConst: number;

  /**
   * @generated from field: double double_in = 10;
   */
  doubleIn: number;

  /**
   * @generated from field: tests.harness.cases.ComplexTestEnum enum_const = 11;
   */
  enumConst: ComplexTestEnum;

  /**
   * @generated from field: google.protobuf.Any any_val = 12;
   */
  anyVal?: Any;

  /**
   * @generated from field: repeated google.protobuf.Timestamp rep_ts_val = 13;
   */
  repTsVal: Timestamp[];

  /**
   * @generated from field: map<sint32, string> map_val = 14;
   */
  mapVal: { [key: number]: string };

  /**
   * @generated from field: bytes bytes_val = 15;
   */
  bytesVal: Uint8Array;

  /**
   * @generated from oneof tests.harness.cases.ComplexTestMsg.o
   */
  o: {
    /**
     * @generated from field: string x = 16;
     */
    value: string;
    case: "x";
  } | {
    /**
     * @generated from field: int32 y = 17;
     */
    value: number;
    case: "y";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tests.harness.cases.ComplexTestMsg.
 * Use `create(ComplexTestMsgSchema)` to create a new message.
 */
export const ComplexTestMsgSchema: GenMessage<ComplexTestMsg> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_kitchen_sink, 0);

/**
 * @generated from message tests.harness.cases.KitchenSinkMessage
 */
export type KitchenSinkMessage = Message<"tests.harness.cases.KitchenSinkMessage"> & {
  /**
   * @generated from field: tests.harness.cases.ComplexTestMsg val = 1;
   */
  val?: ComplexTestMsg;
};

/**
 * Describes the message tests.harness.cases.KitchenSinkMessage.
 * Use `create(KitchenSinkMessageSchema)` to create a new message.
 */
export const KitchenSinkMessageSchema: GenMessage<KitchenSinkMessage> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_kitchen_sink, 1);

/**
 * @generated from enum tests.harness.cases.ComplexTestEnum
 */
export enum ComplexTestEnum {
  /**
   * @generated from enum value: ComplexZero = 0;
   */
  ComplexZero = 0,

  /**
   * @generated from enum value: ComplexONE = 1;
   */
  ComplexONE = 1,

  /**
   * @generated from enum value: ComplexTWO = 2;
   */
  ComplexTWO = 2,
}

/**
 * Describes the enum tests.harness.cases.ComplexTestEnum.
 */
export const ComplexTestEnumSchema: GenEnum<ComplexTestEnum> = /*@__PURE__*/
  enumDesc(file_tests_harness_cases_kitchen_sink, 0);

