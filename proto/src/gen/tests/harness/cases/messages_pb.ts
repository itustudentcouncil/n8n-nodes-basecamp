// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file tests/harness/cases/messages.proto (package tests.harness.cases, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Embed } from "./other_package/embed_pb";
import { file_tests_harness_cases_other_package_embed } from "./other_package/embed_pb";
import { file_validate_validate } from "../../../validate/validate_pb";
import type { Message as Message$1 } from "@bufbuild/protobuf";

/**
 * Describes the file tests/harness/cases/messages.proto.
 */
export const file_tests_harness_cases_messages: GenFile = /*@__PURE__*/
  fileDesc("CiJ0ZXN0cy9oYXJuZXNzL2Nhc2VzL21lc3NhZ2VzLnByb3RvEhN0ZXN0cy5oYXJuZXNzLmNhc2VzIlIKB1Rlc3RNc2cSGQoFY29uc3QYASABKAlCCvpCB3IFCgNmb28SLAoGbmVzdGVkGAIgASgLMhwudGVzdHMuaGFybmVzcy5jYXNlcy5UZXN0TXNnIk8KC01lc3NhZ2VOb25lEjUKA3ZhbBgBIAEoCzIoLnRlc3RzLmhhcm5lc3MuY2FzZXMuTWVzc2FnZU5vbmUuTm9uZU1zZxoJCgdOb25lTXNnIiwKD01lc3NhZ2VEaXNhYmxlZBIUCgN2YWwYASABKARCB/pCBDICIHs6A/hCASIrCg5NZXNzYWdlSWdub3JlZBIUCgN2YWwYASABKARCB/pCBDICIHs6A4BDASI0CgdNZXNzYWdlEikKA3ZhbBgBIAEoCzIcLnRlc3RzLmhhcm5lc3MuY2FzZXMuVGVzdE1zZyJMChNNZXNzYWdlQ3Jvc3NQYWNrYWdlEjUKA3ZhbBgBIAEoCzIoLnRlc3RzLmhhcm5lc3MuY2FzZXMub3RoZXJfcGFja2FnZS5FbWJlZCJCCgtNZXNzYWdlU2tpcBIzCgN2YWwYASABKAsyHC50ZXN0cy5oYXJuZXNzLmNhc2VzLlRlc3RNc2dCCPpCBYoBAggBIkYKD01lc3NhZ2VSZXF1aXJlZBIzCgN2YWwYASABKAsyHC50ZXN0cy5oYXJuZXNzLmNhc2VzLlRlc3RNc2dCCPpCBYoBAhABIl4KGk1lc3NhZ2VSZXF1aXJlZEJ1dE9wdGlvbmFsEjgKA3ZhbBgBIAEoCzIcLnRlc3RzLmhhcm5lc3MuY2FzZXMuVGVzdE1zZ0II+kIFigECEAFIAIgBAUIGCgRfdmFsIlkKFE1lc3NhZ2VSZXF1aXJlZE9uZW9mEjUKA3ZhbBgBIAEoCzIcLnRlc3RzLmhhcm5lc3MuY2FzZXMuVGVzdE1zZ0II+kIFigECEAFIAEIKCgNvbmUSA/hCASIVChNNZXNzYWdlV2l0aDNkSW5zaWRlQkhaRmdpdGh1Yi5jb20vZW52b3lwcm94eS9wcm90b2MtZ2VuLXZhbGlkYXRlL3Rlc3RzL2hhcm5lc3MvY2FzZXMvZ287Y2FzZXNiBnByb3RvMw", [file_tests_harness_cases_other_package_embed, file_validate_validate]);

/**
 * @generated from message tests.harness.cases.TestMsg
 */
export type TestMsg = Message$1<"tests.harness.cases.TestMsg"> & {
  /**
   * @generated from field: string const = 1;
   */
  const: string;

  /**
   * @generated from field: tests.harness.cases.TestMsg nested = 2;
   */
  nested?: TestMsg;
};

/**
 * Describes the message tests.harness.cases.TestMsg.
 * Use `create(TestMsgSchema)` to create a new message.
 */
export const TestMsgSchema: GenMessage<TestMsg> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 0);

/**
 * @generated from message tests.harness.cases.MessageNone
 */
export type MessageNone = Message$1<"tests.harness.cases.MessageNone"> & {
  /**
   * @generated from field: tests.harness.cases.MessageNone.NoneMsg val = 1;
   */
  val?: MessageNone_NoneMsg;
};

/**
 * Describes the message tests.harness.cases.MessageNone.
 * Use `create(MessageNoneSchema)` to create a new message.
 */
export const MessageNoneSchema: GenMessage<MessageNone> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 1);

/**
 * @generated from message tests.harness.cases.MessageNone.NoneMsg
 */
export type MessageNone_NoneMsg = Message$1<"tests.harness.cases.MessageNone.NoneMsg"> & {
};

/**
 * Describes the message tests.harness.cases.MessageNone.NoneMsg.
 * Use `create(MessageNone_NoneMsgSchema)` to create a new message.
 */
export const MessageNone_NoneMsgSchema: GenMessage<MessageNone_NoneMsg> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 1, 0);

/**
 * @generated from message tests.harness.cases.MessageDisabled
 */
export type MessageDisabled = Message$1<"tests.harness.cases.MessageDisabled"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.MessageDisabled.
 * Use `create(MessageDisabledSchema)` to create a new message.
 */
export const MessageDisabledSchema: GenMessage<MessageDisabled> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 2);

/**
 * @generated from message tests.harness.cases.MessageIgnored
 */
export type MessageIgnored = Message$1<"tests.harness.cases.MessageIgnored"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.MessageIgnored.
 * Use `create(MessageIgnoredSchema)` to create a new message.
 */
export const MessageIgnoredSchema: GenMessage<MessageIgnored> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 3);

/**
 * @generated from message tests.harness.cases.Message
 */
export type Message = Message$1<"tests.harness.cases.Message"> & {
  /**
   * @generated from field: tests.harness.cases.TestMsg val = 1;
   */
  val?: TestMsg;
};

/**
 * Describes the message tests.harness.cases.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
export const MessageSchema: GenMessage<Message> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 4);

/**
 * @generated from message tests.harness.cases.MessageCrossPackage
 */
export type MessageCrossPackage = Message$1<"tests.harness.cases.MessageCrossPackage"> & {
  /**
   * @generated from field: tests.harness.cases.other_package.Embed val = 1;
   */
  val?: Embed;
};

/**
 * Describes the message tests.harness.cases.MessageCrossPackage.
 * Use `create(MessageCrossPackageSchema)` to create a new message.
 */
export const MessageCrossPackageSchema: GenMessage<MessageCrossPackage> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 5);

/**
 * @generated from message tests.harness.cases.MessageSkip
 */
export type MessageSkip = Message$1<"tests.harness.cases.MessageSkip"> & {
  /**
   * @generated from field: tests.harness.cases.TestMsg val = 1;
   */
  val?: TestMsg;
};

/**
 * Describes the message tests.harness.cases.MessageSkip.
 * Use `create(MessageSkipSchema)` to create a new message.
 */
export const MessageSkipSchema: GenMessage<MessageSkip> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 6);

/**
 * @generated from message tests.harness.cases.MessageRequired
 */
export type MessageRequired = Message$1<"tests.harness.cases.MessageRequired"> & {
  /**
   * @generated from field: tests.harness.cases.TestMsg val = 1;
   */
  val?: TestMsg;
};

/**
 * Describes the message tests.harness.cases.MessageRequired.
 * Use `create(MessageRequiredSchema)` to create a new message.
 */
export const MessageRequiredSchema: GenMessage<MessageRequired> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 7);

/**
 * @generated from message tests.harness.cases.MessageRequiredButOptional
 */
export type MessageRequiredButOptional = Message$1<"tests.harness.cases.MessageRequiredButOptional"> & {
  /**
   * @generated from field: optional tests.harness.cases.TestMsg val = 1;
   */
  val?: TestMsg;
};

/**
 * Describes the message tests.harness.cases.MessageRequiredButOptional.
 * Use `create(MessageRequiredButOptionalSchema)` to create a new message.
 */
export const MessageRequiredButOptionalSchema: GenMessage<MessageRequiredButOptional> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 8);

/**
 * @generated from message tests.harness.cases.MessageRequiredOneof
 */
export type MessageRequiredOneof = Message$1<"tests.harness.cases.MessageRequiredOneof"> & {
  /**
   * @generated from oneof tests.harness.cases.MessageRequiredOneof.one
   */
  one: {
    /**
     * @generated from field: tests.harness.cases.TestMsg val = 1;
     */
    value: TestMsg;
    case: "val";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tests.harness.cases.MessageRequiredOneof.
 * Use `create(MessageRequiredOneofSchema)` to create a new message.
 */
export const MessageRequiredOneofSchema: GenMessage<MessageRequiredOneof> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 9);

/**
 * @generated from message tests.harness.cases.MessageWith3dInside
 */
export type MessageWith3dInside = Message$1<"tests.harness.cases.MessageWith3dInside"> & {
};

/**
 * Describes the message tests.harness.cases.MessageWith3dInside.
 * Use `create(MessageWith3dInsideSchema)` to create a new message.
 */
export const MessageWith3dInsideSchema: GenMessage<MessageWith3dInside> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_messages, 10);

