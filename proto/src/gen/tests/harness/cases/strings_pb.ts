// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file tests/harness/cases/strings.proto (package tests.harness.cases, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_validate_validate } from "../../../validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tests/harness/cases/strings.proto.
 */
export const file_tests_harness_cases_strings: GenFile = /*@__PURE__*/
  fileDesc("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", [file_validate_validate]);

/**
 * @generated from message tests.harness.cases.StringNone
 */
export type StringNone = Message<"tests.harness.cases.StringNone"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringNone.
 * Use `create(StringNoneSchema)` to create a new message.
 */
export const StringNoneSchema: GenMessage<StringNone> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 0);

/**
 * @generated from message tests.harness.cases.StringConst
 */
export type StringConst = Message<"tests.harness.cases.StringConst"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringConst.
 * Use `create(StringConstSchema)` to create a new message.
 */
export const StringConstSchema: GenMessage<StringConst> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 1);

/**
 * @generated from message tests.harness.cases.StringIn
 */
export type StringIn = Message<"tests.harness.cases.StringIn"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringIn.
 * Use `create(StringInSchema)` to create a new message.
 */
export const StringInSchema: GenMessage<StringIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 2);

/**
 * @generated from message tests.harness.cases.StringNotIn
 */
export type StringNotIn = Message<"tests.harness.cases.StringNotIn"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringNotIn.
 * Use `create(StringNotInSchema)` to create a new message.
 */
export const StringNotInSchema: GenMessage<StringNotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 3);

/**
 * @generated from message tests.harness.cases.StringLen
 */
export type StringLen = Message<"tests.harness.cases.StringLen"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringLen.
 * Use `create(StringLenSchema)` to create a new message.
 */
export const StringLenSchema: GenMessage<StringLen> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 4);

/**
 * @generated from message tests.harness.cases.StringMinLen
 */
export type StringMinLen = Message<"tests.harness.cases.StringMinLen"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringMinLen.
 * Use `create(StringMinLenSchema)` to create a new message.
 */
export const StringMinLenSchema: GenMessage<StringMinLen> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 5);

/**
 * @generated from message tests.harness.cases.StringMaxLen
 */
export type StringMaxLen = Message<"tests.harness.cases.StringMaxLen"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringMaxLen.
 * Use `create(StringMaxLenSchema)` to create a new message.
 */
export const StringMaxLenSchema: GenMessage<StringMaxLen> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 6);

/**
 * @generated from message tests.harness.cases.StringMinMaxLen
 */
export type StringMinMaxLen = Message<"tests.harness.cases.StringMinMaxLen"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringMinMaxLen.
 * Use `create(StringMinMaxLenSchema)` to create a new message.
 */
export const StringMinMaxLenSchema: GenMessage<StringMinMaxLen> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 7);

/**
 * @generated from message tests.harness.cases.StringEqualMinMaxLen
 */
export type StringEqualMinMaxLen = Message<"tests.harness.cases.StringEqualMinMaxLen"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringEqualMinMaxLen.
 * Use `create(StringEqualMinMaxLenSchema)` to create a new message.
 */
export const StringEqualMinMaxLenSchema: GenMessage<StringEqualMinMaxLen> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 8);

/**
 * @generated from message tests.harness.cases.StringLenBytes
 */
export type StringLenBytes = Message<"tests.harness.cases.StringLenBytes"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringLenBytes.
 * Use `create(StringLenBytesSchema)` to create a new message.
 */
export const StringLenBytesSchema: GenMessage<StringLenBytes> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 9);

/**
 * @generated from message tests.harness.cases.StringMinBytes
 */
export type StringMinBytes = Message<"tests.harness.cases.StringMinBytes"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringMinBytes.
 * Use `create(StringMinBytesSchema)` to create a new message.
 */
export const StringMinBytesSchema: GenMessage<StringMinBytes> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 10);

/**
 * @generated from message tests.harness.cases.StringMaxBytes
 */
export type StringMaxBytes = Message<"tests.harness.cases.StringMaxBytes"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringMaxBytes.
 * Use `create(StringMaxBytesSchema)` to create a new message.
 */
export const StringMaxBytesSchema: GenMessage<StringMaxBytes> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 11);

/**
 * @generated from message tests.harness.cases.StringMinMaxBytes
 */
export type StringMinMaxBytes = Message<"tests.harness.cases.StringMinMaxBytes"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringMinMaxBytes.
 * Use `create(StringMinMaxBytesSchema)` to create a new message.
 */
export const StringMinMaxBytesSchema: GenMessage<StringMinMaxBytes> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 12);

/**
 * @generated from message tests.harness.cases.StringEqualMinMaxBytes
 */
export type StringEqualMinMaxBytes = Message<"tests.harness.cases.StringEqualMinMaxBytes"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringEqualMinMaxBytes.
 * Use `create(StringEqualMinMaxBytesSchema)` to create a new message.
 */
export const StringEqualMinMaxBytesSchema: GenMessage<StringEqualMinMaxBytes> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 13);

/**
 * @generated from message tests.harness.cases.StringPattern
 */
export type StringPattern = Message<"tests.harness.cases.StringPattern"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringPattern.
 * Use `create(StringPatternSchema)` to create a new message.
 */
export const StringPatternSchema: GenMessage<StringPattern> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 14);

/**
 * @generated from message tests.harness.cases.StringPatternEscapes
 */
export type StringPatternEscapes = Message<"tests.harness.cases.StringPatternEscapes"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringPatternEscapes.
 * Use `create(StringPatternEscapesSchema)` to create a new message.
 */
export const StringPatternEscapesSchema: GenMessage<StringPatternEscapes> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 15);

/**
 * @generated from message tests.harness.cases.StringPrefix
 */
export type StringPrefix = Message<"tests.harness.cases.StringPrefix"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringPrefix.
 * Use `create(StringPrefixSchema)` to create a new message.
 */
export const StringPrefixSchema: GenMessage<StringPrefix> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 16);

/**
 * @generated from message tests.harness.cases.StringContains
 */
export type StringContains = Message<"tests.harness.cases.StringContains"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringContains.
 * Use `create(StringContainsSchema)` to create a new message.
 */
export const StringContainsSchema: GenMessage<StringContains> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 17);

/**
 * @generated from message tests.harness.cases.StringNotContains
 */
export type StringNotContains = Message<"tests.harness.cases.StringNotContains"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringNotContains.
 * Use `create(StringNotContainsSchema)` to create a new message.
 */
export const StringNotContainsSchema: GenMessage<StringNotContains> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 18);

/**
 * @generated from message tests.harness.cases.StringSuffix
 */
export type StringSuffix = Message<"tests.harness.cases.StringSuffix"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringSuffix.
 * Use `create(StringSuffixSchema)` to create a new message.
 */
export const StringSuffixSchema: GenMessage<StringSuffix> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 19);

/**
 * @generated from message tests.harness.cases.StringEmail
 */
export type StringEmail = Message<"tests.harness.cases.StringEmail"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringEmail.
 * Use `create(StringEmailSchema)` to create a new message.
 */
export const StringEmailSchema: GenMessage<StringEmail> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 20);

/**
 * @generated from message tests.harness.cases.StringAddress
 */
export type StringAddress = Message<"tests.harness.cases.StringAddress"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringAddress.
 * Use `create(StringAddressSchema)` to create a new message.
 */
export const StringAddressSchema: GenMessage<StringAddress> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 21);

/**
 * @generated from message tests.harness.cases.StringHostname
 */
export type StringHostname = Message<"tests.harness.cases.StringHostname"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringHostname.
 * Use `create(StringHostnameSchema)` to create a new message.
 */
export const StringHostnameSchema: GenMessage<StringHostname> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 22);

/**
 * @generated from message tests.harness.cases.StringIP
 */
export type StringIP = Message<"tests.harness.cases.StringIP"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringIP.
 * Use `create(StringIPSchema)` to create a new message.
 */
export const StringIPSchema: GenMessage<StringIP> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 23);

/**
 * @generated from message tests.harness.cases.StringIPv4
 */
export type StringIPv4 = Message<"tests.harness.cases.StringIPv4"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringIPv4.
 * Use `create(StringIPv4Schema)` to create a new message.
 */
export const StringIPv4Schema: GenMessage<StringIPv4> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 24);

/**
 * @generated from message tests.harness.cases.StringIPv6
 */
export type StringIPv6 = Message<"tests.harness.cases.StringIPv6"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringIPv6.
 * Use `create(StringIPv6Schema)` to create a new message.
 */
export const StringIPv6Schema: GenMessage<StringIPv6> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 25);

/**
 * @generated from message tests.harness.cases.StringURI
 */
export type StringURI = Message<"tests.harness.cases.StringURI"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringURI.
 * Use `create(StringURISchema)` to create a new message.
 */
export const StringURISchema: GenMessage<StringURI> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 26);

/**
 * @generated from message tests.harness.cases.StringURIRef
 */
export type StringURIRef = Message<"tests.harness.cases.StringURIRef"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringURIRef.
 * Use `create(StringURIRefSchema)` to create a new message.
 */
export const StringURIRefSchema: GenMessage<StringURIRef> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 27);

/**
 * @generated from message tests.harness.cases.StringUUID
 */
export type StringUUID = Message<"tests.harness.cases.StringUUID"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringUUID.
 * Use `create(StringUUIDSchema)` to create a new message.
 */
export const StringUUIDSchema: GenMessage<StringUUID> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 28);

/**
 * @generated from message tests.harness.cases.StringHttpHeaderName
 */
export type StringHttpHeaderName = Message<"tests.harness.cases.StringHttpHeaderName"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringHttpHeaderName.
 * Use `create(StringHttpHeaderNameSchema)` to create a new message.
 */
export const StringHttpHeaderNameSchema: GenMessage<StringHttpHeaderName> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 29);

/**
 * @generated from message tests.harness.cases.StringHttpHeaderValue
 */
export type StringHttpHeaderValue = Message<"tests.harness.cases.StringHttpHeaderValue"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringHttpHeaderValue.
 * Use `create(StringHttpHeaderValueSchema)` to create a new message.
 */
export const StringHttpHeaderValueSchema: GenMessage<StringHttpHeaderValue> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 30);

/**
 * @generated from message tests.harness.cases.StringValidHeader
 */
export type StringValidHeader = Message<"tests.harness.cases.StringValidHeader"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringValidHeader.
 * Use `create(StringValidHeaderSchema)` to create a new message.
 */
export const StringValidHeaderSchema: GenMessage<StringValidHeader> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 31);

/**
 * @generated from message tests.harness.cases.StringUUIDIgnore
 */
export type StringUUIDIgnore = Message<"tests.harness.cases.StringUUIDIgnore"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message tests.harness.cases.StringUUIDIgnore.
 * Use `create(StringUUIDIgnoreSchema)` to create a new message.
 */
export const StringUUIDIgnoreSchema: GenMessage<StringUUIDIgnore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 32);

/**
 * @generated from message tests.harness.cases.StringInOneOf
 */
export type StringInOneOf = Message<"tests.harness.cases.StringInOneOf"> & {
  /**
   * @generated from oneof tests.harness.cases.StringInOneOf.foo
   */
  foo: {
    /**
     * @generated from field: string bar = 1;
     */
    value: string;
    case: "bar";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tests.harness.cases.StringInOneOf.
 * Use `create(StringInOneOfSchema)` to create a new message.
 */
export const StringInOneOfSchema: GenMessage<StringInOneOf> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_strings, 33);

