// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file tests/harness/cases/numbers.proto (package tests.harness.cases, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_validate_validate } from "../../../validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tests/harness/cases/numbers.proto.
 */
export const file_tests_harness_cases_numbers: GenFile = /*@__PURE__*/
  fileDesc("", [file_validate_validate]);

/**
 * @generated from message tests.harness.cases.FloatNone
 */
export type FloatNone = Message<"tests.harness.cases.FloatNone"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatNone.
 * Use `create(FloatNoneSchema)` to create a new message.
 */
export const FloatNoneSchema: GenMessage<FloatNone> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 0);

/**
 * @generated from message tests.harness.cases.FloatConst
 */
export type FloatConst = Message<"tests.harness.cases.FloatConst"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatConst.
 * Use `create(FloatConstSchema)` to create a new message.
 */
export const FloatConstSchema: GenMessage<FloatConst> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 1);

/**
 * @generated from message tests.harness.cases.FloatIn
 */
export type FloatIn = Message<"tests.harness.cases.FloatIn"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatIn.
 * Use `create(FloatInSchema)` to create a new message.
 */
export const FloatInSchema: GenMessage<FloatIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 2);

/**
 * @generated from message tests.harness.cases.FloatNotIn
 */
export type FloatNotIn = Message<"tests.harness.cases.FloatNotIn"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatNotIn.
 * Use `create(FloatNotInSchema)` to create a new message.
 */
export const FloatNotInSchema: GenMessage<FloatNotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 3);

/**
 * @generated from message tests.harness.cases.FloatLT
 */
export type FloatLT = Message<"tests.harness.cases.FloatLT"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatLT.
 * Use `create(FloatLTSchema)` to create a new message.
 */
export const FloatLTSchema: GenMessage<FloatLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 4);

/**
 * @generated from message tests.harness.cases.FloatLTE
 */
export type FloatLTE = Message<"tests.harness.cases.FloatLTE"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatLTE.
 * Use `create(FloatLTESchema)` to create a new message.
 */
export const FloatLTESchema: GenMessage<FloatLTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 5);

/**
 * @generated from message tests.harness.cases.FloatGT
 */
export type FloatGT = Message<"tests.harness.cases.FloatGT"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatGT.
 * Use `create(FloatGTSchema)` to create a new message.
 */
export const FloatGTSchema: GenMessage<FloatGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 6);

/**
 * @generated from message tests.harness.cases.FloatGTE
 */
export type FloatGTE = Message<"tests.harness.cases.FloatGTE"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatGTE.
 * Use `create(FloatGTESchema)` to create a new message.
 */
export const FloatGTESchema: GenMessage<FloatGTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 7);

/**
 * @generated from message tests.harness.cases.FloatGTLT
 */
export type FloatGTLT = Message<"tests.harness.cases.FloatGTLT"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatGTLT.
 * Use `create(FloatGTLTSchema)` to create a new message.
 */
export const FloatGTLTSchema: GenMessage<FloatGTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 8);

/**
 * @generated from message tests.harness.cases.FloatExLTGT
 */
export type FloatExLTGT = Message<"tests.harness.cases.FloatExLTGT"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatExLTGT.
 * Use `create(FloatExLTGTSchema)` to create a new message.
 */
export const FloatExLTGTSchema: GenMessage<FloatExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 9);

/**
 * @generated from message tests.harness.cases.FloatGTELTE
 */
export type FloatGTELTE = Message<"tests.harness.cases.FloatGTELTE"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatGTELTE.
 * Use `create(FloatGTELTESchema)` to create a new message.
 */
export const FloatGTELTESchema: GenMessage<FloatGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 10);

/**
 * @generated from message tests.harness.cases.FloatExGTELTE
 */
export type FloatExGTELTE = Message<"tests.harness.cases.FloatExGTELTE"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatExGTELTE.
 * Use `create(FloatExGTELTESchema)` to create a new message.
 */
export const FloatExGTELTESchema: GenMessage<FloatExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 11);

/**
 * @generated from message tests.harness.cases.FloatIgnore
 */
export type FloatIgnore = Message<"tests.harness.cases.FloatIgnore"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.FloatIgnore.
 * Use `create(FloatIgnoreSchema)` to create a new message.
 */
export const FloatIgnoreSchema: GenMessage<FloatIgnore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 12);

/**
 * @generated from message tests.harness.cases.DoubleNone
 */
export type DoubleNone = Message<"tests.harness.cases.DoubleNone"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleNone.
 * Use `create(DoubleNoneSchema)` to create a new message.
 */
export const DoubleNoneSchema: GenMessage<DoubleNone> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 13);

/**
 * @generated from message tests.harness.cases.DoubleConst
 */
export type DoubleConst = Message<"tests.harness.cases.DoubleConst"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleConst.
 * Use `create(DoubleConstSchema)` to create a new message.
 */
export const DoubleConstSchema: GenMessage<DoubleConst> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 14);

/**
 * @generated from message tests.harness.cases.DoubleIn
 */
export type DoubleIn = Message<"tests.harness.cases.DoubleIn"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleIn.
 * Use `create(DoubleInSchema)` to create a new message.
 */
export const DoubleInSchema: GenMessage<DoubleIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 15);

/**
 * @generated from message tests.harness.cases.DoubleNotIn
 */
export type DoubleNotIn = Message<"tests.harness.cases.DoubleNotIn"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleNotIn.
 * Use `create(DoubleNotInSchema)` to create a new message.
 */
export const DoubleNotInSchema: GenMessage<DoubleNotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 16);

/**
 * @generated from message tests.harness.cases.DoubleLT
 */
export type DoubleLT = Message<"tests.harness.cases.DoubleLT"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleLT.
 * Use `create(DoubleLTSchema)` to create a new message.
 */
export const DoubleLTSchema: GenMessage<DoubleLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 17);

/**
 * @generated from message tests.harness.cases.DoubleLTE
 */
export type DoubleLTE = Message<"tests.harness.cases.DoubleLTE"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleLTE.
 * Use `create(DoubleLTESchema)` to create a new message.
 */
export const DoubleLTESchema: GenMessage<DoubleLTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 18);

/**
 * @generated from message tests.harness.cases.DoubleGT
 */
export type DoubleGT = Message<"tests.harness.cases.DoubleGT"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleGT.
 * Use `create(DoubleGTSchema)` to create a new message.
 */
export const DoubleGTSchema: GenMessage<DoubleGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 19);

/**
 * @generated from message tests.harness.cases.DoubleGTE
 */
export type DoubleGTE = Message<"tests.harness.cases.DoubleGTE"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleGTE.
 * Use `create(DoubleGTESchema)` to create a new message.
 */
export const DoubleGTESchema: GenMessage<DoubleGTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 20);

/**
 * @generated from message tests.harness.cases.DoubleGTLT
 */
export type DoubleGTLT = Message<"tests.harness.cases.DoubleGTLT"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleGTLT.
 * Use `create(DoubleGTLTSchema)` to create a new message.
 */
export const DoubleGTLTSchema: GenMessage<DoubleGTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 21);

/**
 * @generated from message tests.harness.cases.DoubleExLTGT
 */
export type DoubleExLTGT = Message<"tests.harness.cases.DoubleExLTGT"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleExLTGT.
 * Use `create(DoubleExLTGTSchema)` to create a new message.
 */
export const DoubleExLTGTSchema: GenMessage<DoubleExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 22);

/**
 * @generated from message tests.harness.cases.DoubleGTELTE
 */
export type DoubleGTELTE = Message<"tests.harness.cases.DoubleGTELTE"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleGTELTE.
 * Use `create(DoubleGTELTESchema)` to create a new message.
 */
export const DoubleGTELTESchema: GenMessage<DoubleGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 23);

/**
 * @generated from message tests.harness.cases.DoubleExGTELTE
 */
export type DoubleExGTELTE = Message<"tests.harness.cases.DoubleExGTELTE"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleExGTELTE.
 * Use `create(DoubleExGTELTESchema)` to create a new message.
 */
export const DoubleExGTELTESchema: GenMessage<DoubleExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 24);

/**
 * @generated from message tests.harness.cases.DoubleIgnore
 */
export type DoubleIgnore = Message<"tests.harness.cases.DoubleIgnore"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.DoubleIgnore.
 * Use `create(DoubleIgnoreSchema)` to create a new message.
 */
export const DoubleIgnoreSchema: GenMessage<DoubleIgnore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 25);

/**
 * @generated from message tests.harness.cases.Int32None
 */
export type Int32None = Message<"tests.harness.cases.Int32None"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32None.
 * Use `create(Int32NoneSchema)` to create a new message.
 */
export const Int32NoneSchema: GenMessage<Int32None> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 26);

/**
 * @generated from message tests.harness.cases.Int32Const
 */
export type Int32Const = Message<"tests.harness.cases.Int32Const"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32Const.
 * Use `create(Int32ConstSchema)` to create a new message.
 */
export const Int32ConstSchema: GenMessage<Int32Const> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 27);

/**
 * @generated from message tests.harness.cases.Int32In
 */
export type Int32In = Message<"tests.harness.cases.Int32In"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32In.
 * Use `create(Int32InSchema)` to create a new message.
 */
export const Int32InSchema: GenMessage<Int32In> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 28);

/**
 * @generated from message tests.harness.cases.Int32NotIn
 */
export type Int32NotIn = Message<"tests.harness.cases.Int32NotIn"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32NotIn.
 * Use `create(Int32NotInSchema)` to create a new message.
 */
export const Int32NotInSchema: GenMessage<Int32NotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 29);

/**
 * @generated from message tests.harness.cases.Int32LT
 */
export type Int32LT = Message<"tests.harness.cases.Int32LT"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32LT.
 * Use `create(Int32LTSchema)` to create a new message.
 */
export const Int32LTSchema: GenMessage<Int32LT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 30);

/**
 * @generated from message tests.harness.cases.Int32LTE
 */
export type Int32LTE = Message<"tests.harness.cases.Int32LTE"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32LTE.
 * Use `create(Int32LTESchema)` to create a new message.
 */
export const Int32LTESchema: GenMessage<Int32LTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 31);

/**
 * @generated from message tests.harness.cases.Int32GT
 */
export type Int32GT = Message<"tests.harness.cases.Int32GT"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32GT.
 * Use `create(Int32GTSchema)` to create a new message.
 */
export const Int32GTSchema: GenMessage<Int32GT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 32);

/**
 * @generated from message tests.harness.cases.Int32GTE
 */
export type Int32GTE = Message<"tests.harness.cases.Int32GTE"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32GTE.
 * Use `create(Int32GTESchema)` to create a new message.
 */
export const Int32GTESchema: GenMessage<Int32GTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 33);

/**
 * @generated from message tests.harness.cases.Int32GTLT
 */
export type Int32GTLT = Message<"tests.harness.cases.Int32GTLT"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32GTLT.
 * Use `create(Int32GTLTSchema)` to create a new message.
 */
export const Int32GTLTSchema: GenMessage<Int32GTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 34);

/**
 * @generated from message tests.harness.cases.Int32ExLTGT
 */
export type Int32ExLTGT = Message<"tests.harness.cases.Int32ExLTGT"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32ExLTGT.
 * Use `create(Int32ExLTGTSchema)` to create a new message.
 */
export const Int32ExLTGTSchema: GenMessage<Int32ExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 35);

/**
 * @generated from message tests.harness.cases.Int32GTELTE
 */
export type Int32GTELTE = Message<"tests.harness.cases.Int32GTELTE"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32GTELTE.
 * Use `create(Int32GTELTESchema)` to create a new message.
 */
export const Int32GTELTESchema: GenMessage<Int32GTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 36);

/**
 * @generated from message tests.harness.cases.Int32ExGTELTE
 */
export type Int32ExGTELTE = Message<"tests.harness.cases.Int32ExGTELTE"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32ExGTELTE.
 * Use `create(Int32ExGTELTESchema)` to create a new message.
 */
export const Int32ExGTELTESchema: GenMessage<Int32ExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 37);

/**
 * @generated from message tests.harness.cases.Int32Ignore
 */
export type Int32Ignore = Message<"tests.harness.cases.Int32Ignore"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Int32Ignore.
 * Use `create(Int32IgnoreSchema)` to create a new message.
 */
export const Int32IgnoreSchema: GenMessage<Int32Ignore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 38);

/**
 * @generated from message tests.harness.cases.Int64None
 */
export type Int64None = Message<"tests.harness.cases.Int64None"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64None.
 * Use `create(Int64NoneSchema)` to create a new message.
 */
export const Int64NoneSchema: GenMessage<Int64None> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 39);

/**
 * @generated from message tests.harness.cases.Int64Const
 */
export type Int64Const = Message<"tests.harness.cases.Int64Const"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64Const.
 * Use `create(Int64ConstSchema)` to create a new message.
 */
export const Int64ConstSchema: GenMessage<Int64Const> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 40);

/**
 * @generated from message tests.harness.cases.Int64In
 */
export type Int64In = Message<"tests.harness.cases.Int64In"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64In.
 * Use `create(Int64InSchema)` to create a new message.
 */
export const Int64InSchema: GenMessage<Int64In> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 41);

/**
 * @generated from message tests.harness.cases.Int64NotIn
 */
export type Int64NotIn = Message<"tests.harness.cases.Int64NotIn"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64NotIn.
 * Use `create(Int64NotInSchema)` to create a new message.
 */
export const Int64NotInSchema: GenMessage<Int64NotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 42);

/**
 * @generated from message tests.harness.cases.Int64LT
 */
export type Int64LT = Message<"tests.harness.cases.Int64LT"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64LT.
 * Use `create(Int64LTSchema)` to create a new message.
 */
export const Int64LTSchema: GenMessage<Int64LT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 43);

/**
 * @generated from message tests.harness.cases.Int64LTE
 */
export type Int64LTE = Message<"tests.harness.cases.Int64LTE"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64LTE.
 * Use `create(Int64LTESchema)` to create a new message.
 */
export const Int64LTESchema: GenMessage<Int64LTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 44);

/**
 * @generated from message tests.harness.cases.Int64GT
 */
export type Int64GT = Message<"tests.harness.cases.Int64GT"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64GT.
 * Use `create(Int64GTSchema)` to create a new message.
 */
export const Int64GTSchema: GenMessage<Int64GT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 45);

/**
 * @generated from message tests.harness.cases.Int64GTE
 */
export type Int64GTE = Message<"tests.harness.cases.Int64GTE"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64GTE.
 * Use `create(Int64GTESchema)` to create a new message.
 */
export const Int64GTESchema: GenMessage<Int64GTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 46);

/**
 * @generated from message tests.harness.cases.Int64GTLT
 */
export type Int64GTLT = Message<"tests.harness.cases.Int64GTLT"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64GTLT.
 * Use `create(Int64GTLTSchema)` to create a new message.
 */
export const Int64GTLTSchema: GenMessage<Int64GTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 47);

/**
 * @generated from message tests.harness.cases.Int64ExLTGT
 */
export type Int64ExLTGT = Message<"tests.harness.cases.Int64ExLTGT"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64ExLTGT.
 * Use `create(Int64ExLTGTSchema)` to create a new message.
 */
export const Int64ExLTGTSchema: GenMessage<Int64ExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 48);

/**
 * @generated from message tests.harness.cases.Int64GTELTE
 */
export type Int64GTELTE = Message<"tests.harness.cases.Int64GTELTE"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64GTELTE.
 * Use `create(Int64GTELTESchema)` to create a new message.
 */
export const Int64GTELTESchema: GenMessage<Int64GTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 49);

/**
 * @generated from message tests.harness.cases.Int64ExGTELTE
 */
export type Int64ExGTELTE = Message<"tests.harness.cases.Int64ExGTELTE"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64ExGTELTE.
 * Use `create(Int64ExGTELTESchema)` to create a new message.
 */
export const Int64ExGTELTESchema: GenMessage<Int64ExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 50);

/**
 * @generated from message tests.harness.cases.Int64Ignore
 */
export type Int64Ignore = Message<"tests.harness.cases.Int64Ignore"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64Ignore.
 * Use `create(Int64IgnoreSchema)` to create a new message.
 */
export const Int64IgnoreSchema: GenMessage<Int64Ignore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 51);

/**
 * @generated from message tests.harness.cases.UInt32None
 */
export type UInt32None = Message<"tests.harness.cases.UInt32None"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32None.
 * Use `create(UInt32NoneSchema)` to create a new message.
 */
export const UInt32NoneSchema: GenMessage<UInt32None> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 52);

/**
 * @generated from message tests.harness.cases.UInt32Const
 */
export type UInt32Const = Message<"tests.harness.cases.UInt32Const"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32Const.
 * Use `create(UInt32ConstSchema)` to create a new message.
 */
export const UInt32ConstSchema: GenMessage<UInt32Const> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 53);

/**
 * @generated from message tests.harness.cases.UInt32In
 */
export type UInt32In = Message<"tests.harness.cases.UInt32In"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32In.
 * Use `create(UInt32InSchema)` to create a new message.
 */
export const UInt32InSchema: GenMessage<UInt32In> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 54);

/**
 * @generated from message tests.harness.cases.UInt32NotIn
 */
export type UInt32NotIn = Message<"tests.harness.cases.UInt32NotIn"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32NotIn.
 * Use `create(UInt32NotInSchema)` to create a new message.
 */
export const UInt32NotInSchema: GenMessage<UInt32NotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 55);

/**
 * @generated from message tests.harness.cases.UInt32LT
 */
export type UInt32LT = Message<"tests.harness.cases.UInt32LT"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32LT.
 * Use `create(UInt32LTSchema)` to create a new message.
 */
export const UInt32LTSchema: GenMessage<UInt32LT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 56);

/**
 * @generated from message tests.harness.cases.UInt32LTE
 */
export type UInt32LTE = Message<"tests.harness.cases.UInt32LTE"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32LTE.
 * Use `create(UInt32LTESchema)` to create a new message.
 */
export const UInt32LTESchema: GenMessage<UInt32LTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 57);

/**
 * @generated from message tests.harness.cases.UInt32GT
 */
export type UInt32GT = Message<"tests.harness.cases.UInt32GT"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32GT.
 * Use `create(UInt32GTSchema)` to create a new message.
 */
export const UInt32GTSchema: GenMessage<UInt32GT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 58);

/**
 * @generated from message tests.harness.cases.UInt32GTE
 */
export type UInt32GTE = Message<"tests.harness.cases.UInt32GTE"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32GTE.
 * Use `create(UInt32GTESchema)` to create a new message.
 */
export const UInt32GTESchema: GenMessage<UInt32GTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 59);

/**
 * @generated from message tests.harness.cases.UInt32GTLT
 */
export type UInt32GTLT = Message<"tests.harness.cases.UInt32GTLT"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32GTLT.
 * Use `create(UInt32GTLTSchema)` to create a new message.
 */
export const UInt32GTLTSchema: GenMessage<UInt32GTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 60);

/**
 * @generated from message tests.harness.cases.UInt32ExLTGT
 */
export type UInt32ExLTGT = Message<"tests.harness.cases.UInt32ExLTGT"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32ExLTGT.
 * Use `create(UInt32ExLTGTSchema)` to create a new message.
 */
export const UInt32ExLTGTSchema: GenMessage<UInt32ExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 61);

/**
 * @generated from message tests.harness.cases.UInt32GTELTE
 */
export type UInt32GTELTE = Message<"tests.harness.cases.UInt32GTELTE"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32GTELTE.
 * Use `create(UInt32GTELTESchema)` to create a new message.
 */
export const UInt32GTELTESchema: GenMessage<UInt32GTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 62);

/**
 * @generated from message tests.harness.cases.UInt32ExGTELTE
 */
export type UInt32ExGTELTE = Message<"tests.harness.cases.UInt32ExGTELTE"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32ExGTELTE.
 * Use `create(UInt32ExGTELTESchema)` to create a new message.
 */
export const UInt32ExGTELTESchema: GenMessage<UInt32ExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 63);

/**
 * @generated from message tests.harness.cases.UInt32Ignore
 */
export type UInt32Ignore = Message<"tests.harness.cases.UInt32Ignore"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.UInt32Ignore.
 * Use `create(UInt32IgnoreSchema)` to create a new message.
 */
export const UInt32IgnoreSchema: GenMessage<UInt32Ignore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 64);

/**
 * @generated from message tests.harness.cases.UInt64None
 */
export type UInt64None = Message<"tests.harness.cases.UInt64None"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64None.
 * Use `create(UInt64NoneSchema)` to create a new message.
 */
export const UInt64NoneSchema: GenMessage<UInt64None> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 65);

/**
 * @generated from message tests.harness.cases.UInt64Const
 */
export type UInt64Const = Message<"tests.harness.cases.UInt64Const"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64Const.
 * Use `create(UInt64ConstSchema)` to create a new message.
 */
export const UInt64ConstSchema: GenMessage<UInt64Const> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 66);

/**
 * @generated from message tests.harness.cases.UInt64In
 */
export type UInt64In = Message<"tests.harness.cases.UInt64In"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64In.
 * Use `create(UInt64InSchema)` to create a new message.
 */
export const UInt64InSchema: GenMessage<UInt64In> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 67);

/**
 * @generated from message tests.harness.cases.UInt64NotIn
 */
export type UInt64NotIn = Message<"tests.harness.cases.UInt64NotIn"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64NotIn.
 * Use `create(UInt64NotInSchema)` to create a new message.
 */
export const UInt64NotInSchema: GenMessage<UInt64NotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 68);

/**
 * @generated from message tests.harness.cases.UInt64LT
 */
export type UInt64LT = Message<"tests.harness.cases.UInt64LT"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64LT.
 * Use `create(UInt64LTSchema)` to create a new message.
 */
export const UInt64LTSchema: GenMessage<UInt64LT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 69);

/**
 * @generated from message tests.harness.cases.UInt64LTE
 */
export type UInt64LTE = Message<"tests.harness.cases.UInt64LTE"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64LTE.
 * Use `create(UInt64LTESchema)` to create a new message.
 */
export const UInt64LTESchema: GenMessage<UInt64LTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 70);

/**
 * @generated from message tests.harness.cases.UInt64GT
 */
export type UInt64GT = Message<"tests.harness.cases.UInt64GT"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64GT.
 * Use `create(UInt64GTSchema)` to create a new message.
 */
export const UInt64GTSchema: GenMessage<UInt64GT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 71);

/**
 * @generated from message tests.harness.cases.UInt64GTE
 */
export type UInt64GTE = Message<"tests.harness.cases.UInt64GTE"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64GTE.
 * Use `create(UInt64GTESchema)` to create a new message.
 */
export const UInt64GTESchema: GenMessage<UInt64GTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 72);

/**
 * @generated from message tests.harness.cases.UInt64GTLT
 */
export type UInt64GTLT = Message<"tests.harness.cases.UInt64GTLT"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64GTLT.
 * Use `create(UInt64GTLTSchema)` to create a new message.
 */
export const UInt64GTLTSchema: GenMessage<UInt64GTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 73);

/**
 * @generated from message tests.harness.cases.UInt64ExLTGT
 */
export type UInt64ExLTGT = Message<"tests.harness.cases.UInt64ExLTGT"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64ExLTGT.
 * Use `create(UInt64ExLTGTSchema)` to create a new message.
 */
export const UInt64ExLTGTSchema: GenMessage<UInt64ExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 74);

/**
 * @generated from message tests.harness.cases.UInt64GTELTE
 */
export type UInt64GTELTE = Message<"tests.harness.cases.UInt64GTELTE"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64GTELTE.
 * Use `create(UInt64GTELTESchema)` to create a new message.
 */
export const UInt64GTELTESchema: GenMessage<UInt64GTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 75);

/**
 * @generated from message tests.harness.cases.UInt64ExGTELTE
 */
export type UInt64ExGTELTE = Message<"tests.harness.cases.UInt64ExGTELTE"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64ExGTELTE.
 * Use `create(UInt64ExGTELTESchema)` to create a new message.
 */
export const UInt64ExGTELTESchema: GenMessage<UInt64ExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 76);

/**
 * @generated from message tests.harness.cases.UInt64Ignore
 */
export type UInt64Ignore = Message<"tests.harness.cases.UInt64Ignore"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.UInt64Ignore.
 * Use `create(UInt64IgnoreSchema)` to create a new message.
 */
export const UInt64IgnoreSchema: GenMessage<UInt64Ignore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 77);

/**
 * @generated from message tests.harness.cases.SInt32None
 */
export type SInt32None = Message<"tests.harness.cases.SInt32None"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32None.
 * Use `create(SInt32NoneSchema)` to create a new message.
 */
export const SInt32NoneSchema: GenMessage<SInt32None> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 78);

/**
 * @generated from message tests.harness.cases.SInt32Const
 */
export type SInt32Const = Message<"tests.harness.cases.SInt32Const"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32Const.
 * Use `create(SInt32ConstSchema)` to create a new message.
 */
export const SInt32ConstSchema: GenMessage<SInt32Const> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 79);

/**
 * @generated from message tests.harness.cases.SInt32In
 */
export type SInt32In = Message<"tests.harness.cases.SInt32In"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32In.
 * Use `create(SInt32InSchema)` to create a new message.
 */
export const SInt32InSchema: GenMessage<SInt32In> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 80);

/**
 * @generated from message tests.harness.cases.SInt32NotIn
 */
export type SInt32NotIn = Message<"tests.harness.cases.SInt32NotIn"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32NotIn.
 * Use `create(SInt32NotInSchema)` to create a new message.
 */
export const SInt32NotInSchema: GenMessage<SInt32NotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 81);

/**
 * @generated from message tests.harness.cases.SInt32LT
 */
export type SInt32LT = Message<"tests.harness.cases.SInt32LT"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32LT.
 * Use `create(SInt32LTSchema)` to create a new message.
 */
export const SInt32LTSchema: GenMessage<SInt32LT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 82);

/**
 * @generated from message tests.harness.cases.SInt32LTE
 */
export type SInt32LTE = Message<"tests.harness.cases.SInt32LTE"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32LTE.
 * Use `create(SInt32LTESchema)` to create a new message.
 */
export const SInt32LTESchema: GenMessage<SInt32LTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 83);

/**
 * @generated from message tests.harness.cases.SInt32GT
 */
export type SInt32GT = Message<"tests.harness.cases.SInt32GT"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32GT.
 * Use `create(SInt32GTSchema)` to create a new message.
 */
export const SInt32GTSchema: GenMessage<SInt32GT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 84);

/**
 * @generated from message tests.harness.cases.SInt32GTE
 */
export type SInt32GTE = Message<"tests.harness.cases.SInt32GTE"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32GTE.
 * Use `create(SInt32GTESchema)` to create a new message.
 */
export const SInt32GTESchema: GenMessage<SInt32GTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 85);

/**
 * @generated from message tests.harness.cases.SInt32GTLT
 */
export type SInt32GTLT = Message<"tests.harness.cases.SInt32GTLT"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32GTLT.
 * Use `create(SInt32GTLTSchema)` to create a new message.
 */
export const SInt32GTLTSchema: GenMessage<SInt32GTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 86);

/**
 * @generated from message tests.harness.cases.SInt32ExLTGT
 */
export type SInt32ExLTGT = Message<"tests.harness.cases.SInt32ExLTGT"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32ExLTGT.
 * Use `create(SInt32ExLTGTSchema)` to create a new message.
 */
export const SInt32ExLTGTSchema: GenMessage<SInt32ExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 87);

/**
 * @generated from message tests.harness.cases.SInt32GTELTE
 */
export type SInt32GTELTE = Message<"tests.harness.cases.SInt32GTELTE"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32GTELTE.
 * Use `create(SInt32GTELTESchema)` to create a new message.
 */
export const SInt32GTELTESchema: GenMessage<SInt32GTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 88);

/**
 * @generated from message tests.harness.cases.SInt32ExGTELTE
 */
export type SInt32ExGTELTE = Message<"tests.harness.cases.SInt32ExGTELTE"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32ExGTELTE.
 * Use `create(SInt32ExGTELTESchema)` to create a new message.
 */
export const SInt32ExGTELTESchema: GenMessage<SInt32ExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 89);

/**
 * @generated from message tests.harness.cases.SInt32Ignore
 */
export type SInt32Ignore = Message<"tests.harness.cases.SInt32Ignore"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SInt32Ignore.
 * Use `create(SInt32IgnoreSchema)` to create a new message.
 */
export const SInt32IgnoreSchema: GenMessage<SInt32Ignore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 90);

/**
 * @generated from message tests.harness.cases.SInt64None
 */
export type SInt64None = Message<"tests.harness.cases.SInt64None"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64None.
 * Use `create(SInt64NoneSchema)` to create a new message.
 */
export const SInt64NoneSchema: GenMessage<SInt64None> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 91);

/**
 * @generated from message tests.harness.cases.SInt64Const
 */
export type SInt64Const = Message<"tests.harness.cases.SInt64Const"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64Const.
 * Use `create(SInt64ConstSchema)` to create a new message.
 */
export const SInt64ConstSchema: GenMessage<SInt64Const> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 92);

/**
 * @generated from message tests.harness.cases.SInt64In
 */
export type SInt64In = Message<"tests.harness.cases.SInt64In"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64In.
 * Use `create(SInt64InSchema)` to create a new message.
 */
export const SInt64InSchema: GenMessage<SInt64In> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 93);

/**
 * @generated from message tests.harness.cases.SInt64NotIn
 */
export type SInt64NotIn = Message<"tests.harness.cases.SInt64NotIn"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64NotIn.
 * Use `create(SInt64NotInSchema)` to create a new message.
 */
export const SInt64NotInSchema: GenMessage<SInt64NotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 94);

/**
 * @generated from message tests.harness.cases.SInt64LT
 */
export type SInt64LT = Message<"tests.harness.cases.SInt64LT"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64LT.
 * Use `create(SInt64LTSchema)` to create a new message.
 */
export const SInt64LTSchema: GenMessage<SInt64LT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 95);

/**
 * @generated from message tests.harness.cases.SInt64LTE
 */
export type SInt64LTE = Message<"tests.harness.cases.SInt64LTE"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64LTE.
 * Use `create(SInt64LTESchema)` to create a new message.
 */
export const SInt64LTESchema: GenMessage<SInt64LTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 96);

/**
 * @generated from message tests.harness.cases.SInt64GT
 */
export type SInt64GT = Message<"tests.harness.cases.SInt64GT"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64GT.
 * Use `create(SInt64GTSchema)` to create a new message.
 */
export const SInt64GTSchema: GenMessage<SInt64GT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 97);

/**
 * @generated from message tests.harness.cases.SInt64GTE
 */
export type SInt64GTE = Message<"tests.harness.cases.SInt64GTE"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64GTE.
 * Use `create(SInt64GTESchema)` to create a new message.
 */
export const SInt64GTESchema: GenMessage<SInt64GTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 98);

/**
 * @generated from message tests.harness.cases.SInt64GTLT
 */
export type SInt64GTLT = Message<"tests.harness.cases.SInt64GTLT"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64GTLT.
 * Use `create(SInt64GTLTSchema)` to create a new message.
 */
export const SInt64GTLTSchema: GenMessage<SInt64GTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 99);

/**
 * @generated from message tests.harness.cases.SInt64ExLTGT
 */
export type SInt64ExLTGT = Message<"tests.harness.cases.SInt64ExLTGT"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64ExLTGT.
 * Use `create(SInt64ExLTGTSchema)` to create a new message.
 */
export const SInt64ExLTGTSchema: GenMessage<SInt64ExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 100);

/**
 * @generated from message tests.harness.cases.SInt64GTELTE
 */
export type SInt64GTELTE = Message<"tests.harness.cases.SInt64GTELTE"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64GTELTE.
 * Use `create(SInt64GTELTESchema)` to create a new message.
 */
export const SInt64GTELTESchema: GenMessage<SInt64GTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 101);

/**
 * @generated from message tests.harness.cases.SInt64ExGTELTE
 */
export type SInt64ExGTELTE = Message<"tests.harness.cases.SInt64ExGTELTE"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64ExGTELTE.
 * Use `create(SInt64ExGTELTESchema)` to create a new message.
 */
export const SInt64ExGTELTESchema: GenMessage<SInt64ExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 102);

/**
 * @generated from message tests.harness.cases.SInt64Ignore
 */
export type SInt64Ignore = Message<"tests.harness.cases.SInt64Ignore"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SInt64Ignore.
 * Use `create(SInt64IgnoreSchema)` to create a new message.
 */
export const SInt64IgnoreSchema: GenMessage<SInt64Ignore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 103);

/**
 * @generated from message tests.harness.cases.Fixed32None
 */
export type Fixed32None = Message<"tests.harness.cases.Fixed32None"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32None.
 * Use `create(Fixed32NoneSchema)` to create a new message.
 */
export const Fixed32NoneSchema: GenMessage<Fixed32None> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 104);

/**
 * @generated from message tests.harness.cases.Fixed32Const
 */
export type Fixed32Const = Message<"tests.harness.cases.Fixed32Const"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32Const.
 * Use `create(Fixed32ConstSchema)` to create a new message.
 */
export const Fixed32ConstSchema: GenMessage<Fixed32Const> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 105);

/**
 * @generated from message tests.harness.cases.Fixed32In
 */
export type Fixed32In = Message<"tests.harness.cases.Fixed32In"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32In.
 * Use `create(Fixed32InSchema)` to create a new message.
 */
export const Fixed32InSchema: GenMessage<Fixed32In> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 106);

/**
 * @generated from message tests.harness.cases.Fixed32NotIn
 */
export type Fixed32NotIn = Message<"tests.harness.cases.Fixed32NotIn"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32NotIn.
 * Use `create(Fixed32NotInSchema)` to create a new message.
 */
export const Fixed32NotInSchema: GenMessage<Fixed32NotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 107);

/**
 * @generated from message tests.harness.cases.Fixed32LT
 */
export type Fixed32LT = Message<"tests.harness.cases.Fixed32LT"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32LT.
 * Use `create(Fixed32LTSchema)` to create a new message.
 */
export const Fixed32LTSchema: GenMessage<Fixed32LT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 108);

/**
 * @generated from message tests.harness.cases.Fixed32LTE
 */
export type Fixed32LTE = Message<"tests.harness.cases.Fixed32LTE"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32LTE.
 * Use `create(Fixed32LTESchema)` to create a new message.
 */
export const Fixed32LTESchema: GenMessage<Fixed32LTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 109);

/**
 * @generated from message tests.harness.cases.Fixed32GT
 */
export type Fixed32GT = Message<"tests.harness.cases.Fixed32GT"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32GT.
 * Use `create(Fixed32GTSchema)` to create a new message.
 */
export const Fixed32GTSchema: GenMessage<Fixed32GT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 110);

/**
 * @generated from message tests.harness.cases.Fixed32GTE
 */
export type Fixed32GTE = Message<"tests.harness.cases.Fixed32GTE"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32GTE.
 * Use `create(Fixed32GTESchema)` to create a new message.
 */
export const Fixed32GTESchema: GenMessage<Fixed32GTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 111);

/**
 * @generated from message tests.harness.cases.Fixed32GTLT
 */
export type Fixed32GTLT = Message<"tests.harness.cases.Fixed32GTLT"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32GTLT.
 * Use `create(Fixed32GTLTSchema)` to create a new message.
 */
export const Fixed32GTLTSchema: GenMessage<Fixed32GTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 112);

/**
 * @generated from message tests.harness.cases.Fixed32ExLTGT
 */
export type Fixed32ExLTGT = Message<"tests.harness.cases.Fixed32ExLTGT"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32ExLTGT.
 * Use `create(Fixed32ExLTGTSchema)` to create a new message.
 */
export const Fixed32ExLTGTSchema: GenMessage<Fixed32ExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 113);

/**
 * @generated from message tests.harness.cases.Fixed32GTELTE
 */
export type Fixed32GTELTE = Message<"tests.harness.cases.Fixed32GTELTE"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32GTELTE.
 * Use `create(Fixed32GTELTESchema)` to create a new message.
 */
export const Fixed32GTELTESchema: GenMessage<Fixed32GTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 114);

/**
 * @generated from message tests.harness.cases.Fixed32ExGTELTE
 */
export type Fixed32ExGTELTE = Message<"tests.harness.cases.Fixed32ExGTELTE"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32ExGTELTE.
 * Use `create(Fixed32ExGTELTESchema)` to create a new message.
 */
export const Fixed32ExGTELTESchema: GenMessage<Fixed32ExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 115);

/**
 * @generated from message tests.harness.cases.Fixed32Ignore
 */
export type Fixed32Ignore = Message<"tests.harness.cases.Fixed32Ignore"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.Fixed32Ignore.
 * Use `create(Fixed32IgnoreSchema)` to create a new message.
 */
export const Fixed32IgnoreSchema: GenMessage<Fixed32Ignore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 116);

/**
 * @generated from message tests.harness.cases.Fixed64None
 */
export type Fixed64None = Message<"tests.harness.cases.Fixed64None"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64None.
 * Use `create(Fixed64NoneSchema)` to create a new message.
 */
export const Fixed64NoneSchema: GenMessage<Fixed64None> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 117);

/**
 * @generated from message tests.harness.cases.Fixed64Const
 */
export type Fixed64Const = Message<"tests.harness.cases.Fixed64Const"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64Const.
 * Use `create(Fixed64ConstSchema)` to create a new message.
 */
export const Fixed64ConstSchema: GenMessage<Fixed64Const> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 118);

/**
 * @generated from message tests.harness.cases.Fixed64In
 */
export type Fixed64In = Message<"tests.harness.cases.Fixed64In"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64In.
 * Use `create(Fixed64InSchema)` to create a new message.
 */
export const Fixed64InSchema: GenMessage<Fixed64In> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 119);

/**
 * @generated from message tests.harness.cases.Fixed64NotIn
 */
export type Fixed64NotIn = Message<"tests.harness.cases.Fixed64NotIn"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64NotIn.
 * Use `create(Fixed64NotInSchema)` to create a new message.
 */
export const Fixed64NotInSchema: GenMessage<Fixed64NotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 120);

/**
 * @generated from message tests.harness.cases.Fixed64LT
 */
export type Fixed64LT = Message<"tests.harness.cases.Fixed64LT"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64LT.
 * Use `create(Fixed64LTSchema)` to create a new message.
 */
export const Fixed64LTSchema: GenMessage<Fixed64LT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 121);

/**
 * @generated from message tests.harness.cases.Fixed64LTE
 */
export type Fixed64LTE = Message<"tests.harness.cases.Fixed64LTE"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64LTE.
 * Use `create(Fixed64LTESchema)` to create a new message.
 */
export const Fixed64LTESchema: GenMessage<Fixed64LTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 122);

/**
 * @generated from message tests.harness.cases.Fixed64GT
 */
export type Fixed64GT = Message<"tests.harness.cases.Fixed64GT"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64GT.
 * Use `create(Fixed64GTSchema)` to create a new message.
 */
export const Fixed64GTSchema: GenMessage<Fixed64GT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 123);

/**
 * @generated from message tests.harness.cases.Fixed64GTE
 */
export type Fixed64GTE = Message<"tests.harness.cases.Fixed64GTE"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64GTE.
 * Use `create(Fixed64GTESchema)` to create a new message.
 */
export const Fixed64GTESchema: GenMessage<Fixed64GTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 124);

/**
 * @generated from message tests.harness.cases.Fixed64GTLT
 */
export type Fixed64GTLT = Message<"tests.harness.cases.Fixed64GTLT"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64GTLT.
 * Use `create(Fixed64GTLTSchema)` to create a new message.
 */
export const Fixed64GTLTSchema: GenMessage<Fixed64GTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 125);

/**
 * @generated from message tests.harness.cases.Fixed64ExLTGT
 */
export type Fixed64ExLTGT = Message<"tests.harness.cases.Fixed64ExLTGT"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64ExLTGT.
 * Use `create(Fixed64ExLTGTSchema)` to create a new message.
 */
export const Fixed64ExLTGTSchema: GenMessage<Fixed64ExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 126);

/**
 * @generated from message tests.harness.cases.Fixed64GTELTE
 */
export type Fixed64GTELTE = Message<"tests.harness.cases.Fixed64GTELTE"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64GTELTE.
 * Use `create(Fixed64GTELTESchema)` to create a new message.
 */
export const Fixed64GTELTESchema: GenMessage<Fixed64GTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 127);

/**
 * @generated from message tests.harness.cases.Fixed64ExGTELTE
 */
export type Fixed64ExGTELTE = Message<"tests.harness.cases.Fixed64ExGTELTE"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64ExGTELTE.
 * Use `create(Fixed64ExGTELTESchema)` to create a new message.
 */
export const Fixed64ExGTELTESchema: GenMessage<Fixed64ExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 128);

/**
 * @generated from message tests.harness.cases.Fixed64Ignore
 */
export type Fixed64Ignore = Message<"tests.harness.cases.Fixed64Ignore"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Fixed64Ignore.
 * Use `create(Fixed64IgnoreSchema)` to create a new message.
 */
export const Fixed64IgnoreSchema: GenMessage<Fixed64Ignore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 129);

/**
 * @generated from message tests.harness.cases.SFixed32None
 */
export type SFixed32None = Message<"tests.harness.cases.SFixed32None"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32None.
 * Use `create(SFixed32NoneSchema)` to create a new message.
 */
export const SFixed32NoneSchema: GenMessage<SFixed32None> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 130);

/**
 * @generated from message tests.harness.cases.SFixed32Const
 */
export type SFixed32Const = Message<"tests.harness.cases.SFixed32Const"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32Const.
 * Use `create(SFixed32ConstSchema)` to create a new message.
 */
export const SFixed32ConstSchema: GenMessage<SFixed32Const> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 131);

/**
 * @generated from message tests.harness.cases.SFixed32In
 */
export type SFixed32In = Message<"tests.harness.cases.SFixed32In"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32In.
 * Use `create(SFixed32InSchema)` to create a new message.
 */
export const SFixed32InSchema: GenMessage<SFixed32In> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 132);

/**
 * @generated from message tests.harness.cases.SFixed32NotIn
 */
export type SFixed32NotIn = Message<"tests.harness.cases.SFixed32NotIn"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32NotIn.
 * Use `create(SFixed32NotInSchema)` to create a new message.
 */
export const SFixed32NotInSchema: GenMessage<SFixed32NotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 133);

/**
 * @generated from message tests.harness.cases.SFixed32LT
 */
export type SFixed32LT = Message<"tests.harness.cases.SFixed32LT"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32LT.
 * Use `create(SFixed32LTSchema)` to create a new message.
 */
export const SFixed32LTSchema: GenMessage<SFixed32LT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 134);

/**
 * @generated from message tests.harness.cases.SFixed32LTE
 */
export type SFixed32LTE = Message<"tests.harness.cases.SFixed32LTE"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32LTE.
 * Use `create(SFixed32LTESchema)` to create a new message.
 */
export const SFixed32LTESchema: GenMessage<SFixed32LTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 135);

/**
 * @generated from message tests.harness.cases.SFixed32GT
 */
export type SFixed32GT = Message<"tests.harness.cases.SFixed32GT"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32GT.
 * Use `create(SFixed32GTSchema)` to create a new message.
 */
export const SFixed32GTSchema: GenMessage<SFixed32GT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 136);

/**
 * @generated from message tests.harness.cases.SFixed32GTE
 */
export type SFixed32GTE = Message<"tests.harness.cases.SFixed32GTE"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32GTE.
 * Use `create(SFixed32GTESchema)` to create a new message.
 */
export const SFixed32GTESchema: GenMessage<SFixed32GTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 137);

/**
 * @generated from message tests.harness.cases.SFixed32GTLT
 */
export type SFixed32GTLT = Message<"tests.harness.cases.SFixed32GTLT"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32GTLT.
 * Use `create(SFixed32GTLTSchema)` to create a new message.
 */
export const SFixed32GTLTSchema: GenMessage<SFixed32GTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 138);

/**
 * @generated from message tests.harness.cases.SFixed32ExLTGT
 */
export type SFixed32ExLTGT = Message<"tests.harness.cases.SFixed32ExLTGT"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32ExLTGT.
 * Use `create(SFixed32ExLTGTSchema)` to create a new message.
 */
export const SFixed32ExLTGTSchema: GenMessage<SFixed32ExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 139);

/**
 * @generated from message tests.harness.cases.SFixed32GTELTE
 */
export type SFixed32GTELTE = Message<"tests.harness.cases.SFixed32GTELTE"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32GTELTE.
 * Use `create(SFixed32GTELTESchema)` to create a new message.
 */
export const SFixed32GTELTESchema: GenMessage<SFixed32GTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 140);

/**
 * @generated from message tests.harness.cases.SFixed32ExGTELTE
 */
export type SFixed32ExGTELTE = Message<"tests.harness.cases.SFixed32ExGTELTE"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32ExGTELTE.
 * Use `create(SFixed32ExGTELTESchema)` to create a new message.
 */
export const SFixed32ExGTELTESchema: GenMessage<SFixed32ExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 141);

/**
 * @generated from message tests.harness.cases.SFixed32Ignore
 */
export type SFixed32Ignore = Message<"tests.harness.cases.SFixed32Ignore"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message tests.harness.cases.SFixed32Ignore.
 * Use `create(SFixed32IgnoreSchema)` to create a new message.
 */
export const SFixed32IgnoreSchema: GenMessage<SFixed32Ignore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 142);

/**
 * @generated from message tests.harness.cases.SFixed64None
 */
export type SFixed64None = Message<"tests.harness.cases.SFixed64None"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64None.
 * Use `create(SFixed64NoneSchema)` to create a new message.
 */
export const SFixed64NoneSchema: GenMessage<SFixed64None> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 143);

/**
 * @generated from message tests.harness.cases.SFixed64Const
 */
export type SFixed64Const = Message<"tests.harness.cases.SFixed64Const"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64Const.
 * Use `create(SFixed64ConstSchema)` to create a new message.
 */
export const SFixed64ConstSchema: GenMessage<SFixed64Const> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 144);

/**
 * @generated from message tests.harness.cases.SFixed64In
 */
export type SFixed64In = Message<"tests.harness.cases.SFixed64In"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64In.
 * Use `create(SFixed64InSchema)` to create a new message.
 */
export const SFixed64InSchema: GenMessage<SFixed64In> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 145);

/**
 * @generated from message tests.harness.cases.SFixed64NotIn
 */
export type SFixed64NotIn = Message<"tests.harness.cases.SFixed64NotIn"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64NotIn.
 * Use `create(SFixed64NotInSchema)` to create a new message.
 */
export const SFixed64NotInSchema: GenMessage<SFixed64NotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 146);

/**
 * @generated from message tests.harness.cases.SFixed64LT
 */
export type SFixed64LT = Message<"tests.harness.cases.SFixed64LT"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64LT.
 * Use `create(SFixed64LTSchema)` to create a new message.
 */
export const SFixed64LTSchema: GenMessage<SFixed64LT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 147);

/**
 * @generated from message tests.harness.cases.SFixed64LTE
 */
export type SFixed64LTE = Message<"tests.harness.cases.SFixed64LTE"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64LTE.
 * Use `create(SFixed64LTESchema)` to create a new message.
 */
export const SFixed64LTESchema: GenMessage<SFixed64LTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 148);

/**
 * @generated from message tests.harness.cases.SFixed64GT
 */
export type SFixed64GT = Message<"tests.harness.cases.SFixed64GT"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64GT.
 * Use `create(SFixed64GTSchema)` to create a new message.
 */
export const SFixed64GTSchema: GenMessage<SFixed64GT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 149);

/**
 * @generated from message tests.harness.cases.SFixed64GTE
 */
export type SFixed64GTE = Message<"tests.harness.cases.SFixed64GTE"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64GTE.
 * Use `create(SFixed64GTESchema)` to create a new message.
 */
export const SFixed64GTESchema: GenMessage<SFixed64GTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 150);

/**
 * @generated from message tests.harness.cases.SFixed64GTLT
 */
export type SFixed64GTLT = Message<"tests.harness.cases.SFixed64GTLT"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64GTLT.
 * Use `create(SFixed64GTLTSchema)` to create a new message.
 */
export const SFixed64GTLTSchema: GenMessage<SFixed64GTLT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 151);

/**
 * @generated from message tests.harness.cases.SFixed64ExLTGT
 */
export type SFixed64ExLTGT = Message<"tests.harness.cases.SFixed64ExLTGT"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64ExLTGT.
 * Use `create(SFixed64ExLTGTSchema)` to create a new message.
 */
export const SFixed64ExLTGTSchema: GenMessage<SFixed64ExLTGT> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 152);

/**
 * @generated from message tests.harness.cases.SFixed64GTELTE
 */
export type SFixed64GTELTE = Message<"tests.harness.cases.SFixed64GTELTE"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64GTELTE.
 * Use `create(SFixed64GTELTESchema)` to create a new message.
 */
export const SFixed64GTELTESchema: GenMessage<SFixed64GTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 153);

/**
 * @generated from message tests.harness.cases.SFixed64ExGTELTE
 */
export type SFixed64ExGTELTE = Message<"tests.harness.cases.SFixed64ExGTELTE"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64ExGTELTE.
 * Use `create(SFixed64ExGTELTESchema)` to create a new message.
 */
export const SFixed64ExGTELTESchema: GenMessage<SFixed64ExGTELTE> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 154);

/**
 * @generated from message tests.harness.cases.SFixed64Ignore
 */
export type SFixed64Ignore = Message<"tests.harness.cases.SFixed64Ignore"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.SFixed64Ignore.
 * Use `create(SFixed64IgnoreSchema)` to create a new message.
 */
export const SFixed64IgnoreSchema: GenMessage<SFixed64Ignore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 155);

/**
 * @generated from message tests.harness.cases.Int64LTEOptional
 */
export type Int64LTEOptional = Message<"tests.harness.cases.Int64LTEOptional"> & {
  /**
   * @generated from field: optional int64 val = 1;
   */
  val?: bigint;
};

/**
 * Describes the message tests.harness.cases.Int64LTEOptional.
 * Use `create(Int64LTEOptionalSchema)` to create a new message.
 */
export const Int64LTEOptionalSchema: GenMessage<Int64LTEOptional> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_numbers, 156);

