// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file tests/harness/cases/repeated.proto (package tests.harness.cases, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Embed as Embed$1 } from "./other_package/embed_pb";
import { file_tests_harness_cases_other_package_embed } from "./other_package/embed_pb";
import { file_validate_validate } from "../../../validate/validate_pb";
import type { Any, Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tests/harness/cases/repeated.proto.
 */
export const file_tests_harness_cases_repeated: GenFile = /*@__PURE__*/
  fileDesc("CiJ0ZXN0cy9oYXJuZXNzL2Nhc2VzL3JlcGVhdGVkLnByb3RvEhN0ZXN0cy5oYXJuZXNzLmNhc2VzIh0KBUVtYmVkEhQKA3ZhbBgBIAEoA0IH+kIEIgIgACIbCgxSZXBlYXRlZE5vbmUSCwoDdmFsGAEgAygDIjwKEVJlcGVhdGVkRW1iZWROb25lEicKA3ZhbBgBIAMoCzIaLnRlc3RzLmhhcm5lc3MuY2FzZXMuRW1iZWQiVgodUmVwZWF0ZWRFbWJlZENyb3NzUGFja2FnZU5vbmUSNQoDdmFsGAEgAygLMigudGVzdHMuaGFybmVzcy5jYXNlcy5vdGhlcl9wYWNrYWdlLkVtYmVkIkAKC1JlcGVhdGVkTWluEjEKA3ZhbBgBIAMoCzIaLnRlc3RzLmhhcm5lc3MuY2FzZXMuRW1iZWRCCPpCBZIBAggCIiQKC1JlcGVhdGVkTWF4EhUKA3ZhbBgBIAMoAUII+kIFkgECEAMiKQoOUmVwZWF0ZWRNaW5NYXgSFwoDdmFsGAEgAygPQgr6QgeSAQQIAhAEIigKDVJlcGVhdGVkRXhhY3QSFwoDdmFsGAEgAygNQgr6QgeSAQQIAxADIicKDlJlcGVhdGVkVW5pcXVlEhUKA3ZhbBgBIAMoCUII+kIFkgECGAEiMAoQUmVwZWF0ZWRJdGVtUnVsZRIcCgN2YWwYASADKAJCD/pCDJIBCSIHCgUlAAAAACI/ChNSZXBlYXRlZEl0ZW1QYXR0ZXJuEigKA3ZhbBgBIAMoCUIb+kIYkgEVIhNyETIPKD9pKV5bYS16MC05XSskIksKEVJlcGVhdGVkRW1iZWRTa2lwEjYKA3ZhbBgBIAMoCzIaLnRlc3RzLmhhcm5lc3MuY2FzZXMuRW1iZWRCDfpCCpIBByIFigECCAEiMwoOUmVwZWF0ZWRJdGVtSW4SIQoDdmFsGAEgAygJQhT6QhGSAQ4iDHIKUgNmb29SA2JhciI2ChFSZXBlYXRlZEl0ZW1Ob3RJbhIhCgN2YWwYASADKAlCFPpCEZIBDiIMcgpaA2Zvb1oDYmFyIkkKDlJlcGVhdGVkRW51bUluEjcKA3ZhbBgBIAMoDjIbLnRlc3RzLmhhcm5lc3MuY2FzZXMuQW5FbnVtQg36QgqSAQciBYIBAhgAIkwKEVJlcGVhdGVkRW51bU5vdEluEjcKA3ZhbBgBIAMoDjIbLnRlc3RzLmhhcm5lc3MuY2FzZXMuQW5FbnVtQg36QgqSAQciBYIBAiAAIo4BChZSZXBlYXRlZEVtYmVkZGVkRW51bUluElUKA3ZhbBgBIAMoDjI5LnRlc3RzLmhhcm5lc3MuY2FzZXMuUmVwZWF0ZWRFbWJlZGRlZEVudW1Jbi5Bbm90aGVySW5FbnVtQg36QgqSAQciBYIBAhgAIh0KDUFub3RoZXJJbkVudW0SBQoBQRAAEgUKAUIQASKaAQoZUmVwZWF0ZWRFbWJlZGRlZEVudW1Ob3RJbhJbCgN2YWwYASADKA4yPy50ZXN0cy5oYXJuZXNzLmNhc2VzLlJlcGVhdGVkRW1iZWRkZWRFbnVtTm90SW4uQW5vdGhlck5vdEluRW51bUIN+kIKkgEHIgWCAQIgACIgChBBbm90aGVyTm90SW5FbnVtEgUKAUEQABIFCgFCEAEibQoNUmVwZWF0ZWRBbnlJbhJcCgN2YWwYASADKAsyFC5nb29nbGUucHJvdG9idWYuQW55Qjn6QjaSATMiMaIBLhIsdHlwZS5nb29nbGVhcGlzLmNvbS9nb29nbGUucHJvdG9idWYuRHVyYXRpb24icQoQUmVwZWF0ZWRBbnlOb3RJbhJdCgN2YWwYASADKAsyFC5nb29nbGUucHJvdG9idWYuQW55Qjr6QjeSATQiMqIBLxotdHlwZS5nb29nbGVhcGlzLmNvbS9nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIjUKFVJlcGVhdGVkTWluQW5kSXRlbUxlbhIcCgN2YWwYASADKAlCD/pCDJIBCQgBIgVyA5gBAyIzChhSZXBlYXRlZE1pbkFuZE1heEl0ZW1MZW4SFwoDdmFsGAEgAygJQgr6QgeSAQQIARADIk0KEFJlcGVhdGVkRHVyYXRpb24SOQoDdmFsGAEgAygLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQhH6Qg6SAQsiCaoBBjIEEMCEPSIwChNSZXBlYXRlZEV4YWN0SWdub3JlEhkKA3ZhbBgBIAMoDUIM+kIJkgEGCAMQAygBKhYKBkFuRW51bRIFCgFYEAASBQoBWRABQkhaRmdpdGh1Yi5jb20vZW52b3lwcm94eS9wcm90b2MtZ2VuLXZhbGlkYXRlL3Rlc3RzL2hhcm5lc3MvY2FzZXMvZ287Y2FzZXNiBnByb3RvMw", [file_tests_harness_cases_other_package_embed, file_validate_validate, file_google_protobuf_duration, file_google_protobuf_any]);

/**
 * @generated from message tests.harness.cases.Embed
 */
export type Embed = Message<"tests.harness.cases.Embed"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message tests.harness.cases.Embed.
 * Use `create(EmbedSchema)` to create a new message.
 */
export const EmbedSchema: GenMessage<Embed> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 0);

/**
 * @generated from message tests.harness.cases.RepeatedNone
 */
export type RepeatedNone = Message<"tests.harness.cases.RepeatedNone"> & {
  /**
   * @generated from field: repeated int64 val = 1;
   */
  val: bigint[];
};

/**
 * Describes the message tests.harness.cases.RepeatedNone.
 * Use `create(RepeatedNoneSchema)` to create a new message.
 */
export const RepeatedNoneSchema: GenMessage<RepeatedNone> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 1);

/**
 * @generated from message tests.harness.cases.RepeatedEmbedNone
 */
export type RepeatedEmbedNone = Message<"tests.harness.cases.RepeatedEmbedNone"> & {
  /**
   * @generated from field: repeated tests.harness.cases.Embed val = 1;
   */
  val: Embed[];
};

/**
 * Describes the message tests.harness.cases.RepeatedEmbedNone.
 * Use `create(RepeatedEmbedNoneSchema)` to create a new message.
 */
export const RepeatedEmbedNoneSchema: GenMessage<RepeatedEmbedNone> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 2);

/**
 * @generated from message tests.harness.cases.RepeatedEmbedCrossPackageNone
 */
export type RepeatedEmbedCrossPackageNone = Message<"tests.harness.cases.RepeatedEmbedCrossPackageNone"> & {
  /**
   * @generated from field: repeated tests.harness.cases.other_package.Embed val = 1;
   */
  val: Embed$1[];
};

/**
 * Describes the message tests.harness.cases.RepeatedEmbedCrossPackageNone.
 * Use `create(RepeatedEmbedCrossPackageNoneSchema)` to create a new message.
 */
export const RepeatedEmbedCrossPackageNoneSchema: GenMessage<RepeatedEmbedCrossPackageNone> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 3);

/**
 * @generated from message tests.harness.cases.RepeatedMin
 */
export type RepeatedMin = Message<"tests.harness.cases.RepeatedMin"> & {
  /**
   * @generated from field: repeated tests.harness.cases.Embed val = 1;
   */
  val: Embed[];
};

/**
 * Describes the message tests.harness.cases.RepeatedMin.
 * Use `create(RepeatedMinSchema)` to create a new message.
 */
export const RepeatedMinSchema: GenMessage<RepeatedMin> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 4);

/**
 * @generated from message tests.harness.cases.RepeatedMax
 */
export type RepeatedMax = Message<"tests.harness.cases.RepeatedMax"> & {
  /**
   * @generated from field: repeated double val = 1;
   */
  val: number[];
};

/**
 * Describes the message tests.harness.cases.RepeatedMax.
 * Use `create(RepeatedMaxSchema)` to create a new message.
 */
export const RepeatedMaxSchema: GenMessage<RepeatedMax> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 5);

/**
 * @generated from message tests.harness.cases.RepeatedMinMax
 */
export type RepeatedMinMax = Message<"tests.harness.cases.RepeatedMinMax"> & {
  /**
   * @generated from field: repeated sfixed32 val = 1;
   */
  val: number[];
};

/**
 * Describes the message tests.harness.cases.RepeatedMinMax.
 * Use `create(RepeatedMinMaxSchema)` to create a new message.
 */
export const RepeatedMinMaxSchema: GenMessage<RepeatedMinMax> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 6);

/**
 * @generated from message tests.harness.cases.RepeatedExact
 */
export type RepeatedExact = Message<"tests.harness.cases.RepeatedExact"> & {
  /**
   * @generated from field: repeated uint32 val = 1;
   */
  val: number[];
};

/**
 * Describes the message tests.harness.cases.RepeatedExact.
 * Use `create(RepeatedExactSchema)` to create a new message.
 */
export const RepeatedExactSchema: GenMessage<RepeatedExact> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 7);

/**
 * @generated from message tests.harness.cases.RepeatedUnique
 */
export type RepeatedUnique = Message<"tests.harness.cases.RepeatedUnique"> & {
  /**
   * @generated from field: repeated string val = 1;
   */
  val: string[];
};

/**
 * Describes the message tests.harness.cases.RepeatedUnique.
 * Use `create(RepeatedUniqueSchema)` to create a new message.
 */
export const RepeatedUniqueSchema: GenMessage<RepeatedUnique> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 8);

/**
 * @generated from message tests.harness.cases.RepeatedItemRule
 */
export type RepeatedItemRule = Message<"tests.harness.cases.RepeatedItemRule"> & {
  /**
   * @generated from field: repeated float val = 1;
   */
  val: number[];
};

/**
 * Describes the message tests.harness.cases.RepeatedItemRule.
 * Use `create(RepeatedItemRuleSchema)` to create a new message.
 */
export const RepeatedItemRuleSchema: GenMessage<RepeatedItemRule> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 9);

/**
 * @generated from message tests.harness.cases.RepeatedItemPattern
 */
export type RepeatedItemPattern = Message<"tests.harness.cases.RepeatedItemPattern"> & {
  /**
   * @generated from field: repeated string val = 1;
   */
  val: string[];
};

/**
 * Describes the message tests.harness.cases.RepeatedItemPattern.
 * Use `create(RepeatedItemPatternSchema)` to create a new message.
 */
export const RepeatedItemPatternSchema: GenMessage<RepeatedItemPattern> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 10);

/**
 * @generated from message tests.harness.cases.RepeatedEmbedSkip
 */
export type RepeatedEmbedSkip = Message<"tests.harness.cases.RepeatedEmbedSkip"> & {
  /**
   * @generated from field: repeated tests.harness.cases.Embed val = 1;
   */
  val: Embed[];
};

/**
 * Describes the message tests.harness.cases.RepeatedEmbedSkip.
 * Use `create(RepeatedEmbedSkipSchema)` to create a new message.
 */
export const RepeatedEmbedSkipSchema: GenMessage<RepeatedEmbedSkip> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 11);

/**
 * @generated from message tests.harness.cases.RepeatedItemIn
 */
export type RepeatedItemIn = Message<"tests.harness.cases.RepeatedItemIn"> & {
  /**
   * @generated from field: repeated string val = 1;
   */
  val: string[];
};

/**
 * Describes the message tests.harness.cases.RepeatedItemIn.
 * Use `create(RepeatedItemInSchema)` to create a new message.
 */
export const RepeatedItemInSchema: GenMessage<RepeatedItemIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 12);

/**
 * @generated from message tests.harness.cases.RepeatedItemNotIn
 */
export type RepeatedItemNotIn = Message<"tests.harness.cases.RepeatedItemNotIn"> & {
  /**
   * @generated from field: repeated string val = 1;
   */
  val: string[];
};

/**
 * Describes the message tests.harness.cases.RepeatedItemNotIn.
 * Use `create(RepeatedItemNotInSchema)` to create a new message.
 */
export const RepeatedItemNotInSchema: GenMessage<RepeatedItemNotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 13);

/**
 * @generated from message tests.harness.cases.RepeatedEnumIn
 */
export type RepeatedEnumIn = Message<"tests.harness.cases.RepeatedEnumIn"> & {
  /**
   * @generated from field: repeated tests.harness.cases.AnEnum val = 1;
   */
  val: AnEnum[];
};

/**
 * Describes the message tests.harness.cases.RepeatedEnumIn.
 * Use `create(RepeatedEnumInSchema)` to create a new message.
 */
export const RepeatedEnumInSchema: GenMessage<RepeatedEnumIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 14);

/**
 * @generated from message tests.harness.cases.RepeatedEnumNotIn
 */
export type RepeatedEnumNotIn = Message<"tests.harness.cases.RepeatedEnumNotIn"> & {
  /**
   * @generated from field: repeated tests.harness.cases.AnEnum val = 1;
   */
  val: AnEnum[];
};

/**
 * Describes the message tests.harness.cases.RepeatedEnumNotIn.
 * Use `create(RepeatedEnumNotInSchema)` to create a new message.
 */
export const RepeatedEnumNotInSchema: GenMessage<RepeatedEnumNotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 15);

/**
 * @generated from message tests.harness.cases.RepeatedEmbeddedEnumIn
 */
export type RepeatedEmbeddedEnumIn = Message<"tests.harness.cases.RepeatedEmbeddedEnumIn"> & {
  /**
   * @generated from field: repeated tests.harness.cases.RepeatedEmbeddedEnumIn.AnotherInEnum val = 1;
   */
  val: RepeatedEmbeddedEnumIn_AnotherInEnum[];
};

/**
 * Describes the message tests.harness.cases.RepeatedEmbeddedEnumIn.
 * Use `create(RepeatedEmbeddedEnumInSchema)` to create a new message.
 */
export const RepeatedEmbeddedEnumInSchema: GenMessage<RepeatedEmbeddedEnumIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 16);

/**
 * @generated from enum tests.harness.cases.RepeatedEmbeddedEnumIn.AnotherInEnum
 */
export enum RepeatedEmbeddedEnumIn_AnotherInEnum {
  /**
   * @generated from enum value: A = 0;
   */
  A = 0,

  /**
   * @generated from enum value: B = 1;
   */
  B = 1,
}

/**
 * Describes the enum tests.harness.cases.RepeatedEmbeddedEnumIn.AnotherInEnum.
 */
export const RepeatedEmbeddedEnumIn_AnotherInEnumSchema: GenEnum<RepeatedEmbeddedEnumIn_AnotherInEnum> = /*@__PURE__*/
  enumDesc(file_tests_harness_cases_repeated, 16, 0);

/**
 * @generated from message tests.harness.cases.RepeatedEmbeddedEnumNotIn
 */
export type RepeatedEmbeddedEnumNotIn = Message<"tests.harness.cases.RepeatedEmbeddedEnumNotIn"> & {
  /**
   * @generated from field: repeated tests.harness.cases.RepeatedEmbeddedEnumNotIn.AnotherNotInEnum val = 1;
   */
  val: RepeatedEmbeddedEnumNotIn_AnotherNotInEnum[];
};

/**
 * Describes the message tests.harness.cases.RepeatedEmbeddedEnumNotIn.
 * Use `create(RepeatedEmbeddedEnumNotInSchema)` to create a new message.
 */
export const RepeatedEmbeddedEnumNotInSchema: GenMessage<RepeatedEmbeddedEnumNotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 17);

/**
 * @generated from enum tests.harness.cases.RepeatedEmbeddedEnumNotIn.AnotherNotInEnum
 */
export enum RepeatedEmbeddedEnumNotIn_AnotherNotInEnum {
  /**
   * @generated from enum value: A = 0;
   */
  A = 0,

  /**
   * @generated from enum value: B = 1;
   */
  B = 1,
}

/**
 * Describes the enum tests.harness.cases.RepeatedEmbeddedEnumNotIn.AnotherNotInEnum.
 */
export const RepeatedEmbeddedEnumNotIn_AnotherNotInEnumSchema: GenEnum<RepeatedEmbeddedEnumNotIn_AnotherNotInEnum> = /*@__PURE__*/
  enumDesc(file_tests_harness_cases_repeated, 17, 0);

/**
 * @generated from message tests.harness.cases.RepeatedAnyIn
 */
export type RepeatedAnyIn = Message<"tests.harness.cases.RepeatedAnyIn"> & {
  /**
   * @generated from field: repeated google.protobuf.Any val = 1;
   */
  val: Any[];
};

/**
 * Describes the message tests.harness.cases.RepeatedAnyIn.
 * Use `create(RepeatedAnyInSchema)` to create a new message.
 */
export const RepeatedAnyInSchema: GenMessage<RepeatedAnyIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 18);

/**
 * @generated from message tests.harness.cases.RepeatedAnyNotIn
 */
export type RepeatedAnyNotIn = Message<"tests.harness.cases.RepeatedAnyNotIn"> & {
  /**
   * @generated from field: repeated google.protobuf.Any val = 1;
   */
  val: Any[];
};

/**
 * Describes the message tests.harness.cases.RepeatedAnyNotIn.
 * Use `create(RepeatedAnyNotInSchema)` to create a new message.
 */
export const RepeatedAnyNotInSchema: GenMessage<RepeatedAnyNotIn> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 19);

/**
 * @generated from message tests.harness.cases.RepeatedMinAndItemLen
 */
export type RepeatedMinAndItemLen = Message<"tests.harness.cases.RepeatedMinAndItemLen"> & {
  /**
   * @generated from field: repeated string val = 1;
   */
  val: string[];
};

/**
 * Describes the message tests.harness.cases.RepeatedMinAndItemLen.
 * Use `create(RepeatedMinAndItemLenSchema)` to create a new message.
 */
export const RepeatedMinAndItemLenSchema: GenMessage<RepeatedMinAndItemLen> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 20);

/**
 * @generated from message tests.harness.cases.RepeatedMinAndMaxItemLen
 */
export type RepeatedMinAndMaxItemLen = Message<"tests.harness.cases.RepeatedMinAndMaxItemLen"> & {
  /**
   * @generated from field: repeated string val = 1;
   */
  val: string[];
};

/**
 * Describes the message tests.harness.cases.RepeatedMinAndMaxItemLen.
 * Use `create(RepeatedMinAndMaxItemLenSchema)` to create a new message.
 */
export const RepeatedMinAndMaxItemLenSchema: GenMessage<RepeatedMinAndMaxItemLen> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 21);

/**
 * @generated from message tests.harness.cases.RepeatedDuration
 */
export type RepeatedDuration = Message<"tests.harness.cases.RepeatedDuration"> & {
  /**
   * @generated from field: repeated google.protobuf.Duration val = 1;
   */
  val: Duration[];
};

/**
 * Describes the message tests.harness.cases.RepeatedDuration.
 * Use `create(RepeatedDurationSchema)` to create a new message.
 */
export const RepeatedDurationSchema: GenMessage<RepeatedDuration> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 22);

/**
 * @generated from message tests.harness.cases.RepeatedExactIgnore
 */
export type RepeatedExactIgnore = Message<"tests.harness.cases.RepeatedExactIgnore"> & {
  /**
   * @generated from field: repeated uint32 val = 1;
   */
  val: number[];
};

/**
 * Describes the message tests.harness.cases.RepeatedExactIgnore.
 * Use `create(RepeatedExactIgnoreSchema)` to create a new message.
 */
export const RepeatedExactIgnoreSchema: GenMessage<RepeatedExactIgnore> = /*@__PURE__*/
  messageDesc(file_tests_harness_cases_repeated, 23);

/**
 * @generated from enum tests.harness.cases.AnEnum
 */
export enum AnEnum {
  /**
   * @generated from enum value: X = 0;
   */
  X = 0,

  /**
   * @generated from enum value: Y = 1;
   */
  Y = 1,
}

/**
 * Describes the enum tests.harness.cases.AnEnum.
 */
export const AnEnumSchema: GenEnum<AnEnum> = /*@__PURE__*/
  enumDesc(file_tests_harness_cases_repeated, 0);

