// Copyright 2019 The Grafeas Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file grafeas/v1/discovery.proto (package grafeas.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../google/api/field_behavior_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../google/rpc/status_pb";
import { file_google_rpc_status } from "../../google/rpc/status_pb";
import type { NoteKind } from "./common_pb";
import { file_grafeas_v1_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file grafeas/v1/discovery.proto.
 */
export const file_grafeas_v1_discovery: GenFile = /*@__PURE__*/
  fileDesc("ChpncmFmZWFzL3YxL2Rpc2NvdmVyeS5wcm90bxIKZ3JhZmVhcy52MSI8Cg1EaXNjb3ZlcnlOb3RlEisKDWFuYWx5c2lzX2tpbmQYASABKA4yFC5ncmFmZWFzLnYxLk5vdGVLaW5kIvwKChNEaXNjb3ZlcnlPY2N1cnJlbmNlEk8KE2NvbnRpbnVvdXNfYW5hbHlzaXMYASABKA4yMi5ncmFmZWFzLnYxLkRpc2NvdmVyeU9jY3VycmVuY2UuQ29udGludW91c0FuYWx5c2lzEkcKD2FuYWx5c2lzX3N0YXR1cxgCIAEoDjIuLmdyYWZlYXMudjEuRGlzY292ZXJ5T2NjdXJyZW5jZS5BbmFseXNpc1N0YXR1cxJNChJhbmFseXNpc19jb21wbGV0ZWQYByABKAsyMS5ncmFmZWFzLnYxLkRpc2NvdmVyeU9jY3VycmVuY2UuQW5hbHlzaXNDb21wbGV0ZWQSKgoOYW5hbHlzaXNfZXJyb3IYCCADKAsyEi5nb29nbGUucnBjLlN0YXR1cxIxChVhbmFseXNpc19zdGF0dXNfZXJyb3IYAyABKAsyEi5nb29nbGUucnBjLlN0YXR1cxILCgNjcGUYBCABKAkSMgoObGFzdF9zY2FuX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjUKDGFyY2hpdmVfdGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI/CgtzYm9tX3N0YXR1cxgJIAEoCzIqLmdyYWZlYXMudjEuRGlzY292ZXJ5T2NjdXJyZW5jZS5TQk9NU3RhdHVzElsKGXZ1bG5lcmFiaWxpdHlfYXR0ZXN0YXRpb24YCiABKAsyOC5ncmFmZWFzLnYxLkRpc2NvdmVyeU9jY3VycmVuY2UuVnVsbmVyYWJpbGl0eUF0dGVzdGF0aW9uGioKEUFuYWx5c2lzQ29tcGxldGVkEhUKDWFuYWx5c2lzX3R5cGUYASADKAkaqQEKClNCT01TdGF0dXMSSAoKc2JvbV9zdGF0ZRgBIAEoDjI0LmdyYWZlYXMudjEuRGlzY292ZXJ5T2NjdXJyZW5jZS5TQk9NU3RhdHVzLlNCT01TdGF0ZRINCgVlcnJvchgCIAEoCSJCCglTQk9NU3RhdGUSGgoWU0JPTV9TVEFURV9VTlNQRUNJRklFRBAAEgsKB1BFTkRJTkcQARIMCghDT01QTEVURRACGrMCChhWdWxuZXJhYmlsaXR5QXR0ZXN0YXRpb24SNQoRbGFzdF9hdHRlbXB0X3RpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEmUKBXN0YXRlGAIgASgOMlYuZ3JhZmVhcy52MS5EaXNjb3ZlcnlPY2N1cnJlbmNlLlZ1bG5lcmFiaWxpdHlBdHRlc3RhdGlvbi5WdWxuZXJhYmlsaXR5QXR0ZXN0YXRpb25TdGF0ZRINCgVlcnJvchgDIAEoCSJqCh1WdWxuZXJhYmlsaXR5QXR0ZXN0YXRpb25TdGF0ZRIvCitWVUxORVJBQklMSVRZX0FUVEVTVEFUSU9OX1NUQVRFX1VOU1BFQ0lGSUVEEAASCwoHU1VDQ0VTUxABEgsKB0ZBSUxVUkUQAiJTChJDb250aW51b3VzQW5hbHlzaXMSIwofQ09OVElOVU9VU19BTkFMWVNJU19VTlNQRUNJRklFRBAAEgoKBkFDVElWRRABEgwKCElOQUNUSVZFEAIiowEKDkFuYWx5c2lzU3RhdHVzEh8KG0FOQUxZU0lTX1NUQVRVU19VTlNQRUNJRklFRBAAEgsKB1BFTkRJTkcQARIMCghTQ0FOTklORxACEhQKEEZJTklTSEVEX1NVQ0NFU1MQAxIMCghDT01QTEVURRADEhMKD0ZJTklTSEVEX0ZBSUxFRBAEEhgKFEZJTklTSEVEX1VOU1VQUE9SVEVEEAUaAhABQlEKDWlvLmdyYWZlYXMudjFQAVo4Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9ncmFmZWFzL3YxO2dyYWZlYXOiAgNHUkFiBnByb3RvMw", [file_google_api_field_behavior, file_google_protobuf_timestamp, file_google_rpc_status, file_grafeas_v1_common]);

/**
 * A note that indicates a type of analysis a provider would perform. This note
 * exists in a provider's project. A `Discovery` occurrence is created in a
 * consumer's project at the start of analysis.
 *
 * @generated from message grafeas.v1.DiscoveryNote
 */
export type DiscoveryNote = Message<"grafeas.v1.DiscoveryNote"> & {
  /**
   * Required. Immutable. The kind of analysis that is handled by this
   * discovery.
   *
   * @generated from field: grafeas.v1.NoteKind analysis_kind = 1;
   */
  analysisKind: NoteKind;
};

/**
 * Describes the message grafeas.v1.DiscoveryNote.
 * Use `create(DiscoveryNoteSchema)` to create a new message.
 */
export const DiscoveryNoteSchema: GenMessage<DiscoveryNote> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_discovery, 0);

/**
 * Provides information about the analysis status of a discovered resource.
 *
 * @generated from message grafeas.v1.DiscoveryOccurrence
 */
export type DiscoveryOccurrence = Message<"grafeas.v1.DiscoveryOccurrence"> & {
  /**
   * Whether the resource is continuously analyzed.
   *
   * @generated from field: grafeas.v1.DiscoveryOccurrence.ContinuousAnalysis continuous_analysis = 1;
   */
  continuousAnalysis: DiscoveryOccurrence_ContinuousAnalysis;

  /**
   * The status of discovery for the resource.
   *
   * @generated from field: grafeas.v1.DiscoveryOccurrence.AnalysisStatus analysis_status = 2;
   */
  analysisStatus: DiscoveryOccurrence_AnalysisStatus;

  /**
   * @generated from field: grafeas.v1.DiscoveryOccurrence.AnalysisCompleted analysis_completed = 7;
   */
  analysisCompleted?: DiscoveryOccurrence_AnalysisCompleted;

  /**
   * Indicates any errors encountered during analysis of a resource. There
   * could be 0 or more of these errors.
   *
   * @generated from field: repeated google.rpc.Status analysis_error = 8;
   */
  analysisError: Status[];

  /**
   * When an error is encountered this will contain a LocalizedMessage under
   * details to show to the user. The LocalizedMessage is output only and
   * populated by the API.
   *
   * @generated from field: google.rpc.Status analysis_status_error = 3;
   */
  analysisStatusError?: Status;

  /**
   * The CPE of the resource being scanned.
   *
   * @generated from field: string cpe = 4;
   */
  cpe: string;

  /**
   * The last time this resource was scanned.
   *
   * @generated from field: google.protobuf.Timestamp last_scan_time = 5;
   */
  lastScanTime?: Timestamp;

  /**
   * The time occurrences related to this discovery occurrence were archived.
   *
   * @generated from field: google.protobuf.Timestamp archive_time = 6;
   */
  archiveTime?: Timestamp;

  /**
   * The status of an SBOM generation.
   *
   * @generated from field: grafeas.v1.DiscoveryOccurrence.SBOMStatus sbom_status = 9;
   */
  sbomStatus?: DiscoveryOccurrence_SBOMStatus;

  /**
   * The status of an vulnerability attestation generation.
   *
   * @generated from field: grafeas.v1.DiscoveryOccurrence.VulnerabilityAttestation vulnerability_attestation = 10;
   */
  vulnerabilityAttestation?: DiscoveryOccurrence_VulnerabilityAttestation;
};

/**
 * Describes the message grafeas.v1.DiscoveryOccurrence.
 * Use `create(DiscoveryOccurrenceSchema)` to create a new message.
 */
export const DiscoveryOccurrenceSchema: GenMessage<DiscoveryOccurrence> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_discovery, 1);

/**
 * Indicates which analysis completed successfully. Multiple types of
 * analysis can be performed on a single resource.
 *
 * @generated from message grafeas.v1.DiscoveryOccurrence.AnalysisCompleted
 */
export type DiscoveryOccurrence_AnalysisCompleted = Message<"grafeas.v1.DiscoveryOccurrence.AnalysisCompleted"> & {
  /**
   * @generated from field: repeated string analysis_type = 1;
   */
  analysisType: string[];
};

/**
 * Describes the message grafeas.v1.DiscoveryOccurrence.AnalysisCompleted.
 * Use `create(DiscoveryOccurrence_AnalysisCompletedSchema)` to create a new message.
 */
export const DiscoveryOccurrence_AnalysisCompletedSchema: GenMessage<DiscoveryOccurrence_AnalysisCompleted> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_discovery, 1, 0);

/**
 * The status of an SBOM generation.
 *
 * @generated from message grafeas.v1.DiscoveryOccurrence.SBOMStatus
 */
export type DiscoveryOccurrence_SBOMStatus = Message<"grafeas.v1.DiscoveryOccurrence.SBOMStatus"> & {
  /**
   * The progress of the SBOM generation.
   *
   * @generated from field: grafeas.v1.DiscoveryOccurrence.SBOMStatus.SBOMState sbom_state = 1;
   */
  sbomState: DiscoveryOccurrence_SBOMStatus_SBOMState;

  /**
   * If there was an error generating an SBOM, this will indicate what that
   * error was.
   *
   * @generated from field: string error = 2;
   */
  error: string;
};

/**
 * Describes the message grafeas.v1.DiscoveryOccurrence.SBOMStatus.
 * Use `create(DiscoveryOccurrence_SBOMStatusSchema)` to create a new message.
 */
export const DiscoveryOccurrence_SBOMStatusSchema: GenMessage<DiscoveryOccurrence_SBOMStatus> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_discovery, 1, 1);

/**
 * An enum indicating the progress of the SBOM generation.
 *
 * @generated from enum grafeas.v1.DiscoveryOccurrence.SBOMStatus.SBOMState
 */
export enum DiscoveryOccurrence_SBOMStatus_SBOMState {
  /**
   * Default unknown state.
   *
   * @generated from enum value: SBOM_STATE_UNSPECIFIED = 0;
   */
  SBOM_STATE_UNSPECIFIED = 0,

  /**
   * SBOM scanning is pending.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * SBOM scanning has completed.
   *
   * @generated from enum value: COMPLETE = 2;
   */
  COMPLETE = 2,
}

/**
 * Describes the enum grafeas.v1.DiscoveryOccurrence.SBOMStatus.SBOMState.
 */
export const DiscoveryOccurrence_SBOMStatus_SBOMStateSchema: GenEnum<DiscoveryOccurrence_SBOMStatus_SBOMState> = /*@__PURE__*/
  enumDesc(file_grafeas_v1_discovery, 1, 1, 0);

/**
 * The status of an vulnerability attestation generation.
 *
 * @generated from message grafeas.v1.DiscoveryOccurrence.VulnerabilityAttestation
 */
export type DiscoveryOccurrence_VulnerabilityAttestation = Message<"grafeas.v1.DiscoveryOccurrence.VulnerabilityAttestation"> & {
  /**
   * The last time we attempted to generate an attestation.
   *
   * @generated from field: google.protobuf.Timestamp last_attempt_time = 1;
   */
  lastAttemptTime?: Timestamp;

  /**
   * The success/failure state of the latest attestation attempt.
   *
   * @generated from field: grafeas.v1.DiscoveryOccurrence.VulnerabilityAttestation.VulnerabilityAttestationState state = 2;
   */
  state: DiscoveryOccurrence_VulnerabilityAttestation_VulnerabilityAttestationState;

  /**
   * If failure, the error reason for why the attestation generation failed.
   *
   * @generated from field: string error = 3;
   */
  error: string;
};

/**
 * Describes the message grafeas.v1.DiscoveryOccurrence.VulnerabilityAttestation.
 * Use `create(DiscoveryOccurrence_VulnerabilityAttestationSchema)` to create a new message.
 */
export const DiscoveryOccurrence_VulnerabilityAttestationSchema: GenMessage<DiscoveryOccurrence_VulnerabilityAttestation> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_discovery, 1, 2);

/**
 * An enum indicating the state of the attestation generation.
 *
 * @generated from enum grafeas.v1.DiscoveryOccurrence.VulnerabilityAttestation.VulnerabilityAttestationState
 */
export enum DiscoveryOccurrence_VulnerabilityAttestation_VulnerabilityAttestationState {
  /**
   * Default unknown state.
   *
   * @generated from enum value: VULNERABILITY_ATTESTATION_STATE_UNSPECIFIED = 0;
   */
  VULNERABILITY_ATTESTATION_STATE_UNSPECIFIED = 0,

  /**
   * Attestation was successfully generated and stored.
   *
   * @generated from enum value: SUCCESS = 1;
   */
  SUCCESS = 1,

  /**
   * Attestation was unsuccessfully generated and stored.
   *
   * @generated from enum value: FAILURE = 2;
   */
  FAILURE = 2,
}

/**
 * Describes the enum grafeas.v1.DiscoveryOccurrence.VulnerabilityAttestation.VulnerabilityAttestationState.
 */
export const DiscoveryOccurrence_VulnerabilityAttestation_VulnerabilityAttestationStateSchema: GenEnum<DiscoveryOccurrence_VulnerabilityAttestation_VulnerabilityAttestationState> = /*@__PURE__*/
  enumDesc(file_grafeas_v1_discovery, 1, 2, 0);

/**
 * Whether the resource is continuously analyzed.
 *
 * @generated from enum grafeas.v1.DiscoveryOccurrence.ContinuousAnalysis
 */
export enum DiscoveryOccurrence_ContinuousAnalysis {
  /**
   * Unknown.
   *
   * @generated from enum value: CONTINUOUS_ANALYSIS_UNSPECIFIED = 0;
   */
  CONTINUOUS_ANALYSIS_UNSPECIFIED = 0,

  /**
   * The resource is continuously analyzed.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * The resource is ignored for continuous analysis.
   *
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * Describes the enum grafeas.v1.DiscoveryOccurrence.ContinuousAnalysis.
 */
export const DiscoveryOccurrence_ContinuousAnalysisSchema: GenEnum<DiscoveryOccurrence_ContinuousAnalysis> = /*@__PURE__*/
  enumDesc(file_grafeas_v1_discovery, 1, 0);

/**
 * Analysis status for a resource. Currently for initial analysis only (not
 * updated in continuous analysis).
 *
 * @generated from enum grafeas.v1.DiscoveryOccurrence.AnalysisStatus
 */
export enum DiscoveryOccurrence_AnalysisStatus {
  /**
   * Unknown.
   *
   * @generated from enum value: ANALYSIS_STATUS_UNSPECIFIED = 0;
   */
  ANALYSIS_STATUS_UNSPECIFIED = 0,

  /**
   * Resource is known but no action has been taken yet.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * Resource is being analyzed.
   *
   * @generated from enum value: SCANNING = 2;
   */
  SCANNING = 2,

  /**
   * Analysis has finished successfully.
   *
   * @generated from enum value: FINISHED_SUCCESS = 3;
   */
  FINISHED_SUCCESS = 3,

  /**
   * Analysis has completed.
   *
   * @generated from enum value: COMPLETE = 3;
   */
  COMPLETE = 3,

  /**
   * Analysis has finished unsuccessfully, the analysis itself is in a bad
   * state.
   *
   * @generated from enum value: FINISHED_FAILED = 4;
   */
  FINISHED_FAILED = 4,

  /**
   * The resource is known not to be supported.
   *
   * @generated from enum value: FINISHED_UNSUPPORTED = 5;
   */
  FINISHED_UNSUPPORTED = 5,
}

/**
 * Describes the enum grafeas.v1.DiscoveryOccurrence.AnalysisStatus.
 */
export const DiscoveryOccurrence_AnalysisStatusSchema: GenEnum<DiscoveryOccurrence_AnalysisStatus> = /*@__PURE__*/
  enumDesc(file_grafeas_v1_discovery, 1, 1);

