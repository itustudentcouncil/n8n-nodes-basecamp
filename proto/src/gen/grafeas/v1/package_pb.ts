// Copyright 2019 The Grafeas Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file grafeas/v1/package.proto (package grafeas.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../google/api/field_behavior_pb";
import type { Digest, License } from "./common_pb";
import { file_grafeas_v1_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file grafeas/v1/package.proto.
 */
export const file_grafeas_v1_package: GenFile = /*@__PURE__*/
  fileDesc("ChhncmFmZWFzL3YxL3BhY2thZ2UucHJvdG8SCmdyYWZlYXMudjEitwEKDERpc3RyaWJ1dGlvbhIUCgdjcGVfdXJpGAEgASgJQgPgQQISLgoMYXJjaGl0ZWN0dXJlGAIgASgOMhguZ3JhZmVhcy52MS5BcmNoaXRlY3R1cmUSKwoObGF0ZXN0X3ZlcnNpb24YAyABKAsyEy5ncmFmZWFzLnYxLlZlcnNpb24SEgoKbWFpbnRhaW5lchgEIAEoCRILCgN1cmwYBSABKAkSEwoLZGVzY3JpcHRpb24YBiABKAkiTwoITG9jYXRpb24SDwoHY3BlX3VyaRgBIAEoCRIkCgd2ZXJzaW9uGAIgASgLMhMuZ3JhZmVhcy52MS5WZXJzaW9uEgwKBHBhdGgYAyABKAki0AIKC1BhY2thZ2VOb3RlEhQKBG5hbWUYASABKAlCBuBBAuBBBRIuCgxkaXN0cmlidXRpb24YCiADKAsyGC5ncmFmZWFzLnYxLkRpc3RyaWJ1dGlvbhIUCgxwYWNrYWdlX3R5cGUYCyABKAkSDwoHY3BlX3VyaRgMIAEoCRIuCgxhcmNoaXRlY3R1cmUYDSABKA4yGC5ncmFmZWFzLnYxLkFyY2hpdGVjdHVyZRIkCgd2ZXJzaW9uGA4gASgLMhMuZ3JhZmVhcy52MS5WZXJzaW9uEhIKCm1haW50YWluZXIYDyABKAkSCwoDdXJsGBAgASgJEhMKC2Rlc2NyaXB0aW9uGBEgASgJEiQKB2xpY2Vuc2UYEiABKAsyEy5ncmFmZWFzLnYxLkxpY2Vuc2USIgoGZGlnZXN0GBMgAygLMhIuZ3JhZmVhcy52MS5EaWdlc3QiiAIKEVBhY2thZ2VPY2N1cnJlbmNlEhQKBG5hbWUYASABKAlCBuBBAuBBAxImCghsb2NhdGlvbhgCIAMoCzIULmdyYWZlYXMudjEuTG9jYXRpb24SGQoMcGFja2FnZV90eXBlGAMgASgJQgPgQQMSFAoHY3BlX3VyaRgEIAEoCUID4EEDEjMKDGFyY2hpdGVjdHVyZRgFIAEoDjIYLmdyYWZlYXMudjEuQXJjaGl0ZWN0dXJlQgPgQQMSJAoHbGljZW5zZRgGIAEoCzITLmdyYWZlYXMudjEuTGljZW5zZRIpCgd2ZXJzaW9uGAcgASgLMhMuZ3JhZmVhcy52MS5WZXJzaW9uQgPgQQMi4AEKB1ZlcnNpb24SDQoFZXBvY2gYASABKAUSDAoEbmFtZRgCIAEoCRIQCghyZXZpc2lvbhgDIAEoCRIRCglpbmNsdXNpdmUYBiABKAgSLQoEa2luZBgEIAEoDjIfLmdyYWZlYXMudjEuVmVyc2lvbi5WZXJzaW9uS2luZBIRCglmdWxsX25hbWUYBSABKAkiUQoLVmVyc2lvbktpbmQSHAoYVkVSU0lPTl9LSU5EX1VOU1BFQ0lGSUVEEAASCgoGTk9STUFMEAESCwoHTUlOSU1VTRACEgsKB01BWElNVU0QAyo+CgxBcmNoaXRlY3R1cmUSHAoYQVJDSElURUNUVVJFX1VOU1BFQ0lGSUVEEAASBwoDWDg2EAESBwoDWDY0EAJCUQoNaW8uZ3JhZmVhcy52MVABWjhnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2dyYWZlYXMvdjE7Z3JhZmVhc6ICA0dSQWIGcHJvdG8z", [file_google_api_field_behavior, file_grafeas_v1_common]);

/**
 * This represents a particular channel of distribution for a given package.
 * E.g., Debian's jessie-backports dpkg mirror.
 *
 * @generated from message grafeas.v1.Distribution
 */
export type Distribution = Message<"grafeas.v1.Distribution"> & {
  /**
   * The cpe_uri in [CPE format](https://cpe.mitre.org/specification/)
   * denoting the package manager version distributing a package.
   *
   * @generated from field: string cpe_uri = 1;
   */
  cpeUri: string;

  /**
   * The CPU architecture for which packages in this distribution channel were
   * built.
   *
   * @generated from field: grafeas.v1.Architecture architecture = 2;
   */
  architecture: Architecture;

  /**
   * The latest available version of this package in this distribution channel.
   *
   * @generated from field: grafeas.v1.Version latest_version = 3;
   */
  latestVersion?: Version;

  /**
   * A freeform string denoting the maintainer of this package.
   *
   * @generated from field: string maintainer = 4;
   */
  maintainer: string;

  /**
   * The distribution channel-specific homepage for this package.
   *
   * @generated from field: string url = 5;
   */
  url: string;

  /**
   * The distribution channel-specific description of this package.
   *
   * @generated from field: string description = 6;
   */
  description: string;
};

/**
 * Describes the message grafeas.v1.Distribution.
 * Use `create(DistributionSchema)` to create a new message.
 */
export const DistributionSchema: GenMessage<Distribution> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_package, 0);

/**
 * An occurrence of a particular package installation found within a system's
 * filesystem. E.g., glibc was found in `/var/lib/dpkg/status`.
 *
 * @generated from message grafeas.v1.Location
 */
export type Location = Message<"grafeas.v1.Location"> & {
  /**
   * Deprecated.
   * The CPE URI in [CPE format](https://cpe.mitre.org/specification/)
   *
   * @generated from field: string cpe_uri = 1;
   */
  cpeUri: string;

  /**
   * Deprecated.
   * The version installed at this location.
   *
   * @generated from field: grafeas.v1.Version version = 2;
   */
  version?: Version;

  /**
   * The path from which we gathered that this package/version is installed.
   *
   * @generated from field: string path = 3;
   */
  path: string;
};

/**
 * Describes the message grafeas.v1.Location.
 * Use `create(LocationSchema)` to create a new message.
 */
export const LocationSchema: GenMessage<Location> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_package, 1);

/**
 * PackageNote represents a particular package version.
 *
 * @generated from message grafeas.v1.PackageNote
 */
export type PackageNote = Message<"grafeas.v1.PackageNote"> & {
  /**
   * The name of the package.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Deprecated.
   * The various channels by which a package is distributed.
   *
   * @generated from field: repeated grafeas.v1.Distribution distribution = 10;
   */
  distribution: Distribution[];

  /**
   * The type of package; whether native or non native (e.g., ruby gems,
   * node.js packages, etc.).
   *
   * @generated from field: string package_type = 11;
   */
  packageType: string;

  /**
   * The cpe_uri in [CPE format](https://cpe.mitre.org/specification/)
   * denoting the package manager version distributing a package.
   * The cpe_uri will be blank for language packages.
   *
   * @generated from field: string cpe_uri = 12;
   */
  cpeUri: string;

  /**
   * The CPU architecture for which packages in this distribution channel were
   * built. Architecture will be blank for language packages.
   *
   * @generated from field: grafeas.v1.Architecture architecture = 13;
   */
  architecture: Architecture;

  /**
   * The version of the package.
   *
   * @generated from field: grafeas.v1.Version version = 14;
   */
  version?: Version;

  /**
   * A freeform text denoting the maintainer of this package.
   *
   * @generated from field: string maintainer = 15;
   */
  maintainer: string;

  /**
   * The homepage for this package.
   *
   * @generated from field: string url = 16;
   */
  url: string;

  /**
   * The description of this package.
   *
   * @generated from field: string description = 17;
   */
  description: string;

  /**
   * Licenses that have been declared by the authors of the package.
   *
   * @generated from field: grafeas.v1.License license = 18;
   */
  license?: License;

  /**
   * Hash value, typically a file digest, that allows unique
   * identification a specific package.
   *
   * @generated from field: repeated grafeas.v1.Digest digest = 19;
   */
  digest: Digest[];
};

/**
 * Describes the message grafeas.v1.PackageNote.
 * Use `create(PackageNoteSchema)` to create a new message.
 */
export const PackageNoteSchema: GenMessage<PackageNote> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_package, 2);

/**
 * Details on how a particular software package was installed on a system.
 *
 * @generated from message grafeas.v1.PackageOccurrence
 */
export type PackageOccurrence = Message<"grafeas.v1.PackageOccurrence"> & {
  /**
   * The name of the installed package.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * All of the places within the filesystem versions of this package
   * have been found.
   *
   * @generated from field: repeated grafeas.v1.Location location = 2;
   */
  location: Location[];

  /**
   * The type of package; whether native or non native (e.g., ruby gems,
   * node.js packages, etc.).
   *
   * @generated from field: string package_type = 3;
   */
  packageType: string;

  /**
   * The cpe_uri in [CPE format](https://cpe.mitre.org/specification/)
   * denoting the package manager version distributing a package.
   * The cpe_uri will be blank for language packages.
   *
   * @generated from field: string cpe_uri = 4;
   */
  cpeUri: string;

  /**
   * The CPU architecture for which packages in this distribution channel were
   * built. Architecture will be blank for language packages.
   *
   * @generated from field: grafeas.v1.Architecture architecture = 5;
   */
  architecture: Architecture;

  /**
   * Licenses that have been declared by the authors of the package.
   *
   * @generated from field: grafeas.v1.License license = 6;
   */
  license?: License;

  /**
   * The version of the package.
   *
   * @generated from field: grafeas.v1.Version version = 7;
   */
  version?: Version;
};

/**
 * Describes the message grafeas.v1.PackageOccurrence.
 * Use `create(PackageOccurrenceSchema)` to create a new message.
 */
export const PackageOccurrenceSchema: GenMessage<PackageOccurrence> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_package, 3);

/**
 * Version contains structured information about the version of a package.
 *
 * @generated from message grafeas.v1.Version
 */
export type Version = Message<"grafeas.v1.Version"> & {
  /**
   * Used to correct mistakes in the version numbering scheme.
   *
   * @generated from field: int32 epoch = 1;
   */
  epoch: number;

  /**
   * Required only when version kind is NORMAL. The main part of the version
   * name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The iteration of the package build from the above version.
   *
   * @generated from field: string revision = 3;
   */
  revision: string;

  /**
   * Whether this version is specifying part of an inclusive range. Grafeas
   * does not have the capability to specify version ranges; instead we have
   * fields that specify start version and end versions. At times this is
   * insufficient - we also need to specify whether the version is included in
   * the range or is excluded from the range. This boolean is expected to be set
   * to true when the version is included in a range.
   *
   * @generated from field: bool inclusive = 6;
   */
  inclusive: boolean;

  /**
   * Required. Distinguishes between sentinel MIN/MAX versions and normal
   * versions.
   *
   * @generated from field: grafeas.v1.Version.VersionKind kind = 4;
   */
  kind: Version_VersionKind;

  /**
   * Human readable version string. This string is of the form
   * <epoch>:<name>-<revision> and is only set when kind is NORMAL.
   *
   * @generated from field: string full_name = 5;
   */
  fullName: string;
};

/**
 * Describes the message grafeas.v1.Version.
 * Use `create(VersionSchema)` to create a new message.
 */
export const VersionSchema: GenMessage<Version> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_package, 4);

/**
 * Whether this is an ordinary package version or a sentinel MIN/MAX version.
 *
 * @generated from enum grafeas.v1.Version.VersionKind
 */
export enum Version_VersionKind {
  /**
   * Unknown.
   *
   * @generated from enum value: VERSION_KIND_UNSPECIFIED = 0;
   */
  VERSION_KIND_UNSPECIFIED = 0,

  /**
   * A standard package version.
   *
   * @generated from enum value: NORMAL = 1;
   */
  NORMAL = 1,

  /**
   * A special version representing negative infinity.
   *
   * @generated from enum value: MINIMUM = 2;
   */
  MINIMUM = 2,

  /**
   * A special version representing positive infinity.
   *
   * @generated from enum value: MAXIMUM = 3;
   */
  MAXIMUM = 3,
}

/**
 * Describes the enum grafeas.v1.Version.VersionKind.
 */
export const Version_VersionKindSchema: GenEnum<Version_VersionKind> = /*@__PURE__*/
  enumDesc(file_grafeas_v1_package, 4, 0);

/**
 * Instruction set architectures supported by various package managers.
 *
 * @generated from enum grafeas.v1.Architecture
 */
export enum Architecture {
  /**
   * Unknown architecture.
   *
   * @generated from enum value: ARCHITECTURE_UNSPECIFIED = 0;
   */
  ARCHITECTURE_UNSPECIFIED = 0,

  /**
   * X86 architecture.
   *
   * @generated from enum value: X86 = 1;
   */
  X86 = 1,

  /**
   * X64 architecture.
   *
   * @generated from enum value: X64 = 2;
   */
  X64 = 2,
}

/**
 * Describes the enum grafeas.v1.Architecture.
 */
export const ArchitectureSchema: GenEnum<Architecture> = /*@__PURE__*/
  enumDesc(file_grafeas_v1_package, 0);

