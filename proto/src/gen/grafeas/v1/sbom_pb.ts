// Copyright 2023 The Grafeas Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file grafeas/v1/sbom.proto (package grafeas.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { EnvelopeSignature } from "./common_pb";
import { file_grafeas_v1_common } from "./common_pb";
import type { Subject } from "./intoto_statement_pb";
import { file_grafeas_v1_intoto_statement } from "./intoto_statement_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file grafeas/v1/sbom.proto.
 */
export const file_grafeas_v1_sbom: GenFile = /*@__PURE__*/
  fileDesc("ChVncmFmZWFzL3YxL3Nib20ucHJvdG8SCmdyYWZlYXMudjEiNAoRU0JPTVJlZmVyZW5jZU5vdGUSDgoGZm9ybWF0GAEgASgJEg8KB3ZlcnNpb24YAiABKAkimwEKF1NCT01SZWZlcmVuY2VPY2N1cnJlbmNlEjcKB3BheWxvYWQYASABKAsyJi5ncmFmZWFzLnYxLlNib21SZWZlcmVuY2VJbnRvdG9QYXlsb2FkEhQKDHBheWxvYWRfdHlwZRgCIAEoCRIxCgpzaWduYXR1cmVzGAMgAygLMh0uZ3JhZmVhcy52MS5FbnZlbG9wZVNpZ25hdHVyZSKsAQoaU2JvbVJlZmVyZW5jZUludG90b1BheWxvYWQSEwoEdHlwZRgBIAEoCVIFX3R5cGUSFgoOcHJlZGljYXRlX3R5cGUYAiABKAkSJAoHc3ViamVjdBgDIAMoCzITLmdyYWZlYXMudjEuU3ViamVjdBI7CglwcmVkaWNhdGUYBCABKAsyKC5ncmFmZWFzLnYxLlNib21SZWZlcmVuY2VJbnRvdG9QcmVkaWNhdGUizQEKHFNib21SZWZlcmVuY2VJbnRvdG9QcmVkaWNhdGUSEwoLcmVmZXJyZXJfaWQYASABKAkSEAoIbG9jYXRpb24YAiABKAkSEQoJbWltZV90eXBlGAMgASgJEkQKBmRpZ2VzdBgEIAMoCzI0LmdyYWZlYXMudjEuU2JvbVJlZmVyZW5jZUludG90b1ByZWRpY2F0ZS5EaWdlc3RFbnRyeRotCgtEaWdlc3RFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBQlEKDWlvLmdyYWZlYXMudjFQAVo4Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9ncmFmZWFzL3YxO2dyYWZlYXOiAgNHUkFiBnByb3RvMw", [file_grafeas_v1_common, file_grafeas_v1_intoto_statement]);

/**
 * The note representing an SBOM reference.
 *
 * @generated from message grafeas.v1.SBOMReferenceNote
 */
export type SBOMReferenceNote = Message<"grafeas.v1.SBOMReferenceNote"> & {
  /**
   * The format that SBOM takes. E.g. may be spdx, cyclonedx, etc...
   *
   * @generated from field: string format = 1;
   */
  format: string;

  /**
   * The version of the format that the SBOM takes. E.g. if the format
   * is spdx, the version may be 2.3.
   *
   * @generated from field: string version = 2;
   */
  version: string;
};

/**
 * Describes the message grafeas.v1.SBOMReferenceNote.
 * Use `create(SBOMReferenceNoteSchema)` to create a new message.
 */
export const SBOMReferenceNoteSchema: GenMessage<SBOMReferenceNote> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_sbom, 0);

/**
 * The occurrence representing an SBOM reference as applied to a specific
 * resource. The occurrence follows the DSSE specification. See
 * https://github.com/secure-systems-lab/dsse/blob/master/envelope.md for more
 * details.
 *
 * @generated from message grafeas.v1.SBOMReferenceOccurrence
 */
export type SBOMReferenceOccurrence = Message<"grafeas.v1.SBOMReferenceOccurrence"> & {
  /**
   * The actual payload that contains the SBOM reference data.
   *
   * @generated from field: grafeas.v1.SbomReferenceIntotoPayload payload = 1;
   */
  payload?: SbomReferenceIntotoPayload;

  /**
   * The kind of payload that SbomReferenceIntotoPayload takes. Since it's in
   * the intoto format, this value is expected to be
   * 'application/vnd.in-toto+json'.
   *
   * @generated from field: string payload_type = 2;
   */
  payloadType: string;

  /**
   * The signatures over the payload.
   *
   * @generated from field: repeated grafeas.v1.EnvelopeSignature signatures = 3;
   */
  signatures: EnvelopeSignature[];
};

/**
 * Describes the message grafeas.v1.SBOMReferenceOccurrence.
 * Use `create(SBOMReferenceOccurrenceSchema)` to create a new message.
 */
export const SBOMReferenceOccurrenceSchema: GenMessage<SBOMReferenceOccurrence> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_sbom, 1);

/**
 * The actual payload that contains the SBOM Reference data.
 * The payload follows the intoto statement specification. See
 * https://github.com/in-toto/attestation/blob/main/spec/v1.0/statement.md
 * for more details.
 *
 * @generated from message grafeas.v1.SbomReferenceIntotoPayload
 */
export type SbomReferenceIntotoPayload = Message<"grafeas.v1.SbomReferenceIntotoPayload"> & {
  /**
   * Identifier for the schema of the Statement.
   *
   * @generated from field: string type = 1 [json_name = "_type"];
   */
  type: string;

  /**
   * URI identifying the type of the Predicate.
   *
   * @generated from field: string predicate_type = 2;
   */
  predicateType: string;

  /**
   * Set of software artifacts that the attestation applies to. Each element
   * represents a single software artifact.
   *
   * @generated from field: repeated grafeas.v1.Subject subject = 3;
   */
  subject: Subject[];

  /**
   * Additional parameters of the Predicate. Includes the actual data about the
   * SBOM.
   *
   * @generated from field: grafeas.v1.SbomReferenceIntotoPredicate predicate = 4;
   */
  predicate?: SbomReferenceIntotoPredicate;
};

/**
 * Describes the message grafeas.v1.SbomReferenceIntotoPayload.
 * Use `create(SbomReferenceIntotoPayloadSchema)` to create a new message.
 */
export const SbomReferenceIntotoPayloadSchema: GenMessage<SbomReferenceIntotoPayload> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_sbom, 2);

/**
 * A predicate which describes the SBOM being referenced.
 *
 * @generated from message grafeas.v1.SbomReferenceIntotoPredicate
 */
export type SbomReferenceIntotoPredicate = Message<"grafeas.v1.SbomReferenceIntotoPredicate"> & {
  /**
   * The person or system referring this predicate to the consumer.
   *
   * @generated from field: string referrer_id = 1;
   */
  referrerId: string;

  /**
   * The location of the SBOM.
   *
   * @generated from field: string location = 2;
   */
  location: string;

  /**
   * The mime type of the SBOM.
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;

  /**
   * A map of algorithm to digest of the contents of the SBOM.
   *
   * @generated from field: map<string, string> digest = 4;
   */
  digest: { [key: string]: string };
};

/**
 * Describes the message grafeas.v1.SbomReferenceIntotoPredicate.
 * Use `create(SbomReferenceIntotoPredicateSchema)` to create a new message.
 */
export const SbomReferenceIntotoPredicateSchema: GenMessage<SbomReferenceIntotoPredicate> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_sbom, 3);

