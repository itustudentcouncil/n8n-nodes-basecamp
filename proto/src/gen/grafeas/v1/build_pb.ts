// Copyright 2019 The Grafeas Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file grafeas/v1/build.proto (package grafeas.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { InTotoProvenance } from "./intoto_provenance_pb";
import { file_grafeas_v1_intoto_provenance } from "./intoto_provenance_pb";
import type { InTotoSlsaProvenanceV1, InTotoStatement } from "./intoto_statement_pb";
import { file_grafeas_v1_intoto_statement } from "./intoto_statement_pb";
import type { BuildProvenance } from "./provenance_pb";
import { file_grafeas_v1_provenance } from "./provenance_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file grafeas/v1/build.proto.
 */
export const file_grafeas_v1_build: GenFile = /*@__PURE__*/
  fileDesc("ChZncmFmZWFzL3YxL2J1aWxkLnByb3RvEgpncmFmZWFzLnYxIiQKCUJ1aWxkTm90ZRIXCg9idWlsZGVyX3ZlcnNpb24YASABKAkilAIKD0J1aWxkT2NjdXJyZW5jZRIvCgpwcm92ZW5hbmNlGAEgASgLMhsuZ3JhZmVhcy52MS5CdWlsZFByb3ZlbmFuY2USGAoQcHJvdmVuYW5jZV9ieXRlcxgCIAEoCRI3ChFpbnRvdG9fcHJvdmVuYW5jZRgDIAEoCzIcLmdyYWZlYXMudjEuSW5Ub3RvUHJvdmVuYW5jZRI1ChBpbnRvdG9fc3RhdGVtZW50GAQgASgLMhsuZ3JhZmVhcy52MS5JblRvdG9TdGF0ZW1lbnQSRgoaaW5fdG90b19zbHNhX3Byb3ZlbmFuY2VfdjEYBSABKAsyIi5ncmFmZWFzLnYxLkluVG90b1Nsc2FQcm92ZW5hbmNlVjFCUQoNaW8uZ3JhZmVhcy52MVABWjhnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2dyYWZlYXMvdjE7Z3JhZmVhc6ICA0dSQWIGcHJvdG8z", [file_grafeas_v1_intoto_provenance, file_grafeas_v1_intoto_statement, file_grafeas_v1_provenance]);

/**
 * Note holding the version of the provider's builder and the signature of the
 * provenance message in the build details occurrence.
 *
 * @generated from message grafeas.v1.BuildNote
 */
export type BuildNote = Message<"grafeas.v1.BuildNote"> & {
  /**
   * Required. Immutable. Version of the builder which produced this build.
   *
   * @generated from field: string builder_version = 1;
   */
  builderVersion: string;
};

/**
 * Describes the message grafeas.v1.BuildNote.
 * Use `create(BuildNoteSchema)` to create a new message.
 */
export const BuildNoteSchema: GenMessage<BuildNote> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_build, 0);

/**
 * Details of a build occurrence.
 *
 * @generated from message grafeas.v1.BuildOccurrence
 */
export type BuildOccurrence = Message<"grafeas.v1.BuildOccurrence"> & {
  /**
   * The actual provenance for the build.
   *
   * @generated from field: grafeas.v1.BuildProvenance provenance = 1;
   */
  provenance?: BuildProvenance;

  /**
   * Serialized JSON representation of the provenance, used in generating the
   * build signature in the corresponding build note. After verifying the
   * signature, `provenance_bytes` can be unmarshalled and compared to the
   * provenance to confirm that it is unchanged. A base64-encoded string
   * representation of the provenance bytes is used for the signature in order
   * to interoperate with openssl which expects this format for signature
   * verification.
   *
   * The serialized form is captured both to avoid ambiguity in how the
   * provenance is marshalled to json as well to prevent incompatibilities with
   * future changes.
   *
   * @generated from field: string provenance_bytes = 2;
   */
  provenanceBytes: string;

  /**
   * Deprecated. See InTotoStatement for the replacement.
   * In-toto Provenance representation as defined in spec.
   *
   * @generated from field: grafeas.v1.InTotoProvenance intoto_provenance = 3;
   */
  intotoProvenance?: InTotoProvenance;

  /**
   * In-toto Statement representation as defined in spec.
   * The intoto_statement can contain any type of provenance. The serialized
   * payload of the statement can be stored and signed in the Occurrence's
   * envelope.
   *
   * @generated from field: grafeas.v1.InTotoStatement intoto_statement = 4;
   */
  intotoStatement?: InTotoStatement;

  /**
   * In-Toto Slsa Provenance V1 represents a slsa provenance meeting the slsa
   * spec, wrapped in an in-toto statement. This allows for direct
   * jsonification of a to-spec in-toto slsa statement with a to-spec
   * slsa provenance.
   *
   * @generated from field: grafeas.v1.InTotoSlsaProvenanceV1 in_toto_slsa_provenance_v1 = 5;
   */
  inTotoSlsaProvenanceV1?: InTotoSlsaProvenanceV1;
};

/**
 * Describes the message grafeas.v1.BuildOccurrence.
 * Use `create(BuildOccurrenceSchema)` to create a new message.
 */
export const BuildOccurrenceSchema: GenMessage<BuildOccurrence> = /*@__PURE__*/
  messageDesc(file_grafeas_v1_build, 1);

