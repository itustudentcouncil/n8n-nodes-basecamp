// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/aerialview/v1/aerial_view.proto (package google.maps.aerialview.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Date } from "../../../type/date_pb";
import { file_google_type_date } from "../../../type/date_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/aerialview/v1/aerial_view.proto.
 */
export const file_google_maps_aerialview_v1_aerial_view: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvbWFwcy9hZXJpYWx2aWV3L3YxL2FlcmlhbF92aWV3LnByb3RvEhlnb29nbGUubWFwcy5hZXJpYWx2aWV3LnYxIsoCCgVWaWRlbxI4CgR1cmlzGAEgAygLMiouZ29vZ2xlLm1hcHMuYWVyaWFsdmlldy52MS5WaWRlby5VcmlzRW50cnkSNQoFc3RhdGUYAiABKA4yJi5nb29nbGUubWFwcy5hZXJpYWx2aWV3LnYxLlZpZGVvLlN0YXRlEjoKCG1ldGFkYXRhGAMgASgLMiguZ29vZ2xlLm1hcHMuYWVyaWFsdmlldy52MS5WaWRlb01ldGFkYXRhGkwKCVVyaXNFbnRyeRILCgNrZXkYASABKAkSLgoFdmFsdWUYAiABKAsyHy5nb29nbGUubWFwcy5hZXJpYWx2aWV3LnYxLlVyaXM6AjgBIkYKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASDgoKUFJPQ0VTU0lORxABEgoKBkFDVElWRRACEgoKBkZBSUxFRBADIjMKBFVyaXMSFQoNbGFuZHNjYXBlX3VyaRgBIAEoCRIUCgxwb3J0cmFpdF91cmkYAiABKAkidwoNVmlkZW9NZXRhZGF0YRIQCgh2aWRlb19pZBgBIAEoCRInCgxjYXB0dXJlX2RhdGUYAiABKAsyES5nb29nbGUudHlwZS5EYXRlEisKCGR1cmF0aW9uGAMgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uIioKElJlbmRlclZpZGVvUmVxdWVzdBIUCgdhZGRyZXNzGAEgASgJQgPgQQIiiAEKE1JlbmRlclZpZGVvUmVzcG9uc2USNQoFc3RhdGUYASABKA4yJi5nb29nbGUubWFwcy5hZXJpYWx2aWV3LnYxLlZpZGVvLlN0YXRlEjoKCG1ldGFkYXRhGAIgASgLMiguZ29vZ2xlLm1hcHMuYWVyaWFsdmlldy52MS5WaWRlb01ldGFkYXRhIkIKEkxvb2t1cFZpZGVvUmVxdWVzdBISCgh2aWRlb19pZBgBIAEoCUgAEhEKB2FkZHJlc3MYAiABKAlIAEIFCgNrZXky9wIKCkFlcmlhbFZpZXcSmQEKC1JlbmRlclZpZGVvEi0uZ29vZ2xlLm1hcHMuYWVyaWFsdmlldy52MS5SZW5kZXJWaWRlb1JlcXVlc3QaLi5nb29nbGUubWFwcy5hZXJpYWx2aWV3LnYxLlJlbmRlclZpZGVvUmVzcG9uc2UiK9pBB2FkZHJlc3OC0+STAhs6ASoiFi92MS92aWRlb3M6cmVuZGVyVmlkZW8SfgoLTG9va3VwVmlkZW8SLS5nb29nbGUubWFwcy5hZXJpYWx2aWV3LnYxLkxvb2t1cFZpZGVvUmVxdWVzdBogLmdvb2dsZS5tYXBzLmFlcmlhbHZpZXcudjEuVmlkZW8iHoLT5JMCGBIWL3YxL3ZpZGVvczpsb29rdXBWaWRlbxpNykEZYWVyaWFsdmlldy5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1C2AEKHWNvbS5nb29nbGUubWFwcy5hZXJpYWx2aWV3LnYxQg9BZXJpYWxWaWV3UHJvdG9QAVpDY2xvdWQuZ29vZ2xlLmNvbS9nby9tYXBzL2FlcmlhbHZpZXcvYXBpdjEvYWVyaWFsdmlld3BiO2FlcmlhbHZpZXdwYqICB0dHTVBWMUKqAhlHb29nbGUuTWFwcy5BZXJpYWxWaWV3LlYxygIZR29vZ2xlXE1hcHNcQWVyaWFsVmlld1xWMeoCHEdvb2dsZTo6TWFwczo6QWVyaWFsVmlldzo6VjFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_protobuf_duration, file_google_type_date]);

/**
 * An object that encapsulates all of the data about a video.
 *
 * @generated from message google.maps.aerialview.v1.Video
 */
export type Video = Message<"google.maps.aerialview.v1.Video"> & {
  /**
   * A mapping of media types to their URIs.
   * This field is only included for `ACTIVE` videos.
   * The key is an enum value from `MediaFormat`.
   *
   * @generated from field: map<string, google.maps.aerialview.v1.Uris> uris = 1;
   */
  uris: { [key: string]: Uris };

  /**
   * Current state of the render request.
   *
   * @generated from field: google.maps.aerialview.v1.Video.State state = 2;
   */
  state: Video_State;

  /**
   * Contains the video's metadata, only set if the state is `ACTIVE`.
   *
   * @generated from field: google.maps.aerialview.v1.VideoMetadata metadata = 3;
   */
  metadata?: VideoMetadata;
};

/**
 * Describes the message google.maps.aerialview.v1.Video.
 * Use `create(VideoSchema)` to create a new message.
 */
export const VideoSchema: GenMessage<Video> = /*@__PURE__*/
  messageDesc(file_google_maps_aerialview_v1_aerial_view, 0);

/**
 * The different states a video can be in.
 *
 * @generated from enum google.maps.aerialview.v1.Video.State
 */
export enum Video_State {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The video is currently processing.
   *
   * @generated from enum value: PROCESSING = 1;
   */
  PROCESSING = 1,

  /**
   * The video has finished rendering, and can be viewed through
   * `LookupVideo`.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The video has failed to render.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}

/**
 * Describes the enum google.maps.aerialview.v1.Video.State.
 */
export const Video_StateSchema: GenEnum<Video_State> = /*@__PURE__*/
  enumDesc(file_google_maps_aerialview_v1_aerial_view, 0, 0);

/**
 * Contains all the uris for a given video format.
 *
 * @generated from message google.maps.aerialview.v1.Uris
 */
export type Uris = Message<"google.maps.aerialview.v1.Uris"> & {
  /**
   * A signed short-lived URI for the media in a landscape orientation.
   *
   * @generated from field: string landscape_uri = 1;
   */
  landscapeUri: string;

  /**
   * A signed short-lived URI for the media in a portrait orientation.
   *
   * @generated from field: string portrait_uri = 2;
   */
  portraitUri: string;
};

/**
 * Describes the message google.maps.aerialview.v1.Uris.
 * Use `create(UrisSchema)` to create a new message.
 */
export const UrisSchema: GenMessage<Uris> = /*@__PURE__*/
  messageDesc(file_google_maps_aerialview_v1_aerial_view, 1);

/**
 * Contains metadata about a video, such as its videoId and duration.
 *
 * @generated from message google.maps.aerialview.v1.VideoMetadata
 */
export type VideoMetadata = Message<"google.maps.aerialview.v1.VideoMetadata"> & {
  /**
   * An ID for the video, and the recommended way to retrieve a video.
   *
   * @generated from field: string video_id = 1;
   */
  videoId: string;

  /**
   * The date at which the imagery used in the video was captured.
   * This will be at a month-level granularity.
   *
   * @generated from field: google.type.Date capture_date = 2;
   */
  captureDate?: Date;

  /**
   * The length of the video.
   *
   * @generated from field: google.protobuf.Duration duration = 3;
   */
  duration?: Duration;
};

/**
 * Describes the message google.maps.aerialview.v1.VideoMetadata.
 * Use `create(VideoMetadataSchema)` to create a new message.
 */
export const VideoMetadataSchema: GenMessage<VideoMetadata> = /*@__PURE__*/
  messageDesc(file_google_maps_aerialview_v1_aerial_view, 2);

/**
 * Request message for `AerialView.RenderVideo`.
 *
 * @generated from message google.maps.aerialview.v1.RenderVideoRequest
 */
export type RenderVideoRequest = Message<"google.maps.aerialview.v1.RenderVideoRequest"> & {
  /**
   * Required. A US postal address for the location to be rendered in the video.
   *
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * Describes the message google.maps.aerialview.v1.RenderVideoRequest.
 * Use `create(RenderVideoRequestSchema)` to create a new message.
 */
export const RenderVideoRequestSchema: GenMessage<RenderVideoRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_aerialview_v1_aerial_view, 3);

/**
 * Response message for `AerialView.RenderVideo`.
 *
 * @generated from message google.maps.aerialview.v1.RenderVideoResponse
 */
export type RenderVideoResponse = Message<"google.maps.aerialview.v1.RenderVideoResponse"> & {
  /**
   * Current state of the render request.
   *
   * @generated from field: google.maps.aerialview.v1.Video.State state = 1;
   */
  state: Video_State;

  /**
   * Contains the video's metadata, only set if the state is `ACTIVE`.
   *
   * @generated from field: google.maps.aerialview.v1.VideoMetadata metadata = 2;
   */
  metadata?: VideoMetadata;
};

/**
 * Describes the message google.maps.aerialview.v1.RenderVideoResponse.
 * Use `create(RenderVideoResponseSchema)` to create a new message.
 */
export const RenderVideoResponseSchema: GenMessage<RenderVideoResponse> = /*@__PURE__*/
  messageDesc(file_google_maps_aerialview_v1_aerial_view, 4);

/**
 * Request message for `AerialView.LookupVideo`.
 *
 * @generated from message google.maps.aerialview.v1.LookupVideoRequest
 */
export type LookupVideoRequest = Message<"google.maps.aerialview.v1.LookupVideoRequest"> & {
  /**
   * Required.
   * A key used to look-up a video.
   *
   * @generated from oneof google.maps.aerialview.v1.LookupVideoRequest.key
   */
  key: {
    /**
     * An ID returned from `RenderVideo`.
     *
     * @generated from field: string video_id = 1;
     */
    value: string;
    case: "videoId";
  } | {
    /**
     * A US postal address.
     *
     * @generated from field: string address = 2;
     */
    value: string;
    case: "address";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.maps.aerialview.v1.LookupVideoRequest.
 * Use `create(LookupVideoRequestSchema)` to create a new message.
 */
export const LookupVideoRequestSchema: GenMessage<LookupVideoRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_aerialview_v1_aerial_view, 5);

/**
 * Service definition for the Aerial View API.
 *
 * @generated from service google.maps.aerialview.v1.AerialView
 */
export const AerialView: GenService<{
  /**
   * Adds an address to the renderer's queue if a video hasn't already been
   * rendered. Otherwise, returns metadata about the video.
   *
   * @generated from rpc google.maps.aerialview.v1.AerialView.RenderVideo
   */
  renderVideo: {
    methodKind: "unary";
    input: typeof RenderVideoRequestSchema;
    output: typeof RenderVideoResponseSchema;
  },
  /**
   * Fetches a video given its address or videoId. The response will either be
   * a video with a set of playback URIs for ACTIVE videos, a PROCESSING state
   * for pending videos, or a 404 error if the video does not exist. Receiving a
   * video is a billable event, so callers of this method should be ready to use
   * the returned URIs at the time of request.
   *
   * @generated from rpc google.maps.aerialview.v1.AerialView.LookupVideo
   */
  lookupVideo: {
    methodKind: "unary";
    input: typeof LookupVideoRequestSchema;
    output: typeof VideoSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_maps_aerialview_v1_aerial_view, 0);

