// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/mapsplatformdatasets/v1/maps_platform_datasets.proto (package google.maps.mapsplatformdatasets.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Dataset } from "./dataset_pb";
import { file_google_maps_mapsplatformdatasets_v1_dataset } from "./dataset_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/mapsplatformdatasets/v1/maps_platform_datasets.proto.
 */
export const file_google_maps_mapsplatformdatasets_v1_maps_platform_datasets: GenFile = /*@__PURE__*/
  fileDesc("CkBnb29nbGUvbWFwcy9tYXBzcGxhdGZvcm1kYXRhc2V0cy92MS9tYXBzX3BsYXRmb3JtX2RhdGFzZXRzLnByb3RvEiNnb29nbGUubWFwcy5tYXBzcGxhdGZvcm1kYXRhc2V0cy52MSKfAQoUQ3JlYXRlRGF0YXNldFJlcXVlc3QSQwoGcGFyZW50GAEgASgJQjPgQQL6QS0KK2Nsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1Byb2plY3QSQgoHZGF0YXNldBgCIAEoCzIsLmdvb2dsZS5tYXBzLm1hcHNwbGF0Zm9ybWRhdGFzZXRzLnYxLkRhdGFzZXRCA+BBAiKTAQocVXBkYXRlRGF0YXNldE1ldGFkYXRhUmVxdWVzdBJCCgdkYXRhc2V0GAEgASgLMiwuZ29vZ2xlLm1hcHMubWFwc3BsYXRmb3JtZGF0YXNldHMudjEuRGF0YXNldEID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJWChFHZXREYXRhc2V0UmVxdWVzdBJBCgRuYW1lGAEgASgJQjPgQQL6QS0KK21hcHNwbGF0Zm9ybWRhdGFzZXRzLmdvb2dsZWFwaXMuY29tL0RhdGFzZXQijgEKE0xpc3REYXRhc2V0c1JlcXVlc3QSQwoGcGFyZW50GAEgASgJQjPgQQL6QS0KK2Nsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1Byb2plY3QSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkSCwoDdGFnGAQgASgJIm8KFExpc3REYXRhc2V0c1Jlc3BvbnNlEj4KCGRhdGFzZXRzGAEgAygLMiwuZ29vZ2xlLm1hcHMubWFwc3BsYXRmb3JtZGF0YXNldHMudjEuRGF0YXNldBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiiAEKGUZldGNoRGF0YXNldEVycm9yc1JlcXVlc3QSRAoHZGF0YXNldBgBIAEoCUIz4EEC+kEtCittYXBzcGxhdGZvcm1kYXRhc2V0cy5nb29nbGVhcGlzLmNvbS9EYXRhc2V0EhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJIlkKGkZldGNoRGF0YXNldEVycm9yc1Jlc3BvbnNlEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRIiCgZlcnJvcnMYAyADKAsyEi5nb29nbGUucnBjLlN0YXR1cyJZChREZWxldGVEYXRhc2V0UmVxdWVzdBJBCgRuYW1lGAEgASgJQjPgQQL6QS0KK21hcHNwbGF0Zm9ybWRhdGFzZXRzLmdvb2dsZWFwaXMuY29tL0RhdGFzZXRC/AEKJ2NvbS5nb29nbGUubWFwcy5tYXBzcGxhdGZvcm1kYXRhc2V0cy52MUIZTWFwc1BsYXRmb3JtRGF0YXNldHNQcm90b1ABWmFjbG91ZC5nb29nbGUuY29tL2dvL21hcHMvbWFwc3BsYXRmb3JtZGF0YXNldHMvYXBpdjEvbWFwc3BsYXRmb3JtZGF0YXNldHNwYjttYXBzcGxhdGZvcm1kYXRhc2V0c3BiogIETURWMaoCI0dvb2dsZS5NYXBzLk1hcHNQbGF0Zm9ybURhdGFzZXRzLlYxygIjR29vZ2xlXE1hcHNcTWFwc1BsYXRmb3JtRGF0YXNldHNcVjFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_maps_mapsplatformdatasets_v1_dataset, file_google_protobuf_field_mask, file_google_rpc_status]);

/**
 * Request to create a maps dataset.
 *
 * @generated from message google.maps.mapsplatformdatasets.v1.CreateDatasetRequest
 */
export type CreateDatasetRequest = Message<"google.maps.mapsplatformdatasets.v1.CreateDatasetRequest"> & {
  /**
   * Required. Parent project that will own the dataset.
   * Format: projects/{project}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The dataset version to create.
   *
   * @generated from field: google.maps.mapsplatformdatasets.v1.Dataset dataset = 2;
   */
  dataset?: Dataset;
};

/**
 * Describes the message google.maps.mapsplatformdatasets.v1.CreateDatasetRequest.
 * Use `create(CreateDatasetRequestSchema)` to create a new message.
 */
export const CreateDatasetRequestSchema: GenMessage<CreateDatasetRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_mapsplatformdatasets_v1_maps_platform_datasets, 0);

/**
 * Request to update the metadata fields of the dataset.
 *
 * @generated from message google.maps.mapsplatformdatasets.v1.UpdateDatasetMetadataRequest
 */
export type UpdateDatasetMetadataRequest = Message<"google.maps.mapsplatformdatasets.v1.UpdateDatasetMetadataRequest"> & {
  /**
   * Required. Resource name of the dataset to update.
   * Format: projects/{project}/datasets/{dataset_id}
   *
   * @generated from field: google.maps.mapsplatformdatasets.v1.Dataset dataset = 1;
   */
  dataset?: Dataset;

  /**
   * The list of fields to be updated.
   *
   * The value "*" is used for full replacement (default).
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.maps.mapsplatformdatasets.v1.UpdateDatasetMetadataRequest.
 * Use `create(UpdateDatasetMetadataRequestSchema)` to create a new message.
 */
export const UpdateDatasetMetadataRequestSchema: GenMessage<UpdateDatasetMetadataRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_mapsplatformdatasets_v1_maps_platform_datasets, 1);

/**
 * Request to get the specified dataset.
 *
 * @generated from message google.maps.mapsplatformdatasets.v1.GetDatasetRequest
 */
export type GetDatasetRequest = Message<"google.maps.mapsplatformdatasets.v1.GetDatasetRequest"> & {
  /**
   * Required. Resource name.
   * Format: projects/{project}/datasets/{dataset_id}
   *
   *
   * Can also fetch some special versions by appending "@" and a tag.
   * Format: projects/{project}/datasets/{dataset_id}@{tag}
   *
   * Tag "active": The info of the latest completed version will be included,
   * and NOT_FOUND if the dataset does not have one.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.maps.mapsplatformdatasets.v1.GetDatasetRequest.
 * Use `create(GetDatasetRequestSchema)` to create a new message.
 */
export const GetDatasetRequestSchema: GenMessage<GetDatasetRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_mapsplatformdatasets_v1_maps_platform_datasets, 2);

/**
 * Request to list datasets for the project.
 *
 * @generated from message google.maps.mapsplatformdatasets.v1.ListDatasetsRequest
 */
export type ListDatasetsRequest = Message<"google.maps.mapsplatformdatasets.v1.ListDatasetsRequest"> & {
  /**
   * Required. The name of the project to list all the datasets for.
   * Format: projects/{project}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of datasets to return per page.
   *
   * If unspecified (or zero), all datasets will be returned.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The page token, received from a previous ListDatasets call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The tag that specifies the desired version for each dataset.
   *
   * Note that when pagination is also specified, some filtering can happen
   * after pagination, which may cause the response to contain fewer datasets
   * than the page size, even if it's not the last page.
   *
   * Tag "active": Each dataset in the response will include the info of its
   * latest completed version, and the dataset will be skipped if it does not
   * have one.
   *
   * @generated from field: string tag = 4;
   */
  tag: string;
};

/**
 * Describes the message google.maps.mapsplatformdatasets.v1.ListDatasetsRequest.
 * Use `create(ListDatasetsRequestSchema)` to create a new message.
 */
export const ListDatasetsRequestSchema: GenMessage<ListDatasetsRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_mapsplatformdatasets_v1_maps_platform_datasets, 3);

/**
 * Response object of ListDatasets.
 *
 * @generated from message google.maps.mapsplatformdatasets.v1.ListDatasetsResponse
 */
export type ListDatasetsResponse = Message<"google.maps.mapsplatformdatasets.v1.ListDatasetsResponse"> & {
  /**
   * All the datasets for the project.
   *
   * @generated from field: repeated google.maps.mapsplatformdatasets.v1.Dataset datasets = 1;
   */
  datasets: Dataset[];

  /**
   * A token that can be sent as `page_token` to retrieve the next page.
   *
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.maps.mapsplatformdatasets.v1.ListDatasetsResponse.
 * Use `create(ListDatasetsResponseSchema)` to create a new message.
 */
export const ListDatasetsResponseSchema: GenMessage<ListDatasetsResponse> = /*@__PURE__*/
  messageDesc(file_google_maps_mapsplatformdatasets_v1_maps_platform_datasets, 4);

/**
 * Request to list detailed errors belonging to a dataset.
 *
 * @generated from message google.maps.mapsplatformdatasets.v1.FetchDatasetErrorsRequest
 */
export type FetchDatasetErrorsRequest = Message<"google.maps.mapsplatformdatasets.v1.FetchDatasetErrorsRequest"> & {
  /**
   * Required. The name of the dataset to list all the errors for.
   * Format: projects/{project}/datasets/{dataset_id}
   *
   * @generated from field: string dataset = 1;
   */
  dataset: string;

  /**
   * The maximum number of errors to return per page.
   *
   * The maximum value is 500; values above 500 will be capped to 500.
   *
   * If unspecified, at most 50 errors will be returned.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The page token, received from a previous ListDatasetErrors call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.maps.mapsplatformdatasets.v1.FetchDatasetErrorsRequest.
 * Use `create(FetchDatasetErrorsRequestSchema)` to create a new message.
 */
export const FetchDatasetErrorsRequestSchema: GenMessage<FetchDatasetErrorsRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_mapsplatformdatasets_v1_maps_platform_datasets, 5);

/**
 * Response object of FetchDatasetErrors.
 *
 * @generated from message google.maps.mapsplatformdatasets.v1.FetchDatasetErrorsResponse
 */
export type FetchDatasetErrorsResponse = Message<"google.maps.mapsplatformdatasets.v1.FetchDatasetErrorsResponse"> & {
  /**
   * A token that can be sent as `page_token` to retrieve the next page.
   *
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * The errors associated with a dataset.
   *
   * @generated from field: repeated google.rpc.Status errors = 3;
   */
  errors: Status[];
};

/**
 * Describes the message google.maps.mapsplatformdatasets.v1.FetchDatasetErrorsResponse.
 * Use `create(FetchDatasetErrorsResponseSchema)` to create a new message.
 */
export const FetchDatasetErrorsResponseSchema: GenMessage<FetchDatasetErrorsResponse> = /*@__PURE__*/
  messageDesc(file_google_maps_mapsplatformdatasets_v1_maps_platform_datasets, 6);

/**
 * Request to delete a dataset.
 *
 * @generated from message google.maps.mapsplatformdatasets.v1.DeleteDatasetRequest
 */
export type DeleteDatasetRequest = Message<"google.maps.mapsplatformdatasets.v1.DeleteDatasetRequest"> & {
  /**
   * Required. The name of the dataset to delete.
   * Format: projects/{project}/datasets/{dataset_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.maps.mapsplatformdatasets.v1.DeleteDatasetRequest.
 * Use `create(DeleteDatasetRequestSchema)` to create a new message.
 */
export const DeleteDatasetRequestSchema: GenMessage<DeleteDatasetRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_mapsplatformdatasets_v1_maps_platform_datasets, 7);

