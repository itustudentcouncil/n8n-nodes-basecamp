// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/regionlookup/v1alpha/region_identifier.proto (package google.maps.regionlookup.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/regionlookup/v1alpha/region_identifier.proto.
 */
export const file_google_maps_regionlookup_v1alpha_region_identifier: GenFile = /*@__PURE__*/
  fileDesc("Cjhnb29nbGUvbWFwcy9yZWdpb25sb29rdXAvdjFhbHBoYS9yZWdpb25faWRlbnRpZmllci5wcm90bxIgZ29vZ2xlLm1hcHMucmVnaW9ubG9va3VwLnYxYWxwaGEi2QMKEFJlZ2lvbklkZW50aWZpZXISDwoFcGxhY2UYBCABKAlIABITCgl1bml0X2NvZGUYBSABKAlIABJVCgpwbGFjZV90eXBlGAYgASgOMjwuZ29vZ2xlLm1hcHMucmVnaW9ubG9va3VwLnYxYWxwaGEuUmVnaW9uSWRlbnRpZmllci5QbGFjZVR5cGVCA+BBAhIVCg1sYW5ndWFnZV9jb2RlGAcgASgJEhMKC3JlZ2lvbl9jb2RlGAggASgJIo8CCglQbGFjZVR5cGUSGgoWUExBQ0VfVFlQRV9VTlNQRUNJRklFRBAAEg8KC1BPU1RBTF9DT0RFEAESHwobQURNSU5JU1RSQVRJVkVfQVJFQV9MRVZFTF8xEAISHwobQURNSU5JU1RSQVRJVkVfQVJFQV9MRVZFTF8yEAMSDAoITE9DQUxJVFkQBBIQCgxORUlHSEJPUkhPT0QQBRILCgdDT1VOVFJZEAYSDwoLU1VCTE9DQUxJVFkQBxIfChtBRE1JTklTVFJBVElWRV9BUkVBX0xFVkVMXzMQCBIfChtBRE1JTklTVFJBVElWRV9BUkVBX0xFVkVMXzQQCRITCg9TQ0hPT0xfRElTVFJJQ1QQCkIKCghsb2NhdGlvbkLhAQokY29tLmdvb2dsZS5tYXBzLnJlZ2lvbmxvb2t1cC52MWFscGhhQhVSZWdpb25JZGVudGlmaWVyUHJvdG9QAVpOY2xvdWQuZ29vZ2xlLmNvbS9nby9tYXBzL3JlZ2lvbmxvb2t1cC9hcGl2MWFscGhhL3JlZ2lvbmxvb2t1cHBiO3JlZ2lvbmxvb2t1cHBi+AEBogIGTVJMVjFBqgIgR29vZ2xlLk1hcHMuUmVnaW9uTG9va3VwLlYxQWxwaGHKAiBHb29nbGVcTWFwc1xSZWdpb25Mb29rdXBcVjFhbHBoYWIGcHJvdG8z", [file_google_api_field_behavior]);

/**
 * Region Identifier.
 *
 * Identifies a region to look up.
 *
 * One of place or unit_code must be specified. If none is specified,
 * an INVALID_ARGUMENT error is returned. region_code must also be specified
 * except when place_type is "country".
 *
 * place and unit_code specify a location to match a Place ID to. For
 * example if place is "California" and region_code "US" the API
 * returns the following matched_place_id results when the following
 * place_types are specified:
 *
 * place_type:                   matched_place_id results:
 * administrative_area_level_1   Place ID for The State of California
 * (All other supported types)   No Match
 *
 * If unit_code is "6" (FIPs code for California) and region_code is "US
 * the API returns the following matched_place_id results when the
 * following place_types are specified:
 *
 * place type:                   matched_place_id results:
 * administrative_area_level_1   Place ID for The State of California
 * (All other supported types)   No Match
 *
 * or if unit_code is "US" the API returns the following results when
 * the following place_types are specified:
 *
 * place type:                   matched_place_id results:
 * country                       Place ID for the United States
 * (All other supported types)   No Match
 *
 * If no match is found, matched_place_id is not set.
 *
 * Candidate Place IDs are returned when a lookup finds a region with a
 * different place_type then the one requested. For example if place is
 * "California" and place_type is "country" the Place ID for The State of
 * California is returned as a candidate in the candidate_place_ids field.
 *
 * Next available tag: 10
 *
 * @generated from message google.maps.regionlookup.v1alpha.RegionIdentifier
 */
export type RegionIdentifier = Message<"google.maps.regionlookup.v1alpha.RegionIdentifier"> & {
  /**
   * The location must be specified by one of the following:
   *
   * @generated from oneof google.maps.regionlookup.v1alpha.RegionIdentifier.location
   */
  location: {
    /**
     * The name of the region to match to a Place ID.
     *
     * The place field is used in combination with place_type to look up
     * the region Place ID.
     *
     * For example:
     * If place_type is "locality", a valid place can be "Palo Alto, CA".
     *
     * If place_type is "postal_code", a valid place can be "94109".
     *
     * If place_type is "country", a valid place can be "United States".
     * etc.
     *
     * region_code is required when place is specified except when
     * place_type is "country".
     *
     * @generated from field: string place = 4;
     */
    value: string;
    case: "place";
  } | {
    /**
     * The FIPs state or county codes (US only) or ISO-3166-1 country code to be
     * matched.
     *
     * The unit_code field is used in combination with place_type to look up
     * the region Place ID.
     *
     * For example:
     * If place_type is "country", a valid unit_code can be "US" (ISO-3166-1
     * Alpha-2 code for United States) or "BR" (ISO-3166-1 Alpha-2 code for
     * Brazil).
     *
     * If place_type is "administrative_area_level_1" (state) and region_code is
     * "US", a valid unit_code can be "6" (FIPs code for California) or
     * "12"(FIPs code for Florida).
     *
     * If place_type is "administrative_area_level_2" (county) and region_code
     * is "US", a valid unit_code can be "6001" (FIPs code for Alameda County in
     * California) or "12086" (FIPs code for Miami-Dade County in Florida).
     *
     * region_code is required when specifying a FIPs code. region_code is
     * ignored for ISO-3166-1 country codes.
     *
     * @generated from field: string unit_code = 5;
     */
    value: string;
    case: "unitCode";
  } | { case: undefined; value?: undefined };

  /**
   * Required. Place type to match.
   *
   * @generated from field: google.maps.regionlookup.v1alpha.RegionIdentifier.PlaceType place_type = 6;
   */
  placeType: RegionIdentifier_PlaceType;

  /**
   * The BCP-47 language code, such as "en-US" or "sr-Latn", corresponding to
   * the language in which the place name and address is requested. If none is
   * requested, then it defaults to English.
   *
   * @generated from field: string language_code = 7;
   */
  languageCode: string;

  /**
   * Two-letter ISO-3166 country/region code for the location you're trying to
   * match. region_code is optional if place_type is "country".
   *
   * @generated from field: string region_code = 8;
   */
  regionCode: string;
};

/**
 * Describes the message google.maps.regionlookup.v1alpha.RegionIdentifier.
 * Use `create(RegionIdentifierSchema)` to create a new message.
 */
export const RegionIdentifierSchema: GenMessage<RegionIdentifier> = /*@__PURE__*/
  messageDesc(file_google_maps_regionlookup_v1alpha_region_identifier, 0);

/**
 * Possible place types to match to.
 *
 * @generated from enum google.maps.regionlookup.v1alpha.RegionIdentifier.PlaceType
 */
export enum RegionIdentifier_PlaceType {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: PLACE_TYPE_UNSPECIFIED = 0;
   */
  PLACE_TYPE_UNSPECIFIED = 0,

  /**
   * Postal code.
   *
   * @generated from enum value: POSTAL_CODE = 1;
   */
  POSTAL_CODE = 1,

  /**
   * Administrative area level 1 (State in the US).
   *
   * @generated from enum value: ADMINISTRATIVE_AREA_LEVEL_1 = 2;
   */
  ADMINISTRATIVE_AREA_LEVEL_1 = 2,

  /**
   * Administrative area level 2 (County in the US).
   *
   * @generated from enum value: ADMINISTRATIVE_AREA_LEVEL_2 = 3;
   */
  ADMINISTRATIVE_AREA_LEVEL_2 = 3,

  /**
   * Locality (City).
   *
   * @generated from enum value: LOCALITY = 4;
   */
  LOCALITY = 4,

  /**
   * Neighborhood.
   *
   * @generated from enum value: NEIGHBORHOOD = 5;
   */
  NEIGHBORHOOD = 5,

  /**
   * Country.
   *
   * @generated from enum value: COUNTRY = 6;
   */
  COUNTRY = 6,

  /**
   * Sublocality.
   *
   * @generated from enum value: SUBLOCALITY = 7;
   */
  SUBLOCALITY = 7,

  /**
   * Administrative area level 3.
   *
   * @generated from enum value: ADMINISTRATIVE_AREA_LEVEL_3 = 8;
   */
  ADMINISTRATIVE_AREA_LEVEL_3 = 8,

  /**
   * Administrative area level 4.
   *
   * @generated from enum value: ADMINISTRATIVE_AREA_LEVEL_4 = 9;
   */
  ADMINISTRATIVE_AREA_LEVEL_4 = 9,

  /**
   * School district.
   *
   * @generated from enum value: SCHOOL_DISTRICT = 10;
   */
  SCHOOL_DISTRICT = 10,
}

/**
 * Describes the enum google.maps.regionlookup.v1alpha.RegionIdentifier.PlaceType.
 */
export const RegionIdentifier_PlaceTypeSchema: GenEnum<RegionIdentifier_PlaceType> = /*@__PURE__*/
  enumDesc(file_google_maps_regionlookup_v1alpha_region_identifier, 0, 0);

