// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/routes/v1/compute_custom_routes_response.proto (package google.maps.routes.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { CustomRoute } from "./custom_route_pb";
import { file_google_maps_routes_v1_custom_route } from "./custom_route_pb";
import type { FallbackReason, FallbackRoutingMode } from "./fallback_info_pb";
import { file_google_maps_routes_v1_fallback_info } from "./fallback_info_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/routes/v1/compute_custom_routes_response.proto.
 */
export const file_google_maps_routes_v1_compute_custom_routes_response: GenFile = /*@__PURE__*/
  fileDesc("Cjpnb29nbGUvbWFwcy9yb3V0ZXMvdjEvY29tcHV0ZV9jdXN0b21fcm91dGVzX3Jlc3BvbnNlLnByb3RvEhVnb29nbGUubWFwcy5yb3V0ZXMudjEimwUKG0NvbXB1dGVDdXN0b21Sb3V0ZXNSZXNwb25zZRIyCgZyb3V0ZXMYByADKAsyIi5nb29nbGUubWFwcy5yb3V0ZXMudjEuQ3VzdG9tUm91dGUSOQoNZmFzdGVzdF9yb3V0ZRgFIAEoCzIiLmdvb2dsZS5tYXBzLnJvdXRlcy52MS5DdXN0b21Sb3V0ZRI6Cg5zaG9ydGVzdF9yb3V0ZRgGIAEoCzIiLmdvb2dsZS5tYXBzLnJvdXRlcy52MS5DdXN0b21Sb3V0ZRJWCg1mYWxsYmFja19pbmZvGAggASgLMj8uZ29vZ2xlLm1hcHMucm91dGVzLnYxLkNvbXB1dGVDdXN0b21Sb3V0ZXNSZXNwb25zZS5GYWxsYmFja0luZm8a+AIKDEZhbGxiYWNrSW5mbxJACgxyb3V0aW5nX21vZGUYASABKA4yKi5nb29nbGUubWFwcy5yb3V0ZXMudjEuRmFsbGJhY2tSb3V0aW5nTW9kZRJCChNyb3V0aW5nX21vZGVfcmVhc29uGAIgASgOMiUuZ29vZ2xlLm1hcHMucm91dGVzLnYxLkZhbGxiYWNrUmVhc29uEm8KD3JvdXRlX29iamVjdGl2ZRgDIAEoDjJWLmdvb2dsZS5tYXBzLnJvdXRlcy52MS5Db21wdXRlQ3VzdG9tUm91dGVzUmVzcG9uc2UuRmFsbGJhY2tJbmZvLkZhbGxiYWNrUm91dGVPYmplY3RpdmUicQoWRmFsbGJhY2tSb3V0ZU9iamVjdGl2ZRIoCiRGQUxMQkFDS19ST1VURV9PQkpFQ1RJVkVfVU5TUEVDSUZJRUQQABItCilGQUxMQkFDS19SQVRFQ0FSRF9XSVRIT1VUX1RPTExfUFJJQ0VfREFUQRABQrIBChljb20uZ29vZ2xlLm1hcHMucm91dGVzLnYxQiBDb21wdXRlQ3VzdG9tUm91dGVzUmVzcG9uc2VQcm90b1ABWjdjbG91ZC5nb29nbGUuY29tL2dvL21hcHMvcm91dGVzL2FwaXYxL3JvdXRlc3BiO3JvdXRlc3Bi+AEBogIER01SU6oCFUdvb2dsZS5NYXBzLlJvdXRlcy5WMcoCFUdvb2dsZVxNYXBzXFJvdXRlc1xWMWIGcHJvdG8z", [file_google_maps_routes_v1_custom_route, file_google_maps_routes_v1_fallback_info]);

/**
 * ComputeCustomRoutes response message.
 *
 * @generated from message google.maps.routes.v1.ComputeCustomRoutesResponse
 */
export type ComputeCustomRoutesResponse = Message<"google.maps.routes.v1.ComputeCustomRoutesResponse"> & {
  /**
   * The ‘best’ routes for the input route objective.
   *
   * @generated from field: repeated google.maps.routes.v1.CustomRoute routes = 7;
   */
  routes: CustomRoute[];

  /**
   * The fastest reference route.
   *
   * @generated from field: google.maps.routes.v1.CustomRoute fastest_route = 5;
   */
  fastestRoute?: CustomRoute;

  /**
   * The shortest reference route.
   *
   * @generated from field: google.maps.routes.v1.CustomRoute shortest_route = 6;
   */
  shortestRoute?: CustomRoute;

  /**
   * Fallback info for custom routes.
   *
   * @generated from field: google.maps.routes.v1.ComputeCustomRoutesResponse.FallbackInfo fallback_info = 8;
   */
  fallbackInfo?: ComputeCustomRoutesResponse_FallbackInfo;
};

/**
 * Describes the message google.maps.routes.v1.ComputeCustomRoutesResponse.
 * Use `create(ComputeCustomRoutesResponseSchema)` to create a new message.
 */
export const ComputeCustomRoutesResponseSchema: GenMessage<ComputeCustomRoutesResponse> = /*@__PURE__*/
  messageDesc(file_google_maps_routes_v1_compute_custom_routes_response, 0);

/**
 * Encapsulates fallback info for ComputeCustomRoutes. ComputeCustomRoutes
 * performs two types of fallbacks:
 *
 * 1. If it cannot compute the route using the routing_preference requested by
 * the customer, it will fallback to another routing mode. In this case
 * fallback_routing_mode and routing_mode_fallback_reason are used to
 * communicate the fallback routing mode used, as well as the reason for
 * fallback.
 *
 * 2. If it cannot compute a 'best' route for the route objective specified by
 * the customer, it might fallback to another objective.
 * fallback_route_objective is used to communicate the fallback route
 * objective.
 *
 * @generated from message google.maps.routes.v1.ComputeCustomRoutesResponse.FallbackInfo
 */
export type ComputeCustomRoutesResponse_FallbackInfo = Message<"google.maps.routes.v1.ComputeCustomRoutesResponse.FallbackInfo"> & {
  /**
   * Routing mode used for the response. If fallback was triggered, the mode
   * may be different from routing preference set in the original client
   * request.
   *
   * @generated from field: google.maps.routes.v1.FallbackRoutingMode routing_mode = 1;
   */
  routingMode: FallbackRoutingMode;

  /**
   * The reason why fallback response was used instead of the original
   * response.
   * This field is only populated when the fallback mode is triggered and
   * the fallback response is returned.
   *
   * @generated from field: google.maps.routes.v1.FallbackReason routing_mode_reason = 2;
   */
  routingModeReason: FallbackReason;

  /**
   * The route objective used for the response. If fallback was triggered, the
   * objective may be different from the route objective provided in the
   * original client request.
   *
   * @generated from field: google.maps.routes.v1.ComputeCustomRoutesResponse.FallbackInfo.FallbackRouteObjective route_objective = 3;
   */
  routeObjective: ComputeCustomRoutesResponse_FallbackInfo_FallbackRouteObjective;
};

/**
 * Describes the message google.maps.routes.v1.ComputeCustomRoutesResponse.FallbackInfo.
 * Use `create(ComputeCustomRoutesResponse_FallbackInfoSchema)` to create a new message.
 */
export const ComputeCustomRoutesResponse_FallbackInfoSchema: GenMessage<ComputeCustomRoutesResponse_FallbackInfo> = /*@__PURE__*/
  messageDesc(file_google_maps_routes_v1_compute_custom_routes_response, 0, 0);

/**
 * RouteObjective used for the response.
 *
 * @generated from enum google.maps.routes.v1.ComputeCustomRoutesResponse.FallbackInfo.FallbackRouteObjective
 */
export enum ComputeCustomRoutesResponse_FallbackInfo_FallbackRouteObjective {
  /**
   * Fallback route objective unspecified.
   *
   * @generated from enum value: FALLBACK_ROUTE_OBJECTIVE_UNSPECIFIED = 0;
   */
  FALLBACK_ROUTE_OBJECTIVE_UNSPECIFIED = 0,

  /**
   * If customer requests RateCard and sets include_tolls to true, and
   * Google does not have toll price data for the route, the API falls back
   * to RateCard without considering toll price.
   *
   * @generated from enum value: FALLBACK_RATECARD_WITHOUT_TOLL_PRICE_DATA = 1;
   */
  FALLBACK_RATECARD_WITHOUT_TOLL_PRICE_DATA = 1,
}

/**
 * Describes the enum google.maps.routes.v1.ComputeCustomRoutesResponse.FallbackInfo.FallbackRouteObjective.
 */
export const ComputeCustomRoutesResponse_FallbackInfo_FallbackRouteObjectiveSchema: GenEnum<ComputeCustomRoutesResponse_FallbackInfo_FallbackRouteObjective> = /*@__PURE__*/
  enumDesc(file_google_maps_routes_v1_compute_custom_routes_response, 0, 0, 0);

