// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/routes/v1/waypoint.proto (package google.maps.routes.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { LatLng } from "../../../type/latlng_pb";
import { file_google_type_latlng } from "../../../type/latlng_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/routes/v1/waypoint.proto.
 */
export const file_google_maps_routes_v1_waypoint: GenFile = /*@__PURE__*/
  fileDesc("CiRnb29nbGUvbWFwcy9yb3V0ZXMvdjEvd2F5cG9pbnQucHJvdG8SFWdvb2dsZS5tYXBzLnJvdXRlcy52MSKhAQoIV2F5cG9pbnQSMwoIbG9jYXRpb24YASABKAsyHy5nb29nbGUubWFwcy5yb3V0ZXMudjEuTG9jYXRpb25IABISCghwbGFjZV9pZBgCIAEoCUgAEgsKA3ZpYRgDIAEoCBIYChB2ZWhpY2xlX3N0b3BvdmVyGAQgASgIEhQKDHNpZGVfb2Zfcm9hZBgFIAEoCEIPCg1sb2NhdGlvbl90eXBlIl4KCExvY2F0aW9uEiQKB2xhdF9sbmcYASABKAsyEy5nb29nbGUudHlwZS5MYXRMbmcSLAoHaGVhZGluZxgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlQp8BChljb20uZ29vZ2xlLm1hcHMucm91dGVzLnYxQg1XYXlwb2ludFByb3RvUAFaN2Nsb3VkLmdvb2dsZS5jb20vZ28vbWFwcy9yb3V0ZXMvYXBpdjEvcm91dGVzcGI7cm91dGVzcGL4AQGiAgRHTVJTqgIVR29vZ2xlLk1hcHMuUm91dGVzLlYxygIVR29vZ2xlXE1hcHNcUm91dGVzXFYxYgZwcm90bzM", [file_google_protobuf_wrappers, file_google_type_latlng]);

/**
 * Encapsulates a waypoint. Waypoints mark both the beginning and end of a
 * route, and include intermediate stops along the route.
 *
 * @generated from message google.maps.routes.v1.Waypoint
 */
export type Waypoint = Message<"google.maps.routes.v1.Waypoint"> & {
  /**
   * Different ways to represent a location.
   *
   * @generated from oneof google.maps.routes.v1.Waypoint.location_type
   */
  locationType: {
    /**
     * A point specified using geographic coordinates, including an optional
     * heading.
     *
     * @generated from field: google.maps.routes.v1.Location location = 1;
     */
    value: Location;
    case: "location";
  } | {
    /**
     * The POI Place ID associated with the waypoint.
     *
     * @generated from field: string place_id = 2;
     */
    value: string;
    case: "placeId";
  } | { case: undefined; value?: undefined };

  /**
   * Marks this waypoint as a milestone rather a stopping point. For
   * each non-via waypoint in the request, the response appends an entry to the
   * `legs` array to provide the details for stopovers on that leg of the
   * trip. Set this value to true when you want the route to pass through this
   * waypoint without stopping over. Via waypoints don't cause an entry to be
   * added to the `legs` array, but they do route the journey through the
   * waypoint. You can only set this value on waypoints that are intermediates.
   * The request fails if you set this field on terminal waypoints.
   * If ComputeRoutesRequest.optimize_waypoint_order is set to true then
   * this field cannot be set to true; otherwise, the request fails.
   *
   * @generated from field: bool via = 3;
   */
  via: boolean;

  /**
   * Indicates that the waypoint is meant for vehicles to stop at, where the
   * intention is to either pickup or drop-off. When you set this value, the
   * calculated route won't include non-`via` waypoints on roads that are
   * unsuitable for pickup and drop-off. This option works only for `DRIVE` and
   * `TWO_WHEELER` travel modes, and when the `location_type` is `location`.
   *
   * @generated from field: bool vehicle_stopover = 4;
   */
  vehicleStopover: boolean;

  /**
   * Indicates that the location of this waypoint is meant to have a preference
   * for the vehicle to stop at a particular side of road. When you set this
   * value, the route will pass through the location so that the vehicle can
   * stop at the side of road that the location is biased towards from the
   * center of the road. This option works only for 'DRIVE' and 'TWO_WHEELER'
   * travel modes, and when the 'location_type' is set to 'location'.
   *
   * @generated from field: bool side_of_road = 5;
   */
  sideOfRoad: boolean;
};

/**
 * Describes the message google.maps.routes.v1.Waypoint.
 * Use `create(WaypointSchema)` to create a new message.
 */
export const WaypointSchema: GenMessage<Waypoint> = /*@__PURE__*/
  messageDesc(file_google_maps_routes_v1_waypoint, 0);

/**
 * Encapsulates a location (a geographic point, and an optional heading).
 *
 * @generated from message google.maps.routes.v1.Location
 */
export type Location = Message<"google.maps.routes.v1.Location"> & {
  /**
   * The waypoint's geographic coordinates.
   *
   * @generated from field: google.type.LatLng lat_lng = 1;
   */
  latLng?: LatLng;

  /**
   * The compass heading associated with the direction of the flow of traffic.
   * This value is used to specify the side of the road to use for pickup and
   * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
   * of due North, 90 specifies a heading of due East, etc. You can use this
   * field only for `DRIVE` and `TWO_WHEELER` travel modes.
   *
   * @generated from field: google.protobuf.Int32Value heading = 2;
   */
  heading?: number;
};

/**
 * Describes the message google.maps.routes.v1.Location.
 * Use `create(LocationSchema)` to create a new message.
 */
export const LocationSchema: GenMessage<Location> = /*@__PURE__*/
  messageDesc(file_google_maps_routes_v1_waypoint, 1);

