// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/routes/v1/compute_routes_response.proto (package google.maps.routes.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { FallbackInfo } from "./fallback_info_pb";
import { file_google_maps_routes_v1_fallback_info } from "./fallback_info_pb";
import type { Route } from "./route_pb";
import { file_google_maps_routes_v1_route } from "./route_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/routes/v1/compute_routes_response.proto.
 */
export const file_google_maps_routes_v1_compute_routes_response: GenFile = /*@__PURE__*/
  fileDesc("CjNnb29nbGUvbWFwcy9yb3V0ZXMvdjEvY29tcHV0ZV9yb3V0ZXNfcmVzcG9uc2UucHJvdG8SFWdvb2dsZS5tYXBzLnJvdXRlcy52MSKBAQoVQ29tcHV0ZVJvdXRlc1Jlc3BvbnNlEiwKBnJvdXRlcxgBIAMoCzIcLmdvb2dsZS5tYXBzLnJvdXRlcy52MS5Sb3V0ZRI6Cg1mYWxsYmFja19pbmZvGAIgASgLMiMuZ29vZ2xlLm1hcHMucm91dGVzLnYxLkZhbGxiYWNrSW5mb0KsAQoZY29tLmdvb2dsZS5tYXBzLnJvdXRlcy52MUIaQ29tcHV0ZVJvdXRlc1Jlc3BvbnNlUHJvdG9QAVo3Y2xvdWQuZ29vZ2xlLmNvbS9nby9tYXBzL3JvdXRlcy9hcGl2MS9yb3V0ZXNwYjtyb3V0ZXNwYvgBAaICBEdNUlOqAhVHb29nbGUuTWFwcy5Sb3V0ZXMuVjHKAhVHb29nbGVcTWFwc1xSb3V0ZXNcVjFiBnByb3RvMw", [file_google_maps_routes_v1_fallback_info, file_google_maps_routes_v1_route]);

/**
 * ComputeRoutes the response message.
 *
 * @generated from message google.maps.routes.v1.ComputeRoutesResponse
 */
export type ComputeRoutesResponse = Message<"google.maps.routes.v1.ComputeRoutesResponse"> & {
  /**
   * Contains an array of computed routes (up to three) when you specify
   * compute_alternatives_routes, and contains just one route when you don't.
   * When this array contains multiple entries, the first one is the most
   * recommended route. If the array is empty, then it means no route could be
   * found.
   *
   * @generated from field: repeated google.maps.routes.v1.Route routes = 1;
   */
  routes: Route[];

  /**
   * In some cases when the server is not able to compute the route results with
   * all of the input preferences, it may fallback to using a different way of
   * computation. When fallback mode is used, this field contains detailed info
   * about the fallback response. Otherwise this field is unset.
   *
   * @generated from field: google.maps.routes.v1.FallbackInfo fallback_info = 2;
   */
  fallbackInfo?: FallbackInfo;
};

/**
 * Describes the message google.maps.routes.v1.ComputeRoutesResponse.
 * Use `create(ComputeRoutesResponseSchema)` to create a new message.
 */
export const ComputeRoutesResponseSchema: GenMessage<ComputeRoutesResponse> = /*@__PURE__*/
  messageDesc(file_google_maps_routes_v1_compute_routes_response, 0);

