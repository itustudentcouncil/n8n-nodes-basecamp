// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/routes/v1/compute_route_matrix_request.proto (package google.maps.routes.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { RouteModifiers, RouteTravelMode, RoutingPreference } from "./compute_routes_request_pb";
import { file_google_maps_routes_v1_compute_routes_request } from "./compute_routes_request_pb";
import type { Waypoint } from "./waypoint_pb";
import { file_google_maps_routes_v1_waypoint } from "./waypoint_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/routes/v1/compute_route_matrix_request.proto.
 */
export const file_google_maps_routes_v1_compute_route_matrix_request: GenFile = /*@__PURE__*/
  fileDesc("Cjhnb29nbGUvbWFwcy9yb3V0ZXMvdjEvY29tcHV0ZV9yb3V0ZV9tYXRyaXhfcmVxdWVzdC5wcm90bxIVZ29vZ2xlLm1hcHMucm91dGVzLnYxIusCChlDb21wdXRlUm91dGVNYXRyaXhSZXF1ZXN0Ej4KB29yaWdpbnMYASADKAsyKC5nb29nbGUubWFwcy5yb3V0ZXMudjEuUm91dGVNYXRyaXhPcmlnaW5CA+BBAhJICgxkZXN0aW5hdGlvbnMYAiADKAsyLS5nb29nbGUubWFwcy5yb3V0ZXMudjEuUm91dGVNYXRyaXhEZXN0aW5hdGlvbkID4EECEkAKC3RyYXZlbF9tb2RlGAMgASgOMiYuZ29vZ2xlLm1hcHMucm91dGVzLnYxLlJvdXRlVHJhdmVsTW9kZUID4EEBEkkKEnJvdXRpbmdfcHJlZmVyZW5jZRgEIAEoDjIoLmdvb2dsZS5tYXBzLnJvdXRlcy52MS5Sb3V0aW5nUHJlZmVyZW5jZUID4EEBEjcKDmRlcGFydHVyZV90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEBIpABChFSb3V0ZU1hdHJpeE9yaWdpbhI2Cgh3YXlwb2ludBgBIAEoCzIfLmdvb2dsZS5tYXBzLnJvdXRlcy52MS5XYXlwb2ludEID4EECEkMKD3JvdXRlX21vZGlmaWVycxgCIAEoCzIlLmdvb2dsZS5tYXBzLnJvdXRlcy52MS5Sb3V0ZU1vZGlmaWVyc0ID4EEBIlAKFlJvdXRlTWF0cml4RGVzdGluYXRpb24SNgoId2F5cG9pbnQYASABKAsyHy5nb29nbGUubWFwcy5yb3V0ZXMudjEuV2F5cG9pbnRCA+BBAkKwAQoZY29tLmdvb2dsZS5tYXBzLnJvdXRlcy52MUIeQ29tcHV0ZVJvdXRlTWF0cml4UmVxdWVzdFByb3RvUAFaN2Nsb3VkLmdvb2dsZS5jb20vZ28vbWFwcy9yb3V0ZXMvYXBpdjEvcm91dGVzcGI7cm91dGVzcGL4AQGiAgRHTVJTqgIVR29vZ2xlLk1hcHMuUm91dGVzLlYxygIVR29vZ2xlXE1hcHNcUm91dGVzXFYxYgZwcm90bzM", [file_google_api_field_behavior, file_google_maps_routes_v1_compute_routes_request, file_google_maps_routes_v1_waypoint, file_google_protobuf_timestamp]);

/**
 * ComputeRouteMatrix request message
 *
 * @generated from message google.maps.routes.v1.ComputeRouteMatrixRequest
 */
export type ComputeRouteMatrixRequest = Message<"google.maps.routes.v1.ComputeRouteMatrixRequest"> & {
  /**
   * Required. Array of origins, which determines the rows of the response matrix.
   * Several size restrictions apply to the cardinality of origins and
   * destinations:
   *
   * * The number of elements (origins × destinations) must be no greater than
   * 625 in any case.
   * * The number of elements (origins × destinations) must be no greater than
   * 100 if routing_preference is set to `TRAFFIC_AWARE_OPTIMAL`.
   * * The number of waypoints (origins + destinations) specified as `place_id`
   * must be no greater than 50.
   *
   * @generated from field: repeated google.maps.routes.v1.RouteMatrixOrigin origins = 1;
   */
  origins: RouteMatrixOrigin[];

  /**
   * Required. Array of destinations, which determines the columns of the response matrix.
   *
   * @generated from field: repeated google.maps.routes.v1.RouteMatrixDestination destinations = 2;
   */
  destinations: RouteMatrixDestination[];

  /**
   * Optional. Specifies the mode of transportation.
   *
   * @generated from field: google.maps.routes.v1.RouteTravelMode travel_mode = 3;
   */
  travelMode: RouteTravelMode;

  /**
   * Optional. Specifies how to compute the route. The server attempts to use the selected
   * routing preference to compute the route. If the routing preference results
   * in an error or an extra long latency, an error is returned. In the future,
   * we might implement a fallback mechanism to use a different option when the
   * preferred option does not give a valid result. You can specify this option
   * only when the `travel_mode` is `DRIVE` or `TWO_WHEELER`, otherwise the
   * request fails.
   *
   * @generated from field: google.maps.routes.v1.RoutingPreference routing_preference = 4;
   */
  routingPreference: RoutingPreference;

  /**
   * Optional. The departure time. If you don't set this value, this defaults to the time
   * that you made the request. If you set this value to a time that has already
   * occurred, the request fails.
   *
   * @generated from field: google.protobuf.Timestamp departure_time = 5;
   */
  departureTime?: Timestamp;
};

/**
 * Describes the message google.maps.routes.v1.ComputeRouteMatrixRequest.
 * Use `create(ComputeRouteMatrixRequestSchema)` to create a new message.
 */
export const ComputeRouteMatrixRequestSchema: GenMessage<ComputeRouteMatrixRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_routes_v1_compute_route_matrix_request, 0);

/**
 * A single origin for ComputeRouteMatrixRequest
 *
 * @generated from message google.maps.routes.v1.RouteMatrixOrigin
 */
export type RouteMatrixOrigin = Message<"google.maps.routes.v1.RouteMatrixOrigin"> & {
  /**
   * Required. Origin waypoint
   *
   * @generated from field: google.maps.routes.v1.Waypoint waypoint = 1;
   */
  waypoint?: Waypoint;

  /**
   * Optional. Modifiers for every route that takes this as the origin
   *
   * @generated from field: google.maps.routes.v1.RouteModifiers route_modifiers = 2;
   */
  routeModifiers?: RouteModifiers;
};

/**
 * Describes the message google.maps.routes.v1.RouteMatrixOrigin.
 * Use `create(RouteMatrixOriginSchema)` to create a new message.
 */
export const RouteMatrixOriginSchema: GenMessage<RouteMatrixOrigin> = /*@__PURE__*/
  messageDesc(file_google_maps_routes_v1_compute_route_matrix_request, 1);

/**
 * A single destination for ComputeRouteMatrixRequest
 *
 * @generated from message google.maps.routes.v1.RouteMatrixDestination
 */
export type RouteMatrixDestination = Message<"google.maps.routes.v1.RouteMatrixDestination"> & {
  /**
   * Required. Destination waypoint
   *
   * @generated from field: google.maps.routes.v1.Waypoint waypoint = 1;
   */
  waypoint?: Waypoint;
};

/**
 * Describes the message google.maps.routes.v1.RouteMatrixDestination.
 * Use `create(RouteMatrixDestinationSchema)` to create a new message.
 */
export const RouteMatrixDestinationSchema: GenMessage<RouteMatrixDestination> = /*@__PURE__*/
  messageDesc(file_google_maps_routes_v1_compute_route_matrix_request, 2);

