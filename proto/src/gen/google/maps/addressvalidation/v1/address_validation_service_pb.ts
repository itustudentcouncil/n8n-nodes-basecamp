// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/addressvalidation/v1/address_validation_service.proto (package google.maps.addressvalidation.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Address } from "./address_pb";
import { file_google_maps_addressvalidation_v1_address } from "./address_pb";
import type { Geocode } from "./geocode_pb";
import { file_google_maps_addressvalidation_v1_geocode } from "./geocode_pb";
import type { AddressMetadata } from "./metadata_pb";
import { file_google_maps_addressvalidation_v1_metadata } from "./metadata_pb";
import type { UspsData } from "./usps_data_pb";
import { file_google_maps_addressvalidation_v1_usps_data } from "./usps_data_pb";
import type { PostalAddress } from "../../../type/postal_address_pb";
import { file_google_type_postal_address } from "../../../type/postal_address_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/addressvalidation/v1/address_validation_service.proto.
 */
export const file_google_maps_addressvalidation_v1_address_validation_service: GenFile = /*@__PURE__*/
  fileDesc("CkFnb29nbGUvbWFwcy9hZGRyZXNzdmFsaWRhdGlvbi92MS9hZGRyZXNzX3ZhbGlkYXRpb25fc2VydmljZS5wcm90bxIgZ29vZ2xlLm1hcHMuYWRkcmVzc3ZhbGlkYXRpb24udjEingEKFlZhbGlkYXRlQWRkcmVzc1JlcXVlc3QSMAoHYWRkcmVzcxgBIAEoCzIaLmdvb2dsZS50eXBlLlBvc3RhbEFkZHJlc3NCA+BBAhIcChRwcmV2aW91c19yZXNwb25zZV9pZBgCIAEoCRIYChBlbmFibGVfdXNwc19jYXNzGAMgASgIEhoKDXNlc3Npb25fdG9rZW4YBSABKAlCA+BBASJyChdWYWxpZGF0ZUFkZHJlc3NSZXNwb25zZRJCCgZyZXN1bHQYASABKAsyMi5nb29nbGUubWFwcy5hZGRyZXNzdmFsaWRhdGlvbi52MS5WYWxpZGF0aW9uUmVzdWx0EhMKC3Jlc3BvbnNlX2lkGAIgASgJIssCCiBQcm92aWRlVmFsaWRhdGlvbkZlZWRiYWNrUmVxdWVzdBJwCgpjb25jbHVzaW9uGAEgASgOMlcuZ29vZ2xlLm1hcHMuYWRkcmVzc3ZhbGlkYXRpb24udjEuUHJvdmlkZVZhbGlkYXRpb25GZWVkYmFja1JlcXVlc3QuVmFsaWRhdGlvbkNvbmNsdXNpb25CA+BBAhIYCgtyZXNwb25zZV9pZBgCIAEoCUID4EECIpoBChRWYWxpZGF0aW9uQ29uY2x1c2lvbhIlCiFWQUxJREFUSU9OX0NPTkNMVVNJT05fVU5TUEVDSUZJRUQQABIaChZWQUxJREFURURfVkVSU0lPTl9VU0VEEAESFQoRVVNFUl9WRVJTSU9OX1VTRUQQAhIcChhVTlZBTElEQVRFRF9WRVJTSU9OX1VTRUQQAxIKCgZVTlVTRUQQBCIjCiFQcm92aWRlVmFsaWRhdGlvbkZlZWRiYWNrUmVzcG9uc2UiygIKEFZhbGlkYXRpb25SZXN1bHQSOgoHdmVyZGljdBgBIAEoCzIpLmdvb2dsZS5tYXBzLmFkZHJlc3N2YWxpZGF0aW9uLnYxLlZlcmRpY3QSOgoHYWRkcmVzcxgCIAEoCzIpLmdvb2dsZS5tYXBzLmFkZHJlc3N2YWxpZGF0aW9uLnYxLkFkZHJlc3MSOgoHZ2VvY29kZRgDIAEoCzIpLmdvb2dsZS5tYXBzLmFkZHJlc3N2YWxpZGF0aW9uLnYxLkdlb2NvZGUSQwoIbWV0YWRhdGEYBCABKAsyMS5nb29nbGUubWFwcy5hZGRyZXNzdmFsaWRhdGlvbi52MS5BZGRyZXNzTWV0YWRhdGESPQoJdXNwc19kYXRhGAUgASgLMiouZ29vZ2xlLm1hcHMuYWRkcmVzc3ZhbGlkYXRpb24udjEuVXNwc0RhdGEiiQQKB1ZlcmRpY3QSUAoRaW5wdXRfZ3JhbnVsYXJpdHkYASABKA4yNS5nb29nbGUubWFwcy5hZGRyZXNzdmFsaWRhdGlvbi52MS5WZXJkaWN0LkdyYW51bGFyaXR5ElUKFnZhbGlkYXRpb25fZ3JhbnVsYXJpdHkYAiABKA4yNS5nb29nbGUubWFwcy5hZGRyZXNzdmFsaWRhdGlvbi52MS5WZXJkaWN0LkdyYW51bGFyaXR5ElIKE2dlb2NvZGVfZ3JhbnVsYXJpdHkYAyABKA4yNS5nb29nbGUubWFwcy5hZGRyZXNzdmFsaWRhdGlvbi52MS5WZXJkaWN0LkdyYW51bGFyaXR5EhgKEGFkZHJlc3NfY29tcGxldGUYBCABKAgSIgoaaGFzX3VuY29uZmlybWVkX2NvbXBvbmVudHMYBSABKAgSHwoXaGFzX2luZmVycmVkX2NvbXBvbmVudHMYBiABKAgSHwoXaGFzX3JlcGxhY2VkX2NvbXBvbmVudHMYByABKAgigAEKC0dyYW51bGFyaXR5EhsKF0dSQU5VTEFSSVRZX1VOU1BFQ0lGSUVEEAASDwoLU1VCX1BSRU1JU0UQARILCgdQUkVNSVNFEAISFQoRUFJFTUlTRV9QUk9YSU1JVFkQAxIJCgVCTE9DSxAEEgkKBVJPVVRFEAUSCQoFT1RIRVIQBjKyAwoRQWRkcmVzc1ZhbGlkYXRpb24SpgEKD1ZhbGlkYXRlQWRkcmVzcxI4Lmdvb2dsZS5tYXBzLmFkZHJlc3N2YWxpZGF0aW9uLnYxLlZhbGlkYXRlQWRkcmVzc1JlcXVlc3QaOS5nb29nbGUubWFwcy5hZGRyZXNzdmFsaWRhdGlvbi52MS5WYWxpZGF0ZUFkZHJlc3NSZXNwb25zZSIegtPkkwIYOgEqIhMvdjE6dmFsaWRhdGVBZGRyZXNzEs4BChlQcm92aWRlVmFsaWRhdGlvbkZlZWRiYWNrEkIuZ29vZ2xlLm1hcHMuYWRkcmVzc3ZhbGlkYXRpb24udjEuUHJvdmlkZVZhbGlkYXRpb25GZWVkYmFja1JlcXVlc3QaQy5nb29nbGUubWFwcy5hZGRyZXNzdmFsaWRhdGlvbi52MS5Qcm92aWRlVmFsaWRhdGlvbkZlZWRiYWNrUmVzcG9uc2UiKILT5JMCIjoBKiIdL3YxOnByb3ZpZGVWYWxpZGF0aW9uRmVlZGJhY2saI8pBIGFkZHJlc3N2YWxpZGF0aW9uLmdvb2dsZWFwaXMuY29tQpoCCiRjb20uZ29vZ2xlLm1hcHMuYWRkcmVzc3ZhbGlkYXRpb24udjFCHUFkZHJlc3NWYWxpZGF0aW9uU2VydmljZVByb3RvUAFaWGNsb3VkLmdvb2dsZS5jb20vZ28vbWFwcy9hZGRyZXNzdmFsaWRhdGlvbi9hcGl2MS9hZGRyZXNzdmFsaWRhdGlvbnBiO2FkZHJlc3N2YWxpZGF0aW9ucGL4AQGiAgdHTVBBVlYxqgIgR29vZ2xlLk1hcHMuQWRkcmVzc1ZhbGlkYXRpb24uVjHKAiBHb29nbGVcTWFwc1xBZGRyZXNzVmFsaWRhdGlvblxWMeoCI0dvb2dsZTo6TWFwczo6QWRkcmVzc1ZhbGlkYXRpb246OlYxYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_maps_addressvalidation_v1_address, file_google_maps_addressvalidation_v1_geocode, file_google_maps_addressvalidation_v1_metadata, file_google_maps_addressvalidation_v1_usps_data, file_google_type_postal_address]);

/**
 * The request for validating an address.
 *
 * @generated from message google.maps.addressvalidation.v1.ValidateAddressRequest
 */
export type ValidateAddressRequest = Message<"google.maps.addressvalidation.v1.ValidateAddressRequest"> & {
  /**
   * Required. The address being validated. Unformatted addresses should be
   * submitted via [`address_lines`][google.type.PostalAddress.address_lines].
   *
   * The total length of the fields in this input must not exceed 280
   * characters.
   *
   * Supported regions can be found
   * [here](https://developers.google.com/maps/documentation/address-validation/coverage).
   *
   * The [language_code][google.type.PostalAddress.language_code] value in the
   * input address is reserved for future uses and is ignored today. The
   * validated address result will be populated based on the preferred language
   * for the given address, as identified by the system.
   *
   * The Address Validation API ignores the values in
   * [recipients][google.type.PostalAddress.recipients] and
   * [organization][google.type.PostalAddress.organization]. Any values in those
   * fields will be discarded and not returned. Please do not set them.
   *
   * @generated from field: google.type.PostalAddress address = 1;
   */
  address?: PostalAddress;

  /**
   * This field must be empty for the first address validation request. If
   * more requests are necessary to fully validate a single address (for
   * example if the changes the user makes after the initial validation need to
   * be re-validated), then each followup request must populate this field with
   * the
   * [response_id][google.maps.addressvalidation.v1.ValidateAddressResponse.response_id]
   * from the very first response in the validation sequence.
   *
   * @generated from field: string previous_response_id = 2;
   */
  previousResponseId: string;

  /**
   * Enables USPS CASS compatible mode. This affects _only_ the
   * [google.maps.addressvalidation.v1.ValidationResult.usps_data] field of
   * [google.maps.addressvalidation.v1.ValidationResult]. Note: for USPS CASS
   * enabled requests for addresses in Puerto Rico, a
   * [google.type.PostalAddress.region_code] of the `address` must be provided
   * as "PR", or an [google.type.PostalAddress.administrative_area] of the
   * `address` must be provided as "Puerto Rico" (case-insensitive) or "PR".
   *
   * It's recommended to use a componentized `address`, or alternatively specify
   * at least two [google.type.PostalAddress.address_lines] where the first line
   * contains the street number and name and the second line contains the city,
   * state, and zip code.
   *
   * @generated from field: bool enable_usps_cass = 3;
   */
  enableUspsCass: boolean;

  /**
   * Optional. A string which identifies an Autocomplete session for billing
   * purposes. Must be a URL and filename safe base64 string with at most 36
   * ASCII characters in length. Otherwise an INVALID_ARGUMENT error is
   * returned.
   *
   * The session begins when the user starts typing a query, and concludes when
   * they select a place and a call to Place Details or Address Validation is
   * made. Each session can have multiple autocomplete queries, followed by one
   * Place Details or Address Validation request. The credentials used for each
   * request within a session must belong to the same Google Cloud Console
   * project. Once a session has concluded, the token is no longer valid; your
   * app must generate a fresh token for each session. If the `session_token`
   * parameter is omitted, or if you reuse a session token, the session is
   * charged as if no session token was provided (each request is billed
   * separately).
   *
   * Note: Address Validation can only be used in sessions with the
   * Autocomplete (New) API, not the old Autocomplete API. See
   * https://developers.google.com/maps/documentation/places/web-service/session-pricing
   * for more details.
   *
   * @generated from field: string session_token = 5;
   */
  sessionToken: string;
};

/**
 * Describes the message google.maps.addressvalidation.v1.ValidateAddressRequest.
 * Use `create(ValidateAddressRequestSchema)` to create a new message.
 */
export const ValidateAddressRequestSchema: GenMessage<ValidateAddressRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_addressvalidation_v1_address_validation_service, 0);

/**
 * The response to an address validation request.
 *
 * @generated from message google.maps.addressvalidation.v1.ValidateAddressResponse
 */
export type ValidateAddressResponse = Message<"google.maps.addressvalidation.v1.ValidateAddressResponse"> & {
  /**
   * The result of the address validation.
   *
   * @generated from field: google.maps.addressvalidation.v1.ValidationResult result = 1;
   */
  result?: ValidationResult;

  /**
   * The UUID that identifies this response. If the address needs to be
   * re-validated, this UUID *must* accompany the new request.
   *
   * @generated from field: string response_id = 2;
   */
  responseId: string;
};

/**
 * Describes the message google.maps.addressvalidation.v1.ValidateAddressResponse.
 * Use `create(ValidateAddressResponseSchema)` to create a new message.
 */
export const ValidateAddressResponseSchema: GenMessage<ValidateAddressResponse> = /*@__PURE__*/
  messageDesc(file_google_maps_addressvalidation_v1_address_validation_service, 1);

/**
 * The request for sending validation feedback.
 *
 * @generated from message google.maps.addressvalidation.v1.ProvideValidationFeedbackRequest
 */
export type ProvideValidationFeedbackRequest = Message<"google.maps.addressvalidation.v1.ProvideValidationFeedbackRequest"> & {
  /**
   * Required. The outcome of the sequence of validation attempts.
   *
   * If this field is set to `VALIDATION_CONCLUSION_UNSPECIFIED`, an
   * `INVALID_ARGUMENT` error will be returned.
   *
   * @generated from field: google.maps.addressvalidation.v1.ProvideValidationFeedbackRequest.ValidationConclusion conclusion = 1;
   */
  conclusion: ProvideValidationFeedbackRequest_ValidationConclusion;

  /**
   * Required. The ID of the response that this feedback is for. This should be
   * the
   * [response_id][google.maps.addressvalidation.v1.ValidateAddressRequest.response_id]
   * from the first response in a series of address validation attempts.
   *
   * @generated from field: string response_id = 2;
   */
  responseId: string;
};

/**
 * Describes the message google.maps.addressvalidation.v1.ProvideValidationFeedbackRequest.
 * Use `create(ProvideValidationFeedbackRequestSchema)` to create a new message.
 */
export const ProvideValidationFeedbackRequestSchema: GenMessage<ProvideValidationFeedbackRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_addressvalidation_v1_address_validation_service, 2);

/**
 * The possible final outcomes of the sequence of address validation requests
 * needed to validate an address.
 *
 * @generated from enum google.maps.addressvalidation.v1.ProvideValidationFeedbackRequest.ValidationConclusion
 */
export enum ProvideValidationFeedbackRequest_ValidationConclusion {
  /**
   * This value is unused.
   * If the `ProvideValidationFeedbackRequest.conclusion` field is set to
   * `VALIDATION_CONCLUSION_UNSPECIFIED`, an `INVALID_ARGUMENT` error will be
   * returned.
   *
   * @generated from enum value: VALIDATION_CONCLUSION_UNSPECIFIED = 0;
   */
  VALIDATION_CONCLUSION_UNSPECIFIED = 0,

  /**
   * The version of the address returned by the Address Validation API was
   * used for the transaction.
   *
   * @generated from enum value: VALIDATED_VERSION_USED = 1;
   */
  VALIDATED_VERSION_USED = 1,

  /**
   * The version of the address provided by the user was used for the
   * transaction
   *
   * @generated from enum value: USER_VERSION_USED = 2;
   */
  USER_VERSION_USED = 2,

  /**
   * A version of the address that was entered after the last validation
   * attempt but that was not re-validated was used for the transaction.
   *
   * @generated from enum value: UNVALIDATED_VERSION_USED = 3;
   */
  UNVALIDATED_VERSION_USED = 3,

  /**
   * The transaction was abandoned and the address was not used.
   *
   * @generated from enum value: UNUSED = 4;
   */
  UNUSED = 4,
}

/**
 * Describes the enum google.maps.addressvalidation.v1.ProvideValidationFeedbackRequest.ValidationConclusion.
 */
export const ProvideValidationFeedbackRequest_ValidationConclusionSchema: GenEnum<ProvideValidationFeedbackRequest_ValidationConclusion> = /*@__PURE__*/
  enumDesc(file_google_maps_addressvalidation_v1_address_validation_service, 2, 0);

/**
 * The response for validation feedback.
 *
 * The response is empty if the feedback is sent successfully.
 *
 * @generated from message google.maps.addressvalidation.v1.ProvideValidationFeedbackResponse
 */
export type ProvideValidationFeedbackResponse = Message<"google.maps.addressvalidation.v1.ProvideValidationFeedbackResponse"> & {
};

/**
 * Describes the message google.maps.addressvalidation.v1.ProvideValidationFeedbackResponse.
 * Use `create(ProvideValidationFeedbackResponseSchema)` to create a new message.
 */
export const ProvideValidationFeedbackResponseSchema: GenMessage<ProvideValidationFeedbackResponse> = /*@__PURE__*/
  messageDesc(file_google_maps_addressvalidation_v1_address_validation_service, 3);

/**
 * The result of validating an address.
 *
 * @generated from message google.maps.addressvalidation.v1.ValidationResult
 */
export type ValidationResult = Message<"google.maps.addressvalidation.v1.ValidationResult"> & {
  /**
   * Overall verdict flags
   *
   * @generated from field: google.maps.addressvalidation.v1.Verdict verdict = 1;
   */
  verdict?: Verdict;

  /**
   * Information about the address itself as opposed to the geocode.
   *
   * @generated from field: google.maps.addressvalidation.v1.Address address = 2;
   */
  address?: Address;

  /**
   * Information about the location and place that the address geocoded to.
   *
   * @generated from field: google.maps.addressvalidation.v1.Geocode geocode = 3;
   */
  geocode?: Geocode;

  /**
   * Other information relevant to deliverability. `metadata` is not guaranteed
   * to be fully populated for every address sent to the Address Validation API.
   *
   * @generated from field: google.maps.addressvalidation.v1.AddressMetadata metadata = 4;
   */
  metadata?: AddressMetadata;

  /**
   * Extra deliverability flags provided by USPS. Only provided in region `US`
   * and `PR`.
   *
   * @generated from field: google.maps.addressvalidation.v1.UspsData usps_data = 5;
   */
  uspsData?: UspsData;
};

/**
 * Describes the message google.maps.addressvalidation.v1.ValidationResult.
 * Use `create(ValidationResultSchema)` to create a new message.
 */
export const ValidationResultSchema: GenMessage<ValidationResult> = /*@__PURE__*/
  messageDesc(file_google_maps_addressvalidation_v1_address_validation_service, 4);

/**
 * High level overview of the address validation result and geocode.
 *
 * @generated from message google.maps.addressvalidation.v1.Verdict
 */
export type Verdict = Message<"google.maps.addressvalidation.v1.Verdict"> & {
  /**
   * The granularity of the **input** address. This is the result of parsing the
   * input address and does not give any validation signals. For validation
   * signals, refer to `validation_granularity` below.
   *
   * For example, if the input address includes a specific apartment number,
   * then the `input_granularity` here will be `SUB_PREMISE`. If we cannot match
   * the apartment number in the databases or the apartment number is invalid,
   * the `validation_granularity` will likely be `PREMISE` or below.
   *
   * @generated from field: google.maps.addressvalidation.v1.Verdict.Granularity input_granularity = 1;
   */
  inputGranularity: Verdict_Granularity;

  /**
   * The granularity level that the API can fully **validate** the address to.
   * For example, an `validation_granularity` of `PREMISE` indicates all address
   * components at the level of `PREMISE` or more coarse can be validated.
   *
   * Per address component validation result can be found in
   * [google.maps.addressvalidation.v1.Address.address_components].
   *
   * @generated from field: google.maps.addressvalidation.v1.Verdict.Granularity validation_granularity = 2;
   */
  validationGranularity: Verdict_Granularity;

  /**
   * Information about the granularity of the
   * [`geocode`][google.maps.addressvalidation.v1.ValidationResult.geocode].
   * This can be understood as the semantic meaning of how coarse or fine the
   * geocoded location is.
   *
   * This can differ from the `validation_granularity` above occasionally. For
   * example, our database might record the existence of an apartment number but
   * do not have a precise location for the apartment within a big apartment
   * complex. In that case, the `validation_granularity` will be `SUB_PREMISE`
   * but the `geocode_granularity` will be `PREMISE`.
   *
   * @generated from field: google.maps.addressvalidation.v1.Verdict.Granularity geocode_granularity = 3;
   */
  geocodeGranularity: Verdict_Granularity;

  /**
   * The address is considered complete if there are no unresolved tokens, no
   * unexpected or missing address components. See
   * [`missing_component_types`][google.maps.addressvalidation.v1.Address.missing_component_types],
   * [`unresolved_tokens`][google.maps.addressvalidation.v1.Address.unresolved_tokens]
   * or
   * [`unexpected`][google.maps.addressvalidation.v1.AddressComponent.unexpected]
   * fields for more details.
   *
   * @generated from field: bool address_complete = 4;
   */
  addressComplete: boolean;

  /**
   * At least one address component cannot be categorized or validated, see
   * [google.maps.addressvalidation.v1.Address.address_components] for
   * details.
   *
   * @generated from field: bool has_unconfirmed_components = 5;
   */
  hasUnconfirmedComponents: boolean;

  /**
   * At least one address component was inferred (added) that wasn't in the
   * input, see
   * [google.maps.addressvalidation.v1.Address.address_components] for
   * details.
   *
   * @generated from field: bool has_inferred_components = 6;
   */
  hasInferredComponents: boolean;

  /**
   * At least one address component was replaced, see
   * [google.maps.addressvalidation.v1.Address.address_components] for
   * details.
   *
   * @generated from field: bool has_replaced_components = 7;
   */
  hasReplacedComponents: boolean;
};

/**
 * Describes the message google.maps.addressvalidation.v1.Verdict.
 * Use `create(VerdictSchema)` to create a new message.
 */
export const VerdictSchema: GenMessage<Verdict> = /*@__PURE__*/
  messageDesc(file_google_maps_addressvalidation_v1_address_validation_service, 5);

/**
 * The various granularities that an address or a geocode can have.
 * When used to indicate granularity for an *address*, these values indicate
 * with how fine a granularity the address identifies a mailing destination.
 * For example, an address such as "123 Main Street, Redwood City, CA, 94061"
 * identifies a `PREMISE` while something like "Redwood City, CA, 94061"
 * identifies a `LOCALITY`. However, if we are unable to find a geocode for
 * "123 Main Street" in Redwood City, the geocode returned might be of
 * `LOCALITY` granularity even though the address is more granular.
 *
 * @generated from enum google.maps.addressvalidation.v1.Verdict.Granularity
 */
export enum Verdict_Granularity {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: GRANULARITY_UNSPECIFIED = 0;
   */
  GRANULARITY_UNSPECIFIED = 0,

  /**
   * Below-building level result, such as an apartment.
   *
   * @generated from enum value: SUB_PREMISE = 1;
   */
  SUB_PREMISE = 1,

  /**
   * Building-level result.
   *
   * @generated from enum value: PREMISE = 2;
   */
  PREMISE = 2,

  /**
   * A geocode that approximates the building-level location of the address.
   *
   * @generated from enum value: PREMISE_PROXIMITY = 3;
   */
  PREMISE_PROXIMITY = 3,

  /**
   * The address or geocode indicates a block. Only used in regions which
   * have block-level addressing, such as Japan.
   *
   * @generated from enum value: BLOCK = 4;
   */
  BLOCK = 4,

  /**
   * The geocode or address is granular to route, such as a street, road, or
   * highway.
   *
   * @generated from enum value: ROUTE = 5;
   */
  ROUTE = 5,

  /**
   * All other granularities, which are bucketed together since they are not
   * deliverable.
   *
   * @generated from enum value: OTHER = 6;
   */
  OTHER = 6,
}

/**
 * Describes the enum google.maps.addressvalidation.v1.Verdict.Granularity.
 */
export const Verdict_GranularitySchema: GenEnum<Verdict_Granularity> = /*@__PURE__*/
  enumDesc(file_google_maps_addressvalidation_v1_address_validation_service, 5, 0);

/**
 * The service for validating addresses.
 *
 * @generated from service google.maps.addressvalidation.v1.AddressValidation
 */
export const AddressValidation: GenService<{
  /**
   * Validates an address.
   *
   * @generated from rpc google.maps.addressvalidation.v1.AddressValidation.ValidateAddress
   */
  validateAddress: {
    methodKind: "unary";
    input: typeof ValidateAddressRequestSchema;
    output: typeof ValidateAddressResponseSchema;
  },
  /**
   * Feedback about the outcome of the sequence of validation attempts. This
   * should be the last call made after a sequence of validation calls for the
   * same address, and should be called once the transaction is concluded. This
   * should only be sent once for the sequence of `ValidateAddress` requests
   * needed to validate an address fully.
   *
   * @generated from rpc google.maps.addressvalidation.v1.AddressValidation.ProvideValidationFeedback
   */
  provideValidationFeedback: {
    methodKind: "unary";
    input: typeof ProvideValidationFeedbackRequestSchema;
    output: typeof ProvideValidationFeedbackResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_maps_addressvalidation_v1_address_validation_service, 0);

