// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/places/v1/route_modifiers.proto (package google.maps.places.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/places/v1/route_modifiers.proto.
 */
export const file_google_maps_places_v1_route_modifiers: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvbWFwcy9wbGFjZXMvdjEvcm91dGVfbW9kaWZpZXJzLnByb3RvEhVnb29nbGUubWFwcy5wbGFjZXMudjEifgoOUm91dGVNb2RpZmllcnMSGAoLYXZvaWRfdG9sbHMYASABKAhCA+BBARIbCg5hdm9pZF9oaWdod2F5cxgCIAEoCEID4EEBEhoKDWF2b2lkX2ZlcnJpZXMYAyABKAhCA+BBARIZCgxhdm9pZF9pbmRvb3IYBCABKAhCA+BBAUKnAQoZY29tLmdvb2dsZS5tYXBzLnBsYWNlcy52MUITUm91dGVNb2RpZmllcnNQcm90b1ABWjdjbG91ZC5nb29nbGUuY29tL2dvL21hcHMvcGxhY2VzL2FwaXYxL3BsYWNlc3BiO3BsYWNlc3Bi+AEBogIGR01QU1YxqgIVR29vZ2xlLk1hcHMuUGxhY2VzLlYxygIVR29vZ2xlXE1hcHNcUGxhY2VzXFYxYgZwcm90bzM", [file_google_api_field_behavior]);

/**
 * Encapsulates a set of optional conditions to satisfy when calculating the
 * routes.
 *
 * @generated from message google.maps.places.v1.RouteModifiers
 */
export type RouteModifiers = Message<"google.maps.places.v1.RouteModifiers"> & {
  /**
   * Optional. When set to true, avoids toll roads where reasonable, giving
   * preference to routes not containing toll roads. Applies only to the `DRIVE`
   * and `TWO_WHEELER` [`TravelMode`][google.maps.places.v1.TravelMode].
   *
   * @generated from field: bool avoid_tolls = 1;
   */
  avoidTolls: boolean;

  /**
   * Optional. When set to true, avoids highways where reasonable, giving
   * preference to routes not containing highways. Applies only to the `DRIVE`
   * and `TWO_WHEELER` [`TravelMode`][google.maps.places.v1.TravelMode].
   *
   * @generated from field: bool avoid_highways = 2;
   */
  avoidHighways: boolean;

  /**
   * Optional. When set to true, avoids ferries where reasonable, giving
   * preference to routes not containing ferries. Applies only to the `DRIVE`
   * and `TWO_WHEELER` [`TravelMode`][google.maps.places.v1.TravelMode].
   *
   * @generated from field: bool avoid_ferries = 3;
   */
  avoidFerries: boolean;

  /**
   * Optional. When set to true, avoids navigating indoors where reasonable,
   * giving preference to routes not containing indoor navigation. Applies only
   * to the `WALK` [`TravelMode`][google.maps.places.v1.TravelMode].
   *
   * @generated from field: bool avoid_indoor = 4;
   */
  avoidIndoor: boolean;
};

/**
 * Describes the message google.maps.places.v1.RouteModifiers.
 * Use `create(RouteModifiersSchema)` to create a new message.
 */
export const RouteModifiersSchema: GenMessage<RouteModifiers> = /*@__PURE__*/
  messageDesc(file_google_maps_places_v1_route_modifiers, 0);

