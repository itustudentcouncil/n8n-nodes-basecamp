// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/routing/v2/waypoint.proto (package google.maps.routing.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Location } from "./location_pb";
import { file_google_maps_routing_v2_location } from "./location_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/routing/v2/waypoint.proto.
 */
export const file_google_maps_routing_v2_waypoint: GenFile = /*@__PURE__*/
  fileDesc("CiVnb29nbGUvbWFwcy9yb3V0aW5nL3YyL3dheXBvaW50LnByb3RvEhZnb29nbGUubWFwcy5yb3V0aW5nLnYyIrUBCghXYXlwb2ludBI0Cghsb2NhdGlvbhgBIAEoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuTG9jYXRpb25IABISCghwbGFjZV9pZBgCIAEoCUgAEhEKB2FkZHJlc3MYByABKAlIABILCgN2aWEYAyABKAgSGAoQdmVoaWNsZV9zdG9wb3ZlchgEIAEoCBIUCgxzaWRlX29mX3JvYWQYBSABKAhCDwoNbG9jYXRpb25fdHlwZULCAQoaY29tLmdvb2dsZS5tYXBzLnJvdXRpbmcudjJCDVdheXBvaW50UHJvdG9QAVo6Y2xvdWQuZ29vZ2xlLmNvbS9nby9tYXBzL3JvdXRpbmcvYXBpdjIvcm91dGluZ3BiO3JvdXRpbmdwYvgBAaICBUdNUlYyqgIWR29vZ2xlLk1hcHMuUm91dGluZy5WMsoCFkdvb2dsZVxNYXBzXFJvdXRpbmdcVjLqAhlHb29nbGU6Ok1hcHM6OlJvdXRpbmc6OlYyYgZwcm90bzM", [file_google_maps_routing_v2_location]);

/**
 * Encapsulates a waypoint. Waypoints mark both the beginning and end of a
 * route, and include intermediate stops along the route.
 *
 * @generated from message google.maps.routing.v2.Waypoint
 */
export type Waypoint = Message<"google.maps.routing.v2.Waypoint"> & {
  /**
   * Different ways to represent a location.
   *
   * @generated from oneof google.maps.routing.v2.Waypoint.location_type
   */
  locationType: {
    /**
     * A point specified using geographic coordinates, including an optional
     * heading.
     *
     * @generated from field: google.maps.routing.v2.Location location = 1;
     */
    value: Location;
    case: "location";
  } | {
    /**
     * The POI Place ID associated with the waypoint.
     *
     * @generated from field: string place_id = 2;
     */
    value: string;
    case: "placeId";
  } | {
    /**
     * Human readable address or a plus code.
     * See https://plus.codes for details.
     *
     * @generated from field: string address = 7;
     */
    value: string;
    case: "address";
  } | { case: undefined; value?: undefined };

  /**
   * Marks this waypoint as a milestone rather a stopping point. For
   * each non-via waypoint in the request, the response appends an entry to the
   * [`legs`][google.maps.routing.v2.Route.legs]
   * array to provide the details for stopovers on that leg of the trip. Set
   * this value to true when you want the route to pass through this waypoint
   * without stopping over. Via waypoints don't cause an entry to be added to
   * the `legs` array, but they do route the journey through the waypoint. You
   * can only set this value on waypoints that are intermediates. The request
   * fails if you set this field on terminal waypoints. If
   * `ComputeRoutesRequest.optimize_waypoint_order` is set to true then this
   * field cannot be set to true; otherwise, the request fails.
   *
   * @generated from field: bool via = 3;
   */
  via: boolean;

  /**
   * Indicates that the waypoint is meant for vehicles to stop at, where the
   * intention is to either pickup or drop-off. When you set this value, the
   * calculated route won't include non-`via` waypoints on roads that are
   * unsuitable for pickup and drop-off. This option works only for `DRIVE` and
   * `TWO_WHEELER` travel modes, and when the `location_type` is
   * [`Location`][google.maps.routing.v2.Location].
   *
   * @generated from field: bool vehicle_stopover = 4;
   */
  vehicleStopover: boolean;

  /**
   * Indicates that the location of this waypoint is meant to have a preference
   * for the vehicle to stop at a particular side of road. When you set this
   * value, the route will pass through the location so that the vehicle can
   * stop at the side of road that the location is biased towards from the
   * center of the road. This option works only for `DRIVE` and `TWO_WHEELER`
   * [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode].
   *
   * @generated from field: bool side_of_road = 5;
   */
  sideOfRoad: boolean;
};

/**
 * Describes the message google.maps.routing.v2.Waypoint.
 * Use `create(WaypointSchema)` to create a new message.
 */
export const WaypointSchema: GenMessage<Waypoint> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_waypoint, 0);

