// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/routing/v2/routes_service.proto (package google.maps.routing.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { FallbackInfo } from "./fallback_info_pb";
import { file_google_maps_routing_v2_fallback_info } from "./fallback_info_pb";
import type { GeocodingResults } from "./geocoding_results_pb";
import { file_google_maps_routing_v2_geocoding_results } from "./geocoding_results_pb";
import type { PolylineEncoding, PolylineQuality } from "./polyline_pb";
import { file_google_maps_routing_v2_polyline } from "./polyline_pb";
import type { Route, RouteTravelAdvisory } from "./route_pb";
import { file_google_maps_routing_v2_route } from "./route_pb";
import type { RouteModifiers } from "./route_modifiers_pb";
import { file_google_maps_routing_v2_route_modifiers } from "./route_modifiers_pb";
import type { RouteTravelMode } from "./route_travel_mode_pb";
import { file_google_maps_routing_v2_route_travel_mode } from "./route_travel_mode_pb";
import type { RoutingPreference } from "./routing_preference_pb";
import { file_google_maps_routing_v2_routing_preference } from "./routing_preference_pb";
import type { TrafficModel } from "./traffic_model_pb";
import { file_google_maps_routing_v2_traffic_model } from "./traffic_model_pb";
import type { TransitPreferences } from "./transit_preferences_pb";
import { file_google_maps_routing_v2_transit_preferences } from "./transit_preferences_pb";
import type { Units } from "./units_pb";
import { file_google_maps_routing_v2_units } from "./units_pb";
import type { Waypoint } from "./waypoint_pb";
import { file_google_maps_routing_v2_waypoint } from "./waypoint_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { LocalizedText } from "../../../type/localized_text_pb";
import { file_google_type_localized_text } from "../../../type/localized_text_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/routing/v2/routes_service.proto.
 */
export const file_google_maps_routing_v2_routes_service: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvbWFwcy9yb3V0aW5nL3YyL3JvdXRlc19zZXJ2aWNlLnByb3RvEhZnb29nbGUubWFwcy5yb3V0aW5nLnYyIpELChRDb21wdXRlUm91dGVzUmVxdWVzdBI1CgZvcmlnaW4YASABKAsyIC5nb29nbGUubWFwcy5yb3V0aW5nLnYyLldheXBvaW50QgPgQQISOgoLZGVzdGluYXRpb24YAiABKAsyIC5nb29nbGUubWFwcy5yb3V0aW5nLnYyLldheXBvaW50QgPgQQISPAoNaW50ZXJtZWRpYXRlcxgDIAMoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuV2F5cG9pbnRCA+BBARJBCgt0cmF2ZWxfbW9kZRgEIAEoDjInLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUm91dGVUcmF2ZWxNb2RlQgPgQQESSgoScm91dGluZ19wcmVmZXJlbmNlGAUgASgOMikuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Sb3V0aW5nUHJlZmVyZW5jZUID4EEBEkYKEHBvbHlsaW5lX3F1YWxpdHkYBiABKA4yJy5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlBvbHlsaW5lUXVhbGl0eUID4EEBEkgKEXBvbHlsaW5lX2VuY29kaW5nGAwgASgOMiguZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Qb2x5bGluZUVuY29kaW5nQgPgQQESNwoOZGVwYXJ0dXJlX3RpbWUYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQESNQoMYXJyaXZhbF90aW1lGBMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEBEicKGmNvbXB1dGVfYWx0ZXJuYXRpdmVfcm91dGVzGAggASgIQgPgQQESRAoPcm91dGVfbW9kaWZpZXJzGAkgASgLMiYuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Sb3V0ZU1vZGlmaWVyc0ID4EEBEhoKDWxhbmd1YWdlX2NvZGUYCiABKAlCA+BBARIYCgtyZWdpb25fY29kZRgQIAEoCUID4EEBEjEKBXVuaXRzGAsgASgOMh0uZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Vbml0c0ID4EEBEiQKF29wdGltaXplX3dheXBvaW50X29yZGVyGA0gASgIQgPgQQESZAoacmVxdWVzdGVkX3JlZmVyZW5jZV9yb3V0ZXMYDiADKA4yOy5nb29nbGUubWFwcy5yb3V0aW5nLnYyLkNvbXB1dGVSb3V0ZXNSZXF1ZXN0LlJlZmVyZW5jZVJvdXRlQgPgQQESXgoSZXh0cmFfY29tcHV0YXRpb25zGA8gAygOMj0uZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Db21wdXRlUm91dGVzUmVxdWVzdC5FeHRyYUNvbXB1dGF0aW9uQgPgQQESQAoNdHJhZmZpY19tb2RlbBgSIAEoDjIkLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuVHJhZmZpY01vZGVsQgPgQQESTAoTdHJhbnNpdF9wcmVmZXJlbmNlcxgUIAEoCzIqLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuVHJhbnNpdFByZWZlcmVuY2VzQgPgQQEiRQoOUmVmZXJlbmNlUm91dGUSHwobUkVGRVJFTkNFX1JPVVRFX1VOU1BFQ0lGSUVEEAASEgoORlVFTF9FRkZJQ0lFTlQQASKbAQoQRXh0cmFDb21wdXRhdGlvbhIhCh1FWFRSQV9DT01QVVRBVElPTl9VTlNQRUNJRklFRBAAEgkKBVRPTExTEAESFAoQRlVFTF9DT05TVU1QVElPThACEhcKE1RSQUZGSUNfT05fUE9MWUxJTkUQAxIqCiZIVE1MX0ZPUk1BVFRFRF9OQVZJR0FUSU9OX0lOU1RSVUNUSU9OUxAEIsgBChVDb21wdXRlUm91dGVzUmVzcG9uc2USLQoGcm91dGVzGAEgAygLMh0uZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Sb3V0ZRI7Cg1mYWxsYmFja19pbmZvGAIgASgLMiQuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5GYWxsYmFja0luZm8SQwoRZ2VvY29kaW5nX3Jlc3VsdHMYAyABKAsyKC5nb29nbGUubWFwcy5yb3V0aW5nLnYyLkdlb2NvZGluZ1Jlc3VsdHMixgYKGUNvbXB1dGVSb3V0ZU1hdHJpeFJlcXVlc3QSPwoHb3JpZ2lucxgBIAMoCzIpLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUm91dGVNYXRyaXhPcmlnaW5CA+BBAhJJCgxkZXN0aW5hdGlvbnMYAiADKAsyLi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlJvdXRlTWF0cml4RGVzdGluYXRpb25CA+BBAhJBCgt0cmF2ZWxfbW9kZRgDIAEoDjInLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUm91dGVUcmF2ZWxNb2RlQgPgQQESSgoScm91dGluZ19wcmVmZXJlbmNlGAQgASgOMikuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Sb3V0aW5nUHJlZmVyZW5jZUID4EEBEjcKDmRlcGFydHVyZV90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEBEjUKDGFycml2YWxfdGltZRgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBARIaCg1sYW5ndWFnZV9jb2RlGAYgASgJQgPgQQESGAoLcmVnaW9uX2NvZGUYCSABKAlCA+BBARIxCgV1bml0cxgHIAEoDjIdLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuVW5pdHNCA+BBARJjChJleHRyYV9jb21wdXRhdGlvbnMYCCADKA4yQi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLkNvbXB1dGVSb3V0ZU1hdHJpeFJlcXVlc3QuRXh0cmFDb21wdXRhdGlvbkID4EEBEkAKDXRyYWZmaWNfbW9kZWwYCiABKA4yJC5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlRyYWZmaWNNb2RlbEID4EEBEkwKE3RyYW5zaXRfcHJlZmVyZW5jZXMYDCABKAsyKi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlRyYW5zaXRQcmVmZXJlbmNlc0ID4EEBIkAKEEV4dHJhQ29tcHV0YXRpb24SIQodRVhUUkFfQ09NUFVUQVRJT05fVU5TUEVDSUZJRUQQABIJCgVUT0xMUxABIpIBChFSb3V0ZU1hdHJpeE9yaWdpbhI3Cgh3YXlwb2ludBgBIAEoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuV2F5cG9pbnRCA+BBAhJECg9yb3V0ZV9tb2RpZmllcnMYAiABKAsyJi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlJvdXRlTW9kaWZpZXJzQgPgQQEiUQoWUm91dGVNYXRyaXhEZXN0aW5hdGlvbhI3Cgh3YXlwb2ludBgBIAEoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuV2F5cG9pbnRCA+BBAiKMBgoSUm91dGVNYXRyaXhFbGVtZW50EhkKDG9yaWdpbl9pbmRleBgBIAEoBUgAiAEBEh4KEWRlc3RpbmF0aW9uX2luZGV4GAIgASgFSAGIAQESIgoGc3RhdHVzGAMgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMSRgoJY29uZGl0aW9uGAkgASgOMjMuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Sb3V0ZU1hdHJpeEVsZW1lbnRDb25kaXRpb24SFwoPZGlzdGFuY2VfbWV0ZXJzGAQgASgFEisKCGR1cmF0aW9uGAUgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEjIKD3N0YXRpY19kdXJhdGlvbhgGIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhJECg90cmF2ZWxfYWR2aXNvcnkYByABKAsyKy5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlJvdXRlVHJhdmVsQWR2aXNvcnkSOwoNZmFsbGJhY2tfaW5mbxgIIAEoCzIkLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuRmFsbGJhY2tJbmZvElQKEGxvY2FsaXplZF92YWx1ZXMYCiABKAsyOi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlJvdXRlTWF0cml4RWxlbWVudC5Mb2NhbGl6ZWRWYWx1ZXMa1AEKD0xvY2FsaXplZFZhbHVlcxIsCghkaXN0YW5jZRgBIAEoCzIaLmdvb2dsZS50eXBlLkxvY2FsaXplZFRleHQSLAoIZHVyYXRpb24YAiABKAsyGi5nb29nbGUudHlwZS5Mb2NhbGl6ZWRUZXh0EjMKD3N0YXRpY19kdXJhdGlvbhgDIAEoCzIaLmdvb2dsZS50eXBlLkxvY2FsaXplZFRleHQSMAoMdHJhbnNpdF9mYXJlGAQgASgLMhouZ29vZ2xlLnR5cGUuTG9jYWxpemVkVGV4dEIPCg1fb3JpZ2luX2luZGV4QhQKEl9kZXN0aW5hdGlvbl9pbmRleCp0ChtSb3V0ZU1hdHJpeEVsZW1lbnRDb25kaXRpb24SLgoqUk9VVEVfTUFUUklYX0VMRU1FTlRfQ09ORElUSU9OX1VOU1BFQ0lGSUVEEAASEAoMUk9VVEVfRVhJU1RTEAESEwoPUk9VVEVfTk9UX0ZPVU5EEAIy5AIKBlJvdXRlcxKVAQoNQ29tcHV0ZVJvdXRlcxIsLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuQ29tcHV0ZVJvdXRlc1JlcXVlc3QaLS5nb29nbGUubWFwcy5yb3V0aW5nLnYyLkNvbXB1dGVSb3V0ZXNSZXNwb25zZSIngtPkkwIhOgEqIhwvZGlyZWN0aW9ucy92Mjpjb21wdXRlUm91dGVzEqcBChJDb21wdXRlUm91dGVNYXRyaXgSMS5nb29nbGUubWFwcy5yb3V0aW5nLnYyLkNvbXB1dGVSb3V0ZU1hdHJpeFJlcXVlc3QaKi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlJvdXRlTWF0cml4RWxlbWVudCIwgtPkkwIqOgEqIiUvZGlzdGFuY2VNYXRyaXgvdjI6Y29tcHV0ZVJvdXRlTWF0cml4MAEaGMpBFXJvdXRlcy5nb29nbGVhcGlzLmNvbULHAQoaY29tLmdvb2dsZS5tYXBzLnJvdXRpbmcudjJCElJvdXRlc1NlcnZpY2VQcm90b1ABWjpjbG91ZC5nb29nbGUuY29tL2dvL21hcHMvcm91dGluZy9hcGl2Mi9yb3V0aW5ncGI7cm91dGluZ3Bi+AEBogIFR01SVjKqAhZHb29nbGUuTWFwcy5Sb3V0aW5nLlYyygIWR29vZ2xlXE1hcHNcUm91dGluZ1xWMuoCGUdvb2dsZTo6TWFwczo6Um91dGluZzo6VjJiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_maps_routing_v2_fallback_info, file_google_maps_routing_v2_geocoding_results, file_google_maps_routing_v2_polyline, file_google_maps_routing_v2_route, file_google_maps_routing_v2_route_modifiers, file_google_maps_routing_v2_route_travel_mode, file_google_maps_routing_v2_routing_preference, file_google_maps_routing_v2_traffic_model, file_google_maps_routing_v2_transit_preferences, file_google_maps_routing_v2_units, file_google_maps_routing_v2_waypoint, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_rpc_status, file_google_type_localized_text]);

/**
 * ComputeRoutes request message.
 *
 * @generated from message google.maps.routing.v2.ComputeRoutesRequest
 */
export type ComputeRoutesRequest = Message<"google.maps.routing.v2.ComputeRoutesRequest"> & {
  /**
   * Required. Origin waypoint.
   *
   * @generated from field: google.maps.routing.v2.Waypoint origin = 1;
   */
  origin?: Waypoint;

  /**
   * Required. Destination waypoint.
   *
   * @generated from field: google.maps.routing.v2.Waypoint destination = 2;
   */
  destination?: Waypoint;

  /**
   * Optional. A set of waypoints along the route (excluding terminal points),
   * for either stopping at or passing by. Up to 25 intermediate waypoints are
   * supported.
   *
   * @generated from field: repeated google.maps.routing.v2.Waypoint intermediates = 3;
   */
  intermediates: Waypoint[];

  /**
   * Optional. Specifies the mode of transportation.
   *
   * @generated from field: google.maps.routing.v2.RouteTravelMode travel_mode = 4;
   */
  travelMode: RouteTravelMode;

  /**
   * Optional. Specifies how to compute the route. The server
   * attempts to use the selected routing preference to compute the route. If
   *  the routing preference results in an error or an extra long latency, then
   * an error is returned. You can specify this option only when the
   * `travel_mode` is `DRIVE` or `TWO_WHEELER`, otherwise the request fails.
   *
   * @generated from field: google.maps.routing.v2.RoutingPreference routing_preference = 5;
   */
  routingPreference: RoutingPreference;

  /**
   * Optional. Specifies your preference for the quality of the polyline.
   *
   * @generated from field: google.maps.routing.v2.PolylineQuality polyline_quality = 6;
   */
  polylineQuality: PolylineQuality;

  /**
   * Optional. Specifies the preferred encoding for the polyline.
   *
   * @generated from field: google.maps.routing.v2.PolylineEncoding polyline_encoding = 12;
   */
  polylineEncoding: PolylineEncoding;

  /**
   * Optional. The departure time. If you don't set this value, then this value
   * defaults to the time that you made the request.
   * NOTE: You can only specify a `departure_time` in the past when
   * [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode] is set to
   * `TRANSIT`. Transit trips are available for up to 7 days in the past or 100
   * days in the future.
   *
   * @generated from field: google.protobuf.Timestamp departure_time = 7;
   */
  departureTime?: Timestamp;

  /**
   * Optional. The arrival time.
   * NOTE: Can only be set when
   * [RouteTravelMode][google.maps.routing.v2.RouteTravelMode] is set to
   * `TRANSIT`. You can specify either `departure_time` or `arrival_time`, but
   * not both. Transit trips are available for up to 7 days in the past or 100
   * days in the future.
   *
   * @generated from field: google.protobuf.Timestamp arrival_time = 19;
   */
  arrivalTime?: Timestamp;

  /**
   * Optional. Specifies whether to calculate alternate routes in addition to
   * the route. No alternative routes are returned for requests that have
   * intermediate waypoints.
   *
   * @generated from field: bool compute_alternative_routes = 8;
   */
  computeAlternativeRoutes: boolean;

  /**
   * Optional. A set of conditions to satisfy that affect the way routes are
   * calculated.
   *
   * @generated from field: google.maps.routing.v2.RouteModifiers route_modifiers = 9;
   */
  routeModifiers?: RouteModifiers;

  /**
   * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
   * information, see [Unicode Locale
   * Identifier](http://www.unicode.org/reports/tr35/#Unicode_locale_identifier).
   * See [Language
   * Support](https://developers.google.com/maps/faq#languagesupport)
   * for the list of supported languages. When you don't provide this value, the
   * display language is inferred from the location of the route request.
   *
   * @generated from field: string language_code = 10;
   */
  languageCode: string;

  /**
   * Optional. The region code, specified as a ccTLD ("top-level domain")
   * two-character value. For more information see [Country code top-level
   * domains](https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#Country_code_top-level_domains).
   *
   * @generated from field: string region_code = 16;
   */
  regionCode: string;

  /**
   * Optional. Specifies the units of measure for the display fields. These
   * fields include the `instruction` field in
   * [`NavigationInstruction`][google.maps.routing.v2.NavigationInstruction].
   * The units of measure used for the route, leg, step distance, and duration
   * are not affected by this value. If you don't provide this value, then the
   * display units are inferred from the location of the first origin.
   *
   * @generated from field: google.maps.routing.v2.Units units = 11;
   */
  units: Units;

  /**
   * Optional. If set to true, the service attempts to minimize the overall cost
   * of the route by re-ordering the specified intermediate waypoints. The
   * request fails if any of the intermediate waypoints is a `via` waypoint. Use
   * `ComputeRoutesResponse.Routes.optimized_intermediate_waypoint_index` to
   * find the new ordering.
   * If `ComputeRoutesResponseroutes.optimized_intermediate_waypoint_index` is
   * not requested in the `X-Goog-FieldMask` header, the request fails.
   * If `optimize_waypoint_order` is set to false,
   * `ComputeRoutesResponse.optimized_intermediate_waypoint_index` will be
   * empty.
   *
   * @generated from field: bool optimize_waypoint_order = 13;
   */
  optimizeWaypointOrder: boolean;

  /**
   * Optional. Specifies what reference routes to calculate as part of the
   * request in addition to the default route. A reference route is a route with
   * a different route calculation objective than the default route. For example
   * a `FUEL_EFFICIENT` reference route calculation takes into account various
   * parameters that would generate an optimal fuel efficient route.
   *
   * @generated from field: repeated google.maps.routing.v2.ComputeRoutesRequest.ReferenceRoute requested_reference_routes = 14;
   */
  requestedReferenceRoutes: ComputeRoutesRequest_ReferenceRoute[];

  /**
   * Optional. A list of extra computations which may be used to complete the
   * request. Note: These extra computations may return extra fields on the
   * response. These extra fields must also be specified in the field mask to be
   * returned in the response.
   *
   * @generated from field: repeated google.maps.routing.v2.ComputeRoutesRequest.ExtraComputation extra_computations = 15;
   */
  extraComputations: ComputeRoutesRequest_ExtraComputation[];

  /**
   * Optional. Specifies the assumptions to use when calculating time in
   * traffic. This setting affects the value returned in the duration field in
   * the
   * [`Route`][google.maps.routing.v2.Route] and
   * [`RouteLeg`][google.maps.routing.v2.RouteLeg] which contains the predicted
   * time in traffic based on historical averages.
   * `TrafficModel` is only available for requests that have set
   * [`RoutingPreference`][google.maps.routing.v2.RoutingPreference] to
   * `TRAFFIC_AWARE_OPTIMAL` and
   * [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode] to `DRIVE`.
   * Defaults to `BEST_GUESS` if traffic is requested and `TrafficModel` is not
   * specified.
   *
   * @generated from field: google.maps.routing.v2.TrafficModel traffic_model = 18;
   */
  trafficModel: TrafficModel;

  /**
   * Optional. Specifies preferences that influence the route returned for
   * `TRANSIT` routes. NOTE: You can only specify a `transit_preferences` when
   * [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode] is set to
   * `TRANSIT`.
   *
   * @generated from field: google.maps.routing.v2.TransitPreferences transit_preferences = 20;
   */
  transitPreferences?: TransitPreferences;
};

/**
 * Describes the message google.maps.routing.v2.ComputeRoutesRequest.
 * Use `create(ComputeRoutesRequestSchema)` to create a new message.
 */
export const ComputeRoutesRequestSchema: GenMessage<ComputeRoutesRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_routes_service, 0);

/**
 * A supported reference route on the ComputeRoutesRequest.
 *
 * @generated from enum google.maps.routing.v2.ComputeRoutesRequest.ReferenceRoute
 */
export enum ComputeRoutesRequest_ReferenceRoute {
  /**
   * Not used. Requests containing this value fail.
   *
   * @generated from enum value: REFERENCE_ROUTE_UNSPECIFIED = 0;
   */
  REFERENCE_ROUTE_UNSPECIFIED = 0,

  /**
   * Fuel efficient route. Routes labeled with this value are determined to be
   * optimized for parameters such as fuel consumption.
   *
   * @generated from enum value: FUEL_EFFICIENT = 1;
   */
  FUEL_EFFICIENT = 1,
}

/**
 * Describes the enum google.maps.routing.v2.ComputeRoutesRequest.ReferenceRoute.
 */
export const ComputeRoutesRequest_ReferenceRouteSchema: GenEnum<ComputeRoutesRequest_ReferenceRoute> = /*@__PURE__*/
  enumDesc(file_google_maps_routing_v2_routes_service, 0, 0);

/**
 * Extra computations to perform while completing the request.
 *
 * @generated from enum google.maps.routing.v2.ComputeRoutesRequest.ExtraComputation
 */
export enum ComputeRoutesRequest_ExtraComputation {
  /**
   * Not used. Requests containing this value will fail.
   *
   * @generated from enum value: EXTRA_COMPUTATION_UNSPECIFIED = 0;
   */
  EXTRA_COMPUTATION_UNSPECIFIED = 0,

  /**
   * Toll information for the route(s).
   *
   * @generated from enum value: TOLLS = 1;
   */
  TOLLS = 1,

  /**
   * Estimated fuel consumption for the route(s).
   *
   * @generated from enum value: FUEL_CONSUMPTION = 2;
   */
  FUEL_CONSUMPTION = 2,

  /**
   * Traffic aware polylines for the route(s).
   *
   * @generated from enum value: TRAFFIC_ON_POLYLINE = 3;
   */
  TRAFFIC_ON_POLYLINE = 3,

  /**
   * [`NavigationInstructions`](google.maps.routing.v2.NavigationInstructions.instructions)
   * presented as a formatted HTML text string. This content
   * is meant to be read as-is. This content is for display only.
   * Do not programmatically parse it.
   *
   * @generated from enum value: HTML_FORMATTED_NAVIGATION_INSTRUCTIONS = 4;
   */
  HTML_FORMATTED_NAVIGATION_INSTRUCTIONS = 4,
}

/**
 * Describes the enum google.maps.routing.v2.ComputeRoutesRequest.ExtraComputation.
 */
export const ComputeRoutesRequest_ExtraComputationSchema: GenEnum<ComputeRoutesRequest_ExtraComputation> = /*@__PURE__*/
  enumDesc(file_google_maps_routing_v2_routes_service, 0, 1);

/**
 * ComputeRoutes the response message.
 *
 * @generated from message google.maps.routing.v2.ComputeRoutesResponse
 */
export type ComputeRoutesResponse = Message<"google.maps.routing.v2.ComputeRoutesResponse"> & {
  /**
   * Contains an array of computed routes (up to three) when you specify
   * `compute_alternatives_routes`, and contains just one route when you don't.
   * When this array contains multiple entries, the first one is the most
   * recommended route. If the array is empty, then it means no route could be
   * found.
   *
   * @generated from field: repeated google.maps.routing.v2.Route routes = 1;
   */
  routes: Route[];

  /**
   * In some cases when the server is not able to compute the route results with
   * all of the input preferences, it may fallback to using a different way of
   * computation. When fallback mode is used, this field contains detailed info
   * about the fallback response. Otherwise this field is unset.
   *
   * @generated from field: google.maps.routing.v2.FallbackInfo fallback_info = 2;
   */
  fallbackInfo?: FallbackInfo;

  /**
   * Contains geocoding response info for waypoints specified as addresses.
   *
   * @generated from field: google.maps.routing.v2.GeocodingResults geocoding_results = 3;
   */
  geocodingResults?: GeocodingResults;
};

/**
 * Describes the message google.maps.routing.v2.ComputeRoutesResponse.
 * Use `create(ComputeRoutesResponseSchema)` to create a new message.
 */
export const ComputeRoutesResponseSchema: GenMessage<ComputeRoutesResponse> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_routes_service, 1);

/**
 * ComputeRouteMatrix request message
 *
 * @generated from message google.maps.routing.v2.ComputeRouteMatrixRequest
 */
export type ComputeRouteMatrixRequest = Message<"google.maps.routing.v2.ComputeRouteMatrixRequest"> & {
  /**
   * Required. Array of origins, which determines the rows of the response
   * matrix. Several size restrictions apply to the cardinality of origins and
   * destinations:
   *
   * * The sum of the number of origins + the number of destinations specified
   * as either `place_id` or `address` must be no greater than 50.
   * * The product of number of origins × number of destinations must be no
   * greater than 625 in any case.
   * * The product of the number of origins × number of destinations must be no
   * greater than 100 if routing_preference is set to `TRAFFIC_AWARE_OPTIMAL`.
   * * The product of the number of origins × number of destinations must be no
   * greater than 100 if travel_mode is set to `TRANSIT`.
   *
   * @generated from field: repeated google.maps.routing.v2.RouteMatrixOrigin origins = 1;
   */
  origins: RouteMatrixOrigin[];

  /**
   * Required. Array of destinations, which determines the columns of the
   * response matrix.
   *
   * @generated from field: repeated google.maps.routing.v2.RouteMatrixDestination destinations = 2;
   */
  destinations: RouteMatrixDestination[];

  /**
   * Optional. Specifies the mode of transportation.
   *
   * @generated from field: google.maps.routing.v2.RouteTravelMode travel_mode = 3;
   */
  travelMode: RouteTravelMode;

  /**
   * Optional. Specifies how to compute the route. The server attempts to use
   * the selected routing preference to compute the route. If the routing
   * preference results in an error or an extra long latency, an error is
   * returned. You can specify this option only when the `travel_mode` is
   * `DRIVE` or `TWO_WHEELER`, otherwise the request fails.
   *
   * @generated from field: google.maps.routing.v2.RoutingPreference routing_preference = 4;
   */
  routingPreference: RoutingPreference;

  /**
   * Optional. The departure time. If you don't set this value, then this value
   * defaults to the time that you made the request.
   * NOTE: You can only specify a `departure_time` in the past when
   * [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode] is set to
   * `TRANSIT`.
   *
   * @generated from field: google.protobuf.Timestamp departure_time = 5;
   */
  departureTime?: Timestamp;

  /**
   * Optional. The arrival time.
   * NOTE: Can only be set when
   * [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode] is set to
   * `TRANSIT`. You can specify either `departure_time` or `arrival_time`, but
   * not both.
   *
   * @generated from field: google.protobuf.Timestamp arrival_time = 11;
   */
  arrivalTime?: Timestamp;

  /**
   * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
   * information, see [Unicode Locale
   * Identifier](http://www.unicode.org/reports/tr35/#Unicode_locale_identifier).
   * See [Language
   * Support](https://developers.google.com/maps/faq#languagesupport)
   * for the list of supported languages. When you don't provide this value, the
   * display language is inferred from the location of the first origin.
   *
   * @generated from field: string language_code = 6;
   */
  languageCode: string;

  /**
   * Optional. The region code, specified as a ccTLD ("top-level domain")
   * two-character value. For more information see [Country code top-level
   * domains](https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#Country_code_top-level_domains).
   *
   * @generated from field: string region_code = 9;
   */
  regionCode: string;

  /**
   * Optional. Specifies the units of measure for the display fields.
   *
   * @generated from field: google.maps.routing.v2.Units units = 7;
   */
  units: Units;

  /**
   * Optional. A list of extra computations which may be used to complete the
   * request. Note: These extra computations may return extra fields on the
   * response. These extra fields must also be specified in the field mask to be
   * returned in the response.
   *
   * @generated from field: repeated google.maps.routing.v2.ComputeRouteMatrixRequest.ExtraComputation extra_computations = 8;
   */
  extraComputations: ComputeRouteMatrixRequest_ExtraComputation[];

  /**
   * Optional. Specifies the assumptions to use when calculating time in
   * traffic. This setting affects the value returned in the duration field in
   * the [RouteMatrixElement][google.maps.routing.v2.RouteMatrixElement] which
   * contains the predicted time in traffic based on historical averages.
   * [RoutingPreference][google.maps.routing.v2.RoutingPreference] to
   * `TRAFFIC_AWARE_OPTIMAL` and
   * [RouteTravelMode][google.maps.routing.v2.RouteTravelMode] to `DRIVE`.
   * Defaults to `BEST_GUESS` if traffic is requested and `TrafficModel` is not
   * specified.
   *
   * @generated from field: google.maps.routing.v2.TrafficModel traffic_model = 10;
   */
  trafficModel: TrafficModel;

  /**
   * Optional. Specifies preferences that influence the route returned for
   * `TRANSIT` routes. NOTE: You can only specify a `transit_preferences` when
   * [RouteTravelMode][google.maps.routing.v2.RouteTravelMode] is set to
   * `TRANSIT`.
   *
   * @generated from field: google.maps.routing.v2.TransitPreferences transit_preferences = 12;
   */
  transitPreferences?: TransitPreferences;
};

/**
 * Describes the message google.maps.routing.v2.ComputeRouteMatrixRequest.
 * Use `create(ComputeRouteMatrixRequestSchema)` to create a new message.
 */
export const ComputeRouteMatrixRequestSchema: GenMessage<ComputeRouteMatrixRequest> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_routes_service, 2);

/**
 * Extra computations to perform while completing the request.
 *
 * @generated from enum google.maps.routing.v2.ComputeRouteMatrixRequest.ExtraComputation
 */
export enum ComputeRouteMatrixRequest_ExtraComputation {
  /**
   * Not used. Requests containing this value will fail.
   *
   * @generated from enum value: EXTRA_COMPUTATION_UNSPECIFIED = 0;
   */
  EXTRA_COMPUTATION_UNSPECIFIED = 0,

  /**
   * Toll information for the matrix element(s).
   *
   * @generated from enum value: TOLLS = 1;
   */
  TOLLS = 1,
}

/**
 * Describes the enum google.maps.routing.v2.ComputeRouteMatrixRequest.ExtraComputation.
 */
export const ComputeRouteMatrixRequest_ExtraComputationSchema: GenEnum<ComputeRouteMatrixRequest_ExtraComputation> = /*@__PURE__*/
  enumDesc(file_google_maps_routing_v2_routes_service, 2, 0);

/**
 * A single origin for ComputeRouteMatrixRequest
 *
 * @generated from message google.maps.routing.v2.RouteMatrixOrigin
 */
export type RouteMatrixOrigin = Message<"google.maps.routing.v2.RouteMatrixOrigin"> & {
  /**
   * Required. Origin waypoint
   *
   * @generated from field: google.maps.routing.v2.Waypoint waypoint = 1;
   */
  waypoint?: Waypoint;

  /**
   * Optional. Modifiers for every route that takes this as the origin
   *
   * @generated from field: google.maps.routing.v2.RouteModifiers route_modifiers = 2;
   */
  routeModifiers?: RouteModifiers;
};

/**
 * Describes the message google.maps.routing.v2.RouteMatrixOrigin.
 * Use `create(RouteMatrixOriginSchema)` to create a new message.
 */
export const RouteMatrixOriginSchema: GenMessage<RouteMatrixOrigin> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_routes_service, 3);

/**
 * A single destination for ComputeRouteMatrixRequest
 *
 * @generated from message google.maps.routing.v2.RouteMatrixDestination
 */
export type RouteMatrixDestination = Message<"google.maps.routing.v2.RouteMatrixDestination"> & {
  /**
   * Required. Destination waypoint
   *
   * @generated from field: google.maps.routing.v2.Waypoint waypoint = 1;
   */
  waypoint?: Waypoint;
};

/**
 * Describes the message google.maps.routing.v2.RouteMatrixDestination.
 * Use `create(RouteMatrixDestinationSchema)` to create a new message.
 */
export const RouteMatrixDestinationSchema: GenMessage<RouteMatrixDestination> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_routes_service, 4);

/**
 * Contains route information computed for an origin/destination pair in the
 * ComputeRouteMatrix API. This proto can be streamed to the client.
 *
 * @generated from message google.maps.routing.v2.RouteMatrixElement
 */
export type RouteMatrixElement = Message<"google.maps.routing.v2.RouteMatrixElement"> & {
  /**
   * Zero-based index of the origin in the request.
   *
   * @generated from field: optional int32 origin_index = 1;
   */
  originIndex?: number;

  /**
   * Zero-based index of the destination in the request.
   *
   * @generated from field: optional int32 destination_index = 2;
   */
  destinationIndex?: number;

  /**
   * Error status code for this element.
   *
   * @generated from field: google.rpc.Status status = 3;
   */
  status?: Status;

  /**
   * Indicates whether the route was found or not. Independent of status.
   *
   * @generated from field: google.maps.routing.v2.RouteMatrixElementCondition condition = 9;
   */
  condition: RouteMatrixElementCondition;

  /**
   * The travel distance of the route, in meters.
   *
   * @generated from field: int32 distance_meters = 4;
   */
  distanceMeters: number;

  /**
   * The length of time needed to navigate the route. If you set the
   * [routing_preference][google.maps.routing.v2.ComputeRouteMatrixRequest.routing_preference]
   * to `TRAFFIC_UNAWARE`, then this value is the same as `static_duration`. If
   * you set the `routing_preference` to either `TRAFFIC_AWARE` or
   * `TRAFFIC_AWARE_OPTIMAL`, then this value is calculated taking traffic
   * conditions into account.
   *
   * @generated from field: google.protobuf.Duration duration = 5;
   */
  duration?: Duration;

  /**
   * The duration of traveling through the route without taking traffic
   * conditions into consideration.
   *
   * @generated from field: google.protobuf.Duration static_duration = 6;
   */
  staticDuration?: Duration;

  /**
   * Additional information about the route. For example: restriction
   * information and toll information
   *
   * @generated from field: google.maps.routing.v2.RouteTravelAdvisory travel_advisory = 7;
   */
  travelAdvisory?: RouteTravelAdvisory;

  /**
   * In some cases when the server is not able to compute the route with the
   * given preferences for this particular origin/destination pair, it may
   * fall back to using a different mode of computation. When fallback mode is
   * used, this field contains detailed information about the fallback response.
   * Otherwise this field is unset.
   *
   * @generated from field: google.maps.routing.v2.FallbackInfo fallback_info = 8;
   */
  fallbackInfo?: FallbackInfo;

  /**
   * Text representations of properties of the `RouteMatrixElement`.
   *
   * @generated from field: google.maps.routing.v2.RouteMatrixElement.LocalizedValues localized_values = 10;
   */
  localizedValues?: RouteMatrixElement_LocalizedValues;
};

/**
 * Describes the message google.maps.routing.v2.RouteMatrixElement.
 * Use `create(RouteMatrixElementSchema)` to create a new message.
 */
export const RouteMatrixElementSchema: GenMessage<RouteMatrixElement> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_routes_service, 5);

/**
 * Text representations of certain properties.
 *
 * @generated from message google.maps.routing.v2.RouteMatrixElement.LocalizedValues
 */
export type RouteMatrixElement_LocalizedValues = Message<"google.maps.routing.v2.RouteMatrixElement.LocalizedValues"> & {
  /**
   * Travel distance represented in text form.
   *
   * @generated from field: google.type.LocalizedText distance = 1;
   */
  distance?: LocalizedText;

  /**
   * Duration represented in text form taking traffic conditions into
   * consideration. Note: If traffic information was not requested, this value
   * is the same value as static_duration.
   *
   * @generated from field: google.type.LocalizedText duration = 2;
   */
  duration?: LocalizedText;

  /**
   * Duration represented in text form without taking traffic conditions into
   * consideration.
   *
   * @generated from field: google.type.LocalizedText static_duration = 3;
   */
  staticDuration?: LocalizedText;

  /**
   * Transit fare represented in text form.
   *
   * @generated from field: google.type.LocalizedText transit_fare = 4;
   */
  transitFare?: LocalizedText;
};

/**
 * Describes the message google.maps.routing.v2.RouteMatrixElement.LocalizedValues.
 * Use `create(RouteMatrixElement_LocalizedValuesSchema)` to create a new message.
 */
export const RouteMatrixElement_LocalizedValuesSchema: GenMessage<RouteMatrixElement_LocalizedValues> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_routes_service, 5, 0);

/**
 * The condition of the route being returned.
 *
 * @generated from enum google.maps.routing.v2.RouteMatrixElementCondition
 */
export enum RouteMatrixElementCondition {
  /**
   * Only used when the `status` of the element is not OK.
   *
   * @generated from enum value: ROUTE_MATRIX_ELEMENT_CONDITION_UNSPECIFIED = 0;
   */
  ROUTE_MATRIX_ELEMENT_CONDITION_UNSPECIFIED = 0,

  /**
   * A route was found, and the corresponding information was filled out for the
   * element.
   *
   * @generated from enum value: ROUTE_EXISTS = 1;
   */
  ROUTE_EXISTS = 1,

  /**
   * No route could be found. Fields containing route information, such as
   * `distance_meters` or `duration`, will not be filled out in the element.
   *
   * @generated from enum value: ROUTE_NOT_FOUND = 2;
   */
  ROUTE_NOT_FOUND = 2,
}

/**
 * Describes the enum google.maps.routing.v2.RouteMatrixElementCondition.
 */
export const RouteMatrixElementConditionSchema: GenEnum<RouteMatrixElementCondition> = /*@__PURE__*/
  enumDesc(file_google_maps_routing_v2_routes_service, 0);

/**
 * The Routes API.
 *
 * @generated from service google.maps.routing.v2.Routes
 */
export const Routes: GenService<{
  /**
   * Returns the primary route along with optional alternate routes, given a set
   * of terminal and intermediate waypoints.
   *
   * **NOTE:** This method requires that you specify a response field mask in
   * the input. You can provide the response field mask by using URL parameter
   * `$fields` or `fields`, or by using an HTTP/gRPC header `X-Goog-FieldMask`
   * (see the [available URL parameters and
   * headers](https://cloud.google.com/apis/docs/system-parameters)). The value
   * is a comma separated list of field paths. See detailed documentation about
   * [how to construct the field
   * paths](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/field_mask.proto).
   *
   * For example, in this method:
   *
   * * Field mask of all available fields (for manual inspection):
   *   `X-Goog-FieldMask: *`
   * * Field mask of Route-level duration, distance, and polyline (an example
   * production setup):
   *   `X-Goog-FieldMask:
   *   routes.duration,routes.distanceMeters,routes.polyline.encodedPolyline`
   *
   * Google discourage the use of the wildcard (`*`) response field mask, or
   * specifying the field mask at the top level (`routes`), because:
   *
   * * Selecting only the fields that you need helps our server save computation
   * cycles, allowing us to return the result to you with a lower latency.
   * * Selecting only the fields that you need
   * in your production job ensures stable latency performance. We might add
   * more response fields in the future, and those new fields might require
   * extra computation time. If you select all fields, or if you select all
   * fields at the top level, then you might experience performance degradation
   * because any new field we add will be automatically included in the
   * response.
   * * Selecting only the fields that you need results in a smaller response
   * size, and thus higher network throughput.
   *
   * @generated from rpc google.maps.routing.v2.Routes.ComputeRoutes
   */
  computeRoutes: {
    methodKind: "unary";
    input: typeof ComputeRoutesRequestSchema;
    output: typeof ComputeRoutesResponseSchema;
  },
  /**
   * Takes in a list of origins and destinations and returns a stream containing
   * route information for each combination of origin and destination.
   *
   * **NOTE:** This method requires that you specify a response field mask in
   * the input. You can provide the response field mask by using the URL
   * parameter `$fields` or `fields`, or by using the HTTP/gRPC header
   * `X-Goog-FieldMask` (see the [available URL parameters and
   * headers](https://cloud.google.com/apis/docs/system-parameters)).
   * The value is a comma separated list of field paths. See this detailed
   * documentation about [how to construct the field
   * paths](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/field_mask.proto).
   *
   * For example, in this method:
   *
   * * Field mask of all available fields (for manual inspection):
   *   `X-Goog-FieldMask: *`
   * * Field mask of route durations, distances, element status, condition, and
   *   element indices (an example production setup):
   *   `X-Goog-FieldMask:
   *   originIndex,destinationIndex,status,condition,distanceMeters,duration`
   *
   * It is critical that you include `status` in your field mask as otherwise
   * all messages will appear to be OK. Google discourages the use of the
   * wildcard (`*`) response field mask, because:
   *
   * * Selecting only the fields that you need helps our server save computation
   * cycles, allowing us to return the result to you with a lower latency.
   * * Selecting only the fields that you need in your production job ensures
   * stable latency performance. We might add more response fields in the
   * future, and those new fields might require extra computation time. If you
   * select all fields, or if you select all fields at the top level, then you
   * might experience performance degradation because any new field we add will
   * be automatically included in the response.
   * * Selecting only the fields that you need results in a smaller response
   * size, and thus higher network throughput.
   *
   * @generated from rpc google.maps.routing.v2.Routes.ComputeRouteMatrix
   */
  computeRouteMatrix: {
    methodKind: "server_streaming";
    input: typeof ComputeRouteMatrixRequestSchema;
    output: typeof RouteMatrixElementSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_maps_routing_v2_routes_service, 0);

