// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/routing/v2/route_modifiers.proto (package google.maps.routing.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { TollPass } from "./toll_passes_pb";
import { file_google_maps_routing_v2_toll_passes } from "./toll_passes_pb";
import type { VehicleInfo } from "./vehicle_info_pb";
import { file_google_maps_routing_v2_vehicle_info } from "./vehicle_info_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/routing/v2/route_modifiers.proto.
 */
export const file_google_maps_routing_v2_route_modifiers: GenFile = /*@__PURE__*/
  fileDesc("Cixnb29nbGUvbWFwcy9yb3V0aW5nL3YyL3JvdXRlX21vZGlmaWVycy5wcm90bxIWZ29vZ2xlLm1hcHMucm91dGluZy52MiLcAQoOUm91dGVNb2RpZmllcnMSEwoLYXZvaWRfdG9sbHMYASABKAgSFgoOYXZvaWRfaGlnaHdheXMYAiABKAgSFQoNYXZvaWRfZmVycmllcxgDIAEoCBIUCgxhdm9pZF9pbmRvb3IYBCABKAgSOQoMdmVoaWNsZV9pbmZvGAUgASgLMiMuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5WZWhpY2xlSW5mbxI1Cgt0b2xsX3Bhc3NlcxgGIAMoDjIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuVG9sbFBhc3NCyAEKGmNvbS5nb29nbGUubWFwcy5yb3V0aW5nLnYyQhNSb3V0ZU1vZGlmaWVyc1Byb3RvUAFaOmNsb3VkLmdvb2dsZS5jb20vZ28vbWFwcy9yb3V0aW5nL2FwaXYyL3JvdXRpbmdwYjtyb3V0aW5ncGL4AQGiAgVHTVJWMqoCFkdvb2dsZS5NYXBzLlJvdXRpbmcuVjLKAhZHb29nbGVcTWFwc1xSb3V0aW5nXFYy6gIZR29vZ2xlOjpNYXBzOjpSb3V0aW5nOjpWMmIGcHJvdG8z", [file_google_maps_routing_v2_toll_passes, file_google_maps_routing_v2_vehicle_info]);

/**
 * Encapsulates a set of optional conditions to satisfy when calculating the
 * routes.
 *
 * @generated from message google.maps.routing.v2.RouteModifiers
 */
export type RouteModifiers = Message<"google.maps.routing.v2.RouteModifiers"> & {
  /**
   * When set to true, avoids toll roads where reasonable, giving preference to
   * routes not containing toll roads. Applies only to the `DRIVE` and
   * `TWO_WHEELER` [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode].
   *
   * @generated from field: bool avoid_tolls = 1;
   */
  avoidTolls: boolean;

  /**
   * When set to true, avoids highways where reasonable, giving preference to
   * routes not containing highways. Applies only to the `DRIVE` and
   * `TWO_WHEELER` [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode].
   *
   * @generated from field: bool avoid_highways = 2;
   */
  avoidHighways: boolean;

  /**
   * When set to true, avoids ferries where reasonable, giving preference to
   * routes not containing ferries. Applies only to the `DRIVE` and`TWO_WHEELER`
   * [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode].
   *
   * @generated from field: bool avoid_ferries = 3;
   */
  avoidFerries: boolean;

  /**
   * When set to true, avoids navigating indoors where reasonable, giving
   * preference to routes not containing indoor navigation. Applies only to the
   * `WALK` [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode].
   *
   * @generated from field: bool avoid_indoor = 4;
   */
  avoidIndoor: boolean;

  /**
   * Specifies the vehicle information.
   *
   * @generated from field: google.maps.routing.v2.VehicleInfo vehicle_info = 5;
   */
  vehicleInfo?: VehicleInfo;

  /**
   * Encapsulates information about toll passes.
   * If toll passes are provided, the API tries to return the pass price. If
   * toll passes are not provided, the API treats the toll pass as unknown and
   * tries to return the cash price.
   * Applies only to the `DRIVE` and `TWO_WHEELER`
   * [`RouteTravelMode`][google.maps.routing.v2.RouteTravelMode].
   *
   * @generated from field: repeated google.maps.routing.v2.TollPass toll_passes = 6;
   */
  tollPasses: TollPass[];
};

/**
 * Describes the message google.maps.routing.v2.RouteModifiers.
 * Use `create(RouteModifiersSchema)` to create a new message.
 */
export const RouteModifiersSchema: GenMessage<RouteModifiers> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route_modifiers, 0);

