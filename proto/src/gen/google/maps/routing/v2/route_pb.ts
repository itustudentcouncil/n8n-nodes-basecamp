// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/routing/v2/route.proto (package google.maps.routing.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Viewport } from "../../../geo/type/viewport_pb";
import { file_google_geo_type_viewport } from "../../../geo/type/viewport_pb";
import type { LocalizedTime } from "./localized_time_pb";
import { file_google_maps_routing_v2_localized_time } from "./localized_time_pb";
import type { Location } from "./location_pb";
import { file_google_maps_routing_v2_location } from "./location_pb";
import type { NavigationInstruction } from "./navigation_instruction_pb";
import { file_google_maps_routing_v2_navigation_instruction } from "./navigation_instruction_pb";
import type { Polyline } from "./polyline_pb";
import { file_google_maps_routing_v2_polyline } from "./polyline_pb";
import type { RouteLabel } from "./route_label_pb";
import { file_google_maps_routing_v2_route_label } from "./route_label_pb";
import type { RouteTravelMode } from "./route_travel_mode_pb";
import { file_google_maps_routing_v2_route_travel_mode } from "./route_travel_mode_pb";
import type { SpeedReadingInterval } from "./speed_reading_interval_pb";
import { file_google_maps_routing_v2_speed_reading_interval } from "./speed_reading_interval_pb";
import type { TollInfo } from "./toll_info_pb";
import { file_google_maps_routing_v2_toll_info } from "./toll_info_pb";
import type { TransitLine, TransitStop } from "./transit_pb";
import { file_google_maps_routing_v2_transit } from "./transit_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { LocalizedText } from "../../../type/localized_text_pb";
import { file_google_type_localized_text } from "../../../type/localized_text_pb";
import type { Money } from "../../../type/money_pb";
import { file_google_type_money } from "../../../type/money_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/routing/v2/route.proto.
 */
export const file_google_maps_routing_v2_route: GenFile = /*@__PURE__*/
  fileDesc("CiJnb29nbGUvbWFwcy9yb3V0aW5nL3YyL3JvdXRlLnByb3RvEhZnb29nbGUubWFwcy5yb3V0aW5nLnYyIqcGCgVSb3V0ZRI4Cgxyb3V0ZV9sYWJlbHMYDSADKA4yIi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlJvdXRlTGFiZWwSLgoEbGVncxgBIAMoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUm91dGVMZWcSFwoPZGlzdGFuY2VfbWV0ZXJzGAIgASgFEisKCGR1cmF0aW9uGAMgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEjIKD3N0YXRpY19kdXJhdGlvbhgEIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIyCghwb2x5bGluZRgFIAEoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUG9seWxpbmUSEwoLZGVzY3JpcHRpb24YBiABKAkSEAoId2FybmluZ3MYByADKAkSKwoIdmlld3BvcnQYCCABKAsyGS5nb29nbGUuZ2VvLnR5cGUuVmlld3BvcnQSRAoPdHJhdmVsX2Fkdmlzb3J5GAkgASgLMisuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Sb3V0ZVRyYXZlbEFkdmlzb3J5Ei0KJW9wdGltaXplZF9pbnRlcm1lZGlhdGVfd2F5cG9pbnRfaW5kZXgYCiADKAUSTAoQbG9jYWxpemVkX3ZhbHVlcxgLIAEoCzIyLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUm91dGUuUm91dGVMb2NhbGl6ZWRWYWx1ZXMSEwoLcm91dGVfdG9rZW4YDCABKAka2QEKFFJvdXRlTG9jYWxpemVkVmFsdWVzEiwKCGRpc3RhbmNlGAEgASgLMhouZ29vZ2xlLnR5cGUuTG9jYWxpemVkVGV4dBIsCghkdXJhdGlvbhgCIAEoCzIaLmdvb2dsZS50eXBlLkxvY2FsaXplZFRleHQSMwoPc3RhdGljX2R1cmF0aW9uGAMgASgLMhouZ29vZ2xlLnR5cGUuTG9jYWxpemVkVGV4dBIwCgx0cmFuc2l0X2ZhcmUYBCABKAsyGi5nb29nbGUudHlwZS5Mb2NhbGl6ZWRUZXh0IpcCChNSb3V0ZVRyYXZlbEFkdmlzb3J5EjMKCXRvbGxfaW5mbxgCIAEoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuVG9sbEluZm8STQoXc3BlZWRfcmVhZGluZ19pbnRlcnZhbHMYAyADKAsyLC5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlNwZWVkUmVhZGluZ0ludGVydmFsEiQKHGZ1ZWxfY29uc3VtcHRpb25fbWljcm9saXRlcnMYBSABKAMSLAokcm91dGVfcmVzdHJpY3Rpb25zX3BhcnRpYWxseV9pZ25vcmVkGAYgASgIEigKDHRyYW5zaXRfZmFyZRgHIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5IpwBChZSb3V0ZUxlZ1RyYXZlbEFkdmlzb3J5EjMKCXRvbGxfaW5mbxgBIAEoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuVG9sbEluZm8STQoXc3BlZWRfcmVhZGluZ19pbnRlcnZhbHMYAiADKAsyLC5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlNwZWVkUmVhZGluZ0ludGVydmFsImsKGlJvdXRlTGVnU3RlcFRyYXZlbEFkdmlzb3J5Ek0KF3NwZWVkX3JlYWRpbmdfaW50ZXJ2YWxzGAEgAygLMiwuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5TcGVlZFJlYWRpbmdJbnRlcnZhbCLqCAoIUm91dGVMZWcSFwoPZGlzdGFuY2VfbWV0ZXJzGAEgASgFEisKCGR1cmF0aW9uGAIgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEjIKD3N0YXRpY19kdXJhdGlvbhgDIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIyCghwb2x5bGluZRgEIAEoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUG9seWxpbmUSOAoOc3RhcnRfbG9jYXRpb24YBSABKAsyIC5nb29nbGUubWFwcy5yb3V0aW5nLnYyLkxvY2F0aW9uEjYKDGVuZF9sb2NhdGlvbhgGIAEoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuTG9jYXRpb24SMwoFc3RlcHMYByADKAsyJC5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlJvdXRlTGVnU3RlcBJHCg90cmF2ZWxfYWR2aXNvcnkYCCABKAsyLi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlJvdXRlTGVnVHJhdmVsQWR2aXNvcnkSUgoQbG9jYWxpemVkX3ZhbHVlcxgJIAEoCzI4Lmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUm91dGVMZWcuUm91dGVMZWdMb2NhbGl6ZWRWYWx1ZXMSRgoOc3RlcHNfb3ZlcnZpZXcYCiABKAsyLi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlJvdXRlTGVnLlN0ZXBzT3ZlcnZpZXcaqgEKF1JvdXRlTGVnTG9jYWxpemVkVmFsdWVzEiwKCGRpc3RhbmNlGAEgASgLMhouZ29vZ2xlLnR5cGUuTG9jYWxpemVkVGV4dBIsCghkdXJhdGlvbhgCIAEoCzIaLmdvb2dsZS50eXBlLkxvY2FsaXplZFRleHQSMwoPc3RhdGljX2R1cmF0aW9uGAMgASgLMhouZ29vZ2xlLnR5cGUuTG9jYWxpemVkVGV4dBr2AgoNU3RlcHNPdmVydmlldxJeChRtdWx0aV9tb2RhbF9zZWdtZW50cxgBIAMoCzJALmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUm91dGVMZWcuU3RlcHNPdmVydmlldy5NdWx0aU1vZGFsU2VnbWVudBqEAgoRTXVsdGlNb2RhbFNlZ21lbnQSHQoQc3RlcF9zdGFydF9pbmRleBgBIAEoBUgAiAEBEhsKDnN0ZXBfZW5kX2luZGV4GAIgASgFSAGIAQESTQoWbmF2aWdhdGlvbl9pbnN0cnVjdGlvbhgDIAEoCzItLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuTmF2aWdhdGlvbkluc3RydWN0aW9uEjwKC3RyYXZlbF9tb2RlGAQgASgOMicuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Sb3V0ZVRyYXZlbE1vZGVCEwoRX3N0ZXBfc3RhcnRfaW5kZXhCEQoPX3N0ZXBfZW5kX2luZGV4IocGCgxSb3V0ZUxlZ1N0ZXASFwoPZGlzdGFuY2VfbWV0ZXJzGAEgASgFEjIKD3N0YXRpY19kdXJhdGlvbhgCIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIyCghwb2x5bGluZRgDIAEoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUG9seWxpbmUSOAoOc3RhcnRfbG9jYXRpb24YBCABKAsyIC5nb29nbGUubWFwcy5yb3V0aW5nLnYyLkxvY2F0aW9uEjYKDGVuZF9sb2NhdGlvbhgFIAEoCzIgLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuTG9jYXRpb24STQoWbmF2aWdhdGlvbl9pbnN0cnVjdGlvbhgGIAEoCzItLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuTmF2aWdhdGlvbkluc3RydWN0aW9uEksKD3RyYXZlbF9hZHZpc29yeRgHIAEoCzIyLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUm91dGVMZWdTdGVwVHJhdmVsQWR2aXNvcnkSWgoQbG9jYWxpemVkX3ZhbHVlcxgIIAEoCzJALmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUm91dGVMZWdTdGVwLlJvdXRlTGVnU3RlcExvY2FsaXplZFZhbHVlcxJLCg90cmFuc2l0X2RldGFpbHMYCSABKAsyMi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlJvdXRlTGVnU3RlcFRyYW5zaXREZXRhaWxzEjwKC3RyYXZlbF9tb2RlGAogASgOMicuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Sb3V0ZVRyYXZlbE1vZGUagAEKG1JvdXRlTGVnU3RlcExvY2FsaXplZFZhbHVlcxIsCghkaXN0YW5jZRgBIAEoCzIaLmdvb2dsZS50eXBlLkxvY2FsaXplZFRleHQSMwoPc3RhdGljX2R1cmF0aW9uGAMgASgLMhouZ29vZ2xlLnR5cGUuTG9jYWxpemVkVGV4dCKeBgoaUm91dGVMZWdTdGVwVHJhbnNpdERldGFpbHMSWwoMc3RvcF9kZXRhaWxzGAEgASgLMkUuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Sb3V0ZUxlZ1N0ZXBUcmFuc2l0RGV0YWlscy5UcmFuc2l0U3RvcERldGFpbHMSagoQbG9jYWxpemVkX3ZhbHVlcxgCIAEoCzJQLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuUm91dGVMZWdTdGVwVHJhbnNpdERldGFpbHMuVHJhbnNpdERldGFpbHNMb2NhbGl6ZWRWYWx1ZXMSEAoIaGVhZHNpZ24YAyABKAkSKgoHaGVhZHdheRgEIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhI5Cgx0cmFuc2l0X2xpbmUYBSABKAsyIy5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlRyYW5zaXRMaW5lEhIKCnN0b3BfY291bnQYBiABKAUSFwoPdHJpcF9zaG9ydF90ZXh0GAcgASgJGvIBChJUcmFuc2l0U3RvcERldGFpbHMSOQoMYXJyaXZhbF9zdG9wGAEgASgLMiMuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5UcmFuc2l0U3RvcBIwCgxhcnJpdmFsX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjsKDmRlcGFydHVyZV9zdG9wGAMgASgLMiMuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5UcmFuc2l0U3RvcBIyCg5kZXBhcnR1cmVfdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAamwEKHVRyYW5zaXREZXRhaWxzTG9jYWxpemVkVmFsdWVzEjsKDGFycml2YWxfdGltZRgBIAEoCzIlLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuTG9jYWxpemVkVGltZRI9Cg5kZXBhcnR1cmVfdGltZRgCIAEoCzIlLmdvb2dsZS5tYXBzLnJvdXRpbmcudjIuTG9jYWxpemVkVGltZUK/AQoaY29tLmdvb2dsZS5tYXBzLnJvdXRpbmcudjJCClJvdXRlUHJvdG9QAVo6Y2xvdWQuZ29vZ2xlLmNvbS9nby9tYXBzL3JvdXRpbmcvYXBpdjIvcm91dGluZ3BiO3JvdXRpbmdwYvgBAaICBUdNUlYyqgIWR29vZ2xlLk1hcHMuUm91dGluZy5WMsoCFkdvb2dsZVxNYXBzXFJvdXRpbmdcVjLqAhlHb29nbGU6Ok1hcHM6OlJvdXRpbmc6OlYyYgZwcm90bzM", [file_google_geo_type_viewport, file_google_maps_routing_v2_localized_time, file_google_maps_routing_v2_location, file_google_maps_routing_v2_navigation_instruction, file_google_maps_routing_v2_polyline, file_google_maps_routing_v2_route_label, file_google_maps_routing_v2_route_travel_mode, file_google_maps_routing_v2_speed_reading_interval, file_google_maps_routing_v2_toll_info, file_google_maps_routing_v2_transit, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_type_localized_text, file_google_type_money]);

/**
 * Contains a route, which consists of a series of connected road segments
 * that join beginning, ending, and intermediate waypoints.
 *
 * @generated from message google.maps.routing.v2.Route
 */
export type Route = Message<"google.maps.routing.v2.Route"> & {
  /**
   * Labels for the `Route` that are useful to identify specific properties
   * of the route to compare against others.
   *
   * @generated from field: repeated google.maps.routing.v2.RouteLabel route_labels = 13;
   */
  routeLabels: RouteLabel[];

  /**
   * A collection of legs (path segments between waypoints) that make up the
   * route. Each leg corresponds to the trip between two non-`via`
   * [`Waypoints`][google.maps.routing.v2.Waypoint]. For example, a route with
   * no intermediate waypoints has only one leg. A route that includes one
   * non-`via` intermediate waypoint has two legs. A route that includes one
   * `via` intermediate waypoint has one leg. The order of the legs matches the
   * order of waypoints from `origin` to `intermediates` to `destination`.
   *
   * @generated from field: repeated google.maps.routing.v2.RouteLeg legs = 1;
   */
  legs: RouteLeg[];

  /**
   * The travel distance of the route, in meters.
   *
   * @generated from field: int32 distance_meters = 2;
   */
  distanceMeters: number;

  /**
   * The length of time needed to navigate the route. If you set the
   * `routing_preference` to `TRAFFIC_UNAWARE`, then this value is the same as
   * `static_duration`. If you set the `routing_preference` to either
   * `TRAFFIC_AWARE` or `TRAFFIC_AWARE_OPTIMAL`, then this value is calculated
   * taking traffic conditions into account.
   *
   * @generated from field: google.protobuf.Duration duration = 3;
   */
  duration?: Duration;

  /**
   * The duration of travel through the route without taking traffic
   * conditions into consideration.
   *
   * @generated from field: google.protobuf.Duration static_duration = 4;
   */
  staticDuration?: Duration;

  /**
   * The overall route polyline. This polyline is the combined polyline of
   * all `legs`.
   *
   * @generated from field: google.maps.routing.v2.Polyline polyline = 5;
   */
  polyline?: Polyline;

  /**
   * A description of the route.
   *
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * An array of warnings to show when displaying the route.
   *
   * @generated from field: repeated string warnings = 7;
   */
  warnings: string[];

  /**
   * The viewport bounding box of the polyline.
   *
   * @generated from field: google.geo.type.Viewport viewport = 8;
   */
  viewport?: Viewport;

  /**
   * Additional information about the route.
   *
   * @generated from field: google.maps.routing.v2.RouteTravelAdvisory travel_advisory = 9;
   */
  travelAdvisory?: RouteTravelAdvisory;

  /**
   * If you set
   * [`optimize_waypoint_order`][google.maps.routing.v2.ComputeRoutesRequest.optimize_waypoint_order]
   * to true, this field contains the optimized ordering of intermediate
   * waypoints. Otherwise, this field is empty.
   * For example, if you give an input of Origin: LA; Intermediate waypoints:
   * Dallas, Bangor, Phoenix; Destination: New York; and the optimized
   * intermediate waypoint order is Phoenix, Dallas, Bangor, then this field
   * contains the values [2, 0, 1]. The index starts with 0 for the first
   * intermediate waypoint provided in the input.
   *
   * @generated from field: repeated int32 optimized_intermediate_waypoint_index = 10;
   */
  optimizedIntermediateWaypointIndex: number[];

  /**
   * Text representations of properties of the `Route`.
   *
   * @generated from field: google.maps.routing.v2.Route.RouteLocalizedValues localized_values = 11;
   */
  localizedValues?: Route_RouteLocalizedValues;

  /**
   * A web-safe, base64-encoded route token that can be passed to the Navigation
   * SDK, that allows the Navigation SDK to reconstruct the route during
   * navigation, and, in the event of rerouting, honor the original intention
   * when you created the route by calling ComputeRoutes. Customers should treat
   * this token as an opaque blob. It is not meant for reading or mutating.
   * NOTE: `Route.route_token` is only available for requests that have set
   * `ComputeRoutesRequest.routing_preference` to `TRAFFIC_AWARE` or
   * `TRAFFIC_AWARE_OPTIMAL`. `Route.route_token` is not supported for requests
   * that have Via waypoints.
   *
   * @generated from field: string route_token = 12;
   */
  routeToken: string;
};

/**
 * Describes the message google.maps.routing.v2.Route.
 * Use `create(RouteSchema)` to create a new message.
 */
export const RouteSchema: GenMessage<Route> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 0);

/**
 * Text representations of certain properties.
 *
 * @generated from message google.maps.routing.v2.Route.RouteLocalizedValues
 */
export type Route_RouteLocalizedValues = Message<"google.maps.routing.v2.Route.RouteLocalizedValues"> & {
  /**
   * Travel distance represented in text form.
   *
   * @generated from field: google.type.LocalizedText distance = 1;
   */
  distance?: LocalizedText;

  /**
   * Duration taking traffic conditions into consideration, represented in
   * text form. Note: If you did not request traffic information, this value
   * will be the same value as `static_duration`.
   *
   * @generated from field: google.type.LocalizedText duration = 2;
   */
  duration?: LocalizedText;

  /**
   * Duration without taking traffic conditions into consideration,
   * represented in text form.
   *
   * @generated from field: google.type.LocalizedText static_duration = 3;
   */
  staticDuration?: LocalizedText;

  /**
   * Transit fare represented in text form.
   *
   * @generated from field: google.type.LocalizedText transit_fare = 4;
   */
  transitFare?: LocalizedText;
};

/**
 * Describes the message google.maps.routing.v2.Route.RouteLocalizedValues.
 * Use `create(Route_RouteLocalizedValuesSchema)` to create a new message.
 */
export const Route_RouteLocalizedValuesSchema: GenMessage<Route_RouteLocalizedValues> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 0, 0);

/**
 * Contains the additional information that the user should be informed
 * about, such as possible traffic zone restrictions.
 *
 * @generated from message google.maps.routing.v2.RouteTravelAdvisory
 */
export type RouteTravelAdvisory = Message<"google.maps.routing.v2.RouteTravelAdvisory"> & {
  /**
   * Contains information about tolls on the route. This field is only populated
   * if tolls are expected on the route. If this field is set, but the
   * `estimatedPrice` subfield is not populated, then the route contains tolls,
   * but the estimated price is unknown. If this field is not set, then there
   * are no tolls expected on the route.
   *
   * @generated from field: google.maps.routing.v2.TollInfo toll_info = 2;
   */
  tollInfo?: TollInfo;

  /**
   * Speed reading intervals detailing traffic density. Applicable in case of
   * `TRAFFIC_AWARE` and `TRAFFIC_AWARE_OPTIMAL` routing preferences.
   * The intervals cover the entire polyline of the route without overlap.
   * The start point of a specified interval is the same as the end point of the
   * preceding interval.
   *
   * Example:
   *
   *     polyline: A ---- B ---- C ---- D ---- E ---- F ---- G
   *     speed_reading_intervals: [A,C), [C,D), [D,G).
   *
   * @generated from field: repeated google.maps.routing.v2.SpeedReadingInterval speed_reading_intervals = 3;
   */
  speedReadingIntervals: SpeedReadingInterval[];

  /**
   * The predicted fuel consumption in microliters.
   *
   * @generated from field: int64 fuel_consumption_microliters = 5;
   */
  fuelConsumptionMicroliters: bigint;

  /**
   * Returned route may have restrictions that are not suitable for requested
   * travel mode or route modifiers.
   *
   * @generated from field: bool route_restrictions_partially_ignored = 6;
   */
  routeRestrictionsPartiallyIgnored: boolean;

  /**
   * If present, contains the total fare or ticket costs on this route
   * This property is only returned for `TRANSIT` requests and only
   * for routes where fare information is available for all transit steps.
   *
   * @generated from field: google.type.Money transit_fare = 7;
   */
  transitFare?: Money;
};

/**
 * Describes the message google.maps.routing.v2.RouteTravelAdvisory.
 * Use `create(RouteTravelAdvisorySchema)` to create a new message.
 */
export const RouteTravelAdvisorySchema: GenMessage<RouteTravelAdvisory> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 1);

/**
 * Contains the additional information that the user should be informed
 * about on a leg step, such as possible traffic zone restrictions.
 *
 * @generated from message google.maps.routing.v2.RouteLegTravelAdvisory
 */
export type RouteLegTravelAdvisory = Message<"google.maps.routing.v2.RouteLegTravelAdvisory"> & {
  /**
   * Contains information about tolls on the specific `RouteLeg`.
   * This field is only populated if we expect there are tolls on the
   * `RouteLeg`. If this field is set but the estimated_price subfield is not
   * populated, we expect that road contains tolls but we do not know an
   * estimated price. If this field does not exist, then there is no toll on the
   * `RouteLeg`.
   *
   * @generated from field: google.maps.routing.v2.TollInfo toll_info = 1;
   */
  tollInfo?: TollInfo;

  /**
   * Speed reading intervals detailing traffic density. Applicable in case of
   * `TRAFFIC_AWARE` and `TRAFFIC_AWARE_OPTIMAL` routing preferences.
   * The intervals cover the entire polyline of the `RouteLeg` without overlap.
   * The start point of a specified interval is the same as the end point of the
   * preceding interval.
   *
   * Example:
   *
   *     polyline: A ---- B ---- C ---- D ---- E ---- F ---- G
   *     speed_reading_intervals: [A,C), [C,D), [D,G).
   *
   * @generated from field: repeated google.maps.routing.v2.SpeedReadingInterval speed_reading_intervals = 2;
   */
  speedReadingIntervals: SpeedReadingInterval[];
};

/**
 * Describes the message google.maps.routing.v2.RouteLegTravelAdvisory.
 * Use `create(RouteLegTravelAdvisorySchema)` to create a new message.
 */
export const RouteLegTravelAdvisorySchema: GenMessage<RouteLegTravelAdvisory> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 2);

/**
 * Contains the additional information that the user should be informed
 * about, such as possible traffic zone restrictions on a leg step.
 *
 * @generated from message google.maps.routing.v2.RouteLegStepTravelAdvisory
 */
export type RouteLegStepTravelAdvisory = Message<"google.maps.routing.v2.RouteLegStepTravelAdvisory"> & {
  /**
   * NOTE: This field is not currently populated.
   *
   * @generated from field: repeated google.maps.routing.v2.SpeedReadingInterval speed_reading_intervals = 1;
   */
  speedReadingIntervals: SpeedReadingInterval[];
};

/**
 * Describes the message google.maps.routing.v2.RouteLegStepTravelAdvisory.
 * Use `create(RouteLegStepTravelAdvisorySchema)` to create a new message.
 */
export const RouteLegStepTravelAdvisorySchema: GenMessage<RouteLegStepTravelAdvisory> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 3);

/**
 * Contains a segment between non-`via` waypoints.
 *
 * @generated from message google.maps.routing.v2.RouteLeg
 */
export type RouteLeg = Message<"google.maps.routing.v2.RouteLeg"> & {
  /**
   * The travel distance of the route leg, in meters.
   *
   * @generated from field: int32 distance_meters = 1;
   */
  distanceMeters: number;

  /**
   * The length of time needed to navigate the leg. If the `route_preference`
   * is set to `TRAFFIC_UNAWARE`, then this value is the same as
   * `static_duration`. If the `route_preference` is either `TRAFFIC_AWARE` or
   * `TRAFFIC_AWARE_OPTIMAL`, then this value is calculated taking traffic
   * conditions into account.
   *
   * @generated from field: google.protobuf.Duration duration = 2;
   */
  duration?: Duration;

  /**
   * The duration of travel through the leg, calculated without taking
   * traffic conditions into consideration.
   *
   * @generated from field: google.protobuf.Duration static_duration = 3;
   */
  staticDuration?: Duration;

  /**
   * The overall polyline for this leg that includes each `step`'s
   * polyline.
   *
   * @generated from field: google.maps.routing.v2.Polyline polyline = 4;
   */
  polyline?: Polyline;

  /**
   * The start location of this leg. This location might be different from the
   * provided `origin`. For example, when the provided `origin` is not near a
   * road, this is a point on the road.
   *
   * @generated from field: google.maps.routing.v2.Location start_location = 5;
   */
  startLocation?: Location;

  /**
   * The end location of this leg. This location might be different from the
   * provided `destination`. For example, when the provided `destination` is not
   * near a road, this is a point on the road.
   *
   * @generated from field: google.maps.routing.v2.Location end_location = 6;
   */
  endLocation?: Location;

  /**
   * An array of steps denoting segments within this leg. Each step represents
   * one navigation instruction.
   *
   * @generated from field: repeated google.maps.routing.v2.RouteLegStep steps = 7;
   */
  steps: RouteLegStep[];

  /**
   * Contains the additional information that the user should be informed
   * about, such as possible traffic zone restrictions, on a route leg.
   *
   * @generated from field: google.maps.routing.v2.RouteLegTravelAdvisory travel_advisory = 8;
   */
  travelAdvisory?: RouteLegTravelAdvisory;

  /**
   * Text representations of properties of the `RouteLeg`.
   *
   * @generated from field: google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues localized_values = 9;
   */
  localizedValues?: RouteLeg_RouteLegLocalizedValues;

  /**
   * Overview information about the steps in this `RouteLeg`. This field is only
   * populated for TRANSIT routes.
   *
   * @generated from field: google.maps.routing.v2.RouteLeg.StepsOverview steps_overview = 10;
   */
  stepsOverview?: RouteLeg_StepsOverview;
};

/**
 * Describes the message google.maps.routing.v2.RouteLeg.
 * Use `create(RouteLegSchema)` to create a new message.
 */
export const RouteLegSchema: GenMessage<RouteLeg> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 4);

/**
 * Text representations of certain properties.
 *
 * @generated from message google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
 */
export type RouteLeg_RouteLegLocalizedValues = Message<"google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues"> & {
  /**
   * Travel distance represented in text form.
   *
   * @generated from field: google.type.LocalizedText distance = 1;
   */
  distance?: LocalizedText;

  /**
   * Duration taking traffic conditions into consideration represented in text
   * form. Note: If you did not request traffic information, this value will
   * be the same value as static_duration.
   *
   * @generated from field: google.type.LocalizedText duration = 2;
   */
  duration?: LocalizedText;

  /**
   * Duration without taking traffic conditions into
   * consideration, represented in text form.
   *
   * @generated from field: google.type.LocalizedText static_duration = 3;
   */
  staticDuration?: LocalizedText;
};

/**
 * Describes the message google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.
 * Use `create(RouteLeg_RouteLegLocalizedValuesSchema)` to create a new message.
 */
export const RouteLeg_RouteLegLocalizedValuesSchema: GenMessage<RouteLeg_RouteLegLocalizedValues> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 4, 0);

/**
 * Provides overview information about a list of `RouteLegStep`s.
 *
 * @generated from message google.maps.routing.v2.RouteLeg.StepsOverview
 */
export type RouteLeg_StepsOverview = Message<"google.maps.routing.v2.RouteLeg.StepsOverview"> & {
  /**
   * Summarized information about different multi-modal segments of
   * the `RouteLeg.steps`. This field is not populated if the `RouteLeg` does
   * not contain any multi-modal segments in the steps.
   *
   * @generated from field: repeated google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment multi_modal_segments = 1;
   */
  multiModalSegments: RouteLeg_StepsOverview_MultiModalSegment[];
};

/**
 * Describes the message google.maps.routing.v2.RouteLeg.StepsOverview.
 * Use `create(RouteLeg_StepsOverviewSchema)` to create a new message.
 */
export const RouteLeg_StepsOverviewSchema: GenMessage<RouteLeg_StepsOverview> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 4, 1);

/**
 * Provides summarized information about different multi-modal segments of
 * the `RouteLeg.steps`. A multi-modal segment is defined as one or more
 * contiguous `RouteLegStep` that have the same `RouteTravelMode`.
 * This field is not populated if the `RouteLeg` does not contain any
 * multi-modal segments in the steps.
 *
 * @generated from message google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
 */
export type RouteLeg_StepsOverview_MultiModalSegment = Message<"google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment"> & {
  /**
   * The corresponding `RouteLegStep` index that is the start of a
   * multi-modal segment.
   *
   * @generated from field: optional int32 step_start_index = 1;
   */
  stepStartIndex?: number;

  /**
   * The corresponding `RouteLegStep` index that is the end of a
   * multi-modal segment.
   *
   * @generated from field: optional int32 step_end_index = 2;
   */
  stepEndIndex?: number;

  /**
   * NavigationInstruction for the multi-modal segment.
   *
   * @generated from field: google.maps.routing.v2.NavigationInstruction navigation_instruction = 3;
   */
  navigationInstruction?: NavigationInstruction;

  /**
   * The travel mode of the multi-modal segment.
   *
   * @generated from field: google.maps.routing.v2.RouteTravelMode travel_mode = 4;
   */
  travelMode: RouteTravelMode;
};

/**
 * Describes the message google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment.
 * Use `create(RouteLeg_StepsOverview_MultiModalSegmentSchema)` to create a new message.
 */
export const RouteLeg_StepsOverview_MultiModalSegmentSchema: GenMessage<RouteLeg_StepsOverview_MultiModalSegment> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 4, 1, 0);

/**
 * Contains a segment of a [`RouteLeg`][google.maps.routing.v2.RouteLeg]. A
 * step corresponds to a single navigation instruction. Route legs are made up
 * of steps.
 *
 * @generated from message google.maps.routing.v2.RouteLegStep
 */
export type RouteLegStep = Message<"google.maps.routing.v2.RouteLegStep"> & {
  /**
   * The travel distance of this step, in meters. In some circumstances, this
   * field might not have a value.
   *
   * @generated from field: int32 distance_meters = 1;
   */
  distanceMeters: number;

  /**
   * The duration of travel through this step without taking traffic conditions
   * into consideration. In some circumstances, this field might not have a
   * value.
   *
   * @generated from field: google.protobuf.Duration static_duration = 2;
   */
  staticDuration?: Duration;

  /**
   * The polyline associated with this step.
   *
   * @generated from field: google.maps.routing.v2.Polyline polyline = 3;
   */
  polyline?: Polyline;

  /**
   * The start location of this step.
   *
   * @generated from field: google.maps.routing.v2.Location start_location = 4;
   */
  startLocation?: Location;

  /**
   * The end location of this step.
   *
   * @generated from field: google.maps.routing.v2.Location end_location = 5;
   */
  endLocation?: Location;

  /**
   * Navigation instructions.
   *
   * @generated from field: google.maps.routing.v2.NavigationInstruction navigation_instruction = 6;
   */
  navigationInstruction?: NavigationInstruction;

  /**
   * Contains the additional information that the user should be informed
   * about, such as possible traffic zone restrictions, on a leg step.
   *
   * @generated from field: google.maps.routing.v2.RouteLegStepTravelAdvisory travel_advisory = 7;
   */
  travelAdvisory?: RouteLegStepTravelAdvisory;

  /**
   * Text representations of properties of the `RouteLegStep`.
   *
   * @generated from field: google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues localized_values = 8;
   */
  localizedValues?: RouteLegStep_RouteLegStepLocalizedValues;

  /**
   * Details pertaining to this step if the travel mode is `TRANSIT`.
   *
   * @generated from field: google.maps.routing.v2.RouteLegStepTransitDetails transit_details = 9;
   */
  transitDetails?: RouteLegStepTransitDetails;

  /**
   * The travel mode used for this step.
   *
   * @generated from field: google.maps.routing.v2.RouteTravelMode travel_mode = 10;
   */
  travelMode: RouteTravelMode;
};

/**
 * Describes the message google.maps.routing.v2.RouteLegStep.
 * Use `create(RouteLegStepSchema)` to create a new message.
 */
export const RouteLegStepSchema: GenMessage<RouteLegStep> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 5);

/**
 * Text representations of certain properties.
 *
 * @generated from message google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
 */
export type RouteLegStep_RouteLegStepLocalizedValues = Message<"google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues"> & {
  /**
   * Travel distance represented in text form.
   *
   * @generated from field: google.type.LocalizedText distance = 1;
   */
  distance?: LocalizedText;

  /**
   * Duration without taking traffic conditions into
   * consideration, represented in text form.
   *
   * @generated from field: google.type.LocalizedText static_duration = 3;
   */
  staticDuration?: LocalizedText;
};

/**
 * Describes the message google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues.
 * Use `create(RouteLegStep_RouteLegStepLocalizedValuesSchema)` to create a new message.
 */
export const RouteLegStep_RouteLegStepLocalizedValuesSchema: GenMessage<RouteLegStep_RouteLegStepLocalizedValues> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 5, 0);

/**
 * Additional information for the `RouteLegStep` related to `TRANSIT` routes.
 *
 * @generated from message google.maps.routing.v2.RouteLegStepTransitDetails
 */
export type RouteLegStepTransitDetails = Message<"google.maps.routing.v2.RouteLegStepTransitDetails"> & {
  /**
   * Information about the arrival and departure stops for the step.
   *
   * @generated from field: google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails stop_details = 1;
   */
  stopDetails?: RouteLegStepTransitDetails_TransitStopDetails;

  /**
   * Text representations of properties of the `RouteLegStepTransitDetails`.
   *
   * @generated from field: google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues localized_values = 2;
   */
  localizedValues?: RouteLegStepTransitDetails_TransitDetailsLocalizedValues;

  /**
   * Specifies the direction in which to travel on this line as marked on
   * the vehicle or at the departure stop. The direction is often the terminus
   * station.
   *
   * @generated from field: string headsign = 3;
   */
  headsign: string;

  /**
   * Specifies the expected time as a duration between departures from the same
   * stop at this time. For example, with a headway seconds value of 600, you
   * would expect a ten minute wait if you should miss your bus.
   *
   * @generated from field: google.protobuf.Duration headway = 4;
   */
  headway?: Duration;

  /**
   * Information about the transit line used in this step.
   *
   * @generated from field: google.maps.routing.v2.TransitLine transit_line = 5;
   */
  transitLine?: TransitLine;

  /**
   * The number of stops from the departure to the arrival stop. This count
   * includes the arrival stop, but excludes the departure stop. For example, if
   * your route leaves from Stop A, passes through stops B and C, and arrives at
   * stop D, stop_count will return 3.
   *
   * @generated from field: int32 stop_count = 6;
   */
  stopCount: number;

  /**
   * The text that appears in schedules and sign boards to identify a transit
   * trip to passengers. The text should uniquely identify a trip within a
   * service day. For example, "538" is the `trip_short_text` of the Amtrak
   * train that leaves San Jose, CA at 15:10 on weekdays to Sacramento, CA.
   *
   * @generated from field: string trip_short_text = 7;
   */
  tripShortText: string;
};

/**
 * Describes the message google.maps.routing.v2.RouteLegStepTransitDetails.
 * Use `create(RouteLegStepTransitDetailsSchema)` to create a new message.
 */
export const RouteLegStepTransitDetailsSchema: GenMessage<RouteLegStepTransitDetails> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 6);

/**
 * Details about the transit stops for the `RouteLegStep`.
 *
 * @generated from message google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
 */
export type RouteLegStepTransitDetails_TransitStopDetails = Message<"google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails"> & {
  /**
   * Information about the arrival stop for the step.
   *
   * @generated from field: google.maps.routing.v2.TransitStop arrival_stop = 1;
   */
  arrivalStop?: TransitStop;

  /**
   * The estimated time of arrival for the step.
   *
   * @generated from field: google.protobuf.Timestamp arrival_time = 2;
   */
  arrivalTime?: Timestamp;

  /**
   * Information about the departure stop for the step.
   *
   * @generated from field: google.maps.routing.v2.TransitStop departure_stop = 3;
   */
  departureStop?: TransitStop;

  /**
   * The estimated time of departure for the step.
   *
   * @generated from field: google.protobuf.Timestamp departure_time = 4;
   */
  departureTime?: Timestamp;
};

/**
 * Describes the message google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.
 * Use `create(RouteLegStepTransitDetails_TransitStopDetailsSchema)` to create a new message.
 */
export const RouteLegStepTransitDetails_TransitStopDetailsSchema: GenMessage<RouteLegStepTransitDetails_TransitStopDetails> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 6, 0);

/**
 * Localized descriptions of values for `RouteTransitDetails`.
 *
 * @generated from message google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
 */
export type RouteLegStepTransitDetails_TransitDetailsLocalizedValues = Message<"google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues"> & {
  /**
   * Time in its formatted text representation with a corresponding time zone.
   *
   * @generated from field: google.maps.routing.v2.LocalizedTime arrival_time = 1;
   */
  arrivalTime?: LocalizedTime;

  /**
   * Time in its formatted text representation with a corresponding time zone.
   *
   * @generated from field: google.maps.routing.v2.LocalizedTime departure_time = 2;
   */
  departureTime?: LocalizedTime;
};

/**
 * Describes the message google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues.
 * Use `create(RouteLegStepTransitDetails_TransitDetailsLocalizedValuesSchema)` to create a new message.
 */
export const RouteLegStepTransitDetails_TransitDetailsLocalizedValuesSchema: GenMessage<RouteLegStepTransitDetails_TransitDetailsLocalizedValues> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_route, 6, 1);

