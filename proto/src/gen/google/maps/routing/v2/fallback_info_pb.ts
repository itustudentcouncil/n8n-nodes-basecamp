// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/maps/routing/v2/fallback_info.proto (package google.maps.routing.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/maps/routing/v2/fallback_info.proto.
 */
export const file_google_maps_routing_v2_fallback_info: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvbWFwcy9yb3V0aW5nL3YyL2ZhbGxiYWNrX2luZm8ucHJvdG8SFmdvb2dsZS5tYXBzLnJvdXRpbmcudjIiiQEKDEZhbGxiYWNrSW5mbxJBCgxyb3V0aW5nX21vZGUYASABKA4yKy5nb29nbGUubWFwcy5yb3V0aW5nLnYyLkZhbGxiYWNrUm91dGluZ01vZGUSNgoGcmVhc29uGAIgASgOMiYuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5GYWxsYmFja1JlYXNvbipZCg5GYWxsYmFja1JlYXNvbhIfChtGQUxMQkFDS19SRUFTT05fVU5TUEVDSUZJRUQQABIQCgxTRVJWRVJfRVJST1IQARIUChBMQVRFTkNZX0VYQ0VFREVEEAIqdgoTRmFsbGJhY2tSb3V0aW5nTW9kZRIlCiFGQUxMQkFDS19ST1VUSU5HX01PREVfVU5TUEVDSUZJRUQQABIcChhGQUxMQkFDS19UUkFGRklDX1VOQVdBUkUQARIaChZGQUxMQkFDS19UUkFGRklDX0FXQVJFEAJCxgEKGmNvbS5nb29nbGUubWFwcy5yb3V0aW5nLnYyQhFGYWxsYmFja0luZm9Qcm90b1ABWjpjbG91ZC5nb29nbGUuY29tL2dvL21hcHMvcm91dGluZy9hcGl2Mi9yb3V0aW5ncGI7cm91dGluZ3Bi+AEBogIFR01SVjKqAhZHb29nbGUuTWFwcy5Sb3V0aW5nLlYyygIWR29vZ2xlXE1hcHNcUm91dGluZ1xWMuoCGUdvb2dsZTo6TWFwczo6Um91dGluZzo6VjJiBnByb3RvMw");

/**
 * Information related to how and why a fallback result was used. If this field
 * is set, then it means the server used a different routing mode from your
 * preferred mode as fallback.
 *
 * @generated from message google.maps.routing.v2.FallbackInfo
 */
export type FallbackInfo = Message<"google.maps.routing.v2.FallbackInfo"> & {
  /**
   * Routing mode used for the response. If fallback was triggered, the mode
   * may be different from routing preference set in the original client
   * request.
   *
   * @generated from field: google.maps.routing.v2.FallbackRoutingMode routing_mode = 1;
   */
  routingMode: FallbackRoutingMode;

  /**
   * The reason why fallback response was used instead of the original response.
   * This field is only populated when the fallback mode is triggered and the
   * fallback response is returned.
   *
   * @generated from field: google.maps.routing.v2.FallbackReason reason = 2;
   */
  reason: FallbackReason;
};

/**
 * Describes the message google.maps.routing.v2.FallbackInfo.
 * Use `create(FallbackInfoSchema)` to create a new message.
 */
export const FallbackInfoSchema: GenMessage<FallbackInfo> = /*@__PURE__*/
  messageDesc(file_google_maps_routing_v2_fallback_info, 0);

/**
 * Reasons for using fallback response.
 *
 * @generated from enum google.maps.routing.v2.FallbackReason
 */
export enum FallbackReason {
  /**
   * No fallback reason specified.
   *
   * @generated from enum value: FALLBACK_REASON_UNSPECIFIED = 0;
   */
  FALLBACK_REASON_UNSPECIFIED = 0,

  /**
   * A server error happened while calculating routes with your preferred
   * routing mode, but we were able to return a result calculated by an
   * alternative mode.
   *
   * @generated from enum value: SERVER_ERROR = 1;
   */
  SERVER_ERROR = 1,

  /**
   * We were not able to finish the calculation with your preferred routing mode
   * on time, but we were able to return a result calculated by an alternative
   * mode.
   *
   * @generated from enum value: LATENCY_EXCEEDED = 2;
   */
  LATENCY_EXCEEDED = 2,
}

/**
 * Describes the enum google.maps.routing.v2.FallbackReason.
 */
export const FallbackReasonSchema: GenEnum<FallbackReason> = /*@__PURE__*/
  enumDesc(file_google_maps_routing_v2_fallback_info, 0);

/**
 * Actual routing mode used for returned fallback response.
 *
 * @generated from enum google.maps.routing.v2.FallbackRoutingMode
 */
export enum FallbackRoutingMode {
  /**
   * Not used.
   *
   * @generated from enum value: FALLBACK_ROUTING_MODE_UNSPECIFIED = 0;
   */
  FALLBACK_ROUTING_MODE_UNSPECIFIED = 0,

  /**
   * Indicates the `TRAFFIC_UNAWARE`
   * [`RoutingPreference`][google.maps.routing.v2.RoutingPreference] was used to
   * compute the response.
   *
   * @generated from enum value: FALLBACK_TRAFFIC_UNAWARE = 1;
   */
  FALLBACK_TRAFFIC_UNAWARE = 1,

  /**
   * Indicates the `TRAFFIC_AWARE`
   * [`RoutingPreference`][google.maps.routing.v2.RoutingPreference] was used to
   * compute the response.
   *
   * @generated from enum value: FALLBACK_TRAFFIC_AWARE = 2;
   */
  FALLBACK_TRAFFIC_AWARE = 2,
}

/**
 * Describes the enum google.maps.routing.v2.FallbackRoutingMode.
 */
export const FallbackRoutingModeSchema: GenEnum<FallbackRoutingMode> = /*@__PURE__*/
  enumDesc(file_google_maps_routing_v2_fallback_info, 1);

