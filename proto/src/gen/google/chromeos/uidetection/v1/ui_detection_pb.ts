// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/chromeos/uidetection/v1/ui_detection.proto (package google.chromeos.uidetection.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/chromeos/uidetection/v1/ui_detection.proto.
 */
export const file_google_chromeos_uidetection_v1_ui_detection: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2hyb21lb3MvdWlkZXRlY3Rpb24vdjEvdWlfZGV0ZWN0aW9uLnByb3RvEh5nb29nbGUuY2hyb21lb3MudWlkZXRlY3Rpb24udjEiyQIKElVpRGV0ZWN0aW9uUmVxdWVzdBIWCglpbWFnZV9wbmcYASABKAxCA+BBAhJGCgdyZXF1ZXN0GAIgASgLMjAuZ29vZ2xlLmNocm9tZW9zLnVpZGV0ZWN0aW9uLnYxLkRldGVjdGlvblJlcXVlc3RCA+BBAhIZCgxyZXNpemVfaW1hZ2UYAyABKAhIAIgBARITCgd0ZXN0X2lkGAQgASgJQgIYARJICg10ZXN0X21ldGFkYXRhGAUgASgLMiwuZ29vZ2xlLmNocm9tZW9zLnVpZGV0ZWN0aW9uLnYxLlRlc3RNZXRhZGF0YUID4EEBEiEKFGZvcmNlX2ltYWdlX3Jlc2l6aW5nGAYgASgIQgPgQQESJQoYcmV0dXJuX3RyYW5zZm9ybWVkX2ltYWdlGAcgASgIQgPgQQFCDwoNX3Jlc2l6ZV9pbWFnZSLMAgoQRGV0ZWN0aW9uUmVxdWVzdBJWChZ3b3JkX2RldGVjdGlvbl9yZXF1ZXN0GAEgASgLMjQuZ29vZ2xlLmNocm9tZW9zLnVpZGV0ZWN0aW9uLnYxLldvcmREZXRlY3Rpb25SZXF1ZXN0SAASYQocdGV4dF9ibG9ja19kZXRlY3Rpb25fcmVxdWVzdBgCIAEoCzI5Lmdvb2dsZS5jaHJvbWVvcy51aWRldGVjdGlvbi52MS5UZXh0QmxvY2tEZXRlY3Rpb25SZXF1ZXN0SAASYwodY3VzdG9tX2ljb25fZGV0ZWN0aW9uX3JlcXVlc3QYAyABKAsyOi5nb29nbGUuY2hyb21lb3MudWlkZXRlY3Rpb24udjEuQ3VzdG9tSWNvbkRldGVjdGlvblJlcXVlc3RIAEIYChZkZXRlY3Rpb25fcmVxdWVzdF90eXBlIlEKDFRlc3RNZXRhZGF0YRIPCgd0ZXN0X2lkGAEgASgJEg0KBWJvYXJkGAIgASgJEg0KBW1vZGVsGAMgASgJEhIKCmNyb3NfYnVpbGQYBCABKAkikQEKFFdvcmREZXRlY3Rpb25SZXF1ZXN0EhEKBHdvcmQYASABKAlCA+BBAhISCgpyZWdleF9tb2RlGAIgASgIEhwKFGRpc2FibGVfYXBwcm94X21hdGNoGAMgASgIEh4KEW1heF9lZGl0X2Rpc3RhbmNlGAQgASgFSACIAQFCFAoSX21heF9lZGl0X2Rpc3RhbmNlIrUBChlUZXh0QmxvY2tEZXRlY3Rpb25SZXF1ZXN0EhIKBXdvcmRzGAEgAygJQgPgQQISEgoKcmVnZXhfbW9kZRgCIAEoCBIcChRkaXNhYmxlX2FwcHJveF9tYXRjaBgDIAEoCBIeChFtYXhfZWRpdF9kaXN0YW5jZRgEIAEoBUgAiAEBEhwKFHNwZWNpZmllZF93b3Jkc19vbmx5GAUgASgIQhQKEl9tYXhfZWRpdF9kaXN0YW5jZSJqChpDdXN0b21JY29uRGV0ZWN0aW9uUmVxdWVzdBIVCghpY29uX3BuZxgBIAEoDEID4EECEhMKC21hdGNoX2NvdW50GAIgASgFEiAKGG1pbl9jb25maWRlbmNlX3RocmVzaG9sZBgDIAEoASKYAQoTVWlEZXRlY3Rpb25SZXNwb25zZRJDCg5ib3VuZGluZ19ib3hlcxgBIAMoCzIrLmdvb2dsZS5jaHJvbWVvcy51aWRldGVjdGlvbi52MS5Cb3VuZGluZ0JveBIdChV0cmFuc2Zvcm1lZF9pbWFnZV9wbmcYAiABKAwSHQoVcmVzaXppbmdfc2NhbGVfZmFjdG9yGAMgASgCIlUKC0JvdW5kaW5nQm94EgwKBHRleHQYASABKAkSCwoDdG9wGAIgASgFEgwKBGxlZnQYAyABKAUSDgoGYm90dG9tGAQgASgFEg0KBXJpZ2h0GAUgASgFMt8BChJVaURldGVjdGlvblNlcnZpY2USoQEKEEV4ZWN1dGVEZXRlY3Rpb24SMi5nb29nbGUuY2hyb21lb3MudWlkZXRlY3Rpb24udjEuVWlEZXRlY3Rpb25SZXF1ZXN0GjMuZ29vZ2xlLmNocm9tZW9zLnVpZGV0ZWN0aW9uLnYxLlVpRGV0ZWN0aW9uUmVzcG9uc2UiJILT5JMCHhIcL3YxL2V4ZWN1dGVEZXRlY3Rpb246ZXhlY3V0ZRolykEiY2hyb21lb3N1aWRldGVjdGlvbi5nb29nbGVhcGlzLmNvbUKDAQoiY29tLmdvb2dsZS5jaHJvbWVvcy51aWRldGVjdGlvbi52MUIQVWlEZXRlY3Rpb25Qcm90b1ABWklnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Nocm9tZW9zL3VpZGV0ZWN0aW9uL3YxO3VpZGV0ZWN0aW9uYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior]);

/**
 * Request message for UI detection.
 *
 * @generated from message google.chromeos.uidetection.v1.UiDetectionRequest
 */
export type UiDetectionRequest = Message<"google.chromeos.uidetection.v1.UiDetectionRequest"> & {
  /**
   * Required. Required field that represents a PNG image.
   *
   * @generated from field: bytes image_png = 1;
   */
  imagePng: Uint8Array;

  /**
   * Required. Required field that indicates the detection type.
   *
   * @generated from field: google.chromeos.uidetection.v1.DetectionRequest request = 2;
   */
  request?: DetectionRequest;

  /**
   * Indicates whether to fall back to resizing the image if no elements are
   * detected.
   *
   * @generated from field: optional bool resize_image = 3;
   */
  resizeImage?: boolean;

  /**
   * Deprecated as of 2023-03-29. Use test_metadata instead.
   *
   * @generated from field: string test_id = 4 [deprecated = true];
   * @deprecated
   */
  testId: string;

  /**
   * Optional. Metadata about the client for analytics.
   *
   * @generated from field: google.chromeos.uidetection.v1.TestMetadata test_metadata = 5;
   */
  testMetadata?: TestMetadata;

  /**
   * Optional. Indicates whether to always start by resizing the image.
   *
   * @generated from field: bool force_image_resizing = 6;
   */
  forceImageResizing: boolean;

  /**
   * Optional. Indicates whether to respond with the transformed image png.
   *
   * @generated from field: bool return_transformed_image = 7;
   */
  returnTransformedImage: boolean;
};

/**
 * Describes the message google.chromeos.uidetection.v1.UiDetectionRequest.
 * Use `create(UiDetectionRequestSchema)` to create a new message.
 */
export const UiDetectionRequestSchema: GenMessage<UiDetectionRequest> = /*@__PURE__*/
  messageDesc(file_google_chromeos_uidetection_v1_ui_detection, 0);

/**
 * Detection type specifies what to detect in the image.
 *
 * @generated from message google.chromeos.uidetection.v1.DetectionRequest
 */
export type DetectionRequest = Message<"google.chromeos.uidetection.v1.DetectionRequest"> & {
  /**
   * @generated from oneof google.chromeos.uidetection.v1.DetectionRequest.detection_request_type
   */
  detectionRequestType: {
    /**
     * Detection type for word detection.
     *
     * @generated from field: google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;
     */
    value: WordDetectionRequest;
    case: "wordDetectionRequest";
  } | {
    /**
     * Detection type for text block detection.
     *
     * @generated from field: google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;
     */
    value: TextBlockDetectionRequest;
    case: "textBlockDetectionRequest";
  } | {
    /**
     * Detection type for custom icon detection.
     *
     * @generated from field: google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;
     */
    value: CustomIconDetectionRequest;
    case: "customIconDetectionRequest";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.chromeos.uidetection.v1.DetectionRequest.
 * Use `create(DetectionRequestSchema)` to create a new message.
 */
export const DetectionRequestSchema: GenMessage<DetectionRequest> = /*@__PURE__*/
  messageDesc(file_google_chromeos_uidetection_v1_ui_detection, 1);

/**
 * Metadata about the client test and test device.
 *
 * @generated from message google.chromeos.uidetection.v1.TestMetadata
 */
export type TestMetadata = Message<"google.chromeos.uidetection.v1.TestMetadata"> & {
  /**
   * Name of the calling test. For example, 'tast.uidetection.BasicDetections'.
   *
   * @generated from field: string test_id = 1;
   */
  testId: string;

  /**
   * Board name of the ChromeOS device under test. For example, 'volteer'.
   *
   * @generated from field: string board = 2;
   */
  board: string;

  /**
   * Model name of the ChromeOS device under test. For example, 'volet'.
   *
   * @generated from field: string model = 3;
   */
  model: string;

  /**
   * ChromeOS build of the device under test.
   * For example, 'volteer-release/R110-15275.0.0-75031-8794956681263330561'.
   *
   * @generated from field: string cros_build = 4;
   */
  crosBuild: string;
};

/**
 * Describes the message google.chromeos.uidetection.v1.TestMetadata.
 * Use `create(TestMetadataSchema)` to create a new message.
 */
export const TestMetadataSchema: GenMessage<TestMetadata> = /*@__PURE__*/
  messageDesc(file_google_chromeos_uidetection_v1_ui_detection, 2);

/**
 * Detection type for word detection.
 *
 * @generated from message google.chromeos.uidetection.v1.WordDetectionRequest
 */
export type WordDetectionRequest = Message<"google.chromeos.uidetection.v1.WordDetectionRequest"> & {
  /**
   * Required. The word to locate in the image.
   *
   * @generated from field: string word = 1;
   */
  word: string;

  /**
   * Indicating whether the query string is a regex or not.
   *
   * @generated from field: bool regex_mode = 2;
   */
  regexMode: boolean;

  /**
   * Indicating whether the detection is an approximate match.
   *
   * @generated from field: bool disable_approx_match = 3;
   */
  disableApproxMatch: boolean;

  /**
   * Levenshtein distance threshold.
   * Applicable only if regex_mode is False.
   *
   * @generated from field: optional int32 max_edit_distance = 4;
   */
  maxEditDistance?: number;
};

/**
 * Describes the message google.chromeos.uidetection.v1.WordDetectionRequest.
 * Use `create(WordDetectionRequestSchema)` to create a new message.
 */
export const WordDetectionRequestSchema: GenMessage<WordDetectionRequest> = /*@__PURE__*/
  messageDesc(file_google_chromeos_uidetection_v1_ui_detection, 3);

/**
 * Detection type for text block detection.
 *
 * @generated from message google.chromeos.uidetection.v1.TextBlockDetectionRequest
 */
export type TextBlockDetectionRequest = Message<"google.chromeos.uidetection.v1.TextBlockDetectionRequest"> & {
  /**
   * Required. The text block consisting a list of words to locate in the image.
   *
   * @generated from field: repeated string words = 1;
   */
  words: string[];

  /**
   * Indicating whether the query string is a regex or not.
   *
   * @generated from field: bool regex_mode = 2;
   */
  regexMode: boolean;

  /**
   * Indicating whether the detection is an approximate match.
   *
   * @generated from field: bool disable_approx_match = 3;
   */
  disableApproxMatch: boolean;

  /**
   * Levenshtein distance threshold.
   * Applicable only if regex_mode is False.
   *
   * @generated from field: optional int32 max_edit_distance = 4;
   */
  maxEditDistance?: number;

  /**
   * Indicating whether the detection result should only contain the specified
   * words.
   *
   * @generated from field: bool specified_words_only = 5;
   */
  specifiedWordsOnly: boolean;
};

/**
 * Describes the message google.chromeos.uidetection.v1.TextBlockDetectionRequest.
 * Use `create(TextBlockDetectionRequestSchema)` to create a new message.
 */
export const TextBlockDetectionRequestSchema: GenMessage<TextBlockDetectionRequest> = /*@__PURE__*/
  messageDesc(file_google_chromeos_uidetection_v1_ui_detection, 4);

/**
 * Detection type for custom icon detection.
 *
 * @generated from message google.chromeos.uidetection.v1.CustomIconDetectionRequest
 */
export type CustomIconDetectionRequest = Message<"google.chromeos.uidetection.v1.CustomIconDetectionRequest"> & {
  /**
   * Required. Required field that represents an icon in PNG format.
   *
   * @generated from field: bytes icon_png = 1;
   */
  iconPng: Uint8Array;

  /**
   * Set match_count to -1 to not limit the number of matches.
   *
   * @generated from field: int32 match_count = 2;
   */
  matchCount: number;

  /**
   * Confidence threshold in the range [0.0, 1.0] below which the matches will
   * be considered as non-existent.
   *
   * @generated from field: double min_confidence_threshold = 3;
   */
  minConfidenceThreshold: number;
};

/**
 * Describes the message google.chromeos.uidetection.v1.CustomIconDetectionRequest.
 * Use `create(CustomIconDetectionRequestSchema)` to create a new message.
 */
export const CustomIconDetectionRequestSchema: GenMessage<CustomIconDetectionRequest> = /*@__PURE__*/
  messageDesc(file_google_chromeos_uidetection_v1_ui_detection, 5);

/**
 * Response message for UI detection.
 *
 * @generated from message google.chromeos.uidetection.v1.UiDetectionResponse
 */
export type UiDetectionResponse = Message<"google.chromeos.uidetection.v1.UiDetectionResponse"> & {
  /**
   * Locations of matching UI elements.
   *
   * @generated from field: repeated google.chromeos.uidetection.v1.BoundingBox bounding_boxes = 1;
   */
  boundingBoxes: BoundingBox[];

  /**
   * The transformed detection image PNG, if requested and transformations were
   * applied.
   *
   * @generated from field: bytes transformed_image_png = 2;
   */
  transformedImagePng: Uint8Array;

  /**
   * The amount the original image was scaled by to make the transformed image.
   * 1.0 if the detection result is not based on a resized image.
   *
   * @generated from field: float resizing_scale_factor = 3;
   */
  resizingScaleFactor: number;
};

/**
 * Describes the message google.chromeos.uidetection.v1.UiDetectionResponse.
 * Use `create(UiDetectionResponseSchema)` to create a new message.
 */
export const UiDetectionResponseSchema: GenMessage<UiDetectionResponse> = /*@__PURE__*/
  messageDesc(file_google_chromeos_uidetection_v1_ui_detection, 6);

/**
 * The location of a UI element.
 * A bounding box is reprensented by its top-left point [left, top]
 * and its bottom-right point [right, bottom].
 *
 * @generated from message google.chromeos.uidetection.v1.BoundingBox
 */
export type BoundingBox = Message<"google.chromeos.uidetection.v1.BoundingBox"> & {
  /**
   * The text found in the bounding box.
   *
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * The y-coordinate of the top-left point.
   *
   * @generated from field: int32 top = 2;
   */
  top: number;

  /**
   * The x-coordinate of the top-left point.
   *
   * @generated from field: int32 left = 3;
   */
  left: number;

  /**
   * The y-coordinate of the bottom-right point.
   *
   * @generated from field: int32 bottom = 4;
   */
  bottom: number;

  /**
   * The x-coordinate of the bottom-right point.
   *
   * @generated from field: int32 right = 5;
   */
  right: number;
};

/**
 * Describes the message google.chromeos.uidetection.v1.BoundingBox.
 * Use `create(BoundingBoxSchema)` to create a new message.
 */
export const BoundingBoxSchema: GenMessage<BoundingBox> = /*@__PURE__*/
  messageDesc(file_google_chromeos_uidetection_v1_ui_detection, 7);

/**
 * Provides image-based UI detection service.
 *
 * @generated from service google.chromeos.uidetection.v1.UiDetectionService
 */
export const UiDetectionService: GenService<{
  /**
   * Runs the detection.
   *
   * @generated from rpc google.chromeos.uidetection.v1.UiDetectionService.ExecuteDetection
   */
  executeDetection: {
    methodKind: "unary";
    input: typeof UiDetectionRequestSchema;
    output: typeof UiDetectionResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_chromeos_uidetection_v1_ui_detection, 0);

