// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/analytics/admin/v1alpha/subproperty_event_filter.proto (package google.analytics.admin.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/analytics/admin/v1alpha/subproperty_event_filter.proto.
 */
export const file_google_analytics_admin_v1alpha_subproperty_event_filter: GenFile = /*@__PURE__*/
  fileDesc("Cj1nb29nbGUvYW5hbHl0aWNzL2FkbWluL3YxYWxwaGEvc3VicHJvcGVydHlfZXZlbnRfZmlsdGVyLnByb3RvEh5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYWxwaGEigQQKH1N1YnByb3BlcnR5RXZlbnRGaWx0ZXJDb25kaXRpb24SFQoLbnVsbF9maWx0ZXIYAiABKAhIABJlCg1zdHJpbmdfZmlsdGVyGAMgASgLMkwuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWFscGhhLlN1YnByb3BlcnR5RXZlbnRGaWx0ZXJDb25kaXRpb24uU3RyaW5nRmlsdGVySAASFwoKZmllbGRfbmFtZRgBIAEoCUID4EECGrgCCgxTdHJpbmdGaWx0ZXISbwoKbWF0Y2hfdHlwZRgBIAEoDjJWLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5TdWJwcm9wZXJ0eUV2ZW50RmlsdGVyQ29uZGl0aW9uLlN0cmluZ0ZpbHRlci5NYXRjaFR5cGVCA+BBAhISCgV2YWx1ZRgCIAEoCUID4EECEhsKDmNhc2Vfc2Vuc2l0aXZlGAMgASgIQgPgQQEihQEKCU1hdGNoVHlwZRIaChZNQVRDSF9UWVBFX1VOU1BFQ0lGSUVEEAASCQoFRVhBQ1QQARIPCgtCRUdJTlNfV0lUSBACEg0KCUVORFNfV0lUSBADEgwKCENPTlRBSU5TEAQSDwoLRlVMTF9SRUdFWFAQBRISCg5QQVJUSUFMX1JFR0VYUBAGQgwKCm9uZV9maWx0ZXIivQIKIFN1YnByb3BlcnR5RXZlbnRGaWx0ZXJFeHByZXNzaW9uElgKCG9yX2dyb3VwGAEgASgLMkQuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWFscGhhLlN1YnByb3BlcnR5RXZlbnRGaWx0ZXJFeHByZXNzaW9uTGlzdEgAEloKDm5vdF9leHByZXNzaW9uGAIgASgLMkAuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWFscGhhLlN1YnByb3BlcnR5RXZlbnRGaWx0ZXJFeHByZXNzaW9uSAASWwoQZmlsdGVyX2NvbmRpdGlvbhgDIAEoCzI/Lmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5TdWJwcm9wZXJ0eUV2ZW50RmlsdGVyQ29uZGl0aW9uSABCBgoEZXhwciKMAQokU3VicHJvcGVydHlFdmVudEZpbHRlckV4cHJlc3Npb25MaXN0EmQKEmZpbHRlcl9leHByZXNzaW9ucxgBIAMoCzJALmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5TdWJwcm9wZXJ0eUV2ZW50RmlsdGVyRXhwcmVzc2lvbkIG4EEC4EEGIsICChxTdWJwcm9wZXJ0eUV2ZW50RmlsdGVyQ2xhdXNlEm4KEmZpbHRlcl9jbGF1c2VfdHlwZRgBIAEoDjJNLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5TdWJwcm9wZXJ0eUV2ZW50RmlsdGVyQ2xhdXNlLkZpbHRlckNsYXVzZVR5cGVCA+BBAhJgChFmaWx0ZXJfZXhwcmVzc2lvbhgCIAEoCzJALmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5TdWJwcm9wZXJ0eUV2ZW50RmlsdGVyRXhwcmVzc2lvbkID4EECIlAKEEZpbHRlckNsYXVzZVR5cGUSIgoeRklMVEVSX0NMQVVTRV9UWVBFX1VOU1BFQ0lGSUVEEAASCwoHSU5DTFVERRABEgsKB0VYQ0xVREUQAiL9AgoWU3VicHJvcGVydHlFdmVudEZpbHRlchIRCgRuYW1lGAEgASgJQgPgQQMSIwoRYXBwbHlfdG9fcHJvcGVydHkYAiABKAlCA+BBBUgAiAEBElwKDmZpbHRlcl9jbGF1c2VzGAMgAygLMjwuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWFscGhhLlN1YnByb3BlcnR5RXZlbnRGaWx0ZXJDbGF1c2VCBuBBAuBBBjq2AepBsgEKNGFuYWx5dGljc2FkbWluLmdvb2dsZWFwaXMuY29tL1N1YnByb3BlcnR5RXZlbnRGaWx0ZXISSXByb3BlcnRpZXMve3Byb3BlcnR5fS9zdWJwcm9wZXJ0eUV2ZW50RmlsdGVycy97c3ViX3Byb3BlcnR5X2V2ZW50X2ZpbHRlcn0qF3N1YnByb3BlcnR5RXZlbnRGaWx0ZXJzMhZzdWJwcm9wZXJ0eUV2ZW50RmlsdGVyQhQKEl9hcHBseV90b19wcm9wZXJ0eUKDAQoiY29tLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYUIbU3VicHJvcGVydHlFdmVudEZpbHRlclByb3RvUAFaPmNsb3VkLmdvb2dsZS5jb20vZ28vYW5hbHl0aWNzL2FkbWluL2FwaXYxYWxwaGEvYWRtaW5wYjthZG1pbnBiYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource]);

/**
 * A specific filter expression
 *
 * @generated from message google.analytics.admin.v1alpha.SubpropertyEventFilterCondition
 */
export type SubpropertyEventFilterCondition = Message<"google.analytics.admin.v1alpha.SubpropertyEventFilterCondition"> & {
  /**
   * @generated from oneof google.analytics.admin.v1alpha.SubpropertyEventFilterCondition.one_filter
   */
  oneFilter: {
    /**
     * A filter for null values.
     *
     * @generated from field: bool null_filter = 2;
     */
    value: boolean;
    case: "nullFilter";
  } | {
    /**
     * A filter for a string-type dimension that matches a particular pattern.
     *
     * @generated from field: google.analytics.admin.v1alpha.SubpropertyEventFilterCondition.StringFilter string_filter = 3;
     */
    value: SubpropertyEventFilterCondition_StringFilter;
    case: "stringFilter";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The field that is being filtered.
   *
   * @generated from field: string field_name = 1;
   */
  fieldName: string;
};

/**
 * Describes the message google.analytics.admin.v1alpha.SubpropertyEventFilterCondition.
 * Use `create(SubpropertyEventFilterConditionSchema)` to create a new message.
 */
export const SubpropertyEventFilterConditionSchema: GenMessage<SubpropertyEventFilterCondition> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_subproperty_event_filter, 0);

/**
 * A filter for a string-type dimension that matches a particular pattern.
 *
 * @generated from message google.analytics.admin.v1alpha.SubpropertyEventFilterCondition.StringFilter
 */
export type SubpropertyEventFilterCondition_StringFilter = Message<"google.analytics.admin.v1alpha.SubpropertyEventFilterCondition.StringFilter"> & {
  /**
   * Required. The match type for the string filter.
   *
   * @generated from field: google.analytics.admin.v1alpha.SubpropertyEventFilterCondition.StringFilter.MatchType match_type = 1;
   */
  matchType: SubpropertyEventFilterCondition_StringFilter_MatchType;

  /**
   * Required. The string value used for the matching.
   *
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * Optional. If true, the string value is case sensitive. If false, the
   * match is case-insensitive.
   *
   * @generated from field: bool case_sensitive = 3;
   */
  caseSensitive: boolean;
};

/**
 * Describes the message google.analytics.admin.v1alpha.SubpropertyEventFilterCondition.StringFilter.
 * Use `create(SubpropertyEventFilterCondition_StringFilterSchema)` to create a new message.
 */
export const SubpropertyEventFilterCondition_StringFilterSchema: GenMessage<SubpropertyEventFilterCondition_StringFilter> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_subproperty_event_filter, 0, 0);

/**
 * How the filter will be used to determine a match.
 *
 * @generated from enum google.analytics.admin.v1alpha.SubpropertyEventFilterCondition.StringFilter.MatchType
 */
export enum SubpropertyEventFilterCondition_StringFilter_MatchType {
  /**
   * Match type unknown or not specified.
   *
   * @generated from enum value: MATCH_TYPE_UNSPECIFIED = 0;
   */
  MATCH_TYPE_UNSPECIFIED = 0,

  /**
   * Exact match of the string value.
   *
   * @generated from enum value: EXACT = 1;
   */
  EXACT = 1,

  /**
   * Begins with the string value.
   *
   * @generated from enum value: BEGINS_WITH = 2;
   */
  BEGINS_WITH = 2,

  /**
   * Ends with the string value.
   *
   * @generated from enum value: ENDS_WITH = 3;
   */
  ENDS_WITH = 3,

  /**
   * Contains the string value.
   *
   * @generated from enum value: CONTAINS = 4;
   */
  CONTAINS = 4,

  /**
   * Full regular expression matches with the string value.
   *
   * @generated from enum value: FULL_REGEXP = 5;
   */
  FULL_REGEXP = 5,

  /**
   * Partial regular expression matches with the string value.
   *
   * @generated from enum value: PARTIAL_REGEXP = 6;
   */
  PARTIAL_REGEXP = 6,
}

/**
 * Describes the enum google.analytics.admin.v1alpha.SubpropertyEventFilterCondition.StringFilter.MatchType.
 */
export const SubpropertyEventFilterCondition_StringFilter_MatchTypeSchema: GenEnum<SubpropertyEventFilterCondition_StringFilter_MatchType> = /*@__PURE__*/
  enumDesc(file_google_analytics_admin_v1alpha_subproperty_event_filter, 0, 0, 0);

/**
 * A logical expression of Subproperty event filters.
 *
 * @generated from message google.analytics.admin.v1alpha.SubpropertyEventFilterExpression
 */
export type SubpropertyEventFilterExpression = Message<"google.analytics.admin.v1alpha.SubpropertyEventFilterExpression"> & {
  /**
   * The expression applied to a filter.
   *
   * @generated from oneof google.analytics.admin.v1alpha.SubpropertyEventFilterExpression.expr
   */
  expr: {
    /**
     * A list of expressions to ORâ€™ed together. Must only contain
     * not_expression or filter_condition expressions.
     *
     * @generated from field: google.analytics.admin.v1alpha.SubpropertyEventFilterExpressionList or_group = 1;
     */
    value: SubpropertyEventFilterExpressionList;
    case: "orGroup";
  } | {
    /**
     * A filter expression to be NOT'ed (inverted, complemented). It can only
     * include a filter. This cannot be set on the top level
     * SubpropertyEventFilterExpression.
     *
     * @generated from field: google.analytics.admin.v1alpha.SubpropertyEventFilterExpression not_expression = 2;
     */
    value: SubpropertyEventFilterExpression;
    case: "notExpression";
  } | {
    /**
     * Creates a filter that matches a specific event. This cannot be set on the
     * top level SubpropertyEventFilterExpression.
     *
     * @generated from field: google.analytics.admin.v1alpha.SubpropertyEventFilterCondition filter_condition = 3;
     */
    value: SubpropertyEventFilterCondition;
    case: "filterCondition";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.analytics.admin.v1alpha.SubpropertyEventFilterExpression.
 * Use `create(SubpropertyEventFilterExpressionSchema)` to create a new message.
 */
export const SubpropertyEventFilterExpressionSchema: GenMessage<SubpropertyEventFilterExpression> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_subproperty_event_filter, 1);

/**
 * A list of Subproperty event filter expressions.
 *
 * @generated from message google.analytics.admin.v1alpha.SubpropertyEventFilterExpressionList
 */
export type SubpropertyEventFilterExpressionList = Message<"google.analytics.admin.v1alpha.SubpropertyEventFilterExpressionList"> & {
  /**
   * Required. Unordered list. A list of Subproperty event filter expressions
   *
   * @generated from field: repeated google.analytics.admin.v1alpha.SubpropertyEventFilterExpression filter_expressions = 1;
   */
  filterExpressions: SubpropertyEventFilterExpression[];
};

/**
 * Describes the message google.analytics.admin.v1alpha.SubpropertyEventFilterExpressionList.
 * Use `create(SubpropertyEventFilterExpressionListSchema)` to create a new message.
 */
export const SubpropertyEventFilterExpressionListSchema: GenMessage<SubpropertyEventFilterExpressionList> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_subproperty_event_filter, 2);

/**
 * A clause for defining a filter. A filter may be inclusive (events satisfying
 * the filter clause are included in the subproperty's data) or exclusive
 * (events satisfying the filter clause are excluded from the subproperty's
 * data).
 *
 * @generated from message google.analytics.admin.v1alpha.SubpropertyEventFilterClause
 */
export type SubpropertyEventFilterClause = Message<"google.analytics.admin.v1alpha.SubpropertyEventFilterClause"> & {
  /**
   * Required. The type for the filter clause.
   *
   * @generated from field: google.analytics.admin.v1alpha.SubpropertyEventFilterClause.FilterClauseType filter_clause_type = 1;
   */
  filterClauseType: SubpropertyEventFilterClause_FilterClauseType;

  /**
   * Required. The logical expression for what events are sent to the
   * subproperty.
   *
   * @generated from field: google.analytics.admin.v1alpha.SubpropertyEventFilterExpression filter_expression = 2;
   */
  filterExpression?: SubpropertyEventFilterExpression;
};

/**
 * Describes the message google.analytics.admin.v1alpha.SubpropertyEventFilterClause.
 * Use `create(SubpropertyEventFilterClauseSchema)` to create a new message.
 */
export const SubpropertyEventFilterClauseSchema: GenMessage<SubpropertyEventFilterClause> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_subproperty_event_filter, 3);

/**
 * Specifies whether this is an include or exclude filter clause.
 *
 * @generated from enum google.analytics.admin.v1alpha.SubpropertyEventFilterClause.FilterClauseType
 */
export enum SubpropertyEventFilterClause_FilterClauseType {
  /**
   * Filter clause type unknown or not specified.
   *
   * @generated from enum value: FILTER_CLAUSE_TYPE_UNSPECIFIED = 0;
   */
  FILTER_CLAUSE_TYPE_UNSPECIFIED = 0,

  /**
   * Events will be included in the Sub property if the filter clause is met.
   *
   * @generated from enum value: INCLUDE = 1;
   */
  INCLUDE = 1,

  /**
   * Events will be excluded from the Sub property if the filter clause is
   * met.
   *
   * @generated from enum value: EXCLUDE = 2;
   */
  EXCLUDE = 2,
}

/**
 * Describes the enum google.analytics.admin.v1alpha.SubpropertyEventFilterClause.FilterClauseType.
 */
export const SubpropertyEventFilterClause_FilterClauseTypeSchema: GenEnum<SubpropertyEventFilterClause_FilterClauseType> = /*@__PURE__*/
  enumDesc(file_google_analytics_admin_v1alpha_subproperty_event_filter, 3, 0);

/**
 * A resource message representing a GA4 Subproperty event filter.
 *
 * @generated from message google.analytics.admin.v1alpha.SubpropertyEventFilter
 */
export type SubpropertyEventFilter = Message<"google.analytics.admin.v1alpha.SubpropertyEventFilter"> & {
  /**
   * Output only. Format:
   * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
   * Example: properties/1234/subpropertyEventFilters/5678
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Immutable. Resource name of the Subproperty that uses this filter.
   *
   * @generated from field: optional string apply_to_property = 2;
   */
  applyToProperty?: string;

  /**
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   *
   * @generated from field: repeated google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3;
   */
  filterClauses: SubpropertyEventFilterClause[];
};

/**
 * Describes the message google.analytics.admin.v1alpha.SubpropertyEventFilter.
 * Use `create(SubpropertyEventFilterSchema)` to create a new message.
 */
export const SubpropertyEventFilterSchema: GenMessage<SubpropertyEventFilter> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_subproperty_event_filter, 4);

