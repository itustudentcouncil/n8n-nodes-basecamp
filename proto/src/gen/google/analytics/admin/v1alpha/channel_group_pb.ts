// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/analytics/admin/v1alpha/channel_group.proto (package google.analytics.admin.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/analytics/admin/v1alpha/channel_group.proto.
 */
export const file_google_analytics_admin_v1alpha_channel_group: GenFile = /*@__PURE__*/
  fileDesc("CjJnb29nbGUvYW5hbHl0aWNzL2FkbWluL3YxYWxwaGEvY2hhbm5lbF9ncm91cC5wcm90bxIeZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWFscGhhIqsEChJDaGFubmVsR3JvdXBGaWx0ZXISWAoNc3RyaW5nX2ZpbHRlchgCIAEoCzI/Lmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5DaGFubmVsR3JvdXBGaWx0ZXIuU3RyaW5nRmlsdGVySAASWQoOaW5fbGlzdF9maWx0ZXIYAyABKAsyPy5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYWxwaGEuQ2hhbm5lbEdyb3VwRmlsdGVyLkluTGlzdEZpbHRlckgAEhoKCmZpZWxkX25hbWUYASABKAlCBuBBAuBBBRqOAgoMU3RyaW5nRmlsdGVyEmIKCm1hdGNoX3R5cGUYASABKA4ySS5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYWxwaGEuQ2hhbm5lbEdyb3VwRmlsdGVyLlN0cmluZ0ZpbHRlci5NYXRjaFR5cGVCA+BBAhISCgV2YWx1ZRgCIAEoCUID4EECIoUBCglNYXRjaFR5cGUSGgoWTUFUQ0hfVFlQRV9VTlNQRUNJRklFRBAAEgkKBUVYQUNUEAESDwoLQkVHSU5TX1dJVEgQAhINCglFTkRTX1dJVEgQAxIMCghDT05UQUlOUxAEEg8KC0ZVTExfUkVHRVhQEAUSEgoOUEFSVElBTF9SRUdFWFAQBhojCgxJbkxpc3RGaWx0ZXISEwoGdmFsdWVzGAEgAygJQgPgQQJCDgoMdmFsdWVfZmlsdGVyIvECChxDaGFubmVsR3JvdXBGaWx0ZXJFeHByZXNzaW9uElUKCWFuZF9ncm91cBgBIAEoCzJALmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5DaGFubmVsR3JvdXBGaWx0ZXJFeHByZXNzaW9uTGlzdEgAElQKCG9yX2dyb3VwGAIgASgLMkAuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWFscGhhLkNoYW5uZWxHcm91cEZpbHRlckV4cHJlc3Npb25MaXN0SAASVgoObm90X2V4cHJlc3Npb24YAyABKAsyPC5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYWxwaGEuQ2hhbm5lbEdyb3VwRmlsdGVyRXhwcmVzc2lvbkgAEkQKBmZpbHRlchgEIAEoCzIyLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5DaGFubmVsR3JvdXBGaWx0ZXJIAEIGCgRleHByInwKIENoYW5uZWxHcm91cEZpbHRlckV4cHJlc3Npb25MaXN0ElgKEmZpbHRlcl9leHByZXNzaW9ucxgBIAMoCzI8Lmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5DaGFubmVsR3JvdXBGaWx0ZXJFeHByZXNzaW9uIoABCgxHcm91cGluZ1J1bGUSGQoMZGlzcGxheV9uYW1lGAEgASgJQgPgQQISVQoKZXhwcmVzc2lvbhgCIAEoCzI8Lmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5DaGFubmVsR3JvdXBGaWx0ZXJFeHByZXNzaW9uQgPgQQIitAIKDENoYW5uZWxHcm91cBIRCgRuYW1lGAEgASgJQgPgQQMSGQoMZGlzcGxheV9uYW1lGAIgASgJQgPgQQISEwoLZGVzY3JpcHRpb24YAyABKAkSSAoNZ3JvdXBpbmdfcnVsZRgEIAMoCzIsLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFhbHBoYS5Hcm91cGluZ1J1bGVCA+BBAhIbCg5zeXN0ZW1fZGVmaW5lZBgFIAEoCEID4EEDEhQKB3ByaW1hcnkYBiABKAhCA+BBATpk6kFhCiphbmFseXRpY3NhZG1pbi5nb29nbGVhcGlzLmNvbS9DaGFubmVsR3JvdXASM3Byb3BlcnRpZXMve3Byb3BlcnR5fS9jaGFubmVsR3JvdXBzL3tjaGFubmVsX2dyb3VwfUJ5CiJjb20uZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWFscGhhQhFDaGFubmVsR3JvdXBQcm90b1ABWj5jbG91ZC5nb29nbGUuY29tL2dvL2FuYWx5dGljcy9hZG1pbi9hcGl2MWFscGhhL2FkbWlucGI7YWRtaW5wYmIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource]);

/**
 * A specific filter for a single dimension.
 *
 * @generated from message google.analytics.admin.v1alpha.ChannelGroupFilter
 */
export type ChannelGroupFilter = Message<"google.analytics.admin.v1alpha.ChannelGroupFilter"> & {
  /**
   * A StringFilter or InListFilter that defines this filters behavior.
   *
   * @generated from oneof google.analytics.admin.v1alpha.ChannelGroupFilter.value_filter
   */
  valueFilter: {
    /**
     * A filter for a string-type dimension that matches a particular pattern.
     *
     * @generated from field: google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter string_filter = 2;
     */
    value: ChannelGroupFilter_StringFilter;
    case: "stringFilter";
  } | {
    /**
     * A filter for a string dimension that matches a particular list of
     * options.
     *
     * @generated from field: google.analytics.admin.v1alpha.ChannelGroupFilter.InListFilter in_list_filter = 3;
     */
    value: ChannelGroupFilter_InListFilter;
    case: "inListFilter";
  } | { case: undefined; value?: undefined };

  /**
   * Required. Immutable. The dimension name to filter.
   *
   * @generated from field: string field_name = 1;
   */
  fieldName: string;
};

/**
 * Describes the message google.analytics.admin.v1alpha.ChannelGroupFilter.
 * Use `create(ChannelGroupFilterSchema)` to create a new message.
 */
export const ChannelGroupFilterSchema: GenMessage<ChannelGroupFilter> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_channel_group, 0);

/**
 * Filter where the field value is a String. The match is case insensitive.
 *
 * @generated from message google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter
 */
export type ChannelGroupFilter_StringFilter = Message<"google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter"> & {
  /**
   * Required. The match type for the string filter.
   *
   * @generated from field: google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter.MatchType match_type = 1;
   */
  matchType: ChannelGroupFilter_StringFilter_MatchType;

  /**
   * Required. The string value to be matched against.
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter.
 * Use `create(ChannelGroupFilter_StringFilterSchema)` to create a new message.
 */
export const ChannelGroupFilter_StringFilterSchema: GenMessage<ChannelGroupFilter_StringFilter> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_channel_group, 0, 0);

/**
 * How the filter will be used to determine a match.
 *
 * @generated from enum google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter.MatchType
 */
export enum ChannelGroupFilter_StringFilter_MatchType {
  /**
   * Default match type.
   *
   * @generated from enum value: MATCH_TYPE_UNSPECIFIED = 0;
   */
  MATCH_TYPE_UNSPECIFIED = 0,

  /**
   * Exact match of the string value.
   *
   * @generated from enum value: EXACT = 1;
   */
  EXACT = 1,

  /**
   * Begins with the string value.
   *
   * @generated from enum value: BEGINS_WITH = 2;
   */
  BEGINS_WITH = 2,

  /**
   * Ends with the string value.
   *
   * @generated from enum value: ENDS_WITH = 3;
   */
  ENDS_WITH = 3,

  /**
   * Contains the string value.
   *
   * @generated from enum value: CONTAINS = 4;
   */
  CONTAINS = 4,

  /**
   * Full regular expression match with the string value.
   *
   * @generated from enum value: FULL_REGEXP = 5;
   */
  FULL_REGEXP = 5,

  /**
   * Partial regular expression match with the string value.
   *
   * @generated from enum value: PARTIAL_REGEXP = 6;
   */
  PARTIAL_REGEXP = 6,
}

/**
 * Describes the enum google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter.MatchType.
 */
export const ChannelGroupFilter_StringFilter_MatchTypeSchema: GenEnum<ChannelGroupFilter_StringFilter_MatchType> = /*@__PURE__*/
  enumDesc(file_google_analytics_admin_v1alpha_channel_group, 0, 0, 0);

/**
 * A filter for a string dimension that matches a particular list of options.
 * The match is case insensitive.
 *
 * @generated from message google.analytics.admin.v1alpha.ChannelGroupFilter.InListFilter
 */
export type ChannelGroupFilter_InListFilter = Message<"google.analytics.admin.v1alpha.ChannelGroupFilter.InListFilter"> & {
  /**
   * Required. The list of possible string values to match against. Must be
   * non-empty.
   *
   * @generated from field: repeated string values = 1;
   */
  values: string[];
};

/**
 * Describes the message google.analytics.admin.v1alpha.ChannelGroupFilter.InListFilter.
 * Use `create(ChannelGroupFilter_InListFilterSchema)` to create a new message.
 */
export const ChannelGroupFilter_InListFilterSchema: GenMessage<ChannelGroupFilter_InListFilter> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_channel_group, 0, 1);

/**
 * A logical expression of Channel Group dimension filters.
 *
 * @generated from message google.analytics.admin.v1alpha.ChannelGroupFilterExpression
 */
export type ChannelGroupFilterExpression = Message<"google.analytics.admin.v1alpha.ChannelGroupFilterExpression"> & {
  /**
   * The expression applied to a filter.
   *
   * @generated from oneof google.analytics.admin.v1alpha.ChannelGroupFilterExpression.expr
   */
  expr: {
    /**
     * A list of expressions to be AND’ed together. It can only contain
     * ChannelGroupFilterExpressions with or_group. This must be set for the
     * top level ChannelGroupFilterExpression.
     *
     * @generated from field: google.analytics.admin.v1alpha.ChannelGroupFilterExpressionList and_group = 1;
     */
    value: ChannelGroupFilterExpressionList;
    case: "andGroup";
  } | {
    /**
     * A list of expressions to OR’ed together. It cannot contain
     * ChannelGroupFilterExpressions with and_group or or_group.
     *
     * @generated from field: google.analytics.admin.v1alpha.ChannelGroupFilterExpressionList or_group = 2;
     */
    value: ChannelGroupFilterExpressionList;
    case: "orGroup";
  } | {
    /**
     * A filter expression to be NOT'ed (that is inverted, complemented). It
     * can only include a dimension_or_metric_filter. This cannot be set on the
     * top level ChannelGroupFilterExpression.
     *
     * @generated from field: google.analytics.admin.v1alpha.ChannelGroupFilterExpression not_expression = 3;
     */
    value: ChannelGroupFilterExpression;
    case: "notExpression";
  } | {
    /**
     * A filter on a single dimension. This cannot be set on the top
     * level ChannelGroupFilterExpression.
     *
     * @generated from field: google.analytics.admin.v1alpha.ChannelGroupFilter filter = 4;
     */
    value: ChannelGroupFilter;
    case: "filter";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.analytics.admin.v1alpha.ChannelGroupFilterExpression.
 * Use `create(ChannelGroupFilterExpressionSchema)` to create a new message.
 */
export const ChannelGroupFilterExpressionSchema: GenMessage<ChannelGroupFilterExpression> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_channel_group, 1);

/**
 * A list of Channel Group filter expressions.
 *
 * @generated from message google.analytics.admin.v1alpha.ChannelGroupFilterExpressionList
 */
export type ChannelGroupFilterExpressionList = Message<"google.analytics.admin.v1alpha.ChannelGroupFilterExpressionList"> & {
  /**
   * A list of Channel Group filter expressions.
   *
   * @generated from field: repeated google.analytics.admin.v1alpha.ChannelGroupFilterExpression filter_expressions = 1;
   */
  filterExpressions: ChannelGroupFilterExpression[];
};

/**
 * Describes the message google.analytics.admin.v1alpha.ChannelGroupFilterExpressionList.
 * Use `create(ChannelGroupFilterExpressionListSchema)` to create a new message.
 */
export const ChannelGroupFilterExpressionListSchema: GenMessage<ChannelGroupFilterExpressionList> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_channel_group, 2);

/**
 * The rules that govern how traffic is grouped into one channel.
 *
 * @generated from message google.analytics.admin.v1alpha.GroupingRule
 */
export type GroupingRule = Message<"google.analytics.admin.v1alpha.GroupingRule"> & {
  /**
   * Required. Customer defined display name for the channel.
   *
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * Required. The Filter Expression that defines the Grouping Rule.
   *
   * @generated from field: google.analytics.admin.v1alpha.ChannelGroupFilterExpression expression = 2;
   */
  expression?: ChannelGroupFilterExpression;
};

/**
 * Describes the message google.analytics.admin.v1alpha.GroupingRule.
 * Use `create(GroupingRuleSchema)` to create a new message.
 */
export const GroupingRuleSchema: GenMessage<GroupingRule> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_channel_group, 3);

/**
 * A resource message representing a Channel Group.
 *
 * @generated from message google.analytics.admin.v1alpha.ChannelGroup
 */
export type ChannelGroup = Message<"google.analytics.admin.v1alpha.ChannelGroup"> & {
  /**
   * Output only. The resource name for this Channel Group resource.
   * Format: properties/{property}/channelGroups/{channel_group}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The display name of the Channel Group. Max length of 80
   * characters.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * The description of the Channel Group. Max length of 256 characters.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Required. The grouping rules of channels. Maximum number of rules is 50.
   *
   * @generated from field: repeated google.analytics.admin.v1alpha.GroupingRule grouping_rule = 4;
   */
  groupingRule: GroupingRule[];

  /**
   * Output only. If true, then this channel group is the Default Channel Group
   * predefined by Google Analytics. Display name and grouping rules cannot be
   * updated for this channel group.
   *
   * @generated from field: bool system_defined = 5;
   */
  systemDefined: boolean;

  /**
   * Optional. If true, this channel group will be used as the default channel
   * group for reports. Only one channel group can be set as `primary` at any
   * time. If the `primary` field gets set on a channel group, it will get unset
   * on the previous primary channel group.
   *
   * The Google Analytics predefined channel group is the primary by default.
   *
   * @generated from field: bool primary = 6;
   */
  primary: boolean;
};

/**
 * Describes the message google.analytics.admin.v1alpha.ChannelGroup.
 * Use `create(ChannelGroupSchema)` to create a new message.
 */
export const ChannelGroupSchema: GenMessage<ChannelGroup> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1alpha_channel_group, 4);

