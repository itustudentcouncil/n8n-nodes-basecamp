// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/analytics/admin/v1beta/access_report.proto (package google.analytics.admin.v1beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/analytics/admin/v1beta/access_report.proto.
 */
export const file_google_analytics_admin_v1beta_access_report: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvYW5hbHl0aWNzL2FkbWluL3YxYmV0YS9hY2Nlc3NfcmVwb3J0LnByb3RvEh1nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYmV0YSIpCg9BY2Nlc3NEaW1lbnNpb24SFgoOZGltZW5zaW9uX25hbWUYASABKAkiIwoMQWNjZXNzTWV0cmljEhMKC21ldHJpY19uYW1lGAEgASgJIjcKD0FjY2Vzc0RhdGVSYW5nZRISCgpzdGFydF9kYXRlGAEgASgJEhAKCGVuZF9kYXRlGAIgASgJIuACChZBY2Nlc3NGaWx0ZXJFeHByZXNzaW9uEk4KCWFuZF9ncm91cBgBIAEoCzI5Lmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFiZXRhLkFjY2Vzc0ZpbHRlckV4cHJlc3Npb25MaXN0SAASTQoIb3JfZ3JvdXAYAiABKAsyOS5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYmV0YS5BY2Nlc3NGaWx0ZXJFeHByZXNzaW9uTGlzdEgAEk8KDm5vdF9leHByZXNzaW9uGAMgASgLMjUuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWJldGEuQWNjZXNzRmlsdGVyRXhwcmVzc2lvbkgAEkQKDWFjY2Vzc19maWx0ZXIYBCABKAsyKy5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYmV0YS5BY2Nlc3NGaWx0ZXJIAEIQCg5vbmVfZXhwcmVzc2lvbiJoChpBY2Nlc3NGaWx0ZXJFeHByZXNzaW9uTGlzdBJKCgtleHByZXNzaW9ucxgBIAMoCzI1Lmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFiZXRhLkFjY2Vzc0ZpbHRlckV4cHJlc3Npb24i5QIKDEFjY2Vzc0ZpbHRlchJKCg1zdHJpbmdfZmlsdGVyGAIgASgLMjEuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWJldGEuQWNjZXNzU3RyaW5nRmlsdGVySAASSwoOaW5fbGlzdF9maWx0ZXIYAyABKAsyMS5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYmV0YS5BY2Nlc3NJbkxpc3RGaWx0ZXJIABJMCg5udW1lcmljX2ZpbHRlchgEIAEoCzIyLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFiZXRhLkFjY2Vzc051bWVyaWNGaWx0ZXJIABJMCg5iZXR3ZWVuX2ZpbHRlchgFIAEoCzIyLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFiZXRhLkFjY2Vzc0JldHdlZW5GaWx0ZXJIABISCgpmaWVsZF9uYW1lGAEgASgJQgwKCm9uZV9maWx0ZXIilAIKEkFjY2Vzc1N0cmluZ0ZpbHRlchJPCgptYXRjaF90eXBlGAEgASgOMjsuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWJldGEuQWNjZXNzU3RyaW5nRmlsdGVyLk1hdGNoVHlwZRINCgV2YWx1ZRgCIAEoCRIWCg5jYXNlX3NlbnNpdGl2ZRgDIAEoCCKFAQoJTWF0Y2hUeXBlEhoKFk1BVENIX1RZUEVfVU5TUEVDSUZJRUQQABIJCgVFWEFDVBABEg8KC0JFR0lOU19XSVRIEAISDQoJRU5EU19XSVRIEAMSDAoIQ09OVEFJTlMQBBIPCgtGVUxMX1JFR0VYUBAFEhIKDlBBUlRJQUxfUkVHRVhQEAYiPAoSQWNjZXNzSW5MaXN0RmlsdGVyEg4KBnZhbHVlcxgBIAMoCRIWCg5jYXNlX3NlbnNpdGl2ZRgCIAEoCCKqAgoTQWNjZXNzTnVtZXJpY0ZpbHRlchJPCglvcGVyYXRpb24YASABKA4yPC5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYmV0YS5BY2Nlc3NOdW1lcmljRmlsdGVyLk9wZXJhdGlvbhI6CgV2YWx1ZRgCIAEoCzIrLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFiZXRhLk51bWVyaWNWYWx1ZSKFAQoJT3BlcmF0aW9uEhkKFU9QRVJBVElPTl9VTlNQRUNJRklFRBAAEgkKBUVRVUFMEAESDQoJTEVTU19USEFOEAISFgoSTEVTU19USEFOX09SX0VRVUFMEAMSEAoMR1JFQVRFUl9USEFOEAQSGQoVR1JFQVRFUl9USEFOX09SX0VRVUFMEAUilQEKE0FjY2Vzc0JldHdlZW5GaWx0ZXISPwoKZnJvbV92YWx1ZRgBIAEoCzIrLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFiZXRhLk51bWVyaWNWYWx1ZRI9Cgh0b192YWx1ZRgCIAEoCzIrLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFiZXRhLk51bWVyaWNWYWx1ZSJKCgxOdW1lcmljVmFsdWUSFQoLaW50NjRfdmFsdWUYASABKANIABIWCgxkb3VibGVfdmFsdWUYAiABKAFIAEILCglvbmVfdmFsdWUi6gMKDUFjY2Vzc09yZGVyQnkSTAoGbWV0cmljGAEgASgLMjouZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWJldGEuQWNjZXNzT3JkZXJCeS5NZXRyaWNPcmRlckJ5SAASUgoJZGltZW5zaW9uGAIgASgLMj0uZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWJldGEuQWNjZXNzT3JkZXJCeS5EaW1lbnNpb25PcmRlckJ5SAASDAoEZGVzYxgDIAEoCBokCg1NZXRyaWNPcmRlckJ5EhMKC21ldHJpY19uYW1lGAEgASgJGvIBChBEaW1lbnNpb25PcmRlckJ5EhYKDmRpbWVuc2lvbl9uYW1lGAEgASgJElsKCm9yZGVyX3R5cGUYAiABKA4yRy5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYmV0YS5BY2Nlc3NPcmRlckJ5LkRpbWVuc2lvbk9yZGVyQnkuT3JkZXJUeXBlImkKCU9yZGVyVHlwZRIaChZPUkRFUl9UWVBFX1VOU1BFQ0lGSUVEEAASEAoMQUxQSEFOVU1FUklDEAESIQodQ0FTRV9JTlNFTlNJVElWRV9BTFBIQU5VTUVSSUMQAhILCgdOVU1FUklDEANCDgoMb25lX29yZGVyX2J5Ii8KFUFjY2Vzc0RpbWVuc2lvbkhlYWRlchIWCg5kaW1lbnNpb25fbmFtZRgBIAEoCSIpChJBY2Nlc3NNZXRyaWNIZWFkZXISEwoLbWV0cmljX25hbWUYASABKAkiowEKCUFjY2Vzc1JvdxJNChBkaW1lbnNpb25fdmFsdWVzGAEgAygLMjMuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWJldGEuQWNjZXNzRGltZW5zaW9uVmFsdWUSRwoNbWV0cmljX3ZhbHVlcxgCIAMoCzIwLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFiZXRhLkFjY2Vzc01ldHJpY1ZhbHVlIiUKFEFjY2Vzc0RpbWVuc2lvblZhbHVlEg0KBXZhbHVlGAEgASgJIiIKEUFjY2Vzc01ldHJpY1ZhbHVlEg0KBXZhbHVlGAEgASgJIqYDCgtBY2Nlc3NRdW90YRJICg50b2tlbnNfcGVyX2RheRgBIAEoCzIwLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFiZXRhLkFjY2Vzc1F1b3RhU3RhdHVzEkkKD3Rva2Vuc19wZXJfaG91chgCIAEoCzIwLmdvb2dsZS5hbmFseXRpY3MuYWRtaW4udjFiZXRhLkFjY2Vzc1F1b3RhU3RhdHVzEk0KE2NvbmN1cnJlbnRfcmVxdWVzdHMYAyABKAsyMC5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYmV0YS5BY2Nlc3NRdW90YVN0YXR1cxJcCiJzZXJ2ZXJfZXJyb3JzX3Blcl9wcm9qZWN0X3Blcl9ob3VyGAQgASgLMjAuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWJldGEuQWNjZXNzUXVvdGFTdGF0dXMSVQobdG9rZW5zX3Blcl9wcm9qZWN0X3Blcl9ob3VyGAUgASgLMjAuZ29vZ2xlLmFuYWx5dGljcy5hZG1pbi52MWJldGEuQWNjZXNzUXVvdGFTdGF0dXMiOAoRQWNjZXNzUXVvdGFTdGF0dXMSEAoIY29uc3VtZWQYASABKAUSEQoJcmVtYWluaW5nGAIgASgFQncKIWNvbS5nb29nbGUuYW5hbHl0aWNzLmFkbWluLnYxYmV0YUIRQWNjZXNzUmVwb3J0UHJvdG9QAVo9Y2xvdWQuZ29vZ2xlLmNvbS9nby9hbmFseXRpY3MvYWRtaW4vYXBpdjFiZXRhL2FkbWlucGI7YWRtaW5wYmIGcHJvdG8z");

/**
 * Dimensions are attributes of your data. For example, the dimension
 * `userEmail` indicates the email of the user that accessed reporting data.
 * Dimension values in report responses are strings.
 *
 * @generated from message google.analytics.admin.v1beta.AccessDimension
 */
export type AccessDimension = Message<"google.analytics.admin.v1beta.AccessDimension"> & {
  /**
   * The API name of the dimension. See [Data Access
   * Schema](https://developers.google.com/analytics/devguides/config/admin/v1/access-api-schema)
   * for the list of dimensions supported in this API.
   *
   * Dimensions are referenced by name in `dimensionFilter` and `orderBys`.
   *
   * @generated from field: string dimension_name = 1;
   */
  dimensionName: string;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessDimension.
 * Use `create(AccessDimensionSchema)` to create a new message.
 */
export const AccessDimensionSchema: GenMessage<AccessDimension> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 0);

/**
 * The quantitative measurements of a report. For example, the metric
 * `accessCount` is the total number of data access records.
 *
 * @generated from message google.analytics.admin.v1beta.AccessMetric
 */
export type AccessMetric = Message<"google.analytics.admin.v1beta.AccessMetric"> & {
  /**
   * The API name of the metric. See [Data Access
   * Schema](https://developers.google.com/analytics/devguides/config/admin/v1/access-api-schema)
   * for the list of metrics supported in this API.
   *
   * Metrics are referenced by name in `metricFilter` & `orderBys`.
   *
   * @generated from field: string metric_name = 1;
   */
  metricName: string;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessMetric.
 * Use `create(AccessMetricSchema)` to create a new message.
 */
export const AccessMetricSchema: GenMessage<AccessMetric> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 1);

/**
 * A contiguous range of days: startDate, startDate + 1, ..., endDate.
 *
 * @generated from message google.analytics.admin.v1beta.AccessDateRange
 */
export type AccessDateRange = Message<"google.analytics.admin.v1beta.AccessDateRange"> & {
  /**
   * The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot
   * be after `endDate`. The format `NdaysAgo`, `yesterday`, or `today` is also
   * accepted, and in that case, the date is inferred based on the current time
   * in the request's time zone.
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot
   * be before `startDate`. The format `NdaysAgo`, `yesterday`, or `today` is
   * also accepted, and in that case, the date is inferred based on the current
   * time in the request's time zone.
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessDateRange.
 * Use `create(AccessDateRangeSchema)` to create a new message.
 */
export const AccessDateRangeSchema: GenMessage<AccessDateRange> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 2);

/**
 * Expresses dimension or metric filters. The fields in the same expression need
 * to be either all dimensions or all metrics.
 *
 * @generated from message google.analytics.admin.v1beta.AccessFilterExpression
 */
export type AccessFilterExpression = Message<"google.analytics.admin.v1beta.AccessFilterExpression"> & {
  /**
   * Specify one type of filter expression for `FilterExpression`.
   *
   * @generated from oneof google.analytics.admin.v1beta.AccessFilterExpression.one_expression
   */
  oneExpression: {
    /**
     * Each of the FilterExpressions in the and_group has an AND relationship.
     *
     * @generated from field: google.analytics.admin.v1beta.AccessFilterExpressionList and_group = 1;
     */
    value: AccessFilterExpressionList;
    case: "andGroup";
  } | {
    /**
     * Each of the FilterExpressions in the or_group has an OR relationship.
     *
     * @generated from field: google.analytics.admin.v1beta.AccessFilterExpressionList or_group = 2;
     */
    value: AccessFilterExpressionList;
    case: "orGroup";
  } | {
    /**
     * The FilterExpression is NOT of not_expression.
     *
     * @generated from field: google.analytics.admin.v1beta.AccessFilterExpression not_expression = 3;
     */
    value: AccessFilterExpression;
    case: "notExpression";
  } | {
    /**
     * A primitive filter. In the same FilterExpression, all of the filter's
     * field names need to be either all dimensions or all metrics.
     *
     * @generated from field: google.analytics.admin.v1beta.AccessFilter access_filter = 4;
     */
    value: AccessFilter;
    case: "accessFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessFilterExpression.
 * Use `create(AccessFilterExpressionSchema)` to create a new message.
 */
export const AccessFilterExpressionSchema: GenMessage<AccessFilterExpression> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 3);

/**
 * A list of filter expressions.
 *
 * @generated from message google.analytics.admin.v1beta.AccessFilterExpressionList
 */
export type AccessFilterExpressionList = Message<"google.analytics.admin.v1beta.AccessFilterExpressionList"> & {
  /**
   * A list of filter expressions.
   *
   * @generated from field: repeated google.analytics.admin.v1beta.AccessFilterExpression expressions = 1;
   */
  expressions: AccessFilterExpression[];
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessFilterExpressionList.
 * Use `create(AccessFilterExpressionListSchema)` to create a new message.
 */
export const AccessFilterExpressionListSchema: GenMessage<AccessFilterExpressionList> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 4);

/**
 * An expression to filter dimension or metric values.
 *
 * @generated from message google.analytics.admin.v1beta.AccessFilter
 */
export type AccessFilter = Message<"google.analytics.admin.v1beta.AccessFilter"> & {
  /**
   * Specify one type of filter for `Filter`.
   *
   * @generated from oneof google.analytics.admin.v1beta.AccessFilter.one_filter
   */
  oneFilter: {
    /**
     * Strings related filter.
     *
     * @generated from field: google.analytics.admin.v1beta.AccessStringFilter string_filter = 2;
     */
    value: AccessStringFilter;
    case: "stringFilter";
  } | {
    /**
     * A filter for in list values.
     *
     * @generated from field: google.analytics.admin.v1beta.AccessInListFilter in_list_filter = 3;
     */
    value: AccessInListFilter;
    case: "inListFilter";
  } | {
    /**
     * A filter for numeric or date values.
     *
     * @generated from field: google.analytics.admin.v1beta.AccessNumericFilter numeric_filter = 4;
     */
    value: AccessNumericFilter;
    case: "numericFilter";
  } | {
    /**
     * A filter for two values.
     *
     * @generated from field: google.analytics.admin.v1beta.AccessBetweenFilter between_filter = 5;
     */
    value: AccessBetweenFilter;
    case: "betweenFilter";
  } | { case: undefined; value?: undefined };

  /**
   * The dimension name or metric name.
   *
   * @generated from field: string field_name = 1;
   */
  fieldName: string;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessFilter.
 * Use `create(AccessFilterSchema)` to create a new message.
 */
export const AccessFilterSchema: GenMessage<AccessFilter> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 5);

/**
 * The filter for strings.
 *
 * @generated from message google.analytics.admin.v1beta.AccessStringFilter
 */
export type AccessStringFilter = Message<"google.analytics.admin.v1beta.AccessStringFilter"> & {
  /**
   * The match type for this filter.
   *
   * @generated from field: google.analytics.admin.v1beta.AccessStringFilter.MatchType match_type = 1;
   */
  matchType: AccessStringFilter_MatchType;

  /**
   * The string value used for the matching.
   *
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * If true, the string value is case sensitive.
   *
   * @generated from field: bool case_sensitive = 3;
   */
  caseSensitive: boolean;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessStringFilter.
 * Use `create(AccessStringFilterSchema)` to create a new message.
 */
export const AccessStringFilterSchema: GenMessage<AccessStringFilter> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 6);

/**
 * The match type of a string filter.
 *
 * @generated from enum google.analytics.admin.v1beta.AccessStringFilter.MatchType
 */
export enum AccessStringFilter_MatchType {
  /**
   * Unspecified
   *
   * @generated from enum value: MATCH_TYPE_UNSPECIFIED = 0;
   */
  MATCH_TYPE_UNSPECIFIED = 0,

  /**
   * Exact match of the string value.
   *
   * @generated from enum value: EXACT = 1;
   */
  EXACT = 1,

  /**
   * Begins with the string value.
   *
   * @generated from enum value: BEGINS_WITH = 2;
   */
  BEGINS_WITH = 2,

  /**
   * Ends with the string value.
   *
   * @generated from enum value: ENDS_WITH = 3;
   */
  ENDS_WITH = 3,

  /**
   * Contains the string value.
   *
   * @generated from enum value: CONTAINS = 4;
   */
  CONTAINS = 4,

  /**
   * Full match for the regular expression with the string value.
   *
   * @generated from enum value: FULL_REGEXP = 5;
   */
  FULL_REGEXP = 5,

  /**
   * Partial match for the regular expression with the string value.
   *
   * @generated from enum value: PARTIAL_REGEXP = 6;
   */
  PARTIAL_REGEXP = 6,
}

/**
 * Describes the enum google.analytics.admin.v1beta.AccessStringFilter.MatchType.
 */
export const AccessStringFilter_MatchTypeSchema: GenEnum<AccessStringFilter_MatchType> = /*@__PURE__*/
  enumDesc(file_google_analytics_admin_v1beta_access_report, 6, 0);

/**
 * The result needs to be in a list of string values.
 *
 * @generated from message google.analytics.admin.v1beta.AccessInListFilter
 */
export type AccessInListFilter = Message<"google.analytics.admin.v1beta.AccessInListFilter"> & {
  /**
   * The list of string values. Must be non-empty.
   *
   * @generated from field: repeated string values = 1;
   */
  values: string[];

  /**
   * If true, the string value is case sensitive.
   *
   * @generated from field: bool case_sensitive = 2;
   */
  caseSensitive: boolean;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessInListFilter.
 * Use `create(AccessInListFilterSchema)` to create a new message.
 */
export const AccessInListFilterSchema: GenMessage<AccessInListFilter> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 7);

/**
 * Filters for numeric or date values.
 *
 * @generated from message google.analytics.admin.v1beta.AccessNumericFilter
 */
export type AccessNumericFilter = Message<"google.analytics.admin.v1beta.AccessNumericFilter"> & {
  /**
   * The operation type for this filter.
   *
   * @generated from field: google.analytics.admin.v1beta.AccessNumericFilter.Operation operation = 1;
   */
  operation: AccessNumericFilter_Operation;

  /**
   * A numeric value or a date value.
   *
   * @generated from field: google.analytics.admin.v1beta.NumericValue value = 2;
   */
  value?: NumericValue;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessNumericFilter.
 * Use `create(AccessNumericFilterSchema)` to create a new message.
 */
export const AccessNumericFilterSchema: GenMessage<AccessNumericFilter> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 8);

/**
 * The operation applied to a numeric filter.
 *
 * @generated from enum google.analytics.admin.v1beta.AccessNumericFilter.Operation
 */
export enum AccessNumericFilter_Operation {
  /**
   * Unspecified.
   *
   * @generated from enum value: OPERATION_UNSPECIFIED = 0;
   */
  OPERATION_UNSPECIFIED = 0,

  /**
   * Equal
   *
   * @generated from enum value: EQUAL = 1;
   */
  EQUAL = 1,

  /**
   * Less than
   *
   * @generated from enum value: LESS_THAN = 2;
   */
  LESS_THAN = 2,

  /**
   * Less than or equal
   *
   * @generated from enum value: LESS_THAN_OR_EQUAL = 3;
   */
  LESS_THAN_OR_EQUAL = 3,

  /**
   * Greater than
   *
   * @generated from enum value: GREATER_THAN = 4;
   */
  GREATER_THAN = 4,

  /**
   * Greater than or equal
   *
   * @generated from enum value: GREATER_THAN_OR_EQUAL = 5;
   */
  GREATER_THAN_OR_EQUAL = 5,
}

/**
 * Describes the enum google.analytics.admin.v1beta.AccessNumericFilter.Operation.
 */
export const AccessNumericFilter_OperationSchema: GenEnum<AccessNumericFilter_Operation> = /*@__PURE__*/
  enumDesc(file_google_analytics_admin_v1beta_access_report, 8, 0);

/**
 * To express that the result needs to be between two numbers (inclusive).
 *
 * @generated from message google.analytics.admin.v1beta.AccessBetweenFilter
 */
export type AccessBetweenFilter = Message<"google.analytics.admin.v1beta.AccessBetweenFilter"> & {
  /**
   * Begins with this number.
   *
   * @generated from field: google.analytics.admin.v1beta.NumericValue from_value = 1;
   */
  fromValue?: NumericValue;

  /**
   * Ends with this number.
   *
   * @generated from field: google.analytics.admin.v1beta.NumericValue to_value = 2;
   */
  toValue?: NumericValue;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessBetweenFilter.
 * Use `create(AccessBetweenFilterSchema)` to create a new message.
 */
export const AccessBetweenFilterSchema: GenMessage<AccessBetweenFilter> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 9);

/**
 * To represent a number.
 *
 * @generated from message google.analytics.admin.v1beta.NumericValue
 */
export type NumericValue = Message<"google.analytics.admin.v1beta.NumericValue"> & {
  /**
   * One of a numeric value
   *
   * @generated from oneof google.analytics.admin.v1beta.NumericValue.one_value
   */
  oneValue: {
    /**
     * Integer value
     *
     * @generated from field: int64 int64_value = 1;
     */
    value: bigint;
    case: "int64Value";
  } | {
    /**
     * Double value
     *
     * @generated from field: double double_value = 2;
     */
    value: number;
    case: "doubleValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.analytics.admin.v1beta.NumericValue.
 * Use `create(NumericValueSchema)` to create a new message.
 */
export const NumericValueSchema: GenMessage<NumericValue> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 10);

/**
 * Order bys define how rows will be sorted in the response. For example,
 * ordering rows by descending access count is one ordering, and ordering rows
 * by the country string is a different ordering.
 *
 * @generated from message google.analytics.admin.v1beta.AccessOrderBy
 */
export type AccessOrderBy = Message<"google.analytics.admin.v1beta.AccessOrderBy"> & {
  /**
   * Specify one type of order by for `OrderBy`.
   *
   * @generated from oneof google.analytics.admin.v1beta.AccessOrderBy.one_order_by
   */
  oneOrderBy: {
    /**
     * Sorts results by a metric's values.
     *
     * @generated from field: google.analytics.admin.v1beta.AccessOrderBy.MetricOrderBy metric = 1;
     */
    value: AccessOrderBy_MetricOrderBy;
    case: "metric";
  } | {
    /**
     * Sorts results by a dimension's values.
     *
     * @generated from field: google.analytics.admin.v1beta.AccessOrderBy.DimensionOrderBy dimension = 2;
     */
    value: AccessOrderBy_DimensionOrderBy;
    case: "dimension";
  } | { case: undefined; value?: undefined };

  /**
   * If true, sorts by descending order. If false or unspecified, sorts in
   * ascending order.
   *
   * @generated from field: bool desc = 3;
   */
  desc: boolean;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessOrderBy.
 * Use `create(AccessOrderBySchema)` to create a new message.
 */
export const AccessOrderBySchema: GenMessage<AccessOrderBy> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 11);

/**
 * Sorts by metric values.
 *
 * @generated from message google.analytics.admin.v1beta.AccessOrderBy.MetricOrderBy
 */
export type AccessOrderBy_MetricOrderBy = Message<"google.analytics.admin.v1beta.AccessOrderBy.MetricOrderBy"> & {
  /**
   * A metric name in the request to order by.
   *
   * @generated from field: string metric_name = 1;
   */
  metricName: string;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessOrderBy.MetricOrderBy.
 * Use `create(AccessOrderBy_MetricOrderBySchema)` to create a new message.
 */
export const AccessOrderBy_MetricOrderBySchema: GenMessage<AccessOrderBy_MetricOrderBy> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 11, 0);

/**
 * Sorts by dimension values.
 *
 * @generated from message google.analytics.admin.v1beta.AccessOrderBy.DimensionOrderBy
 */
export type AccessOrderBy_DimensionOrderBy = Message<"google.analytics.admin.v1beta.AccessOrderBy.DimensionOrderBy"> & {
  /**
   * A dimension name in the request to order by.
   *
   * @generated from field: string dimension_name = 1;
   */
  dimensionName: string;

  /**
   * Controls the rule for dimension value ordering.
   *
   * @generated from field: google.analytics.admin.v1beta.AccessOrderBy.DimensionOrderBy.OrderType order_type = 2;
   */
  orderType: AccessOrderBy_DimensionOrderBy_OrderType;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessOrderBy.DimensionOrderBy.
 * Use `create(AccessOrderBy_DimensionOrderBySchema)` to create a new message.
 */
export const AccessOrderBy_DimensionOrderBySchema: GenMessage<AccessOrderBy_DimensionOrderBy> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 11, 1);

/**
 * Rule to order the string dimension values by.
 *
 * @generated from enum google.analytics.admin.v1beta.AccessOrderBy.DimensionOrderBy.OrderType
 */
export enum AccessOrderBy_DimensionOrderBy_OrderType {
  /**
   * Unspecified.
   *
   * @generated from enum value: ORDER_TYPE_UNSPECIFIED = 0;
   */
  ORDER_TYPE_UNSPECIFIED = 0,

  /**
   * Alphanumeric sort by Unicode code point. For example, "2" < "A" < "X" <
   * "b" < "z".
   *
   * @generated from enum value: ALPHANUMERIC = 1;
   */
  ALPHANUMERIC = 1,

  /**
   * Case insensitive alphanumeric sort by lower case Unicode code point.
   * For example, "2" < "A" < "b" < "X" < "z".
   *
   * @generated from enum value: CASE_INSENSITIVE_ALPHANUMERIC = 2;
   */
  CASE_INSENSITIVE_ALPHANUMERIC = 2,

  /**
   * Dimension values are converted to numbers before sorting. For example
   * in NUMERIC sort, "25" < "100", and in `ALPHANUMERIC` sort, "100" <
   * "25". Non-numeric dimension values all have equal ordering value below
   * all numeric values.
   *
   * @generated from enum value: NUMERIC = 3;
   */
  NUMERIC = 3,
}

/**
 * Describes the enum google.analytics.admin.v1beta.AccessOrderBy.DimensionOrderBy.OrderType.
 */
export const AccessOrderBy_DimensionOrderBy_OrderTypeSchema: GenEnum<AccessOrderBy_DimensionOrderBy_OrderType> = /*@__PURE__*/
  enumDesc(file_google_analytics_admin_v1beta_access_report, 11, 1, 0);

/**
 * Describes a dimension column in the report. Dimensions requested in a report
 * produce column entries within rows and DimensionHeaders. However, dimensions
 * used exclusively within filters or expressions do not produce columns in a
 * report; correspondingly, those dimensions do not produce headers.
 *
 * @generated from message google.analytics.admin.v1beta.AccessDimensionHeader
 */
export type AccessDimensionHeader = Message<"google.analytics.admin.v1beta.AccessDimensionHeader"> & {
  /**
   * The dimension's name; for example 'userEmail'.
   *
   * @generated from field: string dimension_name = 1;
   */
  dimensionName: string;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessDimensionHeader.
 * Use `create(AccessDimensionHeaderSchema)` to create a new message.
 */
export const AccessDimensionHeaderSchema: GenMessage<AccessDimensionHeader> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 12);

/**
 * Describes a metric column in the report. Visible metrics requested in a
 * report produce column entries within rows and MetricHeaders. However,
 * metrics used exclusively within filters or expressions do not produce columns
 * in a report; correspondingly, those metrics do not produce headers.
 *
 * @generated from message google.analytics.admin.v1beta.AccessMetricHeader
 */
export type AccessMetricHeader = Message<"google.analytics.admin.v1beta.AccessMetricHeader"> & {
  /**
   * The metric's name; for example 'accessCount'.
   *
   * @generated from field: string metric_name = 1;
   */
  metricName: string;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessMetricHeader.
 * Use `create(AccessMetricHeaderSchema)` to create a new message.
 */
export const AccessMetricHeaderSchema: GenMessage<AccessMetricHeader> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 13);

/**
 * Access report data for each row.
 *
 * @generated from message google.analytics.admin.v1beta.AccessRow
 */
export type AccessRow = Message<"google.analytics.admin.v1beta.AccessRow"> & {
  /**
   * List of dimension values. These values are in the same order as specified
   * in the request.
   *
   * @generated from field: repeated google.analytics.admin.v1beta.AccessDimensionValue dimension_values = 1;
   */
  dimensionValues: AccessDimensionValue[];

  /**
   * List of metric values. These values are in the same order as specified
   * in the request.
   *
   * @generated from field: repeated google.analytics.admin.v1beta.AccessMetricValue metric_values = 2;
   */
  metricValues: AccessMetricValue[];
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessRow.
 * Use `create(AccessRowSchema)` to create a new message.
 */
export const AccessRowSchema: GenMessage<AccessRow> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 14);

/**
 * The value of a dimension.
 *
 * @generated from message google.analytics.admin.v1beta.AccessDimensionValue
 */
export type AccessDimensionValue = Message<"google.analytics.admin.v1beta.AccessDimensionValue"> & {
  /**
   * The dimension value. For example, this value may be 'France' for the
   * 'country' dimension.
   *
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessDimensionValue.
 * Use `create(AccessDimensionValueSchema)` to create a new message.
 */
export const AccessDimensionValueSchema: GenMessage<AccessDimensionValue> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 15);

/**
 * The value of a metric.
 *
 * @generated from message google.analytics.admin.v1beta.AccessMetricValue
 */
export type AccessMetricValue = Message<"google.analytics.admin.v1beta.AccessMetricValue"> & {
  /**
   * The measurement value. For example, this value may be '13'.
   *
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessMetricValue.
 * Use `create(AccessMetricValueSchema)` to create a new message.
 */
export const AccessMetricValueSchema: GenMessage<AccessMetricValue> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 16);

/**
 * Current state of all quotas for this Analytics property. If any quota for a
 * property is exhausted, all requests to that property will return Resource
 * Exhausted errors.
 *
 * @generated from message google.analytics.admin.v1beta.AccessQuota
 */
export type AccessQuota = Message<"google.analytics.admin.v1beta.AccessQuota"> & {
  /**
   * Properties can use 250,000 tokens per day. Most requests consume fewer than
   * 10 tokens.
   *
   * @generated from field: google.analytics.admin.v1beta.AccessQuotaStatus tokens_per_day = 1;
   */
  tokensPerDay?: AccessQuotaStatus;

  /**
   * Properties can use 50,000 tokens per hour. An API request consumes a single
   * number of tokens, and that number is deducted from all of the hourly,
   * daily, and per project hourly quotas.
   *
   * @generated from field: google.analytics.admin.v1beta.AccessQuotaStatus tokens_per_hour = 2;
   */
  tokensPerHour?: AccessQuotaStatus;

  /**
   * Properties can use up to 50 concurrent requests.
   *
   * @generated from field: google.analytics.admin.v1beta.AccessQuotaStatus concurrent_requests = 3;
   */
  concurrentRequests?: AccessQuotaStatus;

  /**
   * Properties and cloud project pairs can have up to 50 server errors per
   * hour.
   *
   * @generated from field: google.analytics.admin.v1beta.AccessQuotaStatus server_errors_per_project_per_hour = 4;
   */
  serverErrorsPerProjectPerHour?: AccessQuotaStatus;

  /**
   * Properties can use up to 25% of their tokens per project per hour. This
   * amounts to Analytics 360 Properties can use 12,500 tokens per project per
   * hour. An API request consumes a single number of tokens, and that number is
   * deducted from all of the hourly, daily, and per project hourly quotas.
   *
   * @generated from field: google.analytics.admin.v1beta.AccessQuotaStatus tokens_per_project_per_hour = 5;
   */
  tokensPerProjectPerHour?: AccessQuotaStatus;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessQuota.
 * Use `create(AccessQuotaSchema)` to create a new message.
 */
export const AccessQuotaSchema: GenMessage<AccessQuota> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 17);

/**
 * Current state for a particular quota group.
 *
 * @generated from message google.analytics.admin.v1beta.AccessQuotaStatus
 */
export type AccessQuotaStatus = Message<"google.analytics.admin.v1beta.AccessQuotaStatus"> & {
  /**
   * Quota consumed by this request.
   *
   * @generated from field: int32 consumed = 1;
   */
  consumed: number;

  /**
   * Quota remaining after this request.
   *
   * @generated from field: int32 remaining = 2;
   */
  remaining: number;
};

/**
 * Describes the message google.analytics.admin.v1beta.AccessQuotaStatus.
 * Use `create(AccessQuotaStatusSchema)` to create a new message.
 */
export const AccessQuotaStatusSchema: GenMessage<AccessQuotaStatus> = /*@__PURE__*/
  messageDesc(file_google_analytics_admin_v1beta_access_report, 18);

