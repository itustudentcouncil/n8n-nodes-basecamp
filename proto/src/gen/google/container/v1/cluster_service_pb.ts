// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/container/v1/cluster_service.proto (package google.container.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { Duration, EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Code } from "../../rpc/code_pb";
import { file_google_rpc_code } from "../../rpc/code_pb";
import type { Status } from "../../rpc/status_pb";
import { file_google_rpc_status } from "../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/container/v1/cluster_service.proto.
 */
export const file_google_container_v1_cluster_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_timestamp, file_google_protobuf_wrappers, file_google_rpc_code, file_google_rpc_status]);

/**
 * Parameters that can be configured on Linux nodes.
 *
 * @generated from message google.container.v1.LinuxNodeConfig
 */
export type LinuxNodeConfig = Message<"google.container.v1.LinuxNodeConfig"> & {
  /**
   * The Linux kernel parameters to be applied to the nodes and all pods running
   * on the nodes.
   *
   * The following parameters are supported.
   *
   * net.core.busy_poll
   * net.core.busy_read
   * net.core.netdev_max_backlog
   * net.core.rmem_max
   * net.core.wmem_default
   * net.core.wmem_max
   * net.core.optmem_max
   * net.core.somaxconn
   * net.ipv4.tcp_rmem
   * net.ipv4.tcp_wmem
   * net.ipv4.tcp_tw_reuse
   *
   * @generated from field: map<string, string> sysctls = 1;
   */
  sysctls: { [key: string]: string };

  /**
   * cgroup_mode specifies the cgroup mode to be used on the node.
   *
   * @generated from field: google.container.v1.LinuxNodeConfig.CgroupMode cgroup_mode = 2;
   */
  cgroupMode: LinuxNodeConfig_CgroupMode;

  /**
   * Optional. Amounts for 2M and 1G hugepages
   *
   * @generated from field: optional google.container.v1.LinuxNodeConfig.HugepagesConfig hugepages = 3;
   */
  hugepages?: LinuxNodeConfig_HugepagesConfig;
};

/**
 * Describes the message google.container.v1.LinuxNodeConfig.
 * Use `create(LinuxNodeConfigSchema)` to create a new message.
 */
export const LinuxNodeConfigSchema: GenMessage<LinuxNodeConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 0);

/**
 * Hugepages amount in both 2m and 1g size
 *
 * @generated from message google.container.v1.LinuxNodeConfig.HugepagesConfig
 */
export type LinuxNodeConfig_HugepagesConfig = Message<"google.container.v1.LinuxNodeConfig.HugepagesConfig"> & {
  /**
   * Optional. Amount of 2M hugepages
   *
   * @generated from field: optional int32 hugepage_size2m = 1;
   */
  hugepageSize2m?: number;

  /**
   * Optional. Amount of 1G hugepages
   *
   * @generated from field: optional int32 hugepage_size1g = 2;
   */
  hugepageSize1g?: number;
};

/**
 * Describes the message google.container.v1.LinuxNodeConfig.HugepagesConfig.
 * Use `create(LinuxNodeConfig_HugepagesConfigSchema)` to create a new message.
 */
export const LinuxNodeConfig_HugepagesConfigSchema: GenMessage<LinuxNodeConfig_HugepagesConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 0, 0);

/**
 * Possible cgroup modes that can be used.
 *
 * @generated from enum google.container.v1.LinuxNodeConfig.CgroupMode
 */
export enum LinuxNodeConfig_CgroupMode {
  /**
   * CGROUP_MODE_UNSPECIFIED is when unspecified cgroup configuration is used.
   * The default for the GKE node OS image will be used.
   *
   * @generated from enum value: CGROUP_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * CGROUP_MODE_V1 specifies to use cgroupv1 for the cgroup configuration on
   * the node image.
   *
   * @generated from enum value: CGROUP_MODE_V1 = 1;
   */
  V1 = 1,

  /**
   * CGROUP_MODE_V2 specifies to use cgroupv2 for the cgroup configuration on
   * the node image.
   *
   * @generated from enum value: CGROUP_MODE_V2 = 2;
   */
  V2 = 2,
}

/**
 * Describes the enum google.container.v1.LinuxNodeConfig.CgroupMode.
 */
export const LinuxNodeConfig_CgroupModeSchema: GenEnum<LinuxNodeConfig_CgroupMode> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 0, 0);

/**
 * Parameters that can be configured on Windows nodes.
 * Windows Node Config that define the parameters that will be used to
 * configure the Windows node pool settings
 *
 * @generated from message google.container.v1.WindowsNodeConfig
 */
export type WindowsNodeConfig = Message<"google.container.v1.WindowsNodeConfig"> & {
  /**
   * OSVersion specifies the Windows node config to be used on the node
   *
   * @generated from field: google.container.v1.WindowsNodeConfig.OSVersion os_version = 1;
   */
  osVersion: WindowsNodeConfig_OSVersion;
};

/**
 * Describes the message google.container.v1.WindowsNodeConfig.
 * Use `create(WindowsNodeConfigSchema)` to create a new message.
 */
export const WindowsNodeConfigSchema: GenMessage<WindowsNodeConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 1);

/**
 * Possible OS version that can be used.
 *
 * @generated from enum google.container.v1.WindowsNodeConfig.OSVersion
 */
export enum WindowsNodeConfig_OSVersion {
  /**
   * When OSVersion is not specified
   *
   * @generated from enum value: OS_VERSION_UNSPECIFIED = 0;
   */
  OS_VERSION_UNSPECIFIED = 0,

  /**
   * LTSC2019 specifies to use LTSC2019 as the Windows Servercore Base Image
   *
   * @generated from enum value: OS_VERSION_LTSC2019 = 1;
   */
  OS_VERSION_LTSC2019 = 1,

  /**
   * LTSC2022 specifies to use LTSC2022 as the Windows Servercore Base Image
   *
   * @generated from enum value: OS_VERSION_LTSC2022 = 2;
   */
  OS_VERSION_LTSC2022 = 2,
}

/**
 * Describes the enum google.container.v1.WindowsNodeConfig.OSVersion.
 */
export const WindowsNodeConfig_OSVersionSchema: GenEnum<WindowsNodeConfig_OSVersion> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 1, 0);

/**
 * Node kubelet configs.
 *
 * @generated from message google.container.v1.NodeKubeletConfig
 */
export type NodeKubeletConfig = Message<"google.container.v1.NodeKubeletConfig"> & {
  /**
   * Control the CPU management policy on the node.
   * See
   * https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/
   *
   * The following values are allowed.
   * * "none": the default, which represents the existing scheduling behavior.
   * * "static": allows pods with certain resource characteristics to be granted
   * increased CPU affinity and exclusivity on the node.
   * The default value is 'none' if unspecified.
   *
   * @generated from field: string cpu_manager_policy = 1;
   */
  cpuManagerPolicy: string;

  /**
   * Enable CPU CFS quota enforcement for containers that specify CPU limits.
   *
   * This option is enabled by default which makes kubelet use CFS quota
   * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
   * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
   * all.
   *
   * Disable this option to mitigate CPU throttling problems while still having
   * your pods to be in Guaranteed QoS class by specifying the CPU limits.
   *
   * The default value is 'true' if unspecified.
   *
   * @generated from field: google.protobuf.BoolValue cpu_cfs_quota = 2;
   */
  cpuCfsQuota?: boolean;

  /**
   * Set the CPU CFS quota period value 'cpu.cfs_period_us'.
   *
   * The string must be a sequence of decimal numbers, each with optional
   * fraction and a unit suffix, such as "300ms".
   * Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
   * The value must be a positive duration.
   *
   * @generated from field: string cpu_cfs_quota_period = 3;
   */
  cpuCfsQuotaPeriod: string;

  /**
   * Set the Pod PID limits. See
   * https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits
   *
   * Controls the maximum number of processes allowed to run in a pod. The value
   * must be greater than or equal to 1024 and less than 4194304.
   *
   * @generated from field: int64 pod_pids_limit = 4;
   */
  podPidsLimit: bigint;

  /**
   * Enable or disable Kubelet read only port.
   *
   * @generated from field: optional bool insecure_kubelet_readonly_port_enabled = 7;
   */
  insecureKubeletReadonlyPortEnabled?: boolean;
};

/**
 * Describes the message google.container.v1.NodeKubeletConfig.
 * Use `create(NodeKubeletConfigSchema)` to create a new message.
 */
export const NodeKubeletConfigSchema: GenMessage<NodeKubeletConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 2);

/**
 * Parameters that describe the nodes in a cluster.
 *
 * GKE Autopilot clusters do not
 * recognize parameters in `NodeConfig`. Use
 * [AutoprovisioningNodePoolDefaults][google.container.v1.AutoprovisioningNodePoolDefaults]
 * instead.
 *
 * @generated from message google.container.v1.NodeConfig
 */
export type NodeConfig = Message<"google.container.v1.NodeConfig"> & {
  /**
   * The name of a Google Compute Engine [machine
   * type](https://cloud.google.com/compute/docs/machine-types)
   *
   * If unspecified, the default machine type is `e2-medium`.
   *
   * @generated from field: string machine_type = 1;
   */
  machineType: string;

  /**
   * Size of the disk attached to each node, specified in GB.
   * The smallest allowed disk size is 10GB.
   *
   * If unspecified, the default disk size is 100GB.
   *
   * @generated from field: int32 disk_size_gb = 2;
   */
  diskSizeGb: number;

  /**
   * The set of Google API scopes to be made available on all of the
   * node VMs under the "default" service account.
   *
   * The following scopes are recommended, but not required, and by default are
   * not included:
   *
   * * `https://www.googleapis.com/auth/compute` is required for mounting
   * persistent storage on your nodes.
   * * `https://www.googleapis.com/auth/devstorage.read_only` is required for
   * communicating with **gcr.io**
   * (the [Google Container
   * Registry](https://cloud.google.com/container-registry/)).
   *
   * If unspecified, no scopes are added, unless Cloud Logging or Cloud
   * Monitoring are enabled, in which case their required scopes will be added.
   *
   * @generated from field: repeated string oauth_scopes = 3;
   */
  oauthScopes: string[];

  /**
   * The Google Cloud Platform Service Account to be used by the node VMs.
   * Specify the email address of the Service Account; otherwise, if no Service
   * Account is specified, the "default" service account is used.
   *
   * @generated from field: string service_account = 9;
   */
  serviceAccount: string;

  /**
   * The metadata key/value pairs assigned to instances in the cluster.
   *
   * Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes
   * in length. These are reflected as part of a URL in the metadata server.
   * Additionally, to avoid ambiguity, keys must not conflict with any other
   * metadata keys for the project or be one of the reserved keys:
   *
   *  - "cluster-location"
   *  - "cluster-name"
   *  - "cluster-uid"
   *  - "configure-sh"
   *  - "containerd-configure-sh"
   *  - "enable-os-login"
   *  - "gci-ensure-gke-docker"
   *  - "gci-metrics-enabled"
   *  - "gci-update-strategy"
   *  - "instance-template"
   *  - "kube-env"
   *  - "startup-script"
   *  - "user-data"
   *  - "disable-address-manager"
   *  - "windows-startup-script-ps1"
   *  - "common-psm1"
   *  - "k8s-node-setup-psm1"
   *  - "install-ssh-psm1"
   *  - "user-profile-psm1"
   *
   * Values are free-form strings, and only have meaning as interpreted by
   * the image running in the instance. The only restriction placed on them is
   * that each value's size must be less than or equal to 32 KB.
   *
   * The total size of all keys and values must be less than 512 KB.
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };

  /**
   * The image type to use for this node. Note that for a given image type,
   * the latest version of it will be used. Please see
   * https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for
   * available image types.
   *
   * @generated from field: string image_type = 5;
   */
  imageType: string;

  /**
   * The map of Kubernetes labels (key/value pairs) to be applied to each node.
   * These will added in addition to any default label(s) that
   * Kubernetes may apply to the node.
   * In case of conflict in label keys, the applied set may differ depending on
   * the Kubernetes version -- it's best to assume the behavior is undefined
   * and conflicts should be avoided.
   * For more information, including usage and the valid values, see:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };

  /**
   * The number of local SSD disks to be attached to the node.
   *
   * The limit for this value is dependent upon the maximum number of
   * disks available on a machine per zone. See:
   * https://cloud.google.com/compute/docs/disks/local-ssd
   * for more information.
   *
   * @generated from field: int32 local_ssd_count = 7;
   */
  localSsdCount: number;

  /**
   * The list of instance tags applied to all nodes. Tags are used to identify
   * valid sources or targets for network firewalls and are specified by
   * the client during cluster or node pool creation. Each tag within the list
   * must comply with RFC1035.
   *
   * @generated from field: repeated string tags = 8;
   */
  tags: string[];

  /**
   * Whether the nodes are created as preemptible VM instances. See:
   * https://cloud.google.com/compute/docs/instances/preemptible for more
   * information about preemptible VM instances.
   *
   * @generated from field: bool preemptible = 10;
   */
  preemptible: boolean;

  /**
   * A list of hardware accelerators to be attached to each node.
   * See https://cloud.google.com/compute/docs/gpus for more information about
   * support for GPUs.
   *
   * @generated from field: repeated google.container.v1.AcceleratorConfig accelerators = 11;
   */
  accelerators: AcceleratorConfig[];

  /**
   * Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or
   * 'pd-balanced')
   *
   * If unspecified, the default disk type is 'pd-standard'
   *
   * @generated from field: string disk_type = 12;
   */
  diskType: string;

  /**
   * Minimum CPU platform to be used by this instance. The instance may be
   * scheduled on the specified or newer CPU platform. Applicable values are the
   * friendly names of CPU platforms, such as
   * `minCpuPlatform: "Intel Haswell"` or
   * `minCpuPlatform: "Intel Sandy Bridge"`. For more
   * information, read [how to specify min CPU
   * platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
   *
   * @generated from field: string min_cpu_platform = 13;
   */
  minCpuPlatform: string;

  /**
   * The workload metadata configuration for this node.
   *
   * @generated from field: google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
   */
  workloadMetadataConfig?: WorkloadMetadataConfig;

  /**
   * List of kubernetes taints to be applied to each node.
   *
   * For more information, including usage and the valid values, see:
   * https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
   *
   * @generated from field: repeated google.container.v1.NodeTaint taints = 15;
   */
  taints: NodeTaint[];

  /**
   * Sandbox configuration for this node.
   *
   * @generated from field: google.container.v1.SandboxConfig sandbox_config = 17;
   */
  sandboxConfig?: SandboxConfig;

  /**
   * Setting this field will assign instances of this
   * pool to run on the specified node group. This is useful for running
   * workloads on [sole tenant
   * nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
   *
   * @generated from field: string node_group = 18;
   */
  nodeGroup: string;

  /**
   * The optional reservation affinity. Setting this field will apply
   * the specified [Zonal Compute
   * Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources)
   * to this node pool.
   *
   * @generated from field: google.container.v1.ReservationAffinity reservation_affinity = 19;
   */
  reservationAffinity?: ReservationAffinity;

  /**
   * Shielded Instance options.
   *
   * @generated from field: google.container.v1.ShieldedInstanceConfig shielded_instance_config = 20;
   */
  shieldedInstanceConfig?: ShieldedInstanceConfig;

  /**
   * Parameters that can be configured on Linux nodes.
   *
   * @generated from field: google.container.v1.LinuxNodeConfig linux_node_config = 21;
   */
  linuxNodeConfig?: LinuxNodeConfig;

  /**
   * Node kubelet configs.
   *
   * @generated from field: google.container.v1.NodeKubeletConfig kubelet_config = 22;
   */
  kubeletConfig?: NodeKubeletConfig;

  /**
   *
   * The Customer Managed Encryption Key used to encrypt the boot disk attached
   * to each node in the node pool. This should be of the form
   * projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME].
   * For more information about protecting resources with Cloud KMS Keys please
   * see:
   * https://cloud.google.com/compute/docs/disks/customer-managed-encryption
   *
   * @generated from field: string boot_disk_kms_key = 23;
   */
  bootDiskKmsKey: string;

  /**
   * Google Container File System (image streaming) configs.
   *
   * @generated from field: google.container.v1.GcfsConfig gcfs_config = 25;
   */
  gcfsConfig?: GcfsConfig;

  /**
   * Advanced features for the Compute Engine VM.
   *
   * @generated from field: google.container.v1.AdvancedMachineFeatures advanced_machine_features = 26;
   */
  advancedMachineFeatures?: AdvancedMachineFeatures;

  /**
   * Enable or disable gvnic in the node pool.
   *
   * @generated from field: google.container.v1.VirtualNIC gvnic = 29;
   */
  gvnic?: VirtualNIC;

  /**
   * Spot flag for enabling Spot VM, which is a rebrand of
   * the existing preemptible flag.
   *
   * @generated from field: bool spot = 32;
   */
  spot: boolean;

  /**
   * Confidential nodes config.
   * All the nodes in the node pool will be Confidential VM once enabled.
   *
   * @generated from field: google.container.v1.ConfidentialNodes confidential_nodes = 35;
   */
  confidentialNodes?: ConfidentialNodes;

  /**
   * Enable or disable NCCL fast socket for the node pool.
   *
   * @generated from field: optional google.container.v1.FastSocket fast_socket = 36;
   */
  fastSocket?: FastSocket;

  /**
   * The resource labels for the node pool to use to annotate any related
   * Google Compute Engine resources.
   *
   * @generated from field: map<string, string> resource_labels = 37;
   */
  resourceLabels: { [key: string]: string };

  /**
   * Logging configuration.
   *
   * @generated from field: google.container.v1.NodePoolLoggingConfig logging_config = 38;
   */
  loggingConfig?: NodePoolLoggingConfig;

  /**
   * Parameters that can be configured on Windows nodes.
   *
   * @generated from field: google.container.v1.WindowsNodeConfig windows_node_config = 39;
   */
  windowsNodeConfig?: WindowsNodeConfig;

  /**
   * Parameters for using raw-block Local NVMe SSDs.
   *
   * @generated from field: google.container.v1.LocalNvmeSsdBlockConfig local_nvme_ssd_block_config = 40;
   */
  localNvmeSsdBlockConfig?: LocalNvmeSsdBlockConfig;

  /**
   * Parameters for the node ephemeral storage using Local SSDs.
   * If unspecified, ephemeral storage is backed by the boot disk.
   *
   * @generated from field: google.container.v1.EphemeralStorageLocalSsdConfig ephemeral_storage_local_ssd_config = 41;
   */
  ephemeralStorageLocalSsdConfig?: EphemeralStorageLocalSsdConfig;

  /**
   * Parameters for node pools to be backed by shared sole tenant node groups.
   *
   * @generated from field: google.container.v1.SoleTenantConfig sole_tenant_config = 42;
   */
  soleTenantConfig?: SoleTenantConfig;

  /**
   * Parameters for containerd customization.
   *
   * @generated from field: google.container.v1.ContainerdConfig containerd_config = 43;
   */
  containerdConfig?: ContainerdConfig;

  /**
   * A map of resource manager tag keys and values to be attached to the nodes.
   *
   * @generated from field: google.container.v1.ResourceManagerTags resource_manager_tags = 45;
   */
  resourceManagerTags?: ResourceManagerTags;

  /**
   * Optional. Reserved for future use.
   *
   * @generated from field: bool enable_confidential_storage = 46;
   */
  enableConfidentialStorage: boolean;

  /**
   * List of secondary boot disks attached to the nodes.
   *
   * @generated from field: repeated google.container.v1.SecondaryBootDisk secondary_boot_disks = 48;
   */
  secondaryBootDisks: SecondaryBootDisk[];

  /**
   * Secondary boot disk update strategy.
   *
   * @generated from field: optional google.container.v1.SecondaryBootDiskUpdateStrategy secondary_boot_disk_update_strategy = 50;
   */
  secondaryBootDiskUpdateStrategy?: SecondaryBootDiskUpdateStrategy;
};

/**
 * Describes the message google.container.v1.NodeConfig.
 * Use `create(NodeConfigSchema)` to create a new message.
 */
export const NodeConfigSchema: GenMessage<NodeConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 3);

/**
 * Specifies options for controlling advanced machine features.
 *
 * @generated from message google.container.v1.AdvancedMachineFeatures
 */
export type AdvancedMachineFeatures = Message<"google.container.v1.AdvancedMachineFeatures"> & {
  /**
   * The number of threads per physical core. To disable simultaneous
   * multithreading (SMT) set this to 1. If unset, the maximum number of threads
   * supported per core by the underlying processor is assumed.
   *
   * @generated from field: optional int64 threads_per_core = 1;
   */
  threadsPerCore?: bigint;

  /**
   * Whether or not to enable nested virtualization (defaults to false).
   *
   * @generated from field: optional bool enable_nested_virtualization = 2;
   */
  enableNestedVirtualization?: boolean;
};

/**
 * Describes the message google.container.v1.AdvancedMachineFeatures.
 * Use `create(AdvancedMachineFeaturesSchema)` to create a new message.
 */
export const AdvancedMachineFeaturesSchema: GenMessage<AdvancedMachineFeatures> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 4);

/**
 * Parameters for node pool-level network config.
 *
 * @generated from message google.container.v1.NodeNetworkConfig
 */
export type NodeNetworkConfig = Message<"google.container.v1.NodeNetworkConfig"> & {
  /**
   * Input only. Whether to create a new range for pod IPs in this node pool.
   * Defaults are provided for `pod_range` and `pod_ipv4_cidr_block` if they
   * are not specified.
   *
   * If neither `create_pod_range` or `pod_range` are specified, the
   * cluster-level default (`ip_allocation_policy.cluster_ipv4_cidr_block`) is
   * used.
   *
   * Only applicable if `ip_allocation_policy.use_ip_aliases` is true.
   *
   * This field cannot be changed after the node pool has been created.
   *
   * @generated from field: bool create_pod_range = 4;
   */
  createPodRange: boolean;

  /**
   * The ID of the secondary range for pod IPs.
   * If `create_pod_range` is true, this ID is used for the new range.
   * If `create_pod_range` is false, uses an existing secondary range with this
   * ID.
   *
   * Only applicable if `ip_allocation_policy.use_ip_aliases` is true.
   *
   * This field cannot be changed after the node pool has been created.
   *
   * @generated from field: string pod_range = 5;
   */
  podRange: string;

  /**
   * The IP address range for pod IPs in this node pool.
   *
   * Only applicable if `create_pod_range` is true.
   *
   * Set to blank to have a range chosen with the default size.
   *
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   *
   * Set to a
   * [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) to pick a specific range to use.
   *
   * Only applicable if `ip_allocation_policy.use_ip_aliases` is true.
   *
   * This field cannot be changed after the node pool has been created.
   *
   * @generated from field: string pod_ipv4_cidr_block = 6;
   */
  podIpv4CidrBlock: string;

  /**
   * Whether nodes have internal IP addresses only.
   * If enable_private_nodes is not specified, then the value is derived from
   * [cluster.privateClusterConfig.enablePrivateNodes][google.container.v1beta1.PrivateClusterConfig.enablePrivateNodes]
   *
   * @generated from field: optional bool enable_private_nodes = 9;
   */
  enablePrivateNodes?: boolean;

  /**
   * Network bandwidth tier configuration.
   *
   * @generated from field: optional google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig network_performance_config = 11;
   */
  networkPerformanceConfig?: NodeNetworkConfig_NetworkPerformanceConfig;

  /**
   * [PRIVATE FIELD]
   * Pod CIDR size overprovisioning config for the nodepool.
   *
   * Pod CIDR size per node depends on max_pods_per_node. By default, the value
   * of max_pods_per_node is rounded off to next power of 2 and we then double
   * that to get the size of pod CIDR block per node.
   * Example: max_pods_per_node of 30 would result in 64 IPs (/26).
   *
   * This config can disable the doubling of IPs (we still round off to next
   * power of 2)
   * Example: max_pods_per_node of 30 will result in 32 IPs (/27) when
   * overprovisioning is disabled.
   *
   * @generated from field: google.container.v1.PodCIDROverprovisionConfig pod_cidr_overprovision_config = 13;
   */
  podCidrOverprovisionConfig?: PodCIDROverprovisionConfig;

  /**
   * We specify the additional node networks for this node pool using this list.
   * Each node network corresponds to an additional interface
   *
   * @generated from field: repeated google.container.v1.AdditionalNodeNetworkConfig additional_node_network_configs = 14;
   */
  additionalNodeNetworkConfigs: AdditionalNodeNetworkConfig[];

  /**
   * We specify the additional pod networks for this node pool using this list.
   * Each pod network corresponds to an additional alias IP range for the node
   *
   * @generated from field: repeated google.container.v1.AdditionalPodNetworkConfig additional_pod_network_configs = 15;
   */
  additionalPodNetworkConfigs: AdditionalPodNetworkConfig[];

  /**
   * Output only. The utilization of the IPv4 range for the pod.
   * The ratio is Usage/[Total number of IPs in the secondary range],
   * Usage=numNodes*numZones*podIPsPerNode.
   *
   * @generated from field: double pod_ipv4_range_utilization = 16;
   */
  podIpv4RangeUtilization: number;
};

/**
 * Describes the message google.container.v1.NodeNetworkConfig.
 * Use `create(NodeNetworkConfigSchema)` to create a new message.
 */
export const NodeNetworkConfigSchema: GenMessage<NodeNetworkConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 5);

/**
 * Configuration of all network bandwidth tiers
 *
 * @generated from message google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
 */
export type NodeNetworkConfig_NetworkPerformanceConfig = Message<"google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig"> & {
  /**
   * Specifies the total network bandwidth tier for the NodePool.
   *
   * @generated from field: optional google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.Tier total_egress_bandwidth_tier = 1;
   */
  totalEgressBandwidthTier?: NodeNetworkConfig_NetworkPerformanceConfig_Tier;
};

/**
 * Describes the message google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.
 * Use `create(NodeNetworkConfig_NetworkPerformanceConfigSchema)` to create a new message.
 */
export const NodeNetworkConfig_NetworkPerformanceConfigSchema: GenMessage<NodeNetworkConfig_NetworkPerformanceConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 5, 0);

/**
 * Node network tier
 *
 * @generated from enum google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.Tier
 */
export enum NodeNetworkConfig_NetworkPerformanceConfig_Tier {
  /**
   * Default value
   *
   * @generated from enum value: TIER_UNSPECIFIED = 0;
   */
  TIER_UNSPECIFIED = 0,

  /**
   * Higher bandwidth, actual values based on VM size.
   *
   * @generated from enum value: TIER_1 = 1;
   */
  TIER_1 = 1,
}

/**
 * Describes the enum google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.Tier.
 */
export const NodeNetworkConfig_NetworkPerformanceConfig_TierSchema: GenEnum<NodeNetworkConfig_NetworkPerformanceConfig_Tier> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 5, 0, 0);

/**
 * AdditionalNodeNetworkConfig is the configuration for additional node networks
 * within the NodeNetworkConfig message
 *
 * @generated from message google.container.v1.AdditionalNodeNetworkConfig
 */
export type AdditionalNodeNetworkConfig = Message<"google.container.v1.AdditionalNodeNetworkConfig"> & {
  /**
   * Name of the VPC where the additional interface belongs
   *
   * @generated from field: string network = 1;
   */
  network: string;

  /**
   * Name of the subnetwork where the additional interface belongs
   *
   * @generated from field: string subnetwork = 2;
   */
  subnetwork: string;
};

/**
 * Describes the message google.container.v1.AdditionalNodeNetworkConfig.
 * Use `create(AdditionalNodeNetworkConfigSchema)` to create a new message.
 */
export const AdditionalNodeNetworkConfigSchema: GenMessage<AdditionalNodeNetworkConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 6);

/**
 * AdditionalPodNetworkConfig is the configuration for additional pod networks
 * within the NodeNetworkConfig message
 *
 * @generated from message google.container.v1.AdditionalPodNetworkConfig
 */
export type AdditionalPodNetworkConfig = Message<"google.container.v1.AdditionalPodNetworkConfig"> & {
  /**
   * Name of the subnetwork where the additional pod network belongs.
   *
   * @generated from field: string subnetwork = 1;
   */
  subnetwork: string;

  /**
   * The name of the secondary range on the subnet which provides IP address for
   * this pod range.
   *
   * @generated from field: string secondary_pod_range = 2;
   */
  secondaryPodRange: string;

  /**
   * The maximum number of pods per node which use this pod network.
   *
   * @generated from field: optional google.container.v1.MaxPodsConstraint max_pods_per_node = 3;
   */
  maxPodsPerNode?: MaxPodsConstraint;
};

/**
 * Describes the message google.container.v1.AdditionalPodNetworkConfig.
 * Use `create(AdditionalPodNetworkConfigSchema)` to create a new message.
 */
export const AdditionalPodNetworkConfigSchema: GenMessage<AdditionalPodNetworkConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 7);

/**
 * A set of Shielded Instance options.
 *
 * @generated from message google.container.v1.ShieldedInstanceConfig
 */
export type ShieldedInstanceConfig = Message<"google.container.v1.ShieldedInstanceConfig"> & {
  /**
   * Defines whether the instance has Secure Boot enabled.
   *
   * Secure Boot helps ensure that the system only runs authentic software by
   * verifying the digital signature of all boot components, and halting the
   * boot process if signature verification fails.
   *
   * @generated from field: bool enable_secure_boot = 1;
   */
  enableSecureBoot: boolean;

  /**
   * Defines whether the instance has integrity monitoring enabled.
   *
   * Enables monitoring and attestation of the boot integrity of the instance.
   * The attestation is performed against the integrity policy baseline. This
   * baseline is initially derived from the implicitly trusted boot image when
   * the instance is created.
   *
   * @generated from field: bool enable_integrity_monitoring = 2;
   */
  enableIntegrityMonitoring: boolean;
};

/**
 * Describes the message google.container.v1.ShieldedInstanceConfig.
 * Use `create(ShieldedInstanceConfigSchema)` to create a new message.
 */
export const ShieldedInstanceConfigSchema: GenMessage<ShieldedInstanceConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 8);

/**
 * SandboxConfig contains configurations of the sandbox to use for the node.
 *
 * @generated from message google.container.v1.SandboxConfig
 */
export type SandboxConfig = Message<"google.container.v1.SandboxConfig"> & {
  /**
   * Type of the sandbox to use for the node.
   *
   * @generated from field: google.container.v1.SandboxConfig.Type type = 2;
   */
  type: SandboxConfig_Type;
};

/**
 * Describes the message google.container.v1.SandboxConfig.
 * Use `create(SandboxConfigSchema)` to create a new message.
 */
export const SandboxConfigSchema: GenMessage<SandboxConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 9);

/**
 * Possible types of sandboxes.
 *
 * @generated from enum google.container.v1.SandboxConfig.Type
 */
export enum SandboxConfig_Type {
  /**
   * Default value. This should not be used.
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Run sandbox using gvisor.
   *
   * @generated from enum value: GVISOR = 1;
   */
  GVISOR = 1,
}

/**
 * Describes the enum google.container.v1.SandboxConfig.Type.
 */
export const SandboxConfig_TypeSchema: GenEnum<SandboxConfig_Type> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 9, 0);

/**
 * GcfsConfig contains configurations of Google Container File System
 * (image streaming).
 *
 * @generated from message google.container.v1.GcfsConfig
 */
export type GcfsConfig = Message<"google.container.v1.GcfsConfig"> & {
  /**
   * Whether to use GCFS.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.GcfsConfig.
 * Use `create(GcfsConfigSchema)` to create a new message.
 */
export const GcfsConfigSchema: GenMessage<GcfsConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 10);

/**
 * [ReservationAffinity](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources)
 * is the configuration of desired reservation which instances could take
 * capacity from.
 *
 * @generated from message google.container.v1.ReservationAffinity
 */
export type ReservationAffinity = Message<"google.container.v1.ReservationAffinity"> & {
  /**
   * Corresponds to the type of reservation consumption.
   *
   * @generated from field: google.container.v1.ReservationAffinity.Type consume_reservation_type = 1;
   */
  consumeReservationType: ReservationAffinity_Type;

  /**
   * Corresponds to the label key of a reservation resource. To target a
   * SPECIFIC_RESERVATION by name, specify
   * "compute.googleapis.com/reservation-name" as the key and specify the name
   * of your reservation as its value.
   *
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * Corresponds to the label value(s) of reservation resource(s).
   *
   * @generated from field: repeated string values = 3;
   */
  values: string[];
};

/**
 * Describes the message google.container.v1.ReservationAffinity.
 * Use `create(ReservationAffinitySchema)` to create a new message.
 */
export const ReservationAffinitySchema: GenMessage<ReservationAffinity> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 11);

/**
 * Indicates whether to consume capacity from a reservation or not.
 *
 * @generated from enum google.container.v1.ReservationAffinity.Type
 */
export enum ReservationAffinity_Type {
  /**
   * Default value. This should not be used.
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Do not consume from any reserved capacity.
   *
   * @generated from enum value: NO_RESERVATION = 1;
   */
  NO_RESERVATION = 1,

  /**
   * Consume any reservation available.
   *
   * @generated from enum value: ANY_RESERVATION = 2;
   */
  ANY_RESERVATION = 2,

  /**
   * Must consume from a specific reservation. Must specify key value fields
   * for specifying the reservations.
   *
   * @generated from enum value: SPECIFIC_RESERVATION = 3;
   */
  SPECIFIC_RESERVATION = 3,
}

/**
 * Describes the enum google.container.v1.ReservationAffinity.Type.
 */
export const ReservationAffinity_TypeSchema: GenEnum<ReservationAffinity_Type> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 11, 0);

/**
 * SoleTenantConfig contains the NodeAffinities to specify what shared sole
 * tenant node groups should back the node pool.
 *
 * @generated from message google.container.v1.SoleTenantConfig
 */
export type SoleTenantConfig = Message<"google.container.v1.SoleTenantConfig"> & {
  /**
   * NodeAffinities used to match to a shared sole tenant node group.
   *
   * @generated from field: repeated google.container.v1.SoleTenantConfig.NodeAffinity node_affinities = 1;
   */
  nodeAffinities: SoleTenantConfig_NodeAffinity[];
};

/**
 * Describes the message google.container.v1.SoleTenantConfig.
 * Use `create(SoleTenantConfigSchema)` to create a new message.
 */
export const SoleTenantConfigSchema: GenMessage<SoleTenantConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 12);

/**
 * Specifies the NodeAffinity key, values, and affinity operator according to
 * [shared sole tenant node group
 * affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity).
 *
 * @generated from message google.container.v1.SoleTenantConfig.NodeAffinity
 */
export type SoleTenantConfig_NodeAffinity = Message<"google.container.v1.SoleTenantConfig.NodeAffinity"> & {
  /**
   * Key for NodeAffinity.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Operator for NodeAffinity.
   *
   * @generated from field: google.container.v1.SoleTenantConfig.NodeAffinity.Operator operator = 2;
   */
  operator: SoleTenantConfig_NodeAffinity_Operator;

  /**
   * Values for NodeAffinity.
   *
   * @generated from field: repeated string values = 3;
   */
  values: string[];
};

/**
 * Describes the message google.container.v1.SoleTenantConfig.NodeAffinity.
 * Use `create(SoleTenantConfig_NodeAffinitySchema)` to create a new message.
 */
export const SoleTenantConfig_NodeAffinitySchema: GenMessage<SoleTenantConfig_NodeAffinity> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 12, 0);

/**
 * Operator allows user to specify affinity or anti-affinity for the
 * given key values.
 *
 * @generated from enum google.container.v1.SoleTenantConfig.NodeAffinity.Operator
 */
export enum SoleTenantConfig_NodeAffinity_Operator {
  /**
   * Invalid or unspecified affinity operator.
   *
   * @generated from enum value: OPERATOR_UNSPECIFIED = 0;
   */
  OPERATOR_UNSPECIFIED = 0,

  /**
   * Affinity operator.
   *
   * @generated from enum value: IN = 1;
   */
  IN = 1,

  /**
   * Anti-affinity operator.
   *
   * @generated from enum value: NOT_IN = 2;
   */
  NOT_IN = 2,
}

/**
 * Describes the enum google.container.v1.SoleTenantConfig.NodeAffinity.Operator.
 */
export const SoleTenantConfig_NodeAffinity_OperatorSchema: GenEnum<SoleTenantConfig_NodeAffinity_Operator> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 12, 0, 0);

/**
 * ContainerdConfig contains configuration to customize containerd.
 *
 * @generated from message google.container.v1.ContainerdConfig
 */
export type ContainerdConfig = Message<"google.container.v1.ContainerdConfig"> & {
  /**
   * PrivateRegistryAccessConfig is used to configure access configuration
   * for private container registries.
   *
   * @generated from field: google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig private_registry_access_config = 1;
   */
  privateRegistryAccessConfig?: ContainerdConfig_PrivateRegistryAccessConfig;
};

/**
 * Describes the message google.container.v1.ContainerdConfig.
 * Use `create(ContainerdConfigSchema)` to create a new message.
 */
export const ContainerdConfigSchema: GenMessage<ContainerdConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 13);

/**
 * PrivateRegistryAccessConfig contains access configuration for
 * private container registries.
 *
 * @generated from message google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig
 */
export type ContainerdConfig_PrivateRegistryAccessConfig = Message<"google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig"> & {
  /**
   * Private registry access is enabled.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Private registry access configuration.
   *
   * @generated from field: repeated google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig certificate_authority_domain_config = 2;
   */
  certificateAuthorityDomainConfig: ContainerdConfig_PrivateRegistryAccessConfig_CertificateAuthorityDomainConfig[];
};

/**
 * Describes the message google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig.
 * Use `create(ContainerdConfig_PrivateRegistryAccessConfigSchema)` to create a new message.
 */
export const ContainerdConfig_PrivateRegistryAccessConfigSchema: GenMessage<ContainerdConfig_PrivateRegistryAccessConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 13, 0);

/**
 * CertificateAuthorityDomainConfig configures one or more fully qualified
 * domain names (FQDN) to a specific certificate.
 *
 * @generated from message google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig
 */
export type ContainerdConfig_PrivateRegistryAccessConfig_CertificateAuthorityDomainConfig = Message<"google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig"> & {
  /**
   * List of fully qualified domain names (FQDN).
   * Specifying port is supported.
   * Wilcards are NOT supported.
   * Examples:
   * - my.customdomain.com
   * - 10.0.1.2:5000
   *
   * @generated from field: repeated string fqdns = 1;
   */
  fqdns: string[];

  /**
   * Certificate access config. The following are supported:
   * - GCPSecretManagerCertificateConfig
   *
   * @generated from oneof google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig.certificate_config
   */
  certificateConfig: {
    /**
     * Google Secret Manager (GCP) certificate configuration.
     *
     * @generated from field: google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig.GCPSecretManagerCertificateConfig gcp_secret_manager_certificate_config = 2;
     */
    value: ContainerdConfig_PrivateRegistryAccessConfig_CertificateAuthorityDomainConfig_GCPSecretManagerCertificateConfig;
    case: "gcpSecretManagerCertificateConfig";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig.
 * Use `create(ContainerdConfig_PrivateRegistryAccessConfig_CertificateAuthorityDomainConfigSchema)` to create a new message.
 */
export const ContainerdConfig_PrivateRegistryAccessConfig_CertificateAuthorityDomainConfigSchema: GenMessage<ContainerdConfig_PrivateRegistryAccessConfig_CertificateAuthorityDomainConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 13, 0, 0);

/**
 * GCPSecretManagerCertificateConfig configures a secret from
 * [Google Secret Manager](https://cloud.google.com/secret-manager).
 *
 * @generated from message google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig.GCPSecretManagerCertificateConfig
 */
export type ContainerdConfig_PrivateRegistryAccessConfig_CertificateAuthorityDomainConfig_GCPSecretManagerCertificateConfig = Message<"google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig.GCPSecretManagerCertificateConfig"> & {
  /**
   * Secret URI, in the form
   * "projects/$PROJECT_ID/secrets/$SECRET_NAME/versions/$VERSION".
   * Version can be fixed (e.g. "2") or "latest"
   *
   * @generated from field: string secret_uri = 1;
   */
  secretUri: string;
};

/**
 * Describes the message google.container.v1.ContainerdConfig.PrivateRegistryAccessConfig.CertificateAuthorityDomainConfig.GCPSecretManagerCertificateConfig.
 * Use `create(ContainerdConfig_PrivateRegistryAccessConfig_CertificateAuthorityDomainConfig_GCPSecretManagerCertificateConfigSchema)` to create a new message.
 */
export const ContainerdConfig_PrivateRegistryAccessConfig_CertificateAuthorityDomainConfig_GCPSecretManagerCertificateConfigSchema: GenMessage<ContainerdConfig_PrivateRegistryAccessConfig_CertificateAuthorityDomainConfig_GCPSecretManagerCertificateConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 13, 0, 0, 0);

/**
 * Kubernetes taint is composed of three fields: key, value, and effect. Effect
 * can only be one of three types:  NoSchedule, PreferNoSchedule or NoExecute.
 *
 * See
 * [here](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration)
 * for more information, including usage and the valid values.
 *
 * @generated from message google.container.v1.NodeTaint
 */
export type NodeTaint = Message<"google.container.v1.NodeTaint"> & {
  /**
   * Key for taint.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Value for taint.
   *
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * Effect for taint.
   *
   * @generated from field: google.container.v1.NodeTaint.Effect effect = 3;
   */
  effect: NodeTaint_Effect;
};

/**
 * Describes the message google.container.v1.NodeTaint.
 * Use `create(NodeTaintSchema)` to create a new message.
 */
export const NodeTaintSchema: GenMessage<NodeTaint> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 14);

/**
 * Possible values for Effect in taint.
 *
 * @generated from enum google.container.v1.NodeTaint.Effect
 */
export enum NodeTaint_Effect {
  /**
   * Not set
   *
   * @generated from enum value: EFFECT_UNSPECIFIED = 0;
   */
  EFFECT_UNSPECIFIED = 0,

  /**
   * NoSchedule
   *
   * @generated from enum value: NO_SCHEDULE = 1;
   */
  NO_SCHEDULE = 1,

  /**
   * PreferNoSchedule
   *
   * @generated from enum value: PREFER_NO_SCHEDULE = 2;
   */
  PREFER_NO_SCHEDULE = 2,

  /**
   * NoExecute
   *
   * @generated from enum value: NO_EXECUTE = 3;
   */
  NO_EXECUTE = 3,
}

/**
 * Describes the enum google.container.v1.NodeTaint.Effect.
 */
export const NodeTaint_EffectSchema: GenEnum<NodeTaint_Effect> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 14, 0);

/**
 * Collection of Kubernetes [node
 * taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration).
 *
 * @generated from message google.container.v1.NodeTaints
 */
export type NodeTaints = Message<"google.container.v1.NodeTaints"> & {
  /**
   * List of node taints.
   *
   * @generated from field: repeated google.container.v1.NodeTaint taints = 1;
   */
  taints: NodeTaint[];
};

/**
 * Describes the message google.container.v1.NodeTaints.
 * Use `create(NodeTaintsSchema)` to create a new message.
 */
export const NodeTaintsSchema: GenMessage<NodeTaints> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 15);

/**
 * Collection of node-level [Kubernetes
 * labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels).
 *
 * @generated from message google.container.v1.NodeLabels
 */
export type NodeLabels = Message<"google.container.v1.NodeLabels"> & {
  /**
   * Map of node label keys and node label values.
   *
   * @generated from field: map<string, string> labels = 1;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.container.v1.NodeLabels.
 * Use `create(NodeLabelsSchema)` to create a new message.
 */
export const NodeLabelsSchema: GenMessage<NodeLabels> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 16);

/**
 * Collection of [GCP
 * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
 *
 * @generated from message google.container.v1.ResourceLabels
 */
export type ResourceLabels = Message<"google.container.v1.ResourceLabels"> & {
  /**
   * Map of node label keys and node label values.
   *
   * @generated from field: map<string, string> labels = 1;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.container.v1.ResourceLabels.
 * Use `create(ResourceLabelsSchema)` to create a new message.
 */
export const ResourceLabelsSchema: GenMessage<ResourceLabels> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 17);

/**
 * Collection of Compute Engine network tags that can be applied to a node's
 * underlying VM instance.
 *
 * @generated from message google.container.v1.NetworkTags
 */
export type NetworkTags = Message<"google.container.v1.NetworkTags"> & {
  /**
   * List of network tags.
   *
   * @generated from field: repeated string tags = 1;
   */
  tags: string[];
};

/**
 * Describes the message google.container.v1.NetworkTags.
 * Use `create(NetworkTagsSchema)` to create a new message.
 */
export const NetworkTagsSchema: GenMessage<NetworkTags> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 18);

/**
 * The authentication information for accessing the master endpoint.
 * Authentication can be done using HTTP basic auth or using client
 * certificates.
 *
 * @generated from message google.container.v1.MasterAuth
 */
export type MasterAuth = Message<"google.container.v1.MasterAuth"> & {
  /**
   * The username to use for HTTP basic authentication to the master endpoint.
   * For clusters v1.6.0 and later, basic authentication can be disabled by
   * leaving username unspecified (or setting it to the empty string).
   *
   * Warning: basic authentication is deprecated, and will be removed in GKE
   * control plane versions 1.19 and newer. For a list of recommended
   * authentication methods, see:
   * https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication
   *
   * @generated from field: string username = 1 [deprecated = true];
   * @deprecated
   */
  username: string;

  /**
   * The password to use for HTTP basic authentication to the master endpoint.
   * Because the master endpoint is open to the Internet, you should create a
   * strong password.  If a password is provided for cluster creation, username
   * must be non-empty.
   *
   * Warning: basic authentication is deprecated, and will be removed in GKE
   * control plane versions 1.19 and newer. For a list of recommended
   * authentication methods, see:
   * https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication
   *
   * @generated from field: string password = 2 [deprecated = true];
   * @deprecated
   */
  password: string;

  /**
   * Configuration for client certificate authentication on the cluster. For
   * clusters before v1.12, if no configuration is specified, a client
   * certificate is issued.
   *
   * @generated from field: google.container.v1.ClientCertificateConfig client_certificate_config = 3;
   */
  clientCertificateConfig?: ClientCertificateConfig;

  /**
   * Output only. Base64-encoded public certificate that is the root of
   * trust for the cluster.
   *
   * @generated from field: string cluster_ca_certificate = 100;
   */
  clusterCaCertificate: string;

  /**
   * Output only. Base64-encoded public certificate used by clients to
   * authenticate to the cluster endpoint.
   *
   * @generated from field: string client_certificate = 101;
   */
  clientCertificate: string;

  /**
   * Output only. Base64-encoded private key used by clients to authenticate
   * to the cluster endpoint.
   *
   * @generated from field: string client_key = 102;
   */
  clientKey: string;
};

/**
 * Describes the message google.container.v1.MasterAuth.
 * Use `create(MasterAuthSchema)` to create a new message.
 */
export const MasterAuthSchema: GenMessage<MasterAuth> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 19);

/**
 * Configuration for client certificates on the cluster.
 *
 * @generated from message google.container.v1.ClientCertificateConfig
 */
export type ClientCertificateConfig = Message<"google.container.v1.ClientCertificateConfig"> & {
  /**
   * Issue a client certificate.
   *
   * @generated from field: bool issue_client_certificate = 1;
   */
  issueClientCertificate: boolean;
};

/**
 * Describes the message google.container.v1.ClientCertificateConfig.
 * Use `create(ClientCertificateConfigSchema)` to create a new message.
 */
export const ClientCertificateConfigSchema: GenMessage<ClientCertificateConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 20);

/**
 * Configuration for the addons that can be automatically spun up in the
 * cluster, enabling additional functionality.
 *
 * @generated from message google.container.v1.AddonsConfig
 */
export type AddonsConfig = Message<"google.container.v1.AddonsConfig"> & {
  /**
   * Configuration for the HTTP (L7) load balancing controller addon, which
   * makes it easy to set up HTTP load balancers for services in a cluster.
   *
   * @generated from field: google.container.v1.HttpLoadBalancing http_load_balancing = 1;
   */
  httpLoadBalancing?: HttpLoadBalancing;

  /**
   * Configuration for the horizontal pod autoscaling feature, which
   * increases or decreases the number of replica pods a replication controller
   * has based on the resource usage of the existing pods.
   *
   * @generated from field: google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
   */
  horizontalPodAutoscaling?: HorizontalPodAutoscaling;

  /**
   * Configuration for the Kubernetes Dashboard.
   * This addon is deprecated, and will be disabled in 1.15. It is recommended
   * to use the Cloud Console to manage and monitor your Kubernetes clusters,
   * workloads and applications. For more information, see:
   * https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards
   *
   * @generated from field: google.container.v1.KubernetesDashboard kubernetes_dashboard = 3 [deprecated = true];
   * @deprecated
   */
  kubernetesDashboard?: KubernetesDashboard;

  /**
   * Configuration for NetworkPolicy. This only tracks whether the addon
   * is enabled or not on the Master, it does not track whether network policy
   * is enabled for the nodes.
   *
   * @generated from field: google.container.v1.NetworkPolicyConfig network_policy_config = 4;
   */
  networkPolicyConfig?: NetworkPolicyConfig;

  /**
   * Configuration for the Cloud Run addon, which allows the user to use a
   * managed Knative service.
   *
   * @generated from field: google.container.v1.CloudRunConfig cloud_run_config = 7;
   */
  cloudRunConfig?: CloudRunConfig;

  /**
   * Configuration for NodeLocalDNS, a dns cache running on cluster nodes
   *
   * @generated from field: google.container.v1.DnsCacheConfig dns_cache_config = 8;
   */
  dnsCacheConfig?: DnsCacheConfig;

  /**
   * Configuration for the ConfigConnector add-on, a Kubernetes
   * extension to manage hosted GCP services through the Kubernetes API
   *
   * @generated from field: google.container.v1.ConfigConnectorConfig config_connector_config = 10;
   */
  configConnectorConfig?: ConfigConnectorConfig;

  /**
   * Configuration for the Compute Engine Persistent Disk CSI driver.
   *
   * @generated from field: google.container.v1.GcePersistentDiskCsiDriverConfig gce_persistent_disk_csi_driver_config = 11;
   */
  gcePersistentDiskCsiDriverConfig?: GcePersistentDiskCsiDriverConfig;

  /**
   * Configuration for the GCP Filestore CSI driver.
   *
   * @generated from field: google.container.v1.GcpFilestoreCsiDriverConfig gcp_filestore_csi_driver_config = 14;
   */
  gcpFilestoreCsiDriverConfig?: GcpFilestoreCsiDriverConfig;

  /**
   * Configuration for the Backup for GKE agent addon.
   *
   * @generated from field: google.container.v1.GkeBackupAgentConfig gke_backup_agent_config = 16;
   */
  gkeBackupAgentConfig?: GkeBackupAgentConfig;

  /**
   * Configuration for the Cloud Storage Fuse CSI driver.
   *
   * @generated from field: google.container.v1.GcsFuseCsiDriverConfig gcs_fuse_csi_driver_config = 17;
   */
  gcsFuseCsiDriverConfig?: GcsFuseCsiDriverConfig;

  /**
   * Optional. Configuration for the StatefulHA add-on.
   *
   * @generated from field: google.container.v1.StatefulHAConfig stateful_ha_config = 18;
   */
  statefulHaConfig?: StatefulHAConfig;

  /**
   * Optional. Configuration for Ray Operator addon.
   *
   * @generated from field: google.container.v1.RayOperatorConfig ray_operator_config = 21;
   */
  rayOperatorConfig?: RayOperatorConfig;
};

/**
 * Describes the message google.container.v1.AddonsConfig.
 * Use `create(AddonsConfigSchema)` to create a new message.
 */
export const AddonsConfigSchema: GenMessage<AddonsConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 21);

/**
 * Configuration options for the HTTP (L7) load balancing controller addon,
 * which makes it easy to set up HTTP load balancers for services in a cluster.
 *
 * @generated from message google.container.v1.HttpLoadBalancing
 */
export type HttpLoadBalancing = Message<"google.container.v1.HttpLoadBalancing"> & {
  /**
   * Whether the HTTP Load Balancing controller is enabled in the cluster.
   * When enabled, it runs a small pod in the cluster that manages the load
   * balancers.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;
};

/**
 * Describes the message google.container.v1.HttpLoadBalancing.
 * Use `create(HttpLoadBalancingSchema)` to create a new message.
 */
export const HttpLoadBalancingSchema: GenMessage<HttpLoadBalancing> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 22);

/**
 * Configuration options for the horizontal pod autoscaling feature, which
 * increases or decreases the number of replica pods a replication controller
 * has based on the resource usage of the existing pods.
 *
 * @generated from message google.container.v1.HorizontalPodAutoscaling
 */
export type HorizontalPodAutoscaling = Message<"google.container.v1.HorizontalPodAutoscaling"> & {
  /**
   * Whether the Horizontal Pod Autoscaling feature is enabled in the cluster.
   * When enabled, it ensures that metrics are collected into Stackdriver
   * Monitoring.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;
};

/**
 * Describes the message google.container.v1.HorizontalPodAutoscaling.
 * Use `create(HorizontalPodAutoscalingSchema)` to create a new message.
 */
export const HorizontalPodAutoscalingSchema: GenMessage<HorizontalPodAutoscaling> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 23);

/**
 * Configuration for the Kubernetes Dashboard.
 *
 * @generated from message google.container.v1.KubernetesDashboard
 */
export type KubernetesDashboard = Message<"google.container.v1.KubernetesDashboard"> & {
  /**
   * Whether the Kubernetes Dashboard is enabled for this cluster.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;
};

/**
 * Describes the message google.container.v1.KubernetesDashboard.
 * Use `create(KubernetesDashboardSchema)` to create a new message.
 */
export const KubernetesDashboardSchema: GenMessage<KubernetesDashboard> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 24);

/**
 * Configuration for NetworkPolicy. This only tracks whether the addon
 * is enabled or not on the Master, it does not track whether network policy
 * is enabled for the nodes.
 *
 * @generated from message google.container.v1.NetworkPolicyConfig
 */
export type NetworkPolicyConfig = Message<"google.container.v1.NetworkPolicyConfig"> & {
  /**
   * Whether NetworkPolicy is enabled for this cluster.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;
};

/**
 * Describes the message google.container.v1.NetworkPolicyConfig.
 * Use `create(NetworkPolicyConfigSchema)` to create a new message.
 */
export const NetworkPolicyConfigSchema: GenMessage<NetworkPolicyConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 25);

/**
 * Configuration for NodeLocal DNSCache
 *
 * @generated from message google.container.v1.DnsCacheConfig
 */
export type DnsCacheConfig = Message<"google.container.v1.DnsCacheConfig"> & {
  /**
   * Whether NodeLocal DNSCache is enabled for this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.DnsCacheConfig.
 * Use `create(DnsCacheConfigSchema)` to create a new message.
 */
export const DnsCacheConfigSchema: GenMessage<DnsCacheConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 26);

/**
 * Configuration for controlling master global access settings.
 *
 * @generated from message google.container.v1.PrivateClusterMasterGlobalAccessConfig
 */
export type PrivateClusterMasterGlobalAccessConfig = Message<"google.container.v1.PrivateClusterMasterGlobalAccessConfig"> & {
  /**
   * Whenever master is accessible globally or not.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.PrivateClusterMasterGlobalAccessConfig.
 * Use `create(PrivateClusterMasterGlobalAccessConfigSchema)` to create a new message.
 */
export const PrivateClusterMasterGlobalAccessConfigSchema: GenMessage<PrivateClusterMasterGlobalAccessConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 27);

/**
 * Configuration options for private clusters.
 *
 * @generated from message google.container.v1.PrivateClusterConfig
 */
export type PrivateClusterConfig = Message<"google.container.v1.PrivateClusterConfig"> & {
  /**
   * Whether nodes have internal IP addresses only. If enabled, all nodes are
   * given only RFC 1918 private addresses and communicate with the master via
   * private networking.
   *
   * @generated from field: bool enable_private_nodes = 1;
   */
  enablePrivateNodes: boolean;

  /**
   * Whether the master's internal IP address is used as the cluster endpoint.
   *
   * @generated from field: bool enable_private_endpoint = 2;
   */
  enablePrivateEndpoint: boolean;

  /**
   * The IP range in CIDR notation to use for the hosted master network. This
   * range will be used for assigning internal IP addresses to the master or
   * set of masters, as well as the ILB VIP. This range must not overlap with
   * any other ranges in use within the cluster's network.
   *
   * @generated from field: string master_ipv4_cidr_block = 3;
   */
  masterIpv4CidrBlock: string;

  /**
   * Output only. The internal IP address of this cluster's master endpoint.
   *
   * @generated from field: string private_endpoint = 4;
   */
  privateEndpoint: string;

  /**
   * Output only. The external IP address of this cluster's master endpoint.
   *
   * @generated from field: string public_endpoint = 5;
   */
  publicEndpoint: string;

  /**
   * Output only. The peering name in the customer VPC used by this cluster.
   *
   * @generated from field: string peering_name = 7;
   */
  peeringName: string;

  /**
   * Controls master global access settings.
   *
   * @generated from field: google.container.v1.PrivateClusterMasterGlobalAccessConfig master_global_access_config = 8;
   */
  masterGlobalAccessConfig?: PrivateClusterMasterGlobalAccessConfig;

  /**
   * Subnet to provision the master's private endpoint during cluster creation.
   * Specified in projects/*\/regions/*\/subnetworks/* format.
   *
   * @generated from field: string private_endpoint_subnetwork = 10;
   */
  privateEndpointSubnetwork: string;
};

/**
 * Describes the message google.container.v1.PrivateClusterConfig.
 * Use `create(PrivateClusterConfigSchema)` to create a new message.
 */
export const PrivateClusterConfigSchema: GenMessage<PrivateClusterConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 28);

/**
 * Configuration for returning group information from authenticators.
 *
 * @generated from message google.container.v1.AuthenticatorGroupsConfig
 */
export type AuthenticatorGroupsConfig = Message<"google.container.v1.AuthenticatorGroupsConfig"> & {
  /**
   * Whether this cluster should return group membership lookups
   * during authentication using a group of security groups.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * The name of the security group-of-groups to be used. Only relevant
   * if enabled = true.
   *
   * @generated from field: string security_group = 2;
   */
  securityGroup: string;
};

/**
 * Describes the message google.container.v1.AuthenticatorGroupsConfig.
 * Use `create(AuthenticatorGroupsConfigSchema)` to create a new message.
 */
export const AuthenticatorGroupsConfigSchema: GenMessage<AuthenticatorGroupsConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 29);

/**
 * Configuration options for the Cloud Run feature.
 *
 * @generated from message google.container.v1.CloudRunConfig
 */
export type CloudRunConfig = Message<"google.container.v1.CloudRunConfig"> & {
  /**
   * Whether Cloud Run addon is enabled for this cluster.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;

  /**
   * Which load balancer type is installed for Cloud Run.
   *
   * @generated from field: google.container.v1.CloudRunConfig.LoadBalancerType load_balancer_type = 3;
   */
  loadBalancerType: CloudRunConfig_LoadBalancerType;
};

/**
 * Describes the message google.container.v1.CloudRunConfig.
 * Use `create(CloudRunConfigSchema)` to create a new message.
 */
export const CloudRunConfigSchema: GenMessage<CloudRunConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 30);

/**
 * Load balancer type of ingress service of Cloud Run.
 *
 * @generated from enum google.container.v1.CloudRunConfig.LoadBalancerType
 */
export enum CloudRunConfig_LoadBalancerType {
  /**
   * Load balancer type for Cloud Run is unspecified.
   *
   * @generated from enum value: LOAD_BALANCER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Install external load balancer for Cloud Run.
   *
   * @generated from enum value: LOAD_BALANCER_TYPE_EXTERNAL = 1;
   */
  EXTERNAL = 1,

  /**
   * Install internal load balancer for Cloud Run.
   *
   * @generated from enum value: LOAD_BALANCER_TYPE_INTERNAL = 2;
   */
  INTERNAL = 2,
}

/**
 * Describes the enum google.container.v1.CloudRunConfig.LoadBalancerType.
 */
export const CloudRunConfig_LoadBalancerTypeSchema: GenEnum<CloudRunConfig_LoadBalancerType> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 30, 0);

/**
 * Configuration options for the Config Connector add-on.
 *
 * @generated from message google.container.v1.ConfigConnectorConfig
 */
export type ConfigConnectorConfig = Message<"google.container.v1.ConfigConnectorConfig"> & {
  /**
   * Whether Cloud Connector is enabled for this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.ConfigConnectorConfig.
 * Use `create(ConfigConnectorConfigSchema)` to create a new message.
 */
export const ConfigConnectorConfigSchema: GenMessage<ConfigConnectorConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 31);

/**
 * Configuration for the Compute Engine PD CSI driver.
 *
 * @generated from message google.container.v1.GcePersistentDiskCsiDriverConfig
 */
export type GcePersistentDiskCsiDriverConfig = Message<"google.container.v1.GcePersistentDiskCsiDriverConfig"> & {
  /**
   * Whether the Compute Engine PD CSI driver is enabled for this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.GcePersistentDiskCsiDriverConfig.
 * Use `create(GcePersistentDiskCsiDriverConfigSchema)` to create a new message.
 */
export const GcePersistentDiskCsiDriverConfigSchema: GenMessage<GcePersistentDiskCsiDriverConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 32);

/**
 * Configuration for the GCP Filestore CSI driver.
 *
 * @generated from message google.container.v1.GcpFilestoreCsiDriverConfig
 */
export type GcpFilestoreCsiDriverConfig = Message<"google.container.v1.GcpFilestoreCsiDriverConfig"> & {
  /**
   * Whether the GCP Filestore CSI driver is enabled for this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.GcpFilestoreCsiDriverConfig.
 * Use `create(GcpFilestoreCsiDriverConfigSchema)` to create a new message.
 */
export const GcpFilestoreCsiDriverConfigSchema: GenMessage<GcpFilestoreCsiDriverConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 33);

/**
 * Configuration for the Cloud Storage Fuse CSI driver.
 *
 * @generated from message google.container.v1.GcsFuseCsiDriverConfig
 */
export type GcsFuseCsiDriverConfig = Message<"google.container.v1.GcsFuseCsiDriverConfig"> & {
  /**
   * Whether the Cloud Storage Fuse CSI driver is enabled for this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.GcsFuseCsiDriverConfig.
 * Use `create(GcsFuseCsiDriverConfigSchema)` to create a new message.
 */
export const GcsFuseCsiDriverConfigSchema: GenMessage<GcsFuseCsiDriverConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 34);

/**
 * Configuration options for the Ray Operator add-on.
 *
 * @generated from message google.container.v1.RayOperatorConfig
 */
export type RayOperatorConfig = Message<"google.container.v1.RayOperatorConfig"> & {
  /**
   * Whether the Ray Operator addon is enabled for this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Optional. Logging configuration for Ray clusters.
   *
   * @generated from field: google.container.v1.RayClusterLoggingConfig ray_cluster_logging_config = 2;
   */
  rayClusterLoggingConfig?: RayClusterLoggingConfig;

  /**
   * Optional. Monitoring configuration for Ray clusters.
   *
   * @generated from field: google.container.v1.RayClusterMonitoringConfig ray_cluster_monitoring_config = 3;
   */
  rayClusterMonitoringConfig?: RayClusterMonitoringConfig;
};

/**
 * Describes the message google.container.v1.RayOperatorConfig.
 * Use `create(RayOperatorConfigSchema)` to create a new message.
 */
export const RayOperatorConfigSchema: GenMessage<RayOperatorConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 35);

/**
 * Configuration for the Backup for GKE Agent.
 *
 * @generated from message google.container.v1.GkeBackupAgentConfig
 */
export type GkeBackupAgentConfig = Message<"google.container.v1.GkeBackupAgentConfig"> & {
  /**
   * Whether the Backup for GKE agent is enabled for this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.GkeBackupAgentConfig.
 * Use `create(GkeBackupAgentConfigSchema)` to create a new message.
 */
export const GkeBackupAgentConfigSchema: GenMessage<GkeBackupAgentConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 36);

/**
 * Configuration for the Stateful HA add-on.
 *
 * @generated from message google.container.v1.StatefulHAConfig
 */
export type StatefulHAConfig = Message<"google.container.v1.StatefulHAConfig"> & {
  /**
   * Whether the Stateful HA add-on is enabled for this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.StatefulHAConfig.
 * Use `create(StatefulHAConfigSchema)` to create a new message.
 */
export const StatefulHAConfigSchema: GenMessage<StatefulHAConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 37);

/**
 * Configuration options for the master authorized networks feature. Enabled
 * master authorized networks will disallow all external traffic to access
 * Kubernetes master through HTTPS except traffic from the given CIDR blocks,
 * Google Compute Engine Public IPs and Google Prod IPs.
 *
 * @generated from message google.container.v1.MasterAuthorizedNetworksConfig
 */
export type MasterAuthorizedNetworksConfig = Message<"google.container.v1.MasterAuthorizedNetworksConfig"> & {
  /**
   * Whether or not master authorized networks is enabled.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * cidr_blocks define up to 50 external networks that could access
   * Kubernetes master through HTTPS.
   *
   * @generated from field: repeated google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
   */
  cidrBlocks: MasterAuthorizedNetworksConfig_CidrBlock[];

  /**
   * Whether master is accessbile via Google Compute Engine Public IP addresses.
   *
   * @generated from field: optional bool gcp_public_cidrs_access_enabled = 3;
   */
  gcpPublicCidrsAccessEnabled?: boolean;
};

/**
 * Describes the message google.container.v1.MasterAuthorizedNetworksConfig.
 * Use `create(MasterAuthorizedNetworksConfigSchema)` to create a new message.
 */
export const MasterAuthorizedNetworksConfigSchema: GenMessage<MasterAuthorizedNetworksConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 38);

/**
 * CidrBlock contains an optional name and one CIDR block.
 *
 * @generated from message google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
 */
export type MasterAuthorizedNetworksConfig_CidrBlock = Message<"google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock"> & {
  /**
   * display_name is an optional field for users to identify CIDR blocks.
   *
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * cidr_block must be specified in CIDR notation.
   *
   * @generated from field: string cidr_block = 2;
   */
  cidrBlock: string;
};

/**
 * Describes the message google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.
 * Use `create(MasterAuthorizedNetworksConfig_CidrBlockSchema)` to create a new message.
 */
export const MasterAuthorizedNetworksConfig_CidrBlockSchema: GenMessage<MasterAuthorizedNetworksConfig_CidrBlock> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 38, 0);

/**
 * Configuration for the legacy Attribute Based Access Control authorization
 * mode.
 *
 * @generated from message google.container.v1.LegacyAbac
 */
export type LegacyAbac = Message<"google.container.v1.LegacyAbac"> & {
  /**
   * Whether the ABAC authorizer is enabled for this cluster. When enabled,
   * identities in the system, including service accounts, nodes, and
   * controllers, will have statically granted permissions beyond those
   * provided by the RBAC configuration or IAM.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.LegacyAbac.
 * Use `create(LegacyAbacSchema)` to create a new message.
 */
export const LegacyAbacSchema: GenMessage<LegacyAbac> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 39);

/**
 * Configuration options for the NetworkPolicy feature.
 * https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
 *
 * @generated from message google.container.v1.NetworkPolicy
 */
export type NetworkPolicy = Message<"google.container.v1.NetworkPolicy"> & {
  /**
   * The selected network policy provider.
   *
   * @generated from field: google.container.v1.NetworkPolicy.Provider provider = 1;
   */
  provider: NetworkPolicy_Provider;

  /**
   * Whether network policy is enabled on the cluster.
   *
   * @generated from field: bool enabled = 2;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.NetworkPolicy.
 * Use `create(NetworkPolicySchema)` to create a new message.
 */
export const NetworkPolicySchema: GenMessage<NetworkPolicy> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 40);

/**
 * Allowed Network Policy providers.
 *
 * @generated from enum google.container.v1.NetworkPolicy.Provider
 */
export enum NetworkPolicy_Provider {
  /**
   * Not set
   *
   * @generated from enum value: PROVIDER_UNSPECIFIED = 0;
   */
  PROVIDER_UNSPECIFIED = 0,

  /**
   * Tigera (Calico Felix).
   *
   * @generated from enum value: CALICO = 1;
   */
  CALICO = 1,
}

/**
 * Describes the enum google.container.v1.NetworkPolicy.Provider.
 */
export const NetworkPolicy_ProviderSchema: GenEnum<NetworkPolicy_Provider> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 40, 0);

/**
 * Configuration for Binary Authorization.
 *
 * @generated from message google.container.v1.BinaryAuthorization
 */
export type BinaryAuthorization = Message<"google.container.v1.BinaryAuthorization"> & {
  /**
   * This field is deprecated. Leave this unset and instead configure
   * BinaryAuthorization using evaluation_mode. If evaluation_mode is set to
   * anything other than EVALUATION_MODE_UNSPECIFIED, this field is ignored.
   *
   * @generated from field: bool enabled = 1 [deprecated = true];
   * @deprecated
   */
  enabled: boolean;

  /**
   * Mode of operation for binauthz policy evaluation. If unspecified, defaults
   * to DISABLED.
   *
   * @generated from field: google.container.v1.BinaryAuthorization.EvaluationMode evaluation_mode = 2;
   */
  evaluationMode: BinaryAuthorization_EvaluationMode;
};

/**
 * Describes the message google.container.v1.BinaryAuthorization.
 * Use `create(BinaryAuthorizationSchema)` to create a new message.
 */
export const BinaryAuthorizationSchema: GenMessage<BinaryAuthorization> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 41);

/**
 * Binary Authorization mode of operation.
 *
 * @generated from enum google.container.v1.BinaryAuthorization.EvaluationMode
 */
export enum BinaryAuthorization_EvaluationMode {
  /**
   * Default value
   *
   * @generated from enum value: EVALUATION_MODE_UNSPECIFIED = 0;
   */
  EVALUATION_MODE_UNSPECIFIED = 0,

  /**
   * Disable BinaryAuthorization
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * Enforce Kubernetes admission requests with BinaryAuthorization using the
   * project's singleton policy. This is equivalent to setting the
   * enabled boolean to true.
   *
   * @generated from enum value: PROJECT_SINGLETON_POLICY_ENFORCE = 2;
   */
  PROJECT_SINGLETON_POLICY_ENFORCE = 2,
}

/**
 * Describes the enum google.container.v1.BinaryAuthorization.EvaluationMode.
 */
export const BinaryAuthorization_EvaluationModeSchema: GenEnum<BinaryAuthorization_EvaluationMode> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 41, 0);

/**
 * [PRIVATE FIELD]
 * Config for pod CIDR size overprovisioning.
 *
 * @generated from message google.container.v1.PodCIDROverprovisionConfig
 */
export type PodCIDROverprovisionConfig = Message<"google.container.v1.PodCIDROverprovisionConfig"> & {
  /**
   * Whether Pod CIDR overprovisioning is disabled.
   * Note: Pod CIDR overprovisioning is enabled by default.
   *
   * @generated from field: bool disable = 1;
   */
  disable: boolean;
};

/**
 * Describes the message google.container.v1.PodCIDROverprovisionConfig.
 * Use `create(PodCIDROverprovisionConfigSchema)` to create a new message.
 */
export const PodCIDROverprovisionConfigSchema: GenMessage<PodCIDROverprovisionConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 42);

/**
 * Configuration for controlling how IPs are allocated in the cluster.
 *
 * @generated from message google.container.v1.IPAllocationPolicy
 */
export type IPAllocationPolicy = Message<"google.container.v1.IPAllocationPolicy"> & {
  /**
   * Whether alias IPs will be used for pod IPs in the cluster.
   * This is used in conjunction with use_routes. It cannot
   * be true if use_routes is true. If both use_ip_aliases and use_routes are
   * false, then the server picks the default IP allocation mode
   *
   * @generated from field: bool use_ip_aliases = 1;
   */
  useIpAliases: boolean;

  /**
   * Whether a new subnetwork will be created automatically for the cluster.
   *
   * This field is only applicable when `use_ip_aliases` is true.
   *
   * @generated from field: bool create_subnetwork = 2;
   */
  createSubnetwork: boolean;

  /**
   * A custom subnetwork name to be used if `create_subnetwork` is true.  If
   * this field is empty, then an automatic name will be chosen for the new
   * subnetwork.
   *
   * @generated from field: string subnetwork_name = 3;
   */
  subnetworkName: string;

  /**
   * This field is deprecated, use cluster_ipv4_cidr_block.
   *
   * @generated from field: string cluster_ipv4_cidr = 4 [deprecated = true];
   * @deprecated
   */
  clusterIpv4Cidr: string;

  /**
   * This field is deprecated, use node_ipv4_cidr_block.
   *
   * @generated from field: string node_ipv4_cidr = 5 [deprecated = true];
   * @deprecated
   */
  nodeIpv4Cidr: string;

  /**
   * This field is deprecated, use services_ipv4_cidr_block.
   *
   * @generated from field: string services_ipv4_cidr = 6 [deprecated = true];
   * @deprecated
   */
  servicesIpv4Cidr: string;

  /**
   * The name of the secondary range to be used for the cluster CIDR
   * block.  The secondary range will be used for pod IP
   * addresses. This must be an existing secondary range associated
   * with the cluster subnetwork.
   *
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   *
   * @generated from field: string cluster_secondary_range_name = 7;
   */
  clusterSecondaryRangeName: string;

  /**
   * The name of the secondary range to be used as for the services
   * CIDR block.  The secondary range will be used for service
   * ClusterIPs. This must be an existing secondary range associated
   * with the cluster subnetwork.
   *
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   *
   * @generated from field: string services_secondary_range_name = 8;
   */
  servicesSecondaryRangeName: string;

  /**
   * The IP address range for the cluster pod IPs. If this field is set, then
   * `cluster.cluster_ipv4_cidr` must be left blank.
   *
   * This field is only applicable when `use_ip_aliases` is true.
   *
   * Set to blank to have a range chosen with the default size.
   *
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   *
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   *
   * @generated from field: string cluster_ipv4_cidr_block = 9;
   */
  clusterIpv4CidrBlock: string;

  /**
   * The IP address range of the instance IPs in this cluster.
   *
   * This is applicable only if `create_subnetwork` is true.
   *
   * Set to blank to have a range chosen with the default size.
   *
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   *
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   *
   * @generated from field: string node_ipv4_cidr_block = 10;
   */
  nodeIpv4CidrBlock: string;

  /**
   * The IP address range of the services IPs in this cluster. If blank, a range
   * will be automatically chosen with the default size.
   *
   * This field is only applicable when `use_ip_aliases` is true.
   *
   * Set to blank to have a range chosen with the default size.
   *
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   *
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   *
   * @generated from field: string services_ipv4_cidr_block = 11;
   */
  servicesIpv4CidrBlock: string;

  /**
   * The IP address range of the Cloud TPUs in this cluster. If unspecified, a
   * range will be automatically chosen with the default size.
   *
   * This field is only applicable when `use_ip_aliases` is true.
   *
   * If unspecified, the range will use the default size.
   *
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   *
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   *
   * @generated from field: string tpu_ipv4_cidr_block = 13;
   */
  tpuIpv4CidrBlock: string;

  /**
   * Whether routes will be used for pod IPs in the cluster.
   * This is used in conjunction with use_ip_aliases. It cannot be true if
   * use_ip_aliases is true. If both use_ip_aliases and use_routes are false,
   * then the server picks the default IP allocation mode
   *
   * @generated from field: bool use_routes = 15;
   */
  useRoutes: boolean;

  /**
   * The IP stack type of the cluster
   *
   * @generated from field: google.container.v1.StackType stack_type = 16;
   */
  stackType: StackType;

  /**
   * The ipv6 access type (internal or external) when create_subnetwork is true
   *
   * @generated from field: google.container.v1.IPv6AccessType ipv6_access_type = 17;
   */
  ipv6AccessType: IPv6AccessType;

  /**
   * [PRIVATE FIELD]
   * Pod CIDR size overprovisioning config for the cluster.
   *
   * Pod CIDR size per node depends on max_pods_per_node. By default, the value
   * of max_pods_per_node is doubled and then rounded off to next power of 2 to
   * get the size of pod CIDR block per node.
   * Example: max_pods_per_node of 30 would result in 64 IPs (/26).
   *
   * This config can disable the doubling of IPs (we still round off to next
   * power of 2)
   * Example: max_pods_per_node of 30 will result in 32 IPs (/27) when
   * overprovisioning is disabled.
   *
   * @generated from field: google.container.v1.PodCIDROverprovisionConfig pod_cidr_overprovision_config = 21;
   */
  podCidrOverprovisionConfig?: PodCIDROverprovisionConfig;

  /**
   * Output only. The subnet's IPv6 CIDR block used by nodes and pods.
   *
   * @generated from field: string subnet_ipv6_cidr_block = 22;
   */
  subnetIpv6CidrBlock: string;

  /**
   * Output only. The services IPv6 CIDR block for the cluster.
   *
   * @generated from field: string services_ipv6_cidr_block = 23;
   */
  servicesIpv6CidrBlock: string;

  /**
   * Output only. The additional pod ranges that are added to the cluster.
   * These pod ranges can be used by new node pools to allocate pod IPs
   * automatically. Once the range is removed it will not show up in
   * IPAllocationPolicy.
   *
   * @generated from field: google.container.v1.AdditionalPodRangesConfig additional_pod_ranges_config = 24;
   */
  additionalPodRangesConfig?: AdditionalPodRangesConfig;

  /**
   * Output only. The utilization of the cluster default IPv4 range for the
   * pod. The ratio is Usage/[Total number of IPs in the secondary range],
   * Usage=numNodes*numZones*podIPsPerNode.
   *
   * @generated from field: double default_pod_ipv4_range_utilization = 25;
   */
  defaultPodIpv4RangeUtilization: number;
};

/**
 * Describes the message google.container.v1.IPAllocationPolicy.
 * Use `create(IPAllocationPolicySchema)` to create a new message.
 */
export const IPAllocationPolicySchema: GenMessage<IPAllocationPolicy> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 43);

/**
 * A Google Kubernetes Engine cluster.
 *
 * @generated from message google.container.v1.Cluster
 */
export type Cluster = Message<"google.container.v1.Cluster"> & {
  /**
   * The name of this cluster. The name must be unique within this project
   * and location (e.g. zone or region), and can be up to 40 characters with
   * the following restrictions:
   *
   * * Lowercase letters, numbers, and hyphens only.
   * * Must start with a letter.
   * * Must end with a number or a letter.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * An optional description of this cluster.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The number of nodes to create in this cluster. You must ensure that your
   * Compute Engine [resource quota](https://cloud.google.com/compute/quotas)
   * is sufficient for this number of instances. You must also have available
   * firewall and routes quota.
   * For requests, this field should only be used in lieu of a
   * "node_pool" object, since this configuration (along with the
   * "node_config") will be used to create a "NodePool" object with an
   * auto-generated name. Do not use this and a node_pool at the same time.
   *
   * This field is deprecated, use node_pool.initial_node_count instead.
   *
   * @generated from field: int32 initial_node_count = 3 [deprecated = true];
   * @deprecated
   */
  initialNodeCount: number;

  /**
   * Parameters used in creating the cluster's nodes.
   * For requests, this field should only be used in lieu of a
   * "node_pool" object, since this configuration (along with the
   * "initial_node_count") will be used to create a "NodePool" object with an
   * auto-generated name. Do not use this and a node_pool at the same time.
   * For responses, this field will be populated with the node configuration of
   * the first node pool. (For configuration of each node pool, see
   * `node_pool.config`)
   *
   * If unspecified, the defaults are used.
   * This field is deprecated, use node_pool.config instead.
   *
   * @generated from field: google.container.v1.NodeConfig node_config = 4 [deprecated = true];
   * @deprecated
   */
  nodeConfig?: NodeConfig;

  /**
   * The authentication information for accessing the master endpoint.
   * If unspecified, the defaults are used:
   * For clusters before v1.12, if master_auth is unspecified, `username` will
   * be set to "admin", a random password will be generated, and a client
   * certificate will be issued.
   *
   * @generated from field: google.container.v1.MasterAuth master_auth = 5;
   */
  masterAuth?: MasterAuth;

  /**
   * The logging service the cluster should use to write logs.
   * Currently available options:
   *
   * * `logging.googleapis.com/kubernetes` - The Cloud Logging
   * service with a Kubernetes-native resource model
   * * `logging.googleapis.com` - The legacy Cloud Logging service (no longer
   *   available as of GKE 1.15).
   * * `none` - no logs will be exported from the cluster.
   *
   * If left as an empty string,`logging.googleapis.com/kubernetes` will be
   * used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
   *
   * @generated from field: string logging_service = 6;
   */
  loggingService: string;

  /**
   * The monitoring service the cluster should use to write metrics.
   * Currently available options:
   *
   * * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring
   * service with a Kubernetes-native resource model
   * * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no
   *   longer available as of GKE 1.15).
   * * `none` - No metrics will be exported from the cluster.
   *
   * If left as an empty string,`monitoring.googleapis.com/kubernetes` will be
   * used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
   *
   * @generated from field: string monitoring_service = 7;
   */
  monitoringService: string;

  /**
   * The name of the Google Compute Engine
   * [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks)
   * to which the cluster is connected. If left unspecified, the `default`
   * network will be used.
   *
   * @generated from field: string network = 8;
   */
  network: string;

  /**
   * The IP address range of the container pods in this cluster, in
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`). Leave blank to have
   * one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
   *
   * @generated from field: string cluster_ipv4_cidr = 9;
   */
  clusterIpv4Cidr: string;

  /**
   * Configurations for the various addons available to run in the cluster.
   *
   * @generated from field: google.container.v1.AddonsConfig addons_config = 10;
   */
  addonsConfig?: AddonsConfig;

  /**
   * The name of the Google Compute Engine
   * [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which
   * the cluster is connected.
   *
   * @generated from field: string subnetwork = 11;
   */
  subnetwork: string;

  /**
   * The node pools associated with this cluster.
   * This field should not be set if "node_config" or "initial_node_count" are
   * specified.
   *
   * @generated from field: repeated google.container.v1.NodePool node_pools = 12;
   */
  nodePools: NodePool[];

  /**
   * The list of Google Compute Engine
   * [zones](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster's nodes should be located.
   *
   * This field provides a default value if
   * [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations)
   * are not specified during node pool creation.
   *
   * Warning: changing cluster locations will update the
   * [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations)
   * of all node pools and will result in nodes being added and/or removed.
   *
   * @generated from field: repeated string locations = 13;
   */
  locations: string[];

  /**
   * Kubernetes alpha features are enabled on this cluster. This includes alpha
   * API groups (e.g. v1alpha1) and features that may not be production ready in
   * the kubernetes version of the master and nodes.
   * The cluster has no SLA for uptime and master/node upgrades are disabled.
   * Alpha enabled clusters are automatically deleted thirty days after
   * creation.
   *
   * @generated from field: bool enable_kubernetes_alpha = 14;
   */
  enableKubernetesAlpha: boolean;

  /**
   * The resource labels for the cluster to use to annotate any related
   * Google Compute Engine resources.
   *
   * @generated from field: map<string, string> resource_labels = 15;
   */
  resourceLabels: { [key: string]: string };

  /**
   * The fingerprint of the set of labels for this cluster.
   *
   * @generated from field: string label_fingerprint = 16;
   */
  labelFingerprint: string;

  /**
   * Configuration for the legacy ABAC authorization mode.
   *
   * @generated from field: google.container.v1.LegacyAbac legacy_abac = 18;
   */
  legacyAbac?: LegacyAbac;

  /**
   * Configuration options for the NetworkPolicy feature.
   *
   * @generated from field: google.container.v1.NetworkPolicy network_policy = 19;
   */
  networkPolicy?: NetworkPolicy;

  /**
   * Configuration for cluster IP allocation.
   *
   * @generated from field: google.container.v1.IPAllocationPolicy ip_allocation_policy = 20;
   */
  ipAllocationPolicy?: IPAllocationPolicy;

  /**
   * The configuration options for master authorized networks feature.
   *
   * @generated from field: google.container.v1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
   */
  masterAuthorizedNetworksConfig?: MasterAuthorizedNetworksConfig;

  /**
   * Configure the maintenance policy for this cluster.
   *
   * @generated from field: google.container.v1.MaintenancePolicy maintenance_policy = 23;
   */
  maintenancePolicy?: MaintenancePolicy;

  /**
   * Configuration for Binary Authorization.
   *
   * @generated from field: google.container.v1.BinaryAuthorization binary_authorization = 24;
   */
  binaryAuthorization?: BinaryAuthorization;

  /**
   * Cluster-level autoscaling configuration.
   *
   * @generated from field: google.container.v1.ClusterAutoscaling autoscaling = 26;
   */
  autoscaling?: ClusterAutoscaling;

  /**
   * Configuration for cluster networking.
   *
   * @generated from field: google.container.v1.NetworkConfig network_config = 27;
   */
  networkConfig?: NetworkConfig;

  /**
   * The default constraint on the maximum number of pods that can be run
   * simultaneously on a node in the node pool of this cluster. Only honored
   * if cluster created with IP Alias support.
   *
   * @generated from field: google.container.v1.MaxPodsConstraint default_max_pods_constraint = 30;
   */
  defaultMaxPodsConstraint?: MaxPodsConstraint;

  /**
   * Configuration for exporting resource usages. Resource usage export is
   * disabled when this config is unspecified.
   *
   * @generated from field: google.container.v1.ResourceUsageExportConfig resource_usage_export_config = 33;
   */
  resourceUsageExportConfig?: ResourceUsageExportConfig;

  /**
   * Configuration controlling RBAC group membership information.
   *
   * @generated from field: google.container.v1.AuthenticatorGroupsConfig authenticator_groups_config = 34;
   */
  authenticatorGroupsConfig?: AuthenticatorGroupsConfig;

  /**
   * Configuration for private cluster.
   *
   * @generated from field: google.container.v1.PrivateClusterConfig private_cluster_config = 37;
   */
  privateClusterConfig?: PrivateClusterConfig;

  /**
   * Configuration of etcd encryption.
   *
   * @generated from field: google.container.v1.DatabaseEncryption database_encryption = 38;
   */
  databaseEncryption?: DatabaseEncryption;

  /**
   * Cluster-level Vertical Pod Autoscaling configuration.
   *
   * @generated from field: google.container.v1.VerticalPodAutoscaling vertical_pod_autoscaling = 39;
   */
  verticalPodAutoscaling?: VerticalPodAutoscaling;

  /**
   * Shielded Nodes configuration.
   *
   * @generated from field: google.container.v1.ShieldedNodes shielded_nodes = 40;
   */
  shieldedNodes?: ShieldedNodes;

  /**
   * Release channel configuration. If left unspecified on cluster creation and
   * a version is specified, the cluster is enrolled in the most mature release
   * channel where the version is available (first checking STABLE, then
   * REGULAR, and finally RAPID). Otherwise, if no release channel
   * configuration and no version is specified, the cluster is enrolled in the
   * REGULAR channel with its default version.
   *
   * @generated from field: google.container.v1.ReleaseChannel release_channel = 41;
   */
  releaseChannel?: ReleaseChannel;

  /**
   * Configuration for the use of Kubernetes Service Accounts in GCP IAM
   * policies.
   *
   * @generated from field: google.container.v1.WorkloadIdentityConfig workload_identity_config = 43;
   */
  workloadIdentityConfig?: WorkloadIdentityConfig;

  /**
   * Configuration for issuance of mTLS keys and certificates to Kubernetes
   * pods.
   *
   * @generated from field: google.container.v1.MeshCertificates mesh_certificates = 67;
   */
  meshCertificates?: MeshCertificates;

  /**
   * Configuration for the fine-grained cost management feature.
   *
   * @generated from field: google.container.v1.CostManagementConfig cost_management_config = 45;
   */
  costManagementConfig?: CostManagementConfig;

  /**
   * Notification configuration of the cluster.
   *
   * @generated from field: google.container.v1.NotificationConfig notification_config = 49;
   */
  notificationConfig?: NotificationConfig;

  /**
   * Configuration of Confidential Nodes.
   * All the nodes in the cluster will be Confidential VM once enabled.
   *
   * @generated from field: google.container.v1.ConfidentialNodes confidential_nodes = 50;
   */
  confidentialNodes?: ConfidentialNodes;

  /**
   * Configuration for Identity Service component.
   *
   * @generated from field: google.container.v1.IdentityServiceConfig identity_service_config = 54;
   */
  identityServiceConfig?: IdentityServiceConfig;

  /**
   * Output only. Server-defined URL for the resource.
   *
   * @generated from field: string self_link = 100;
   */
  selfLink: string;

  /**
   * Output only. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field is deprecated, use location instead.
   *
   * @generated from field: string zone = 101 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Output only. The IP address of this cluster's master endpoint.
   * The endpoint can be accessed from the internet at
   * `https://username:password@endpoint/`.
   *
   * See the `masterAuth` property of this resource for username and
   * password information.
   *
   * @generated from field: string endpoint = 102;
   */
  endpoint: string;

  /**
   * The initial Kubernetes version for this cluster.  Valid versions are those
   * found in validMasterVersions returned by getServerConfig.  The version can
   * be upgraded over time; such upgrades are reflected in
   * currentMasterVersion and currentNodeVersion.
   *
   * Users may specify either explicit versions offered by
   * Kubernetes Engine or version aliases, which have the following behavior:
   *
   * - "latest": picks the highest valid Kubernetes version
   * - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
   * - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
   * - "1.X.Y-gke.N": picks an explicit Kubernetes version
   * - "","-": picks the default Kubernetes version
   *
   * @generated from field: string initial_cluster_version = 103;
   */
  initialClusterVersion: string;

  /**
   * Output only. The current software version of the master endpoint.
   *
   * @generated from field: string current_master_version = 104;
   */
  currentMasterVersion: string;

  /**
   * Output only. Deprecated, use
   * [NodePools.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools)
   * instead. The current version of the node software components. If they are
   * currently at multiple versions because they're in the process of being
   * upgraded, this reflects the minimum version of all nodes.
   *
   * @generated from field: string current_node_version = 105 [deprecated = true];
   * @deprecated
   */
  currentNodeVersion: string;

  /**
   * Output only. The time the cluster was created, in
   * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string create_time = 106;
   */
  createTime: string;

  /**
   * Output only. The current status of this cluster.
   *
   * @generated from field: google.container.v1.Cluster.Status status = 107;
   */
  status: Cluster_Status;

  /**
   * Output only. Deprecated. Use conditions instead.
   * Additional information about the current status of this
   * cluster, if available.
   *
   * @generated from field: string status_message = 108 [deprecated = true];
   * @deprecated
   */
  statusMessage: string;

  /**
   * Output only. The size of the address space on each node for hosting
   * containers. This is provisioned from within the `container_ipv4_cidr`
   * range. This field will only be set when cluster is in route-based network
   * mode.
   *
   * @generated from field: int32 node_ipv4_cidr_size = 109;
   */
  nodeIpv4CidrSize: number;

  /**
   * Output only. The IP address range of the Kubernetes services in
   * this cluster, in
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `1.2.3.4/29`). Service addresses are
   * typically put in the last `/16` from the container CIDR.
   *
   * @generated from field: string services_ipv4_cidr = 110;
   */
  servicesIpv4Cidr: string;

  /**
   * Output only. Deprecated. Use node_pools.instance_group_urls.
   *
   * @generated from field: repeated string instance_group_urls = 111 [deprecated = true];
   * @deprecated
   */
  instanceGroupUrls: string[];

  /**
   * Output only. The number of nodes currently in the cluster. Deprecated.
   * Call Kubernetes API directly to retrieve node information.
   *
   * @generated from field: int32 current_node_count = 112 [deprecated = true];
   * @deprecated
   */
  currentNodeCount: number;

  /**
   * Output only. The time the cluster will be automatically
   * deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string expire_time = 113;
   */
  expireTime: string;

  /**
   * Output only. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
   * or
   * [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
   * in which the cluster resides.
   *
   * @generated from field: string location = 114;
   */
  location: string;

  /**
   * Enable the ability to use Cloud TPUs in this cluster.
   *
   * @generated from field: bool enable_tpu = 115;
   */
  enableTpu: boolean;

  /**
   * Output only. The IP address range of the Cloud TPUs in this cluster, in
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `1.2.3.4/29`).
   *
   * @generated from field: string tpu_ipv4_cidr_block = 116;
   */
  tpuIpv4CidrBlock: string;

  /**
   * Which conditions caused the current cluster state.
   *
   * @generated from field: repeated google.container.v1.StatusCondition conditions = 118;
   */
  conditions: StatusCondition[];

  /**
   * Autopilot configuration for the cluster.
   *
   * @generated from field: google.container.v1.Autopilot autopilot = 128;
   */
  autopilot?: Autopilot;

  /**
   * Output only. Unique id for the cluster.
   *
   * @generated from field: string id = 129;
   */
  id: string;

  /**
   * Default NodePool settings for the entire cluster. These settings are
   * overridden if specified on the specific NodePool object.
   *
   * @generated from field: optional google.container.v1.NodePoolDefaults node_pool_defaults = 131;
   */
  nodePoolDefaults?: NodePoolDefaults;

  /**
   * Logging configuration for the cluster.
   *
   * @generated from field: google.container.v1.LoggingConfig logging_config = 132;
   */
  loggingConfig?: LoggingConfig;

  /**
   * Monitoring configuration for the cluster.
   *
   * @generated from field: google.container.v1.MonitoringConfig monitoring_config = 133;
   */
  monitoringConfig?: MonitoringConfig;

  /**
   * Node pool configs that apply to all auto-provisioned node pools
   * in autopilot clusters and node auto-provisioning enabled clusters.
   *
   * @generated from field: google.container.v1.NodePoolAutoConfig node_pool_auto_config = 136;
   */
  nodePoolAutoConfig?: NodePoolAutoConfig;

  /**
   * This checksum is computed by the server based on the value of cluster
   * fields, and may be sent on update requests to ensure the client has an
   * up-to-date value before proceeding.
   *
   * @generated from field: string etag = 139;
   */
  etag: string;

  /**
   * Fleet information for the cluster.
   *
   * @generated from field: google.container.v1.Fleet fleet = 140;
   */
  fleet?: Fleet;

  /**
   * Enable/Disable Security Posture API features for the cluster.
   *
   * @generated from field: google.container.v1.SecurityPostureConfig security_posture_config = 145;
   */
  securityPostureConfig?: SecurityPostureConfig;

  /**
   * Beta APIs Config
   *
   * @generated from field: google.container.v1.K8sBetaAPIConfig enable_k8s_beta_apis = 143;
   */
  enableK8sBetaApis?: K8sBetaAPIConfig;

  /**
   * GKE Enterprise Configuration.
   *
   * @generated from field: google.container.v1.EnterpriseConfig enterprise_config = 149;
   */
  enterpriseConfig?: EnterpriseConfig;

  /**
   * Output only. Reserved for future use.
   *
   * @generated from field: optional bool satisfies_pzs = 152;
   */
  satisfiesPzs?: boolean;

  /**
   * Output only. Reserved for future use.
   *
   * @generated from field: optional bool satisfies_pzi = 153;
   */
  satisfiesPzi?: boolean;
};

/**
 * Describes the message google.container.v1.Cluster.
 * Use `create(ClusterSchema)` to create a new message.
 */
export const ClusterSchema: GenMessage<Cluster> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 44);

/**
 * The current status of the cluster.
 *
 * @generated from enum google.container.v1.Cluster.Status
 */
export enum Cluster_Status {
  /**
   * Not set.
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * The PROVISIONING state indicates the cluster is being created.
   *
   * @generated from enum value: PROVISIONING = 1;
   */
  PROVISIONING = 1,

  /**
   * The RUNNING state indicates the cluster has been created and is fully
   * usable.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The RECONCILING state indicates that some work is actively being done on
   * the cluster, such as upgrading the master or node software. Details can
   * be found in the `statusMessage` field.
   *
   * @generated from enum value: RECONCILING = 3;
   */
  RECONCILING = 3,

  /**
   * The STOPPING state indicates the cluster is being deleted.
   *
   * @generated from enum value: STOPPING = 4;
   */
  STOPPING = 4,

  /**
   * The ERROR state indicates the cluster is unusable. It will be
   * automatically deleted. Details can be found in the `statusMessage` field.
   *
   * @generated from enum value: ERROR = 5;
   */
  ERROR = 5,

  /**
   * The DEGRADED state indicates the cluster requires user action to restore
   * full functionality. Details can be found in the `statusMessage` field.
   *
   * @generated from enum value: DEGRADED = 6;
   */
  DEGRADED = 6,
}

/**
 * Describes the enum google.container.v1.Cluster.Status.
 */
export const Cluster_StatusSchema: GenEnum<Cluster_Status> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 44, 0);

/**
 * K8sBetaAPIConfig , configuration for beta APIs
 *
 * @generated from message google.container.v1.K8sBetaAPIConfig
 */
export type K8sBetaAPIConfig = Message<"google.container.v1.K8sBetaAPIConfig"> & {
  /**
   * Enabled k8s beta APIs.
   *
   * @generated from field: repeated string enabled_apis = 1;
   */
  enabledApis: string[];
};

/**
 * Describes the message google.container.v1.K8sBetaAPIConfig.
 * Use `create(K8sBetaAPIConfigSchema)` to create a new message.
 */
export const K8sBetaAPIConfigSchema: GenMessage<K8sBetaAPIConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 45);

/**
 * SecurityPostureConfig defines the flags needed to enable/disable features for
 * the Security Posture API.
 *
 * @generated from message google.container.v1.SecurityPostureConfig
 */
export type SecurityPostureConfig = Message<"google.container.v1.SecurityPostureConfig"> & {
  /**
   * Sets which mode to use for Security Posture features.
   *
   * @generated from field: optional google.container.v1.SecurityPostureConfig.Mode mode = 1;
   */
  mode?: SecurityPostureConfig_Mode;

  /**
   * Sets which mode to use for vulnerability scanning.
   *
   * @generated from field: optional google.container.v1.SecurityPostureConfig.VulnerabilityMode vulnerability_mode = 2;
   */
  vulnerabilityMode?: SecurityPostureConfig_VulnerabilityMode;
};

/**
 * Describes the message google.container.v1.SecurityPostureConfig.
 * Use `create(SecurityPostureConfigSchema)` to create a new message.
 */
export const SecurityPostureConfigSchema: GenMessage<SecurityPostureConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 46);

/**
 * Mode defines enablement mode for GKE Security posture features.
 *
 * @generated from enum google.container.v1.SecurityPostureConfig.Mode
 */
export enum SecurityPostureConfig_Mode {
  /**
   * Default value not specified.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * Disables Security Posture features on the cluster.
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * Applies Security Posture features on the cluster.
   *
   * @generated from enum value: BASIC = 2;
   */
  BASIC = 2,

  /**
   * Applies the Security Posture off cluster Enterprise level features.
   *
   * @generated from enum value: ENTERPRISE = 3;
   */
  ENTERPRISE = 3,
}

/**
 * Describes the enum google.container.v1.SecurityPostureConfig.Mode.
 */
export const SecurityPostureConfig_ModeSchema: GenEnum<SecurityPostureConfig_Mode> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 46, 0);

/**
 * VulnerabilityMode defines enablement mode for vulnerability scanning.
 *
 * @generated from enum google.container.v1.SecurityPostureConfig.VulnerabilityMode
 */
export enum SecurityPostureConfig_VulnerabilityMode {
  /**
   * Default value not specified.
   *
   * @generated from enum value: VULNERABILITY_MODE_UNSPECIFIED = 0;
   */
  VULNERABILITY_MODE_UNSPECIFIED = 0,

  /**
   * Disables vulnerability scanning on the cluster.
   *
   * @generated from enum value: VULNERABILITY_DISABLED = 1;
   */
  VULNERABILITY_DISABLED = 1,

  /**
   * Applies basic vulnerability scanning on the cluster.
   *
   * @generated from enum value: VULNERABILITY_BASIC = 2;
   */
  VULNERABILITY_BASIC = 2,

  /**
   * Applies the Security Posture's vulnerability on cluster Enterprise level
   * features.
   *
   * @generated from enum value: VULNERABILITY_ENTERPRISE = 3;
   */
  VULNERABILITY_ENTERPRISE = 3,
}

/**
 * Describes the enum google.container.v1.SecurityPostureConfig.VulnerabilityMode.
 */
export const SecurityPostureConfig_VulnerabilityModeSchema: GenEnum<SecurityPostureConfig_VulnerabilityMode> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 46, 1);

/**
 * Node pool configs that apply to all auto-provisioned node pools
 * in autopilot clusters and node auto-provisioning enabled clusters.
 *
 * @generated from message google.container.v1.NodePoolAutoConfig
 */
export type NodePoolAutoConfig = Message<"google.container.v1.NodePoolAutoConfig"> & {
  /**
   * The list of instance tags applied to all nodes. Tags are used to identify
   * valid sources or targets for network firewalls and are specified by
   * the client during cluster creation. Each tag within the list
   * must comply with RFC1035.
   *
   * @generated from field: google.container.v1.NetworkTags network_tags = 1;
   */
  networkTags?: NetworkTags;

  /**
   * Resource manager tag keys and values to be attached to the nodes
   * for managing Compute Engine firewalls using Network Firewall Policies.
   *
   * @generated from field: google.container.v1.ResourceManagerTags resource_manager_tags = 2;
   */
  resourceManagerTags?: ResourceManagerTags;

  /**
   * NodeKubeletConfig controls the defaults for autoprovisioned node-pools.
   *
   * Currently only `insecure_kubelet_readonly_port_enabled` can be set here.
   *
   * @generated from field: google.container.v1.NodeKubeletConfig node_kubelet_config = 3;
   */
  nodeKubeletConfig?: NodeKubeletConfig;
};

/**
 * Describes the message google.container.v1.NodePoolAutoConfig.
 * Use `create(NodePoolAutoConfigSchema)` to create a new message.
 */
export const NodePoolAutoConfigSchema: GenMessage<NodePoolAutoConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 47);

/**
 * Subset of Nodepool message that has defaults.
 *
 * @generated from message google.container.v1.NodePoolDefaults
 */
export type NodePoolDefaults = Message<"google.container.v1.NodePoolDefaults"> & {
  /**
   * Subset of NodeConfig message that has defaults.
   *
   * @generated from field: google.container.v1.NodeConfigDefaults node_config_defaults = 1;
   */
  nodeConfigDefaults?: NodeConfigDefaults;
};

/**
 * Describes the message google.container.v1.NodePoolDefaults.
 * Use `create(NodePoolDefaultsSchema)` to create a new message.
 */
export const NodePoolDefaultsSchema: GenMessage<NodePoolDefaults> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 48);

/**
 * Subset of NodeConfig message that has defaults.
 *
 * @generated from message google.container.v1.NodeConfigDefaults
 */
export type NodeConfigDefaults = Message<"google.container.v1.NodeConfigDefaults"> & {
  /**
   * GCFS (Google Container File System, also known as Riptide) options.
   *
   * @generated from field: google.container.v1.GcfsConfig gcfs_config = 1;
   */
  gcfsConfig?: GcfsConfig;

  /**
   * Logging configuration for node pools.
   *
   * @generated from field: google.container.v1.NodePoolLoggingConfig logging_config = 3;
   */
  loggingConfig?: NodePoolLoggingConfig;

  /**
   * Parameters for containerd customization.
   *
   * @generated from field: google.container.v1.ContainerdConfig containerd_config = 4;
   */
  containerdConfig?: ContainerdConfig;

  /**
   * NodeKubeletConfig controls the defaults for new node-pools.
   *
   * Currently only `insecure_kubelet_readonly_port_enabled` can be set here.
   *
   * @generated from field: google.container.v1.NodeKubeletConfig node_kubelet_config = 6;
   */
  nodeKubeletConfig?: NodeKubeletConfig;
};

/**
 * Describes the message google.container.v1.NodeConfigDefaults.
 * Use `create(NodeConfigDefaultsSchema)` to create a new message.
 */
export const NodeConfigDefaultsSchema: GenMessage<NodeConfigDefaults> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 49);

/**
 * ClusterUpdate describes an update to the cluster. Exactly one update can
 * be applied to a cluster with each request, so at most one field can be
 * provided.
 *
 * @generated from message google.container.v1.ClusterUpdate
 */
export type ClusterUpdate = Message<"google.container.v1.ClusterUpdate"> & {
  /**
   * The Kubernetes version to change the nodes to (typically an
   * upgrade).
   *
   * Users may specify either explicit versions offered by
   * Kubernetes Engine or version aliases, which have the following behavior:
   *
   * - "latest": picks the highest valid Kubernetes version
   * - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
   * - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
   * - "1.X.Y-gke.N": picks an explicit Kubernetes version
   * - "-": picks the Kubernetes master version
   *
   * @generated from field: string desired_node_version = 4;
   */
  desiredNodeVersion: string;

  /**
   * The monitoring service the cluster should use to write metrics.
   * Currently available options:
   *
   * * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring
   * service with a Kubernetes-native resource model
   * * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no
   *   longer available as of GKE 1.15).
   * * `none` - No metrics will be exported from the cluster.
   *
   * If left as an empty string,`monitoring.googleapis.com/kubernetes` will be
   * used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
   *
   * @generated from field: string desired_monitoring_service = 5;
   */
  desiredMonitoringService: string;

  /**
   * Configurations for the various addons available to run in the cluster.
   *
   * @generated from field: google.container.v1.AddonsConfig desired_addons_config = 6;
   */
  desiredAddonsConfig?: AddonsConfig;

  /**
   * The node pool to be upgraded. This field is mandatory if
   * "desired_node_version", "desired_image_family" or
   * "desired_node_pool_autoscaling" is specified and there is more than one
   * node pool on the cluster.
   *
   * @generated from field: string desired_node_pool_id = 7;
   */
  desiredNodePoolId: string;

  /**
   * The desired image type for the node pool.
   * NOTE: Set the "desired_node_pool" field as well.
   *
   * @generated from field: string desired_image_type = 8;
   */
  desiredImageType: string;

  /**
   * Configuration of etcd encryption.
   *
   * @generated from field: google.container.v1.DatabaseEncryption desired_database_encryption = 46;
   */
  desiredDatabaseEncryption?: DatabaseEncryption;

  /**
   * Configuration for Workload Identity.
   *
   * @generated from field: google.container.v1.WorkloadIdentityConfig desired_workload_identity_config = 47;
   */
  desiredWorkloadIdentityConfig?: WorkloadIdentityConfig;

  /**
   * Configuration for issuance of mTLS keys and certificates to Kubernetes
   * pods.
   *
   * @generated from field: google.container.v1.MeshCertificates desired_mesh_certificates = 67;
   */
  desiredMeshCertificates?: MeshCertificates;

  /**
   * Configuration for Shielded Nodes.
   *
   * @generated from field: google.container.v1.ShieldedNodes desired_shielded_nodes = 48;
   */
  desiredShieldedNodes?: ShieldedNodes;

  /**
   * The desired configuration for the fine-grained cost management feature.
   *
   * @generated from field: google.container.v1.CostManagementConfig desired_cost_management_config = 49;
   */
  desiredCostManagementConfig?: CostManagementConfig;

  /**
   * DNSConfig contains clusterDNS config for this cluster.
   *
   * @generated from field: google.container.v1.DNSConfig desired_dns_config = 53;
   */
  desiredDnsConfig?: DNSConfig;

  /**
   * Autoscaler configuration for the node pool specified in
   * desired_node_pool_id. If there is only one pool in the
   * cluster and desired_node_pool_id is not provided then
   * the change applies to that single node pool.
   *
   * @generated from field: google.container.v1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
   */
  desiredNodePoolAutoscaling?: NodePoolAutoscaling;

  /**
   * The desired list of Google Compute Engine
   * [zones](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster's nodes should be located.
   *
   * This list must always include the cluster's primary zone.
   *
   * Warning: changing cluster locations will update the locations of all node
   * pools and will result in nodes being added and/or removed.
   *
   * @generated from field: repeated string desired_locations = 10;
   */
  desiredLocations: string[];

  /**
   * The desired configuration options for master authorized networks feature.
   *
   * @generated from field: google.container.v1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
   */
  desiredMasterAuthorizedNetworksConfig?: MasterAuthorizedNetworksConfig;

  /**
   * Cluster-level autoscaling configuration.
   *
   * @generated from field: google.container.v1.ClusterAutoscaling desired_cluster_autoscaling = 15;
   */
  desiredClusterAutoscaling?: ClusterAutoscaling;

  /**
   * The desired configuration options for the Binary Authorization feature.
   *
   * @generated from field: google.container.v1.BinaryAuthorization desired_binary_authorization = 16;
   */
  desiredBinaryAuthorization?: BinaryAuthorization;

  /**
   * The logging service the cluster should use to write logs.
   * Currently available options:
   *
   * * `logging.googleapis.com/kubernetes` - The Cloud Logging
   * service with a Kubernetes-native resource model
   * * `logging.googleapis.com` - The legacy Cloud Logging service (no longer
   *   available as of GKE 1.15).
   * * `none` - no logs will be exported from the cluster.
   *
   * If left as an empty string,`logging.googleapis.com/kubernetes` will be
   * used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
   *
   * @generated from field: string desired_logging_service = 19;
   */
  desiredLoggingService: string;

  /**
   * The desired configuration for exporting resource usage.
   *
   * @generated from field: google.container.v1.ResourceUsageExportConfig desired_resource_usage_export_config = 21;
   */
  desiredResourceUsageExportConfig?: ResourceUsageExportConfig;

  /**
   * Cluster-level Vertical Pod Autoscaling configuration.
   *
   * @generated from field: google.container.v1.VerticalPodAutoscaling desired_vertical_pod_autoscaling = 22;
   */
  desiredVerticalPodAutoscaling?: VerticalPodAutoscaling;

  /**
   * The desired private cluster configuration. master_global_access_config is
   * the only field that can be changed via this field.
   * See also
   * [ClusterUpdate.desired_enable_private_endpoint][google.container.v1.ClusterUpdate.desired_enable_private_endpoint]
   * for modifying other fields within
   * [PrivateClusterConfig][google.container.v1.PrivateClusterConfig].
   *
   * @generated from field: google.container.v1.PrivateClusterConfig desired_private_cluster_config = 25;
   */
  desiredPrivateClusterConfig?: PrivateClusterConfig;

  /**
   * The desired config of Intra-node visibility.
   *
   * @generated from field: google.container.v1.IntraNodeVisibilityConfig desired_intra_node_visibility_config = 26;
   */
  desiredIntraNodeVisibilityConfig?: IntraNodeVisibilityConfig;

  /**
   * The desired status of whether to disable default sNAT for this cluster.
   *
   * @generated from field: google.container.v1.DefaultSnatStatus desired_default_snat_status = 28;
   */
  desiredDefaultSnatStatus?: DefaultSnatStatus;

  /**
   * The desired release channel configuration.
   *
   * @generated from field: google.container.v1.ReleaseChannel desired_release_channel = 31;
   */
  desiredReleaseChannel?: ReleaseChannel;

  /**
   * The desired L4 Internal Load Balancer Subsetting configuration.
   *
   * @generated from field: google.container.v1.ILBSubsettingConfig desired_l4ilb_subsetting_config = 39;
   */
  desiredL4ilbSubsettingConfig?: ILBSubsettingConfig;

  /**
   * The desired datapath provider for the cluster.
   *
   * @generated from field: google.container.v1.DatapathProvider desired_datapath_provider = 50;
   */
  desiredDatapathProvider: DatapathProvider;

  /**
   * The desired state of IPv6 connectivity to Google Services.
   *
   * @generated from field: google.container.v1.PrivateIPv6GoogleAccess desired_private_ipv6_google_access = 51;
   */
  desiredPrivateIpv6GoogleAccess: PrivateIPv6GoogleAccess;

  /**
   * The desired notification configuration.
   *
   * @generated from field: google.container.v1.NotificationConfig desired_notification_config = 55;
   */
  desiredNotificationConfig?: NotificationConfig;

  /**
   * The desired authenticator groups config for the cluster.
   *
   * @generated from field: google.container.v1.AuthenticatorGroupsConfig desired_authenticator_groups_config = 63;
   */
  desiredAuthenticatorGroupsConfig?: AuthenticatorGroupsConfig;

  /**
   * The desired logging configuration.
   *
   * @generated from field: google.container.v1.LoggingConfig desired_logging_config = 64;
   */
  desiredLoggingConfig?: LoggingConfig;

  /**
   * The desired monitoring configuration.
   *
   * @generated from field: google.container.v1.MonitoringConfig desired_monitoring_config = 65;
   */
  desiredMonitoringConfig?: MonitoringConfig;

  /**
   * The desired Identity Service component configuration.
   *
   * @generated from field: google.container.v1.IdentityServiceConfig desired_identity_service_config = 66;
   */
  desiredIdentityServiceConfig?: IdentityServiceConfig;

  /**
   * ServiceExternalIPsConfig specifies the config for the use of Services with
   * ExternalIPs field.
   *
   * @generated from field: google.container.v1.ServiceExternalIPsConfig desired_service_external_ips_config = 60;
   */
  desiredServiceExternalIpsConfig?: ServiceExternalIPsConfig;

  /**
   * Enable/Disable private endpoint for the cluster's master.
   *
   * @generated from field: optional bool desired_enable_private_endpoint = 71;
   */
  desiredEnablePrivateEndpoint?: boolean;

  /**
   * The Kubernetes version to change the master to.
   *
   * Users may specify either explicit versions offered by
   * Kubernetes Engine or version aliases, which have the following behavior:
   *
   * - "latest": picks the highest valid Kubernetes version
   * - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
   * - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
   * - "1.X.Y-gke.N": picks an explicit Kubernetes version
   * - "-": picks the default Kubernetes version
   *
   * @generated from field: string desired_master_version = 100;
   */
  desiredMasterVersion: string;

  /**
   * The desired GCFS config for the cluster
   *
   * @generated from field: google.container.v1.GcfsConfig desired_gcfs_config = 109;
   */
  desiredGcfsConfig?: GcfsConfig;

  /**
   * The desired network tags that apply to all auto-provisioned node pools
   * in autopilot clusters and node auto-provisioning enabled clusters.
   *
   * @generated from field: google.container.v1.NetworkTags desired_node_pool_auto_config_network_tags = 110;
   */
  desiredNodePoolAutoConfigNetworkTags?: NetworkTags;

  /**
   * The desired config of Gateway API on this cluster.
   *
   * @generated from field: google.container.v1.GatewayAPIConfig desired_gateway_api_config = 114;
   */
  desiredGatewayApiConfig?: GatewayAPIConfig;

  /**
   * The current etag of the cluster.
   * If an etag is provided and does not match the current etag of the cluster,
   * update will be blocked and an ABORTED error will be returned.
   *
   * @generated from field: string etag = 115;
   */
  etag: string;

  /**
   * The desired node pool logging configuration defaults for the cluster.
   *
   * @generated from field: google.container.v1.NodePoolLoggingConfig desired_node_pool_logging_config = 116;
   */
  desiredNodePoolLoggingConfig?: NodePoolLoggingConfig;

  /**
   * The desired fleet configuration for the cluster.
   *
   * @generated from field: google.container.v1.Fleet desired_fleet = 117;
   */
  desiredFleet?: Fleet;

  /**
   * The desired stack type of the cluster.
   * If a stack type is provided and does not match the current stack type of
   * the cluster, update will attempt to change the stack type to the new type.
   *
   * @generated from field: google.container.v1.StackType desired_stack_type = 119;
   */
  desiredStackType: StackType;

  /**
   * The additional pod ranges to be added to the cluster. These pod ranges
   * can be used by node pools to allocate pod IPs.
   *
   * @generated from field: google.container.v1.AdditionalPodRangesConfig additional_pod_ranges_config = 120;
   */
  additionalPodRangesConfig?: AdditionalPodRangesConfig;

  /**
   * The additional pod ranges that are to be removed from the cluster.
   * The pod ranges specified here must have been specified earlier in the
   * 'additional_pod_ranges_config' argument.
   *
   * @generated from field: google.container.v1.AdditionalPodRangesConfig removed_additional_pod_ranges_config = 121;
   */
  removedAdditionalPodRangesConfig?: AdditionalPodRangesConfig;

  /**
   * Kubernetes open source beta apis enabled on the cluster. Only beta apis
   *
   * @generated from field: google.container.v1.K8sBetaAPIConfig enable_k8s_beta_apis = 122;
   */
  enableK8sBetaApis?: K8sBetaAPIConfig;

  /**
   * Enable/Disable Security Posture API features for the cluster.
   *
   * @generated from field: google.container.v1.SecurityPostureConfig desired_security_posture_config = 124;
   */
  desiredSecurityPostureConfig?: SecurityPostureConfig;

  /**
   * The desired network performance config.
   *
   * @generated from field: google.container.v1.NetworkConfig.ClusterNetworkPerformanceConfig desired_network_performance_config = 125;
   */
  desiredNetworkPerformanceConfig?: NetworkConfig_ClusterNetworkPerformanceConfig;

  /**
   * Enable/Disable FQDN Network Policy for the cluster.
   *
   * @generated from field: optional bool desired_enable_fqdn_network_policy = 126;
   */
  desiredEnableFqdnNetworkPolicy?: boolean;

  /**
   * The desired workload policy configuration for the autopilot cluster.
   *
   * @generated from field: google.container.v1.WorkloadPolicyConfig desired_autopilot_workload_policy_config = 128;
   */
  desiredAutopilotWorkloadPolicyConfig?: WorkloadPolicyConfig;

  /**
   * Desired Beta APIs to be enabled for cluster.
   *
   * @generated from field: google.container.v1.K8sBetaAPIConfig desired_k8s_beta_apis = 131;
   */
  desiredK8sBetaApis?: K8sBetaAPIConfig;

  /**
   * The desired containerd config for the cluster.
   *
   * @generated from field: google.container.v1.ContainerdConfig desired_containerd_config = 134;
   */
  desiredContainerdConfig?: ContainerdConfig;

  /**
   * Enable/Disable Multi-Networking for the cluster
   *
   * @generated from field: optional bool desired_enable_multi_networking = 135;
   */
  desiredEnableMultiNetworking?: boolean;

  /**
   * The desired resource manager tags that apply to all auto-provisioned node
   * pools in autopilot clusters and node auto-provisioning enabled clusters.
   *
   * @generated from field: google.container.v1.ResourceManagerTags desired_node_pool_auto_config_resource_manager_tags = 136;
   */
  desiredNodePoolAutoConfigResourceManagerTags?: ResourceManagerTags;

  /**
   * Specify the details of in-transit encryption.
   *
   * @generated from field: optional google.container.v1.InTransitEncryptionConfig desired_in_transit_encryption_config = 137;
   */
  desiredInTransitEncryptionConfig?: InTransitEncryptionConfig;

  /**
   * Enable/Disable Cilium Clusterwide Network Policy for the cluster.
   *
   * @generated from field: optional bool desired_enable_cilium_clusterwide_network_policy = 138;
   */
  desiredEnableCiliumClusterwideNetworkPolicy?: boolean;

  /**
   * The desired node kubelet config for the cluster.
   *
   * @generated from field: google.container.v1.NodeKubeletConfig desired_node_kubelet_config = 141;
   */
  desiredNodeKubeletConfig?: NodeKubeletConfig;

  /**
   * The desired node kubelet config for all auto-provisioned node pools
   * in autopilot clusters and node auto-provisioning enabled clusters.
   *
   * @generated from field: google.container.v1.NodeKubeletConfig desired_node_pool_auto_config_kubelet_config = 142;
   */
  desiredNodePoolAutoConfigKubeletConfig?: NodeKubeletConfig;
};

/**
 * Describes the message google.container.v1.ClusterUpdate.
 * Use `create(ClusterUpdateSchema)` to create a new message.
 */
export const ClusterUpdateSchema: GenMessage<ClusterUpdate> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 50);

/**
 * AdditionalPodRangesConfig is the configuration for additional pod secondary
 * ranges supporting the ClusterUpdate message.
 *
 * @generated from message google.container.v1.AdditionalPodRangesConfig
 */
export type AdditionalPodRangesConfig = Message<"google.container.v1.AdditionalPodRangesConfig"> & {
  /**
   * Name for pod secondary ipv4 range which has the actual range defined ahead.
   *
   * @generated from field: repeated string pod_range_names = 1;
   */
  podRangeNames: string[];

  /**
   * Output only. Information for additional pod range.
   *
   * @generated from field: repeated google.container.v1.RangeInfo pod_range_info = 2;
   */
  podRangeInfo: RangeInfo[];
};

/**
 * Describes the message google.container.v1.AdditionalPodRangesConfig.
 * Use `create(AdditionalPodRangesConfigSchema)` to create a new message.
 */
export const AdditionalPodRangesConfigSchema: GenMessage<AdditionalPodRangesConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 51);

/**
 * RangeInfo contains the range name and the range utilization by this cluster.
 *
 * @generated from message google.container.v1.RangeInfo
 */
export type RangeInfo = Message<"google.container.v1.RangeInfo"> & {
  /**
   * Output only. Name of a range.
   *
   * @generated from field: string range_name = 1;
   */
  rangeName: string;

  /**
   * Output only. The utilization of the range.
   *
   * @generated from field: double utilization = 2;
   */
  utilization: number;
};

/**
 * Describes the message google.container.v1.RangeInfo.
 * Use `create(RangeInfoSchema)` to create a new message.
 */
export const RangeInfoSchema: GenMessage<RangeInfo> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 52);

/**
 * This operation resource represents operations that may have happened or are
 * happening on the cluster. All fields are output only.
 *
 * @generated from message google.container.v1.Operation
 */
export type Operation = Message<"google.container.v1.Operation"> & {
  /**
   * Output only. The server-assigned ID for the operation.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * operation is taking place. This field is deprecated, use location instead.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Output only. The operation type.
   *
   * @generated from field: google.container.v1.Operation.Type operation_type = 3;
   */
  operationType: Operation_Type;

  /**
   * Output only. The current status of the operation.
   *
   * @generated from field: google.container.v1.Operation.Status status = 4;
   */
  status: Operation_Status;

  /**
   * Output only. Detailed operation progress, if available.
   *
   * @generated from field: string detail = 8;
   */
  detail: string;

  /**
   * Output only. If an error has occurred, a textual description of the error.
   * Deprecated. Use the field error instead.
   *
   * @generated from field: string status_message = 5 [deprecated = true];
   * @deprecated
   */
  statusMessage: string;

  /**
   * Output only. Server-defined URI for the operation. Example:
   * `https://container.googleapis.com/v1alpha1/projects/123/locations/us-central1/operations/operation-123`.
   *
   * @generated from field: string self_link = 6;
   */
  selfLink: string;

  /**
   * Output only. Server-defined URI for the target of the operation. The format
   * of this is a URI to the resource being modified (such as a cluster, node
   * pool, or node). For node pool repairs, there may be multiple nodes being
   * repaired, but only one will be the target.
   *
   * Examples:
   *
   * -
   * ##
   * `https://container.googleapis.com/v1/projects/123/locations/us-central1/clusters/my-cluster`
   *
   * ##
   * `https://container.googleapis.com/v1/projects/123/zones/us-central1-c/clusters/my-cluster/nodePools/my-np`
   *
   * `https://container.googleapis.com/v1/projects/123/zones/us-central1-c/clusters/my-cluster/nodePools/my-np/node/my-node`
   *
   * @generated from field: string target_link = 7;
   */
  targetLink: string;

  /**
   * Output only. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
   * or
   * [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
   * in which the cluster resides.
   *
   * @generated from field: string location = 9;
   */
  location: string;

  /**
   * Output only. The time the operation started, in
   * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string start_time = 10;
   */
  startTime: string;

  /**
   * Output only. The time the operation completed, in
   * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string end_time = 11;
   */
  endTime: string;

  /**
   * Output only. Progress information for an operation.
   *
   * @generated from field: google.container.v1.OperationProgress progress = 12;
   */
  progress?: OperationProgress;

  /**
   * Which conditions caused the current cluster state.
   * Deprecated. Use field error instead.
   *
   * @generated from field: repeated google.container.v1.StatusCondition cluster_conditions = 13 [deprecated = true];
   * @deprecated
   */
  clusterConditions: StatusCondition[];

  /**
   * Which conditions caused the current node pool state.
   * Deprecated. Use field error instead.
   *
   * @generated from field: repeated google.container.v1.StatusCondition nodepool_conditions = 14 [deprecated = true];
   * @deprecated
   */
  nodepoolConditions: StatusCondition[];

  /**
   * The error result of the operation in case of failure.
   *
   * @generated from field: google.rpc.Status error = 15;
   */
  error?: Status;
};

/**
 * Describes the message google.container.v1.Operation.
 * Use `create(OperationSchema)` to create a new message.
 */
export const OperationSchema: GenMessage<Operation> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 53);

/**
 * Current status of the operation.
 *
 * @generated from enum google.container.v1.Operation.Status
 */
export enum Operation_Status {
  /**
   * Not set.
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * The operation has been created.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The operation is currently running.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The operation is done, either cancelled or completed.
   *
   * @generated from enum value: DONE = 3;
   */
  DONE = 3,

  /**
   * The operation is aborting.
   *
   * @generated from enum value: ABORTING = 4;
   */
  ABORTING = 4,
}

/**
 * Describes the enum google.container.v1.Operation.Status.
 */
export const Operation_StatusSchema: GenEnum<Operation_Status> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 53, 0);

/**
 * Operation type categorizes the operation.
 *
 * @generated from enum google.container.v1.Operation.Type
 */
export enum Operation_Type {
  /**
   * Not set.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * The cluster is being created. The cluster should be assumed to be
   * unusable until the operation finishes.
   *
   * In the event of the operation failing, the cluster will enter the [ERROR
   * state][Cluster.Status.ERROR] and eventually be deleted.
   *
   * @generated from enum value: CREATE_CLUSTER = 1;
   */
  CREATE_CLUSTER = 1,

  /**
   * The cluster is being deleted. The cluster should be assumed to be
   * unusable as soon as this operation starts.
   *
   * In the event of the operation failing, the cluster will enter the [ERROR
   * state][Cluster.Status.ERROR] and the deletion will be automatically
   * retried until completed.
   *
   * @generated from enum value: DELETE_CLUSTER = 2;
   */
  DELETE_CLUSTER = 2,

  /**
   * The [cluster
   * version][google.container.v1.ClusterUpdate.desired_master_version] is
   * being updated. Note that this includes "upgrades" to the same version,
   * which are simply a recreation. This also includes
   * [auto-upgrades](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-upgrades#upgrading_automatically).
   * For more details, see [documentation on cluster
   * upgrades](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-upgrades#cluster_upgrades).
   *
   * @generated from enum value: UPGRADE_MASTER = 3;
   */
  UPGRADE_MASTER = 3,

  /**
   * A node pool is being updated. Despite calling this an "upgrade", this
   * includes most forms of updates to node pools. This also includes
   * [auto-upgrades](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-upgrades).
   *
   * This operation sets the
   * [progress][google.container.v1.Operation.progress] field and may be
   * [canceled][google.container.v1.ClusterManager.CancelOperation].
   *
   * The upgrade strategy depends on [node pool
   * configuration](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies).
   * The nodes are generally still usable during this operation.
   *
   * @generated from enum value: UPGRADE_NODES = 4;
   */
  UPGRADE_NODES = 4,

  /**
   * A problem has been detected with the control plane and is being repaired.
   * This operation type is initiated by GKE. For more details, see
   * [documentation on
   * repairs](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions#repairs).
   *
   * @generated from enum value: REPAIR_CLUSTER = 5;
   */
  REPAIR_CLUSTER = 5,

  /**
   * The cluster is being updated. This is a broad category of operations and
   * includes operations that only change metadata as well as those that must
   * recreate the entire cluster. If the control plane must be recreated, this
   * will cause temporary downtime for zonal clusters.
   *
   * Some features require recreating the nodes as well. Those will be
   * recreated as separate operations and the update may not be completely
   * functional until the node pools recreations finish. Node recreations will
   * generally follow [maintenance
   * policies](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions).
   *
   * Some GKE-initiated operations use this type. This includes certain types
   * of auto-upgrades and incident mitigations.
   *
   * @generated from enum value: UPDATE_CLUSTER = 6;
   */
  UPDATE_CLUSTER = 6,

  /**
   * A node pool is being created. The node pool should be assumed to be
   * unusable until this operation finishes. In the event of an error, the
   * node pool may be partially created.
   *
   * If enabled, [node
   * autoprovisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
   * may have automatically initiated such operations.
   *
   * @generated from enum value: CREATE_NODE_POOL = 7;
   */
  CREATE_NODE_POOL = 7,

  /**
   * The node pool is being deleted. The node pool should be assumed to be
   * unusable as soon as this operation starts.
   *
   * @generated from enum value: DELETE_NODE_POOL = 8;
   */
  DELETE_NODE_POOL = 8,

  /**
   * The node pool's [manamagent][google.container.v1.NodePool.management]
   * field is being updated. These operations only update metadata and may be
   * concurrent with most other operations.
   *
   * @generated from enum value: SET_NODE_POOL_MANAGEMENT = 9;
   */
  SET_NODE_POOL_MANAGEMENT = 9,

  /**
   * A problem has been detected with nodes and [they are being
   * repaired](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-repair).
   * This operation type is initiated by GKE, typically automatically. This
   * operation may be concurrent with other operations and there may be
   * multiple repairs occurring on the same node pool.
   *
   * @generated from enum value: AUTO_REPAIR_NODES = 10;
   */
  AUTO_REPAIR_NODES = 10,

  /**
   * Unused. Automatic node upgrade uses
   * [UPGRADE_NODES][google.container.v1.Operation.Type.UPGRADE_NODES].
   *
   * @generated from enum value: AUTO_UPGRADE_NODES = 11 [deprecated = true];
   * @deprecated
   */
  AUTO_UPGRADE_NODES = 11,

  /**
   * Unused. Updating labels uses
   * [UPDATE_CLUSTER][google.container.v1.Operation.Type.UPDATE_CLUSTER].
   *
   * @generated from enum value: SET_LABELS = 12 [deprecated = true];
   * @deprecated
   */
  SET_LABELS = 12,

  /**
   * Unused. Updating master auth uses
   * [UPDATE_CLUSTER][google.container.v1.Operation.Type.UPDATE_CLUSTER].
   *
   * @generated from enum value: SET_MASTER_AUTH = 13 [deprecated = true];
   * @deprecated
   */
  SET_MASTER_AUTH = 13,

  /**
   * The node pool is being resized. With the exception of resizing to or from
   * size zero, the node pool is generally usable during this operation.
   *
   * @generated from enum value: SET_NODE_POOL_SIZE = 14;
   */
  SET_NODE_POOL_SIZE = 14,

  /**
   * Unused. Updating network policy uses
   * [UPDATE_CLUSTER][google.container.v1.Operation.Type.UPDATE_CLUSTER].
   *
   * @generated from enum value: SET_NETWORK_POLICY = 15 [deprecated = true];
   * @deprecated
   */
  SET_NETWORK_POLICY = 15,

  /**
   * Unused. Updating maintenance policy uses
   * [UPDATE_CLUSTER][google.container.v1.Operation.Type.UPDATE_CLUSTER].
   *
   * @generated from enum value: SET_MAINTENANCE_POLICY = 16 [deprecated = true];
   * @deprecated
   */
  SET_MAINTENANCE_POLICY = 16,

  /**
   * The control plane is being resized. This operation type is initiated by
   * GKE. These operations are often performed preemptively to ensure that the
   * control plane has sufficient resources and is not typically an indication
   * of issues. For more details, see
   * [documentation on
   * resizes](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions#repairs).
   *
   * @generated from enum value: RESIZE_CLUSTER = 18;
   */
  RESIZE_CLUSTER = 18,

  /**
   * Fleet features of GKE Enterprise are being upgraded. The cluster should
   * be assumed to be blocked for other upgrades until the operation finishes.
   *
   * @generated from enum value: FLEET_FEATURE_UPGRADE = 19;
   */
  FLEET_FEATURE_UPGRADE = 19,
}

/**
 * Describes the enum google.container.v1.Operation.Type.
 */
export const Operation_TypeSchema: GenEnum<Operation_Type> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 53, 1);

/**
 * Information about operation (or operation stage) progress.
 *
 * @generated from message google.container.v1.OperationProgress
 */
export type OperationProgress = Message<"google.container.v1.OperationProgress"> & {
  /**
   * A non-parameterized string describing an operation stage.
   * Unset for single-stage operations.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Status of an operation stage.
   * Unset for single-stage operations.
   *
   * @generated from field: google.container.v1.Operation.Status status = 2;
   */
  status: Operation_Status;

  /**
   * Progress metric bundle, for example:
   *   metrics: [{name: "nodes done",     int_value: 15},
   *             {name: "nodes total",    int_value: 32}]
   * or
   *   metrics: [{name: "progress",       double_value: 0.56},
   *             {name: "progress scale", double_value: 1.0}]
   *
   * @generated from field: repeated google.container.v1.OperationProgress.Metric metrics = 3;
   */
  metrics: OperationProgress_Metric[];

  /**
   * Substages of an operation or a stage.
   *
   * @generated from field: repeated google.container.v1.OperationProgress stages = 4;
   */
  stages: OperationProgress[];
};

/**
 * Describes the message google.container.v1.OperationProgress.
 * Use `create(OperationProgressSchema)` to create a new message.
 */
export const OperationProgressSchema: GenMessage<OperationProgress> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 54);

/**
 * Progress metric is (string, int|float|string) pair.
 *
 * @generated from message google.container.v1.OperationProgress.Metric
 */
export type OperationProgress_Metric = Message<"google.container.v1.OperationProgress.Metric"> & {
  /**
   * Required. Metric name, e.g., "nodes total", "percent done".
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Strictly one of the values is required.
   *
   * @generated from oneof google.container.v1.OperationProgress.Metric.value
   */
  value: {
    /**
     * For metrics with integer value.
     *
     * @generated from field: int64 int_value = 2;
     */
    value: bigint;
    case: "intValue";
  } | {
    /**
     * For metrics with floating point value.
     *
     * @generated from field: double double_value = 3;
     */
    value: number;
    case: "doubleValue";
  } | {
    /**
     * For metrics with custom values (ratios, visual progress, etc.).
     *
     * @generated from field: string string_value = 4;
     */
    value: string;
    case: "stringValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.container.v1.OperationProgress.Metric.
 * Use `create(OperationProgress_MetricSchema)` to create a new message.
 */
export const OperationProgress_MetricSchema: GenMessage<OperationProgress_Metric> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 54, 0);

/**
 * CreateClusterRequest creates a cluster.
 *
 * @generated from message google.container.v1.CreateClusterRequest
 */
export type CreateClusterRequest = Message<"google.container.v1.CreateClusterRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the parent field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the parent
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Required. A [cluster
   * resource](https://cloud.google.com/container-engine/reference/rest/v1/projects.locations.clusters)
   *
   * @generated from field: google.container.v1.Cluster cluster = 3;
   */
  cluster?: Cluster;

  /**
   * The parent (project and location) where the cluster will be created.
   * Specified in the format `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 5;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1.CreateClusterRequest.
 * Use `create(CreateClusterRequestSchema)` to create a new message.
 */
export const CreateClusterRequestSchema: GenMessage<CreateClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 55);

/**
 * GetClusterRequest gets the settings of a cluster.
 *
 * @generated from message google.container.v1.GetClusterRequest
 */
export type GetClusterRequest = Message<"google.container.v1.GetClusterRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to retrieve.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * The name (project, location, cluster) of the cluster to retrieve.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.GetClusterRequest.
 * Use `create(GetClusterRequestSchema)` to create a new message.
 */
export const GetClusterRequestSchema: GenMessage<GetClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 56);

/**
 * UpdateClusterRequest updates the settings of a cluster.
 *
 * @generated from message google.container.v1.UpdateClusterRequest
 */
export type UpdateClusterRequest = Message<"google.container.v1.UpdateClusterRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. A description of the update.
   *
   * @generated from field: google.container.v1.ClusterUpdate update = 4;
   */
  update?: ClusterUpdate;

  /**
   * The name (project, location, cluster) of the cluster to update.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.UpdateClusterRequest.
 * Use `create(UpdateClusterRequestSchema)` to create a new message.
 */
export const UpdateClusterRequestSchema: GenMessage<UpdateClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 57);

/**
 * UpdateNodePoolRequests update a node pool's image and/or version.
 *
 * @generated from message google.container.v1.UpdateNodePoolRequest
 */
export type UpdateNodePoolRequest = Message<"google.container.v1.UpdateNodePoolRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Deprecated. The name of the node pool to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string node_pool_id = 4 [deprecated = true];
   * @deprecated
   */
  nodePoolId: string;

  /**
   * Required. The Kubernetes version to change the nodes to (typically an
   * upgrade).
   *
   * Users may specify either explicit versions offered by Kubernetes Engine or
   * version aliases, which have the following behavior:
   *
   * - "latest": picks the highest valid Kubernetes version
   * - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
   * - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
   * - "1.X.Y-gke.N": picks an explicit Kubernetes version
   * - "-": picks the Kubernetes master version
   *
   * @generated from field: string node_version = 5;
   */
  nodeVersion: string;

  /**
   * Required. The desired image type for the node pool. Please see
   * https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for
   * available image types.
   *
   * @generated from field: string image_type = 6;
   */
  imageType: string;

  /**
   * The name (project, location, cluster, node pool) of the node pool to
   * update. Specified in the format
   * `projects/*\/locations/*\/clusters/*\/nodePools/*`.
   *
   * @generated from field: string name = 8;
   */
  name: string;

  /**
   * The desired list of Google Compute Engine
   * [zones](https://cloud.google.com/compute/docs/zones#available) in which the
   * node pool's nodes should be located. Changing the locations for a node pool
   * will result in nodes being either created or removed from the node pool,
   * depending on whether locations are being added or removed.
   *
   * @generated from field: repeated string locations = 13;
   */
  locations: string[];

  /**
   * The desired workload metadata config for the node pool.
   *
   * @generated from field: google.container.v1.WorkloadMetadataConfig workload_metadata_config = 14;
   */
  workloadMetadataConfig?: WorkloadMetadataConfig;

  /**
   * Upgrade settings control disruption and speed of the upgrade.
   *
   * @generated from field: google.container.v1.NodePool.UpgradeSettings upgrade_settings = 15;
   */
  upgradeSettings?: NodePool_UpgradeSettings;

  /**
   * The desired network tags to be applied to all nodes in the node pool.
   * If this field is not present, the tags will not be changed. Otherwise,
   * the existing network tags will be *replaced* with the provided tags.
   *
   * @generated from field: google.container.v1.NetworkTags tags = 16;
   */
  tags?: NetworkTags;

  /**
   * The desired node taints to be applied to all nodes in the node pool.
   * If this field is not present, the taints will not be changed. Otherwise,
   * the existing node taints will be *replaced* with the provided taints.
   *
   * @generated from field: google.container.v1.NodeTaints taints = 17;
   */
  taints?: NodeTaints;

  /**
   * The desired node labels to be applied to all nodes in the node pool.
   * If this field is not present, the labels will not be changed. Otherwise,
   * the existing node labels will be *replaced* with the provided labels.
   *
   * @generated from field: google.container.v1.NodeLabels labels = 18;
   */
  labels?: NodeLabels;

  /**
   * Parameters that can be configured on Linux nodes.
   *
   * @generated from field: google.container.v1.LinuxNodeConfig linux_node_config = 19;
   */
  linuxNodeConfig?: LinuxNodeConfig;

  /**
   * Node kubelet configs.
   *
   * @generated from field: google.container.v1.NodeKubeletConfig kubelet_config = 20;
   */
  kubeletConfig?: NodeKubeletConfig;

  /**
   * Node network config.
   *
   * @generated from field: google.container.v1.NodeNetworkConfig node_network_config = 21;
   */
  nodeNetworkConfig?: NodeNetworkConfig;

  /**
   * GCFS config.
   *
   * @generated from field: google.container.v1.GcfsConfig gcfs_config = 22;
   */
  gcfsConfig?: GcfsConfig;

  /**
   * Confidential nodes config.
   * All the nodes in the node pool will be Confidential VM once enabled.
   *
   * @generated from field: google.container.v1.ConfidentialNodes confidential_nodes = 23;
   */
  confidentialNodes?: ConfidentialNodes;

  /**
   * Enable or disable gvnic on the node pool.
   *
   * @generated from field: google.container.v1.VirtualNIC gvnic = 29;
   */
  gvnic?: VirtualNIC;

  /**
   * The current etag of the node pool.
   * If an etag is provided and does not match the current etag of the node
   * pool, update will be blocked and an ABORTED error will be returned.
   *
   * @generated from field: string etag = 30;
   */
  etag: string;

  /**
   * Enable or disable NCCL fast socket for the node pool.
   *
   * @generated from field: google.container.v1.FastSocket fast_socket = 31;
   */
  fastSocket?: FastSocket;

  /**
   * Logging configuration.
   *
   * @generated from field: google.container.v1.NodePoolLoggingConfig logging_config = 32;
   */
  loggingConfig?: NodePoolLoggingConfig;

  /**
   * The resource labels for the node pool to use to annotate any related
   * Google Compute Engine resources.
   *
   * @generated from field: google.container.v1.ResourceLabels resource_labels = 33;
   */
  resourceLabels?: ResourceLabels;

  /**
   * Parameters that can be configured on Windows nodes.
   *
   * @generated from field: google.container.v1.WindowsNodeConfig windows_node_config = 34;
   */
  windowsNodeConfig?: WindowsNodeConfig;

  /**
   * A list of hardware accelerators to be attached to each node.
   * See https://cloud.google.com/compute/docs/gpus for more information about
   * support for GPUs.
   *
   * @generated from field: repeated google.container.v1.AcceleratorConfig accelerators = 35;
   */
  accelerators: AcceleratorConfig[];

  /**
   * Optional. The desired [Google Compute Engine machine
   * type](https://cloud.google.com/compute/docs/machine-types) for nodes in the
   * node pool. Initiates an upgrade operation that migrates the nodes in the
   * node pool to the specified machine type.
   *
   * @generated from field: string machine_type = 36;
   */
  machineType: string;

  /**
   * Optional. The desired disk type (e.g. 'pd-standard', 'pd-ssd' or
   * 'pd-balanced') for nodes in the node pool.
   * Initiates an upgrade operation that migrates the nodes in the
   * node pool to the specified disk type.
   *
   * @generated from field: string disk_type = 37;
   */
  diskType: string;

  /**
   * Optional. The desired disk size for nodes in the node pool specified in GB.
   * The smallest allowed disk size is 10GB.
   * Initiates an upgrade operation that migrates the nodes in the
   * node pool to the specified disk size.
   *
   * @generated from field: int64 disk_size_gb = 38;
   */
  diskSizeGb: bigint;

  /**
   * Desired resource manager tag keys and values to be attached to the nodes
   * for managing Compute Engine firewalls using Network Firewall Policies.
   * Existing tags will be replaced with new values.
   *
   * @generated from field: google.container.v1.ResourceManagerTags resource_manager_tags = 39;
   */
  resourceManagerTags?: ResourceManagerTags;

  /**
   * The desired containerd config for nodes in the node pool.
   * Initiates an upgrade operation that recreates the nodes with the new
   * config.
   *
   * @generated from field: google.container.v1.ContainerdConfig containerd_config = 40;
   */
  containerdConfig?: ContainerdConfig;

  /**
   * Specifies the configuration of queued provisioning.
   *
   * @generated from field: google.container.v1.NodePool.QueuedProvisioning queued_provisioning = 42;
   */
  queuedProvisioning?: NodePool_QueuedProvisioning;
};

/**
 * Describes the message google.container.v1.UpdateNodePoolRequest.
 * Use `create(UpdateNodePoolRequestSchema)` to create a new message.
 */
export const UpdateNodePoolRequestSchema: GenMessage<UpdateNodePoolRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 58);

/**
 * SetNodePoolAutoscalingRequest sets the autoscaler settings of a node pool.
 *
 * @generated from message google.container.v1.SetNodePoolAutoscalingRequest
 */
export type SetNodePoolAutoscalingRequest = Message<"google.container.v1.SetNodePoolAutoscalingRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Deprecated. The name of the node pool to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string node_pool_id = 4 [deprecated = true];
   * @deprecated
   */
  nodePoolId: string;

  /**
   * Required. Autoscaling configuration for the node pool.
   *
   * @generated from field: google.container.v1.NodePoolAutoscaling autoscaling = 5;
   */
  autoscaling?: NodePoolAutoscaling;

  /**
   * The name (project, location, cluster, node pool) of the node pool to set
   * autoscaler settings. Specified in the format
   * `projects/*\/locations/*\/clusters/*\/nodePools/*`.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetNodePoolAutoscalingRequest.
 * Use `create(SetNodePoolAutoscalingRequestSchema)` to create a new message.
 */
export const SetNodePoolAutoscalingRequestSchema: GenMessage<SetNodePoolAutoscalingRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 59);

/**
 * SetLoggingServiceRequest sets the logging service of a cluster.
 *
 * @generated from message google.container.v1.SetLoggingServiceRequest
 */
export type SetLoggingServiceRequest = Message<"google.container.v1.SetLoggingServiceRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. The logging service the cluster should use to write logs.
   * Currently available options:
   *
   * * `logging.googleapis.com/kubernetes` - The Cloud Logging
   * service with a Kubernetes-native resource model
   * * `logging.googleapis.com` - The legacy Cloud Logging service (no longer
   *   available as of GKE 1.15).
   * * `none` - no logs will be exported from the cluster.
   *
   * If left as an empty string,`logging.googleapis.com/kubernetes` will be
   * used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
   *
   * @generated from field: string logging_service = 4;
   */
  loggingService: string;

  /**
   * The name (project, location, cluster) of the cluster to set logging.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetLoggingServiceRequest.
 * Use `create(SetLoggingServiceRequestSchema)` to create a new message.
 */
export const SetLoggingServiceRequestSchema: GenMessage<SetLoggingServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 60);

/**
 * SetMonitoringServiceRequest sets the monitoring service of a cluster.
 *
 * @generated from message google.container.v1.SetMonitoringServiceRequest
 */
export type SetMonitoringServiceRequest = Message<"google.container.v1.SetMonitoringServiceRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. The monitoring service the cluster should use to write metrics.
   * Currently available options:
   *
   * * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring
   * service with a Kubernetes-native resource model
   * * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no
   *   longer available as of GKE 1.15).
   * * `none` - No metrics will be exported from the cluster.
   *
   * If left as an empty string,`monitoring.googleapis.com/kubernetes` will be
   * used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
   *
   * @generated from field: string monitoring_service = 4;
   */
  monitoringService: string;

  /**
   * The name (project, location, cluster) of the cluster to set monitoring.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetMonitoringServiceRequest.
 * Use `create(SetMonitoringServiceRequestSchema)` to create a new message.
 */
export const SetMonitoringServiceRequestSchema: GenMessage<SetMonitoringServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 61);

/**
 * SetAddonsConfigRequest sets the addons associated with the cluster.
 *
 * @generated from message google.container.v1.SetAddonsConfigRequest
 */
export type SetAddonsConfigRequest = Message<"google.container.v1.SetAddonsConfigRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. The desired configurations for the various addons available to
   * run in the cluster.
   *
   * @generated from field: google.container.v1.AddonsConfig addons_config = 4;
   */
  addonsConfig?: AddonsConfig;

  /**
   * The name (project, location, cluster) of the cluster to set addons.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetAddonsConfigRequest.
 * Use `create(SetAddonsConfigRequestSchema)` to create a new message.
 */
export const SetAddonsConfigRequestSchema: GenMessage<SetAddonsConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 62);

/**
 * SetLocationsRequest sets the locations of the cluster.
 *
 * @generated from message google.container.v1.SetLocationsRequest
 */
export type SetLocationsRequest = Message<"google.container.v1.SetLocationsRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. The desired list of Google Compute Engine
   * [zones](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster's nodes should be located. Changing the locations a cluster is in
   * will result in nodes being either created or removed from the cluster,
   * depending on whether locations are being added or removed.
   *
   * This list must always include the cluster's primary zone.
   *
   * @generated from field: repeated string locations = 4;
   */
  locations: string[];

  /**
   * The name (project, location, cluster) of the cluster to set locations.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetLocationsRequest.
 * Use `create(SetLocationsRequestSchema)` to create a new message.
 */
export const SetLocationsRequestSchema: GenMessage<SetLocationsRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 63);

/**
 * UpdateMasterRequest updates the master of the cluster.
 *
 * @generated from message google.container.v1.UpdateMasterRequest
 */
export type UpdateMasterRequest = Message<"google.container.v1.UpdateMasterRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. The Kubernetes version to change the master to.
   *
   * Users may specify either explicit versions offered by Kubernetes Engine or
   * version aliases, which have the following behavior:
   *
   * - "latest": picks the highest valid Kubernetes version
   * - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
   * - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
   * - "1.X.Y-gke.N": picks an explicit Kubernetes version
   * - "-": picks the default Kubernetes version
   *
   * @generated from field: string master_version = 4;
   */
  masterVersion: string;

  /**
   * The name (project, location, cluster) of the cluster to update.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.UpdateMasterRequest.
 * Use `create(UpdateMasterRequestSchema)` to create a new message.
 */
export const UpdateMasterRequestSchema: GenMessage<UpdateMasterRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 64);

/**
 * SetMasterAuthRequest updates the admin password of a cluster.
 *
 * @generated from message google.container.v1.SetMasterAuthRequest
 */
export type SetMasterAuthRequest = Message<"google.container.v1.SetMasterAuthRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to upgrade.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. The exact form of action to be taken on the master auth.
   *
   * @generated from field: google.container.v1.SetMasterAuthRequest.Action action = 4;
   */
  action: SetMasterAuthRequest_Action;

  /**
   * Required. A description of the update.
   *
   * @generated from field: google.container.v1.MasterAuth update = 5;
   */
  update?: MasterAuth;

  /**
   * The name (project, location, cluster) of the cluster to set auth.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetMasterAuthRequest.
 * Use `create(SetMasterAuthRequestSchema)` to create a new message.
 */
export const SetMasterAuthRequestSchema: GenMessage<SetMasterAuthRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 65);

/**
 * Operation type: what type update to perform.
 *
 * @generated from enum google.container.v1.SetMasterAuthRequest.Action
 */
export enum SetMasterAuthRequest_Action {
  /**
   * Operation is unknown and will error out.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Set the password to a user generated value.
   *
   * @generated from enum value: SET_PASSWORD = 1;
   */
  SET_PASSWORD = 1,

  /**
   * Generate a new password and set it to that.
   *
   * @generated from enum value: GENERATE_PASSWORD = 2;
   */
  GENERATE_PASSWORD = 2,

  /**
   * Set the username.  If an empty username is provided, basic authentication
   * is disabled for the cluster.  If a non-empty username is provided, basic
   * authentication is enabled, with either a provided password or a generated
   * one.
   *
   * @generated from enum value: SET_USERNAME = 3;
   */
  SET_USERNAME = 3,
}

/**
 * Describes the enum google.container.v1.SetMasterAuthRequest.Action.
 */
export const SetMasterAuthRequest_ActionSchema: GenEnum<SetMasterAuthRequest_Action> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 65, 0);

/**
 * DeleteClusterRequest deletes a cluster.
 *
 * @generated from message google.container.v1.DeleteClusterRequest
 */
export type DeleteClusterRequest = Message<"google.container.v1.DeleteClusterRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to delete.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * The name (project, location, cluster) of the cluster to delete.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 4;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.DeleteClusterRequest.
 * Use `create(DeleteClusterRequestSchema)` to create a new message.
 */
export const DeleteClusterRequestSchema: GenMessage<DeleteClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 66);

/**
 * ListClustersRequest lists clusters.
 *
 * @generated from message google.container.v1.ListClustersRequest
 */
export type ListClustersRequest = Message<"google.container.v1.ListClustersRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the parent field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides, or "-" for all zones. This field has been deprecated and
   * replaced by the parent field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * The parent (project and location) where the clusters will be listed.
   * Specified in the format `projects/*\/locations/*`.
   * Location "-" matches all zones and all regions.
   *
   * @generated from field: string parent = 4;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1.ListClustersRequest.
 * Use `create(ListClustersRequestSchema)` to create a new message.
 */
export const ListClustersRequestSchema: GenMessage<ListClustersRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 67);

/**
 * ListClustersResponse is the result of ListClustersRequest.
 *
 * @generated from message google.container.v1.ListClustersResponse
 */
export type ListClustersResponse = Message<"google.container.v1.ListClustersResponse"> & {
  /**
   * A list of clusters in the project in the specified zone, or
   * across all ones.
   *
   * @generated from field: repeated google.container.v1.Cluster clusters = 1;
   */
  clusters: Cluster[];

  /**
   * If any zones are listed here, the list of clusters returned
   * may be missing those zones.
   *
   * @generated from field: repeated string missing_zones = 2;
   */
  missingZones: string[];
};

/**
 * Describes the message google.container.v1.ListClustersResponse.
 * Use `create(ListClustersResponseSchema)` to create a new message.
 */
export const ListClustersResponseSchema: GenMessage<ListClustersResponse> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 68);

/**
 * GetOperationRequest gets a single operation.
 *
 * @generated from message google.container.v1.GetOperationRequest
 */
export type GetOperationRequest = Message<"google.container.v1.GetOperationRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The server-assigned `name` of the operation.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string operation_id = 3 [deprecated = true];
   * @deprecated
   */
  operationId: string;

  /**
   * The name (project, location, operation id) of the operation to get.
   * Specified in the format `projects/*\/locations/*\/operations/*`.
   *
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.GetOperationRequest.
 * Use `create(GetOperationRequestSchema)` to create a new message.
 */
export const GetOperationRequestSchema: GenMessage<GetOperationRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 69);

/**
 * ListOperationsRequest lists operations.
 *
 * @generated from message google.container.v1.ListOperationsRequest
 */
export type ListOperationsRequest = Message<"google.container.v1.ListOperationsRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the parent field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) to return
   * operations for, or `-` for all zones. This field has been deprecated and
   * replaced by the parent field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * The parent (project and location) where the operations will be listed.
   * Specified in the format `projects/*\/locations/*`.
   * Location "-" matches all zones and all regions.
   *
   * @generated from field: string parent = 4;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1.ListOperationsRequest.
 * Use `create(ListOperationsRequestSchema)` to create a new message.
 */
export const ListOperationsRequestSchema: GenMessage<ListOperationsRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 70);

/**
 * CancelOperationRequest cancels a single operation.
 *
 * @generated from message google.container.v1.CancelOperationRequest
 */
export type CancelOperationRequest = Message<"google.container.v1.CancelOperationRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * operation resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The server-assigned `name` of the operation.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string operation_id = 3 [deprecated = true];
   * @deprecated
   */
  operationId: string;

  /**
   * The name (project, location, operation id) of the operation to cancel.
   * Specified in the format `projects/*\/locations/*\/operations/*`.
   *
   * @generated from field: string name = 4;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.CancelOperationRequest.
 * Use `create(CancelOperationRequestSchema)` to create a new message.
 */
export const CancelOperationRequestSchema: GenMessage<CancelOperationRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 71);

/**
 * ListOperationsResponse is the result of ListOperationsRequest.
 *
 * @generated from message google.container.v1.ListOperationsResponse
 */
export type ListOperationsResponse = Message<"google.container.v1.ListOperationsResponse"> & {
  /**
   * A list of operations in the project in the specified zone.
   *
   * @generated from field: repeated google.container.v1.Operation operations = 1;
   */
  operations: Operation[];

  /**
   * If any zones are listed here, the list of operations returned
   * may be missing the operations from those zones.
   *
   * @generated from field: repeated string missing_zones = 2;
   */
  missingZones: string[];
};

/**
 * Describes the message google.container.v1.ListOperationsResponse.
 * Use `create(ListOperationsResponseSchema)` to create a new message.
 */
export const ListOperationsResponseSchema: GenMessage<ListOperationsResponse> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 72);

/**
 * Gets the current Kubernetes Engine service configuration.
 *
 * @generated from message google.container.v1.GetServerConfigRequest
 */
export type GetServerConfigRequest = Message<"google.container.v1.GetServerConfigRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) to return
   * operations for. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * The name (project and location) of the server config to get,
   * specified in the format `projects/*\/locations/*`.
   *
   * @generated from field: string name = 4;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.GetServerConfigRequest.
 * Use `create(GetServerConfigRequestSchema)` to create a new message.
 */
export const GetServerConfigRequestSchema: GenMessage<GetServerConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 73);

/**
 * Kubernetes Engine service configuration.
 *
 * @generated from message google.container.v1.ServerConfig
 */
export type ServerConfig = Message<"google.container.v1.ServerConfig"> & {
  /**
   * Version of Kubernetes the service deploys by default.
   *
   * @generated from field: string default_cluster_version = 1;
   */
  defaultClusterVersion: string;

  /**
   * List of valid node upgrade target versions, in descending order.
   *
   * @generated from field: repeated string valid_node_versions = 3;
   */
  validNodeVersions: string[];

  /**
   * Default image type.
   *
   * @generated from field: string default_image_type = 4;
   */
  defaultImageType: string;

  /**
   * List of valid image types.
   *
   * @generated from field: repeated string valid_image_types = 5;
   */
  validImageTypes: string[];

  /**
   * List of valid master versions, in descending order.
   *
   * @generated from field: repeated string valid_master_versions = 6;
   */
  validMasterVersions: string[];

  /**
   * List of release channel configurations.
   *
   * @generated from field: repeated google.container.v1.ServerConfig.ReleaseChannelConfig channels = 9;
   */
  channels: ServerConfig_ReleaseChannelConfig[];
};

/**
 * Describes the message google.container.v1.ServerConfig.
 * Use `create(ServerConfigSchema)` to create a new message.
 */
export const ServerConfigSchema: GenMessage<ServerConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 74);

/**
 * ReleaseChannelConfig exposes configuration for a release channel.
 *
 * @generated from message google.container.v1.ServerConfig.ReleaseChannelConfig
 */
export type ServerConfig_ReleaseChannelConfig = Message<"google.container.v1.ServerConfig.ReleaseChannelConfig"> & {
  /**
   * The release channel this configuration applies to.
   *
   * @generated from field: google.container.v1.ReleaseChannel.Channel channel = 1;
   */
  channel: ReleaseChannel_Channel;

  /**
   * The default version for newly created clusters on the channel.
   *
   * @generated from field: string default_version = 2;
   */
  defaultVersion: string;

  /**
   * List of valid versions for the channel.
   *
   * @generated from field: repeated string valid_versions = 4;
   */
  validVersions: string[];
};

/**
 * Describes the message google.container.v1.ServerConfig.ReleaseChannelConfig.
 * Use `create(ServerConfig_ReleaseChannelConfigSchema)` to create a new message.
 */
export const ServerConfig_ReleaseChannelConfigSchema: GenMessage<ServerConfig_ReleaseChannelConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 74, 0);

/**
 * CreateNodePoolRequest creates a node pool for a cluster.
 *
 * @generated from message google.container.v1.CreateNodePoolRequest
 */
export type CreateNodePoolRequest = Message<"google.container.v1.CreateNodePoolRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the parent field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the parent
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster.
   * This field has been deprecated and replaced by the parent field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. The node pool to create.
   *
   * @generated from field: google.container.v1.NodePool node_pool = 4;
   */
  nodePool?: NodePool;

  /**
   * The parent (project, location, cluster name) where the node pool will be
   * created. Specified in the format
   * `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string parent = 6;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1.CreateNodePoolRequest.
 * Use `create(CreateNodePoolRequestSchema)` to create a new message.
 */
export const CreateNodePoolRequestSchema: GenMessage<CreateNodePoolRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 75);

/**
 * DeleteNodePoolRequest deletes a node pool for a cluster.
 *
 * @generated from message google.container.v1.DeleteNodePoolRequest
 */
export type DeleteNodePoolRequest = Message<"google.container.v1.DeleteNodePoolRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Deprecated. The name of the node pool to delete.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string node_pool_id = 4 [deprecated = true];
   * @deprecated
   */
  nodePoolId: string;

  /**
   * The name (project, location, cluster, node pool id) of the node pool to
   * delete. Specified in the format
   * `projects/*\/locations/*\/clusters/*\/nodePools/*`.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.DeleteNodePoolRequest.
 * Use `create(DeleteNodePoolRequestSchema)` to create a new message.
 */
export const DeleteNodePoolRequestSchema: GenMessage<DeleteNodePoolRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 76);

/**
 * ListNodePoolsRequest lists the node pool(s) for a cluster.
 *
 * @generated from message google.container.v1.ListNodePoolsRequest
 */
export type ListNodePoolsRequest = Message<"google.container.v1.ListNodePoolsRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the parent field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the parent
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster.
   * This field has been deprecated and replaced by the parent field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * The parent (project, location, cluster name) where the node pools will be
   * listed. Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string parent = 5;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1.ListNodePoolsRequest.
 * Use `create(ListNodePoolsRequestSchema)` to create a new message.
 */
export const ListNodePoolsRequestSchema: GenMessage<ListNodePoolsRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 77);

/**
 * GetNodePoolRequest retrieves a node pool for a cluster.
 *
 * @generated from message google.container.v1.GetNodePoolRequest
 */
export type GetNodePoolRequest = Message<"google.container.v1.GetNodePoolRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Deprecated. The name of the node pool.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string node_pool_id = 4 [deprecated = true];
   * @deprecated
   */
  nodePoolId: string;

  /**
   * The name (project, location, cluster, node pool id) of the node pool to
   * get. Specified in the format
   * `projects/*\/locations/*\/clusters/*\/nodePools/*`.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.GetNodePoolRequest.
 * Use `create(GetNodePoolRequestSchema)` to create a new message.
 */
export const GetNodePoolRequestSchema: GenMessage<GetNodePoolRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 78);

/**
 * Settings for blue-green upgrade.
 *
 * @generated from message google.container.v1.BlueGreenSettings
 */
export type BlueGreenSettings = Message<"google.container.v1.BlueGreenSettings"> & {
  /**
   * The rollout policy controls the general rollout progress of blue-green.
   *
   * @generated from oneof google.container.v1.BlueGreenSettings.rollout_policy
   */
  rolloutPolicy: {
    /**
     * Standard policy for the blue-green upgrade.
     *
     * @generated from field: google.container.v1.BlueGreenSettings.StandardRolloutPolicy standard_rollout_policy = 1;
     */
    value: BlueGreenSettings_StandardRolloutPolicy;
    case: "standardRolloutPolicy";
  } | { case: undefined; value?: undefined };

  /**
   * Time needed after draining entire blue pool. After this period, blue pool
   * will be cleaned up.
   *
   * @generated from field: optional google.protobuf.Duration node_pool_soak_duration = 2;
   */
  nodePoolSoakDuration?: Duration;
};

/**
 * Describes the message google.container.v1.BlueGreenSettings.
 * Use `create(BlueGreenSettingsSchema)` to create a new message.
 */
export const BlueGreenSettingsSchema: GenMessage<BlueGreenSettings> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 79);

/**
 * Standard rollout policy is the default policy for blue-green.
 *
 * @generated from message google.container.v1.BlueGreenSettings.StandardRolloutPolicy
 */
export type BlueGreenSettings_StandardRolloutPolicy = Message<"google.container.v1.BlueGreenSettings.StandardRolloutPolicy"> & {
  /**
   * Blue pool size to drain in a batch.
   *
   * @generated from oneof google.container.v1.BlueGreenSettings.StandardRolloutPolicy.update_batch_size
   */
  updateBatchSize: {
    /**
     * Percentage of the blue pool nodes to drain in a batch.
     * The range of this field should be (0.0, 1.0].
     *
     * @generated from field: float batch_percentage = 1;
     */
    value: number;
    case: "batchPercentage";
  } | {
    /**
     * Number of blue nodes to drain in a batch.
     *
     * @generated from field: int32 batch_node_count = 2;
     */
    value: number;
    case: "batchNodeCount";
  } | { case: undefined; value?: undefined };

  /**
   * Soak time after each batch gets drained. Default to zero.
   *
   * @generated from field: optional google.protobuf.Duration batch_soak_duration = 3;
   */
  batchSoakDuration?: Duration;
};

/**
 * Describes the message google.container.v1.BlueGreenSettings.StandardRolloutPolicy.
 * Use `create(BlueGreenSettings_StandardRolloutPolicySchema)` to create a new message.
 */
export const BlueGreenSettings_StandardRolloutPolicySchema: GenMessage<BlueGreenSettings_StandardRolloutPolicy> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 79, 0);

/**
 * NodePool contains the name and configuration for a cluster's node pool.
 * Node pools are a set of nodes (i.e. VM's), with a common configuration and
 * specification, under the control of the cluster master. They may have a set
 * of Kubernetes labels applied to them, which may be used to reference them
 * during pod scheduling. They may also be resized up or down, to accommodate
 * the workload.
 *
 * @generated from message google.container.v1.NodePool
 */
export type NodePool = Message<"google.container.v1.NodePool"> & {
  /**
   * The name of the node pool.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The node configuration of the pool.
   *
   * @generated from field: google.container.v1.NodeConfig config = 2;
   */
  config?: NodeConfig;

  /**
   * The initial node count for the pool. You must ensure that your
   * Compute Engine [resource quota](https://cloud.google.com/compute/quotas)
   * is sufficient for this number of instances. You must also have available
   * firewall and routes quota.
   *
   * @generated from field: int32 initial_node_count = 3;
   */
  initialNodeCount: number;

  /**
   * The list of Google Compute Engine
   * [zones](https://cloud.google.com/compute/docs/zones#available) in which the
   * NodePool's nodes should be located.
   *
   * If this value is unspecified during node pool creation, the
   * [Cluster.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations)
   * value will be used, instead.
   *
   * Warning: changing node pool locations will result in nodes being added
   * and/or removed.
   *
   * @generated from field: repeated string locations = 13;
   */
  locations: string[];

  /**
   * Networking configuration for this NodePool. If specified, it overrides the
   * cluster-level defaults.
   *
   * @generated from field: google.container.v1.NodeNetworkConfig network_config = 14;
   */
  networkConfig?: NodeNetworkConfig;

  /**
   * Output only. Server-defined URL for the resource.
   *
   * @generated from field: string self_link = 100;
   */
  selfLink: string;

  /**
   * The version of Kubernetes running on this NodePool's nodes. If unspecified,
   * it defaults as described
   * [here](https://cloud.google.com/kubernetes-engine/versioning#specifying_node_version).
   *
   * @generated from field: string version = 101;
   */
  version: string;

  /**
   * Output only. The resource URLs of the [managed instance
   * groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances)
   * associated with this node pool.
   * During the node pool blue-green upgrade operation, the URLs contain both
   * blue and green resources.
   *
   * @generated from field: repeated string instance_group_urls = 102;
   */
  instanceGroupUrls: string[];

  /**
   * Output only. The status of the nodes in this pool instance.
   *
   * @generated from field: google.container.v1.NodePool.Status status = 103;
   */
  status: NodePool_Status;

  /**
   * Output only. Deprecated. Use conditions instead.
   * Additional information about the current status of this
   * node pool instance, if available.
   *
   * @generated from field: string status_message = 104 [deprecated = true];
   * @deprecated
   */
  statusMessage: string;

  /**
   * Autoscaler configuration for this NodePool. Autoscaler is enabled
   * only if a valid configuration is present.
   *
   * @generated from field: google.container.v1.NodePoolAutoscaling autoscaling = 4;
   */
  autoscaling?: NodePoolAutoscaling;

  /**
   * NodeManagement configuration for this NodePool.
   *
   * @generated from field: google.container.v1.NodeManagement management = 5;
   */
  management?: NodeManagement;

  /**
   * The constraint on the maximum number of pods that can be run
   * simultaneously on a node in the node pool.
   *
   * @generated from field: google.container.v1.MaxPodsConstraint max_pods_constraint = 6;
   */
  maxPodsConstraint?: MaxPodsConstraint;

  /**
   * Which conditions caused the current node pool state.
   *
   * @generated from field: repeated google.container.v1.StatusCondition conditions = 105;
   */
  conditions: StatusCondition[];

  /**
   * Output only. The pod CIDR block size per node in this node pool.
   *
   * @generated from field: int32 pod_ipv4_cidr_size = 7;
   */
  podIpv4CidrSize: number;

  /**
   * Upgrade settings control disruption and speed of the upgrade.
   *
   * @generated from field: google.container.v1.NodePool.UpgradeSettings upgrade_settings = 107;
   */
  upgradeSettings?: NodePool_UpgradeSettings;

  /**
   * Specifies the node placement policy.
   *
   * @generated from field: google.container.v1.NodePool.PlacementPolicy placement_policy = 108;
   */
  placementPolicy?: NodePool_PlacementPolicy;

  /**
   * Output only. Update info contains relevant information during a node
   * pool update.
   *
   * @generated from field: google.container.v1.NodePool.UpdateInfo update_info = 109;
   */
  updateInfo?: NodePool_UpdateInfo;

  /**
   * This checksum is computed by the server based on the value of node pool
   * fields, and may be sent on update requests to ensure the client has an
   * up-to-date value before proceeding.
   *
   * @generated from field: string etag = 110;
   */
  etag: string;

  /**
   * Specifies the configuration of queued provisioning.
   *
   * @generated from field: google.container.v1.NodePool.QueuedProvisioning queued_provisioning = 112;
   */
  queuedProvisioning?: NodePool_QueuedProvisioning;

  /**
   * Enable best effort provisioning for nodes
   *
   * @generated from field: google.container.v1.BestEffortProvisioning best_effort_provisioning = 113;
   */
  bestEffortProvisioning?: BestEffortProvisioning;
};

/**
 * Describes the message google.container.v1.NodePool.
 * Use `create(NodePoolSchema)` to create a new message.
 */
export const NodePoolSchema: GenMessage<NodePool> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 80);

/**
 * These upgrade settings control the level of parallelism and the level of
 * disruption caused by an upgrade.
 *
 * maxUnavailable controls the number of nodes that can be simultaneously
 * unavailable.
 *
 * maxSurge controls the number of additional nodes that can be added to the
 * node pool temporarily for the time of the upgrade to increase the number of
 * available nodes.
 *
 * (maxUnavailable + maxSurge) determines the level of parallelism (how many
 * nodes are being upgraded at the same time).
 *
 * Note: upgrades inevitably introduce some disruption since workloads need to
 * be moved from old nodes to new, upgraded ones. Even if maxUnavailable=0,
 * this holds true. (Disruption stays within the limits of
 * PodDisruptionBudget, if it is configured.)
 *
 * Consider a hypothetical node pool with 5 nodes having maxSurge=2,
 * maxUnavailable=1. This means the upgrade process upgrades 3 nodes
 * simultaneously. It creates 2 additional (upgraded) nodes, then it brings
 * down 3 old (not yet upgraded) nodes at the same time. This ensures that
 * there are always at least 4 nodes available.
 *
 * These upgrade settings configure the upgrade strategy for the node pool.
 * Use strategy to switch between the strategies applied to the node pool.
 *
 * If the strategy is ROLLING, use max_surge and max_unavailable to control
 * the level of parallelism and the level of disruption caused by upgrade.
 * 1. maxSurge controls the number of additional nodes that can be added to
 * the node pool temporarily for the time of the upgrade to increase the
 * number of available nodes.
 * 2. maxUnavailable controls the number of nodes that can be simultaneously
 * unavailable.
 * 3. (maxUnavailable + maxSurge) determines the level of parallelism (how
 * many nodes are being upgraded at the same time).
 *
 * If the strategy is BLUE_GREEN, use blue_green_settings to configure the
 * blue-green upgrade related settings.
 * 1. standard_rollout_policy is the default policy. The policy is used to
 * control the way blue pool gets drained. The draining is executed in the
 * batch mode. The batch size could be specified as either percentage of the
 * node pool size or the number of nodes. batch_soak_duration is the soak
 * time after each batch gets drained.
 * 2. node_pool_soak_duration is the soak time after all blue nodes are
 * drained. After this period, the blue pool nodes will be deleted.
 *
 * @generated from message google.container.v1.NodePool.UpgradeSettings
 */
export type NodePool_UpgradeSettings = Message<"google.container.v1.NodePool.UpgradeSettings"> & {
  /**
   * The maximum number of nodes that can be created beyond the current size
   * of the node pool during the upgrade process.
   *
   * @generated from field: int32 max_surge = 1;
   */
  maxSurge: number;

  /**
   * The maximum number of nodes that can be simultaneously unavailable during
   * the upgrade process. A node is considered available if its status is
   * Ready.
   *
   * @generated from field: int32 max_unavailable = 2;
   */
  maxUnavailable: number;

  /**
   * Update strategy of the node pool.
   *
   * @generated from field: optional google.container.v1.NodePoolUpdateStrategy strategy = 3;
   */
  strategy?: NodePoolUpdateStrategy;

  /**
   * Settings for blue-green upgrade strategy.
   *
   * @generated from field: optional google.container.v1.BlueGreenSettings blue_green_settings = 4;
   */
  blueGreenSettings?: BlueGreenSettings;
};

/**
 * Describes the message google.container.v1.NodePool.UpgradeSettings.
 * Use `create(NodePool_UpgradeSettingsSchema)` to create a new message.
 */
export const NodePool_UpgradeSettingsSchema: GenMessage<NodePool_UpgradeSettings> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 80, 0);

/**
 * UpdateInfo contains resource (instance groups, etc), status and other
 * intermediate information relevant to a node pool upgrade.
 *
 * @generated from message google.container.v1.NodePool.UpdateInfo
 */
export type NodePool_UpdateInfo = Message<"google.container.v1.NodePool.UpdateInfo"> & {
  /**
   * Information of a blue-green upgrade.
   *
   * @generated from field: google.container.v1.NodePool.UpdateInfo.BlueGreenInfo blue_green_info = 1;
   */
  blueGreenInfo?: NodePool_UpdateInfo_BlueGreenInfo;
};

/**
 * Describes the message google.container.v1.NodePool.UpdateInfo.
 * Use `create(NodePool_UpdateInfoSchema)` to create a new message.
 */
export const NodePool_UpdateInfoSchema: GenMessage<NodePool_UpdateInfo> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 80, 1);

/**
 * Information relevant to blue-green upgrade.
 *
 * @generated from message google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
 */
export type NodePool_UpdateInfo_BlueGreenInfo = Message<"google.container.v1.NodePool.UpdateInfo.BlueGreenInfo"> & {
  /**
   * Current blue-green upgrade phase.
   *
   * @generated from field: google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.Phase phase = 1;
   */
  phase: NodePool_UpdateInfo_BlueGreenInfo_Phase;

  /**
   * The resource URLs of the [managed instance groups]
   * (/compute/docs/instance-groups/creating-groups-of-managed-instances)
   * associated with blue pool.
   *
   * @generated from field: repeated string blue_instance_group_urls = 2;
   */
  blueInstanceGroupUrls: string[];

  /**
   * The resource URLs of the [managed instance groups]
   * (/compute/docs/instance-groups/creating-groups-of-managed-instances)
   * associated with green pool.
   *
   * @generated from field: repeated string green_instance_group_urls = 3;
   */
  greenInstanceGroupUrls: string[];

  /**
   * Time to start deleting blue pool to complete blue-green upgrade,
   * in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string blue_pool_deletion_start_time = 4;
   */
  bluePoolDeletionStartTime: string;

  /**
   * Version of green pool.
   *
   * @generated from field: string green_pool_version = 5;
   */
  greenPoolVersion: string;
};

/**
 * Describes the message google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.
 * Use `create(NodePool_UpdateInfo_BlueGreenInfoSchema)` to create a new message.
 */
export const NodePool_UpdateInfo_BlueGreenInfoSchema: GenMessage<NodePool_UpdateInfo_BlueGreenInfo> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 80, 1, 0);

/**
 * Phase represents the different stages blue-green upgrade is running in.
 *
 * @generated from enum google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.Phase
 */
export enum NodePool_UpdateInfo_BlueGreenInfo_Phase {
  /**
   * Unspecified phase.
   *
   * @generated from enum value: PHASE_UNSPECIFIED = 0;
   */
  PHASE_UNSPECIFIED = 0,

  /**
   * blue-green upgrade has been initiated.
   *
   * @generated from enum value: UPDATE_STARTED = 1;
   */
  UPDATE_STARTED = 1,

  /**
   * Start creating green pool nodes.
   *
   * @generated from enum value: CREATING_GREEN_POOL = 2;
   */
  CREATING_GREEN_POOL = 2,

  /**
   * Start cordoning blue pool nodes.
   *
   * @generated from enum value: CORDONING_BLUE_POOL = 3;
   */
  CORDONING_BLUE_POOL = 3,

  /**
   * Start draining blue pool nodes.
   *
   * @generated from enum value: DRAINING_BLUE_POOL = 4;
   */
  DRAINING_BLUE_POOL = 4,

  /**
   * Start soaking time after draining entire blue pool.
   *
   * @generated from enum value: NODE_POOL_SOAKING = 5;
   */
  NODE_POOL_SOAKING = 5,

  /**
   * Start deleting blue nodes.
   *
   * @generated from enum value: DELETING_BLUE_POOL = 6;
   */
  DELETING_BLUE_POOL = 6,

  /**
   * Rollback has been initiated.
   *
   * @generated from enum value: ROLLBACK_STARTED = 7;
   */
  ROLLBACK_STARTED = 7,
}

/**
 * Describes the enum google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.Phase.
 */
export const NodePool_UpdateInfo_BlueGreenInfo_PhaseSchema: GenEnum<NodePool_UpdateInfo_BlueGreenInfo_Phase> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 80, 1, 0, 0);

/**
 * PlacementPolicy defines the placement policy used by the node pool.
 *
 * @generated from message google.container.v1.NodePool.PlacementPolicy
 */
export type NodePool_PlacementPolicy = Message<"google.container.v1.NodePool.PlacementPolicy"> & {
  /**
   * The type of placement.
   *
   * @generated from field: google.container.v1.NodePool.PlacementPolicy.Type type = 1;
   */
  type: NodePool_PlacementPolicy_Type;

  /**
   * Optional. TPU placement topology for pod slice node pool.
   * https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies
   *
   * @generated from field: string tpu_topology = 2;
   */
  tpuTopology: string;

  /**
   * If set, refers to the name of a custom resource policy supplied by the
   * user. The resource policy must be in the same project and region as the
   * node pool. If not found, InvalidArgument error is returned.
   *
   * @generated from field: string policy_name = 3;
   */
  policyName: string;
};

/**
 * Describes the message google.container.v1.NodePool.PlacementPolicy.
 * Use `create(NodePool_PlacementPolicySchema)` to create a new message.
 */
export const NodePool_PlacementPolicySchema: GenMessage<NodePool_PlacementPolicy> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 80, 2);

/**
 * Type defines the type of placement policy.
 *
 * @generated from enum google.container.v1.NodePool.PlacementPolicy.Type
 */
export enum NodePool_PlacementPolicy_Type {
  /**
   * TYPE_UNSPECIFIED specifies no requirements on nodes
   * placement.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * COMPACT specifies node placement in the same availability domain to
   * ensure low communication latency.
   *
   * @generated from enum value: COMPACT = 1;
   */
  COMPACT = 1,
}

/**
 * Describes the enum google.container.v1.NodePool.PlacementPolicy.Type.
 */
export const NodePool_PlacementPolicy_TypeSchema: GenEnum<NodePool_PlacementPolicy_Type> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 80, 2, 0);

/**
 * QueuedProvisioning defines the queued provisioning used by the node pool.
 *
 * @generated from message google.container.v1.NodePool.QueuedProvisioning
 */
export type NodePool_QueuedProvisioning = Message<"google.container.v1.NodePool.QueuedProvisioning"> & {
  /**
   * Denotes that this nodepool is QRM specific, meaning nodes can be only
   * obtained through queuing via the Cluster Autoscaler ProvisioningRequest
   * API.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.NodePool.QueuedProvisioning.
 * Use `create(NodePool_QueuedProvisioningSchema)` to create a new message.
 */
export const NodePool_QueuedProvisioningSchema: GenMessage<NodePool_QueuedProvisioning> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 80, 3);

/**
 * The current status of the node pool instance.
 *
 * @generated from enum google.container.v1.NodePool.Status
 */
export enum NodePool_Status {
  /**
   * Not set.
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * The PROVISIONING state indicates the node pool is being created.
   *
   * @generated from enum value: PROVISIONING = 1;
   */
  PROVISIONING = 1,

  /**
   * The RUNNING state indicates the node pool has been created
   * and is fully usable.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The RUNNING_WITH_ERROR state indicates the node pool has been created
   * and is partially usable. Some error state has occurred and some
   * functionality may be impaired. Customer may need to reissue a request
   * or trigger a new update.
   *
   * @generated from enum value: RUNNING_WITH_ERROR = 3;
   */
  RUNNING_WITH_ERROR = 3,

  /**
   * The RECONCILING state indicates that some work is actively being done on
   * the node pool, such as upgrading node software. Details can
   * be found in the `statusMessage` field.
   *
   * @generated from enum value: RECONCILING = 4;
   */
  RECONCILING = 4,

  /**
   * The STOPPING state indicates the node pool is being deleted.
   *
   * @generated from enum value: STOPPING = 5;
   */
  STOPPING = 5,

  /**
   * The ERROR state indicates the node pool may be unusable. Details
   * can be found in the `statusMessage` field.
   *
   * @generated from enum value: ERROR = 6;
   */
  ERROR = 6,
}

/**
 * Describes the enum google.container.v1.NodePool.Status.
 */
export const NodePool_StatusSchema: GenEnum<NodePool_Status> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 80, 0);

/**
 * NodeManagement defines the set of node management services turned on for the
 * node pool.
 *
 * @generated from message google.container.v1.NodeManagement
 */
export type NodeManagement = Message<"google.container.v1.NodeManagement"> & {
  /**
   * A flag that specifies whether node auto-upgrade is enabled for the node
   * pool. If enabled, node auto-upgrade helps keep the nodes in your node pool
   * up to date with the latest release version of Kubernetes.
   *
   * @generated from field: bool auto_upgrade = 1;
   */
  autoUpgrade: boolean;

  /**
   * A flag that specifies whether the node auto-repair is enabled for the node
   * pool. If enabled, the nodes in this node pool will be monitored and, if
   * they fail health checks too many times, an automatic repair action will be
   * triggered.
   *
   * @generated from field: bool auto_repair = 2;
   */
  autoRepair: boolean;

  /**
   * Specifies the Auto Upgrade knobs for the node pool.
   *
   * @generated from field: google.container.v1.AutoUpgradeOptions upgrade_options = 10;
   */
  upgradeOptions?: AutoUpgradeOptions;
};

/**
 * Describes the message google.container.v1.NodeManagement.
 * Use `create(NodeManagementSchema)` to create a new message.
 */
export const NodeManagementSchema: GenMessage<NodeManagement> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 81);

/**
 * Best effort provisioning.
 *
 * @generated from message google.container.v1.BestEffortProvisioning
 */
export type BestEffortProvisioning = Message<"google.container.v1.BestEffortProvisioning"> & {
  /**
   * When this is enabled, cluster/node pool creations will ignore non-fatal
   * errors like stockout to best provision as many nodes as possible right now
   * and eventually bring up all target number of nodes
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Minimum number of nodes to be provisioned to be considered as succeeded,
   * and the rest of nodes will be provisioned gradually and eventually when
   * stockout issue has been resolved.
   *
   * @generated from field: int32 min_provision_nodes = 2;
   */
  minProvisionNodes: number;
};

/**
 * Describes the message google.container.v1.BestEffortProvisioning.
 * Use `create(BestEffortProvisioningSchema)` to create a new message.
 */
export const BestEffortProvisioningSchema: GenMessage<BestEffortProvisioning> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 82);

/**
 * AutoUpgradeOptions defines the set of options for the user to control how
 * the Auto Upgrades will proceed.
 *
 * @generated from message google.container.v1.AutoUpgradeOptions
 */
export type AutoUpgradeOptions = Message<"google.container.v1.AutoUpgradeOptions"> & {
  /**
   * Output only. This field is set when upgrades are about to commence
   * with the approximate start time for the upgrades, in
   * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string auto_upgrade_start_time = 1;
   */
  autoUpgradeStartTime: string;

  /**
   * Output only. This field is set when upgrades are about to commence
   * with the description of the upgrade.
   *
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message google.container.v1.AutoUpgradeOptions.
 * Use `create(AutoUpgradeOptionsSchema)` to create a new message.
 */
export const AutoUpgradeOptionsSchema: GenMessage<AutoUpgradeOptions> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 83);

/**
 * MaintenancePolicy defines the maintenance policy to be used for the cluster.
 *
 * @generated from message google.container.v1.MaintenancePolicy
 */
export type MaintenancePolicy = Message<"google.container.v1.MaintenancePolicy"> & {
  /**
   * Specifies the maintenance window in which maintenance may be performed.
   *
   * @generated from field: google.container.v1.MaintenanceWindow window = 1;
   */
  window?: MaintenanceWindow;

  /**
   * A hash identifying the version of this policy, so that updates to fields of
   * the policy won't accidentally undo intermediate changes (and so that users
   * of the API unaware of some fields won't accidentally remove other fields).
   * Make a `get()` request to the cluster to get the current
   * resource version and include it with requests to set the policy.
   *
   * @generated from field: string resource_version = 3;
   */
  resourceVersion: string;
};

/**
 * Describes the message google.container.v1.MaintenancePolicy.
 * Use `create(MaintenancePolicySchema)` to create a new message.
 */
export const MaintenancePolicySchema: GenMessage<MaintenancePolicy> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 84);

/**
 * MaintenanceWindow defines the maintenance window to be used for the cluster.
 *
 * @generated from message google.container.v1.MaintenanceWindow
 */
export type MaintenanceWindow = Message<"google.container.v1.MaintenanceWindow"> & {
  /**
   * @generated from oneof google.container.v1.MaintenanceWindow.policy
   */
  policy: {
    /**
     * DailyMaintenanceWindow specifies a daily maintenance operation window.
     *
     * @generated from field: google.container.v1.DailyMaintenanceWindow daily_maintenance_window = 2;
     */
    value: DailyMaintenanceWindow;
    case: "dailyMaintenanceWindow";
  } | {
    /**
     * RecurringWindow specifies some number of recurring time periods for
     * maintenance to occur. The time windows may be overlapping. If no
     * maintenance windows are set, maintenance can occur at any time.
     *
     * @generated from field: google.container.v1.RecurringTimeWindow recurring_window = 3;
     */
    value: RecurringTimeWindow;
    case: "recurringWindow";
  } | { case: undefined; value?: undefined };

  /**
   * Exceptions to maintenance window. Non-emergency maintenance should not
   * occur in these windows.
   *
   * @generated from field: map<string, google.container.v1.TimeWindow> maintenance_exclusions = 4;
   */
  maintenanceExclusions: { [key: string]: TimeWindow };
};

/**
 * Describes the message google.container.v1.MaintenanceWindow.
 * Use `create(MaintenanceWindowSchema)` to create a new message.
 */
export const MaintenanceWindowSchema: GenMessage<MaintenanceWindow> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 85);

/**
 * Represents an arbitrary window of time.
 *
 * @generated from message google.container.v1.TimeWindow
 */
export type TimeWindow = Message<"google.container.v1.TimeWindow"> & {
  /**
   * @generated from oneof google.container.v1.TimeWindow.options
   */
  options: {
    /**
     * MaintenanceExclusionOptions provides maintenance exclusion related
     * options.
     *
     * @generated from field: google.container.v1.MaintenanceExclusionOptions maintenance_exclusion_options = 3;
     */
    value: MaintenanceExclusionOptions;
    case: "maintenanceExclusionOptions";
  } | { case: undefined; value?: undefined };

  /**
   * The time that the window first starts.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time that the window ends. The end time should take place after the
   * start time.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.container.v1.TimeWindow.
 * Use `create(TimeWindowSchema)` to create a new message.
 */
export const TimeWindowSchema: GenMessage<TimeWindow> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 86);

/**
 * Represents the Maintenance exclusion option.
 *
 * @generated from message google.container.v1.MaintenanceExclusionOptions
 */
export type MaintenanceExclusionOptions = Message<"google.container.v1.MaintenanceExclusionOptions"> & {
  /**
   * Scope specifies the upgrade scope which upgrades are blocked by the
   * exclusion.
   *
   * @generated from field: google.container.v1.MaintenanceExclusionOptions.Scope scope = 1;
   */
  scope: MaintenanceExclusionOptions_Scope;
};

/**
 * Describes the message google.container.v1.MaintenanceExclusionOptions.
 * Use `create(MaintenanceExclusionOptionsSchema)` to create a new message.
 */
export const MaintenanceExclusionOptionsSchema: GenMessage<MaintenanceExclusionOptions> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 87);

/**
 * Scope of exclusion.
 *
 * @generated from enum google.container.v1.MaintenanceExclusionOptions.Scope
 */
export enum MaintenanceExclusionOptions_Scope {
  /**
   * NO_UPGRADES excludes all upgrades, including patch upgrades and minor
   * upgrades across control planes and nodes. This is the default exclusion
   * behavior.
   *
   * @generated from enum value: NO_UPGRADES = 0;
   */
  NO_UPGRADES = 0,

  /**
   * NO_MINOR_UPGRADES excludes all minor upgrades for the cluster, only
   * patches are allowed.
   *
   * @generated from enum value: NO_MINOR_UPGRADES = 1;
   */
  NO_MINOR_UPGRADES = 1,

  /**
   * NO_MINOR_OR_NODE_UPGRADES excludes all minor upgrades for the cluster,
   * and also exclude all node pool upgrades. Only control
   * plane patches are allowed.
   *
   * @generated from enum value: NO_MINOR_OR_NODE_UPGRADES = 2;
   */
  NO_MINOR_OR_NODE_UPGRADES = 2,
}

/**
 * Describes the enum google.container.v1.MaintenanceExclusionOptions.Scope.
 */
export const MaintenanceExclusionOptions_ScopeSchema: GenEnum<MaintenanceExclusionOptions_Scope> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 87, 0);

/**
 * Represents an arbitrary window of time that recurs.
 *
 * @generated from message google.container.v1.RecurringTimeWindow
 */
export type RecurringTimeWindow = Message<"google.container.v1.RecurringTimeWindow"> & {
  /**
   * The window of the first recurrence.
   *
   * @generated from field: google.container.v1.TimeWindow window = 1;
   */
  window?: TimeWindow;

  /**
   * An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
   * this window reccurs. They go on for the span of time between the start and
   * end time.
   *
   * For example, to have something repeat every weekday, you'd use:
   * `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR`
   *
   * To repeat some window daily (equivalent to the DailyMaintenanceWindow):
   * `FREQ=DAILY`
   *
   * For the first weekend of every month:
   * `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU`
   *
   * This specifies how frequently the window starts. Eg, if you wanted to have
   * a 9-5 UTC-4 window every weekday, you'd use something like:
   * ```
   * start time = 2019-01-01T09:00:00-0400
   * end time = 2019-01-01T17:00:00-0400
   * recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
   * ```
   *
   * Windows can span multiple days. Eg, to make the window encompass every
   * weekend from midnight Saturday till the last minute of Sunday UTC:
   * ```
   * start time = 2019-01-05T00:00:00Z
   * end time = 2019-01-07T23:59:00Z
   * recurrence = FREQ=WEEKLY;BYDAY=SA
   * ```
   *
   * Note the start and end time's specific dates are largely arbitrary except
   * to specify duration of the window and when it first starts.
   * The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.
   *
   * @generated from field: string recurrence = 2;
   */
  recurrence: string;
};

/**
 * Describes the message google.container.v1.RecurringTimeWindow.
 * Use `create(RecurringTimeWindowSchema)` to create a new message.
 */
export const RecurringTimeWindowSchema: GenMessage<RecurringTimeWindow> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 88);

/**
 * Time window specified for daily maintenance operations.
 *
 * @generated from message google.container.v1.DailyMaintenanceWindow
 */
export type DailyMaintenanceWindow = Message<"google.container.v1.DailyMaintenanceWindow"> & {
  /**
   * Time within the maintenance window to start the maintenance operations.
   * Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
   * format "HH:MM", where HH : [00-23] and MM : [00-59] GMT.
   *
   * @generated from field: string start_time = 2;
   */
  startTime: string;

  /**
   * Output only. Duration of the time window, automatically chosen to be
   * smallest possible in the given scenario.
   * Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
   * format "PTnHnMnS".
   *
   * @generated from field: string duration = 3;
   */
  duration: string;
};

/**
 * Describes the message google.container.v1.DailyMaintenanceWindow.
 * Use `create(DailyMaintenanceWindowSchema)` to create a new message.
 */
export const DailyMaintenanceWindowSchema: GenMessage<DailyMaintenanceWindow> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 89);

/**
 * SetNodePoolManagementRequest sets the node management properties of a node
 * pool.
 *
 * @generated from message google.container.v1.SetNodePoolManagementRequest
 */
export type SetNodePoolManagementRequest = Message<"google.container.v1.SetNodePoolManagementRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to update.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Deprecated. The name of the node pool to update.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string node_pool_id = 4 [deprecated = true];
   * @deprecated
   */
  nodePoolId: string;

  /**
   * Required. NodeManagement configuration for the node pool.
   *
   * @generated from field: google.container.v1.NodeManagement management = 5;
   */
  management?: NodeManagement;

  /**
   * The name (project, location, cluster, node pool id) of the node pool to set
   * management properties. Specified in the format
   * `projects/*\/locations/*\/clusters/*\/nodePools/*`.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetNodePoolManagementRequest.
 * Use `create(SetNodePoolManagementRequestSchema)` to create a new message.
 */
export const SetNodePoolManagementRequestSchema: GenMessage<SetNodePoolManagementRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 90);

/**
 * SetNodePoolSizeRequest sets the size of a node pool.
 *
 * @generated from message google.container.v1.SetNodePoolSizeRequest
 */
export type SetNodePoolSizeRequest = Message<"google.container.v1.SetNodePoolSizeRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to update.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Deprecated. The name of the node pool to update.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string node_pool_id = 4 [deprecated = true];
   * @deprecated
   */
  nodePoolId: string;

  /**
   * Required. The desired node count for the pool.
   *
   * @generated from field: int32 node_count = 5;
   */
  nodeCount: number;

  /**
   * The name (project, location, cluster, node pool id) of the node pool to set
   * size.
   * Specified in the format `projects/*\/locations/*\/clusters/*\/nodePools/*`.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetNodePoolSizeRequest.
 * Use `create(SetNodePoolSizeRequestSchema)` to create a new message.
 */
export const SetNodePoolSizeRequestSchema: GenMessage<SetNodePoolSizeRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 91);

/**
 * CompleteNodePoolUpgradeRequest sets the name of target node pool to complete
 * upgrade.
 *
 * @generated from message google.container.v1.CompleteNodePoolUpgradeRequest
 */
export type CompleteNodePoolUpgradeRequest = Message<"google.container.v1.CompleteNodePoolUpgradeRequest"> & {
  /**
   * The name (project, location, cluster, node pool id) of the node pool to
   * complete upgrade.
   * Specified in the format `projects/*\/locations/*\/clusters/*\/nodePools/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.CompleteNodePoolUpgradeRequest.
 * Use `create(CompleteNodePoolUpgradeRequestSchema)` to create a new message.
 */
export const CompleteNodePoolUpgradeRequestSchema: GenMessage<CompleteNodePoolUpgradeRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 92);

/**
 * RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed
 * NodePool upgrade. This will be an no-op if the last upgrade successfully
 * completed.
 *
 * @generated from message google.container.v1.RollbackNodePoolUpgradeRequest
 */
export type RollbackNodePoolUpgradeRequest = Message<"google.container.v1.RollbackNodePoolUpgradeRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to rollback.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Deprecated. The name of the node pool to rollback.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string node_pool_id = 4 [deprecated = true];
   * @deprecated
   */
  nodePoolId: string;

  /**
   * The name (project, location, cluster, node pool id) of the node poll to
   * rollback upgrade.
   * Specified in the format `projects/*\/locations/*\/clusters/*\/nodePools/*`.
   *
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * Option for rollback to ignore the PodDisruptionBudget.
   * Default value is false.
   *
   * @generated from field: bool respect_pdb = 7;
   */
  respectPdb: boolean;
};

/**
 * Describes the message google.container.v1.RollbackNodePoolUpgradeRequest.
 * Use `create(RollbackNodePoolUpgradeRequestSchema)` to create a new message.
 */
export const RollbackNodePoolUpgradeRequestSchema: GenMessage<RollbackNodePoolUpgradeRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 93);

/**
 * ListNodePoolsResponse is the result of ListNodePoolsRequest.
 *
 * @generated from message google.container.v1.ListNodePoolsResponse
 */
export type ListNodePoolsResponse = Message<"google.container.v1.ListNodePoolsResponse"> & {
  /**
   * A list of node pools for a cluster.
   *
   * @generated from field: repeated google.container.v1.NodePool node_pools = 1;
   */
  nodePools: NodePool[];
};

/**
 * Describes the message google.container.v1.ListNodePoolsResponse.
 * Use `create(ListNodePoolsResponseSchema)` to create a new message.
 */
export const ListNodePoolsResponseSchema: GenMessage<ListNodePoolsResponse> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 94);

/**
 * ClusterAutoscaling contains global, per-cluster information
 * required by Cluster Autoscaler to automatically adjust
 * the size of the cluster and create/delete
 * node pools based on the current needs.
 *
 * @generated from message google.container.v1.ClusterAutoscaling
 */
export type ClusterAutoscaling = Message<"google.container.v1.ClusterAutoscaling"> & {
  /**
   * Enables automatic node pool creation and deletion.
   *
   * @generated from field: bool enable_node_autoprovisioning = 1;
   */
  enableNodeAutoprovisioning: boolean;

  /**
   * Contains global constraints regarding minimum and maximum
   * amount of resources in the cluster.
   *
   * @generated from field: repeated google.container.v1.ResourceLimit resource_limits = 2;
   */
  resourceLimits: ResourceLimit[];

  /**
   * Defines autoscaling behaviour.
   *
   * @generated from field: google.container.v1.ClusterAutoscaling.AutoscalingProfile autoscaling_profile = 3;
   */
  autoscalingProfile: ClusterAutoscaling_AutoscalingProfile;

  /**
   * AutoprovisioningNodePoolDefaults contains defaults for a node pool
   * created by NAP.
   *
   * @generated from field: google.container.v1.AutoprovisioningNodePoolDefaults autoprovisioning_node_pool_defaults = 4;
   */
  autoprovisioningNodePoolDefaults?: AutoprovisioningNodePoolDefaults;

  /**
   * The list of Google Compute Engine
   * [zones](https://cloud.google.com/compute/docs/zones#available) in which the
   * NodePool's nodes can be created by NAP.
   *
   * @generated from field: repeated string autoprovisioning_locations = 5;
   */
  autoprovisioningLocations: string[];
};

/**
 * Describes the message google.container.v1.ClusterAutoscaling.
 * Use `create(ClusterAutoscalingSchema)` to create a new message.
 */
export const ClusterAutoscalingSchema: GenMessage<ClusterAutoscaling> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 95);

/**
 * Defines possible options for autoscaling_profile field.
 *
 * @generated from enum google.container.v1.ClusterAutoscaling.AutoscalingProfile
 */
export enum ClusterAutoscaling_AutoscalingProfile {
  /**
   * No change to autoscaling configuration.
   *
   * @generated from enum value: PROFILE_UNSPECIFIED = 0;
   */
  PROFILE_UNSPECIFIED = 0,

  /**
   * Prioritize optimizing utilization of resources.
   *
   * @generated from enum value: OPTIMIZE_UTILIZATION = 1;
   */
  OPTIMIZE_UTILIZATION = 1,

  /**
   * Use default (balanced) autoscaling configuration.
   *
   * @generated from enum value: BALANCED = 2;
   */
  BALANCED = 2,
}

/**
 * Describes the enum google.container.v1.ClusterAutoscaling.AutoscalingProfile.
 */
export const ClusterAutoscaling_AutoscalingProfileSchema: GenEnum<ClusterAutoscaling_AutoscalingProfile> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 95, 0);

/**
 * AutoprovisioningNodePoolDefaults contains defaults for a node pool created
 * by NAP.
 *
 * @generated from message google.container.v1.AutoprovisioningNodePoolDefaults
 */
export type AutoprovisioningNodePoolDefaults = Message<"google.container.v1.AutoprovisioningNodePoolDefaults"> & {
  /**
   * Scopes that are used by NAP when creating node pools.
   *
   * @generated from field: repeated string oauth_scopes = 1;
   */
  oauthScopes: string[];

  /**
   * The Google Cloud Platform Service Account to be used by the node VMs.
   *
   * @generated from field: string service_account = 2;
   */
  serviceAccount: string;

  /**
   * Specifies the upgrade settings for NAP created node pools
   *
   * @generated from field: google.container.v1.NodePool.UpgradeSettings upgrade_settings = 3;
   */
  upgradeSettings?: NodePool_UpgradeSettings;

  /**
   * Specifies the node management options for NAP created node-pools.
   *
   * @generated from field: google.container.v1.NodeManagement management = 4;
   */
  management?: NodeManagement;

  /**
   * Deprecated. Minimum CPU platform to be used for NAP created node pools.
   * The instance may be scheduled on the specified or newer CPU platform.
   * Applicable values are the friendly names of CPU platforms, such as
   * minCpuPlatform: Intel Haswell or
   * minCpuPlatform: Intel Sandy Bridge. For more
   * information, read [how to specify min CPU
   * platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform).
   * This field is deprecated, min_cpu_platform should be specified using
   * `cloud.google.com/requested-min-cpu-platform` label selector on the pod.
   * To unset the min cpu platform field pass "automatic"
   * as field value.
   *
   * @generated from field: string min_cpu_platform = 5 [deprecated = true];
   * @deprecated
   */
  minCpuPlatform: string;

  /**
   * Size of the disk attached to each node, specified in GB.
   * The smallest allowed disk size is 10GB.
   *
   * If unspecified, the default disk size is 100GB.
   *
   * @generated from field: int32 disk_size_gb = 6;
   */
  diskSizeGb: number;

  /**
   * Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or
   * 'pd-balanced')
   *
   * If unspecified, the default disk type is 'pd-standard'
   *
   * @generated from field: string disk_type = 7;
   */
  diskType: string;

  /**
   * Shielded Instance options.
   *
   * @generated from field: google.container.v1.ShieldedInstanceConfig shielded_instance_config = 8;
   */
  shieldedInstanceConfig?: ShieldedInstanceConfig;

  /**
   * The Customer Managed Encryption Key used to encrypt the boot disk attached
   * to each node in the node pool. This should be of the form
   * projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME].
   * For more information about protecting resources with Cloud KMS Keys please
   * see:
   * https://cloud.google.com/compute/docs/disks/customer-managed-encryption
   *
   * @generated from field: string boot_disk_kms_key = 9;
   */
  bootDiskKmsKey: string;

  /**
   * The image type to use for NAP created node. Please see
   * https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for
   * available image types.
   *
   * @generated from field: string image_type = 10;
   */
  imageType: string;

  /**
   * Enable or disable Kubelet read only port.
   *
   * @generated from field: optional bool insecure_kubelet_readonly_port_enabled = 13;
   */
  insecureKubeletReadonlyPortEnabled?: boolean;
};

/**
 * Describes the message google.container.v1.AutoprovisioningNodePoolDefaults.
 * Use `create(AutoprovisioningNodePoolDefaultsSchema)` to create a new message.
 */
export const AutoprovisioningNodePoolDefaultsSchema: GenMessage<AutoprovisioningNodePoolDefaults> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 96);

/**
 * Contains information about amount of some resource in the cluster.
 * For memory, value should be in GB.
 *
 * @generated from message google.container.v1.ResourceLimit
 */
export type ResourceLimit = Message<"google.container.v1.ResourceLimit"> & {
  /**
   * Resource name "cpu", "memory" or gpu-specific string.
   *
   * @generated from field: string resource_type = 1;
   */
  resourceType: string;

  /**
   * Minimum amount of the resource in the cluster.
   *
   * @generated from field: int64 minimum = 2;
   */
  minimum: bigint;

  /**
   * Maximum amount of the resource in the cluster.
   *
   * @generated from field: int64 maximum = 3;
   */
  maximum: bigint;
};

/**
 * Describes the message google.container.v1.ResourceLimit.
 * Use `create(ResourceLimitSchema)` to create a new message.
 */
export const ResourceLimitSchema: GenMessage<ResourceLimit> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 97);

/**
 * NodePoolAutoscaling contains information required by cluster autoscaler to
 * adjust the size of the node pool to the current cluster usage.
 *
 * @generated from message google.container.v1.NodePoolAutoscaling
 */
export type NodePoolAutoscaling = Message<"google.container.v1.NodePoolAutoscaling"> & {
  /**
   * Is autoscaling enabled for this node pool.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Minimum number of nodes for one location in the NodePool. Must be >= 1 and
   * <= max_node_count.
   *
   * @generated from field: int32 min_node_count = 2;
   */
  minNodeCount: number;

  /**
   * Maximum number of nodes for one location in the NodePool. Must be >=
   * min_node_count. There has to be enough quota to scale up the cluster.
   *
   * @generated from field: int32 max_node_count = 3;
   */
  maxNodeCount: number;

  /**
   * Can this node pool be deleted automatically.
   *
   * @generated from field: bool autoprovisioned = 4;
   */
  autoprovisioned: boolean;

  /**
   * Location policy used when scaling up a nodepool.
   *
   * @generated from field: google.container.v1.NodePoolAutoscaling.LocationPolicy location_policy = 5;
   */
  locationPolicy: NodePoolAutoscaling_LocationPolicy;

  /**
   * Minimum number of nodes in the node pool. Must be greater than 1 less than
   * total_max_node_count.
   * The total_*_node_count fields are mutually exclusive with the *_node_count
   * fields.
   *
   * @generated from field: int32 total_min_node_count = 6;
   */
  totalMinNodeCount: number;

  /**
   * Maximum number of nodes in the node pool. Must be greater than
   * total_min_node_count. There has to be enough quota to scale up the cluster.
   * The total_*_node_count fields are mutually exclusive with the *_node_count
   * fields.
   *
   * @generated from field: int32 total_max_node_count = 7;
   */
  totalMaxNodeCount: number;
};

/**
 * Describes the message google.container.v1.NodePoolAutoscaling.
 * Use `create(NodePoolAutoscalingSchema)` to create a new message.
 */
export const NodePoolAutoscalingSchema: GenMessage<NodePoolAutoscaling> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 98);

/**
 * Location policy specifies how zones are picked when scaling up the
 * nodepool.
 *
 * @generated from enum google.container.v1.NodePoolAutoscaling.LocationPolicy
 */
export enum NodePoolAutoscaling_LocationPolicy {
  /**
   * Not set.
   *
   * @generated from enum value: LOCATION_POLICY_UNSPECIFIED = 0;
   */
  LOCATION_POLICY_UNSPECIFIED = 0,

  /**
   * BALANCED is a best effort policy that aims to balance the sizes of
   * different zones.
   *
   * @generated from enum value: BALANCED = 1;
   */
  BALANCED = 1,

  /**
   * ANY policy picks zones that have the highest capacity available.
   *
   * @generated from enum value: ANY = 2;
   */
  ANY = 2,
}

/**
 * Describes the enum google.container.v1.NodePoolAutoscaling.LocationPolicy.
 */
export const NodePoolAutoscaling_LocationPolicySchema: GenEnum<NodePoolAutoscaling_LocationPolicy> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 98, 0);

/**
 * SetLabelsRequest sets the Google Cloud Platform labels on a Google Container
 * Engine cluster, which will in turn set them for Google Compute Engine
 * resources used by that cluster
 *
 * @generated from message google.container.v1.SetLabelsRequest
 */
export type SetLabelsRequest = Message<"google.container.v1.SetLabelsRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. The labels to set for that cluster.
   *
   * @generated from field: map<string, string> resource_labels = 4;
   */
  resourceLabels: { [key: string]: string };

  /**
   * Required. The fingerprint of the previous set of labels for this resource,
   * used to detect conflicts. The fingerprint is initially generated by
   * Kubernetes Engine and changes after every request to modify or update
   * labels. You must always provide an up-to-date fingerprint hash when
   * updating or changing labels. Make a `get()` request to the
   * resource to get the latest fingerprint.
   *
   * @generated from field: string label_fingerprint = 5;
   */
  labelFingerprint: string;

  /**
   * The name (project, location, cluster name) of the cluster to set labels.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetLabelsRequest.
 * Use `create(SetLabelsRequestSchema)` to create a new message.
 */
export const SetLabelsRequestSchema: GenMessage<SetLabelsRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 99);

/**
 * SetLegacyAbacRequest enables or disables the ABAC authorization mechanism for
 * a cluster.
 *
 * @generated from message google.container.v1.SetLegacyAbacRequest
 */
export type SetLegacyAbacRequest = Message<"google.container.v1.SetLegacyAbacRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster to update.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. Whether ABAC authorization will be enabled in the cluster.
   *
   * @generated from field: bool enabled = 4;
   */
  enabled: boolean;

  /**
   * The name (project, location, cluster name) of the cluster to set legacy
   * abac. Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetLegacyAbacRequest.
 * Use `create(SetLegacyAbacRequestSchema)` to create a new message.
 */
export const SetLegacyAbacRequestSchema: GenMessage<SetLegacyAbacRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 100);

/**
 * StartIPRotationRequest creates a new IP for the cluster and then performs
 * a node upgrade on each node pool to point to the new IP.
 *
 * @generated from message google.container.v1.StartIPRotationRequest
 */
export type StartIPRotationRequest = Message<"google.container.v1.StartIPRotationRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * The name (project, location, cluster name) of the cluster to start IP
   * rotation. Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * Whether to rotate credentials during IP rotation.
   *
   * @generated from field: bool rotate_credentials = 7;
   */
  rotateCredentials: boolean;
};

/**
 * Describes the message google.container.v1.StartIPRotationRequest.
 * Use `create(StartIPRotationRequestSchema)` to create a new message.
 */
export const StartIPRotationRequestSchema: GenMessage<StartIPRotationRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 101);

/**
 * CompleteIPRotationRequest moves the cluster master back into single-IP mode.
 *
 * @generated from message google.container.v1.CompleteIPRotationRequest
 */
export type CompleteIPRotationRequest = Message<"google.container.v1.CompleteIPRotationRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * The name (project, location, cluster name) of the cluster to complete IP
   * rotation. Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.CompleteIPRotationRequest.
 * Use `create(CompleteIPRotationRequestSchema)` to create a new message.
 */
export const CompleteIPRotationRequestSchema: GenMessage<CompleteIPRotationRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 102);

/**
 * AcceleratorConfig represents a Hardware Accelerator request.
 *
 * @generated from message google.container.v1.AcceleratorConfig
 */
export type AcceleratorConfig = Message<"google.container.v1.AcceleratorConfig"> & {
  /**
   * The number of the accelerator cards exposed to an instance.
   *
   * @generated from field: int64 accelerator_count = 1;
   */
  acceleratorCount: bigint;

  /**
   * The accelerator type resource name. List of supported accelerators
   * [here](https://cloud.google.com/compute/docs/gpus)
   *
   * @generated from field: string accelerator_type = 2;
   */
  acceleratorType: string;

  /**
   * Size of partitions to create on the GPU. Valid values are described in the
   * NVIDIA [mig user
   * guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
   *
   * @generated from field: string gpu_partition_size = 3;
   */
  gpuPartitionSize: string;

  /**
   * The configuration for GPU sharing options.
   *
   * @generated from field: optional google.container.v1.GPUSharingConfig gpu_sharing_config = 5;
   */
  gpuSharingConfig?: GPUSharingConfig;

  /**
   * The configuration for auto installation of GPU driver.
   *
   * @generated from field: optional google.container.v1.GPUDriverInstallationConfig gpu_driver_installation_config = 6;
   */
  gpuDriverInstallationConfig?: GPUDriverInstallationConfig;
};

/**
 * Describes the message google.container.v1.AcceleratorConfig.
 * Use `create(AcceleratorConfigSchema)` to create a new message.
 */
export const AcceleratorConfigSchema: GenMessage<AcceleratorConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 103);

/**
 * GPUSharingConfig represents the GPU sharing configuration for Hardware
 * Accelerators.
 *
 * @generated from message google.container.v1.GPUSharingConfig
 */
export type GPUSharingConfig = Message<"google.container.v1.GPUSharingConfig"> & {
  /**
   * The max number of containers that can share a physical GPU.
   *
   * @generated from field: int64 max_shared_clients_per_gpu = 1;
   */
  maxSharedClientsPerGpu: bigint;

  /**
   * The type of GPU sharing strategy to enable on the GPU node.
   *
   * @generated from field: optional google.container.v1.GPUSharingConfig.GPUSharingStrategy gpu_sharing_strategy = 2;
   */
  gpuSharingStrategy?: GPUSharingConfig_GPUSharingStrategy;
};

/**
 * Describes the message google.container.v1.GPUSharingConfig.
 * Use `create(GPUSharingConfigSchema)` to create a new message.
 */
export const GPUSharingConfigSchema: GenMessage<GPUSharingConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 104);

/**
 * The type of GPU sharing strategy currently provided.
 *
 * @generated from enum google.container.v1.GPUSharingConfig.GPUSharingStrategy
 */
export enum GPUSharingConfig_GPUSharingStrategy {
  /**
   * Default value.
   *
   * @generated from enum value: GPU_SHARING_STRATEGY_UNSPECIFIED = 0;
   */
  GPU_SHARING_STRATEGY_UNSPECIFIED = 0,

  /**
   * GPUs are time-shared between containers.
   *
   * @generated from enum value: TIME_SHARING = 1;
   */
  TIME_SHARING = 1,

  /**
   * GPUs are shared between containers with NVIDIA MPS.
   *
   * @generated from enum value: MPS = 2;
   */
  MPS = 2,
}

/**
 * Describes the enum google.container.v1.GPUSharingConfig.GPUSharingStrategy.
 */
export const GPUSharingConfig_GPUSharingStrategySchema: GenEnum<GPUSharingConfig_GPUSharingStrategy> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 104, 0);

/**
 * GPUDriverInstallationConfig specifies the version of GPU driver to be auto
 * installed.
 *
 * @generated from message google.container.v1.GPUDriverInstallationConfig
 */
export type GPUDriverInstallationConfig = Message<"google.container.v1.GPUDriverInstallationConfig"> & {
  /**
   * Mode for how the GPU driver is installed.
   *
   * @generated from field: optional google.container.v1.GPUDriverInstallationConfig.GPUDriverVersion gpu_driver_version = 1;
   */
  gpuDriverVersion?: GPUDriverInstallationConfig_GPUDriverVersion;
};

/**
 * Describes the message google.container.v1.GPUDriverInstallationConfig.
 * Use `create(GPUDriverInstallationConfigSchema)` to create a new message.
 */
export const GPUDriverInstallationConfigSchema: GenMessage<GPUDriverInstallationConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 105);

/**
 * The GPU driver version to install.
 *
 * @generated from enum google.container.v1.GPUDriverInstallationConfig.GPUDriverVersion
 */
export enum GPUDriverInstallationConfig_GPUDriverVersion {
  /**
   * Default value is to not install any GPU driver.
   *
   * @generated from enum value: GPU_DRIVER_VERSION_UNSPECIFIED = 0;
   */
  GPU_DRIVER_VERSION_UNSPECIFIED = 0,

  /**
   * Disable GPU driver auto installation and needs manual installation
   *
   * @generated from enum value: INSTALLATION_DISABLED = 1;
   */
  INSTALLATION_DISABLED = 1,

  /**
   * "Default" GPU driver in COS and Ubuntu.
   *
   * @generated from enum value: DEFAULT = 2;
   */
  DEFAULT = 2,

  /**
   * "Latest" GPU driver in COS.
   *
   * @generated from enum value: LATEST = 3;
   */
  LATEST = 3,
}

/**
 * Describes the enum google.container.v1.GPUDriverInstallationConfig.GPUDriverVersion.
 */
export const GPUDriverInstallationConfig_GPUDriverVersionSchema: GenEnum<GPUDriverInstallationConfig_GPUDriverVersion> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 105, 0);

/**
 * WorkloadMetadataConfig defines the metadata configuration to expose to
 * workloads on the node pool.
 *
 * @generated from message google.container.v1.WorkloadMetadataConfig
 */
export type WorkloadMetadataConfig = Message<"google.container.v1.WorkloadMetadataConfig"> & {
  /**
   * Mode is the configuration for how to expose metadata to workloads running
   * on the node pool.
   *
   * @generated from field: google.container.v1.WorkloadMetadataConfig.Mode mode = 2;
   */
  mode: WorkloadMetadataConfig_Mode;
};

/**
 * Describes the message google.container.v1.WorkloadMetadataConfig.
 * Use `create(WorkloadMetadataConfigSchema)` to create a new message.
 */
export const WorkloadMetadataConfigSchema: GenMessage<WorkloadMetadataConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 106);

/**
 * Mode is the configuration for how to expose metadata to workloads running
 * on the node.
 *
 * @generated from enum google.container.v1.WorkloadMetadataConfig.Mode
 */
export enum WorkloadMetadataConfig_Mode {
  /**
   * Not set.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * Expose all Compute Engine metadata to pods.
   *
   * @generated from enum value: GCE_METADATA = 1;
   */
  GCE_METADATA = 1,

  /**
   * Run the GKE Metadata Server on this node. The GKE Metadata Server exposes
   * a metadata API to workloads that is compatible with the V1 Compute
   * Metadata APIs exposed by the Compute Engine and App Engine Metadata
   * Servers. This feature can only be enabled if Workload Identity is enabled
   * at the cluster level.
   *
   * @generated from enum value: GKE_METADATA = 2;
   */
  GKE_METADATA = 2,
}

/**
 * Describes the enum google.container.v1.WorkloadMetadataConfig.Mode.
 */
export const WorkloadMetadataConfig_ModeSchema: GenEnum<WorkloadMetadataConfig_Mode> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 106, 0);

/**
 * SetNetworkPolicyRequest enables/disables network policy for a cluster.
 *
 * @generated from message google.container.v1.SetNetworkPolicyRequest
 */
export type SetNetworkPolicyRequest = Message<"google.container.v1.SetNetworkPolicyRequest"> & {
  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: string;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides. This field has been deprecated and replaced by the name
   * field.
   *
   * @generated from field: string zone = 2 [deprecated = true];
   * @deprecated
   */
  zone: string;

  /**
   * Deprecated. The name of the cluster.
   * This field has been deprecated and replaced by the name field.
   *
   * @generated from field: string cluster_id = 3 [deprecated = true];
   * @deprecated
   */
  clusterId: string;

  /**
   * Required. Configuration options for the NetworkPolicy feature.
   *
   * @generated from field: google.container.v1.NetworkPolicy network_policy = 4;
   */
  networkPolicy?: NetworkPolicy;

  /**
   * The name (project, location, cluster name) of the cluster to set networking
   * policy. Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetNetworkPolicyRequest.
 * Use `create(SetNetworkPolicyRequestSchema)` to create a new message.
 */
export const SetNetworkPolicyRequestSchema: GenMessage<SetNetworkPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 107);

/**
 * SetMaintenancePolicyRequest sets the maintenance policy for a cluster.
 *
 * @generated from message google.container.v1.SetMaintenancePolicyRequest
 */
export type SetMaintenancePolicyRequest = Message<"google.container.v1.SetMaintenancePolicyRequest"> & {
  /**
   * Required. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the
   * cluster resides.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * Required. The name of the cluster to update.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * Required. The maintenance policy to be set for the cluster. An empty field
   * clears the existing maintenance policy.
   *
   * @generated from field: google.container.v1.MaintenancePolicy maintenance_policy = 4;
   */
  maintenancePolicy?: MaintenancePolicy;

  /**
   * The name (project, location, cluster name) of the cluster to set
   * maintenance policy.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.SetMaintenancePolicyRequest.
 * Use `create(SetMaintenancePolicyRequestSchema)` to create a new message.
 */
export const SetMaintenancePolicyRequestSchema: GenMessage<SetMaintenancePolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 108);

/**
 * StatusCondition describes why a cluster or a node pool has a certain status
 * (e.g., ERROR or DEGRADED).
 *
 * @generated from message google.container.v1.StatusCondition
 */
export type StatusCondition = Message<"google.container.v1.StatusCondition"> & {
  /**
   * Machine-friendly representation of the condition
   * Deprecated. Use canonical_code instead.
   *
   * @generated from field: google.container.v1.StatusCondition.Code code = 1 [deprecated = true];
   * @deprecated
   */
  code: StatusCondition_Code;

  /**
   * Human-friendly representation of the condition
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Canonical code of the condition.
   *
   * @generated from field: google.rpc.Code canonical_code = 3;
   */
  canonicalCode: Code;
};

/**
 * Describes the message google.container.v1.StatusCondition.
 * Use `create(StatusConditionSchema)` to create a new message.
 */
export const StatusConditionSchema: GenMessage<StatusCondition> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 109);

/**
 * Code for each condition
 *
 * @generated from enum google.container.v1.StatusCondition.Code
 */
export enum StatusCondition_Code {
  /**
   * UNKNOWN indicates a generic condition.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * GCE_STOCKOUT indicates that Google Compute Engine resources are
   * temporarily unavailable.
   *
   * @generated from enum value: GCE_STOCKOUT = 1;
   */
  GCE_STOCKOUT = 1,

  /**
   * GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot
   * service account.
   *
   * @generated from enum value: GKE_SERVICE_ACCOUNT_DELETED = 2;
   */
  GKE_SERVICE_ACCOUNT_DELETED = 2,

  /**
   * Google Compute Engine quota was exceeded.
   *
   * @generated from enum value: GCE_QUOTA_EXCEEDED = 3;
   */
  GCE_QUOTA_EXCEEDED = 3,

  /**
   * Cluster state was manually changed by an SRE due to a system logic error.
   *
   * @generated from enum value: SET_BY_OPERATOR = 4;
   */
  SET_BY_OPERATOR = 4,

  /**
   * Unable to perform an encrypt operation against the CloudKMS key used for
   * etcd level encryption.
   *
   * @generated from enum value: CLOUD_KMS_KEY_ERROR = 7;
   */
  CLOUD_KMS_KEY_ERROR = 7,

  /**
   * Cluster CA is expiring soon.
   *
   * @generated from enum value: CA_EXPIRING = 9;
   */
  CA_EXPIRING = 9,
}

/**
 * Describes the enum google.container.v1.StatusCondition.Code.
 */
export const StatusCondition_CodeSchema: GenEnum<StatusCondition_Code> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 109, 0);

/**
 * NetworkConfig reports the relative names of network & subnetwork.
 *
 * @generated from message google.container.v1.NetworkConfig
 */
export type NetworkConfig = Message<"google.container.v1.NetworkConfig"> & {
  /**
   * Output only. The relative name of the Google Compute Engine
   * [network][google.container.v1.NetworkConfig.network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks)
   * to which the cluster is connected. Example:
   * projects/my-project/global/networks/my-network
   *
   * @generated from field: string network = 1;
   */
  network: string;

  /**
   * Output only. The relative name of the Google Compute Engine
   * [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the
   * cluster is connected. Example:
   * projects/my-project/regions/us-central1/subnetworks/my-subnet
   *
   * @generated from field: string subnetwork = 2;
   */
  subnetwork: string;

  /**
   * Whether Intra-node visibility is enabled for this cluster.
   * This makes same node pod to pod traffic visible for VPC network.
   *
   * @generated from field: bool enable_intra_node_visibility = 5;
   */
  enableIntraNodeVisibility: boolean;

  /**
   * Whether the cluster disables default in-node sNAT rules. In-node sNAT rules
   * will be disabled when default_snat_status is disabled. When disabled is set
   * to false, default IP masquerade rules will be applied to the nodes to
   * prevent sNAT on cluster internal traffic.
   *
   * @generated from field: google.container.v1.DefaultSnatStatus default_snat_status = 7;
   */
  defaultSnatStatus?: DefaultSnatStatus;

  /**
   * Whether L4ILB Subsetting is enabled for this cluster.
   *
   * @generated from field: bool enable_l4ilb_subsetting = 10;
   */
  enableL4ilbSubsetting: boolean;

  /**
   * The desired datapath provider for this cluster. By default, uses the
   * IPTables-based kube-proxy implementation.
   *
   * @generated from field: google.container.v1.DatapathProvider datapath_provider = 11;
   */
  datapathProvider: DatapathProvider;

  /**
   * The desired state of IPv6 connectivity to Google Services.
   * By default, no private IPv6 access to or from Google Services (all access
   * will be via IPv4)
   *
   * @generated from field: google.container.v1.PrivateIPv6GoogleAccess private_ipv6_google_access = 12;
   */
  privateIpv6GoogleAccess: PrivateIPv6GoogleAccess;

  /**
   * DNSConfig contains clusterDNS config for this cluster.
   *
   * @generated from field: google.container.v1.DNSConfig dns_config = 13;
   */
  dnsConfig?: DNSConfig;

  /**
   * ServiceExternalIPsConfig specifies if services with externalIPs field are
   * blocked or not.
   *
   * @generated from field: google.container.v1.ServiceExternalIPsConfig service_external_ips_config = 15;
   */
  serviceExternalIpsConfig?: ServiceExternalIPsConfig;

  /**
   * GatewayAPIConfig contains the desired config of Gateway API on this
   * cluster.
   *
   * @generated from field: google.container.v1.GatewayAPIConfig gateway_api_config = 16;
   */
  gatewayApiConfig?: GatewayAPIConfig;

  /**
   * Whether multi-networking is enabled for this cluster.
   *
   * @generated from field: bool enable_multi_networking = 17;
   */
  enableMultiNetworking: boolean;

  /**
   * Network bandwidth tier configuration.
   *
   * @generated from field: google.container.v1.NetworkConfig.ClusterNetworkPerformanceConfig network_performance_config = 18;
   */
  networkPerformanceConfig?: NetworkConfig_ClusterNetworkPerformanceConfig;

  /**
   * Whether FQDN Network Policy is enabled on this cluster.
   *
   * @generated from field: optional bool enable_fqdn_network_policy = 19;
   */
  enableFqdnNetworkPolicy?: boolean;

  /**
   * Specify the details of in-transit encryption.
   * Now named inter-node transparent encryption.
   *
   * @generated from field: optional google.container.v1.InTransitEncryptionConfig in_transit_encryption_config = 20;
   */
  inTransitEncryptionConfig?: InTransitEncryptionConfig;

  /**
   * Whether CiliumClusterwideNetworkPolicy is enabled on this cluster.
   *
   * @generated from field: optional bool enable_cilium_clusterwide_network_policy = 21;
   */
  enableCiliumClusterwideNetworkPolicy?: boolean;
};

/**
 * Describes the message google.container.v1.NetworkConfig.
 * Use `create(NetworkConfigSchema)` to create a new message.
 */
export const NetworkConfigSchema: GenMessage<NetworkConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 110);

/**
 * Configuration of network bandwidth tiers
 *
 * @generated from message google.container.v1.NetworkConfig.ClusterNetworkPerformanceConfig
 */
export type NetworkConfig_ClusterNetworkPerformanceConfig = Message<"google.container.v1.NetworkConfig.ClusterNetworkPerformanceConfig"> & {
  /**
   * Specifies the total network bandwidth tier for NodePools in the cluster.
   *
   * @generated from field: optional google.container.v1.NetworkConfig.ClusterNetworkPerformanceConfig.Tier total_egress_bandwidth_tier = 1;
   */
  totalEgressBandwidthTier?: NetworkConfig_ClusterNetworkPerformanceConfig_Tier;
};

/**
 * Describes the message google.container.v1.NetworkConfig.ClusterNetworkPerformanceConfig.
 * Use `create(NetworkConfig_ClusterNetworkPerformanceConfigSchema)` to create a new message.
 */
export const NetworkConfig_ClusterNetworkPerformanceConfigSchema: GenMessage<NetworkConfig_ClusterNetworkPerformanceConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 110, 0);

/**
 * Node network tier
 *
 * @generated from enum google.container.v1.NetworkConfig.ClusterNetworkPerformanceConfig.Tier
 */
export enum NetworkConfig_ClusterNetworkPerformanceConfig_Tier {
  /**
   * Default value
   *
   * @generated from enum value: TIER_UNSPECIFIED = 0;
   */
  TIER_UNSPECIFIED = 0,

  /**
   * Higher bandwidth, actual values based on VM size.
   *
   * @generated from enum value: TIER_1 = 1;
   */
  TIER_1 = 1,
}

/**
 * Describes the enum google.container.v1.NetworkConfig.ClusterNetworkPerformanceConfig.Tier.
 */
export const NetworkConfig_ClusterNetworkPerformanceConfig_TierSchema: GenEnum<NetworkConfig_ClusterNetworkPerformanceConfig_Tier> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 110, 0, 0);

/**
 * GatewayAPIConfig contains the desired config of Gateway API on this cluster.
 *
 * @generated from message google.container.v1.GatewayAPIConfig
 */
export type GatewayAPIConfig = Message<"google.container.v1.GatewayAPIConfig"> & {
  /**
   * The Gateway API release channel to use for Gateway API.
   *
   * @generated from field: google.container.v1.GatewayAPIConfig.Channel channel = 1;
   */
  channel: GatewayAPIConfig_Channel;
};

/**
 * Describes the message google.container.v1.GatewayAPIConfig.
 * Use `create(GatewayAPIConfigSchema)` to create a new message.
 */
export const GatewayAPIConfigSchema: GenMessage<GatewayAPIConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 111);

/**
 * Channel describes if/how Gateway API should be installed and implemented in
 * a cluster.
 *
 * @generated from enum google.container.v1.GatewayAPIConfig.Channel
 */
export enum GatewayAPIConfig_Channel {
  /**
   * Default value.
   *
   * @generated from enum value: CHANNEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Gateway API support is disabled
   *
   * @generated from enum value: CHANNEL_DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * Deprecated: use CHANNEL_STANDARD instead.
   * Gateway API support is enabled, experimental CRDs are installed
   *
   * @generated from enum value: CHANNEL_EXPERIMENTAL = 3 [deprecated = true];
   * @deprecated
   */
  EXPERIMENTAL = 3,

  /**
   * Gateway API support is enabled, standard CRDs are installed
   *
   * @generated from enum value: CHANNEL_STANDARD = 4;
   */
  STANDARD = 4,
}

/**
 * Describes the enum google.container.v1.GatewayAPIConfig.Channel.
 */
export const GatewayAPIConfig_ChannelSchema: GenEnum<GatewayAPIConfig_Channel> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 111, 0);

/**
 * Config to block services with externalIPs field.
 *
 * @generated from message google.container.v1.ServiceExternalIPsConfig
 */
export type ServiceExternalIPsConfig = Message<"google.container.v1.ServiceExternalIPsConfig"> & {
  /**
   * Whether Services with ExternalIPs field are allowed or not.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.ServiceExternalIPsConfig.
 * Use `create(ServiceExternalIPsConfigSchema)` to create a new message.
 */
export const ServiceExternalIPsConfigSchema: GenMessage<ServiceExternalIPsConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 112);

/**
 * GetOpenIDConfigRequest gets the OIDC discovery document for the
 * cluster. See the OpenID Connect Discovery 1.0 specification for details.
 *
 * @generated from message google.container.v1.GetOpenIDConfigRequest
 */
export type GetOpenIDConfigRequest = Message<"google.container.v1.GetOpenIDConfigRequest"> & {
  /**
   * The cluster (project, location, cluster name) to get the discovery document
   * for. Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1.GetOpenIDConfigRequest.
 * Use `create(GetOpenIDConfigRequestSchema)` to create a new message.
 */
export const GetOpenIDConfigRequestSchema: GenMessage<GetOpenIDConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 113);

/**
 * GetOpenIDConfigResponse is an OIDC discovery document for the cluster.
 * See the OpenID Connect Discovery 1.0 specification for details.
 *
 * @generated from message google.container.v1.GetOpenIDConfigResponse
 */
export type GetOpenIDConfigResponse = Message<"google.container.v1.GetOpenIDConfigResponse"> & {
  /**
   * OIDC Issuer.
   *
   * @generated from field: string issuer = 1;
   */
  issuer: string;

  /**
   * JSON Web Key uri.
   *
   * @generated from field: string jwks_uri = 2;
   */
  jwksUri: string;

  /**
   * Supported response types.
   *
   * @generated from field: repeated string response_types_supported = 3;
   */
  responseTypesSupported: string[];

  /**
   * Supported subject types.
   *
   * @generated from field: repeated string subject_types_supported = 4;
   */
  subjectTypesSupported: string[];

  /**
   * supported ID Token signing Algorithms.
   *
   * @generated from field: repeated string id_token_signing_alg_values_supported = 5;
   */
  idTokenSigningAlgValuesSupported: string[];

  /**
   * Supported claims.
   *
   * @generated from field: repeated string claims_supported = 6;
   */
  claimsSupported: string[];

  /**
   * Supported grant types.
   *
   * @generated from field: repeated string grant_types = 7;
   */
  grantTypes: string[];
};

/**
 * Describes the message google.container.v1.GetOpenIDConfigResponse.
 * Use `create(GetOpenIDConfigResponseSchema)` to create a new message.
 */
export const GetOpenIDConfigResponseSchema: GenMessage<GetOpenIDConfigResponse> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 114);

/**
 * GetJSONWebKeysRequest gets the public component of the keys used by the
 * cluster to sign token requests. This will be the jwks_uri for the discover
 * document returned by getOpenIDConfig. See the OpenID Connect
 * Discovery 1.0 specification for details.
 *
 * @generated from message google.container.v1.GetJSONWebKeysRequest
 */
export type GetJSONWebKeysRequest = Message<"google.container.v1.GetJSONWebKeysRequest"> & {
  /**
   * The cluster (project, location, cluster name) to get keys for. Specified in
   * the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1.GetJSONWebKeysRequest.
 * Use `create(GetJSONWebKeysRequestSchema)` to create a new message.
 */
export const GetJSONWebKeysRequestSchema: GenMessage<GetJSONWebKeysRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 115);

/**
 * Jwk is a JSON Web Key as specified in RFC 7517
 *
 * @generated from message google.container.v1.Jwk
 */
export type Jwk = Message<"google.container.v1.Jwk"> & {
  /**
   * Key Type.
   *
   * @generated from field: string kty = 1;
   */
  kty: string;

  /**
   * Algorithm.
   *
   * @generated from field: string alg = 2;
   */
  alg: string;

  /**
   * Permitted uses for the public keys.
   *
   * @generated from field: string use = 3;
   */
  use: string;

  /**
   * Key ID.
   *
   * @generated from field: string kid = 4;
   */
  kid: string;

  /**
   * Used for RSA keys.
   *
   * @generated from field: string n = 5;
   */
  n: string;

  /**
   * Used for RSA keys.
   *
   * @generated from field: string e = 6;
   */
  e: string;

  /**
   * Used for ECDSA keys.
   *
   * @generated from field: string x = 7;
   */
  x: string;

  /**
   * Used for ECDSA keys.
   *
   * @generated from field: string y = 8;
   */
  y: string;

  /**
   * Used for ECDSA keys.
   *
   * @generated from field: string crv = 9;
   */
  crv: string;
};

/**
 * Describes the message google.container.v1.Jwk.
 * Use `create(JwkSchema)` to create a new message.
 */
export const JwkSchema: GenMessage<Jwk> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 116);

/**
 * GetJSONWebKeysResponse is a valid JSON Web Key Set as specififed in rfc 7517
 *
 * @generated from message google.container.v1.GetJSONWebKeysResponse
 */
export type GetJSONWebKeysResponse = Message<"google.container.v1.GetJSONWebKeysResponse"> & {
  /**
   * The public component of the keys used by the cluster to sign token
   * requests.
   *
   * @generated from field: repeated google.container.v1.Jwk keys = 1;
   */
  keys: Jwk[];
};

/**
 * Describes the message google.container.v1.GetJSONWebKeysResponse.
 * Use `create(GetJSONWebKeysResponseSchema)` to create a new message.
 */
export const GetJSONWebKeysResponseSchema: GenMessage<GetJSONWebKeysResponse> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 117);

/**
 * CheckAutopilotCompatibilityRequest requests getting the blockers for the
 * given operation in the cluster.
 *
 * @generated from message google.container.v1.CheckAutopilotCompatibilityRequest
 */
export type CheckAutopilotCompatibilityRequest = Message<"google.container.v1.CheckAutopilotCompatibilityRequest"> & {
  /**
   * The name (project, location, cluster) of the cluster to retrieve.
   * Specified in the format `projects/*\/locations/*\/clusters/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.container.v1.CheckAutopilotCompatibilityRequest.
 * Use `create(CheckAutopilotCompatibilityRequestSchema)` to create a new message.
 */
export const CheckAutopilotCompatibilityRequestSchema: GenMessage<CheckAutopilotCompatibilityRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 118);

/**
 * AutopilotCompatibilityIssue contains information about a specific
 * compatibility issue with Autopilot mode.
 *
 * @generated from message google.container.v1.AutopilotCompatibilityIssue
 */
export type AutopilotCompatibilityIssue = Message<"google.container.v1.AutopilotCompatibilityIssue"> & {
  /**
   * The last time when this issue was observed.
   *
   * @generated from field: google.protobuf.Timestamp last_observation = 1;
   */
  lastObservation?: Timestamp;

  /**
   * The constraint type of the issue.
   *
   * @generated from field: string constraint_type = 2;
   */
  constraintType: string;

  /**
   * The incompatibility type of this issue.
   *
   * @generated from field: google.container.v1.AutopilotCompatibilityIssue.IssueType incompatibility_type = 3;
   */
  incompatibilityType: AutopilotCompatibilityIssue_IssueType;

  /**
   * The name of the resources which are subject to this issue.
   *
   * @generated from field: repeated string subjects = 4;
   */
  subjects: string[];

  /**
   * A URL to a public documnetation, which addresses resolving this issue.
   *
   * @generated from field: string documentation_url = 5;
   */
  documentationUrl: string;

  /**
   * The description of the issue.
   *
   * @generated from field: string description = 6;
   */
  description: string;
};

/**
 * Describes the message google.container.v1.AutopilotCompatibilityIssue.
 * Use `create(AutopilotCompatibilityIssueSchema)` to create a new message.
 */
export const AutopilotCompatibilityIssueSchema: GenMessage<AutopilotCompatibilityIssue> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 119);

/**
 * The type of the reported issue.
 *
 * @generated from enum google.container.v1.AutopilotCompatibilityIssue.IssueType
 */
export enum AutopilotCompatibilityIssue_IssueType {
  /**
   * Default value, should not be used.
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Indicates that the issue is a known incompatibility between the
   * cluster and Autopilot mode.
   *
   * @generated from enum value: INCOMPATIBILITY = 1;
   */
  INCOMPATIBILITY = 1,

  /**
   * Indicates the issue is an incompatibility if customers take no further
   * action to resolve.
   *
   * @generated from enum value: ADDITIONAL_CONFIG_REQUIRED = 2;
   */
  ADDITIONAL_CONFIG_REQUIRED = 2,

  /**
   * Indicates the issue is not an incompatibility, but depending on the
   * workloads business logic, there is a potential that they won't work on
   * Autopilot.
   *
   * @generated from enum value: PASSED_WITH_OPTIONAL_CONFIG = 3;
   */
  PASSED_WITH_OPTIONAL_CONFIG = 3,
}

/**
 * Describes the enum google.container.v1.AutopilotCompatibilityIssue.IssueType.
 */
export const AutopilotCompatibilityIssue_IssueTypeSchema: GenEnum<AutopilotCompatibilityIssue_IssueType> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 119, 0);

/**
 * CheckAutopilotCompatibilityResponse has a list of compatibility issues.
 *
 * @generated from message google.container.v1.CheckAutopilotCompatibilityResponse
 */
export type CheckAutopilotCompatibilityResponse = Message<"google.container.v1.CheckAutopilotCompatibilityResponse"> & {
  /**
   * The list of issues for the given operation.
   *
   * @generated from field: repeated google.container.v1.AutopilotCompatibilityIssue issues = 1;
   */
  issues: AutopilotCompatibilityIssue[];

  /**
   * The summary of the autopilot compatibility response.
   *
   * @generated from field: string summary = 2;
   */
  summary: string;
};

/**
 * Describes the message google.container.v1.CheckAutopilotCompatibilityResponse.
 * Use `create(CheckAutopilotCompatibilityResponseSchema)` to create a new message.
 */
export const CheckAutopilotCompatibilityResponseSchema: GenMessage<CheckAutopilotCompatibilityResponse> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 120);

/**
 * ReleaseChannel indicates which release channel a cluster is
 * subscribed to. Release channels are arranged in order of risk.
 *
 * When a cluster is subscribed to a release channel, Google maintains
 * both the master version and the node version. Node auto-upgrade
 * defaults to true and cannot be disabled.
 *
 * @generated from message google.container.v1.ReleaseChannel
 */
export type ReleaseChannel = Message<"google.container.v1.ReleaseChannel"> & {
  /**
   * channel specifies which release channel the cluster is subscribed to.
   *
   * @generated from field: google.container.v1.ReleaseChannel.Channel channel = 1;
   */
  channel: ReleaseChannel_Channel;
};

/**
 * Describes the message google.container.v1.ReleaseChannel.
 * Use `create(ReleaseChannelSchema)` to create a new message.
 */
export const ReleaseChannelSchema: GenMessage<ReleaseChannel> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 121);

/**
 * Possible values for 'channel'.
 *
 * @generated from enum google.container.v1.ReleaseChannel.Channel
 */
export enum ReleaseChannel_Channel {
  /**
   * No channel specified.
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * RAPID channel is offered on an early access basis for customers who want
   * to test new releases.
   *
   * WARNING: Versions available in the RAPID Channel may be subject to
   * unresolved issues with no known workaround and are not subject to any
   * SLAs.
   *
   * @generated from enum value: RAPID = 1;
   */
  RAPID = 1,

  /**
   * Clusters subscribed to REGULAR receive versions that are considered GA
   * quality. REGULAR is intended for production users who want to take
   * advantage of new features.
   *
   * @generated from enum value: REGULAR = 2;
   */
  REGULAR = 2,

  /**
   * Clusters subscribed to STABLE receive versions that are known to be
   * stable and reliable in production.
   *
   * @generated from enum value: STABLE = 3;
   */
  STABLE = 3,

  /**
   * Clusters subscribed to EXTENDED receive extended support and availability
   * for versions which are known to be stable and reliable in production.
   *
   * @generated from enum value: EXTENDED = 4;
   */
  EXTENDED = 4,
}

/**
 * Describes the enum google.container.v1.ReleaseChannel.Channel.
 */
export const ReleaseChannel_ChannelSchema: GenEnum<ReleaseChannel_Channel> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 121, 0);

/**
 * Configuration for fine-grained cost management feature.
 *
 * @generated from message google.container.v1.CostManagementConfig
 */
export type CostManagementConfig = Message<"google.container.v1.CostManagementConfig"> & {
  /**
   * Whether the feature is enabled or not.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.CostManagementConfig.
 * Use `create(CostManagementConfigSchema)` to create a new message.
 */
export const CostManagementConfigSchema: GenMessage<CostManagementConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 122);

/**
 * IntraNodeVisibilityConfig contains the desired config of the intra-node
 * visibility on this cluster.
 *
 * @generated from message google.container.v1.IntraNodeVisibilityConfig
 */
export type IntraNodeVisibilityConfig = Message<"google.container.v1.IntraNodeVisibilityConfig"> & {
  /**
   * Enables intra node visibility for this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.IntraNodeVisibilityConfig.
 * Use `create(IntraNodeVisibilityConfigSchema)` to create a new message.
 */
export const IntraNodeVisibilityConfigSchema: GenMessage<IntraNodeVisibilityConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 123);

/**
 * ILBSubsettingConfig contains the desired config of L4 Internal LoadBalancer
 * subsetting on this cluster.
 *
 * @generated from message google.container.v1.ILBSubsettingConfig
 */
export type ILBSubsettingConfig = Message<"google.container.v1.ILBSubsettingConfig"> & {
  /**
   * Enables l4 ILB subsetting for this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.ILBSubsettingConfig.
 * Use `create(ILBSubsettingConfigSchema)` to create a new message.
 */
export const ILBSubsettingConfigSchema: GenMessage<ILBSubsettingConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 124);

/**
 * DNSConfig contains the desired set of options for configuring clusterDNS.
 *
 * @generated from message google.container.v1.DNSConfig
 */
export type DNSConfig = Message<"google.container.v1.DNSConfig"> & {
  /**
   * cluster_dns indicates which in-cluster DNS provider should be used.
   *
   * @generated from field: google.container.v1.DNSConfig.Provider cluster_dns = 1;
   */
  clusterDns: DNSConfig_Provider;

  /**
   * cluster_dns_scope indicates the scope of access to cluster DNS records.
   *
   * @generated from field: google.container.v1.DNSConfig.DNSScope cluster_dns_scope = 2;
   */
  clusterDnsScope: DNSConfig_DNSScope;

  /**
   * cluster_dns_domain is the suffix used for all cluster service records.
   *
   * @generated from field: string cluster_dns_domain = 3;
   */
  clusterDnsDomain: string;

  /**
   * Optional. The domain used in Additive VPC scope.
   *
   * @generated from field: string additive_vpc_scope_dns_domain = 5;
   */
  additiveVpcScopeDnsDomain: string;
};

/**
 * Describes the message google.container.v1.DNSConfig.
 * Use `create(DNSConfigSchema)` to create a new message.
 */
export const DNSConfigSchema: GenMessage<DNSConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 125);

/**
 * Provider lists the various in-cluster DNS providers.
 *
 * @generated from enum google.container.v1.DNSConfig.Provider
 */
export enum DNSConfig_Provider {
  /**
   * Default value
   *
   * @generated from enum value: PROVIDER_UNSPECIFIED = 0;
   */
  PROVIDER_UNSPECIFIED = 0,

  /**
   * Use GKE default DNS provider(kube-dns) for DNS resolution.
   *
   * @generated from enum value: PLATFORM_DEFAULT = 1;
   */
  PLATFORM_DEFAULT = 1,

  /**
   * Use CloudDNS for DNS resolution.
   *
   * @generated from enum value: CLOUD_DNS = 2;
   */
  CLOUD_DNS = 2,

  /**
   * Use KubeDNS for DNS resolution.
   *
   * @generated from enum value: KUBE_DNS = 3;
   */
  KUBE_DNS = 3,
}

/**
 * Describes the enum google.container.v1.DNSConfig.Provider.
 */
export const DNSConfig_ProviderSchema: GenEnum<DNSConfig_Provider> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 125, 0);

/**
 * DNSScope lists the various scopes of access to cluster DNS records.
 *
 * @generated from enum google.container.v1.DNSConfig.DNSScope
 */
export enum DNSConfig_DNSScope {
  /**
   * Default value, will be inferred as cluster scope.
   *
   * @generated from enum value: DNS_SCOPE_UNSPECIFIED = 0;
   */
  DNS_SCOPE_UNSPECIFIED = 0,

  /**
   * DNS records are accessible from within the cluster.
   *
   * @generated from enum value: CLUSTER_SCOPE = 1;
   */
  CLUSTER_SCOPE = 1,

  /**
   * DNS records are accessible from within the VPC.
   *
   * @generated from enum value: VPC_SCOPE = 2;
   */
  VPC_SCOPE = 2,
}

/**
 * Describes the enum google.container.v1.DNSConfig.DNSScope.
 */
export const DNSConfig_DNSScopeSchema: GenEnum<DNSConfig_DNSScope> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 125, 1);

/**
 * Constraints applied to pods.
 *
 * @generated from message google.container.v1.MaxPodsConstraint
 */
export type MaxPodsConstraint = Message<"google.container.v1.MaxPodsConstraint"> & {
  /**
   * Constraint enforced on the max num of pods per node.
   *
   * @generated from field: int64 max_pods_per_node = 1;
   */
  maxPodsPerNode: bigint;
};

/**
 * Describes the message google.container.v1.MaxPodsConstraint.
 * Use `create(MaxPodsConstraintSchema)` to create a new message.
 */
export const MaxPodsConstraintSchema: GenMessage<MaxPodsConstraint> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 126);

/**
 * Configuration for the use of Kubernetes Service Accounts in GCP IAM
 * policies.
 *
 * @generated from message google.container.v1.WorkloadIdentityConfig
 */
export type WorkloadIdentityConfig = Message<"google.container.v1.WorkloadIdentityConfig"> & {
  /**
   * The workload pool to attach all Kubernetes service accounts to.
   *
   * @generated from field: string workload_pool = 2;
   */
  workloadPool: string;
};

/**
 * Describes the message google.container.v1.WorkloadIdentityConfig.
 * Use `create(WorkloadIdentityConfigSchema)` to create a new message.
 */
export const WorkloadIdentityConfigSchema: GenMessage<WorkloadIdentityConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 127);

/**
 * IdentityServiceConfig is configuration for Identity Service which allows
 * customers to use external identity providers with the K8S API
 *
 * @generated from message google.container.v1.IdentityServiceConfig
 */
export type IdentityServiceConfig = Message<"google.container.v1.IdentityServiceConfig"> & {
  /**
   * Whether to enable the Identity Service component
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.IdentityServiceConfig.
 * Use `create(IdentityServiceConfigSchema)` to create a new message.
 */
export const IdentityServiceConfigSchema: GenMessage<IdentityServiceConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 128);

/**
 * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
 *
 * @generated from message google.container.v1.MeshCertificates
 */
export type MeshCertificates = Message<"google.container.v1.MeshCertificates"> & {
  /**
   * enable_certificates controls issuance of workload mTLS certificates.
   *
   * If set, the GKE Workload Identity Certificates controller and node agent
   * will be deployed in the cluster, which can then be configured by creating a
   * WorkloadCertificateConfig Custom Resource.
   *
   * Requires Workload Identity
   * ([workload_pool][google.container.v1.WorkloadIdentityConfig.workload_pool]
   * must be non-empty).
   *
   * @generated from field: google.protobuf.BoolValue enable_certificates = 1;
   */
  enableCertificates?: boolean;
};

/**
 * Describes the message google.container.v1.MeshCertificates.
 * Use `create(MeshCertificatesSchema)` to create a new message.
 */
export const MeshCertificatesSchema: GenMessage<MeshCertificates> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 129);

/**
 * Configuration of etcd encryption.
 *
 * @generated from message google.container.v1.DatabaseEncryption
 */
export type DatabaseEncryption = Message<"google.container.v1.DatabaseEncryption"> & {
  /**
   * Name of CloudKMS key to use for the encryption of secrets in etcd.
   * Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key
   *
   * @generated from field: string key_name = 1;
   */
  keyName: string;

  /**
   * The desired state of etcd encryption.
   *
   * @generated from field: google.container.v1.DatabaseEncryption.State state = 2;
   */
  state: DatabaseEncryption_State;

  /**
   * Output only. The current state of etcd encryption.
   *
   * @generated from field: optional google.container.v1.DatabaseEncryption.CurrentState current_state = 3;
   */
  currentState?: DatabaseEncryption_CurrentState;

  /**
   * Output only. Keys in use by the cluster for decrypting
   * existing objects, in addition to the key in `key_name`.
   *
   * Each item is a CloudKMS key resource.
   *
   * @generated from field: repeated string decryption_keys = 4;
   */
  decryptionKeys: string[];

  /**
   * Output only. Records errors seen during DatabaseEncryption update
   * operations.
   *
   * @generated from field: repeated google.container.v1.DatabaseEncryption.OperationError last_operation_errors = 5;
   */
  lastOperationErrors: DatabaseEncryption_OperationError[];
};

/**
 * Describes the message google.container.v1.DatabaseEncryption.
 * Use `create(DatabaseEncryptionSchema)` to create a new message.
 */
export const DatabaseEncryptionSchema: GenMessage<DatabaseEncryption> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 130);

/**
 * OperationError records errors seen from CloudKMS keys
 * encountered during updates to DatabaseEncryption configuration.
 *
 * @generated from message google.container.v1.DatabaseEncryption.OperationError
 */
export type DatabaseEncryption_OperationError = Message<"google.container.v1.DatabaseEncryption.OperationError"> & {
  /**
   * CloudKMS key resource that had the error.
   *
   * @generated from field: string key_name = 1;
   */
  keyName: string;

  /**
   * Description of the error seen during the operation.
   *
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * Time when the CloudKMS error was seen.
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;
};

/**
 * Describes the message google.container.v1.DatabaseEncryption.OperationError.
 * Use `create(DatabaseEncryption_OperationErrorSchema)` to create a new message.
 */
export const DatabaseEncryption_OperationErrorSchema: GenMessage<DatabaseEncryption_OperationError> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 130, 0);

/**
 * State of etcd encryption.
 *
 * @generated from enum google.container.v1.DatabaseEncryption.State
 */
export enum DatabaseEncryption_State {
  /**
   * Should never be set
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Secrets in etcd are encrypted.
   *
   * @generated from enum value: ENCRYPTED = 1;
   */
  ENCRYPTED = 1,

  /**
   * Secrets in etcd are stored in plain text (at etcd level) - this is
   * unrelated to Compute Engine level full disk encryption.
   *
   * @generated from enum value: DECRYPTED = 2;
   */
  DECRYPTED = 2,
}

/**
 * Describes the enum google.container.v1.DatabaseEncryption.State.
 */
export const DatabaseEncryption_StateSchema: GenEnum<DatabaseEncryption_State> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 130, 0);

/**
 * Current State of etcd encryption.
 *
 * @generated from enum google.container.v1.DatabaseEncryption.CurrentState
 */
export enum DatabaseEncryption_CurrentState {
  /**
   * Should never be set
   *
   * @generated from enum value: CURRENT_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Secrets in etcd are encrypted.
   *
   * @generated from enum value: CURRENT_STATE_ENCRYPTED = 7;
   */
  ENCRYPTED = 7,

  /**
   * Secrets in etcd are stored in plain text (at etcd level) - this is
   * unrelated to Compute Engine level full disk encryption.
   *
   * @generated from enum value: CURRENT_STATE_DECRYPTED = 2;
   */
  DECRYPTED = 2,

  /**
   * Encryption (or re-encryption with a different CloudKMS key)
   * of Secrets is in progress.
   *
   * @generated from enum value: CURRENT_STATE_ENCRYPTION_PENDING = 3;
   */
  ENCRYPTION_PENDING = 3,

  /**
   * Encryption (or re-encryption with a different CloudKMS key) of Secrets in
   * etcd encountered an error.
   *
   * @generated from enum value: CURRENT_STATE_ENCRYPTION_ERROR = 4;
   */
  ENCRYPTION_ERROR = 4,

  /**
   * De-crypting Secrets to plain text in etcd is in progress.
   *
   * @generated from enum value: CURRENT_STATE_DECRYPTION_PENDING = 5;
   */
  DECRYPTION_PENDING = 5,

  /**
   * De-crypting Secrets to plain text in etcd encountered an error.
   *
   * @generated from enum value: CURRENT_STATE_DECRYPTION_ERROR = 6;
   */
  DECRYPTION_ERROR = 6,
}

/**
 * Describes the enum google.container.v1.DatabaseEncryption.CurrentState.
 */
export const DatabaseEncryption_CurrentStateSchema: GenEnum<DatabaseEncryption_CurrentState> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 130, 1);

/**
 * ListUsableSubnetworksRequest requests the list of usable subnetworks
 * available to a user for creating clusters.
 *
 * @generated from message google.container.v1.ListUsableSubnetworksRequest
 */
export type ListUsableSubnetworksRequest = Message<"google.container.v1.ListUsableSubnetworksRequest"> & {
  /**
   * The parent project where subnetworks are usable.
   * Specified in the format `projects/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Filtering currently only supports equality on the networkProjectId and must
   * be in the form: "networkProjectId=[PROJECTID]", where `networkProjectId`
   * is the project which owns the listed subnetworks. This defaults to the
   * parent project ID.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The max number of results per page that should be returned. If the number
   * of available results is larger than `page_size`, a `next_page_token` is
   * returned which can be used to get the next page of results in subsequent
   * requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Specifies a page token to use. Set this to the nextPageToken returned by
   * previous list requests to get the next page of results.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.container.v1.ListUsableSubnetworksRequest.
 * Use `create(ListUsableSubnetworksRequestSchema)` to create a new message.
 */
export const ListUsableSubnetworksRequestSchema: GenMessage<ListUsableSubnetworksRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 131);

/**
 * ListUsableSubnetworksResponse is the response of
 * ListUsableSubnetworksRequest.
 *
 * @generated from message google.container.v1.ListUsableSubnetworksResponse
 */
export type ListUsableSubnetworksResponse = Message<"google.container.v1.ListUsableSubnetworksResponse"> & {
  /**
   * A list of usable subnetworks in the specified network project.
   *
   * @generated from field: repeated google.container.v1.UsableSubnetwork subnetworks = 1;
   */
  subnetworks: UsableSubnetwork[];

  /**
   * This token allows you to get the next page of results for list requests.
   * If the number of results is larger than `page_size`, use the
   * `next_page_token` as a value for the query parameter `page_token` in the
   * next request. The value will become empty when there are no more pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.container.v1.ListUsableSubnetworksResponse.
 * Use `create(ListUsableSubnetworksResponseSchema)` to create a new message.
 */
export const ListUsableSubnetworksResponseSchema: GenMessage<ListUsableSubnetworksResponse> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 132);

/**
 * Secondary IP range of a usable subnetwork.
 *
 * @generated from message google.container.v1.UsableSubnetworkSecondaryRange
 */
export type UsableSubnetworkSecondaryRange = Message<"google.container.v1.UsableSubnetworkSecondaryRange"> & {
  /**
   * The name associated with this subnetwork secondary range, used when adding
   * an alias IP range to a VM instance.
   *
   * @generated from field: string range_name = 1;
   */
  rangeName: string;

  /**
   * The range of IP addresses belonging to this subnetwork secondary range.
   *
   * @generated from field: string ip_cidr_range = 2;
   */
  ipCidrRange: string;

  /**
   * This field is to determine the status of the secondary range programmably.
   *
   * @generated from field: google.container.v1.UsableSubnetworkSecondaryRange.Status status = 3;
   */
  status: UsableSubnetworkSecondaryRange_Status;
};

/**
 * Describes the message google.container.v1.UsableSubnetworkSecondaryRange.
 * Use `create(UsableSubnetworkSecondaryRangeSchema)` to create a new message.
 */
export const UsableSubnetworkSecondaryRangeSchema: GenMessage<UsableSubnetworkSecondaryRange> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 133);

/**
 * Status shows the current usage of a secondary IP range.
 *
 * @generated from enum google.container.v1.UsableSubnetworkSecondaryRange.Status
 */
export enum UsableSubnetworkSecondaryRange_Status {
  /**
   * UNKNOWN is the zero value of the Status enum. It's not a valid status.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * UNUSED denotes that this range is unclaimed by any cluster.
   *
   * @generated from enum value: UNUSED = 1;
   */
  UNUSED = 1,

  /**
   * IN_USE_SERVICE denotes that this range is claimed by cluster(s) for
   * services. User-managed services range can be shared between clusters
   * within the same subnetwork.
   *
   * @generated from enum value: IN_USE_SERVICE = 2;
   */
  IN_USE_SERVICE = 2,

  /**
   * IN_USE_SHAREABLE_POD denotes this range was created by the network admin
   * and is currently claimed by a cluster for pods. It can only be used by
   * other clusters as a pod range.
   *
   * @generated from enum value: IN_USE_SHAREABLE_POD = 3;
   */
  IN_USE_SHAREABLE_POD = 3,

  /**
   * IN_USE_MANAGED_POD denotes this range was created by GKE and is claimed
   * for pods. It cannot be used for other clusters.
   *
   * @generated from enum value: IN_USE_MANAGED_POD = 4;
   */
  IN_USE_MANAGED_POD = 4,
}

/**
 * Describes the enum google.container.v1.UsableSubnetworkSecondaryRange.Status.
 */
export const UsableSubnetworkSecondaryRange_StatusSchema: GenEnum<UsableSubnetworkSecondaryRange_Status> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 133, 0);

/**
 * UsableSubnetwork resource returns the subnetwork name, its associated network
 * and the primary CIDR range.
 *
 * @generated from message google.container.v1.UsableSubnetwork
 */
export type UsableSubnetwork = Message<"google.container.v1.UsableSubnetwork"> & {
  /**
   * Subnetwork Name.
   * Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
   *
   * @generated from field: string subnetwork = 1;
   */
  subnetwork: string;

  /**
   * Network Name.
   * Example: projects/my-project/global/networks/my-network
   *
   * @generated from field: string network = 2;
   */
  network: string;

  /**
   * The range of internal addresses that are owned by this subnetwork.
   *
   * @generated from field: string ip_cidr_range = 3;
   */
  ipCidrRange: string;

  /**
   * Secondary IP ranges.
   *
   * @generated from field: repeated google.container.v1.UsableSubnetworkSecondaryRange secondary_ip_ranges = 4;
   */
  secondaryIpRanges: UsableSubnetworkSecondaryRange[];

  /**
   * A human readable status message representing the reasons for cases where
   * the caller cannot use the secondary ranges under the subnet. For example if
   * the secondary_ip_ranges is empty due to a permission issue, an insufficient
   * permission message will be given by status_message.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;
};

/**
 * Describes the message google.container.v1.UsableSubnetwork.
 * Use `create(UsableSubnetworkSchema)` to create a new message.
 */
export const UsableSubnetworkSchema: GenMessage<UsableSubnetwork> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 134);

/**
 * Configuration for exporting cluster resource usages.
 *
 * @generated from message google.container.v1.ResourceUsageExportConfig
 */
export type ResourceUsageExportConfig = Message<"google.container.v1.ResourceUsageExportConfig"> & {
  /**
   * Configuration to use BigQuery as usage export destination.
   *
   * @generated from field: google.container.v1.ResourceUsageExportConfig.BigQueryDestination bigquery_destination = 1;
   */
  bigqueryDestination?: ResourceUsageExportConfig_BigQueryDestination;

  /**
   * Whether to enable network egress metering for this cluster. If enabled, a
   * daemonset will be created in the cluster to meter network egress traffic.
   *
   * @generated from field: bool enable_network_egress_metering = 2;
   */
  enableNetworkEgressMetering: boolean;

  /**
   * Configuration to enable resource consumption metering.
   *
   * @generated from field: google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig consumption_metering_config = 3;
   */
  consumptionMeteringConfig?: ResourceUsageExportConfig_ConsumptionMeteringConfig;
};

/**
 * Describes the message google.container.v1.ResourceUsageExportConfig.
 * Use `create(ResourceUsageExportConfigSchema)` to create a new message.
 */
export const ResourceUsageExportConfigSchema: GenMessage<ResourceUsageExportConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 135);

/**
 * Parameters for using BigQuery as the destination of resource usage export.
 *
 * @generated from message google.container.v1.ResourceUsageExportConfig.BigQueryDestination
 */
export type ResourceUsageExportConfig_BigQueryDestination = Message<"google.container.v1.ResourceUsageExportConfig.BigQueryDestination"> & {
  /**
   * The ID of a BigQuery Dataset.
   *
   * @generated from field: string dataset_id = 1;
   */
  datasetId: string;
};

/**
 * Describes the message google.container.v1.ResourceUsageExportConfig.BigQueryDestination.
 * Use `create(ResourceUsageExportConfig_BigQueryDestinationSchema)` to create a new message.
 */
export const ResourceUsageExportConfig_BigQueryDestinationSchema: GenMessage<ResourceUsageExportConfig_BigQueryDestination> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 135, 0);

/**
 * Parameters for controlling consumption metering.
 *
 * @generated from message google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
 */
export type ResourceUsageExportConfig_ConsumptionMeteringConfig = Message<"google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig"> & {
  /**
   * Whether to enable consumption metering for this cluster. If enabled, a
   * second BigQuery table will be created to hold resource consumption
   * records.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig.
 * Use `create(ResourceUsageExportConfig_ConsumptionMeteringConfigSchema)` to create a new message.
 */
export const ResourceUsageExportConfig_ConsumptionMeteringConfigSchema: GenMessage<ResourceUsageExportConfig_ConsumptionMeteringConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 135, 1);

/**
 * VerticalPodAutoscaling contains global, per-cluster information
 * required by Vertical Pod Autoscaler to automatically adjust
 * the resources of pods controlled by it.
 *
 * @generated from message google.container.v1.VerticalPodAutoscaling
 */
export type VerticalPodAutoscaling = Message<"google.container.v1.VerticalPodAutoscaling"> & {
  /**
   * Enables vertical pod autoscaling.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.VerticalPodAutoscaling.
 * Use `create(VerticalPodAutoscalingSchema)` to create a new message.
 */
export const VerticalPodAutoscalingSchema: GenMessage<VerticalPodAutoscaling> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 136);

/**
 * DefaultSnatStatus contains the desired state of whether default sNAT should
 * be disabled on the cluster.
 *
 * @generated from message google.container.v1.DefaultSnatStatus
 */
export type DefaultSnatStatus = Message<"google.container.v1.DefaultSnatStatus"> & {
  /**
   * Disables cluster default sNAT rules.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;
};

/**
 * Describes the message google.container.v1.DefaultSnatStatus.
 * Use `create(DefaultSnatStatusSchema)` to create a new message.
 */
export const DefaultSnatStatusSchema: GenMessage<DefaultSnatStatus> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 137);

/**
 * Configuration of Shielded Nodes feature.
 *
 * @generated from message google.container.v1.ShieldedNodes
 */
export type ShieldedNodes = Message<"google.container.v1.ShieldedNodes"> & {
  /**
   * Whether Shielded Nodes features are enabled on all nodes in this cluster.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.ShieldedNodes.
 * Use `create(ShieldedNodesSchema)` to create a new message.
 */
export const ShieldedNodesSchema: GenMessage<ShieldedNodes> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 138);

/**
 * Configuration of gVNIC feature.
 *
 * @generated from message google.container.v1.VirtualNIC
 */
export type VirtualNIC = Message<"google.container.v1.VirtualNIC"> & {
  /**
   * Whether gVNIC features are enabled in the node pool.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.VirtualNIC.
 * Use `create(VirtualNICSchema)` to create a new message.
 */
export const VirtualNICSchema: GenMessage<VirtualNIC> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 139);

/**
 * Configuration of Fast Socket feature.
 *
 * @generated from message google.container.v1.FastSocket
 */
export type FastSocket = Message<"google.container.v1.FastSocket"> & {
  /**
   * Whether Fast Socket features are enabled in the node pool.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.FastSocket.
 * Use `create(FastSocketSchema)` to create a new message.
 */
export const FastSocketSchema: GenMessage<FastSocket> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 140);

/**
 * NotificationConfig is the configuration of notifications.
 *
 * @generated from message google.container.v1.NotificationConfig
 */
export type NotificationConfig = Message<"google.container.v1.NotificationConfig"> & {
  /**
   * Notification config for Pub/Sub.
   *
   * @generated from field: google.container.v1.NotificationConfig.PubSub pubsub = 1;
   */
  pubsub?: NotificationConfig_PubSub;
};

/**
 * Describes the message google.container.v1.NotificationConfig.
 * Use `create(NotificationConfigSchema)` to create a new message.
 */
export const NotificationConfigSchema: GenMessage<NotificationConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 141);

/**
 * Pub/Sub specific notification config.
 *
 * @generated from message google.container.v1.NotificationConfig.PubSub
 */
export type NotificationConfig_PubSub = Message<"google.container.v1.NotificationConfig.PubSub"> & {
  /**
   * Enable notifications for Pub/Sub.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * The desired Pub/Sub topic to which notifications will be
   * sent by GKE. Format is `projects/{project}/topics/{topic}`.
   *
   * @generated from field: string topic = 2;
   */
  topic: string;

  /**
   * Allows filtering to one or more specific event types. If no filter is
   * specified, or if a filter is specified with no event types, all event
   * types will be sent
   *
   * @generated from field: google.container.v1.NotificationConfig.Filter filter = 3;
   */
  filter?: NotificationConfig_Filter;
};

/**
 * Describes the message google.container.v1.NotificationConfig.PubSub.
 * Use `create(NotificationConfig_PubSubSchema)` to create a new message.
 */
export const NotificationConfig_PubSubSchema: GenMessage<NotificationConfig_PubSub> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 141, 0);

/**
 * Allows filtering to one or more specific event types. If event types are
 * present, those and only those event types will be transmitted to the
 * cluster. Other types will be skipped. If no filter is specified, or no
 * event types are present, all event types will be sent
 *
 * @generated from message google.container.v1.NotificationConfig.Filter
 */
export type NotificationConfig_Filter = Message<"google.container.v1.NotificationConfig.Filter"> & {
  /**
   * Event types to allowlist.
   *
   * @generated from field: repeated google.container.v1.NotificationConfig.EventType event_type = 1;
   */
  eventType: NotificationConfig_EventType[];
};

/**
 * Describes the message google.container.v1.NotificationConfig.Filter.
 * Use `create(NotificationConfig_FilterSchema)` to create a new message.
 */
export const NotificationConfig_FilterSchema: GenMessage<NotificationConfig_Filter> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 141, 1);

/**
 * Types of notifications currently supported. Can be used to filter what
 * notifications are sent.
 *
 * @generated from enum google.container.v1.NotificationConfig.EventType
 */
export enum NotificationConfig_EventType {
  /**
   * Not set, will be ignored.
   *
   * @generated from enum value: EVENT_TYPE_UNSPECIFIED = 0;
   */
  EVENT_TYPE_UNSPECIFIED = 0,

  /**
   * Corresponds with UpgradeAvailableEvent.
   *
   * @generated from enum value: UPGRADE_AVAILABLE_EVENT = 1;
   */
  UPGRADE_AVAILABLE_EVENT = 1,

  /**
   * Corresponds with UpgradeEvent.
   *
   * @generated from enum value: UPGRADE_EVENT = 2;
   */
  UPGRADE_EVENT = 2,

  /**
   * Corresponds with SecurityBulletinEvent.
   *
   * @generated from enum value: SECURITY_BULLETIN_EVENT = 3;
   */
  SECURITY_BULLETIN_EVENT = 3,
}

/**
 * Describes the enum google.container.v1.NotificationConfig.EventType.
 */
export const NotificationConfig_EventTypeSchema: GenEnum<NotificationConfig_EventType> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 141, 0);

/**
 * ConfidentialNodes is configuration for the confidential nodes feature, which
 * makes nodes run on confidential VMs.
 *
 * @generated from message google.container.v1.ConfidentialNodes
 */
export type ConfidentialNodes = Message<"google.container.v1.ConfidentialNodes"> & {
  /**
   * Whether Confidential Nodes feature is enabled.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.ConfidentialNodes.
 * Use `create(ConfidentialNodesSchema)` to create a new message.
 */
export const ConfidentialNodesSchema: GenMessage<ConfidentialNodes> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 142);

/**
 * UpgradeEvent is a notification sent to customers by the cluster server when
 * a resource is upgrading.
 *
 * @generated from message google.container.v1.UpgradeEvent
 */
export type UpgradeEvent = Message<"google.container.v1.UpgradeEvent"> & {
  /**
   * The resource type that is upgrading.
   *
   * @generated from field: google.container.v1.UpgradeResourceType resource_type = 1;
   */
  resourceType: UpgradeResourceType;

  /**
   * The operation associated with this upgrade.
   *
   * @generated from field: string operation = 2;
   */
  operation: string;

  /**
   * The time when the operation was started.
   *
   * @generated from field: google.protobuf.Timestamp operation_start_time = 3;
   */
  operationStartTime?: Timestamp;

  /**
   * The current version before the upgrade.
   *
   * @generated from field: string current_version = 4;
   */
  currentVersion: string;

  /**
   * The target version for the upgrade.
   *
   * @generated from field: string target_version = 5;
   */
  targetVersion: string;

  /**
   * Optional relative path to the resource. For example in node pool upgrades,
   * the relative path of the node pool.
   *
   * @generated from field: string resource = 6;
   */
  resource: string;
};

/**
 * Describes the message google.container.v1.UpgradeEvent.
 * Use `create(UpgradeEventSchema)` to create a new message.
 */
export const UpgradeEventSchema: GenMessage<UpgradeEvent> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 143);

/**
 * UpgradeAvailableEvent is a notification sent to customers when a new
 * available version is released.
 *
 * @generated from message google.container.v1.UpgradeAvailableEvent
 */
export type UpgradeAvailableEvent = Message<"google.container.v1.UpgradeAvailableEvent"> & {
  /**
   * The release version available for upgrade.
   *
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * The resource type of the release version.
   *
   * @generated from field: google.container.v1.UpgradeResourceType resource_type = 2;
   */
  resourceType: UpgradeResourceType;

  /**
   * The release channel of the version. If empty, it means a non-channel
   * release.
   *
   * @generated from field: google.container.v1.ReleaseChannel release_channel = 3;
   */
  releaseChannel?: ReleaseChannel;

  /**
   * Optional relative path to the resource. For example, the relative path of
   * the node pool.
   *
   * @generated from field: string resource = 4;
   */
  resource: string;
};

/**
 * Describes the message google.container.v1.UpgradeAvailableEvent.
 * Use `create(UpgradeAvailableEventSchema)` to create a new message.
 */
export const UpgradeAvailableEventSchema: GenMessage<UpgradeAvailableEvent> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 144);

/**
 * SecurityBulletinEvent is a notification sent to customers when a security
 * bulletin has been posted that they are vulnerable to.
 *
 * @generated from message google.container.v1.SecurityBulletinEvent
 */
export type SecurityBulletinEvent = Message<"google.container.v1.SecurityBulletinEvent"> & {
  /**
   * The resource type (node/control plane) that has the vulnerability. Multiple
   * notifications (1 notification per resource type) will be sent for a
   * vulnerability that affects > 1 resource type.
   *
   * @generated from field: string resource_type_affected = 1;
   */
  resourceTypeAffected: string;

  /**
   * The ID of the bulletin corresponding to the vulnerability.
   *
   * @generated from field: string bulletin_id = 2;
   */
  bulletinId: string;

  /**
   * The CVEs associated with this bulletin.
   *
   * @generated from field: repeated string cve_ids = 3;
   */
  cveIds: string[];

  /**
   * The severity of this bulletin as it relates to GKE.
   *
   * @generated from field: string severity = 4;
   */
  severity: string;

  /**
   * The URI link to the bulletin on the website for more information.
   *
   * @generated from field: string bulletin_uri = 5;
   */
  bulletinUri: string;

  /**
   * A brief description of the bulletin. See the bulletin pointed to by the
   * bulletin_uri field for an expanded description.
   *
   * @generated from field: string brief_description = 6;
   */
  briefDescription: string;

  /**
   * The GKE minor versions affected by this vulnerability.
   *
   * @generated from field: repeated string affected_supported_minors = 7;
   */
  affectedSupportedMinors: string[];

  /**
   * The GKE versions where this vulnerability is patched.
   *
   * @generated from field: repeated string patched_versions = 8;
   */
  patchedVersions: string[];

  /**
   * This represents a version selected from the patched_versions field that
   * the cluster receiving this notification should most likely want to upgrade
   * to based on its current version. Note that if this notification is being
   * received by a given cluster, it means that this version is currently
   * available as an upgrade target in that cluster's location.
   *
   * @generated from field: string suggested_upgrade_target = 9;
   */
  suggestedUpgradeTarget: string;

  /**
   * If this field is specified, it means there are manual steps that the user
   * must take to make their clusters safe.
   *
   * @generated from field: bool manual_steps_required = 10;
   */
  manualStepsRequired: boolean;
};

/**
 * Describes the message google.container.v1.SecurityBulletinEvent.
 * Use `create(SecurityBulletinEventSchema)` to create a new message.
 */
export const SecurityBulletinEventSchema: GenMessage<SecurityBulletinEvent> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 145);

/**
 * Autopilot is the configuration for Autopilot settings on the cluster.
 *
 * @generated from message google.container.v1.Autopilot
 */
export type Autopilot = Message<"google.container.v1.Autopilot"> & {
  /**
   * Enable Autopilot
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Workload policy configuration for Autopilot.
   *
   * @generated from field: google.container.v1.WorkloadPolicyConfig workload_policy_config = 2;
   */
  workloadPolicyConfig?: WorkloadPolicyConfig;
};

/**
 * Describes the message google.container.v1.Autopilot.
 * Use `create(AutopilotSchema)` to create a new message.
 */
export const AutopilotSchema: GenMessage<Autopilot> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 146);

/**
 * WorkloadPolicyConfig is the configuration of workload policy for autopilot
 * clusters.
 *
 * @generated from message google.container.v1.WorkloadPolicyConfig
 */
export type WorkloadPolicyConfig = Message<"google.container.v1.WorkloadPolicyConfig"> & {
  /**
   * If true, workloads can use NET_ADMIN capability.
   *
   * @generated from field: optional bool allow_net_admin = 1;
   */
  allowNetAdmin?: boolean;
};

/**
 * Describes the message google.container.v1.WorkloadPolicyConfig.
 * Use `create(WorkloadPolicyConfigSchema)` to create a new message.
 */
export const WorkloadPolicyConfigSchema: GenMessage<WorkloadPolicyConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 147);

/**
 * LoggingConfig is cluster logging configuration.
 *
 * @generated from message google.container.v1.LoggingConfig
 */
export type LoggingConfig = Message<"google.container.v1.LoggingConfig"> & {
  /**
   * Logging components configuration
   *
   * @generated from field: google.container.v1.LoggingComponentConfig component_config = 1;
   */
  componentConfig?: LoggingComponentConfig;
};

/**
 * Describes the message google.container.v1.LoggingConfig.
 * Use `create(LoggingConfigSchema)` to create a new message.
 */
export const LoggingConfigSchema: GenMessage<LoggingConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 148);

/**
 * LoggingComponentConfig is cluster logging component configuration.
 *
 * @generated from message google.container.v1.LoggingComponentConfig
 */
export type LoggingComponentConfig = Message<"google.container.v1.LoggingComponentConfig"> & {
  /**
   * Select components to collect logs. An empty set would disable all logging.
   *
   * @generated from field: repeated google.container.v1.LoggingComponentConfig.Component enable_components = 1;
   */
  enableComponents: LoggingComponentConfig_Component[];
};

/**
 * Describes the message google.container.v1.LoggingComponentConfig.
 * Use `create(LoggingComponentConfigSchema)` to create a new message.
 */
export const LoggingComponentConfigSchema: GenMessage<LoggingComponentConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 149);

/**
 * GKE components exposing logs
 *
 * @generated from enum google.container.v1.LoggingComponentConfig.Component
 */
export enum LoggingComponentConfig_Component {
  /**
   * Default value. This shouldn't be used.
   *
   * @generated from enum value: COMPONENT_UNSPECIFIED = 0;
   */
  COMPONENT_UNSPECIFIED = 0,

  /**
   * system components
   *
   * @generated from enum value: SYSTEM_COMPONENTS = 1;
   */
  SYSTEM_COMPONENTS = 1,

  /**
   * workloads
   *
   * @generated from enum value: WORKLOADS = 2;
   */
  WORKLOADS = 2,

  /**
   * kube-apiserver
   *
   * @generated from enum value: APISERVER = 3;
   */
  APISERVER = 3,

  /**
   * kube-scheduler
   *
   * @generated from enum value: SCHEDULER = 4;
   */
  SCHEDULER = 4,

  /**
   * kube-controller-manager
   *
   * @generated from enum value: CONTROLLER_MANAGER = 5;
   */
  CONTROLLER_MANAGER = 5,
}

/**
 * Describes the enum google.container.v1.LoggingComponentConfig.Component.
 */
export const LoggingComponentConfig_ComponentSchema: GenEnum<LoggingComponentConfig_Component> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 149, 0);

/**
 * RayClusterLoggingConfig specifies configuration of Ray logging.
 *
 * @generated from message google.container.v1.RayClusterLoggingConfig
 */
export type RayClusterLoggingConfig = Message<"google.container.v1.RayClusterLoggingConfig"> & {
  /**
   * Enable log collection for Ray clusters.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.RayClusterLoggingConfig.
 * Use `create(RayClusterLoggingConfigSchema)` to create a new message.
 */
export const RayClusterLoggingConfigSchema: GenMessage<RayClusterLoggingConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 150);

/**
 * MonitoringConfig is cluster monitoring configuration.
 *
 * @generated from message google.container.v1.MonitoringConfig
 */
export type MonitoringConfig = Message<"google.container.v1.MonitoringConfig"> & {
  /**
   * Monitoring components configuration
   *
   * @generated from field: google.container.v1.MonitoringComponentConfig component_config = 1;
   */
  componentConfig?: MonitoringComponentConfig;

  /**
   * Enable Google Cloud Managed Service for Prometheus
   * in the cluster.
   *
   * @generated from field: google.container.v1.ManagedPrometheusConfig managed_prometheus_config = 2;
   */
  managedPrometheusConfig?: ManagedPrometheusConfig;

  /**
   * Configuration of Advanced Datapath Observability features.
   *
   * @generated from field: google.container.v1.AdvancedDatapathObservabilityConfig advanced_datapath_observability_config = 3;
   */
  advancedDatapathObservabilityConfig?: AdvancedDatapathObservabilityConfig;
};

/**
 * Describes the message google.container.v1.MonitoringConfig.
 * Use `create(MonitoringConfigSchema)` to create a new message.
 */
export const MonitoringConfigSchema: GenMessage<MonitoringConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 151);

/**
 * AdvancedDatapathObservabilityConfig specifies configuration of observability
 * features of advanced datapath.
 *
 * @generated from message google.container.v1.AdvancedDatapathObservabilityConfig
 */
export type AdvancedDatapathObservabilityConfig = Message<"google.container.v1.AdvancedDatapathObservabilityConfig"> & {
  /**
   * Expose flow metrics on nodes
   *
   * @generated from field: bool enable_metrics = 1;
   */
  enableMetrics: boolean;

  /**
   * Method used to make Relay available
   *
   * @generated from field: google.container.v1.AdvancedDatapathObservabilityConfig.RelayMode relay_mode = 2;
   */
  relayMode: AdvancedDatapathObservabilityConfig_RelayMode;

  /**
   * Enable Relay component
   *
   * @generated from field: optional bool enable_relay = 3;
   */
  enableRelay?: boolean;
};

/**
 * Describes the message google.container.v1.AdvancedDatapathObservabilityConfig.
 * Use `create(AdvancedDatapathObservabilityConfigSchema)` to create a new message.
 */
export const AdvancedDatapathObservabilityConfigSchema: GenMessage<AdvancedDatapathObservabilityConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 152);

/**
 * Supported Relay modes
 *
 * @generated from enum google.container.v1.AdvancedDatapathObservabilityConfig.RelayMode
 */
export enum AdvancedDatapathObservabilityConfig_RelayMode {
  /**
   * Default value. This shouldn't be used.
   *
   * @generated from enum value: RELAY_MODE_UNSPECIFIED = 0;
   */
  RELAY_MODE_UNSPECIFIED = 0,

  /**
   * disabled
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * exposed via internal load balancer
   *
   * @generated from enum value: INTERNAL_VPC_LB = 3;
   */
  INTERNAL_VPC_LB = 3,

  /**
   * exposed via external load balancer
   *
   * @generated from enum value: EXTERNAL_LB = 4;
   */
  EXTERNAL_LB = 4,
}

/**
 * Describes the enum google.container.v1.AdvancedDatapathObservabilityConfig.RelayMode.
 */
export const AdvancedDatapathObservabilityConfig_RelayModeSchema: GenEnum<AdvancedDatapathObservabilityConfig_RelayMode> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 152, 0);

/**
 * RayClusterMonitoringConfig specifies monitoring configuration for Ray
 * clusters.
 *
 * @generated from message google.container.v1.RayClusterMonitoringConfig
 */
export type RayClusterMonitoringConfig = Message<"google.container.v1.RayClusterMonitoringConfig"> & {
  /**
   * Enable metrics collection for Ray clusters.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.RayClusterMonitoringConfig.
 * Use `create(RayClusterMonitoringConfigSchema)` to create a new message.
 */
export const RayClusterMonitoringConfigSchema: GenMessage<RayClusterMonitoringConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 153);

/**
 * NodePoolLoggingConfig specifies logging configuration for nodepools.
 *
 * @generated from message google.container.v1.NodePoolLoggingConfig
 */
export type NodePoolLoggingConfig = Message<"google.container.v1.NodePoolLoggingConfig"> & {
  /**
   * Logging variant configuration.
   *
   * @generated from field: google.container.v1.LoggingVariantConfig variant_config = 1;
   */
  variantConfig?: LoggingVariantConfig;
};

/**
 * Describes the message google.container.v1.NodePoolLoggingConfig.
 * Use `create(NodePoolLoggingConfigSchema)` to create a new message.
 */
export const NodePoolLoggingConfigSchema: GenMessage<NodePoolLoggingConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 154);

/**
 * LoggingVariantConfig specifies the behaviour of the logging component.
 *
 * @generated from message google.container.v1.LoggingVariantConfig
 */
export type LoggingVariantConfig = Message<"google.container.v1.LoggingVariantConfig"> & {
  /**
   * Logging variant deployed on nodes.
   *
   * @generated from field: google.container.v1.LoggingVariantConfig.Variant variant = 1;
   */
  variant: LoggingVariantConfig_Variant;
};

/**
 * Describes the message google.container.v1.LoggingVariantConfig.
 * Use `create(LoggingVariantConfigSchema)` to create a new message.
 */
export const LoggingVariantConfigSchema: GenMessage<LoggingVariantConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 155);

/**
 * Logging component variants.
 *
 * @generated from enum google.container.v1.LoggingVariantConfig.Variant
 */
export enum LoggingVariantConfig_Variant {
  /**
   * Default value. This shouldn't be used.
   *
   * @generated from enum value: VARIANT_UNSPECIFIED = 0;
   */
  VARIANT_UNSPECIFIED = 0,

  /**
   * default logging variant.
   *
   * @generated from enum value: DEFAULT = 1;
   */
  DEFAULT = 1,

  /**
   * maximum logging throughput variant.
   *
   * @generated from enum value: MAX_THROUGHPUT = 2;
   */
  MAX_THROUGHPUT = 2,
}

/**
 * Describes the enum google.container.v1.LoggingVariantConfig.Variant.
 */
export const LoggingVariantConfig_VariantSchema: GenEnum<LoggingVariantConfig_Variant> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 155, 0);

/**
 * MonitoringComponentConfig is cluster monitoring component configuration.
 *
 * @generated from message google.container.v1.MonitoringComponentConfig
 */
export type MonitoringComponentConfig = Message<"google.container.v1.MonitoringComponentConfig"> & {
  /**
   * Select components to collect metrics. An empty set would disable all
   * monitoring.
   *
   * @generated from field: repeated google.container.v1.MonitoringComponentConfig.Component enable_components = 1;
   */
  enableComponents: MonitoringComponentConfig_Component[];
};

/**
 * Describes the message google.container.v1.MonitoringComponentConfig.
 * Use `create(MonitoringComponentConfigSchema)` to create a new message.
 */
export const MonitoringComponentConfigSchema: GenMessage<MonitoringComponentConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 156);

/**
 * GKE components exposing metrics
 *
 * @generated from enum google.container.v1.MonitoringComponentConfig.Component
 */
export enum MonitoringComponentConfig_Component {
  /**
   * Default value. This shouldn't be used.
   *
   * @generated from enum value: COMPONENT_UNSPECIFIED = 0;
   */
  COMPONENT_UNSPECIFIED = 0,

  /**
   * system components
   *
   * @generated from enum value: SYSTEM_COMPONENTS = 1;
   */
  SYSTEM_COMPONENTS = 1,

  /**
   * kube-apiserver
   *
   * @generated from enum value: APISERVER = 3;
   */
  APISERVER = 3,

  /**
   * kube-scheduler
   *
   * @generated from enum value: SCHEDULER = 4;
   */
  SCHEDULER = 4,

  /**
   * kube-controller-manager
   *
   * @generated from enum value: CONTROLLER_MANAGER = 5;
   */
  CONTROLLER_MANAGER = 5,

  /**
   * Storage
   *
   * @generated from enum value: STORAGE = 7;
   */
  STORAGE = 7,

  /**
   * Horizontal Pod Autoscaling
   *
   * @generated from enum value: HPA = 8;
   */
  HPA = 8,

  /**
   * Pod
   *
   * @generated from enum value: POD = 9;
   */
  POD = 9,

  /**
   * DaemonSet
   *
   * @generated from enum value: DAEMONSET = 10;
   */
  DAEMONSET = 10,

  /**
   * Deployment
   *
   * @generated from enum value: DEPLOYMENT = 11;
   */
  DEPLOYMENT = 11,

  /**
   * Statefulset
   *
   * @generated from enum value: STATEFULSET = 12;
   */
  STATEFULSET = 12,

  /**
   * CADVISOR
   *
   * @generated from enum value: CADVISOR = 13;
   */
  CADVISOR = 13,

  /**
   * KUBELET
   *
   * @generated from enum value: KUBELET = 14;
   */
  KUBELET = 14,

  /**
   * NVIDIA Data Center GPU Manager (DCGM)
   *
   * @generated from enum value: DCGM = 15;
   */
  DCGM = 15,
}

/**
 * Describes the enum google.container.v1.MonitoringComponentConfig.Component.
 */
export const MonitoringComponentConfig_ComponentSchema: GenEnum<MonitoringComponentConfig_Component> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 156, 0);

/**
 * ManagedPrometheusConfig defines the configuration for
 * Google Cloud Managed Service for Prometheus.
 *
 * @generated from message google.container.v1.ManagedPrometheusConfig
 */
export type ManagedPrometheusConfig = Message<"google.container.v1.ManagedPrometheusConfig"> & {
  /**
   * Enable Managed Collection.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1.ManagedPrometheusConfig.
 * Use `create(ManagedPrometheusConfigSchema)` to create a new message.
 */
export const ManagedPrometheusConfigSchema: GenMessage<ManagedPrometheusConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 157);

/**
 * Fleet is the fleet configuration for the cluster.
 *
 * @generated from message google.container.v1.Fleet
 */
export type Fleet = Message<"google.container.v1.Fleet"> & {
  /**
   * The Fleet host project(project ID or project number) where this cluster
   * will be registered to. This field cannot be changed after the cluster has
   * been registered.
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Output only. The full resource name of the registered fleet membership of
   * the cluster, in the format
   * `//gkehub.googleapis.com/projects/*\/locations/*\/memberships/*`.
   *
   * @generated from field: string membership = 2;
   */
  membership: string;

  /**
   * Output only. Whether the cluster has been registered through the fleet
   * API.
   *
   * @generated from field: bool pre_registered = 3;
   */
  preRegistered: boolean;
};

/**
 * Describes the message google.container.v1.Fleet.
 * Use `create(FleetSchema)` to create a new message.
 */
export const FleetSchema: GenMessage<Fleet> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 158);

/**
 * LocalNvmeSsdBlockConfig contains configuration for using raw-block local
 * NVMe SSDs
 *
 * @generated from message google.container.v1.LocalNvmeSsdBlockConfig
 */
export type LocalNvmeSsdBlockConfig = Message<"google.container.v1.LocalNvmeSsdBlockConfig"> & {
  /**
   * Number of local NVMe SSDs to use.  The limit for this value is dependent
   * upon the maximum number of disk available on a machine per zone. See:
   * https://cloud.google.com/compute/docs/disks/local-ssd
   * for more information.
   *
   * A zero (or unset) value has different meanings depending on machine type
   * being used:
   * 1. For pre-Gen3 machines, which support flexible numbers of local ssds,
   * zero (or unset) means to disable using local SSDs as ephemeral storage.
   * 2. For Gen3 machines which dictate a specific number of local ssds, zero
   * (or unset) means to use the default number of local ssds that goes with
   * that machine type. For example, for a c3-standard-8-lssd machine, 2 local
   * ssds would be provisioned. For c3-standard-8 (which doesn't support local
   * ssds), 0 will be provisioned. See
   * https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds
   * for more info.
   *
   * @generated from field: int32 local_ssd_count = 1;
   */
  localSsdCount: number;
};

/**
 * Describes the message google.container.v1.LocalNvmeSsdBlockConfig.
 * Use `create(LocalNvmeSsdBlockConfigSchema)` to create a new message.
 */
export const LocalNvmeSsdBlockConfigSchema: GenMessage<LocalNvmeSsdBlockConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 159);

/**
 * EphemeralStorageLocalSsdConfig contains configuration for the node ephemeral
 * storage using Local SSDs.
 *
 * @generated from message google.container.v1.EphemeralStorageLocalSsdConfig
 */
export type EphemeralStorageLocalSsdConfig = Message<"google.container.v1.EphemeralStorageLocalSsdConfig"> & {
  /**
   * Number of local SSDs to use to back ephemeral storage. Uses NVMe
   * interfaces.
   *
   * A zero (or unset) value has different meanings depending on machine type
   * being used:
   * 1. For pre-Gen3 machines, which support flexible numbers of local ssds,
   * zero (or unset) means to disable using local SSDs as ephemeral storage. The
   * limit for this value is dependent upon the maximum number of disk
   * available on a machine per zone. See:
   * https://cloud.google.com/compute/docs/disks/local-ssd
   * for more information.
   * 2. For Gen3 machines which dictate a specific number of local ssds, zero
   * (or unset) means to use the default number of local ssds that goes with
   * that machine type. For example, for a c3-standard-8-lssd machine, 2 local
   * ssds would be provisioned. For c3-standard-8 (which doesn't support local
   * ssds), 0 will be provisioned. See
   * https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds
   * for more info.
   *
   * @generated from field: int32 local_ssd_count = 1;
   */
  localSsdCount: number;
};

/**
 * Describes the message google.container.v1.EphemeralStorageLocalSsdConfig.
 * Use `create(EphemeralStorageLocalSsdConfigSchema)` to create a new message.
 */
export const EphemeralStorageLocalSsdConfigSchema: GenMessage<EphemeralStorageLocalSsdConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 160);

/**
 * A map of resource manager tag keys and values to be attached to the nodes
 * for managing Compute Engine firewalls using Network Firewall Policies.
 * Tags must be according to specifications in
 * https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications.
 * A maximum of 5 tag key-value pairs can be specified.
 * Existing tags will be replaced with new values.
 *
 * @generated from message google.container.v1.ResourceManagerTags
 */
export type ResourceManagerTags = Message<"google.container.v1.ResourceManagerTags"> & {
  /**
   * TagKeyValue must be in one of the following formats ([KEY]=[VALUE])
   * 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}`
   * 2. `{org_id}/{tag_key_name}={tag_value_name}`
   * 3. `{project_id}/{tag_key_name}={tag_value_name}`
   *
   * @generated from field: map<string, string> tags = 1;
   */
  tags: { [key: string]: string };
};

/**
 * Describes the message google.container.v1.ResourceManagerTags.
 * Use `create(ResourceManagerTagsSchema)` to create a new message.
 */
export const ResourceManagerTagsSchema: GenMessage<ResourceManagerTags> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 161);

/**
 * EnterpriseConfig is the cluster enterprise configuration.
 *
 * @generated from message google.container.v1.EnterpriseConfig
 */
export type EnterpriseConfig = Message<"google.container.v1.EnterpriseConfig"> & {
  /**
   * Output only. cluster_tier specifies the premium tier of the cluster.
   *
   * @generated from field: google.container.v1.EnterpriseConfig.ClusterTier cluster_tier = 1;
   */
  clusterTier: EnterpriseConfig_ClusterTier;
};

/**
 * Describes the message google.container.v1.EnterpriseConfig.
 * Use `create(EnterpriseConfigSchema)` to create a new message.
 */
export const EnterpriseConfigSchema: GenMessage<EnterpriseConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 162);

/**
 * Premium tiers for GKE Cluster.
 *
 * @generated from enum google.container.v1.EnterpriseConfig.ClusterTier
 */
export enum EnterpriseConfig_ClusterTier {
  /**
   * CLUSTER_TIER_UNSPECIFIED is when cluster_tier is not set.
   *
   * @generated from enum value: CLUSTER_TIER_UNSPECIFIED = 0;
   */
  CLUSTER_TIER_UNSPECIFIED = 0,

  /**
   * STANDARD indicates a standard GKE cluster.
   *
   * @generated from enum value: STANDARD = 1;
   */
  STANDARD = 1,

  /**
   * ENTERPRISE indicates a GKE Enterprise cluster.
   *
   * @generated from enum value: ENTERPRISE = 2;
   */
  ENTERPRISE = 2,
}

/**
 * Describes the enum google.container.v1.EnterpriseConfig.ClusterTier.
 */
export const EnterpriseConfig_ClusterTierSchema: GenEnum<EnterpriseConfig_ClusterTier> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 162, 0);

/**
 * SecondaryBootDisk represents a persistent disk attached to a node
 * with special configurations based on its mode.
 *
 * @generated from message google.container.v1.SecondaryBootDisk
 */
export type SecondaryBootDisk = Message<"google.container.v1.SecondaryBootDisk"> & {
  /**
   * Disk mode (container image cache, etc.)
   *
   * @generated from field: google.container.v1.SecondaryBootDisk.Mode mode = 1;
   */
  mode: SecondaryBootDisk_Mode;

  /**
   * Fully-qualified resource ID for an existing disk image.
   *
   * @generated from field: string disk_image = 2;
   */
  diskImage: string;
};

/**
 * Describes the message google.container.v1.SecondaryBootDisk.
 * Use `create(SecondaryBootDiskSchema)` to create a new message.
 */
export const SecondaryBootDiskSchema: GenMessage<SecondaryBootDisk> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 163);

/**
 * Mode specifies how the secondary boot disk will be used.
 * This triggers mode-specified logic in the control plane.
 *
 * @generated from enum google.container.v1.SecondaryBootDisk.Mode
 */
export enum SecondaryBootDisk_Mode {
  /**
   * MODE_UNSPECIFIED is when mode is not set.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * CONTAINER_IMAGE_CACHE is for using the secondary boot disk as
   * a container image cache.
   *
   * @generated from enum value: CONTAINER_IMAGE_CACHE = 1;
   */
  CONTAINER_IMAGE_CACHE = 1,
}

/**
 * Describes the enum google.container.v1.SecondaryBootDisk.Mode.
 */
export const SecondaryBootDisk_ModeSchema: GenEnum<SecondaryBootDisk_Mode> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 163, 0);

/**
 * SecondaryBootDiskUpdateStrategy is a placeholder which will be extended
 * in the future to define different options for updating secondary boot disks.
 *
 * @generated from message google.container.v1.SecondaryBootDiskUpdateStrategy
 */
export type SecondaryBootDiskUpdateStrategy = Message<"google.container.v1.SecondaryBootDiskUpdateStrategy"> & {
};

/**
 * Describes the message google.container.v1.SecondaryBootDiskUpdateStrategy.
 * Use `create(SecondaryBootDiskUpdateStrategySchema)` to create a new message.
 */
export const SecondaryBootDiskUpdateStrategySchema: GenMessage<SecondaryBootDiskUpdateStrategy> = /*@__PURE__*/
  messageDesc(file_google_container_v1_cluster_service, 164);

/**
 * PrivateIPv6GoogleAccess controls whether and how the pods can communicate
 * with Google Services through gRPC over IPv6.
 *
 * @generated from enum google.container.v1.PrivateIPv6GoogleAccess
 */
export enum PrivateIPv6GoogleAccess {
  /**
   * Default value. Same as DISABLED
   *
   * @generated from enum value: PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED = 0;
   */
  PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED = 0,

  /**
   * No private access to or from Google Services
   *
   * @generated from enum value: PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED = 1;
   */
  PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED = 1,

  /**
   * Enables private IPv6 access to Google Services from GKE
   *
   * @generated from enum value: PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE = 2;
   */
  PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE = 2,

  /**
   * Enables private IPv6 access to and from Google Services
   *
   * @generated from enum value: PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL = 3;
   */
  PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL = 3,
}

/**
 * Describes the enum google.container.v1.PrivateIPv6GoogleAccess.
 */
export const PrivateIPv6GoogleAccessSchema: GenEnum<PrivateIPv6GoogleAccess> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 0);

/**
 * UpgradeResourceType is the resource type that is upgrading. It is used
 * in upgrade notifications.
 *
 * @generated from enum google.container.v1.UpgradeResourceType
 */
export enum UpgradeResourceType {
  /**
   * Default value. This shouldn't be used.
   *
   * @generated from enum value: UPGRADE_RESOURCE_TYPE_UNSPECIFIED = 0;
   */
  UPGRADE_RESOURCE_TYPE_UNSPECIFIED = 0,

  /**
   * Master / control plane
   *
   * @generated from enum value: MASTER = 1;
   */
  MASTER = 1,

  /**
   * Node pool
   *
   * @generated from enum value: NODE_POOL = 2;
   */
  NODE_POOL = 2,
}

/**
 * Describes the enum google.container.v1.UpgradeResourceType.
 */
export const UpgradeResourceTypeSchema: GenEnum<UpgradeResourceType> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 1);

/**
 * The datapath provider selects the implementation of the Kubernetes networking
 * model for service resolution and network policy enforcement.
 *
 * @generated from enum google.container.v1.DatapathProvider
 */
export enum DatapathProvider {
  /**
   * Default value.
   *
   * @generated from enum value: DATAPATH_PROVIDER_UNSPECIFIED = 0;
   */
  DATAPATH_PROVIDER_UNSPECIFIED = 0,

  /**
   * Use the IPTables implementation based on kube-proxy.
   *
   * @generated from enum value: LEGACY_DATAPATH = 1;
   */
  LEGACY_DATAPATH = 1,

  /**
   * Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE
   * Dataplane V2
   * documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2)
   * for more.
   *
   * @generated from enum value: ADVANCED_DATAPATH = 2;
   */
  ADVANCED_DATAPATH = 2,
}

/**
 * Describes the enum google.container.v1.DatapathProvider.
 */
export const DatapathProviderSchema: GenEnum<DatapathProvider> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 2);

/**
 * Strategy used for node pool update.
 *
 * @generated from enum google.container.v1.NodePoolUpdateStrategy
 */
export enum NodePoolUpdateStrategy {
  /**
   * Default value if unset. GKE internally defaults the update strategy to
   * SURGE for unspecified strategies.
   *
   * @generated from enum value: NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED = 0;
   */
  NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED = 0,

  /**
   * blue-green upgrade.
   *
   * @generated from enum value: BLUE_GREEN = 2;
   */
  BLUE_GREEN = 2,

  /**
   * SURGE is the traditional way of upgrade a node pool.
   * max_surge and max_unavailable determines the level of upgrade parallelism.
   *
   * @generated from enum value: SURGE = 3;
   */
  SURGE = 3,
}

/**
 * Describes the enum google.container.v1.NodePoolUpdateStrategy.
 */
export const NodePoolUpdateStrategySchema: GenEnum<NodePoolUpdateStrategy> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 3);

/**
 * Possible values for IP stack type
 *
 * @generated from enum google.container.v1.StackType
 */
export enum StackType {
  /**
   * Default value, will be defaulted as IPV4 only
   *
   * @generated from enum value: STACK_TYPE_UNSPECIFIED = 0;
   */
  STACK_TYPE_UNSPECIFIED = 0,

  /**
   * Cluster is IPV4 only
   *
   * @generated from enum value: IPV4 = 1;
   */
  IPV4 = 1,

  /**
   * Cluster can use both IPv4 and IPv6
   *
   * @generated from enum value: IPV4_IPV6 = 2;
   */
  IPV4_IPV6 = 2,
}

/**
 * Describes the enum google.container.v1.StackType.
 */
export const StackTypeSchema: GenEnum<StackType> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 4);

/**
 * Possible values for IPv6 access type
 *
 * @generated from enum google.container.v1.IPv6AccessType
 */
export enum IPv6AccessType {
  /**
   * Default value, will be defaulted as type external.
   *
   * @generated from enum value: IPV6_ACCESS_TYPE_UNSPECIFIED = 0;
   */
  IPV6_ACCESS_TYPE_UNSPECIFIED = 0,

  /**
   * Access type internal (all v6 addresses are internal IPs)
   *
   * @generated from enum value: INTERNAL = 1;
   */
  INTERNAL = 1,

  /**
   * Access type external (all v6 addresses are external IPs)
   *
   * @generated from enum value: EXTERNAL = 2;
   */
  EXTERNAL = 2,
}

/**
 * Describes the enum google.container.v1.IPv6AccessType.
 */
export const IPv6AccessTypeSchema: GenEnum<IPv6AccessType> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 5);

/**
 * Options for in-transit encryption.
 *
 * @generated from enum google.container.v1.InTransitEncryptionConfig
 */
export enum InTransitEncryptionConfig {
  /**
   * Unspecified, will be inferred as default -
   * IN_TRANSIT_ENCRYPTION_UNSPECIFIED.
   *
   * @generated from enum value: IN_TRANSIT_ENCRYPTION_CONFIG_UNSPECIFIED = 0;
   */
  IN_TRANSIT_ENCRYPTION_CONFIG_UNSPECIFIED = 0,

  /**
   * In-transit encryption is disabled.
   *
   * @generated from enum value: IN_TRANSIT_ENCRYPTION_DISABLED = 1;
   */
  IN_TRANSIT_ENCRYPTION_DISABLED = 1,

  /**
   * Data in-transit is encrypted using inter-node transparent encryption.
   *
   * @generated from enum value: IN_TRANSIT_ENCRYPTION_INTER_NODE_TRANSPARENT = 2;
   */
  IN_TRANSIT_ENCRYPTION_INTER_NODE_TRANSPARENT = 2,
}

/**
 * Describes the enum google.container.v1.InTransitEncryptionConfig.
 */
export const InTransitEncryptionConfigSchema: GenEnum<InTransitEncryptionConfig> = /*@__PURE__*/
  enumDesc(file_google_container_v1_cluster_service, 6);

/**
 * Google Kubernetes Engine Cluster Manager v1
 *
 * @generated from service google.container.v1.ClusterManager
 */
export const ClusterManager: GenService<{
  /**
   * Lists all clusters owned by a project in either the specified zone or all
   * zones.
   *
   * @generated from rpc google.container.v1.ClusterManager.ListClusters
   */
  listClusters: {
    methodKind: "unary";
    input: typeof ListClustersRequestSchema;
    output: typeof ListClustersResponseSchema;
  },
  /**
   * Gets the details of a specific cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.GetCluster
   */
  getCluster: {
    methodKind: "unary";
    input: typeof GetClusterRequestSchema;
    output: typeof ClusterSchema;
  },
  /**
   * Creates a cluster, consisting of the specified number and type of Google
   * Compute Engine instances.
   *
   * By default, the cluster is created in the project's
   * [default
   * network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks).
   *
   * One firewall is added for the cluster. After cluster creation,
   * the Kubelet creates routes for each node to allow the containers
   * on that node to communicate with all other instances in the
   * cluster.
   *
   * Finally, an entry is added to the project's global metadata indicating
   * which CIDR range the cluster is using.
   *
   * @generated from rpc google.container.v1.ClusterManager.CreateCluster
   */
  createCluster: {
    methodKind: "unary";
    input: typeof CreateClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the settings of a specific cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.UpdateCluster
   */
  updateCluster: {
    methodKind: "unary";
    input: typeof UpdateClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the version and/or image type for the specified node pool.
   *
   * @generated from rpc google.container.v1.ClusterManager.UpdateNodePool
   */
  updateNodePool: {
    methodKind: "unary";
    input: typeof UpdateNodePoolRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the autoscaling settings for the specified node pool.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetNodePoolAutoscaling
   */
  setNodePoolAutoscaling: {
    methodKind: "unary";
    input: typeof SetNodePoolAutoscalingRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the logging service for a specific cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetLoggingService
   */
  setLoggingService: {
    methodKind: "unary";
    input: typeof SetLoggingServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the monitoring service for a specific cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetMonitoringService
   */
  setMonitoringService: {
    methodKind: "unary";
    input: typeof SetMonitoringServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the addons for a specific cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetAddonsConfig
   */
  setAddonsConfig: {
    methodKind: "unary";
    input: typeof SetAddonsConfigRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the locations for a specific cluster.
   * Deprecated. Use
   * [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/update)
   * instead.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetLocations
   * @deprecated
   */
  setLocations: {
    methodKind: "unary";
    input: typeof SetLocationsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the master for a specific cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.UpdateMaster
   */
  updateMaster: {
    methodKind: "unary";
    input: typeof UpdateMasterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets master auth materials. Currently supports changing the admin password
   * or a specific cluster, either via password generation or explicitly setting
   * the password.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetMasterAuth
   */
  setMasterAuth: {
    methodKind: "unary";
    input: typeof SetMasterAuthRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes the cluster, including the Kubernetes endpoint and all worker
   * nodes.
   *
   * Firewalls and routes that were configured during cluster creation
   * are also deleted.
   *
   * Other Google Compute Engine resources that might be in use by the cluster,
   * such as load balancer resources, are not deleted if they weren't present
   * when the cluster was initially created.
   *
   * @generated from rpc google.container.v1.ClusterManager.DeleteCluster
   */
  deleteCluster: {
    methodKind: "unary";
    input: typeof DeleteClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists all operations in a project in a specific zone or all zones.
   *
   * @generated from rpc google.container.v1.ClusterManager.ListOperations
   */
  listOperations: {
    methodKind: "unary";
    input: typeof ListOperationsRequestSchema;
    output: typeof ListOperationsResponseSchema;
  },
  /**
   * Gets the specified operation.
   *
   * @generated from rpc google.container.v1.ClusterManager.GetOperation
   */
  getOperation: {
    methodKind: "unary";
    input: typeof GetOperationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Cancels the specified operation.
   *
   * @generated from rpc google.container.v1.ClusterManager.CancelOperation
   */
  cancelOperation: {
    methodKind: "unary";
    input: typeof CancelOperationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Returns configuration info about the Google Kubernetes Engine service.
   *
   * @generated from rpc google.container.v1.ClusterManager.GetServerConfig
   */
  getServerConfig: {
    methodKind: "unary";
    input: typeof GetServerConfigRequestSchema;
    output: typeof ServerConfigSchema;
  },
  /**
   * Gets the public component of the cluster signing keys in
   * JSON Web Key format.
   *
   * @generated from rpc google.container.v1.ClusterManager.GetJSONWebKeys
   */
  getJSONWebKeys: {
    methodKind: "unary";
    input: typeof GetJSONWebKeysRequestSchema;
    output: typeof GetJSONWebKeysResponseSchema;
  },
  /**
   * Lists the node pools for a cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.ListNodePools
   */
  listNodePools: {
    methodKind: "unary";
    input: typeof ListNodePoolsRequestSchema;
    output: typeof ListNodePoolsResponseSchema;
  },
  /**
   * Retrieves the requested node pool.
   *
   * @generated from rpc google.container.v1.ClusterManager.GetNodePool
   */
  getNodePool: {
    methodKind: "unary";
    input: typeof GetNodePoolRequestSchema;
    output: typeof NodePoolSchema;
  },
  /**
   * Creates a node pool for a cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.CreateNodePool
   */
  createNodePool: {
    methodKind: "unary";
    input: typeof CreateNodePoolRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a node pool from a cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.DeleteNodePool
   */
  deleteNodePool: {
    methodKind: "unary";
    input: typeof DeleteNodePoolRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * CompleteNodePoolUpgrade will signal an on-going node pool upgrade to
   * complete.
   *
   * @generated from rpc google.container.v1.ClusterManager.CompleteNodePoolUpgrade
   */
  completeNodePoolUpgrade: {
    methodKind: "unary";
    input: typeof CompleteNodePoolUpgradeRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Rolls back a previously Aborted or Failed NodePool upgrade.
   * This makes no changes if the last upgrade successfully completed.
   *
   * @generated from rpc google.container.v1.ClusterManager.RollbackNodePoolUpgrade
   */
  rollbackNodePoolUpgrade: {
    methodKind: "unary";
    input: typeof RollbackNodePoolUpgradeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the NodeManagement options for a node pool.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetNodePoolManagement
   */
  setNodePoolManagement: {
    methodKind: "unary";
    input: typeof SetNodePoolManagementRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets labels on a cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetLabels
   */
  setLabels: {
    methodKind: "unary";
    input: typeof SetLabelsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Enables or disables the ABAC authorization mechanism on a cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetLegacyAbac
   */
  setLegacyAbac: {
    methodKind: "unary";
    input: typeof SetLegacyAbacRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Starts master IP rotation.
   *
   * @generated from rpc google.container.v1.ClusterManager.StartIPRotation
   */
  startIPRotation: {
    methodKind: "unary";
    input: typeof StartIPRotationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Completes master IP rotation.
   *
   * @generated from rpc google.container.v1.ClusterManager.CompleteIPRotation
   */
  completeIPRotation: {
    methodKind: "unary";
    input: typeof CompleteIPRotationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the size for a specific node pool. The new size will be used for all
   * replicas, including future replicas created by modifying
   * [NodePool.locations][google.container.v1.NodePool.locations].
   *
   * @generated from rpc google.container.v1.ClusterManager.SetNodePoolSize
   */
  setNodePoolSize: {
    methodKind: "unary";
    input: typeof SetNodePoolSizeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Enables or disables Network Policy for a cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetNetworkPolicy
   */
  setNetworkPolicy: {
    methodKind: "unary";
    input: typeof SetNetworkPolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the maintenance policy for a cluster.
   *
   * @generated from rpc google.container.v1.ClusterManager.SetMaintenancePolicy
   */
  setMaintenancePolicy: {
    methodKind: "unary";
    input: typeof SetMaintenancePolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists subnetworks that are usable for creating clusters in a project.
   *
   * @generated from rpc google.container.v1.ClusterManager.ListUsableSubnetworks
   */
  listUsableSubnetworks: {
    methodKind: "unary";
    input: typeof ListUsableSubnetworksRequestSchema;
    output: typeof ListUsableSubnetworksResponseSchema;
  },
  /**
   * Checks the cluster compatibility with Autopilot mode, and returns a list of
   * compatibility issues.
   *
   * @generated from rpc google.container.v1.ClusterManager.CheckAutopilotCompatibility
   */
  checkAutopilotCompatibility: {
    methodKind: "unary";
    input: typeof CheckAutopilotCompatibilityRequestSchema;
    output: typeof CheckAutopilotCompatibilityResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_container_v1_cluster_service, 0);

