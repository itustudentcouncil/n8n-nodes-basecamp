// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/container/v1alpha1/cluster_service.proto (package google.container.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/container/v1alpha1/cluster_service.proto.
 */
export const file_google_container_v1alpha1_cluster_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_protobuf_empty]);

/**
 * Parameters that describe the nodes in a cluster.
 *
 * @generated from message google.container.v1alpha1.NodeConfig
 */
export type NodeConfig = Message<"google.container.v1alpha1.NodeConfig"> & {
  /**
   * The name of a Google Compute Engine [machine
   * type](/compute/docs/machine-types) (e.g.
   * `n1-standard-1`).
   *
   * If unspecified, the default machine type is
   * `n1-standard-1`.
   *
   * @generated from field: string machine_type = 1;
   */
  machineType: string;

  /**
   * Size of the disk attached to each node, specified in GB.
   * The smallest allowed disk size is 10GB.
   *
   * If unspecified, the default disk size is 100GB.
   *
   * @generated from field: int32 disk_size_gb = 2;
   */
  diskSizeGb: number;

  /**
   * The set of Google API scopes to be made available on all of the
   * node VMs under the "default" service account.
   *
   * The following scopes are recommended, but not required, and by default are
   * not included:
   *
   * * `https://www.googleapis.com/auth/compute` is required for mounting
   * persistent storage on your nodes.
   * * `https://www.googleapis.com/auth/devstorage.read_only` is required for
   * communicating with **gcr.io**
   * (the [Google Container Registry](/container-registry/)).
   *
   * If unspecified, no scopes are added, unless Cloud Logging or Cloud
   * Monitoring are enabled, in which case their required scopes will be added.
   *
   * @generated from field: repeated string oauth_scopes = 3;
   */
  oauthScopes: string[];

  /**
   * The Google Cloud Platform Service Account to be used by the node VMs. If
   * no Service Account is specified, the "default" service account is used.
   *
   * @generated from field: string service_account = 9;
   */
  serviceAccount: string;

  /**
   * The metadata key/value pairs assigned to instances in the cluster.
   *
   * Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes
   * in length. These are reflected as part of a URL in the metadata server.
   * Additionally, to avoid ambiguity, keys must not conflict with any other
   * metadata keys for the project or be one of the four reserved keys:
   * "instance-template", "kube-env", "startup-script", and "user-data"
   *
   * Values are free-form strings, and only have meaning as interpreted by
   * the image running in the instance. The only restriction placed on them is
   * that each value's size must be less than or equal to 32 KB.
   *
   * The total size of all keys and values must be less than 512 KB.
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };

  /**
   * The image type to use for this node. Note that for a given image type,
   * the latest version of it will be used.
   *
   * @generated from field: string image_type = 5;
   */
  imageType: string;

  /**
   * The map of Kubernetes labels (key/value pairs) to be applied to each node.
   * These will added in addition to any default label(s) that
   * Kubernetes may apply to the node.
   * In case of conflict in label keys, the applied set may differ depending on
   * the Kubernetes version -- it's best to assume the behavior is undefined
   * and conflicts should be avoided.
   * For more information, including usage and the valid values, see:
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };

  /**
   * The number of local SSD disks to be attached to the node.
   *
   * The limit for this value is dependant upon the maximum number of
   * disks available on a machine per zone. See:
   * https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits
   * for more information.
   *
   * @generated from field: int32 local_ssd_count = 7;
   */
  localSsdCount: number;

  /**
   * The list of instance tags applied to all nodes. Tags are used to identify
   * valid sources or targets for network firewalls and are specified by
   * the client during cluster or node pool creation. Each tag within the list
   * must comply with RFC1035.
   *
   * @generated from field: repeated string tags = 8;
   */
  tags: string[];

  /**
   * Whether the nodes are created as preemptible VM instances. See:
   * https://cloud.google.com/compute/docs/instances/preemptible for more
   * inforamtion about preemptible VM instances.
   *
   * @generated from field: bool preemptible = 10;
   */
  preemptible: boolean;

  /**
   * A list of hardware accelerators to be attached to each node.
   * See https://cloud.google.com/compute/docs/gpus for more information about
   * support for GPUs.
   *
   * @generated from field: repeated google.container.v1alpha1.AcceleratorConfig accelerators = 11;
   */
  accelerators: AcceleratorConfig[];

  /**
   * Minimum CPU platform to be used by this instance. The instance may be
   * scheduled on the specified or newer CPU platform. Applicable values are the
   * friendly names of CPU platforms, such as
   * <code>minCpuPlatform: &quot;Intel Haswell&quot;</code> or
   * <code>minCpuPlatform: &quot;Intel Sandy Bridge&quot;</code>. For more
   * information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
   *
   * @generated from field: string min_cpu_platform = 13;
   */
  minCpuPlatform: string;

  /**
   * List of kubernetes taints to be applied to each node.
   *
   * For more information, including usage and the valid values, see:
   * https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
   *
   * @generated from field: repeated google.container.v1alpha1.NodeTaint taints = 15;
   */
  taints: NodeTaint[];
};

/**
 * Describes the message google.container.v1alpha1.NodeConfig.
 * Use `create(NodeConfigSchema)` to create a new message.
 */
export const NodeConfigSchema: GenMessage<NodeConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 0);

/**
 * Kubernetes taint is comprised of three fields: key, value, and effect. Effect
 * can only be one of three types:  NoSchedule, PreferNoSchedule or NoExecute.
 *
 * For more information, including usage and the valid values, see:
 * https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
 *
 * @generated from message google.container.v1alpha1.NodeTaint
 */
export type NodeTaint = Message<"google.container.v1alpha1.NodeTaint"> & {
  /**
   * Key for taint.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Value for taint.
   *
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * Effect for taint.
   *
   * @generated from field: google.container.v1alpha1.NodeTaint.Effect effect = 3;
   */
  effect: NodeTaint_Effect;
};

/**
 * Describes the message google.container.v1alpha1.NodeTaint.
 * Use `create(NodeTaintSchema)` to create a new message.
 */
export const NodeTaintSchema: GenMessage<NodeTaint> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 1);

/**
 * Possible values for Effect in taint.
 *
 * @generated from enum google.container.v1alpha1.NodeTaint.Effect
 */
export enum NodeTaint_Effect {
  /**
   * Not set
   *
   * @generated from enum value: EFFECT_UNSPECIFIED = 0;
   */
  EFFECT_UNSPECIFIED = 0,

  /**
   * NoSchedule
   *
   * @generated from enum value: NO_SCHEDULE = 1;
   */
  NO_SCHEDULE = 1,

  /**
   * PreferNoSchedule
   *
   * @generated from enum value: PREFER_NO_SCHEDULE = 2;
   */
  PREFER_NO_SCHEDULE = 2,

  /**
   * NoExecute
   *
   * @generated from enum value: NO_EXECUTE = 3;
   */
  NO_EXECUTE = 3,
}

/**
 * Describes the enum google.container.v1alpha1.NodeTaint.Effect.
 */
export const NodeTaint_EffectSchema: GenEnum<NodeTaint_Effect> = /*@__PURE__*/
  enumDesc(file_google_container_v1alpha1_cluster_service, 1, 0);

/**
 * The authentication information for accessing the master endpoint.
 * Authentication can be done using HTTP basic auth or using client
 * certificates.
 *
 * @generated from message google.container.v1alpha1.MasterAuth
 */
export type MasterAuth = Message<"google.container.v1alpha1.MasterAuth"> & {
  /**
   * The username to use for HTTP basic authentication to the master endpoint.
   * For clusters v1.6.0 and later, you can disable basic authentication by
   * providing an empty username.
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * The password to use for HTTP basic authentication to the master endpoint.
   * Because the master endpoint is open to the Internet, you should create a
   * strong password.  If a password is provided for cluster creation, username
   * must be non-empty.
   *
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * Configuration for client certificate authentication on the cluster.  If no
   * configuration is specified, a client certificate is issued.
   *
   * @generated from field: google.container.v1alpha1.ClientCertificateConfig client_certificate_config = 3;
   */
  clientCertificateConfig?: ClientCertificateConfig;

  /**
   * [Output only] Base64-encoded public certificate that is the root of
   * trust for the cluster.
   *
   * @generated from field: string cluster_ca_certificate = 100;
   */
  clusterCaCertificate: string;

  /**
   * [Output only] Base64-encoded public certificate used by clients to
   * authenticate to the cluster endpoint.
   *
   * @generated from field: string client_certificate = 101;
   */
  clientCertificate: string;

  /**
   * [Output only] Base64-encoded private key used by clients to authenticate
   * to the cluster endpoint.
   *
   * @generated from field: string client_key = 102;
   */
  clientKey: string;
};

/**
 * Describes the message google.container.v1alpha1.MasterAuth.
 * Use `create(MasterAuthSchema)` to create a new message.
 */
export const MasterAuthSchema: GenMessage<MasterAuth> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 2);

/**
 * Configuration for client certificates on the cluster.
 *
 * @generated from message google.container.v1alpha1.ClientCertificateConfig
 */
export type ClientCertificateConfig = Message<"google.container.v1alpha1.ClientCertificateConfig"> & {
  /**
   * Issue a client certificate.
   *
   * @generated from field: bool issue_client_certificate = 1;
   */
  issueClientCertificate: boolean;
};

/**
 * Describes the message google.container.v1alpha1.ClientCertificateConfig.
 * Use `create(ClientCertificateConfigSchema)` to create a new message.
 */
export const ClientCertificateConfigSchema: GenMessage<ClientCertificateConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 3);

/**
 * Configuration for the addons that can be automatically spun up in the
 * cluster, enabling additional functionality.
 *
 * @generated from message google.container.v1alpha1.AddonsConfig
 */
export type AddonsConfig = Message<"google.container.v1alpha1.AddonsConfig"> & {
  /**
   * Configuration for the HTTP (L7) load balancing controller addon, which
   * makes it easy to set up HTTP load balancers for services in a cluster.
   *
   * @generated from field: google.container.v1alpha1.HttpLoadBalancing http_load_balancing = 1;
   */
  httpLoadBalancing?: HttpLoadBalancing;

  /**
   * Configuration for the horizontal pod autoscaling feature, which
   * increases or decreases the number of replica pods a replication controller
   * has based on the resource usage of the existing pods.
   *
   * @generated from field: google.container.v1alpha1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
   */
  horizontalPodAutoscaling?: HorizontalPodAutoscaling;

  /**
   * Configuration for the Kubernetes Dashboard.
   *
   * @generated from field: google.container.v1alpha1.KubernetesDashboard kubernetes_dashboard = 3;
   */
  kubernetesDashboard?: KubernetesDashboard;

  /**
   * Configuration for NetworkPolicy. This only tracks whether the addon
   * is enabled or not on the Master, it does not track whether network policy
   * is enabled for the nodes.
   *
   * @generated from field: google.container.v1alpha1.NetworkPolicyConfig network_policy_config = 4;
   */
  networkPolicyConfig?: NetworkPolicyConfig;
};

/**
 * Describes the message google.container.v1alpha1.AddonsConfig.
 * Use `create(AddonsConfigSchema)` to create a new message.
 */
export const AddonsConfigSchema: GenMessage<AddonsConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 4);

/**
 * Configuration options for the HTTP (L7) load balancing controller addon,
 * which makes it easy to set up HTTP load balancers for services in a cluster.
 *
 * @generated from message google.container.v1alpha1.HttpLoadBalancing
 */
export type HttpLoadBalancing = Message<"google.container.v1alpha1.HttpLoadBalancing"> & {
  /**
   * Whether the HTTP Load Balancing controller is enabled in the cluster.
   * When enabled, it runs a small pod in the cluster that manages the load
   * balancers.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;
};

/**
 * Describes the message google.container.v1alpha1.HttpLoadBalancing.
 * Use `create(HttpLoadBalancingSchema)` to create a new message.
 */
export const HttpLoadBalancingSchema: GenMessage<HttpLoadBalancing> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 5);

/**
 * Configuration options for the horizontal pod autoscaling feature, which
 * increases or decreases the number of replica pods a replication controller
 * has based on the resource usage of the existing pods.
 *
 * @generated from message google.container.v1alpha1.HorizontalPodAutoscaling
 */
export type HorizontalPodAutoscaling = Message<"google.container.v1alpha1.HorizontalPodAutoscaling"> & {
  /**
   * Whether the Horizontal Pod Autoscaling feature is enabled in the cluster.
   * When enabled, it ensures that a Heapster pod is running in the cluster,
   * which is also used by the Cloud Monitoring service.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;
};

/**
 * Describes the message google.container.v1alpha1.HorizontalPodAutoscaling.
 * Use `create(HorizontalPodAutoscalingSchema)` to create a new message.
 */
export const HorizontalPodAutoscalingSchema: GenMessage<HorizontalPodAutoscaling> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 6);

/**
 * Configuration for the Kubernetes Dashboard.
 *
 * @generated from message google.container.v1alpha1.KubernetesDashboard
 */
export type KubernetesDashboard = Message<"google.container.v1alpha1.KubernetesDashboard"> & {
  /**
   * Whether the Kubernetes Dashboard is enabled for this cluster.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;
};

/**
 * Describes the message google.container.v1alpha1.KubernetesDashboard.
 * Use `create(KubernetesDashboardSchema)` to create a new message.
 */
export const KubernetesDashboardSchema: GenMessage<KubernetesDashboard> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 7);

/**
 * Configuration for NetworkPolicy. This only tracks whether the addon
 * is enabled or not on the Master, it does not track whether network policy
 * is enabled for the nodes.
 *
 * @generated from message google.container.v1alpha1.NetworkPolicyConfig
 */
export type NetworkPolicyConfig = Message<"google.container.v1alpha1.NetworkPolicyConfig"> & {
  /**
   * Whether NetworkPolicy is enabled for this cluster.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;
};

/**
 * Describes the message google.container.v1alpha1.NetworkPolicyConfig.
 * Use `create(NetworkPolicyConfigSchema)` to create a new message.
 */
export const NetworkPolicyConfigSchema: GenMessage<NetworkPolicyConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 8);

/**
 * Configuration options for the master authorized networks feature. Enabled
 * master authorized networks will disallow all external traffic to access
 * Kubernetes master through HTTPS except traffic from the given CIDR blocks,
 * Google Compute Engine Public IPs and Google Prod IPs.
 *
 * @generated from message google.container.v1alpha1.MasterAuthorizedNetworksConfig
 */
export type MasterAuthorizedNetworksConfig = Message<"google.container.v1alpha1.MasterAuthorizedNetworksConfig"> & {
  /**
   * Whether or not master authorized networks is enabled.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * cidr_blocks define up to 10 external networks that could access
   * Kubernetes master through HTTPS.
   *
   * @generated from field: repeated google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
   */
  cidrBlocks: MasterAuthorizedNetworksConfig_CidrBlock[];
};

/**
 * Describes the message google.container.v1alpha1.MasterAuthorizedNetworksConfig.
 * Use `create(MasterAuthorizedNetworksConfigSchema)` to create a new message.
 */
export const MasterAuthorizedNetworksConfigSchema: GenMessage<MasterAuthorizedNetworksConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 9);

/**
 * CidrBlock contains an optional name and one CIDR block.
 *
 * @generated from message google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock
 */
export type MasterAuthorizedNetworksConfig_CidrBlock = Message<"google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock"> & {
  /**
   * display_name is an optional field for users to identify CIDR blocks.
   *
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * cidr_block must be specified in CIDR notation.
   *
   * @generated from field: string cidr_block = 2;
   */
  cidrBlock: string;
};

/**
 * Describes the message google.container.v1alpha1.MasterAuthorizedNetworksConfig.CidrBlock.
 * Use `create(MasterAuthorizedNetworksConfig_CidrBlockSchema)` to create a new message.
 */
export const MasterAuthorizedNetworksConfig_CidrBlockSchema: GenMessage<MasterAuthorizedNetworksConfig_CidrBlock> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 9, 0);

/**
 * Configuration options for the NetworkPolicy feature.
 * https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
 *
 * @generated from message google.container.v1alpha1.NetworkPolicy
 */
export type NetworkPolicy = Message<"google.container.v1alpha1.NetworkPolicy"> & {
  /**
   * The selected network policy provider.
   *
   * @generated from field: google.container.v1alpha1.NetworkPolicy.Provider provider = 1;
   */
  provider: NetworkPolicy_Provider;

  /**
   * Whether network policy is enabled on the cluster.
   *
   * @generated from field: bool enabled = 2;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1alpha1.NetworkPolicy.
 * Use `create(NetworkPolicySchema)` to create a new message.
 */
export const NetworkPolicySchema: GenMessage<NetworkPolicy> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 10);

/**
 * Allowed Network Policy providers.
 *
 * @generated from enum google.container.v1alpha1.NetworkPolicy.Provider
 */
export enum NetworkPolicy_Provider {
  /**
   * Not set
   *
   * @generated from enum value: PROVIDER_UNSPECIFIED = 0;
   */
  PROVIDER_UNSPECIFIED = 0,

  /**
   * Tigera (Calico Felix).
   *
   * @generated from enum value: CALICO = 1;
   */
  CALICO = 1,
}

/**
 * Describes the enum google.container.v1alpha1.NetworkPolicy.Provider.
 */
export const NetworkPolicy_ProviderSchema: GenEnum<NetworkPolicy_Provider> = /*@__PURE__*/
  enumDesc(file_google_container_v1alpha1_cluster_service, 10, 0);

/**
 * Configuration for controlling how IPs are allocated in the cluster.
 *
 * @generated from message google.container.v1alpha1.IPAllocationPolicy
 */
export type IPAllocationPolicy = Message<"google.container.v1alpha1.IPAllocationPolicy"> & {
  /**
   * Whether alias IPs will be used for pod IPs in the cluster.
   *
   * @generated from field: bool use_ip_aliases = 1;
   */
  useIpAliases: boolean;

  /**
   * Whether a new subnetwork will be created automatically for the cluster.
   *
   * This field is only applicable when `use_ip_aliases` is true.
   *
   * @generated from field: bool create_subnetwork = 2;
   */
  createSubnetwork: boolean;

  /**
   * A custom subnetwork name to be used if `create_subnetwork` is true.  If
   * this field is empty, then an automatic name will be chosen for the new
   * subnetwork.
   *
   * @generated from field: string subnetwork_name = 3;
   */
  subnetworkName: string;

  /**
   * This field is deprecated, use cluster_ipv4_cidr_block.
   *
   * @generated from field: string cluster_ipv4_cidr = 4;
   */
  clusterIpv4Cidr: string;

  /**
   * This field is deprecated, use node_ipv4_cidr_block.
   *
   * @generated from field: string node_ipv4_cidr = 5;
   */
  nodeIpv4Cidr: string;

  /**
   * This field is deprecated, use services_ipv4_cidr_block.
   *
   * @generated from field: string services_ipv4_cidr = 6;
   */
  servicesIpv4Cidr: string;

  /**
   * The name of the secondary range to be used for the cluster CIDR
   * block.  The secondary range will be used for pod IP
   * addresses. This must be an existing secondary range associated
   * with the cluster subnetwork.
   *
   * This field is only applicable if use_ip_aliases is true and
   * create_subnetwork is false.
   *
   * @generated from field: string cluster_secondary_range_name = 7;
   */
  clusterSecondaryRangeName: string;

  /**
   * The name of the secondary range to be used as for the services
   * CIDR block.  The secondary range will be used for service
   * ClusterIPs. This must be an existing secondary range associated
   * with the cluster subnetwork.
   *
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   *
   * @generated from field: string services_secondary_range_name = 8;
   */
  servicesSecondaryRangeName: string;

  /**
   * The IP address range for the cluster pod IPs. If this field is set, then
   * `cluster.cluster_ipv4_cidr` must be left blank.
   *
   * This field is only applicable when `use_ip_aliases` is true.
   *
   * Set to blank to have a range chosen with the default size.
   *
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   *
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   *
   * @generated from field: string cluster_ipv4_cidr_block = 9;
   */
  clusterIpv4CidrBlock: string;

  /**
   * The IP address range of the instance IPs in this cluster.
   *
   * This is applicable only if `create_subnetwork` is true.
   *
   * Set to blank to have a range chosen with the default size.
   *
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   *
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   *
   * @generated from field: string node_ipv4_cidr_block = 10;
   */
  nodeIpv4CidrBlock: string;

  /**
   * The IP address range of the services IPs in this cluster. If blank, a range
   * will be automatically chosen with the default size.
   *
   * This field is only applicable when `use_ip_aliases` is true.
   *
   * Set to blank to have a range chosen with the default size.
   *
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   *
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   *
   * @generated from field: string services_ipv4_cidr_block = 11;
   */
  servicesIpv4CidrBlock: string;
};

/**
 * Describes the message google.container.v1alpha1.IPAllocationPolicy.
 * Use `create(IPAllocationPolicySchema)` to create a new message.
 */
export const IPAllocationPolicySchema: GenMessage<IPAllocationPolicy> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 11);

/**
 * Configuration for the PodSecurityPolicy feature.
 *
 * @generated from message google.container.v1alpha1.PodSecurityPolicyConfig
 */
export type PodSecurityPolicyConfig = Message<"google.container.v1alpha1.PodSecurityPolicyConfig"> & {
  /**
   * Enable the PodSecurityPolicy controller for this cluster. If enabled, pods
   * must be valid under a PodSecurityPolicy to be created.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.container.v1alpha1.PodSecurityPolicyConfig.
 * Use `create(PodSecurityPolicyConfigSchema)` to create a new message.
 */
export const PodSecurityPolicyConfigSchema: GenMessage<PodSecurityPolicyConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 12);

/**
 * A Google Container Engine cluster.
 *
 * @generated from message google.container.v1alpha1.Cluster
 */
export type Cluster = Message<"google.container.v1alpha1.Cluster"> & {
  /**
   * The name of this cluster. The name must be unique within this project
   * and zone, and can be up to 40 characters with the following restrictions:
   *
   * * Lowercase letters, numbers, and hyphens only.
   * * Must start with a letter.
   * * Must end with a number or a letter.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * An optional description of this cluster.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The number of nodes to create in this cluster. You must ensure that your
   * Compute Engine <a href="/compute/docs/resource-quotas">resource quota</a>
   * is sufficient for this number of instances. You must also have available
   * firewall and routes quota.
   * For requests, this field should only be used in lieu of a
   * "node_pool" object, since this configuration (along with the
   * "node_config") will be used to create a "NodePool" object with an
   * auto-generated name. Do not use this and a node_pool at the same time.
   *
   * @generated from field: int32 initial_node_count = 3;
   */
  initialNodeCount: number;

  /**
   * Parameters used in creating the cluster's nodes.
   * See `nodeConfig` for the description of its properties.
   * For requests, this field should only be used in lieu of a
   * "node_pool" object, since this configuration (along with the
   * "initial_node_count") will be used to create a "NodePool" object with an
   * auto-generated name. Do not use this and a node_pool at the same time.
   * For responses, this field will be populated with the node configuration of
   * the first node pool.
   *
   * If unspecified, the defaults are used.
   *
   * @generated from field: google.container.v1alpha1.NodeConfig node_config = 4;
   */
  nodeConfig?: NodeConfig;

  /**
   * The authentication information for accessing the master endpoint.
   *
   * @generated from field: google.container.v1alpha1.MasterAuth master_auth = 5;
   */
  masterAuth?: MasterAuth;

  /**
   * The logging service the cluster should use to write logs.
   * Currently available options:
   *
   * * `logging.googleapis.com` - the Google Cloud Logging service.
   * * `none` - no logs will be exported from the cluster.
   * * if left as an empty string,`logging.googleapis.com` will be used.
   *
   * @generated from field: string logging_service = 6;
   */
  loggingService: string;

  /**
   * The monitoring service the cluster should use to write metrics.
   * Currently available options:
   *
   * * `monitoring.googleapis.com` - the Google Cloud Monitoring service.
   * * `none` - no metrics will be exported from the cluster.
   * * if left as an empty string, `monitoring.googleapis.com` will be used.
   *
   * @generated from field: string monitoring_service = 7;
   */
  monitoringService: string;

  /**
   * The name of the Google Compute Engine
   * [network](/compute/docs/networks-and-firewalls#networks) to which the
   * cluster is connected. If left unspecified, the `default` network
   * will be used.
   *
   * @generated from field: string network = 8;
   */
  network: string;

  /**
   * The IP address range of the container pods in this cluster, in
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`). Leave blank to have
   * one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
   *
   * @generated from field: string cluster_ipv4_cidr = 9;
   */
  clusterIpv4Cidr: string;

  /**
   * Configurations for the various addons available to run in the cluster.
   *
   * @generated from field: google.container.v1alpha1.AddonsConfig addons_config = 10;
   */
  addonsConfig?: AddonsConfig;

  /**
   * The name of the Google Compute Engine
   * [subnetwork](/compute/docs/subnetworks) to which the
   * cluster is connected.
   *
   * @generated from field: string subnetwork = 11;
   */
  subnetwork: string;

  /**
   * The node pools associated with this cluster.
   * This field should not be set if "node_config" or "initial_node_count" are
   * specified.
   *
   * @generated from field: repeated google.container.v1alpha1.NodePool node_pools = 12;
   */
  nodePools: NodePool[];

  /**
   * The list of Google Compute Engine
   * [locations](/compute/docs/zones#available) in which the cluster's nodes
   * should be located.
   *
   * @generated from field: repeated string locations = 13;
   */
  locations: string[];

  /**
   * Kubernetes alpha features are enabled on this cluster. This includes alpha
   * API groups (e.g. v1alpha1) and features that may not be production ready in
   * the kubernetes version of the master and nodes.
   * The cluster has no SLA for uptime and master/node upgrades are disabled.
   * Alpha enabled clusters are automatically deleted thirty days after
   * creation.
   *
   * @generated from field: bool enable_kubernetes_alpha = 14;
   */
  enableKubernetesAlpha: boolean;

  /**
   * Configuration options for the NetworkPolicy feature.
   *
   * @generated from field: google.container.v1alpha1.NetworkPolicy network_policy = 19;
   */
  networkPolicy?: NetworkPolicy;

  /**
   * Configuration for cluster IP allocation.
   *
   * @generated from field: google.container.v1alpha1.IPAllocationPolicy ip_allocation_policy = 20;
   */
  ipAllocationPolicy?: IPAllocationPolicy;

  /**
   * The configuration options for master authorized networks feature.
   *
   * @generated from field: google.container.v1alpha1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
   */
  masterAuthorizedNetworksConfig?: MasterAuthorizedNetworksConfig;

  /**
   * Configure the maintenance policy for this cluster.
   *
   * @generated from field: google.container.v1alpha1.MaintenancePolicy maintenance_policy = 23;
   */
  maintenancePolicy?: MaintenancePolicy;

  /**
   * Configuration for the PodSecurityPolicy feature.
   *
   * @generated from field: google.container.v1alpha1.PodSecurityPolicyConfig pod_security_policy_config = 25;
   */
  podSecurityPolicyConfig?: PodSecurityPolicyConfig;

  /**
   * [Output only] Server-defined URL for the resource.
   *
   * @generated from field: string self_link = 100;
   */
  selfLink: string;

  /**
   * [Output only] The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use location instead.
   *
   * @generated from field: string zone = 101;
   */
  zone: string;

  /**
   * [Output only] The IP address of this cluster's master endpoint.
   * The endpoint can be accessed from the internet at
   * `https://username:password@endpoint/`.
   *
   * See the `masterAuth` property of this resource for username and
   * password information.
   *
   * @generated from field: string endpoint = 102;
   */
  endpoint: string;

  /**
   * The initial Kubernetes version for this cluster.  Valid versions are those
   * found in validMasterVersions returned by getServerConfig.  The version can
   * be upgraded over time; such upgrades are reflected in
   * currentMasterVersion and currentNodeVersion.
   *
   * @generated from field: string initial_cluster_version = 103;
   */
  initialClusterVersion: string;

  /**
   * [Output only] The current software version of the master endpoint.
   *
   * @generated from field: string current_master_version = 104;
   */
  currentMasterVersion: string;

  /**
   * [Output only] The current version of the node software components.
   * If they are currently at multiple versions because they're in the process
   * of being upgraded, this reflects the minimum version of all nodes.
   *
   * @generated from field: string current_node_version = 105;
   */
  currentNodeVersion: string;

  /**
   * [Output only] The time the cluster was created, in
   * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string create_time = 106;
   */
  createTime: string;

  /**
   * [Output only] The current status of this cluster.
   *
   * @generated from field: google.container.v1alpha1.Cluster.Status status = 107;
   */
  status: Cluster_Status;

  /**
   * [Output only] Additional information about the current status of this
   * cluster, if available.
   *
   * @generated from field: string status_message = 108;
   */
  statusMessage: string;

  /**
   * [Output only] The size of the address space on each node for hosting
   * containers. This is provisioned from within the `container_ipv4_cidr`
   * range.
   *
   * @generated from field: int32 node_ipv4_cidr_size = 109;
   */
  nodeIpv4CidrSize: number;

  /**
   * [Output only] The IP address range of the Kubernetes services in
   * this cluster, in
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `1.2.3.4/29`). Service addresses are
   * typically put in the last `/16` from the container CIDR.
   *
   * @generated from field: string services_ipv4_cidr = 110;
   */
  servicesIpv4Cidr: string;

  /**
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * cluster.
   *
   * @generated from field: repeated string instance_group_urls = 111;
   */
  instanceGroupUrls: string[];

  /**
   * [Output only] The number of nodes currently in the cluster.
   *
   * @generated from field: int32 current_node_count = 112;
   */
  currentNodeCount: number;

  /**
   * [Output only] The time the cluster will be automatically
   * deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string expire_time = 113;
   */
  expireTime: string;

  /**
   * [Output only] The name of the Google Compute Engine
   * [zone](/compute/docs/regions-zones/regions-zones#available) or
   * [region](/compute/docs/regions-zones/regions-zones#available) in which
   * the cluster resides.
   *
   * @generated from field: string location = 114;
   */
  location: string;
};

/**
 * Describes the message google.container.v1alpha1.Cluster.
 * Use `create(ClusterSchema)` to create a new message.
 */
export const ClusterSchema: GenMessage<Cluster> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 13);

/**
 * The current status of the cluster.
 *
 * @generated from enum google.container.v1alpha1.Cluster.Status
 */
export enum Cluster_Status {
  /**
   * Not set.
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * The PROVISIONING state indicates the cluster is being created.
   *
   * @generated from enum value: PROVISIONING = 1;
   */
  PROVISIONING = 1,

  /**
   * The RUNNING state indicates the cluster has been created and is fully
   * usable.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The RECONCILING state indicates that some work is actively being done on
   * the cluster, such as upgrading the master or node software. Details can
   * be found in the `statusMessage` field.
   *
   * @generated from enum value: RECONCILING = 3;
   */
  RECONCILING = 3,

  /**
   * The STOPPING state indicates the cluster is being deleted.
   *
   * @generated from enum value: STOPPING = 4;
   */
  STOPPING = 4,

  /**
   * The ERROR state indicates the cluster may be unusable. Details
   * can be found in the `statusMessage` field.
   *
   * @generated from enum value: ERROR = 5;
   */
  ERROR = 5,
}

/**
 * Describes the enum google.container.v1alpha1.Cluster.Status.
 */
export const Cluster_StatusSchema: GenEnum<Cluster_Status> = /*@__PURE__*/
  enumDesc(file_google_container_v1alpha1_cluster_service, 13, 0);

/**
 * ClusterUpdate describes an update to the cluster. Exactly one update can
 * be applied to a cluster with each request, so at most one field can be
 * provided.
 *
 * @generated from message google.container.v1alpha1.ClusterUpdate
 */
export type ClusterUpdate = Message<"google.container.v1alpha1.ClusterUpdate"> & {
  /**
   * The Kubernetes version to change the nodes to (typically an
   * upgrade). Use `-` to upgrade to the latest version supported by
   * the server.
   *
   * @generated from field: string desired_node_version = 4;
   */
  desiredNodeVersion: string;

  /**
   * The monitoring service the cluster should use to write metrics.
   * Currently available options:
   *
   * * "monitoring.googleapis.com" - the Google Cloud Monitoring service
   * * "none" - no metrics will be exported from the cluster
   *
   * @generated from field: string desired_monitoring_service = 5;
   */
  desiredMonitoringService: string;

  /**
   * Configurations for the various addons available to run in the cluster.
   *
   * @generated from field: google.container.v1alpha1.AddonsConfig desired_addons_config = 6;
   */
  desiredAddonsConfig?: AddonsConfig;

  /**
   * The node pool to be upgraded. This field is mandatory if
   * "desired_node_version", "desired_image_family" or
   * "desired_node_pool_autoscaling" is specified and there is more than one
   * node pool on the cluster.
   *
   * @generated from field: string desired_node_pool_id = 7;
   */
  desiredNodePoolId: string;

  /**
   * The desired image type for the node pool.
   * NOTE: Set the "desired_node_pool" field as well.
   *
   * @generated from field: string desired_image_type = 8;
   */
  desiredImageType: string;

  /**
   * Autoscaler configuration for the node pool specified in
   * desired_node_pool_id. If there is only one pool in the
   * cluster and desired_node_pool_id is not provided then
   * the change applies to that single node pool.
   *
   * @generated from field: google.container.v1alpha1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
   */
  desiredNodePoolAutoscaling?: NodePoolAutoscaling;

  /**
   * The desired list of Google Compute Engine
   * [locations](/compute/docs/zones#available) in which the cluster's nodes
   * should be located. Changing the locations a cluster is in will result
   * in nodes being either created or removed from the cluster, depending on
   * whether locations are being added or removed.
   *
   * This list must always include the cluster's primary zone.
   *
   * @generated from field: repeated string desired_locations = 10;
   */
  desiredLocations: string[];

  /**
   * The desired configuration options for master authorized networks feature.
   *
   * @generated from field: google.container.v1alpha1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
   */
  desiredMasterAuthorizedNetworksConfig?: MasterAuthorizedNetworksConfig;

  /**
   * The desired configuration options for the PodSecurityPolicy feature.
   *
   * @generated from field: google.container.v1alpha1.PodSecurityPolicyConfig desired_pod_security_policy_config = 14;
   */
  desiredPodSecurityPolicyConfig?: PodSecurityPolicyConfig;

  /**
   * The Kubernetes version to change the master to. The only valid value is the
   * latest supported version. Use "-" to have the server automatically select
   * the latest version.
   *
   * @generated from field: string desired_master_version = 100;
   */
  desiredMasterVersion: string;
};

/**
 * Describes the message google.container.v1alpha1.ClusterUpdate.
 * Use `create(ClusterUpdateSchema)` to create a new message.
 */
export const ClusterUpdateSchema: GenMessage<ClusterUpdate> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 14);

/**
 * This operation resource represents operations that may have happened or are
 * happening on the cluster. All fields are output only.
 *
 * @generated from message google.container.v1alpha1.Operation
 */
export type Operation = Message<"google.container.v1alpha1.Operation"> & {
  /**
   * The server-assigned ID for the operation.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the operation
   * is taking place.
   * This field is deprecated, use location instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The operation type.
   *
   * @generated from field: google.container.v1alpha1.Operation.Type operation_type = 3;
   */
  operationType: Operation_Type;

  /**
   * The current status of the operation.
   *
   * @generated from field: google.container.v1alpha1.Operation.Status status = 4;
   */
  status: Operation_Status;

  /**
   * Detailed operation progress, if available.
   *
   * @generated from field: string detail = 8;
   */
  detail: string;

  /**
   * If an error has occurred, a textual description of the error.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Server-defined URL for the resource.
   *
   * @generated from field: string self_link = 6;
   */
  selfLink: string;

  /**
   * Server-defined URL for the target of the operation.
   *
   * @generated from field: string target_link = 7;
   */
  targetLink: string;

  /**
   * [Output only] The name of the Google Compute Engine
   * [zone](/compute/docs/regions-zones/regions-zones#available) or
   * [region](/compute/docs/regions-zones/regions-zones#available) in which
   * the cluster resides.
   *
   * @generated from field: string location = 9;
   */
  location: string;

  /**
   * [Output only] The time the operation started, in
   * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string start_time = 10;
   */
  startTime: string;

  /**
   * [Output only] The time the operation completed, in
   * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string end_time = 11;
   */
  endTime: string;
};

/**
 * Describes the message google.container.v1alpha1.Operation.
 * Use `create(OperationSchema)` to create a new message.
 */
export const OperationSchema: GenMessage<Operation> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 15);

/**
 * Current status of the operation.
 *
 * @generated from enum google.container.v1alpha1.Operation.Status
 */
export enum Operation_Status {
  /**
   * Not set.
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * The operation has been created.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The operation is currently running.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The operation is done, either cancelled or completed.
   *
   * @generated from enum value: DONE = 3;
   */
  DONE = 3,

  /**
   * The operation is aborting.
   *
   * @generated from enum value: ABORTING = 4;
   */
  ABORTING = 4,
}

/**
 * Describes the enum google.container.v1alpha1.Operation.Status.
 */
export const Operation_StatusSchema: GenEnum<Operation_Status> = /*@__PURE__*/
  enumDesc(file_google_container_v1alpha1_cluster_service, 15, 0);

/**
 * Operation type.
 *
 * @generated from enum google.container.v1alpha1.Operation.Type
 */
export enum Operation_Type {
  /**
   * Not set.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Cluster create.
   *
   * @generated from enum value: CREATE_CLUSTER = 1;
   */
  CREATE_CLUSTER = 1,

  /**
   * Cluster delete.
   *
   * @generated from enum value: DELETE_CLUSTER = 2;
   */
  DELETE_CLUSTER = 2,

  /**
   * A master upgrade.
   *
   * @generated from enum value: UPGRADE_MASTER = 3;
   */
  UPGRADE_MASTER = 3,

  /**
   * A node upgrade.
   *
   * @generated from enum value: UPGRADE_NODES = 4;
   */
  UPGRADE_NODES = 4,

  /**
   * Cluster repair.
   *
   * @generated from enum value: REPAIR_CLUSTER = 5;
   */
  REPAIR_CLUSTER = 5,

  /**
   * Cluster update.
   *
   * @generated from enum value: UPDATE_CLUSTER = 6;
   */
  UPDATE_CLUSTER = 6,

  /**
   * Node pool create.
   *
   * @generated from enum value: CREATE_NODE_POOL = 7;
   */
  CREATE_NODE_POOL = 7,

  /**
   * Node pool delete.
   *
   * @generated from enum value: DELETE_NODE_POOL = 8;
   */
  DELETE_NODE_POOL = 8,

  /**
   * Set node pool management.
   *
   * @generated from enum value: SET_NODE_POOL_MANAGEMENT = 9;
   */
  SET_NODE_POOL_MANAGEMENT = 9,

  /**
   * Automatic node pool repair.
   *
   * @generated from enum value: AUTO_REPAIR_NODES = 10;
   */
  AUTO_REPAIR_NODES = 10,

  /**
   * Automatic node upgrade.
   *
   * @generated from enum value: AUTO_UPGRADE_NODES = 11;
   */
  AUTO_UPGRADE_NODES = 11,

  /**
   * Set labels.
   *
   * @generated from enum value: SET_LABELS = 12;
   */
  SET_LABELS = 12,

  /**
   * Set/generate master auth materials
   *
   * @generated from enum value: SET_MASTER_AUTH = 13;
   */
  SET_MASTER_AUTH = 13,

  /**
   * Set node pool size.
   *
   * @generated from enum value: SET_NODE_POOL_SIZE = 14;
   */
  SET_NODE_POOL_SIZE = 14,

  /**
   * Updates network policy for a cluster.
   *
   * @generated from enum value: SET_NETWORK_POLICY = 15;
   */
  SET_NETWORK_POLICY = 15,

  /**
   * Set the maintenance policy.
   *
   * @generated from enum value: SET_MAINTENANCE_POLICY = 16;
   */
  SET_MAINTENANCE_POLICY = 16,
}

/**
 * Describes the enum google.container.v1alpha1.Operation.Type.
 */
export const Operation_TypeSchema: GenEnum<Operation_Type> = /*@__PURE__*/
  enumDesc(file_google_container_v1alpha1_cluster_service, 15, 1);

/**
 * CreateClusterRequest creates a cluster.
 *
 * @generated from message google.container.v1alpha1.CreateClusterRequest
 */
export type CreateClusterRequest = Message<"google.container.v1alpha1.CreateClusterRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * A [cluster
   * resource](/container-engine/reference/rest/v1alpha1/projects.zones.clusters)
   *
   * @generated from field: google.container.v1alpha1.Cluster cluster = 3;
   */
  cluster?: Cluster;

  /**
   * The parent (project and location) where the cluster will be created.
   * Specified in the format 'projects/*\/locations/*'.
   *
   * @generated from field: string parent = 5;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1alpha1.CreateClusterRequest.
 * Use `create(CreateClusterRequestSchema)` to create a new message.
 */
export const CreateClusterRequestSchema: GenMessage<CreateClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 16);

/**
 * GetClusterRequest gets the settings of a cluster.
 *
 * @generated from message google.container.v1alpha1.GetClusterRequest
 */
export type GetClusterRequest = Message<"google.container.v1alpha1.GetClusterRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to retrieve.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name (project, location, cluster) of the cluster to retrieve.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.GetClusterRequest.
 * Use `create(GetClusterRequestSchema)` to create a new message.
 */
export const GetClusterRequestSchema: GenMessage<GetClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 17);

/**
 * UpdateClusterRequest updates the settings of a cluster.
 *
 * @generated from message google.container.v1alpha1.UpdateClusterRequest
 */
export type UpdateClusterRequest = Message<"google.container.v1alpha1.UpdateClusterRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * A description of the update.
   *
   * @generated from field: google.container.v1alpha1.ClusterUpdate update = 4;
   */
  update?: ClusterUpdate;

  /**
   * The name (project, location, cluster) of the cluster to update.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.UpdateClusterRequest.
 * Use `create(UpdateClusterRequestSchema)` to create a new message.
 */
export const UpdateClusterRequestSchema: GenMessage<UpdateClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 18);

/**
 * SetNodePoolVersionRequest updates the version of a node pool.
 *
 * @generated from message google.container.v1alpha1.UpdateNodePoolRequest
 */
export type UpdateNodePoolRequest = Message<"google.container.v1alpha1.UpdateNodePoolRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name of the node pool to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string node_pool_id = 4;
   */
  nodePoolId: string;

  /**
   * The Kubernetes version to change the nodes to (typically an
   * upgrade). Use `-` to upgrade to the latest version supported by
   * the server.
   *
   * @generated from field: string node_version = 5;
   */
  nodeVersion: string;

  /**
   * The desired image type for the node pool.
   *
   * @generated from field: string image_type = 6;
   */
  imageType: string;

  /**
   * The name (project, location, cluster, node pool) of the node pool to update.
   * Specified in the format 'projects/*\/locations/*\/clusters/*\/nodePools/*'.
   *
   * @generated from field: string name = 8;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.UpdateNodePoolRequest.
 * Use `create(UpdateNodePoolRequestSchema)` to create a new message.
 */
export const UpdateNodePoolRequestSchema: GenMessage<UpdateNodePoolRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 19);

/**
 * SetNodePoolAutoscalingRequest sets the autoscaler settings of a node pool.
 *
 * @generated from message google.container.v1alpha1.SetNodePoolAutoscalingRequest
 */
export type SetNodePoolAutoscalingRequest = Message<"google.container.v1alpha1.SetNodePoolAutoscalingRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name of the node pool to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string node_pool_id = 4;
   */
  nodePoolId: string;

  /**
   * Autoscaling configuration for the node pool.
   *
   * @generated from field: google.container.v1alpha1.NodePoolAutoscaling autoscaling = 5;
   */
  autoscaling?: NodePoolAutoscaling;

  /**
   * The name (project, location, cluster, node pool) of the node pool to set
   * autoscaler settings. Specified in the format
   * 'projects/*\/locations/*\/clusters/*\/nodePools/*'.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetNodePoolAutoscalingRequest.
 * Use `create(SetNodePoolAutoscalingRequestSchema)` to create a new message.
 */
export const SetNodePoolAutoscalingRequestSchema: GenMessage<SetNodePoolAutoscalingRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 20);

/**
 * SetLoggingServiceRequest sets the logging service of a cluster.
 *
 * @generated from message google.container.v1alpha1.SetLoggingServiceRequest
 */
export type SetLoggingServiceRequest = Message<"google.container.v1alpha1.SetLoggingServiceRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The logging service the cluster should use to write metrics.
   * Currently available options:
   *
   * * "logging.googleapis.com" - the Google Cloud Logging service
   * * "none" - no metrics will be exported from the cluster
   *
   * @generated from field: string logging_service = 4;
   */
  loggingService: string;

  /**
   * The name (project, location, cluster) of the cluster to set logging.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetLoggingServiceRequest.
 * Use `create(SetLoggingServiceRequestSchema)` to create a new message.
 */
export const SetLoggingServiceRequestSchema: GenMessage<SetLoggingServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 21);

/**
 * SetMonitoringServiceRequest sets the monitoring service of a cluster.
 *
 * @generated from message google.container.v1alpha1.SetMonitoringServiceRequest
 */
export type SetMonitoringServiceRequest = Message<"google.container.v1alpha1.SetMonitoringServiceRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The monitoring service the cluster should use to write metrics.
   * Currently available options:
   *
   * * "monitoring.googleapis.com" - the Google Cloud Monitoring service
   * * "none" - no metrics will be exported from the cluster
   *
   * @generated from field: string monitoring_service = 4;
   */
  monitoringService: string;

  /**
   * The name (project, location, cluster) of the cluster to set monitoring.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetMonitoringServiceRequest.
 * Use `create(SetMonitoringServiceRequestSchema)` to create a new message.
 */
export const SetMonitoringServiceRequestSchema: GenMessage<SetMonitoringServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 22);

/**
 * SetAddonsRequest sets the addons associated with the cluster.
 *
 * @generated from message google.container.v1alpha1.SetAddonsConfigRequest
 */
export type SetAddonsConfigRequest = Message<"google.container.v1alpha1.SetAddonsConfigRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The desired configurations for the various addons available to run in the
   * cluster.
   *
   * @generated from field: google.container.v1alpha1.AddonsConfig addons_config = 4;
   */
  addonsConfig?: AddonsConfig;

  /**
   * The name (project, location, cluster) of the cluster to set addons.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetAddonsConfigRequest.
 * Use `create(SetAddonsConfigRequestSchema)` to create a new message.
 */
export const SetAddonsConfigRequestSchema: GenMessage<SetAddonsConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 23);

/**
 * SetLocationsRequest sets the locations of the cluster.
 *
 * @generated from message google.container.v1alpha1.SetLocationsRequest
 */
export type SetLocationsRequest = Message<"google.container.v1alpha1.SetLocationsRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The desired list of Google Compute Engine
   * [locations](/compute/docs/zones#available) in which the cluster's nodes
   * should be located. Changing the locations a cluster is in will result
   * in nodes being either created or removed from the cluster, depending on
   * whether locations are being added or removed.
   *
   * This list must always include the cluster's primary zone.
   *
   * @generated from field: repeated string locations = 4;
   */
  locations: string[];

  /**
   * The name (project, location, cluster) of the cluster to set locations.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetLocationsRequest.
 * Use `create(SetLocationsRequestSchema)` to create a new message.
 */
export const SetLocationsRequestSchema: GenMessage<SetLocationsRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 24);

/**
 * UpdateMasterRequest updates the master of the cluster.
 *
 * @generated from message google.container.v1alpha1.UpdateMasterRequest
 */
export type UpdateMasterRequest = Message<"google.container.v1alpha1.UpdateMasterRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The Kubernetes version to change the master to. The only valid value is the
   * latest supported version. Use "-" to have the server automatically select
   * the latest version.
   *
   * @generated from field: string master_version = 4;
   */
  masterVersion: string;

  /**
   * The name (project, location, cluster) of the cluster to update.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.UpdateMasterRequest.
 * Use `create(UpdateMasterRequestSchema)` to create a new message.
 */
export const UpdateMasterRequestSchema: GenMessage<UpdateMasterRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 25);

/**
 * SetMasterAuthRequest updates the admin password of a cluster.
 *
 * @generated from message google.container.v1alpha1.SetMasterAuthRequest
 */
export type SetMasterAuthRequest = Message<"google.container.v1alpha1.SetMasterAuthRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to upgrade.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The exact form of action to be taken on the master auth.
   *
   * @generated from field: google.container.v1alpha1.SetMasterAuthRequest.Action action = 4;
   */
  action: SetMasterAuthRequest_Action;

  /**
   * A description of the update.
   *
   * @generated from field: google.container.v1alpha1.MasterAuth update = 5;
   */
  update?: MasterAuth;

  /**
   * The name (project, location, cluster) of the cluster to set auth.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetMasterAuthRequest.
 * Use `create(SetMasterAuthRequestSchema)` to create a new message.
 */
export const SetMasterAuthRequestSchema: GenMessage<SetMasterAuthRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 26);

/**
 * Operation type: what type update to perform.
 *
 * @generated from enum google.container.v1alpha1.SetMasterAuthRequest.Action
 */
export enum SetMasterAuthRequest_Action {
  /**
   * Operation is unknown and will error out.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Set the password to a user generated value.
   *
   * @generated from enum value: SET_PASSWORD = 1;
   */
  SET_PASSWORD = 1,

  /**
   * Generate a new password and set it to that.
   *
   * @generated from enum value: GENERATE_PASSWORD = 2;
   */
  GENERATE_PASSWORD = 2,

  /**
   * Set the username.  If an empty username is provided, basic authentication
   * is disabled for the cluster.  If a non-empty username is provided, basic
   * authentication is enabled, with either a provided password or a generated
   * one.
   *
   * @generated from enum value: SET_USERNAME = 3;
   */
  SET_USERNAME = 3,
}

/**
 * Describes the enum google.container.v1alpha1.SetMasterAuthRequest.Action.
 */
export const SetMasterAuthRequest_ActionSchema: GenEnum<SetMasterAuthRequest_Action> = /*@__PURE__*/
  enumDesc(file_google_container_v1alpha1_cluster_service, 26, 0);

/**
 * DeleteClusterRequest deletes a cluster.
 *
 * @generated from message google.container.v1alpha1.DeleteClusterRequest
 */
export type DeleteClusterRequest = Message<"google.container.v1alpha1.DeleteClusterRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to delete.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name (project, location, cluster) of the cluster to delete.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 4;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.DeleteClusterRequest.
 * Use `create(DeleteClusterRequestSchema)` to create a new message.
 */
export const DeleteClusterRequestSchema: GenMessage<DeleteClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 27);

/**
 * ListClustersRequest lists clusters.
 *
 * @generated from message google.container.v1alpha1.ListClustersRequest
 */
export type ListClustersRequest = Message<"google.container.v1alpha1.ListClustersRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides, or "-" for all zones.
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The parent (project and location) where the clusters will be listed.
   * Specified in the format 'projects/*\/locations/*'.
   * Location "-" matches all zones and all regions.
   *
   * @generated from field: string parent = 4;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1alpha1.ListClustersRequest.
 * Use `create(ListClustersRequestSchema)` to create a new message.
 */
export const ListClustersRequestSchema: GenMessage<ListClustersRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 28);

/**
 * ListClustersResponse is the result of ListClustersRequest.
 *
 * @generated from message google.container.v1alpha1.ListClustersResponse
 */
export type ListClustersResponse = Message<"google.container.v1alpha1.ListClustersResponse"> & {
  /**
   * A list of clusters in the project in the specified zone, or
   * across all ones.
   *
   * @generated from field: repeated google.container.v1alpha1.Cluster clusters = 1;
   */
  clusters: Cluster[];

  /**
   * If any zones are listed here, the list of clusters returned
   * may be missing those zones.
   *
   * @generated from field: repeated string missing_zones = 2;
   */
  missingZones: string[];
};

/**
 * Describes the message google.container.v1alpha1.ListClustersResponse.
 * Use `create(ListClustersResponseSchema)` to create a new message.
 */
export const ListClustersResponseSchema: GenMessage<ListClustersResponse> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 29);

/**
 * GetOperationRequest gets a single operation.
 *
 * @generated from message google.container.v1alpha1.GetOperationRequest
 */
export type GetOperationRequest = Message<"google.container.v1alpha1.GetOperationRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The server-assigned `name` of the operation.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string operation_id = 3;
   */
  operationId: string;

  /**
   * The name (project, location, operation id) of the operation to get.
   * Specified in the format 'projects/*\/locations/*\/operations/*'.
   *
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.GetOperationRequest.
 * Use `create(GetOperationRequestSchema)` to create a new message.
 */
export const GetOperationRequestSchema: GenMessage<GetOperationRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 30);

/**
 * ListOperationsRequest lists operations.
 *
 * @generated from message google.container.v1alpha1.ListOperationsRequest
 */
export type ListOperationsRequest = Message<"google.container.v1alpha1.ListOperationsRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine [zone](/compute/docs/zones#available)
   * to return operations for, or `-` for all zones.
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The parent (project and location) where the operations will be listed.
   * Specified in the format 'projects/*\/locations/*'.
   * Location "-" matches all zones and all regions.
   *
   * @generated from field: string parent = 4;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1alpha1.ListOperationsRequest.
 * Use `create(ListOperationsRequestSchema)` to create a new message.
 */
export const ListOperationsRequestSchema: GenMessage<ListOperationsRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 31);

/**
 * CancelOperationRequest cancels a single operation.
 *
 * @generated from message google.container.v1alpha1.CancelOperationRequest
 */
export type CancelOperationRequest = Message<"google.container.v1alpha1.CancelOperationRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the operation resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The server-assigned `name` of the operation.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string operation_id = 3;
   */
  operationId: string;

  /**
   * The name (project, location, operation id) of the operation to cancel.
   * Specified in the format 'projects/*\/locations/*\/operations/*'.
   *
   * @generated from field: string name = 4;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.CancelOperationRequest.
 * Use `create(CancelOperationRequestSchema)` to create a new message.
 */
export const CancelOperationRequestSchema: GenMessage<CancelOperationRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 32);

/**
 * ListOperationsResponse is the result of ListOperationsRequest.
 *
 * @generated from message google.container.v1alpha1.ListOperationsResponse
 */
export type ListOperationsResponse = Message<"google.container.v1alpha1.ListOperationsResponse"> & {
  /**
   * A list of operations in the project in the specified zone.
   *
   * @generated from field: repeated google.container.v1alpha1.Operation operations = 1;
   */
  operations: Operation[];

  /**
   * If any zones are listed here, the list of operations returned
   * may be missing the operations from those zones.
   *
   * @generated from field: repeated string missing_zones = 2;
   */
  missingZones: string[];
};

/**
 * Describes the message google.container.v1alpha1.ListOperationsResponse.
 * Use `create(ListOperationsResponseSchema)` to create a new message.
 */
export const ListOperationsResponseSchema: GenMessage<ListOperationsResponse> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 33);

/**
 * Gets the current Container Engine service configuration.
 *
 * @generated from message google.container.v1alpha1.GetServerConfigRequest
 */
export type GetServerConfigRequest = Message<"google.container.v1alpha1.GetServerConfigRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine [zone](/compute/docs/zones#available)
   * to return operations for.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name (project and location) of the server config to get
   * Specified in the format 'projects/*\/locations/*'.
   *
   * @generated from field: string name = 4;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.GetServerConfigRequest.
 * Use `create(GetServerConfigRequestSchema)` to create a new message.
 */
export const GetServerConfigRequestSchema: GenMessage<GetServerConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 34);

/**
 * Container Engine service configuration.
 *
 * @generated from message google.container.v1alpha1.ServerConfig
 */
export type ServerConfig = Message<"google.container.v1alpha1.ServerConfig"> & {
  /**
   * Version of Kubernetes the service deploys by default.
   *
   * @generated from field: string default_cluster_version = 1;
   */
  defaultClusterVersion: string;

  /**
   * List of valid node upgrade target versions.
   *
   * @generated from field: repeated string valid_node_versions = 3;
   */
  validNodeVersions: string[];

  /**
   * Default image type.
   *
   * @generated from field: string default_image_type = 4;
   */
  defaultImageType: string;

  /**
   * List of valid image types.
   *
   * @generated from field: repeated string valid_image_types = 5;
   */
  validImageTypes: string[];

  /**
   * List of valid master versions.
   *
   * @generated from field: repeated string valid_master_versions = 6;
   */
  validMasterVersions: string[];
};

/**
 * Describes the message google.container.v1alpha1.ServerConfig.
 * Use `create(ServerConfigSchema)` to create a new message.
 */
export const ServerConfigSchema: GenMessage<ServerConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 35);

/**
 * CreateNodePoolRequest creates a node pool for a cluster.
 *
 * @generated from message google.container.v1alpha1.CreateNodePoolRequest
 */
export type CreateNodePoolRequest = Message<"google.container.v1alpha1.CreateNodePoolRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://developers.google.com/console/help/new/#projectnumber).
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster.
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The node pool to create.
   *
   * @generated from field: google.container.v1alpha1.NodePool node_pool = 4;
   */
  nodePool?: NodePool;

  /**
   * The parent (project, location, cluster id) where the node pool will be created.
   * Specified in the format 'projects/*\/locations/*\/clusters/*\/nodePools/*'.
   *
   * @generated from field: string parent = 6;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1alpha1.CreateNodePoolRequest.
 * Use `create(CreateNodePoolRequestSchema)` to create a new message.
 */
export const CreateNodePoolRequestSchema: GenMessage<CreateNodePoolRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 36);

/**
 * DeleteNodePoolRequest deletes a node pool for a cluster.
 *
 * @generated from message google.container.v1alpha1.DeleteNodePoolRequest
 */
export type DeleteNodePoolRequest = Message<"google.container.v1alpha1.DeleteNodePoolRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://developers.google.com/console/help/new/#projectnumber).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name of the node pool to delete.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string node_pool_id = 4;
   */
  nodePoolId: string;

  /**
   * The name (project, location, cluster, node pool id) of the node pool to delete.
   * Specified in the format 'projects/*\/locations/*\/clusters/*\/nodePools/*'.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.DeleteNodePoolRequest.
 * Use `create(DeleteNodePoolRequestSchema)` to create a new message.
 */
export const DeleteNodePoolRequestSchema: GenMessage<DeleteNodePoolRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 37);

/**
 * ListNodePoolsRequest lists the node pool(s) for a cluster.
 *
 * @generated from message google.container.v1alpha1.ListNodePoolsRequest
 */
export type ListNodePoolsRequest = Message<"google.container.v1alpha1.ListNodePoolsRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://developers.google.com/console/help/new/#projectnumber).
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster.
   * This field is deprecated, use parent instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The parent (project, location, cluster id) where the node pools will be listed.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string parent = 5;
   */
  parent: string;
};

/**
 * Describes the message google.container.v1alpha1.ListNodePoolsRequest.
 * Use `create(ListNodePoolsRequestSchema)` to create a new message.
 */
export const ListNodePoolsRequestSchema: GenMessage<ListNodePoolsRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 38);

/**
 * GetNodePoolRequest retrieves a node pool for a cluster.
 *
 * @generated from message google.container.v1alpha1.GetNodePoolRequest
 */
export type GetNodePoolRequest = Message<"google.container.v1alpha1.GetNodePoolRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://developers.google.com/console/help/new/#projectnumber).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name of the node pool.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string node_pool_id = 4;
   */
  nodePoolId: string;

  /**
   * The name (project, location, cluster, node pool id) of the node pool to get.
   * Specified in the format 'projects/*\/locations/*\/clusters/*\/nodePools/*'.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.GetNodePoolRequest.
 * Use `create(GetNodePoolRequestSchema)` to create a new message.
 */
export const GetNodePoolRequestSchema: GenMessage<GetNodePoolRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 39);

/**
 * NodePool contains the name and configuration for a cluster's node pool.
 * Node pools are a set of nodes (i.e. VM's), with a common configuration and
 * specification, under the control of the cluster master. They may have a set
 * of Kubernetes labels applied to them, which may be used to reference them
 * during pod scheduling. They may also be resized up or down, to accommodate
 * the workload.
 *
 * @generated from message google.container.v1alpha1.NodePool
 */
export type NodePool = Message<"google.container.v1alpha1.NodePool"> & {
  /**
   * The name of the node pool.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The node configuration of the pool.
   *
   * @generated from field: google.container.v1alpha1.NodeConfig config = 2;
   */
  config?: NodeConfig;

  /**
   * The initial node count for the pool. You must ensure that your
   * Compute Engine <a href="/compute/docs/resource-quotas">resource quota</a>
   * is sufficient for this number of instances. You must also have available
   * firewall and routes quota.
   *
   * @generated from field: int32 initial_node_count = 3;
   */
  initialNodeCount: number;

  /**
   * Autoscaler configuration for this NodePool. Autoscaler is enabled
   * only if a valid configuration is present.
   *
   * @generated from field: google.container.v1alpha1.NodePoolAutoscaling autoscaling = 4;
   */
  autoscaling?: NodePoolAutoscaling;

  /**
   * NodeManagement configuration for this NodePool.
   *
   * @generated from field: google.container.v1alpha1.NodeManagement management = 5;
   */
  management?: NodeManagement;

  /**
   * [Output only] Server-defined URL for the resource.
   *
   * @generated from field: string self_link = 100;
   */
  selfLink: string;

  /**
   * [Output only] The version of the Kubernetes of this node.
   *
   * @generated from field: string version = 101;
   */
  version: string;

  /**
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * node pool.
   *
   * @generated from field: repeated string instance_group_urls = 102;
   */
  instanceGroupUrls: string[];

  /**
   * [Output only] The status of the nodes in this pool instance.
   *
   * @generated from field: google.container.v1alpha1.NodePool.Status status = 103;
   */
  status: NodePool_Status;

  /**
   * [Output only] Additional information about the current status of this
   * node pool instance, if available.
   *
   * @generated from field: string status_message = 104;
   */
  statusMessage: string;
};

/**
 * Describes the message google.container.v1alpha1.NodePool.
 * Use `create(NodePoolSchema)` to create a new message.
 */
export const NodePoolSchema: GenMessage<NodePool> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 40);

/**
 * The current status of the node pool instance.
 *
 * @generated from enum google.container.v1alpha1.NodePool.Status
 */
export enum NodePool_Status {
  /**
   * Not set.
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * The PROVISIONING state indicates the node pool is being created.
   *
   * @generated from enum value: PROVISIONING = 1;
   */
  PROVISIONING = 1,

  /**
   * The RUNNING state indicates the node pool has been created
   * and is fully usable.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The RUNNING_WITH_ERROR state indicates the node pool has been created
   * and is partially usable. Some error state has occurred and some
   * functionality may be impaired. Customer may need to reissue a request
   * or trigger a new update.
   *
   * @generated from enum value: RUNNING_WITH_ERROR = 3;
   */
  RUNNING_WITH_ERROR = 3,

  /**
   * The RECONCILING state indicates that some work is actively being done on
   * the node pool, such as upgrading node software. Details can
   * be found in the `statusMessage` field.
   *
   * @generated from enum value: RECONCILING = 4;
   */
  RECONCILING = 4,

  /**
   * The STOPPING state indicates the node pool is being deleted.
   *
   * @generated from enum value: STOPPING = 5;
   */
  STOPPING = 5,

  /**
   * The ERROR state indicates the node pool may be unusable. Details
   * can be found in the `statusMessage` field.
   *
   * @generated from enum value: ERROR = 6;
   */
  ERROR = 6,
}

/**
 * Describes the enum google.container.v1alpha1.NodePool.Status.
 */
export const NodePool_StatusSchema: GenEnum<NodePool_Status> = /*@__PURE__*/
  enumDesc(file_google_container_v1alpha1_cluster_service, 40, 0);

/**
 * NodeManagement defines the set of node management services turned on for the
 * node pool.
 *
 * @generated from message google.container.v1alpha1.NodeManagement
 */
export type NodeManagement = Message<"google.container.v1alpha1.NodeManagement"> & {
  /**
   * Whether the nodes will be automatically upgraded.
   *
   * @generated from field: bool auto_upgrade = 1;
   */
  autoUpgrade: boolean;

  /**
   * Whether the nodes will be automatically repaired.
   *
   * @generated from field: bool auto_repair = 2;
   */
  autoRepair: boolean;

  /**
   * Specifies the Auto Upgrade knobs for the node pool.
   *
   * @generated from field: google.container.v1alpha1.AutoUpgradeOptions upgrade_options = 10;
   */
  upgradeOptions?: AutoUpgradeOptions;
};

/**
 * Describes the message google.container.v1alpha1.NodeManagement.
 * Use `create(NodeManagementSchema)` to create a new message.
 */
export const NodeManagementSchema: GenMessage<NodeManagement> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 41);

/**
 * AutoUpgradeOptions defines the set of options for the user to control how
 * the Auto Upgrades will proceed.
 *
 * @generated from message google.container.v1alpha1.AutoUpgradeOptions
 */
export type AutoUpgradeOptions = Message<"google.container.v1alpha1.AutoUpgradeOptions"> & {
  /**
   * [Output only] This field is set when upgrades are about to commence
   * with the approximate start time for the upgrades, in
   * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   *
   * @generated from field: string auto_upgrade_start_time = 1;
   */
  autoUpgradeStartTime: string;

  /**
   * [Output only] This field is set when upgrades are about to commence
   * with the description of the upgrade.
   *
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message google.container.v1alpha1.AutoUpgradeOptions.
 * Use `create(AutoUpgradeOptionsSchema)` to create a new message.
 */
export const AutoUpgradeOptionsSchema: GenMessage<AutoUpgradeOptions> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 42);

/**
 * MaintenancePolicy defines the maintenance policy to be used for the cluster.
 *
 * @generated from message google.container.v1alpha1.MaintenancePolicy
 */
export type MaintenancePolicy = Message<"google.container.v1alpha1.MaintenancePolicy"> & {
  /**
   * Specifies the maintenance window in which maintenance may be performed.
   *
   * @generated from field: google.container.v1alpha1.MaintenanceWindow window = 1;
   */
  window?: MaintenanceWindow;
};

/**
 * Describes the message google.container.v1alpha1.MaintenancePolicy.
 * Use `create(MaintenancePolicySchema)` to create a new message.
 */
export const MaintenancePolicySchema: GenMessage<MaintenancePolicy> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 43);

/**
 * MaintenanceWindow defines the maintenance window to be used for the cluster.
 *
 * @generated from message google.container.v1alpha1.MaintenanceWindow
 */
export type MaintenanceWindow = Message<"google.container.v1alpha1.MaintenanceWindow"> & {
  /**
   * Unimplemented, reserved for future use.
   * HourlyMaintenanceWindow hourly_maintenance_window = 1;
   *
   * @generated from oneof google.container.v1alpha1.MaintenanceWindow.policy
   */
  policy: {
    /**
     * DailyMaintenanceWindow specifies a daily maintenance operation window.
     *
     * @generated from field: google.container.v1alpha1.DailyMaintenanceWindow daily_maintenance_window = 2;
     */
    value: DailyMaintenanceWindow;
    case: "dailyMaintenanceWindow";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.container.v1alpha1.MaintenanceWindow.
 * Use `create(MaintenanceWindowSchema)` to create a new message.
 */
export const MaintenanceWindowSchema: GenMessage<MaintenanceWindow> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 44);

/**
 * Time window specified for daily maintenance operations.
 *
 * @generated from message google.container.v1alpha1.DailyMaintenanceWindow
 */
export type DailyMaintenanceWindow = Message<"google.container.v1alpha1.DailyMaintenanceWindow"> & {
  /**
   * Time within the maintenance window to start the maintenance operations.
   * It must be in format "HH:MM”, where HH : [00-23] and MM : [00-59] GMT.
   *
   * @generated from field: string start_time = 2;
   */
  startTime: string;

  /**
   * [Output only] Duration of the time window, automatically chosen to be
   * smallest possible in the given scenario.
   *
   * @generated from field: string duration = 3;
   */
  duration: string;
};

/**
 * Describes the message google.container.v1alpha1.DailyMaintenanceWindow.
 * Use `create(DailyMaintenanceWindowSchema)` to create a new message.
 */
export const DailyMaintenanceWindowSchema: GenMessage<DailyMaintenanceWindow> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 45);

/**
 * SetNodePoolManagementRequest sets the node management properties of a node
 * pool.
 *
 * @generated from message google.container.v1alpha1.SetNodePoolManagementRequest
 */
export type SetNodePoolManagementRequest = Message<"google.container.v1alpha1.SetNodePoolManagementRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to update.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name of the node pool to update.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string node_pool_id = 4;
   */
  nodePoolId: string;

  /**
   * NodeManagement configuration for the node pool.
   *
   * @generated from field: google.container.v1alpha1.NodeManagement management = 5;
   */
  management?: NodeManagement;

  /**
   * The name (project, location, cluster, node pool id) of the node pool to set
   * management properties. Specified in the format
   * 'projects/*\/locations/*\/clusters/*\/nodePools/*'.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetNodePoolManagementRequest.
 * Use `create(SetNodePoolManagementRequestSchema)` to create a new message.
 */
export const SetNodePoolManagementRequestSchema: GenMessage<SetNodePoolManagementRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 46);

/**
 * SetNodePoolSizeRequest sets the size a node
 * pool.
 *
 * @generated from message google.container.v1alpha1.SetNodePoolSizeRequest
 */
export type SetNodePoolSizeRequest = Message<"google.container.v1alpha1.SetNodePoolSizeRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to update.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name of the node pool to update.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string node_pool_id = 4;
   */
  nodePoolId: string;

  /**
   * The desired node count for the pool.
   *
   * @generated from field: int32 node_count = 5;
   */
  nodeCount: number;

  /**
   * The name (project, location, cluster, node pool id) of the node pool to set
   * size.
   * Specified in the format 'projects/*\/locations/*\/clusters/*\/nodePools/*'.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetNodePoolSizeRequest.
 * Use `create(SetNodePoolSizeRequestSchema)` to create a new message.
 */
export const SetNodePoolSizeRequestSchema: GenMessage<SetNodePoolSizeRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 47);

/**
 * RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed
 * NodePool upgrade. This will be an no-op if the last upgrade successfully
 * completed.
 *
 * @generated from message google.container.v1alpha1.RollbackNodePoolUpgradeRequest
 */
export type RollbackNodePoolUpgradeRequest = Message<"google.container.v1alpha1.RollbackNodePoolUpgradeRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to rollback.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name of the node pool to rollback.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string node_pool_id = 4;
   */
  nodePoolId: string;

  /**
   * The name (project, location, cluster, node pool id) of the node poll to
   * rollback upgrade.
   * Specified in the format 'projects/*\/locations/*\/clusters/*\/nodePools/*'.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.RollbackNodePoolUpgradeRequest.
 * Use `create(RollbackNodePoolUpgradeRequestSchema)` to create a new message.
 */
export const RollbackNodePoolUpgradeRequestSchema: GenMessage<RollbackNodePoolUpgradeRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 48);

/**
 * ListNodePoolsResponse is the result of ListNodePoolsRequest.
 *
 * @generated from message google.container.v1alpha1.ListNodePoolsResponse
 */
export type ListNodePoolsResponse = Message<"google.container.v1alpha1.ListNodePoolsResponse"> & {
  /**
   * A list of node pools for a cluster.
   *
   * @generated from field: repeated google.container.v1alpha1.NodePool node_pools = 1;
   */
  nodePools: NodePool[];
};

/**
 * Describes the message google.container.v1alpha1.ListNodePoolsResponse.
 * Use `create(ListNodePoolsResponseSchema)` to create a new message.
 */
export const ListNodePoolsResponseSchema: GenMessage<ListNodePoolsResponse> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 49);

/**
 * NodePoolAutoscaling contains information required by cluster autoscaler to
 * adjust the size of the node pool to the current cluster usage.
 *
 * @generated from message google.container.v1alpha1.NodePoolAutoscaling
 */
export type NodePoolAutoscaling = Message<"google.container.v1alpha1.NodePoolAutoscaling"> & {
  /**
   * Is autoscaling enabled for this node pool.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Minimum number of nodes in the NodePool. Must be >= 1 and <=
   * max_node_count.
   *
   * @generated from field: int32 min_node_count = 2;
   */
  minNodeCount: number;

  /**
   * Maximum number of nodes in the NodePool. Must be >= min_node_count. There
   * has to enough quota to scale up the cluster.
   *
   * @generated from field: int32 max_node_count = 3;
   */
  maxNodeCount: number;
};

/**
 * Describes the message google.container.v1alpha1.NodePoolAutoscaling.
 * Use `create(NodePoolAutoscalingSchema)` to create a new message.
 */
export const NodePoolAutoscalingSchema: GenMessage<NodePoolAutoscaling> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 50);

/**
 * SetLabelsRequest sets the Google Cloud Platform labels on a Google Container
 * Engine cluster, which will in turn set them for Google Compute Engine
 * resources used by that cluster
 *
 * @generated from message google.container.v1alpha1.SetLabelsRequest
 */
export type SetLabelsRequest = Message<"google.container.v1alpha1.SetLabelsRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://developers.google.com/console/help/new/#projectnumber).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The labels to set for that cluster.
   *
   * @generated from field: map<string, string> resource_labels = 4;
   */
  resourceLabels: { [key: string]: string };

  /**
   * The fingerprint of the previous set of labels for this resource,
   * used to detect conflicts. The fingerprint is initially generated by
   * Container Engine and changes after every request to modify or update
   * labels. You must always provide an up-to-date fingerprint hash when
   * updating or changing labels. Make a <code>get()</code> request to the
   * resource to get the latest fingerprint.
   *
   * @generated from field: string label_fingerprint = 5;
   */
  labelFingerprint: string;

  /**
   * The name (project, location, cluster id) of the cluster to set labels.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetLabelsRequest.
 * Use `create(SetLabelsRequestSchema)` to create a new message.
 */
export const SetLabelsRequestSchema: GenMessage<SetLabelsRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 51);

/**
 * SetLegacyAbacRequest enables or disables the ABAC authorization mechanism for
 * a cluster.
 *
 * @generated from message google.container.v1alpha1.SetLegacyAbacRequest
 */
export type SetLegacyAbacRequest = Message<"google.container.v1alpha1.SetLegacyAbacRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to update.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * Whether ABAC authorization will be enabled in the cluster.
   *
   * @generated from field: bool enabled = 4;
   */
  enabled: boolean;

  /**
   * The name (project, location, cluster id) of the cluster to set legacy abac.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetLegacyAbacRequest.
 * Use `create(SetLegacyAbacRequestSchema)` to create a new message.
 */
export const SetLegacyAbacRequestSchema: GenMessage<SetLegacyAbacRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 52);

/**
 * StartIPRotationRequest creates a new IP for the cluster and then performs
 * a node upgrade on each node pool to point to the new IP.
 *
 * @generated from message google.container.v1alpha1.StartIPRotationRequest
 */
export type StartIPRotationRequest = Message<"google.container.v1alpha1.StartIPRotationRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://developers.google.com/console/help/new/#projectnumber).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name (project, location, cluster id) of the cluster to start IP rotation.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.StartIPRotationRequest.
 * Use `create(StartIPRotationRequestSchema)` to create a new message.
 */
export const StartIPRotationRequestSchema: GenMessage<StartIPRotationRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 53);

/**
 * CompleteIPRotationRequest moves the cluster master back into single-IP mode.
 *
 * @generated from message google.container.v1alpha1.CompleteIPRotationRequest
 */
export type CompleteIPRotationRequest = Message<"google.container.v1alpha1.CompleteIPRotationRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://developers.google.com/console/help/new/#projectnumber).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The name (project, location, cluster id) of the cluster to complete IP rotation.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 7;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.CompleteIPRotationRequest.
 * Use `create(CompleteIPRotationRequestSchema)` to create a new message.
 */
export const CompleteIPRotationRequestSchema: GenMessage<CompleteIPRotationRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 54);

/**
 * AcceleratorConfig represents a Hardware Accelerator request.
 *
 * @generated from message google.container.v1alpha1.AcceleratorConfig
 */
export type AcceleratorConfig = Message<"google.container.v1alpha1.AcceleratorConfig"> & {
  /**
   * The number of the accelerator cards exposed to an instance.
   *
   * @generated from field: int64 accelerator_count = 1;
   */
  acceleratorCount: bigint;

  /**
   * The accelerator type resource name. List of supported accelerators
   * [here](/compute/docs/gpus/#Introduction)
   *
   * @generated from field: string accelerator_type = 2;
   */
  acceleratorType: string;
};

/**
 * Describes the message google.container.v1alpha1.AcceleratorConfig.
 * Use `create(AcceleratorConfigSchema)` to create a new message.
 */
export const AcceleratorConfigSchema: GenMessage<AcceleratorConfig> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 55);

/**
 * SetNetworkPolicyRequest enables/disables network policy for a cluster.
 *
 * @generated from message google.container.v1alpha1.SetNetworkPolicyRequest
 */
export type SetNetworkPolicyRequest = Message<"google.container.v1alpha1.SetNetworkPolicyRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://developers.google.com/console/help/new/#projectnumber).
   * This field is deprecated, use name instead.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster.
   * This field is deprecated, use name instead.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * Configuration options for the NetworkPolicy feature.
   *
   * @generated from field: google.container.v1alpha1.NetworkPolicy network_policy = 4;
   */
  networkPolicy?: NetworkPolicy;

  /**
   * The name (project, location, cluster id) of the cluster to set networking
   * policy.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 6;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetNetworkPolicyRequest.
 * Use `create(SetNetworkPolicyRequestSchema)` to create a new message.
 */
export const SetNetworkPolicyRequestSchema: GenMessage<SetNetworkPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 56);

/**
 * SetMaintenancePolicyRequest sets the maintenance policy for a cluster.
 *
 * @generated from message google.container.v1alpha1.SetMaintenancePolicyRequest
 */
export type SetMaintenancePolicyRequest = Message<"google.container.v1alpha1.SetMaintenancePolicyRequest"> & {
  /**
   * The Google Developers Console [project ID or project
   * number](https://support.google.com/cloud/answer/6158840).
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the Google Compute Engine
   * [zone](/compute/docs/zones#available) in which the cluster
   * resides.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The name of the cluster to update.
   *
   * @generated from field: string cluster_id = 3;
   */
  clusterId: string;

  /**
   * The maintenance policy to be set for the cluster. An empty field
   * clears the existing maintenance policy.
   *
   * @generated from field: google.container.v1alpha1.MaintenancePolicy maintenance_policy = 4;
   */
  maintenancePolicy?: MaintenancePolicy;

  /**
   * The name (project, location, cluster id) of the cluster to set maintenance
   * policy.
   * Specified in the format 'projects/*\/locations/*\/clusters/*'.
   *
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * Describes the message google.container.v1alpha1.SetMaintenancePolicyRequest.
 * Use `create(SetMaintenancePolicyRequestSchema)` to create a new message.
 */
export const SetMaintenancePolicyRequestSchema: GenMessage<SetMaintenancePolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_container_v1alpha1_cluster_service, 57);

/**
 * Google Container Engine Cluster Manager v1alpha1
 *
 * @generated from service google.container.v1alpha1.ClusterManager
 */
export const ClusterManager: GenService<{
  /**
   * Lists all clusters owned by a project in either the specified zone or all
   * zones.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.ListClusters
   */
  listClusters: {
    methodKind: "unary";
    input: typeof ListClustersRequestSchema;
    output: typeof ListClustersResponseSchema;
  },
  /**
   * Gets the details of a specific cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.GetCluster
   */
  getCluster: {
    methodKind: "unary";
    input: typeof GetClusterRequestSchema;
    output: typeof ClusterSchema;
  },
  /**
   * Creates a cluster, consisting of the specified number and type of Google
   * Compute Engine instances.
   *
   * By default, the cluster is created in the project's
   * [default network](/compute/docs/networks-and-firewalls#networks).
   *
   * One firewall is added for the cluster. After cluster creation,
   * the cluster creates routes for each node to allow the containers
   * on that node to communicate with all other instances in the
   * cluster.
   *
   * Finally, an entry is added to the project's global metadata indicating
   * which CIDR range is being used by the cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.CreateCluster
   */
  createCluster: {
    methodKind: "unary";
    input: typeof CreateClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the settings of a specific cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.UpdateCluster
   */
  updateCluster: {
    methodKind: "unary";
    input: typeof UpdateClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the version and/or iamge type of a specific node pool.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.UpdateNodePool
   */
  updateNodePool: {
    methodKind: "unary";
    input: typeof UpdateNodePoolRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the autoscaling settings of a specific node pool.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetNodePoolAutoscaling
   */
  setNodePoolAutoscaling: {
    methodKind: "unary";
    input: typeof SetNodePoolAutoscalingRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the logging service of a specific cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetLoggingService
   */
  setLoggingService: {
    methodKind: "unary";
    input: typeof SetLoggingServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the monitoring service of a specific cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetMonitoringService
   */
  setMonitoringService: {
    methodKind: "unary";
    input: typeof SetMonitoringServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the addons of a specific cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetAddonsConfig
   */
  setAddonsConfig: {
    methodKind: "unary";
    input: typeof SetAddonsConfigRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the locations of a specific cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetLocations
   */
  setLocations: {
    methodKind: "unary";
    input: typeof SetLocationsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the master of a specific cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.UpdateMaster
   */
  updateMaster: {
    methodKind: "unary";
    input: typeof UpdateMasterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Used to set master auth materials. Currently supports :-
   * Changing the admin password of a specific cluster.
   * This can be either via password generation or explicitly set.
   * Modify basic_auth.csv and reset the K8S API server.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetMasterAuth
   */
  setMasterAuth: {
    methodKind: "unary";
    input: typeof SetMasterAuthRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes the cluster, including the Kubernetes endpoint and all worker
   * nodes.
   *
   * Firewalls and routes that were configured during cluster creation
   * are also deleted.
   *
   * Other Google Compute Engine resources that might be in use by the cluster
   * (e.g. load balancer resources) will not be deleted if they weren't present
   * at the initial create time.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.DeleteCluster
   */
  deleteCluster: {
    methodKind: "unary";
    input: typeof DeleteClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists all operations in a project in a specific zone or all zones.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.ListOperations
   */
  listOperations: {
    methodKind: "unary";
    input: typeof ListOperationsRequestSchema;
    output: typeof ListOperationsResponseSchema;
  },
  /**
   * Gets the specified operation.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.GetOperation
   */
  getOperation: {
    methodKind: "unary";
    input: typeof GetOperationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Cancels the specified operation.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.CancelOperation
   */
  cancelOperation: {
    methodKind: "unary";
    input: typeof CancelOperationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Returns configuration info about the Container Engine service.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.GetServerConfig
   */
  getServerConfig: {
    methodKind: "unary";
    input: typeof GetServerConfigRequestSchema;
    output: typeof ServerConfigSchema;
  },
  /**
   * Lists the node pools for a cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.ListNodePools
   */
  listNodePools: {
    methodKind: "unary";
    input: typeof ListNodePoolsRequestSchema;
    output: typeof ListNodePoolsResponseSchema;
  },
  /**
   * Retrieves the node pool requested.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.GetNodePool
   */
  getNodePool: {
    methodKind: "unary";
    input: typeof GetNodePoolRequestSchema;
    output: typeof NodePoolSchema;
  },
  /**
   * Creates a node pool for a cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.CreateNodePool
   */
  createNodePool: {
    methodKind: "unary";
    input: typeof CreateNodePoolRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a node pool from a cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.DeleteNodePool
   */
  deleteNodePool: {
    methodKind: "unary";
    input: typeof DeleteNodePoolRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Roll back the previously Aborted or Failed NodePool upgrade.
   * This will be an no-op if the last upgrade successfully completed.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.RollbackNodePoolUpgrade
   */
  rollbackNodePoolUpgrade: {
    methodKind: "unary";
    input: typeof RollbackNodePoolUpgradeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the NodeManagement options for a node pool.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetNodePoolManagement
   */
  setNodePoolManagement: {
    methodKind: "unary";
    input: typeof SetNodePoolManagementRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets labels on a cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetLabels
   */
  setLabels: {
    methodKind: "unary";
    input: typeof SetLabelsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Enables or disables the ABAC authorization mechanism on a cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetLegacyAbac
   */
  setLegacyAbac: {
    methodKind: "unary";
    input: typeof SetLegacyAbacRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Start master IP rotation.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.StartIPRotation
   */
  startIPRotation: {
    methodKind: "unary";
    input: typeof StartIPRotationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Completes master IP rotation.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.CompleteIPRotation
   */
  completeIPRotation: {
    methodKind: "unary";
    input: typeof CompleteIPRotationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the size of a specific node pool.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetNodePoolSize
   */
  setNodePoolSize: {
    methodKind: "unary";
    input: typeof SetNodePoolSizeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Enables/Disables Network Policy for a cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetNetworkPolicy
   */
  setNetworkPolicy: {
    methodKind: "unary";
    input: typeof SetNetworkPolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the maintenance policy for a cluster.
   *
   * @generated from rpc google.container.v1alpha1.ClusterManager.SetMaintenancePolicy
   */
  setMaintenancePolicy: {
    methodKind: "unary";
    input: typeof SetMaintenancePolicyRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_container_v1alpha1_cluster_service, 0);

