// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/storagetransfer/v1/transfer_types.proto (package google.storagetransfer.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Code } from "../../rpc/code_pb";
import { file_google_rpc_code } from "../../rpc/code_pb";
import type { Date } from "../../type/date_pb";
import { file_google_type_date } from "../../type/date_pb";
import type { TimeOfDay } from "../../type/timeofday_pb";
import { file_google_type_timeofday } from "../../type/timeofday_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/storagetransfer/v1/transfer_types.proto.
 */
export const file_google_storagetransfer_v1_transfer_types: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_rpc_code, file_google_type_date, file_google_type_timeofday]);

/**
 * Google service account
 *
 * @generated from message google.storagetransfer.v1.GoogleServiceAccount
 */
export type GoogleServiceAccount = Message<"google.storagetransfer.v1.GoogleServiceAccount"> & {
  /**
   * Email address of the service account.
   *
   * @generated from field: string account_email = 1;
   */
  accountEmail: string;

  /**
   * Unique identifier for the service account.
   *
   * @generated from field: string subject_id = 2;
   */
  subjectId: string;
};

/**
 * Describes the message google.storagetransfer.v1.GoogleServiceAccount.
 * Use `create(GoogleServiceAccountSchema)` to create a new message.
 */
export const GoogleServiceAccountSchema: GenMessage<GoogleServiceAccount> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 0);

/**
 * AWS access key (see
 * [AWS Security
 * Credentials](https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html)).
 *
 * For information on our data retention policy for user credentials, see
 * [User credentials](/storage-transfer/docs/data-retention#user-credentials).
 *
 * @generated from message google.storagetransfer.v1.AwsAccessKey
 */
export type AwsAccessKey = Message<"google.storagetransfer.v1.AwsAccessKey"> & {
  /**
   * Required. AWS access key ID.
   *
   * @generated from field: string access_key_id = 1;
   */
  accessKeyId: string;

  /**
   * Required. AWS secret access key. This field is not returned in RPC
   * responses.
   *
   * @generated from field: string secret_access_key = 2;
   */
  secretAccessKey: string;
};

/**
 * Describes the message google.storagetransfer.v1.AwsAccessKey.
 * Use `create(AwsAccessKeySchema)` to create a new message.
 */
export const AwsAccessKeySchema: GenMessage<AwsAccessKey> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 1);

/**
 * Azure credentials
 *
 * For information on our data retention policy for user credentials, see
 * [User credentials](/storage-transfer/docs/data-retention#user-credentials).
 *
 * @generated from message google.storagetransfer.v1.AzureCredentials
 */
export type AzureCredentials = Message<"google.storagetransfer.v1.AzureCredentials"> & {
  /**
   * Required. Azure shared access signature (SAS).
   *
   * For more information about SAS, see
   * [Grant limited access to Azure Storage resources using shared access
   * signatures
   * (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview).
   *
   * @generated from field: string sas_token = 2;
   */
  sasToken: string;
};

/**
 * Describes the message google.storagetransfer.v1.AzureCredentials.
 * Use `create(AzureCredentialsSchema)` to create a new message.
 */
export const AzureCredentialsSchema: GenMessage<AzureCredentials> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 2);

/**
 * Conditions that determine which objects are transferred. Applies only
 * to Cloud Data Sources such as S3, Azure, and Cloud Storage.
 *
 * The "last modification time" refers to the time of the
 * last change to the object's content or metadata — specifically, this is
 * the `updated` property of Cloud Storage objects, the `LastModified` field
 * of S3 objects, and the `Last-Modified` header of Azure blobs.
 *
 * Transfers with a [PosixFilesystem][google.storagetransfer.v1.PosixFilesystem]
 * source or destination don't support `ObjectConditions`.
 *
 * @generated from message google.storagetransfer.v1.ObjectConditions
 */
export type ObjectConditions = Message<"google.storagetransfer.v1.ObjectConditions"> & {
  /**
   * Ensures that objects are not transferred until a specific minimum time
   * has elapsed after the "last modification time". When a
   * [TransferOperation][google.storagetransfer.v1.TransferOperation] begins,
   * objects with a "last modification time" are transferred only if the elapsed
   * time between the
   * [start_time][google.storagetransfer.v1.TransferOperation.start_time] of the
   * `TransferOperation` and the "last modification time" of the object is equal
   * to or greater than the value of min_time_elapsed_since_last_modification`.
   * Objects that do not have a "last modification time" are also transferred.
   *
   * @generated from field: google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
   */
  minTimeElapsedSinceLastModification?: Duration;

  /**
   * Ensures that objects are not transferred if a specific maximum time
   * has elapsed since the "last modification time".
   * When a [TransferOperation][google.storagetransfer.v1.TransferOperation]
   * begins, objects with a "last modification time" are transferred only if the
   * elapsed time between the
   * [start_time][google.storagetransfer.v1.TransferOperation.start_time] of the
   * `TransferOperation`and the "last modification time" of the object
   *  is less than the value of max_time_elapsed_since_last_modification`.
   * Objects that do not have a "last modification time" are also transferred.
   *
   * @generated from field: google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
   */
  maxTimeElapsedSinceLastModification?: Duration;

  /**
   * If you specify `include_prefixes`, Storage Transfer Service uses the items
   * in the `include_prefixes` array to determine which objects to include in a
   * transfer. Objects must start with one of the matching `include_prefixes`
   * for inclusion in the transfer. If
   * [exclude_prefixes][google.storagetransfer.v1.ObjectConditions.exclude_prefixes]
   * is specified, objects must not start with any of the `exclude_prefixes`
   * specified for inclusion in the transfer.
   *
   * The following are requirements of `include_prefixes`:
   *
   *   * Each include-prefix can contain any sequence of Unicode characters, to
   *     a max length of 1024 bytes when UTF8-encoded, and must not contain
   *     Carriage Return or Line Feed characters.  Wildcard matching and regular
   *     expression matching are not supported.
   *
   *   * Each include-prefix must omit the leading slash. For example, to
   *     include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`,
   *     specify the include-prefix as `logs/y=2015/requests.gz`.
   *
   *   * None of the include-prefix values can be empty, if specified.
   *
   *   * Each include-prefix must include a distinct portion of the object
   *     namespace. No include-prefix may be a prefix of another
   *     include-prefix.
   *
   * The max size of `include_prefixes` is 1000.
   *
   * For more information, see [Filtering objects from
   * transfers](/storage-transfer/docs/filtering-objects-from-transfers).
   *
   * @generated from field: repeated string include_prefixes = 3;
   */
  includePrefixes: string[];

  /**
   * If you specify `exclude_prefixes`, Storage Transfer Service uses the items
   * in the `exclude_prefixes` array to determine which objects to exclude from
   * a transfer. Objects must not start with one of the matching
   * `exclude_prefixes` for inclusion in a transfer.
   *
   * The following are requirements of `exclude_prefixes`:
   *
   *   * Each exclude-prefix can contain any sequence of Unicode characters, to
   *     a max length of 1024 bytes when UTF8-encoded, and must not contain
   *     Carriage Return or Line Feed characters.  Wildcard matching and regular
   *     expression matching are not supported.
   *
   *   * Each exclude-prefix must omit the leading slash. For example, to
   *     exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`,
   *     specify the exclude-prefix as `logs/y=2015/requests.gz`.
   *
   *   * None of the exclude-prefix values can be empty, if specified.
   *
   *   * Each exclude-prefix must exclude a distinct portion of the object
   *     namespace. No exclude-prefix may be a prefix of another
   *     exclude-prefix.
   *
   *   * If
   *   [include_prefixes][google.storagetransfer.v1.ObjectConditions.include_prefixes]
   *   is specified, then each exclude-prefix must start with the value of a
   *   path explicitly included by `include_prefixes`.
   *
   * The max size of `exclude_prefixes` is 1000.
   *
   * For more information, see [Filtering objects from
   * transfers](/storage-transfer/docs/filtering-objects-from-transfers).
   *
   * @generated from field: repeated string exclude_prefixes = 4;
   */
  excludePrefixes: string[];

  /**
   * If specified, only objects with a "last modification time" on or after
   * this timestamp and objects that don't have a "last modification time" are
   * transferred.
   *
   * The `last_modified_since` and `last_modified_before` fields can be used
   * together for chunked data processing. For example, consider a script that
   * processes each day's worth of data at a time. For that you'd set each
   * of the fields as follows:
   *
   * *  `last_modified_since` to the start of the day
   *
   * *  `last_modified_before` to the end of the day
   *
   * @generated from field: google.protobuf.Timestamp last_modified_since = 5;
   */
  lastModifiedSince?: Timestamp;

  /**
   * If specified, only objects with a "last modification time" before this
   * timestamp and objects that don't have a "last modification time" are
   * transferred.
   *
   * @generated from field: google.protobuf.Timestamp last_modified_before = 6;
   */
  lastModifiedBefore?: Timestamp;
};

/**
 * Describes the message google.storagetransfer.v1.ObjectConditions.
 * Use `create(ObjectConditionsSchema)` to create a new message.
 */
export const ObjectConditionsSchema: GenMessage<ObjectConditions> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 3);

/**
 * In a GcsData resource, an object's name is the Cloud Storage object's
 * name and its "last modification time" refers to the object's `updated`
 * property of Cloud Storage objects, which changes when the content or the
 * metadata of the object is updated.
 *
 * @generated from message google.storagetransfer.v1.GcsData
 */
export type GcsData = Message<"google.storagetransfer.v1.GcsData"> & {
  /**
   * Required. Cloud Storage bucket name. Must meet
   * [Bucket Name Requirements](/storage/docs/naming#requirements).
   *
   * @generated from field: string bucket_name = 1;
   */
  bucketName: string;

  /**
   * Root path to transfer objects.
   *
   * Must be an empty string or full path name that ends with a '/'. This field
   * is treated as an object prefix. As such, it should generally not begin with
   * a '/'.
   *
   * The root path value must meet
   * [Object Name Requirements](/storage/docs/naming#objectnames).
   *
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * Preview. Enables the transfer of managed folders between Cloud Storage
   * buckets. Set this option on the gcs_data_source.
   *
   * If set to true:
   *
   * - Managed folders in the source bucket are transferred to the
   *   destination bucket.
   * - Managed folders in the destination bucket are overwritten. Other
   *   OVERWRITE options are not supported.
   *
   * See
   * [Transfer Cloud Storage managed
   * folders](/storage-transfer/docs/managed-folders).
   *
   * @generated from field: bool managed_folder_transfer_enabled = 4;
   */
  managedFolderTransferEnabled: boolean;
};

/**
 * Describes the message google.storagetransfer.v1.GcsData.
 * Use `create(GcsDataSchema)` to create a new message.
 */
export const GcsDataSchema: GenMessage<GcsData> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 4);

/**
 * An AwsS3Data resource can be a data source, but not a data sink.
 * In an AwsS3Data resource, an object's name is the S3 object's key name.
 *
 * @generated from message google.storagetransfer.v1.AwsS3Data
 */
export type AwsS3Data = Message<"google.storagetransfer.v1.AwsS3Data"> & {
  /**
   * Required. S3 Bucket name (see
   * [Creating a
   * bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html)).
   *
   * @generated from field: string bucket_name = 1;
   */
  bucketName: string;

  /**
   * Input only. AWS access key used to sign the API requests to the AWS S3
   * bucket. Permissions on the bucket must be granted to the access ID of the
   * AWS access key.
   *
   * For information on our data retention policy for user credentials, see
   * [User credentials](/storage-transfer/docs/data-retention#user-credentials).
   *
   * @generated from field: google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
   */
  awsAccessKey?: AwsAccessKey;

  /**
   * Root path to transfer objects.
   *
   * Must be an empty string or full path name that ends with a '/'. This field
   * is treated as an object prefix. As such, it should generally not begin with
   * a '/'.
   *
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * The Amazon Resource Name (ARN) of the role to support temporary
   * credentials via `AssumeRoleWithWebIdentity`. For more information about
   * ARNs, see [IAM
   * ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns).
   *
   * When a role ARN is provided, Transfer Service fetches temporary
   * credentials for the session using a `AssumeRoleWithWebIdentity` call for
   * the provided role using the
   * [GoogleServiceAccount][google.storagetransfer.v1.GoogleServiceAccount] for
   * this project.
   *
   * @generated from field: string role_arn = 4;
   */
  roleArn: string;

  /**
   * Optional. The CloudFront distribution domain name pointing to this bucket,
   * to use when fetching.
   *
   * See
   * [Transfer from S3 via
   * CloudFront](https://cloud.google.com/storage-transfer/docs/s3-cloudfront)
   * for more information.
   *
   * Format: `https://{id}.cloudfront.net` or any valid custom domain. Must
   * begin with `https://`.
   *
   * @generated from field: string cloudfront_domain = 6;
   */
  cloudfrontDomain: string;

  /**
   * Optional. The Resource name of a secret in Secret Manager.
   *
   * AWS credentials must be stored in Secret Manager in JSON format:
   *
   * {
   *  "access_key_id": "ACCESS_KEY_ID",
   *  "secret_access_key": "SECRET_ACCESS_KEY"
   * }
   *
   * [GoogleServiceAccount][google.storagetransfer.v1.GoogleServiceAccount] must
   * be granted `roles/secretmanager.secretAccessor` for the resource.
   *
   * See [Configure access to a source: Amazon S3]
   * (https://cloud.google.com/storage-transfer/docs/source-amazon-s3#secret_manager)
   * for more information.
   *
   * If `credentials_secret` is specified, do not specify
   * [role_arn][google.storagetransfer.v1.AwsS3Data.role_arn] or
   * [aws_access_key][google.storagetransfer.v1.AwsS3Data.aws_access_key].
   *
   * Format: `projects/{project_number}/secrets/{secret_name}`
   *
   * @generated from field: string credentials_secret = 7;
   */
  credentialsSecret: string;

  /**
   * @generated from oneof google.storagetransfer.v1.AwsS3Data.private_network
   */
  privateNetwork: {
    /**
     * Egress bytes over a Google-managed private network.
     * This network is shared between other users of Storage Transfer Service.
     *
     * @generated from field: bool managed_private_network = 8;
     */
    value: boolean;
    case: "managedPrivateNetwork";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.storagetransfer.v1.AwsS3Data.
 * Use `create(AwsS3DataSchema)` to create a new message.
 */
export const AwsS3DataSchema: GenMessage<AwsS3Data> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 5);

/**
 * An AzureBlobStorageData resource can be a data source, but not a data sink.
 * An AzureBlobStorageData resource represents one Azure container. The storage
 * account determines the [Azure
 * endpoint](https://docs.microsoft.com/en-us/azure/storage/common/storage-create-storage-account#storage-account-endpoints).
 * In an AzureBlobStorageData resource, a blobs's name is the [Azure Blob
 * Storage blob's key
 * name](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#blob-names).
 *
 * @generated from message google.storagetransfer.v1.AzureBlobStorageData
 */
export type AzureBlobStorageData = Message<"google.storagetransfer.v1.AzureBlobStorageData"> & {
  /**
   * Required. The name of the Azure Storage account.
   *
   * @generated from field: string storage_account = 1;
   */
  storageAccount: string;

  /**
   * Required. Input only. Credentials used to authenticate API requests to
   * Azure.
   *
   * For information on our data retention policy for user credentials, see
   * [User credentials](/storage-transfer/docs/data-retention#user-credentials).
   *
   * @generated from field: google.storagetransfer.v1.AzureCredentials azure_credentials = 2;
   */
  azureCredentials?: AzureCredentials;

  /**
   * Required. The container to transfer from the Azure Storage account.
   *
   * @generated from field: string container = 4;
   */
  container: string;

  /**
   * Root path to transfer objects.
   *
   * Must be an empty string or full path name that ends with a '/'. This field
   * is treated as an object prefix. As such, it should generally not begin with
   * a '/'.
   *
   * @generated from field: string path = 5;
   */
  path: string;

  /**
   * Optional. The Resource name of a secret in Secret Manager.
   *
   * The Azure SAS token must be stored in Secret Manager in JSON format:
   *
   * {
   *  "sas_token" : "SAS_TOKEN"
   * }
   *
   * [GoogleServiceAccount][google.storagetransfer.v1.GoogleServiceAccount] must
   * be granted `roles/secretmanager.secretAccessor` for the resource.
   *
   * See [Configure access to a source: Microsoft Azure Blob Storage]
   * (https://cloud.google.com/storage-transfer/docs/source-microsoft-azure#secret_manager)
   * for more information.
   *
   * If `credentials_secret` is specified, do not specify
   * [azure_credentials][google.storagetransfer.v1.AzureBlobStorageData.azure_credentials].
   *
   * Format: `projects/{project_number}/secrets/{secret_name}`
   *
   * @generated from field: string credentials_secret = 7;
   */
  credentialsSecret: string;
};

/**
 * Describes the message google.storagetransfer.v1.AzureBlobStorageData.
 * Use `create(AzureBlobStorageDataSchema)` to create a new message.
 */
export const AzureBlobStorageDataSchema: GenMessage<AzureBlobStorageData> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 6);

/**
 * An HttpData resource specifies a list of objects on the web to be transferred
 * over HTTP.  The information of the objects to be transferred is contained in
 * a file referenced by a URL. The first line in the file must be
 * `"TsvHttpData-1.0"`, which specifies the format of the file.  Subsequent
 * lines specify the information of the list of objects, one object per list
 * entry. Each entry has the following tab-delimited fields:
 *
 * * **HTTP URL** — The location of the object.
 *
 * * **Length** — The size of the object in bytes.
 *
 * * **MD5** — The base64-encoded MD5 hash of the object.
 *
 * For an example of a valid TSV file, see
 * [Transferring data from
 * URLs](https://cloud.google.com/storage-transfer/docs/create-url-list).
 *
 * When transferring data based on a URL list, keep the following in mind:
 *
 * * When an object located at `http(s)://hostname:port/<URL-path>` is
 * transferred to a data sink, the name of the object at the data sink is
 * `<hostname>/<URL-path>`.
 *
 * * If the specified size of an object does not match the actual size of the
 * object fetched, the object is not transferred.
 *
 * * If the specified MD5 does not match the MD5 computed from the transferred
 * bytes, the object transfer fails.
 *
 * * Ensure that each URL you specify is publicly accessible. For
 * example, in Cloud Storage you can
 * [share an object publicly]
 * (/storage/docs/cloud-console#_sharingdata) and get a link to it.
 *
 * * Storage Transfer Service obeys `robots.txt` rules and requires the source
 * HTTP server to support `Range` requests and to return a `Content-Length`
 * header in each response.
 *
 * * [ObjectConditions][google.storagetransfer.v1.ObjectConditions] have no
 * effect when filtering objects to transfer.
 *
 * @generated from message google.storagetransfer.v1.HttpData
 */
export type HttpData = Message<"google.storagetransfer.v1.HttpData"> & {
  /**
   * Required. The URL that points to the file that stores the object list
   * entries. This file must allow public access.  Currently, only URLs with
   * HTTP and HTTPS schemes are supported.
   *
   * @generated from field: string list_url = 1;
   */
  listUrl: string;
};

/**
 * Describes the message google.storagetransfer.v1.HttpData.
 * Use `create(HttpDataSchema)` to create a new message.
 */
export const HttpDataSchema: GenMessage<HttpData> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 7);

/**
 * A POSIX filesystem resource.
 *
 * @generated from message google.storagetransfer.v1.PosixFilesystem
 */
export type PosixFilesystem = Message<"google.storagetransfer.v1.PosixFilesystem"> & {
  /**
   * Root directory path to the filesystem.
   *
   * @generated from field: string root_directory = 1;
   */
  rootDirectory: string;
};

/**
 * Describes the message google.storagetransfer.v1.PosixFilesystem.
 * Use `create(PosixFilesystemSchema)` to create a new message.
 */
export const PosixFilesystemSchema: GenMessage<PosixFilesystem> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 8);

/**
 * An HdfsData resource specifies a path within an HDFS entity (e.g. a cluster).
 * All cluster-specific settings, such as namenodes and ports, are configured on
 * the transfer agents servicing requests, so HdfsData only contains the root
 * path to the data in our transfer.
 *
 * @generated from message google.storagetransfer.v1.HdfsData
 */
export type HdfsData = Message<"google.storagetransfer.v1.HdfsData"> & {
  /**
   * Root path to transfer files.
   *
   * @generated from field: string path = 1;
   */
  path: string;
};

/**
 * Describes the message google.storagetransfer.v1.HdfsData.
 * Use `create(HdfsDataSchema)` to create a new message.
 */
export const HdfsDataSchema: GenMessage<HdfsData> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 9);

/**
 * An AwsS3CompatibleData resource.
 *
 * @generated from message google.storagetransfer.v1.AwsS3CompatibleData
 */
export type AwsS3CompatibleData = Message<"google.storagetransfer.v1.AwsS3CompatibleData"> & {
  /**
   * Required. Specifies the name of the bucket.
   *
   * @generated from field: string bucket_name = 1;
   */
  bucketName: string;

  /**
   * Specifies the root path to transfer objects.
   *
   * Must be an empty string or full path name that ends with a '/'. This
   * field is treated as an object prefix. As such, it should generally not
   * begin with a '/'.
   *
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * Required. Specifies the endpoint of the storage service.
   *
   * @generated from field: string endpoint = 3;
   */
  endpoint: string;

  /**
   * Specifies the region to sign requests with. This can be left blank if
   * requests should be signed with an empty region.
   *
   * @generated from field: string region = 5;
   */
  region: string;

  /**
   * Specifies the metadata of the S3 compatible data provider. Each provider
   * may contain some attributes that do not apply to all S3-compatible data
   * providers. When not specified, S3CompatibleMetadata is used by default.
   *
   * @generated from oneof google.storagetransfer.v1.AwsS3CompatibleData.data_provider
   */
  dataProvider: {
    /**
     * A S3 compatible metadata.
     *
     * @generated from field: google.storagetransfer.v1.S3CompatibleMetadata s3_metadata = 4;
     */
    value: S3CompatibleMetadata;
    case: "s3Metadata";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.storagetransfer.v1.AwsS3CompatibleData.
 * Use `create(AwsS3CompatibleDataSchema)` to create a new message.
 */
export const AwsS3CompatibleDataSchema: GenMessage<AwsS3CompatibleData> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 10);

/**
 * S3CompatibleMetadata contains the metadata fields that apply to the basic
 * types of S3-compatible data providers.
 *
 * @generated from message google.storagetransfer.v1.S3CompatibleMetadata
 */
export type S3CompatibleMetadata = Message<"google.storagetransfer.v1.S3CompatibleMetadata"> & {
  /**
   * Specifies the authentication and authorization method used by the storage
   * service. When not specified, Transfer Service will attempt to determine
   * right auth method to use.
   *
   * @generated from field: google.storagetransfer.v1.S3CompatibleMetadata.AuthMethod auth_method = 1;
   */
  authMethod: S3CompatibleMetadata_AuthMethod;

  /**
   * Specifies the API request model used to call the storage service. When not
   * specified, the default value of RequestModel
   * REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
   *
   * @generated from field: google.storagetransfer.v1.S3CompatibleMetadata.RequestModel request_model = 2;
   */
  requestModel: S3CompatibleMetadata_RequestModel;

  /**
   * Specifies the network protocol of the agent. When not specified, the
   * default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
   *
   * @generated from field: google.storagetransfer.v1.S3CompatibleMetadata.NetworkProtocol protocol = 3;
   */
  protocol: S3CompatibleMetadata_NetworkProtocol;

  /**
   * The Listing API to use for discovering objects. When not specified,
   * Transfer Service will attempt to determine the right API to use.
   *
   * @generated from field: google.storagetransfer.v1.S3CompatibleMetadata.ListApi list_api = 4;
   */
  listApi: S3CompatibleMetadata_ListApi;
};

/**
 * Describes the message google.storagetransfer.v1.S3CompatibleMetadata.
 * Use `create(S3CompatibleMetadataSchema)` to create a new message.
 */
export const S3CompatibleMetadataSchema: GenMessage<S3CompatibleMetadata> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 11);

/**
 * The authentication and authorization method used by the storage service.
 *
 * @generated from enum google.storagetransfer.v1.S3CompatibleMetadata.AuthMethod
 */
export enum S3CompatibleMetadata_AuthMethod {
  /**
   * AuthMethod is not specified.
   *
   * @generated from enum value: AUTH_METHOD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Auth requests with AWS SigV4.
   *
   * @generated from enum value: AUTH_METHOD_AWS_SIGNATURE_V4 = 1;
   */
  AWS_SIGNATURE_V4 = 1,

  /**
   * Auth requests with AWS SigV2.
   *
   * @generated from enum value: AUTH_METHOD_AWS_SIGNATURE_V2 = 2;
   */
  AWS_SIGNATURE_V2 = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.S3CompatibleMetadata.AuthMethod.
 */
export const S3CompatibleMetadata_AuthMethodSchema: GenEnum<S3CompatibleMetadata_AuthMethod> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 11, 0);

/**
 * The request model of the API.
 *
 * @generated from enum google.storagetransfer.v1.S3CompatibleMetadata.RequestModel
 */
export enum S3CompatibleMetadata_RequestModel {
  /**
   * RequestModel is not specified.
   *
   * @generated from enum value: REQUEST_MODEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Perform requests using Virtual Hosted Style.
   * Example: https://bucket-name.s3.region.amazonaws.com/key-name
   *
   * @generated from enum value: REQUEST_MODEL_VIRTUAL_HOSTED_STYLE = 1;
   */
  VIRTUAL_HOSTED_STYLE = 1,

  /**
   * Perform requests using Path Style.
   * Example: https://s3.region.amazonaws.com/bucket-name/key-name
   *
   * @generated from enum value: REQUEST_MODEL_PATH_STYLE = 2;
   */
  PATH_STYLE = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.S3CompatibleMetadata.RequestModel.
 */
export const S3CompatibleMetadata_RequestModelSchema: GenEnum<S3CompatibleMetadata_RequestModel> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 11, 1);

/**
 * The agent network protocol to access the storage service.
 *
 * @generated from enum google.storagetransfer.v1.S3CompatibleMetadata.NetworkProtocol
 */
export enum S3CompatibleMetadata_NetworkProtocol {
  /**
   * NetworkProtocol is not specified.
   *
   * @generated from enum value: NETWORK_PROTOCOL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Perform requests using HTTPS.
   *
   * @generated from enum value: NETWORK_PROTOCOL_HTTPS = 1;
   */
  HTTPS = 1,

  /**
   * Not recommended: This sends data in clear-text. This is only
   * appropriate within a closed network or for publicly available data.
   * Perform requests using HTTP.
   *
   * @generated from enum value: NETWORK_PROTOCOL_HTTP = 2;
   */
  HTTP = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.S3CompatibleMetadata.NetworkProtocol.
 */
export const S3CompatibleMetadata_NetworkProtocolSchema: GenEnum<S3CompatibleMetadata_NetworkProtocol> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 11, 2);

/**
 * The Listing API to use for discovering objects.
 *
 * @generated from enum google.storagetransfer.v1.S3CompatibleMetadata.ListApi
 */
export enum S3CompatibleMetadata_ListApi {
  /**
   * ListApi is not specified.
   *
   * @generated from enum value: LIST_API_UNSPECIFIED = 0;
   */
  LIST_API_UNSPECIFIED = 0,

  /**
   * Perform listing using ListObjectsV2 API.
   *
   * @generated from enum value: LIST_OBJECTS_V2 = 1;
   */
  LIST_OBJECTS_V2 = 1,

  /**
   * Legacy ListObjects API.
   *
   * @generated from enum value: LIST_OBJECTS = 2;
   */
  LIST_OBJECTS = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.S3CompatibleMetadata.ListApi.
 */
export const S3CompatibleMetadata_ListApiSchema: GenEnum<S3CompatibleMetadata_ListApi> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 11, 3);

/**
 * Represents an agent pool.
 *
 * @generated from message google.storagetransfer.v1.AgentPool
 */
export type AgentPool = Message<"google.storagetransfer.v1.AgentPool"> & {
  /**
   * Required. Specifies a unique string that identifies the agent pool.
   *
   * Format: `projects/{project_id}/agentPools/{agent_pool_id}`
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Specifies the client-specified AgentPool description.
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * Output only. Specifies the state of the AgentPool.
   *
   * @generated from field: google.storagetransfer.v1.AgentPool.State state = 4;
   */
  state: AgentPool_State;

  /**
   * Specifies the bandwidth limit details. If this field is unspecified, the
   * default value is set as 'No Limit'.
   *
   * @generated from field: google.storagetransfer.v1.AgentPool.BandwidthLimit bandwidth_limit = 5;
   */
  bandwidthLimit?: AgentPool_BandwidthLimit;
};

/**
 * Describes the message google.storagetransfer.v1.AgentPool.
 * Use `create(AgentPoolSchema)` to create a new message.
 */
export const AgentPoolSchema: GenMessage<AgentPool> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 12);

/**
 * Specifies a bandwidth limit for an agent pool.
 *
 * @generated from message google.storagetransfer.v1.AgentPool.BandwidthLimit
 */
export type AgentPool_BandwidthLimit = Message<"google.storagetransfer.v1.AgentPool.BandwidthLimit"> & {
  /**
   * Bandwidth rate in megabytes per second, distributed across all the agents
   * in the pool.
   *
   * @generated from field: int64 limit_mbps = 1;
   */
  limitMbps: bigint;
};

/**
 * Describes the message google.storagetransfer.v1.AgentPool.BandwidthLimit.
 * Use `create(AgentPool_BandwidthLimitSchema)` to create a new message.
 */
export const AgentPool_BandwidthLimitSchema: GenMessage<AgentPool_BandwidthLimit> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 12, 0);

/**
 * The state of an AgentPool.
 *
 * @generated from enum google.storagetransfer.v1.AgentPool.State
 */
export enum AgentPool_State {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * This is an initialization state. During this stage, resources are
   * allocated for the AgentPool.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * Determines that the AgentPool is created for use. At this state, Agents
   * can join the AgentPool and participate in the transfer jobs in that pool.
   *
   * @generated from enum value: CREATED = 2;
   */
  CREATED = 2,

  /**
   * Determines that the AgentPool deletion has been initiated, and all the
   * resources are scheduled to be cleaned up and freed.
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,
}

/**
 * Describes the enum google.storagetransfer.v1.AgentPool.State.
 */
export const AgentPool_StateSchema: GenEnum<AgentPool_State> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 12, 0);

/**
 * TransferOptions define the actions to be performed on objects in a transfer.
 *
 * @generated from message google.storagetransfer.v1.TransferOptions
 */
export type TransferOptions = Message<"google.storagetransfer.v1.TransferOptions"> & {
  /**
   * When to overwrite objects that already exist in the sink. The default is
   * that only objects that are different from the source are ovewritten. If
   * true, all objects in the sink whose name matches an object in the source
   * are overwritten with the source object.
   *
   * @generated from field: bool overwrite_objects_already_existing_in_sink = 1;
   */
  overwriteObjectsAlreadyExistingInSink: boolean;

  /**
   * Whether objects that exist only in the sink should be deleted.
   *
   * **Note:** This option and
   * [delete_objects_from_source_after_transfer][google.storagetransfer.v1.TransferOptions.delete_objects_from_source_after_transfer]
   * are mutually exclusive.
   *
   * @generated from field: bool delete_objects_unique_in_sink = 2;
   */
  deleteObjectsUniqueInSink: boolean;

  /**
   * Whether objects should be deleted from the source after they are
   * transferred to the sink.
   *
   * **Note:** This option and
   * [delete_objects_unique_in_sink][google.storagetransfer.v1.TransferOptions.delete_objects_unique_in_sink]
   * are mutually exclusive.
   *
   * @generated from field: bool delete_objects_from_source_after_transfer = 3;
   */
  deleteObjectsFromSourceAfterTransfer: boolean;

  /**
   * When to overwrite objects that already exist in the sink. If not set,
   * overwrite behavior is determined by
   * [overwrite_objects_already_existing_in_sink][google.storagetransfer.v1.TransferOptions.overwrite_objects_already_existing_in_sink].
   *
   * @generated from field: google.storagetransfer.v1.TransferOptions.OverwriteWhen overwrite_when = 4;
   */
  overwriteWhen: TransferOptions_OverwriteWhen;

  /**
   * Represents the selected metadata options for a transfer job.
   *
   * @generated from field: google.storagetransfer.v1.MetadataOptions metadata_options = 5;
   */
  metadataOptions?: MetadataOptions;
};

/**
 * Describes the message google.storagetransfer.v1.TransferOptions.
 * Use `create(TransferOptionsSchema)` to create a new message.
 */
export const TransferOptionsSchema: GenMessage<TransferOptions> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 13);

/**
 * Specifies when to overwrite an object in the sink when an object with
 * matching name is found in the source.
 *
 * @generated from enum google.storagetransfer.v1.TransferOptions.OverwriteWhen
 */
export enum TransferOptions_OverwriteWhen {
  /**
   * Overwrite behavior is unspecified.
   *
   * @generated from enum value: OVERWRITE_WHEN_UNSPECIFIED = 0;
   */
  OVERWRITE_WHEN_UNSPECIFIED = 0,

  /**
   * Overwrites destination objects with the source objects, only if the
   * objects have the same name but different HTTP ETags or checksum values.
   *
   * @generated from enum value: DIFFERENT = 1;
   */
  DIFFERENT = 1,

  /**
   * Never overwrites a destination object if a source object has the
   * same name. In this case, the source object is not transferred.
   *
   * @generated from enum value: NEVER = 2;
   */
  NEVER = 2,

  /**
   * Always overwrite the destination object with the source object, even if
   * the HTTP Etags or checksum values are the same.
   *
   * @generated from enum value: ALWAYS = 3;
   */
  ALWAYS = 3,
}

/**
 * Describes the enum google.storagetransfer.v1.TransferOptions.OverwriteWhen.
 */
export const TransferOptions_OverwriteWhenSchema: GenEnum<TransferOptions_OverwriteWhen> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 13, 0);

/**
 * Configuration for running a transfer.
 *
 * @generated from message google.storagetransfer.v1.TransferSpec
 */
export type TransferSpec = Message<"google.storagetransfer.v1.TransferSpec"> & {
  /**
   * The write sink for the data.
   *
   * @generated from oneof google.storagetransfer.v1.TransferSpec.data_sink
   */
  dataSink: {
    /**
     * A Cloud Storage data sink.
     *
     * @generated from field: google.storagetransfer.v1.GcsData gcs_data_sink = 4;
     */
    value: GcsData;
    case: "gcsDataSink";
  } | {
    /**
     * A POSIX Filesystem data sink.
     *
     * @generated from field: google.storagetransfer.v1.PosixFilesystem posix_data_sink = 13;
     */
    value: PosixFilesystem;
    case: "posixDataSink";
  } | { case: undefined; value?: undefined };

  /**
   * The read source of the data.
   *
   * @generated from oneof google.storagetransfer.v1.TransferSpec.data_source
   */
  dataSource: {
    /**
     * A Cloud Storage data source.
     *
     * @generated from field: google.storagetransfer.v1.GcsData gcs_data_source = 1;
     */
    value: GcsData;
    case: "gcsDataSource";
  } | {
    /**
     * An AWS S3 data source.
     *
     * @generated from field: google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
     */
    value: AwsS3Data;
    case: "awsS3DataSource";
  } | {
    /**
     * An HTTP URL data source.
     *
     * @generated from field: google.storagetransfer.v1.HttpData http_data_source = 3;
     */
    value: HttpData;
    case: "httpDataSource";
  } | {
    /**
     * A POSIX Filesystem data source.
     *
     * @generated from field: google.storagetransfer.v1.PosixFilesystem posix_data_source = 14;
     */
    value: PosixFilesystem;
    case: "posixDataSource";
  } | {
    /**
     * An Azure Blob Storage data source.
     *
     * @generated from field: google.storagetransfer.v1.AzureBlobStorageData azure_blob_storage_data_source = 8;
     */
    value: AzureBlobStorageData;
    case: "azureBlobStorageDataSource";
  } | {
    /**
     * An AWS S3 compatible data source.
     *
     * @generated from field: google.storagetransfer.v1.AwsS3CompatibleData aws_s3_compatible_data_source = 19;
     */
    value: AwsS3CompatibleData;
    case: "awsS3CompatibleDataSource";
  } | {
    /**
     * An HDFS cluster data source.
     *
     * @generated from field: google.storagetransfer.v1.HdfsData hdfs_data_source = 20;
     */
    value: HdfsData;
    case: "hdfsDataSource";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof google.storagetransfer.v1.TransferSpec.intermediate_data_location
   */
  intermediateDataLocation: {
    /**
     * For transfers between file systems, specifies a Cloud Storage bucket
     * to be used as an intermediate location through which to transfer data.
     *
     * See [Transfer data between file
     * systems](https://cloud.google.com/storage-transfer/docs/file-to-file) for
     * more information.
     *
     * @generated from field: google.storagetransfer.v1.GcsData gcs_intermediate_data_location = 16;
     */
    value: GcsData;
    case: "gcsIntermediateDataLocation";
  } | { case: undefined; value?: undefined };

  /**
   * Only objects that satisfy these object conditions are included in the set
   * of data source and data sink objects.  Object conditions based on
   * objects' "last modification time" do not exclude objects in a data sink.
   *
   * @generated from field: google.storagetransfer.v1.ObjectConditions object_conditions = 5;
   */
  objectConditions?: ObjectConditions;

  /**
   * If the option
   * [delete_objects_unique_in_sink][google.storagetransfer.v1.TransferOptions.delete_objects_unique_in_sink]
   * is `true` and time-based object conditions such as 'last modification time'
   * are specified, the request fails with an
   * [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] error.
   *
   * @generated from field: google.storagetransfer.v1.TransferOptions transfer_options = 6;
   */
  transferOptions?: TransferOptions;

  /**
   * A manifest file provides a list of objects to be transferred from the data
   * source. This field points to the location of the manifest file.
   * Otherwise, the entire source bucket is used. ObjectConditions still apply.
   *
   * @generated from field: google.storagetransfer.v1.TransferManifest transfer_manifest = 15;
   */
  transferManifest?: TransferManifest;

  /**
   * Specifies the agent pool name associated with the posix data source. When
   * unspecified, the default name is used.
   *
   * @generated from field: string source_agent_pool_name = 17;
   */
  sourceAgentPoolName: string;

  /**
   * Specifies the agent pool name associated with the posix data sink. When
   * unspecified, the default name is used.
   *
   * @generated from field: string sink_agent_pool_name = 18;
   */
  sinkAgentPoolName: string;
};

/**
 * Describes the message google.storagetransfer.v1.TransferSpec.
 * Use `create(TransferSpecSchema)` to create a new message.
 */
export const TransferSpecSchema: GenMessage<TransferSpec> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 14);

/**
 * Specifies the metadata options for running a transfer.
 *
 * @generated from message google.storagetransfer.v1.MetadataOptions
 */
export type MetadataOptions = Message<"google.storagetransfer.v1.MetadataOptions"> & {
  /**
   * Specifies how symlinks should be handled by the transfer. By default,
   * symlinks are not preserved. Only applicable to transfers involving
   * POSIX file systems, and ignored for other transfers.
   *
   * @generated from field: google.storagetransfer.v1.MetadataOptions.Symlink symlink = 1;
   */
  symlink: MetadataOptions_Symlink;

  /**
   * Specifies how each file's mode attribute should be handled by the transfer.
   * By default, mode is not preserved. Only applicable to transfers involving
   * POSIX file systems, and ignored for other transfers.
   *
   * @generated from field: google.storagetransfer.v1.MetadataOptions.Mode mode = 2;
   */
  mode: MetadataOptions_Mode;

  /**
   * Specifies how each file's POSIX group ID (GID) attribute should be handled
   * by the transfer. By default, GID is not preserved. Only applicable to
   * transfers involving POSIX file systems, and ignored for other transfers.
   *
   * @generated from field: google.storagetransfer.v1.MetadataOptions.GID gid = 3;
   */
  gid: MetadataOptions_GID;

  /**
   * Specifies how each file's POSIX user ID (UID) attribute should be handled
   * by the transfer. By default, UID is not preserved. Only applicable to
   * transfers involving POSIX file systems, and ignored for other transfers.
   *
   * @generated from field: google.storagetransfer.v1.MetadataOptions.UID uid = 4;
   */
  uid: MetadataOptions_UID;

  /**
   * Specifies how each object's ACLs should be preserved for transfers between
   * Google Cloud Storage buckets. If unspecified, the default behavior is the
   * same as ACL_DESTINATION_BUCKET_DEFAULT.
   *
   * @generated from field: google.storagetransfer.v1.MetadataOptions.Acl acl = 5;
   */
  acl: MetadataOptions_Acl;

  /**
   * Specifies the storage class to set on objects being transferred to Google
   * Cloud Storage buckets.  If unspecified, the default behavior is the same as
   * [STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT][google.storagetransfer.v1.MetadataOptions.StorageClass.STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT].
   *
   * @generated from field: google.storagetransfer.v1.MetadataOptions.StorageClass storage_class = 6;
   */
  storageClass: MetadataOptions_StorageClass;

  /**
   * Specifies how each object's temporary hold status should be preserved for
   * transfers between Google Cloud Storage buckets.  If unspecified, the
   * default behavior is the same as
   * [TEMPORARY_HOLD_PRESERVE][google.storagetransfer.v1.MetadataOptions.TemporaryHold.TEMPORARY_HOLD_PRESERVE].
   *
   * @generated from field: google.storagetransfer.v1.MetadataOptions.TemporaryHold temporary_hold = 7;
   */
  temporaryHold: MetadataOptions_TemporaryHold;

  /**
   * Specifies how each object's Cloud KMS customer-managed encryption key
   * (CMEK) is preserved for transfers between Google Cloud Storage buckets.  If
   * unspecified, the default behavior is the same as
   * [KMS_KEY_DESTINATION_BUCKET_DEFAULT][google.storagetransfer.v1.MetadataOptions.KmsKey.KMS_KEY_DESTINATION_BUCKET_DEFAULT].
   *
   * @generated from field: google.storagetransfer.v1.MetadataOptions.KmsKey kms_key = 8;
   */
  kmsKey: MetadataOptions_KmsKey;

  /**
   * Specifies how each object's `timeCreated` metadata is preserved for
   * transfers. If unspecified, the default behavior is the same as
   * [TIME_CREATED_SKIP][google.storagetransfer.v1.MetadataOptions.TimeCreated.TIME_CREATED_SKIP].
   * This behavior is supported for transfers to Cloud Storage buckets from
   * Cloud Storage, Amazon S3, S3-compatible storage, and Azure sources.
   *
   * @generated from field: google.storagetransfer.v1.MetadataOptions.TimeCreated time_created = 9;
   */
  timeCreated: MetadataOptions_TimeCreated;
};

/**
 * Describes the message google.storagetransfer.v1.MetadataOptions.
 * Use `create(MetadataOptionsSchema)` to create a new message.
 */
export const MetadataOptionsSchema: GenMessage<MetadataOptions> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 15);

/**
 * Whether symlinks should be skipped or preserved during a transfer job.
 *
 * @generated from enum google.storagetransfer.v1.MetadataOptions.Symlink
 */
export enum MetadataOptions_Symlink {
  /**
   * Symlink behavior is unspecified.
   *
   * @generated from enum value: SYMLINK_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Do not preserve symlinks during a transfer job.
   *
   * @generated from enum value: SYMLINK_SKIP = 1;
   */
  SKIP = 1,

  /**
   * Preserve symlinks during a transfer job.
   *
   * @generated from enum value: SYMLINK_PRESERVE = 2;
   */
  PRESERVE = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.MetadataOptions.Symlink.
 */
export const MetadataOptions_SymlinkSchema: GenEnum<MetadataOptions_Symlink> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 15, 0);

/**
 * Options for handling file mode attribute.
 *
 * @generated from enum google.storagetransfer.v1.MetadataOptions.Mode
 */
export enum MetadataOptions_Mode {
  /**
   * Mode behavior is unspecified.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Do not preserve mode during a transfer job.
   *
   * @generated from enum value: MODE_SKIP = 1;
   */
  SKIP = 1,

  /**
   * Preserve mode during a transfer job.
   *
   * @generated from enum value: MODE_PRESERVE = 2;
   */
  PRESERVE = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.MetadataOptions.Mode.
 */
export const MetadataOptions_ModeSchema: GenEnum<MetadataOptions_Mode> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 15, 1);

/**
 * Options for handling file GID attribute.
 *
 * @generated from enum google.storagetransfer.v1.MetadataOptions.GID
 */
export enum MetadataOptions_GID {
  /**
   * GID behavior is unspecified.
   *
   * @generated from enum value: GID_UNSPECIFIED = 0;
   */
  GID_UNSPECIFIED = 0,

  /**
   * Do not preserve GID during a transfer job.
   *
   * @generated from enum value: GID_SKIP = 1;
   */
  GID_SKIP = 1,

  /**
   * Preserve GID during a transfer job.
   *
   * @generated from enum value: GID_NUMBER = 2;
   */
  GID_NUMBER = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.MetadataOptions.GID.
 */
export const MetadataOptions_GIDSchema: GenEnum<MetadataOptions_GID> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 15, 2);

/**
 * Options for handling file UID attribute.
 *
 * @generated from enum google.storagetransfer.v1.MetadataOptions.UID
 */
export enum MetadataOptions_UID {
  /**
   * UID behavior is unspecified.
   *
   * @generated from enum value: UID_UNSPECIFIED = 0;
   */
  UID_UNSPECIFIED = 0,

  /**
   * Do not preserve UID during a transfer job.
   *
   * @generated from enum value: UID_SKIP = 1;
   */
  UID_SKIP = 1,

  /**
   * Preserve UID during a transfer job.
   *
   * @generated from enum value: UID_NUMBER = 2;
   */
  UID_NUMBER = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.MetadataOptions.UID.
 */
export const MetadataOptions_UIDSchema: GenEnum<MetadataOptions_UID> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 15, 3);

/**
 * Options for handling Cloud Storage object ACLs.
 *
 * @generated from enum google.storagetransfer.v1.MetadataOptions.Acl
 */
export enum MetadataOptions_Acl {
  /**
   * ACL behavior is unspecified.
   *
   * @generated from enum value: ACL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Use the destination bucket's default object ACLS, if applicable.
   *
   * @generated from enum value: ACL_DESTINATION_BUCKET_DEFAULT = 1;
   */
  DESTINATION_BUCKET_DEFAULT = 1,

  /**
   * Preserve the object's original ACLs. This requires the service account
   * to have `storage.objects.getIamPolicy` permission for the source object.
   * [Uniform bucket-level
   * access](https://cloud.google.com/storage/docs/uniform-bucket-level-access)
   * must not be enabled on either the source or destination buckets.
   *
   * @generated from enum value: ACL_PRESERVE = 2;
   */
  PRESERVE = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.MetadataOptions.Acl.
 */
export const MetadataOptions_AclSchema: GenEnum<MetadataOptions_Acl> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 15, 4);

/**
 * Options for handling Google Cloud Storage object storage class.
 *
 * @generated from enum google.storagetransfer.v1.MetadataOptions.StorageClass
 */
export enum MetadataOptions_StorageClass {
  /**
   * Storage class behavior is unspecified.
   *
   * @generated from enum value: STORAGE_CLASS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Use the destination bucket's default storage class.
   *
   * @generated from enum value: STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT = 1;
   */
  DESTINATION_BUCKET_DEFAULT = 1,

  /**
   * Preserve the object's original storage class. This is only supported for
   * transfers from Google Cloud Storage buckets. REGIONAL and MULTI_REGIONAL
   * storage classes will be mapped to STANDARD to ensure they can be written
   * to the destination bucket.
   *
   * @generated from enum value: STORAGE_CLASS_PRESERVE = 2;
   */
  PRESERVE = 2,

  /**
   * Set the storage class to STANDARD.
   *
   * @generated from enum value: STORAGE_CLASS_STANDARD = 3;
   */
  STANDARD = 3,

  /**
   * Set the storage class to NEARLINE.
   *
   * @generated from enum value: STORAGE_CLASS_NEARLINE = 4;
   */
  NEARLINE = 4,

  /**
   * Set the storage class to COLDLINE.
   *
   * @generated from enum value: STORAGE_CLASS_COLDLINE = 5;
   */
  COLDLINE = 5,

  /**
   * Set the storage class to ARCHIVE.
   *
   * @generated from enum value: STORAGE_CLASS_ARCHIVE = 6;
   */
  ARCHIVE = 6,
}

/**
 * Describes the enum google.storagetransfer.v1.MetadataOptions.StorageClass.
 */
export const MetadataOptions_StorageClassSchema: GenEnum<MetadataOptions_StorageClass> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 15, 5);

/**
 * Options for handling temporary holds for Google Cloud Storage objects.
 *
 * @generated from enum google.storagetransfer.v1.MetadataOptions.TemporaryHold
 */
export enum MetadataOptions_TemporaryHold {
  /**
   * Temporary hold behavior is unspecified.
   *
   * @generated from enum value: TEMPORARY_HOLD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Do not set a temporary hold on the destination object.
   *
   * @generated from enum value: TEMPORARY_HOLD_SKIP = 1;
   */
  SKIP = 1,

  /**
   * Preserve the object's original temporary hold status.
   *
   * @generated from enum value: TEMPORARY_HOLD_PRESERVE = 2;
   */
  PRESERVE = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.MetadataOptions.TemporaryHold.
 */
export const MetadataOptions_TemporaryHoldSchema: GenEnum<MetadataOptions_TemporaryHold> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 15, 6);

/**
 * Options for handling the KmsKey setting for Google Cloud Storage objects.
 *
 * @generated from enum google.storagetransfer.v1.MetadataOptions.KmsKey
 */
export enum MetadataOptions_KmsKey {
  /**
   * KmsKey behavior is unspecified.
   *
   * @generated from enum value: KMS_KEY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Use the destination bucket's default encryption settings.
   *
   * @generated from enum value: KMS_KEY_DESTINATION_BUCKET_DEFAULT = 1;
   */
  DESTINATION_BUCKET_DEFAULT = 1,

  /**
   * Preserve the object's original Cloud KMS customer-managed encryption key
   * (CMEK) if present. Objects that do not use a Cloud KMS encryption key
   * will be encrypted using the destination bucket's encryption settings.
   *
   * @generated from enum value: KMS_KEY_PRESERVE = 2;
   */
  PRESERVE = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.MetadataOptions.KmsKey.
 */
export const MetadataOptions_KmsKeySchema: GenEnum<MetadataOptions_KmsKey> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 15, 7);

/**
 * Options for handling `timeCreated` metadata for Google Cloud Storage
 * objects.
 *
 * @generated from enum google.storagetransfer.v1.MetadataOptions.TimeCreated
 */
export enum MetadataOptions_TimeCreated {
  /**
   * TimeCreated behavior is unspecified.
   *
   * @generated from enum value: TIME_CREATED_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Do not preserve the `timeCreated` metadata from the source object.
   *
   * @generated from enum value: TIME_CREATED_SKIP = 1;
   */
  SKIP = 1,

  /**
   * Preserves the source object's `timeCreated` or `lastModified` metadata in
   * the `customTime` field in the destination object.  Note that any value
   * stored in the source object's `customTime` field will not be propagated
   * to the destination object.
   *
   * @generated from enum value: TIME_CREATED_PRESERVE_AS_CUSTOM_TIME = 2;
   */
  PRESERVE_AS_CUSTOM_TIME = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.MetadataOptions.TimeCreated.
 */
export const MetadataOptions_TimeCreatedSchema: GenEnum<MetadataOptions_TimeCreated> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 15, 8);

/**
 * Specifies where the manifest is located.
 *
 * @generated from message google.storagetransfer.v1.TransferManifest
 */
export type TransferManifest = Message<"google.storagetransfer.v1.TransferManifest"> & {
  /**
   * Specifies the path to the manifest in Cloud Storage. The Google-managed
   * service account for the transfer must have `storage.objects.get`
   * permission for this object. An example path is
   * `gs://bucket_name/path/manifest.csv`.
   *
   * @generated from field: string location = 1;
   */
  location: string;
};

/**
 * Describes the message google.storagetransfer.v1.TransferManifest.
 * Use `create(TransferManifestSchema)` to create a new message.
 */
export const TransferManifestSchema: GenMessage<TransferManifest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 16);

/**
 * Transfers can be scheduled to recur or to run just once.
 *
 * @generated from message google.storagetransfer.v1.Schedule
 */
export type Schedule = Message<"google.storagetransfer.v1.Schedule"> & {
  /**
   * Required. The start date of a transfer. Date boundaries are determined
   * relative to UTC time. If `schedule_start_date` and
   * [start_time_of_day][google.storagetransfer.v1.Schedule.start_time_of_day]
   * are in the past relative to the job's creation time, the transfer starts
   * the day after you schedule the transfer request.
   *
   * **Note:** When starting jobs at or near midnight UTC it is possible that
   * a job starts later than expected. For example, if you send an outbound
   * request on June 1 one millisecond prior to midnight UTC and the Storage
   * Transfer Service server receives the request on June 2, then it creates
   * a TransferJob with `schedule_start_date` set to June 2 and a
   * `start_time_of_day` set to midnight UTC. The first scheduled
   * [TransferOperation][google.storagetransfer.v1.TransferOperation] takes
   * place on June 3 at midnight UTC.
   *
   * @generated from field: google.type.Date schedule_start_date = 1;
   */
  scheduleStartDate?: Date;

  /**
   * The last day a transfer runs. Date boundaries are determined relative to
   * UTC time. A job runs once per 24 hours within the following guidelines:
   *
   * *   If `schedule_end_date` and
   * [schedule_start_date][google.storagetransfer.v1.Schedule.schedule_start_date]
   * are the same and in
   *     the future relative to UTC, the transfer is executed only one time.
   * *   If `schedule_end_date` is later than `schedule_start_date`  and
   *     `schedule_end_date` is in the future relative to UTC, the job runs each
   *     day at
   *     [start_time_of_day][google.storagetransfer.v1.Schedule.start_time_of_day]
   *     through `schedule_end_date`.
   *
   * @generated from field: google.type.Date schedule_end_date = 2;
   */
  scheduleEndDate?: Date;

  /**
   * The time in UTC that a transfer job is scheduled to run. Transfers may
   * start later than this time.
   *
   * If `start_time_of_day` is not specified:
   *
   * *   One-time transfers run immediately.
   * *   Recurring transfers run immediately, and each day at midnight UTC,
   *     through
   *     [schedule_end_date][google.storagetransfer.v1.Schedule.schedule_end_date].
   *
   * If `start_time_of_day` is specified:
   *
   * *   One-time transfers run at the specified time.
   * *   Recurring transfers run at the specified time each day, through
   *     `schedule_end_date`.
   *
   * @generated from field: google.type.TimeOfDay start_time_of_day = 3;
   */
  startTimeOfDay?: TimeOfDay;

  /**
   * The time in UTC that no further transfer operations are scheduled. Combined
   * with
   * [schedule_end_date][google.storagetransfer.v1.Schedule.schedule_end_date],
   * `end_time_of_day` specifies the end date and time for starting new transfer
   * operations. This field must be greater than or equal to the timestamp
   * corresponding to the combintation of
   * [schedule_start_date][google.storagetransfer.v1.Schedule.schedule_start_date]
   * and
   * [start_time_of_day][google.storagetransfer.v1.Schedule.start_time_of_day],
   * and is subject to the following:
   *
   * *   If `end_time_of_day` is not set and `schedule_end_date` is set, then
   *     a default value of `23:59:59` is used for `end_time_of_day`.
   *
   * *   If `end_time_of_day` is set and `schedule_end_date` is not set, then
   *     [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] is returned.
   *
   * @generated from field: google.type.TimeOfDay end_time_of_day = 4;
   */
  endTimeOfDay?: TimeOfDay;

  /**
   * Interval between the start of each scheduled TransferOperation. If
   * unspecified, the default value is 24 hours. This value may not be less than
   * 1 hour.
   *
   * @generated from field: google.protobuf.Duration repeat_interval = 5;
   */
  repeatInterval?: Duration;
};

/**
 * Describes the message google.storagetransfer.v1.Schedule.
 * Use `create(ScheduleSchema)` to create a new message.
 */
export const ScheduleSchema: GenMessage<Schedule> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 17);

/**
 * Specifies the Event-driven transfer options. Event-driven transfers listen to
 * an event stream to transfer updated files.
 *
 * @generated from message google.storagetransfer.v1.EventStream
 */
export type EventStream = Message<"google.storagetransfer.v1.EventStream"> & {
  /**
   * Required. Specifies a unique name of the resource such as AWS SQS
   * ARN in the form 'arn:aws:sqs:region:account_id:queue_name',
   * or Pub/Sub subscription resource name in the form
   * 'projects/{project}/subscriptions/{sub}'.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Specifies the date and time that Storage Transfer Service starts
   * listening for events from this stream. If no start time is specified or
   * start time is in the past, Storage Transfer Service starts listening
   * immediately.
   *
   * @generated from field: google.protobuf.Timestamp event_stream_start_time = 2;
   */
  eventStreamStartTime?: Timestamp;

  /**
   * Specifies the data and time at which Storage Transfer Service stops
   * listening for events from this stream. After this time, any transfers in
   * progress will complete, but no new transfers are initiated.
   *
   * @generated from field: google.protobuf.Timestamp event_stream_expiration_time = 3;
   */
  eventStreamExpirationTime?: Timestamp;
};

/**
 * Describes the message google.storagetransfer.v1.EventStream.
 * Use `create(EventStreamSchema)` to create a new message.
 */
export const EventStreamSchema: GenMessage<EventStream> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 18);

/**
 * This resource represents the configuration of a transfer job that runs
 * periodically.
 *
 * @generated from message google.storagetransfer.v1.TransferJob
 */
export type TransferJob = Message<"google.storagetransfer.v1.TransferJob"> & {
  /**
   * A unique name (within the transfer project) assigned when the job is
   * created.  If this field is empty in a CreateTransferJobRequest, Storage
   * Transfer Service assigns a unique name. Otherwise, the specified name
   * is used as the unique name for this job.
   *
   * If the specified name is in use by a job, the creation request fails with
   * an [ALREADY_EXISTS][google.rpc.Code.ALREADY_EXISTS] error.
   *
   * This name must start with `"transferJobs/"` prefix and end with a letter or
   * a number, and should be no more than 128 characters. For transfers
   * involving PosixFilesystem, this name must start with `transferJobs/OPI`
   * specifically. For all other transfer types, this name must not start with
   * `transferJobs/OPI`.
   *
   * Non-PosixFilesystem example:
   * `"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$"`
   *
   * PosixFilesystem example:
   * `"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$"`
   *
   * Applications must not rely on the enforcement of naming requirements
   * involving OPI.
   *
   * Invalid job names fail with an
   * [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] error.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A description provided by the user for the job. Its max length is 1024
   * bytes when Unicode-encoded.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The ID of the Google Cloud project that owns the job.
   *
   * @generated from field: string project_id = 3;
   */
  projectId: string;

  /**
   * Transfer specification.
   *
   * @generated from field: google.storagetransfer.v1.TransferSpec transfer_spec = 4;
   */
  transferSpec?: TransferSpec;

  /**
   * Notification configuration.
   *
   * @generated from field: google.storagetransfer.v1.NotificationConfig notification_config = 11;
   */
  notificationConfig?: NotificationConfig;

  /**
   * Logging configuration.
   *
   * @generated from field: google.storagetransfer.v1.LoggingConfig logging_config = 14;
   */
  loggingConfig?: LoggingConfig;

  /**
   * Specifies schedule for the transfer job.
   * This is an optional field. When the field is not set, the job never
   * executes a transfer, unless you invoke RunTransferJob or update the job to
   * have a non-empty schedule.
   *
   * @generated from field: google.storagetransfer.v1.Schedule schedule = 5;
   */
  schedule?: Schedule;

  /**
   * Specifies the event stream for the transfer job for event-driven transfers.
   * When EventStream is specified, the Schedule fields are ignored.
   *
   * @generated from field: google.storagetransfer.v1.EventStream event_stream = 15;
   */
  eventStream?: EventStream;

  /**
   * Status of the job. This value MUST be specified for
   * `CreateTransferJobRequests`.
   *
   * **Note:** The effect of the new job status takes place during a subsequent
   * job run. For example, if you change the job status from
   * [ENABLED][google.storagetransfer.v1.TransferJob.Status.ENABLED] to
   * [DISABLED][google.storagetransfer.v1.TransferJob.Status.DISABLED], and an
   * operation spawned by the transfer is running, the status change would not
   * affect the current operation.
   *
   * @generated from field: google.storagetransfer.v1.TransferJob.Status status = 6;
   */
  status: TransferJob_Status;

  /**
   * Output only. The time that the transfer job was created.
   *
   * @generated from field: google.protobuf.Timestamp creation_time = 7;
   */
  creationTime?: Timestamp;

  /**
   * Output only. The time that the transfer job was last modified.
   *
   * @generated from field: google.protobuf.Timestamp last_modification_time = 8;
   */
  lastModificationTime?: Timestamp;

  /**
   * Output only. The time that the transfer job was deleted.
   *
   * @generated from field: google.protobuf.Timestamp deletion_time = 9;
   */
  deletionTime?: Timestamp;

  /**
   * The name of the most recently started TransferOperation of this JobConfig.
   * Present if a TransferOperation has been created for this JobConfig.
   *
   * @generated from field: string latest_operation_name = 12;
   */
  latestOperationName: string;
};

/**
 * Describes the message google.storagetransfer.v1.TransferJob.
 * Use `create(TransferJobSchema)` to create a new message.
 */
export const TransferJobSchema: GenMessage<TransferJob> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 19);

/**
 * The status of the transfer job.
 *
 * @generated from enum google.storagetransfer.v1.TransferJob.Status
 */
export enum TransferJob_Status {
  /**
   * Zero is an illegal value.
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * New transfers are performed based on the schedule.
   *
   * @generated from enum value: ENABLED = 1;
   */
  ENABLED = 1,

  /**
   * New transfers are not scheduled.
   *
   * @generated from enum value: DISABLED = 2;
   */
  DISABLED = 2,

  /**
   * This is a soft delete state. After a transfer job is set to this
   * state, the job and all the transfer executions are subject to
   * garbage collection. Transfer jobs become eligible for garbage collection
   * 30 days after their status is set to `DELETED`.
   *
   * @generated from enum value: DELETED = 3;
   */
  DELETED = 3,
}

/**
 * Describes the enum google.storagetransfer.v1.TransferJob.Status.
 */
export const TransferJob_StatusSchema: GenEnum<TransferJob_Status> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 19, 0);

/**
 * An entry describing an error that has occurred.
 *
 * @generated from message google.storagetransfer.v1.ErrorLogEntry
 */
export type ErrorLogEntry = Message<"google.storagetransfer.v1.ErrorLogEntry"> & {
  /**
   * Required. A URL that refers to the target (a data source, a data sink,
   * or an object) with which the error is associated.
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * A list of messages that carry the error details.
   *
   * @generated from field: repeated string error_details = 3;
   */
  errorDetails: string[];
};

/**
 * Describes the message google.storagetransfer.v1.ErrorLogEntry.
 * Use `create(ErrorLogEntrySchema)` to create a new message.
 */
export const ErrorLogEntrySchema: GenMessage<ErrorLogEntry> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 20);

/**
 * A summary of errors by error code, plus a count and sample error log
 * entries.
 *
 * @generated from message google.storagetransfer.v1.ErrorSummary
 */
export type ErrorSummary = Message<"google.storagetransfer.v1.ErrorSummary"> & {
  /**
   * Required.
   *
   * @generated from field: google.rpc.Code error_code = 1;
   */
  errorCode: Code;

  /**
   * Required. Count of this type of error.
   *
   * @generated from field: int64 error_count = 2;
   */
  errorCount: bigint;

  /**
   * Error samples.
   *
   * At most 5 error log entries are recorded for a given
   * error code for a single transfer operation.
   *
   * @generated from field: repeated google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
   */
  errorLogEntries: ErrorLogEntry[];
};

/**
 * Describes the message google.storagetransfer.v1.ErrorSummary.
 * Use `create(ErrorSummarySchema)` to create a new message.
 */
export const ErrorSummarySchema: GenMessage<ErrorSummary> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 21);

/**
 * A collection of counters that report the progress of a transfer operation.
 *
 * @generated from message google.storagetransfer.v1.TransferCounters
 */
export type TransferCounters = Message<"google.storagetransfer.v1.TransferCounters"> & {
  /**
   * Objects found in the data source that are scheduled to be transferred,
   * excluding any that are filtered based on object conditions or skipped due
   * to sync.
   *
   * @generated from field: int64 objects_found_from_source = 1;
   */
  objectsFoundFromSource: bigint;

  /**
   * Bytes found in the data source that are scheduled to be transferred,
   * excluding any that are filtered based on object conditions or skipped due
   * to sync.
   *
   * @generated from field: int64 bytes_found_from_source = 2;
   */
  bytesFoundFromSource: bigint;

  /**
   * Objects found only in the data sink that are scheduled to be deleted.
   *
   * @generated from field: int64 objects_found_only_from_sink = 3;
   */
  objectsFoundOnlyFromSink: bigint;

  /**
   * Bytes found only in the data sink that are scheduled to be deleted.
   *
   * @generated from field: int64 bytes_found_only_from_sink = 4;
   */
  bytesFoundOnlyFromSink: bigint;

  /**
   * Objects in the data source that are not transferred because they already
   * exist in the data sink.
   *
   * @generated from field: int64 objects_from_source_skipped_by_sync = 5;
   */
  objectsFromSourceSkippedBySync: bigint;

  /**
   * Bytes in the data source that are not transferred because they already
   * exist in the data sink.
   *
   * @generated from field: int64 bytes_from_source_skipped_by_sync = 6;
   */
  bytesFromSourceSkippedBySync: bigint;

  /**
   * Objects that are copied to the data sink.
   *
   * @generated from field: int64 objects_copied_to_sink = 7;
   */
  objectsCopiedToSink: bigint;

  /**
   * Bytes that are copied to the data sink.
   *
   * @generated from field: int64 bytes_copied_to_sink = 8;
   */
  bytesCopiedToSink: bigint;

  /**
   * Objects that are deleted from the data source.
   *
   * @generated from field: int64 objects_deleted_from_source = 9;
   */
  objectsDeletedFromSource: bigint;

  /**
   * Bytes that are deleted from the data source.
   *
   * @generated from field: int64 bytes_deleted_from_source = 10;
   */
  bytesDeletedFromSource: bigint;

  /**
   * Objects that are deleted from the data sink.
   *
   * @generated from field: int64 objects_deleted_from_sink = 11;
   */
  objectsDeletedFromSink: bigint;

  /**
   * Bytes that are deleted from the data sink.
   *
   * @generated from field: int64 bytes_deleted_from_sink = 12;
   */
  bytesDeletedFromSink: bigint;

  /**
   * Objects in the data source that failed to be transferred or that failed
   * to be deleted after being transferred.
   *
   * @generated from field: int64 objects_from_source_failed = 13;
   */
  objectsFromSourceFailed: bigint;

  /**
   * Bytes in the data source that failed to be transferred or that failed to
   * be deleted after being transferred.
   *
   * @generated from field: int64 bytes_from_source_failed = 14;
   */
  bytesFromSourceFailed: bigint;

  /**
   * Objects that failed to be deleted from the data sink.
   *
   * @generated from field: int64 objects_failed_to_delete_from_sink = 15;
   */
  objectsFailedToDeleteFromSink: bigint;

  /**
   * Bytes that failed to be deleted from the data sink.
   *
   * @generated from field: int64 bytes_failed_to_delete_from_sink = 16;
   */
  bytesFailedToDeleteFromSink: bigint;

  /**
   * For transfers involving PosixFilesystem only.
   *
   * Number of directories found while listing. For example, if the root
   * directory of the transfer is `base/` and there are two other directories,
   * `a/` and `b/` under this directory, the count after listing `base/`,
   * `base/a/` and `base/b/` is 3.
   *
   * @generated from field: int64 directories_found_from_source = 17;
   */
  directoriesFoundFromSource: bigint;

  /**
   * For transfers involving PosixFilesystem only.
   *
   * Number of listing failures for each directory found at the source.
   * Potential failures when listing a directory include permission failure or
   * block failure. If listing a directory fails, no files in the directory are
   * transferred.
   *
   * @generated from field: int64 directories_failed_to_list_from_source = 18;
   */
  directoriesFailedToListFromSource: bigint;

  /**
   * For transfers involving PosixFilesystem only.
   *
   * Number of successful listings for each directory found at the source.
   *
   * @generated from field: int64 directories_successfully_listed_from_source = 19;
   */
  directoriesSuccessfullyListedFromSource: bigint;

  /**
   * Number of successfully cleaned up intermediate objects.
   *
   * @generated from field: int64 intermediate_objects_cleaned_up = 22;
   */
  intermediateObjectsCleanedUp: bigint;

  /**
   * Number of intermediate objects failed cleaned up.
   *
   * @generated from field: int64 intermediate_objects_failed_cleaned_up = 23;
   */
  intermediateObjectsFailedCleanedUp: bigint;
};

/**
 * Describes the message google.storagetransfer.v1.TransferCounters.
 * Use `create(TransferCountersSchema)` to create a new message.
 */
export const TransferCountersSchema: GenMessage<TransferCounters> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 22);

/**
 * Specification to configure notifications published to Pub/Sub.
 * Notifications are published to the customer-provided topic using the
 * following `PubsubMessage.attributes`:
 *
 * * `"eventType"`: one of the
 * [EventType][google.storagetransfer.v1.NotificationConfig.EventType] values
 * * `"payloadFormat"`: one of the
 * [PayloadFormat][google.storagetransfer.v1.NotificationConfig.PayloadFormat]
 * values
 * * `"projectId"`: the
 * [project_id][google.storagetransfer.v1.TransferOperation.project_id] of the
 * `TransferOperation`
 * * `"transferJobName"`: the
 * [transfer_job_name][google.storagetransfer.v1.TransferOperation.transfer_job_name]
 * of the `TransferOperation`
 * * `"transferOperationName"`: the
 * [name][google.storagetransfer.v1.TransferOperation.name] of the
 * `TransferOperation`
 *
 * The `PubsubMessage.data` contains a
 * [TransferOperation][google.storagetransfer.v1.TransferOperation] resource
 * formatted according to the specified `PayloadFormat`.
 *
 * @generated from message google.storagetransfer.v1.NotificationConfig
 */
export type NotificationConfig = Message<"google.storagetransfer.v1.NotificationConfig"> & {
  /**
   * Required. The `Topic.name` of the Pub/Sub topic to which to publish
   * notifications. Must be of the format: `projects/{project}/topics/{topic}`.
   * Not matching this format results in an
   * [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] error.
   *
   * @generated from field: string pubsub_topic = 1;
   */
  pubsubTopic: string;

  /**
   * Event types for which a notification is desired. If empty, send
   * notifications for all event types.
   *
   * @generated from field: repeated google.storagetransfer.v1.NotificationConfig.EventType event_types = 2;
   */
  eventTypes: NotificationConfig_EventType[];

  /**
   * Required. The desired format of the notification message payloads.
   *
   * @generated from field: google.storagetransfer.v1.NotificationConfig.PayloadFormat payload_format = 3;
   */
  payloadFormat: NotificationConfig_PayloadFormat;
};

/**
 * Describes the message google.storagetransfer.v1.NotificationConfig.
 * Use `create(NotificationConfigSchema)` to create a new message.
 */
export const NotificationConfigSchema: GenMessage<NotificationConfig> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 23);

/**
 * Enum for specifying event types for which notifications are to be
 * published.
 *
 * Additional event types may be added in the future. Clients should either
 * safely ignore unrecognized event types or explicitly specify which event
 * types they are prepared to accept.
 *
 * @generated from enum google.storagetransfer.v1.NotificationConfig.EventType
 */
export enum NotificationConfig_EventType {
  /**
   * Illegal value, to avoid allowing a default.
   *
   * @generated from enum value: EVENT_TYPE_UNSPECIFIED = 0;
   */
  EVENT_TYPE_UNSPECIFIED = 0,

  /**
   * `TransferOperation` completed with status
   * [SUCCESS][google.storagetransfer.v1.TransferOperation.Status.SUCCESS].
   *
   * @generated from enum value: TRANSFER_OPERATION_SUCCESS = 1;
   */
  TRANSFER_OPERATION_SUCCESS = 1,

  /**
   * `TransferOperation` completed with status
   * [FAILED][google.storagetransfer.v1.TransferOperation.Status.FAILED].
   *
   * @generated from enum value: TRANSFER_OPERATION_FAILED = 2;
   */
  TRANSFER_OPERATION_FAILED = 2,

  /**
   * `TransferOperation` completed with status
   * [ABORTED][google.storagetransfer.v1.TransferOperation.Status.ABORTED].
   *
   * @generated from enum value: TRANSFER_OPERATION_ABORTED = 3;
   */
  TRANSFER_OPERATION_ABORTED = 3,
}

/**
 * Describes the enum google.storagetransfer.v1.NotificationConfig.EventType.
 */
export const NotificationConfig_EventTypeSchema: GenEnum<NotificationConfig_EventType> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 23, 0);

/**
 * Enum for specifying the format of a notification message's payload.
 *
 * @generated from enum google.storagetransfer.v1.NotificationConfig.PayloadFormat
 */
export enum NotificationConfig_PayloadFormat {
  /**
   * Illegal value, to avoid allowing a default.
   *
   * @generated from enum value: PAYLOAD_FORMAT_UNSPECIFIED = 0;
   */
  PAYLOAD_FORMAT_UNSPECIFIED = 0,

  /**
   * No payload is included with the notification.
   *
   * @generated from enum value: NONE = 1;
   */
  NONE = 1,

  /**
   * `TransferOperation` is [formatted as a JSON
   * response](https://developers.google.com/protocol-buffers/docs/proto3#json),
   * in application/json.
   *
   * @generated from enum value: JSON = 2;
   */
  JSON = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.NotificationConfig.PayloadFormat.
 */
export const NotificationConfig_PayloadFormatSchema: GenEnum<NotificationConfig_PayloadFormat> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 23, 1);

/**
 * Specifies the logging behavior for transfer operations.
 *
 * Logs can be sent to Cloud Logging for all transfer types. See
 * [Read transfer
 * logs](https://cloud.google.com/storage-transfer/docs/read-transfer-logs) for
 * details.
 *
 * @generated from message google.storagetransfer.v1.LoggingConfig
 */
export type LoggingConfig = Message<"google.storagetransfer.v1.LoggingConfig"> & {
  /**
   * Specifies the actions to be logged. If empty, no logs are generated.
   *
   * @generated from field: repeated google.storagetransfer.v1.LoggingConfig.LoggableAction log_actions = 1;
   */
  logActions: LoggingConfig_LoggableAction[];

  /**
   * States in which `log_actions` are logged. If empty, no logs are generated.
   *
   * @generated from field: repeated google.storagetransfer.v1.LoggingConfig.LoggableActionState log_action_states = 2;
   */
  logActionStates: LoggingConfig_LoggableActionState[];

  /**
   * For PosixFilesystem transfers, enables
   * [file system transfer
   * logs](https://cloud.google.com/storage-transfer/docs/on-prem-transfer-log-format)
   * instead of, or in addition to, Cloud Logging.
   *
   * This option ignores [LoggableAction] and [LoggableActionState]. If these
   * are set, Cloud Logging will also be enabled for this transfer.
   *
   * @generated from field: bool enable_onprem_gcs_transfer_logs = 3;
   */
  enableOnpremGcsTransferLogs: boolean;
};

/**
 * Describes the message google.storagetransfer.v1.LoggingConfig.
 * Use `create(LoggingConfigSchema)` to create a new message.
 */
export const LoggingConfigSchema: GenMessage<LoggingConfig> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 24);

/**
 * Loggable actions.
 *
 * @generated from enum google.storagetransfer.v1.LoggingConfig.LoggableAction
 */
export enum LoggingConfig_LoggableAction {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: LOGGABLE_ACTION_UNSPECIFIED = 0;
   */
  LOGGABLE_ACTION_UNSPECIFIED = 0,

  /**
   * Listing objects in a bucket.
   *
   * @generated from enum value: FIND = 1;
   */
  FIND = 1,

  /**
   * Deleting objects at the source or the destination.
   *
   * @generated from enum value: DELETE = 2;
   */
  DELETE = 2,

  /**
   * Copying objects to Google Cloud Storage.
   *
   * @generated from enum value: COPY = 3;
   */
  COPY = 3,
}

/**
 * Describes the enum google.storagetransfer.v1.LoggingConfig.LoggableAction.
 */
export const LoggingConfig_LoggableActionSchema: GenEnum<LoggingConfig_LoggableAction> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 24, 0);

/**
 * Loggable action states.
 *
 * @generated from enum google.storagetransfer.v1.LoggingConfig.LoggableActionState
 */
export enum LoggingConfig_LoggableActionState {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: LOGGABLE_ACTION_STATE_UNSPECIFIED = 0;
   */
  LOGGABLE_ACTION_STATE_UNSPECIFIED = 0,

  /**
   * `LoggableAction` completed successfully. `SUCCEEDED` actions are
   * logged as [INFO][google.logging.type.LogSeverity.INFO].
   *
   * @generated from enum value: SUCCEEDED = 1;
   */
  SUCCEEDED = 1,

  /**
   * `LoggableAction` terminated in an error state. `FAILED` actions are
   * logged as [ERROR][google.logging.type.LogSeverity.ERROR].
   *
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,
}

/**
 * Describes the enum google.storagetransfer.v1.LoggingConfig.LoggableActionState.
 */
export const LoggingConfig_LoggableActionStateSchema: GenEnum<LoggingConfig_LoggableActionState> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 24, 1);

/**
 * A description of the execution of a transfer.
 *
 * @generated from message google.storagetransfer.v1.TransferOperation
 */
export type TransferOperation = Message<"google.storagetransfer.v1.TransferOperation"> & {
  /**
   * A globally unique ID assigned by the system.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The ID of the Google Cloud project that owns the operation.
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * Transfer specification.
   *
   * @generated from field: google.storagetransfer.v1.TransferSpec transfer_spec = 3;
   */
  transferSpec?: TransferSpec;

  /**
   * Notification configuration.
   *
   * @generated from field: google.storagetransfer.v1.NotificationConfig notification_config = 10;
   */
  notificationConfig?: NotificationConfig;

  /**
   * Cloud Logging configuration.
   *
   * @generated from field: google.storagetransfer.v1.LoggingConfig logging_config = 12;
   */
  loggingConfig?: LoggingConfig;

  /**
   * Start time of this transfer execution.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;

  /**
   * End time of this transfer execution.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 5;
   */
  endTime?: Timestamp;

  /**
   * Status of the transfer operation.
   *
   * @generated from field: google.storagetransfer.v1.TransferOperation.Status status = 6;
   */
  status: TransferOperation_Status;

  /**
   * Information about the progress of the transfer operation.
   *
   * @generated from field: google.storagetransfer.v1.TransferCounters counters = 7;
   */
  counters?: TransferCounters;

  /**
   * Summarizes errors encountered with sample error log entries.
   *
   * @generated from field: repeated google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
   */
  errorBreakdowns: ErrorSummary[];

  /**
   * The name of the transfer job that triggers this transfer operation.
   *
   * @generated from field: string transfer_job_name = 9;
   */
  transferJobName: string;
};

/**
 * Describes the message google.storagetransfer.v1.TransferOperation.
 * Use `create(TransferOperationSchema)` to create a new message.
 */
export const TransferOperationSchema: GenMessage<TransferOperation> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer_types, 25);

/**
 * The status of a TransferOperation.
 *
 * @generated from enum google.storagetransfer.v1.TransferOperation.Status
 */
export enum TransferOperation_Status {
  /**
   * Zero is an illegal value.
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * In progress.
   *
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * Paused.
   *
   * @generated from enum value: PAUSED = 2;
   */
  PAUSED = 2,

  /**
   * Completed successfully.
   *
   * @generated from enum value: SUCCESS = 3;
   */
  SUCCESS = 3,

  /**
   * Terminated due to an unrecoverable failure.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * Aborted by the user.
   *
   * @generated from enum value: ABORTED = 5;
   */
  ABORTED = 5,

  /**
   * Temporarily delayed by the system. No user action is required.
   *
   * @generated from enum value: QUEUED = 6;
   */
  QUEUED = 6,

  /**
   * The operation is suspending and draining the ongoing work to completion.
   *
   * @generated from enum value: SUSPENDING = 7;
   */
  SUSPENDING = 7,
}

/**
 * Describes the enum google.storagetransfer.v1.TransferOperation.Status.
 */
export const TransferOperation_StatusSchema: GenEnum<TransferOperation_Status> = /*@__PURE__*/
  enumDesc(file_google_storagetransfer_v1_transfer_types, 25, 0);

