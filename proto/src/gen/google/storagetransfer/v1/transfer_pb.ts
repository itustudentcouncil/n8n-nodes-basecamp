// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/storagetransfer/v1/transfer.proto (package google.storagetransfer.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import type { OperationSchema } from "../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../longrunning/operations_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { AgentPool, AgentPoolSchema, GoogleServiceAccountSchema, TransferJob, TransferJobSchema } from "./transfer_types_pb";
import { file_google_storagetransfer_v1_transfer_types } from "./transfer_types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/storagetransfer/v1/transfer.proto.
 */
export const file_google_storagetransfer_v1_transfer: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvc3RvcmFnZXRyYW5zZmVyL3YxL3RyYW5zZmVyLnByb3RvEhlnb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxIjkKHkdldEdvb2dsZVNlcnZpY2VBY2NvdW50UmVxdWVzdBIXCgpwcm9qZWN0X2lkGAEgASgJQgPgQQIiXQoYQ3JlYXRlVHJhbnNmZXJKb2JSZXF1ZXN0EkEKDHRyYW5zZmVyX2pvYhgBIAEoCzImLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuVHJhbnNmZXJKb2JCA+BBAiLRAQoYVXBkYXRlVHJhbnNmZXJKb2JSZXF1ZXN0EhUKCGpvYl9uYW1lGAEgASgJQgPgQQISFwoKcHJvamVjdF9pZBgCIAEoCUID4EECEkEKDHRyYW5zZmVyX2pvYhgDIAEoCzImLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuVHJhbnNmZXJKb2JCA+BBAhJCCh51cGRhdGVfdHJhbnNmZXJfam9iX2ZpZWxkX21hc2sYBCABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrIkcKFUdldFRyYW5zZmVySm9iUmVxdWVzdBIVCghqb2JfbmFtZRgBIAEoCUID4EECEhcKCnByb2plY3RfaWQYAiABKAlCA+BBAiJKChhEZWxldGVUcmFuc2ZlckpvYlJlcXVlc3QSFQoIam9iX25hbWUYASABKAlCA+BBAhIXCgpwcm9qZWN0X2lkGAIgASgJQgPgQQIiVQoXTGlzdFRyYW5zZmVySm9ic1JlcXVlc3QSEwoGZmlsdGVyGAEgASgJQgPgQQISEQoJcGFnZV9zaXplGAQgASgFEhIKCnBhZ2VfdG9rZW4YBSABKAkicgoYTGlzdFRyYW5zZmVySm9ic1Jlc3BvbnNlEj0KDXRyYW5zZmVyX2pvYnMYASADKAsyJi5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLlRyYW5zZmVySm9iEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSIyCh1QYXVzZVRyYW5zZmVyT3BlcmF0aW9uUmVxdWVzdBIRCgRuYW1lGAEgASgJQgPgQQIiMwoeUmVzdW1lVHJhbnNmZXJPcGVyYXRpb25SZXF1ZXN0EhEKBG5hbWUYASABKAlCA+BBAiJHChVSdW5UcmFuc2ZlckpvYlJlcXVlc3QSFQoIam9iX25hbWUYASABKAlCA+BBAhIXCgpwcm9qZWN0X2lkGAIgASgJQgPgQQIijAEKFkNyZWF0ZUFnZW50UG9vbFJlcXVlc3QSFwoKcHJvamVjdF9pZBgBIAEoCUID4EECEj0KCmFnZW50X3Bvb2wYAiABKAsyJC5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLkFnZW50UG9vbEID4EECEhoKDWFnZW50X3Bvb2xfaWQYAyABKAlCA+BBAiKIAQoWVXBkYXRlQWdlbnRQb29sUmVxdWVzdBI9CgphZ2VudF9wb29sGAEgASgLMiQuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5BZ2VudFBvb2xCA+BBAhIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2siKAoTR2V0QWdlbnRQb29sUmVxdWVzdBIRCgRuYW1lGAEgASgJQgPgQQIiKwoWRGVsZXRlQWdlbnRQb29sUmVxdWVzdBIRCgRuYW1lGAEgASgJQgPgQQIiZwoVTGlzdEFnZW50UG9vbHNSZXF1ZXN0EhcKCnByb2plY3RfaWQYASABKAlCA+BBAhIOCgZmaWx0ZXIYAiABKAkSEQoJcGFnZV9zaXplGAMgASgFEhIKCnBhZ2VfdG9rZW4YBCABKAkibAoWTGlzdEFnZW50UG9vbHNSZXNwb25zZRI5CgthZ2VudF9wb29scxgBIAMoCzIkLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuQWdlbnRQb29sEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCTKREwoWU3RvcmFnZVRyYW5zZmVyU2VydmljZRK1AQoXR2V0R29vZ2xlU2VydmljZUFjY291bnQSOS5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLkdldEdvb2dsZVNlcnZpY2VBY2NvdW50UmVxdWVzdBovLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuR29vZ2xlU2VydmljZUFjY291bnQiLoLT5JMCKBImL3YxL2dvb2dsZVNlcnZpY2VBY2NvdW50cy97cHJvamVjdF9pZH0SmAEKEUNyZWF0ZVRyYW5zZmVySm9iEjMuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5DcmVhdGVUcmFuc2ZlckpvYlJlcXVlc3QaJi5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLlRyYW5zZmVySm9iIiaC0+STAiA6DHRyYW5zZmVyX2pvYiIQL3YxL3RyYW5zZmVySm9icxKbAQoRVXBkYXRlVHJhbnNmZXJKb2ISMy5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLlVwZGF0ZVRyYW5zZmVySm9iUmVxdWVzdBomLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuVHJhbnNmZXJKb2IiKYLT5JMCIzoBKjIeL3YxL3tqb2JfbmFtZT10cmFuc2ZlckpvYnMvKip9EpIBCg5HZXRUcmFuc2ZlckpvYhIwLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuR2V0VHJhbnNmZXJKb2JSZXF1ZXN0GiYuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5UcmFuc2ZlckpvYiImgtPkkwIgEh4vdjEve2pvYl9uYW1lPXRyYW5zZmVySm9icy8qKn0SlQEKEExpc3RUcmFuc2ZlckpvYnMSMi5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLkxpc3RUcmFuc2ZlckpvYnNSZXF1ZXN0GjMuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5MaXN0VHJhbnNmZXJKb2JzUmVzcG9uc2UiGILT5JMCEhIQL3YxL3RyYW5zZmVySm9icxKdAQoWUGF1c2VUcmFuc2Zlck9wZXJhdGlvbhI4Lmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuUGF1c2VUcmFuc2Zlck9wZXJhdGlvblJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiMYLT5JMCKzoBKiImL3YxL3tuYW1lPXRyYW5zZmVyT3BlcmF0aW9ucy8qKn06cGF1c2USoAEKF1Jlc3VtZVRyYW5zZmVyT3BlcmF0aW9uEjkuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5SZXN1bWVUcmFuc2Zlck9wZXJhdGlvblJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiMoLT5JMCLDoBKiInL3YxL3tuYW1lPXRyYW5zZmVyT3BlcmF0aW9ucy8qKn06cmVzdW1lEr0BCg5SdW5UcmFuc2ZlckpvYhIwLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuUnVuVHJhbnNmZXJKb2JSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJaykEqChVnb29nbGUucHJvdG9idWYuRW1wdHkSEVRyYW5zZmVyT3BlcmF0aW9ugtPkkwInOgEqIiIvdjEve2pvYl9uYW1lPXRyYW5zZmVySm9icy8qKn06cnVuEogBChFEZWxldGVUcmFuc2ZlckpvYhIzLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuRGVsZXRlVHJhbnNmZXJKb2JSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IiaC0+STAiAqHi92MS97am9iX25hbWU9dHJhbnNmZXJKb2JzLyoqfRLMAQoPQ3JlYXRlQWdlbnRQb29sEjEuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5DcmVhdGVBZ2VudFBvb2xSZXF1ZXN0GiQuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5BZ2VudFBvb2wiYNpBI3Byb2plY3RfaWQsYWdlbnRfcG9vbCxhZ2VudF9wb29sX2lkgtPkkwI0OgphZ2VudF9wb29sIiYvdjEvcHJvamVjdHMve3Byb2plY3RfaWQ9Kn0vYWdlbnRQb29scxLGAQoPVXBkYXRlQWdlbnRQb29sEjEuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5VcGRhdGVBZ2VudFBvb2xSZXF1ZXN0GiQuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5BZ2VudFBvb2wiWtpBFmFnZW50X3Bvb2wsdXBkYXRlX21hc2uC0+STAjs6CmFnZW50X3Bvb2wyLS92MS97YWdlbnRfcG9vbC5uYW1lPXByb2plY3RzLyovYWdlbnRQb29scy8qfRKXAQoMR2V0QWdlbnRQb29sEi4uZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5HZXRBZ2VudFBvb2xSZXF1ZXN0GiQuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5BZ2VudFBvb2wiMdpBBG5hbWWC0+STAiQSIi92MS97bmFtZT1wcm9qZWN0cy8qL2FnZW50UG9vbHMvKn0SsgEKDkxpc3RBZ2VudFBvb2xzEjAuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5MaXN0QWdlbnRQb29sc1JlcXVlc3QaMS5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLkxpc3RBZ2VudFBvb2xzUmVzcG9uc2UiO9pBCnByb2plY3RfaWSC0+STAigSJi92MS9wcm9qZWN0cy97cHJvamVjdF9pZD0qfS9hZ2VudFBvb2xzEo8BCg9EZWxldGVBZ2VudFBvb2wSMS5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLkRlbGV0ZUFnZW50UG9vbFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiMdpBBG5hbWWC0+STAiQqIi92MS97bmFtZT1wcm9qZWN0cy8qL2FnZW50UG9vbHMvKn0aUspBHnN0b3JhZ2V0cmFuc2Zlci5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1C7wEKI2NvbS5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLnByb3RvQg1UcmFuc2ZlclByb3RvWk1jbG91ZC5nb29nbGUuY29tL2dvL3N0b3JhZ2V0cmFuc2Zlci9hcGl2MS9zdG9yYWdldHJhbnNmZXJwYjtzdG9yYWdldHJhbnNmZXJwYvgBAaoCH0dvb2dsZS5DbG91ZC5TdG9yYWdlVHJhbnNmZXIuVjHKAh9Hb29nbGVcQ2xvdWRcU3RvcmFnZVRyYW5zZmVyXFYx6gIiR29vZ2xlOjpDbG91ZDo6U3RvcmFnZVRyYW5zZmVyOjpWMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_storagetransfer_v1_transfer_types]);

/**
 * Request passed to GetGoogleServiceAccount.
 *
 * @generated from message google.storagetransfer.v1.GetGoogleServiceAccountRequest
 */
export type GetGoogleServiceAccountRequest = Message<"google.storagetransfer.v1.GetGoogleServiceAccountRequest"> & {
  /**
   * Required. The ID of the Google Cloud project that the Google service
   * account is associated with.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;
};

/**
 * Describes the message google.storagetransfer.v1.GetGoogleServiceAccountRequest.
 * Use `create(GetGoogleServiceAccountRequestSchema)` to create a new message.
 */
export const GetGoogleServiceAccountRequestSchema: GenMessage<GetGoogleServiceAccountRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 0);

/**
 * Request passed to CreateTransferJob.
 *
 * @generated from message google.storagetransfer.v1.CreateTransferJobRequest
 */
export type CreateTransferJobRequest = Message<"google.storagetransfer.v1.CreateTransferJobRequest"> & {
  /**
   * Required. The job to create.
   *
   * @generated from field: google.storagetransfer.v1.TransferJob transfer_job = 1;
   */
  transferJob?: TransferJob;
};

/**
 * Describes the message google.storagetransfer.v1.CreateTransferJobRequest.
 * Use `create(CreateTransferJobRequestSchema)` to create a new message.
 */
export const CreateTransferJobRequestSchema: GenMessage<CreateTransferJobRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 1);

/**
 * Request passed to UpdateTransferJob.
 *
 * @generated from message google.storagetransfer.v1.UpdateTransferJobRequest
 */
export type UpdateTransferJobRequest = Message<"google.storagetransfer.v1.UpdateTransferJobRequest"> & {
  /**
   * Required. The name of job to update.
   *
   * @generated from field: string job_name = 1;
   */
  jobName: string;

  /**
   * Required. The ID of the Google Cloud project that owns the
   * job.
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * Required. The job to update. `transferJob` is expected to specify one or
   * more of five fields:
   * [description][google.storagetransfer.v1.TransferJob.description],
   * [transfer_spec][google.storagetransfer.v1.TransferJob.transfer_spec],
   * [notification_config][google.storagetransfer.v1.TransferJob.notification_config],
   * [logging_config][google.storagetransfer.v1.TransferJob.logging_config], and
   * [status][google.storagetransfer.v1.TransferJob.status].  An
   * `UpdateTransferJobRequest` that specifies other fields are rejected with
   * the error [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]. Updating a
   * job status to
   * [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED] requires
   * `storagetransfer.jobs.delete` permission.
   *
   * @generated from field: google.storagetransfer.v1.TransferJob transfer_job = 3;
   */
  transferJob?: TransferJob;

  /**
   * The field mask of the fields in `transferJob` that are to be updated in
   * this request.  Fields in `transferJob` that can be updated are:
   * [description][google.storagetransfer.v1.TransferJob.description],
   * [transfer_spec][google.storagetransfer.v1.TransferJob.transfer_spec],
   * [notification_config][google.storagetransfer.v1.TransferJob.notification_config],
   * [logging_config][google.storagetransfer.v1.TransferJob.logging_config], and
   * [status][google.storagetransfer.v1.TransferJob.status].  To update the
   * `transfer_spec` of the job, a complete transfer specification must be
   * provided. An incomplete specification missing any required fields is
   * rejected with the error
   * [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT].
   *
   * @generated from field: google.protobuf.FieldMask update_transfer_job_field_mask = 4;
   */
  updateTransferJobFieldMask?: FieldMask;
};

/**
 * Describes the message google.storagetransfer.v1.UpdateTransferJobRequest.
 * Use `create(UpdateTransferJobRequestSchema)` to create a new message.
 */
export const UpdateTransferJobRequestSchema: GenMessage<UpdateTransferJobRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 2);

/**
 * Request passed to GetTransferJob.
 *
 * @generated from message google.storagetransfer.v1.GetTransferJobRequest
 */
export type GetTransferJobRequest = Message<"google.storagetransfer.v1.GetTransferJobRequest"> & {
  /**
   * Required. The job to get.
   *
   * @generated from field: string job_name = 1;
   */
  jobName: string;

  /**
   * Required. The ID of the Google Cloud project that owns the
   * job.
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;
};

/**
 * Describes the message google.storagetransfer.v1.GetTransferJobRequest.
 * Use `create(GetTransferJobRequestSchema)` to create a new message.
 */
export const GetTransferJobRequestSchema: GenMessage<GetTransferJobRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 3);

/**
 * Request passed to DeleteTransferJob.
 *
 * @generated from message google.storagetransfer.v1.DeleteTransferJobRequest
 */
export type DeleteTransferJobRequest = Message<"google.storagetransfer.v1.DeleteTransferJobRequest"> & {
  /**
   * Required. The job to delete.
   *
   * @generated from field: string job_name = 1;
   */
  jobName: string;

  /**
   * Required. The ID of the Google Cloud project that owns the
   * job.
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;
};

/**
 * Describes the message google.storagetransfer.v1.DeleteTransferJobRequest.
 * Use `create(DeleteTransferJobRequestSchema)` to create a new message.
 */
export const DeleteTransferJobRequestSchema: GenMessage<DeleteTransferJobRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 4);

/**
 * `projectId`, `jobNames`, and `jobStatuses` are query parameters that can
 * be specified when listing transfer jobs.
 *
 * @generated from message google.storagetransfer.v1.ListTransferJobsRequest
 */
export type ListTransferJobsRequest = Message<"google.storagetransfer.v1.ListTransferJobsRequest"> & {
  /**
   * Required. A list of query parameters specified as JSON text in the form of:
   * `{"projectId":"my_project_id",
   *  "jobNames":["jobid1","jobid2",...],
   *  "jobStatuses":["status1","status2",...]}`
   *
   * Since `jobNames` and `jobStatuses` support multiple values, their values
   * must be specified with array notation. `projectId` is required.
   * `jobNames` and `jobStatuses` are optional.  The valid values for
   * `jobStatuses` are case-insensitive:
   * [ENABLED][google.storagetransfer.v1.TransferJob.Status.ENABLED],
   * [DISABLED][google.storagetransfer.v1.TransferJob.Status.DISABLED], and
   * [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED].
   *
   * @generated from field: string filter = 1;
   */
  filter: string;

  /**
   * The list page size. The max allowed value is 256.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * The list page token.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;
};

/**
 * Describes the message google.storagetransfer.v1.ListTransferJobsRequest.
 * Use `create(ListTransferJobsRequestSchema)` to create a new message.
 */
export const ListTransferJobsRequestSchema: GenMessage<ListTransferJobsRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 5);

/**
 * Response from ListTransferJobs.
 *
 * @generated from message google.storagetransfer.v1.ListTransferJobsResponse
 */
export type ListTransferJobsResponse = Message<"google.storagetransfer.v1.ListTransferJobsResponse"> & {
  /**
   * A list of transfer jobs.
   *
   * @generated from field: repeated google.storagetransfer.v1.TransferJob transfer_jobs = 1;
   */
  transferJobs: TransferJob[];

  /**
   * The list next page token.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.storagetransfer.v1.ListTransferJobsResponse.
 * Use `create(ListTransferJobsResponseSchema)` to create a new message.
 */
export const ListTransferJobsResponseSchema: GenMessage<ListTransferJobsResponse> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 6);

/**
 * Request passed to PauseTransferOperation.
 *
 * @generated from message google.storagetransfer.v1.PauseTransferOperationRequest
 */
export type PauseTransferOperationRequest = Message<"google.storagetransfer.v1.PauseTransferOperationRequest"> & {
  /**
   * Required. The name of the transfer operation.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.storagetransfer.v1.PauseTransferOperationRequest.
 * Use `create(PauseTransferOperationRequestSchema)` to create a new message.
 */
export const PauseTransferOperationRequestSchema: GenMessage<PauseTransferOperationRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 7);

/**
 * Request passed to ResumeTransferOperation.
 *
 * @generated from message google.storagetransfer.v1.ResumeTransferOperationRequest
 */
export type ResumeTransferOperationRequest = Message<"google.storagetransfer.v1.ResumeTransferOperationRequest"> & {
  /**
   * Required. The name of the transfer operation.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.storagetransfer.v1.ResumeTransferOperationRequest.
 * Use `create(ResumeTransferOperationRequestSchema)` to create a new message.
 */
export const ResumeTransferOperationRequestSchema: GenMessage<ResumeTransferOperationRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 8);

/**
 * Request passed to RunTransferJob.
 *
 * @generated from message google.storagetransfer.v1.RunTransferJobRequest
 */
export type RunTransferJobRequest = Message<"google.storagetransfer.v1.RunTransferJobRequest"> & {
  /**
   * Required. The name of the transfer job.
   *
   * @generated from field: string job_name = 1;
   */
  jobName: string;

  /**
   * Required. The ID of the Google Cloud project that owns the transfer
   * job.
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;
};

/**
 * Describes the message google.storagetransfer.v1.RunTransferJobRequest.
 * Use `create(RunTransferJobRequestSchema)` to create a new message.
 */
export const RunTransferJobRequestSchema: GenMessage<RunTransferJobRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 9);

/**
 * Specifies the request passed to CreateAgentPool.
 *
 * @generated from message google.storagetransfer.v1.CreateAgentPoolRequest
 */
export type CreateAgentPoolRequest = Message<"google.storagetransfer.v1.CreateAgentPoolRequest"> & {
  /**
   * Required. The ID of the Google Cloud project that owns the
   * agent pool.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. The agent pool to create.
   *
   * @generated from field: google.storagetransfer.v1.AgentPool agent_pool = 2;
   */
  agentPool?: AgentPool;

  /**
   * Required. The ID of the agent pool to create.
   *
   * The `agent_pool_id` must meet the following requirements:
   *
   * *   Length of 128 characters or less.
   * *   Not start with the string `goog`.
   * *   Start with a lowercase ASCII character, followed by:
   *     *   Zero or more: lowercase Latin alphabet characters, numerals,
   *         hyphens (`-`), periods (`.`), underscores (`_`), or tildes (`~`).
   *     *   One or more numerals or lowercase ASCII characters.
   *
   * As expressed by the regular expression:
   * `^(?!goog)[a-z]([a-z0-9-._~]*[a-z0-9])?$`.
   *
   * @generated from field: string agent_pool_id = 3;
   */
  agentPoolId: string;
};

/**
 * Describes the message google.storagetransfer.v1.CreateAgentPoolRequest.
 * Use `create(CreateAgentPoolRequestSchema)` to create a new message.
 */
export const CreateAgentPoolRequestSchema: GenMessage<CreateAgentPoolRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 10);

/**
 * Specifies the request passed to UpdateAgentPool.
 *
 * @generated from message google.storagetransfer.v1.UpdateAgentPoolRequest
 */
export type UpdateAgentPoolRequest = Message<"google.storagetransfer.v1.UpdateAgentPoolRequest"> & {
  /**
   * Required. The agent pool to update. `agent_pool` is expected to specify
   * following fields:
   *
   * *  [name][google.storagetransfer.v1.AgentPool.name]
   *
   * *  [display_name][google.storagetransfer.v1.AgentPool.display_name]
   *
   * *  [bandwidth_limit][google.storagetransfer.v1.AgentPool.bandwidth_limit]
   * An `UpdateAgentPoolRequest` with any other fields is rejected
   * with the error [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT].
   *
   * @generated from field: google.storagetransfer.v1.AgentPool agent_pool = 1;
   */
  agentPool?: AgentPool;

  /**
   * The [field mask]
   * (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf)
   * of the fields in `agentPool` to update in this request.
   * The following `agentPool` fields can be updated:
   *
   * *  [display_name][google.storagetransfer.v1.AgentPool.display_name]
   *
   * *  [bandwidth_limit][google.storagetransfer.v1.AgentPool.bandwidth_limit]
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.storagetransfer.v1.UpdateAgentPoolRequest.
 * Use `create(UpdateAgentPoolRequestSchema)` to create a new message.
 */
export const UpdateAgentPoolRequestSchema: GenMessage<UpdateAgentPoolRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 11);

/**
 * Specifies the request passed to GetAgentPool.
 *
 * @generated from message google.storagetransfer.v1.GetAgentPoolRequest
 */
export type GetAgentPoolRequest = Message<"google.storagetransfer.v1.GetAgentPoolRequest"> & {
  /**
   * Required. The name of the agent pool to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.storagetransfer.v1.GetAgentPoolRequest.
 * Use `create(GetAgentPoolRequestSchema)` to create a new message.
 */
export const GetAgentPoolRequestSchema: GenMessage<GetAgentPoolRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 12);

/**
 * Specifies the request passed to DeleteAgentPool.
 *
 * @generated from message google.storagetransfer.v1.DeleteAgentPoolRequest
 */
export type DeleteAgentPoolRequest = Message<"google.storagetransfer.v1.DeleteAgentPoolRequest"> & {
  /**
   * Required. The name of the agent pool to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.storagetransfer.v1.DeleteAgentPoolRequest.
 * Use `create(DeleteAgentPoolRequestSchema)` to create a new message.
 */
export const DeleteAgentPoolRequestSchema: GenMessage<DeleteAgentPoolRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 13);

/**
 * The request passed to ListAgentPools.
 *
 * @generated from message google.storagetransfer.v1.ListAgentPoolsRequest
 */
export type ListAgentPoolsRequest = Message<"google.storagetransfer.v1.ListAgentPoolsRequest"> & {
  /**
   * Required. The ID of the Google Cloud project that owns the job.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * An optional list of query parameters specified as JSON text in the
   * form of:
   *
   * `{"agentPoolNames":["agentpool1","agentpool2",...]}`
   *
   * Since `agentPoolNames` support multiple values, its values must be
   * specified with array notation. When the filter is either empty or not
   * provided, the list returns all agent pools for the project.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The list page size. The max allowed value is `256`.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The list page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.storagetransfer.v1.ListAgentPoolsRequest.
 * Use `create(ListAgentPoolsRequestSchema)` to create a new message.
 */
export const ListAgentPoolsRequestSchema: GenMessage<ListAgentPoolsRequest> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 14);

/**
 * Response from ListAgentPools.
 *
 * @generated from message google.storagetransfer.v1.ListAgentPoolsResponse
 */
export type ListAgentPoolsResponse = Message<"google.storagetransfer.v1.ListAgentPoolsResponse"> & {
  /**
   * A list of agent pools.
   *
   * @generated from field: repeated google.storagetransfer.v1.AgentPool agent_pools = 1;
   */
  agentPools: AgentPool[];

  /**
   * The list next page token.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.storagetransfer.v1.ListAgentPoolsResponse.
 * Use `create(ListAgentPoolsResponseSchema)` to create a new message.
 */
export const ListAgentPoolsResponseSchema: GenMessage<ListAgentPoolsResponse> = /*@__PURE__*/
  messageDesc(file_google_storagetransfer_v1_transfer, 15);

/**
 * Storage Transfer Service and its protos.
 * Transfers data between between Google Cloud Storage buckets or from a data
 * source external to Google to a Cloud Storage bucket.
 *
 * @generated from service google.storagetransfer.v1.StorageTransferService
 */
export const StorageTransferService: GenService<{
  /**
   * Returns the Google service account that is used by Storage Transfer
   * Service to access buckets in the project where transfers
   * run or in other projects. Each Google service account is associated
   * with one Google Cloud project. Users
   * should add this service account to the Google Cloud Storage bucket
   * ACLs to grant access to Storage Transfer Service. This service
   * account is created and owned by Storage Transfer Service and can
   * only be used by Storage Transfer Service.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.GetGoogleServiceAccount
   */
  getGoogleServiceAccount: {
    methodKind: "unary";
    input: typeof GetGoogleServiceAccountRequestSchema;
    output: typeof GoogleServiceAccountSchema;
  },
  /**
   * Creates a transfer job that runs periodically.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.CreateTransferJob
   */
  createTransferJob: {
    methodKind: "unary";
    input: typeof CreateTransferJobRequestSchema;
    output: typeof TransferJobSchema;
  },
  /**
   * Updates a transfer job. Updating a job's transfer spec does not affect
   * transfer operations that are running already.
   *
   * **Note:** The job's [status][google.storagetransfer.v1.TransferJob.status]
   * field can be modified using this RPC (for example, to set a job's status to
   * [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED],
   * [DISABLED][google.storagetransfer.v1.TransferJob.Status.DISABLED], or
   * [ENABLED][google.storagetransfer.v1.TransferJob.Status.ENABLED]).
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.UpdateTransferJob
   */
  updateTransferJob: {
    methodKind: "unary";
    input: typeof UpdateTransferJobRequestSchema;
    output: typeof TransferJobSchema;
  },
  /**
   * Gets a transfer job.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.GetTransferJob
   */
  getTransferJob: {
    methodKind: "unary";
    input: typeof GetTransferJobRequestSchema;
    output: typeof TransferJobSchema;
  },
  /**
   * Lists transfer jobs.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.ListTransferJobs
   */
  listTransferJobs: {
    methodKind: "unary";
    input: typeof ListTransferJobsRequestSchema;
    output: typeof ListTransferJobsResponseSchema;
  },
  /**
   * Pauses a transfer operation.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.PauseTransferOperation
   */
  pauseTransferOperation: {
    methodKind: "unary";
    input: typeof PauseTransferOperationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Resumes a transfer operation that is paused.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.ResumeTransferOperation
   */
  resumeTransferOperation: {
    methodKind: "unary";
    input: typeof ResumeTransferOperationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Starts a new operation for the specified transfer job.
   * A `TransferJob` has a maximum of one active `TransferOperation`. If this
   * method is called while a `TransferOperation` is active, an error is
   * returned.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.RunTransferJob
   */
  runTransferJob: {
    methodKind: "unary";
    input: typeof RunTransferJobRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a transfer job. Deleting a transfer job sets its status to
   * [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED].
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.DeleteTransferJob
   */
  deleteTransferJob: {
    methodKind: "unary";
    input: typeof DeleteTransferJobRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Creates an agent pool resource.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.CreateAgentPool
   */
  createAgentPool: {
    methodKind: "unary";
    input: typeof CreateAgentPoolRequestSchema;
    output: typeof AgentPoolSchema;
  },
  /**
   * Updates an existing agent pool resource.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.UpdateAgentPool
   */
  updateAgentPool: {
    methodKind: "unary";
    input: typeof UpdateAgentPoolRequestSchema;
    output: typeof AgentPoolSchema;
  },
  /**
   * Gets an agent pool.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.GetAgentPool
   */
  getAgentPool: {
    methodKind: "unary";
    input: typeof GetAgentPoolRequestSchema;
    output: typeof AgentPoolSchema;
  },
  /**
   * Lists agent pools.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.ListAgentPools
   */
  listAgentPools: {
    methodKind: "unary";
    input: typeof ListAgentPoolsRequestSchema;
    output: typeof ListAgentPoolsResponseSchema;
  },
  /**
   * Deletes an agent pool.
   *
   * @generated from rpc google.storagetransfer.v1.StorageTransferService.DeleteAgentPool
   */
  deleteAgentPool: {
    methodKind: "unary";
    input: typeof DeleteAgentPoolRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_storagetransfer_v1_transfer, 0);

