// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/cloudbuild/v1/cloudbuild.proto (package google.devtools.cloudbuild.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { HttpBody } from "../../../api/httpbody_pb";
import { file_google_api_httpbody } from "../../../api/httpbody_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import { file_google_api_routing } from "../../../api/routing_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Duration, EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/cloudbuild/v1/cloudbuild.proto.
 */
export const file_google_devtools_cloudbuild_v1_cloudbuild: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_httpbody, file_google_api_resource, file_google_api_routing, file_google_longrunning_operations, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Specifies a build to retry.
 *
 * @generated from message google.devtools.cloudbuild.v1.RetryBuildRequest
 */
export type RetryBuildRequest = Message<"google.devtools.cloudbuild.v1.RetryBuildRequest"> & {
  /**
   * The name of the `Build` to retry.
   * Format: `projects/{project}/locations/{location}/builds/{build}`
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Required. ID of the project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Build ID of the original build.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.RetryBuildRequest.
 * Use `create(RetryBuildRequestSchema)` to create a new message.
 */
export const RetryBuildRequestSchema: GenMessage<RetryBuildRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 0);

/**
 * Specifies a build trigger to run and the source to use.
 *
 * @generated from message google.devtools.cloudbuild.v1.RunBuildTriggerRequest
 */
export type RunBuildTriggerRequest = Message<"google.devtools.cloudbuild.v1.RunBuildTriggerRequest"> & {
  /**
   * The name of the `Trigger` to run.
   * Format: `projects/{project}/locations/{location}/triggers/{trigger}`
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Required. ID of the project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. ID of the trigger.
   *
   * @generated from field: string trigger_id = 2;
   */
  triggerId: string;

  /**
   * Source to build against this trigger.
   * Branch and tag names cannot consist of regular expressions.
   *
   * @generated from field: google.devtools.cloudbuild.v1.RepoSource source = 3;
   */
  source?: RepoSource;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.RunBuildTriggerRequest.
 * Use `create(RunBuildTriggerRequestSchema)` to create a new message.
 */
export const RunBuildTriggerRequestSchema: GenMessage<RunBuildTriggerRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 1);

/**
 * Location of the source in an archive file in Cloud Storage.
 *
 * @generated from message google.devtools.cloudbuild.v1.StorageSource
 */
export type StorageSource = Message<"google.devtools.cloudbuild.v1.StorageSource"> & {
  /**
   * Cloud Storage bucket containing the source (see
   * [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   *
   * @generated from field: string bucket = 1;
   */
  bucket: string;

  /**
   * Cloud Storage object containing the source.
   *
   * This object must be a zipped (`.zip`) or gzipped archive file (`.tar.gz`)
   * containing source to build.
   *
   * @generated from field: string object = 2;
   */
  object: string;

  /**
   * Cloud Storage generation for the object. If the generation is
   * omitted, the latest generation will be used.
   *
   * @generated from field: int64 generation = 3;
   */
  generation: bigint;

  /**
   * Option to specify the tool to fetch the source file for the build.
   *
   * @generated from field: google.devtools.cloudbuild.v1.StorageSource.SourceFetcher source_fetcher = 5;
   */
  sourceFetcher: StorageSource_SourceFetcher;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.StorageSource.
 * Use `create(StorageSourceSchema)` to create a new message.
 */
export const StorageSourceSchema: GenMessage<StorageSource> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 2);

/**
 * Specifies the tool to fetch the source file for the build.
 *
 * @generated from enum google.devtools.cloudbuild.v1.StorageSource.SourceFetcher
 */
export enum StorageSource_SourceFetcher {
  /**
   * Unspecified. Defaults to GSUTIL.
   *
   * @generated from enum value: SOURCE_FETCHER_UNSPECIFIED = 0;
   */
  SOURCE_FETCHER_UNSPECIFIED = 0,

  /**
   * Use the "gsutil" tool to download the source file.
   *
   * @generated from enum value: GSUTIL = 1;
   */
  GSUTIL = 1,

  /**
   * Use the Cloud Storage Fetcher tool to download the source file.
   *
   * @generated from enum value: GCS_FETCHER = 2;
   */
  GCS_FETCHER = 2,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.StorageSource.SourceFetcher.
 */
export const StorageSource_SourceFetcherSchema: GenEnum<StorageSource_SourceFetcher> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 2, 0);

/**
 * Location of the source in any accessible Git repository.
 *
 * @generated from message google.devtools.cloudbuild.v1.GitSource
 */
export type GitSource = Message<"google.devtools.cloudbuild.v1.GitSource"> & {
  /**
   * Location of the Git repo to build.
   *
   * This will be used as a `git remote`, see
   * https://git-scm.com/docs/git-remote.
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * Directory, relative to the source root, in which to run the build.
   *
   * This must be a relative path. If a step's `dir` is specified and is an
   * absolute path, this value is ignored for that step's execution.
   *
   * @generated from field: string dir = 5;
   */
  dir: string;

  /**
   * The revision to fetch from the Git repository such as a branch, a tag, a
   * commit SHA, or any Git ref.
   *
   * Cloud Build uses `git fetch` to fetch the revision from the Git
   * repository; therefore make sure that the string you provide for `revision`
   * is parsable  by the command. For information on string values accepted by
   * `git fetch`, see
   * https://git-scm.com/docs/gitrevisions#_specifying_revisions. For
   * information on `git fetch`, see https://git-scm.com/docs/git-fetch.
   *
   * @generated from field: string revision = 6;
   */
  revision: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.GitSource.
 * Use `create(GitSourceSchema)` to create a new message.
 */
export const GitSourceSchema: GenMessage<GitSource> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 3);

/**
 * Location of the source in a Google Cloud Source Repository.
 *
 * @generated from message google.devtools.cloudbuild.v1.RepoSource
 */
export type RepoSource = Message<"google.devtools.cloudbuild.v1.RepoSource"> & {
  /**
   * ID of the project that owns the Cloud Source Repository. If omitted, the
   * project ID requesting the build is assumed.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Name of the Cloud Source Repository.
   *
   * @generated from field: string repo_name = 2;
   */
  repoName: string;

  /**
   * A revision within the Cloud Source Repository must be specified in
   * one of these ways.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.RepoSource.revision
   */
  revision: {
    /**
     * Regex matching branches to build.
     *
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     *
     * @generated from field: string branch_name = 3;
     */
    value: string;
    case: "branchName";
  } | {
    /**
     * Regex matching tags to build.
     *
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     *
     * @generated from field: string tag_name = 4;
     */
    value: string;
    case: "tagName";
  } | {
    /**
     * Explicit commit SHA to build.
     *
     * @generated from field: string commit_sha = 5;
     */
    value: string;
    case: "commitSha";
  } | { case: undefined; value?: undefined };

  /**
   * Directory, relative to the source root, in which to run the build.
   *
   * This must be a relative path. If a step's `dir` is specified and is an
   * absolute path, this value is ignored for that step's execution.
   *
   * @generated from field: string dir = 7;
   */
  dir: string;

  /**
   * Only trigger a build if the revision regex does NOT match the revision
   * regex.
   *
   * @generated from field: bool invert_regex = 8;
   */
  invertRegex: boolean;

  /**
   * Substitutions to use in a triggered build.
   * Should only be used with RunBuildTrigger
   *
   * @generated from field: map<string, string> substitutions = 9;
   */
  substitutions: { [key: string]: string };
};

/**
 * Describes the message google.devtools.cloudbuild.v1.RepoSource.
 * Use `create(RepoSourceSchema)` to create a new message.
 */
export const RepoSourceSchema: GenMessage<RepoSource> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 4);

/**
 * Location of the source manifest in Cloud Storage.
 * This feature is in Preview; see description
 * [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher).
 *
 * @generated from message google.devtools.cloudbuild.v1.StorageSourceManifest
 */
export type StorageSourceManifest = Message<"google.devtools.cloudbuild.v1.StorageSourceManifest"> & {
  /**
   * Cloud Storage bucket containing the source manifest (see [Bucket
   * Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   *
   * @generated from field: string bucket = 1;
   */
  bucket: string;

  /**
   * Cloud Storage object containing the source manifest.
   *
   * This object must be a JSON file.
   *
   * @generated from field: string object = 2;
   */
  object: string;

  /**
   * Cloud Storage generation for the object. If the generation is
   * omitted, the latest generation will be used.
   *
   * @generated from field: int64 generation = 3;
   */
  generation: bigint;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.StorageSourceManifest.
 * Use `create(StorageSourceManifestSchema)` to create a new message.
 */
export const StorageSourceManifestSchema: GenMessage<StorageSourceManifest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 5);

/**
 * Location of the source in a supported storage service.
 *
 * @generated from message google.devtools.cloudbuild.v1.Source
 */
export type Source = Message<"google.devtools.cloudbuild.v1.Source"> & {
  /**
   * Location of source.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.Source.source
   */
  source: {
    /**
     * If provided, get the source from this location in Cloud Storage.
     *
     * @generated from field: google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
     */
    value: StorageSource;
    case: "storageSource";
  } | {
    /**
     * If provided, get the source from this location in a Cloud Source
     * Repository.
     *
     * @generated from field: google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
     */
    value: RepoSource;
    case: "repoSource";
  } | {
    /**
     * If provided, get the source from this Git repository.
     *
     * @generated from field: google.devtools.cloudbuild.v1.GitSource git_source = 5;
     */
    value: GitSource;
    case: "gitSource";
  } | {
    /**
     * If provided, get the source from this manifest in Cloud Storage.
     * This feature is in Preview; see description
     * [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher).
     *
     * @generated from field: google.devtools.cloudbuild.v1.StorageSourceManifest storage_source_manifest = 8;
     */
    value: StorageSourceManifest;
    case: "storageSourceManifest";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Source.
 * Use `create(SourceSchema)` to create a new message.
 */
export const SourceSchema: GenMessage<Source> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 6);

/**
 * An image built by the pipeline.
 *
 * @generated from message google.devtools.cloudbuild.v1.BuiltImage
 */
export type BuiltImage = Message<"google.devtools.cloudbuild.v1.BuiltImage"> & {
  /**
   * Name used to push the container image to Google Container Registry, as
   * presented to `docker push`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Docker Registry 2.0 digest.
   *
   * @generated from field: string digest = 3;
   */
  digest: string;

  /**
   * Output only. Stores timing information for pushing the specified image.
   *
   * @generated from field: google.devtools.cloudbuild.v1.TimeSpan push_timing = 4;
   */
  pushTiming?: TimeSpan;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.BuiltImage.
 * Use `create(BuiltImageSchema)` to create a new message.
 */
export const BuiltImageSchema: GenMessage<BuiltImage> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 7);

/**
 * Artifact uploaded using the PythonPackage directive.
 *
 * @generated from message google.devtools.cloudbuild.v1.UploadedPythonPackage
 */
export type UploadedPythonPackage = Message<"google.devtools.cloudbuild.v1.UploadedPythonPackage"> & {
  /**
   * URI of the uploaded artifact.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Hash types and values of the Python Artifact.
   *
   * @generated from field: google.devtools.cloudbuild.v1.FileHashes file_hashes = 2;
   */
  fileHashes?: FileHashes;

  /**
   * Output only. Stores timing information for pushing the specified artifact.
   *
   * @generated from field: google.devtools.cloudbuild.v1.TimeSpan push_timing = 3;
   */
  pushTiming?: TimeSpan;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.UploadedPythonPackage.
 * Use `create(UploadedPythonPackageSchema)` to create a new message.
 */
export const UploadedPythonPackageSchema: GenMessage<UploadedPythonPackage> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 8);

/**
 * A Maven artifact uploaded using the MavenArtifact directive.
 *
 * @generated from message google.devtools.cloudbuild.v1.UploadedMavenArtifact
 */
export type UploadedMavenArtifact = Message<"google.devtools.cloudbuild.v1.UploadedMavenArtifact"> & {
  /**
   * URI of the uploaded artifact.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Hash types and values of the Maven Artifact.
   *
   * @generated from field: google.devtools.cloudbuild.v1.FileHashes file_hashes = 2;
   */
  fileHashes?: FileHashes;

  /**
   * Output only. Stores timing information for pushing the specified artifact.
   *
   * @generated from field: google.devtools.cloudbuild.v1.TimeSpan push_timing = 3;
   */
  pushTiming?: TimeSpan;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.UploadedMavenArtifact.
 * Use `create(UploadedMavenArtifactSchema)` to create a new message.
 */
export const UploadedMavenArtifactSchema: GenMessage<UploadedMavenArtifact> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 9);

/**
 * An npm package uploaded to Artifact Registry using the NpmPackage
 * directive.
 *
 * @generated from message google.devtools.cloudbuild.v1.UploadedNpmPackage
 */
export type UploadedNpmPackage = Message<"google.devtools.cloudbuild.v1.UploadedNpmPackage"> & {
  /**
   * URI of the uploaded npm package.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Hash types and values of the npm package.
   *
   * @generated from field: google.devtools.cloudbuild.v1.FileHashes file_hashes = 2;
   */
  fileHashes?: FileHashes;

  /**
   * Output only. Stores timing information for pushing the specified artifact.
   *
   * @generated from field: google.devtools.cloudbuild.v1.TimeSpan push_timing = 3;
   */
  pushTiming?: TimeSpan;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.UploadedNpmPackage.
 * Use `create(UploadedNpmPackageSchema)` to create a new message.
 */
export const UploadedNpmPackageSchema: GenMessage<UploadedNpmPackage> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 10);

/**
 * A step in the build pipeline.
 *
 * @generated from message google.devtools.cloudbuild.v1.BuildStep
 */
export type BuildStep = Message<"google.devtools.cloudbuild.v1.BuildStep"> & {
  /**
   * Required. The name of the container image that will run this particular
   * build step.
   *
   * If the image is available in the host's Docker daemon's cache, it
   * will be run directly. If not, the host will attempt to pull the image
   * first, using the builder service account's credentials if necessary.
   *
   * The Docker daemon's cache will already have the latest versions of all of
   * the officially supported build steps
   * ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)).
   * The Docker daemon will also have cached many of the layers for some popular
   * images, like "ubuntu", "debian", but they will be refreshed at the time you
   * attempt to use them.
   *
   * If you built an image in a previous build step, it will be stored in the
   * host's Docker daemon's cache and is available to use as the name for a
   * later build step.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A list of environment variable definitions to be used when running a step.
   *
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   *
   * @generated from field: repeated string env = 2;
   */
  env: string[];

  /**
   * A list of arguments that will be presented to the step when it is started.
   *
   * If the image used to run the step's container has an entrypoint, the `args`
   * are used as arguments to that entrypoint. If the image does not define
   * an entrypoint, the first element in args is used as the entrypoint,
   * and the remainder will be used as arguments.
   *
   * @generated from field: repeated string args = 3;
   */
  args: string[];

  /**
   * Working directory to use when running this step's container.
   *
   * If this value is a relative path, it is relative to the build's working
   * directory. If this value is absolute, it may be outside the build's working
   * directory, in which case the contents of the path may not be persisted
   * across build step executions, unless a `volume` for that path is specified.
   *
   * If the build specifies a `RepoSource` with `dir` and a step with a `dir`,
   * which specifies an absolute path, the `RepoSource` `dir` is ignored for
   * the step's execution.
   *
   * @generated from field: string dir = 4;
   */
  dir: string;

  /**
   * Unique identifier for this build step, used in `wait_for` to
   * reference this build step as a dependency.
   *
   * @generated from field: string id = 5;
   */
  id: string;

  /**
   * The ID(s) of the step(s) that this build step depends on.
   * This build step will not start until all the build steps in `wait_for`
   * have completed successfully. If `wait_for` is empty, this build step will
   * start when all previous build steps in the `Build.Steps` list have
   * completed successfully.
   *
   * @generated from field: repeated string wait_for = 6;
   */
  waitFor: string[];

  /**
   * Entrypoint to be used instead of the build step image's default entrypoint.
   * If unset, the image's default entrypoint is used.
   *
   * @generated from field: string entrypoint = 7;
   */
  entrypoint: string;

  /**
   * A list of environment variables which are encrypted using a Cloud Key
   * Management Service crypto key. These values must be specified in the
   * build's `Secret`.
   *
   * @generated from field: repeated string secret_env = 8;
   */
  secretEnv: string[];

  /**
   * List of volumes to mount into the build step.
   *
   * Each volume is created as an empty volume prior to execution of the
   * build step. Upon completion of the build, volumes and their contents are
   * discarded.
   *
   * Using a named volume in only one step is not valid as it is indicative
   * of a build request with an incorrect configuration.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.Volume volumes = 9;
   */
  volumes: Volume[];

  /**
   * Output only. Stores timing information for executing this build step.
   *
   * @generated from field: google.devtools.cloudbuild.v1.TimeSpan timing = 10;
   */
  timing?: TimeSpan;

  /**
   * Output only. Stores timing information for pulling this build step's
   * builder image only.
   *
   * @generated from field: google.devtools.cloudbuild.v1.TimeSpan pull_timing = 13;
   */
  pullTiming?: TimeSpan;

  /**
   * Time limit for executing this build step. If not defined, the step has no
   * time limit and will be allowed to continue to run until either it completes
   * or the build itself times out.
   *
   * @generated from field: google.protobuf.Duration timeout = 11;
   */
  timeout?: Duration;

  /**
   * Output only. Status of the build step. At this time, build step status is
   * only updated on build completion; step status is not updated in real-time
   * as the build progresses.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Build.Status status = 12;
   */
  status: Build_Status;

  /**
   * Allow this build step to fail without failing the entire build.
   *
   * If false, the entire build will fail if this step fails. Otherwise, the
   * build will succeed, but this step will still have a failure status.
   * Error information will be reported in the failure_detail field.
   *
   * @generated from field: bool allow_failure = 14;
   */
  allowFailure: boolean;

  /**
   * Output only. Return code from running the step.
   *
   * @generated from field: int32 exit_code = 16;
   */
  exitCode: number;

  /**
   * Allow this build step to fail without failing the entire build if and
   * only if the exit code is one of the specified codes. If allow_failure
   * is also specified, this field will take precedence.
   *
   * @generated from field: repeated int32 allow_exit_codes = 18;
   */
  allowExitCodes: number[];

  /**
   * A shell script to be executed in the step.
   *
   * When script is provided, the user cannot specify the entrypoint or args.
   *
   * @generated from field: string script = 19;
   */
  script: string;

  /**
   * Option to include built-in and custom substitutions as env variables
   * for this build step. This option will override the global option
   * in BuildOption.
   *
   * @generated from field: optional bool automap_substitutions = 20;
   */
  automapSubstitutions?: boolean;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.BuildStep.
 * Use `create(BuildStepSchema)` to create a new message.
 */
export const BuildStepSchema: GenMessage<BuildStep> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 11);

/**
 * Volume describes a Docker container volume which is mounted into build steps
 * in order to persist files across build step execution.
 *
 * @generated from message google.devtools.cloudbuild.v1.Volume
 */
export type Volume = Message<"google.devtools.cloudbuild.v1.Volume"> & {
  /**
   * Name of the volume to mount.
   *
   * Volume names must be unique per build step and must be valid names for
   * Docker volumes. Each named volume must be used by at least two build steps.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Path at which to mount the volume.
   *
   * Paths must be absolute and cannot conflict with other volume paths on the
   * same build step or with certain reserved volume paths.
   *
   * @generated from field: string path = 2;
   */
  path: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Volume.
 * Use `create(VolumeSchema)` to create a new message.
 */
export const VolumeSchema: GenMessage<Volume> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 12);

/**
 * Artifacts created by the build pipeline.
 *
 * @generated from message google.devtools.cloudbuild.v1.Results
 */
export type Results = Message<"google.devtools.cloudbuild.v1.Results"> & {
  /**
   * Container images that were built as a part of the build.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.BuiltImage images = 2;
   */
  images: BuiltImage[];

  /**
   * List of build step digests, in the order corresponding to build step
   * indices.
   *
   * @generated from field: repeated string build_step_images = 3;
   */
  buildStepImages: string[];

  /**
   * Path to the artifact manifest for non-container artifacts uploaded to Cloud
   * Storage. Only populated when artifacts are uploaded to Cloud Storage.
   *
   * @generated from field: string artifact_manifest = 4;
   */
  artifactManifest: string;

  /**
   * Number of non-container artifacts uploaded to Cloud Storage. Only populated
   * when artifacts are uploaded to Cloud Storage.
   *
   * @generated from field: int64 num_artifacts = 5;
   */
  numArtifacts: bigint;

  /**
   * List of build step outputs, produced by builder images, in the order
   * corresponding to build step indices.
   *
   * [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders)
   * can produce this output by writing to `$BUILDER_OUTPUT/output`.
   * Only the first 4KB of data is stored.
   *
   * @generated from field: repeated bytes build_step_outputs = 6;
   */
  buildStepOutputs: Uint8Array[];

  /**
   * Time to push all non-container artifacts to Cloud Storage.
   *
   * @generated from field: google.devtools.cloudbuild.v1.TimeSpan artifact_timing = 7;
   */
  artifactTiming?: TimeSpan;

  /**
   * Python artifacts uploaded to Artifact Registry at the end of the build.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.UploadedPythonPackage python_packages = 8;
   */
  pythonPackages: UploadedPythonPackage[];

  /**
   * Maven artifacts uploaded to Artifact Registry at the end of the build.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.UploadedMavenArtifact maven_artifacts = 9;
   */
  mavenArtifacts: UploadedMavenArtifact[];

  /**
   * Npm packages uploaded to Artifact Registry at the end of the build.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.UploadedNpmPackage npm_packages = 12;
   */
  npmPackages: UploadedNpmPackage[];
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Results.
 * Use `create(ResultsSchema)` to create a new message.
 */
export const ResultsSchema: GenMessage<Results> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 13);

/**
 * An artifact that was uploaded during a build. This
 * is a single record in the artifact manifest JSON file.
 *
 * @generated from message google.devtools.cloudbuild.v1.ArtifactResult
 */
export type ArtifactResult = Message<"google.devtools.cloudbuild.v1.ArtifactResult"> & {
  /**
   * The path of an artifact in a Cloud Storage bucket, with the
   * generation number. For example,
   * `gs://mybucket/path/to/output.jar#generation`.
   *
   * @generated from field: string location = 1;
   */
  location: string;

  /**
   * The file hash of the artifact.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.FileHashes file_hash = 2;
   */
  fileHash: FileHashes[];
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ArtifactResult.
 * Use `create(ArtifactResultSchema)` to create a new message.
 */
export const ArtifactResultSchema: GenMessage<ArtifactResult> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 14);

/**
 * A build resource in the Cloud Build API.
 *
 * At a high level, a `Build` describes where to find source code, how to build
 * it (for example, the builder image to run on the source), and where to store
 * the built artifacts.
 *
 * Fields can include the following variables, which will be expanded when the
 * build is created:
 *
 * - $PROJECT_ID: the project ID of the build.
 * - $PROJECT_NUMBER: the project number of the build.
 * - $LOCATION: the location/region of the build.
 * - $BUILD_ID: the autogenerated ID of the build.
 * - $REPO_NAME: the source repository name specified by RepoSource.
 * - $BRANCH_NAME: the branch name specified by RepoSource.
 * - $TAG_NAME: the tag name specified by RepoSource.
 * - $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or
 *   resolved from the specified branch or tag.
 * - $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA.
 *
 * @generated from message google.devtools.cloudbuild.v1.Build
 */
export type Build = Message<"google.devtools.cloudbuild.v1.Build"> & {
  /**
   * Output only. The 'Build' name with format:
   * `projects/{project}/locations/{location}/builds/{build}`, where {build}
   * is a unique identifier generated by the service.
   *
   * @generated from field: string name = 45;
   */
  name: string;

  /**
   * Output only. Unique identifier of the build.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Output only. ID of the project.
   *
   * @generated from field: string project_id = 16;
   */
  projectId: string;

  /**
   * Output only. Status of the build.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Build.Status status = 2;
   */
  status: Build_Status;

  /**
   * Output only. Customer-readable message about the current status.
   *
   * @generated from field: string status_detail = 24;
   */
  statusDetail: string;

  /**
   * The location of the source files to build.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Source source = 3;
   */
  source?: Source;

  /**
   * Required. The operations to be performed on the workspace.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.BuildStep steps = 11;
   */
  steps: BuildStep[];

  /**
   * Output only. Results of the build.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Results results = 10;
   */
  results?: Results;

  /**
   * Output only. Time at which the request to create the build was received.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time at which execution of the build was started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 7;
   */
  startTime?: Timestamp;

  /**
   * Output only. Time at which execution of the build was finished.
   *
   * The difference between finish_time and start_time is the duration of the
   * build's execution.
   *
   * @generated from field: google.protobuf.Timestamp finish_time = 8;
   */
  finishTime?: Timestamp;

  /**
   * Amount of time that this build should be allowed to run, to second
   * granularity. If this amount of time elapses, work on the build will cease
   * and the build status will be `TIMEOUT`.
   *
   * `timeout` starts ticking from `startTime`.
   *
   * Default time is 60 minutes.
   *
   * @generated from field: google.protobuf.Duration timeout = 12;
   */
  timeout?: Duration;

  /**
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   *
   * The images are pushed using the builder service account's credentials.
   *
   * The digests of the pushed images will be stored in the `Build` resource's
   * results field.
   *
   * If any of the images fail to be pushed, the build status is marked
   * `FAILURE`.
   *
   * @generated from field: repeated string images = 13;
   */
  images: string[];

  /**
   * TTL in queue for this build. If provided and the build is enqueued longer
   * than this value, the build will expire and the build status will be
   * `EXPIRED`.
   *
   * The TTL starts ticking from create_time.
   *
   * @generated from field: google.protobuf.Duration queue_ttl = 40;
   */
  queueTtl?: Duration;

  /**
   * Artifacts produced by the build that should be uploaded upon
   * successful completion of all build steps.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Artifacts artifacts = 37;
   */
  artifacts?: Artifacts;

  /**
   * Cloud Storage bucket where logs should be written (see
   * [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
   *
   * @generated from field: string logs_bucket = 19;
   */
  logsBucket: string;

  /**
   * Output only. A permanent fixed identifier for source.
   *
   * @generated from field: google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
   */
  sourceProvenance?: SourceProvenance;

  /**
   * Output only. The ID of the `BuildTrigger` that triggered this build, if it
   * was triggered automatically.
   *
   * @generated from field: string build_trigger_id = 22;
   */
  buildTriggerId: string;

  /**
   * Special options for this build.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildOptions options = 23;
   */
  options?: BuildOptions;

  /**
   * Output only. URL to logs for this build in Google Cloud Console.
   *
   * @generated from field: string log_url = 25;
   */
  logUrl: string;

  /**
   * Substitutions data for `Build` resource.
   *
   * @generated from field: map<string, string> substitutions = 29;
   */
  substitutions: { [key: string]: string };

  /**
   * Tags for annotation of a `Build`. These are not docker tags.
   *
   * @generated from field: repeated string tags = 31;
   */
  tags: string[];

  /**
   * Secrets to decrypt using Cloud Key Management Service.
   * Note: Secret Manager is the recommended technique
   * for managing sensitive data with Cloud Build. Use `available_secrets` to
   * configure builds to access secrets from Secret Manager. For instructions,
   * see: https://cloud.google.com/cloud-build/docs/securing-builds/use-secrets
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.Secret secrets = 32;
   */
  secrets: Secret[];

  /**
   * Output only. Stores timing information for phases of the build. Valid keys
   * are:
   *
   * * BUILD: time to execute all build steps.
   * * PUSH: time to push all artifacts including docker images and non docker
   * artifacts.
   * * FETCHSOURCE: time to fetch source.
   * * SETUPBUILD: time to set up build.
   *
   * If the build does not specify source or images,
   * these keys will not be included.
   *
   * @generated from field: map<string, google.devtools.cloudbuild.v1.TimeSpan> timing = 33;
   */
  timing: { [key: string]: TimeSpan };

  /**
   * Output only. Describes this build's approval configuration, status,
   * and result.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildApproval approval = 44;
   */
  approval?: BuildApproval;

  /**
   * IAM service account whose credentials will be used at build runtime.
   * Must be of the format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
   * ACCOUNT can be email address or uniqueId of the service account.
   *
   *
   * @generated from field: string service_account = 42;
   */
  serviceAccount: string;

  /**
   * Secrets and secret environment variables.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Secrets available_secrets = 47;
   */
  availableSecrets?: Secrets;

  /**
   * Output only. Non-fatal problems encountered during the execution of the
   * build.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.Build.Warning warnings = 49;
   */
  warnings: Build_Warning[];

  /**
   * Output only. Contains information about the build when status=FAILURE.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Build.FailureInfo failure_info = 51;
   */
  failureInfo?: Build_FailureInfo;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Build.
 * Use `create(BuildSchema)` to create a new message.
 */
export const BuildSchema: GenMessage<Build> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 15);

/**
 * A non-fatal problem encountered during the execution of the build.
 *
 * @generated from message google.devtools.cloudbuild.v1.Build.Warning
 */
export type Build_Warning = Message<"google.devtools.cloudbuild.v1.Build.Warning"> & {
  /**
   * Explanation of the warning generated.
   *
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * The priority for this warning.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Build.Warning.Priority priority = 2;
   */
  priority: Build_Warning_Priority;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Build.Warning.
 * Use `create(Build_WarningSchema)` to create a new message.
 */
export const Build_WarningSchema: GenMessage<Build_Warning> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 15, 0);

/**
 * The relative importance of this warning.
 *
 * @generated from enum google.devtools.cloudbuild.v1.Build.Warning.Priority
 */
export enum Build_Warning_Priority {
  /**
   * Should not be used.
   *
   * @generated from enum value: PRIORITY_UNSPECIFIED = 0;
   */
  PRIORITY_UNSPECIFIED = 0,

  /**
   * e.g. deprecation warnings and alternative feature highlights.
   *
   * @generated from enum value: INFO = 1;
   */
  INFO = 1,

  /**
   * e.g. automated detection of possible issues with the build.
   *
   * @generated from enum value: WARNING = 2;
   */
  WARNING = 2,

  /**
   * e.g. alerts that a feature used in the build is pending removal
   *
   * @generated from enum value: ALERT = 3;
   */
  ALERT = 3,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.Build.Warning.Priority.
 */
export const Build_Warning_PrioritySchema: GenEnum<Build_Warning_Priority> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 15, 0, 0);

/**
 * A fatal problem encountered during the execution of the build.
 *
 * @generated from message google.devtools.cloudbuild.v1.Build.FailureInfo
 */
export type Build_FailureInfo = Message<"google.devtools.cloudbuild.v1.Build.FailureInfo"> & {
  /**
   * The name of the failure.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Build.FailureInfo.FailureType type = 1;
   */
  type: Build_FailureInfo_FailureType;

  /**
   * Explains the failure issue in more detail using hard-coded text.
   *
   * @generated from field: string detail = 2;
   */
  detail: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Build.FailureInfo.
 * Use `create(Build_FailureInfoSchema)` to create a new message.
 */
export const Build_FailureInfoSchema: GenMessage<Build_FailureInfo> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 15, 1);

/**
 * The name of a fatal problem encountered during the execution of the
 * build.
 *
 * @generated from enum google.devtools.cloudbuild.v1.Build.FailureInfo.FailureType
 */
export enum Build_FailureInfo_FailureType {
  /**
   * Type unspecified
   *
   * @generated from enum value: FAILURE_TYPE_UNSPECIFIED = 0;
   */
  FAILURE_TYPE_UNSPECIFIED = 0,

  /**
   * Unable to push the image to the repository.
   *
   * @generated from enum value: PUSH_FAILED = 1;
   */
  PUSH_FAILED = 1,

  /**
   * Final image not found.
   *
   * @generated from enum value: PUSH_IMAGE_NOT_FOUND = 2;
   */
  PUSH_IMAGE_NOT_FOUND = 2,

  /**
   * Unauthorized push of the final image.
   *
   * @generated from enum value: PUSH_NOT_AUTHORIZED = 3;
   */
  PUSH_NOT_AUTHORIZED = 3,

  /**
   * Backend logging failures. Should retry.
   *
   * @generated from enum value: LOGGING_FAILURE = 4;
   */
  LOGGING_FAILURE = 4,

  /**
   * A build step has failed.
   *
   * @generated from enum value: USER_BUILD_STEP = 5;
   */
  USER_BUILD_STEP = 5,

  /**
   * The source fetching has failed.
   *
   * @generated from enum value: FETCH_SOURCE_FAILED = 6;
   */
  FETCH_SOURCE_FAILED = 6,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.Build.FailureInfo.FailureType.
 */
export const Build_FailureInfo_FailureTypeSchema: GenEnum<Build_FailureInfo_FailureType> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 15, 1, 0);

/**
 * Possible status of a build or build step.
 *
 * @generated from enum google.devtools.cloudbuild.v1.Build.Status
 */
export enum Build_Status {
  /**
   * Status of the build is unknown.
   *
   * @generated from enum value: STATUS_UNKNOWN = 0;
   */
  STATUS_UNKNOWN = 0,

  /**
   * Build has been created and is pending execution and queuing. It has not
   * been queued.
   *
   * @generated from enum value: PENDING = 10;
   */
  PENDING = 10,

  /**
   * Build or step is queued; work has not yet begun.
   *
   * @generated from enum value: QUEUED = 1;
   */
  QUEUED = 1,

  /**
   * Build or step is being executed.
   *
   * @generated from enum value: WORKING = 2;
   */
  WORKING = 2,

  /**
   * Build or step finished successfully.
   *
   * @generated from enum value: SUCCESS = 3;
   */
  SUCCESS = 3,

  /**
   * Build or step failed to complete successfully.
   *
   * @generated from enum value: FAILURE = 4;
   */
  FAILURE = 4,

  /**
   * Build or step failed due to an internal cause.
   *
   * @generated from enum value: INTERNAL_ERROR = 5;
   */
  INTERNAL_ERROR = 5,

  /**
   * Build or step took longer than was allowed.
   *
   * @generated from enum value: TIMEOUT = 6;
   */
  TIMEOUT = 6,

  /**
   * Build or step was canceled by a user.
   *
   * @generated from enum value: CANCELLED = 7;
   */
  CANCELLED = 7,

  /**
   * Build was enqueued for longer than the value of `queue_ttl`.
   *
   * @generated from enum value: EXPIRED = 9;
   */
  EXPIRED = 9,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.Build.Status.
 */
export const Build_StatusSchema: GenEnum<Build_Status> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 15, 0);

/**
 * Artifacts produced by a build that should be uploaded upon
 * successful completion of all build steps.
 *
 * @generated from message google.devtools.cloudbuild.v1.Artifacts
 */
export type Artifacts = Message<"google.devtools.cloudbuild.v1.Artifacts"> & {
  /**
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   *
   * The images will be pushed using the builder service account's credentials.
   *
   * The digests of the pushed images will be stored in the Build resource's
   * results field.
   *
   * If any of the images fail to be pushed, the build is marked FAILURE.
   *
   * @generated from field: repeated string images = 1;
   */
  images: string[];

  /**
   * A list of objects to be uploaded to Cloud Storage upon successful
   * completion of all build steps.
   *
   * Files in the workspace matching specified paths globs will be uploaded to
   * the specified Cloud Storage location using the builder service account's
   * credentials.
   *
   * The location and generation of the uploaded objects will be stored in the
   * Build resource's results field.
   *
   * If any objects fail to be pushed, the build is marked FAILURE.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects objects = 2;
   */
  objects?: Artifacts_ArtifactObjects;

  /**
   * A list of Maven artifacts to be uploaded to Artifact Registry upon
   * successful completion of all build steps.
   *
   * Artifacts in the workspace matching specified paths globs will be uploaded
   * to the specified Artifact Registry repository using the builder service
   * account's credentials.
   *
   * If any artifacts fail to be pushed, the build is marked FAILURE.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.Artifacts.MavenArtifact maven_artifacts = 3;
   */
  mavenArtifacts: Artifacts_MavenArtifact[];

  /**
   * A list of Python packages to be uploaded to Artifact Registry upon
   * successful completion of all build steps.
   *
   * The build service account credentials will be used to perform the upload.
   *
   * If any objects fail to be pushed, the build is marked FAILURE.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.Artifacts.PythonPackage python_packages = 5;
   */
  pythonPackages: Artifacts_PythonPackage[];

  /**
   * A list of npm packages to be uploaded to Artifact Registry upon
   * successful completion of all build steps.
   *
   * Npm packages in the specified paths will be uploaded
   * to the specified Artifact Registry repository using the builder service
   * account's credentials.
   *
   * If any packages fail to be pushed, the build is marked FAILURE.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.Artifacts.NpmPackage npm_packages = 6;
   */
  npmPackages: Artifacts_NpmPackage[];
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Artifacts.
 * Use `create(ArtifactsSchema)` to create a new message.
 */
export const ArtifactsSchema: GenMessage<Artifacts> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 16);

/**
 * Files in the workspace to upload to Cloud Storage upon successful
 * completion of all build steps.
 *
 * @generated from message google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
 */
export type Artifacts_ArtifactObjects = Message<"google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects"> & {
  /**
   * Cloud Storage bucket and optional object path, in the form
   * "gs://bucket/path/to/somewhere/". (see [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   *
   * Files in the workspace matching any path pattern will be uploaded to
   * Cloud Storage with this location as a prefix.
   *
   * @generated from field: string location = 1;
   */
  location: string;

  /**
   * Path globs used to match files in the build's workspace.
   *
   * @generated from field: repeated string paths = 2;
   */
  paths: string[];

  /**
   * Output only. Stores timing information for pushing all artifact objects.
   *
   * @generated from field: google.devtools.cloudbuild.v1.TimeSpan timing = 3;
   */
  timing?: TimeSpan;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects.
 * Use `create(Artifacts_ArtifactObjectsSchema)` to create a new message.
 */
export const Artifacts_ArtifactObjectsSchema: GenMessage<Artifacts_ArtifactObjects> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 16, 0);

/**
 * A Maven artifact to upload to Artifact Registry upon successful completion
 * of all build steps.
 *
 * @generated from message google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
 */
export type Artifacts_MavenArtifact = Message<"google.devtools.cloudbuild.v1.Artifacts.MavenArtifact"> & {
  /**
   * Artifact Registry repository, in the form
   * "https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY"
   *
   * Artifact in the workspace specified by path will be uploaded to
   * Artifact Registry with this location as a prefix.
   *
   * @generated from field: string repository = 1;
   */
  repository: string;

  /**
   * Path to an artifact in the build's workspace to be uploaded to
   * Artifact Registry.
   * This can be either an absolute path,
   * e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar
   * or a relative path from /workspace,
   * e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.
   *
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * Maven `artifactId` value used when uploading the artifact to Artifact
   * Registry.
   *
   * @generated from field: string artifact_id = 3;
   */
  artifactId: string;

  /**
   * Maven `groupId` value used when uploading the artifact to Artifact
   * Registry.
   *
   * @generated from field: string group_id = 4;
   */
  groupId: string;

  /**
   * Maven `version` value used when uploading the artifact to Artifact
   * Registry.
   *
   * @generated from field: string version = 5;
   */
  version: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Artifacts.MavenArtifact.
 * Use `create(Artifacts_MavenArtifactSchema)` to create a new message.
 */
export const Artifacts_MavenArtifactSchema: GenMessage<Artifacts_MavenArtifact> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 16, 1);

/**
 * Python package to upload to Artifact Registry upon successful completion
 * of all build steps. A package can encapsulate multiple objects to be
 * uploaded to a single repository.
 *
 * @generated from message google.devtools.cloudbuild.v1.Artifacts.PythonPackage
 */
export type Artifacts_PythonPackage = Message<"google.devtools.cloudbuild.v1.Artifacts.PythonPackage"> & {
  /**
   * Artifact Registry repository, in the form
   * "https://$REGION-python.pkg.dev/$PROJECT/$REPOSITORY"
   *
   * Files in the workspace matching any path pattern will be uploaded to
   * Artifact Registry with this location as a prefix.
   *
   * @generated from field: string repository = 1;
   */
  repository: string;

  /**
   * Path globs used to match files in the build's workspace. For Python/
   * Twine, this is usually `dist/*`, and sometimes additionally an `.asc`
   * file.
   *
   * @generated from field: repeated string paths = 2;
   */
  paths: string[];
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Artifacts.PythonPackage.
 * Use `create(Artifacts_PythonPackageSchema)` to create a new message.
 */
export const Artifacts_PythonPackageSchema: GenMessage<Artifacts_PythonPackage> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 16, 2);

/**
 * Npm package to upload to Artifact Registry upon successful completion
 * of all build steps.
 *
 * @generated from message google.devtools.cloudbuild.v1.Artifacts.NpmPackage
 */
export type Artifacts_NpmPackage = Message<"google.devtools.cloudbuild.v1.Artifacts.NpmPackage"> & {
  /**
   * Artifact Registry repository, in the form
   * "https://$REGION-npm.pkg.dev/$PROJECT/$REPOSITORY"
   *
   * Npm package in the workspace specified by path will be zipped and
   * uploaded to Artifact Registry with this location as a prefix.
   *
   * @generated from field: string repository = 1;
   */
  repository: string;

  /**
   * Path to the package.json.
   * e.g. workspace/path/to/package
   *
   * @generated from field: string package_path = 2;
   */
  packagePath: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Artifacts.NpmPackage.
 * Use `create(Artifacts_NpmPackageSchema)` to create a new message.
 */
export const Artifacts_NpmPackageSchema: GenMessage<Artifacts_NpmPackage> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 16, 3);

/**
 * Start and end times for a build execution phase.
 *
 * @generated from message google.devtools.cloudbuild.v1.TimeSpan
 */
export type TimeSpan = Message<"google.devtools.cloudbuild.v1.TimeSpan"> & {
  /**
   * Start of time span.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * End of time span.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.TimeSpan.
 * Use `create(TimeSpanSchema)` to create a new message.
 */
export const TimeSpanSchema: GenMessage<TimeSpan> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 17);

/**
 * Metadata for build operations.
 *
 * @generated from message google.devtools.cloudbuild.v1.BuildOperationMetadata
 */
export type BuildOperationMetadata = Message<"google.devtools.cloudbuild.v1.BuildOperationMetadata"> & {
  /**
   * The build that the operation is tracking.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Build build = 1;
   */
  build?: Build;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.BuildOperationMetadata.
 * Use `create(BuildOperationMetadataSchema)` to create a new message.
 */
export const BuildOperationMetadataSchema: GenMessage<BuildOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 18);

/**
 * Provenance of the source. Ways to find the original source, or verify that
 * some source was used for this build.
 *
 * @generated from message google.devtools.cloudbuild.v1.SourceProvenance
 */
export type SourceProvenance = Message<"google.devtools.cloudbuild.v1.SourceProvenance"> & {
  /**
   * A copy of the build's `source.storage_source`, if exists, with any
   * generations resolved.
   *
   * @generated from field: google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
   */
  resolvedStorageSource?: StorageSource;

  /**
   * A copy of the build's `source.repo_source`, if exists, with any
   * revisions resolved.
   *
   * @generated from field: google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
   */
  resolvedRepoSource?: RepoSource;

  /**
   * A copy of the build's `source.storage_source_manifest`, if exists, with any
   * revisions resolved.
   * This feature is in Preview.
   *
   * @generated from field: google.devtools.cloudbuild.v1.StorageSourceManifest resolved_storage_source_manifest = 9;
   */
  resolvedStorageSourceManifest?: StorageSourceManifest;

  /**
   * Output only. Hash(es) of the build source, which can be used to verify that
   * the original source integrity was maintained in the build. Note that
   * `FileHashes` will only be populated if `BuildOptions` has requested a
   * `SourceProvenanceHash`.
   *
   * The keys to this map are file paths used as build source and the values
   * contain the hash values for those files.
   *
   * If the build source came in a single package such as a gzipped tarfile
   * (`.tar.gz`), the `FileHash` will be for the single path to that file.
   *
   * @generated from field: map<string, google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
   */
  fileHashes: { [key: string]: FileHashes };
};

/**
 * Describes the message google.devtools.cloudbuild.v1.SourceProvenance.
 * Use `create(SourceProvenanceSchema)` to create a new message.
 */
export const SourceProvenanceSchema: GenMessage<SourceProvenance> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 19);

/**
 * Container message for hashes of byte content of files, used in
 * SourceProvenance messages to verify integrity of source input to the build.
 *
 * @generated from message google.devtools.cloudbuild.v1.FileHashes
 */
export type FileHashes = Message<"google.devtools.cloudbuild.v1.FileHashes"> & {
  /**
   * Collection of file hashes.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.Hash file_hash = 1;
   */
  fileHash: Hash[];
};

/**
 * Describes the message google.devtools.cloudbuild.v1.FileHashes.
 * Use `create(FileHashesSchema)` to create a new message.
 */
export const FileHashesSchema: GenMessage<FileHashes> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 20);

/**
 * Container message for hash values.
 *
 * @generated from message google.devtools.cloudbuild.v1.Hash
 */
export type Hash = Message<"google.devtools.cloudbuild.v1.Hash"> & {
  /**
   * The type of hash that was performed.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Hash.HashType type = 1;
   */
  type: Hash_HashType;

  /**
   * The hash value.
   *
   * @generated from field: bytes value = 2;
   */
  value: Uint8Array;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Hash.
 * Use `create(HashSchema)` to create a new message.
 */
export const HashSchema: GenMessage<Hash> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 21);

/**
 * Specifies the hash algorithm, if any.
 *
 * @generated from enum google.devtools.cloudbuild.v1.Hash.HashType
 */
export enum Hash_HashType {
  /**
   * No hash requested.
   *
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * Use a sha256 hash.
   *
   * @generated from enum value: SHA256 = 1;
   */
  SHA256 = 1,

  /**
   * Use a md5 hash.
   *
   * @generated from enum value: MD5 = 2;
   */
  MD5 = 2,

  /**
   * Use a sha512 hash.
   *
   * @generated from enum value: SHA512 = 4;
   */
  SHA512 = 4,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.Hash.HashType.
 */
export const Hash_HashTypeSchema: GenEnum<Hash_HashType> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 21, 0);

/**
 * Secrets and secret environment variables.
 *
 * @generated from message google.devtools.cloudbuild.v1.Secrets
 */
export type Secrets = Message<"google.devtools.cloudbuild.v1.Secrets"> & {
  /**
   * Secrets in Secret Manager and associated secret environment variable.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.SecretManagerSecret secret_manager = 1;
   */
  secretManager: SecretManagerSecret[];

  /**
   * Secrets encrypted with KMS key and the associated secret environment
   * variable.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.InlineSecret inline = 2;
   */
  inline: InlineSecret[];
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Secrets.
 * Use `create(SecretsSchema)` to create a new message.
 */
export const SecretsSchema: GenMessage<Secrets> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 22);

/**
 * Pairs a set of secret environment variables mapped to encrypted
 * values with the Cloud KMS key to use to decrypt the value.
 *
 * @generated from message google.devtools.cloudbuild.v1.InlineSecret
 */
export type InlineSecret = Message<"google.devtools.cloudbuild.v1.InlineSecret"> & {
  /**
   * Resource name of Cloud KMS crypto key to decrypt the encrypted value.
   * In format: projects/*\/locations/*\/keyRings/*\/cryptoKeys/*
   *
   * @generated from field: string kms_key_name = 1;
   */
  kmsKeyName: string;

  /**
   * Map of environment variable name to its encrypted value.
   *
   * Secret environment variables must be unique across all of a build's
   * secrets, and must be used by at least one build step. Values can be at most
   * 64 KB in size. There can be at most 100 secret values across all of a
   * build's secrets.
   *
   * @generated from field: map<string, bytes> env_map = 2;
   */
  envMap: { [key: string]: Uint8Array };
};

/**
 * Describes the message google.devtools.cloudbuild.v1.InlineSecret.
 * Use `create(InlineSecretSchema)` to create a new message.
 */
export const InlineSecretSchema: GenMessage<InlineSecret> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 23);

/**
 * Pairs a secret environment variable with a SecretVersion in Secret Manager.
 *
 * @generated from message google.devtools.cloudbuild.v1.SecretManagerSecret
 */
export type SecretManagerSecret = Message<"google.devtools.cloudbuild.v1.SecretManagerSecret"> & {
  /**
   * Resource name of the SecretVersion. In format:
   * projects/*\/secrets/*\/versions/*
   *
   * @generated from field: string version_name = 1;
   */
  versionName: string;

  /**
   * Environment variable name to associate with the secret.
   * Secret environment variables must be unique across all of a build's
   * secrets, and must be used by at least one build step.
   *
   * @generated from field: string env = 2;
   */
  env: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.SecretManagerSecret.
 * Use `create(SecretManagerSecretSchema)` to create a new message.
 */
export const SecretManagerSecretSchema: GenMessage<SecretManagerSecret> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 24);

/**
 * Pairs a set of secret environment variables containing encrypted
 * values with the Cloud KMS key to use to decrypt the value.
 * Note: Use `kmsKeyName` with  `available_secrets` instead of using
 * `kmsKeyName` with `secret`. For instructions see:
 * https://cloud.google.com/cloud-build/docs/securing-builds/use-encrypted-credentials.
 *
 * @generated from message google.devtools.cloudbuild.v1.Secret
 */
export type Secret = Message<"google.devtools.cloudbuild.v1.Secret"> & {
  /**
   * Cloud KMS key name to use to decrypt these envs.
   *
   * @generated from field: string kms_key_name = 1;
   */
  kmsKeyName: string;

  /**
   * Map of environment variable name to its encrypted value.
   *
   * Secret environment variables must be unique across all of a build's
   * secrets, and must be used by at least one build step. Values can be at most
   * 64 KB in size. There can be at most 100 secret values across all of a
   * build's secrets.
   *
   * @generated from field: map<string, bytes> secret_env = 3;
   */
  secretEnv: { [key: string]: Uint8Array };
};

/**
 * Describes the message google.devtools.cloudbuild.v1.Secret.
 * Use `create(SecretSchema)` to create a new message.
 */
export const SecretSchema: GenMessage<Secret> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 25);

/**
 * Request to create a new build.
 *
 * @generated from message google.devtools.cloudbuild.v1.CreateBuildRequest
 */
export type CreateBuildRequest = Message<"google.devtools.cloudbuild.v1.CreateBuildRequest"> & {
  /**
   * The parent resource where this build will be created.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 4;
   */
  parent: string;

  /**
   * Required. ID of the project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Build resource to create.
   *
   * @generated from field: google.devtools.cloudbuild.v1.Build build = 2;
   */
  build?: Build;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.CreateBuildRequest.
 * Use `create(CreateBuildRequestSchema)` to create a new message.
 */
export const CreateBuildRequestSchema: GenMessage<CreateBuildRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 26);

/**
 * Request to get a build.
 *
 * @generated from message google.devtools.cloudbuild.v1.GetBuildRequest
 */
export type GetBuildRequest = Message<"google.devtools.cloudbuild.v1.GetBuildRequest"> & {
  /**
   * The name of the `Build` to retrieve.
   * Format: `projects/{project}/locations/{location}/builds/{build}`
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Required. ID of the project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. ID of the build.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.GetBuildRequest.
 * Use `create(GetBuildRequestSchema)` to create a new message.
 */
export const GetBuildRequestSchema: GenMessage<GetBuildRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 27);

/**
 * Request to list builds.
 *
 * @generated from message google.devtools.cloudbuild.v1.ListBuildsRequest
 */
export type ListBuildsRequest = Message<"google.devtools.cloudbuild.v1.ListBuildsRequest"> & {
  /**
   * The parent of the collection of `Builds`.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 9;
   */
  parent: string;

  /**
   * Required. ID of the project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Number of results to return in the list.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The page token for the next page of Builds.
   *
   * If unspecified, the first page of results is returned.
   *
   * If the token is rejected for any reason, INVALID_ARGUMENT will be thrown.
   * In this case, the token should be discarded, and pagination should be
   * restarted from the first page of results.
   *
   * See https://google.aip.dev/158 for more.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The raw filter text to constrain the results.
   *
   * @generated from field: string filter = 8;
   */
  filter: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ListBuildsRequest.
 * Use `create(ListBuildsRequestSchema)` to create a new message.
 */
export const ListBuildsRequestSchema: GenMessage<ListBuildsRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 28);

/**
 * Response including listed builds.
 *
 * @generated from message google.devtools.cloudbuild.v1.ListBuildsResponse
 */
export type ListBuildsResponse = Message<"google.devtools.cloudbuild.v1.ListBuildsResponse"> & {
  /**
   * Builds will be sorted by `create_time`, descending.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.Build builds = 1;
   */
  builds: Build[];

  /**
   * Token to receive the next page of results.
   * This will be absent if the end of the response list has been reached.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ListBuildsResponse.
 * Use `create(ListBuildsResponseSchema)` to create a new message.
 */
export const ListBuildsResponseSchema: GenMessage<ListBuildsResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 29);

/**
 * Request to cancel an ongoing build.
 *
 * @generated from message google.devtools.cloudbuild.v1.CancelBuildRequest
 */
export type CancelBuildRequest = Message<"google.devtools.cloudbuild.v1.CancelBuildRequest"> & {
  /**
   * The name of the `Build` to cancel.
   * Format: `projects/{project}/locations/{location}/builds/{build}`
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Required. ID of the project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. ID of the build.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.CancelBuildRequest.
 * Use `create(CancelBuildRequestSchema)` to create a new message.
 */
export const CancelBuildRequestSchema: GenMessage<CancelBuildRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 30);

/**
 * Request to approve or reject a pending build.
 *
 * @generated from message google.devtools.cloudbuild.v1.ApproveBuildRequest
 */
export type ApproveBuildRequest = Message<"google.devtools.cloudbuild.v1.ApproveBuildRequest"> & {
  /**
   * Required. Name of the target build.
   * For example: "projects/{$project_id}/builds/{$build_id}"
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Approval decision and metadata.
   *
   * @generated from field: google.devtools.cloudbuild.v1.ApprovalResult approval_result = 2;
   */
  approvalResult?: ApprovalResult;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ApproveBuildRequest.
 * Use `create(ApproveBuildRequestSchema)` to create a new message.
 */
export const ApproveBuildRequestSchema: GenMessage<ApproveBuildRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 31);

/**
 * BuildApproval describes a build's approval configuration, state, and
 * result.
 *
 * @generated from message google.devtools.cloudbuild.v1.BuildApproval
 */
export type BuildApproval = Message<"google.devtools.cloudbuild.v1.BuildApproval"> & {
  /**
   * Output only. The state of this build's approval.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildApproval.State state = 1;
   */
  state: BuildApproval_State;

  /**
   * Output only. Configuration for manual approval of this build.
   *
   * @generated from field: google.devtools.cloudbuild.v1.ApprovalConfig config = 2;
   */
  config?: ApprovalConfig;

  /**
   * Output only. Result of manual approval for this Build.
   *
   * @generated from field: google.devtools.cloudbuild.v1.ApprovalResult result = 3;
   */
  result?: ApprovalResult;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.BuildApproval.
 * Use `create(BuildApprovalSchema)` to create a new message.
 */
export const BuildApprovalSchema: GenMessage<BuildApproval> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 32);

/**
 * Specifies the current state of a build's approval.
 *
 * @generated from enum google.devtools.cloudbuild.v1.BuildApproval.State
 */
export enum BuildApproval_State {
  /**
   * Default enum type. This should not be used.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Build approval is pending.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * Build approval has been approved.
   *
   * @generated from enum value: APPROVED = 2;
   */
  APPROVED = 2,

  /**
   * Build approval has been rejected.
   *
   * @generated from enum value: REJECTED = 3;
   */
  REJECTED = 3,

  /**
   * Build was cancelled while it was still pending approval.
   *
   * @generated from enum value: CANCELLED = 5;
   */
  CANCELLED = 5,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.BuildApproval.State.
 */
export const BuildApproval_StateSchema: GenEnum<BuildApproval_State> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 32, 0);

/**
 * ApprovalConfig describes configuration for manual approval of a build.
 *
 * @generated from message google.devtools.cloudbuild.v1.ApprovalConfig
 */
export type ApprovalConfig = Message<"google.devtools.cloudbuild.v1.ApprovalConfig"> & {
  /**
   * Whether or not approval is needed. If this is set on a build, it will
   * become pending when created, and will need to be explicitly approved
   * to start.
   *
   * @generated from field: bool approval_required = 1;
   */
  approvalRequired: boolean;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ApprovalConfig.
 * Use `create(ApprovalConfigSchema)` to create a new message.
 */
export const ApprovalConfigSchema: GenMessage<ApprovalConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 33);

/**
 * ApprovalResult describes the decision and associated metadata of a manual
 * approval of a build.
 *
 * @generated from message google.devtools.cloudbuild.v1.ApprovalResult
 */
export type ApprovalResult = Message<"google.devtools.cloudbuild.v1.ApprovalResult"> & {
  /**
   * Output only. Email of the user that called the ApproveBuild API to
   * approve or reject a build at the time that the API was called.
   *
   * @generated from field: string approver_account = 2;
   */
  approverAccount: string;

  /**
   * Output only. The time when the approval decision was made.
   *
   * @generated from field: google.protobuf.Timestamp approval_time = 3;
   */
  approvalTime?: Timestamp;

  /**
   * Required. The decision of this manual approval.
   *
   * @generated from field: google.devtools.cloudbuild.v1.ApprovalResult.Decision decision = 4;
   */
  decision: ApprovalResult_Decision;

  /**
   * Optional. An optional comment for this manual approval result.
   *
   * @generated from field: string comment = 5;
   */
  comment: string;

  /**
   * Optional. An optional URL tied to this manual approval result. This field
   * is essentially the same as comment, except that it will be rendered by the
   * UI differently. An example use case is a link to an external job that
   * approved this Build.
   *
   * @generated from field: string url = 6;
   */
  url: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ApprovalResult.
 * Use `create(ApprovalResultSchema)` to create a new message.
 */
export const ApprovalResultSchema: GenMessage<ApprovalResult> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 34);

/**
 * Specifies whether or not this manual approval result is to approve
 * or reject a build.
 *
 * @generated from enum google.devtools.cloudbuild.v1.ApprovalResult.Decision
 */
export enum ApprovalResult_Decision {
  /**
   * Default enum type. This should not be used.
   *
   * @generated from enum value: DECISION_UNSPECIFIED = 0;
   */
  DECISION_UNSPECIFIED = 0,

  /**
   * Build is approved.
   *
   * @generated from enum value: APPROVED = 1;
   */
  APPROVED = 1,

  /**
   * Build is rejected.
   *
   * @generated from enum value: REJECTED = 2;
   */
  REJECTED = 2,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.ApprovalResult.Decision.
 */
export const ApprovalResult_DecisionSchema: GenEnum<ApprovalResult_Decision> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 34, 0);

/**
 * GitRepoSource describes a repo and ref of a code repository.
 *
 * @generated from message google.devtools.cloudbuild.v1.GitRepoSource
 */
export type GitRepoSource = Message<"google.devtools.cloudbuild.v1.GitRepoSource"> & {
  /**
   * The URI of the repo (e.g. https://github.com/user/repo.git).
   * Either `uri` or `repository` can be specified and is required.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * The source of the SCM repo.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.GitRepoSource.source
   */
  source: {
    /**
     * The connected repository resource name, in the format
     * `projects/*\/locations/*\/connections/*\/repositories/*`. Either `uri` or
     * `repository` can be specified and is required.
     *
     * @generated from field: string repository = 6;
     */
    value: string;
    case: "repository";
  } | { case: undefined; value?: undefined };

  /**
   * The branch or tag to use. Must start with "refs/" (required).
   *
   * @generated from field: string ref = 2;
   */
  ref: string;

  /**
   * See RepoType below.
   *
   * @generated from field: google.devtools.cloudbuild.v1.GitFileSource.RepoType repo_type = 3;
   */
  repoType: GitFileSource_RepoType;

  /**
   * The resource name of the enterprise config that should be applied
   * to this source.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.GitRepoSource.enterprise_config
   */
  enterpriseConfig: {
    /**
     * The full resource name of the github enterprise config.
     * Format:
     * `projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}`.
     * `projects/{project}/githubEnterpriseConfigs/{id}`.
     *
     * @generated from field: string github_enterprise_config = 4;
     */
    value: string;
    case: "githubEnterpriseConfig";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.cloudbuild.v1.GitRepoSource.
 * Use `create(GitRepoSourceSchema)` to create a new message.
 */
export const GitRepoSourceSchema: GenMessage<GitRepoSource> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 35);

/**
 * GitFileSource describes a file within a (possibly remote) code repository.
 *
 * @generated from message google.devtools.cloudbuild.v1.GitFileSource
 */
export type GitFileSource = Message<"google.devtools.cloudbuild.v1.GitFileSource"> & {
  /**
   * The path of the file, with the repo root as the root of the path.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * The URI of the repo.
   * Either uri or repository can be specified.
   * If unspecified, the repo from which the trigger invocation originated is
   * assumed to be the repo from which to read the specified path.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * The source of the SCM repo.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.GitFileSource.source
   */
  source: {
    /**
     * The fully qualified resource name of the Repos API repository.
     * Either URI or repository can be specified.
     * If unspecified, the repo from which the trigger invocation originated is
     * assumed to be the repo from which to read the specified path.
     *
     * @generated from field: string repository = 7;
     */
    value: string;
    case: "repository";
  } | { case: undefined; value?: undefined };

  /**
   * See RepoType above.
   *
   * @generated from field: google.devtools.cloudbuild.v1.GitFileSource.RepoType repo_type = 3;
   */
  repoType: GitFileSource_RepoType;

  /**
   * The branch, tag, arbitrary ref, or SHA version of the repo to use when
   * resolving the filename (optional).
   * This field respects the same syntax/resolution as described here:
   * https://git-scm.com/docs/gitrevisions
   * If unspecified, the revision from which the trigger invocation originated
   * is assumed to be the revision from which to read the specified path.
   *
   * @generated from field: string revision = 4;
   */
  revision: string;

  /**
   * The resource name of the enterprise config that should be applied
   * to this source.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.GitFileSource.enterprise_config
   */
  enterpriseConfig: {
    /**
     * The full resource name of the github enterprise config.
     * Format:
     * `projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}`.
     * `projects/{project}/githubEnterpriseConfigs/{id}`.
     *
     * @generated from field: string github_enterprise_config = 5;
     */
    value: string;
    case: "githubEnterpriseConfig";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.cloudbuild.v1.GitFileSource.
 * Use `create(GitFileSourceSchema)` to create a new message.
 */
export const GitFileSourceSchema: GenMessage<GitFileSource> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 36);

/**
 * The type of the repo, since it may not be explicit from the `repo` field
 * (e.g from a URL).
 *
 * @generated from enum google.devtools.cloudbuild.v1.GitFileSource.RepoType
 */
export enum GitFileSource_RepoType {
  /**
   * The default, unknown repo type. Don't use it, instead use one of
   * the other repo types.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * A Google Cloud Source Repositories-hosted repo.
   *
   * @generated from enum value: CLOUD_SOURCE_REPOSITORIES = 1;
   */
  CLOUD_SOURCE_REPOSITORIES = 1,

  /**
   * A GitHub-hosted repo not necessarily on "github.com" (i.e. GitHub
   * Enterprise).
   *
   * @generated from enum value: GITHUB = 2;
   */
  GITHUB = 2,

  /**
   * A Bitbucket Server-hosted repo.
   *
   * @generated from enum value: BITBUCKET_SERVER = 3;
   */
  BITBUCKET_SERVER = 3,

  /**
   * A GitLab-hosted repo.
   *
   * @generated from enum value: GITLAB = 4;
   */
  GITLAB = 4,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.GitFileSource.RepoType.
 */
export const GitFileSource_RepoTypeSchema: GenEnum<GitFileSource_RepoType> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 36, 0);

/**
 * Configuration for an automated build in response to source repository
 * changes.
 *
 * @generated from message google.devtools.cloudbuild.v1.BuildTrigger
 */
export type BuildTrigger = Message<"google.devtools.cloudbuild.v1.BuildTrigger"> & {
  /**
   * The `Trigger` name with format:
   * `projects/{project}/locations/{location}/triggers/{trigger}`, where
   * {trigger} is a unique identifier generated by the service.
   *
   * @generated from field: string resource_name = 34;
   */
  resourceName: string;

  /**
   * Output only. Unique identifier of the trigger.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Human-readable description of this trigger.
   *
   * @generated from field: string description = 10;
   */
  description: string;

  /**
   * User-assigned name of the trigger. Must be unique within the project.
   * Trigger names must meet the following requirements:
   *
   * + They must contain only alphanumeric characters and dashes.
   * + They can be 1-64 characters long.
   * + They must begin and end with an alphanumeric character.
   *
   * @generated from field: string name = 21;
   */
  name: string;

  /**
   * Tags for annotation of a `BuildTrigger`
   *
   * @generated from field: repeated string tags = 19;
   */
  tags: string[];

  /**
   * Template describing the types of source changes to trigger a build.
   *
   * Branch and tag names in trigger templates are interpreted as regular
   * expressions. Any branch or tag change that matches that regular expression
   * will trigger a build.
   *
   * Mutually exclusive with `github`.
   *
   * @generated from field: google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
   */
  triggerTemplate?: RepoSource;

  /**
   * GitHubEventsConfig describes the configuration of a trigger that creates
   * a build whenever a GitHub event is received.
   *
   * Mutually exclusive with `trigger_template`.
   *
   * @generated from field: google.devtools.cloudbuild.v1.GitHubEventsConfig github = 13;
   */
  github?: GitHubEventsConfig;

  /**
   * PubsubConfig describes the configuration of a trigger that
   * creates a build whenever a Pub/Sub message is published.
   *
   * @generated from field: google.devtools.cloudbuild.v1.PubsubConfig pubsub_config = 29;
   */
  pubsubConfig?: PubsubConfig;

  /**
   * WebhookConfig describes the configuration of a trigger that
   * creates a build whenever a webhook is sent to a trigger's webhook URL.
   *
   * @generated from field: google.devtools.cloudbuild.v1.WebhookConfig webhook_config = 31;
   */
  webhookConfig?: WebhookConfig;

  /**
   * Template describing the Build request to make when the trigger is matched.
   * At least one of the template fields must be provided.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.BuildTrigger.build_template
   */
  buildTemplate: {
    /**
     * Autodetect build configuration.  The following precedence is used (case
     * insensitive):
     *
     * 1. cloudbuild.yaml
     * 2. cloudbuild.yml
     * 3. cloudbuild.json
     * 4. Dockerfile
     *
     * Currently only available for GitHub App Triggers.
     *
     * @generated from field: bool autodetect = 18;
     */
    value: boolean;
    case: "autodetect";
  } | {
    /**
     * Contents of the build template.
     *
     * @generated from field: google.devtools.cloudbuild.v1.Build build = 4;
     */
    value: Build;
    case: "build";
  } | {
    /**
     * Path, from the source root, to the build configuration file
     * (i.e. cloudbuild.yaml).
     *
     * @generated from field: string filename = 8;
     */
    value: string;
    case: "filename";
  } | {
    /**
     * The file source describing the local or remote Build template.
     *
     * @generated from field: google.devtools.cloudbuild.v1.GitFileSource git_file_source = 24;
     */
    value: GitFileSource;
    case: "gitFileSource";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Time when the trigger was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * If true, the trigger will never automatically execute a build.
   *
   * @generated from field: bool disabled = 9;
   */
  disabled: boolean;

  /**
   * Substitutions for Build resource. The keys must match the following
   * regular expression: `^_[A-Z0-9_]+$`.
   *
   * @generated from field: map<string, string> substitutions = 11;
   */
  substitutions: { [key: string]: string };

  /**
   * ignored_files and included_files are file glob matches using
   * https://golang.org/pkg/path/filepath/#Match extended with support for "**".
   *
   * If ignored_files and changed files are both empty, then they are
   * not used to determine whether or not to trigger a build.
   *
   * If ignored_files is not empty, then we ignore any files that match
   * any of the ignored_file globs. If the change has no files that are
   * outside of the ignored_files globs, then we do not trigger a build.
   *
   * @generated from field: repeated string ignored_files = 15;
   */
  ignoredFiles: string[];

  /**
   * If any of the files altered in the commit pass the ignored_files
   * filter and included_files is empty, then as far as this filter is
   * concerned, we should trigger the build.
   *
   * If any of the files altered in the commit pass the ignored_files
   * filter and included_files is not empty, then we make sure that at
   * least one of those files matches a included_files glob. If not,
   * then we do not trigger a build.
   *
   * @generated from field: repeated string included_files = 16;
   */
  includedFiles: string[];

  /**
   * Optional. A Common Expression Language string.
   *
   * @generated from field: string filter = 30;
   */
  filter: string;

  /**
   * The repo and ref of the repository from which to build. This field
   * is used only for those triggers that do not respond to SCM events.
   * Triggers that respond to such events build source at whatever commit
   * caused the event.
   * This field is currently only used by Webhook, Pub/Sub, Manual, and Cron
   * triggers.
   *
   * @generated from field: google.devtools.cloudbuild.v1.GitRepoSource source_to_build = 26;
   */
  sourceToBuild?: GitRepoSource;

  /**
   * The service account used for all user-controlled operations including
   * UpdateBuildTrigger, RunBuildTrigger, CreateBuild, and CancelBuild.
   * If no service account is set, then the standard Cloud Build service account
   * ([PROJECT_NUM]@system.gserviceaccount.com) will be used instead.
   * Format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_ID_OR_EMAIL}`
   *
   * @generated from field: string service_account = 33;
   */
  serviceAccount: string;

  /**
   * The configuration of a trigger that creates a build whenever an event from
   * Repo API is received.
   *
   * @generated from field: google.devtools.cloudbuild.v1.RepositoryEventConfig repository_event_config = 39;
   */
  repositoryEventConfig?: RepositoryEventConfig;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.BuildTrigger.
 * Use `create(BuildTriggerSchema)` to create a new message.
 */
export const BuildTriggerSchema: GenMessage<BuildTrigger> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 37);

/**
 * The configuration of a trigger that creates a build whenever an event from
 * Repo API is received.
 *
 * @generated from message google.devtools.cloudbuild.v1.RepositoryEventConfig
 */
export type RepositoryEventConfig = Message<"google.devtools.cloudbuild.v1.RepositoryEventConfig"> & {
  /**
   * The resource name of the Repo API resource.
   *
   * @generated from field: string repository = 1;
   */
  repository: string;

  /**
   * Output only. The type of the SCM vendor the repository points to.
   *
   * @generated from field: google.devtools.cloudbuild.v1.RepositoryEventConfig.RepositoryType repository_type = 2;
   */
  repositoryType: RepositoryEventConfig_RepositoryType;

  /**
   * The types of filter to trigger a build.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.RepositoryEventConfig.filter
   */
  filter: {
    /**
     * Filter to match changes in pull requests.
     *
     * @generated from field: google.devtools.cloudbuild.v1.PullRequestFilter pull_request = 3;
     */
    value: PullRequestFilter;
    case: "pullRequest";
  } | {
    /**
     * Filter to match changes in refs like branches, tags.
     *
     * @generated from field: google.devtools.cloudbuild.v1.PushFilter push = 4;
     */
    value: PushFilter;
    case: "push";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.cloudbuild.v1.RepositoryEventConfig.
 * Use `create(RepositoryEventConfigSchema)` to create a new message.
 */
export const RepositoryEventConfigSchema: GenMessage<RepositoryEventConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 38);

/**
 * All possible SCM repo types from Repo API.
 *
 * @generated from enum google.devtools.cloudbuild.v1.RepositoryEventConfig.RepositoryType
 */
export enum RepositoryEventConfig_RepositoryType {
  /**
   * If unspecified, RepositoryType defaults to GITHUB.
   *
   * @generated from enum value: REPOSITORY_TYPE_UNSPECIFIED = 0;
   */
  REPOSITORY_TYPE_UNSPECIFIED = 0,

  /**
   * The SCM repo is GITHUB.
   *
   * @generated from enum value: GITHUB = 1;
   */
  GITHUB = 1,

  /**
   * The SCM repo is GITHUB Enterprise.
   *
   * @generated from enum value: GITHUB_ENTERPRISE = 2;
   */
  GITHUB_ENTERPRISE = 2,

  /**
   * The SCM repo is GITLAB Enterprise.
   *
   * @generated from enum value: GITLAB_ENTERPRISE = 3;
   */
  GITLAB_ENTERPRISE = 3,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.RepositoryEventConfig.RepositoryType.
 */
export const RepositoryEventConfig_RepositoryTypeSchema: GenEnum<RepositoryEventConfig_RepositoryType> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 38, 0);

/**
 * GitHubEventsConfig describes the configuration of a trigger that creates a
 * build whenever a GitHub event is received.
 *
 * @generated from message google.devtools.cloudbuild.v1.GitHubEventsConfig
 */
export type GitHubEventsConfig = Message<"google.devtools.cloudbuild.v1.GitHubEventsConfig"> & {
  /**
   * The installationID that emits the GitHub event.
   *
   * @generated from field: int64 installation_id = 1 [deprecated = true];
   * @deprecated
   */
  installationId: bigint;

  /**
   * Owner of the repository. For example: The owner for
   * https://github.com/googlecloudplatform/cloud-builders is
   * "googlecloudplatform".
   *
   * @generated from field: string owner = 6;
   */
  owner: string;

  /**
   * Name of the repository. For example: The name for
   * https://github.com/googlecloudplatform/cloud-builders is "cloud-builders".
   *
   * @generated from field: string name = 7;
   */
  name: string;

  /**
   * Filter describing the types of events to trigger a build.
   * Currently supported event types: push, pull_request.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.GitHubEventsConfig.event
   */
  event: {
    /**
     * filter to match changes in pull requests.
     *
     * @generated from field: google.devtools.cloudbuild.v1.PullRequestFilter pull_request = 4;
     */
    value: PullRequestFilter;
    case: "pullRequest";
  } | {
    /**
     * filter to match changes in refs like branches, tags.
     *
     * @generated from field: google.devtools.cloudbuild.v1.PushFilter push = 5;
     */
    value: PushFilter;
    case: "push";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.cloudbuild.v1.GitHubEventsConfig.
 * Use `create(GitHubEventsConfigSchema)` to create a new message.
 */
export const GitHubEventsConfigSchema: GenMessage<GitHubEventsConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 39);

/**
 * PubsubConfig describes the configuration of a trigger that
 * creates a build whenever a Pub/Sub message is published.
 *
 * @generated from message google.devtools.cloudbuild.v1.PubsubConfig
 */
export type PubsubConfig = Message<"google.devtools.cloudbuild.v1.PubsubConfig"> & {
  /**
   * Output only. Name of the subscription. Format is
   * `projects/{project}/subscriptions/{subscription}`.
   *
   * @generated from field: string subscription = 1;
   */
  subscription: string;

  /**
   * The name of the topic from which this subscription is receiving messages.
   * Format is `projects/{project}/topics/{topic}`.
   *
   * @generated from field: string topic = 2;
   */
  topic: string;

  /**
   * Service account that will make the push request.
   *
   * @generated from field: string service_account_email = 3;
   */
  serviceAccountEmail: string;

  /**
   * Potential issues with the underlying Pub/Sub subscription configuration.
   * Only populated on get requests.
   *
   * @generated from field: google.devtools.cloudbuild.v1.PubsubConfig.State state = 4;
   */
  state: PubsubConfig_State;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.PubsubConfig.
 * Use `create(PubsubConfigSchema)` to create a new message.
 */
export const PubsubConfigSchema: GenMessage<PubsubConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 40);

/**
 * Enumerates potential issues with the underlying Pub/Sub subscription
 * configuration.
 *
 * @generated from enum google.devtools.cloudbuild.v1.PubsubConfig.State
 */
export enum PubsubConfig_State {
  /**
   * The subscription configuration has not been checked.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The Pub/Sub subscription is properly configured.
   *
   * @generated from enum value: OK = 1;
   */
  OK = 1,

  /**
   * The subscription has been deleted.
   *
   * @generated from enum value: SUBSCRIPTION_DELETED = 2;
   */
  SUBSCRIPTION_DELETED = 2,

  /**
   * The topic has been deleted.
   *
   * @generated from enum value: TOPIC_DELETED = 3;
   */
  TOPIC_DELETED = 3,

  /**
   * Some of the subscription's field are misconfigured.
   *
   * @generated from enum value: SUBSCRIPTION_MISCONFIGURED = 4;
   */
  SUBSCRIPTION_MISCONFIGURED = 4,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.PubsubConfig.State.
 */
export const PubsubConfig_StateSchema: GenEnum<PubsubConfig_State> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 40, 0);

/**
 * WebhookConfig describes the configuration of a trigger that
 * creates a build whenever a webhook is sent to a trigger's webhook URL.
 *
 * @generated from message google.devtools.cloudbuild.v1.WebhookConfig
 */
export type WebhookConfig = Message<"google.devtools.cloudbuild.v1.WebhookConfig"> & {
  /**
   * Auth method specifies how the webhook authenticates with GCP.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.WebhookConfig.auth_method
   */
  authMethod: {
    /**
     * Required. Resource name for the secret required as a URL parameter.
     *
     * @generated from field: string secret = 3;
     */
    value: string;
    case: "secret";
  } | { case: undefined; value?: undefined };

  /**
   * Potential issues with the underlying Pub/Sub subscription configuration.
   * Only populated on get requests.
   *
   * @generated from field: google.devtools.cloudbuild.v1.WebhookConfig.State state = 4;
   */
  state: WebhookConfig_State;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.WebhookConfig.
 * Use `create(WebhookConfigSchema)` to create a new message.
 */
export const WebhookConfigSchema: GenMessage<WebhookConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 41);

/**
 * Enumerates potential issues with the Secret Manager secret provided by the
 * user.
 *
 * @generated from enum google.devtools.cloudbuild.v1.WebhookConfig.State
 */
export enum WebhookConfig_State {
  /**
   * The webhook auth configuration not been checked.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The auth configuration is properly setup.
   *
   * @generated from enum value: OK = 1;
   */
  OK = 1,

  /**
   * The secret provided in auth_method has been deleted.
   *
   * @generated from enum value: SECRET_DELETED = 2;
   */
  SECRET_DELETED = 2,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.WebhookConfig.State.
 */
export const WebhookConfig_StateSchema: GenEnum<WebhookConfig_State> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 41, 0);

/**
 * PullRequestFilter contains filter properties for matching GitHub Pull
 * Requests.
 *
 * @generated from message google.devtools.cloudbuild.v1.PullRequestFilter
 */
export type PullRequestFilter = Message<"google.devtools.cloudbuild.v1.PullRequestFilter"> & {
  /**
   * Target refs to match.
   * A target ref is the git reference where the pull request will be applied.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.PullRequestFilter.git_ref
   */
  gitRef: {
    /**
     * Regex of branches to match.
     *
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     *
     * @generated from field: string branch = 2;
     */
    value: string;
    case: "branch";
  } | { case: undefined; value?: undefined };

  /**
   * Configure builds to run whether a repository owner or collaborator need to
   * comment `/gcbrun`.
   *
   * @generated from field: google.devtools.cloudbuild.v1.PullRequestFilter.CommentControl comment_control = 5;
   */
  commentControl: PullRequestFilter_CommentControl;

  /**
   * If true, branches that do NOT match the git_ref will trigger a build.
   *
   * @generated from field: bool invert_regex = 6;
   */
  invertRegex: boolean;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.PullRequestFilter.
 * Use `create(PullRequestFilterSchema)` to create a new message.
 */
export const PullRequestFilterSchema: GenMessage<PullRequestFilter> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 42);

/**
 * Controls behavior of Pull Request comments.
 *
 * @generated from enum google.devtools.cloudbuild.v1.PullRequestFilter.CommentControl
 */
export enum PullRequestFilter_CommentControl {
  /**
   * Do not require comments on Pull Requests before builds are triggered.
   *
   * @generated from enum value: COMMENTS_DISABLED = 0;
   */
  COMMENTS_DISABLED = 0,

  /**
   * Enforce that repository owners or collaborators must comment on Pull
   * Requests before builds are triggered.
   *
   * @generated from enum value: COMMENTS_ENABLED = 1;
   */
  COMMENTS_ENABLED = 1,

  /**
   * Enforce that repository owners or collaborators must comment on external
   * contributors' Pull Requests before builds are triggered.
   *
   * @generated from enum value: COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY = 2;
   */
  COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY = 2,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.PullRequestFilter.CommentControl.
 */
export const PullRequestFilter_CommentControlSchema: GenEnum<PullRequestFilter_CommentControl> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 42, 0);

/**
 * Push contains filter properties for matching GitHub git pushes.
 *
 * @generated from message google.devtools.cloudbuild.v1.PushFilter
 */
export type PushFilter = Message<"google.devtools.cloudbuild.v1.PushFilter"> & {
  /**
   * Modified refs to match.
   * A modified refs are the refs modified by a git push operation.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.PushFilter.git_ref
   */
  gitRef: {
    /**
     * Regexes matching branches to build.
     *
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     *
     * @generated from field: string branch = 2;
     */
    value: string;
    case: "branch";
  } | {
    /**
     * Regexes matching tags to build.
     *
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     *
     * @generated from field: string tag = 3;
     */
    value: string;
    case: "tag";
  } | { case: undefined; value?: undefined };

  /**
   * When true, only trigger a build if the revision regex does NOT match the
   * git_ref regex.
   *
   * @generated from field: bool invert_regex = 4;
   */
  invertRegex: boolean;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.PushFilter.
 * Use `create(PushFilterSchema)` to create a new message.
 */
export const PushFilterSchema: GenMessage<PushFilter> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 43);

/**
 * Request to create a new `BuildTrigger`.
 *
 * @generated from message google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
 */
export type CreateBuildTriggerRequest = Message<"google.devtools.cloudbuild.v1.CreateBuildTriggerRequest"> & {
  /**
   * The parent resource where this trigger will be created.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 3;
   */
  parent: string;

  /**
   * Required. ID of the project for which to configure automatic builds.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. `BuildTrigger` to create.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
   */
  trigger?: BuildTrigger;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.
 * Use `create(CreateBuildTriggerRequestSchema)` to create a new message.
 */
export const CreateBuildTriggerRequestSchema: GenMessage<CreateBuildTriggerRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 44);

/**
 * Returns the `BuildTrigger` with the specified ID.
 *
 * @generated from message google.devtools.cloudbuild.v1.GetBuildTriggerRequest
 */
export type GetBuildTriggerRequest = Message<"google.devtools.cloudbuild.v1.GetBuildTriggerRequest"> & {
  /**
   * The name of the `Trigger` to retrieve.
   * Format: `projects/{project}/locations/{location}/triggers/{trigger}`
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Required. ID of the project that owns the trigger.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Identifier (`id` or `name`) of the `BuildTrigger` to get.
   *
   * @generated from field: string trigger_id = 2;
   */
  triggerId: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.GetBuildTriggerRequest.
 * Use `create(GetBuildTriggerRequestSchema)` to create a new message.
 */
export const GetBuildTriggerRequestSchema: GenMessage<GetBuildTriggerRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 45);

/**
 * Request to list existing `BuildTriggers`.
 *
 * @generated from message google.devtools.cloudbuild.v1.ListBuildTriggersRequest
 */
export type ListBuildTriggersRequest = Message<"google.devtools.cloudbuild.v1.ListBuildTriggersRequest"> & {
  /**
   * The parent of the collection of `Triggers`.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 4;
   */
  parent: string;

  /**
   * Required. ID of the project for which to list BuildTriggers.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Number of results to return in the list.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Token to provide to skip to a particular spot in the list.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ListBuildTriggersRequest.
 * Use `create(ListBuildTriggersRequestSchema)` to create a new message.
 */
export const ListBuildTriggersRequestSchema: GenMessage<ListBuildTriggersRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 46);

/**
 * Response containing existing `BuildTriggers`.
 *
 * @generated from message google.devtools.cloudbuild.v1.ListBuildTriggersResponse
 */
export type ListBuildTriggersResponse = Message<"google.devtools.cloudbuild.v1.ListBuildTriggersResponse"> & {
  /**
   * `BuildTriggers` for the project, sorted by `create_time` descending.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
   */
  triggers: BuildTrigger[];

  /**
   * Token to receive the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ListBuildTriggersResponse.
 * Use `create(ListBuildTriggersResponseSchema)` to create a new message.
 */
export const ListBuildTriggersResponseSchema: GenMessage<ListBuildTriggersResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 47);

/**
 * Request to delete a `BuildTrigger`.
 *
 * @generated from message google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
 */
export type DeleteBuildTriggerRequest = Message<"google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest"> & {
  /**
   * The name of the `Trigger` to delete.
   * Format: `projects/{project}/locations/{location}/triggers/{trigger}`
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Required. ID of the project that owns the trigger.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. ID of the `BuildTrigger` to delete.
   *
   * @generated from field: string trigger_id = 2;
   */
  triggerId: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.
 * Use `create(DeleteBuildTriggerRequestSchema)` to create a new message.
 */
export const DeleteBuildTriggerRequestSchema: GenMessage<DeleteBuildTriggerRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 48);

/**
 * Request to update an existing `BuildTrigger`.
 *
 * @generated from message google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
 */
export type UpdateBuildTriggerRequest = Message<"google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest"> & {
  /**
   * Required. ID of the project that owns the trigger.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. ID of the `BuildTrigger` to update.
   *
   * @generated from field: string trigger_id = 2;
   */
  triggerId: string;

  /**
   * Required. `BuildTrigger` to update.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
   */
  trigger?: BuildTrigger;

  /**
   * Update mask for the resource. If this is set,
   * the server will only update the fields specified in the field mask.
   * Otherwise, a full update of the mutable resource fields will be performed.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 5;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.
 * Use `create(UpdateBuildTriggerRequestSchema)` to create a new message.
 */
export const UpdateBuildTriggerRequestSchema: GenMessage<UpdateBuildTriggerRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 49);

/**
 * Optional arguments to enable specific features of builds.
 *
 * @generated from message google.devtools.cloudbuild.v1.BuildOptions
 */
export type BuildOptions = Message<"google.devtools.cloudbuild.v1.BuildOptions"> & {
  /**
   * Requested hash for SourceProvenance.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
   */
  sourceProvenanceHash: Hash_HashType[];

  /**
   * Requested verifiability options.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
   */
  requestedVerifyOption: BuildOptions_VerifyOption;

  /**
   * Compute Engine machine type on which to run the build.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;
   */
  machineType: BuildOptions_MachineType;

  /**
   * Requested disk size for the VM that runs the build. Note that this is *NOT*
   * "disk free"; some of the space will be used by the operating system and
   * build utilities. Also note that this is the minimum disk size that will be
   * allocated for the build -- the build may run with a larger disk than
   * requested. At present, the maximum disk size is 2000GB; builds that request
   * more than the maximum are rejected with an error.
   *
   * @generated from field: int64 disk_size_gb = 6;
   */
  diskSizeGb: bigint;

  /**
   * Option to specify behavior when there is an error in the substitution
   * checks.
   *
   * NOTE: this is always set to ALLOW_LOOSE for triggered builds and cannot
   * be overridden in the build configuration file.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;
   */
  substitutionOption: BuildOptions_SubstitutionOption;

  /**
   * Option to specify whether or not to apply bash style string
   * operations to the substitutions.
   *
   * NOTE: this is always enabled for triggered builds and cannot be
   * overridden in the build configuration file.
   *
   * @generated from field: bool dynamic_substitutions = 17;
   */
  dynamicSubstitutions: boolean;

  /**
   * Option to include built-in and custom substitutions as env variables
   * for all build steps.
   *
   * @generated from field: bool automap_substitutions = 22;
   */
  automapSubstitutions: boolean;

  /**
   * Option to define build log streaming behavior to Cloud
   * Storage.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;
   */
  logStreamingOption: BuildOptions_LogStreamingOption;

  /**
   * This field deprecated; please use `pool.name` instead.
   *
   * @generated from field: string worker_pool = 7 [deprecated = true];
   * @deprecated
   */
  workerPool: string;

  /**
   * Optional. Specification for execution on a `WorkerPool`.
   *
   * See [running builds in a private
   * pool](https://cloud.google.com/build/docs/private-pools/run-builds-in-private-pool)
   * for more information.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildOptions.PoolOption pool = 19;
   */
  pool?: BuildOptions_PoolOption;

  /**
   * Option to specify the logging mode, which determines if and where build
   * logs are stored.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;
   */
  logging: BuildOptions_LoggingMode;

  /**
   * A list of global environment variable definitions that will exist for all
   * build steps in this build. If a variable is defined in both globally and in
   * a build step, the variable will use the build step value.
   *
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   *
   * @generated from field: repeated string env = 12;
   */
  env: string[];

  /**
   * A list of global environment variables, which are encrypted using a Cloud
   * Key Management Service crypto key. These values must be specified in the
   * build's `Secret`. These variables will be available to all build steps
   * in this build.
   *
   * @generated from field: repeated string secret_env = 13;
   */
  secretEnv: string[];

  /**
   * Global list of volumes to mount for ALL build steps
   *
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   *
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.Volume volumes = 14;
   */
  volumes: Volume[];

  /**
   * Optional. Option to specify how default logs buckets are setup.
   *
   * @generated from field: google.devtools.cloudbuild.v1.BuildOptions.DefaultLogsBucketBehavior default_logs_bucket_behavior = 21;
   */
  defaultLogsBucketBehavior: BuildOptions_DefaultLogsBucketBehavior;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.BuildOptions.
 * Use `create(BuildOptionsSchema)` to create a new message.
 */
export const BuildOptionsSchema: GenMessage<BuildOptions> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 50);

/**
 * Details about how a build should be executed on a `WorkerPool`.
 *
 * See [running builds in a private
 * pool](https://cloud.google.com/build/docs/private-pools/run-builds-in-private-pool)
 * for more information.
 *
 * @generated from message google.devtools.cloudbuild.v1.BuildOptions.PoolOption
 */
export type BuildOptions_PoolOption = Message<"google.devtools.cloudbuild.v1.BuildOptions.PoolOption"> & {
  /**
   * The `WorkerPool` resource to execute the build on.
   * You must have `cloudbuild.workerpools.use` on the project hosting the
   * WorkerPool.
   *
   * Format projects/{project}/locations/{location}/workerPools/{workerPoolId}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.BuildOptions.PoolOption.
 * Use `create(BuildOptions_PoolOptionSchema)` to create a new message.
 */
export const BuildOptions_PoolOptionSchema: GenMessage<BuildOptions_PoolOption> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 50, 0);

/**
 * Specifies the manner in which the build should be verified, if at all.
 *
 * If a verified build is requested, and any part of the process to generate
 * and upload provenance fails, the build will also fail.
 *
 * If the build does not request verification then that process may occur, but
 * is not guaranteed to. If it does occur and fails, the build will not fail.
 *
 * For more information, see [Viewing Build
 * Provenance](https://cloud.google.com/build/docs/securing-builds/view-build-provenance).
 *
 * @generated from enum google.devtools.cloudbuild.v1.BuildOptions.VerifyOption
 */
export enum BuildOptions_VerifyOption {
  /**
   * Not a verifiable build (the default).
   *
   * @generated from enum value: NOT_VERIFIED = 0;
   */
  NOT_VERIFIED = 0,

  /**
   * Build must be verified.
   *
   * @generated from enum value: VERIFIED = 1;
   */
  VERIFIED = 1,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.BuildOptions.VerifyOption.
 */
export const BuildOptions_VerifyOptionSchema: GenEnum<BuildOptions_VerifyOption> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 50, 0);

/**
 * Supported Compute Engine machine types.
 * For more information, see [Machine
 * types](https://cloud.google.com/compute/docs/machine-types).
 *
 * @generated from enum google.devtools.cloudbuild.v1.BuildOptions.MachineType
 */
export enum BuildOptions_MachineType {
  /**
   * Standard machine type.
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Highcpu machine with 8 CPUs.
   *
   * @generated from enum value: N1_HIGHCPU_8 = 1;
   */
  N1_HIGHCPU_8 = 1,

  /**
   * Highcpu machine with 32 CPUs.
   *
   * @generated from enum value: N1_HIGHCPU_32 = 2;
   */
  N1_HIGHCPU_32 = 2,

  /**
   * Highcpu e2 machine with 8 CPUs.
   *
   * @generated from enum value: E2_HIGHCPU_8 = 5;
   */
  E2_HIGHCPU_8 = 5,

  /**
   * Highcpu e2 machine with 32 CPUs.
   *
   * @generated from enum value: E2_HIGHCPU_32 = 6;
   */
  E2_HIGHCPU_32 = 6,

  /**
   * E2 machine with 1 CPU.
   *
   * @generated from enum value: E2_MEDIUM = 7;
   */
  E2_MEDIUM = 7,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.BuildOptions.MachineType.
 */
export const BuildOptions_MachineTypeSchema: GenEnum<BuildOptions_MachineType> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 50, 1);

/**
 * Specifies the behavior when there is an error in the substitution checks.
 *
 * @generated from enum google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption
 */
export enum BuildOptions_SubstitutionOption {
  /**
   * Fails the build if error in substitutions checks, like missing
   * a substitution in the template or in the map.
   *
   * @generated from enum value: MUST_MATCH = 0;
   */
  MUST_MATCH = 0,

  /**
   * Do not fail the build if error in substitutions checks.
   *
   * @generated from enum value: ALLOW_LOOSE = 1;
   */
  ALLOW_LOOSE = 1,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption.
 */
export const BuildOptions_SubstitutionOptionSchema: GenEnum<BuildOptions_SubstitutionOption> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 50, 2);

/**
 * Specifies the behavior when writing build logs to Cloud Storage.
 *
 * @generated from enum google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption
 */
export enum BuildOptions_LogStreamingOption {
  /**
   * Service may automatically determine build log streaming behavior.
   *
   * @generated from enum value: STREAM_DEFAULT = 0;
   */
  STREAM_DEFAULT = 0,

  /**
   * Build logs should be streamed to Cloud Storage.
   *
   * @generated from enum value: STREAM_ON = 1;
   */
  STREAM_ON = 1,

  /**
   * Build logs should not be streamed to Cloud Storage; they will be
   * written when the build is completed.
   *
   * @generated from enum value: STREAM_OFF = 2;
   */
  STREAM_OFF = 2,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption.
 */
export const BuildOptions_LogStreamingOptionSchema: GenEnum<BuildOptions_LogStreamingOption> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 50, 3);

/**
 * Specifies the logging mode.
 *
 * @generated from enum google.devtools.cloudbuild.v1.BuildOptions.LoggingMode
 */
export enum BuildOptions_LoggingMode {
  /**
   * The service determines the logging mode. The default is `LEGACY`. Do not
   * rely on the default logging behavior as it may change in the future.
   *
   * @generated from enum value: LOGGING_UNSPECIFIED = 0;
   */
  LOGGING_UNSPECIFIED = 0,

  /**
   * Build logs are stored in Cloud Logging and Cloud Storage.
   *
   * @generated from enum value: LEGACY = 1;
   */
  LEGACY = 1,

  /**
   * Build logs are stored in Cloud Storage.
   *
   * @generated from enum value: GCS_ONLY = 2;
   */
  GCS_ONLY = 2,

  /**
   * This option is the same as CLOUD_LOGGING_ONLY.
   *
   * @generated from enum value: STACKDRIVER_ONLY = 3 [deprecated = true];
   * @deprecated
   */
  STACKDRIVER_ONLY = 3,

  /**
   * Build logs are stored in Cloud Logging. Selecting this option will not
   * allow [logs
   * streaming](https://cloud.google.com/sdk/gcloud/reference/builds/log).
   *
   * @generated from enum value: CLOUD_LOGGING_ONLY = 5;
   */
  CLOUD_LOGGING_ONLY = 5,

  /**
   * Turn off all logging. No build logs will be captured.
   *
   * @generated from enum value: NONE = 4;
   */
  NONE = 4,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.BuildOptions.LoggingMode.
 */
export const BuildOptions_LoggingModeSchema: GenEnum<BuildOptions_LoggingMode> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 50, 4);

/**
 * Default Cloud Storage log bucket behavior options.
 *
 * @generated from enum google.devtools.cloudbuild.v1.BuildOptions.DefaultLogsBucketBehavior
 */
export enum BuildOptions_DefaultLogsBucketBehavior {
  /**
   * Unspecified.
   *
   * @generated from enum value: DEFAULT_LOGS_BUCKET_BEHAVIOR_UNSPECIFIED = 0;
   */
  DEFAULT_LOGS_BUCKET_BEHAVIOR_UNSPECIFIED = 0,

  /**
   * Bucket is located in user-owned project in the same region as the
   * build. The builder service account must have access to create and write
   * to Cloud Storage buckets in the build project.
   *
   * @generated from enum value: REGIONAL_USER_OWNED_BUCKET = 1;
   */
  REGIONAL_USER_OWNED_BUCKET = 1,

  /**
   * Bucket is located in a Google-owned project and is not regionalized.
   *
   * @generated from enum value: LEGACY_BUCKET = 2;
   */
  LEGACY_BUCKET = 2,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.BuildOptions.DefaultLogsBucketBehavior.
 */
export const BuildOptions_DefaultLogsBucketBehaviorSchema: GenEnum<BuildOptions_DefaultLogsBucketBehavior> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 50, 5);

/**
 * ReceiveTriggerWebhookRequest [Experimental] is the request object accepted by
 * the ReceiveTriggerWebhook method.
 *
 * @generated from message google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
 */
export type ReceiveTriggerWebhookRequest = Message<"google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest"> & {
  /**
   * The name of the `ReceiveTriggerWebhook` to retrieve.
   * Format: `projects/{project}/locations/{location}/triggers/{trigger}`
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * HTTP request body.
   *
   * @generated from field: google.api.HttpBody body = 1;
   */
  body?: HttpBody;

  /**
   * Project in which the specified trigger lives
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * Name of the trigger to run the payload against
   *
   * @generated from field: string trigger = 3;
   */
  trigger: string;

  /**
   * Secret token used for authorization if an OAuth token isn't provided.
   *
   * @generated from field: string secret = 4;
   */
  secret: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest.
 * Use `create(ReceiveTriggerWebhookRequestSchema)` to create a new message.
 */
export const ReceiveTriggerWebhookRequestSchema: GenMessage<ReceiveTriggerWebhookRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 51);

/**
 * ReceiveTriggerWebhookResponse [Experimental] is the response object for the
 * ReceiveTriggerWebhook method.
 *
 * @generated from message google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
 */
export type ReceiveTriggerWebhookResponse = Message<"google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse"> & {
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse.
 * Use `create(ReceiveTriggerWebhookResponseSchema)` to create a new message.
 */
export const ReceiveTriggerWebhookResponseSchema: GenMessage<ReceiveTriggerWebhookResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 52);

/**
 * @generated from message google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
 */
export type GitHubEnterpriseConfig = Message<"google.devtools.cloudbuild.v1.GitHubEnterpriseConfig"> & {
  /**
   * Optional. The full resource name for the GitHubEnterpriseConfig
   * For example:
   * "projects/{$project_id}/locations/{$location_id}/githubEnterpriseConfigs/{$config_id}"
   *
   * @generated from field: string name = 7;
   */
  name: string;

  /**
   * The URL of the github enterprise host the configuration is for.
   *
   * @generated from field: string host_url = 3;
   */
  hostUrl: string;

  /**
   * Required. The GitHub app id of the Cloud Build app on the GitHub Enterprise
   * server.
   *
   * @generated from field: int64 app_id = 4;
   */
  appId: bigint;

  /**
   * Output only. Time when the installation was associated with the project.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * The key that should be attached to webhook calls to the ReceiveWebhook
   * endpoint.
   *
   * @generated from field: string webhook_key = 8;
   */
  webhookKey: string;

  /**
   * Optional. The network to be used when reaching out to the GitHub
   * Enterprise server. The VPC network must be enabled for private
   * service connection. This should be set if the GitHub Enterprise server is
   * hosted on-premises and not reachable by public internet.
   * If this field is left empty, no network peering will occur and calls to
   * the GitHub Enterprise server will be made over the public internet.
   * Must be in the format
   * `projects/{project}/global/networks/{network}`, where {project}
   * is a project number or id and {network} is the name of a
   * VPC network in the project.
   *
   * @generated from field: string peered_network = 9;
   */
  peeredNetwork: string;

  /**
   * Names of secrets in Secret Manager.
   *
   * @generated from field: google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets secrets = 10;
   */
  secrets?: GitHubEnterpriseSecrets;

  /**
   * Name to display for this config.
   *
   * @generated from field: string display_name = 11;
   */
  displayName: string;

  /**
   * Optional. SSL certificate to use for requests to GitHub Enterprise.
   *
   * @generated from field: string ssl_ca = 12;
   */
  sslCa: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.GitHubEnterpriseConfig.
 * Use `create(GitHubEnterpriseConfigSchema)` to create a new message.
 */
export const GitHubEnterpriseConfigSchema: GenMessage<GitHubEnterpriseConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 53);

/**
 * GitHubEnterpriseSecrets represents the names of all necessary secrets in
 * Secret Manager for a GitHub Enterprise server.
 * Format is: projects/<project number>/secrets/<secret name>.
 *
 * @generated from message google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
 */
export type GitHubEnterpriseSecrets = Message<"google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets"> & {
  /**
   * The resource name for the private key secret version.
   *
   * @generated from field: string private_key_version_name = 5;
   */
  privateKeyVersionName: string;

  /**
   * The resource name for the webhook secret secret version in Secret Manager.
   *
   * @generated from field: string webhook_secret_version_name = 6;
   */
  webhookSecretVersionName: string;

  /**
   * The resource name for the OAuth secret secret version in Secret Manager.
   *
   * @generated from field: string oauth_secret_version_name = 7;
   */
  oauthSecretVersionName: string;

  /**
   * The resource name for the OAuth client ID secret version in Secret Manager.
   *
   * @generated from field: string oauth_client_id_version_name = 8;
   */
  oauthClientIdVersionName: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets.
 * Use `create(GitHubEnterpriseSecretsSchema)` to create a new message.
 */
export const GitHubEnterpriseSecretsSchema: GenMessage<GitHubEnterpriseSecrets> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 54);

/**
 * Configuration for a `WorkerPool`.
 *
 * Cloud Build owns and maintains a pool of workers for general use and have no
 * access to a project's private network. By default, builds submitted to
 * Cloud Build will use a worker from this pool.
 *
 * If your build needs access to resources on a private network,
 * create and use a `WorkerPool` to run your builds. Private `WorkerPool`s give
 * your builds access to any single VPC network that you
 * administer, including any on-prem resources connected to that VPC
 * network. For an overview of private pools, see
 * [Private pools
 * overview](https://cloud.google.com/build/docs/private-pools/private-pools-overview).
 *
 * @generated from message google.devtools.cloudbuild.v1.WorkerPool
 */
export type WorkerPool = Message<"google.devtools.cloudbuild.v1.WorkerPool"> & {
  /**
   * Output only. The resource name of the `WorkerPool`, with format
   * `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
   * The value of `{worker_pool}` is provided by `worker_pool_id` in
   * `CreateWorkerPool` request and the value of `{location}` is determined by
   * the endpoint accessed.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A user-specified, human-readable name for the `WorkerPool`. If provided,
   * this value must be 1-63 characters.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Output only. A unique identifier for the `WorkerPool`.
   *
   * @generated from field: string uid = 3;
   */
  uid: string;

  /**
   * User specified annotations. See https://google.aip.dev/128#annotations
   * for more details such as format and size limitations.
   *
   * @generated from field: map<string, string> annotations = 4;
   */
  annotations: { [key: string]: string };

  /**
   * Output only. Time at which the request to create the `WorkerPool` was
   * received.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time at which the request to update the `WorkerPool` was
   * received.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;

  /**
   * Output only. Time at which the request to delete the `WorkerPool` was
   * received.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 7;
   */
  deleteTime?: Timestamp;

  /**
   * Output only. `WorkerPool` state.
   *
   * @generated from field: google.devtools.cloudbuild.v1.WorkerPool.State state = 8;
   */
  state: WorkerPool_State;

  /**
   * Configuration for the `WorkerPool`.
   *
   * @generated from oneof google.devtools.cloudbuild.v1.WorkerPool.config
   */
  config: {
    /**
     * Legacy Private Pool configuration.
     *
     * @generated from field: google.devtools.cloudbuild.v1.PrivatePoolV1Config private_pool_v1_config = 12;
     */
    value: PrivatePoolV1Config;
    case: "privatePoolV1Config";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Checksum computed by the server. May be sent on update and
   * delete requests to ensure that the client has an up-to-date value before
   * proceeding.
   *
   * @generated from field: string etag = 11;
   */
  etag: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.WorkerPool.
 * Use `create(WorkerPoolSchema)` to create a new message.
 */
export const WorkerPoolSchema: GenMessage<WorkerPool> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 55);

/**
 * State of the `WorkerPool`.
 *
 * @generated from enum google.devtools.cloudbuild.v1.WorkerPool.State
 */
export enum WorkerPool_State {
  /**
   * State of the `WorkerPool` is unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * `WorkerPool` is being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * `WorkerPool` is running.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * `WorkerPool` is being deleted: cancelling builds and draining workers.
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,

  /**
   * `WorkerPool` is deleted.
   *
   * @generated from enum value: DELETED = 4;
   */
  DELETED = 4,

  /**
   * `WorkerPool` is being updated; new builds cannot be run.
   *
   * @generated from enum value: UPDATING = 5;
   */
  UPDATING = 5,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.WorkerPool.State.
 */
export const WorkerPool_StateSchema: GenEnum<WorkerPool_State> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 55, 0);

/**
 * Configuration for a V1 `PrivatePool`.
 *
 * @generated from message google.devtools.cloudbuild.v1.PrivatePoolV1Config
 */
export type PrivatePoolV1Config = Message<"google.devtools.cloudbuild.v1.PrivatePoolV1Config"> & {
  /**
   * Machine configuration for the workers in the pool.
   *
   * @generated from field: google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig worker_config = 1;
   */
  workerConfig?: PrivatePoolV1Config_WorkerConfig;

  /**
   * Network configuration for the pool.
   *
   * @generated from field: google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig network_config = 2;
   */
  networkConfig?: PrivatePoolV1Config_NetworkConfig;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.PrivatePoolV1Config.
 * Use `create(PrivatePoolV1ConfigSchema)` to create a new message.
 */
export const PrivatePoolV1ConfigSchema: GenMessage<PrivatePoolV1Config> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 56);

/**
 * Defines the configuration to be used for creating workers in
 * the pool.
 *
 * @generated from message google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
 */
export type PrivatePoolV1Config_WorkerConfig = Message<"google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig"> & {
  /**
   * Machine type of a worker, such as `e2-medium`.
   * See [Worker pool config
   * file](https://cloud.google.com/build/docs/private-pools/worker-pool-config-file-schema).
   * If left blank, Cloud Build will use a sensible default.
   *
   * @generated from field: string machine_type = 1;
   */
  machineType: string;

  /**
   * Size of the disk attached to the worker, in GB.
   * See [Worker pool config
   * file](https://cloud.google.com/build/docs/private-pools/worker-pool-config-file-schema).
   * Specify a value of up to 2000. If `0` is specified, Cloud Build will use
   * a standard disk size.
   *
   * @generated from field: int64 disk_size_gb = 2;
   */
  diskSizeGb: bigint;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig.
 * Use `create(PrivatePoolV1Config_WorkerConfigSchema)` to create a new message.
 */
export const PrivatePoolV1Config_WorkerConfigSchema: GenMessage<PrivatePoolV1Config_WorkerConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 56, 0);

/**
 * Defines the network configuration for the pool.
 *
 * @generated from message google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig
 */
export type PrivatePoolV1Config_NetworkConfig = Message<"google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig"> & {
  /**
   * Required. Immutable. The network definition that the workers are peered
   * to. If this section is left empty, the workers will be peered to
   * `WorkerPool.project_id` on the service producer network. Must be in the
   * format `projects/{project}/global/networks/{network}`, where `{project}`
   * is a project number, such as `12345`, and `{network}` is the name of a
   * VPC network in the project. See
   * [Understanding network configuration
   * options](https://cloud.google.com/build/docs/private-pools/set-up-private-pool-environment)
   *
   * @generated from field: string peered_network = 1;
   */
  peeredNetwork: string;

  /**
   * Option to configure network egress for the workers.
   *
   * @generated from field: google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.EgressOption egress_option = 2;
   */
  egressOption: PrivatePoolV1Config_NetworkConfig_EgressOption;

  /**
   * Immutable. Subnet IP range within the peered network. This is specified
   * in CIDR notation with a slash and the subnet prefix size. You can
   * optionally specify an IP address before the subnet prefix value. e.g.
   * `192.168.0.0/29` would specify an IP range starting at 192.168.0.0 with a
   * prefix size of 29 bits.
   * `/16` would specify a prefix size of 16 bits, with an automatically
   * determined IP within the peered VPC.
   * If unspecified, a value of `/24` will be used.
   *
   * @generated from field: string peered_network_ip_range = 3;
   */
  peeredNetworkIpRange: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.
 * Use `create(PrivatePoolV1Config_NetworkConfigSchema)` to create a new message.
 */
export const PrivatePoolV1Config_NetworkConfigSchema: GenMessage<PrivatePoolV1Config_NetworkConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 56, 1);

/**
 * Defines the egress option for the pool.
 *
 * @generated from enum google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.EgressOption
 */
export enum PrivatePoolV1Config_NetworkConfig_EgressOption {
  /**
   * If set, defaults to PUBLIC_EGRESS.
   *
   * @generated from enum value: EGRESS_OPTION_UNSPECIFIED = 0;
   */
  EGRESS_OPTION_UNSPECIFIED = 0,

  /**
   * If set, workers are created without any public address, which prevents
   * network egress to public IPs unless a network proxy is configured.
   *
   * @generated from enum value: NO_PUBLIC_EGRESS = 1;
   */
  NO_PUBLIC_EGRESS = 1,

  /**
   * If set, workers are created with a public address which allows for
   * public internet egress.
   *
   * @generated from enum value: PUBLIC_EGRESS = 2;
   */
  PUBLIC_EGRESS = 2,
}

/**
 * Describes the enum google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.EgressOption.
 */
export const PrivatePoolV1Config_NetworkConfig_EgressOptionSchema: GenEnum<PrivatePoolV1Config_NetworkConfig_EgressOption> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 56, 1, 0);

/**
 * Request to create a new `WorkerPool`.
 *
 * @generated from message google.devtools.cloudbuild.v1.CreateWorkerPoolRequest
 */
export type CreateWorkerPoolRequest = Message<"google.devtools.cloudbuild.v1.CreateWorkerPoolRequest"> & {
  /**
   * Required. The parent resource where this worker pool will be created.
   * Format: `projects/{project}/locations/{location}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. `WorkerPool` resource to create.
   *
   * @generated from field: google.devtools.cloudbuild.v1.WorkerPool worker_pool = 2;
   */
  workerPool?: WorkerPool;

  /**
   * Required. Immutable. The ID to use for the `WorkerPool`, which will become
   * the final component of the resource name.
   *
   * This value should be 1-63 characters, and valid characters
   * are /[a-z][0-9]-/.
   *
   * @generated from field: string worker_pool_id = 3;
   */
  workerPoolId: string;

  /**
   * If set, validate the request and preview the response, but do not actually
   * post it.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.CreateWorkerPoolRequest.
 * Use `create(CreateWorkerPoolRequestSchema)` to create a new message.
 */
export const CreateWorkerPoolRequestSchema: GenMessage<CreateWorkerPoolRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 57);

/**
 * Request to get a `WorkerPool` with the specified name.
 *
 * @generated from message google.devtools.cloudbuild.v1.GetWorkerPoolRequest
 */
export type GetWorkerPoolRequest = Message<"google.devtools.cloudbuild.v1.GetWorkerPoolRequest"> & {
  /**
   * Required. The name of the `WorkerPool` to retrieve.
   * Format: `projects/{project}/locations/{location}/workerPools/{workerPool}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.GetWorkerPoolRequest.
 * Use `create(GetWorkerPoolRequestSchema)` to create a new message.
 */
export const GetWorkerPoolRequestSchema: GenMessage<GetWorkerPoolRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 58);

/**
 * Request to delete a `WorkerPool`.
 *
 * @generated from message google.devtools.cloudbuild.v1.DeleteWorkerPoolRequest
 */
export type DeleteWorkerPoolRequest = Message<"google.devtools.cloudbuild.v1.DeleteWorkerPoolRequest"> & {
  /**
   * Required. The name of the `WorkerPool` to delete.
   * Format:
   * `projects/{project}/locations/{location}/workerPools/{workerPool}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. If provided, it must match the server's etag on the workerpool
   * for the request to be processed.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;

  /**
   * If set to true, and the `WorkerPool` is not found, the request will succeed
   * but no action will be taken on the server.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;

  /**
   * If set, validate the request and preview the response, but do not actually
   * post it.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.DeleteWorkerPoolRequest.
 * Use `create(DeleteWorkerPoolRequestSchema)` to create a new message.
 */
export const DeleteWorkerPoolRequestSchema: GenMessage<DeleteWorkerPoolRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 59);

/**
 * Request to update a `WorkerPool`.
 *
 * @generated from message google.devtools.cloudbuild.v1.UpdateWorkerPoolRequest
 */
export type UpdateWorkerPoolRequest = Message<"google.devtools.cloudbuild.v1.UpdateWorkerPoolRequest"> & {
  /**
   * Required. The `WorkerPool` to update.
   *
   * The `name` field is used to identify the `WorkerPool` to update.
   * Format: `projects/{project}/locations/{location}/workerPools/{workerPool}`.
   *
   * @generated from field: google.devtools.cloudbuild.v1.WorkerPool worker_pool = 1;
   */
  workerPool?: WorkerPool;

  /**
   * A mask specifying which fields in `worker_pool` to update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * If set, validate the request and preview the response, but do not actually
   * post it.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.UpdateWorkerPoolRequest.
 * Use `create(UpdateWorkerPoolRequestSchema)` to create a new message.
 */
export const UpdateWorkerPoolRequestSchema: GenMessage<UpdateWorkerPoolRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 60);

/**
 * Request to list `WorkerPool`s.
 *
 * @generated from message google.devtools.cloudbuild.v1.ListWorkerPoolsRequest
 */
export type ListWorkerPoolsRequest = Message<"google.devtools.cloudbuild.v1.ListWorkerPoolsRequest"> & {
  /**
   * Required. The parent of the collection of `WorkerPools`.
   * Format: `projects/{project}/locations/{location}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of `WorkerPool`s to return. The service may return
   * fewer than this value. If omitted, the server will use a sensible default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListWorkerPools` call. Provide this
   * to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ListWorkerPoolsRequest.
 * Use `create(ListWorkerPoolsRequestSchema)` to create a new message.
 */
export const ListWorkerPoolsRequestSchema: GenMessage<ListWorkerPoolsRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 61);

/**
 * Response containing existing `WorkerPools`.
 *
 * @generated from message google.devtools.cloudbuild.v1.ListWorkerPoolsResponse
 */
export type ListWorkerPoolsResponse = Message<"google.devtools.cloudbuild.v1.ListWorkerPoolsResponse"> & {
  /**
   * `WorkerPools` for the specified project.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v1.WorkerPool worker_pools = 1;
   */
  workerPools: WorkerPool[];

  /**
   * Continuation token used to page through large result sets. Provide this
   * value in a subsequent ListWorkerPoolsRequest to return the next page of
   * results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.ListWorkerPoolsResponse.
 * Use `create(ListWorkerPoolsResponseSchema)` to create a new message.
 */
export const ListWorkerPoolsResponseSchema: GenMessage<ListWorkerPoolsResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 62);

/**
 * Metadata for the `CreateWorkerPool` operation.
 *
 * @generated from message google.devtools.cloudbuild.v1.CreateWorkerPoolOperationMetadata
 */
export type CreateWorkerPoolOperationMetadata = Message<"google.devtools.cloudbuild.v1.CreateWorkerPoolOperationMetadata"> & {
  /**
   * The resource name of the `WorkerPool` to create.
   * Format:
   * `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
   *
   * @generated from field: string worker_pool = 1;
   */
  workerPool: string;

  /**
   * Time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Time the operation was completed.
   *
   * @generated from field: google.protobuf.Timestamp complete_time = 3;
   */
  completeTime?: Timestamp;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.CreateWorkerPoolOperationMetadata.
 * Use `create(CreateWorkerPoolOperationMetadataSchema)` to create a new message.
 */
export const CreateWorkerPoolOperationMetadataSchema: GenMessage<CreateWorkerPoolOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 63);

/**
 * Metadata for the `UpdateWorkerPool` operation.
 *
 * @generated from message google.devtools.cloudbuild.v1.UpdateWorkerPoolOperationMetadata
 */
export type UpdateWorkerPoolOperationMetadata = Message<"google.devtools.cloudbuild.v1.UpdateWorkerPoolOperationMetadata"> & {
  /**
   * The resource name of the `WorkerPool` being updated.
   * Format:
   * `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
   *
   * @generated from field: string worker_pool = 1;
   */
  workerPool: string;

  /**
   * Time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Time the operation was completed.
   *
   * @generated from field: google.protobuf.Timestamp complete_time = 3;
   */
  completeTime?: Timestamp;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.UpdateWorkerPoolOperationMetadata.
 * Use `create(UpdateWorkerPoolOperationMetadataSchema)` to create a new message.
 */
export const UpdateWorkerPoolOperationMetadataSchema: GenMessage<UpdateWorkerPoolOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 64);

/**
 * Metadata for the `DeleteWorkerPool` operation.
 *
 * @generated from message google.devtools.cloudbuild.v1.DeleteWorkerPoolOperationMetadata
 */
export type DeleteWorkerPoolOperationMetadata = Message<"google.devtools.cloudbuild.v1.DeleteWorkerPoolOperationMetadata"> & {
  /**
   * The resource name of the `WorkerPool` being deleted.
   * Format:
   * `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
   *
   * @generated from field: string worker_pool = 1;
   */
  workerPool: string;

  /**
   * Time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Time the operation was completed.
   *
   * @generated from field: google.protobuf.Timestamp complete_time = 3;
   */
  completeTime?: Timestamp;
};

/**
 * Describes the message google.devtools.cloudbuild.v1.DeleteWorkerPoolOperationMetadata.
 * Use `create(DeleteWorkerPoolOperationMetadataSchema)` to create a new message.
 */
export const DeleteWorkerPoolOperationMetadataSchema: GenMessage<DeleteWorkerPoolOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 65);

/**
 * Creates and manages builds on Google Cloud Platform.
 *
 * The main concept used by this API is a `Build`, which describes the location
 * of the source to build, how to build the source, and where to store the
 * built artifacts, if any.
 *
 * A user can list previously-requested builds or get builds by their ID to
 * determine the status of the build.
 *
 * @generated from service google.devtools.cloudbuild.v1.CloudBuild
 */
export const CloudBuild: GenService<{
  /**
   * Starts a build with the specified configuration.
   *
   * This method returns a long-running `Operation`, which includes the build
   * ID. Pass the build ID to `GetBuild` to determine the build status (such as
   * `SUCCESS` or `FAILURE`).
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.CreateBuild
   */
  createBuild: {
    methodKind: "unary";
    input: typeof CreateBuildRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Returns information about a previously requested build.
   *
   * The `Build` that is returned includes its status (such as `SUCCESS`,
   * `FAILURE`, or `WORKING`), and timing information.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.GetBuild
   */
  getBuild: {
    methodKind: "unary";
    input: typeof GetBuildRequestSchema;
    output: typeof BuildSchema;
  },
  /**
   * Lists previously requested builds.
   *
   * Previously requested builds may still be in-progress, or may have finished
   * successfully or unsuccessfully.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.ListBuilds
   */
  listBuilds: {
    methodKind: "unary";
    input: typeof ListBuildsRequestSchema;
    output: typeof ListBuildsResponseSchema;
  },
  /**
   * Cancels a build in progress.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.CancelBuild
   */
  cancelBuild: {
    methodKind: "unary";
    input: typeof CancelBuildRequestSchema;
    output: typeof BuildSchema;
  },
  /**
   * Creates a new build based on the specified build.
   *
   * This method creates a new build using the original build request, which may
   * or may not result in an identical build.
   *
   * For triggered builds:
   *
   * * Triggered builds resolve to a precise revision; therefore a retry of a
   * triggered build will result in a build that uses the same revision.
   *
   * For non-triggered builds that specify `RepoSource`:
   *
   * * If the original build built from the tip of a branch, the retried build
   * will build from the tip of that branch, which may not be the same revision
   * as the original build.
   * * If the original build specified a commit sha or revision ID, the retried
   * build will use the identical source.
   *
   * For builds that specify `StorageSource`:
   *
   * * If the original build pulled source from Cloud Storage without
   * specifying the generation of the object, the new build will use the current
   * object, which may be different from the original build source.
   * * If the original build pulled source from Cloud Storage and specified the
   * generation of the object, the new build will attempt to use the same
   * object, which may or may not be available depending on the bucket's
   * lifecycle management settings.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.RetryBuild
   */
  retryBuild: {
    methodKind: "unary";
    input: typeof RetryBuildRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Approves or rejects a pending build.
   *
   * If approved, the returned LRO will be analogous to the LRO returned from
   * a CreateBuild call.
   *
   * If rejected, the returned LRO will be immediately done.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.ApproveBuild
   */
  approveBuild: {
    methodKind: "unary";
    input: typeof ApproveBuildRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a new `BuildTrigger`.
   *
   * This API is experimental.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.CreateBuildTrigger
   */
  createBuildTrigger: {
    methodKind: "unary";
    input: typeof CreateBuildTriggerRequestSchema;
    output: typeof BuildTriggerSchema;
  },
  /**
   * Returns information about a `BuildTrigger`.
   *
   * This API is experimental.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.GetBuildTrigger
   */
  getBuildTrigger: {
    methodKind: "unary";
    input: typeof GetBuildTriggerRequestSchema;
    output: typeof BuildTriggerSchema;
  },
  /**
   * Lists existing `BuildTrigger`s.
   *
   * This API is experimental.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.ListBuildTriggers
   */
  listBuildTriggers: {
    methodKind: "unary";
    input: typeof ListBuildTriggersRequestSchema;
    output: typeof ListBuildTriggersResponseSchema;
  },
  /**
   * Deletes a `BuildTrigger` by its project ID and trigger ID.
   *
   * This API is experimental.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.DeleteBuildTrigger
   */
  deleteBuildTrigger: {
    methodKind: "unary";
    input: typeof DeleteBuildTriggerRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Updates a `BuildTrigger` by its project ID and trigger ID.
   *
   * This API is experimental.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.UpdateBuildTrigger
   */
  updateBuildTrigger: {
    methodKind: "unary";
    input: typeof UpdateBuildTriggerRequestSchema;
    output: typeof BuildTriggerSchema;
  },
  /**
   * Runs a `BuildTrigger` at a particular source revision.
   *
   * To run a regional or global trigger, use the POST request
   * that includes the location endpoint in the path (ex.
   * v1/projects/{projectId}/locations/{region}/triggers/{triggerId}:run). The
   * POST request that does not include the location endpoint in the path can
   * only be used when running global triggers.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.RunBuildTrigger
   */
  runBuildTrigger: {
    methodKind: "unary";
    input: typeof RunBuildTriggerRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * ReceiveTriggerWebhook [Experimental] is called when the API receives a
   * webhook request targeted at a specific trigger.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.ReceiveTriggerWebhook
   */
  receiveTriggerWebhook: {
    methodKind: "unary";
    input: typeof ReceiveTriggerWebhookRequestSchema;
    output: typeof ReceiveTriggerWebhookResponseSchema;
  },
  /**
   * Creates a `WorkerPool`.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.CreateWorkerPool
   */
  createWorkerPool: {
    methodKind: "unary";
    input: typeof CreateWorkerPoolRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Returns details of a `WorkerPool`.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.GetWorkerPool
   */
  getWorkerPool: {
    methodKind: "unary";
    input: typeof GetWorkerPoolRequestSchema;
    output: typeof WorkerPoolSchema;
  },
  /**
   * Deletes a `WorkerPool`.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.DeleteWorkerPool
   */
  deleteWorkerPool: {
    methodKind: "unary";
    input: typeof DeleteWorkerPoolRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a `WorkerPool`.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.UpdateWorkerPool
   */
  updateWorkerPool: {
    methodKind: "unary";
    input: typeof UpdateWorkerPoolRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists `WorkerPool`s.
   *
   * @generated from rpc google.devtools.cloudbuild.v1.CloudBuild.ListWorkerPools
   */
  listWorkerPools: {
    methodKind: "unary";
    input: typeof ListWorkerPoolsRequestSchema;
    output: typeof ListWorkerPoolsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_devtools_cloudbuild_v1_cloudbuild, 0);

