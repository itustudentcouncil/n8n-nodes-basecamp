// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/cloudbuild/v2/repositories.proto (package google.devtools.cloudbuild.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { HttpBody } from "../../../api/httpbody_pb";
import { file_google_api_httpbody } from "../../../api/httpbody_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import { file_google_devtools_cloudbuild_v2_cloudbuild } from "./cloudbuild_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/cloudbuild/v2/repositories.proto.
 */
export const file_google_devtools_cloudbuild_v2_repositories: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_httpbody, file_google_api_resource, file_google_devtools_cloudbuild_v2_cloudbuild, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * A connection to a SCM like GitHub, GitHub Enterprise, Bitbucket Data Center,
 * Bitbucket Cloud or GitLab.
 *
 * @generated from message google.devtools.cloudbuild.v2.Connection
 */
export type Connection = Message<"google.devtools.cloudbuild.v2.Connection"> & {
  /**
   * Immutable. The resource name of the connection, in the format
   * `projects/{project}/locations/{location}/connections/{connection_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Server assigned timestamp for when the connection was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. Server assigned timestamp for when the connection was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * Configuration for the connection depending on the type of provider.
   *
   * @generated from oneof google.devtools.cloudbuild.v2.Connection.connection_config
   */
  connectionConfig: {
    /**
     * Configuration for connections to github.com.
     *
     * @generated from field: google.devtools.cloudbuild.v2.GitHubConfig github_config = 5;
     */
    value: GitHubConfig;
    case: "githubConfig";
  } | {
    /**
     * Configuration for connections to an instance of GitHub Enterprise.
     *
     * @generated from field: google.devtools.cloudbuild.v2.GitHubEnterpriseConfig github_enterprise_config = 6;
     */
    value: GitHubEnterpriseConfig;
    case: "githubEnterpriseConfig";
  } | {
    /**
     * Configuration for connections to gitlab.com or an instance of GitLab
     * Enterprise.
     *
     * @generated from field: google.devtools.cloudbuild.v2.GitLabConfig gitlab_config = 7;
     */
    value: GitLabConfig;
    case: "gitlabConfig";
  } | {
    /**
     * Configuration for connections to Bitbucket Data Center.
     *
     * @generated from field: google.devtools.cloudbuild.v2.BitbucketDataCenterConfig bitbucket_data_center_config = 8;
     */
    value: BitbucketDataCenterConfig;
    case: "bitbucketDataCenterConfig";
  } | {
    /**
     * Configuration for connections to Bitbucket Cloud.
     *
     * @generated from field: google.devtools.cloudbuild.v2.BitbucketCloudConfig bitbucket_cloud_config = 9;
     */
    value: BitbucketCloudConfig;
    case: "bitbucketCloudConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Installation state of the Connection.
   *
   * @generated from field: google.devtools.cloudbuild.v2.InstallationState installation_state = 12;
   */
  installationState?: InstallationState;

  /**
   * If disabled is set to true, functionality is disabled for this connection.
   * Repository based API methods and webhooks processing for repositories in
   * this connection will be disabled.
   *
   * @generated from field: bool disabled = 13;
   */
  disabled: boolean;

  /**
   * Output only. Set to true when the connection is being set up or updated in
   * the background.
   *
   * @generated from field: bool reconciling = 14;
   */
  reconciling: boolean;

  /**
   * Allows clients to store small amounts of arbitrary data.
   *
   * @generated from field: map<string, string> annotations = 15;
   */
  annotations: { [key: string]: string };

  /**
   * This checksum is computed by the server based on the value of other
   * fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 16;
   */
  etag: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.Connection.
 * Use `create(ConnectionSchema)` to create a new message.
 */
export const ConnectionSchema: GenMessage<Connection> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 0);

/**
 * Describes stage and necessary actions to be taken by the
 * user to complete the installation. Used for GitHub and GitHub Enterprise
 * based connections.
 *
 * @generated from message google.devtools.cloudbuild.v2.InstallationState
 */
export type InstallationState = Message<"google.devtools.cloudbuild.v2.InstallationState"> & {
  /**
   * Output only. Current step of the installation process.
   *
   * @generated from field: google.devtools.cloudbuild.v2.InstallationState.Stage stage = 1;
   */
  stage: InstallationState_Stage;

  /**
   * Output only. Message of what the user should do next to continue the
   * installation. Empty string if the installation is already complete.
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Output only. Link to follow for next action. Empty string if the
   * installation is already complete.
   *
   * @generated from field: string action_uri = 3;
   */
  actionUri: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.InstallationState.
 * Use `create(InstallationStateSchema)` to create a new message.
 */
export const InstallationStateSchema: GenMessage<InstallationState> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 1);

/**
 * Stage of the installation process.
 *
 * @generated from enum google.devtools.cloudbuild.v2.InstallationState.Stage
 */
export enum InstallationState_Stage {
  /**
   * No stage specified.
   *
   * @generated from enum value: STAGE_UNSPECIFIED = 0;
   */
  STAGE_UNSPECIFIED = 0,

  /**
   * Only for GitHub Enterprise. An App creation has been requested.
   * The user needs to confirm the creation in their GitHub enterprise host.
   *
   * @generated from enum value: PENDING_CREATE_APP = 1;
   */
  PENDING_CREATE_APP = 1,

  /**
   * User needs to authorize the GitHub (or Enterprise) App via OAuth.
   *
   * @generated from enum value: PENDING_USER_OAUTH = 2;
   */
  PENDING_USER_OAUTH = 2,

  /**
   * User needs to follow the link to install the GitHub (or Enterprise) App.
   *
   * @generated from enum value: PENDING_INSTALL_APP = 3;
   */
  PENDING_INSTALL_APP = 3,

  /**
   * Installation process has been completed.
   *
   * @generated from enum value: COMPLETE = 10;
   */
  COMPLETE = 10,
}

/**
 * Describes the enum google.devtools.cloudbuild.v2.InstallationState.Stage.
 */
export const InstallationState_StageSchema: GenEnum<InstallationState_Stage> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v2_repositories, 1, 0);

/**
 * Request message for FetchLinkableRepositories.
 *
 * @generated from message google.devtools.cloudbuild.v2.FetchLinkableRepositoriesRequest
 */
export type FetchLinkableRepositoriesRequest = Message<"google.devtools.cloudbuild.v2.FetchLinkableRepositoriesRequest"> & {
  /**
   * Required. The name of the Connection.
   * Format: `projects/*\/locations/*\/connections/*`.
   *
   * @generated from field: string connection = 1;
   */
  connection: string;

  /**
   * Number of results to return in the list. Default to 20.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Page start.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.FetchLinkableRepositoriesRequest.
 * Use `create(FetchLinkableRepositoriesRequestSchema)` to create a new message.
 */
export const FetchLinkableRepositoriesRequestSchema: GenMessage<FetchLinkableRepositoriesRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 2);

/**
 * Response message for FetchLinkableRepositories.
 *
 * @generated from message google.devtools.cloudbuild.v2.FetchLinkableRepositoriesResponse
 */
export type FetchLinkableRepositoriesResponse = Message<"google.devtools.cloudbuild.v2.FetchLinkableRepositoriesResponse"> & {
  /**
   * repositories ready to be created.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v2.Repository repositories = 1;
   */
  repositories: Repository[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.FetchLinkableRepositoriesResponse.
 * Use `create(FetchLinkableRepositoriesResponseSchema)` to create a new message.
 */
export const FetchLinkableRepositoriesResponseSchema: GenMessage<FetchLinkableRepositoriesResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 3);

/**
 * Configuration for connections to github.com.
 *
 * @generated from message google.devtools.cloudbuild.v2.GitHubConfig
 */
export type GitHubConfig = Message<"google.devtools.cloudbuild.v2.GitHubConfig"> & {
  /**
   * OAuth credential of the account that authorized the Cloud Build GitHub App.
   * It is recommended to use a robot account instead of a human user account.
   * The OAuth token must be tied to the Cloud Build GitHub App.
   *
   * @generated from field: google.devtools.cloudbuild.v2.OAuthCredential authorizer_credential = 1;
   */
  authorizerCredential?: OAuthCredential;

  /**
   * GitHub App installation id.
   *
   * @generated from field: int64 app_installation_id = 2;
   */
  appInstallationId: bigint;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.GitHubConfig.
 * Use `create(GitHubConfigSchema)` to create a new message.
 */
export const GitHubConfigSchema: GenMessage<GitHubConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 4);

/**
 * Configuration for connections to an instance of GitHub Enterprise.
 *
 * @generated from message google.devtools.cloudbuild.v2.GitHubEnterpriseConfig
 */
export type GitHubEnterpriseConfig = Message<"google.devtools.cloudbuild.v2.GitHubEnterpriseConfig"> & {
  /**
   * Required. The URI of the GitHub Enterprise host this connection is for.
   *
   * @generated from field: string host_uri = 1;
   */
  hostUri: string;

  /**
   * Required. API Key used for authentication of webhook events.
   *
   * @generated from field: string api_key = 12;
   */
  apiKey: string;

  /**
   * Id of the GitHub App created from the manifest.
   *
   * @generated from field: int64 app_id = 2;
   */
  appId: bigint;

  /**
   * The URL-friendly name of the GitHub App.
   *
   * @generated from field: string app_slug = 13;
   */
  appSlug: string;

  /**
   * SecretManager resource containing the private key of the GitHub App,
   * formatted as `projects/*\/secrets/*\/versions/*`.
   *
   * @generated from field: string private_key_secret_version = 4;
   */
  privateKeySecretVersion: string;

  /**
   * SecretManager resource containing the webhook secret of the GitHub App,
   * formatted as `projects/*\/secrets/*\/versions/*`.
   *
   * @generated from field: string webhook_secret_secret_version = 5;
   */
  webhookSecretSecretVersion: string;

  /**
   * ID of the installation of the GitHub App.
   *
   * @generated from field: int64 app_installation_id = 9;
   */
  appInstallationId: bigint;

  /**
   * Configuration for using Service Directory to privately connect to a GitHub
   * Enterprise server. This should only be set if the GitHub Enterprise server
   * is hosted on-premises and not reachable by public internet. If this field
   * is left empty, calls to the GitHub Enterprise server will be made over the
   * public internet.
   *
   * @generated from field: google.devtools.cloudbuild.v2.ServiceDirectoryConfig service_directory_config = 10;
   */
  serviceDirectoryConfig?: ServiceDirectoryConfig;

  /**
   * SSL certificate to use for requests to GitHub Enterprise.
   *
   * @generated from field: string ssl_ca = 11;
   */
  sslCa: string;

  /**
   * Output only. GitHub Enterprise version installed at the host_uri.
   *
   * @generated from field: string server_version = 14;
   */
  serverVersion: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.GitHubEnterpriseConfig.
 * Use `create(GitHubEnterpriseConfigSchema)` to create a new message.
 */
export const GitHubEnterpriseConfigSchema: GenMessage<GitHubEnterpriseConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 5);

/**
 * Configuration for connections to gitlab.com or an instance of GitLab
 * Enterprise.
 *
 * @generated from message google.devtools.cloudbuild.v2.GitLabConfig
 */
export type GitLabConfig = Message<"google.devtools.cloudbuild.v2.GitLabConfig"> & {
  /**
   * The URI of the GitLab Enterprise host this connection is for.
   * If not specified, the default value is https://gitlab.com.
   *
   * @generated from field: string host_uri = 1;
   */
  hostUri: string;

  /**
   * Required. Immutable. SecretManager resource containing the webhook secret
   * of a GitLab Enterprise project, formatted as
   * `projects/*\/secrets/*\/versions/*`.
   *
   * @generated from field: string webhook_secret_secret_version = 2;
   */
  webhookSecretSecretVersion: string;

  /**
   * Required. A GitLab personal access token with the minimum `read_api` scope
   * access.
   *
   * @generated from field: google.devtools.cloudbuild.v2.UserCredential read_authorizer_credential = 3;
   */
  readAuthorizerCredential?: UserCredential;

  /**
   * Required. A GitLab personal access token with the `api` scope access.
   *
   * @generated from field: google.devtools.cloudbuild.v2.UserCredential authorizer_credential = 4;
   */
  authorizerCredential?: UserCredential;

  /**
   * Configuration for using Service Directory to privately connect to a GitLab
   * Enterprise server. This should only be set if the GitLab Enterprise server
   * is hosted on-premises and not reachable by public internet. If this field
   * is left empty, calls to the GitLab Enterprise server will be made over the
   * public internet.
   *
   * @generated from field: google.devtools.cloudbuild.v2.ServiceDirectoryConfig service_directory_config = 5;
   */
  serviceDirectoryConfig?: ServiceDirectoryConfig;

  /**
   * SSL certificate to use for requests to GitLab Enterprise.
   *
   * @generated from field: string ssl_ca = 6;
   */
  sslCa: string;

  /**
   * Output only. Version of the GitLab Enterprise server running on the
   * `host_uri`.
   *
   * @generated from field: string server_version = 7;
   */
  serverVersion: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.GitLabConfig.
 * Use `create(GitLabConfigSchema)` to create a new message.
 */
export const GitLabConfigSchema: GenMessage<GitLabConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 6);

/**
 * Configuration for connections to Bitbucket Data Center.
 *
 * @generated from message google.devtools.cloudbuild.v2.BitbucketDataCenterConfig
 */
export type BitbucketDataCenterConfig = Message<"google.devtools.cloudbuild.v2.BitbucketDataCenterConfig"> & {
  /**
   * Required. The URI of the Bitbucket Data Center instance or cluster this
   * connection is for.
   *
   * @generated from field: string host_uri = 1;
   */
  hostUri: string;

  /**
   * Required. Immutable. SecretManager resource containing the webhook secret
   * used to verify webhook events, formatted as
   * `projects/*\/secrets/*\/versions/*`.
   *
   * @generated from field: string webhook_secret_secret_version = 2;
   */
  webhookSecretSecretVersion: string;

  /**
   * Required. A http access token with the `REPO_READ` access.
   *
   * @generated from field: google.devtools.cloudbuild.v2.UserCredential read_authorizer_credential = 3;
   */
  readAuthorizerCredential?: UserCredential;

  /**
   * Required. A http access token with the `REPO_ADMIN` scope access.
   *
   * @generated from field: google.devtools.cloudbuild.v2.UserCredential authorizer_credential = 4;
   */
  authorizerCredential?: UserCredential;

  /**
   * Optional. Configuration for using Service Directory to privately connect to
   * a Bitbucket Data Center. This should only be set if the Bitbucket Data
   * Center is hosted on-premises and not reachable by public internet. If this
   * field is left empty, calls to the Bitbucket Data Center will be made over
   * the public internet.
   *
   * @generated from field: google.devtools.cloudbuild.v2.ServiceDirectoryConfig service_directory_config = 5;
   */
  serviceDirectoryConfig?: ServiceDirectoryConfig;

  /**
   * Optional. SSL certificate to use for requests to the Bitbucket Data Center.
   *
   * @generated from field: string ssl_ca = 6;
   */
  sslCa: string;

  /**
   * Output only. Version of the Bitbucket Data Center running on the
   * `host_uri`.
   *
   * @generated from field: string server_version = 7;
   */
  serverVersion: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.BitbucketDataCenterConfig.
 * Use `create(BitbucketDataCenterConfigSchema)` to create a new message.
 */
export const BitbucketDataCenterConfigSchema: GenMessage<BitbucketDataCenterConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 7);

/**
 * Configuration for connections to Bitbucket Cloud.
 *
 * @generated from message google.devtools.cloudbuild.v2.BitbucketCloudConfig
 */
export type BitbucketCloudConfig = Message<"google.devtools.cloudbuild.v2.BitbucketCloudConfig"> & {
  /**
   * Required. The Bitbucket Cloud Workspace ID to be connected to Google Cloud
   * Platform.
   *
   * @generated from field: string workspace = 1;
   */
  workspace: string;

  /**
   * Required. SecretManager resource containing the webhook secret used to
   * verify webhook events, formatted as `projects/*\/secrets/*\/versions/*`.
   *
   * @generated from field: string webhook_secret_secret_version = 2;
   */
  webhookSecretSecretVersion: string;

  /**
   * Required. An access token with the `repository` access. It can be either a
   * workspace, project or repository access token. It's recommended to use a
   * system account to generate the credentials.
   *
   * @generated from field: google.devtools.cloudbuild.v2.UserCredential read_authorizer_credential = 3;
   */
  readAuthorizerCredential?: UserCredential;

  /**
   * Required. An access token with the `webhook`, `repository`,
   * `repository:admin` and `pullrequest` scope access. It can be either a
   * workspace, project or repository access token. It's recommended to use a
   * system account to generate these credentials.
   *
   * @generated from field: google.devtools.cloudbuild.v2.UserCredential authorizer_credential = 4;
   */
  authorizerCredential?: UserCredential;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.BitbucketCloudConfig.
 * Use `create(BitbucketCloudConfigSchema)` to create a new message.
 */
export const BitbucketCloudConfigSchema: GenMessage<BitbucketCloudConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 8);

/**
 * ServiceDirectoryConfig represents Service Directory configuration for a
 * connection.
 *
 * @generated from message google.devtools.cloudbuild.v2.ServiceDirectoryConfig
 */
export type ServiceDirectoryConfig = Message<"google.devtools.cloudbuild.v2.ServiceDirectoryConfig"> & {
  /**
   * Required. The Service Directory service name.
   * Format:
   * projects/{project}/locations/{location}/namespaces/{namespace}/services/{service}.
   *
   * @generated from field: string service = 1;
   */
  service: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.ServiceDirectoryConfig.
 * Use `create(ServiceDirectoryConfigSchema)` to create a new message.
 */
export const ServiceDirectoryConfigSchema: GenMessage<ServiceDirectoryConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 9);

/**
 * A repository associated to a parent connection.
 *
 * @generated from message google.devtools.cloudbuild.v2.Repository
 */
export type Repository = Message<"google.devtools.cloudbuild.v2.Repository"> & {
  /**
   * Immutable. Resource name of the repository, in the format
   * `projects/*\/locations/*\/connections/*\/repositories/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Git Clone HTTPS URI.
   *
   * @generated from field: string remote_uri = 2;
   */
  remoteUri: string;

  /**
   * Output only. Server assigned timestamp for when the connection was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Output only. Server assigned timestamp for when the connection was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;

  /**
   * Allows clients to store small amounts of arbitrary data.
   *
   * @generated from field: map<string, string> annotations = 6;
   */
  annotations: { [key: string]: string };

  /**
   * This checksum is computed by the server based on the value of other
   * fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 7;
   */
  etag: string;

  /**
   * Output only. External ID of the webhook created for the repository.
   *
   * @generated from field: string webhook_id = 8;
   */
  webhookId: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.Repository.
 * Use `create(RepositorySchema)` to create a new message.
 */
export const RepositorySchema: GenMessage<Repository> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 10);

/**
 * Represents an OAuth token of the account that authorized the Connection,
 * and associated metadata.
 *
 * @generated from message google.devtools.cloudbuild.v2.OAuthCredential
 */
export type OAuthCredential = Message<"google.devtools.cloudbuild.v2.OAuthCredential"> & {
  /**
   * A SecretManager resource containing the OAuth token that authorizes
   * the Cloud Build connection. Format: `projects/*\/secrets/*\/versions/*`.
   *
   * @generated from field: string oauth_token_secret_version = 1;
   */
  oauthTokenSecretVersion: string;

  /**
   * Output only. The username associated to this token.
   *
   * @generated from field: string username = 2;
   */
  username: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.OAuthCredential.
 * Use `create(OAuthCredentialSchema)` to create a new message.
 */
export const OAuthCredentialSchema: GenMessage<OAuthCredential> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 11);

/**
 * Represents a personal access token that authorized the Connection,
 * and associated metadata.
 *
 * @generated from message google.devtools.cloudbuild.v2.UserCredential
 */
export type UserCredential = Message<"google.devtools.cloudbuild.v2.UserCredential"> & {
  /**
   * Required. A SecretManager resource containing the user token that
   * authorizes the Cloud Build connection. Format:
   * `projects/*\/secrets/*\/versions/*`.
   *
   * @generated from field: string user_token_secret_version = 1;
   */
  userTokenSecretVersion: string;

  /**
   * Output only. The username associated to this token.
   *
   * @generated from field: string username = 2;
   */
  username: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.UserCredential.
 * Use `create(UserCredentialSchema)` to create a new message.
 */
export const UserCredentialSchema: GenMessage<UserCredential> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 12);

/**
 * Message for creating a Connection
 *
 * @generated from message google.devtools.cloudbuild.v2.CreateConnectionRequest
 */
export type CreateConnectionRequest = Message<"google.devtools.cloudbuild.v2.CreateConnectionRequest"> & {
  /**
   * Required. Project and location where the connection will be created.
   * Format: `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The Connection to create.
   *
   * @generated from field: google.devtools.cloudbuild.v2.Connection connection = 2;
   */
  connection?: Connection;

  /**
   * Required. The ID to use for the Connection, which will become the final
   * component of the Connection's resource name. Names must be unique
   * per-project per-location. Allows alphanumeric characters and any of
   * -._~%!$&'()*+,;=@.
   *
   * @generated from field: string connection_id = 3;
   */
  connectionId: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.CreateConnectionRequest.
 * Use `create(CreateConnectionRequestSchema)` to create a new message.
 */
export const CreateConnectionRequestSchema: GenMessage<CreateConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 13);

/**
 * Message for getting the details of a Connection.
 *
 * @generated from message google.devtools.cloudbuild.v2.GetConnectionRequest
 */
export type GetConnectionRequest = Message<"google.devtools.cloudbuild.v2.GetConnectionRequest"> & {
  /**
   * Required. The name of the Connection to retrieve.
   * Format: `projects/*\/locations/*\/connections/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.GetConnectionRequest.
 * Use `create(GetConnectionRequestSchema)` to create a new message.
 */
export const GetConnectionRequestSchema: GenMessage<GetConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 14);

/**
 * Message for requesting list of Connections.
 *
 * @generated from message google.devtools.cloudbuild.v2.ListConnectionsRequest
 */
export type ListConnectionsRequest = Message<"google.devtools.cloudbuild.v2.ListConnectionsRequest"> & {
  /**
   * Required. The parent, which owns this collection of Connections.
   * Format: `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Number of results to return in the list.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Page start.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.ListConnectionsRequest.
 * Use `create(ListConnectionsRequestSchema)` to create a new message.
 */
export const ListConnectionsRequestSchema: GenMessage<ListConnectionsRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 15);

/**
 * Message for response to listing Connections.
 *
 * @generated from message google.devtools.cloudbuild.v2.ListConnectionsResponse
 */
export type ListConnectionsResponse = Message<"google.devtools.cloudbuild.v2.ListConnectionsResponse"> & {
  /**
   * The list of Connections.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v2.Connection connections = 1;
   */
  connections: Connection[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.ListConnectionsResponse.
 * Use `create(ListConnectionsResponseSchema)` to create a new message.
 */
export const ListConnectionsResponseSchema: GenMessage<ListConnectionsResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 16);

/**
 * Message for updating a Connection.
 *
 * @generated from message google.devtools.cloudbuild.v2.UpdateConnectionRequest
 */
export type UpdateConnectionRequest = Message<"google.devtools.cloudbuild.v2.UpdateConnectionRequest"> & {
  /**
   * Required. The Connection to update.
   *
   * @generated from field: google.devtools.cloudbuild.v2.Connection connection = 1;
   */
  connection?: Connection;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * If set to true, and the connection is not found a new connection
   * will be created. In this situation `update_mask` is ignored.
   * The creation will succeed only if the input connection has all the
   * necessary information (e.g a github_config with both  user_oauth_token and
   * installation_id properties).
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;

  /**
   * The current etag of the connection.
   * If an etag is provided and does not match the current etag of the
   * connection, update will be blocked and an ABORTED error will be returned.
   *
   * @generated from field: string etag = 4;
   */
  etag: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.UpdateConnectionRequest.
 * Use `create(UpdateConnectionRequestSchema)` to create a new message.
 */
export const UpdateConnectionRequestSchema: GenMessage<UpdateConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 17);

/**
 * Message for deleting a Connection.
 *
 * @generated from message google.devtools.cloudbuild.v2.DeleteConnectionRequest
 */
export type DeleteConnectionRequest = Message<"google.devtools.cloudbuild.v2.DeleteConnectionRequest"> & {
  /**
   * Required. The name of the Connection to delete.
   * Format: `projects/*\/locations/*\/connections/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The current etag of the connection.
   * If an etag is provided and does not match the current etag of the
   * connection, deletion will be blocked and an ABORTED error will be returned.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;

  /**
   * If set, validate the request, but do not actually post it.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.DeleteConnectionRequest.
 * Use `create(DeleteConnectionRequestSchema)` to create a new message.
 */
export const DeleteConnectionRequestSchema: GenMessage<DeleteConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 18);

/**
 * Message for creating a Repository.
 *
 * @generated from message google.devtools.cloudbuild.v2.CreateRepositoryRequest
 */
export type CreateRepositoryRequest = Message<"google.devtools.cloudbuild.v2.CreateRepositoryRequest"> & {
  /**
   * Required. The connection to contain the repository. If the request is part
   * of a BatchCreateRepositoriesRequest, this field should be empty or match
   * the parent specified there.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The repository to create.
   *
   * @generated from field: google.devtools.cloudbuild.v2.Repository repository = 2;
   */
  repository?: Repository;

  /**
   * Required. The ID to use for the repository, which will become the final
   * component of the repository's resource name. This ID should be unique in
   * the connection. Allows alphanumeric characters and any of
   * -._~%!$&'()*+,;=@.
   *
   * @generated from field: string repository_id = 3;
   */
  repositoryId: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.CreateRepositoryRequest.
 * Use `create(CreateRepositoryRequestSchema)` to create a new message.
 */
export const CreateRepositoryRequestSchema: GenMessage<CreateRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 19);

/**
 * Message for creating repositoritories in batch.
 *
 * @generated from message google.devtools.cloudbuild.v2.BatchCreateRepositoriesRequest
 */
export type BatchCreateRepositoriesRequest = Message<"google.devtools.cloudbuild.v2.BatchCreateRepositoriesRequest"> & {
  /**
   * Required. The connection to contain all the repositories being created.
   * Format: projects/*\/locations/*\/connections/*
   * The parent field in the CreateRepositoryRequest messages
   * must either be empty or match this field.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The request messages specifying the repositories to create.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v2.CreateRepositoryRequest requests = 2;
   */
  requests: CreateRepositoryRequest[];
};

/**
 * Describes the message google.devtools.cloudbuild.v2.BatchCreateRepositoriesRequest.
 * Use `create(BatchCreateRepositoriesRequestSchema)` to create a new message.
 */
export const BatchCreateRepositoriesRequestSchema: GenMessage<BatchCreateRepositoriesRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 20);

/**
 * Message for response of creating repositories in batch.
 *
 * @generated from message google.devtools.cloudbuild.v2.BatchCreateRepositoriesResponse
 */
export type BatchCreateRepositoriesResponse = Message<"google.devtools.cloudbuild.v2.BatchCreateRepositoriesResponse"> & {
  /**
   * Repository resources created.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v2.Repository repositories = 1;
   */
  repositories: Repository[];
};

/**
 * Describes the message google.devtools.cloudbuild.v2.BatchCreateRepositoriesResponse.
 * Use `create(BatchCreateRepositoriesResponseSchema)` to create a new message.
 */
export const BatchCreateRepositoriesResponseSchema: GenMessage<BatchCreateRepositoriesResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 21);

/**
 * Message for getting the details of a Repository.
 *
 * @generated from message google.devtools.cloudbuild.v2.GetRepositoryRequest
 */
export type GetRepositoryRequest = Message<"google.devtools.cloudbuild.v2.GetRepositoryRequest"> & {
  /**
   * Required. The name of the Repository to retrieve.
   * Format: `projects/*\/locations/*\/connections/*\/repositories/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.GetRepositoryRequest.
 * Use `create(GetRepositoryRequestSchema)` to create a new message.
 */
export const GetRepositoryRequestSchema: GenMessage<GetRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 22);

/**
 * Message for requesting list of Repositories.
 *
 * @generated from message google.devtools.cloudbuild.v2.ListRepositoriesRequest
 */
export type ListRepositoriesRequest = Message<"google.devtools.cloudbuild.v2.ListRepositoriesRequest"> & {
  /**
   * Required. The parent, which owns this collection of Repositories.
   * Format: `projects/*\/locations/*\/connections/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Number of results to return in the list.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Page start.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that filters resources listed in the response.
   * Expressions must follow API improvement proposal
   * [AIP-160](https://google.aip.dev/160). e.g.
   * `remote_uri:"https://github.com*"`.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.ListRepositoriesRequest.
 * Use `create(ListRepositoriesRequestSchema)` to create a new message.
 */
export const ListRepositoriesRequestSchema: GenMessage<ListRepositoriesRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 23);

/**
 * Message for response to listing Repositories.
 *
 * @generated from message google.devtools.cloudbuild.v2.ListRepositoriesResponse
 */
export type ListRepositoriesResponse = Message<"google.devtools.cloudbuild.v2.ListRepositoriesResponse"> & {
  /**
   * The list of Repositories.
   *
   * @generated from field: repeated google.devtools.cloudbuild.v2.Repository repositories = 1;
   */
  repositories: Repository[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.ListRepositoriesResponse.
 * Use `create(ListRepositoriesResponseSchema)` to create a new message.
 */
export const ListRepositoriesResponseSchema: GenMessage<ListRepositoriesResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 24);

/**
 * Message for deleting a Repository.
 *
 * @generated from message google.devtools.cloudbuild.v2.DeleteRepositoryRequest
 */
export type DeleteRepositoryRequest = Message<"google.devtools.cloudbuild.v2.DeleteRepositoryRequest"> & {
  /**
   * Required. The name of the Repository to delete.
   * Format: `projects/*\/locations/*\/connections/*\/repositories/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The current etag of the repository.
   * If an etag is provided and does not match the current etag of the
   * repository, deletion will be blocked and an ABORTED error will be returned.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;

  /**
   * If set, validate the request, but do not actually post it.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.DeleteRepositoryRequest.
 * Use `create(DeleteRepositoryRequestSchema)` to create a new message.
 */
export const DeleteRepositoryRequestSchema: GenMessage<DeleteRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 25);

/**
 * Message for fetching SCM read/write token.
 *
 * @generated from message google.devtools.cloudbuild.v2.FetchReadWriteTokenRequest
 */
export type FetchReadWriteTokenRequest = Message<"google.devtools.cloudbuild.v2.FetchReadWriteTokenRequest"> & {
  /**
   * Required. The resource name of the repository in the format
   * `projects/*\/locations/*\/connections/*\/repositories/*`.
   *
   * @generated from field: string repository = 1;
   */
  repository: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.FetchReadWriteTokenRequest.
 * Use `create(FetchReadWriteTokenRequestSchema)` to create a new message.
 */
export const FetchReadWriteTokenRequestSchema: GenMessage<FetchReadWriteTokenRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 26);

/**
 * Message for fetching SCM read token.
 *
 * @generated from message google.devtools.cloudbuild.v2.FetchReadTokenRequest
 */
export type FetchReadTokenRequest = Message<"google.devtools.cloudbuild.v2.FetchReadTokenRequest"> & {
  /**
   * Required. The resource name of the repository in the format
   * `projects/*\/locations/*\/connections/*\/repositories/*`.
   *
   * @generated from field: string repository = 1;
   */
  repository: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.FetchReadTokenRequest.
 * Use `create(FetchReadTokenRequestSchema)` to create a new message.
 */
export const FetchReadTokenRequestSchema: GenMessage<FetchReadTokenRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 27);

/**
 * Message for responding to get read token.
 *
 * @generated from message google.devtools.cloudbuild.v2.FetchReadTokenResponse
 */
export type FetchReadTokenResponse = Message<"google.devtools.cloudbuild.v2.FetchReadTokenResponse"> & {
  /**
   * The token content.
   *
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * Expiration timestamp. Can be empty if unknown or non-expiring.
   *
   * @generated from field: google.protobuf.Timestamp expiration_time = 2;
   */
  expirationTime?: Timestamp;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.FetchReadTokenResponse.
 * Use `create(FetchReadTokenResponseSchema)` to create a new message.
 */
export const FetchReadTokenResponseSchema: GenMessage<FetchReadTokenResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 28);

/**
 * Message for responding to get read/write token.
 *
 * @generated from message google.devtools.cloudbuild.v2.FetchReadWriteTokenResponse
 */
export type FetchReadWriteTokenResponse = Message<"google.devtools.cloudbuild.v2.FetchReadWriteTokenResponse"> & {
  /**
   * The token content.
   *
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * Expiration timestamp. Can be empty if unknown or non-expiring.
   *
   * @generated from field: google.protobuf.Timestamp expiration_time = 2;
   */
  expirationTime?: Timestamp;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.FetchReadWriteTokenResponse.
 * Use `create(FetchReadWriteTokenResponseSchema)` to create a new message.
 */
export const FetchReadWriteTokenResponseSchema: GenMessage<FetchReadWriteTokenResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 29);

/**
 * RPC request object accepted by the ProcessWebhook RPC method.
 *
 * @generated from message google.devtools.cloudbuild.v2.ProcessWebhookRequest
 */
export type ProcessWebhookRequest = Message<"google.devtools.cloudbuild.v2.ProcessWebhookRequest"> & {
  /**
   * Required. Project and location where the webhook will be received.
   * Format: `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * HTTP request body.
   *
   * @generated from field: google.api.HttpBody body = 2;
   */
  body?: HttpBody;

  /**
   * Arbitrary additional key to find the maching repository for a webhook event
   * if needed.
   *
   * @generated from field: string webhook_key = 3;
   */
  webhookKey: string;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.ProcessWebhookRequest.
 * Use `create(ProcessWebhookRequestSchema)` to create a new message.
 */
export const ProcessWebhookRequestSchema: GenMessage<ProcessWebhookRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 30);

/**
 * Request for fetching git refs
 *
 * @generated from message google.devtools.cloudbuild.v2.FetchGitRefsRequest
 */
export type FetchGitRefsRequest = Message<"google.devtools.cloudbuild.v2.FetchGitRefsRequest"> & {
  /**
   * Required. The resource name of the repository in the format
   * `projects/*\/locations/*\/connections/*\/repositories/*`.
   *
   * @generated from field: string repository = 1;
   */
  repository: string;

  /**
   * Type of refs to fetch
   *
   * @generated from field: google.devtools.cloudbuild.v2.FetchGitRefsRequest.RefType ref_type = 2;
   */
  refType: FetchGitRefsRequest_RefType;
};

/**
 * Describes the message google.devtools.cloudbuild.v2.FetchGitRefsRequest.
 * Use `create(FetchGitRefsRequestSchema)` to create a new message.
 */
export const FetchGitRefsRequestSchema: GenMessage<FetchGitRefsRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 31);

/**
 * Type of refs
 *
 * @generated from enum google.devtools.cloudbuild.v2.FetchGitRefsRequest.RefType
 */
export enum FetchGitRefsRequest_RefType {
  /**
   * No type specified.
   *
   * @generated from enum value: REF_TYPE_UNSPECIFIED = 0;
   */
  REF_TYPE_UNSPECIFIED = 0,

  /**
   * To fetch tags.
   *
   * @generated from enum value: TAG = 1;
   */
  TAG = 1,

  /**
   * To fetch branches.
   *
   * @generated from enum value: BRANCH = 2;
   */
  BRANCH = 2,
}

/**
 * Describes the enum google.devtools.cloudbuild.v2.FetchGitRefsRequest.RefType.
 */
export const FetchGitRefsRequest_RefTypeSchema: GenEnum<FetchGitRefsRequest_RefType> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudbuild_v2_repositories, 31, 0);

/**
 * Response for fetching git refs
 *
 * @generated from message google.devtools.cloudbuild.v2.FetchGitRefsResponse
 */
export type FetchGitRefsResponse = Message<"google.devtools.cloudbuild.v2.FetchGitRefsResponse"> & {
  /**
   * Name of the refs fetched.
   *
   * @generated from field: repeated string ref_names = 1;
   */
  refNames: string[];
};

/**
 * Describes the message google.devtools.cloudbuild.v2.FetchGitRefsResponse.
 * Use `create(FetchGitRefsResponseSchema)` to create a new message.
 */
export const FetchGitRefsResponseSchema: GenMessage<FetchGitRefsResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudbuild_v2_repositories, 32);

/**
 * Manages connections to source code repositories.
 *
 * @generated from service google.devtools.cloudbuild.v2.RepositoryManager
 */
export const RepositoryManager: GenService<{
  /**
   * Creates a Connection.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.CreateConnection
   */
  createConnection: {
    methodKind: "unary";
    input: typeof CreateConnectionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details of a single connection.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.GetConnection
   */
  getConnection: {
    methodKind: "unary";
    input: typeof GetConnectionRequestSchema;
    output: typeof ConnectionSchema;
  },
  /**
   * Lists Connections in a given project and location.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.ListConnections
   */
  listConnections: {
    methodKind: "unary";
    input: typeof ListConnectionsRequestSchema;
    output: typeof ListConnectionsResponseSchema;
  },
  /**
   * Updates a single connection.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.UpdateConnection
   */
  updateConnection: {
    methodKind: "unary";
    input: typeof UpdateConnectionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single connection.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.DeleteConnection
   */
  deleteConnection: {
    methodKind: "unary";
    input: typeof DeleteConnectionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a Repository.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.CreateRepository
   */
  createRepository: {
    methodKind: "unary";
    input: typeof CreateRepositoryRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates multiple repositories inside a connection.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.BatchCreateRepositories
   */
  batchCreateRepositories: {
    methodKind: "unary";
    input: typeof BatchCreateRepositoriesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details of a single repository.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.GetRepository
   */
  getRepository: {
    methodKind: "unary";
    input: typeof GetRepositoryRequestSchema;
    output: typeof RepositorySchema;
  },
  /**
   * Lists Repositories in a given connection.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.ListRepositories
   */
  listRepositories: {
    methodKind: "unary";
    input: typeof ListRepositoriesRequestSchema;
    output: typeof ListRepositoriesResponseSchema;
  },
  /**
   * Deletes a single repository.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.DeleteRepository
   */
  deleteRepository: {
    methodKind: "unary";
    input: typeof DeleteRepositoryRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Fetches read/write token of a given repository.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.FetchReadWriteToken
   */
  fetchReadWriteToken: {
    methodKind: "unary";
    input: typeof FetchReadWriteTokenRequestSchema;
    output: typeof FetchReadWriteTokenResponseSchema;
  },
  /**
   * Fetches read token of a given repository.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.FetchReadToken
   */
  fetchReadToken: {
    methodKind: "unary";
    input: typeof FetchReadTokenRequestSchema;
    output: typeof FetchReadTokenResponseSchema;
  },
  /**
   * FetchLinkableRepositories get repositories from SCM that are
   * accessible and could be added to the connection.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.FetchLinkableRepositories
   */
  fetchLinkableRepositories: {
    methodKind: "unary";
    input: typeof FetchLinkableRepositoriesRequestSchema;
    output: typeof FetchLinkableRepositoriesResponseSchema;
  },
  /**
   * Fetch the list of branches or tags for a given repository.
   *
   * @generated from rpc google.devtools.cloudbuild.v2.RepositoryManager.FetchGitRefs
   */
  fetchGitRefs: {
    methodKind: "unary";
    input: typeof FetchGitRefsRequestSchema;
    output: typeof FetchGitRefsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_devtools_cloudbuild_v2_repositories, 0);

