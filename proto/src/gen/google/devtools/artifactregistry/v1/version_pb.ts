// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/artifactregistry/v1/version.proto (package google.devtools.artifactregistry.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Tag } from "./tag_pb";
import { file_google_devtools_artifactregistry_v1_tag } from "./tag_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/artifactregistry/v1/version.proto.
 */
export const file_google_devtools_artifactregistry_v1_version: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvZGV2dG9vbHMvYXJ0aWZhY3RyZWdpc3RyeS92MS92ZXJzaW9uLnByb3RvEiNnb29nbGUuZGV2dG9vbHMuYXJ0aWZhY3RyZWdpc3RyeS52MSKXAwoHVmVyc2lvbhIMCgRuYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEi8KC2NyZWF0ZV90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIvCgt1cGRhdGVfdGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASPgoMcmVsYXRlZF90YWdzGAcgAygLMiguZ29vZ2xlLmRldnRvb2xzLmFydGlmYWN0cmVnaXN0cnkudjEuVGFnEi4KCG1ldGFkYXRhGAggASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdEID4EEDOpYB6kGSAQonYXJ0aWZhY3RyZWdpc3RyeS5nb29nbGVhcGlzLmNvbS9WZXJzaW9uEmdwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vcmVwb3NpdG9yaWVzL3tyZXBvc2l0b3J5fS9wYWNrYWdlcy97cGFja2FnZX0vdmVyc2lvbnMve3ZlcnNpb259IqMBChNMaXN0VmVyc2lvbnNSZXF1ZXN0Eg4KBnBhcmVudBgBIAEoCRIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCRI+CgR2aWV3GAQgASgOMjAuZ29vZ2xlLmRldnRvb2xzLmFydGlmYWN0cmVnaXN0cnkudjEuVmVyc2lvblZpZXcSFQoIb3JkZXJfYnkYBSABKAlCA+BBASJvChRMaXN0VmVyc2lvbnNSZXNwb25zZRI+Cgh2ZXJzaW9ucxgBIAMoCzIsLmdvb2dsZS5kZXZ0b29scy5hcnRpZmFjdHJlZ2lzdHJ5LnYxLlZlcnNpb24SFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJImEKEUdldFZlcnNpb25SZXF1ZXN0EgwKBG5hbWUYASABKAkSPgoEdmlldxgCIAEoDjIwLmdvb2dsZS5kZXZ0b29scy5hcnRpZmFjdHJlZ2lzdHJ5LnYxLlZlcnNpb25WaWV3IjMKFERlbGV0ZVZlcnNpb25SZXF1ZXN0EgwKBG5hbWUYASABKAkSDQoFZm9yY2UYAiABKAgisQEKGkJhdGNoRGVsZXRlVmVyc2lvbnNSZXF1ZXN0EjwKBnBhcmVudBgBIAEoCUIs+kEpEidhcnRpZmFjdHJlZ2lzdHJ5Lmdvb2dsZWFwaXMuY29tL1ZlcnNpb24SPgoFbmFtZXMYAiADKAlCL+BBAvpBKQonYXJ0aWZhY3RyZWdpc3RyeS5nb29nbGVhcGlzLmNvbS9WZXJzaW9uEhUKDXZhbGlkYXRlX29ubHkYAyABKAgiNgobQmF0Y2hEZWxldGVWZXJzaW9uc01ldGFkYXRhEhcKD2ZhaWxlZF92ZXJzaW9ucxgCIAMoCSpACgtWZXJzaW9uVmlldxIcChhWRVJTSU9OX1ZJRVdfVU5TUEVDSUZJRUQQABIJCgVCQVNJQxABEggKBEZVTEwQAkL3AQonY29tLmdvb2dsZS5kZXZ0b29scy5hcnRpZmFjdHJlZ2lzdHJ5LnYxQgxWZXJzaW9uUHJvdG9QAVpQY2xvdWQuZ29vZ2xlLmNvbS9nby9hcnRpZmFjdHJlZ2lzdHJ5L2FwaXYxL2FydGlmYWN0cmVnaXN0cnlwYjthcnRpZmFjdHJlZ2lzdHJ5cGKqAiBHb29nbGUuQ2xvdWQuQXJ0aWZhY3RSZWdpc3RyeS5WMcoCIEdvb2dsZVxDbG91ZFxBcnRpZmFjdFJlZ2lzdHJ5XFYx6gIjR29vZ2xlOjpDbG91ZDo6QXJ0aWZhY3RSZWdpc3RyeTo6VjFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_devtools_artifactregistry_v1_tag, file_google_protobuf_struct, file_google_protobuf_timestamp]);

/**
 * The body of a version resource. A version resource represents a
 * collection of components, such as files and other data. This may correspond
 * to a version in many package management schemes.
 *
 * @generated from message google.devtools.artifactregistry.v1.Version
 */
export type Version = Message<"google.devtools.artifactregistry.v1.Version"> & {
  /**
   * The name of the version, for example:
   * "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/art1".
   * If the package or version ID parts contain slashes, the slashes are
   * escaped.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Description of the version, as specified in its metadata.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The time when the version was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * The time when the version was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;

  /**
   * Output only. A list of related tags. Will contain up to 100 tags that
   * reference this version.
   *
   * @generated from field: repeated google.devtools.artifactregistry.v1.Tag related_tags = 7;
   */
  relatedTags: Tag[];

  /**
   * Output only. Repository-specific Metadata stored against this version.
   * The fields returned are defined by the underlying repository-specific
   * resource. Currently, the resources could be:
   * [DockerImage][google.devtools.artifactregistry.v1.DockerImage]
   * [MavenArtifact][google.devtools.artifactregistry.v1.MavenArtifact]
   *
   * @generated from field: google.protobuf.Struct metadata = 8;
   */
  metadata?: JsonObject;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.Version.
 * Use `create(VersionSchema)` to create a new message.
 */
export const VersionSchema: GenMessage<Version> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_version, 0);

/**
 * The request to list versions.
 *
 * @generated from message google.devtools.artifactregistry.v1.ListVersionsRequest
 */
export type ListVersionsRequest = Message<"google.devtools.artifactregistry.v1.ListVersionsRequest"> & {
  /**
   * The name of the parent resource whose versions will be listed.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of versions to return. Maximum page size is 1,000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request, if any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The view that should be returned in the response.
   *
   * @generated from field: google.devtools.artifactregistry.v1.VersionView view = 4;
   */
  view: VersionView;

  /**
   * Optional. The field to order the results by.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.ListVersionsRequest.
 * Use `create(ListVersionsRequestSchema)` to create a new message.
 */
export const ListVersionsRequestSchema: GenMessage<ListVersionsRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_version, 1);

/**
 * The response from listing versions.
 *
 * @generated from message google.devtools.artifactregistry.v1.ListVersionsResponse
 */
export type ListVersionsResponse = Message<"google.devtools.artifactregistry.v1.ListVersionsResponse"> & {
  /**
   * The versions returned.
   *
   * @generated from field: repeated google.devtools.artifactregistry.v1.Version versions = 1;
   */
  versions: Version[];

  /**
   * The token to retrieve the next page of versions, or empty if there are no
   * more versions to return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.ListVersionsResponse.
 * Use `create(ListVersionsResponseSchema)` to create a new message.
 */
export const ListVersionsResponseSchema: GenMessage<ListVersionsResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_version, 2);

/**
 * The request to retrieve a version.
 *
 * @generated from message google.devtools.artifactregistry.v1.GetVersionRequest
 */
export type GetVersionRequest = Message<"google.devtools.artifactregistry.v1.GetVersionRequest"> & {
  /**
   * The name of the version to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The view that should be returned in the response.
   *
   * @generated from field: google.devtools.artifactregistry.v1.VersionView view = 2;
   */
  view: VersionView;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.GetVersionRequest.
 * Use `create(GetVersionRequestSchema)` to create a new message.
 */
export const GetVersionRequestSchema: GenMessage<GetVersionRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_version, 3);

/**
 * The request to delete a version.
 *
 * @generated from message google.devtools.artifactregistry.v1.DeleteVersionRequest
 */
export type DeleteVersionRequest = Message<"google.devtools.artifactregistry.v1.DeleteVersionRequest"> & {
  /**
   * The name of the version to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * By default, a version that is tagged may not be deleted. If force=true, the
   * version and any tags pointing to the version are deleted.
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.DeleteVersionRequest.
 * Use `create(DeleteVersionRequestSchema)` to create a new message.
 */
export const DeleteVersionRequestSchema: GenMessage<DeleteVersionRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_version, 4);

/**
 * The request to delete multiple versions across a repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
 */
export type BatchDeleteVersionsRequest = Message<"google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest"> & {
  /**
   * The name of the repository holding all requested versions.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The names of the versions to delete.
   * A maximum of 10000 versions can be deleted in a batch.
   *
   * @generated from field: repeated string names = 2;
   */
  names: string[];

  /**
   * If true, the request is performed without deleting data, following AIP-163.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest.
 * Use `create(BatchDeleteVersionsRequestSchema)` to create a new message.
 */
export const BatchDeleteVersionsRequestSchema: GenMessage<BatchDeleteVersionsRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_version, 5);

/**
 * The metadata of an LRO from deleting multiple versions.
 *
 * @generated from message google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
 */
export type BatchDeleteVersionsMetadata = Message<"google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata"> & {
  /**
   * The versions the operation failed to delete.
   *
   * @generated from field: repeated string failed_versions = 2;
   */
  failedVersions: string[];
};

/**
 * Describes the message google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata.
 * Use `create(BatchDeleteVersionsMetadataSchema)` to create a new message.
 */
export const BatchDeleteVersionsMetadataSchema: GenMessage<BatchDeleteVersionsMetadata> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_version, 6);

/**
 * The view, which determines what version information is returned in a
 * response.
 *
 * @generated from enum google.devtools.artifactregistry.v1.VersionView
 */
export enum VersionView {
  /**
   * The default / unset value.
   * The API will default to the BASIC view.
   *
   * @generated from enum value: VERSION_VIEW_UNSPECIFIED = 0;
   */
  VERSION_VIEW_UNSPECIFIED = 0,

  /**
   * Includes basic information about the version, but not any related tags.
   *
   * @generated from enum value: BASIC = 1;
   */
  BASIC = 1,

  /**
   * Include everything.
   *
   * @generated from enum value: FULL = 2;
   */
  FULL = 2,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.VersionView.
 */
export const VersionViewSchema: GenEnum<VersionView> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_version, 0);

