// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/artifactregistry/v1/repository.proto (package google.devtools.artifactregistry.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Duration, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/artifactregistry/v1/repository.proto.
 */
export const file_google_devtools_artifactregistry_v1_repository: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Artifact policy configuration for the repository contents.
 *
 * @generated from message google.devtools.artifactregistry.v1.UpstreamPolicy
 */
export type UpstreamPolicy = Message<"google.devtools.artifactregistry.v1.UpstreamPolicy"> & {
  /**
   * The user-provided ID of the upstream policy.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * A reference to the repository resource, for example:
   * `projects/p1/locations/us-central1/repositories/repo1`.
   *
   * @generated from field: string repository = 2;
   */
  repository: string;

  /**
   * Entries with a greater priority value take precedence in the pull order.
   *
   * @generated from field: int32 priority = 3;
   */
  priority: number;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.UpstreamPolicy.
 * Use `create(UpstreamPolicySchema)` to create a new message.
 */
export const UpstreamPolicySchema: GenMessage<UpstreamPolicy> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 0);

/**
 * CleanupPolicyCondition is a set of conditions attached to a CleanupPolicy.
 * If multiple entries are set, all must be satisfied for the condition to be
 * satisfied.
 *
 * @generated from message google.devtools.artifactregistry.v1.CleanupPolicyCondition
 */
export type CleanupPolicyCondition = Message<"google.devtools.artifactregistry.v1.CleanupPolicyCondition"> & {
  /**
   * Match versions by tag status.
   *
   * @generated from field: optional google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState tag_state = 2;
   */
  tagState?: CleanupPolicyCondition_TagState;

  /**
   * Match versions by tag prefix. Applied on any prefix match.
   *
   * @generated from field: repeated string tag_prefixes = 3;
   */
  tagPrefixes: string[];

  /**
   * Match versions by version name prefix. Applied on any prefix match.
   *
   * @generated from field: repeated string version_name_prefixes = 4;
   */
  versionNamePrefixes: string[];

  /**
   * Match versions by package prefix. Applied on any prefix match.
   *
   * @generated from field: repeated string package_name_prefixes = 5;
   */
  packageNamePrefixes: string[];

  /**
   * Match versions older than a duration.
   *
   * @generated from field: optional google.protobuf.Duration older_than = 6;
   */
  olderThan?: Duration;

  /**
   * Match versions newer than a duration.
   *
   * @generated from field: optional google.protobuf.Duration newer_than = 7;
   */
  newerThan?: Duration;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.CleanupPolicyCondition.
 * Use `create(CleanupPolicyConditionSchema)` to create a new message.
 */
export const CleanupPolicyConditionSchema: GenMessage<CleanupPolicyCondition> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 1);

/**
 * Statuses applying to versions.
 *
 * @generated from enum google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState
 */
export enum CleanupPolicyCondition_TagState {
  /**
   * Tag status not specified.
   *
   * @generated from enum value: TAG_STATE_UNSPECIFIED = 0;
   */
  TAG_STATE_UNSPECIFIED = 0,

  /**
   * Applies to tagged versions only.
   *
   * @generated from enum value: TAGGED = 1;
   */
  TAGGED = 1,

  /**
   * Applies to untagged versions only.
   *
   * @generated from enum value: UNTAGGED = 2;
   */
  UNTAGGED = 2,

  /**
   * Applies to all versions.
   *
   * @generated from enum value: ANY = 3;
   */
  ANY = 3,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState.
 */
export const CleanupPolicyCondition_TagStateSchema: GenEnum<CleanupPolicyCondition_TagState> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 1, 0);

/**
 * CleanupPolicyMostRecentVersions is an alternate condition of a CleanupPolicy
 * for retaining a minimum number of versions.
 *
 * @generated from message google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
 */
export type CleanupPolicyMostRecentVersions = Message<"google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions"> & {
  /**
   * List of package name prefixes that will apply this rule.
   *
   * @generated from field: repeated string package_name_prefixes = 1;
   */
  packageNamePrefixes: string[];

  /**
   * Minimum number of versions to keep.
   *
   * @generated from field: optional int32 keep_count = 2;
   */
  keepCount?: number;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions.
 * Use `create(CleanupPolicyMostRecentVersionsSchema)` to create a new message.
 */
export const CleanupPolicyMostRecentVersionsSchema: GenMessage<CleanupPolicyMostRecentVersions> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 2);

/**
 * Artifact policy configuration for repository cleanup policies.
 *
 * @generated from message google.devtools.artifactregistry.v1.CleanupPolicy
 */
export type CleanupPolicy = Message<"google.devtools.artifactregistry.v1.CleanupPolicy"> & {
  /**
   * @generated from oneof google.devtools.artifactregistry.v1.CleanupPolicy.condition_type
   */
  conditionType: {
    /**
     * Policy condition for matching versions.
     *
     * @generated from field: google.devtools.artifactregistry.v1.CleanupPolicyCondition condition = 2;
     */
    value: CleanupPolicyCondition;
    case: "condition";
  } | {
    /**
     * Policy condition for retaining a minimum number of versions. May only be
     * specified with a Keep action.
     *
     * @generated from field: google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions most_recent_versions = 4;
     */
    value: CleanupPolicyMostRecentVersions;
    case: "mostRecentVersions";
  } | { case: undefined; value?: undefined };

  /**
   * The user-provided ID of the cleanup policy.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Policy action.
   *
   * @generated from field: google.devtools.artifactregistry.v1.CleanupPolicy.Action action = 3;
   */
  action: CleanupPolicy_Action;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.CleanupPolicy.
 * Use `create(CleanupPolicySchema)` to create a new message.
 */
export const CleanupPolicySchema: GenMessage<CleanupPolicy> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 3);

/**
 * Action type for a cleanup policy.
 *
 * @generated from enum google.devtools.artifactregistry.v1.CleanupPolicy.Action
 */
export enum CleanupPolicy_Action {
  /**
   * Action not specified.
   *
   * @generated from enum value: ACTION_UNSPECIFIED = 0;
   */
  ACTION_UNSPECIFIED = 0,

  /**
   * Delete action.
   *
   * @generated from enum value: DELETE = 1;
   */
  DELETE = 1,

  /**
   * Keep action.
   *
   * @generated from enum value: KEEP = 2;
   */
  KEEP = 2,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.CleanupPolicy.Action.
 */
export const CleanupPolicy_ActionSchema: GenEnum<CleanupPolicy_Action> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 3, 0);

/**
 * Virtual repository configuration.
 *
 * @generated from message google.devtools.artifactregistry.v1.VirtualRepositoryConfig
 */
export type VirtualRepositoryConfig = Message<"google.devtools.artifactregistry.v1.VirtualRepositoryConfig"> & {
  /**
   * Policies that configure the upstream artifacts distributed by the Virtual
   * Repository. Upstream policies cannot be set on a standard repository.
   *
   * @generated from field: repeated google.devtools.artifactregistry.v1.UpstreamPolicy upstream_policies = 1;
   */
  upstreamPolicies: UpstreamPolicy[];
};

/**
 * Describes the message google.devtools.artifactregistry.v1.VirtualRepositoryConfig.
 * Use `create(VirtualRepositoryConfigSchema)` to create a new message.
 */
export const VirtualRepositoryConfigSchema: GenMessage<VirtualRepositoryConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 4);

/**
 * Remote repository configuration.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig
 */
export type RemoteRepositoryConfig = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig"> & {
  /**
   * Settings specific to the remote repository.
   *
   * @generated from oneof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.remote_source
   */
  remoteSource: {
    /**
     * Specific settings for a Docker remote repository.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository docker_repository = 2;
     */
    value: RemoteRepositoryConfig_DockerRepository;
    case: "dockerRepository";
  } | {
    /**
     * Specific settings for a Maven remote repository.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository maven_repository = 3;
     */
    value: RemoteRepositoryConfig_MavenRepository;
    case: "mavenRepository";
  } | {
    /**
     * Specific settings for an Npm remote repository.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository npm_repository = 4;
     */
    value: RemoteRepositoryConfig_NpmRepository;
    case: "npmRepository";
  } | {
    /**
     * Specific settings for a Python remote repository.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository python_repository = 5;
     */
    value: RemoteRepositoryConfig_PythonRepository;
    case: "pythonRepository";
  } | {
    /**
     * Specific settings for an Apt remote repository.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository apt_repository = 6;
     */
    value: RemoteRepositoryConfig_AptRepository;
    case: "aptRepository";
  } | {
    /**
     * Specific settings for a Yum remote repository.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository yum_repository = 7;
     */
    value: RemoteRepositoryConfig_YumRepository;
    case: "yumRepository";
  } | { case: undefined; value?: undefined };

  /**
   * The description of the remote source.
   *
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * Optional. The credentials used to access the remote repository.
   *
   * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials upstream_credentials = 9;
   */
  upstreamCredentials?: RemoteRepositoryConfig_UpstreamCredentials;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.
 * Use `create(RemoteRepositoryConfigSchema)` to create a new message.
 */
export const RemoteRepositoryConfigSchema: GenMessage<RemoteRepositoryConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5);

/**
 * The credentials to access the remote repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
 */
export type RemoteRepositoryConfig_UpstreamCredentials = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials"> & {
  /**
   * @generated from oneof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.credentials
   */
  credentials: {
    /**
     * Use username and password to access the remote repository.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials username_password_credentials = 1;
     */
    value: RemoteRepositoryConfig_UpstreamCredentials_UsernamePasswordCredentials;
    case: "usernamePasswordCredentials";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.
 * Use `create(RemoteRepositoryConfig_UpstreamCredentialsSchema)` to create a new message.
 */
export const RemoteRepositoryConfig_UpstreamCredentialsSchema: GenMessage<RemoteRepositoryConfig_UpstreamCredentials> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5, 0);

/**
 * Username and password credentials.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
 */
export type RemoteRepositoryConfig_UpstreamCredentials_UsernamePasswordCredentials = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials"> & {
  /**
   * The username to access the remote repository.
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * The Secret Manager key version that holds the password to access the
   * remote repository. Must be in the format of
   * `projects/{project}/secrets/{secret}/versions/{version}`.
   *
   * @generated from field: string password_secret_version = 2;
   */
  passwordSecretVersion: string;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials.
 * Use `create(RemoteRepositoryConfig_UpstreamCredentials_UsernamePasswordCredentialsSchema)` to create a new message.
 */
export const RemoteRepositoryConfig_UpstreamCredentials_UsernamePasswordCredentialsSchema: GenMessage<RemoteRepositoryConfig_UpstreamCredentials_UsernamePasswordCredentials> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5, 0, 0);

/**
 * Configuration for a Docker remote repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
 */
export type RemoteRepositoryConfig_DockerRepository = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository"> & {
  /**
   * Address of the remote repository.
   *
   * @generated from oneof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.upstream
   */
  upstream: {
    /**
     * One of the publicly available Docker repositories supported by Artifact
     * Registry.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.PublicRepository public_repository = 1;
     */
    value: RemoteRepositoryConfig_DockerRepository_PublicRepository;
    case: "publicRepository";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.
 * Use `create(RemoteRepositoryConfig_DockerRepositorySchema)` to create a new message.
 */
export const RemoteRepositoryConfig_DockerRepositorySchema: GenMessage<RemoteRepositoryConfig_DockerRepository> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5, 1);

/**
 * Predefined list of publicly available Docker repositories like Docker
 * Hub.
 *
 * @generated from enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.PublicRepository
 */
export enum RemoteRepositoryConfig_DockerRepository_PublicRepository {
  /**
   * Unspecified repository.
   *
   * @generated from enum value: PUBLIC_REPOSITORY_UNSPECIFIED = 0;
   */
  PUBLIC_REPOSITORY_UNSPECIFIED = 0,

  /**
   * Docker Hub.
   *
   * @generated from enum value: DOCKER_HUB = 1;
   */
  DOCKER_HUB = 1,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.PublicRepository.
 */
export const RemoteRepositoryConfig_DockerRepository_PublicRepositorySchema: GenEnum<RemoteRepositoryConfig_DockerRepository_PublicRepository> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 5, 1, 0);

/**
 * Configuration for a Maven remote repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
 */
export type RemoteRepositoryConfig_MavenRepository = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository"> & {
  /**
   * Address of the remote repository.
   *
   * @generated from oneof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.upstream
   */
  upstream: {
    /**
     * One of the publicly available Maven repositories supported by Artifact
     * Registry.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.PublicRepository public_repository = 1;
     */
    value: RemoteRepositoryConfig_MavenRepository_PublicRepository;
    case: "publicRepository";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.
 * Use `create(RemoteRepositoryConfig_MavenRepositorySchema)` to create a new message.
 */
export const RemoteRepositoryConfig_MavenRepositorySchema: GenMessage<RemoteRepositoryConfig_MavenRepository> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5, 2);

/**
 * Predefined list of publicly available Maven repositories like Maven
 * Central.
 *
 * @generated from enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.PublicRepository
 */
export enum RemoteRepositoryConfig_MavenRepository_PublicRepository {
  /**
   * Unspecified repository.
   *
   * @generated from enum value: PUBLIC_REPOSITORY_UNSPECIFIED = 0;
   */
  PUBLIC_REPOSITORY_UNSPECIFIED = 0,

  /**
   * Maven Central.
   *
   * @generated from enum value: MAVEN_CENTRAL = 1;
   */
  MAVEN_CENTRAL = 1,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.PublicRepository.
 */
export const RemoteRepositoryConfig_MavenRepository_PublicRepositorySchema: GenEnum<RemoteRepositoryConfig_MavenRepository_PublicRepository> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 5, 2, 0);

/**
 * Configuration for a Npm remote repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
 */
export type RemoteRepositoryConfig_NpmRepository = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository"> & {
  /**
   * Address of the remote repository
   *
   * @generated from oneof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.upstream
   */
  upstream: {
    /**
     * One of the publicly available Npm repositories supported by Artifact
     * Registry.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.PublicRepository public_repository = 1;
     */
    value: RemoteRepositoryConfig_NpmRepository_PublicRepository;
    case: "publicRepository";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.
 * Use `create(RemoteRepositoryConfig_NpmRepositorySchema)` to create a new message.
 */
export const RemoteRepositoryConfig_NpmRepositorySchema: GenMessage<RemoteRepositoryConfig_NpmRepository> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5, 3);

/**
 * Predefined list of publicly available NPM repositories like npmjs.
 *
 * @generated from enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.PublicRepository
 */
export enum RemoteRepositoryConfig_NpmRepository_PublicRepository {
  /**
   * Unspecified repository.
   *
   * @generated from enum value: PUBLIC_REPOSITORY_UNSPECIFIED = 0;
   */
  PUBLIC_REPOSITORY_UNSPECIFIED = 0,

  /**
   * npmjs.
   *
   * @generated from enum value: NPMJS = 1;
   */
  NPMJS = 1,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.PublicRepository.
 */
export const RemoteRepositoryConfig_NpmRepository_PublicRepositorySchema: GenEnum<RemoteRepositoryConfig_NpmRepository_PublicRepository> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 5, 3, 0);

/**
 * Configuration for a Python remote repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
 */
export type RemoteRepositoryConfig_PythonRepository = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository"> & {
  /**
   * Address of the remote repository.
   *
   * @generated from oneof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.upstream
   */
  upstream: {
    /**
     * One of the publicly available Python repositories supported by Artifact
     * Registry.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.PublicRepository public_repository = 1;
     */
    value: RemoteRepositoryConfig_PythonRepository_PublicRepository;
    case: "publicRepository";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.
 * Use `create(RemoteRepositoryConfig_PythonRepositorySchema)` to create a new message.
 */
export const RemoteRepositoryConfig_PythonRepositorySchema: GenMessage<RemoteRepositoryConfig_PythonRepository> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5, 4);

/**
 * Predefined list of publicly available Python repositories like PyPI.org.
 *
 * @generated from enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.PublicRepository
 */
export enum RemoteRepositoryConfig_PythonRepository_PublicRepository {
  /**
   * Unspecified repository.
   *
   * @generated from enum value: PUBLIC_REPOSITORY_UNSPECIFIED = 0;
   */
  PUBLIC_REPOSITORY_UNSPECIFIED = 0,

  /**
   * PyPI.
   *
   * @generated from enum value: PYPI = 1;
   */
  PYPI = 1,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.PublicRepository.
 */
export const RemoteRepositoryConfig_PythonRepository_PublicRepositorySchema: GenEnum<RemoteRepositoryConfig_PythonRepository_PublicRepository> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 5, 4, 0);

/**
 * Configuration for an Apt remote repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
 */
export type RemoteRepositoryConfig_AptRepository = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository"> & {
  /**
   * Address of the remote repository.
   *
   * @generated from oneof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.upstream
   */
  upstream: {
    /**
     * One of the publicly available Apt repositories supported by Artifact
     * Registry.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository public_repository = 1;
     */
    value: RemoteRepositoryConfig_AptRepository_PublicRepository;
    case: "publicRepository";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.
 * Use `create(RemoteRepositoryConfig_AptRepositorySchema)` to create a new message.
 */
export const RemoteRepositoryConfig_AptRepositorySchema: GenMessage<RemoteRepositoryConfig_AptRepository> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5, 5);

/**
 * Publicly available Apt repositories constructed from a common repository
 * base and a custom repository path.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
 */
export type RemoteRepositoryConfig_AptRepository_PublicRepository = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository"> & {
  /**
   * A common public repository base for Apt.
   *
   * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.RepositoryBase repository_base = 1;
   */
  repositoryBase: RemoteRepositoryConfig_AptRepository_PublicRepository_RepositoryBase;

  /**
   * A custom field to define a path to a specific repository from the base.
   *
   * @generated from field: string repository_path = 2;
   */
  repositoryPath: string;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.
 * Use `create(RemoteRepositoryConfig_AptRepository_PublicRepositorySchema)` to create a new message.
 */
export const RemoteRepositoryConfig_AptRepository_PublicRepositorySchema: GenMessage<RemoteRepositoryConfig_AptRepository_PublicRepository> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5, 5, 0);

/**
 * Predefined list of publicly available repository bases for Apt.
 *
 * @generated from enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.RepositoryBase
 */
export enum RemoteRepositoryConfig_AptRepository_PublicRepository_RepositoryBase {
  /**
   * Unspecified repository base.
   *
   * @generated from enum value: REPOSITORY_BASE_UNSPECIFIED = 0;
   */
  REPOSITORY_BASE_UNSPECIFIED = 0,

  /**
   * Debian.
   *
   * @generated from enum value: DEBIAN = 1;
   */
  DEBIAN = 1,

  /**
   * Ubuntu LTS/Pro.
   *
   * @generated from enum value: UBUNTU = 2;
   */
  UBUNTU = 2,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.RepositoryBase.
 */
export const RemoteRepositoryConfig_AptRepository_PublicRepository_RepositoryBaseSchema: GenEnum<RemoteRepositoryConfig_AptRepository_PublicRepository_RepositoryBase> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 5, 5, 0, 0);

/**
 * Configuration for a Yum remote repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
 */
export type RemoteRepositoryConfig_YumRepository = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository"> & {
  /**
   * Address of the remote repository.
   *
   * @generated from oneof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.upstream
   */
  upstream: {
    /**
     * One of the publicly available Yum repositories supported by Artifact
     * Registry.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository public_repository = 1;
     */
    value: RemoteRepositoryConfig_YumRepository_PublicRepository;
    case: "publicRepository";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.
 * Use `create(RemoteRepositoryConfig_YumRepositorySchema)` to create a new message.
 */
export const RemoteRepositoryConfig_YumRepositorySchema: GenMessage<RemoteRepositoryConfig_YumRepository> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5, 6);

/**
 * Publicly available Yum repositories constructed from a common repository
 * base and a custom repository path.
 *
 * @generated from message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
 */
export type RemoteRepositoryConfig_YumRepository_PublicRepository = Message<"google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository"> & {
  /**
   * A common public repository base for Yum.
   *
   * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase repository_base = 1;
   */
  repositoryBase: RemoteRepositoryConfig_YumRepository_PublicRepository_RepositoryBase;

  /**
   * A custom field to define a path to a specific repository from the base.
   *
   * @generated from field: string repository_path = 2;
   */
  repositoryPath: string;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.
 * Use `create(RemoteRepositoryConfig_YumRepository_PublicRepositorySchema)` to create a new message.
 */
export const RemoteRepositoryConfig_YumRepository_PublicRepositorySchema: GenMessage<RemoteRepositoryConfig_YumRepository_PublicRepository> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 5, 6, 0);

/**
 * Predefined list of publicly available repository bases for Yum.
 *
 * @generated from enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase
 */
export enum RemoteRepositoryConfig_YumRepository_PublicRepository_RepositoryBase {
  /**
   * Unspecified repository base.
   *
   * @generated from enum value: REPOSITORY_BASE_UNSPECIFIED = 0;
   */
  REPOSITORY_BASE_UNSPECIFIED = 0,

  /**
   * CentOS.
   *
   * @generated from enum value: CENTOS = 1;
   */
  CENTOS = 1,

  /**
   * CentOS Debug.
   *
   * @generated from enum value: CENTOS_DEBUG = 2;
   */
  CENTOS_DEBUG = 2,

  /**
   * CentOS Vault.
   *
   * @generated from enum value: CENTOS_VAULT = 3;
   */
  CENTOS_VAULT = 3,

  /**
   * CentOS Stream.
   *
   * @generated from enum value: CENTOS_STREAM = 4;
   */
  CENTOS_STREAM = 4,

  /**
   * Rocky.
   *
   * @generated from enum value: ROCKY = 5;
   */
  ROCKY = 5,

  /**
   * Fedora Extra Packages for Enterprise Linux (EPEL).
   *
   * @generated from enum value: EPEL = 6;
   */
  EPEL = 6,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase.
 */
export const RemoteRepositoryConfig_YumRepository_PublicRepository_RepositoryBaseSchema: GenEnum<RemoteRepositoryConfig_YumRepository_PublicRepository_RepositoryBase> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 5, 6, 0, 0);

/**
 * A Repository for storing artifacts with a specific format.
 *
 * @generated from message google.devtools.artifactregistry.v1.Repository
 */
export type Repository = Message<"google.devtools.artifactregistry.v1.Repository"> & {
  /**
   * Repository-specific configurations.
   *
   * @generated from oneof google.devtools.artifactregistry.v1.Repository.format_config
   */
  formatConfig: {
    /**
     * Maven repository config contains repository level configuration
     * for the repositories of maven type.
     *
     * @generated from field: google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig maven_config = 9;
     */
    value: Repository_MavenRepositoryConfig;
    case: "mavenConfig";
  } | {
    /**
     * Docker repository config contains repository level configuration
     * for the repositories of docker type.
     *
     * @generated from field: google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig docker_config = 17;
     */
    value: Repository_DockerRepositoryConfig;
    case: "dockerConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Repository configuration specific to the Mode value being selected (Remote
   * or Virtual)
   *
   * @generated from oneof google.devtools.artifactregistry.v1.Repository.mode_config
   */
  modeConfig: {
    /**
     * Configuration specific for a Virtual Repository.
     *
     * @generated from field: google.devtools.artifactregistry.v1.VirtualRepositoryConfig virtual_repository_config = 14;
     */
    value: VirtualRepositoryConfig;
    case: "virtualRepositoryConfig";
  } | {
    /**
     * Configuration specific for a Remote Repository.
     *
     * @generated from field: google.devtools.artifactregistry.v1.RemoteRepositoryConfig remote_repository_config = 15;
     */
    value: RemoteRepositoryConfig;
    case: "remoteRepositoryConfig";
  } | { case: undefined; value?: undefined };

  /**
   * The name of the repository, for example:
   * `projects/p1/locations/us-central1/repositories/repo1`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The format of packages that are stored in the repository.
   *
   * @generated from field: google.devtools.artifactregistry.v1.Repository.Format format = 2;
   */
  format: Repository_Format;

  /**
   * The user-provided description of the repository.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Labels with user-defined metadata.
   * This field may contain up to 64 entries. Label keys and values may be no
   * longer than 63 characters. Label keys must begin with a lowercase letter
   * and may only contain lowercase letters, numeric characters, underscores,
   * and dashes.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Output only. The time when the repository was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the repository was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;

  /**
   * The Cloud KMS resource name of the customer managed encryption key that's
   * used to encrypt the contents of the Repository. Has the form:
   * `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.
   * This value may not be changed after the Repository has been created.
   *
   * @generated from field: string kms_key_name = 8;
   */
  kmsKeyName: string;

  /**
   * Optional. The mode of the repository.
   *
   * @generated from field: google.devtools.artifactregistry.v1.Repository.Mode mode = 10;
   */
  mode: Repository_Mode;

  /**
   * Optional. Cleanup policies for this repository. Cleanup policies indicate
   * when certain package versions can be automatically deleted. Map keys are
   * policy IDs supplied by users during policy creation. They must unique
   * within a repository and be under 128 characters in length.
   *
   * @generated from field: map<string, google.devtools.artifactregistry.v1.CleanupPolicy> cleanup_policies = 12;
   */
  cleanupPolicies: { [key: string]: CleanupPolicy };

  /**
   * Output only. The size, in bytes, of all artifact storage in this
   * repository. Repositories that are generally available or in public preview
   *  use this to calculate storage costs.
   *
   * @generated from field: int64 size_bytes = 13;
   */
  sizeBytes: bigint;

  /**
   * Output only. If set, the repository satisfies physical zone separation.
   *
   * @generated from field: bool satisfies_pzs = 16;
   */
  satisfiesPzs: boolean;

  /**
   * Optional. If true, the cleanup pipeline is prevented from deleting versions
   * in this repository.
   *
   * @generated from field: bool cleanup_policy_dry_run = 18;
   */
  cleanupPolicyDryRun: boolean;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.Repository.
 * Use `create(RepositorySchema)` to create a new message.
 */
export const RepositorySchema: GenMessage<Repository> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 6);

/**
 * MavenRepositoryConfig is maven related repository details.
 * Provides additional configuration details for repositories of the maven
 * format type.
 *
 * @generated from message google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
 */
export type Repository_MavenRepositoryConfig = Message<"google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig"> & {
  /**
   * The repository with this flag will allow publishing
   * the same snapshot versions.
   *
   * @generated from field: bool allow_snapshot_overwrites = 1;
   */
  allowSnapshotOverwrites: boolean;

  /**
   * Version policy defines the versions that the registry will accept.
   *
   * @generated from field: google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.VersionPolicy version_policy = 2;
   */
  versionPolicy: Repository_MavenRepositoryConfig_VersionPolicy;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.
 * Use `create(Repository_MavenRepositoryConfigSchema)` to create a new message.
 */
export const Repository_MavenRepositoryConfigSchema: GenMessage<Repository_MavenRepositoryConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 6, 0);

/**
 * VersionPolicy is the version policy for the repository.
 *
 * @generated from enum google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.VersionPolicy
 */
export enum Repository_MavenRepositoryConfig_VersionPolicy {
  /**
   * VERSION_POLICY_UNSPECIFIED - the version policy is not defined.
   * When the version policy is not defined, no validation is performed
   * for the versions.
   *
   * @generated from enum value: VERSION_POLICY_UNSPECIFIED = 0;
   */
  VERSION_POLICY_UNSPECIFIED = 0,

  /**
   * RELEASE - repository will accept only Release versions.
   *
   * @generated from enum value: RELEASE = 1;
   */
  RELEASE = 1,

  /**
   * SNAPSHOT - repository will accept only Snapshot versions.
   *
   * @generated from enum value: SNAPSHOT = 2;
   */
  SNAPSHOT = 2,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.VersionPolicy.
 */
export const Repository_MavenRepositoryConfig_VersionPolicySchema: GenEnum<Repository_MavenRepositoryConfig_VersionPolicy> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 6, 0, 0);

/**
 * DockerRepositoryConfig is docker related repository details.
 * Provides additional configuration details for repositories of the docker
 * format type.
 *
 * @generated from message google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
 */
export type Repository_DockerRepositoryConfig = Message<"google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig"> & {
  /**
   * The repository which enabled this flag prevents all tags from being
   * modified, moved or deleted. This does not prevent tags from being
   * created.
   *
   * @generated from field: bool immutable_tags = 1;
   */
  immutableTags: boolean;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig.
 * Use `create(Repository_DockerRepositoryConfigSchema)` to create a new message.
 */
export const Repository_DockerRepositoryConfigSchema: GenMessage<Repository_DockerRepositoryConfig> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 6, 1);

/**
 * A package format.
 *
 * @generated from enum google.devtools.artifactregistry.v1.Repository.Format
 */
export enum Repository_Format {
  /**
   * Unspecified package format.
   *
   * @generated from enum value: FORMAT_UNSPECIFIED = 0;
   */
  FORMAT_UNSPECIFIED = 0,

  /**
   * Docker package format.
   *
   * @generated from enum value: DOCKER = 1;
   */
  DOCKER = 1,

  /**
   * Maven package format.
   *
   * @generated from enum value: MAVEN = 2;
   */
  MAVEN = 2,

  /**
   * NPM package format.
   *
   * @generated from enum value: NPM = 3;
   */
  NPM = 3,

  /**
   * APT package format.
   *
   * @generated from enum value: APT = 5;
   */
  APT = 5,

  /**
   * YUM package format.
   *
   * @generated from enum value: YUM = 6;
   */
  YUM = 6,

  /**
   * Python package format.
   *
   * @generated from enum value: PYTHON = 8;
   */
  PYTHON = 8,

  /**
   * Kubeflow Pipelines package format.
   *
   * @generated from enum value: KFP = 9;
   */
  KFP = 9,

  /**
   * Go package format.
   *
   * @generated from enum value: GO = 10;
   */
  GO = 10,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.Repository.Format.
 */
export const Repository_FormatSchema: GenEnum<Repository_Format> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 6, 0);

/**
 * The mode configures the repository to serve artifacts from different
 * sources.
 *
 * @generated from enum google.devtools.artifactregistry.v1.Repository.Mode
 */
export enum Repository_Mode {
  /**
   * Unspecified mode.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * A standard repository storing artifacts.
   *
   * @generated from enum value: STANDARD_REPOSITORY = 1;
   */
  STANDARD_REPOSITORY = 1,

  /**
   * A virtual repository to serve artifacts from one or more sources.
   *
   * @generated from enum value: VIRTUAL_REPOSITORY = 2;
   */
  VIRTUAL_REPOSITORY = 2,

  /**
   * A remote repository to serve artifacts from a remote source.
   *
   * @generated from enum value: REMOTE_REPOSITORY = 3;
   */
  REMOTE_REPOSITORY = 3,
}

/**
 * Describes the enum google.devtools.artifactregistry.v1.Repository.Mode.
 */
export const Repository_ModeSchema: GenEnum<Repository_Mode> = /*@__PURE__*/
  enumDesc(file_google_devtools_artifactregistry_v1_repository, 6, 1);

/**
 * The request to list repositories.
 *
 * @generated from message google.devtools.artifactregistry.v1.ListRepositoriesRequest
 */
export type ListRepositoriesRequest = Message<"google.devtools.artifactregistry.v1.ListRepositoriesRequest"> & {
  /**
   * Required. The name of the parent resource whose repositories will be
   * listed.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of repositories to return. Maximum page size is 1,000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request, if any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.ListRepositoriesRequest.
 * Use `create(ListRepositoriesRequestSchema)` to create a new message.
 */
export const ListRepositoriesRequestSchema: GenMessage<ListRepositoriesRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 7);

/**
 * The response from listing repositories.
 *
 * @generated from message google.devtools.artifactregistry.v1.ListRepositoriesResponse
 */
export type ListRepositoriesResponse = Message<"google.devtools.artifactregistry.v1.ListRepositoriesResponse"> & {
  /**
   * The repositories returned.
   *
   * @generated from field: repeated google.devtools.artifactregistry.v1.Repository repositories = 1;
   */
  repositories: Repository[];

  /**
   * The token to retrieve the next page of repositories, or empty if there are
   * no more repositories to return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.ListRepositoriesResponse.
 * Use `create(ListRepositoriesResponseSchema)` to create a new message.
 */
export const ListRepositoriesResponseSchema: GenMessage<ListRepositoriesResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 8);

/**
 * The request to retrieve a repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.GetRepositoryRequest
 */
export type GetRepositoryRequest = Message<"google.devtools.artifactregistry.v1.GetRepositoryRequest"> & {
  /**
   * Required. The name of the repository to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.GetRepositoryRequest.
 * Use `create(GetRepositoryRequestSchema)` to create a new message.
 */
export const GetRepositoryRequestSchema: GenMessage<GetRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 9);

/**
 * The request to create a new repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.CreateRepositoryRequest
 */
export type CreateRepositoryRequest = Message<"google.devtools.artifactregistry.v1.CreateRepositoryRequest"> & {
  /**
   * Required. The name of the parent resource where the repository will be
   * created.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The repository id to use for this repository.
   *
   * @generated from field: string repository_id = 2;
   */
  repositoryId: string;

  /**
   * Required. The repository to be created.
   *
   * @generated from field: google.devtools.artifactregistry.v1.Repository repository = 3;
   */
  repository?: Repository;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.CreateRepositoryRequest.
 * Use `create(CreateRepositoryRequestSchema)` to create a new message.
 */
export const CreateRepositoryRequestSchema: GenMessage<CreateRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 10);

/**
 * The request to update a repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.UpdateRepositoryRequest
 */
export type UpdateRepositoryRequest = Message<"google.devtools.artifactregistry.v1.UpdateRepositoryRequest"> & {
  /**
   * The repository that replaces the resource on the server.
   *
   * @generated from field: google.devtools.artifactregistry.v1.Repository repository = 1;
   */
  repository?: Repository;

  /**
   * The update mask applies to the resource. For the `FieldMask` definition,
   * see
   * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.UpdateRepositoryRequest.
 * Use `create(UpdateRepositoryRequestSchema)` to create a new message.
 */
export const UpdateRepositoryRequestSchema: GenMessage<UpdateRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 11);

/**
 * The request to delete a repository.
 *
 * @generated from message google.devtools.artifactregistry.v1.DeleteRepositoryRequest
 */
export type DeleteRepositoryRequest = Message<"google.devtools.artifactregistry.v1.DeleteRepositoryRequest"> & {
  /**
   * Required. The name of the repository to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.devtools.artifactregistry.v1.DeleteRepositoryRequest.
 * Use `create(DeleteRepositoryRequestSchema)` to create a new message.
 */
export const DeleteRepositoryRequestSchema: GenMessage<DeleteRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_artifactregistry_v1_repository, 12);

