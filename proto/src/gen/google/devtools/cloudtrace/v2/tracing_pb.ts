// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/cloudtrace/v2/tracing.proto (package google.devtools.cloudtrace.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Span, SpanSchema } from "./trace_pb";
import { file_google_devtools_cloudtrace_v2_trace } from "./trace_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/cloudtrace/v2/tracing.proto.
 */
export const file_google_devtools_cloudtrace_v2_tracing: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvZGV2dG9vbHMvY2xvdWR0cmFjZS92Mi90cmFjaW5nLnByb3RvEh1nb29nbGUuZGV2dG9vbHMuY2xvdWR0cmFjZS52MiKUAQoWQmF0Y2hXcml0ZVNwYW5zUmVxdWVzdBJBCgRuYW1lGAEgASgJQjPgQQL6QS0KK2Nsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1Byb2plY3QSNwoFc3BhbnMYAiADKAsyIy5nb29nbGUuZGV2dG9vbHMuY2xvdWR0cmFjZS52Mi5TcGFuQgPgQQIyugMKDFRyYWNlU2VydmljZRKhAQoPQmF0Y2hXcml0ZVNwYW5zEjUuZ29vZ2xlLmRldnRvb2xzLmNsb3VkdHJhY2UudjIuQmF0Y2hXcml0ZVNwYW5zUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSI/2kEKbmFtZSxzcGFuc4LT5JMCLDoBKiInL3YyL3tuYW1lPXByb2plY3RzLyp9L3RyYWNlczpiYXRjaFdyaXRlEokBCgpDcmVhdGVTcGFuEiMuZ29vZ2xlLmRldnRvb2xzLmNsb3VkdHJhY2UudjIuU3BhbhojLmdvb2dsZS5kZXZ0b29scy5jbG91ZHRyYWNlLnYyLlNwYW4iMYLT5JMCKzoBKiImL3YyL3tuYW1lPXByb2plY3RzLyovdHJhY2VzLyovc3BhbnMvKn0aespBGWNsb3VkdHJhY2UuZ29vZ2xlYXBpcy5jb23SQVtodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvdHJhY2UuYXBwZW5kQq8BCiFjb20uZ29vZ2xlLmRldnRvb2xzLmNsb3VkdHJhY2UudjJCDFRyYWNpbmdQcm90b1ABWi9jbG91ZC5nb29nbGUuY29tL2dvL3RyYWNlL2FwaXYyL3RyYWNlcGI7dHJhY2VwYqoCFUdvb2dsZS5DbG91ZC5UcmFjZS5WMsoCFUdvb2dsZVxDbG91ZFxUcmFjZVxWMuoCGEdvb2dsZTo6Q2xvdWQ6OlRyYWNlOjpWMmIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_devtools_cloudtrace_v2_trace, file_google_protobuf_empty]);

/**
 * The request message for the `BatchWriteSpans` method.
 *
 * @generated from message google.devtools.cloudtrace.v2.BatchWriteSpansRequest
 */
export type BatchWriteSpansRequest = Message<"google.devtools.cloudtrace.v2.BatchWriteSpansRequest"> & {
  /**
   * Required. The name of the project where the spans belong. The format is
   * `projects/[PROJECT_ID]`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. A list of new spans. The span names must not match existing
   * spans, otherwise the results are undefined.
   *
   * @generated from field: repeated google.devtools.cloudtrace.v2.Span spans = 2;
   */
  spans: Span[];
};

/**
 * Describes the message google.devtools.cloudtrace.v2.BatchWriteSpansRequest.
 * Use `create(BatchWriteSpansRequestSchema)` to create a new message.
 */
export const BatchWriteSpansRequestSchema: GenMessage<BatchWriteSpansRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudtrace_v2_tracing, 0);

/**
 * Service for collecting and viewing traces and spans within a trace.
 *
 * A trace is a collection of spans corresponding to a single
 * operation or a set of operations in an application.
 *
 * A span is an individual timed event which forms a node of the trace tree.
 * A single trace can contain spans from multiple services.
 *
 * @generated from service google.devtools.cloudtrace.v2.TraceService
 */
export const TraceService: GenService<{
  /**
   * Batch writes new spans to new or existing traces. You cannot update
   * existing spans.
   *
   * @generated from rpc google.devtools.cloudtrace.v2.TraceService.BatchWriteSpans
   */
  batchWriteSpans: {
    methodKind: "unary";
    input: typeof BatchWriteSpansRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Creates a new span.
   *
   * @generated from rpc google.devtools.cloudtrace.v2.TraceService.CreateSpan
   */
  createSpan: {
    methodKind: "unary";
    input: typeof SpanSchema;
    output: typeof SpanSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_devtools_cloudtrace_v2_tracing, 0);

