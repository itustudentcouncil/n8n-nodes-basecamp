// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/cloudprofiler/v2/profiler.proto (package google.devtools.cloudprofiler.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Duration, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/cloudprofiler/v2/profiler.proto.
 */
export const file_google_devtools_cloudprofiler_v2_profiler: GenFile = /*@__PURE__*/
  fileDesc("Ci9nb29nbGUvZGV2dG9vbHMvY2xvdWRwcm9maWxlci92Mi9wcm9maWxlci5wcm90bxIgZ29vZ2xlLmRldnRvb2xzLmNsb3VkcHJvZmlsZXIudjIi3wEKFENyZWF0ZVByb2ZpbGVSZXF1ZXN0EkAKBnBhcmVudBgEIAEoCUIw+kEtCitjbG91ZHJlc291cmNlbWFuYWdlci5nb29nbGVhcGlzLmNvbS9Qcm9qZWN0EkAKCmRlcGxveW1lbnQYASABKAsyLC5nb29nbGUuZGV2dG9vbHMuY2xvdWRwcm9maWxlci52Mi5EZXBsb3ltZW50EkMKDHByb2ZpbGVfdHlwZRgCIAMoDjItLmdvb2dsZS5kZXZ0b29scy5jbG91ZHByb2ZpbGVyLnYyLlByb2ZpbGVUeXBlIpsBChtDcmVhdGVPZmZsaW5lUHJvZmlsZVJlcXVlc3QSQAoGcGFyZW50GAEgASgJQjD6QS0KK2Nsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1Byb2plY3QSOgoHcHJvZmlsZRgCIAEoCzIpLmdvb2dsZS5kZXZ0b29scy5jbG91ZHByb2ZpbGVyLnYyLlByb2ZpbGUigwEKFFVwZGF0ZVByb2ZpbGVSZXF1ZXN0EjoKB3Byb2ZpbGUYASABKAsyKS5nb29nbGUuZGV2dG9vbHMuY2xvdWRwcm9maWxlci52Mi5Qcm9maWxlEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayLuAwoHUHJvZmlsZRIRCgRuYW1lGAEgASgJQgPgQQMSQwoMcHJvZmlsZV90eXBlGAIgASgOMi0uZ29vZ2xlLmRldnRvb2xzLmNsb3VkcHJvZmlsZXIudjIuUHJvZmlsZVR5cGUSQAoKZGVwbG95bWVudBgDIAEoCzIsLmdvb2dsZS5kZXZ0b29scy5jbG91ZHByb2ZpbGVyLnYyLkRlcGxveW1lbnQSKwoIZHVyYXRpb24YBCABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SGgoNcHJvZmlsZV9ieXRlcxgFIAEoDEID4EEEEkoKBmxhYmVscxgGIAMoCzI1Lmdvb2dsZS5kZXZ0b29scy5jbG91ZHByb2ZpbGVyLnYyLlByb2ZpbGUuTGFiZWxzRW50cnlCA+BBBBIzCgpzdGFydF90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6UOpBTQokY2xvdWRwcm9maWxlci5nb29nbGVhcGlzLmNvbS9Qcm9maWxlEiVwcm9qZWN0cy97cHJvamVjdH0vcHJvZmlsZXMve3Byb2ZpbGV9IqkBCgpEZXBsb3ltZW50EhIKCnByb2plY3RfaWQYASABKAkSDgoGdGFyZ2V0GAIgASgJEkgKBmxhYmVscxgDIAMoCzI4Lmdvb2dsZS5kZXZ0b29scy5jbG91ZHByb2ZpbGVyLnYyLkRlcGxveW1lbnQuTGFiZWxzRW50cnkaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKBAQoTTGlzdFByb2ZpbGVzUmVxdWVzdBJDCgZwYXJlbnQYASABKAlCM+BBAvpBLQorY2xvdWRyZXNvdXJjZW1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vUHJvamVjdBIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSKGAQoUTGlzdFByb2ZpbGVzUmVzcG9uc2USOwoIcHJvZmlsZXMYASADKAsyKS5nb29nbGUuZGV2dG9vbHMuY2xvdWRwcm9maWxlci52Mi5Qcm9maWxlEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRIYChBza2lwcGVkX3Byb2ZpbGVzGAMgASgFKoQBCgtQcm9maWxlVHlwZRIcChhQUk9GSUxFX1RZUEVfVU5TUEVDSUZJRUQQABIHCgNDUFUQARIICgRXQUxMEAISCAoESEVBUBADEgsKB1RIUkVBRFMQBBIOCgpDT05URU5USU9OEAUSDQoJUEVBS19IRUFQEAYSDgoKSEVBUF9BTExPQxAHMv4FCg9Qcm9maWxlclNlcnZpY2USnwEKDUNyZWF0ZVByb2ZpbGUSNi5nb29nbGUuZGV2dG9vbHMuY2xvdWRwcm9maWxlci52Mi5DcmVhdGVQcm9maWxlUmVxdWVzdBopLmdvb2dsZS5kZXZ0b29scy5jbG91ZHByb2ZpbGVyLnYyLlByb2ZpbGUiK4LT5JMCJToBKiIgL3YyL3twYXJlbnQ9cHJvamVjdHMvKn0vcHJvZmlsZXMS0gEKFENyZWF0ZU9mZmxpbmVQcm9maWxlEj0uZ29vZ2xlLmRldnRvb2xzLmNsb3VkcHJvZmlsZXIudjIuQ3JlYXRlT2ZmbGluZVByb2ZpbGVSZXF1ZXN0GikuZ29vZ2xlLmRldnRvb2xzLmNsb3VkcHJvZmlsZXIudjIuUHJvZmlsZSJQ2kEOcGFyZW50LHByb2ZpbGWC0+STAjk6B3Byb2ZpbGUiLi92Mi97cGFyZW50PXByb2plY3RzLyp9L3Byb2ZpbGVzOmNyZWF0ZU9mZmxpbmUSwwEKDVVwZGF0ZVByb2ZpbGUSNi5nb29nbGUuZGV2dG9vbHMuY2xvdWRwcm9maWxlci52Mi5VcGRhdGVQcm9maWxlUmVxdWVzdBopLmdvb2dsZS5kZXZ0b29scy5jbG91ZHByb2ZpbGVyLnYyLlByb2ZpbGUiT9pBE3Byb2ZpbGUsdXBkYXRlX21hc2uC0+STAjM6B3Byb2ZpbGUyKC92Mi97cHJvZmlsZS5uYW1lPXByb2plY3RzLyovcHJvZmlsZXMvKn0arQHKQRxjbG91ZHByb2ZpbGVyLmdvb2dsZWFwaXMuY29t0kGKAWh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9tb25pdG9yaW5nLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvbW9uaXRvcmluZy53cml0ZTLyAgoNRXhwb3J0U2VydmljZRKwAQoMTGlzdFByb2ZpbGVzEjUuZ29vZ2xlLmRldnRvb2xzLmNsb3VkcHJvZmlsZXIudjIuTGlzdFByb2ZpbGVzUmVxdWVzdBo2Lmdvb2dsZS5kZXZ0b29scy5jbG91ZHByb2ZpbGVyLnYyLkxpc3RQcm9maWxlc1Jlc3BvbnNlIjHaQQZwYXJlbnSC0+STAiISIC92Mi97cGFyZW50PXByb2plY3RzLyp9L3Byb2ZpbGVzGq0BykEcY2xvdWRwcm9maWxlci5nb29nbGVhcGlzLmNvbdJBigFodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvbW9uaXRvcmluZyxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL21vbml0b3Jpbmcud3JpdGVC1AEKJGNvbS5nb29nbGUuZGV2dG9vbHMuY2xvdWRwcm9maWxlci52MkINUHJvZmlsZXJQcm90b1ABWkdjbG91ZC5nb29nbGUuY29tL2dvL2Nsb3VkcHJvZmlsZXIvYXBpdjIvY2xvdWRwcm9maWxlcnBiO2Nsb3VkcHJvZmlsZXJwYqoCGEdvb2dsZS5DbG91ZC5Qcm9maWxlci5WMsoCGEdvb2dsZVxDbG91ZFxQcm9maWxlclxWMuoCG0dvb2dsZTo6Q2xvdWQ6OlByb2ZpbGVyOjpWMmIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * CreateProfileRequest describes a profile resource online creation request.
 * The deployment field must be populated. The profile_type specifies the list
 * of profile types supported by the agent. The creation call will hang until a
 * profile of one of these types needs to be collected.
 *
 *
 * @generated from message google.devtools.cloudprofiler.v2.CreateProfileRequest
 */
export type CreateProfileRequest = Message<"google.devtools.cloudprofiler.v2.CreateProfileRequest"> & {
  /**
   * Parent project to create the profile in.
   *
   * @generated from field: string parent = 4;
   */
  parent: string;

  /**
   * Deployment details.
   *
   * @generated from field: google.devtools.cloudprofiler.v2.Deployment deployment = 1;
   */
  deployment?: Deployment;

  /**
   * One or more profile types that the agent is capable of providing.
   *
   * @generated from field: repeated google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
   */
  profileType: ProfileType[];
};

/**
 * Describes the message google.devtools.cloudprofiler.v2.CreateProfileRequest.
 * Use `create(CreateProfileRequestSchema)` to create a new message.
 */
export const CreateProfileRequestSchema: GenMessage<CreateProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudprofiler_v2_profiler, 0);

/**
 * CreateOfflineProfileRequest describes a profile resource offline creation
 * request.
 *
 * @generated from message google.devtools.cloudprofiler.v2.CreateOfflineProfileRequest
 */
export type CreateOfflineProfileRequest = Message<"google.devtools.cloudprofiler.v2.CreateOfflineProfileRequest"> & {
  /**
   * Parent project to create the profile in.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Contents of the profile to create.
   *
   * @generated from field: google.devtools.cloudprofiler.v2.Profile profile = 2;
   */
  profile?: Profile;
};

/**
 * Describes the message google.devtools.cloudprofiler.v2.CreateOfflineProfileRequest.
 * Use `create(CreateOfflineProfileRequestSchema)` to create a new message.
 */
export const CreateOfflineProfileRequestSchema: GenMessage<CreateOfflineProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudprofiler_v2_profiler, 1);

/**
 * UpdateProfileRequest contains the profile to update.
 *
 * @generated from message google.devtools.cloudprofiler.v2.UpdateProfileRequest
 */
export type UpdateProfileRequest = Message<"google.devtools.cloudprofiler.v2.UpdateProfileRequest"> & {
  /**
   * Profile to update.
   *
   * @generated from field: google.devtools.cloudprofiler.v2.Profile profile = 1;
   */
  profile?: Profile;

  /**
   * Field mask used to specify the fields to be overwritten. Currently only
   * profile_bytes and labels fields are supported by UpdateProfile, so only
   * those fields can be specified in the mask. When no mask is provided, all
   * fields are overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.devtools.cloudprofiler.v2.UpdateProfileRequest.
 * Use `create(UpdateProfileRequestSchema)` to create a new message.
 */
export const UpdateProfileRequestSchema: GenMessage<UpdateProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudprofiler_v2_profiler, 2);

/**
 * Profile resource.
 *
 * @generated from message google.devtools.cloudprofiler.v2.Profile
 */
export type Profile = Message<"google.devtools.cloudprofiler.v2.Profile"> & {
  /**
   * Output only. Opaque, server-assigned, unique ID for this profile.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Type of profile.
   * For offline mode, this must be specified when creating the profile. For
   * online mode it is assigned and returned by the server.
   *
   * @generated from field: google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
   */
  profileType: ProfileType;

  /**
   * Deployment this profile corresponds to.
   *
   * @generated from field: google.devtools.cloudprofiler.v2.Deployment deployment = 3;
   */
  deployment?: Deployment;

  /**
   * Duration of the profiling session.
   * Input (for the offline mode) or output (for the online mode).
   * The field represents requested profiling duration. It may slightly differ
   * from the effective profiling duration, which is recorded in the profile
   * data, in case the profiling can't be stopped immediately (e.g. in case
   * stopping the profiling is handled asynchronously).
   *
   * @generated from field: google.protobuf.Duration duration = 4;
   */
  duration?: Duration;

  /**
   * Input only. Profile bytes, as a gzip compressed serialized proto, the
   * format is https://github.com/google/pprof/blob/master/proto/profile.proto.
   *
   * @generated from field: bytes profile_bytes = 5;
   */
  profileBytes: Uint8Array;

  /**
   * Input only. Labels associated to this specific profile. These labels will
   * get merged with the deployment labels for the final data set. See
   * documentation on deployment labels for validation rules and limits.
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };

  /**
   * Output only. Start time for the profile.
   * This output is only present in response from the ListProfiles method.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 7;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message google.devtools.cloudprofiler.v2.Profile.
 * Use `create(ProfileSchema)` to create a new message.
 */
export const ProfileSchema: GenMessage<Profile> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudprofiler_v2_profiler, 3);

/**
 * Deployment contains the deployment identification information.
 *
 * @generated from message google.devtools.cloudprofiler.v2.Deployment
 */
export type Deployment = Message<"google.devtools.cloudprofiler.v2.Deployment"> & {
  /**
   * Project ID is the ID of a cloud project.
   * Validation regex: `^[a-z][-a-z0-9:.]{4,61}[a-z0-9]$`.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Target is the service name used to group related deployments:
   * * Service name for App Engine Flex / Standard.
   * * Cluster and container name for GKE.
   * * User-specified string for direct Compute Engine profiling (e.g. Java).
   * * Job name for Dataflow.
   * Validation regex: `^[a-z0-9]([-a-z0-9_.]{0,253}[a-z0-9])?$`.
   *
   * @generated from field: string target = 2;
   */
  target: string;

  /**
   * Labels identify the deployment within the user universe and same target.
   * Validation regex for label names: `^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$`.
   * Value for an individual label must be <= 512 bytes, the total
   * size of all label names and values must be <= 1024 bytes.
   *
   * Label named "language" can be used to record the programming language of
   * the profiled deployment. The standard choices for the value include "java",
   * "go", "python", "ruby", "nodejs", "php", "dotnet".
   *
   * For deployments running on Google Cloud Platform, "zone" or "region" label
   * should be present describing the deployment location. An example of a zone
   * is "us-central1-a", an example of a region is "us-central1" or
   * "us-central".
   *
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.devtools.cloudprofiler.v2.Deployment.
 * Use `create(DeploymentSchema)` to create a new message.
 */
export const DeploymentSchema: GenMessage<Deployment> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudprofiler_v2_profiler, 4);

/**
 * ListProfilesRequest contains request parameters for listing profiles for
 * deployments in projects which the user has permissions to view.
 *
 * @generated from message google.devtools.cloudprofiler.v2.ListProfilesRequest
 */
export type ListProfilesRequest = Message<"google.devtools.cloudprofiler.v2.ListProfilesRequest"> & {
  /**
   * Required. The parent, which owns this collection of profiles.
   * Format: projects/{user_project_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return.
   * Default page_size is 1000.
   * Max limit is 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The token to continue pagination and get profiles from a particular page.
   * When paginating, all other parameters provided to `ListProfiles` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.devtools.cloudprofiler.v2.ListProfilesRequest.
 * Use `create(ListProfilesRequestSchema)` to create a new message.
 */
export const ListProfilesRequestSchema: GenMessage<ListProfilesRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudprofiler_v2_profiler, 5);

/**
 * ListProfileResponse contains the list of collected profiles for deployments
 * in projects which the user has permissions to view.
 *
 * @generated from message google.devtools.cloudprofiler.v2.ListProfilesResponse
 */
export type ListProfilesResponse = Message<"google.devtools.cloudprofiler.v2.ListProfilesResponse"> & {
  /**
   * List of profiles fetched.
   *
   * @generated from field: repeated google.devtools.cloudprofiler.v2.Profile profiles = 1;
   */
  profiles: Profile[];

  /**
   * Token to receive the next page of results.
   * This field maybe empty if there are no more profiles to fetch.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Number of profiles that were skipped in the current page since they were
   * not able to be fetched successfully. This should typically be zero. A
   * non-zero value may indicate a transient failure, in which case if the
   * number is too high for your use case, the call may be retried.
   *
   * @generated from field: int32 skipped_profiles = 3;
   */
  skippedProfiles: number;
};

/**
 * Describes the message google.devtools.cloudprofiler.v2.ListProfilesResponse.
 * Use `create(ListProfilesResponseSchema)` to create a new message.
 */
export const ListProfilesResponseSchema: GenMessage<ListProfilesResponse> = /*@__PURE__*/
  messageDesc(file_google_devtools_cloudprofiler_v2_profiler, 6);

/**
 * ProfileType is type of profiling data.
 * NOTE: the enumeration member names are used (in lowercase) as unique string
 * identifiers of profile types, so they must not be renamed.
 *
 * @generated from enum google.devtools.cloudprofiler.v2.ProfileType
 */
export enum ProfileType {
  /**
   * Unspecified profile type.
   *
   * @generated from enum value: PROFILE_TYPE_UNSPECIFIED = 0;
   */
  PROFILE_TYPE_UNSPECIFIED = 0,

  /**
   * Thread CPU time sampling.
   *
   * @generated from enum value: CPU = 1;
   */
  CPU = 1,

  /**
   * Wallclock time sampling. More expensive as stops all threads.
   *
   * @generated from enum value: WALL = 2;
   */
  WALL = 2,

  /**
   * In-use heap profile. Represents a snapshot of the allocations that are
   * live at the time of the profiling.
   *
   * @generated from enum value: HEAP = 3;
   */
  HEAP = 3,

  /**
   * Single-shot collection of all thread stacks.
   *
   * @generated from enum value: THREADS = 4;
   */
  THREADS = 4,

  /**
   * Synchronization contention profile.
   *
   * @generated from enum value: CONTENTION = 5;
   */
  CONTENTION = 5,

  /**
   * Peak heap profile.
   *
   * @generated from enum value: PEAK_HEAP = 6;
   */
  PEAK_HEAP = 6,

  /**
   * Heap allocation profile. It represents the aggregation of all allocations
   * made over the duration of the profile. All allocations are included,
   * including those that might have been freed by the end of the profiling
   * interval. The profile is in particular useful for garbage collecting
   * languages to understand which parts of the code create most of the garbage
   * collection pressure to see if those can be optimized.
   *
   * @generated from enum value: HEAP_ALLOC = 7;
   */
  HEAP_ALLOC = 7,
}

/**
 * Describes the enum google.devtools.cloudprofiler.v2.ProfileType.
 */
export const ProfileTypeSchema: GenEnum<ProfileType> = /*@__PURE__*/
  enumDesc(file_google_devtools_cloudprofiler_v2_profiler, 0);

/**
 * Manage the collection of continuous profiling data provided by profiling
 * agents running in the cloud or by an offline provider of profiling data.
 *
 * __The APIs listed in this service are intended for use within our profiler
 * agents only.__
 *
 * @generated from service google.devtools.cloudprofiler.v2.ProfilerService
 */
export const ProfilerService: GenService<{
  /**
   * CreateProfile creates a new profile resource in the online mode.
   *
   * _Direct use of this API is discouraged, please use a [supported
   * profiler
   * agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
   * instead for profile collection._
   *
   * The server ensures that the new profiles are created at a constant rate per
   * deployment, so the creation request may hang for some time until the next
   * profile session is available.
   *
   * The request may fail with ABORTED error if the creation is not available
   * within ~1m, the response will indicate the duration of the backoff the
   * client should take before attempting creating a profile again. The backoff
   * duration is returned in google.rpc.RetryInfo extension on the response
   * status. To a gRPC client, the extension will be return as a
   * binary-serialized proto in the trailing metadata item named
   * "google.rpc.retryinfo-bin".
   *
   *
   * @generated from rpc google.devtools.cloudprofiler.v2.ProfilerService.CreateProfile
   */
  createProfile: {
    methodKind: "unary";
    input: typeof CreateProfileRequestSchema;
    output: typeof ProfileSchema;
  },
  /**
   * CreateOfflineProfile creates a new profile resource in the offline
   * mode. The client provides the profile to create along with the profile
   * bytes, the server records it.
   *
   * _Direct use of this API is discouraged, please use a [supported
   * profiler
   * agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
   * instead for profile collection._
   *
   * @generated from rpc google.devtools.cloudprofiler.v2.ProfilerService.CreateOfflineProfile
   */
  createOfflineProfile: {
    methodKind: "unary";
    input: typeof CreateOfflineProfileRequestSchema;
    output: typeof ProfileSchema;
  },
  /**
   * UpdateProfile updates the profile bytes and labels on the profile resource
   * created in the online mode. Updating the bytes for profiles created in the
   * offline mode is currently not supported: the profile content must be
   * provided at the time of the profile creation.
   *
   * _Direct use of this API is discouraged, please use a [supported
   * profiler
   * agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
   * instead for profile collection._
   *
   * @generated from rpc google.devtools.cloudprofiler.v2.ProfilerService.UpdateProfile
   */
  updateProfile: {
    methodKind: "unary";
    input: typeof UpdateProfileRequestSchema;
    output: typeof ProfileSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_devtools_cloudprofiler_v2_profiler, 0);

/**
 * Service allows existing Cloud Profiler customers to export their profile data
 * out of Google Cloud.
 *
 * @generated from service google.devtools.cloudprofiler.v2.ExportService
 */
export const ExportService: GenService<{
  /**
   * Lists profiles which have been collected so far and for which the caller
   * has permission to view.
   *
   * @generated from rpc google.devtools.cloudprofiler.v2.ExportService.ListProfiles
   */
  listProfiles: {
    methodKind: "unary";
    input: typeof ListProfilesRequestSchema;
    output: typeof ListProfilesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_devtools_cloudprofiler_v2_profiler, 1);

