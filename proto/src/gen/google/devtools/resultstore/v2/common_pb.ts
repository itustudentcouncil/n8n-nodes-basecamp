// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/resultstore/v2/common.proto (package google.devtools.resultstore.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/resultstore/v2/common.proto.
 */
export const file_google_devtools_resultstore_v2_common: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvZGV2dG9vbHMvcmVzdWx0c3RvcmUvdjIvY29tbW9uLnByb3RvEh5nb29nbGUuZGV2dG9vbHMucmVzdWx0c3RvcmUudjIiXwoQU3RhdHVzQXR0cmlidXRlcxI2CgZzdGF0dXMYASABKA4yJi5nb29nbGUuZGV2dG9vbHMucmVzdWx0c3RvcmUudjIuU3RhdHVzEhMKC2Rlc2NyaXB0aW9uGAIgASgJIiYKCFByb3BlcnR5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCSJlCgZUaW1pbmcSLgoKc3RhcnRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoIZHVyYXRpb24YAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24i+AEKCkRlcGVuZGVuY3kSFQoGdGFyZ2V0GAEgASgJQgPgQQNIABIgChFjb25maWd1cmVkX3RhcmdldBgCIAEoCUID4EEDSAASFQoGYWN0aW9uGAMgASgJQgPgQQNIABI5CgJpZBgFIAEoCzItLmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52Mi5EZXBlbmRlbmN5LklkEg0KBWxhYmVsGAQgASgJGkQKAklkEhEKCXRhcmdldF9pZBgCIAEoCRIYChBjb25maWd1cmF0aW9uX2lkGAMgASgJEhEKCWFjdGlvbl9pZBgEIAEoCUIKCghyZXNvdXJjZSrtAQoITGFuZ3VhZ2USGAoUTEFOR1VBR0VfVU5TUEVDSUZJRUQQABIICgROT05FEAESCwoHQU5EUk9JRBACEgYKAkFTEAMSBgoCQ0MQBBIHCgNDU1MQBRIICgREQVJUEAYSBgoCR08QBxIHCgNHV1QQCBILCgdIQVNLRUxMEAkSCAoESkFWQRAKEgYKAkpTEAsSCAoETElTUBAMEggKBE9CSkMQDRIGCgJQWRAOEgYKAlNIEA8SCQoFU1dJRlQQEBIGCgJUUxASEgcKA1dFQhATEgkKBVNDQUxBEBQSCQoFUFJPVE8QFRIHCgNYTUwQFirXAQoGU3RhdHVzEhYKElNUQVRVU19VTlNQRUNJRklFRBAAEgwKCEJVSUxESU5HEAESCQoFQlVJTFQQAhITCg9GQUlMRURfVE9fQlVJTEQQAxILCgdURVNUSU5HEAQSCgoGUEFTU0VEEAUSCgoGRkFJTEVEEAYSDQoJVElNRURfT1VUEAcSDQoJQ0FOQ0VMTEVEEAgSDwoLVE9PTF9GQUlMRUQQCRIOCgpJTkNPTVBMRVRFEAoSCQoFRkxBS1kQCxILCgdVTktOT1dOEAwSCwoHU0tJUFBFRBANKmAKDFVwbG9hZFN0YXR1cxIdChlVUExPQURfU1RBVFVTX1VOU1BFQ0lGSUVEEAASDQoJVVBMT0FESU5HEAESEwoPUE9TVF9QUk9DRVNTSU5HEAISDQoJSU1NVVRBQkxFEANCfgoiY29tLmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52MkILQ29tbW9uUHJvdG9QAVpJZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9kZXZ0b29scy9yZXN1bHRzdG9yZS92MjtyZXN1bHRzdG9yZWIGcHJvdG8z", [file_google_api_field_behavior, file_google_protobuf_duration, file_google_protobuf_timestamp]);

/**
 * Describes the status of a resource in both enum and string form.
 * Only use description when conveying additional info not captured in the enum
 * name.
 *
 * @generated from message google.devtools.resultstore.v2.StatusAttributes
 */
export type StatusAttributes = Message<"google.devtools.resultstore.v2.StatusAttributes"> & {
  /**
   * Enum representation of the status.
   *
   * @generated from field: google.devtools.resultstore.v2.Status status = 1;
   */
  status: Status;

  /**
   * A longer description about the status.
   *
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message google.devtools.resultstore.v2.StatusAttributes.
 * Use `create(StatusAttributesSchema)` to create a new message.
 */
export const StatusAttributesSchema: GenMessage<StatusAttributes> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_common, 0);

/**
 * A generic key-value property definition.
 *
 * @generated from message google.devtools.resultstore.v2.Property
 */
export type Property = Message<"google.devtools.resultstore.v2.Property"> & {
  /**
   * The key.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The value.
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message google.devtools.resultstore.v2.Property.
 * Use `create(PropertySchema)` to create a new message.
 */
export const PropertySchema: GenMessage<Property> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_common, 1);

/**
 * The timing of a particular Invocation, Action, etc. The start_time is
 * specified, stop time can be calculated by adding duration to start_time.
 *
 * @generated from message google.devtools.resultstore.v2.Timing
 */
export type Timing = Message<"google.devtools.resultstore.v2.Timing"> & {
  /**
   * The time the resource started running. This is in UTC Epoch time.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The duration for which the resource ran.
   *
   * @generated from field: google.protobuf.Duration duration = 2;
   */
  duration?: Duration;
};

/**
 * Describes the message google.devtools.resultstore.v2.Timing.
 * Use `create(TimingSchema)` to create a new message.
 */
export const TimingSchema: GenMessage<Timing> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_common, 2);

/**
 * Represents a dependency of a resource on another resource. This can be used
 * to define a graph or a workflow paradigm through resources.
 *
 * @generated from message google.devtools.resultstore.v2.Dependency
 */
export type Dependency = Message<"google.devtools.resultstore.v2.Dependency"> & {
  /**
   * The resource depended upon. It may be a Target, ConfiguredTarget, or
   * Action.
   *
   * @generated from oneof google.devtools.resultstore.v2.Dependency.resource
   */
  resource: {
    /**
     * Output only. The name of a target.  Its format must be:
     * invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
     * This must point to a target under the same invocation.
     *
     * @generated from field: string target = 1;
     */
    value: string;
    case: "target";
  } | {
    /**
     * Output only. The name of a configured target.  Its format must be:
     * invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${CONFIG_ID}
     * This must point to a configured target under the same invocation.
     *
     * @generated from field: string configured_target = 2;
     */
    value: string;
    case: "configuredTarget";
  } | {
    /**
     * Output only. The name of an action.  Its format must be:
     * invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${CONFIG_ID}/actions/${ACTION_ID}
     * This must point to an action under the same invocation.
     *
     * @generated from field: string action = 3;
     */
    value: string;
    case: "action";
  } | { case: undefined; value?: undefined };

  /**
   * The ID of the resource depended upon, matching resource name above.
   *
   * @generated from field: google.devtools.resultstore.v2.Dependency.Id id = 5;
   */
  id?: Dependency_Id;

  /**
   * A label describing this dependency.
   * The label "Root Cause" is handled specially. It is used to point to the
   * exact resource that caused a resource to fail.
   *
   * @generated from field: string label = 4;
   */
  label: string;
};

/**
 * Describes the message google.devtools.resultstore.v2.Dependency.
 * Use `create(DependencySchema)` to create a new message.
 */
export const DependencySchema: GenMessage<Dependency> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_common, 3);

/**
 * The resource ID components of a resource depended upon. It may be a Target,
 * ConfiguredTarget, or Action, with the appropriate components filled in.
 * Invocation ID is elided, as this must point to a resource under this
 * Invocation.
 *
 * @generated from message google.devtools.resultstore.v2.Dependency.Id
 */
export type Dependency_Id = Message<"google.devtools.resultstore.v2.Dependency.Id"> & {
  /**
   * The unencoded Target ID of the Target, ConfiguredTarget, or Action.
   *
   * @generated from field: string target_id = 2;
   */
  targetId: string;

  /**
   * The Configuration ID of the ConfiguredTarget, or Action.
   *
   * @generated from field: string configuration_id = 3;
   */
  configurationId: string;

  /**
   * The Action ID of the Action.
   *
   * @generated from field: string action_id = 4;
   */
  actionId: string;
};

/**
 * Describes the message google.devtools.resultstore.v2.Dependency.Id.
 * Use `create(Dependency_IdSchema)` to create a new message.
 */
export const Dependency_IdSchema: GenMessage<Dependency_Id> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_common, 3, 0);

/**
 * These correspond to the prefix of the rule name. Eg cc_test has language CC.
 *
 * @generated from enum google.devtools.resultstore.v2.Language
 */
export enum Language {
  /**
   * Language unspecified or not listed here.
   *
   * @generated from enum value: LANGUAGE_UNSPECIFIED = 0;
   */
  LANGUAGE_UNSPECIFIED = 0,

  /**
   * Not related to any particular language
   *
   * @generated from enum value: NONE = 1;
   */
  NONE = 1,

  /**
   * Android
   *
   * @generated from enum value: ANDROID = 2;
   */
  ANDROID = 2,

  /**
   * ActionScript (Flash)
   *
   * @generated from enum value: AS = 3;
   */
  AS = 3,

  /**
   * C++ or C
   *
   * @generated from enum value: CC = 4;
   */
  CC = 4,

  /**
   * Cascading-Style-Sheets
   *
   * @generated from enum value: CSS = 5;
   */
  CSS = 5,

  /**
   * Dart
   *
   * @generated from enum value: DART = 6;
   */
  DART = 6,

  /**
   * Go
   *
   * @generated from enum value: GO = 7;
   */
  GO = 7,

  /**
   * Google-Web-Toolkit
   *
   * @generated from enum value: GWT = 8;
   */
  GWT = 8,

  /**
   * Haskell
   *
   * @generated from enum value: HASKELL = 9;
   */
  HASKELL = 9,

  /**
   * Java
   *
   * @generated from enum value: JAVA = 10;
   */
  JAVA = 10,

  /**
   * Javascript
   *
   * @generated from enum value: JS = 11;
   */
  JS = 11,

  /**
   * Lisp
   *
   * @generated from enum value: LISP = 12;
   */
  LISP = 12,

  /**
   * Objective-C
   *
   * @generated from enum value: OBJC = 13;
   */
  OBJC = 13,

  /**
   * Python
   *
   * @generated from enum value: PY = 14;
   */
  PY = 14,

  /**
   * Shell (Typically Bash)
   *
   * @generated from enum value: SH = 15;
   */
  SH = 15,

  /**
   * Swift
   *
   * @generated from enum value: SWIFT = 16;
   */
  SWIFT = 16,

  /**
   * TypeScript
   *
   * @generated from enum value: TS = 18;
   */
  TS = 18,

  /**
   * Webtesting
   *
   * @generated from enum value: WEB = 19;
   */
  WEB = 19,

  /**
   * Scala
   *
   * @generated from enum value: SCALA = 20;
   */
  SCALA = 20,

  /**
   * Protocol Buffer
   *
   * @generated from enum value: PROTO = 21;
   */
  PROTO = 21,

  /**
   * Extensible Markup Language
   *
   * @generated from enum value: XML = 22;
   */
  XML = 22,
}

/**
 * Describes the enum google.devtools.resultstore.v2.Language.
 */
export const LanguageSchema: GenEnum<Language> = /*@__PURE__*/
  enumDesc(file_google_devtools_resultstore_v2_common, 0);

/**
 * Status of a resource.
 *
 * @generated from enum google.devtools.resultstore.v2.Status
 */
export enum Status {
  /**
   * The implicit default enum value. Should never be set.
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * Displays as "Building". Means the target is compiling, linking, etc.
   *
   * @generated from enum value: BUILDING = 1;
   */
  BUILDING = 1,

  /**
   * Displays as "Built". Means the target was built successfully.
   * If testing was requested, it should never reach this status: it should go
   * straight from BUILDING to TESTING.
   *
   * @generated from enum value: BUILT = 2;
   */
  BUILT = 2,

  /**
   * Displays as "Broken". Means build failure such as compile error.
   *
   * @generated from enum value: FAILED_TO_BUILD = 3;
   */
  FAILED_TO_BUILD = 3,

  /**
   * Displays as "Testing". Means the test is running.
   *
   * @generated from enum value: TESTING = 4;
   */
  TESTING = 4,

  /**
   * Displays as "Passed". Means the test was run and passed.
   *
   * @generated from enum value: PASSED = 5;
   */
  PASSED = 5,

  /**
   * Displays as "Failed". Means the test was run and failed.
   *
   * @generated from enum value: FAILED = 6;
   */
  FAILED = 6,

  /**
   * Displays as "Timed out". Means the test didn't finish in time.
   *
   * @generated from enum value: TIMED_OUT = 7;
   */
  TIMED_OUT = 7,

  /**
   * Displays as "Cancelled". Means the build or test was cancelled.
   * E.g. User hit control-C.
   *
   * @generated from enum value: CANCELLED = 8;
   */
  CANCELLED = 8,

  /**
   * Displays as "Tool Failed". Means the build or test had internal tool
   * failure.
   *
   * @generated from enum value: TOOL_FAILED = 9;
   */
  TOOL_FAILED = 9,

  /**
   * Displays as "Incomplete". Means the build or test did not complete.  This
   * might happen when a build breakage or test failure causes the tool to stop
   * trying to build anything more or run any more tests, with the default
   * bazel --nokeep_going option or the --notest_keep_going option.
   *
   * @generated from enum value: INCOMPLETE = 10;
   */
  INCOMPLETE = 10,

  /**
   * Displays as "Flaky". Means the aggregate status contains some runs that
   * were successful, and some that were not.
   *
   * @generated from enum value: FLAKY = 11;
   */
  FLAKY = 11,

  /**
   * Displays as "Unknown". Means the tool uploading to the server died
   * mid-upload or does not know the state.
   *
   * @generated from enum value: UNKNOWN = 12;
   */
  UNKNOWN = 12,

  /**
   * Displays as "Skipped". Means building and testing were skipped.
   * (E.g. Restricted to a different configuration.)
   *
   * @generated from enum value: SKIPPED = 13;
   */
  SKIPPED = 13,
}

/**
 * Describes the enum google.devtools.resultstore.v2.Status.
 */
export const StatusSchema: GenEnum<Status> = /*@__PURE__*/
  enumDesc(file_google_devtools_resultstore_v2_common, 1);

/**
 * Indicates the upload status of the invocation, whether it is
 * post-processing, or immutable, etc.
 *
 * @generated from enum google.devtools.resultstore.v2.UploadStatus
 */
export enum UploadStatus {
  /**
   * The implicit default enum value. Should never be set.
   *
   * @generated from enum value: UPLOAD_STATUS_UNSPECIFIED = 0;
   */
  UPLOAD_STATUS_UNSPECIFIED = 0,

  /**
   * The invocation is still uploading to the ResultStore.
   *
   * @generated from enum value: UPLOADING = 1;
   */
  UPLOADING = 1,

  /**
   * The invocation upload is complete. The ResultStore is still post-processing
   * the invocation.
   *
   * @generated from enum value: POST_PROCESSING = 2;
   */
  POST_PROCESSING = 2,

  /**
   * All post-processing is complete, and the invocation is now immutable.
   * Data may be subject to TTL and can be deleted.
   *
   * @generated from enum value: IMMUTABLE = 3;
   */
  IMMUTABLE = 3,
}

/**
 * Describes the enum google.devtools.resultstore.v2.UploadStatus.
 */
export const UploadStatusSchema: GenEnum<UploadStatus> = /*@__PURE__*/
  enumDesc(file_google_devtools_resultstore_v2_common, 2);

