// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/resultstore/v2/target.proto (package google.devtools.resultstore.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Language, Property, StatusAttributes, Timing } from "./common_pb";
import { file_google_devtools_resultstore_v2_common } from "./common_pb";
import type { File } from "./file_pb";
import { file_google_devtools_resultstore_v2_file } from "./file_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/resultstore/v2/target.proto.
 */
export const file_google_devtools_resultstore_v2_target: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvZGV2dG9vbHMvcmVzdWx0c3RvcmUvdjIvdGFyZ2V0LnByb3RvEh5nb29nbGUuZGV2dG9vbHMucmVzdWx0c3RvcmUudjIi8wQKBlRhcmdldBIMCgRuYW1lGAEgASgJEjUKAmlkGAIgASgLMikuZ29vZ2xlLmRldnRvb2xzLnJlc3VsdHN0b3JlLnYyLlRhcmdldC5JZBJPChFzdGF0dXNfYXR0cmlidXRlcxgDIAEoCzIwLmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52Mi5TdGF0dXNBdHRyaWJ1dGVzQgIYARI2CgZ0aW1pbmcYBCABKAsyJi5nb29nbGUuZGV2dG9vbHMucmVzdWx0c3RvcmUudjIuVGltaW5nEksKEXRhcmdldF9hdHRyaWJ1dGVzGAUgASgLMjAuZ29vZ2xlLmRldnRvb2xzLnJlc3VsdHN0b3JlLnYyLlRhcmdldEF0dHJpYnV0ZXMSRwoPdGVzdF9hdHRyaWJ1dGVzGAYgASgLMi4uZ29vZ2xlLmRldnRvb2xzLnJlc3VsdHN0b3JlLnYyLlRlc3RBdHRyaWJ1dGVzEjwKCnByb3BlcnRpZXMYByADKAsyKC5nb29nbGUuZGV2dG9vbHMucmVzdWx0c3RvcmUudjIuUHJvcGVydHkSMwoFZmlsZXMYCCADKAsyJC5nb29nbGUuZGV2dG9vbHMucmVzdWx0c3RvcmUudjIuRmlsZRIPCgd2aXNpYmxlGAogASgIGi4KAklkEhUKDWludm9jYXRpb25faWQYASABKAkSEQoJdGFyZ2V0X2lkGAIgASgJOlHqQU4KIXJlc3VsdHN0b3JlLmdvb2dsZWFwaXMuY29tL1RhcmdldBIpaW52b2NhdGlvbnMve2ludm9jYXRpb259L3RhcmdldHMve3RhcmdldH0ilgEKEFRhcmdldEF0dHJpYnV0ZXMSOAoEdHlwZRgBIAEoDjIqLmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52Mi5UYXJnZXRUeXBlEjoKCGxhbmd1YWdlGAIgASgOMiguZ29vZ2xlLmRldnRvb2xzLnJlc3VsdHN0b3JlLnYyLkxhbmd1YWdlEgwKBHRhZ3MYAyADKAkiSAoOVGVzdEF0dHJpYnV0ZXMSNgoEc2l6ZRgBIAEoDjIoLmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52Mi5UZXN0U2l6ZSpqCgpUYXJnZXRUeXBlEhsKF1RBUkdFVF9UWVBFX1VOU1BFQ0lGSUVEEAASDwoLQVBQTElDQVRJT04QARIKCgZCSU5BUlkQAhILCgdMSUJSQVJZEAMSCwoHUEFDS0FHRRAEEggKBFRFU1QQBSplCghUZXN0U2l6ZRIZChVURVNUX1NJWkVfVU5TUEVDSUZJRUQQABIJCgVTTUFMTBABEgoKBk1FRElVTRACEgkKBUxBUkdFEAMSDAoIRU5PUk1PVVMQBBIOCgpPVEhFUl9TSVpFEAVCfgoiY29tLmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52MkILVGFyZ2V0UHJvdG9QAVpJZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9kZXZ0b29scy9yZXN1bHRzdG9yZS92MjtyZXN1bHRzdG9yZWIGcHJvdG8z", [file_google_api_resource, file_google_devtools_resultstore_v2_common, file_google_devtools_resultstore_v2_file]);

/**
 * Each Target represents data for a given target in a given Invocation.
 * ConfiguredTarget and Action resources under each Target contain the bulk of
 * the data.
 *
 * @generated from message google.devtools.resultstore.v2.Target
 */
export type Target = Message<"google.devtools.resultstore.v2.Target"> & {
  /**
   * The resource name.  Its format must be:
   * invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The resource ID components that identify the Target. They must match the
   * resource name after proper encoding.
   *
   * @generated from field: google.devtools.resultstore.v2.Target.Id id = 2;
   */
  id?: Target_Id;

  /**
   * This is the aggregate status of the target.
   * DEPRECATED - use ConfiguredTarget.status_attributes instead
   *
   * @generated from field: google.devtools.resultstore.v2.StatusAttributes status_attributes = 3 [deprecated = true];
   * @deprecated
   */
  statusAttributes?: StatusAttributes;

  /**
   * When this target started and its duration.
   *
   * @generated from field: google.devtools.resultstore.v2.Timing timing = 4;
   */
  timing?: Timing;

  /**
   * Attributes that apply to all targets.
   *
   * @generated from field: google.devtools.resultstore.v2.TargetAttributes target_attributes = 5;
   */
  targetAttributes?: TargetAttributes;

  /**
   * Attributes that apply to all test actions under this target.
   *
   * @generated from field: google.devtools.resultstore.v2.TestAttributes test_attributes = 6;
   */
  testAttributes?: TestAttributes;

  /**
   * Arbitrary name-value pairs.
   * This is implemented as a multi-map. Multiple properties are allowed with
   * the same key. Properties will be returned in lexicographical order by key.
   *
   * @generated from field: repeated google.devtools.resultstore.v2.Property properties = 7;
   */
  properties: Property[];

  /**
   * A list of file references for target level files.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * Use this field to specify outputs not related to a configuration.
   *
   * @generated from field: repeated google.devtools.resultstore.v2.File files = 8;
   */
  files: File[];

  /**
   * Provides a hint to clients as to whether to display the Target to users.
   * If true then clients likely want to display the Target by default.
   * Once set to true, this may not be set back to false.
   *
   * @generated from field: bool visible = 10;
   */
  visible: boolean;
};

/**
 * Describes the message google.devtools.resultstore.v2.Target.
 * Use `create(TargetSchema)` to create a new message.
 */
export const TargetSchema: GenMessage<Target> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_target, 0);

/**
 * The resource ID components that identify the Target.
 *
 * @generated from message google.devtools.resultstore.v2.Target.Id
 */
export type Target_Id = Message<"google.devtools.resultstore.v2.Target.Id"> & {
  /**
   * The Invocation ID.
   *
   * @generated from field: string invocation_id = 1;
   */
  invocationId: string;

  /**
   * The Target ID.
   *
   * @generated from field: string target_id = 2;
   */
  targetId: string;
};

/**
 * Describes the message google.devtools.resultstore.v2.Target.Id.
 * Use `create(Target_IdSchema)` to create a new message.
 */
export const Target_IdSchema: GenMessage<Target_Id> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_target, 0, 0);

/**
 * Attributes that apply to all targets.
 *
 * @generated from message google.devtools.resultstore.v2.TargetAttributes
 */
export type TargetAttributes = Message<"google.devtools.resultstore.v2.TargetAttributes"> & {
  /**
   * If known, indicates the type of this target.  In bazel this corresponds
   * to the rule-suffix.
   *
   * @generated from field: google.devtools.resultstore.v2.TargetType type = 1;
   */
  type: TargetType;

  /**
   * If known, the main language of this target, e.g. java, cc, python, etc.
   *
   * @generated from field: google.devtools.resultstore.v2.Language language = 2;
   */
  language: Language;

  /**
   * The tags attribute of the build rule. These should be short, descriptive
   * words, and there should only be a few of them.
   * This is implemented as a set. All tags will be unique. Any duplicate tags
   * will be ignored. Tags will be returned in lexicographical order.
   *
   * @generated from field: repeated string tags = 3;
   */
  tags: string[];
};

/**
 * Describes the message google.devtools.resultstore.v2.TargetAttributes.
 * Use `create(TargetAttributesSchema)` to create a new message.
 */
export const TargetAttributesSchema: GenMessage<TargetAttributes> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_target, 1);

/**
 * Attributes that apply only to test actions under this target.
 *
 * @generated from message google.devtools.resultstore.v2.TestAttributes
 */
export type TestAttributes = Message<"google.devtools.resultstore.v2.TestAttributes"> & {
  /**
   * Indicates how big the user indicated the test action was.
   *
   * @generated from field: google.devtools.resultstore.v2.TestSize size = 1;
   */
  size: TestSize;
};

/**
 * Describes the message google.devtools.resultstore.v2.TestAttributes.
 * Use `create(TestAttributesSchema)` to create a new message.
 */
export const TestAttributesSchema: GenMessage<TestAttributes> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_target, 2);

/**
 * These correspond to the suffix of the rule name. Eg cc_test has type TEST.
 *
 * @generated from enum google.devtools.resultstore.v2.TargetType
 */
export enum TargetType {
  /**
   * Unspecified by the build system.
   *
   * @generated from enum value: TARGET_TYPE_UNSPECIFIED = 0;
   */
  TARGET_TYPE_UNSPECIFIED = 0,

  /**
   * An application e.g. ios_application.
   *
   * @generated from enum value: APPLICATION = 1;
   */
  APPLICATION = 1,

  /**
   * A binary target e.g. cc_binary.
   *
   * @generated from enum value: BINARY = 2;
   */
  BINARY = 2,

  /**
   * A library target e.g. java_library
   *
   * @generated from enum value: LIBRARY = 3;
   */
  LIBRARY = 3,

  /**
   * A package
   *
   * @generated from enum value: PACKAGE = 4;
   */
  PACKAGE = 4,

  /**
   * Any test target, in bazel that means a rule with a '_test' suffix.
   *
   * @generated from enum value: TEST = 5;
   */
  TEST = 5,
}

/**
 * Describes the enum google.devtools.resultstore.v2.TargetType.
 */
export const TargetTypeSchema: GenEnum<TargetType> = /*@__PURE__*/
  enumDesc(file_google_devtools_resultstore_v2_target, 0);

/**
 * Indicates how big the user indicated the test action was.
 *
 * @generated from enum google.devtools.resultstore.v2.TestSize
 */
export enum TestSize {
  /**
   * Unspecified by the user.
   *
   * @generated from enum value: TEST_SIZE_UNSPECIFIED = 0;
   */
  TEST_SIZE_UNSPECIFIED = 0,

  /**
   * Unit test taking less than 1 minute.
   *
   * @generated from enum value: SMALL = 1;
   */
  SMALL = 1,

  /**
   * Integration tests taking less than 5 minutes.
   *
   * @generated from enum value: MEDIUM = 2;
   */
  MEDIUM = 2,

  /**
   * End-to-end tests taking less than 15 minutes.
   *
   * @generated from enum value: LARGE = 3;
   */
  LARGE = 3,

  /**
   * Even bigger than LARGE.
   *
   * @generated from enum value: ENORMOUS = 4;
   */
  ENORMOUS = 4,

  /**
   * Something that doesn't fit into the above categories.
   *
   * @generated from enum value: OTHER_SIZE = 5;
   */
  OTHER_SIZE = 5,
}

/**
 * Describes the enum google.devtools.resultstore.v2.TestSize.
 */
export const TestSizeSchema: GenEnum<TestSize> = /*@__PURE__*/
  enumDesc(file_google_devtools_resultstore_v2_target, 1);

