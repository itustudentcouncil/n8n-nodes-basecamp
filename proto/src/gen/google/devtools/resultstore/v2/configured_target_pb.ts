// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/resultstore/v2/configured_target.proto (package google.devtools.resultstore.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Property, StatusAttributes, Timing } from "./common_pb";
import { file_google_devtools_resultstore_v2_common } from "./common_pb";
import type { File } from "./file_pb";
import { file_google_devtools_resultstore_v2_file } from "./file_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/resultstore/v2/configured_target.proto.
 */
export const file_google_devtools_resultstore_v2_configured_target: GenFile = /*@__PURE__*/
  fileDesc("CjZnb29nbGUvZGV2dG9vbHMvcmVzdWx0c3RvcmUvdjIvY29uZmlndXJlZF90YXJnZXQucHJvdG8SHmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52MiL6BAoQQ29uZmlndXJlZFRhcmdldBIMCgRuYW1lGAEgASgJEj8KAmlkGAIgASgLMjMuZ29vZ2xlLmRldnRvb2xzLnJlc3VsdHN0b3JlLnYyLkNvbmZpZ3VyZWRUYXJnZXQuSWQSSwoRc3RhdHVzX2F0dHJpYnV0ZXMYAyABKAsyMC5nb29nbGUuZGV2dG9vbHMucmVzdWx0c3RvcmUudjIuU3RhdHVzQXR0cmlidXRlcxI2CgZ0aW1pbmcYBCABKAsyJi5nb29nbGUuZGV2dG9vbHMucmVzdWx0c3RvcmUudjIuVGltaW5nElEKD3Rlc3RfYXR0cmlidXRlcxgGIAEoCzI4Lmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52Mi5Db25maWd1cmVkVGVzdEF0dHJpYnV0ZXMSPAoKcHJvcGVydGllcxgHIAMoCzIoLmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52Mi5Qcm9wZXJ0eRIzCgVmaWxlcxgIIAMoCzIkLmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52Mi5GaWxlGkgKAklkEhUKDWludm9jYXRpb25faWQYASABKAkSEQoJdGFyZ2V0X2lkGAIgASgJEhgKEGNvbmZpZ3VyYXRpb25faWQYAyABKAk6gQHqQX4KK3Jlc3VsdHN0b3JlLmdvb2dsZWFwaXMuY29tL0NvbmZpZ3VyZWRUYXJnZXQST2ludm9jYXRpb25zL3tpbnZvY2F0aW9ufS90YXJnZXRzL3t0YXJnZXR9L2NvbmZpZ3VyZWRUYXJnZXRzL3tjb25maWd1cmVkX3RhcmdldH0igwEKGENvbmZpZ3VyZWRUZXN0QXR0cmlidXRlcxIXCg90b3RhbF9ydW5fY291bnQYAiABKAUSGQoRdG90YWxfc2hhcmRfY291bnQYAyABKAUSMwoQdGltZW91dF9kdXJhdGlvbhgFIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkKIAQoiY29tLmdvb2dsZS5kZXZ0b29scy5yZXN1bHRzdG9yZS52MkIVQ29uZmlndXJlZFRhcmdldFByb3RvUAFaSWdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvZGV2dG9vbHMvcmVzdWx0c3RvcmUvdjI7cmVzdWx0c3RvcmViBnByb3RvMw", [file_google_api_resource, file_google_devtools_resultstore_v2_common, file_google_devtools_resultstore_v2_file, file_google_protobuf_duration]);

/**
 * Each ConfiguredTarget represents data for a given configuration of a given
 * target in a given Invocation.
 * Every ConfiguredTarget should have at least one Action as a child resource
 * before the invocation is finalized. Refer to the Action's documentation for
 * more info on this.
 *
 * @generated from message google.devtools.resultstore.v2.ConfiguredTarget
 */
export type ConfiguredTarget = Message<"google.devtools.resultstore.v2.ConfiguredTarget"> & {
  /**
   * The resource name.  Its format must be:
   * invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${url_encode(CONFIG_ID)}
   * where ${CONFIG_ID} must match the ID of an existing Configuration under
   * this Invocation.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The resource ID components that identify the ConfiguredTarget. They must
   * match the resource name after proper encoding.
   *
   * @generated from field: google.devtools.resultstore.v2.ConfiguredTarget.Id id = 2;
   */
  id?: ConfiguredTarget_Id;

  /**
   * The aggregate status for this configuration of this target. If testing
   * was not requested, set this to the build status (e.g. BUILT or
   * FAILED_TO_BUILD).
   *
   * @generated from field: google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
   */
  statusAttributes?: StatusAttributes;

  /**
   * Captures the start time and duration of this configured target.
   *
   * @generated from field: google.devtools.resultstore.v2.Timing timing = 4;
   */
  timing?: Timing;

  /**
   * Test specific attributes for this ConfiguredTarget.
   *
   * @generated from field: google.devtools.resultstore.v2.ConfiguredTestAttributes test_attributes = 6;
   */
  testAttributes?: ConfiguredTestAttributes;

  /**
   * Arbitrary name-value pairs.
   * This is implemented as a multi-map. Multiple properties are allowed with
   * the same key. Properties will be returned in lexicographical order by key.
   *
   * @generated from field: repeated google.devtools.resultstore.v2.Property properties = 7;
   */
  properties: Property[];

  /**
   * A list of file references for configured target level files.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   *
   * @generated from field: repeated google.devtools.resultstore.v2.File files = 8;
   */
  files: File[];
};

/**
 * Describes the message google.devtools.resultstore.v2.ConfiguredTarget.
 * Use `create(ConfiguredTargetSchema)` to create a new message.
 */
export const ConfiguredTargetSchema: GenMessage<ConfiguredTarget> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_configured_target, 0);

/**
 * The resource ID components that identify the ConfiguredTarget.
 *
 * @generated from message google.devtools.resultstore.v2.ConfiguredTarget.Id
 */
export type ConfiguredTarget_Id = Message<"google.devtools.resultstore.v2.ConfiguredTarget.Id"> & {
  /**
   * The Invocation ID.
   *
   * @generated from field: string invocation_id = 1;
   */
  invocationId: string;

  /**
   * The Target ID.
   *
   * @generated from field: string target_id = 2;
   */
  targetId: string;

  /**
   * The Configuration ID.
   *
   * @generated from field: string configuration_id = 3;
   */
  configurationId: string;
};

/**
 * Describes the message google.devtools.resultstore.v2.ConfiguredTarget.Id.
 * Use `create(ConfiguredTarget_IdSchema)` to create a new message.
 */
export const ConfiguredTarget_IdSchema: GenMessage<ConfiguredTarget_Id> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_configured_target, 0, 0);

/**
 * Attributes that apply only to test actions under this configured target.
 *
 * @generated from message google.devtools.resultstore.v2.ConfiguredTestAttributes
 */
export type ConfiguredTestAttributes = Message<"google.devtools.resultstore.v2.ConfiguredTestAttributes"> & {
  /**
   * Total number of test runs. For example, in bazel this is specified with
   * --runs_per_test. Zero if runs_per_test is not used.
   *
   * @generated from field: int32 total_run_count = 2;
   */
  totalRunCount: number;

  /**
   * Total number of test shards. Zero if shard count was not specified.
   *
   * @generated from field: int32 total_shard_count = 3;
   */
  totalShardCount: number;

  /**
   * How long test is allowed to run.
   *
   * @generated from field: google.protobuf.Duration timeout_duration = 5;
   */
  timeoutDuration?: Duration;
};

/**
 * Describes the message google.devtools.resultstore.v2.ConfiguredTestAttributes.
 * Use `create(ConfiguredTestAttributesSchema)` to create a new message.
 */
export const ConfiguredTestAttributesSchema: GenMessage<ConfiguredTestAttributes> = /*@__PURE__*/
  messageDesc(file_google_devtools_resultstore_v2_configured_target, 1);

