// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/clouderrorreporting/v1beta1/common.proto (package google.devtools.clouderrorreporting.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/clouderrorreporting/v1beta1/common.proto.
 */
export const file_google_devtools_clouderrorreporting_v1beta1_common: GenFile = /*@__PURE__*/
  fileDesc("Cjhnb29nbGUvZGV2dG9vbHMvY2xvdWRlcnJvcnJlcG9ydGluZy92MWJldGExL2NvbW1vbi5wcm90bxIrZ29vZ2xlLmRldnRvb2xzLmNsb3VkZXJyb3JyZXBvcnRpbmcudjFiZXRhMSKyAgoKRXJyb3JHcm91cBIMCgRuYW1lGAEgASgJEhAKCGdyb3VwX2lkGAIgASgJElMKD3RyYWNraW5nX2lzc3VlcxgDIAMoCzI6Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGVycm9ycmVwb3J0aW5nLnYxYmV0YTEuVHJhY2tpbmdJc3N1ZRJYChFyZXNvbHV0aW9uX3N0YXR1cxgFIAEoDjI9Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGVycm9ycmVwb3J0aW5nLnYxYmV0YTEuUmVzb2x1dGlvblN0YXR1czpV6kFSCi1jbG91ZGVycm9ycmVwb3J0aW5nLmdvb2dsZWFwaXMuY29tL0Vycm9yR3JvdXASIXByb2plY3RzL3twcm9qZWN0fS9ncm91cHMve2dyb3VwfSIcCg1UcmFja2luZ0lzc3VlEgsKA3VybBgBIAEoCSLvAQoKRXJyb3JFdmVudBIuCgpldmVudF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJUCg9zZXJ2aWNlX2NvbnRleHQYAiABKAsyOy5nb29nbGUuZGV2dG9vbHMuY2xvdWRlcnJvcnJlcG9ydGluZy52MWJldGExLlNlcnZpY2VDb250ZXh0Eg8KB21lc3NhZ2UYAyABKAkSSgoHY29udGV4dBgFIAEoCzI5Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGVycm9ycmVwb3J0aW5nLnYxYmV0YTEuRXJyb3JDb250ZXh0IkkKDlNlcnZpY2VDb250ZXh0Eg8KB3NlcnZpY2UYAiABKAkSDwoHdmVyc2lvbhgDIAEoCRIVCg1yZXNvdXJjZV90eXBlGAQgASgJIskBCgxFcnJvckNvbnRleHQSVQoMaHR0cF9yZXF1ZXN0GAEgASgLMj8uZ29vZ2xlLmRldnRvb2xzLmNsb3VkZXJyb3JyZXBvcnRpbmcudjFiZXRhMS5IdHRwUmVxdWVzdENvbnRleHQSDAoEdXNlchgCIAEoCRJUCg9yZXBvcnRfbG9jYXRpb24YAyABKAsyOy5nb29nbGUuZGV2dG9vbHMuY2xvdWRlcnJvcnJlcG9ydGluZy52MWJldGExLlNvdXJjZUxvY2F0aW9uIogBChJIdHRwUmVxdWVzdENvbnRleHQSDgoGbWV0aG9kGAEgASgJEgsKA3VybBgCIAEoCRISCgp1c2VyX2FnZW50GAMgASgJEhAKCHJlZmVycmVyGAQgASgJEhwKFHJlc3BvbnNlX3N0YXR1c19jb2RlGAUgASgFEhEKCXJlbW90ZV9pcBgGIAEoCSJPCg5Tb3VyY2VMb2NhdGlvbhIRCglmaWxlX3BhdGgYASABKAkSEwoLbGluZV9udW1iZXIYAiABKAUSFQoNZnVuY3Rpb25fbmFtZRgEIAEoCSpqChBSZXNvbHV0aW9uU3RhdHVzEiEKHVJFU09MVVRJT05fU1RBVFVTX1VOU1BFQ0lGSUVEEAASCAoET1BFThABEhAKDEFDS05PV0xFREdFRBACEgwKCFJFU09MVkVEEAMSCQoFTVVURUQQBEKJAgovY29tLmdvb2dsZS5kZXZ0b29scy5jbG91ZGVycm9ycmVwb3J0aW5nLnYxYmV0YTFCC0NvbW1vblByb3RvUAFaT2Nsb3VkLmdvb2dsZS5jb20vZ28vZXJyb3JyZXBvcnRpbmcvYXBpdjFiZXRhMS9lcnJvcnJlcG9ydGluZ3BiO2Vycm9ycmVwb3J0aW5ncGL4AQGqAiNHb29nbGUuQ2xvdWQuRXJyb3JSZXBvcnRpbmcuVjFCZXRhMcoCI0dvb2dsZVxDbG91ZFxFcnJvclJlcG9ydGluZ1xWMWJldGEx6gImR29vZ2xlOjpDbG91ZDo6RXJyb3JSZXBvcnRpbmc6OlYxYmV0YTFiBnByb3RvMw", [file_google_api_resource, file_google_protobuf_timestamp]);

/**
 * Description of a group of similar error events.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.ErrorGroup
 */
export type ErrorGroup = Message<"google.devtools.clouderrorreporting.v1beta1.ErrorGroup"> & {
  /**
   * The group resource name.
   * Written as `projects/{projectID}/groups/{group_id}` or
   * `projects/{projectID}/locations/{location}/groups/{group_id}`
   *
   * Examples: `projects/my-project-123/groups/my-group`,
   * `projects/my-project-123/locations/us-central1/groups/my-group`
   *
   * In the group resource name, the `group_id` is a unique identifier for a
   * particular error group. The identifier is derived from key parts of the
   * error-log content and is treated as Service Data. For information about
   * how Service Data is handled, see [Google Cloud Privacy
   * Notice](https://cloud.google.com/terms/cloud-privacy-notice).
   *
   * For a list of supported locations, see [Supported
   * Regions](https://cloud.google.com/logging/docs/region-support). `global` is
   * the default when unspecified.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * An opaque identifier of the group. This field is assigned by the Error
   * Reporting system and always populated.
   *
   * In the group resource name, the `group_id` is a unique identifier for a
   * particular error group. The identifier is derived from key parts of the
   * error-log content and is treated as Service Data. For information about
   * how Service Data is handled, see [Google Cloud Privacy
   * Notice](https://cloud.google.com/terms/cloud-privacy-notice).
   *
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  /**
   * Associated tracking issues.
   *
   * @generated from field: repeated google.devtools.clouderrorreporting.v1beta1.TrackingIssue tracking_issues = 3;
   */
  trackingIssues: TrackingIssue[];

  /**
   * Error group's resolution status.
   *
   * An unspecified resolution status will be interpreted as OPEN
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.ResolutionStatus resolution_status = 5;
   */
  resolutionStatus: ResolutionStatus;
};

/**
 * Describes the message google.devtools.clouderrorreporting.v1beta1.ErrorGroup.
 * Use `create(ErrorGroupSchema)` to create a new message.
 */
export const ErrorGroupSchema: GenMessage<ErrorGroup> = /*@__PURE__*/
  messageDesc(file_google_devtools_clouderrorreporting_v1beta1_common, 0);

/**
 * Information related to tracking the progress on resolving the error.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.TrackingIssue
 */
export type TrackingIssue = Message<"google.devtools.clouderrorreporting.v1beta1.TrackingIssue"> & {
  /**
   * A URL pointing to a related entry in an issue tracking system.
   * Example: `https://github.com/user/project/issues/4`
   *
   * @generated from field: string url = 1;
   */
  url: string;
};

/**
 * Describes the message google.devtools.clouderrorreporting.v1beta1.TrackingIssue.
 * Use `create(TrackingIssueSchema)` to create a new message.
 */
export const TrackingIssueSchema: GenMessage<TrackingIssue> = /*@__PURE__*/
  messageDesc(file_google_devtools_clouderrorreporting_v1beta1_common, 1);

/**
 * An error event which is returned by the Error Reporting system.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.ErrorEvent
 */
export type ErrorEvent = Message<"google.devtools.clouderrorreporting.v1beta1.ErrorEvent"> & {
  /**
   * Time when the event occurred as provided in the error report.
   * If the report did not contain a timestamp, the time the error was received
   * by the Error Reporting system is used.
   *
   * @generated from field: google.protobuf.Timestamp event_time = 1;
   */
  eventTime?: Timestamp;

  /**
   * The `ServiceContext` for which this error was reported.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
   */
  serviceContext?: ServiceContext;

  /**
   * The stack trace that was reported or logged by the service.
   *
   * @generated from field: string message = 3;
   */
  message: string;

  /**
   * Data about the context in which the error occurred.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 5;
   */
  context?: ErrorContext;
};

/**
 * Describes the message google.devtools.clouderrorreporting.v1beta1.ErrorEvent.
 * Use `create(ErrorEventSchema)` to create a new message.
 */
export const ErrorEventSchema: GenMessage<ErrorEvent> = /*@__PURE__*/
  messageDesc(file_google_devtools_clouderrorreporting_v1beta1_common, 2);

/**
 * Describes a running service that sends errors.
 * Its version changes over time and multiple versions can run in parallel.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.ServiceContext
 */
export type ServiceContext = Message<"google.devtools.clouderrorreporting.v1beta1.ServiceContext"> & {
  /**
   * An identifier of the service, such as the name of the
   * executable, job, or Google App Engine service name. This field is expected
   * to have a low number of values that are relatively stable over time, as
   * opposed to `version`, which can be changed whenever new code is deployed.
   *
   * Contains the service name for error reports extracted from Google
   * App Engine logs or `default` if the App Engine default service is used.
   *
   * @generated from field: string service = 2;
   */
  service: string;

  /**
   * Represents the source code version that the developer provided,
   * which could represent a version label or a Git SHA-1 hash, for example.
   * For App Engine standard environment, the version is set to the version of
   * the app.
   *
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * Type of the MonitoredResource. List of possible values:
   * https://cloud.google.com/monitoring/api/resources
   *
   * Value is set automatically for incoming errors and must not be set when
   * reporting errors.
   *
   * @generated from field: string resource_type = 4;
   */
  resourceType: string;
};

/**
 * Describes the message google.devtools.clouderrorreporting.v1beta1.ServiceContext.
 * Use `create(ServiceContextSchema)` to create a new message.
 */
export const ServiceContextSchema: GenMessage<ServiceContext> = /*@__PURE__*/
  messageDesc(file_google_devtools_clouderrorreporting_v1beta1_common, 3);

/**
 * A description of the context in which an error occurred.
 * This data should be provided by the application when reporting an error,
 * unless the
 * error report has been generated automatically from Google App Engine logs.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.ErrorContext
 */
export type ErrorContext = Message<"google.devtools.clouderrorreporting.v1beta1.ErrorContext"> & {
  /**
   * The HTTP request which was processed when the error was
   * triggered.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.HttpRequestContext http_request = 1;
   */
  httpRequest?: HttpRequestContext;

  /**
   * The user who caused or was affected by the crash.
   * This can be a user ID, an email address, or an arbitrary token that
   * uniquely identifies the user.
   * When sending an error report, leave this field empty if the user was not
   * logged in. In this case the
   * Error Reporting system will use other data, such as remote IP address, to
   * distinguish affected users. See `affected_users_count` in
   * `ErrorGroupStats`.
   *
   * @generated from field: string user = 2;
   */
  user: string;

  /**
   * The location in the source code where the decision was made to
   * report the error, usually the place where it was logged.
   * For a logged exception this would be the source line where the
   * exception is logged, usually close to the place where it was
   * caught.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.SourceLocation report_location = 3;
   */
  reportLocation?: SourceLocation;
};

/**
 * Describes the message google.devtools.clouderrorreporting.v1beta1.ErrorContext.
 * Use `create(ErrorContextSchema)` to create a new message.
 */
export const ErrorContextSchema: GenMessage<ErrorContext> = /*@__PURE__*/
  messageDesc(file_google_devtools_clouderrorreporting_v1beta1_common, 4);

/**
 * HTTP request data that is related to a reported error.
 * This data should be provided by the application when reporting an error,
 * unless the
 * error report has been generated automatically from Google App Engine logs.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.HttpRequestContext
 */
export type HttpRequestContext = Message<"google.devtools.clouderrorreporting.v1beta1.HttpRequestContext"> & {
  /**
   * The type of HTTP request, such as `GET`, `POST`, etc.
   *
   * @generated from field: string method = 1;
   */
  method: string;

  /**
   * The URL of the request.
   *
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * The user agent information that is provided with the request.
   *
   * @generated from field: string user_agent = 3;
   */
  userAgent: string;

  /**
   * The referrer information that is provided with the request.
   *
   * @generated from field: string referrer = 4;
   */
  referrer: string;

  /**
   * The HTTP response status code for the request.
   *
   * @generated from field: int32 response_status_code = 5;
   */
  responseStatusCode: number;

  /**
   * The IP address from which the request originated.
   * This can be IPv4, IPv6, or a token which is derived from the
   * IP address, depending on the data that has been provided
   * in the error report.
   *
   * @generated from field: string remote_ip = 6;
   */
  remoteIp: string;
};

/**
 * Describes the message google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.
 * Use `create(HttpRequestContextSchema)` to create a new message.
 */
export const HttpRequestContextSchema: GenMessage<HttpRequestContext> = /*@__PURE__*/
  messageDesc(file_google_devtools_clouderrorreporting_v1beta1_common, 5);

/**
 * Indicates a location in the source code of the service for which errors are
 * reported. `functionName` must be provided by the application when reporting
 * an error, unless the error report contains a `message` with a supported
 * exception stack trace. All fields are optional for the later case.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.SourceLocation
 */
export type SourceLocation = Message<"google.devtools.clouderrorreporting.v1beta1.SourceLocation"> & {
  /**
   * The source code filename, which can include a truncated relative
   * path, or a full path from a production machine.
   *
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * 1-based. 0 indicates that the line number is unknown.
   *
   * @generated from field: int32 line_number = 2;
   */
  lineNumber: number;

  /**
   * Human-readable name of a function or method.
   * The value can include optional context like the class or package name.
   * For example, `my.package.MyClass.method` in case of Java.
   *
   * @generated from field: string function_name = 4;
   */
  functionName: string;
};

/**
 * Describes the message google.devtools.clouderrorreporting.v1beta1.SourceLocation.
 * Use `create(SourceLocationSchema)` to create a new message.
 */
export const SourceLocationSchema: GenMessage<SourceLocation> = /*@__PURE__*/
  messageDesc(file_google_devtools_clouderrorreporting_v1beta1_common, 6);

/**
 * Resolution status of an error group.
 *
 * @generated from enum google.devtools.clouderrorreporting.v1beta1.ResolutionStatus
 */
export enum ResolutionStatus {
  /**
   * Status is unknown. When left unspecified in requests, it is treated like
   * OPEN.
   *
   * @generated from enum value: RESOLUTION_STATUS_UNSPECIFIED = 0;
   */
  RESOLUTION_STATUS_UNSPECIFIED = 0,

  /**
   * The error group is not being addressed. This is the default for
   * new groups. It is also used for errors re-occurring after marked RESOLVED.
   *
   * @generated from enum value: OPEN = 1;
   */
  OPEN = 1,

  /**
   * Error Group manually acknowledged, it can have an issue link attached.
   *
   * @generated from enum value: ACKNOWLEDGED = 2;
   */
  ACKNOWLEDGED = 2,

  /**
   * Error Group manually resolved, more events for this group are not expected
   * to occur.
   *
   * @generated from enum value: RESOLVED = 3;
   */
  RESOLVED = 3,

  /**
   * The error group is muted and excluded by default on group stats requests.
   *
   * @generated from enum value: MUTED = 4;
   */
  MUTED = 4,
}

/**
 * Describes the enum google.devtools.clouderrorreporting.v1beta1.ResolutionStatus.
 */
export const ResolutionStatusSchema: GenEnum<ResolutionStatus> = /*@__PURE__*/
  enumDesc(file_google_devtools_clouderrorreporting_v1beta1_common, 0);

