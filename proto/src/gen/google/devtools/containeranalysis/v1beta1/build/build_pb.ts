// Copyright 2018 The Grafeas Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/containeranalysis/v1beta1/build/build.proto (package grafeas.v1beta1.build, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { BuildProvenance } from "../provenance/provenance_pb";
import { file_google_devtools_containeranalysis_v1beta1_provenance_provenance } from "../provenance/provenance_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/containeranalysis/v1beta1/build/build.proto.
 */
export const file_google_devtools_containeranalysis_v1beta1_build_build: GenFile = /*@__PURE__*/
  fileDesc("Cjtnb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFiZXRhMS9idWlsZC9idWlsZC5wcm90bxIVZ3JhZmVhcy52MWJldGExLmJ1aWxkIloKBUJ1aWxkEhcKD2J1aWxkZXJfdmVyc2lvbhgBIAEoCRI4CglzaWduYXR1cmUYAiABKAsyJS5ncmFmZWFzLnYxYmV0YTEuYnVpbGQuQnVpbGRTaWduYXR1cmUi0gEKDkJ1aWxkU2lnbmF0dXJlEhIKCnB1YmxpY19rZXkYASABKAkSEQoJc2lnbmF0dXJlGAIgASgMEg4KBmtleV9pZBgDIAEoCRI/CghrZXlfdHlwZRgEIAEoDjItLmdyYWZlYXMudjFiZXRhMS5idWlsZC5CdWlsZFNpZ25hdHVyZS5LZXlUeXBlIkgKB0tleVR5cGUSGAoUS0VZX1RZUEVfVU5TUEVDSUZJRUQQABIVChFQR1BfQVNDSUlfQVJNT1JFRBABEgwKCFBLSVhfUEVNEAIiZAoHRGV0YWlscxI/Cgpwcm92ZW5hbmNlGAEgASgLMisuZ3JhZmVhcy52MWJldGExLnByb3ZlbmFuY2UuQnVpbGRQcm92ZW5hbmNlEhgKEHByb3ZlbmFuY2VfYnl0ZXMYAiABKAlCfAoYaW8uZ3JhZmVhcy52MWJldGExLmJ1aWxkUAFaWGNsb3VkLmdvb2dsZS5jb20vZ28vY29udGFpbmVyYW5hbHlzaXMvYXBpdjFiZXRhMS9jb250YWluZXJhbmFseXNpc3BiO2NvbnRhaW5lcmFuYWx5c2lzcGKiAgNHUkFiBnByb3RvMw", [file_google_devtools_containeranalysis_v1beta1_provenance_provenance]);

/**
 * Note holding the version of the provider's builder and the signature of the
 * provenance message in the build details occurrence.
 *
 * @generated from message grafeas.v1beta1.build.Build
 */
export type Build = Message<"grafeas.v1beta1.build.Build"> & {
  /**
   * Required. Immutable. Version of the builder which produced this build.
   *
   * @generated from field: string builder_version = 1;
   */
  builderVersion: string;

  /**
   * Signature of the build in occurrences pointing to this build note
   * containing build details.
   *
   * @generated from field: grafeas.v1beta1.build.BuildSignature signature = 2;
   */
  signature?: BuildSignature;
};

/**
 * Describes the message grafeas.v1beta1.build.Build.
 * Use `create(BuildSchema)` to create a new message.
 */
export const BuildSchema: GenMessage<Build> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_build_build, 0);

/**
 * Message encapsulating the signature of the verified build.
 *
 * @generated from message grafeas.v1beta1.build.BuildSignature
 */
export type BuildSignature = Message<"grafeas.v1beta1.build.BuildSignature"> & {
  /**
   * Public key of the builder which can be used to verify that the related
   * findings are valid and unchanged. If `key_type` is empty, this defaults
   * to PEM encoded public keys.
   *
   * This field may be empty if `key_id` references an external key.
   *
   * For Cloud Build based signatures, this is a PEM encoded public
   * key. To verify the Cloud Build signature, place the contents of
   * this field into a file (public.pem). The signature field is base64-decoded
   * into its binary representation in signature.bin, and the provenance bytes
   * from `BuildDetails` are base64-decoded into a binary representation in
   * signed.bin. OpenSSL can then verify the signature:
   * `openssl sha256 -verify public.pem -signature signature.bin signed.bin`
   *
   * @generated from field: string public_key = 1;
   */
  publicKey: string;

  /**
   * Required. Signature of the related `BuildProvenance`. In JSON, this is
   * base-64 encoded.
   *
   * @generated from field: bytes signature = 2;
   */
  signature: Uint8Array;

  /**
   * An ID for the key used to sign. This could be either an ID for the key
   * stored in `public_key` (such as the ID or fingerprint for a PGP key, or the
   * CN for a cert), or a reference to an external key (such as a reference to a
   * key in Cloud Key Management Service).
   *
   * @generated from field: string key_id = 3;
   */
  keyId: string;

  /**
   * The type of the key, either stored in `public_key` or referenced in
   * `key_id`.
   *
   * @generated from field: grafeas.v1beta1.build.BuildSignature.KeyType key_type = 4;
   */
  keyType: BuildSignature_KeyType;
};

/**
 * Describes the message grafeas.v1beta1.build.BuildSignature.
 * Use `create(BuildSignatureSchema)` to create a new message.
 */
export const BuildSignatureSchema: GenMessage<BuildSignature> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_build_build, 1);

/**
 * Public key formats.
 *
 * @generated from enum grafeas.v1beta1.build.BuildSignature.KeyType
 */
export enum BuildSignature_KeyType {
  /**
   * `KeyType` is not set.
   *
   * @generated from enum value: KEY_TYPE_UNSPECIFIED = 0;
   */
  KEY_TYPE_UNSPECIFIED = 0,

  /**
   * `PGP ASCII Armored` public key.
   *
   * @generated from enum value: PGP_ASCII_ARMORED = 1;
   */
  PGP_ASCII_ARMORED = 1,

  /**
   * `PKIX PEM` public key.
   *
   * @generated from enum value: PKIX_PEM = 2;
   */
  PKIX_PEM = 2,
}

/**
 * Describes the enum grafeas.v1beta1.build.BuildSignature.KeyType.
 */
export const BuildSignature_KeyTypeSchema: GenEnum<BuildSignature_KeyType> = /*@__PURE__*/
  enumDesc(file_google_devtools_containeranalysis_v1beta1_build_build, 1, 0);

/**
 * Details of a build occurrence.
 *
 * @generated from message grafeas.v1beta1.build.Details
 */
export type Details = Message<"grafeas.v1beta1.build.Details"> & {
  /**
   * Required. The actual provenance for the build.
   *
   * @generated from field: grafeas.v1beta1.provenance.BuildProvenance provenance = 1;
   */
  provenance?: BuildProvenance;

  /**
   * Serialized JSON representation of the provenance, used in generating the
   * build signature in the corresponding build note. After verifying the
   * signature, `provenance_bytes` can be unmarshalled and compared to the
   * provenance to confirm that it is unchanged. A base64-encoded string
   * representation of the provenance bytes is used for the signature in order
   * to interoperate with openssl which expects this format for signature
   * verification.
   *
   * The serialized form is captured both to avoid ambiguity in how the
   * provenance is marshalled to json as well to prevent incompatibilities with
   * future changes.
   *
   * @generated from field: string provenance_bytes = 2;
   */
  provenanceBytes: string;
};

/**
 * Describes the message grafeas.v1beta1.build.Details.
 * Use `create(DetailsSchema)` to create a new message.
 */
export const DetailsSchema: GenMessage<Details> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_build_build, 2);

