// Copyright 2018 The Grafeas Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/containeranalysis/v1beta1/discovery/discovery.proto (package grafeas.v1beta1.discovery, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { NoteKind } from "../common/common_pb";
import { file_google_devtools_containeranalysis_v1beta1_common_common } from "../common/common_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/containeranalysis/v1beta1/discovery/discovery.proto.
 */
export const file_google_devtools_containeranalysis_v1beta1_discovery_discovery: GenFile = /*@__PURE__*/
  fileDesc("CkNnb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFiZXRhMS9kaXNjb3ZlcnkvZGlzY292ZXJ5LnByb3RvEhlncmFmZWFzLnYxYmV0YTEuZGlzY292ZXJ5Ij0KCURpc2NvdmVyeRIwCg1hbmFseXNpc19raW5kGAEgASgOMhkuZ3JhZmVhcy52MWJldGExLk5vdGVLaW5kIkQKB0RldGFpbHMSOQoKZGlzY292ZXJlZBgBIAEoCzIlLmdyYWZlYXMudjFiZXRhMS5kaXNjb3ZlcnkuRGlzY292ZXJlZCKGBAoKRGlzY292ZXJlZBJVChNjb250aW51b3VzX2FuYWx5c2lzGAEgASgOMjguZ3JhZmVhcy52MWJldGExLmRpc2NvdmVyeS5EaXNjb3ZlcmVkLkNvbnRpbnVvdXNBbmFseXNpcxI2ChJsYXN0X2FuYWx5c2lzX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEk0KD2FuYWx5c2lzX3N0YXR1cxgDIAEoDjI0LmdyYWZlYXMudjFiZXRhMS5kaXNjb3ZlcnkuRGlzY292ZXJlZC5BbmFseXNpc1N0YXR1cxIxChVhbmFseXNpc19zdGF0dXNfZXJyb3IYBCABKAsyEi5nb29nbGUucnBjLlN0YXR1cyJTChJDb250aW51b3VzQW5hbHlzaXMSIwofQ09OVElOVU9VU19BTkFMWVNJU19VTlNQRUNJRklFRBAAEgoKBkFDVElWRRABEgwKCElOQUNUSVZFEAIikQEKDkFuYWx5c2lzU3RhdHVzEh8KG0FOQUxZU0lTX1NUQVRVU19VTlNQRUNJRklFRBAAEgsKB1BFTkRJTkcQARIMCghTQ0FOTklORxACEhQKEEZJTklTSEVEX1NVQ0NFU1MQAxITCg9GSU5JU0hFRF9GQUlMRUQQBBIYChRGSU5JU0hFRF9VTlNVUFBPUlRFRBAFQoABChxpby5ncmFmZWFzLnYxYmV0YTEuZGlzY292ZXJ5UAFaWGNsb3VkLmdvb2dsZS5jb20vZ28vY29udGFpbmVyYW5hbHlzaXMvYXBpdjFiZXRhMS9jb250YWluZXJhbmFseXNpc3BiO2NvbnRhaW5lcmFuYWx5c2lzcGKiAgNHUkFiBnByb3RvMw", [file_google_devtools_containeranalysis_v1beta1_common_common, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * A note that indicates a type of analysis a provider would perform. This note
 * exists in a provider's project. A `Discovery` occurrence is created in a
 * consumer's project at the start of analysis.
 *
 * @generated from message grafeas.v1beta1.discovery.Discovery
 */
export type Discovery = Message<"grafeas.v1beta1.discovery.Discovery"> & {
  /**
   * Required. Immutable. The kind of analysis that is handled by this
   * discovery.
   *
   * @generated from field: grafeas.v1beta1.NoteKind analysis_kind = 1;
   */
  analysisKind: NoteKind;
};

/**
 * Describes the message grafeas.v1beta1.discovery.Discovery.
 * Use `create(DiscoverySchema)` to create a new message.
 */
export const DiscoverySchema: GenMessage<Discovery> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_discovery_discovery, 0);

/**
 * Details of a discovery occurrence.
 *
 * @generated from message grafeas.v1beta1.discovery.Details
 */
export type Details = Message<"grafeas.v1beta1.discovery.Details"> & {
  /**
   * Required. Analysis status for the discovered resource.
   *
   * @generated from field: grafeas.v1beta1.discovery.Discovered discovered = 1;
   */
  discovered?: Discovered;
};

/**
 * Describes the message grafeas.v1beta1.discovery.Details.
 * Use `create(DetailsSchema)` to create a new message.
 */
export const DetailsSchema: GenMessage<Details> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_discovery_discovery, 1);

/**
 * Provides information about the analysis status of a discovered resource.
 *
 * @generated from message grafeas.v1beta1.discovery.Discovered
 */
export type Discovered = Message<"grafeas.v1beta1.discovery.Discovered"> & {
  /**
   * Whether the resource is continuously analyzed.
   *
   * @generated from field: grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis continuous_analysis = 1;
   */
  continuousAnalysis: Discovered_ContinuousAnalysis;

  /**
   * The last time continuous analysis was done for this resource.
   *
   * @generated from field: google.protobuf.Timestamp last_analysis_time = 2;
   */
  lastAnalysisTime?: Timestamp;

  /**
   * The status of discovery for the resource.
   *
   * @generated from field: grafeas.v1beta1.discovery.Discovered.AnalysisStatus analysis_status = 3;
   */
  analysisStatus: Discovered_AnalysisStatus;

  /**
   * When an error is encountered this will contain a LocalizedMessage under
   * details to show to the user. The LocalizedMessage is output only and
   * populated by the API.
   *
   * @generated from field: google.rpc.Status analysis_status_error = 4;
   */
  analysisStatusError?: Status;
};

/**
 * Describes the message grafeas.v1beta1.discovery.Discovered.
 * Use `create(DiscoveredSchema)` to create a new message.
 */
export const DiscoveredSchema: GenMessage<Discovered> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_discovery_discovery, 2);

/**
 * Whether the resource is continuously analyzed.
 *
 * @generated from enum grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis
 */
export enum Discovered_ContinuousAnalysis {
  /**
   * Unknown.
   *
   * @generated from enum value: CONTINUOUS_ANALYSIS_UNSPECIFIED = 0;
   */
  CONTINUOUS_ANALYSIS_UNSPECIFIED = 0,

  /**
   * The resource is continuously analyzed.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * The resource is ignored for continuous analysis.
   *
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * Describes the enum grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis.
 */
export const Discovered_ContinuousAnalysisSchema: GenEnum<Discovered_ContinuousAnalysis> = /*@__PURE__*/
  enumDesc(file_google_devtools_containeranalysis_v1beta1_discovery_discovery, 2, 0);

/**
 * Analysis status for a resource. Currently for initial analysis only (not
 * updated in continuous analysis).
 *
 * @generated from enum grafeas.v1beta1.discovery.Discovered.AnalysisStatus
 */
export enum Discovered_AnalysisStatus {
  /**
   * Unknown.
   *
   * @generated from enum value: ANALYSIS_STATUS_UNSPECIFIED = 0;
   */
  ANALYSIS_STATUS_UNSPECIFIED = 0,

  /**
   * Resource is known but no action has been taken yet.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * Resource is being analyzed.
   *
   * @generated from enum value: SCANNING = 2;
   */
  SCANNING = 2,

  /**
   * Analysis has finished successfully.
   *
   * @generated from enum value: FINISHED_SUCCESS = 3;
   */
  FINISHED_SUCCESS = 3,

  /**
   * Analysis has finished unsuccessfully, the analysis itself is in a bad
   * state.
   *
   * @generated from enum value: FINISHED_FAILED = 4;
   */
  FINISHED_FAILED = 4,

  /**
   * The resource is known not to be supported
   *
   * @generated from enum value: FINISHED_UNSUPPORTED = 5;
   */
  FINISHED_UNSUPPORTED = 5,
}

/**
 * Describes the enum grafeas.v1beta1.discovery.Discovered.AnalysisStatus.
 */
export const Discovered_AnalysisStatusSchema: GenEnum<Discovered_AnalysisStatus> = /*@__PURE__*/
  enumDesc(file_google_devtools_containeranalysis_v1beta1_discovery_discovery, 2, 1);

