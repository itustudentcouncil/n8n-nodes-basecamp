// Copyright 2018 The Grafeas Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/containeranalysis/v1beta1/source/source.proto (package grafeas.v1beta1.source, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/containeranalysis/v1beta1/source/source.proto.
 */
export const file_google_devtools_containeranalysis_v1beta1_source_source: GenFile = /*@__PURE__*/
  fileDesc("Cj1nb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFiZXRhMS9zb3VyY2Uvc291cmNlLnByb3RvEhZncmFmZWFzLnYxYmV0YTEuc291cmNlIsoCCg1Tb3VyY2VDb250ZXh0EkQKCmNsb3VkX3JlcG8YASABKAsyLi5ncmFmZWFzLnYxYmV0YTEuc291cmNlLkNsb3VkUmVwb1NvdXJjZUNvbnRleHRIABI9CgZnZXJyaXQYAiABKAsyKy5ncmFmZWFzLnYxYmV0YTEuc291cmNlLkdlcnJpdFNvdXJjZUNvbnRleHRIABI3CgNnaXQYAyABKAsyKC5ncmFmZWFzLnYxYmV0YTEuc291cmNlLkdpdFNvdXJjZUNvbnRleHRIABJBCgZsYWJlbHMYBCADKAsyMS5ncmFmZWFzLnYxYmV0YTEuc291cmNlLlNvdXJjZUNvbnRleHQuTGFiZWxzRW50cnkaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUIJCgdjb250ZXh0IpYBCgxBbGlhc0NvbnRleHQSNwoEa2luZBgBIAEoDjIpLmdyYWZlYXMudjFiZXRhMS5zb3VyY2UuQWxpYXNDb250ZXh0LktpbmQSDAoEbmFtZRgCIAEoCSI/CgRLaW5kEhQKEEtJTkRfVU5TUEVDSUZJRUQQABIJCgVGSVhFRBABEgsKB01PVkFCTEUQAhIJCgVPVEhFUhAEIqsBChZDbG91ZFJlcG9Tb3VyY2VDb250ZXh0Ei8KB3JlcG9faWQYASABKAsyHi5ncmFmZWFzLnYxYmV0YTEuc291cmNlLlJlcG9JZBIVCgtyZXZpc2lvbl9pZBgCIAEoCUgAEj0KDWFsaWFzX2NvbnRleHQYAyABKAsyJC5ncmFmZWFzLnYxYmV0YTEuc291cmNlLkFsaWFzQ29udGV4dEgAQgoKCHJldmlzaW9uIqEBChNHZXJyaXRTb3VyY2VDb250ZXh0EhAKCGhvc3RfdXJpGAEgASgJEhYKDmdlcnJpdF9wcm9qZWN0GAIgASgJEhUKC3JldmlzaW9uX2lkGAMgASgJSAASPQoNYWxpYXNfY29udGV4dBgEIAEoCzIkLmdyYWZlYXMudjFiZXRhMS5zb3VyY2UuQWxpYXNDb250ZXh0SABCCgoIcmV2aXNpb24iNAoQR2l0U291cmNlQ29udGV4dBILCgN1cmwYASABKAkSEwoLcmV2aXNpb25faWQYAiABKAkiXwoGUmVwb0lkEkAKD3Byb2plY3RfcmVwb19pZBgBIAEoCzIlLmdyYWZlYXMudjFiZXRhMS5zb3VyY2UuUHJvamVjdFJlcG9JZEgAEg0KA3VpZBgCIAEoCUgAQgQKAmlkIjYKDVByb2plY3RSZXBvSWQSEgoKcHJvamVjdF9pZBgBIAEoCRIRCglyZXBvX25hbWUYAiABKAlCfQoZaW8uZ3JhZmVhcy52MWJldGExLnNvdXJjZVABWlhjbG91ZC5nb29nbGUuY29tL2dvL2NvbnRhaW5lcmFuYWx5c2lzL2FwaXYxYmV0YTEvY29udGFpbmVyYW5hbHlzaXNwYjtjb250YWluZXJhbmFseXNpc3BiogIDR1JBYgZwcm90bzM");

/**
 * A SourceContext is a reference to a tree of files. A SourceContext together
 * with a path point to a unique revision of a single file or directory.
 *
 * @generated from message grafeas.v1beta1.source.SourceContext
 */
export type SourceContext = Message<"grafeas.v1beta1.source.SourceContext"> & {
  /**
   * A SourceContext can refer any one of the following types of repositories.
   *
   * @generated from oneof grafeas.v1beta1.source.SourceContext.context
   */
  context: {
    /**
     * A SourceContext referring to a revision in a Google Cloud Source Repo.
     *
     * @generated from field: grafeas.v1beta1.source.CloudRepoSourceContext cloud_repo = 1;
     */
    value: CloudRepoSourceContext;
    case: "cloudRepo";
  } | {
    /**
     * A SourceContext referring to a Gerrit project.
     *
     * @generated from field: grafeas.v1beta1.source.GerritSourceContext gerrit = 2;
     */
    value: GerritSourceContext;
    case: "gerrit";
  } | {
    /**
     * A SourceContext referring to any third party Git repo (e.g., GitHub).
     *
     * @generated from field: grafeas.v1beta1.source.GitSourceContext git = 3;
     */
    value: GitSourceContext;
    case: "git";
  } | { case: undefined; value?: undefined };

  /**
   * Labels with user defined metadata.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message grafeas.v1beta1.source.SourceContext.
 * Use `create(SourceContextSchema)` to create a new message.
 */
export const SourceContextSchema: GenMessage<SourceContext> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_source_source, 0);

/**
 * An alias to a repo revision.
 *
 * @generated from message grafeas.v1beta1.source.AliasContext
 */
export type AliasContext = Message<"grafeas.v1beta1.source.AliasContext"> & {
  /**
   * The alias kind.
   *
   * @generated from field: grafeas.v1beta1.source.AliasContext.Kind kind = 1;
   */
  kind: AliasContext_Kind;

  /**
   * The alias name.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message grafeas.v1beta1.source.AliasContext.
 * Use `create(AliasContextSchema)` to create a new message.
 */
export const AliasContextSchema: GenMessage<AliasContext> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_source_source, 1);

/**
 * The type of an alias.
 *
 * @generated from enum grafeas.v1beta1.source.AliasContext.Kind
 */
export enum AliasContext_Kind {
  /**
   * Unknown.
   *
   * @generated from enum value: KIND_UNSPECIFIED = 0;
   */
  KIND_UNSPECIFIED = 0,

  /**
   * Git tag.
   *
   * @generated from enum value: FIXED = 1;
   */
  FIXED = 1,

  /**
   * Git branch.
   *
   * @generated from enum value: MOVABLE = 2;
   */
  MOVABLE = 2,

  /**
   * Used to specify non-standard aliases. For example, if a Git repo has a
   * ref named "refs/foo/bar".
   *
   * @generated from enum value: OTHER = 4;
   */
  OTHER = 4,
}

/**
 * Describes the enum grafeas.v1beta1.source.AliasContext.Kind.
 */
export const AliasContext_KindSchema: GenEnum<AliasContext_Kind> = /*@__PURE__*/
  enumDesc(file_google_devtools_containeranalysis_v1beta1_source_source, 1, 0);

/**
 * A CloudRepoSourceContext denotes a particular revision in a Google Cloud
 * Source Repo.
 *
 * @generated from message grafeas.v1beta1.source.CloudRepoSourceContext
 */
export type CloudRepoSourceContext = Message<"grafeas.v1beta1.source.CloudRepoSourceContext"> & {
  /**
   * The ID of the repo.
   *
   * @generated from field: grafeas.v1beta1.source.RepoId repo_id = 1;
   */
  repoId?: RepoId;

  /**
   * A revision in a Cloud Repo can be identified by either its revision ID or
   * its alias.
   *
   * @generated from oneof grafeas.v1beta1.source.CloudRepoSourceContext.revision
   */
  revision: {
    /**
     * A revision ID.
     *
     * @generated from field: string revision_id = 2;
     */
    value: string;
    case: "revisionId";
  } | {
    /**
     * An alias, which may be a branch or tag.
     *
     * @generated from field: grafeas.v1beta1.source.AliasContext alias_context = 3;
     */
    value: AliasContext;
    case: "aliasContext";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message grafeas.v1beta1.source.CloudRepoSourceContext.
 * Use `create(CloudRepoSourceContextSchema)` to create a new message.
 */
export const CloudRepoSourceContextSchema: GenMessage<CloudRepoSourceContext> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_source_source, 2);

/**
 * A SourceContext referring to a Gerrit project.
 *
 * @generated from message grafeas.v1beta1.source.GerritSourceContext
 */
export type GerritSourceContext = Message<"grafeas.v1beta1.source.GerritSourceContext"> & {
  /**
   * The URI of a running Gerrit instance.
   *
   * @generated from field: string host_uri = 1;
   */
  hostUri: string;

  /**
   * The full project name within the host. Projects may be nested, so
   * "project/subproject" is a valid project name. The "repo name" is the
   * hostURI/project.
   *
   * @generated from field: string gerrit_project = 2;
   */
  gerritProject: string;

  /**
   * A revision in a Gerrit project can be identified by either its revision ID
   * or its alias.
   *
   * @generated from oneof grafeas.v1beta1.source.GerritSourceContext.revision
   */
  revision: {
    /**
     * A revision (commit) ID.
     *
     * @generated from field: string revision_id = 3;
     */
    value: string;
    case: "revisionId";
  } | {
    /**
     * An alias, which may be a branch or tag.
     *
     * @generated from field: grafeas.v1beta1.source.AliasContext alias_context = 4;
     */
    value: AliasContext;
    case: "aliasContext";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message grafeas.v1beta1.source.GerritSourceContext.
 * Use `create(GerritSourceContextSchema)` to create a new message.
 */
export const GerritSourceContextSchema: GenMessage<GerritSourceContext> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_source_source, 3);

/**
 * A GitSourceContext denotes a particular revision in a third party Git
 * repository (e.g., GitHub).
 *
 * @generated from message grafeas.v1beta1.source.GitSourceContext
 */
export type GitSourceContext = Message<"grafeas.v1beta1.source.GitSourceContext"> & {
  /**
   * Git repository URL.
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * Git commit hash.
   *
   * @generated from field: string revision_id = 2;
   */
  revisionId: string;
};

/**
 * Describes the message grafeas.v1beta1.source.GitSourceContext.
 * Use `create(GitSourceContextSchema)` to create a new message.
 */
export const GitSourceContextSchema: GenMessage<GitSourceContext> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_source_source, 4);

/**
 * A unique identifier for a Cloud Repo.
 *
 * @generated from message grafeas.v1beta1.source.RepoId
 */
export type RepoId = Message<"grafeas.v1beta1.source.RepoId"> & {
  /**
   * A cloud repo can be identified by either its project ID and repository name
   * combination, or its globally unique identifier.
   *
   * @generated from oneof grafeas.v1beta1.source.RepoId.id
   */
  id: {
    /**
     * A combination of a project ID and a repo name.
     *
     * @generated from field: grafeas.v1beta1.source.ProjectRepoId project_repo_id = 1;
     */
    value: ProjectRepoId;
    case: "projectRepoId";
  } | {
    /**
     * A server-assigned, globally unique identifier.
     *
     * @generated from field: string uid = 2;
     */
    value: string;
    case: "uid";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message grafeas.v1beta1.source.RepoId.
 * Use `create(RepoIdSchema)` to create a new message.
 */
export const RepoIdSchema: GenMessage<RepoId> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_source_source, 5);

/**
 * Selects a repo using a Google Cloud Platform project ID (e.g.,
 * winged-cargo-31) and a repo name within that project.
 *
 * @generated from message grafeas.v1beta1.source.ProjectRepoId
 */
export type ProjectRepoId = Message<"grafeas.v1beta1.source.ProjectRepoId"> & {
  /**
   * The ID of the project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The name of the repo. Leave empty for the default repo.
   *
   * @generated from field: string repo_name = 2;
   */
  repoName: string;
};

/**
 * Describes the message grafeas.v1beta1.source.ProjectRepoId.
 * Use `create(ProjectRepoIdSchema)` to create a new message.
 */
export const ProjectRepoIdSchema: GenMessage<ProjectRepoId> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1beta1_source_source, 6);

