// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/devtools/containeranalysis/v1/containeranalysis.proto (package google.devtools.containeranalysis.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { Severity } from "../../../../grafeas/v1/severity_pb";
import { file_grafeas_v1_severity } from "../../../../grafeas/v1/severity_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/devtools/containeranalysis/v1/containeranalysis.proto.
 */
export const file_google_devtools_containeranalysis_v1_containeranalysis: GenFile = /*@__PURE__*/
  fileDesc("Cjxnb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjEvY29udGFpbmVyYW5hbHlzaXMucHJvdG8SJGdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MSKAAQopR2V0VnVsbmVyYWJpbGl0eU9jY3VycmVuY2VzU3VtbWFyeVJlcXVlc3QSQwoGcGFyZW50GAEgASgJQjPgQQL6QS0KK2Nsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1Byb2plY3QSDgoGZmlsdGVyGAIgASgJIpACCh9WdWxuZXJhYmlsaXR5T2NjdXJyZW5jZXNTdW1tYXJ5EmoKBmNvdW50cxgBIAMoCzJaLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MS5WdWxuZXJhYmlsaXR5T2NjdXJyZW5jZXNTdW1tYXJ5LkZpeGFibGVUb3RhbEJ5RGlnZXN0GoABChRGaXhhYmxlVG90YWxCeURpZ2VzdBIUCgxyZXNvdXJjZV91cmkYASABKAkSJgoIc2V2ZXJpdHkYAiABKA4yFC5ncmFmZWFzLnYxLlNldmVyaXR5EhUKDWZpeGFibGVfY291bnQYAyABKAMSEwoLdG90YWxfY291bnQYBCABKAMyoggKEUNvbnRhaW5lckFuYWx5c2lzEtIBCgxTZXRJYW1Qb2xpY3kSIi5nb29nbGUuaWFtLnYxLlNldElhbVBvbGljeVJlcXVlc3QaFS5nb29nbGUuaWFtLnYxLlBvbGljeSKGAdpBD3Jlc291cmNlLHBvbGljeYLT5JMCbjoBKlo5OgEqIjQvdjEve3Jlc291cmNlPXByb2plY3RzLyovb2NjdXJyZW5jZXMvKn06c2V0SWFtUG9saWN5Ii4vdjEve3Jlc291cmNlPXByb2plY3RzLyovbm90ZXMvKn06c2V0SWFtUG9saWN5EsoBCgxHZXRJYW1Qb2xpY3kSIi5nb29nbGUuaWFtLnYxLkdldElhbVBvbGljeVJlcXVlc3QaFS5nb29nbGUuaWFtLnYxLlBvbGljeSJ/2kEIcmVzb3VyY2WC0+STAm46ASpaOToBKiI0L3YxL3tyZXNvdXJjZT1wcm9qZWN0cy8qL29jY3VycmVuY2VzLyp9OmdldElhbVBvbGljeSIuL3YxL3tyZXNvdXJjZT1wcm9qZWN0cy8qL25vdGVzLyp9OmdldElhbVBvbGljeRKDAgoSVGVzdElhbVBlcm1pc3Npb25zEiguZ29vZ2xlLmlhbS52MS5UZXN0SWFtUGVybWlzc2lvbnNSZXF1ZXN0GikuZ29vZ2xlLmlhbS52MS5UZXN0SWFtUGVybWlzc2lvbnNSZXNwb25zZSKXAdpBFHJlc291cmNlLHBlcm1pc3Npb25zgtPkkwJ6OgEqWj86ASoiOi92MS97cmVzb3VyY2U9cHJvamVjdHMvKi9vY2N1cnJlbmNlcy8qfTp0ZXN0SWFtUGVybWlzc2lvbnMiNC92MS97cmVzb3VyY2U9cHJvamVjdHMvKi9ub3Rlcy8qfTp0ZXN0SWFtUGVybWlzc2lvbnMSjgIKIkdldFZ1bG5lcmFiaWxpdHlPY2N1cnJlbmNlc1N1bW1hcnkSTy5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjEuR2V0VnVsbmVyYWJpbGl0eU9jY3VycmVuY2VzU3VtbWFyeVJlcXVlc3QaRS5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjEuVnVsbmVyYWJpbGl0eU9jY3VycmVuY2VzU3VtbWFyeSJQ2kENcGFyZW50LGZpbHRlcoLT5JMCOhI4L3YxL3twYXJlbnQ9cHJvamVjdHMvKn0vb2NjdXJyZW5jZXM6dnVsbmVyYWJpbGl0eVN1bW1hcnkaVMpBIGNvbnRhaW5lcmFuYWx5c2lzLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybUL2AQofY29tLmdvb2dsZS5jb250YWluZXJhbmFseXNpcy52MVABWlNjbG91ZC5nb29nbGUuY29tL2dvL2NvbnRhaW5lcmFuYWx5c2lzL2FwaXYxL2NvbnRhaW5lcmFuYWx5c2lzcGI7Y29udGFpbmVyYW5hbHlzaXNwYqICA0dDQaoCKkdvb2dsZS5DbG91ZC5EZXZUb29scy5Db250YWluZXJBbmFseXNpcy5WMcoCIUdvb2dsZVxDbG91ZFxDb250YWluZXJBbmFseXNpc1xWMeoCJEdvb2dsZTo6Q2xvdWQ6OkNvbnRhaW5lckFuYWx5c2lzOjpWMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_grafeas_v1_severity]);

/**
 * Request to get a vulnerability summary for some set of occurrences.
 *
 * @generated from message google.devtools.containeranalysis.v1.GetVulnerabilityOccurrencesSummaryRequest
 */
export type GetVulnerabilityOccurrencesSummaryRequest = Message<"google.devtools.containeranalysis.v1.GetVulnerabilityOccurrencesSummaryRequest"> & {
  /**
   * Required. The name of the project to get a vulnerability summary for in the form of
   * `projects/[PROJECT_ID]`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The filter expression.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;
};

/**
 * Describes the message google.devtools.containeranalysis.v1.GetVulnerabilityOccurrencesSummaryRequest.
 * Use `create(GetVulnerabilityOccurrencesSummaryRequestSchema)` to create a new message.
 */
export const GetVulnerabilityOccurrencesSummaryRequestSchema: GenMessage<GetVulnerabilityOccurrencesSummaryRequest> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1_containeranalysis, 0);

/**
 * A summary of how many vulnerability occurrences there are per resource and
 * severity type.
 *
 * @generated from message google.devtools.containeranalysis.v1.VulnerabilityOccurrencesSummary
 */
export type VulnerabilityOccurrencesSummary = Message<"google.devtools.containeranalysis.v1.VulnerabilityOccurrencesSummary"> & {
  /**
   * A listing by resource of the number of fixable and total vulnerabilities.
   *
   * @generated from field: repeated google.devtools.containeranalysis.v1.VulnerabilityOccurrencesSummary.FixableTotalByDigest counts = 1;
   */
  counts: VulnerabilityOccurrencesSummary_FixableTotalByDigest[];
};

/**
 * Describes the message google.devtools.containeranalysis.v1.VulnerabilityOccurrencesSummary.
 * Use `create(VulnerabilityOccurrencesSummarySchema)` to create a new message.
 */
export const VulnerabilityOccurrencesSummarySchema: GenMessage<VulnerabilityOccurrencesSummary> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1_containeranalysis, 1);

/**
 * Per resource and severity counts of fixable and total vulnerabilities.
 *
 * @generated from message google.devtools.containeranalysis.v1.VulnerabilityOccurrencesSummary.FixableTotalByDigest
 */
export type VulnerabilityOccurrencesSummary_FixableTotalByDigest = Message<"google.devtools.containeranalysis.v1.VulnerabilityOccurrencesSummary.FixableTotalByDigest"> & {
  /**
   * The affected resource.
   *
   * @generated from field: string resource_uri = 1;
   */
  resourceUri: string;

  /**
   * The severity for this count. SEVERITY_UNSPECIFIED indicates total across
   * all severities.
   *
   * @generated from field: grafeas.v1.Severity severity = 2;
   */
  severity: Severity;

  /**
   * The number of fixable vulnerabilities associated with this resource.
   *
   * @generated from field: int64 fixable_count = 3;
   */
  fixableCount: bigint;

  /**
   * The total number of vulnerabilities associated with this resource.
   *
   * @generated from field: int64 total_count = 4;
   */
  totalCount: bigint;
};

/**
 * Describes the message google.devtools.containeranalysis.v1.VulnerabilityOccurrencesSummary.FixableTotalByDigest.
 * Use `create(VulnerabilityOccurrencesSummary_FixableTotalByDigestSchema)` to create a new message.
 */
export const VulnerabilityOccurrencesSummary_FixableTotalByDigestSchema: GenMessage<VulnerabilityOccurrencesSummary_FixableTotalByDigest> = /*@__PURE__*/
  messageDesc(file_google_devtools_containeranalysis_v1_containeranalysis, 1, 0);

/**
 * Retrieves analysis results of Cloud components such as Docker container
 * images. The Container Analysis API is an implementation of the
 * [Grafeas](https://grafeas.io) API.
 *
 * Analysis results are stored as a series of occurrences. An `Occurrence`
 * contains information about a specific analysis instance on a resource. An
 * occurrence refers to a `Note`. A note contains details describing the
 * analysis and is generally stored in a separate project, called a `Provider`.
 * Multiple occurrences can refer to the same note.
 *
 * For example, an SSL vulnerability could affect multiple images. In this case,
 * there would be one note for the vulnerability and an occurrence for each
 * image with the vulnerability referring to that note.
 *
 * @generated from service google.devtools.containeranalysis.v1.ContainerAnalysis
 */
export const ContainerAnalysis: GenService<{
  /**
   * Sets the access control policy on the specified note or occurrence.
   * Requires `containeranalysis.notes.setIamPolicy` or
   * `containeranalysis.occurrences.setIamPolicy` permission if the resource is
   * a note or an occurrence, respectively.
   *
   * The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for
   * notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for
   * occurrences.
   *
   * @generated from rpc google.devtools.containeranalysis.v1.ContainerAnalysis.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Gets the access control policy for a note or an occurrence resource.
   * Requires `containeranalysis.notes.setIamPolicy` or
   * `containeranalysis.occurrences.setIamPolicy` permission if the resource is
   * a note or occurrence, respectively.
   *
   * The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for
   * notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for
   * occurrences.
   *
   * @generated from rpc google.devtools.containeranalysis.v1.ContainerAnalysis.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Returns the permissions that a caller has on the specified note or
   * occurrence. Requires list permission on the project (for example,
   * `containeranalysis.notes.list`).
   *
   * The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for
   * notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for
   * occurrences.
   *
   * @generated from rpc google.devtools.containeranalysis.v1.ContainerAnalysis.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
  /**
   * Gets a summary of the number and severity of occurrences.
   *
   * @generated from rpc google.devtools.containeranalysis.v1.ContainerAnalysis.GetVulnerabilityOccurrencesSummary
   */
  getVulnerabilityOccurrencesSummary: {
    methodKind: "unary";
    input: typeof GetVulnerabilityOccurrencesSummaryRequestSchema;
    output: typeof VulnerabilityOccurrencesSummarySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_devtools_containeranalysis_v1_containeranalysis, 0);

