// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/bigtable/v2/request_stats.proto (package google.bigtable.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/bigtable/v2/request_stats.proto.
 */
export const file_google_bigtable_v2_request_stats: GenFile = /*@__PURE__*/
  fileDesc("CiZnb29nbGUvYmlndGFibGUvdjIvcmVxdWVzdF9zdGF0cy5wcm90bxISZ29vZ2xlLmJpZ3RhYmxlLnYyIoIBChJSZWFkSXRlcmF0aW9uU3RhdHMSFwoPcm93c19zZWVuX2NvdW50GAEgASgDEhsKE3Jvd3NfcmV0dXJuZWRfY291bnQYAiABKAMSGAoQY2VsbHNfc2Vlbl9jb3VudBgDIAEoAxIcChRjZWxsc19yZXR1cm5lZF9jb3VudBgEIAEoAyJRChNSZXF1ZXN0TGF0ZW5jeVN0YXRzEjoKF2Zyb250ZW5kX3NlcnZlcl9sYXRlbmN5GAEgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uIqEBChFGdWxsUmVhZFN0YXRzVmlldxJEChRyZWFkX2l0ZXJhdGlvbl9zdGF0cxgBIAEoCzImLmdvb2dsZS5iaWd0YWJsZS52Mi5SZWFkSXRlcmF0aW9uU3RhdHMSRgoVcmVxdWVzdF9sYXRlbmN5X3N0YXRzGAIgASgLMicuZ29vZ2xlLmJpZ3RhYmxlLnYyLlJlcXVlc3RMYXRlbmN5U3RhdHMiYwoMUmVxdWVzdFN0YXRzEkUKFGZ1bGxfcmVhZF9zdGF0c192aWV3GAEgASgLMiUuZ29vZ2xlLmJpZ3RhYmxlLnYyLkZ1bGxSZWFkU3RhdHNWaWV3SABCDAoKc3RhdHNfdmlld0K7AQoWY29tLmdvb2dsZS5iaWd0YWJsZS52MkIRUmVxdWVzdFN0YXRzUHJvdG9QAVo4Y2xvdWQuZ29vZ2xlLmNvbS9nby9iaWd0YWJsZS9hcGl2Mi9iaWd0YWJsZXBiO2JpZ3RhYmxlcGKqAhhHb29nbGUuQ2xvdWQuQmlndGFibGUuVjLKAhhHb29nbGVcQ2xvdWRcQmlndGFibGVcVjLqAhtHb29nbGU6OkNsb3VkOjpCaWd0YWJsZTo6VjJiBnByb3RvMw", [file_google_protobuf_duration]);

/**
 * ReadIterationStats captures information about the iteration of rows or cells
 * over the course of a read, e.g. how many results were scanned in a read
 * operation versus the results returned.
 *
 * @generated from message google.bigtable.v2.ReadIterationStats
 */
export type ReadIterationStats = Message<"google.bigtable.v2.ReadIterationStats"> & {
  /**
   * The rows seen (scanned) as part of the request. This includes the count of
   * rows returned, as captured below.
   *
   * @generated from field: int64 rows_seen_count = 1;
   */
  rowsSeenCount: bigint;

  /**
   * The rows returned as part of the request.
   *
   * @generated from field: int64 rows_returned_count = 2;
   */
  rowsReturnedCount: bigint;

  /**
   * The cells seen (scanned) as part of the request. This includes the count of
   * cells returned, as captured below.
   *
   * @generated from field: int64 cells_seen_count = 3;
   */
  cellsSeenCount: bigint;

  /**
   * The cells returned as part of the request.
   *
   * @generated from field: int64 cells_returned_count = 4;
   */
  cellsReturnedCount: bigint;
};

/**
 * Describes the message google.bigtable.v2.ReadIterationStats.
 * Use `create(ReadIterationStatsSchema)` to create a new message.
 */
export const ReadIterationStatsSchema: GenMessage<ReadIterationStats> = /*@__PURE__*/
  messageDesc(file_google_bigtable_v2_request_stats, 0);

/**
 * RequestLatencyStats provides a measurement of the latency of the request as
 * it interacts with different systems over its lifetime, e.g. how long the
 * request took to execute within a frontend server.
 *
 * @generated from message google.bigtable.v2.RequestLatencyStats
 */
export type RequestLatencyStats = Message<"google.bigtable.v2.RequestLatencyStats"> & {
  /**
   * The latency measured by the frontend server handling this request, from
   * when the request was received, to when this value is sent back in the
   * response. For more context on the component that is measuring this latency,
   * see: https://cloud.google.com/bigtable/docs/overview
   *
   * Note: This value may be slightly shorter than the value reported into
   * aggregate latency metrics in Monitoring for this request
   * (https://cloud.google.com/bigtable/docs/monitoring-instance) as this value
   * needs to be sent in the response before the latency measurement including
   * that transmission is finalized.
   *
   * Note: This value includes the end-to-end latency of contacting nodes in
   * the targeted cluster, e.g. measuring from when the first byte arrives at
   * the frontend server, to when this value is sent back as the last value in
   * the response, including any latency incurred by contacting nodes, waiting
   * for results from nodes, and finally sending results from nodes back to the
   * caller.
   *
   * @generated from field: google.protobuf.Duration frontend_server_latency = 1;
   */
  frontendServerLatency?: Duration;
};

/**
 * Describes the message google.bigtable.v2.RequestLatencyStats.
 * Use `create(RequestLatencyStatsSchema)` to create a new message.
 */
export const RequestLatencyStatsSchema: GenMessage<RequestLatencyStats> = /*@__PURE__*/
  messageDesc(file_google_bigtable_v2_request_stats, 1);

/**
 * FullReadStatsView captures all known information about a read.
 *
 * @generated from message google.bigtable.v2.FullReadStatsView
 */
export type FullReadStatsView = Message<"google.bigtable.v2.FullReadStatsView"> & {
  /**
   * Iteration stats describe how efficient the read is, e.g. comparing
   * rows seen vs. rows returned or cells seen vs cells returned can provide an
   * indication of read efficiency (the higher the ratio of seen to retuned the
   * better).
   *
   * @generated from field: google.bigtable.v2.ReadIterationStats read_iteration_stats = 1;
   */
  readIterationStats?: ReadIterationStats;

  /**
   * Request latency stats describe the time taken to complete a request, from
   * the server side.
   *
   * @generated from field: google.bigtable.v2.RequestLatencyStats request_latency_stats = 2;
   */
  requestLatencyStats?: RequestLatencyStats;
};

/**
 * Describes the message google.bigtable.v2.FullReadStatsView.
 * Use `create(FullReadStatsViewSchema)` to create a new message.
 */
export const FullReadStatsViewSchema: GenMessage<FullReadStatsView> = /*@__PURE__*/
  messageDesc(file_google_bigtable_v2_request_stats, 2);

/**
 * RequestStats is the container for additional information pertaining to a
 * single request, helpful for evaluating the performance of the sent request.
 * Currently, there are the following supported methods:
 *   * google.bigtable.v2.ReadRows
 *
 * @generated from message google.bigtable.v2.RequestStats
 */
export type RequestStats = Message<"google.bigtable.v2.RequestStats"> & {
  /**
   * Information pertaining to each request type received. The type is chosen
   * based on the requested view.
   *
   * See the messages above for additional context.
   *
   * @generated from oneof google.bigtable.v2.RequestStats.stats_view
   */
  statsView: {
    /**
     * Available with the ReadRowsRequest.RequestStatsView.REQUEST_STATS_FULL
     * view, see package google.bigtable.v2.
     *
     * @generated from field: google.bigtable.v2.FullReadStatsView full_read_stats_view = 1;
     */
    value: FullReadStatsView;
    case: "fullReadStatsView";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.bigtable.v2.RequestStats.
 * Use `create(RequestStatsSchema)` to create a new message.
 */
export const RequestStatsSchema: GenMessage<RequestStats> = /*@__PURE__*/
  messageDesc(file_google_bigtable_v2_request_stats, 3);

