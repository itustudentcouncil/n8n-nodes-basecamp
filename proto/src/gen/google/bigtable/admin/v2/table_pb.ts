// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/bigtable/admin/v2/table.proto (package google.bigtable.admin.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Type } from "./types_pb";
import { file_google_bigtable_admin_v2_types } from "./types_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/bigtable/admin/v2/table.proto.
 */
export const file_google_bigtable_admin_v2_table: GenFile = /*@__PURE__*/
  fileDesc("CiRnb29nbGUvYmlndGFibGUvYWRtaW4vdjIvdGFibGUucHJvdG8SGGdvb2dsZS5iaWd0YWJsZS5hZG1pbi52MiKbAQoLUmVzdG9yZUluZm8SQAoLc291cmNlX3R5cGUYASABKA4yKy5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuUmVzdG9yZVNvdXJjZVR5cGUSOwoLYmFja3VwX2luZm8YAiABKAsyJC5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuQmFja3VwSW5mb0gAQg0KC3NvdXJjZV9pbmZvIkkKEkNoYW5nZVN0cmVhbUNvbmZpZxIzChByZXRlbnRpb25fcGVyaW9kGAEgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uItYLCgVUYWJsZRIMCgRuYW1lGAEgASgJEk8KDmNsdXN0ZXJfc3RhdGVzGAIgAygLMjIuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLlRhYmxlLkNsdXN0ZXJTdGF0ZXNFbnRyeUID4EEDEkwKD2NvbHVtbl9mYW1pbGllcxgDIAMoCzIzLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5UYWJsZS5Db2x1bW5GYW1pbGllc0VudHJ5Ek4KC2dyYW51bGFyaXR5GAQgASgOMjQuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLlRhYmxlLlRpbWVzdGFtcEdyYW51bGFyaXR5QgPgQQUSQAoMcmVzdG9yZV9pbmZvGAYgASgLMiUuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLlJlc3RvcmVJbmZvQgPgQQMSSgoUY2hhbmdlX3N0cmVhbV9jb25maWcYCCABKAsyLC5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuQ2hhbmdlU3RyZWFtQ29uZmlnEhsKE2RlbGV0aW9uX3Byb3RlY3Rpb24YCSABKAgSWAoXYXV0b21hdGVkX2JhY2t1cF9wb2xpY3kYDSABKAsyNS5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuVGFibGUuQXV0b21hdGVkQmFja3VwUG9saWN5SAAaxgIKDENsdXN0ZXJTdGF0ZRJdChFyZXBsaWNhdGlvbl9zdGF0ZRgBIAEoDjI9Lmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5UYWJsZS5DbHVzdGVyU3RhdGUuUmVwbGljYXRpb25TdGF0ZUID4EEDEkYKD2VuY3J5cHRpb25faW5mbxgCIAMoCzIoLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5FbmNyeXB0aW9uSW5mb0ID4EEDIo4BChBSZXBsaWNhdGlvblN0YXRlEhMKD1NUQVRFX05PVF9LTk9XThAAEhAKDElOSVRJQUxJWklORxABEhcKE1BMQU5ORURfTUFJTlRFTkFOQ0UQAhIZChVVTlBMQU5ORURfTUFJTlRFTkFOQ0UQAxIJCgVSRUFEWRAEEhQKEFJFQURZX09QVElNSVpJTkcQBRqEAQoVQXV0b21hdGVkQmFja3VwUG9saWN5EjgKEHJldGVudGlvbl9wZXJpb2QYASABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CA+BBAhIxCglmcmVxdWVuY3kYAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CA+BBAhpiChJDbHVzdGVyU3RhdGVzRW50cnkSCwoDa2V5GAEgASgJEjsKBXZhbHVlGAIgASgLMiwuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLlRhYmxlLkNsdXN0ZXJTdGF0ZToCOAEaXQoTQ29sdW1uRmFtaWxpZXNFbnRyeRILCgNrZXkYASABKAkSNQoFdmFsdWUYAiABKAsyJi5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuQ29sdW1uRmFtaWx5OgI4ASJJChRUaW1lc3RhbXBHcmFudWxhcml0eRIlCiFUSU1FU1RBTVBfR1JBTlVMQVJJVFlfVU5TUEVDSUZJRUQQABIKCgZNSUxMSVMQASJxCgRWaWV3EhQKEFZJRVdfVU5TUEVDSUZJRUQQABINCglOQU1FX09OTFkQARIPCgtTQ0hFTUFfVklFVxACEhQKEFJFUExJQ0FUSU9OX1ZJRVcQAxITCg9FTkNSWVBUSU9OX1ZJRVcQBRIICgRGVUxMEAQ6X+pBXAoiYmlndGFibGVhZG1pbi5nb29nbGVhcGlzLmNvbS9UYWJsZRI2cHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L3RhYmxlcy97dGFibGV9QhkKF2F1dG9tYXRlZF9iYWNrdXBfY29uZmlnIuMFCg5BdXRob3JpemVkVmlldxIRCgRuYW1lGAEgASgJQgPgQQgSSgoLc3Vic2V0X3ZpZXcYAiABKAsyMy5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuQXV0aG9yaXplZFZpZXcuU3Vic2V0Vmlld0gAEgwKBGV0YWcYAyABKAkSGwoTZGVsZXRpb25fcHJvdGVjdGlvbhgEIAEoCBo/Cg1GYW1pbHlTdWJzZXRzEhIKCnF1YWxpZmllcnMYASADKAwSGgoScXVhbGlmaWVyX3ByZWZpeGVzGAIgAygMGvABCgpTdWJzZXRWaWV3EhQKDHJvd19wcmVmaXhlcxgBIAMoDBJeCg5mYW1pbHlfc3Vic2V0cxgCIAMoCzJGLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5BdXRob3JpemVkVmlldy5TdWJzZXRWaWV3LkZhbWlseVN1YnNldHNFbnRyeRpsChJGYW1pbHlTdWJzZXRzRW50cnkSCwoDa2V5GAEgASgJEkUKBXZhbHVlGAIgASgLMjYuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLkF1dGhvcml6ZWRWaWV3LkZhbWlseVN1YnNldHM6AjgBIlEKDFJlc3BvbnNlVmlldxIdChlSRVNQT05TRV9WSUVXX1VOU1BFQ0lGSUVEEAASDQoJTkFNRV9PTkxZEAESCQoFQkFTSUMQAhIICgRGVUxMEAM6rAHqQagBCitiaWd0YWJsZWFkbWluLmdvb2dsZWFwaXMuY29tL0F1dGhvcml6ZWRWaWV3Elhwcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vdGFibGVzL3t0YWJsZX0vYXV0aG9yaXplZFZpZXdzL3thdXRob3JpemVkX3ZpZXd9Kg9hdXRob3JpemVkVmlld3MyDmF1dGhvcml6ZWRWaWV3QhEKD2F1dGhvcml6ZWRfdmlldyJ1CgxDb2x1bW5GYW1pbHkSMQoHZ2NfcnVsZRgBIAEoCzIgLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5HY1J1bGUSMgoKdmFsdWVfdHlwZRgDIAEoCzIeLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5UeXBlItUCCgZHY1J1bGUSGgoQbWF4X251bV92ZXJzaW9ucxgBIAEoBUgAEiwKB21heF9hZ2UYAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25IABJFCgxpbnRlcnNlY3Rpb24YAyABKAsyLS5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuR2NSdWxlLkludGVyc2VjdGlvbkgAEjcKBXVuaW9uGAQgASgLMiYuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLkdjUnVsZS5VbmlvbkgAGj8KDEludGVyc2VjdGlvbhIvCgVydWxlcxgBIAMoCzIgLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5HY1J1bGUaOAoFVW5pb24SLwoFcnVsZXMYASADKAsyIC5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuR2NSdWxlQgYKBHJ1bGUi2QIKDkVuY3J5cHRpb25JbmZvElUKD2VuY3J5cHRpb25fdHlwZRgDIAEoDjI3Lmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5FbmNyeXB0aW9uSW5mby5FbmNyeXB0aW9uVHlwZUID4EEDEjIKEWVuY3J5cHRpb25fc3RhdHVzGAQgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXNCA+BBAxJJCg9rbXNfa2V5X3ZlcnNpb24YAiABKAlCMOBBA/pBKgooY2xvdWRrbXMuZ29vZ2xlYXBpcy5jb20vQ3J5cHRvS2V5VmVyc2lvbiJxCg5FbmNyeXB0aW9uVHlwZRIfChtFTkNSWVBUSU9OX1RZUEVfVU5TUEVDSUZJRUQQABIdChlHT09HTEVfREVGQVVMVF9FTkNSWVBUSU9OEAESHwobQ1VTVE9NRVJfTUFOQUdFRF9FTkNSWVBUSU9OEAIi4AMKCFNuYXBzaG90EgwKBG5hbWUYASABKAkSOgoMc291cmNlX3RhYmxlGAIgASgLMh8uZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLlRhYmxlQgPgQQMSHAoPZGF0YV9zaXplX2J5dGVzGAMgASgDQgPgQQMSNAoLY3JlYXRlX3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSLwoLZGVsZXRlX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjwKBXN0YXRlGAYgASgOMiguZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLlNuYXBzaG90LlN0YXRlQgPgQQMSEwoLZGVzY3JpcHRpb24YByABKAkiNQoFU3RhdGUSEwoPU1RBVEVfTk9UX0tOT1dOEAASCQoFUkVBRFkQARIMCghDUkVBVElORxACOnvqQXgKJWJpZ3RhYmxlYWRtaW4uZ29vZ2xlYXBpcy5jb20vU25hcHNob3QST3Byb2plY3RzL3twcm9qZWN0fS9pbnN0YW5jZXMve2luc3RhbmNlfS9jbHVzdGVycy97Y2x1c3Rlcn0vc25hcHNob3RzL3tzbmFwc2hvdH0i+QUKBkJhY2t1cBIMCgRuYW1lGAEgASgJEhwKDHNvdXJjZV90YWJsZRgCIAEoCUIG4EEF4EECEhoKDXNvdXJjZV9iYWNrdXAYCiABKAlCA+BBAxI0CgtleHBpcmVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAhIzCgpzdGFydF90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjEKCGVuZF90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhcKCnNpemVfYnl0ZXMYBiABKANCA+BBAxI6CgVzdGF0ZRgHIAEoDjImLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5CYWNrdXAuU3RhdGVCA+BBAxJGCg9lbmNyeXB0aW9uX2luZm8YCSABKAsyKC5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuRW5jcnlwdGlvbkluZm9CA+BBAxJACgtiYWNrdXBfdHlwZRgLIAEoDjIrLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5CYWNrdXAuQmFja3VwVHlwZRI4ChRob3RfdG9fc3RhbmRhcmRfdGltZRgMIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiNwoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIMCghDUkVBVElORxABEgkKBVJFQURZEAIiQAoKQmFja3VwVHlwZRIbChdCQUNLVVBfVFlQRV9VTlNQRUNJRklFRBAAEgwKCFNUQU5EQVJEEAESBwoDSE9UEAI6depBcgojYmlndGFibGVhZG1pbi5nb29nbGVhcGlzLmNvbS9CYWNrdXASS3Byb2plY3RzL3twcm9qZWN0fS9pbnN0YW5jZXMve2luc3RhbmNlfS9jbHVzdGVycy97Y2x1c3Rlcn0vYmFja3Vwcy97YmFja3VwfSLAAQoKQmFja3VwSW5mbxITCgZiYWNrdXAYASABKAlCA+BBAxIzCgpzdGFydF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjEKCGVuZF90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhkKDHNvdXJjZV90YWJsZRgEIAEoCUID4EEDEhoKDXNvdXJjZV9iYWNrdXAYCiABKAlCA+BBAypEChFSZXN0b3JlU291cmNlVHlwZRIjCh9SRVNUT1JFX1NPVVJDRV9UWVBFX1VOU1BFQ0lGSUVEEAASCgoGQkFDS1VQEAFC9wIKHGNvbS5nb29nbGUuYmlndGFibGUuYWRtaW4udjJCClRhYmxlUHJvdG9QAVo4Y2xvdWQuZ29vZ2xlLmNvbS9nby9iaWd0YWJsZS9hZG1pbi9hcGl2Mi9hZG1pbnBiO2FkbWlucGKqAh5Hb29nbGUuQ2xvdWQuQmlndGFibGUuQWRtaW4uVjLKAh5Hb29nbGVcQ2xvdWRcQmlndGFibGVcQWRtaW5cVjLqAiJHb29nbGU6OkNsb3VkOjpCaWd0YWJsZTo6QWRtaW46OlYy6kGmAQooY2xvdWRrbXMuZ29vZ2xlYXBpcy5jb20vQ3J5cHRvS2V5VmVyc2lvbhJ6cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2tleVJpbmdzL3trZXlfcmluZ30vY3J5cHRvS2V5cy97Y3J5cHRvX2tleX0vY3J5cHRvS2V5VmVyc2lvbnMve2NyeXB0b19rZXlfdmVyc2lvbn1iBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_bigtable_admin_v2_types, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * Information about a table restore.
 *
 * @generated from message google.bigtable.admin.v2.RestoreInfo
 */
export type RestoreInfo = Message<"google.bigtable.admin.v2.RestoreInfo"> & {
  /**
   * The type of the restore source.
   *
   * @generated from field: google.bigtable.admin.v2.RestoreSourceType source_type = 1;
   */
  sourceType: RestoreSourceType;

  /**
   * Information about the source used to restore the table.
   *
   * @generated from oneof google.bigtable.admin.v2.RestoreInfo.source_info
   */
  sourceInfo: {
    /**
     * Information about the backup used to restore the table. The backup
     * may no longer exist.
     *
     * @generated from field: google.bigtable.admin.v2.BackupInfo backup_info = 2;
     */
    value: BackupInfo;
    case: "backupInfo";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.bigtable.admin.v2.RestoreInfo.
 * Use `create(RestoreInfoSchema)` to create a new message.
 */
export const RestoreInfoSchema: GenMessage<RestoreInfo> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 0);

/**
 * Change stream configuration.
 *
 * @generated from message google.bigtable.admin.v2.ChangeStreamConfig
 */
export type ChangeStreamConfig = Message<"google.bigtable.admin.v2.ChangeStreamConfig"> & {
  /**
   * How long the change stream should be retained. Change stream data older
   * than the retention period will not be returned when reading the change
   * stream from the table.
   * Values must be at least 1 day and at most 7 days, and will be truncated to
   * microsecond granularity.
   *
   * @generated from field: google.protobuf.Duration retention_period = 1;
   */
  retentionPeriod?: Duration;
};

/**
 * Describes the message google.bigtable.admin.v2.ChangeStreamConfig.
 * Use `create(ChangeStreamConfigSchema)` to create a new message.
 */
export const ChangeStreamConfigSchema: GenMessage<ChangeStreamConfig> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 1);

/**
 * A collection of user data indexed by row, column, and timestamp.
 * Each table is served using the resources of its parent cluster.
 *
 * @generated from message google.bigtable.admin.v2.Table
 */
export type Table = Message<"google.bigtable.admin.v2.Table"> & {
  /**
   * The unique name of the table. Values are of the form
   * `projects/{project}/instances/{instance}/tables/[_a-zA-Z0-9][-_.a-zA-Z0-9]*`.
   * Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Map from cluster ID to per-cluster table state.
   * If it could not be determined whether or not the table has data in a
   * particular cluster (for example, if its zone is unavailable), then
   * there will be an entry for the cluster with UNKNOWN `replication_status`.
   * Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`
   *
   * @generated from field: map<string, google.bigtable.admin.v2.Table.ClusterState> cluster_states = 2;
   */
  clusterStates: { [key: string]: Table_ClusterState };

  /**
   * The column families configured for this table, mapped by column family ID.
   * Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`
   *
   * @generated from field: map<string, google.bigtable.admin.v2.ColumnFamily> column_families = 3;
   */
  columnFamilies: { [key: string]: ColumnFamily };

  /**
   * Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored
   * in this table. Timestamps not matching the granularity will be rejected. If
   * unspecified at creation time, the value will be set to `MILLIS`. Views:
   * `SCHEMA_VIEW`, `FULL`.
   *
   * @generated from field: google.bigtable.admin.v2.Table.TimestampGranularity granularity = 4;
   */
  granularity: Table_TimestampGranularity;

  /**
   * Output only. If this table was restored from another data source (e.g. a
   * backup), this field will be populated with information about the restore.
   *
   * @generated from field: google.bigtable.admin.v2.RestoreInfo restore_info = 6;
   */
  restoreInfo?: RestoreInfo;

  /**
   * If specified, enable the change stream on this table.
   * Otherwise, the change stream is disabled and the change stream is not
   * retained.
   *
   * @generated from field: google.bigtable.admin.v2.ChangeStreamConfig change_stream_config = 8;
   */
  changeStreamConfig?: ChangeStreamConfig;

  /**
   * Set to true to make the table protected against data loss. i.e. deleting
   * the following resources through Admin APIs are prohibited:
   *
   * * The table.
   * * The column families in the table.
   * * The instance containing the table.
   *
   * Note one can still delete the data stored in the table through Data APIs.
   *
   * @generated from field: bool deletion_protection = 9;
   */
  deletionProtection: boolean;

  /**
   * @generated from oneof google.bigtable.admin.v2.Table.automated_backup_config
   */
  automatedBackupConfig: {
    /**
     * If specified, automated backups are enabled for this table.
     * Otherwise, automated backups are disabled.
     *
     * @generated from field: google.bigtable.admin.v2.Table.AutomatedBackupPolicy automated_backup_policy = 13;
     */
    value: Table_AutomatedBackupPolicy;
    case: "automatedBackupPolicy";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.bigtable.admin.v2.Table.
 * Use `create(TableSchema)` to create a new message.
 */
export const TableSchema: GenMessage<Table> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 2);

/**
 * The state of a table's data in a particular cluster.
 *
 * @generated from message google.bigtable.admin.v2.Table.ClusterState
 */
export type Table_ClusterState = Message<"google.bigtable.admin.v2.Table.ClusterState"> & {
  /**
   * Output only. The state of replication for the table in this cluster.
   *
   * @generated from field: google.bigtable.admin.v2.Table.ClusterState.ReplicationState replication_state = 1;
   */
  replicationState: Table_ClusterState_ReplicationState;

  /**
   * Output only. The encryption information for the table in this cluster.
   * If the encryption key protecting this resource is customer managed, then
   * its version can be rotated in Cloud Key Management Service (Cloud KMS).
   * The primary version of the key and its status will be reflected here when
   * changes propagate from Cloud KMS.
   *
   * @generated from field: repeated google.bigtable.admin.v2.EncryptionInfo encryption_info = 2;
   */
  encryptionInfo: EncryptionInfo[];
};

/**
 * Describes the message google.bigtable.admin.v2.Table.ClusterState.
 * Use `create(Table_ClusterStateSchema)` to create a new message.
 */
export const Table_ClusterStateSchema: GenMessage<Table_ClusterState> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 2, 0);

/**
 * Table replication states.
 *
 * @generated from enum google.bigtable.admin.v2.Table.ClusterState.ReplicationState
 */
export enum Table_ClusterState_ReplicationState {
  /**
   * The replication state of the table is unknown in this cluster.
   *
   * @generated from enum value: STATE_NOT_KNOWN = 0;
   */
  STATE_NOT_KNOWN = 0,

  /**
   * The cluster was recently created, and the table must finish copying
   * over pre-existing data from other clusters before it can begin
   * receiving live replication updates and serving Data API requests.
   *
   * @generated from enum value: INITIALIZING = 1;
   */
  INITIALIZING = 1,

  /**
   * The table is temporarily unable to serve Data API requests from this
   * cluster due to planned internal maintenance.
   *
   * @generated from enum value: PLANNED_MAINTENANCE = 2;
   */
  PLANNED_MAINTENANCE = 2,

  /**
   * The table is temporarily unable to serve Data API requests from this
   * cluster due to unplanned or emergency maintenance.
   *
   * @generated from enum value: UNPLANNED_MAINTENANCE = 3;
   */
  UNPLANNED_MAINTENANCE = 3,

  /**
   * The table can serve Data API requests from this cluster. Depending on
   * replication delay, reads may not immediately reflect the state of the
   * table in other clusters.
   *
   * @generated from enum value: READY = 4;
   */
  READY = 4,

  /**
   * The table is fully created and ready for use after a restore, and is
   * being optimized for performance. When optimizations are complete, the
   * table will transition to `READY` state.
   *
   * @generated from enum value: READY_OPTIMIZING = 5;
   */
  READY_OPTIMIZING = 5,
}

/**
 * Describes the enum google.bigtable.admin.v2.Table.ClusterState.ReplicationState.
 */
export const Table_ClusterState_ReplicationStateSchema: GenEnum<Table_ClusterState_ReplicationState> = /*@__PURE__*/
  enumDesc(file_google_bigtable_admin_v2_table, 2, 0, 0);

/**
 * Defines an automated backup policy for a table
 *
 * @generated from message google.bigtable.admin.v2.Table.AutomatedBackupPolicy
 */
export type Table_AutomatedBackupPolicy = Message<"google.bigtable.admin.v2.Table.AutomatedBackupPolicy"> & {
  /**
   * Required. How long the automated backups should be retained. The only
   * supported value at this time is 3 days.
   *
   * @generated from field: google.protobuf.Duration retention_period = 1;
   */
  retentionPeriod?: Duration;

  /**
   * Required. How frequently automated backups should occur. The only
   * supported value at this time is 24 hours.
   *
   * @generated from field: google.protobuf.Duration frequency = 2;
   */
  frequency?: Duration;
};

/**
 * Describes the message google.bigtable.admin.v2.Table.AutomatedBackupPolicy.
 * Use `create(Table_AutomatedBackupPolicySchema)` to create a new message.
 */
export const Table_AutomatedBackupPolicySchema: GenMessage<Table_AutomatedBackupPolicy> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 2, 1);

/**
 * Possible timestamp granularities to use when keeping multiple versions
 * of data in a table.
 *
 * @generated from enum google.bigtable.admin.v2.Table.TimestampGranularity
 */
export enum Table_TimestampGranularity {
  /**
   * The user did not specify a granularity. Should not be returned.
   * When specified during table creation, MILLIS will be used.
   *
   * @generated from enum value: TIMESTAMP_GRANULARITY_UNSPECIFIED = 0;
   */
  TIMESTAMP_GRANULARITY_UNSPECIFIED = 0,

  /**
   * The table keeps data versioned at a granularity of 1ms.
   *
   * @generated from enum value: MILLIS = 1;
   */
  MILLIS = 1,
}

/**
 * Describes the enum google.bigtable.admin.v2.Table.TimestampGranularity.
 */
export const Table_TimestampGranularitySchema: GenEnum<Table_TimestampGranularity> = /*@__PURE__*/
  enumDesc(file_google_bigtable_admin_v2_table, 2, 0);

/**
 * Defines a view over a table's fields.
 *
 * @generated from enum google.bigtable.admin.v2.Table.View
 */
export enum Table_View {
  /**
   * Uses the default view for each method as documented in its request.
   *
   * @generated from enum value: VIEW_UNSPECIFIED = 0;
   */
  VIEW_UNSPECIFIED = 0,

  /**
   * Only populates `name`.
   *
   * @generated from enum value: NAME_ONLY = 1;
   */
  NAME_ONLY = 1,

  /**
   * Only populates `name` and fields related to the table's schema.
   *
   * @generated from enum value: SCHEMA_VIEW = 2;
   */
  SCHEMA_VIEW = 2,

  /**
   * Only populates `name` and fields related to the table's replication
   * state.
   *
   * @generated from enum value: REPLICATION_VIEW = 3;
   */
  REPLICATION_VIEW = 3,

  /**
   * Only populates `name` and fields related to the table's encryption state.
   *
   * @generated from enum value: ENCRYPTION_VIEW = 5;
   */
  ENCRYPTION_VIEW = 5,

  /**
   * Populates all fields.
   *
   * @generated from enum value: FULL = 4;
   */
  FULL = 4,
}

/**
 * Describes the enum google.bigtable.admin.v2.Table.View.
 */
export const Table_ViewSchema: GenEnum<Table_View> = /*@__PURE__*/
  enumDesc(file_google_bigtable_admin_v2_table, 2, 1);

/**
 * AuthorizedViews represent subsets of a particular Cloud Bigtable table. Users
 * can configure access to each Authorized View independently from the table and
 * use the existing Data APIs to access the subset of data.
 *
 * @generated from message google.bigtable.admin.v2.AuthorizedView
 */
export type AuthorizedView = Message<"google.bigtable.admin.v2.AuthorizedView"> & {
  /**
   * Identifier. The name of this AuthorizedView.
   * Values are of the form
   * `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The type of this AuthorizedView.
   *
   * @generated from oneof google.bigtable.admin.v2.AuthorizedView.authorized_view
   */
  authorizedView: {
    /**
     * An AuthorizedView permitting access to an explicit subset of a Table.
     *
     * @generated from field: google.bigtable.admin.v2.AuthorizedView.SubsetView subset_view = 2;
     */
    value: AuthorizedView_SubsetView;
    case: "subsetView";
  } | { case: undefined; value?: undefined };

  /**
   * The etag for this AuthorizedView.
   * If this is provided on update, it must match the server's etag. The server
   * returns ABORTED error on a mismatched etag.
   *
   * @generated from field: string etag = 3;
   */
  etag: string;

  /**
   * Set to true to make the AuthorizedView protected against deletion.
   * The parent Table and containing Instance cannot be deleted if an
   * AuthorizedView has this bit set.
   *
   * @generated from field: bool deletion_protection = 4;
   */
  deletionProtection: boolean;
};

/**
 * Describes the message google.bigtable.admin.v2.AuthorizedView.
 * Use `create(AuthorizedViewSchema)` to create a new message.
 */
export const AuthorizedViewSchema: GenMessage<AuthorizedView> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 3);

/**
 * Subsets of a column family that are included in this AuthorizedView.
 *
 * @generated from message google.bigtable.admin.v2.AuthorizedView.FamilySubsets
 */
export type AuthorizedView_FamilySubsets = Message<"google.bigtable.admin.v2.AuthorizedView.FamilySubsets"> & {
  /**
   * Individual exact column qualifiers to be included in the AuthorizedView.
   *
   * @generated from field: repeated bytes qualifiers = 1;
   */
  qualifiers: Uint8Array[];

  /**
   * Prefixes for qualifiers to be included in the AuthorizedView. Every
   * qualifier starting with one of these prefixes is included in the
   * AuthorizedView. To provide access to all qualifiers, include the empty
   * string as a prefix
   * ("").
   *
   * @generated from field: repeated bytes qualifier_prefixes = 2;
   */
  qualifierPrefixes: Uint8Array[];
};

/**
 * Describes the message google.bigtable.admin.v2.AuthorizedView.FamilySubsets.
 * Use `create(AuthorizedView_FamilySubsetsSchema)` to create a new message.
 */
export const AuthorizedView_FamilySubsetsSchema: GenMessage<AuthorizedView_FamilySubsets> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 3, 0);

/**
 * Defines a simple AuthorizedView that is a subset of the underlying Table.
 *
 * @generated from message google.bigtable.admin.v2.AuthorizedView.SubsetView
 */
export type AuthorizedView_SubsetView = Message<"google.bigtable.admin.v2.AuthorizedView.SubsetView"> & {
  /**
   * Row prefixes to be included in the AuthorizedView.
   * To provide access to all rows, include the empty string as a prefix ("").
   *
   * @generated from field: repeated bytes row_prefixes = 1;
   */
  rowPrefixes: Uint8Array[];

  /**
   * Map from column family name to the columns in this family to be included
   * in the AuthorizedView.
   *
   * @generated from field: map<string, google.bigtable.admin.v2.AuthorizedView.FamilySubsets> family_subsets = 2;
   */
  familySubsets: { [key: string]: AuthorizedView_FamilySubsets };
};

/**
 * Describes the message google.bigtable.admin.v2.AuthorizedView.SubsetView.
 * Use `create(AuthorizedView_SubsetViewSchema)` to create a new message.
 */
export const AuthorizedView_SubsetViewSchema: GenMessage<AuthorizedView_SubsetView> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 3, 1);

/**
 * Defines a subset of an AuthorizedView's fields.
 *
 * @generated from enum google.bigtable.admin.v2.AuthorizedView.ResponseView
 */
export enum AuthorizedView_ResponseView {
  /**
   * Uses the default view for each method as documented in the request.
   *
   * @generated from enum value: RESPONSE_VIEW_UNSPECIFIED = 0;
   */
  RESPONSE_VIEW_UNSPECIFIED = 0,

  /**
   * Only populates `name`.
   *
   * @generated from enum value: NAME_ONLY = 1;
   */
  NAME_ONLY = 1,

  /**
   * Only populates the AuthorizedView's basic metadata. This includes:
   * name, deletion_protection, etag.
   *
   * @generated from enum value: BASIC = 2;
   */
  BASIC = 2,

  /**
   * Populates every fields.
   *
   * @generated from enum value: FULL = 3;
   */
  FULL = 3,
}

/**
 * Describes the enum google.bigtable.admin.v2.AuthorizedView.ResponseView.
 */
export const AuthorizedView_ResponseViewSchema: GenEnum<AuthorizedView_ResponseView> = /*@__PURE__*/
  enumDesc(file_google_bigtable_admin_v2_table, 3, 0);

/**
 * A set of columns within a table which share a common configuration.
 *
 * @generated from message google.bigtable.admin.v2.ColumnFamily
 */
export type ColumnFamily = Message<"google.bigtable.admin.v2.ColumnFamily"> & {
  /**
   * Garbage collection rule specified as a protobuf.
   * Must serialize to at most 500 bytes.
   *
   * NOTE: Garbage collection executes opportunistically in the background, and
   * so it's possible for reads to return a cell even if it matches the active
   * GC expression for its family.
   *
   * @generated from field: google.bigtable.admin.v2.GcRule gc_rule = 1;
   */
  gcRule?: GcRule;

  /**
   * The type of data stored in each of this family's cell values, including its
   * full encoding. If omitted, the family only serves raw untyped bytes.
   *
   * For now, only the `Aggregate` type is supported.
   *
   * `Aggregate` can only be set at family creation and is immutable afterwards.
   *
   *
   * If `value_type` is `Aggregate`, written data must be compatible with:
   *  * `value_type.input_type` for `AddInput` mutations
   *
   * @generated from field: google.bigtable.admin.v2.Type value_type = 3;
   */
  valueType?: Type;
};

/**
 * Describes the message google.bigtable.admin.v2.ColumnFamily.
 * Use `create(ColumnFamilySchema)` to create a new message.
 */
export const ColumnFamilySchema: GenMessage<ColumnFamily> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 4);

/**
 * Rule for determining which cells to delete during garbage collection.
 *
 * @generated from message google.bigtable.admin.v2.GcRule
 */
export type GcRule = Message<"google.bigtable.admin.v2.GcRule"> & {
  /**
   * Garbage collection rules.
   *
   * @generated from oneof google.bigtable.admin.v2.GcRule.rule
   */
  rule: {
    /**
     * Delete all cells in a column except the most recent N.
     *
     * @generated from field: int32 max_num_versions = 1;
     */
    value: number;
    case: "maxNumVersions";
  } | {
    /**
     * Delete cells in a column older than the given age.
     * Values must be at least one millisecond, and will be truncated to
     * microsecond granularity.
     *
     * @generated from field: google.protobuf.Duration max_age = 2;
     */
    value: Duration;
    case: "maxAge";
  } | {
    /**
     * Delete cells that would be deleted by every nested rule.
     *
     * @generated from field: google.bigtable.admin.v2.GcRule.Intersection intersection = 3;
     */
    value: GcRule_Intersection;
    case: "intersection";
  } | {
    /**
     * Delete cells that would be deleted by any nested rule.
     *
     * @generated from field: google.bigtable.admin.v2.GcRule.Union union = 4;
     */
    value: GcRule_Union;
    case: "union";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.bigtable.admin.v2.GcRule.
 * Use `create(GcRuleSchema)` to create a new message.
 */
export const GcRuleSchema: GenMessage<GcRule> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 5);

/**
 * A GcRule which deletes cells matching all of the given rules.
 *
 * @generated from message google.bigtable.admin.v2.GcRule.Intersection
 */
export type GcRule_Intersection = Message<"google.bigtable.admin.v2.GcRule.Intersection"> & {
  /**
   * Only delete cells which would be deleted by every element of `rules`.
   *
   * @generated from field: repeated google.bigtable.admin.v2.GcRule rules = 1;
   */
  rules: GcRule[];
};

/**
 * Describes the message google.bigtable.admin.v2.GcRule.Intersection.
 * Use `create(GcRule_IntersectionSchema)` to create a new message.
 */
export const GcRule_IntersectionSchema: GenMessage<GcRule_Intersection> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 5, 0);

/**
 * A GcRule which deletes cells matching any of the given rules.
 *
 * @generated from message google.bigtable.admin.v2.GcRule.Union
 */
export type GcRule_Union = Message<"google.bigtable.admin.v2.GcRule.Union"> & {
  /**
   * Delete cells which would be deleted by any element of `rules`.
   *
   * @generated from field: repeated google.bigtable.admin.v2.GcRule rules = 1;
   */
  rules: GcRule[];
};

/**
 * Describes the message google.bigtable.admin.v2.GcRule.Union.
 * Use `create(GcRule_UnionSchema)` to create a new message.
 */
export const GcRule_UnionSchema: GenMessage<GcRule_Union> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 5, 1);

/**
 * Encryption information for a given resource.
 * If this resource is protected with customer managed encryption, the in-use
 * Cloud Key Management Service (Cloud KMS) key version is specified along with
 * its status.
 *
 * @generated from message google.bigtable.admin.v2.EncryptionInfo
 */
export type EncryptionInfo = Message<"google.bigtable.admin.v2.EncryptionInfo"> & {
  /**
   * Output only. The type of encryption used to protect this resource.
   *
   * @generated from field: google.bigtable.admin.v2.EncryptionInfo.EncryptionType encryption_type = 3;
   */
  encryptionType: EncryptionInfo_EncryptionType;

  /**
   * Output only. The status of encrypt/decrypt calls on underlying data for
   * this resource. Regardless of status, the existing data is always encrypted
   * at rest.
   *
   * @generated from field: google.rpc.Status encryption_status = 4;
   */
  encryptionStatus?: Status;

  /**
   * Output only. The version of the Cloud KMS key specified in the parent
   * cluster that is in use for the data underlying this table.
   *
   * @generated from field: string kms_key_version = 2;
   */
  kmsKeyVersion: string;
};

/**
 * Describes the message google.bigtable.admin.v2.EncryptionInfo.
 * Use `create(EncryptionInfoSchema)` to create a new message.
 */
export const EncryptionInfoSchema: GenMessage<EncryptionInfo> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 6);

/**
 * Possible encryption types for a resource.
 *
 * @generated from enum google.bigtable.admin.v2.EncryptionInfo.EncryptionType
 */
export enum EncryptionInfo_EncryptionType {
  /**
   * Encryption type was not specified, though data at rest remains encrypted.
   *
   * @generated from enum value: ENCRYPTION_TYPE_UNSPECIFIED = 0;
   */
  ENCRYPTION_TYPE_UNSPECIFIED = 0,

  /**
   * The data backing this resource is encrypted at rest with a key that is
   * fully managed by Google. No key version or status will be populated.
   * This is the default state.
   *
   * @generated from enum value: GOOGLE_DEFAULT_ENCRYPTION = 1;
   */
  GOOGLE_DEFAULT_ENCRYPTION = 1,

  /**
   * The data backing this resource is encrypted at rest with a key that is
   * managed by the customer.
   * The in-use version of the key and its status are populated for
   * CMEK-protected tables.
   * CMEK-protected backups are pinned to the key version that was in use at
   * the time the backup was taken. This key version is populated but its
   * status is not tracked and is reported as `UNKNOWN`.
   *
   * @generated from enum value: CUSTOMER_MANAGED_ENCRYPTION = 2;
   */
  CUSTOMER_MANAGED_ENCRYPTION = 2,
}

/**
 * Describes the enum google.bigtable.admin.v2.EncryptionInfo.EncryptionType.
 */
export const EncryptionInfo_EncryptionTypeSchema: GenEnum<EncryptionInfo_EncryptionType> = /*@__PURE__*/
  enumDesc(file_google_bigtable_admin_v2_table, 6, 0);

/**
 * A snapshot of a table at a particular time. A snapshot can be used as a
 * checkpoint for data restoration or a data source for a new table.
 *
 * Note: This is a private alpha release of Cloud Bigtable snapshots. This
 * feature is not currently available to most Cloud Bigtable customers. This
 * feature might be changed in backward-incompatible ways and is not recommended
 * for production use. It is not subject to any SLA or deprecation policy.
 *
 * @generated from message google.bigtable.admin.v2.Snapshot
 */
export type Snapshot = Message<"google.bigtable.admin.v2.Snapshot"> & {
  /**
   * The unique name of the snapshot.
   * Values are of the form
   * `projects/{project}/instances/{instance}/clusters/{cluster}/snapshots/{snapshot}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The source table at the time the snapshot was taken.
   *
   * @generated from field: google.bigtable.admin.v2.Table source_table = 2;
   */
  sourceTable?: Table;

  /**
   * Output only. The size of the data in the source table at the time the
   * snapshot was taken. In some cases, this value may be computed
   * asynchronously via a background process and a placeholder of 0 will be used
   * in the meantime.
   *
   * @generated from field: int64 data_size_bytes = 3;
   */
  dataSizeBytes: bigint;

  /**
   * Output only. The time when the snapshot is created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * The time when the snapshot will be deleted. The maximum amount of time a
   * snapshot can stay active is 365 days. If 'ttl' is not specified,
   * the default maximum of 365 days will be used.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 5;
   */
  deleteTime?: Timestamp;

  /**
   * Output only. The current state of the snapshot.
   *
   * @generated from field: google.bigtable.admin.v2.Snapshot.State state = 6;
   */
  state: Snapshot_State;

  /**
   * Description of the snapshot.
   *
   * @generated from field: string description = 7;
   */
  description: string;
};

/**
 * Describes the message google.bigtable.admin.v2.Snapshot.
 * Use `create(SnapshotSchema)` to create a new message.
 */
export const SnapshotSchema: GenMessage<Snapshot> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 7);

/**
 * Possible states of a snapshot.
 *
 * @generated from enum google.bigtable.admin.v2.Snapshot.State
 */
export enum Snapshot_State {
  /**
   * The state of the snapshot could not be determined.
   *
   * @generated from enum value: STATE_NOT_KNOWN = 0;
   */
  STATE_NOT_KNOWN = 0,

  /**
   * The snapshot has been successfully created and can serve all requests.
   *
   * @generated from enum value: READY = 1;
   */
  READY = 1,

  /**
   * The snapshot is currently being created, and may be destroyed if the
   * creation process encounters an error. A snapshot may not be restored to a
   * table while it is being created.
   *
   * @generated from enum value: CREATING = 2;
   */
  CREATING = 2,
}

/**
 * Describes the enum google.bigtable.admin.v2.Snapshot.State.
 */
export const Snapshot_StateSchema: GenEnum<Snapshot_State> = /*@__PURE__*/
  enumDesc(file_google_bigtable_admin_v2_table, 7, 0);

/**
 * A backup of a Cloud Bigtable table.
 *
 * @generated from message google.bigtable.admin.v2.Backup
 */
export type Backup = Message<"google.bigtable.admin.v2.Backup"> & {
  /**
   * A globally unique identifier for the backup which cannot be
   * changed. Values are of the form
   * `projects/{project}/instances/{instance}/clusters/{cluster}/
   *    backups/[_a-zA-Z0-9][-_.a-zA-Z0-9]*`
   * The final segment of the name must be between 1 and 50 characters
   * in length.
   *
   * The backup is stored in the cluster identified by the prefix of the backup
   * name of the form
   * `projects/{project}/instances/{instance}/clusters/{cluster}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Immutable. Name of the table from which this backup was created.
   * This needs to be in the same instance as the backup. Values are of the form
   * `projects/{project}/instances/{instance}/tables/{source_table}`.
   *
   * @generated from field: string source_table = 2;
   */
  sourceTable: string;

  /**
   * Output only. Name of the backup from which this backup was copied. If a
   * backup is not created by copying a backup, this field will be empty. Values
   * are of the form:
   * projects/<project>/instances/<instance>/clusters/<cluster>/backups/<backup>
   *
   * @generated from field: string source_backup = 10;
   */
  sourceBackup: string;

  /**
   * Required. The expiration time of the backup.
   * When creating a backup or updating its `expire_time`, the value must be
   * greater than the backup creation time by:
   * - At least 6 hours
   * - At most 90 days
   *
   * Once the `expire_time` has passed, Cloud Bigtable will delete the backup.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 3;
   */
  expireTime?: Timestamp;

  /**
   * Output only. `start_time` is the time that the backup was started
   * (i.e. approximately the time the
   * [CreateBackup][google.bigtable.admin.v2.BigtableTableAdmin.CreateBackup]
   * request is received).  The row data in this backup will be no older than
   * this timestamp.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;

  /**
   * Output only. `end_time` is the time that the backup was finished. The row
   * data in the backup will be no newer than this timestamp.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 5;
   */
  endTime?: Timestamp;

  /**
   * Output only. Size of the backup in bytes.
   *
   * @generated from field: int64 size_bytes = 6;
   */
  sizeBytes: bigint;

  /**
   * Output only. The current state of the backup.
   *
   * @generated from field: google.bigtable.admin.v2.Backup.State state = 7;
   */
  state: Backup_State;

  /**
   * Output only. The encryption information for the backup.
   *
   * @generated from field: google.bigtable.admin.v2.EncryptionInfo encryption_info = 9;
   */
  encryptionInfo?: EncryptionInfo;

  /**
   * Indicates the backup type of the backup.
   *
   * @generated from field: google.bigtable.admin.v2.Backup.BackupType backup_type = 11;
   */
  backupType: Backup_BackupType;

  /**
   * The time at which the hot backup will be converted to a standard backup.
   * Once the `hot_to_standard_time` has passed, Cloud Bigtable will convert the
   * hot backup to a standard backup. This value must be greater than the backup
   * creation time by:
   * - At least 24 hours
   *
   * This field only applies for hot backups. When creating or updating a
   * standard backup, attempting to set this field will fail the request.
   *
   * @generated from field: google.protobuf.Timestamp hot_to_standard_time = 12;
   */
  hotToStandardTime?: Timestamp;
};

/**
 * Describes the message google.bigtable.admin.v2.Backup.
 * Use `create(BackupSchema)` to create a new message.
 */
export const BackupSchema: GenMessage<Backup> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 8);

/**
 * Indicates the current state of the backup.
 *
 * @generated from enum google.bigtable.admin.v2.Backup.State
 */
export enum Backup_State {
  /**
   * Not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The pending backup is still being created. Operations on the
   * backup may fail with `FAILED_PRECONDITION` in this state.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The backup is complete and ready for use.
   *
   * @generated from enum value: READY = 2;
   */
  READY = 2,
}

/**
 * Describes the enum google.bigtable.admin.v2.Backup.State.
 */
export const Backup_StateSchema: GenEnum<Backup_State> = /*@__PURE__*/
  enumDesc(file_google_bigtable_admin_v2_table, 8, 0);

/**
 * The type of the backup.
 *
 * @generated from enum google.bigtable.admin.v2.Backup.BackupType
 */
export enum Backup_BackupType {
  /**
   * Not specified.
   *
   * @generated from enum value: BACKUP_TYPE_UNSPECIFIED = 0;
   */
  BACKUP_TYPE_UNSPECIFIED = 0,

  /**
   * The default type for Cloud Bigtable managed backups. Supported for
   * backups created in both HDD and SSD instances. Requires optimization when
   * restored to a table in an SSD instance.
   *
   * @generated from enum value: STANDARD = 1;
   */
  STANDARD = 1,

  /**
   * A backup type with faster restore to SSD performance. Only supported for
   * backups created in SSD instances. A new SSD table restored from a hot
   * backup reaches production performance more quickly than a standard
   * backup.
   *
   * @generated from enum value: HOT = 2;
   */
  HOT = 2,
}

/**
 * Describes the enum google.bigtable.admin.v2.Backup.BackupType.
 */
export const Backup_BackupTypeSchema: GenEnum<Backup_BackupType> = /*@__PURE__*/
  enumDesc(file_google_bigtable_admin_v2_table, 8, 1);

/**
 * Information about a backup.
 *
 * @generated from message google.bigtable.admin.v2.BackupInfo
 */
export type BackupInfo = Message<"google.bigtable.admin.v2.BackupInfo"> & {
  /**
   * Output only. Name of the backup.
   *
   * @generated from field: string backup = 1;
   */
  backup: string;

  /**
   * Output only. The time that the backup was started. Row data in the backup
   * will be no older than this timestamp.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * Output only. This time that the backup was finished. Row data in the
   * backup will be no newer than this timestamp.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  /**
   * Output only. Name of the table the backup was created from.
   *
   * @generated from field: string source_table = 4;
   */
  sourceTable: string;

  /**
   * Output only. Name of the backup from which this backup was copied. If a
   * backup is not created by copying a backup, this field will be empty. Values
   * are of the form:
   * projects/<project>/instances/<instance>/clusters/<cluster>/backups/<backup>
   *
   * @generated from field: string source_backup = 10;
   */
  sourceBackup: string;
};

/**
 * Describes the message google.bigtable.admin.v2.BackupInfo.
 * Use `create(BackupInfoSchema)` to create a new message.
 */
export const BackupInfoSchema: GenMessage<BackupInfo> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_table, 9);

/**
 * Indicates the type of the restore source.
 *
 * @generated from enum google.bigtable.admin.v2.RestoreSourceType
 */
export enum RestoreSourceType {
  /**
   * No restore associated.
   *
   * @generated from enum value: RESTORE_SOURCE_TYPE_UNSPECIFIED = 0;
   */
  RESTORE_SOURCE_TYPE_UNSPECIFIED = 0,

  /**
   * A backup was used as the source of the restore.
   *
   * @generated from enum value: BACKUP = 1;
   */
  BACKUP = 1,
}

/**
 * Describes the enum google.bigtable.admin.v2.RestoreSourceType.
 */
export const RestoreSourceTypeSchema: GenEnum<RestoreSourceType> = /*@__PURE__*/
  enumDesc(file_google_bigtable_admin_v2_table, 0);

