// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/bigtable/admin/v2/bigtable_instance_admin.proto (package google.bigtable.admin.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { AppProfile, AppProfileSchema, Cluster, ClusterSchema, HotTablet, Instance, InstanceSchema } from "./instance_pb";
import { file_google_bigtable_admin_v2_instance } from "./instance_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/bigtable/admin/v2/bigtable_instance_admin.proto.
 */
export const file_google_bigtable_admin_v2_bigtable_instance_admin: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_bigtable_admin_v2_instance, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Request message for BigtableInstanceAdmin.CreateInstance.
 *
 * @generated from message google.bigtable.admin.v2.CreateInstanceRequest
 */
export type CreateInstanceRequest = Message<"google.bigtable.admin.v2.CreateInstanceRequest"> & {
  /**
   * Required. The unique name of the project in which to create the new
   * instance. Values are of the form `projects/{project}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID to be used when referring to the new instance within its
   * project, e.g., just `myinstance` rather than
   * `projects/myproject/instances/myinstance`.
   *
   * @generated from field: string instance_id = 2;
   */
  instanceId: string;

  /**
   * Required. The instance to create.
   * Fields marked `OutputOnly` must be left blank.
   *
   * @generated from field: google.bigtable.admin.v2.Instance instance = 3;
   */
  instance?: Instance;

  /**
   * Required. The clusters to be created within the instance, mapped by desired
   * cluster ID, e.g., just `mycluster` rather than
   * `projects/myproject/instances/myinstance/clusters/mycluster`.
   * Fields marked `OutputOnly` must be left blank.
   * Currently, at most four clusters can be specified.
   *
   * @generated from field: map<string, google.bigtable.admin.v2.Cluster> clusters = 4;
   */
  clusters: { [key: string]: Cluster };
};

/**
 * Describes the message google.bigtable.admin.v2.CreateInstanceRequest.
 * Use `create(CreateInstanceRequestSchema)` to create a new message.
 */
export const CreateInstanceRequestSchema: GenMessage<CreateInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 0);

/**
 * Request message for BigtableInstanceAdmin.GetInstance.
 *
 * @generated from message google.bigtable.admin.v2.GetInstanceRequest
 */
export type GetInstanceRequest = Message<"google.bigtable.admin.v2.GetInstanceRequest"> & {
  /**
   * Required. The unique name of the requested instance. Values are of the form
   * `projects/{project}/instances/{instance}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.bigtable.admin.v2.GetInstanceRequest.
 * Use `create(GetInstanceRequestSchema)` to create a new message.
 */
export const GetInstanceRequestSchema: GenMessage<GetInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 1);

/**
 * Request message for BigtableInstanceAdmin.ListInstances.
 *
 * @generated from message google.bigtable.admin.v2.ListInstancesRequest
 */
export type ListInstancesRequest = Message<"google.bigtable.admin.v2.ListInstancesRequest"> & {
  /**
   * Required. The unique name of the project for which a list of instances is
   * requested. Values are of the form `projects/{project}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * DEPRECATED: This field is unused and ignored.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message google.bigtable.admin.v2.ListInstancesRequest.
 * Use `create(ListInstancesRequestSchema)` to create a new message.
 */
export const ListInstancesRequestSchema: GenMessage<ListInstancesRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 2);

/**
 * Response message for BigtableInstanceAdmin.ListInstances.
 *
 * @generated from message google.bigtable.admin.v2.ListInstancesResponse
 */
export type ListInstancesResponse = Message<"google.bigtable.admin.v2.ListInstancesResponse"> & {
  /**
   * The list of requested instances.
   *
   * @generated from field: repeated google.bigtable.admin.v2.Instance instances = 1;
   */
  instances: Instance[];

  /**
   * Locations from which Instance information could not be retrieved,
   * due to an outage or some other transient condition.
   * Instances whose Clusters are all in one of the failed locations
   * may be missing from `instances`, and Instances with at least one
   * Cluster in a failed location may only have partial information returned.
   * Values are of the form `projects/<project>/locations/<zone_id>`
   *
   * @generated from field: repeated string failed_locations = 2;
   */
  failedLocations: string[];

  /**
   * DEPRECATED: This field is unused and ignored.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.bigtable.admin.v2.ListInstancesResponse.
 * Use `create(ListInstancesResponseSchema)` to create a new message.
 */
export const ListInstancesResponseSchema: GenMessage<ListInstancesResponse> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 3);

/**
 * Request message for BigtableInstanceAdmin.PartialUpdateInstance.
 *
 * @generated from message google.bigtable.admin.v2.PartialUpdateInstanceRequest
 */
export type PartialUpdateInstanceRequest = Message<"google.bigtable.admin.v2.PartialUpdateInstanceRequest"> & {
  /**
   * Required. The Instance which will (partially) replace the current value.
   *
   * @generated from field: google.bigtable.admin.v2.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Required. The subset of Instance fields which should be replaced.
   * Must be explicitly set.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.bigtable.admin.v2.PartialUpdateInstanceRequest.
 * Use `create(PartialUpdateInstanceRequestSchema)` to create a new message.
 */
export const PartialUpdateInstanceRequestSchema: GenMessage<PartialUpdateInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 4);

/**
 * Request message for BigtableInstanceAdmin.DeleteInstance.
 *
 * @generated from message google.bigtable.admin.v2.DeleteInstanceRequest
 */
export type DeleteInstanceRequest = Message<"google.bigtable.admin.v2.DeleteInstanceRequest"> & {
  /**
   * Required. The unique name of the instance to be deleted.
   * Values are of the form `projects/{project}/instances/{instance}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.bigtable.admin.v2.DeleteInstanceRequest.
 * Use `create(DeleteInstanceRequestSchema)` to create a new message.
 */
export const DeleteInstanceRequestSchema: GenMessage<DeleteInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 5);

/**
 * Request message for BigtableInstanceAdmin.CreateCluster.
 *
 * @generated from message google.bigtable.admin.v2.CreateClusterRequest
 */
export type CreateClusterRequest = Message<"google.bigtable.admin.v2.CreateClusterRequest"> & {
  /**
   * Required. The unique name of the instance in which to create the new
   * cluster. Values are of the form `projects/{project}/instances/{instance}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID to be used when referring to the new cluster within its
   * instance, e.g., just `mycluster` rather than
   * `projects/myproject/instances/myinstance/clusters/mycluster`.
   *
   * @generated from field: string cluster_id = 2;
   */
  clusterId: string;

  /**
   * Required. The cluster to be created.
   * Fields marked `OutputOnly` must be left blank.
   *
   * @generated from field: google.bigtable.admin.v2.Cluster cluster = 3;
   */
  cluster?: Cluster;
};

/**
 * Describes the message google.bigtable.admin.v2.CreateClusterRequest.
 * Use `create(CreateClusterRequestSchema)` to create a new message.
 */
export const CreateClusterRequestSchema: GenMessage<CreateClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 6);

/**
 * Request message for BigtableInstanceAdmin.GetCluster.
 *
 * @generated from message google.bigtable.admin.v2.GetClusterRequest
 */
export type GetClusterRequest = Message<"google.bigtable.admin.v2.GetClusterRequest"> & {
  /**
   * Required. The unique name of the requested cluster. Values are of the form
   * `projects/{project}/instances/{instance}/clusters/{cluster}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.bigtable.admin.v2.GetClusterRequest.
 * Use `create(GetClusterRequestSchema)` to create a new message.
 */
export const GetClusterRequestSchema: GenMessage<GetClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 7);

/**
 * Request message for BigtableInstanceAdmin.ListClusters.
 *
 * @generated from message google.bigtable.admin.v2.ListClustersRequest
 */
export type ListClustersRequest = Message<"google.bigtable.admin.v2.ListClustersRequest"> & {
  /**
   * Required. The unique name of the instance for which a list of clusters is
   * requested. Values are of the form
   * `projects/{project}/instances/{instance}`. Use `{instance} = '-'` to list
   * Clusters for all Instances in a project, e.g.,
   * `projects/myproject/instances/-`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * DEPRECATED: This field is unused and ignored.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message google.bigtable.admin.v2.ListClustersRequest.
 * Use `create(ListClustersRequestSchema)` to create a new message.
 */
export const ListClustersRequestSchema: GenMessage<ListClustersRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 8);

/**
 * Response message for BigtableInstanceAdmin.ListClusters.
 *
 * @generated from message google.bigtable.admin.v2.ListClustersResponse
 */
export type ListClustersResponse = Message<"google.bigtable.admin.v2.ListClustersResponse"> & {
  /**
   * The list of requested clusters.
   *
   * @generated from field: repeated google.bigtable.admin.v2.Cluster clusters = 1;
   */
  clusters: Cluster[];

  /**
   * Locations from which Cluster information could not be retrieved,
   * due to an outage or some other transient condition.
   * Clusters from these locations may be missing from `clusters`,
   * or may only have partial information returned.
   * Values are of the form `projects/<project>/locations/<zone_id>`
   *
   * @generated from field: repeated string failed_locations = 2;
   */
  failedLocations: string[];

  /**
   * DEPRECATED: This field is unused and ignored.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.bigtable.admin.v2.ListClustersResponse.
 * Use `create(ListClustersResponseSchema)` to create a new message.
 */
export const ListClustersResponseSchema: GenMessage<ListClustersResponse> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 9);

/**
 * Request message for BigtableInstanceAdmin.DeleteCluster.
 *
 * @generated from message google.bigtable.admin.v2.DeleteClusterRequest
 */
export type DeleteClusterRequest = Message<"google.bigtable.admin.v2.DeleteClusterRequest"> & {
  /**
   * Required. The unique name of the cluster to be deleted. Values are of the
   * form `projects/{project}/instances/{instance}/clusters/{cluster}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.bigtable.admin.v2.DeleteClusterRequest.
 * Use `create(DeleteClusterRequestSchema)` to create a new message.
 */
export const DeleteClusterRequestSchema: GenMessage<DeleteClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 10);

/**
 * The metadata for the Operation returned by CreateInstance.
 *
 * @generated from message google.bigtable.admin.v2.CreateInstanceMetadata
 */
export type CreateInstanceMetadata = Message<"google.bigtable.admin.v2.CreateInstanceMetadata"> & {
  /**
   * The request that prompted the initiation of this CreateInstance operation.
   *
   * @generated from field: google.bigtable.admin.v2.CreateInstanceRequest original_request = 1;
   */
  originalRequest?: CreateInstanceRequest;

  /**
   * The time at which the original request was received.
   *
   * @generated from field: google.protobuf.Timestamp request_time = 2;
   */
  requestTime?: Timestamp;

  /**
   * The time at which the operation failed or was completed successfully.
   *
   * @generated from field: google.protobuf.Timestamp finish_time = 3;
   */
  finishTime?: Timestamp;
};

/**
 * Describes the message google.bigtable.admin.v2.CreateInstanceMetadata.
 * Use `create(CreateInstanceMetadataSchema)` to create a new message.
 */
export const CreateInstanceMetadataSchema: GenMessage<CreateInstanceMetadata> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 11);

/**
 * The metadata for the Operation returned by UpdateInstance.
 *
 * @generated from message google.bigtable.admin.v2.UpdateInstanceMetadata
 */
export type UpdateInstanceMetadata = Message<"google.bigtable.admin.v2.UpdateInstanceMetadata"> & {
  /**
   * The request that prompted the initiation of this UpdateInstance operation.
   *
   * @generated from field: google.bigtable.admin.v2.PartialUpdateInstanceRequest original_request = 1;
   */
  originalRequest?: PartialUpdateInstanceRequest;

  /**
   * The time at which the original request was received.
   *
   * @generated from field: google.protobuf.Timestamp request_time = 2;
   */
  requestTime?: Timestamp;

  /**
   * The time at which the operation failed or was completed successfully.
   *
   * @generated from field: google.protobuf.Timestamp finish_time = 3;
   */
  finishTime?: Timestamp;
};

/**
 * Describes the message google.bigtable.admin.v2.UpdateInstanceMetadata.
 * Use `create(UpdateInstanceMetadataSchema)` to create a new message.
 */
export const UpdateInstanceMetadataSchema: GenMessage<UpdateInstanceMetadata> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 12);

/**
 * The metadata for the Operation returned by CreateCluster.
 *
 * @generated from message google.bigtable.admin.v2.CreateClusterMetadata
 */
export type CreateClusterMetadata = Message<"google.bigtable.admin.v2.CreateClusterMetadata"> & {
  /**
   * The request that prompted the initiation of this CreateCluster operation.
   *
   * @generated from field: google.bigtable.admin.v2.CreateClusterRequest original_request = 1;
   */
  originalRequest?: CreateClusterRequest;

  /**
   * The time at which the original request was received.
   *
   * @generated from field: google.protobuf.Timestamp request_time = 2;
   */
  requestTime?: Timestamp;

  /**
   * The time at which the operation failed or was completed successfully.
   *
   * @generated from field: google.protobuf.Timestamp finish_time = 3;
   */
  finishTime?: Timestamp;

  /**
   * Keys: the full `name` of each table that existed in the instance when
   * CreateCluster was first called, i.e.
   * `projects/<project>/instances/<instance>/tables/<table>`. Any table added
   * to the instance by a later API call will be created in the new cluster by
   * that API call, not this one.
   *
   * Values: information on how much of a table's data has been copied to the
   * newly-created cluster so far.
   *
   * @generated from field: map<string, google.bigtable.admin.v2.CreateClusterMetadata.TableProgress> tables = 4;
   */
  tables: { [key: string]: CreateClusterMetadata_TableProgress };
};

/**
 * Describes the message google.bigtable.admin.v2.CreateClusterMetadata.
 * Use `create(CreateClusterMetadataSchema)` to create a new message.
 */
export const CreateClusterMetadataSchema: GenMessage<CreateClusterMetadata> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 13);

/**
 * Progress info for copying a table's data to the new cluster.
 *
 * @generated from message google.bigtable.admin.v2.CreateClusterMetadata.TableProgress
 */
export type CreateClusterMetadata_TableProgress = Message<"google.bigtable.admin.v2.CreateClusterMetadata.TableProgress"> & {
  /**
   * Estimate of the size of the table to be copied.
   *
   * @generated from field: int64 estimated_size_bytes = 2;
   */
  estimatedSizeBytes: bigint;

  /**
   * Estimate of the number of bytes copied so far for this table.
   * This will eventually reach 'estimated_size_bytes' unless the table copy
   * is CANCELLED.
   *
   * @generated from field: int64 estimated_copied_bytes = 3;
   */
  estimatedCopiedBytes: bigint;

  /**
   * @generated from field: google.bigtable.admin.v2.CreateClusterMetadata.TableProgress.State state = 4;
   */
  state: CreateClusterMetadata_TableProgress_State;
};

/**
 * Describes the message google.bigtable.admin.v2.CreateClusterMetadata.TableProgress.
 * Use `create(CreateClusterMetadata_TableProgressSchema)` to create a new message.
 */
export const CreateClusterMetadata_TableProgressSchema: GenMessage<CreateClusterMetadata_TableProgress> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 13, 0);

/**
 * @generated from enum google.bigtable.admin.v2.CreateClusterMetadata.TableProgress.State
 */
export enum CreateClusterMetadata_TableProgress_State {
  /**
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The table has not yet begun copying to the new cluster.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The table is actively being copied to the new cluster.
   *
   * @generated from enum value: COPYING = 2;
   */
  COPYING = 2,

  /**
   * The table has been fully copied to the new cluster.
   *
   * @generated from enum value: COMPLETED = 3;
   */
  COMPLETED = 3,

  /**
   * The table was deleted before it finished copying to the new cluster.
   * Note that tables deleted after completion will stay marked as
   * COMPLETED, not CANCELLED.
   *
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,
}

/**
 * Describes the enum google.bigtable.admin.v2.CreateClusterMetadata.TableProgress.State.
 */
export const CreateClusterMetadata_TableProgress_StateSchema: GenEnum<CreateClusterMetadata_TableProgress_State> = /*@__PURE__*/
  enumDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 13, 0, 0);

/**
 * The metadata for the Operation returned by UpdateCluster.
 *
 * @generated from message google.bigtable.admin.v2.UpdateClusterMetadata
 */
export type UpdateClusterMetadata = Message<"google.bigtable.admin.v2.UpdateClusterMetadata"> & {
  /**
   * The request that prompted the initiation of this UpdateCluster operation.
   *
   * @generated from field: google.bigtable.admin.v2.Cluster original_request = 1;
   */
  originalRequest?: Cluster;

  /**
   * The time at which the original request was received.
   *
   * @generated from field: google.protobuf.Timestamp request_time = 2;
   */
  requestTime?: Timestamp;

  /**
   * The time at which the operation failed or was completed successfully.
   *
   * @generated from field: google.protobuf.Timestamp finish_time = 3;
   */
  finishTime?: Timestamp;
};

/**
 * Describes the message google.bigtable.admin.v2.UpdateClusterMetadata.
 * Use `create(UpdateClusterMetadataSchema)` to create a new message.
 */
export const UpdateClusterMetadataSchema: GenMessage<UpdateClusterMetadata> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 14);

/**
 * The metadata for the Operation returned by PartialUpdateCluster.
 *
 * @generated from message google.bigtable.admin.v2.PartialUpdateClusterMetadata
 */
export type PartialUpdateClusterMetadata = Message<"google.bigtable.admin.v2.PartialUpdateClusterMetadata"> & {
  /**
   * The time at which the original request was received.
   *
   * @generated from field: google.protobuf.Timestamp request_time = 1;
   */
  requestTime?: Timestamp;

  /**
   * The time at which the operation failed or was completed successfully.
   *
   * @generated from field: google.protobuf.Timestamp finish_time = 2;
   */
  finishTime?: Timestamp;

  /**
   * The original request for PartialUpdateCluster.
   *
   * @generated from field: google.bigtable.admin.v2.PartialUpdateClusterRequest original_request = 3;
   */
  originalRequest?: PartialUpdateClusterRequest;
};

/**
 * Describes the message google.bigtable.admin.v2.PartialUpdateClusterMetadata.
 * Use `create(PartialUpdateClusterMetadataSchema)` to create a new message.
 */
export const PartialUpdateClusterMetadataSchema: GenMessage<PartialUpdateClusterMetadata> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 15);

/**
 * Request message for BigtableInstanceAdmin.PartialUpdateCluster.
 *
 * @generated from message google.bigtable.admin.v2.PartialUpdateClusterRequest
 */
export type PartialUpdateClusterRequest = Message<"google.bigtable.admin.v2.PartialUpdateClusterRequest"> & {
  /**
   * Required. The Cluster which contains the partial updates to be applied,
   * subject to the update_mask.
   *
   * @generated from field: google.bigtable.admin.v2.Cluster cluster = 1;
   */
  cluster?: Cluster;

  /**
   * Required. The subset of Cluster fields which should be replaced.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.bigtable.admin.v2.PartialUpdateClusterRequest.
 * Use `create(PartialUpdateClusterRequestSchema)` to create a new message.
 */
export const PartialUpdateClusterRequestSchema: GenMessage<PartialUpdateClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 16);

/**
 * Request message for BigtableInstanceAdmin.CreateAppProfile.
 *
 * @generated from message google.bigtable.admin.v2.CreateAppProfileRequest
 */
export type CreateAppProfileRequest = Message<"google.bigtable.admin.v2.CreateAppProfileRequest"> & {
  /**
   * Required. The unique name of the instance in which to create the new app
   * profile. Values are of the form `projects/{project}/instances/{instance}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID to be used when referring to the new app profile within
   * its instance, e.g., just `myprofile` rather than
   * `projects/myproject/instances/myinstance/appProfiles/myprofile`.
   *
   * @generated from field: string app_profile_id = 2;
   */
  appProfileId: string;

  /**
   * Required. The app profile to be created.
   * Fields marked `OutputOnly` will be ignored.
   *
   * @generated from field: google.bigtable.admin.v2.AppProfile app_profile = 3;
   */
  appProfile?: AppProfile;

  /**
   * If true, ignore safety checks when creating the app profile.
   *
   * @generated from field: bool ignore_warnings = 4;
   */
  ignoreWarnings: boolean;
};

/**
 * Describes the message google.bigtable.admin.v2.CreateAppProfileRequest.
 * Use `create(CreateAppProfileRequestSchema)` to create a new message.
 */
export const CreateAppProfileRequestSchema: GenMessage<CreateAppProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 17);

/**
 * Request message for BigtableInstanceAdmin.GetAppProfile.
 *
 * @generated from message google.bigtable.admin.v2.GetAppProfileRequest
 */
export type GetAppProfileRequest = Message<"google.bigtable.admin.v2.GetAppProfileRequest"> & {
  /**
   * Required. The unique name of the requested app profile. Values are of the
   * form `projects/{project}/instances/{instance}/appProfiles/{app_profile}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.bigtable.admin.v2.GetAppProfileRequest.
 * Use `create(GetAppProfileRequestSchema)` to create a new message.
 */
export const GetAppProfileRequestSchema: GenMessage<GetAppProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 18);

/**
 * Request message for BigtableInstanceAdmin.ListAppProfiles.
 *
 * @generated from message google.bigtable.admin.v2.ListAppProfilesRequest
 */
export type ListAppProfilesRequest = Message<"google.bigtable.admin.v2.ListAppProfilesRequest"> & {
  /**
   * Required. The unique name of the instance for which a list of app profiles
   * is requested. Values are of the form
   * `projects/{project}/instances/{instance}`.
   * Use `{instance} = '-'` to list AppProfiles for all Instances in a project,
   * e.g., `projects/myproject/instances/-`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum number of results per page.
   *
   * A page_size of zero lets the server choose the number of items to return.
   * A page_size which is strictly positive will return at most that many items.
   * A negative page_size will cause an error.
   *
   * Following the first request, subsequent paginated calls are not required
   * to pass a page_size. If a page_size is set in subsequent calls, it must
   * match the page_size given in the first request.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The value of `next_page_token` returned by a previous call.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message google.bigtable.admin.v2.ListAppProfilesRequest.
 * Use `create(ListAppProfilesRequestSchema)` to create a new message.
 */
export const ListAppProfilesRequestSchema: GenMessage<ListAppProfilesRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 19);

/**
 * Response message for BigtableInstanceAdmin.ListAppProfiles.
 *
 * @generated from message google.bigtable.admin.v2.ListAppProfilesResponse
 */
export type ListAppProfilesResponse = Message<"google.bigtable.admin.v2.ListAppProfilesResponse"> & {
  /**
   * The list of requested app profiles.
   *
   * @generated from field: repeated google.bigtable.admin.v2.AppProfile app_profiles = 1;
   */
  appProfiles: AppProfile[];

  /**
   * Set if not all app profiles could be returned in a single response.
   * Pass this value to `page_token` in another request to get the next
   * page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations from which AppProfile information could not be retrieved,
   * due to an outage or some other transient condition.
   * AppProfiles from these locations may be missing from `app_profiles`.
   * Values are of the form `projects/<project>/locations/<zone_id>`
   *
   * @generated from field: repeated string failed_locations = 3;
   */
  failedLocations: string[];
};

/**
 * Describes the message google.bigtable.admin.v2.ListAppProfilesResponse.
 * Use `create(ListAppProfilesResponseSchema)` to create a new message.
 */
export const ListAppProfilesResponseSchema: GenMessage<ListAppProfilesResponse> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 20);

/**
 * Request message for BigtableInstanceAdmin.UpdateAppProfile.
 *
 * @generated from message google.bigtable.admin.v2.UpdateAppProfileRequest
 */
export type UpdateAppProfileRequest = Message<"google.bigtable.admin.v2.UpdateAppProfileRequest"> & {
  /**
   * Required. The app profile which will (partially) replace the current value.
   *
   * @generated from field: google.bigtable.admin.v2.AppProfile app_profile = 1;
   */
  appProfile?: AppProfile;

  /**
   * Required. The subset of app profile fields which should be replaced.
   * If unset, all fields will be replaced.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * If true, ignore safety checks when updating the app profile.
   *
   * @generated from field: bool ignore_warnings = 3;
   */
  ignoreWarnings: boolean;
};

/**
 * Describes the message google.bigtable.admin.v2.UpdateAppProfileRequest.
 * Use `create(UpdateAppProfileRequestSchema)` to create a new message.
 */
export const UpdateAppProfileRequestSchema: GenMessage<UpdateAppProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 21);

/**
 * Request message for BigtableInstanceAdmin.DeleteAppProfile.
 *
 * @generated from message google.bigtable.admin.v2.DeleteAppProfileRequest
 */
export type DeleteAppProfileRequest = Message<"google.bigtable.admin.v2.DeleteAppProfileRequest"> & {
  /**
   * Required. The unique name of the app profile to be deleted. Values are of
   * the form
   * `projects/{project}/instances/{instance}/appProfiles/{app_profile}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. If true, ignore safety checks when deleting the app profile.
   *
   * @generated from field: bool ignore_warnings = 2;
   */
  ignoreWarnings: boolean;
};

/**
 * Describes the message google.bigtable.admin.v2.DeleteAppProfileRequest.
 * Use `create(DeleteAppProfileRequestSchema)` to create a new message.
 */
export const DeleteAppProfileRequestSchema: GenMessage<DeleteAppProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 22);

/**
 * The metadata for the Operation returned by UpdateAppProfile.
 *
 * @generated from message google.bigtable.admin.v2.UpdateAppProfileMetadata
 */
export type UpdateAppProfileMetadata = Message<"google.bigtable.admin.v2.UpdateAppProfileMetadata"> & {
};

/**
 * Describes the message google.bigtable.admin.v2.UpdateAppProfileMetadata.
 * Use `create(UpdateAppProfileMetadataSchema)` to create a new message.
 */
export const UpdateAppProfileMetadataSchema: GenMessage<UpdateAppProfileMetadata> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 23);

/**
 * Request message for BigtableInstanceAdmin.ListHotTablets.
 *
 * @generated from message google.bigtable.admin.v2.ListHotTabletsRequest
 */
export type ListHotTabletsRequest = Message<"google.bigtable.admin.v2.ListHotTabletsRequest"> & {
  /**
   * Required. The cluster name to list hot tablets.
   * Value is in the following form:
   * `projects/{project}/instances/{instance}/clusters/{cluster}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The start time to list hot tablets. The hot tablets in the response will
   * have start times between the requested start time and end time. Start time
   * defaults to Now if it is unset, and end time defaults to Now - 24 hours if
   * it is unset. The start time should be less than the end time, and the
   * maximum allowed time range between start time and end time is 48 hours.
   * Start time and end time should have values between Now and Now - 14 days.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * The end time to list hot tablets.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  /**
   * Maximum number of results per page.
   *
   * A page_size that is empty or zero lets the server choose the number of
   * items to return. A page_size which is strictly positive will return at most
   * that many items. A negative page_size will cause an error.
   *
   * Following the first request, subsequent paginated calls do not need a
   * page_size field. If a page_size is set in subsequent calls, it must match
   * the page_size given in the first request.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * The value of `next_page_token` returned by a previous call.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;
};

/**
 * Describes the message google.bigtable.admin.v2.ListHotTabletsRequest.
 * Use `create(ListHotTabletsRequestSchema)` to create a new message.
 */
export const ListHotTabletsRequestSchema: GenMessage<ListHotTabletsRequest> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 24);

/**
 * Response message for BigtableInstanceAdmin.ListHotTablets.
 *
 * @generated from message google.bigtable.admin.v2.ListHotTabletsResponse
 */
export type ListHotTabletsResponse = Message<"google.bigtable.admin.v2.ListHotTabletsResponse"> & {
  /**
   * List of hot tablets in the tables of the requested cluster that fall
   * within the requested time range. Hot tablets are ordered by node cpu usage
   * percent. If there are multiple hot tablets that correspond to the same
   * tablet within a 15-minute interval, only the hot tablet with the highest
   * node cpu usage will be included in the response.
   *
   * @generated from field: repeated google.bigtable.admin.v2.HotTablet hot_tablets = 1;
   */
  hotTablets: HotTablet[];

  /**
   * Set if not all hot tablets could be returned in a single response.
   * Pass this value to `page_token` in another request to get the next
   * page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.bigtable.admin.v2.ListHotTabletsResponse.
 * Use `create(ListHotTabletsResponseSchema)` to create a new message.
 */
export const ListHotTabletsResponseSchema: GenMessage<ListHotTabletsResponse> = /*@__PURE__*/
  messageDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 25);

/**
 * Service for creating, configuring, and deleting Cloud Bigtable Instances and
 * Clusters. Provides access to the Instance and Cluster schemas only, not the
 * tables' metadata or data stored in those tables.
 *
 * @generated from service google.bigtable.admin.v2.BigtableInstanceAdmin
 */
export const BigtableInstanceAdmin: GenService<{
  /**
   * Create an instance within a project.
   *
   * Note that exactly one of Cluster.serve_nodes and
   * Cluster.cluster_config.cluster_autoscaling_config can be set. If
   * serve_nodes is set to non-zero, then the cluster is manually scaled. If
   * cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is
   * enabled.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.CreateInstance
   */
  createInstance: {
    methodKind: "unary";
    input: typeof CreateInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets information about an instance.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.GetInstance
   */
  getInstance: {
    methodKind: "unary";
    input: typeof GetInstanceRequestSchema;
    output: typeof InstanceSchema;
  },
  /**
   * Lists information about instances in a project.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.ListInstances
   */
  listInstances: {
    methodKind: "unary";
    input: typeof ListInstancesRequestSchema;
    output: typeof ListInstancesResponseSchema;
  },
  /**
   * Updates an instance within a project. This method updates only the display
   * name and type for an Instance. To update other Instance properties, such as
   * labels, use PartialUpdateInstance.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.UpdateInstance
   */
  updateInstance: {
    methodKind: "unary";
    input: typeof InstanceSchema;
    output: typeof InstanceSchema;
  },
  /**
   * Partially updates an instance within a project. This method can modify all
   * fields of an Instance and is the preferred way to update an Instance.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.PartialUpdateInstance
   */
  partialUpdateInstance: {
    methodKind: "unary";
    input: typeof PartialUpdateInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Delete an instance from a project.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.DeleteInstance
   */
  deleteInstance: {
    methodKind: "unary";
    input: typeof DeleteInstanceRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Creates a cluster within an instance.
   *
   * Note that exactly one of Cluster.serve_nodes and
   * Cluster.cluster_config.cluster_autoscaling_config can be set. If
   * serve_nodes is set to non-zero, then the cluster is manually scaled. If
   * cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is
   * enabled.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.CreateCluster
   */
  createCluster: {
    methodKind: "unary";
    input: typeof CreateClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets information about a cluster.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.GetCluster
   */
  getCluster: {
    methodKind: "unary";
    input: typeof GetClusterRequestSchema;
    output: typeof ClusterSchema;
  },
  /**
   * Lists information about clusters in an instance.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.ListClusters
   */
  listClusters: {
    methodKind: "unary";
    input: typeof ListClustersRequestSchema;
    output: typeof ListClustersResponseSchema;
  },
  /**
   * Updates a cluster within an instance.
   *
   * Note that UpdateCluster does not support updating
   * cluster_config.cluster_autoscaling_config. In order to update it, you
   * must use PartialUpdateCluster.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.UpdateCluster
   */
  updateCluster: {
    methodKind: "unary";
    input: typeof ClusterSchema;
    output: typeof OperationSchema;
  },
  /**
   * Partially updates a cluster within a project. This method is the preferred
   * way to update a Cluster.
   *
   * To enable and update autoscaling, set
   * cluster_config.cluster_autoscaling_config. When autoscaling is enabled,
   * serve_nodes is treated as an OUTPUT_ONLY field, meaning that updates to it
   * are ignored. Note that an update cannot simultaneously set serve_nodes to
   * non-zero and cluster_config.cluster_autoscaling_config to non-empty, and
   * also specify both in the update_mask.
   *
   * To disable autoscaling, clear cluster_config.cluster_autoscaling_config,
   * and explicitly set a serve_node count via the update_mask.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.PartialUpdateCluster
   */
  partialUpdateCluster: {
    methodKind: "unary";
    input: typeof PartialUpdateClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a cluster from an instance.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.DeleteCluster
   */
  deleteCluster: {
    methodKind: "unary";
    input: typeof DeleteClusterRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Creates an app profile within an instance.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.CreateAppProfile
   */
  createAppProfile: {
    methodKind: "unary";
    input: typeof CreateAppProfileRequestSchema;
    output: typeof AppProfileSchema;
  },
  /**
   * Gets information about an app profile.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.GetAppProfile
   */
  getAppProfile: {
    methodKind: "unary";
    input: typeof GetAppProfileRequestSchema;
    output: typeof AppProfileSchema;
  },
  /**
   * Lists information about app profiles in an instance.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.ListAppProfiles
   */
  listAppProfiles: {
    methodKind: "unary";
    input: typeof ListAppProfilesRequestSchema;
    output: typeof ListAppProfilesResponseSchema;
  },
  /**
   * Updates an app profile within an instance.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.UpdateAppProfile
   */
  updateAppProfile: {
    methodKind: "unary";
    input: typeof UpdateAppProfileRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes an app profile from an instance.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.DeleteAppProfile
   */
  deleteAppProfile: {
    methodKind: "unary";
    input: typeof DeleteAppProfileRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets the access control policy for an instance resource. Returns an empty
   * policy if an instance exists but does not have a policy set.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Sets the access control policy on an instance resource. Replaces any
   * existing policy.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Returns permissions that the caller has on the specified instance resource.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
  /**
   * Lists hot tablets in a cluster, within the time range provided. Hot
   * tablets are ordered based on CPU usage.
   *
   * @generated from rpc google.bigtable.admin.v2.BigtableInstanceAdmin.ListHotTablets
   */
  listHotTablets: {
    methodKind: "unary";
    input: typeof ListHotTabletsRequestSchema;
    output: typeof ListHotTabletsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_bigtable_admin_v2_bigtable_instance_admin, 0);

