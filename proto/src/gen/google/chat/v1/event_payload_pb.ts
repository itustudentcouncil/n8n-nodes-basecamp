// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/chat/v1/event_payload.proto (package google.chat.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import type { Membership } from "./membership_pb";
import { file_google_chat_v1_membership } from "./membership_pb";
import type { Message as Message$1 } from "./message_pb";
import { file_google_chat_v1_message } from "./message_pb";
import type { Reaction } from "./reaction_pb";
import { file_google_chat_v1_reaction } from "./reaction_pb";
import type { Space } from "./space_pb";
import { file_google_chat_v1_space } from "./space_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/chat/v1/event_payload.proto.
 */
export const file_google_chat_v1_event_payload: GenFile = /*@__PURE__*/
  fileDesc("CiJnb29nbGUvY2hhdC92MS9ldmVudF9wYXlsb2FkLnByb3RvEg5nb29nbGUuY2hhdC52MSJMChpNZW1iZXJzaGlwQ3JlYXRlZEV2ZW50RGF0YRIuCgptZW1iZXJzaGlwGAEgASgLMhouZ29vZ2xlLmNoYXQudjEuTWVtYmVyc2hpcCJMChpNZW1iZXJzaGlwRGVsZXRlZEV2ZW50RGF0YRIuCgptZW1iZXJzaGlwGAEgASgLMhouZ29vZ2xlLmNoYXQudjEuTWVtYmVyc2hpcCJMChpNZW1iZXJzaGlwVXBkYXRlZEV2ZW50RGF0YRIuCgptZW1iZXJzaGlwGAEgASgLMhouZ29vZ2xlLmNoYXQudjEuTWVtYmVyc2hpcCJiCh9NZW1iZXJzaGlwQmF0Y2hDcmVhdGVkRXZlbnREYXRhEj8KC21lbWJlcnNoaXBzGAEgAygLMiouZ29vZ2xlLmNoYXQudjEuTWVtYmVyc2hpcENyZWF0ZWRFdmVudERhdGEiYgofTWVtYmVyc2hpcEJhdGNoVXBkYXRlZEV2ZW50RGF0YRI/CgttZW1iZXJzaGlwcxgBIAMoCzIqLmdvb2dsZS5jaGF0LnYxLk1lbWJlcnNoaXBVcGRhdGVkRXZlbnREYXRhImIKH01lbWJlcnNoaXBCYXRjaERlbGV0ZWRFdmVudERhdGESPwoLbWVtYmVyc2hpcHMYASADKAsyKi5nb29nbGUuY2hhdC52MS5NZW1iZXJzaGlwRGVsZXRlZEV2ZW50RGF0YSJDChdNZXNzYWdlQ3JlYXRlZEV2ZW50RGF0YRIoCgdtZXNzYWdlGAEgASgLMhcuZ29vZ2xlLmNoYXQudjEuTWVzc2FnZSJDChdNZXNzYWdlVXBkYXRlZEV2ZW50RGF0YRIoCgdtZXNzYWdlGAEgASgLMhcuZ29vZ2xlLmNoYXQudjEuTWVzc2FnZSJDChdNZXNzYWdlRGVsZXRlZEV2ZW50RGF0YRIoCgdtZXNzYWdlGAEgASgLMhcuZ29vZ2xlLmNoYXQudjEuTWVzc2FnZSJZChxNZXNzYWdlQmF0Y2hDcmVhdGVkRXZlbnREYXRhEjkKCG1lc3NhZ2VzGAEgAygLMicuZ29vZ2xlLmNoYXQudjEuTWVzc2FnZUNyZWF0ZWRFdmVudERhdGEiWQocTWVzc2FnZUJhdGNoVXBkYXRlZEV2ZW50RGF0YRI5CghtZXNzYWdlcxgBIAMoCzInLmdvb2dsZS5jaGF0LnYxLk1lc3NhZ2VVcGRhdGVkRXZlbnREYXRhIlkKHE1lc3NhZ2VCYXRjaERlbGV0ZWRFdmVudERhdGESOQoIbWVzc2FnZXMYASADKAsyJy5nb29nbGUuY2hhdC52MS5NZXNzYWdlRGVsZXRlZEV2ZW50RGF0YSI9ChVTcGFjZVVwZGF0ZWRFdmVudERhdGESJAoFc3BhY2UYASABKAsyFS5nb29nbGUuY2hhdC52MS5TcGFjZSJTChpTcGFjZUJhdGNoVXBkYXRlZEV2ZW50RGF0YRI1CgZzcGFjZXMYASADKAsyJS5nb29nbGUuY2hhdC52MS5TcGFjZVVwZGF0ZWRFdmVudERhdGEiRgoYUmVhY3Rpb25DcmVhdGVkRXZlbnREYXRhEioKCHJlYWN0aW9uGAEgASgLMhguZ29vZ2xlLmNoYXQudjEuUmVhY3Rpb24iRgoYUmVhY3Rpb25EZWxldGVkRXZlbnREYXRhEioKCHJlYWN0aW9uGAEgASgLMhguZ29vZ2xlLmNoYXQudjEuUmVhY3Rpb24iXAodUmVhY3Rpb25CYXRjaENyZWF0ZWRFdmVudERhdGESOwoJcmVhY3Rpb25zGAEgAygLMiguZ29vZ2xlLmNoYXQudjEuUmVhY3Rpb25DcmVhdGVkRXZlbnREYXRhIlwKHVJlYWN0aW9uQmF0Y2hEZWxldGVkRXZlbnREYXRhEjsKCXJlYWN0aW9ucxgBIAMoCzIoLmdvb2dsZS5jaGF0LnYxLlJlYWN0aW9uRGVsZXRlZEV2ZW50RGF0YUKqAQoSY29tLmdvb2dsZS5jaGF0LnYxQhFFdmVudFBheWxvYWRQcm90b1ABWixjbG91ZC5nb29nbGUuY29tL2dvL2NoYXQvYXBpdjEvY2hhdHBiO2NoYXRwYqICC0RZTkFQSVByb3RvqgITR29vZ2xlLkFwcHMuQ2hhdC5WMcoCE0dvb2dsZVxBcHBzXENoYXRcVjHqAhZHb29nbGU6OkFwcHM6OkNoYXQ6OlYxYgZwcm90bzM", [file_google_api_field_behavior, file_google_chat_v1_membership, file_google_chat_v1_message, file_google_chat_v1_reaction, file_google_chat_v1_space]);

/**
 * Event payload for a new membership.
 *
 * Event type: `google.workspace.chat.membership.v1.created`.
 *
 * @generated from message google.chat.v1.MembershipCreatedEventData
 */
export type MembershipCreatedEventData = Message<"google.chat.v1.MembershipCreatedEventData"> & {
  /**
   * The new membership.
   *
   * @generated from field: google.chat.v1.Membership membership = 1;
   */
  membership?: Membership;
};

/**
 * Describes the message google.chat.v1.MembershipCreatedEventData.
 * Use `create(MembershipCreatedEventDataSchema)` to create a new message.
 */
export const MembershipCreatedEventDataSchema: GenMessage<MembershipCreatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 0);

/**
 * Event payload for a deleted membership.
 *
 * Event type: `google.workspace.chat.membership.v1.deleted`
 *
 * @generated from message google.chat.v1.MembershipDeletedEventData
 */
export type MembershipDeletedEventData = Message<"google.chat.v1.MembershipDeletedEventData"> & {
  /**
   * The deleted membership. Only the `name` and `state` fields are populated.
   *
   * @generated from field: google.chat.v1.Membership membership = 1;
   */
  membership?: Membership;
};

/**
 * Describes the message google.chat.v1.MembershipDeletedEventData.
 * Use `create(MembershipDeletedEventDataSchema)` to create a new message.
 */
export const MembershipDeletedEventDataSchema: GenMessage<MembershipDeletedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 1);

/**
 * Event payload for an updated membership.
 *
 * Event type: `google.workspace.chat.membership.v1.updated`
 *
 * @generated from message google.chat.v1.MembershipUpdatedEventData
 */
export type MembershipUpdatedEventData = Message<"google.chat.v1.MembershipUpdatedEventData"> & {
  /**
   * The updated membership.
   *
   * @generated from field: google.chat.v1.Membership membership = 1;
   */
  membership?: Membership;
};

/**
 * Describes the message google.chat.v1.MembershipUpdatedEventData.
 * Use `create(MembershipUpdatedEventDataSchema)` to create a new message.
 */
export const MembershipUpdatedEventDataSchema: GenMessage<MembershipUpdatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 2);

/**
 * Event payload for multiple new memberships.
 *
 * Event type: `google.workspace.chat.membership.v1.batchCreated`
 *
 * @generated from message google.chat.v1.MembershipBatchCreatedEventData
 */
export type MembershipBatchCreatedEventData = Message<"google.chat.v1.MembershipBatchCreatedEventData"> & {
  /**
   * A list of new memberships.
   *
   * @generated from field: repeated google.chat.v1.MembershipCreatedEventData memberships = 1;
   */
  memberships: MembershipCreatedEventData[];
};

/**
 * Describes the message google.chat.v1.MembershipBatchCreatedEventData.
 * Use `create(MembershipBatchCreatedEventDataSchema)` to create a new message.
 */
export const MembershipBatchCreatedEventDataSchema: GenMessage<MembershipBatchCreatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 3);

/**
 * Event payload for multiple updated memberships.
 *
 * Event type: `google.workspace.chat.membership.v1.batchUpdated`
 *
 * @generated from message google.chat.v1.MembershipBatchUpdatedEventData
 */
export type MembershipBatchUpdatedEventData = Message<"google.chat.v1.MembershipBatchUpdatedEventData"> & {
  /**
   * A list of updated memberships.
   *
   * @generated from field: repeated google.chat.v1.MembershipUpdatedEventData memberships = 1;
   */
  memberships: MembershipUpdatedEventData[];
};

/**
 * Describes the message google.chat.v1.MembershipBatchUpdatedEventData.
 * Use `create(MembershipBatchUpdatedEventDataSchema)` to create a new message.
 */
export const MembershipBatchUpdatedEventDataSchema: GenMessage<MembershipBatchUpdatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 4);

/**
 * Event payload for multiple deleted memberships.
 *
 * Event type: `google.workspace.chat.membership.v1.batchDeleted`
 *
 * @generated from message google.chat.v1.MembershipBatchDeletedEventData
 */
export type MembershipBatchDeletedEventData = Message<"google.chat.v1.MembershipBatchDeletedEventData"> & {
  /**
   * A list of deleted memberships.
   *
   * @generated from field: repeated google.chat.v1.MembershipDeletedEventData memberships = 1;
   */
  memberships: MembershipDeletedEventData[];
};

/**
 * Describes the message google.chat.v1.MembershipBatchDeletedEventData.
 * Use `create(MembershipBatchDeletedEventDataSchema)` to create a new message.
 */
export const MembershipBatchDeletedEventDataSchema: GenMessage<MembershipBatchDeletedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 5);

/**
 * Event payload for a new message.
 *
 * Event type: `google.workspace.chat.message.v1.created`
 *
 * @generated from message google.chat.v1.MessageCreatedEventData
 */
export type MessageCreatedEventData = Message<"google.chat.v1.MessageCreatedEventData"> & {
  /**
   * The new message.
   *
   * @generated from field: google.chat.v1.Message message = 1;
   */
  message?: Message$1;
};

/**
 * Describes the message google.chat.v1.MessageCreatedEventData.
 * Use `create(MessageCreatedEventDataSchema)` to create a new message.
 */
export const MessageCreatedEventDataSchema: GenMessage<MessageCreatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 6);

/**
 * Event payload for an updated message.
 *
 * Event type: `google.workspace.chat.message.v1.updated`
 *
 * @generated from message google.chat.v1.MessageUpdatedEventData
 */
export type MessageUpdatedEventData = Message<"google.chat.v1.MessageUpdatedEventData"> & {
  /**
   * The updated message.
   *
   * @generated from field: google.chat.v1.Message message = 1;
   */
  message?: Message$1;
};

/**
 * Describes the message google.chat.v1.MessageUpdatedEventData.
 * Use `create(MessageUpdatedEventDataSchema)` to create a new message.
 */
export const MessageUpdatedEventDataSchema: GenMessage<MessageUpdatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 7);

/**
 * Event payload for a deleted message.
 *
 * Event type: `google.workspace.chat.message.v1.deleted`
 *
 * @generated from message google.chat.v1.MessageDeletedEventData
 */
export type MessageDeletedEventData = Message<"google.chat.v1.MessageDeletedEventData"> & {
  /**
   * The deleted message. Only the `name`, `createTime`, `deleteTime`, and
   * `deletionMetadata` fields are populated.
   *
   * @generated from field: google.chat.v1.Message message = 1;
   */
  message?: Message$1;
};

/**
 * Describes the message google.chat.v1.MessageDeletedEventData.
 * Use `create(MessageDeletedEventDataSchema)` to create a new message.
 */
export const MessageDeletedEventDataSchema: GenMessage<MessageDeletedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 8);

/**
 * Event payload for multiple new messages.
 *
 * Event type: `google.workspace.chat.message.v1.batchCreated`
 *
 * @generated from message google.chat.v1.MessageBatchCreatedEventData
 */
export type MessageBatchCreatedEventData = Message<"google.chat.v1.MessageBatchCreatedEventData"> & {
  /**
   * A list of new messages.
   *
   * @generated from field: repeated google.chat.v1.MessageCreatedEventData messages = 1;
   */
  messages: MessageCreatedEventData[];
};

/**
 * Describes the message google.chat.v1.MessageBatchCreatedEventData.
 * Use `create(MessageBatchCreatedEventDataSchema)` to create a new message.
 */
export const MessageBatchCreatedEventDataSchema: GenMessage<MessageBatchCreatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 9);

/**
 * Event payload for multiple updated messages.
 *
 * Event type: `google.workspace.chat.message.v1.batchUpdated`
 *
 * @generated from message google.chat.v1.MessageBatchUpdatedEventData
 */
export type MessageBatchUpdatedEventData = Message<"google.chat.v1.MessageBatchUpdatedEventData"> & {
  /**
   * A list of updated messages.
   *
   * @generated from field: repeated google.chat.v1.MessageUpdatedEventData messages = 1;
   */
  messages: MessageUpdatedEventData[];
};

/**
 * Describes the message google.chat.v1.MessageBatchUpdatedEventData.
 * Use `create(MessageBatchUpdatedEventDataSchema)` to create a new message.
 */
export const MessageBatchUpdatedEventDataSchema: GenMessage<MessageBatchUpdatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 10);

/**
 * Event payload for multiple deleted messages.
 *
 * Event type: `google.workspace.chat.message.v1.batchDeleted`
 *
 * @generated from message google.chat.v1.MessageBatchDeletedEventData
 */
export type MessageBatchDeletedEventData = Message<"google.chat.v1.MessageBatchDeletedEventData"> & {
  /**
   * A list of deleted messages.
   *
   * @generated from field: repeated google.chat.v1.MessageDeletedEventData messages = 1;
   */
  messages: MessageDeletedEventData[];
};

/**
 * Describes the message google.chat.v1.MessageBatchDeletedEventData.
 * Use `create(MessageBatchDeletedEventDataSchema)` to create a new message.
 */
export const MessageBatchDeletedEventDataSchema: GenMessage<MessageBatchDeletedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 11);

/**
 * Event payload for an updated space.
 *
 * Event type: `google.workspace.chat.space.v1.updated`
 *
 * @generated from message google.chat.v1.SpaceUpdatedEventData
 */
export type SpaceUpdatedEventData = Message<"google.chat.v1.SpaceUpdatedEventData"> & {
  /**
   * The updated space.
   *
   * @generated from field: google.chat.v1.Space space = 1;
   */
  space?: Space;
};

/**
 * Describes the message google.chat.v1.SpaceUpdatedEventData.
 * Use `create(SpaceUpdatedEventDataSchema)` to create a new message.
 */
export const SpaceUpdatedEventDataSchema: GenMessage<SpaceUpdatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 12);

/**
 * Event payload for multiple updates to a space.
 *
 * Event type: `google.workspace.chat.space.v1.batchUpdated`
 *
 * @generated from message google.chat.v1.SpaceBatchUpdatedEventData
 */
export type SpaceBatchUpdatedEventData = Message<"google.chat.v1.SpaceBatchUpdatedEventData"> & {
  /**
   * A list of updated spaces.
   *
   * @generated from field: repeated google.chat.v1.SpaceUpdatedEventData spaces = 1;
   */
  spaces: SpaceUpdatedEventData[];
};

/**
 * Describes the message google.chat.v1.SpaceBatchUpdatedEventData.
 * Use `create(SpaceBatchUpdatedEventDataSchema)` to create a new message.
 */
export const SpaceBatchUpdatedEventDataSchema: GenMessage<SpaceBatchUpdatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 13);

/**
 * Event payload for a new reaction.
 *
 * Event type: `google.workspace.chat.reaction.v1.created`
 *
 * @generated from message google.chat.v1.ReactionCreatedEventData
 */
export type ReactionCreatedEventData = Message<"google.chat.v1.ReactionCreatedEventData"> & {
  /**
   * The new reaction.
   *
   * @generated from field: google.chat.v1.Reaction reaction = 1;
   */
  reaction?: Reaction;
};

/**
 * Describes the message google.chat.v1.ReactionCreatedEventData.
 * Use `create(ReactionCreatedEventDataSchema)` to create a new message.
 */
export const ReactionCreatedEventDataSchema: GenMessage<ReactionCreatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 14);

/**
 * Event payload for a deleted reaction.
 *
 * Type: `google.workspace.chat.reaction.v1.deleted`
 *
 * @generated from message google.chat.v1.ReactionDeletedEventData
 */
export type ReactionDeletedEventData = Message<"google.chat.v1.ReactionDeletedEventData"> & {
  /**
   * The deleted reaction.
   *
   * @generated from field: google.chat.v1.Reaction reaction = 1;
   */
  reaction?: Reaction;
};

/**
 * Describes the message google.chat.v1.ReactionDeletedEventData.
 * Use `create(ReactionDeletedEventDataSchema)` to create a new message.
 */
export const ReactionDeletedEventDataSchema: GenMessage<ReactionDeletedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 15);

/**
 * Event payload for multiple new reactions.
 *
 * Event type: `google.workspace.chat.reaction.v1.batchCreated`
 *
 * @generated from message google.chat.v1.ReactionBatchCreatedEventData
 */
export type ReactionBatchCreatedEventData = Message<"google.chat.v1.ReactionBatchCreatedEventData"> & {
  /**
   * A list of new reactions.
   *
   * @generated from field: repeated google.chat.v1.ReactionCreatedEventData reactions = 1;
   */
  reactions: ReactionCreatedEventData[];
};

/**
 * Describes the message google.chat.v1.ReactionBatchCreatedEventData.
 * Use `create(ReactionBatchCreatedEventDataSchema)` to create a new message.
 */
export const ReactionBatchCreatedEventDataSchema: GenMessage<ReactionBatchCreatedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 16);

/**
 * Event payload for multiple deleted reactions.
 *
 * Event type: `google.workspace.chat.reaction.v1.batchDeleted`
 *
 * @generated from message google.chat.v1.ReactionBatchDeletedEventData
 */
export type ReactionBatchDeletedEventData = Message<"google.chat.v1.ReactionBatchDeletedEventData"> & {
  /**
   * A list of deleted reactions.
   *
   * @generated from field: repeated google.chat.v1.ReactionDeletedEventData reactions = 1;
   */
  reactions: ReactionDeletedEventData[];
};

/**
 * Describes the message google.chat.v1.ReactionBatchDeletedEventData.
 * Use `create(ReactionBatchDeletedEventDataSchema)` to create a new message.
 */
export const ReactionBatchDeletedEventDataSchema: GenMessage<ReactionBatchDeletedEventData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_event_payload, 17);

