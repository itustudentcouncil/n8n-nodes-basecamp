// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/chat/v1/thread_read_state.proto (package google.chat.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/chat/v1/thread_read_state.proto.
 */
export const file_google_chat_v1_thread_read_state: GenFile = /*@__PURE__*/
  fileDesc("CiZnb29nbGUvY2hhdC92MS90aHJlYWRfcmVhZF9zdGF0ZS5wcm90bxIOZ29vZ2xlLmNoYXQudjEizAEKD1RocmVhZFJlYWRTdGF0ZRIMCgRuYW1lGAEgASgJEjIKDmxhc3RfcmVhZF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcDp36kF0CiNjaGF0Lmdvb2dsZWFwaXMuY29tL1RocmVhZFJlYWRTdGF0ZRI8dXNlcnMve3VzZXJ9L3NwYWNlcy97c3BhY2V9L3RocmVhZHMve3RocmVhZH0vdGhyZWFkUmVhZFN0YXRlMg90aHJlYWRSZWFkU3RhdGUiVgoZR2V0VGhyZWFkUmVhZFN0YXRlUmVxdWVzdBI5CgRuYW1lGAEgASgJQivgQQL6QSUKI2NoYXQuZ29vZ2xlYXBpcy5jb20vVGhyZWFkUmVhZFN0YXRlQq0BChJjb20uZ29vZ2xlLmNoYXQudjFCFFRocmVhZFJlYWRTdGF0ZVByb3RvUAFaLGNsb3VkLmdvb2dsZS5jb20vZ28vY2hhdC9hcGl2MS9jaGF0cGI7Y2hhdHBiogILRFlOQVBJUHJvdG+qAhNHb29nbGUuQXBwcy5DaGF0LlYxygITR29vZ2xlXEFwcHNcQ2hhdFxWMeoCFkdvb2dsZTo6QXBwczo6Q2hhdDo6VjFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_timestamp]);

/**
 * A user's read state within a thread, used to identify read and unread
 * messages.
 *
 * @generated from message google.chat.v1.ThreadReadState
 */
export type ThreadReadState = Message<"google.chat.v1.ThreadReadState"> & {
  /**
   * Resource name of the thread read state.
   *
   * Format: `users/{user}/spaces/{space}/threads/{thread}/threadReadState`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The time when the user's thread read state was updated. Usually this
   * corresponds with the timestamp of the last read message in a thread.
   *
   * @generated from field: google.protobuf.Timestamp last_read_time = 2;
   */
  lastReadTime?: Timestamp;
};

/**
 * Describes the message google.chat.v1.ThreadReadState.
 * Use `create(ThreadReadStateSchema)` to create a new message.
 */
export const ThreadReadStateSchema: GenMessage<ThreadReadState> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_thread_read_state, 0);

/**
 * Request message for GetThreadReadStateRequest API.
 *
 * @generated from message google.chat.v1.GetThreadReadStateRequest
 */
export type GetThreadReadStateRequest = Message<"google.chat.v1.GetThreadReadStateRequest"> & {
  /**
   * Required. Resource name of the thread read state to retrieve.
   *
   * Only supports getting read state for the calling user.
   *
   * To refer to the calling user, set one of the following:
   *
   * - The `me` alias. For example,
   * `users/me/spaces/{space}/threads/{thread}/threadReadState`.
   *
   * - Their Workspace email address. For example,
   * `users/user@example.com/spaces/{space}/threads/{thread}/threadReadState`.
   *
   * - Their user id. For example,
   * `users/123456789/spaces/{space}/threads/{thread}/threadReadState`.
   *
   * Format: users/{user}/spaces/{space}/threads/{thread}/threadReadState
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.chat.v1.GetThreadReadStateRequest.
 * Use `create(GetThreadReadStateRequestSchema)` to create a new message.
 */
export const GetThreadReadStateRequestSchema: GenMessage<GetThreadReadStateRequest> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_thread_read_state, 1);

