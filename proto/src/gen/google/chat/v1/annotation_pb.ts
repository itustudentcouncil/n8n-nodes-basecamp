// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/chat/v1/annotation.proto (package google.chat.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../api/resource_pb";
import type { DriveDataRef } from "./attachment_pb";
import { file_google_chat_v1_attachment } from "./attachment_pb";
import type { User } from "./user_pb";
import { file_google_chat_v1_user } from "./user_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/chat/v1/annotation.proto.
 */
export const file_google_chat_v1_annotation: GenFile = /*@__PURE__*/
  fileDesc("Ch9nb29nbGUvY2hhdC92MS9hbm5vdGF0aW9uLnByb3RvEg5nb29nbGUuY2hhdC52MSK8AgoKQW5ub3RhdGlvbhIsCgR0eXBlGAEgASgOMh4uZ29vZ2xlLmNoYXQudjEuQW5ub3RhdGlvblR5cGUSGAoLc3RhcnRfaW5kZXgYAiABKAVIAYgBARIOCgZsZW5ndGgYAyABKAUSOwoMdXNlcl9tZW50aW9uGAQgASgLMiMuZ29vZ2xlLmNoYXQudjEuVXNlck1lbnRpb25NZXRhZGF0YUgAEj0KDXNsYXNoX2NvbW1hbmQYBSABKAsyJC5nb29nbGUuY2hhdC52MS5TbGFzaENvbW1hbmRNZXRhZGF0YUgAEj4KEnJpY2hfbGlua19tZXRhZGF0YRgGIAEoCzIgLmdvb2dsZS5jaGF0LnYxLlJpY2hMaW5rTWV0YWRhdGFIAEIKCghtZXRhZGF0YUIOCgxfc3RhcnRfaW5kZXgipQEKE1VzZXJNZW50aW9uTWV0YWRhdGESIgoEdXNlchgBIAEoCzIULmdvb2dsZS5jaGF0LnYxLlVzZXISNgoEdHlwZRgCIAEoDjIoLmdvb2dsZS5jaGF0LnYxLlVzZXJNZW50aW9uTWV0YWRhdGEuVHlwZSIyCgRUeXBlEhQKEFRZUEVfVU5TUEVDSUZJRUQQABIHCgNBREQQARILCgdNRU5USU9OEAIi6AEKFFNsYXNoQ29tbWFuZE1ldGFkYXRhEiEKA2JvdBgBIAEoCzIULmdvb2dsZS5jaGF0LnYxLlVzZXISNwoEdHlwZRgCIAEoDjIpLmdvb2dsZS5jaGF0LnYxLlNsYXNoQ29tbWFuZE1ldGFkYXRhLlR5cGUSFAoMY29tbWFuZF9uYW1lGAMgASgJEhIKCmNvbW1hbmRfaWQYBCABKAMSFwoPdHJpZ2dlcnNfZGlhbG9nGAUgASgIIjEKBFR5cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEgcKA0FERBABEgoKBklOVk9LRRACIrsCChBSaWNoTGlua01ldGFkYXRhEgsKA3VyaRgBIAEoCRJFCg5yaWNoX2xpbmtfdHlwZRgCIAEoDjItLmdvb2dsZS5jaGF0LnYxLlJpY2hMaW5rTWV0YWRhdGEuUmljaExpbmtUeXBlEjgKD2RyaXZlX2xpbmtfZGF0YRgDIAEoCzIdLmdvb2dsZS5jaGF0LnYxLkRyaXZlTGlua0RhdGFIABJBChRjaGF0X3NwYWNlX2xpbmtfZGF0YRgEIAEoCzIhLmdvb2dsZS5jaGF0LnYxLkNoYXRTcGFjZUxpbmtEYXRhSAAiTgoMUmljaExpbmtUeXBlEh4KGlJJQ0hfTElOS19UWVBFX1VOU1BFQ0lGSUVEEAASDgoKRFJJVkVfRklMRRABEg4KCkNIQVRfU1BBQ0UQAkIGCgRkYXRhIlgKDURyaXZlTGlua0RhdGESNAoOZHJpdmVfZGF0YV9yZWYYASABKAsyHC5nb29nbGUuY2hhdC52MS5Ecml2ZURhdGFSZWYSEQoJbWltZV90eXBlGAIgASgJIqYBChFDaGF0U3BhY2VMaW5rRGF0YRItCgVzcGFjZRgBIAEoCUIe+kEbChljaGF0Lmdvb2dsZWFwaXMuY29tL1NwYWNlEi8KBnRocmVhZBgCIAEoCUIf+kEcChpjaGF0Lmdvb2dsZWFwaXMuY29tL1RocmVhZBIxCgdtZXNzYWdlGAMgASgJQiD6QR0KG2NoYXQuZ29vZ2xlYXBpcy5jb20vTWVzc2FnZSplCg5Bbm5vdGF0aW9uVHlwZRIfChtBTk5PVEFUSU9OX1RZUEVfVU5TUEVDSUZJRUQQABIQCgxVU0VSX01FTlRJT04QARIRCg1TTEFTSF9DT01NQU5EEAISDQoJUklDSF9MSU5LEANCqAEKEmNvbS5nb29nbGUuY2hhdC52MUIPQW5ub3RhdGlvblByb3RvUAFaLGNsb3VkLmdvb2dsZS5jb20vZ28vY2hhdC9hcGl2MS9jaGF0cGI7Y2hhdHBiogILRFlOQVBJUHJvdG+qAhNHb29nbGUuQXBwcy5DaGF0LlYxygITR29vZ2xlXEFwcHNcQ2hhdFxWMeoCFkdvb2dsZTo6QXBwczo6Q2hhdDo6VjFiBnByb3RvMw", [file_google_api_resource, file_google_chat_v1_attachment, file_google_chat_v1_user]);

/**
 * Output only. Annotations associated with the plain-text body of the message.
 * To add basic formatting to a text message, see
 * [Format text
 * messages](https://developers.google.com/workspace/chat/format-messages).
 *
 * Example plain-text message body:
 * ```
 * Hello @FooBot how are you!"
 * ```
 *
 * The corresponding annotations metadata:
 * ```
 * "annotations":[{
 *   "type":"USER_MENTION",
 *   "startIndex":6,
 *   "length":7,
 *   "userMention": {
 *     "user": {
 *       "name":"users/{user}",
 *       "displayName":"FooBot",
 *       "avatarUrl":"https://goo.gl/aeDtrS",
 *       "type":"BOT"
 *     },
 *     "type":"MENTION"
 *    }
 * }]
 * ```
 *
 * @generated from message google.chat.v1.Annotation
 */
export type Annotation = Message<"google.chat.v1.Annotation"> & {
  /**
   * The type of this annotation.
   *
   * @generated from field: google.chat.v1.AnnotationType type = 1;
   */
  type: AnnotationType;

  /**
   * Start index (0-based, inclusive) in the plain-text message body this
   * annotation corresponds to.
   *
   * @generated from field: optional int32 start_index = 2;
   */
  startIndex?: number;

  /**
   * Length of the substring in the plain-text message body this annotation
   * corresponds to.
   *
   * @generated from field: int32 length = 3;
   */
  length: number;

  /**
   * Additional metadata about the annotation.
   *
   * @generated from oneof google.chat.v1.Annotation.metadata
   */
  metadata: {
    /**
     * The metadata of user mention.
     *
     * @generated from field: google.chat.v1.UserMentionMetadata user_mention = 4;
     */
    value: UserMentionMetadata;
    case: "userMention";
  } | {
    /**
     * The metadata for a slash command.
     *
     * @generated from field: google.chat.v1.SlashCommandMetadata slash_command = 5;
     */
    value: SlashCommandMetadata;
    case: "slashCommand";
  } | {
    /**
     * The metadata for a rich link.
     *
     * @generated from field: google.chat.v1.RichLinkMetadata rich_link_metadata = 6;
     */
    value: RichLinkMetadata;
    case: "richLinkMetadata";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.chat.v1.Annotation.
 * Use `create(AnnotationSchema)` to create a new message.
 */
export const AnnotationSchema: GenMessage<Annotation> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_annotation, 0);

/**
 * Annotation metadata for user mentions (@).
 *
 * @generated from message google.chat.v1.UserMentionMetadata
 */
export type UserMentionMetadata = Message<"google.chat.v1.UserMentionMetadata"> & {
  /**
   * The user mentioned.
   *
   * @generated from field: google.chat.v1.User user = 1;
   */
  user?: User;

  /**
   * The type of user mention.
   *
   * @generated from field: google.chat.v1.UserMentionMetadata.Type type = 2;
   */
  type: UserMentionMetadata_Type;
};

/**
 * Describes the message google.chat.v1.UserMentionMetadata.
 * Use `create(UserMentionMetadataSchema)` to create a new message.
 */
export const UserMentionMetadataSchema: GenMessage<UserMentionMetadata> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_annotation, 1);

/**
 * @generated from enum google.chat.v1.UserMentionMetadata.Type
 */
export enum UserMentionMetadata_Type {
  /**
   * Default value for the enum. Don't use.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Add user to space.
   *
   * @generated from enum value: ADD = 1;
   */
  ADD = 1,

  /**
   * Mention user in space.
   *
   * @generated from enum value: MENTION = 2;
   */
  MENTION = 2,
}

/**
 * Describes the enum google.chat.v1.UserMentionMetadata.Type.
 */
export const UserMentionMetadata_TypeSchema: GenEnum<UserMentionMetadata_Type> = /*@__PURE__*/
  enumDesc(file_google_chat_v1_annotation, 1, 0);

/**
 * Annotation metadata for slash commands (/).
 *
 * @generated from message google.chat.v1.SlashCommandMetadata
 */
export type SlashCommandMetadata = Message<"google.chat.v1.SlashCommandMetadata"> & {
  /**
   * The Chat app whose command was invoked.
   *
   * @generated from field: google.chat.v1.User bot = 1;
   */
  bot?: User;

  /**
   * The type of slash command.
   *
   * @generated from field: google.chat.v1.SlashCommandMetadata.Type type = 2;
   */
  type: SlashCommandMetadata_Type;

  /**
   * The name of the invoked slash command.
   *
   * @generated from field: string command_name = 3;
   */
  commandName: string;

  /**
   * The command ID of the invoked slash command.
   *
   * @generated from field: int64 command_id = 4;
   */
  commandId: bigint;

  /**
   * Indicates whether the slash command is for a dialog.
   *
   * @generated from field: bool triggers_dialog = 5;
   */
  triggersDialog: boolean;
};

/**
 * Describes the message google.chat.v1.SlashCommandMetadata.
 * Use `create(SlashCommandMetadataSchema)` to create a new message.
 */
export const SlashCommandMetadataSchema: GenMessage<SlashCommandMetadata> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_annotation, 2);

/**
 * @generated from enum google.chat.v1.SlashCommandMetadata.Type
 */
export enum SlashCommandMetadata_Type {
  /**
   * Default value for the enum. Don't use.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Add Chat app to space.
   *
   * @generated from enum value: ADD = 1;
   */
  ADD = 1,

  /**
   * Invoke slash command in space.
   *
   * @generated from enum value: INVOKE = 2;
   */
  INVOKE = 2,
}

/**
 * Describes the enum google.chat.v1.SlashCommandMetadata.Type.
 */
export const SlashCommandMetadata_TypeSchema: GenEnum<SlashCommandMetadata_Type> = /*@__PURE__*/
  enumDesc(file_google_chat_v1_annotation, 2, 0);

/**
 * A rich link to a resource.
 *
 * @generated from message google.chat.v1.RichLinkMetadata
 */
export type RichLinkMetadata = Message<"google.chat.v1.RichLinkMetadata"> & {
  /**
   * The URI of this link.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * The rich link type.
   *
   * @generated from field: google.chat.v1.RichLinkMetadata.RichLinkType rich_link_type = 2;
   */
  richLinkType: RichLinkMetadata_RichLinkType;

  /**
   * Data for the linked resource.
   *
   * @generated from oneof google.chat.v1.RichLinkMetadata.data
   */
  data: {
    /**
     * Data for a drive link.
     *
     * @generated from field: google.chat.v1.DriveLinkData drive_link_data = 3;
     */
    value: DriveLinkData;
    case: "driveLinkData";
  } | {
    /**
     * Data for a chat space link.
     *
     * @generated from field: google.chat.v1.ChatSpaceLinkData chat_space_link_data = 4;
     */
    value: ChatSpaceLinkData;
    case: "chatSpaceLinkData";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.chat.v1.RichLinkMetadata.
 * Use `create(RichLinkMetadataSchema)` to create a new message.
 */
export const RichLinkMetadataSchema: GenMessage<RichLinkMetadata> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_annotation, 3);

/**
 * The rich link type. More types might be added in the future.
 *
 * @generated from enum google.chat.v1.RichLinkMetadata.RichLinkType
 */
export enum RichLinkMetadata_RichLinkType {
  /**
   * Default value for the enum. Don't use.
   *
   * @generated from enum value: RICH_LINK_TYPE_UNSPECIFIED = 0;
   */
  RICH_LINK_TYPE_UNSPECIFIED = 0,

  /**
   * A Google Drive rich link type.
   *
   * @generated from enum value: DRIVE_FILE = 1;
   */
  DRIVE_FILE = 1,

  /**
   * A Chat space rich link type. For example, a space smart chip.
   *
   * @generated from enum value: CHAT_SPACE = 2;
   */
  CHAT_SPACE = 2,
}

/**
 * Describes the enum google.chat.v1.RichLinkMetadata.RichLinkType.
 */
export const RichLinkMetadata_RichLinkTypeSchema: GenEnum<RichLinkMetadata_RichLinkType> = /*@__PURE__*/
  enumDesc(file_google_chat_v1_annotation, 3, 0);

/**
 * Data for Google Drive links.
 *
 * @generated from message google.chat.v1.DriveLinkData
 */
export type DriveLinkData = Message<"google.chat.v1.DriveLinkData"> & {
  /**
   * A
   * [DriveDataRef](https://developers.google.com/workspace/chat/api/reference/rest/v1/spaces.messages.attachments#drivedataref)
   * which references a Google Drive file.
   *
   * @generated from field: google.chat.v1.DriveDataRef drive_data_ref = 1;
   */
  driveDataRef?: DriveDataRef;

  /**
   * The mime type of the linked Google Drive resource.
   *
   * @generated from field: string mime_type = 2;
   */
  mimeType: string;
};

/**
 * Describes the message google.chat.v1.DriveLinkData.
 * Use `create(DriveLinkDataSchema)` to create a new message.
 */
export const DriveLinkDataSchema: GenMessage<DriveLinkData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_annotation, 4);

/**
 * Data for Chat space links.
 *
 * @generated from message google.chat.v1.ChatSpaceLinkData
 */
export type ChatSpaceLinkData = Message<"google.chat.v1.ChatSpaceLinkData"> & {
  /**
   * The space of the linked Chat space resource.
   *
   * Format: `spaces/{space}`
   *
   * @generated from field: string space = 1;
   */
  space: string;

  /**
   * The thread of the linked Chat space resource.
   *
   * Format: `spaces/{space}/threads/{thread}`
   *
   * @generated from field: string thread = 2;
   */
  thread: string;

  /**
   * The message of the linked Chat space resource.
   *
   * Format: `spaces/{space}/messages/{message}`
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message google.chat.v1.ChatSpaceLinkData.
 * Use `create(ChatSpaceLinkDataSchema)` to create a new message.
 */
export const ChatSpaceLinkDataSchema: GenMessage<ChatSpaceLinkData> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_annotation, 5);

/**
 * Type of the annotation.
 *
 * @generated from enum google.chat.v1.AnnotationType
 */
export enum AnnotationType {
  /**
   * Default value for the enum. Don't use.
   *
   * @generated from enum value: ANNOTATION_TYPE_UNSPECIFIED = 0;
   */
  ANNOTATION_TYPE_UNSPECIFIED = 0,

  /**
   * A user is mentioned.
   *
   * @generated from enum value: USER_MENTION = 1;
   */
  USER_MENTION = 1,

  /**
   * A slash command is invoked.
   *
   * @generated from enum value: SLASH_COMMAND = 2;
   */
  SLASH_COMMAND = 2,

  /**
   * A rich link annotation.
   *
   * @generated from enum value: RICH_LINK = 3;
   */
  RICH_LINK = 3,
}

/**
 * Describes the enum google.chat.v1.AnnotationType.
 */
export const AnnotationTypeSchema: GenEnum<AnnotationType> = /*@__PURE__*/
  enumDesc(file_google_chat_v1_annotation, 0);

