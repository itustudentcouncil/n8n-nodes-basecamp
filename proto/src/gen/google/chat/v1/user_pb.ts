// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/chat/v1/user.proto (package google.chat.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/chat/v1/user.proto.
 */
export const file_google_chat_v1_user: GenFile = /*@__PURE__*/
  fileDesc("Chlnb29nbGUvY2hhdC92MS91c2VyLnByb3RvEg5nb29nbGUuY2hhdC52MSK4AQoEVXNlchIMCgRuYW1lGAEgASgJEhkKDGRpc3BsYXlfbmFtZRgCIAEoCUID4EEDEhEKCWRvbWFpbl9pZBgGIAEoCRInCgR0eXBlGAUgASgOMhkuZ29vZ2xlLmNoYXQudjEuVXNlci5UeXBlEhkKDGlzX2Fub255bW91cxgHIAEoCEID4EEDIjAKBFR5cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEgkKBUhVTUFOEAESBwoDQk9UEAJCogEKEmNvbS5nb29nbGUuY2hhdC52MUIJVXNlclByb3RvUAFaLGNsb3VkLmdvb2dsZS5jb20vZ28vY2hhdC9hcGl2MS9jaGF0cGI7Y2hhdHBiogILRFlOQVBJUHJvdG+qAhNHb29nbGUuQXBwcy5DaGF0LlYxygITR29vZ2xlXEFwcHNcQ2hhdFxWMeoCFkdvb2dsZTo6QXBwczo6Q2hhdDo6VjFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource]);

/**
 * A user in Google Chat.
 * When returned as an output from a request, if your Chat app [authenticates as
 * a
 * user](https://developers.google.com/workspace/chat/authenticate-authorize-chat-user),
 * the output for a `User` resource only populates the user's `name` and `type`.
 *
 * @generated from message google.chat.v1.User
 */
export type User = Message<"google.chat.v1.User"> & {
  /**
   * Resource name for a Google Chat [user][google.chat.v1.User].
   *
   * Format: `users/{user}`. `users/app` can be used as an alias for the calling
   * app [bot][google.chat.v1.User.Type.BOT] user.
   *
   * For [human users][google.chat.v1.User.Type.HUMAN], `{user}` is the same
   * user identifier as:
   *
   * - the `id` for the
   * [Person](https://developers.google.com/people/api/rest/v1/people) in the
   * People API. For example, `users/123456789` in Chat API represents the same
   * person as the `123456789` Person profile ID in People API.
   *
   * - the `id` for a
   * [user](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users)
   * in the Admin SDK Directory API.
   *
   * - the user's email address can be used as an alias for `{user}` in API
   * requests. For example, if the People API Person profile ID for
   * `user@example.com` is `123456789`, you can use `users/user@example.com` as
   * an alias to reference `users/123456789`. Only the canonical resource name
   * (for example `users/123456789`) will be returned from the API.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The user's display name.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Unique identifier of the user's Google Workspace domain.
   *
   * @generated from field: string domain_id = 6;
   */
  domainId: string;

  /**
   * User type.
   *
   * @generated from field: google.chat.v1.User.Type type = 5;
   */
  type: User_Type;

  /**
   * Output only. When `true`, the user is deleted or their profile is not
   * visible.
   *
   * @generated from field: bool is_anonymous = 7;
   */
  isAnonymous: boolean;
};

/**
 * Describes the message google.chat.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_google_chat_v1_user, 0);

/**
 * @generated from enum google.chat.v1.User.Type
 */
export enum User_Type {
  /**
   * Default value for the enum. DO NOT USE.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Human user.
   *
   * @generated from enum value: HUMAN = 1;
   */
  HUMAN = 1,

  /**
   * Chat app user.
   *
   * @generated from enum value: BOT = 2;
   */
  BOT = 2,
}

/**
 * Describes the enum google.chat.v1.User.Type.
 */
export const User_TypeSchema: GenEnum<User_Type> = /*@__PURE__*/
  enumDesc(file_google_chat_v1_user, 0, 0);

