// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ai/generativelanguage/v1beta/content.proto (package google.ai.generativelanguage.v1beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ai/generativelanguage/v1beta/content.proto.
 */
export const file_google_ai_generativelanguage_v1beta_content: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvYWkvZ2VuZXJhdGl2ZWxhbmd1YWdlL3YxYmV0YS9jb250ZW50LnByb3RvEiNnb29nbGUuYWkuZ2VuZXJhdGl2ZWxhbmd1YWdlLnYxYmV0YSJWCgdDb250ZW50EjgKBXBhcnRzGAEgAygLMikuZ29vZ2xlLmFpLmdlbmVyYXRpdmVsYW5ndWFnZS52MWJldGEuUGFydBIRCgRyb2xlGAIgASgJQgPgQQEi7wMKBFBhcnQSDgoEdGV4dBgCIAEoCUgAEkAKC2lubGluZV9kYXRhGAMgASgLMikuZ29vZ2xlLmFpLmdlbmVyYXRpdmVsYW5ndWFnZS52MWJldGEuQmxvYkgAEkoKDWZ1bmN0aW9uX2NhbGwYBCABKAsyMS5nb29nbGUuYWkuZ2VuZXJhdGl2ZWxhbmd1YWdlLnYxYmV0YS5GdW5jdGlvbkNhbGxIABJSChFmdW5jdGlvbl9yZXNwb25zZRgFIAEoCzI1Lmdvb2dsZS5haS5nZW5lcmF0aXZlbGFuZ3VhZ2UudjFiZXRhLkZ1bmN0aW9uUmVzcG9uc2VIABJCCglmaWxlX2RhdGEYBiABKAsyLS5nb29nbGUuYWkuZ2VuZXJhdGl2ZWxhbmd1YWdlLnYxYmV0YS5GaWxlRGF0YUgAEk4KD2V4ZWN1dGFibGVfY29kZRgJIAEoCzIzLmdvb2dsZS5haS5nZW5lcmF0aXZlbGFuZ3VhZ2UudjFiZXRhLkV4ZWN1dGFibGVDb2RlSAASWQoVY29kZV9leGVjdXRpb25fcmVzdWx0GAogASgLMjguZ29vZ2xlLmFpLmdlbmVyYXRpdmVsYW5ndWFnZS52MWJldGEuQ29kZUV4ZWN1dGlvblJlc3VsdEgAQgYKBGRhdGEiJwoEQmxvYhIRCgltaW1lX3R5cGUYASABKAkSDAoEZGF0YRgCIAEoDCI5CghGaWxlRGF0YRIWCgltaW1lX3R5cGUYASABKAlCA+BBARIVCghmaWxlX3VyaRgCIAEoCUID4EECIqoBCg5FeGVjdXRhYmxlQ29kZRJTCghsYW5ndWFnZRgBIAEoDjI8Lmdvb2dsZS5haS5nZW5lcmF0aXZlbGFuZ3VhZ2UudjFiZXRhLkV4ZWN1dGFibGVDb2RlLkxhbmd1YWdlQgPgQQISEQoEY29kZRgCIAEoCUID4EECIjAKCExhbmd1YWdlEhgKFExBTkdVQUdFX1VOU1BFQ0lGSUVEEAASCgoGUFlUSE9OEAEi6QEKE0NvZGVFeGVjdXRpb25SZXN1bHQSVgoHb3V0Y29tZRgBIAEoDjJALmdvb2dsZS5haS5nZW5lcmF0aXZlbGFuZ3VhZ2UudjFiZXRhLkNvZGVFeGVjdXRpb25SZXN1bHQuT3V0Y29tZUID4EECEhMKBm91dHB1dBgCIAEoCUID4EEBImUKB091dGNvbWUSFwoTT1VUQ09NRV9VTlNQRUNJRklFRBAAEg4KCk9VVENPTUVfT0sQARISCg5PVVRDT01FX0ZBSUxFRBACEh0KGU9VVENPTUVfREVBRExJTkVfRVhDRUVERUQQAyKXAgoEVG9vbBJcChVmdW5jdGlvbl9kZWNsYXJhdGlvbnMYASADKAsyOC5nb29nbGUuYWkuZ2VuZXJhdGl2ZWxhbmd1YWdlLnYxYmV0YS5GdW5jdGlvbkRlY2xhcmF0aW9uQgPgQQESYAoXZ29vZ2xlX3NlYXJjaF9yZXRyaWV2YWwYAiABKAsyOi5nb29nbGUuYWkuZ2VuZXJhdGl2ZWxhbmd1YWdlLnYxYmV0YS5Hb29nbGVTZWFyY2hSZXRyaWV2YWxCA+BBARJPCg5jb2RlX2V4ZWN1dGlvbhgDIAEoCzIyLmdvb2dsZS5haS5nZW5lcmF0aXZlbGFuZ3VhZ2UudjFiZXRhLkNvZGVFeGVjdXRpb25CA+BBASJ2ChVHb29nbGVTZWFyY2hSZXRyaWV2YWwSXQoYZHluYW1pY19yZXRyaWV2YWxfY29uZmlnGAEgASgLMjsuZ29vZ2xlLmFpLmdlbmVyYXRpdmVsYW5ndWFnZS52MWJldGEuRHluYW1pY1JldHJpZXZhbENvbmZpZyLOAQoWRHluYW1pY1JldHJpZXZhbENvbmZpZxJOCgRtb2RlGAEgASgOMkAuZ29vZ2xlLmFpLmdlbmVyYXRpdmVsYW5ndWFnZS52MWJldGEuRHluYW1pY1JldHJpZXZhbENvbmZpZy5Nb2RlEh4KEWR5bmFtaWNfdGhyZXNob2xkGAIgASgCSACIAQEiLgoETW9kZRIUChBNT0RFX1VOU1BFQ0lGSUVEEAASEAoMTU9ERV9EWU5BTUlDEAFCFAoSX2R5bmFtaWNfdGhyZXNob2xkIg8KDUNvZGVFeGVjdXRpb24ibgoKVG9vbENvbmZpZxJgChdmdW5jdGlvbl9jYWxsaW5nX2NvbmZpZxgBIAEoCzI6Lmdvb2dsZS5haS5nZW5lcmF0aXZlbGFuZ3VhZ2UudjFiZXRhLkZ1bmN0aW9uQ2FsbGluZ0NvbmZpZ0ID4EEBIssBChVGdW5jdGlvbkNhbGxpbmdDb25maWcSUgoEbW9kZRgBIAEoDjI/Lmdvb2dsZS5haS5nZW5lcmF0aXZlbGFuZ3VhZ2UudjFiZXRhLkZ1bmN0aW9uQ2FsbGluZ0NvbmZpZy5Nb2RlQgPgQQESIwoWYWxsb3dlZF9mdW5jdGlvbl9uYW1lcxgCIAMoCUID4EEBIjkKBE1vZGUSFAoQTU9ERV9VTlNQRUNJRklFRBAAEggKBEFVVE8QARIHCgNBTlkQAhIICgROT05FEAMinAEKE0Z1bmN0aW9uRGVjbGFyYXRpb24SEQoEbmFtZRgBIAEoCUID4EECEhgKC2Rlc2NyaXB0aW9uGAIgASgJQgPgQQISSQoKcGFyYW1ldGVycxgDIAEoCzIrLmdvb2dsZS5haS5nZW5lcmF0aXZlbGFuZ3VhZ2UudjFiZXRhLlNjaGVtYUID4EEBSACIAQFCDQoLX3BhcmFtZXRlcnMiWwoMRnVuY3Rpb25DYWxsEhEKBG5hbWUYASABKAlCA+BBAhIvCgRhcmdzGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdEID4EEBSACIAQFCBwoFX2FyZ3MiVQoQRnVuY3Rpb25SZXNwb25zZRIRCgRuYW1lGAEgASgJQgPgQQISLgoIcmVzcG9uc2UYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0QgPgQQIi7AMKBlNjaGVtYRI8CgR0eXBlGAEgASgOMikuZ29vZ2xlLmFpLmdlbmVyYXRpdmVsYW5ndWFnZS52MWJldGEuVHlwZUID4EECEhMKBmZvcm1hdBgCIAEoCUID4EEBEhgKC2Rlc2NyaXB0aW9uGAMgASgJQgPgQQESFQoIbnVsbGFibGUYBCABKAhCA+BBARIRCgRlbnVtGAUgAygJQgPgQQESRAoFaXRlbXMYBiABKAsyKy5nb29nbGUuYWkuZ2VuZXJhdGl2ZWxhbmd1YWdlLnYxYmV0YS5TY2hlbWFCA+BBAUgAiAEBEhYKCW1heF9pdGVtcxgVIAEoA0ID4EEBEhYKCW1pbl9pdGVtcxgWIAEoA0ID4EEBElQKCnByb3BlcnRpZXMYByADKAsyOy5nb29nbGUuYWkuZ2VuZXJhdGl2ZWxhbmd1YWdlLnYxYmV0YS5TY2hlbWEuUHJvcGVydGllc0VudHJ5QgPgQQESFQoIcmVxdWlyZWQYCCADKAlCA+BBARpeCg9Qcm9wZXJ0aWVzRW50cnkSCwoDa2V5GAEgASgJEjoKBXZhbHVlGAIgASgLMisuZ29vZ2xlLmFpLmdlbmVyYXRpdmVsYW5ndWFnZS52MWJldGEuU2NoZW1hOgI4AUIICgZfaXRlbXMiXQoQR3JvdW5kaW5nUGFzc2FnZRIKCgJpZBgBIAEoCRI9Cgdjb250ZW50GAIgASgLMiwuZ29vZ2xlLmFpLmdlbmVyYXRpdmVsYW5ndWFnZS52MWJldGEuQ29udGVudCJcChFHcm91bmRpbmdQYXNzYWdlcxJHCghwYXNzYWdlcxgBIAMoCzI1Lmdvb2dsZS5haS5nZW5lcmF0aXZlbGFuZ3VhZ2UudjFiZXRhLkdyb3VuZGluZ1Bhc3NhZ2UqZQoEVHlwZRIUChBUWVBFX1VOU1BFQ0lGSUVEEAASCgoGU1RSSU5HEAESCgoGTlVNQkVSEAISCwoHSU5URUdFUhADEgsKB0JPT0xFQU4QBBIJCgVBUlJBWRAFEgoKBk9CSkVDVBAGQpgBCidjb20uZ29vZ2xlLmFpLmdlbmVyYXRpdmVsYW5ndWFnZS52MWJldGFCDENvbnRlbnRQcm90b1ABWl1jbG91ZC5nb29nbGUuY29tL2dvL2FpL2dlbmVyYXRpdmVsYW5ndWFnZS9hcGl2MWJldGEvZ2VuZXJhdGl2ZWxhbmd1YWdlcGI7Z2VuZXJhdGl2ZWxhbmd1YWdlcGJiBnByb3RvMw", [file_google_api_field_behavior, file_google_protobuf_struct]);

/**
 * The base structured datatype containing multi-part content of a message.
 *
 * A `Content` includes a `role` field designating the producer of the `Content`
 * and a `parts` field containing multi-part data that contains the content of
 * the message turn.
 *
 * @generated from message google.ai.generativelanguage.v1beta.Content
 */
export type Content = Message<"google.ai.generativelanguage.v1beta.Content"> & {
  /**
   * Ordered `Parts` that constitute a single message. Parts may have different
   * MIME types.
   *
   * @generated from field: repeated google.ai.generativelanguage.v1beta.Part parts = 1;
   */
  parts: Part[];

  /**
   * Optional. The producer of the content. Must be either 'user' or 'model'.
   *
   * Useful to set for multi-turn conversations, otherwise can be left blank
   * or unset.
   *
   * @generated from field: string role = 2;
   */
  role: string;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.Content.
 * Use `create(ContentSchema)` to create a new message.
 */
export const ContentSchema: GenMessage<Content> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 0);

/**
 * A datatype containing media that is part of a multi-part `Content` message.
 *
 * A `Part` consists of data which has an associated datatype. A `Part` can only
 * contain one of the accepted types in `Part.data`.
 *
 * A `Part` must have a fixed IANA MIME type identifying the type and subtype
 * of the media if the `inline_data` field is filled with raw bytes.
 *
 * @generated from message google.ai.generativelanguage.v1beta.Part
 */
export type Part = Message<"google.ai.generativelanguage.v1beta.Part"> & {
  /**
   * @generated from oneof google.ai.generativelanguage.v1beta.Part.data
   */
  data: {
    /**
     * Inline text.
     *
     * @generated from field: string text = 2;
     */
    value: string;
    case: "text";
  } | {
    /**
     * Inline media bytes.
     *
     * @generated from field: google.ai.generativelanguage.v1beta.Blob inline_data = 3;
     */
    value: Blob;
    case: "inlineData";
  } | {
    /**
     * A predicted `FunctionCall` returned from the model that contains
     * a string representing the `FunctionDeclaration.name` with the
     * arguments and their values.
     *
     * @generated from field: google.ai.generativelanguage.v1beta.FunctionCall function_call = 4;
     */
    value: FunctionCall;
    case: "functionCall";
  } | {
    /**
     * The result output of a `FunctionCall` that contains a string
     * representing the `FunctionDeclaration.name` and a structured JSON
     * object containing any output from the function is used as context to
     * the model.
     *
     * @generated from field: google.ai.generativelanguage.v1beta.FunctionResponse function_response = 5;
     */
    value: FunctionResponse;
    case: "functionResponse";
  } | {
    /**
     * URI based data.
     *
     * @generated from field: google.ai.generativelanguage.v1beta.FileData file_data = 6;
     */
    value: FileData;
    case: "fileData";
  } | {
    /**
     * Code generated by the model that is meant to be executed.
     *
     * @generated from field: google.ai.generativelanguage.v1beta.ExecutableCode executable_code = 9;
     */
    value: ExecutableCode;
    case: "executableCode";
  } | {
    /**
     * Result of executing the `ExecutableCode`.
     *
     * @generated from field: google.ai.generativelanguage.v1beta.CodeExecutionResult code_execution_result = 10;
     */
    value: CodeExecutionResult;
    case: "codeExecutionResult";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.Part.
 * Use `create(PartSchema)` to create a new message.
 */
export const PartSchema: GenMessage<Part> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 1);

/**
 * Raw media bytes.
 *
 * Text should not be sent as raw bytes, use the 'text' field.
 *
 * @generated from message google.ai.generativelanguage.v1beta.Blob
 */
export type Blob = Message<"google.ai.generativelanguage.v1beta.Blob"> & {
  /**
   * The IANA standard MIME type of the source data.
   * Examples:
   *   - image/png
   *   - image/jpeg
   * If an unsupported MIME type is provided, an error will be returned. For a
   * complete list of supported types, see [Supported file
   * formats](https://ai.google.dev/gemini-api/docs/prompting_with_media#supported_file_formats).
   *
   * @generated from field: string mime_type = 1;
   */
  mimeType: string;

  /**
   * Raw bytes for media formats.
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.Blob.
 * Use `create(BlobSchema)` to create a new message.
 */
export const BlobSchema: GenMessage<Blob> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 2);

/**
 * URI based data.
 *
 * @generated from message google.ai.generativelanguage.v1beta.FileData
 */
export type FileData = Message<"google.ai.generativelanguage.v1beta.FileData"> & {
  /**
   * Optional. The IANA standard MIME type of the source data.
   *
   * @generated from field: string mime_type = 1;
   */
  mimeType: string;

  /**
   * Required. URI.
   *
   * @generated from field: string file_uri = 2;
   */
  fileUri: string;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.FileData.
 * Use `create(FileDataSchema)` to create a new message.
 */
export const FileDataSchema: GenMessage<FileData> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 3);

/**
 * Code generated by the model that is meant to be executed, and the result
 * returned to the model.
 *
 * Only generated when using the `CodeExecution` tool, in which the code will
 * be automatically executed, and a corresponding `CodeExecutionResult` will
 * also be generated.
 *
 * @generated from message google.ai.generativelanguage.v1beta.ExecutableCode
 */
export type ExecutableCode = Message<"google.ai.generativelanguage.v1beta.ExecutableCode"> & {
  /**
   * Required. Programming language of the `code`.
   *
   * @generated from field: google.ai.generativelanguage.v1beta.ExecutableCode.Language language = 1;
   */
  language: ExecutableCode_Language;

  /**
   * Required. The code to be executed.
   *
   * @generated from field: string code = 2;
   */
  code: string;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.ExecutableCode.
 * Use `create(ExecutableCodeSchema)` to create a new message.
 */
export const ExecutableCodeSchema: GenMessage<ExecutableCode> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 4);

/**
 * Supported programming languages for the generated code.
 *
 * @generated from enum google.ai.generativelanguage.v1beta.ExecutableCode.Language
 */
export enum ExecutableCode_Language {
  /**
   * Unspecified language. This value should not be used.
   *
   * @generated from enum value: LANGUAGE_UNSPECIFIED = 0;
   */
  LANGUAGE_UNSPECIFIED = 0,

  /**
   * Python >= 3.10, with numpy and simpy available.
   *
   * @generated from enum value: PYTHON = 1;
   */
  PYTHON = 1,
}

/**
 * Describes the enum google.ai.generativelanguage.v1beta.ExecutableCode.Language.
 */
export const ExecutableCode_LanguageSchema: GenEnum<ExecutableCode_Language> = /*@__PURE__*/
  enumDesc(file_google_ai_generativelanguage_v1beta_content, 4, 0);

/**
 * Result of executing the `ExecutableCode`.
 *
 * Only generated when using the `CodeExecution`, and always follows a `part`
 * containing the `ExecutableCode`.
 *
 * @generated from message google.ai.generativelanguage.v1beta.CodeExecutionResult
 */
export type CodeExecutionResult = Message<"google.ai.generativelanguage.v1beta.CodeExecutionResult"> & {
  /**
   * Required. Outcome of the code execution.
   *
   * @generated from field: google.ai.generativelanguage.v1beta.CodeExecutionResult.Outcome outcome = 1;
   */
  outcome: CodeExecutionResult_Outcome;

  /**
   * Optional. Contains stdout when code execution is successful, stderr or
   * other description otherwise.
   *
   * @generated from field: string output = 2;
   */
  output: string;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.CodeExecutionResult.
 * Use `create(CodeExecutionResultSchema)` to create a new message.
 */
export const CodeExecutionResultSchema: GenMessage<CodeExecutionResult> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 5);

/**
 * Enumeration of possible outcomes of the code execution.
 *
 * @generated from enum google.ai.generativelanguage.v1beta.CodeExecutionResult.Outcome
 */
export enum CodeExecutionResult_Outcome {
  /**
   * Unspecified status. This value should not be used.
   *
   * @generated from enum value: OUTCOME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Code execution completed successfully.
   *
   * @generated from enum value: OUTCOME_OK = 1;
   */
  OK = 1,

  /**
   * Code execution finished but with a failure. `stderr` should contain the
   * reason.
   *
   * @generated from enum value: OUTCOME_FAILED = 2;
   */
  FAILED = 2,

  /**
   * Code execution ran for too long, and was cancelled. There may or may not
   * be a partial output present.
   *
   * @generated from enum value: OUTCOME_DEADLINE_EXCEEDED = 3;
   */
  DEADLINE_EXCEEDED = 3,
}

/**
 * Describes the enum google.ai.generativelanguage.v1beta.CodeExecutionResult.Outcome.
 */
export const CodeExecutionResult_OutcomeSchema: GenEnum<CodeExecutionResult_Outcome> = /*@__PURE__*/
  enumDesc(file_google_ai_generativelanguage_v1beta_content, 5, 0);

/**
 * Tool details that the model may use to generate response.
 *
 * A `Tool` is a piece of code that enables the system to interact with
 * external systems to perform an action, or set of actions, outside of
 * knowledge and scope of the model.
 *
 * @generated from message google.ai.generativelanguage.v1beta.Tool
 */
export type Tool = Message<"google.ai.generativelanguage.v1beta.Tool"> & {
  /**
   * Optional. A list of `FunctionDeclarations` available to the model that can
   * be used for function calling.
   *
   * The model or system does not execute the function. Instead the defined
   * function may be returned as a
   * [FunctionCall][google.ai.generativelanguage.v1beta.Part.function_call] with
   * arguments to the client side for execution. The model may decide to call a
   * subset of these functions by populating
   * [FunctionCall][google.ai.generativelanguage.v1beta.Part.function_call] in
   * the response. The next conversation turn may contain a
   * [FunctionResponse][google.ai.generativelanguage.v1beta.Part.function_response]
   * with the [Content.role][google.ai.generativelanguage.v1beta.Content.role]
   * "function" generation context for the next model turn.
   *
   * @generated from field: repeated google.ai.generativelanguage.v1beta.FunctionDeclaration function_declarations = 1;
   */
  functionDeclarations: FunctionDeclaration[];

  /**
   * Optional. Retrieval tool that is powered by Google search.
   *
   * @generated from field: google.ai.generativelanguage.v1beta.GoogleSearchRetrieval google_search_retrieval = 2;
   */
  googleSearchRetrieval?: GoogleSearchRetrieval;

  /**
   * Optional. Enables the model to execute code as part of generation.
   *
   * @generated from field: google.ai.generativelanguage.v1beta.CodeExecution code_execution = 3;
   */
  codeExecution?: CodeExecution;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.Tool.
 * Use `create(ToolSchema)` to create a new message.
 */
export const ToolSchema: GenMessage<Tool> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 6);

/**
 * Tool to retrieve public web data for grounding, powered by Google.
 *
 * @generated from message google.ai.generativelanguage.v1beta.GoogleSearchRetrieval
 */
export type GoogleSearchRetrieval = Message<"google.ai.generativelanguage.v1beta.GoogleSearchRetrieval"> & {
  /**
   * Specifies the dynamic retrieval configuration for the given source.
   *
   * @generated from field: google.ai.generativelanguage.v1beta.DynamicRetrievalConfig dynamic_retrieval_config = 1;
   */
  dynamicRetrievalConfig?: DynamicRetrievalConfig;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.GoogleSearchRetrieval.
 * Use `create(GoogleSearchRetrievalSchema)` to create a new message.
 */
export const GoogleSearchRetrievalSchema: GenMessage<GoogleSearchRetrieval> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 7);

/**
 * Describes the options to customize dynamic retrieval.
 *
 * @generated from message google.ai.generativelanguage.v1beta.DynamicRetrievalConfig
 */
export type DynamicRetrievalConfig = Message<"google.ai.generativelanguage.v1beta.DynamicRetrievalConfig"> & {
  /**
   * The mode of the predictor to be used in dynamic retrieval.
   *
   * @generated from field: google.ai.generativelanguage.v1beta.DynamicRetrievalConfig.Mode mode = 1;
   */
  mode: DynamicRetrievalConfig_Mode;

  /**
   * The threshold to be used in dynamic retrieval.
   * If not set, a system default value is used.
   *
   * @generated from field: optional float dynamic_threshold = 2;
   */
  dynamicThreshold?: number;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.DynamicRetrievalConfig.
 * Use `create(DynamicRetrievalConfigSchema)` to create a new message.
 */
export const DynamicRetrievalConfigSchema: GenMessage<DynamicRetrievalConfig> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 8);

/**
 * The mode of the predictor to be used in dynamic retrieval.
 *
 * @generated from enum google.ai.generativelanguage.v1beta.DynamicRetrievalConfig.Mode
 */
export enum DynamicRetrievalConfig_Mode {
  /**
   * Always trigger retrieval.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Run retrieval only when system decides it is necessary.
   *
   * @generated from enum value: MODE_DYNAMIC = 1;
   */
  DYNAMIC = 1,
}

/**
 * Describes the enum google.ai.generativelanguage.v1beta.DynamicRetrievalConfig.Mode.
 */
export const DynamicRetrievalConfig_ModeSchema: GenEnum<DynamicRetrievalConfig_Mode> = /*@__PURE__*/
  enumDesc(file_google_ai_generativelanguage_v1beta_content, 8, 0);

/**
 * Tool that executes code generated by the model, and automatically returns
 * the result to the model.
 *
 * See also `ExecutableCode` and `CodeExecutionResult` which are only generated
 * when using this tool.
 *
 * @generated from message google.ai.generativelanguage.v1beta.CodeExecution
 */
export type CodeExecution = Message<"google.ai.generativelanguage.v1beta.CodeExecution"> & {
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.CodeExecution.
 * Use `create(CodeExecutionSchema)` to create a new message.
 */
export const CodeExecutionSchema: GenMessage<CodeExecution> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 9);

/**
 * The Tool configuration containing parameters for specifying `Tool` use
 * in the request.
 *
 * @generated from message google.ai.generativelanguage.v1beta.ToolConfig
 */
export type ToolConfig = Message<"google.ai.generativelanguage.v1beta.ToolConfig"> & {
  /**
   * Optional. Function calling config.
   *
   * @generated from field: google.ai.generativelanguage.v1beta.FunctionCallingConfig function_calling_config = 1;
   */
  functionCallingConfig?: FunctionCallingConfig;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.ToolConfig.
 * Use `create(ToolConfigSchema)` to create a new message.
 */
export const ToolConfigSchema: GenMessage<ToolConfig> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 10);

/**
 * Configuration for specifying function calling behavior.
 *
 * @generated from message google.ai.generativelanguage.v1beta.FunctionCallingConfig
 */
export type FunctionCallingConfig = Message<"google.ai.generativelanguage.v1beta.FunctionCallingConfig"> & {
  /**
   * Optional. Specifies the mode in which function calling should execute. If
   * unspecified, the default value will be set to AUTO.
   *
   * @generated from field: google.ai.generativelanguage.v1beta.FunctionCallingConfig.Mode mode = 1;
   */
  mode: FunctionCallingConfig_Mode;

  /**
   * Optional. A set of function names that, when provided, limits the functions
   * the model will call.
   *
   * This should only be set when the Mode is ANY. Function names
   * should match [FunctionDeclaration.name]. With mode set to ANY, model will
   * predict a function call from the set of function names provided.
   *
   * @generated from field: repeated string allowed_function_names = 2;
   */
  allowedFunctionNames: string[];
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.FunctionCallingConfig.
 * Use `create(FunctionCallingConfigSchema)` to create a new message.
 */
export const FunctionCallingConfigSchema: GenMessage<FunctionCallingConfig> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 11);

/**
 * Defines the execution behavior for function calling by defining the
 * execution mode.
 *
 * @generated from enum google.ai.generativelanguage.v1beta.FunctionCallingConfig.Mode
 */
export enum FunctionCallingConfig_Mode {
  /**
   * Unspecified function calling mode. This value should not be used.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * Default model behavior, model decides to predict either a function call
   * or a natural language response.
   *
   * @generated from enum value: AUTO = 1;
   */
  AUTO = 1,

  /**
   * Model is constrained to always predicting a function call only.
   * If "allowed_function_names" are set, the predicted function call will be
   * limited to any one of "allowed_function_names", else the predicted
   * function call will be any one of the provided "function_declarations".
   *
   * @generated from enum value: ANY = 2;
   */
  ANY = 2,

  /**
   * Model will not predict any function call. Model behavior is same as when
   * not passing any function declarations.
   *
   * @generated from enum value: NONE = 3;
   */
  NONE = 3,
}

/**
 * Describes the enum google.ai.generativelanguage.v1beta.FunctionCallingConfig.Mode.
 */
export const FunctionCallingConfig_ModeSchema: GenEnum<FunctionCallingConfig_Mode> = /*@__PURE__*/
  enumDesc(file_google_ai_generativelanguage_v1beta_content, 11, 0);

/**
 * Structured representation of a function declaration as defined by the
 * [OpenAPI 3.03 specification](https://spec.openapis.org/oas/v3.0.3). Included
 * in this declaration are the function name and parameters. This
 * FunctionDeclaration is a representation of a block of code that can be used
 * as a `Tool` by the model and executed by the client.
 *
 * @generated from message google.ai.generativelanguage.v1beta.FunctionDeclaration
 */
export type FunctionDeclaration = Message<"google.ai.generativelanguage.v1beta.FunctionDeclaration"> & {
  /**
   * Required. The name of the function.
   * Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum
   * length of 63.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. A brief description of the function.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Optional. Describes the parameters to this function. Reflects the Open
   * API 3.03 Parameter Object string Key: the name of the parameter. Parameter
   * names are case sensitive. Schema Value: the Schema defining the type used
   * for the parameter.
   *
   * @generated from field: optional google.ai.generativelanguage.v1beta.Schema parameters = 3;
   */
  parameters?: Schema;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.FunctionDeclaration.
 * Use `create(FunctionDeclarationSchema)` to create a new message.
 */
export const FunctionDeclarationSchema: GenMessage<FunctionDeclaration> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 12);

/**
 * A predicted `FunctionCall` returned from the model that contains
 * a string representing the `FunctionDeclaration.name` with the
 * arguments and their values.
 *
 * @generated from message google.ai.generativelanguage.v1beta.FunctionCall
 */
export type FunctionCall = Message<"google.ai.generativelanguage.v1beta.FunctionCall"> & {
  /**
   * Required. The name of the function to call.
   * Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum
   * length of 63.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The function parameters and values in JSON object format.
   *
   * @generated from field: optional google.protobuf.Struct args = 2;
   */
  args?: JsonObject;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.FunctionCall.
 * Use `create(FunctionCallSchema)` to create a new message.
 */
export const FunctionCallSchema: GenMessage<FunctionCall> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 13);

/**
 * The result output from a `FunctionCall` that contains a string
 * representing the `FunctionDeclaration.name` and a structured JSON
 * object containing any output from the function is used as context to
 * the model. This should contain the result of a`FunctionCall` made
 * based on model prediction.
 *
 * @generated from message google.ai.generativelanguage.v1beta.FunctionResponse
 */
export type FunctionResponse = Message<"google.ai.generativelanguage.v1beta.FunctionResponse"> & {
  /**
   * Required. The name of the function to call.
   * Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum
   * length of 63.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The function response in JSON object format.
   *
   * @generated from field: google.protobuf.Struct response = 2;
   */
  response?: JsonObject;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.FunctionResponse.
 * Use `create(FunctionResponseSchema)` to create a new message.
 */
export const FunctionResponseSchema: GenMessage<FunctionResponse> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 14);

/**
 * The `Schema` object allows the definition of input and output data types.
 * These types can be objects, but also primitives and arrays.
 * Represents a select subset of an [OpenAPI 3.0 schema
 * object](https://spec.openapis.org/oas/v3.0.3#schema).
 *
 * @generated from message google.ai.generativelanguage.v1beta.Schema
 */
export type Schema = Message<"google.ai.generativelanguage.v1beta.Schema"> & {
  /**
   * Required. Data type.
   *
   * @generated from field: google.ai.generativelanguage.v1beta.Type type = 1;
   */
  type: Type;

  /**
   * Optional. The format of the data. This is used only for primitive
   * datatypes. Supported formats:
   *  for NUMBER type: float, double
   *  for INTEGER type: int32, int64
   *  for STRING type: enum
   *
   * @generated from field: string format = 2;
   */
  format: string;

  /**
   * Optional. A brief description of the parameter. This could contain examples
   * of use. Parameter description may be formatted as Markdown.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Optional. Indicates if the value may be null.
   *
   * @generated from field: bool nullable = 4;
   */
  nullable: boolean;

  /**
   * Optional. Possible values of the element of Type.STRING with enum format.
   * For example we can define an Enum Direction as :
   * {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH", "WEST"]}
   *
   * @generated from field: repeated string enum = 5;
   */
  enum: string[];

  /**
   * Optional. Schema of the elements of Type.ARRAY.
   *
   * @generated from field: optional google.ai.generativelanguage.v1beta.Schema items = 6;
   */
  items?: Schema;

  /**
   * Optional. Maximum number of the elements for Type.ARRAY.
   *
   * @generated from field: int64 max_items = 21;
   */
  maxItems: bigint;

  /**
   * Optional. Minimum number of the elements for Type.ARRAY.
   *
   * @generated from field: int64 min_items = 22;
   */
  minItems: bigint;

  /**
   * Optional. Properties of Type.OBJECT.
   *
   * @generated from field: map<string, google.ai.generativelanguage.v1beta.Schema> properties = 7;
   */
  properties: { [key: string]: Schema };

  /**
   * Optional. Required properties of Type.OBJECT.
   *
   * @generated from field: repeated string required = 8;
   */
  required: string[];
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.Schema.
 * Use `create(SchemaSchema)` to create a new message.
 */
export const SchemaSchema: GenMessage<Schema> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 15);

/**
 * Passage included inline with a grounding configuration.
 *
 * @generated from message google.ai.generativelanguage.v1beta.GroundingPassage
 */
export type GroundingPassage = Message<"google.ai.generativelanguage.v1beta.GroundingPassage"> & {
  /**
   * Identifier for the passage for attributing this passage in grounded
   * answers.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Content of the passage.
   *
   * @generated from field: google.ai.generativelanguage.v1beta.Content content = 2;
   */
  content?: Content;
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.GroundingPassage.
 * Use `create(GroundingPassageSchema)` to create a new message.
 */
export const GroundingPassageSchema: GenMessage<GroundingPassage> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 16);

/**
 * A repeated list of passages.
 *
 * @generated from message google.ai.generativelanguage.v1beta.GroundingPassages
 */
export type GroundingPassages = Message<"google.ai.generativelanguage.v1beta.GroundingPassages"> & {
  /**
   * List of passages.
   *
   * @generated from field: repeated google.ai.generativelanguage.v1beta.GroundingPassage passages = 1;
   */
  passages: GroundingPassage[];
};

/**
 * Describes the message google.ai.generativelanguage.v1beta.GroundingPassages.
 * Use `create(GroundingPassagesSchema)` to create a new message.
 */
export const GroundingPassagesSchema: GenMessage<GroundingPassages> = /*@__PURE__*/
  messageDesc(file_google_ai_generativelanguage_v1beta_content, 17);

/**
 * Type contains the list of OpenAPI data types as defined by
 * https://spec.openapis.org/oas/v3.0.3#data-types
 *
 * @generated from enum google.ai.generativelanguage.v1beta.Type
 */
export enum Type {
  /**
   * Not specified, should not be used.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * String type.
   *
   * @generated from enum value: STRING = 1;
   */
  STRING = 1,

  /**
   * Number type.
   *
   * @generated from enum value: NUMBER = 2;
   */
  NUMBER = 2,

  /**
   * Integer type.
   *
   * @generated from enum value: INTEGER = 3;
   */
  INTEGER = 3,

  /**
   * Boolean type.
   *
   * @generated from enum value: BOOLEAN = 4;
   */
  BOOLEAN = 4,

  /**
   * Array type.
   *
   * @generated from enum value: ARRAY = 5;
   */
  ARRAY = 5,

  /**
   * Object type.
   *
   * @generated from enum value: OBJECT = 6;
   */
  OBJECT = 6,
}

/**
 * Describes the enum google.ai.generativelanguage.v1beta.Type.
 */
export const TypeSchema: GenEnum<Type> = /*@__PURE__*/
  enumDesc(file_google_ai_generativelanguage_v1beta_content, 0);

