// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/iam/credentials/v1/iamcredentials.proto (package google.iam.credentials.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import type { GenerateAccessTokenRequestSchema, GenerateAccessTokenResponseSchema, GenerateIdTokenRequestSchema, GenerateIdTokenResponseSchema, SignBlobRequestSchema, SignBlobResponseSchema, SignJwtRequestSchema, SignJwtResponseSchema } from "./common_pb";
import { file_google_iam_credentials_v1_common } from "./common_pb";

/**
 * Describes the file google/iam/credentials/v1/iamcredentials.proto.
 */
export const file_google_iam_credentials_v1_iamcredentials: GenFile = /*@__PURE__*/
  fileDesc("Ci5nb29nbGUvaWFtL2NyZWRlbnRpYWxzL3YxL2lhbWNyZWRlbnRpYWxzLnByb3RvEhlnb29nbGUuaWFtLmNyZWRlbnRpYWxzLnYxMq0HCg5JQU1DcmVkZW50aWFscxLsAQoTR2VuZXJhdGVBY2Nlc3NUb2tlbhI1Lmdvb2dsZS5pYW0uY3JlZGVudGlhbHMudjEuR2VuZXJhdGVBY2Nlc3NUb2tlblJlcXVlc3QaNi5nb29nbGUuaWFtLmNyZWRlbnRpYWxzLnYxLkdlbmVyYXRlQWNjZXNzVG9rZW5SZXNwb25zZSJm2kEdbmFtZSxkZWxlZ2F0ZXMsc2NvcGUsbGlmZXRpbWWC0+STAkA6ASoiOy92MS97bmFtZT1wcm9qZWN0cy8qL3NlcnZpY2VBY2NvdW50cy8qfTpnZW5lcmF0ZUFjY2Vzc1Rva2VuEuQBCg9HZW5lcmF0ZUlkVG9rZW4SMS5nb29nbGUuaWFtLmNyZWRlbnRpYWxzLnYxLkdlbmVyYXRlSWRUb2tlblJlcXVlc3QaMi5nb29nbGUuaWFtLmNyZWRlbnRpYWxzLnYxLkdlbmVyYXRlSWRUb2tlblJlc3BvbnNlImraQSVuYW1lLGRlbGVnYXRlcyxhdWRpZW5jZSxpbmNsdWRlX2VtYWlsgtPkkwI8OgEqIjcvdjEve25hbWU9cHJvamVjdHMvKi9zZXJ2aWNlQWNjb3VudHMvKn06Z2VuZXJhdGVJZFRva2VuErkBCghTaWduQmxvYhIqLmdvb2dsZS5pYW0uY3JlZGVudGlhbHMudjEuU2lnbkJsb2JSZXF1ZXN0GisuZ29vZ2xlLmlhbS5jcmVkZW50aWFscy52MS5TaWduQmxvYlJlc3BvbnNlIlTaQRZuYW1lLGRlbGVnYXRlcyxwYXlsb2FkgtPkkwI1OgEqIjAvdjEve25hbWU9cHJvamVjdHMvKi9zZXJ2aWNlQWNjb3VudHMvKn06c2lnbkJsb2IStQEKB1NpZ25Kd3QSKS5nb29nbGUuaWFtLmNyZWRlbnRpYWxzLnYxLlNpZ25Kd3RSZXF1ZXN0GiouZ29vZ2xlLmlhbS5jcmVkZW50aWFscy52MS5TaWduSnd0UmVzcG9uc2UiU9pBFm5hbWUsZGVsZWdhdGVzLHBheWxvYWSC0+STAjQ6ASoiLy92MS97bmFtZT1wcm9qZWN0cy8qL3NlcnZpY2VBY2NvdW50cy8qfTpzaWduSnd0GlHKQR1pYW1jcmVkZW50aWFscy5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CygEKI2NvbS5nb29nbGUuY2xvdWQuaWFtLmNyZWRlbnRpYWxzLnYxQhNJQU1DcmVkZW50aWFsc1Byb3RvUAFaRWNsb3VkLmdvb2dsZS5jb20vZ28vaWFtL2NyZWRlbnRpYWxzL2FwaXYxL2NyZWRlbnRpYWxzcGI7Y3JlZGVudGlhbHNwYvgBAaoCH0dvb2dsZS5DbG91ZC5JYW0uQ3JlZGVudGlhbHMuVjHKAh9Hb29nbGVcQ2xvdWRcSWFtXENyZWRlbnRpYWxzXFYxYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_iam_credentials_v1_common]);

/**
 * A service account is a special type of Google account that belongs to your
 * application or a virtual machine (VM), instead of to an individual end user.
 * Your application assumes the identity of the service account to call Google
 * APIs, so that the users aren't directly involved.
 *
 * Service account credentials are used to temporarily assume the identity
 * of the service account. Supported credential types include OAuth 2.0 access
 * tokens, OpenID Connect ID tokens, self-signed JSON Web Tokens (JWTs), and
 * more.
 *
 * @generated from service google.iam.credentials.v1.IAMCredentials
 */
export const IAMCredentials: GenService<{
  /**
   * Generates an OAuth 2.0 access token for a service account.
   *
   * @generated from rpc google.iam.credentials.v1.IAMCredentials.GenerateAccessToken
   */
  generateAccessToken: {
    methodKind: "unary";
    input: typeof GenerateAccessTokenRequestSchema;
    output: typeof GenerateAccessTokenResponseSchema;
  },
  /**
   * Generates an OpenID Connect ID token for a service account.
   *
   * @generated from rpc google.iam.credentials.v1.IAMCredentials.GenerateIdToken
   */
  generateIdToken: {
    methodKind: "unary";
    input: typeof GenerateIdTokenRequestSchema;
    output: typeof GenerateIdTokenResponseSchema;
  },
  /**
   * Signs a blob using a service account's system-managed private key.
   *
   * @generated from rpc google.iam.credentials.v1.IAMCredentials.SignBlob
   */
  signBlob: {
    methodKind: "unary";
    input: typeof SignBlobRequestSchema;
    output: typeof SignBlobResponseSchema;
  },
  /**
   * Signs a JWT using a service account's system-managed private key.
   *
   * @generated from rpc google.iam.credentials.v1.IAMCredentials.SignJwt
   */
  signJwt: {
    methodKind: "unary";
    input: typeof SignJwtRequestSchema;
    output: typeof SignJwtResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_iam_credentials_v1_iamcredentials, 0);

