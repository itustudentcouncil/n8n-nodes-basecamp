// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/iam/v2/policy.proto (package google.iam.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import type { DenyRule } from "./deny_pb";
import { file_google_iam_v2_deny } from "./deny_pb";
import type { OperationSchema } from "../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../longrunning/operations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/iam/v2/policy.proto.
 */
export const file_google_iam_v2_policy: GenFile = /*@__PURE__*/
  fileDesc("Chpnb29nbGUvaWFtL3YyL3BvbGljeS5wcm90bxINZ29vZ2xlLmlhbS52MiLCAwoGUG9saWN5EhEKBG5hbWUYASABKAlCA+BBBRIQCgN1aWQYAiABKAlCA+BBBRIRCgRraW5kGAMgASgJQgPgQQMSFAoMZGlzcGxheV9uYW1lGAQgASgJEjsKC2Fubm90YXRpb25zGAUgAygLMiYuZ29vZ2xlLmlhbS52Mi5Qb2xpY3kuQW5ub3RhdGlvbnNFbnRyeRIMCgRldGFnGAYgASgJEjQKC2NyZWF0ZV90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC2RlbGV0ZV90aW1lGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEigKBXJ1bGVzGAogAygLMhkuZ29vZ2xlLmlhbS52Mi5Qb2xpY3lSdWxlEh8KEm1hbmFnaW5nX2F1dGhvcml0eRgLIAEoCUID4EEFGjIKEEFubm90YXRpb25zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJXCgpQb2xpY3lSdWxlEiwKCWRlbnlfcnVsZRgCIAEoCzIXLmdvb2dsZS5pYW0udjIuRGVueVJ1bGVIABITCgtkZXNjcmlwdGlvbhgBIAEoCUIGCgRraW5kIlEKE0xpc3RQb2xpY2llc1JlcXVlc3QSEwoGcGFyZW50GAEgASgJQgPgQQISEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkiWAoUTGlzdFBvbGljaWVzUmVzcG9uc2USJwoIcG9saWNpZXMYASADKAsyFS5nb29nbGUuaWFtLnYyLlBvbGljeRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiJQoQR2V0UG9saWN5UmVxdWVzdBIRCgRuYW1lGAEgASgJQgPgQQIiaQoTQ3JlYXRlUG9saWN5UmVxdWVzdBITCgZwYXJlbnQYASABKAlCA+BBAhIqCgZwb2xpY3kYAiABKAsyFS5nb29nbGUuaWFtLnYyLlBvbGljeUID4EECEhEKCXBvbGljeV9pZBgDIAEoCSJBChNVcGRhdGVQb2xpY3lSZXF1ZXN0EioKBnBvbGljeRgBIAEoCzIVLmdvb2dsZS5pYW0udjIuUG9saWN5QgPgQQIiOwoTRGVsZXRlUG9saWN5UmVxdWVzdBIRCgRuYW1lGAEgASgJQgPgQQISEQoEZXRhZxgCIAEoCUID4EEBIkoKF1BvbGljeU9wZXJhdGlvbk1ldGFkYXRhEi8KC2NyZWF0ZV90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcDLQBgoIUG9saWNpZXMSgwEKDExpc3RQb2xpY2llcxIiLmdvb2dsZS5pYW0udjIuTGlzdFBvbGljaWVzUmVxdWVzdBojLmdvb2dsZS5pYW0udjIuTGlzdFBvbGljaWVzUmVzcG9uc2UiKtpBBnBhcmVudILT5JMCGxIZL3YyL3twYXJlbnQ9cG9saWNpZXMvKi8qfRJtCglHZXRQb2xpY3kSHy5nb29nbGUuaWFtLnYyLkdldFBvbGljeVJlcXVlc3QaFS5nb29nbGUuaWFtLnYyLlBvbGljeSIo2kEEbmFtZYLT5JMCGxIZL3YyL3tuYW1lPXBvbGljaWVzLyovKi8qfRK6AQoMQ3JlYXRlUG9saWN5EiIuZ29vZ2xlLmlhbS52Mi5DcmVhdGVQb2xpY3lSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJnykEhCgZQb2xpY3kSF1BvbGljeU9wZXJhdGlvbk1ldGFkYXRh2kEXcGFyZW50LHBvbGljeSxwb2xpY3lfaWSC0+STAiM6BnBvbGljeSIZL3YyL3twYXJlbnQ9cG9saWNpZXMvKi8qfRKnAQoMVXBkYXRlUG9saWN5EiIuZ29vZ2xlLmlhbS52Mi5VcGRhdGVQb2xpY3lSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJUykEhCgZQb2xpY3kSF1BvbGljeU9wZXJhdGlvbk1ldGFkYXRhgtPkkwIqOgZwb2xpY3kaIC92Mi97cG9saWN5Lm5hbWU9cG9saWNpZXMvKi8qLyp9Ep8BCgxEZWxldGVQb2xpY3kSIi5nb29nbGUuaWFtLnYyLkRlbGV0ZVBvbGljeVJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIkzKQSEKBlBvbGljeRIXUG9saWN5T3BlcmF0aW9uTWV0YWRhdGHaQQRuYW1lgtPkkwIbKhkvdjIve25hbWU9cG9saWNpZXMvKi8qLyp9GkbKQRJpYW0uZ29vZ2xlYXBpcy5jb23SQS5odHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtQnkKEWNvbS5nb29nbGUuaWFtLnYyQgtQb2xpY3lQcm90b1ABWiljbG91ZC5nb29nbGUuY29tL2dvL2lhbS9hcGl2Mi9pYW1wYjtpYW1wYqoCE0dvb2dsZS5DbG91ZC5JYW0uVjLKAhNHb29nbGVcQ2xvdWRcSWFtXFYyYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_iam_v2_deny, file_google_longrunning_operations, file_google_protobuf_timestamp]);

/**
 * Data for an IAM policy.
 *
 * @generated from message google.iam.v2.Policy
 */
export type Policy = Message<"google.iam.v2.Policy"> & {
  /**
   * Immutable. The resource name of the `Policy`, which must be unique. Format:
   * `policies/{attachment_point}/denypolicies/{policy_id}`
   *
   *
   * The attachment point is identified by its URL-encoded full resource name,
   * which means that the forward-slash character, `/`, must be written as
   * `%2F`. For example,
   * `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-deny-policy`.
   *
   * For organizations and folders, use the numeric ID in the full resource
   * name. For projects, requests can use the alphanumeric or the numeric ID.
   * Responses always contain the numeric ID.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Immutable. The globally unique ID of the `Policy`. Assigned automatically when the
   * `Policy` is created.
   *
   * @generated from field: string uid = 2;
   */
  uid: string;

  /**
   * Output only. The kind of the `Policy`. Always contains the value `DenyPolicy`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;

  /**
   * A user-specified description of the `Policy`. This value can be up to 63
   * characters.
   *
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * A key-value map to store arbitrary metadata for the `Policy`. Keys
   * can be up to 63 characters. Values can be up to 255 characters.
   *
   * @generated from field: map<string, string> annotations = 5;
   */
  annotations: { [key: string]: string };

  /**
   * An opaque tag that identifies the current version of the `Policy`. IAM uses
   * this value to help manage concurrent updates, so they do not cause one
   * update to be overwritten by another.
   *
   * If this field is present in a [CreatePolicy][] request, the value is
   * ignored.
   *
   * @generated from field: string etag = 6;
   */
  etag: string;

  /**
   * Output only. The time when the `Policy` was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 7;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the `Policy` was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 8;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The time when the `Policy` was deleted. Empty if the policy is not deleted.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 9;
   */
  deleteTime?: Timestamp;

  /**
   * A list of rules that specify the behavior of the `Policy`. All of the rules
   * should be of the `kind` specified in the `Policy`.
   *
   * @generated from field: repeated google.iam.v2.PolicyRule rules = 10;
   */
  rules: PolicyRule[];

  /**
   * Immutable. Specifies that this policy is managed by an authority and can only be
   * modified by that authority. Usage is restricted.
   *
   * @generated from field: string managing_authority = 11;
   */
  managingAuthority: string;
};

/**
 * Describes the message google.iam.v2.Policy.
 * Use `create(PolicySchema)` to create a new message.
 */
export const PolicySchema: GenMessage<Policy> = /*@__PURE__*/
  messageDesc(file_google_iam_v2_policy, 0);

/**
 * A single rule in a `Policy`.
 *
 * @generated from message google.iam.v2.PolicyRule
 */
export type PolicyRule = Message<"google.iam.v2.PolicyRule"> & {
  /**
   * @generated from oneof google.iam.v2.PolicyRule.kind
   */
  kind: {
    /**
     * A rule for a deny policy.
     *
     * @generated from field: google.iam.v2.DenyRule deny_rule = 2;
     */
    value: DenyRule;
    case: "denyRule";
  } | { case: undefined; value?: undefined };

  /**
   * A user-specified description of the rule. This value can be up to 256
   * characters.
   *
   * @generated from field: string description = 1;
   */
  description: string;
};

/**
 * Describes the message google.iam.v2.PolicyRule.
 * Use `create(PolicyRuleSchema)` to create a new message.
 */
export const PolicyRuleSchema: GenMessage<PolicyRule> = /*@__PURE__*/
  messageDesc(file_google_iam_v2_policy, 1);

/**
 * Request message for `ListPolicies`.
 *
 * @generated from message google.iam.v2.ListPoliciesRequest
 */
export type ListPoliciesRequest = Message<"google.iam.v2.ListPoliciesRequest"> & {
  /**
   * Required. The resource that the policy is attached to, along with the kind of policy
   * to list. Format:
   * `policies/{attachment_point}/denypolicies`
   *
   *
   * The attachment point is identified by its URL-encoded full resource name,
   * which means that the forward-slash character, `/`, must be written as
   * `%2F`. For example,
   * `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies`.
   *
   * For organizations and folders, use the numeric ID in the full resource
   * name. For projects, you can use the alphanumeric or the numeric ID.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of policies to return. IAM ignores this value and uses
   * the value 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token received in a [ListPoliciesResponse][google.iam.v2.ListPoliciesResponse]. Provide this token to
   * retrieve the next page.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.iam.v2.ListPoliciesRequest.
 * Use `create(ListPoliciesRequestSchema)` to create a new message.
 */
export const ListPoliciesRequestSchema: GenMessage<ListPoliciesRequest> = /*@__PURE__*/
  messageDesc(file_google_iam_v2_policy, 2);

/**
 * Response message for `ListPolicies`.
 *
 * @generated from message google.iam.v2.ListPoliciesResponse
 */
export type ListPoliciesResponse = Message<"google.iam.v2.ListPoliciesResponse"> & {
  /**
   * Metadata for the policies that are attached to the resource.
   *
   * @generated from field: repeated google.iam.v2.Policy policies = 1;
   */
  policies: Policy[];

  /**
   * A page token that you can use in a [ListPoliciesRequest][google.iam.v2.ListPoliciesRequest] to retrieve the
   * next page. If this field is omitted, there are no additional pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.iam.v2.ListPoliciesResponse.
 * Use `create(ListPoliciesResponseSchema)` to create a new message.
 */
export const ListPoliciesResponseSchema: GenMessage<ListPoliciesResponse> = /*@__PURE__*/
  messageDesc(file_google_iam_v2_policy, 3);

/**
 * Request message for `GetPolicy`.
 *
 * @generated from message google.iam.v2.GetPolicyRequest
 */
export type GetPolicyRequest = Message<"google.iam.v2.GetPolicyRequest"> & {
  /**
   * Required. The resource name of the policy to retrieve. Format:
   * `policies/{attachment_point}/denypolicies/{policy_id}`
   *
   *
   * Use the URL-encoded full resource name, which means that the forward-slash
   * character, `/`, must be written as `%2F`. For example,
   * `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-policy`.
   *
   * For organizations and folders, use the numeric ID in the full resource
   * name. For projects, you can use the alphanumeric or the numeric ID.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.iam.v2.GetPolicyRequest.
 * Use `create(GetPolicyRequestSchema)` to create a new message.
 */
export const GetPolicyRequestSchema: GenMessage<GetPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_iam_v2_policy, 4);

/**
 * Request message for `CreatePolicy`.
 *
 * @generated from message google.iam.v2.CreatePolicyRequest
 */
export type CreatePolicyRequest = Message<"google.iam.v2.CreatePolicyRequest"> & {
  /**
   * Required. The resource that the policy is attached to, along with the kind of policy
   * to create. Format: `policies/{attachment_point}/denypolicies`
   *
   *
   * The attachment point is identified by its URL-encoded full resource name,
   * which means that the forward-slash character, `/`, must be written as
   * `%2F`. For example,
   * `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies`.
   *
   * For organizations and folders, use the numeric ID in the full resource
   * name. For projects, you can use the alphanumeric or the numeric ID.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The policy to create.
   *
   * @generated from field: google.iam.v2.Policy policy = 2;
   */
  policy?: Policy;

  /**
   * The ID to use for this policy, which will become the final component of
   * the policy's resource name. The ID must contain 3 to 63 characters. It can
   * contain lowercase letters and numbers, as well as dashes (`-`) and periods
   * (`.`). The first character must be a lowercase letter.
   *
   * @generated from field: string policy_id = 3;
   */
  policyId: string;
};

/**
 * Describes the message google.iam.v2.CreatePolicyRequest.
 * Use `create(CreatePolicyRequestSchema)` to create a new message.
 */
export const CreatePolicyRequestSchema: GenMessage<CreatePolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_iam_v2_policy, 5);

/**
 * Request message for `UpdatePolicy`.
 *
 * @generated from message google.iam.v2.UpdatePolicyRequest
 */
export type UpdatePolicyRequest = Message<"google.iam.v2.UpdatePolicyRequest"> & {
  /**
   * Required. The policy to update.
   *
   * To prevent conflicting updates, the `etag` value must match the value that
   * is stored in IAM. If the `etag` values do not match, the request fails with
   * a `409` error code and `ABORTED` status.
   *
   * @generated from field: google.iam.v2.Policy policy = 1;
   */
  policy?: Policy;
};

/**
 * Describes the message google.iam.v2.UpdatePolicyRequest.
 * Use `create(UpdatePolicyRequestSchema)` to create a new message.
 */
export const UpdatePolicyRequestSchema: GenMessage<UpdatePolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_iam_v2_policy, 6);

/**
 * Request message for `DeletePolicy`.
 *
 * @generated from message google.iam.v2.DeletePolicyRequest
 */
export type DeletePolicyRequest = Message<"google.iam.v2.DeletePolicyRequest"> & {
  /**
   * Required. The resource name of the policy to delete. Format:
   * `policies/{attachment_point}/denypolicies/{policy_id}`
   *
   *
   * Use the URL-encoded full resource name, which means that the forward-slash
   * character, `/`, must be written as `%2F`. For example,
   * `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-policy`.
   *
   * For organizations and folders, use the numeric ID in the full resource
   * name. For projects, you can use the alphanumeric or the numeric ID.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The expected `etag` of the policy to delete. If the value does not match
   * the value that is stored in IAM, the request fails with a `409` error code
   * and `ABORTED` status.
   *
   * If you omit this field, the policy is deleted regardless of its current
   * `etag`.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;
};

/**
 * Describes the message google.iam.v2.DeletePolicyRequest.
 * Use `create(DeletePolicyRequestSchema)` to create a new message.
 */
export const DeletePolicyRequestSchema: GenMessage<DeletePolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_iam_v2_policy, 7);

/**
 * Metadata for long-running `Policy` operations.
 *
 * @generated from message google.iam.v2.PolicyOperationMetadata
 */
export type PolicyOperationMetadata = Message<"google.iam.v2.PolicyOperationMetadata"> & {
  /**
   * Timestamp when the `google.longrunning.Operation` was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message google.iam.v2.PolicyOperationMetadata.
 * Use `create(PolicyOperationMetadataSchema)` to create a new message.
 */
export const PolicyOperationMetadataSchema: GenMessage<PolicyOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_iam_v2_policy, 8);

/**
 * An interface for managing Identity and Access Management (IAM) policies.
 *
 * @generated from service google.iam.v2.Policies
 */
export const Policies: GenService<{
  /**
   * Retrieves the policies of the specified kind that are attached to a
   * resource.
   *
   * The response lists only policy metadata. In particular, policy rules are
   * omitted.
   *
   * @generated from rpc google.iam.v2.Policies.ListPolicies
   */
  listPolicies: {
    methodKind: "unary";
    input: typeof ListPoliciesRequestSchema;
    output: typeof ListPoliciesResponseSchema;
  },
  /**
   * Gets a policy.
   *
   * @generated from rpc google.iam.v2.Policies.GetPolicy
   */
  getPolicy: {
    methodKind: "unary";
    input: typeof GetPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Creates a policy.
   *
   * @generated from rpc google.iam.v2.Policies.CreatePolicy
   */
  createPolicy: {
    methodKind: "unary";
    input: typeof CreatePolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the specified policy.
   *
   * You can update only the rules and the display name for the policy.
   *
   * To update a policy, you should use a read-modify-write loop:
   *
   * 1. Use [GetPolicy][google.iam.v2.Policies.GetPolicy] to read the current version of the policy.
   * 2. Modify the policy as needed.
   * 3. Use `UpdatePolicy` to write the updated policy.
   *
   * This pattern helps prevent conflicts between concurrent updates.
   *
   * @generated from rpc google.iam.v2.Policies.UpdatePolicy
   */
  updatePolicy: {
    methodKind: "unary";
    input: typeof UpdatePolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a policy. This action is permanent.
   *
   * @generated from rpc google.iam.v2.Policies.DeletePolicy
   */
  deletePolicy: {
    methodKind: "unary";
    input: typeof DeletePolicyRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_iam_v2_policy, 0);

