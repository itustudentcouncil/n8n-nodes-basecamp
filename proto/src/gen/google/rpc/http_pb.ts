// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/rpc/http.proto (package google.rpc, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/rpc/http.proto.
 */
export const file_google_rpc_http: GenFile = /*@__PURE__*/
  fileDesc("ChVnb29nbGUvcnBjL2h0dHAucHJvdG8SCmdvb2dsZS5ycGMiYQoLSHR0cFJlcXVlc3QSDgoGbWV0aG9kGAEgASgJEgsKA3VyaRgCIAEoCRInCgdoZWFkZXJzGAMgAygLMhYuZ29vZ2xlLnJwYy5IdHRwSGVhZGVyEgwKBGJvZHkYBCABKAwiZQoMSHR0cFJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoBRIOCgZyZWFzb24YAiABKAkSJwoHaGVhZGVycxgDIAMoCzIWLmdvb2dsZS5ycGMuSHR0cEhlYWRlchIMCgRib2R5GAQgASgMIigKCkh0dHBIZWFkZXISCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJQlgKDmNvbS5nb29nbGUucnBjQglIdHRwUHJvdG9QAVozZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9ycGMvaHR0cDtodHRwogIDUlBDYgZwcm90bzM");

/**
 * Represents an HTTP request.
 *
 * @generated from message google.rpc.HttpRequest
 */
export type HttpRequest = Message<"google.rpc.HttpRequest"> & {
  /**
   * The HTTP request method.
   *
   * @generated from field: string method = 1;
   */
  method: string;

  /**
   * The HTTP request URI.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * The HTTP request headers. The ordering of the headers is significant.
   * Multiple headers with the same key may present for the request.
   *
   * @generated from field: repeated google.rpc.HttpHeader headers = 3;
   */
  headers: HttpHeader[];

  /**
   * The HTTP request body. If the body is not expected, it should be empty.
   *
   * @generated from field: bytes body = 4;
   */
  body: Uint8Array;
};

/**
 * Describes the message google.rpc.HttpRequest.
 * Use `create(HttpRequestSchema)` to create a new message.
 */
export const HttpRequestSchema: GenMessage<HttpRequest> = /*@__PURE__*/
  messageDesc(file_google_rpc_http, 0);

/**
 * Represents an HTTP response.
 *
 * @generated from message google.rpc.HttpResponse
 */
export type HttpResponse = Message<"google.rpc.HttpResponse"> & {
  /**
   * The HTTP status code, such as 200 or 404.
   *
   * @generated from field: int32 status = 1;
   */
  status: number;

  /**
   * The HTTP reason phrase, such as "OK" or "Not Found".
   *
   * @generated from field: string reason = 2;
   */
  reason: string;

  /**
   * The HTTP response headers. The ordering of the headers is significant.
   * Multiple headers with the same key may present for the response.
   *
   * @generated from field: repeated google.rpc.HttpHeader headers = 3;
   */
  headers: HttpHeader[];

  /**
   * The HTTP response body. If the body is not expected, it should be empty.
   *
   * @generated from field: bytes body = 4;
   */
  body: Uint8Array;
};

/**
 * Describes the message google.rpc.HttpResponse.
 * Use `create(HttpResponseSchema)` to create a new message.
 */
export const HttpResponseSchema: GenMessage<HttpResponse> = /*@__PURE__*/
  messageDesc(file_google_rpc_http, 1);

/**
 * Represents an HTTP header.
 *
 * @generated from message google.rpc.HttpHeader
 */
export type HttpHeader = Message<"google.rpc.HttpHeader"> & {
  /**
   * The HTTP header key. It is case insensitive.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The HTTP header value.
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message google.rpc.HttpHeader.
 * Use `create(HttpHeaderSchema)` to create a new message.
 */
export const HttpHeaderSchema: GenMessage<HttpHeader> = /*@__PURE__*/
  messageDesc(file_google_rpc_http, 2);

