// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/logging/v2/logging.proto (package google.logging.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import type { MonitoredResource, MonitoredResourceDescriptor } from "../../api/monitored_resource_pb";
import { file_google_api_monitored_resource } from "../../api/monitored_resource_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { LogEntry } from "./log_entry_pb";
import { file_google_logging_v2_log_entry } from "./log_entry_pb";
import type { Duration, EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../rpc/status_pb";
import { file_google_rpc_status } from "../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/logging/v2/logging.proto.
 */
export const file_google_logging_v2_logging: GenFile = /*@__PURE__*/
  fileDesc("Ch9nb29nbGUvbG9nZ2luZy92Mi9sb2dnaW5nLnByb3RvEhFnb29nbGUubG9nZ2luZy52MiJIChBEZWxldGVMb2dSZXF1ZXN0EjQKCGxvZ19uYW1lGAEgASgJQiLgQQL6QRwKGmxvZ2dpbmcuZ29vZ2xlYXBpcy5jb20vTG9nIuYCChZXcml0ZUxvZ0VudHJpZXNSZXF1ZXN0EjQKCGxvZ19uYW1lGAEgASgJQiLgQQH6QRwKGmxvZ2dpbmcuZ29vZ2xlYXBpcy5jb20vTG9nEjQKCHJlc291cmNlGAIgASgLMh0uZ29vZ2xlLmFwaS5Nb25pdG9yZWRSZXNvdXJjZUID4EEBEkoKBmxhYmVscxgDIAMoCzI1Lmdvb2dsZS5sb2dnaW5nLnYyLldyaXRlTG9nRW50cmllc1JlcXVlc3QuTGFiZWxzRW50cnlCA+BBARIxCgdlbnRyaWVzGAQgAygLMhsuZ29vZ2xlLmxvZ2dpbmcudjIuTG9nRW50cnlCA+BBAhIcCg9wYXJ0aWFsX3N1Y2Nlc3MYBSABKAhCA+BBARIUCgdkcnlfcnVuGAYgASgIQgPgQQEaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIZChdXcml0ZUxvZ0VudHJpZXNSZXNwb25zZSLIAQocV3JpdGVMb2dFbnRyaWVzUGFydGlhbEVycm9ycxJdChBsb2dfZW50cnlfZXJyb3JzGAEgAygLMkMuZ29vZ2xlLmxvZ2dpbmcudjIuV3JpdGVMb2dFbnRyaWVzUGFydGlhbEVycm9ycy5Mb2dFbnRyeUVycm9yc0VudHJ5GkkKE0xvZ0VudHJ5RXJyb3JzRW50cnkSCwoDa2V5GAEgASgFEiEKBXZhbHVlGAIgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXM6AjgBIrABChVMaXN0TG9nRW50cmllc1JlcXVlc3QSOgoOcmVzb3VyY2VfbmFtZXMYCCADKAlCIuBBAvpBHBIabG9nZ2luZy5nb29nbGVhcGlzLmNvbS9Mb2cSEwoGZmlsdGVyGAIgASgJQgPgQQESFQoIb3JkZXJfYnkYAyABKAlCA+BBARIWCglwYWdlX3NpemUYBCABKAVCA+BBARIXCgpwYWdlX3Rva2VuGAUgASgJQgPgQQEiXwoWTGlzdExvZ0VudHJpZXNSZXNwb25zZRIsCgdlbnRyaWVzGAEgAygLMhsuZ29vZ2xlLmxvZ2dpbmcudjIuTG9nRW50cnkSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIloKJ0xpc3RNb25pdG9yZWRSZXNvdXJjZURlc2NyaXB0b3JzUmVxdWVzdBIWCglwYWdlX3NpemUYASABKAVCA+BBARIXCgpwYWdlX3Rva2VuGAIgASgJQgPgQQEiigEKKExpc3RNb25pdG9yZWRSZXNvdXJjZURlc2NyaXB0b3JzUmVzcG9uc2USRQoUcmVzb3VyY2VfZGVzY3JpcHRvcnMYASADKAsyJy5nb29nbGUuYXBpLk1vbml0b3JlZFJlc291cmNlRGVzY3JpcHRvchIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkisgEKD0xpc3RMb2dzUmVxdWVzdBIyCgZwYXJlbnQYASABKAlCIuBBAvpBHBIabG9nZ2luZy5nb29nbGVhcGlzLmNvbS9Mb2cSOgoOcmVzb3VyY2VfbmFtZXMYCCADKAlCIuBBAfpBHBIabG9nZ2luZy5nb29nbGVhcGlzLmNvbS9Mb2cSFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBIj4KEExpc3RMb2dzUmVzcG9uc2USEQoJbG9nX25hbWVzGAMgAygJEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSKAAQoVVGFpbExvZ0VudHJpZXNSZXF1ZXN0EhsKDnJlc291cmNlX25hbWVzGAEgAygJQgPgQQISEwoGZmlsdGVyGAIgASgJQgPgQQESNQoNYnVmZmVyX3dpbmRvdxgDIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkID4EEBIt8CChZUYWlsTG9nRW50cmllc1Jlc3BvbnNlEiwKB2VudHJpZXMYASADKAsyGy5nb29nbGUubG9nZ2luZy52Mi5Mb2dFbnRyeRJTChBzdXBwcmVzc2lvbl9pbmZvGAIgAygLMjkuZ29vZ2xlLmxvZ2dpbmcudjIuVGFpbExvZ0VudHJpZXNSZXNwb25zZS5TdXBwcmVzc2lvbkluZm8awQEKD1N1cHByZXNzaW9uSW5mbxJQCgZyZWFzb24YASABKA4yQC5nb29nbGUubG9nZ2luZy52Mi5UYWlsTG9nRW50cmllc1Jlc3BvbnNlLlN1cHByZXNzaW9uSW5mby5SZWFzb24SGAoQc3VwcHJlc3NlZF9jb3VudBgCIAEoBSJCCgZSZWFzb24SFgoSUkVBU09OX1VOU1BFQ0lGSUVEEAASDgoKUkFURV9MSU1JVBABEhAKDE5PVF9DT05TVU1FRBACMukNChBMb2dnaW5nU2VydmljZVYyEpMCCglEZWxldGVMb2cSIy5nb29nbGUubG9nZ2luZy52Mi5EZWxldGVMb2dSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IsgB2kEIbG9nX25hbWWC0+STArYBWhsqGS92Mi97bG9nX25hbWU9Ki8qL2xvZ3MvKn1aJyolL3YyL3tsb2dfbmFtZT1vcmdhbml6YXRpb25zLyovbG9ncy8qfVohKh8vdjIve2xvZ19uYW1lPWZvbGRlcnMvKi9sb2dzLyp9WikqJy92Mi97bG9nX25hbWU9YmlsbGluZ0FjY291bnRzLyovbG9ncy8qfSogL3YyL3tsb2dfbmFtZT1wcm9qZWN0cy8qL2xvZ3MvKn0SqQEKD1dyaXRlTG9nRW50cmllcxIpLmdvb2dsZS5sb2dnaW5nLnYyLldyaXRlTG9nRW50cmllc1JlcXVlc3QaKi5nb29nbGUubG9nZ2luZy52Mi5Xcml0ZUxvZ0VudHJpZXNSZXNwb25zZSI/2kEgbG9nX25hbWUscmVzb3VyY2UsbGFiZWxzLGVudHJpZXOC0+STAhY6ASoiES92Mi9lbnRyaWVzOndyaXRlEqMBCg5MaXN0TG9nRW50cmllcxIoLmdvb2dsZS5sb2dnaW5nLnYyLkxpc3RMb2dFbnRyaWVzUmVxdWVzdBopLmdvb2dsZS5sb2dnaW5nLnYyLkxpc3RMb2dFbnRyaWVzUmVzcG9uc2UiPNpBHnJlc291cmNlX25hbWVzLGZpbHRlcixvcmRlcl9ieYLT5JMCFToBKiIQL3YyL2VudHJpZXM6bGlzdBLFAQogTGlzdE1vbml0b3JlZFJlc291cmNlRGVzY3JpcHRvcnMSOi5nb29nbGUubG9nZ2luZy52Mi5MaXN0TW9uaXRvcmVkUmVzb3VyY2VEZXNjcmlwdG9yc1JlcXVlc3QaOy5nb29nbGUubG9nZ2luZy52Mi5MaXN0TW9uaXRvcmVkUmVzb3VyY2VEZXNjcmlwdG9yc1Jlc3BvbnNlIiiC0+STAiISIC92Mi9tb25pdG9yZWRSZXNvdXJjZURlc2NyaXB0b3JzEosECghMaXN0TG9ncxIiLmdvb2dsZS5sb2dnaW5nLnYyLkxpc3RMb2dzUmVxdWVzdBojLmdvb2dsZS5sb2dnaW5nLnYyLkxpc3RMb2dzUmVzcG9uc2UitQPaQQZwYXJlbnSC0+STAqUDWh4SHC92Mi97cGFyZW50PXByb2plY3RzLyp9L2xvZ3NaIxIhL3YyL3twYXJlbnQ9b3JnYW5pemF0aW9ucy8qfS9sb2dzWh0SGy92Mi97cGFyZW50PWZvbGRlcnMvKn0vbG9nc1olEiMvdjIve3BhcmVudD1iaWxsaW5nQWNjb3VudHMvKn0vbG9nc1o8EjovdjIve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2J1Y2tldHMvKi92aWV3cy8qfS9sb2dzWkESPy92Mi97cGFyZW50PW9yZ2FuaXphdGlvbnMvKi9sb2NhdGlvbnMvKi9idWNrZXRzLyovdmlld3MvKn0vbG9nc1o7EjkvdjIve3BhcmVudD1mb2xkZXJzLyovbG9jYXRpb25zLyovYnVja2V0cy8qL3ZpZXdzLyp9L2xvZ3NaQxJBL3YyL3twYXJlbnQ9YmlsbGluZ0FjY291bnRzLyovbG9jYXRpb25zLyovYnVja2V0cy8qL3ZpZXdzLyp9L2xvZ3MSFS92Mi97cGFyZW50PSovKn0vbG9ncxKGAQoOVGFpbExvZ0VudHJpZXMSKC5nb29nbGUubG9nZ2luZy52Mi5UYWlsTG9nRW50cmllc1JlcXVlc3QaKS5nb29nbGUubG9nZ2luZy52Mi5UYWlsTG9nRW50cmllc1Jlc3BvbnNlIhuC0+STAhU6ASoiEC92Mi9lbnRyaWVzOnRhaWwoATABGo0CykEWbG9nZ2luZy5nb29nbGVhcGlzLmNvbdJB8AFodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0ucmVhZC1vbmx5LGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvbG9nZ2luZy5hZG1pbixodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2xvZ2dpbmcucmVhZCxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2xvZ2dpbmcud3JpdGVCsgEKFWNvbS5nb29nbGUubG9nZ2luZy52MkIMTG9nZ2luZ1Byb3RvUAFaNWNsb3VkLmdvb2dsZS5jb20vZ28vbG9nZ2luZy9hcGl2Mi9sb2dnaW5ncGI7bG9nZ2luZ3Bi+AEBqgIXR29vZ2xlLkNsb3VkLkxvZ2dpbmcuVjLKAhdHb29nbGVcQ2xvdWRcTG9nZ2luZ1xWMuoCGkdvb2dsZTo6Q2xvdWQ6OkxvZ2dpbmc6OlYyYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_monitored_resource, file_google_api_resource, file_google_logging_v2_log_entry, file_google_protobuf_duration, file_google_protobuf_empty, file_google_rpc_status]);

/**
 * The parameters to DeleteLog.
 *
 * @generated from message google.logging.v2.DeleteLogRequest
 */
export type DeleteLogRequest = Message<"google.logging.v2.DeleteLogRequest"> & {
  /**
   * Required. The resource name of the log to delete:
   *
   * * `projects/[PROJECT_ID]/logs/[LOG_ID]`
   * * `organizations/[ORGANIZATION_ID]/logs/[LOG_ID]`
   * * `billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]`
   * * `folders/[FOLDER_ID]/logs/[LOG_ID]`
   *
   * `[LOG_ID]` must be URL-encoded. For example,
   * `"projects/my-project-id/logs/syslog"`,
   * `"organizations/123/logs/cloudaudit.googleapis.com%2Factivity"`.
   *
   * For more information about log names, see
   * [LogEntry][google.logging.v2.LogEntry].
   *
   * @generated from field: string log_name = 1;
   */
  logName: string;
};

/**
 * Describes the message google.logging.v2.DeleteLogRequest.
 * Use `create(DeleteLogRequestSchema)` to create a new message.
 */
export const DeleteLogRequestSchema: GenMessage<DeleteLogRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 0);

/**
 * The parameters to WriteLogEntries.
 *
 * @generated from message google.logging.v2.WriteLogEntriesRequest
 */
export type WriteLogEntriesRequest = Message<"google.logging.v2.WriteLogEntriesRequest"> & {
  /**
   * Optional. A default log resource name that is assigned to all log entries
   * in `entries` that do not specify a value for `log_name`:
   *
   * * `projects/[PROJECT_ID]/logs/[LOG_ID]`
   * * `organizations/[ORGANIZATION_ID]/logs/[LOG_ID]`
   * * `billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]`
   * * `folders/[FOLDER_ID]/logs/[LOG_ID]`
   *
   * `[LOG_ID]` must be URL-encoded. For example:
   *
   *     "projects/my-project-id/logs/syslog"
   *     "organizations/123/logs/cloudaudit.googleapis.com%2Factivity"
   *
   * The permission `logging.logEntries.create` is needed on each project,
   * organization, billing account, or folder that is receiving new log
   * entries, whether the resource is specified in `logName` or in an
   * individual log entry.
   *
   * @generated from field: string log_name = 1;
   */
  logName: string;

  /**
   * Optional. A default monitored resource object that is assigned to all log
   * entries in `entries` that do not specify a value for `resource`. Example:
   *
   *     { "type": "gce_instance",
   *       "labels": {
   *         "zone": "us-central1-a", "instance_id": "00000000000000000000" }}
   *
   * See [LogEntry][google.logging.v2.LogEntry].
   *
   * @generated from field: google.api.MonitoredResource resource = 2;
   */
  resource?: MonitoredResource;

  /**
   * Optional. Default labels that are added to the `labels` field of all log
   * entries in `entries`. If a log entry already has a label with the same key
   * as a label in this parameter, then the log entry's label is not changed.
   * See [LogEntry][google.logging.v2.LogEntry].
   *
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };

  /**
   * Required. The log entries to send to Logging. The order of log
   * entries in this list does not matter. Values supplied in this method's
   * `log_name`, `resource`, and `labels` fields are copied into those log
   * entries in this list that do not include values for their corresponding
   * fields. For more information, see the
   * [LogEntry][google.logging.v2.LogEntry] type.
   *
   * If the `timestamp` or `insert_id` fields are missing in log entries, then
   * this method supplies the current time or a unique identifier, respectively.
   * The supplied values are chosen so that, among the log entries that did not
   * supply their own values, the entries earlier in the list will sort before
   * the entries later in the list. See the `entries.list` method.
   *
   * Log entries with timestamps that are more than the
   * [logs retention period](https://cloud.google.com/logging/quotas) in
   * the past or more than 24 hours in the future will not be available when
   * calling `entries.list`. However, those log entries can still be [exported
   * with
   * LogSinks](https://cloud.google.com/logging/docs/api/tasks/exporting-logs).
   *
   * To improve throughput and to avoid exceeding the
   * [quota limit](https://cloud.google.com/logging/quotas) for calls to
   * `entries.write`, you should try to include several log entries in this
   * list, rather than calling this method for each individual log entry.
   *
   * @generated from field: repeated google.logging.v2.LogEntry entries = 4;
   */
  entries: LogEntry[];

  /**
   * Optional. Whether a batch's valid entries should be written even if some
   * other entry failed due to a permanent error such as INVALID_ARGUMENT or
   * PERMISSION_DENIED. If any entry failed, then the response status is the
   * response status of one of the failed entries. The response will include
   * error details in `WriteLogEntriesPartialErrors.log_entry_errors` keyed by
   * the entries' zero-based index in the `entries`. Failed requests for which
   * no entries are written will not include per-entry errors.
   *
   * @generated from field: bool partial_success = 5;
   */
  partialSuccess: boolean;

  /**
   * Optional. If true, the request should expect normal response, but the
   * entries won't be persisted nor exported. Useful for checking whether the
   * logging API endpoints are working properly before sending valuable data.
   *
   * @generated from field: bool dry_run = 6;
   */
  dryRun: boolean;
};

/**
 * Describes the message google.logging.v2.WriteLogEntriesRequest.
 * Use `create(WriteLogEntriesRequestSchema)` to create a new message.
 */
export const WriteLogEntriesRequestSchema: GenMessage<WriteLogEntriesRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 1);

/**
 * Result returned from WriteLogEntries.
 *
 * @generated from message google.logging.v2.WriteLogEntriesResponse
 */
export type WriteLogEntriesResponse = Message<"google.logging.v2.WriteLogEntriesResponse"> & {
};

/**
 * Describes the message google.logging.v2.WriteLogEntriesResponse.
 * Use `create(WriteLogEntriesResponseSchema)` to create a new message.
 */
export const WriteLogEntriesResponseSchema: GenMessage<WriteLogEntriesResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 2);

/**
 * Error details for WriteLogEntries with partial success.
 *
 * @generated from message google.logging.v2.WriteLogEntriesPartialErrors
 */
export type WriteLogEntriesPartialErrors = Message<"google.logging.v2.WriteLogEntriesPartialErrors"> & {
  /**
   * When `WriteLogEntriesRequest.partial_success` is true, records the error
   * status for entries that were not written due to a permanent error, keyed
   * by the entry's zero-based index in `WriteLogEntriesRequest.entries`.
   *
   * Failed requests for which no entries are written will not include
   * per-entry errors.
   *
   * @generated from field: map<int32, google.rpc.Status> log_entry_errors = 1;
   */
  logEntryErrors: { [key: number]: Status };
};

/**
 * Describes the message google.logging.v2.WriteLogEntriesPartialErrors.
 * Use `create(WriteLogEntriesPartialErrorsSchema)` to create a new message.
 */
export const WriteLogEntriesPartialErrorsSchema: GenMessage<WriteLogEntriesPartialErrors> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 3);

/**
 * The parameters to `ListLogEntries`.
 *
 * @generated from message google.logging.v2.ListLogEntriesRequest
 */
export type ListLogEntriesRequest = Message<"google.logging.v2.ListLogEntriesRequest"> & {
  /**
   * Required. Names of one or more parent resources from which to
   * retrieve log entries:
   *
   * *  `projects/[PROJECT_ID]`
   * *  `organizations/[ORGANIZATION_ID]`
   * *  `billingAccounts/[BILLING_ACCOUNT_ID]`
   * *  `folders/[FOLDER_ID]`
   *
   * May alternatively be one or more views:
   *
   *  * `projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *  * `organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *  * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *  * `folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *
   * Projects listed in the `project_ids` field are added to this list.
   * A maximum of 100 resources may be specified in a single request.
   *
   * @generated from field: repeated string resource_names = 8;
   */
  resourceNames: string[];

  /**
   * Optional. Only log entries that match the filter are returned.  An empty
   * filter matches all log entries in the resources listed in `resource_names`.
   * Referencing a parent resource that is not listed in `resource_names` will
   * cause the filter to return no results. The maximum length of a filter is
   * 20,000 characters.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. How the results should be sorted.  Presently, the only permitted
   * values are `"timestamp asc"` (default) and `"timestamp desc"`. The first
   * option returns entries in order of increasing values of
   * `LogEntry.timestamp` (oldest first), and the second option returns entries
   * in order of decreasing timestamps (newest first).  Entries with equal
   * timestamps are returned in order of their `insert_id` values.
   *
   * @generated from field: string order_by = 3;
   */
  orderBy: string;

  /**
   * Optional. The maximum number of results to return from this request.
   * Default is 50. If the value is negative or exceeds 1000, the request is
   * rejected. The presence of `next_page_token` in the response indicates that
   * more results might be available.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * Optional. If present, then retrieve the next batch of results from the
   * preceding call to this method.  `page_token` must be the value of
   * `next_page_token` from the previous response.  The values of other method
   * parameters should be identical to those in the previous call.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;
};

/**
 * Describes the message google.logging.v2.ListLogEntriesRequest.
 * Use `create(ListLogEntriesRequestSchema)` to create a new message.
 */
export const ListLogEntriesRequestSchema: GenMessage<ListLogEntriesRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 4);

/**
 * Result returned from `ListLogEntries`.
 *
 * @generated from message google.logging.v2.ListLogEntriesResponse
 */
export type ListLogEntriesResponse = Message<"google.logging.v2.ListLogEntriesResponse"> & {
  /**
   * A list of log entries.  If `entries` is empty, `nextPageToken` may still be
   * returned, indicating that more entries may exist.  See `nextPageToken` for
   * more information.
   *
   * @generated from field: repeated google.logging.v2.LogEntry entries = 1;
   */
  entries: LogEntry[];

  /**
   * If there might be more results than those appearing in this response, then
   * `nextPageToken` is included.  To get the next set of results, call this
   * method again using the value of `nextPageToken` as `pageToken`.
   *
   * If a value for `next_page_token` appears and the `entries` field is empty,
   * it means that the search found no log entries so far but it did not have
   * time to search all the possible log entries.  Retry the method with this
   * value for `page_token` to continue the search.  Alternatively, consider
   * speeding up the search by changing your filter to specify a single log name
   * or resource type, or to narrow the time range of the search.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.logging.v2.ListLogEntriesResponse.
 * Use `create(ListLogEntriesResponseSchema)` to create a new message.
 */
export const ListLogEntriesResponseSchema: GenMessage<ListLogEntriesResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 5);

/**
 * The parameters to ListMonitoredResourceDescriptors
 *
 * @generated from message google.logging.v2.ListMonitoredResourceDescriptorsRequest
 */
export type ListMonitoredResourceDescriptorsRequest = Message<"google.logging.v2.ListMonitoredResourceDescriptorsRequest"> & {
  /**
   * Optional. The maximum number of results to return from this request.
   * Non-positive values are ignored.  The presence of `nextPageToken` in the
   * response indicates that more results might be available.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Optional. If present, then retrieve the next batch of results from the
   * preceding call to this method.  `pageToken` must be the value of
   * `nextPageToken` from the previous response.  The values of other method
   * parameters should be identical to those in the previous call.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message google.logging.v2.ListMonitoredResourceDescriptorsRequest.
 * Use `create(ListMonitoredResourceDescriptorsRequestSchema)` to create a new message.
 */
export const ListMonitoredResourceDescriptorsRequestSchema: GenMessage<ListMonitoredResourceDescriptorsRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 6);

/**
 * Result returned from ListMonitoredResourceDescriptors.
 *
 * @generated from message google.logging.v2.ListMonitoredResourceDescriptorsResponse
 */
export type ListMonitoredResourceDescriptorsResponse = Message<"google.logging.v2.ListMonitoredResourceDescriptorsResponse"> & {
  /**
   * A list of resource descriptors.
   *
   * @generated from field: repeated google.api.MonitoredResourceDescriptor resource_descriptors = 1;
   */
  resourceDescriptors: MonitoredResourceDescriptor[];

  /**
   * If there might be more results than those appearing in this response, then
   * `nextPageToken` is included.  To get the next set of results, call this
   * method again using the value of `nextPageToken` as `pageToken`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.logging.v2.ListMonitoredResourceDescriptorsResponse.
 * Use `create(ListMonitoredResourceDescriptorsResponseSchema)` to create a new message.
 */
export const ListMonitoredResourceDescriptorsResponseSchema: GenMessage<ListMonitoredResourceDescriptorsResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 7);

/**
 * The parameters to ListLogs.
 *
 * @generated from message google.logging.v2.ListLogsRequest
 */
export type ListLogsRequest = Message<"google.logging.v2.ListLogsRequest"> & {
  /**
   * Required. The resource name to list logs for:
   *
   * *  `projects/[PROJECT_ID]`
   * *  `organizations/[ORGANIZATION_ID]`
   * *  `billingAccounts/[BILLING_ACCOUNT_ID]`
   * *  `folders/[FOLDER_ID]`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. List of resource names to list logs for:
   *
   *  * `projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *  * `organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *  * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *  * `folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *
   * To support legacy queries, it could also be:
   *
   * *  `projects/[PROJECT_ID]`
   * *  `organizations/[ORGANIZATION_ID]`
   * *  `billingAccounts/[BILLING_ACCOUNT_ID]`
   * *  `folders/[FOLDER_ID]`
   *
   * The resource name in the `parent` field is added to this list.
   *
   * @generated from field: repeated string resource_names = 8;
   */
  resourceNames: string[];

  /**
   * Optional. The maximum number of results to return from this request.
   * Non-positive values are ignored.  The presence of `nextPageToken` in the
   * response indicates that more results might be available.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. If present, then retrieve the next batch of results from the
   * preceding call to this method.  `pageToken` must be the value of
   * `nextPageToken` from the previous response.  The values of other method
   * parameters should be identical to those in the previous call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.logging.v2.ListLogsRequest.
 * Use `create(ListLogsRequestSchema)` to create a new message.
 */
export const ListLogsRequestSchema: GenMessage<ListLogsRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 8);

/**
 * Result returned from ListLogs.
 *
 * @generated from message google.logging.v2.ListLogsResponse
 */
export type ListLogsResponse = Message<"google.logging.v2.ListLogsResponse"> & {
  /**
   * A list of log names. For example,
   * `"projects/my-project/logs/syslog"` or
   * `"organizations/123/logs/cloudresourcemanager.googleapis.com%2Factivity"`.
   *
   * @generated from field: repeated string log_names = 3;
   */
  logNames: string[];

  /**
   * If there might be more results than those appearing in this response, then
   * `nextPageToken` is included.  To get the next set of results, call this
   * method again using the value of `nextPageToken` as `pageToken`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.logging.v2.ListLogsResponse.
 * Use `create(ListLogsResponseSchema)` to create a new message.
 */
export const ListLogsResponseSchema: GenMessage<ListLogsResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 9);

/**
 * The parameters to `TailLogEntries`.
 *
 * @generated from message google.logging.v2.TailLogEntriesRequest
 */
export type TailLogEntriesRequest = Message<"google.logging.v2.TailLogEntriesRequest"> & {
  /**
   * Required. Name of a parent resource from which to retrieve log entries:
   *
   * *  `projects/[PROJECT_ID]`
   * *  `organizations/[ORGANIZATION_ID]`
   * *  `billingAccounts/[BILLING_ACCOUNT_ID]`
   * *  `folders/[FOLDER_ID]`
   *
   * May alternatively be one or more views:
   *
   *  * `projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *  * `organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *  * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *  * `folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]`
   *
   * @generated from field: repeated string resource_names = 1;
   */
  resourceNames: string[];

  /**
   * Optional. Only log entries that match the filter are returned.  An empty
   * filter matches all log entries in the resources listed in `resource_names`.
   * Referencing a parent resource that is not listed in `resource_names` will
   * cause the filter to return no results. The maximum length of a filter is
   * 20,000 characters.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. The amount of time to buffer log entries at the server before
   * being returned to prevent out of order results due to late arriving log
   * entries. Valid values are between 0-60000 milliseconds. Defaults to 2000
   * milliseconds.
   *
   * @generated from field: google.protobuf.Duration buffer_window = 3;
   */
  bufferWindow?: Duration;
};

/**
 * Describes the message google.logging.v2.TailLogEntriesRequest.
 * Use `create(TailLogEntriesRequestSchema)` to create a new message.
 */
export const TailLogEntriesRequestSchema: GenMessage<TailLogEntriesRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 10);

/**
 * Result returned from `TailLogEntries`.
 *
 * @generated from message google.logging.v2.TailLogEntriesResponse
 */
export type TailLogEntriesResponse = Message<"google.logging.v2.TailLogEntriesResponse"> & {
  /**
   * A list of log entries. Each response in the stream will order entries with
   * increasing values of `LogEntry.timestamp`. Ordering is not guaranteed
   * between separate responses.
   *
   * @generated from field: repeated google.logging.v2.LogEntry entries = 1;
   */
  entries: LogEntry[];

  /**
   * If entries that otherwise would have been included in the session were not
   * sent back to the client, counts of relevant entries omitted from the
   * session with the reason that they were not included. There will be at most
   * one of each reason per response. The counts represent the number of
   * suppressed entries since the last streamed response.
   *
   * @generated from field: repeated google.logging.v2.TailLogEntriesResponse.SuppressionInfo suppression_info = 2;
   */
  suppressionInfo: TailLogEntriesResponse_SuppressionInfo[];
};

/**
 * Describes the message google.logging.v2.TailLogEntriesResponse.
 * Use `create(TailLogEntriesResponseSchema)` to create a new message.
 */
export const TailLogEntriesResponseSchema: GenMessage<TailLogEntriesResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 11);

/**
 * Information about entries that were omitted from the session.
 *
 * @generated from message google.logging.v2.TailLogEntriesResponse.SuppressionInfo
 */
export type TailLogEntriesResponse_SuppressionInfo = Message<"google.logging.v2.TailLogEntriesResponse.SuppressionInfo"> & {
  /**
   * The reason that entries were omitted from the session.
   *
   * @generated from field: google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason reason = 1;
   */
  reason: TailLogEntriesResponse_SuppressionInfo_Reason;

  /**
   * A lower bound on the count of entries omitted due to `reason`.
   *
   * @generated from field: int32 suppressed_count = 2;
   */
  suppressedCount: number;
};

/**
 * Describes the message google.logging.v2.TailLogEntriesResponse.SuppressionInfo.
 * Use `create(TailLogEntriesResponse_SuppressionInfoSchema)` to create a new message.
 */
export const TailLogEntriesResponse_SuppressionInfoSchema: GenMessage<TailLogEntriesResponse_SuppressionInfo> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging, 11, 0);

/**
 * An indicator of why entries were omitted.
 *
 * @generated from enum google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason
 */
export enum TailLogEntriesResponse_SuppressionInfo_Reason {
  /**
   * Unexpected default.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Indicates suppression occurred due to relevant entries being
   * received in excess of rate limits. For quotas and limits, see
   * [Logging API quotas and
   * limits](https://cloud.google.com/logging/quotas#api-limits).
   *
   * @generated from enum value: RATE_LIMIT = 1;
   */
  RATE_LIMIT = 1,

  /**
   * Indicates suppression occurred due to the client not consuming
   * responses quickly enough.
   *
   * @generated from enum value: NOT_CONSUMED = 2;
   */
  NOT_CONSUMED = 2,
}

/**
 * Describes the enum google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason.
 */
export const TailLogEntriesResponse_SuppressionInfo_ReasonSchema: GenEnum<TailLogEntriesResponse_SuppressionInfo_Reason> = /*@__PURE__*/
  enumDesc(file_google_logging_v2_logging, 11, 0, 0);

/**
 * Service for ingesting and querying logs.
 *
 * @generated from service google.logging.v2.LoggingServiceV2
 */
export const LoggingServiceV2: GenService<{
  /**
   * Deletes all the log entries in a log for the _Default Log Bucket. The log
   * reappears if it receives new entries. Log entries written shortly before
   * the delete operation might not be deleted. Entries received after the
   * delete operation with a timestamp before the operation will be deleted.
   *
   * @generated from rpc google.logging.v2.LoggingServiceV2.DeleteLog
   */
  deleteLog: {
    methodKind: "unary";
    input: typeof DeleteLogRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Writes log entries to Logging. This API method is the
   * only way to send log entries to Logging. This method
   * is used, directly or indirectly, by the Logging agent
   * (fluentd) and all logging libraries configured to use Logging.
   * A single request may contain log entries for a maximum of 1000
   * different resources (projects, organizations, billing accounts or
   * folders)
   *
   * @generated from rpc google.logging.v2.LoggingServiceV2.WriteLogEntries
   */
  writeLogEntries: {
    methodKind: "unary";
    input: typeof WriteLogEntriesRequestSchema;
    output: typeof WriteLogEntriesResponseSchema;
  },
  /**
   * Lists log entries.  Use this method to retrieve log entries that originated
   * from a project/folder/organization/billing account.  For ways to export log
   * entries, see [Exporting
   * Logs](https://cloud.google.com/logging/docs/export).
   *
   * @generated from rpc google.logging.v2.LoggingServiceV2.ListLogEntries
   */
  listLogEntries: {
    methodKind: "unary";
    input: typeof ListLogEntriesRequestSchema;
    output: typeof ListLogEntriesResponseSchema;
  },
  /**
   * Lists the descriptors for monitored resource types used by Logging.
   *
   * @generated from rpc google.logging.v2.LoggingServiceV2.ListMonitoredResourceDescriptors
   */
  listMonitoredResourceDescriptors: {
    methodKind: "unary";
    input: typeof ListMonitoredResourceDescriptorsRequestSchema;
    output: typeof ListMonitoredResourceDescriptorsResponseSchema;
  },
  /**
   * Lists the logs in projects, organizations, folders, or billing accounts.
   * Only logs that have entries are listed.
   *
   * @generated from rpc google.logging.v2.LoggingServiceV2.ListLogs
   */
  listLogs: {
    methodKind: "unary";
    input: typeof ListLogsRequestSchema;
    output: typeof ListLogsResponseSchema;
  },
  /**
   * Streaming read of log entries as they are ingested. Until the stream is
   * terminated, it will continue reading logs.
   *
   * @generated from rpc google.logging.v2.LoggingServiceV2.TailLogEntries
   */
  tailLogEntries: {
    methodKind: "bidi_streaming";
    input: typeof TailLogEntriesRequestSchema;
    output: typeof TailLogEntriesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_logging_v2_logging, 0);

