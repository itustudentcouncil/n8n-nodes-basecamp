// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/logging/v2/logging_config.proto (package google.logging.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { OperationSchema } from "../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../longrunning/operations_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/logging/v2/logging_config.proto.
 */
export const file_google_logging_v2_logging_config: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Configuration for an indexed field.
 *
 * @generated from message google.logging.v2.IndexConfig
 */
export type IndexConfig = Message<"google.logging.v2.IndexConfig"> & {
  /**
   * Required. The LogEntry field path to index.
   *
   * Note that some paths are automatically indexed, and other paths are not
   * eligible for indexing. See [indexing documentation](
   * https://cloud.google.com/logging/docs/view/advanced-queries#indexed-fields)
   * for details.
   *
   * For example: `jsonPayload.request.status`
   *
   * @generated from field: string field_path = 1;
   */
  fieldPath: string;

  /**
   * Required. The type of data in this index.
   *
   * @generated from field: google.logging.v2.IndexType type = 2;
   */
  type: IndexType;

  /**
   * Output only. The timestamp when the index was last modified.
   *
   * This is used to return the timestamp, and will be ignored if supplied
   * during update.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message google.logging.v2.IndexConfig.
 * Use `create(IndexConfigSchema)` to create a new message.
 */
export const IndexConfigSchema: GenMessage<IndexConfig> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 0);

/**
 * Describes a repository in which log entries are stored.
 *
 * @generated from message google.logging.v2.LogBucket
 */
export type LogBucket = Message<"google.logging.v2.LogBucket"> & {
  /**
   * Output only. The resource name of the bucket.
   *
   * For example:
   *
   *   `projects/my-project/locations/global/buckets/my-bucket`
   *
   * For a list of supported locations, see [Supported
   * Regions](https://cloud.google.com/logging/docs/region-support)
   *
   * For the location of `global` it is unspecified where log entries are
   * actually stored.
   *
   * After a bucket has been created, the location cannot be changed.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Describes this bucket.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. The creation timestamp of the bucket. This is not set for any
   * of the default buckets.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last update timestamp of the bucket.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;

  /**
   * Logs will be retained by default for this amount of time, after which they
   * will automatically be deleted. The minimum retention period is 1 day. If
   * this value is set to zero at bucket creation time, the default time of 30
   * days will be used.
   *
   * @generated from field: int32 retention_days = 11;
   */
  retentionDays: number;

  /**
   * Whether the bucket is locked.
   *
   * The retention period on a locked bucket cannot be changed. Locked buckets
   * may only be deleted if they are empty.
   *
   * @generated from field: bool locked = 9;
   */
  locked: boolean;

  /**
   * Output only. The bucket lifecycle state.
   *
   * @generated from field: google.logging.v2.LifecycleState lifecycle_state = 12;
   */
  lifecycleState: LifecycleState;

  /**
   * Whether log analytics is enabled for this bucket.
   *
   * Once enabled, log analytics features cannot be disabled.
   *
   * @generated from field: bool analytics_enabled = 14;
   */
  analyticsEnabled: boolean;

  /**
   * Log entry field paths that are denied access in this bucket.
   *
   * The following fields and their children are eligible: `textPayload`,
   * `jsonPayload`, `protoPayload`, `httpRequest`, `labels`, `sourceLocation`.
   *
   * Restricting a repeated field will restrict all values. Adding a parent will
   * block all child fields. (e.g. `foo.bar` will block `foo.bar.baz`)
   *
   * @generated from field: repeated string restricted_fields = 15;
   */
  restrictedFields: string[];

  /**
   * A list of indexed fields and related configuration data.
   *
   * @generated from field: repeated google.logging.v2.IndexConfig index_configs = 17;
   */
  indexConfigs: IndexConfig[];

  /**
   * The CMEK settings of the log bucket. If present, new log entries written to
   * this log bucket are encrypted using the CMEK key provided in this
   * configuration. If a log bucket has CMEK settings, the CMEK settings cannot
   * be disabled later by updating the log bucket. Changing the KMS key is
   * allowed.
   *
   * @generated from field: google.logging.v2.CmekSettings cmek_settings = 19;
   */
  cmekSettings?: CmekSettings;
};

/**
 * Describes the message google.logging.v2.LogBucket.
 * Use `create(LogBucketSchema)` to create a new message.
 */
export const LogBucketSchema: GenMessage<LogBucket> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 1);

/**
 * Describes a view over log entries in a bucket.
 *
 * @generated from message google.logging.v2.LogView
 */
export type LogView = Message<"google.logging.v2.LogView"> & {
  /**
   * The resource name of the view.
   *
   * For example:
   *
   *   `projects/my-project/locations/global/buckets/my-bucket/views/my-view`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Describes this view.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. The creation timestamp of the view.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last update timestamp of the view.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;

  /**
   * Filter that restricts which log entries in a bucket are visible in this
   * view.
   *
   * Filters are restricted to be a logical AND of ==/!= of any of the
   * following:
   *
   *   - originating project/folder/organization/billing account.
   *   - resource type
   *   - log id
   *
   * For example:
   *
   *   SOURCE("projects/myproject") AND resource.type = "gce_instance"
   *                                AND LOG_ID("stdout")
   *
   * @generated from field: string filter = 7;
   */
  filter: string;
};

/**
 * Describes the message google.logging.v2.LogView.
 * Use `create(LogViewSchema)` to create a new message.
 */
export const LogViewSchema: GenMessage<LogView> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 2);

/**
 * Describes a sink used to export log entries to one of the following
 * destinations in any project: a Cloud Storage bucket, a BigQuery dataset, a
 * Pub/Sub topic or a Cloud Logging log bucket. A logs filter controls which log
 * entries are exported. The sink must be created within a project,
 * organization, billing account, or folder.
 *
 * @generated from message google.logging.v2.LogSink
 */
export type LogSink = Message<"google.logging.v2.LogSink"> & {
  /**
   * Required. The client-assigned sink identifier, unique within the project.
   *
   * For example: `"my-syslog-errors-to-pubsub"`. Sink identifiers are limited
   * to 100 characters and can include only the following characters: upper and
   * lower-case alphanumeric characters, underscores, hyphens, and periods.
   * First character has to be alphanumeric.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The export destination:
   *
   *     "storage.googleapis.com/[GCS_BUCKET]"
   *     "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
   *     "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]"
   *
   * The sink's `writer_identity`, set when the sink is created, must have
   * permission to write to the destination or else the log entries are not
   * exported. For more information, see
   * [Exporting Logs with
   * Sinks](https://cloud.google.com/logging/docs/api/tasks/exporting-logs).
   *
   * @generated from field: string destination = 3;
   */
  destination: string;

  /**
   * Optional. An [advanced logs
   * filter](https://cloud.google.com/logging/docs/view/advanced-queries). The
   * only exported log entries are those that are in the resource owning the
   * sink and that match the filter.
   *
   * For example:
   *
   *   `logName="projects/[PROJECT_ID]/logs/[LOG_ID]" AND severity>=ERROR`
   *
   * @generated from field: string filter = 5;
   */
  filter: string;

  /**
   * Optional. A description of this sink.
   *
   * The maximum length of the description is 8000 characters.
   *
   * @generated from field: string description = 18;
   */
  description: string;

  /**
   * Optional. If set to true, then this sink is disabled and it does not export
   * any log entries.
   *
   * @generated from field: bool disabled = 19;
   */
  disabled: boolean;

  /**
   * Optional. Log entries that match any of these exclusion filters will not be
   * exported.
   *
   * If a log entry is matched by both `filter` and one of `exclusion_filters`
   * it will not be exported.
   *
   * @generated from field: repeated google.logging.v2.LogExclusion exclusions = 16;
   */
  exclusions: LogExclusion[];

  /**
   * Deprecated. This field is unused.
   *
   * @generated from field: google.logging.v2.LogSink.VersionFormat output_version_format = 6 [deprecated = true];
   * @deprecated
   */
  outputVersionFormat: LogSink_VersionFormat;

  /**
   * Output only. An IAM identity&mdash;a service account or group&mdash;under
   * which Cloud Logging writes the exported log entries to the sink's
   * destination. This field is either set by specifying
   * `custom_writer_identity` or set automatically by
   * [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink] and
   * [sinks.update][google.logging.v2.ConfigServiceV2.UpdateSink] based on the
   * value of `unique_writer_identity` in those methods.
   *
   * Until you grant this identity write-access to the destination, log entry
   * exports from this sink will fail. For more information, see [Granting
   * Access for a
   * Resource](https://cloud.google.com/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource).
   * Consult the destination service's documentation to determine the
   * appropriate IAM roles to assign to the identity.
   *
   * Sinks that have a destination that is a log bucket in the same project as
   * the sink cannot have a writer_identity and no additional permissions are
   * required.
   *
   * @generated from field: string writer_identity = 8;
   */
  writerIdentity: string;

  /**
   * Optional. This field applies only to sinks owned by organizations and
   * folders. If the field is false, the default, only the logs owned by the
   * sink's parent resource are available for export. If the field is true, then
   * log entries from all the projects, folders, and billing accounts contained
   * in the sink's parent resource are also available for export. Whether a
   * particular log entry from the children is exported depends on the sink's
   * filter expression.
   *
   * For example, if this field is true, then the filter
   * `resource.type=gce_instance` would export all Compute Engine VM instance
   * log entries from all projects in the sink's parent.
   *
   * To only export entries from certain child projects, filter on the project
   * part of the log name:
   *
   *   logName:("projects/test-project1/" OR "projects/test-project2/") AND
   *   resource.type=gce_instance
   *
   * @generated from field: bool include_children = 9;
   */
  includeChildren: boolean;

  /**
   * Destination dependent options.
   *
   * @generated from oneof google.logging.v2.LogSink.options
   */
  options: {
    /**
     * Optional. Options that affect sinks exporting data to BigQuery.
     *
     * @generated from field: google.logging.v2.BigQueryOptions bigquery_options = 12;
     */
    value: BigQueryOptions;
    case: "bigqueryOptions";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The creation timestamp of the sink.
   *
   * This field may not be present for older sinks.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 13;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last update timestamp of the sink.
   *
   * This field may not be present for older sinks.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 14;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.logging.v2.LogSink.
 * Use `create(LogSinkSchema)` to create a new message.
 */
export const LogSinkSchema: GenMessage<LogSink> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 3);

/**
 * Deprecated. This is unused.
 *
 * @generated from enum google.logging.v2.LogSink.VersionFormat
 */
export enum LogSink_VersionFormat {
  /**
   * An unspecified format version that will default to V2.
   *
   * @generated from enum value: VERSION_FORMAT_UNSPECIFIED = 0;
   */
  VERSION_FORMAT_UNSPECIFIED = 0,

  /**
   * `LogEntry` version 2 format.
   *
   * @generated from enum value: V2 = 1;
   */
  V2 = 1,

  /**
   * `LogEntry` version 1 format.
   *
   * @generated from enum value: V1 = 2;
   */
  V1 = 2,
}

/**
 * Describes the enum google.logging.v2.LogSink.VersionFormat.
 */
export const LogSink_VersionFormatSchema: GenEnum<LogSink_VersionFormat> = /*@__PURE__*/
  enumDesc(file_google_logging_v2_logging_config, 3, 0);

/**
 * Describes a BigQuery dataset that was created by a link.
 *
 * @generated from message google.logging.v2.BigQueryDataset
 */
export type BigQueryDataset = Message<"google.logging.v2.BigQueryDataset"> & {
  /**
   * Output only. The full resource name of the BigQuery dataset. The DATASET_ID
   * will match the ID of the link, so the link must match the naming
   * restrictions of BigQuery datasets (alphanumeric characters and underscores
   * only).
   *
   * The dataset will have a resource path of
   *   "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET_ID]"
   *
   * @generated from field: string dataset_id = 1;
   */
  datasetId: string;
};

/**
 * Describes the message google.logging.v2.BigQueryDataset.
 * Use `create(BigQueryDatasetSchema)` to create a new message.
 */
export const BigQueryDatasetSchema: GenMessage<BigQueryDataset> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 4);

/**
 * Describes a link connected to an analytics enabled bucket.
 *
 * @generated from message google.logging.v2.Link
 */
export type Link = Message<"google.logging.v2.Link"> & {
  /**
   * The resource name of the link. The name can have up to 100 characters.
   * A valid link id (at the end of the link name) must only have alphanumeric
   * characters and underscores within it.
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *     "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *     "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *
   * For example:
   *
   *   `projects/my-project/locations/global/buckets/my-bucket/links/my_link
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Describes this link.
   *
   * The maximum length of the description is 8000 characters.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Output only. The creation timestamp of the link.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. The resource lifecycle state.
   *
   * @generated from field: google.logging.v2.LifecycleState lifecycle_state = 4;
   */
  lifecycleState: LifecycleState;

  /**
   * The information of a BigQuery Dataset. When a link is created, a BigQuery
   * dataset is created along with it, in the same project as the LogBucket it's
   * linked to. This dataset will also have BigQuery Views corresponding to the
   * LogViews in the bucket.
   *
   * @generated from field: google.logging.v2.BigQueryDataset bigquery_dataset = 5;
   */
  bigqueryDataset?: BigQueryDataset;
};

/**
 * Describes the message google.logging.v2.Link.
 * Use `create(LinkSchema)` to create a new message.
 */
export const LinkSchema: GenMessage<Link> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 5);

/**
 * Options that change functionality of a sink exporting data to BigQuery.
 *
 * @generated from message google.logging.v2.BigQueryOptions
 */
export type BigQueryOptions = Message<"google.logging.v2.BigQueryOptions"> & {
  /**
   * Optional. Whether to use [BigQuery's partition
   * tables](https://cloud.google.com/bigquery/docs/partitioned-tables). By
   * default, Cloud Logging creates dated tables based on the log entries'
   * timestamps, e.g. syslog_20170523. With partitioned tables the date suffix
   * is no longer present and [special query
   * syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
   * has to be used instead. In both cases, tables are sharded based on UTC
   * timezone.
   *
   * @generated from field: bool use_partitioned_tables = 1;
   */
  usePartitionedTables: boolean;

  /**
   * Output only. True if new timestamp column based partitioning is in use,
   * false if legacy ingestion-time partitioning is in use.
   *
   * All new sinks will have this field set true and will use timestamp column
   * based partitioning. If use_partitioned_tables is false, this value has no
   * meaning and will be false. Legacy sinks using partitioned tables will have
   * this field set to false.
   *
   * @generated from field: bool uses_timestamp_column_partitioning = 3;
   */
  usesTimestampColumnPartitioning: boolean;
};

/**
 * Describes the message google.logging.v2.BigQueryOptions.
 * Use `create(BigQueryOptionsSchema)` to create a new message.
 */
export const BigQueryOptionsSchema: GenMessage<BigQueryOptions> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 6);

/**
 * The parameters to `ListBuckets`.
 *
 * @generated from message google.logging.v2.ListBucketsRequest
 */
export type ListBucketsRequest = Message<"google.logging.v2.ListBucketsRequest"> & {
  /**
   * Required. The parent resource whose buckets are to be listed:
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
   *     "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
   *     "folders/[FOLDER_ID]/locations/[LOCATION_ID]"
   *
   * Note: The locations portion of the resource must be specified, but
   * supplying the character `-` in place of [LOCATION_ID] will return all
   * buckets.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. If present, then retrieve the next batch of results from the
   * preceding call to this method. `pageToken` must be the value of
   * `nextPageToken` from the previous response. The values of other method
   * parameters should be identical to those in the previous call.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Optional. The maximum number of results to return from this request.
   * Non-positive values are ignored. The presence of `nextPageToken` in the
   * response indicates that more results might be available.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;
};

/**
 * Describes the message google.logging.v2.ListBucketsRequest.
 * Use `create(ListBucketsRequestSchema)` to create a new message.
 */
export const ListBucketsRequestSchema: GenMessage<ListBucketsRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 7);

/**
 * The response from ListBuckets.
 *
 * @generated from message google.logging.v2.ListBucketsResponse
 */
export type ListBucketsResponse = Message<"google.logging.v2.ListBucketsResponse"> & {
  /**
   * A list of buckets.
   *
   * @generated from field: repeated google.logging.v2.LogBucket buckets = 1;
   */
  buckets: LogBucket[];

  /**
   * If there might be more results than appear in this response, then
   * `nextPageToken` is included. To get the next set of results, call the same
   * method again using the value of `nextPageToken` as `pageToken`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.logging.v2.ListBucketsResponse.
 * Use `create(ListBucketsResponseSchema)` to create a new message.
 */
export const ListBucketsResponseSchema: GenMessage<ListBucketsResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 8);

/**
 * The parameters to `CreateBucket`.
 *
 * @generated from message google.logging.v2.CreateBucketRequest
 */
export type CreateBucketRequest = Message<"google.logging.v2.CreateBucketRequest"> & {
  /**
   * Required. The resource in which to create the log bucket:
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/locations/global"`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. A client-assigned identifier such as `"my-bucket"`. Identifiers
   * are limited to 100 characters and can include only letters, digits,
   * underscores, hyphens, and periods.
   *
   * @generated from field: string bucket_id = 2;
   */
  bucketId: string;

  /**
   * Required. The new bucket. The region specified in the new bucket must be
   * compliant with any Location Restriction Org Policy. The name field in the
   * bucket is ignored.
   *
   * @generated from field: google.logging.v2.LogBucket bucket = 3;
   */
  bucket?: LogBucket;
};

/**
 * Describes the message google.logging.v2.CreateBucketRequest.
 * Use `create(CreateBucketRequestSchema)` to create a new message.
 */
export const CreateBucketRequestSchema: GenMessage<CreateBucketRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 9);

/**
 * The parameters to `UpdateBucket`.
 *
 * @generated from message google.logging.v2.UpdateBucketRequest
 */
export type UpdateBucketRequest = Message<"google.logging.v2.UpdateBucketRequest"> & {
  /**
   * Required. The full resource name of the bucket to update.
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/locations/global/buckets/my-bucket"`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The updated bucket.
   *
   * @generated from field: google.logging.v2.LogBucket bucket = 2;
   */
  bucket?: LogBucket;

  /**
   * Required. Field mask that specifies the fields in `bucket` that need an
   * update. A bucket field will be overwritten if, and only if, it is in the
   * update mask. `name` and output only fields cannot be updated.
   *
   * For a detailed `FieldMask` definition, see:
   * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
   *
   * For example: `updateMask=retention_days`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.logging.v2.UpdateBucketRequest.
 * Use `create(UpdateBucketRequestSchema)` to create a new message.
 */
export const UpdateBucketRequestSchema: GenMessage<UpdateBucketRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 10);

/**
 * The parameters to `GetBucket`.
 *
 * @generated from message google.logging.v2.GetBucketRequest
 */
export type GetBucketRequest = Message<"google.logging.v2.GetBucketRequest"> & {
  /**
   * Required. The resource name of the bucket:
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/locations/global/buckets/my-bucket"`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.GetBucketRequest.
 * Use `create(GetBucketRequestSchema)` to create a new message.
 */
export const GetBucketRequestSchema: GenMessage<GetBucketRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 11);

/**
 * The parameters to `DeleteBucket`.
 *
 * @generated from message google.logging.v2.DeleteBucketRequest
 */
export type DeleteBucketRequest = Message<"google.logging.v2.DeleteBucketRequest"> & {
  /**
   * Required. The full resource name of the bucket to delete.
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/locations/global/buckets/my-bucket"`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.DeleteBucketRequest.
 * Use `create(DeleteBucketRequestSchema)` to create a new message.
 */
export const DeleteBucketRequestSchema: GenMessage<DeleteBucketRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 12);

/**
 * The parameters to `UndeleteBucket`.
 *
 * @generated from message google.logging.v2.UndeleteBucketRequest
 */
export type UndeleteBucketRequest = Message<"google.logging.v2.UndeleteBucketRequest"> & {
  /**
   * Required. The full resource name of the bucket to undelete.
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/locations/global/buckets/my-bucket"`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.UndeleteBucketRequest.
 * Use `create(UndeleteBucketRequestSchema)` to create a new message.
 */
export const UndeleteBucketRequestSchema: GenMessage<UndeleteBucketRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 13);

/**
 * The parameters to `ListViews`.
 *
 * @generated from message google.logging.v2.ListViewsRequest
 */
export type ListViewsRequest = Message<"google.logging.v2.ListViewsRequest"> & {
  /**
   * Required. The bucket whose views are to be listed:
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. If present, then retrieve the next batch of results from the
   * preceding call to this method. `pageToken` must be the value of
   * `nextPageToken` from the previous response. The values of other method
   * parameters should be identical to those in the previous call.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Optional. The maximum number of results to return from this request.
   *
   * Non-positive values are ignored. The presence of `nextPageToken` in the
   * response indicates that more results might be available.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;
};

/**
 * Describes the message google.logging.v2.ListViewsRequest.
 * Use `create(ListViewsRequestSchema)` to create a new message.
 */
export const ListViewsRequestSchema: GenMessage<ListViewsRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 14);

/**
 * The response from ListViews.
 *
 * @generated from message google.logging.v2.ListViewsResponse
 */
export type ListViewsResponse = Message<"google.logging.v2.ListViewsResponse"> & {
  /**
   * A list of views.
   *
   * @generated from field: repeated google.logging.v2.LogView views = 1;
   */
  views: LogView[];

  /**
   * If there might be more results than appear in this response, then
   * `nextPageToken` is included. To get the next set of results, call the same
   * method again using the value of `nextPageToken` as `pageToken`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.logging.v2.ListViewsResponse.
 * Use `create(ListViewsResponseSchema)` to create a new message.
 */
export const ListViewsResponseSchema: GenMessage<ListViewsResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 15);

/**
 * The parameters to `CreateView`.
 *
 * @generated from message google.logging.v2.CreateViewRequest
 */
export type CreateViewRequest = Message<"google.logging.v2.CreateViewRequest"> & {
  /**
   * Required. The bucket in which to create the view
   *
   *     `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"`
   *
   * For example:
   *
   *   `"projects/my-project/locations/global/buckets/my-bucket"`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. A client-assigned identifier such as `"my-view"`. Identifiers are
   * limited to 100 characters and can include only letters, digits,
   * underscores, hyphens, and periods.
   *
   * @generated from field: string view_id = 2;
   */
  viewId: string;

  /**
   * Required. The new view.
   *
   * @generated from field: google.logging.v2.LogView view = 3;
   */
  view?: LogView;
};

/**
 * Describes the message google.logging.v2.CreateViewRequest.
 * Use `create(CreateViewRequestSchema)` to create a new message.
 */
export const CreateViewRequestSchema: GenMessage<CreateViewRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 16);

/**
 * The parameters to `UpdateView`.
 *
 * @generated from message google.logging.v2.UpdateViewRequest
 */
export type UpdateViewRequest = Message<"google.logging.v2.UpdateViewRequest"> & {
  /**
   * Required. The full resource name of the view to update
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/locations/global/buckets/my-bucket/views/my-view"`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The updated view.
   *
   * @generated from field: google.logging.v2.LogView view = 2;
   */
  view?: LogView;

  /**
   * Optional. Field mask that specifies the fields in `view` that need
   * an update. A field will be overwritten if, and only if, it is
   * in the update mask. `name` and output only fields cannot be updated.
   *
   * For a detailed `FieldMask` definition, see
   * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
   *
   * For example: `updateMask=filter`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.logging.v2.UpdateViewRequest.
 * Use `create(UpdateViewRequestSchema)` to create a new message.
 */
export const UpdateViewRequestSchema: GenMessage<UpdateViewRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 17);

/**
 * The parameters to `GetView`.
 *
 * @generated from message google.logging.v2.GetViewRequest
 */
export type GetViewRequest = Message<"google.logging.v2.GetViewRequest"> & {
  /**
   * Required. The resource name of the policy:
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/locations/global/buckets/my-bucket/views/my-view"`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.GetViewRequest.
 * Use `create(GetViewRequestSchema)` to create a new message.
 */
export const GetViewRequestSchema: GenMessage<GetViewRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 18);

/**
 * The parameters to `DeleteView`.
 *
 * @generated from message google.logging.v2.DeleteViewRequest
 */
export type DeleteViewRequest = Message<"google.logging.v2.DeleteViewRequest"> & {
  /**
   * Required. The full resource name of the view to delete:
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
   *
   * For example:
   *
   *    `"projects/my-project/locations/global/buckets/my-bucket/views/my-view"`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.DeleteViewRequest.
 * Use `create(DeleteViewRequestSchema)` to create a new message.
 */
export const DeleteViewRequestSchema: GenMessage<DeleteViewRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 19);

/**
 * The parameters to `ListSinks`.
 *
 * @generated from message google.logging.v2.ListSinksRequest
 */
export type ListSinksRequest = Message<"google.logging.v2.ListSinksRequest"> & {
  /**
   * Required. The parent resource whose sinks are to be listed:
   *
   *     "projects/[PROJECT_ID]"
   *     "organizations/[ORGANIZATION_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]"
   *     "folders/[FOLDER_ID]"
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. If present, then retrieve the next batch of results from the
   * preceding call to this method. `pageToken` must be the value of
   * `nextPageToken` from the previous response. The values of other method
   * parameters should be identical to those in the previous call.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Optional. The maximum number of results to return from this request.
   * Non-positive values are ignored. The presence of `nextPageToken` in the
   * response indicates that more results might be available.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;
};

/**
 * Describes the message google.logging.v2.ListSinksRequest.
 * Use `create(ListSinksRequestSchema)` to create a new message.
 */
export const ListSinksRequestSchema: GenMessage<ListSinksRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 20);

/**
 * Result returned from `ListSinks`.
 *
 * @generated from message google.logging.v2.ListSinksResponse
 */
export type ListSinksResponse = Message<"google.logging.v2.ListSinksResponse"> & {
  /**
   * A list of sinks.
   *
   * @generated from field: repeated google.logging.v2.LogSink sinks = 1;
   */
  sinks: LogSink[];

  /**
   * If there might be more results than appear in this response, then
   * `nextPageToken` is included. To get the next set of results, call the same
   * method again using the value of `nextPageToken` as `pageToken`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.logging.v2.ListSinksResponse.
 * Use `create(ListSinksResponseSchema)` to create a new message.
 */
export const ListSinksResponseSchema: GenMessage<ListSinksResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 21);

/**
 * The parameters to `GetSink`.
 *
 * @generated from message google.logging.v2.GetSinkRequest
 */
export type GetSinkRequest = Message<"google.logging.v2.GetSinkRequest"> & {
  /**
   * Required. The resource name of the sink:
   *
   *     "projects/[PROJECT_ID]/sinks/[SINK_ID]"
   *     "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
   *     "folders/[FOLDER_ID]/sinks/[SINK_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/sinks/my-sink"`
   *
   * @generated from field: string sink_name = 1;
   */
  sinkName: string;
};

/**
 * Describes the message google.logging.v2.GetSinkRequest.
 * Use `create(GetSinkRequestSchema)` to create a new message.
 */
export const GetSinkRequestSchema: GenMessage<GetSinkRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 22);

/**
 * The parameters to `CreateSink`.
 *
 * @generated from message google.logging.v2.CreateSinkRequest
 */
export type CreateSinkRequest = Message<"google.logging.v2.CreateSinkRequest"> & {
  /**
   * Required. The resource in which to create the sink:
   *
   *     "projects/[PROJECT_ID]"
   *     "organizations/[ORGANIZATION_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]"
   *     "folders/[FOLDER_ID]"
   *
   * For examples:
   *
   *   `"projects/my-project"`
   *   `"organizations/123456789"`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The new sink, whose `name` parameter is a sink identifier that
   * is not already in use.
   *
   * @generated from field: google.logging.v2.LogSink sink = 2;
   */
  sink?: LogSink;

  /**
   * Optional. Determines the kind of IAM identity returned as `writer_identity`
   * in the new sink. If this value is omitted or set to false, and if the
   * sink's parent is a project, then the value returned as `writer_identity` is
   * the same group or service account used by Cloud Logging before the addition
   * of writer identities to this API. The sink's destination must be in the
   * same project as the sink itself.
   *
   * If this field is set to true, or if the sink is owned by a non-project
   * resource such as an organization, then the value of `writer_identity` will
   * be a unique service account used only for exports from the new sink. For
   * more information, see `writer_identity` in
   * [LogSink][google.logging.v2.LogSink].
   *
   * @generated from field: bool unique_writer_identity = 3;
   */
  uniqueWriterIdentity: boolean;
};

/**
 * Describes the message google.logging.v2.CreateSinkRequest.
 * Use `create(CreateSinkRequestSchema)` to create a new message.
 */
export const CreateSinkRequestSchema: GenMessage<CreateSinkRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 23);

/**
 * The parameters to `UpdateSink`.
 *
 * @generated from message google.logging.v2.UpdateSinkRequest
 */
export type UpdateSinkRequest = Message<"google.logging.v2.UpdateSinkRequest"> & {
  /**
   * Required. The full resource name of the sink to update, including the
   * parent resource and the sink identifier:
   *
   *     "projects/[PROJECT_ID]/sinks/[SINK_ID]"
   *     "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
   *     "folders/[FOLDER_ID]/sinks/[SINK_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/sinks/my-sink"`
   *
   * @generated from field: string sink_name = 1;
   */
  sinkName: string;

  /**
   * Required. The updated sink, whose name is the same identifier that appears
   * as part of `sink_name`.
   *
   * @generated from field: google.logging.v2.LogSink sink = 2;
   */
  sink?: LogSink;

  /**
   * Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]
   * for a description of this field. When updating a sink, the effect of this
   * field on the value of `writer_identity` in the updated sink depends on both
   * the old and new values of this field:
   *
   * +   If the old and new values of this field are both false or both true,
   *     then there is no change to the sink's `writer_identity`.
   * +   If the old value is false and the new value is true, then
   *     `writer_identity` is changed to a unique service account.
   * +   It is an error if the old value is true and the new value is
   *     set to false or defaulted to false.
   *
   * @generated from field: bool unique_writer_identity = 3;
   */
  uniqueWriterIdentity: boolean;

  /**
   * Optional. Field mask that specifies the fields in `sink` that need
   * an update. A sink field will be overwritten if, and only if, it is
   * in the update mask. `name` and output only fields cannot be updated.
   *
   * An empty `updateMask` is temporarily treated as using the following mask
   * for backwards compatibility purposes:
   *
   *   `destination,filter,includeChildren`
   *
   * At some point in the future, behavior will be removed and specifying an
   * empty `updateMask` will be an error.
   *
   * For a detailed `FieldMask` definition, see
   * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
   *
   * For example: `updateMask=filter`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.logging.v2.UpdateSinkRequest.
 * Use `create(UpdateSinkRequestSchema)` to create a new message.
 */
export const UpdateSinkRequestSchema: GenMessage<UpdateSinkRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 24);

/**
 * The parameters to `DeleteSink`.
 *
 * @generated from message google.logging.v2.DeleteSinkRequest
 */
export type DeleteSinkRequest = Message<"google.logging.v2.DeleteSinkRequest"> & {
  /**
   * Required. The full resource name of the sink to delete, including the
   * parent resource and the sink identifier:
   *
   *     "projects/[PROJECT_ID]/sinks/[SINK_ID]"
   *     "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
   *     "folders/[FOLDER_ID]/sinks/[SINK_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/sinks/my-sink"`
   *
   * @generated from field: string sink_name = 1;
   */
  sinkName: string;
};

/**
 * Describes the message google.logging.v2.DeleteSinkRequest.
 * Use `create(DeleteSinkRequestSchema)` to create a new message.
 */
export const DeleteSinkRequestSchema: GenMessage<DeleteSinkRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 25);

/**
 * The parameters to CreateLink.
 *
 * @generated from message google.logging.v2.CreateLinkRequest
 */
export type CreateLinkRequest = Message<"google.logging.v2.CreateLinkRequest"> & {
  /**
   * Required. The full resource name of the bucket to create a link for.
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *     "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The new link.
   *
   * @generated from field: google.logging.v2.Link link = 2;
   */
  link?: Link;

  /**
   * Required. The ID to use for the link. The link_id can have up to 100
   * characters. A valid link_id must only have alphanumeric characters and
   * underscores within it.
   *
   * @generated from field: string link_id = 3;
   */
  linkId: string;
};

/**
 * Describes the message google.logging.v2.CreateLinkRequest.
 * Use `create(CreateLinkRequestSchema)` to create a new message.
 */
export const CreateLinkRequestSchema: GenMessage<CreateLinkRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 26);

/**
 * The parameters to DeleteLink.
 *
 * @generated from message google.logging.v2.DeleteLinkRequest
 */
export type DeleteLinkRequest = Message<"google.logging.v2.DeleteLinkRequest"> & {
  /**
   * Required. The full resource name of the link to delete.
   *
   *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *   "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *   "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *   "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.DeleteLinkRequest.
 * Use `create(DeleteLinkRequestSchema)` to create a new message.
 */
export const DeleteLinkRequestSchema: GenMessage<DeleteLinkRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 27);

/**
 * The parameters to ListLinks.
 *
 * @generated from message google.logging.v2.ListLinksRequest
 */
export type ListLinksRequest = Message<"google.logging.v2.ListLinksRequest"> & {
  /**
   * Required. The parent resource whose links are to be listed:
   *
   *   "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/"
   *   "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/"
   *   "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/"
   *   "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. If present, then retrieve the next batch of results from the
   * preceding call to this method. `pageToken` must be the value of
   * `nextPageToken` from the previous response.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Optional. The maximum number of results to return from this request.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;
};

/**
 * Describes the message google.logging.v2.ListLinksRequest.
 * Use `create(ListLinksRequestSchema)` to create a new message.
 */
export const ListLinksRequestSchema: GenMessage<ListLinksRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 28);

/**
 * The response from ListLinks.
 *
 * @generated from message google.logging.v2.ListLinksResponse
 */
export type ListLinksResponse = Message<"google.logging.v2.ListLinksResponse"> & {
  /**
   * A list of links.
   *
   * @generated from field: repeated google.logging.v2.Link links = 1;
   */
  links: Link[];

  /**
   * If there might be more results than those appearing in this response, then
   * `nextPageToken` is included. To get the next set of results, call the same
   * method again using the value of `nextPageToken` as `pageToken`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.logging.v2.ListLinksResponse.
 * Use `create(ListLinksResponseSchema)` to create a new message.
 */
export const ListLinksResponseSchema: GenMessage<ListLinksResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 29);

/**
 * The parameters to GetLink.
 *
 * @generated from message google.logging.v2.GetLinkRequest
 */
export type GetLinkRequest = Message<"google.logging.v2.GetLinkRequest"> & {
  /**
   * Required. The resource name of the link:
   *
   *   "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *   "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *   "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
   *   "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.GetLinkRequest.
 * Use `create(GetLinkRequestSchema)` to create a new message.
 */
export const GetLinkRequestSchema: GenMessage<GetLinkRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 30);

/**
 * Specifies a set of log entries that are filtered out by a sink. If
 * your Google Cloud resource receives a large volume of log entries, you can
 * use exclusions to reduce your chargeable logs. Note that exclusions on
 * organization-level and folder-level sinks don't apply to child resources.
 * Note also that you cannot modify the _Required sink or exclude logs from it.
 *
 * @generated from message google.logging.v2.LogExclusion
 */
export type LogExclusion = Message<"google.logging.v2.LogExclusion"> & {
  /**
   * Required. A client-assigned identifier, such as
   * `"load-balancer-exclusion"`. Identifiers are limited to 100 characters and
   * can include only letters, digits, underscores, hyphens, and periods. First
   * character has to be alphanumeric.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A description of this exclusion.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Required. An [advanced logs
   * filter](https://cloud.google.com/logging/docs/view/advanced-queries) that
   * matches the log entries to be excluded. By using the [sample
   * function](https://cloud.google.com/logging/docs/view/advanced-queries#sample),
   * you can exclude less than 100% of the matching log entries.
   *
   * For example, the following query matches 99% of low-severity log entries
   * from Google Cloud Storage buckets:
   *
   *   `resource.type=gcs_bucket severity<ERROR sample(insertId, 0.99)`
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * Optional. If set to True, then this exclusion is disabled and it does not
   * exclude any log entries. You can [update an
   * exclusion][google.logging.v2.ConfigServiceV2.UpdateExclusion] to change the
   * value of this field.
   *
   * @generated from field: bool disabled = 4;
   */
  disabled: boolean;

  /**
   * Output only. The creation timestamp of the exclusion.
   *
   * This field may not be present for older exclusions.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last update timestamp of the exclusion.
   *
   * This field may not be present for older exclusions.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.logging.v2.LogExclusion.
 * Use `create(LogExclusionSchema)` to create a new message.
 */
export const LogExclusionSchema: GenMessage<LogExclusion> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 31);

/**
 * The parameters to `ListExclusions`.
 *
 * @generated from message google.logging.v2.ListExclusionsRequest
 */
export type ListExclusionsRequest = Message<"google.logging.v2.ListExclusionsRequest"> & {
  /**
   * Required. The parent resource whose exclusions are to be listed.
   *
   *     "projects/[PROJECT_ID]"
   *     "organizations/[ORGANIZATION_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]"
   *     "folders/[FOLDER_ID]"
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. If present, then retrieve the next batch of results from the
   * preceding call to this method. `pageToken` must be the value of
   * `nextPageToken` from the previous response. The values of other method
   * parameters should be identical to those in the previous call.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Optional. The maximum number of results to return from this request.
   * Non-positive values are ignored. The presence of `nextPageToken` in the
   * response indicates that more results might be available.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;
};

/**
 * Describes the message google.logging.v2.ListExclusionsRequest.
 * Use `create(ListExclusionsRequestSchema)` to create a new message.
 */
export const ListExclusionsRequestSchema: GenMessage<ListExclusionsRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 32);

/**
 * Result returned from `ListExclusions`.
 *
 * @generated from message google.logging.v2.ListExclusionsResponse
 */
export type ListExclusionsResponse = Message<"google.logging.v2.ListExclusionsResponse"> & {
  /**
   * A list of exclusions.
   *
   * @generated from field: repeated google.logging.v2.LogExclusion exclusions = 1;
   */
  exclusions: LogExclusion[];

  /**
   * If there might be more results than appear in this response, then
   * `nextPageToken` is included. To get the next set of results, call the same
   * method again using the value of `nextPageToken` as `pageToken`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.logging.v2.ListExclusionsResponse.
 * Use `create(ListExclusionsResponseSchema)` to create a new message.
 */
export const ListExclusionsResponseSchema: GenMessage<ListExclusionsResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 33);

/**
 * The parameters to `GetExclusion`.
 *
 * @generated from message google.logging.v2.GetExclusionRequest
 */
export type GetExclusionRequest = Message<"google.logging.v2.GetExclusionRequest"> & {
  /**
   * Required. The resource name of an existing exclusion:
   *
   *     "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
   *     "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
   *     "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/exclusions/my-exclusion"`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.GetExclusionRequest.
 * Use `create(GetExclusionRequestSchema)` to create a new message.
 */
export const GetExclusionRequestSchema: GenMessage<GetExclusionRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 34);

/**
 * The parameters to `CreateExclusion`.
 *
 * @generated from message google.logging.v2.CreateExclusionRequest
 */
export type CreateExclusionRequest = Message<"google.logging.v2.CreateExclusionRequest"> & {
  /**
   * Required. The parent resource in which to create the exclusion:
   *
   *     "projects/[PROJECT_ID]"
   *     "organizations/[ORGANIZATION_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]"
   *     "folders/[FOLDER_ID]"
   *
   * For examples:
   *
   *   `"projects/my-logging-project"`
   *   `"organizations/123456789"`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The new exclusion, whose `name` parameter is an exclusion name
   * that is not already used in the parent resource.
   *
   * @generated from field: google.logging.v2.LogExclusion exclusion = 2;
   */
  exclusion?: LogExclusion;
};

/**
 * Describes the message google.logging.v2.CreateExclusionRequest.
 * Use `create(CreateExclusionRequestSchema)` to create a new message.
 */
export const CreateExclusionRequestSchema: GenMessage<CreateExclusionRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 35);

/**
 * The parameters to `UpdateExclusion`.
 *
 * @generated from message google.logging.v2.UpdateExclusionRequest
 */
export type UpdateExclusionRequest = Message<"google.logging.v2.UpdateExclusionRequest"> & {
  /**
   * Required. The resource name of the exclusion to update:
   *
   *     "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
   *     "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
   *     "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/exclusions/my-exclusion"`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. New values for the existing exclusion. Only the fields specified
   * in `update_mask` are relevant.
   *
   * @generated from field: google.logging.v2.LogExclusion exclusion = 2;
   */
  exclusion?: LogExclusion;

  /**
   * Required. A non-empty list of fields to change in the existing exclusion.
   * New values for the fields are taken from the corresponding fields in the
   * [LogExclusion][google.logging.v2.LogExclusion] included in this request.
   * Fields not mentioned in `update_mask` are not changed and are ignored in
   * the request.
   *
   * For example, to change the filter and description of an exclusion,
   * specify an `update_mask` of `"filter,description"`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.logging.v2.UpdateExclusionRequest.
 * Use `create(UpdateExclusionRequestSchema)` to create a new message.
 */
export const UpdateExclusionRequestSchema: GenMessage<UpdateExclusionRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 36);

/**
 * The parameters to `DeleteExclusion`.
 *
 * @generated from message google.logging.v2.DeleteExclusionRequest
 */
export type DeleteExclusionRequest = Message<"google.logging.v2.DeleteExclusionRequest"> & {
  /**
   * Required. The resource name of an existing exclusion to delete:
   *
   *     "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
   *     "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
   *     "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]"
   *
   * For example:
   *
   *   `"projects/my-project/exclusions/my-exclusion"`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.DeleteExclusionRequest.
 * Use `create(DeleteExclusionRequestSchema)` to create a new message.
 */
export const DeleteExclusionRequestSchema: GenMessage<DeleteExclusionRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 37);

/**
 * The parameters to
 * [GetCmekSettings][google.logging.v2.ConfigServiceV2.GetCmekSettings].
 *
 * See [Enabling CMEK for Log
 * Router](https://cloud.google.com/logging/docs/routing/managed-encryption) for
 * more information.
 *
 * @generated from message google.logging.v2.GetCmekSettingsRequest
 */
export type GetCmekSettingsRequest = Message<"google.logging.v2.GetCmekSettingsRequest"> & {
  /**
   * Required. The resource for which to retrieve CMEK settings.
   *
   *     "projects/[PROJECT_ID]/cmekSettings"
   *     "organizations/[ORGANIZATION_ID]/cmekSettings"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
   *     "folders/[FOLDER_ID]/cmekSettings"
   *
   * For example:
   *
   *   `"organizations/12345/cmekSettings"`
   *
   * Note: CMEK for the Log Router can be configured for Google Cloud projects,
   * folders, organizations and billing accounts. Once configured for an
   * organization, it applies to all projects and folders in the Google Cloud
   * organization.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.GetCmekSettingsRequest.
 * Use `create(GetCmekSettingsRequestSchema)` to create a new message.
 */
export const GetCmekSettingsRequestSchema: GenMessage<GetCmekSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 38);

/**
 * The parameters to
 * [UpdateCmekSettings][google.logging.v2.ConfigServiceV2.UpdateCmekSettings].
 *
 * See [Enabling CMEK for Log
 * Router](https://cloud.google.com/logging/docs/routing/managed-encryption) for
 * more information.
 *
 * @generated from message google.logging.v2.UpdateCmekSettingsRequest
 */
export type UpdateCmekSettingsRequest = Message<"google.logging.v2.UpdateCmekSettingsRequest"> & {
  /**
   * Required. The resource name for the CMEK settings to update.
   *
   *     "projects/[PROJECT_ID]/cmekSettings"
   *     "organizations/[ORGANIZATION_ID]/cmekSettings"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
   *     "folders/[FOLDER_ID]/cmekSettings"
   *
   * For example:
   *
   *   `"organizations/12345/cmekSettings"`
   *
   * Note: CMEK for the Log Router can currently only be configured for Google
   * Cloud organizations. Once configured, it applies to all projects and
   * folders in the Google Cloud organization.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The CMEK settings to update.
   *
   * See [Enabling CMEK for Log
   * Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
   * for more information.
   *
   * @generated from field: google.logging.v2.CmekSettings cmek_settings = 2;
   */
  cmekSettings?: CmekSettings;

  /**
   * Optional. Field mask identifying which fields from `cmek_settings` should
   * be updated. A field will be overwritten if and only if it is in the update
   * mask. Output only fields cannot be updated.
   *
   * See [FieldMask][google.protobuf.FieldMask] for more information.
   *
   * For example: `"updateMask=kmsKeyName"`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.logging.v2.UpdateCmekSettingsRequest.
 * Use `create(UpdateCmekSettingsRequestSchema)` to create a new message.
 */
export const UpdateCmekSettingsRequestSchema: GenMessage<UpdateCmekSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 39);

/**
 * Describes the customer-managed encryption key (CMEK) settings associated with
 * a project, folder, organization, billing account, or flexible resource.
 *
 * Note: CMEK for the Log Router can currently only be configured for Google
 * Cloud organizations. Once configured, it applies to all projects and folders
 * in the Google Cloud organization.
 *
 * See [Enabling CMEK for Log
 * Router](https://cloud.google.com/logging/docs/routing/managed-encryption) for
 * more information.
 *
 * @generated from message google.logging.v2.CmekSettings
 */
export type CmekSettings = Message<"google.logging.v2.CmekSettings"> & {
  /**
   * Output only. The resource name of the CMEK settings.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The resource name for the configured Cloud KMS key.
   *
   * KMS key name format:
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]"
   *
   * For example:
   *
   *   `"projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key"`
   *
   *
   *
   * To enable CMEK for the Log Router, set this field to a valid
   * `kms_key_name` for which the associated service account has the required
   * cloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.
   *
   * The Cloud KMS key used by the Log Router can be updated by changing the
   * `kms_key_name` to a new valid key name or disabled by setting the key name
   * to an empty string. Encryption operations that are in progress will be
   * completed with the key that was in use when they started. Decryption
   * operations will be completed using the key that was used at the time of
   * encryption unless access to that key has been revoked.
   *
   * To disable CMEK for the Log Router, set this field to an empty string.
   *
   * See [Enabling CMEK for Log
   * Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
   * for more information.
   *
   * @generated from field: string kms_key_name = 2;
   */
  kmsKeyName: string;

  /**
   * The CryptoKeyVersion resource name for the configured Cloud KMS key.
   *
   * KMS key name format:
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[VERSION]"
   *
   * For example:
   *
   *   `"projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key/cryptoKeyVersions/1"`
   *
   * This is a read-only field used to convey the specific configured
   * CryptoKeyVersion of `kms_key` that has been configured. It will be
   * populated in cases where the CMEK settings are bound to a single key
   * version.
   *
   * If this field is populated, the `kms_key` is tied to a specific
   * CryptoKeyVersion.
   *
   * @generated from field: string kms_key_version_name = 4;
   */
  kmsKeyVersionName: string;

  /**
   * Output only. The service account that will be used by the Log Router to
   * access your Cloud KMS key.
   *
   * Before enabling CMEK for Log Router, you must first assign the
   * cloudkms.cryptoKeyEncrypterDecrypter role to the service account that
   * the Log Router will use to access your Cloud KMS key. Use
   * [GetCmekSettings][google.logging.v2.ConfigServiceV2.GetCmekSettings] to
   * obtain the service account ID.
   *
   * See [Enabling CMEK for Log
   * Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
   * for more information.
   *
   * @generated from field: string service_account_id = 3;
   */
  serviceAccountId: string;
};

/**
 * Describes the message google.logging.v2.CmekSettings.
 * Use `create(CmekSettingsSchema)` to create a new message.
 */
export const CmekSettingsSchema: GenMessage<CmekSettings> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 40);

/**
 * The parameters to
 * [GetSettings][google.logging.v2.ConfigServiceV2.GetSettings].
 *
 * See [Enabling CMEK for Log
 * Router](https://cloud.google.com/logging/docs/routing/managed-encryption) for
 * more information.
 *
 * @generated from message google.logging.v2.GetSettingsRequest
 */
export type GetSettingsRequest = Message<"google.logging.v2.GetSettingsRequest"> & {
  /**
   * Required. The resource for which to retrieve settings.
   *
   *     "projects/[PROJECT_ID]/settings"
   *     "organizations/[ORGANIZATION_ID]/settings"
   *     "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
   *     "folders/[FOLDER_ID]/settings"
   *
   * For example:
   *
   *   `"organizations/12345/settings"`
   *
   * Note: Settings for the Log Router can be get for Google Cloud projects,
   * folders, organizations and billing accounts. Currently it can only be
   * configured for organizations. Once configured for an organization, it
   * applies to all projects and folders in the Google Cloud organization.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.logging.v2.GetSettingsRequest.
 * Use `create(GetSettingsRequestSchema)` to create a new message.
 */
export const GetSettingsRequestSchema: GenMessage<GetSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 41);

/**
 * The parameters to
 * [UpdateSettings][google.logging.v2.ConfigServiceV2.UpdateSettings].
 *
 * See [Enabling CMEK for Log
 * Router](https://cloud.google.com/logging/docs/routing/managed-encryption) for
 * more information.
 *
 * @generated from message google.logging.v2.UpdateSettingsRequest
 */
export type UpdateSettingsRequest = Message<"google.logging.v2.UpdateSettingsRequest"> & {
  /**
   * Required. The resource name for the settings to update.
   *
   *     "organizations/[ORGANIZATION_ID]/settings"
   *
   * For example:
   *
   *   `"organizations/12345/settings"`
   *
   * Note: Settings for the Log Router can currently only be configured for
   * Google Cloud organizations. Once configured, it applies to all projects and
   * folders in the Google Cloud organization.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The settings to update.
   *
   * See [Enabling CMEK for Log
   * Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
   * for more information.
   *
   * @generated from field: google.logging.v2.Settings settings = 2;
   */
  settings?: Settings;

  /**
   * Optional. Field mask identifying which fields from `settings` should
   * be updated. A field will be overwritten if and only if it is in the update
   * mask. Output only fields cannot be updated.
   *
   * See [FieldMask][google.protobuf.FieldMask] for more information.
   *
   * For example: `"updateMask=kmsKeyName"`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.logging.v2.UpdateSettingsRequest.
 * Use `create(UpdateSettingsRequestSchema)` to create a new message.
 */
export const UpdateSettingsRequestSchema: GenMessage<UpdateSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 42);

/**
 * Describes the settings associated with a project, folder, organization,
 * billing account, or flexible resource.
 *
 * @generated from message google.logging.v2.Settings
 */
export type Settings = Message<"google.logging.v2.Settings"> & {
  /**
   * Output only. The resource name of the settings.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The resource name for the configured Cloud KMS key.
   *
   * KMS key name format:
   *
   *     "projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]"
   *
   * For example:
   *
   *   `"projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key"`
   *
   *
   *
   * To enable CMEK for the Log Router, set this field to a valid
   * `kms_key_name` for which the associated service account has the required
   * `roles/cloudkms.cryptoKeyEncrypterDecrypter` role assigned for the key.
   *
   * The Cloud KMS key used by the Log Router can be updated by changing the
   * `kms_key_name` to a new valid key name. Encryption operations that are in
   * progress will be completed with the key that was in use when they started.
   * Decryption operations will be completed using the key that was used at the
   * time of encryption unless access to that key has been revoked.
   *
   * To disable CMEK for the Log Router, set this field to an empty string.
   *
   * See [Enabling CMEK for Log
   * Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
   * for more information.
   *
   * @generated from field: string kms_key_name = 2;
   */
  kmsKeyName: string;

  /**
   * Output only. The service account that will be used by the Log Router to
   * access your Cloud KMS key.
   *
   * Before enabling CMEK for Log Router, you must first assign the role
   * `roles/cloudkms.cryptoKeyEncrypterDecrypter` to the service account that
   * the Log Router will use to access your Cloud KMS key. Use
   * [GetSettings][google.logging.v2.ConfigServiceV2.GetSettings] to
   * obtain the service account ID.
   *
   * See [Enabling CMEK for Log
   * Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
   * for more information.
   *
   * @generated from field: string kms_service_account_id = 3;
   */
  kmsServiceAccountId: string;

  /**
   * Optional. The Cloud region that will be used for _Default and _Required log
   * buckets for newly created projects and folders. For example `europe-west1`.
   * This setting does not affect the location of custom log buckets.
   *
   * @generated from field: string storage_location = 4;
   */
  storageLocation: string;

  /**
   * Optional. If set to true, the _Default sink in newly created projects and
   * folders will created in a disabled state. This can be used to automatically
   * disable log ingestion if there is already an aggregated sink configured in
   * the hierarchy. The _Default sink can be re-enabled manually if needed.
   *
   * @generated from field: bool disable_default_sink = 5;
   */
  disableDefaultSink: boolean;
};

/**
 * Describes the message google.logging.v2.Settings.
 * Use `create(SettingsSchema)` to create a new message.
 */
export const SettingsSchema: GenMessage<Settings> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 43);

/**
 * The parameters to CopyLogEntries.
 *
 * @generated from message google.logging.v2.CopyLogEntriesRequest
 */
export type CopyLogEntriesRequest = Message<"google.logging.v2.CopyLogEntriesRequest"> & {
  /**
   * Required. Log bucket from which to copy log entries.
   *
   * For example:
   *
   *   `"projects/my-project/locations/global/buckets/my-source-bucket"`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A filter specifying which log entries to copy. The filter must be
   * no more than 20k characters. An empty filter matches all log entries.
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * Required. Destination to which to copy log entries.
   *
   * @generated from field: string destination = 4;
   */
  destination: string;
};

/**
 * Describes the message google.logging.v2.CopyLogEntriesRequest.
 * Use `create(CopyLogEntriesRequestSchema)` to create a new message.
 */
export const CopyLogEntriesRequestSchema: GenMessage<CopyLogEntriesRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 44);

/**
 * Metadata for CopyLogEntries long running operations.
 *
 * @generated from message google.logging.v2.CopyLogEntriesMetadata
 */
export type CopyLogEntriesMetadata = Message<"google.logging.v2.CopyLogEntriesMetadata"> & {
  /**
   * The create time of an operation.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The end time of an operation.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * State of an operation.
   *
   * @generated from field: google.logging.v2.OperationState state = 3;
   */
  state: OperationState;

  /**
   * Identifies whether the user has requested cancellation of the operation.
   *
   * @generated from field: bool cancellation_requested = 4;
   */
  cancellationRequested: boolean;

  /**
   * CopyLogEntries RPC request.
   *
   * @generated from field: google.logging.v2.CopyLogEntriesRequest request = 5;
   */
  request?: CopyLogEntriesRequest;

  /**
   * Estimated progress of the operation (0 - 100%).
   *
   * @generated from field: int32 progress = 6;
   */
  progress: number;

  /**
   * The IAM identity of a service account that must be granted access to the
   * destination.
   *
   * If the service account is not granted permission to the destination within
   * an hour, the operation will be cancelled.
   *
   * For example: `"serviceAccount:foo@bar.com"`
   *
   * @generated from field: string writer_identity = 7;
   */
  writerIdentity: string;
};

/**
 * Describes the message google.logging.v2.CopyLogEntriesMetadata.
 * Use `create(CopyLogEntriesMetadataSchema)` to create a new message.
 */
export const CopyLogEntriesMetadataSchema: GenMessage<CopyLogEntriesMetadata> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 45);

/**
 * Response type for CopyLogEntries long running operations.
 *
 * @generated from message google.logging.v2.CopyLogEntriesResponse
 */
export type CopyLogEntriesResponse = Message<"google.logging.v2.CopyLogEntriesResponse"> & {
  /**
   * Number of log entries copied.
   *
   * @generated from field: int64 log_entries_copied_count = 1;
   */
  logEntriesCopiedCount: bigint;
};

/**
 * Describes the message google.logging.v2.CopyLogEntriesResponse.
 * Use `create(CopyLogEntriesResponseSchema)` to create a new message.
 */
export const CopyLogEntriesResponseSchema: GenMessage<CopyLogEntriesResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 46);

/**
 * Metadata for LongRunningUpdateBucket Operations.
 *
 * @generated from message google.logging.v2.BucketMetadata
 */
export type BucketMetadata = Message<"google.logging.v2.BucketMetadata"> & {
  /**
   * The create time of an operation.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The end time of an operation.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * State of an operation.
   *
   * @generated from field: google.logging.v2.OperationState state = 3;
   */
  state: OperationState;

  /**
   * @generated from oneof google.logging.v2.BucketMetadata.request
   */
  request: {
    /**
     * LongRunningCreateBucket RPC request.
     *
     * @generated from field: google.logging.v2.CreateBucketRequest create_bucket_request = 4;
     */
    value: CreateBucketRequest;
    case: "createBucketRequest";
  } | {
    /**
     * LongRunningUpdateBucket RPC request.
     *
     * @generated from field: google.logging.v2.UpdateBucketRequest update_bucket_request = 5;
     */
    value: UpdateBucketRequest;
    case: "updateBucketRequest";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.logging.v2.BucketMetadata.
 * Use `create(BucketMetadataSchema)` to create a new message.
 */
export const BucketMetadataSchema: GenMessage<BucketMetadata> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 47);

/**
 * Metadata for long running Link operations.
 *
 * @generated from message google.logging.v2.LinkMetadata
 */
export type LinkMetadata = Message<"google.logging.v2.LinkMetadata"> & {
  /**
   * The start time of an operation.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The end time of an operation.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * State of an operation.
   *
   * @generated from field: google.logging.v2.OperationState state = 3;
   */
  state: OperationState;

  /**
   * @generated from oneof google.logging.v2.LinkMetadata.request
   */
  request: {
    /**
     * CreateLink RPC request.
     *
     * @generated from field: google.logging.v2.CreateLinkRequest create_link_request = 4;
     */
    value: CreateLinkRequest;
    case: "createLinkRequest";
  } | {
    /**
     * DeleteLink RPC request.
     *
     * @generated from field: google.logging.v2.DeleteLinkRequest delete_link_request = 5;
     */
    value: DeleteLinkRequest;
    case: "deleteLinkRequest";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.logging.v2.LinkMetadata.
 * Use `create(LinkMetadataSchema)` to create a new message.
 */
export const LinkMetadataSchema: GenMessage<LinkMetadata> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 48);

/**
 * Cloud Logging specific location metadata.
 *
 * @generated from message google.logging.v2.LocationMetadata
 */
export type LocationMetadata = Message<"google.logging.v2.LocationMetadata"> & {
  /**
   * Indicates whether or not Log Analytics features are supported in the given
   * location.
   *
   * @generated from field: bool log_analytics_enabled = 1;
   */
  logAnalyticsEnabled: boolean;
};

/**
 * Describes the message google.logging.v2.LocationMetadata.
 * Use `create(LocationMetadataSchema)` to create a new message.
 */
export const LocationMetadataSchema: GenMessage<LocationMetadata> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_config, 49);

/**
 * List of different operation states.
 * High level state of the operation. This is used to report the job's
 * current state to the user. Once a long running operation is created,
 * the current state of the operation can be queried even before the
 * operation is finished and the final result is available.
 *
 * @generated from enum google.logging.v2.OperationState
 */
export enum OperationState {
  /**
   * Should not be used.
   *
   * @generated from enum value: OPERATION_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The operation is scheduled.
   *
   * @generated from enum value: OPERATION_STATE_SCHEDULED = 1;
   */
  SCHEDULED = 1,

  /**
   * Waiting for necessary permissions.
   *
   * @generated from enum value: OPERATION_STATE_WAITING_FOR_PERMISSIONS = 2;
   */
  WAITING_FOR_PERMISSIONS = 2,

  /**
   * The operation is running.
   *
   * @generated from enum value: OPERATION_STATE_RUNNING = 3;
   */
  RUNNING = 3,

  /**
   * The operation was completed successfully.
   *
   * @generated from enum value: OPERATION_STATE_SUCCEEDED = 4;
   */
  SUCCEEDED = 4,

  /**
   * The operation failed.
   *
   * @generated from enum value: OPERATION_STATE_FAILED = 5;
   */
  FAILED = 5,

  /**
   * The operation was cancelled by the user.
   *
   * @generated from enum value: OPERATION_STATE_CANCELLED = 6;
   */
  CANCELLED = 6,
}

/**
 * Describes the enum google.logging.v2.OperationState.
 */
export const OperationStateSchema: GenEnum<OperationState> = /*@__PURE__*/
  enumDesc(file_google_logging_v2_logging_config, 0);

/**
 * LogBucket lifecycle states.
 *
 * @generated from enum google.logging.v2.LifecycleState
 */
export enum LifecycleState {
  /**
   * Unspecified state. This is only used/useful for distinguishing unset
   * values.
   *
   * @generated from enum value: LIFECYCLE_STATE_UNSPECIFIED = 0;
   */
  LIFECYCLE_STATE_UNSPECIFIED = 0,

  /**
   * The normal and active state.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * The resource has been marked for deletion by the user. For some resources
   * (e.g. buckets), this can be reversed by an un-delete operation.
   *
   * @generated from enum value: DELETE_REQUESTED = 2;
   */
  DELETE_REQUESTED = 2,

  /**
   * The resource has been marked for an update by the user. It will remain in
   * this state until the update is complete.
   *
   * @generated from enum value: UPDATING = 3;
   */
  UPDATING = 3,

  /**
   * The resource has been marked for creation by the user. It will remain in
   * this state until the creation is complete.
   *
   * @generated from enum value: CREATING = 4;
   */
  CREATING = 4,

  /**
   * The resource is in an INTERNAL error state.
   *
   * @generated from enum value: FAILED = 5;
   */
  FAILED = 5,
}

/**
 * Describes the enum google.logging.v2.LifecycleState.
 */
export const LifecycleStateSchema: GenEnum<LifecycleState> = /*@__PURE__*/
  enumDesc(file_google_logging_v2_logging_config, 1);

/**
 * IndexType is used for custom indexing. It describes the type of an indexed
 * field.
 *
 * @generated from enum google.logging.v2.IndexType
 */
export enum IndexType {
  /**
   * The index's type is unspecified.
   *
   * @generated from enum value: INDEX_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The index is a string-type index.
   *
   * @generated from enum value: INDEX_TYPE_STRING = 1;
   */
  STRING = 1,

  /**
   * The index is a integer-type index.
   *
   * @generated from enum value: INDEX_TYPE_INTEGER = 2;
   */
  INTEGER = 2,
}

/**
 * Describes the enum google.logging.v2.IndexType.
 */
export const IndexTypeSchema: GenEnum<IndexType> = /*@__PURE__*/
  enumDesc(file_google_logging_v2_logging_config, 2);

/**
 * Service for configuring sinks used to route log entries.
 *
 * @generated from service google.logging.v2.ConfigServiceV2
 */
export const ConfigServiceV2: GenService<{
  /**
   * Lists log buckets.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.ListBuckets
   */
  listBuckets: {
    methodKind: "unary";
    input: typeof ListBucketsRequestSchema;
    output: typeof ListBucketsResponseSchema;
  },
  /**
   * Gets a log bucket.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.GetBucket
   */
  getBucket: {
    methodKind: "unary";
    input: typeof GetBucketRequestSchema;
    output: typeof LogBucketSchema;
  },
  /**
   * Creates a log bucket asynchronously that can be used to store log entries.
   *
   * After a bucket has been created, the bucket's location cannot be changed.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.CreateBucketAsync
   */
  createBucketAsync: {
    methodKind: "unary";
    input: typeof CreateBucketRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a log bucket asynchronously.
   *
   * If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then
   * `FAILED_PRECONDITION` will be returned.
   *
   * After a bucket has been created, the bucket's location cannot be changed.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.UpdateBucketAsync
   */
  updateBucketAsync: {
    methodKind: "unary";
    input: typeof UpdateBucketRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a log bucket that can be used to store log entries. After a bucket
   * has been created, the bucket's location cannot be changed.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.CreateBucket
   */
  createBucket: {
    methodKind: "unary";
    input: typeof CreateBucketRequestSchema;
    output: typeof LogBucketSchema;
  },
  /**
   * Updates a log bucket.
   *
   * If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then
   * `FAILED_PRECONDITION` will be returned.
   *
   * After a bucket has been created, the bucket's location cannot be changed.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.UpdateBucket
   */
  updateBucket: {
    methodKind: "unary";
    input: typeof UpdateBucketRequestSchema;
    output: typeof LogBucketSchema;
  },
  /**
   * Deletes a log bucket.
   *
   * Changes the bucket's `lifecycle_state` to the `DELETE_REQUESTED` state.
   * After 7 days, the bucket will be purged and all log entries in the bucket
   * will be permanently deleted.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.DeleteBucket
   */
  deleteBucket: {
    methodKind: "unary";
    input: typeof DeleteBucketRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Undeletes a log bucket. A bucket that has been deleted can be undeleted
   * within the grace period of 7 days.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.UndeleteBucket
   */
  undeleteBucket: {
    methodKind: "unary";
    input: typeof UndeleteBucketRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists views on a log bucket.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.ListViews
   */
  listViews: {
    methodKind: "unary";
    input: typeof ListViewsRequestSchema;
    output: typeof ListViewsResponseSchema;
  },
  /**
   * Gets a view on a log bucket..
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.GetView
   */
  getView: {
    methodKind: "unary";
    input: typeof GetViewRequestSchema;
    output: typeof LogViewSchema;
  },
  /**
   * Creates a view over log entries in a log bucket. A bucket may contain a
   * maximum of 30 views.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.CreateView
   */
  createView: {
    methodKind: "unary";
    input: typeof CreateViewRequestSchema;
    output: typeof LogViewSchema;
  },
  /**
   * Updates a view on a log bucket. This method replaces the following fields
   * in the existing view with values from the new view: `filter`.
   * If an `UNAVAILABLE` error is returned, this indicates that system is not in
   * a state where it can update the view. If this occurs, please try again in a
   * few minutes.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.UpdateView
   */
  updateView: {
    methodKind: "unary";
    input: typeof UpdateViewRequestSchema;
    output: typeof LogViewSchema;
  },
  /**
   * Deletes a view on a log bucket.
   * If an `UNAVAILABLE` error is returned, this indicates that system is not in
   * a state where it can delete the view. If this occurs, please try again in a
   * few minutes.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.DeleteView
   */
  deleteView: {
    methodKind: "unary";
    input: typeof DeleteViewRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists sinks.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.ListSinks
   */
  listSinks: {
    methodKind: "unary";
    input: typeof ListSinksRequestSchema;
    output: typeof ListSinksResponseSchema;
  },
  /**
   * Gets a sink.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.GetSink
   */
  getSink: {
    methodKind: "unary";
    input: typeof GetSinkRequestSchema;
    output: typeof LogSinkSchema;
  },
  /**
   * Creates a sink that exports specified log entries to a destination. The
   * export of newly-ingested log entries begins immediately, unless the sink's
   * `writer_identity` is not permitted to write to the destination. A sink can
   * export log entries only from the resource owning the sink.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.CreateSink
   */
  createSink: {
    methodKind: "unary";
    input: typeof CreateSinkRequestSchema;
    output: typeof LogSinkSchema;
  },
  /**
   * Updates a sink. This method replaces the following fields in the existing
   * sink with values from the new sink: `destination`, and `filter`.
   *
   * The updated sink might also have a new `writer_identity`; see the
   * `unique_writer_identity` field.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.UpdateSink
   */
  updateSink: {
    methodKind: "unary";
    input: typeof UpdateSinkRequestSchema;
    output: typeof LogSinkSchema;
  },
  /**
   * Deletes a sink. If the sink has a unique `writer_identity`, then that
   * service account is also deleted.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.DeleteSink
   */
  deleteSink: {
    methodKind: "unary";
    input: typeof DeleteSinkRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Asynchronously creates a linked dataset in BigQuery which makes it possible
   * to use BigQuery to read the logs stored in the log bucket. A log bucket may
   * currently only contain one link.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.CreateLink
   */
  createLink: {
    methodKind: "unary";
    input: typeof CreateLinkRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a link. This will also delete the corresponding BigQuery linked
   * dataset.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.DeleteLink
   */
  deleteLink: {
    methodKind: "unary";
    input: typeof DeleteLinkRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists links.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.ListLinks
   */
  listLinks: {
    methodKind: "unary";
    input: typeof ListLinksRequestSchema;
    output: typeof ListLinksResponseSchema;
  },
  /**
   * Gets a link.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.GetLink
   */
  getLink: {
    methodKind: "unary";
    input: typeof GetLinkRequestSchema;
    output: typeof LinkSchema;
  },
  /**
   * Lists all the exclusions on the _Default sink in a parent resource.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.ListExclusions
   */
  listExclusions: {
    methodKind: "unary";
    input: typeof ListExclusionsRequestSchema;
    output: typeof ListExclusionsResponseSchema;
  },
  /**
   * Gets the description of an exclusion in the _Default sink.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.GetExclusion
   */
  getExclusion: {
    methodKind: "unary";
    input: typeof GetExclusionRequestSchema;
    output: typeof LogExclusionSchema;
  },
  /**
   * Creates a new exclusion in the _Default sink in a specified parent
   * resource. Only log entries belonging to that resource can be excluded. You
   * can have up to 10 exclusions in a resource.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.CreateExclusion
   */
  createExclusion: {
    methodKind: "unary";
    input: typeof CreateExclusionRequestSchema;
    output: typeof LogExclusionSchema;
  },
  /**
   * Changes one or more properties of an existing exclusion in the _Default
   * sink.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.UpdateExclusion
   */
  updateExclusion: {
    methodKind: "unary";
    input: typeof UpdateExclusionRequestSchema;
    output: typeof LogExclusionSchema;
  },
  /**
   * Deletes an exclusion in the _Default sink.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.DeleteExclusion
   */
  deleteExclusion: {
    methodKind: "unary";
    input: typeof DeleteExclusionRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets the Logging CMEK settings for the given resource.
   *
   * Note: CMEK for the Log Router can be configured for Google Cloud projects,
   * folders, organizations and billing accounts. Once configured for an
   * organization, it applies to all projects and folders in the Google Cloud
   * organization.
   *
   * See [Enabling CMEK for Log
   * Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
   * for more information.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.GetCmekSettings
   */
  getCmekSettings: {
    methodKind: "unary";
    input: typeof GetCmekSettingsRequestSchema;
    output: typeof CmekSettingsSchema;
  },
  /**
   * Updates the Log Router CMEK settings for the given resource.
   *
   * Note: CMEK for the Log Router can currently only be configured for Google
   * Cloud organizations. Once configured, it applies to all projects and
   * folders in the Google Cloud organization.
   *
   * [UpdateCmekSettings][google.logging.v2.ConfigServiceV2.UpdateCmekSettings]
   * will fail if 1) `kms_key_name` is invalid, or 2) the associated service
   * account does not have the required
   * `roles/cloudkms.cryptoKeyEncrypterDecrypter` role assigned for the key, or
   * 3) access to the key is disabled.
   *
   * See [Enabling CMEK for Log
   * Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
   * for more information.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.UpdateCmekSettings
   */
  updateCmekSettings: {
    methodKind: "unary";
    input: typeof UpdateCmekSettingsRequestSchema;
    output: typeof CmekSettingsSchema;
  },
  /**
   * Gets the Log Router settings for the given resource.
   *
   * Note: Settings for the Log Router can be get for Google Cloud projects,
   * folders, organizations and billing accounts. Currently it can only be
   * configured for organizations. Once configured for an organization, it
   * applies to all projects and folders in the Google Cloud organization.
   *
   * See [Enabling CMEK for Log
   * Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
   * for more information.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.GetSettings
   */
  getSettings: {
    methodKind: "unary";
    input: typeof GetSettingsRequestSchema;
    output: typeof SettingsSchema;
  },
  /**
   * Updates the Log Router settings for the given resource.
   *
   * Note: Settings for the Log Router can currently only be configured for
   * Google Cloud organizations. Once configured, it applies to all projects and
   * folders in the Google Cloud organization.
   *
   * [UpdateSettings][google.logging.v2.ConfigServiceV2.UpdateSettings]
   * will fail if 1) `kms_key_name` is invalid, or 2) the associated service
   * account does not have the required
   * `roles/cloudkms.cryptoKeyEncrypterDecrypter` role assigned for the key, or
   * 3) access to the key is disabled. 4) `location_id` is not supported by
   * Logging. 5) `location_id` violate OrgPolicy.
   *
   * See [Enabling CMEK for Log
   * Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
   * for more information.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.UpdateSettings
   */
  updateSettings: {
    methodKind: "unary";
    input: typeof UpdateSettingsRequestSchema;
    output: typeof SettingsSchema;
  },
  /**
   * Copies a set of log entries from a log bucket to a Cloud Storage bucket.
   *
   * @generated from rpc google.logging.v2.ConfigServiceV2.CopyLogEntries
   */
  copyLogEntries: {
    methodKind: "unary";
    input: typeof CopyLogEntriesRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_logging_v2_logging_config, 0);

