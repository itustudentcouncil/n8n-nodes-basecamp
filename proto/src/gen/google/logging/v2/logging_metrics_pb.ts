// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/logging/v2/logging_metrics.proto (package google.logging.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import type { Distribution_BucketOptions } from "../../api/distribution_pb";
import { file_google_api_distribution } from "../../api/distribution_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import type { MetricDescriptor } from "../../api/metric_pb";
import { file_google_api_metric } from "../../api/metric_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/logging/v2/logging_metrics.proto.
 */
export const file_google_logging_v2_logging_metrics: GenFile = /*@__PURE__*/
  fileDesc("Cidnb29nbGUvbG9nZ2luZy92Mi9sb2dnaW5nX21ldHJpY3MucHJvdG8SEWdvb2dsZS5sb2dnaW5nLnYyIr0FCglMb2dNZXRyaWMSEQoEbmFtZRgBIAEoCUID4EECEhgKC2Rlc2NyaXB0aW9uGAIgASgJQgPgQQESEwoGZmlsdGVyGAMgASgJQgPgQQISGAoLYnVja2V0X25hbWUYDSABKAlCA+BBARIVCghkaXNhYmxlZBgMIAEoCEID4EEBEjwKEW1ldHJpY19kZXNjcmlwdG9yGAUgASgLMhwuZ29vZ2xlLmFwaS5NZXRyaWNEZXNjcmlwdG9yQgPgQQESHAoPdmFsdWVfZXh0cmFjdG9yGAYgASgJQgPgQQESUAoQbGFiZWxfZXh0cmFjdG9ycxgHIAMoCzIxLmdvb2dsZS5sb2dnaW5nLnYyLkxvZ01ldHJpYy5MYWJlbEV4dHJhY3RvcnNFbnRyeUID4EEBEkMKDmJ1Y2tldF9vcHRpb25zGAggASgLMiYuZ29vZ2xlLmFwaS5EaXN0cmlidXRpb24uQnVja2V0T3B0aW9uc0ID4EEBEjQKC2NyZWF0ZV90aW1lGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjwKB3ZlcnNpb24YBCABKA4yJy5nb29nbGUubG9nZ2luZy52Mi5Mb2dNZXRyaWMuQXBpVmVyc2lvbkICGAEaNgoUTGFiZWxFeHRyYWN0b3JzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIcCgpBcGlWZXJzaW9uEgYKAlYyEAASBgoCVjEQATpK6kFHCiBsb2dnaW5nLmdvb2dsZWFwaXMuY29tL0xvZ01ldHJpYxIjcHJvamVjdHMve3Byb2plY3R9L21ldHJpY3Mve21ldHJpY30ijQEKFUxpc3RMb2dNZXRyaWNzUmVxdWVzdBJDCgZwYXJlbnQYASABKAlCM+BBAvpBLQorY2xvdWRyZXNvdXJjZW1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vUHJvamVjdBIXCgpwYWdlX3Rva2VuGAIgASgJQgPgQQESFgoJcGFnZV9zaXplGAMgASgFQgPgQQEiYAoWTGlzdExvZ01ldHJpY3NSZXNwb25zZRItCgdtZXRyaWNzGAEgAygLMhwuZ29vZ2xlLmxvZ2dpbmcudjIuTG9nTWV0cmljEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJUChNHZXRMb2dNZXRyaWNSZXF1ZXN0Ej0KC21ldHJpY19uYW1lGAEgASgJQijgQQL6QSIKIGxvZ2dpbmcuZ29vZ2xlYXBpcy5jb20vTG9nTWV0cmljIoUBChZDcmVhdGVMb2dNZXRyaWNSZXF1ZXN0EjgKBnBhcmVudBgBIAEoCUIo4EEC+kEiEiBsb2dnaW5nLmdvb2dsZWFwaXMuY29tL0xvZ01ldHJpYxIxCgZtZXRyaWMYAiABKAsyHC5nb29nbGUubG9nZ2luZy52Mi5Mb2dNZXRyaWNCA+BBAiKKAQoWVXBkYXRlTG9nTWV0cmljUmVxdWVzdBI9CgttZXRyaWNfbmFtZRgBIAEoCUIo4EEC+kEiCiBsb2dnaW5nLmdvb2dsZWFwaXMuY29tL0xvZ01ldHJpYxIxCgZtZXRyaWMYAiABKAsyHC5nb29nbGUubG9nZ2luZy52Mi5Mb2dNZXRyaWNCA+BBAiJXChZEZWxldGVMb2dNZXRyaWNSZXF1ZXN0Ej0KC21ldHJpY19uYW1lGAEgASgJQijgQQL6QSIKIGxvZ2dpbmcuZ29vZ2xlYXBpcy5jb20vTG9nTWV0cmljMq4IChBNZXRyaWNzU2VydmljZVYyEpcBCg5MaXN0TG9nTWV0cmljcxIoLmdvb2dsZS5sb2dnaW5nLnYyLkxpc3RMb2dNZXRyaWNzUmVxdWVzdBopLmdvb2dsZS5sb2dnaW5nLnYyLkxpc3RMb2dNZXRyaWNzUmVzcG9uc2UiMNpBBnBhcmVudILT5JMCIRIfL3YyL3twYXJlbnQ9cHJvamVjdHMvKn0vbWV0cmljcxKSAQoMR2V0TG9nTWV0cmljEiYuZ29vZ2xlLmxvZ2dpbmcudjIuR2V0TG9nTWV0cmljUmVxdWVzdBocLmdvb2dsZS5sb2dnaW5nLnYyLkxvZ01ldHJpYyI82kELbWV0cmljX25hbWWC0+STAigSJi92Mi97bWV0cmljX25hbWU9cHJvamVjdHMvKi9tZXRyaWNzLyp9EpsBCg9DcmVhdGVMb2dNZXRyaWMSKS5nb29nbGUubG9nZ2luZy52Mi5DcmVhdGVMb2dNZXRyaWNSZXF1ZXN0GhwuZ29vZ2xlLmxvZ2dpbmcudjIuTG9nTWV0cmljIj/aQQ1wYXJlbnQsbWV0cmljgtPkkwIpOgZtZXRyaWMiHy92Mi97cGFyZW50PXByb2plY3RzLyp9L21ldHJpY3MSpwEKD1VwZGF0ZUxvZ01ldHJpYxIpLmdvb2dsZS5sb2dnaW5nLnYyLlVwZGF0ZUxvZ01ldHJpY1JlcXVlc3QaHC5nb29nbGUubG9nZ2luZy52Mi5Mb2dNZXRyaWMiS9pBEm1ldHJpY19uYW1lLG1ldHJpY4LT5JMCMDoGbWV0cmljGiYvdjIve21ldHJpY19uYW1lPXByb2plY3RzLyovbWV0cmljcy8qfRKSAQoPRGVsZXRlTG9nTWV0cmljEikuZ29vZ2xlLmxvZ2dpbmcudjIuRGVsZXRlTG9nTWV0cmljUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSI82kELbWV0cmljX25hbWWC0+STAigqJi92Mi97bWV0cmljX25hbWU9cHJvamVjdHMvKi9tZXRyaWNzLyp9Go0CykEWbG9nZ2luZy5nb29nbGVhcGlzLmNvbdJB8AFodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0ucmVhZC1vbmx5LGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvbG9nZ2luZy5hZG1pbixodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2xvZ2dpbmcucmVhZCxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2xvZ2dpbmcud3JpdGVCuQEKFWNvbS5nb29nbGUubG9nZ2luZy52MkITTG9nZ2luZ01ldHJpY3NQcm90b1ABWjVjbG91ZC5nb29nbGUuY29tL2dvL2xvZ2dpbmcvYXBpdjIvbG9nZ2luZ3BiO2xvZ2dpbmdwYvgBAaoCF0dvb2dsZS5DbG91ZC5Mb2dnaW5nLlYyygIXR29vZ2xlXENsb3VkXExvZ2dpbmdcVjLqAhpHb29nbGU6OkNsb3VkOjpMb2dnaW5nOjpWMmIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_distribution, file_google_api_field_behavior, file_google_api_metric, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_timestamp]);

/**
 * Describes a logs-based metric. The value of the metric is the number of log
 * entries that match a logs filter in a given time interval.
 *
 * Logs-based metrics can also be used to extract values from logs and create a
 * distribution of the values. The distribution records the statistics of the
 * extracted values along with an optional histogram of the values as specified
 * by the bucket options.
 *
 * @generated from message google.logging.v2.LogMetric
 */
export type LogMetric = Message<"google.logging.v2.LogMetric"> & {
  /**
   * Required. The client-assigned metric identifier.
   * Examples: `"error_count"`, `"nginx/requests"`.
   *
   * Metric identifiers are limited to 100 characters and can include only the
   * following characters: `A-Z`, `a-z`, `0-9`, and the special characters
   * `_-.,+!*',()%/`. The forward-slash character (`/`) denotes a hierarchy of
   * name pieces, and it cannot be the first character of the name.
   *
   * This field is the `[METRIC_ID]` part of a metric resource name in the
   * format "projects/[PROJECT_ID]/metrics/[METRIC_ID]". Example: If the
   * resource name of a metric is
   * `"projects/my-project/metrics/nginx%2Frequests"`, this field's value is
   * `"nginx/requests"`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A description of this metric, which is used in documentation.
   * The maximum length of the description is 8000 characters.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Required. An [advanced logs
   * filter](https://cloud.google.com/logging/docs/view/advanced_filters) which
   * is used to match log entries. Example:
   *
   *     "resource.type=gae_app AND severity>=ERROR"
   *
   * The maximum length of the filter is 20000 characters.
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * Optional. The resource name of the Log Bucket that owns the Log Metric.
   * Only Log Buckets in projects are supported. The bucket has to be in the
   * same project as the metric.
   *
   * For example:
   *
   *   `projects/my-project/locations/global/buckets/my-bucket`
   *
   * If empty, then the Log Metric is considered a non-Bucket Log Metric.
   *
   * @generated from field: string bucket_name = 13;
   */
  bucketName: string;

  /**
   * Optional. If set to True, then this metric is disabled and it does not
   * generate any points.
   *
   * @generated from field: bool disabled = 12;
   */
  disabled: boolean;

  /**
   * Optional. The metric descriptor associated with the logs-based metric.
   * If unspecified, it uses a default metric descriptor with a DELTA metric
   * kind, INT64 value type, with no labels and a unit of "1". Such a metric
   * counts the number of log entries matching the `filter` expression.
   *
   * The `name`, `type`, and `description` fields in the `metric_descriptor`
   * are output only, and is constructed using the `name` and `description`
   * field in the LogMetric.
   *
   * To create a logs-based metric that records a distribution of log values, a
   * DELTA metric kind with a DISTRIBUTION value type must be used along with
   * a `value_extractor` expression in the LogMetric.
   *
   * Each label in the metric descriptor must have a matching label
   * name as the key and an extractor expression as the value in the
   * `label_extractors` map.
   *
   * The `metric_kind` and `value_type` fields in the `metric_descriptor` cannot
   * be updated once initially configured. New labels can be added in the
   * `metric_descriptor`, but existing labels cannot be modified except for
   * their description.
   *
   * @generated from field: google.api.MetricDescriptor metric_descriptor = 5;
   */
  metricDescriptor?: MetricDescriptor;

  /**
   * Optional. A `value_extractor` is required when using a distribution
   * logs-based metric to extract the values to record from a log entry.
   * Two functions are supported for value extraction: `EXTRACT(field)` or
   * `REGEXP_EXTRACT(field, regex)`. The arguments are:
   *
   *   1. field: The name of the log entry field from which the value is to be
   *      extracted.
   *   2. regex: A regular expression using the Google RE2 syntax
   *      (https://github.com/google/re2/wiki/Syntax) with a single capture
   *      group to extract data from the specified log entry field. The value
   *      of the field is converted to a string before applying the regex.
   *      It is an error to specify a regex that does not include exactly one
   *      capture group.
   *
   * The result of the extraction must be convertible to a double type, as the
   * distribution always records double values. If either the extraction or
   * the conversion to double fails, then those values are not recorded in the
   * distribution.
   *
   * Example: `REGEXP_EXTRACT(jsonPayload.request, ".*quantity=(\d+).*")`
   *
   * @generated from field: string value_extractor = 6;
   */
  valueExtractor: string;

  /**
   * Optional. A map from a label key string to an extractor expression which is
   * used to extract data from a log entry field and assign as the label value.
   * Each label key specified in the LabelDescriptor must have an associated
   * extractor expression in this map. The syntax of the extractor expression
   * is the same as for the `value_extractor` field.
   *
   * The extracted value is converted to the type defined in the label
   * descriptor. If either the extraction or the type conversion fails,
   * the label will have a default value. The default value for a string
   * label is an empty string, for an integer label its 0, and for a boolean
   * label its `false`.
   *
   * Note that there are upper bounds on the maximum number of labels and the
   * number of active time series that are allowed in a project.
   *
   * @generated from field: map<string, string> label_extractors = 7;
   */
  labelExtractors: { [key: string]: string };

  /**
   * Optional. The `bucket_options` are required when the logs-based metric is
   * using a DISTRIBUTION value type and it describes the bucket boundaries
   * used to create a histogram of the extracted values.
   *
   * @generated from field: google.api.Distribution.BucketOptions bucket_options = 8;
   */
  bucketOptions?: Distribution_BucketOptions;

  /**
   * Output only. The creation timestamp of the metric.
   *
   * This field may not be present for older metrics.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 9;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last update timestamp of the metric.
   *
   * This field may not be present for older metrics.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 10;
   */
  updateTime?: Timestamp;

  /**
   * Deprecated. The API version that created or updated this metric.
   * The v2 format is used by default and cannot be changed.
   *
   * @generated from field: google.logging.v2.LogMetric.ApiVersion version = 4 [deprecated = true];
   * @deprecated
   */
  version: LogMetric_ApiVersion;
};

/**
 * Describes the message google.logging.v2.LogMetric.
 * Use `create(LogMetricSchema)` to create a new message.
 */
export const LogMetricSchema: GenMessage<LogMetric> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_metrics, 0);

/**
 * Logging API version.
 *
 * @generated from enum google.logging.v2.LogMetric.ApiVersion
 */
export enum LogMetric_ApiVersion {
  /**
   * Logging API v2.
   *
   * @generated from enum value: V2 = 0;
   */
  V2 = 0,

  /**
   * Logging API v1.
   *
   * @generated from enum value: V1 = 1;
   */
  V1 = 1,
}

/**
 * Describes the enum google.logging.v2.LogMetric.ApiVersion.
 */
export const LogMetric_ApiVersionSchema: GenEnum<LogMetric_ApiVersion> = /*@__PURE__*/
  enumDesc(file_google_logging_v2_logging_metrics, 0, 0);

/**
 * The parameters to ListLogMetrics.
 *
 * @generated from message google.logging.v2.ListLogMetricsRequest
 */
export type ListLogMetricsRequest = Message<"google.logging.v2.ListLogMetricsRequest"> & {
  /**
   * Required. The name of the project containing the metrics:
   *
   *     "projects/[PROJECT_ID]"
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. If present, then retrieve the next batch of results from the
   * preceding call to this method. `pageToken` must be the value of
   * `nextPageToken` from the previous response. The values of other method
   * parameters should be identical to those in the previous call.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Optional. The maximum number of results to return from this request.
   * Non-positive values are ignored. The presence of `nextPageToken` in the
   * response indicates that more results might be available.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;
};

/**
 * Describes the message google.logging.v2.ListLogMetricsRequest.
 * Use `create(ListLogMetricsRequestSchema)` to create a new message.
 */
export const ListLogMetricsRequestSchema: GenMessage<ListLogMetricsRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_metrics, 1);

/**
 * Result returned from ListLogMetrics.
 *
 * @generated from message google.logging.v2.ListLogMetricsResponse
 */
export type ListLogMetricsResponse = Message<"google.logging.v2.ListLogMetricsResponse"> & {
  /**
   * A list of logs-based metrics.
   *
   * @generated from field: repeated google.logging.v2.LogMetric metrics = 1;
   */
  metrics: LogMetric[];

  /**
   * If there might be more results than appear in this response, then
   * `nextPageToken` is included. To get the next set of results, call this
   * method again using the value of `nextPageToken` as `pageToken`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.logging.v2.ListLogMetricsResponse.
 * Use `create(ListLogMetricsResponseSchema)` to create a new message.
 */
export const ListLogMetricsResponseSchema: GenMessage<ListLogMetricsResponse> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_metrics, 2);

/**
 * The parameters to GetLogMetric.
 *
 * @generated from message google.logging.v2.GetLogMetricRequest
 */
export type GetLogMetricRequest = Message<"google.logging.v2.GetLogMetricRequest"> & {
  /**
   * Required. The resource name of the desired metric:
   *
   *     "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
   *
   * @generated from field: string metric_name = 1;
   */
  metricName: string;
};

/**
 * Describes the message google.logging.v2.GetLogMetricRequest.
 * Use `create(GetLogMetricRequestSchema)` to create a new message.
 */
export const GetLogMetricRequestSchema: GenMessage<GetLogMetricRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_metrics, 3);

/**
 * The parameters to CreateLogMetric.
 *
 * @generated from message google.logging.v2.CreateLogMetricRequest
 */
export type CreateLogMetricRequest = Message<"google.logging.v2.CreateLogMetricRequest"> & {
  /**
   * Required. The resource name of the project in which to create the metric:
   *
   *     "projects/[PROJECT_ID]"
   *
   * The new metric must be provided in the request.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The new logs-based metric, which must not have an identifier that
   * already exists.
   *
   * @generated from field: google.logging.v2.LogMetric metric = 2;
   */
  metric?: LogMetric;
};

/**
 * Describes the message google.logging.v2.CreateLogMetricRequest.
 * Use `create(CreateLogMetricRequestSchema)` to create a new message.
 */
export const CreateLogMetricRequestSchema: GenMessage<CreateLogMetricRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_metrics, 4);

/**
 * The parameters to UpdateLogMetric.
 *
 * @generated from message google.logging.v2.UpdateLogMetricRequest
 */
export type UpdateLogMetricRequest = Message<"google.logging.v2.UpdateLogMetricRequest"> & {
  /**
   * Required. The resource name of the metric to update:
   *
   *     "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
   *
   * The updated metric must be provided in the request and it's
   * `name` field must be the same as `[METRIC_ID]` If the metric
   * does not exist in `[PROJECT_ID]`, then a new metric is created.
   *
   * @generated from field: string metric_name = 1;
   */
  metricName: string;

  /**
   * Required. The updated metric.
   *
   * @generated from field: google.logging.v2.LogMetric metric = 2;
   */
  metric?: LogMetric;
};

/**
 * Describes the message google.logging.v2.UpdateLogMetricRequest.
 * Use `create(UpdateLogMetricRequestSchema)` to create a new message.
 */
export const UpdateLogMetricRequestSchema: GenMessage<UpdateLogMetricRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_metrics, 5);

/**
 * The parameters to DeleteLogMetric.
 *
 * @generated from message google.logging.v2.DeleteLogMetricRequest
 */
export type DeleteLogMetricRequest = Message<"google.logging.v2.DeleteLogMetricRequest"> & {
  /**
   * Required. The resource name of the metric to delete:
   *
   *     "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
   *
   * @generated from field: string metric_name = 1;
   */
  metricName: string;
};

/**
 * Describes the message google.logging.v2.DeleteLogMetricRequest.
 * Use `create(DeleteLogMetricRequestSchema)` to create a new message.
 */
export const DeleteLogMetricRequestSchema: GenMessage<DeleteLogMetricRequest> = /*@__PURE__*/
  messageDesc(file_google_logging_v2_logging_metrics, 6);

/**
 * Service for configuring logs-based metrics.
 *
 * @generated from service google.logging.v2.MetricsServiceV2
 */
export const MetricsServiceV2: GenService<{
  /**
   * Lists logs-based metrics.
   *
   * @generated from rpc google.logging.v2.MetricsServiceV2.ListLogMetrics
   */
  listLogMetrics: {
    methodKind: "unary";
    input: typeof ListLogMetricsRequestSchema;
    output: typeof ListLogMetricsResponseSchema;
  },
  /**
   * Gets a logs-based metric.
   *
   * @generated from rpc google.logging.v2.MetricsServiceV2.GetLogMetric
   */
  getLogMetric: {
    methodKind: "unary";
    input: typeof GetLogMetricRequestSchema;
    output: typeof LogMetricSchema;
  },
  /**
   * Creates a logs-based metric.
   *
   * @generated from rpc google.logging.v2.MetricsServiceV2.CreateLogMetric
   */
  createLogMetric: {
    methodKind: "unary";
    input: typeof CreateLogMetricRequestSchema;
    output: typeof LogMetricSchema;
  },
  /**
   * Creates or updates a logs-based metric.
   *
   * @generated from rpc google.logging.v2.MetricsServiceV2.UpdateLogMetric
   */
  updateLogMetric: {
    methodKind: "unary";
    input: typeof UpdateLogMetricRequestSchema;
    output: typeof LogMetricSchema;
  },
  /**
   * Deletes a logs-based metric.
   *
   * @generated from rpc google.logging.v2.MetricsServiceV2.DeleteLogMetric
   */
  deleteLogMetric: {
    methodKind: "unary";
    input: typeof DeleteLogMetricRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_logging_v2_logging_metrics, 0);

