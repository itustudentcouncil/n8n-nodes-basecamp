// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/logging/type/log_severity.proto (package google.logging.type, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc } from "@bufbuild/protobuf/codegenv1";

/**
 * Describes the file google/logging/type/log_severity.proto.
 */
export const file_google_logging_type_log_severity: GenFile = /*@__PURE__*/
  fileDesc("CiZnb29nbGUvbG9nZ2luZy90eXBlL2xvZ19zZXZlcml0eS5wcm90bxITZ29vZ2xlLmxvZ2dpbmcudHlwZSqCAQoLTG9nU2V2ZXJpdHkSCwoHREVGQVVMVBAAEgkKBURFQlVHEGQSCQoESU5GTxDIARILCgZOT1RJQ0UQrAISDAoHV0FSTklORxCQAxIKCgVFUlJPUhD0AxINCghDUklUSUNBTBDYBBIKCgVBTEVSVBC8BRIOCglFTUVSR0VOQ1kQoAZCxQEKF2NvbS5nb29nbGUubG9nZ2luZy50eXBlQhBMb2dTZXZlcml0eVByb3RvUAFaOGdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvbG9nZ2luZy90eXBlO2x0eXBlogIER0xPR6oCGUdvb2dsZS5DbG91ZC5Mb2dnaW5nLlR5cGXKAhlHb29nbGVcQ2xvdWRcTG9nZ2luZ1xUeXBl6gIcR29vZ2xlOjpDbG91ZDo6TG9nZ2luZzo6VHlwZWIGcHJvdG8z");

/**
 * The severity of the event described in a log entry, expressed as one of the
 * standard severity levels listed below.  For your reference, the levels are
 * assigned the listed numeric values. The effect of using numeric values other
 * than those listed is undefined.
 *
 * You can filter for log entries by severity.  For example, the following
 * filter expression will match log entries with severities `INFO`, `NOTICE`,
 * and `WARNING`:
 *
 *     severity > DEBUG AND severity <= WARNING
 *
 * If you are writing log entries, you should map other severity encodings to
 * one of these standard levels. For example, you might map all of Java's FINE,
 * FINER, and FINEST levels to `LogSeverity.DEBUG`. You can preserve the
 * original severity level in the log entry payload if you wish.
 *
 * @generated from enum google.logging.type.LogSeverity
 */
export enum LogSeverity {
  /**
   * (0) The log entry has no assigned severity level.
   *
   * @generated from enum value: DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * (100) Debug or trace information.
   *
   * @generated from enum value: DEBUG = 100;
   */
  DEBUG = 100,

  /**
   * (200) Routine information, such as ongoing status or performance.
   *
   * @generated from enum value: INFO = 200;
   */
  INFO = 200,

  /**
   * (300) Normal but significant events, such as start up, shut down, or
   * a configuration change.
   *
   * @generated from enum value: NOTICE = 300;
   */
  NOTICE = 300,

  /**
   * (400) Warning events might cause problems.
   *
   * @generated from enum value: WARNING = 400;
   */
  WARNING = 400,

  /**
   * (500) Error events are likely to cause problems.
   *
   * @generated from enum value: ERROR = 500;
   */
  ERROR = 500,

  /**
   * (600) Critical events cause more severe problems or outages.
   *
   * @generated from enum value: CRITICAL = 600;
   */
  CRITICAL = 600,

  /**
   * (700) A person must take an action immediately.
   *
   * @generated from enum value: ALERT = 700;
   */
  ALERT = 700,

  /**
   * (800) One or more systems are unusable.
   *
   * @generated from enum value: EMERGENCY = 800;
   */
  EMERGENCY = 800,
}

/**
 * Describes the enum google.logging.type.LogSeverity.
 */
export const LogSeveritySchema: GenEnum<LogSeverity> = /*@__PURE__*/
  enumDesc(file_google_logging_type_log_severity, 0);

