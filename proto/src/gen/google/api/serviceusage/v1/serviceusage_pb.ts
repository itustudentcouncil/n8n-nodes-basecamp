// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/api/serviceusage/v1/serviceusage.proto (package google.api.serviceusage.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../annotations_pb";
import { file_google_api_client } from "../../client_pb";
import type { Service, ServiceSchema } from "./resources_pb";
import { file_google_api_serviceusage_v1_resources } from "./resources_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/api/serviceusage/v1/serviceusage.proto.
 */
export const file_google_api_serviceusage_v1_serviceusage: GenFile = /*@__PURE__*/
  fileDesc("Ci1nb29nbGUvYXBpL3NlcnZpY2V1c2FnZS92MS9zZXJ2aWNldXNhZ2UucHJvdG8SGmdvb2dsZS5hcGkuc2VydmljZXVzYWdlLnYxIiQKFEVuYWJsZVNlcnZpY2VSZXF1ZXN0EgwKBG5hbWUYASABKAkiTQoVRW5hYmxlU2VydmljZVJlc3BvbnNlEjQKB3NlcnZpY2UYASABKAsyIy5nb29nbGUuYXBpLnNlcnZpY2V1c2FnZS52MS5TZXJ2aWNlIpICChVEaXNhYmxlU2VydmljZVJlcXVlc3QSDAoEbmFtZRgBIAEoCRIiChpkaXNhYmxlX2RlcGVuZGVudF9zZXJ2aWNlcxgCIAEoCBJsChpjaGVja19pZl9zZXJ2aWNlX2hhc191c2FnZRgDIAEoDjJILmdvb2dsZS5hcGkuc2VydmljZXVzYWdlLnYxLkRpc2FibGVTZXJ2aWNlUmVxdWVzdC5DaGVja0lmU2VydmljZUhhc1VzYWdlIlkKFkNoZWNrSWZTZXJ2aWNlSGFzVXNhZ2USKgomQ0hFQ0tfSUZfU0VSVklDRV9IQVNfVVNBR0VfVU5TUEVDSUZJRUQQABIICgRTS0lQEAESCQoFQ0hFQ0sQAiJOChZEaXNhYmxlU2VydmljZVJlc3BvbnNlEjQKB3NlcnZpY2UYASABKAsyIy5nb29nbGUuYXBpLnNlcnZpY2V1c2FnZS52MS5TZXJ2aWNlIiEKEUdldFNlcnZpY2VSZXF1ZXN0EgwKBG5hbWUYASABKAkiXAoTTGlzdFNlcnZpY2VzUmVxdWVzdBIOCgZwYXJlbnQYASABKAkSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkSDgoGZmlsdGVyGAQgASgJImYKFExpc3RTZXJ2aWNlc1Jlc3BvbnNlEjUKCHNlcnZpY2VzGAEgAygLMiMuZ29vZ2xlLmFwaS5zZXJ2aWNldXNhZ2UudjEuU2VydmljZRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiQQoaQmF0Y2hFbmFibGVTZXJ2aWNlc1JlcXVlc3QSDgoGcGFyZW50GAEgASgJEhMKC3NlcnZpY2VfaWRzGAIgAygJIukBChtCYXRjaEVuYWJsZVNlcnZpY2VzUmVzcG9uc2USNQoIc2VydmljZXMYASADKAsyIy5nb29nbGUuYXBpLnNlcnZpY2V1c2FnZS52MS5TZXJ2aWNlElcKCGZhaWx1cmVzGAIgAygLMkUuZ29vZ2xlLmFwaS5zZXJ2aWNldXNhZ2UudjEuQmF0Y2hFbmFibGVTZXJ2aWNlc1Jlc3BvbnNlLkVuYWJsZUZhaWx1cmUaOgoNRW5hYmxlRmFpbHVyZRISCgpzZXJ2aWNlX2lkGAEgASgJEhUKDWVycm9yX21lc3NhZ2UYAiABKAkiOAoXQmF0Y2hHZXRTZXJ2aWNlc1JlcXVlc3QSDgoGcGFyZW50GAEgASgJEg0KBW5hbWVzGAIgAygJIlEKGEJhdGNoR2V0U2VydmljZXNSZXNwb25zZRI1CghzZXJ2aWNlcxgBIAMoCzIjLmdvb2dsZS5hcGkuc2VydmljZXVzYWdlLnYxLlNlcnZpY2Uy6AkKDFNlcnZpY2VVc2FnZRK6AQoNRW5hYmxlU2VydmljZRIwLmdvb2dsZS5hcGkuc2VydmljZXVzYWdlLnYxLkVuYWJsZVNlcnZpY2VSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJYykEqChVFbmFibGVTZXJ2aWNlUmVzcG9uc2USEU9wZXJhdGlvbk1ldGFkYXRhgtPkkwIlOgEqIiAvdjEve25hbWU9Ki8qL3NlcnZpY2VzLyp9OmVuYWJsZRK+AQoORGlzYWJsZVNlcnZpY2USMS5nb29nbGUuYXBpLnNlcnZpY2V1c2FnZS52MS5EaXNhYmxlU2VydmljZVJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIlrKQSsKFkRpc2FibGVTZXJ2aWNlUmVzcG9uc2USEU9wZXJhdGlvbk1ldGFkYXRhgtPkkwImOgEqIiEvdjEve25hbWU9Ki8qL3NlcnZpY2VzLyp9OmRpc2FibGUSgwEKCkdldFNlcnZpY2USLS5nb29nbGUuYXBpLnNlcnZpY2V1c2FnZS52MS5HZXRTZXJ2aWNlUmVxdWVzdBojLmdvb2dsZS5hcGkuc2VydmljZXVzYWdlLnYxLlNlcnZpY2UiIYLT5JMCGxIZL3YxL3tuYW1lPSovKi9zZXJ2aWNlcy8qfRKUAQoMTGlzdFNlcnZpY2VzEi8uZ29vZ2xlLmFwaS5zZXJ2aWNldXNhZ2UudjEuTGlzdFNlcnZpY2VzUmVxdWVzdBowLmdvb2dsZS5hcGkuc2VydmljZXVzYWdlLnYxLkxpc3RTZXJ2aWNlc1Jlc3BvbnNlIiGC0+STAhsSGS92MS97cGFyZW50PSovKn0vc2VydmljZXMS0QEKE0JhdGNoRW5hYmxlU2VydmljZXMSNi5nb29nbGUuYXBpLnNlcnZpY2V1c2FnZS52MS5CYXRjaEVuYWJsZVNlcnZpY2VzUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iY8pBMAobQmF0Y2hFbmFibGVTZXJ2aWNlc1Jlc3BvbnNlEhFPcGVyYXRpb25NZXRhZGF0YYLT5JMCKjoBKiIlL3YxL3twYXJlbnQ9Ki8qfS9zZXJ2aWNlczpiYXRjaEVuYWJsZRKpAQoQQmF0Y2hHZXRTZXJ2aWNlcxIzLmdvb2dsZS5hcGkuc2VydmljZXVzYWdlLnYxLkJhdGNoR2V0U2VydmljZXNSZXF1ZXN0GjQuZ29vZ2xlLmFwaS5zZXJ2aWNldXNhZ2UudjEuQmF0Y2hHZXRTZXJ2aWNlc1Jlc3BvbnNlIiqC0+STAiQSIi92MS97cGFyZW50PSovKn0vc2VydmljZXM6YmF0Y2hHZXQavAHKQRtzZXJ2aWNldXNhZ2UuZ29vZ2xlYXBpcy5jb23SQZoBaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLnJlYWQtb25seSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL3NlcnZpY2UubWFuYWdlbWVudELbAQoeY29tLmdvb2dsZS5hcGkuc2VydmljZXVzYWdlLnYxQhFTZXJ2aWNlVXNhZ2VQcm90b1ABWkRjbG91ZC5nb29nbGUuY29tL2dvL3NlcnZpY2V1c2FnZS9hcGl2MS9zZXJ2aWNldXNhZ2VwYjtzZXJ2aWNldXNhZ2VwYqoCHEdvb2dsZS5DbG91ZC5TZXJ2aWNlVXNhZ2UuVjHKAhxHb29nbGVcQ2xvdWRcU2VydmljZVVzYWdlXFYx6gIfR29vZ2xlOjpDbG91ZDo6U2VydmljZVVzYWdlOjpWMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_serviceusage_v1_resources, file_google_longrunning_operations]);

/**
 * Request message for the `EnableService` method.
 *
 * @generated from message google.api.serviceusage.v1.EnableServiceRequest
 */
export type EnableServiceRequest = Message<"google.api.serviceusage.v1.EnableServiceRequest"> & {
  /**
   * Name of the consumer and service to enable the service on.
   *
   * The `EnableService` and `DisableService` methods currently only support
   * projects.
   *
   * Enabling a service requires that the service is public or is shared with
   * the user enabling the service.
   *
   * An example name would be:
   * `projects/123/services/serviceusage.googleapis.com` where `123` is the
   * project number.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.api.serviceusage.v1.EnableServiceRequest.
 * Use `create(EnableServiceRequestSchema)` to create a new message.
 */
export const EnableServiceRequestSchema: GenMessage<EnableServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 0);

/**
 * Response message for the `EnableService` method.
 * This response message is assigned to the `response` field of the returned
 * Operation when that operation is done.
 *
 * @generated from message google.api.serviceusage.v1.EnableServiceResponse
 */
export type EnableServiceResponse = Message<"google.api.serviceusage.v1.EnableServiceResponse"> & {
  /**
   * The new state of the service after enabling.
   *
   * @generated from field: google.api.serviceusage.v1.Service service = 1;
   */
  service?: Service;
};

/**
 * Describes the message google.api.serviceusage.v1.EnableServiceResponse.
 * Use `create(EnableServiceResponseSchema)` to create a new message.
 */
export const EnableServiceResponseSchema: GenMessage<EnableServiceResponse> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 1);

/**
 * Request message for the `DisableService` method.
 *
 * @generated from message google.api.serviceusage.v1.DisableServiceRequest
 */
export type DisableServiceRequest = Message<"google.api.serviceusage.v1.DisableServiceRequest"> & {
  /**
   * Name of the consumer and service to disable the service on.
   *
   * The enable and disable methods currently only support projects.
   *
   * An example name would be:
   * `projects/123/services/serviceusage.googleapis.com` where `123` is the
   * project number.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Indicates if services that are enabled and which depend on this service
   * should also be disabled. If not set, an error will be generated if any
   * enabled services depend on the service to be disabled. When set, the
   * service, and any enabled services that depend on it, will be disabled
   * together.
   *
   * @generated from field: bool disable_dependent_services = 2;
   */
  disableDependentServices: boolean;

  /**
   * Defines the behavior for checking service usage when disabling a service.
   *
   * @generated from field: google.api.serviceusage.v1.DisableServiceRequest.CheckIfServiceHasUsage check_if_service_has_usage = 3;
   */
  checkIfServiceHasUsage: DisableServiceRequest_CheckIfServiceHasUsage;
};

/**
 * Describes the message google.api.serviceusage.v1.DisableServiceRequest.
 * Use `create(DisableServiceRequestSchema)` to create a new message.
 */
export const DisableServiceRequestSchema: GenMessage<DisableServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 2);

/**
 * Enum to determine if service usage should be checked when disabling a
 * service.
 *
 * @generated from enum google.api.serviceusage.v1.DisableServiceRequest.CheckIfServiceHasUsage
 */
export enum DisableServiceRequest_CheckIfServiceHasUsage {
  /**
   * When unset, the default behavior is used, which is SKIP.
   *
   * @generated from enum value: CHECK_IF_SERVICE_HAS_USAGE_UNSPECIFIED = 0;
   */
  CHECK_IF_SERVICE_HAS_USAGE_UNSPECIFIED = 0,

  /**
   * If set, skip checking service usage when disabling a service.
   *
   * @generated from enum value: SKIP = 1;
   */
  SKIP = 1,

  /**
   * If set, service usage is checked when disabling the service. If a
   * service, or its dependents, has usage in the last 30 days, the request
   * returns a FAILED_PRECONDITION error.
   *
   * @generated from enum value: CHECK = 2;
   */
  CHECK = 2,
}

/**
 * Describes the enum google.api.serviceusage.v1.DisableServiceRequest.CheckIfServiceHasUsage.
 */
export const DisableServiceRequest_CheckIfServiceHasUsageSchema: GenEnum<DisableServiceRequest_CheckIfServiceHasUsage> = /*@__PURE__*/
  enumDesc(file_google_api_serviceusage_v1_serviceusage, 2, 0);

/**
 * Response message for the `DisableService` method.
 * This response message is assigned to the `response` field of the returned
 * Operation when that operation is done.
 *
 * @generated from message google.api.serviceusage.v1.DisableServiceResponse
 */
export type DisableServiceResponse = Message<"google.api.serviceusage.v1.DisableServiceResponse"> & {
  /**
   * The new state of the service after disabling.
   *
   * @generated from field: google.api.serviceusage.v1.Service service = 1;
   */
  service?: Service;
};

/**
 * Describes the message google.api.serviceusage.v1.DisableServiceResponse.
 * Use `create(DisableServiceResponseSchema)` to create a new message.
 */
export const DisableServiceResponseSchema: GenMessage<DisableServiceResponse> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 3);

/**
 * Request message for the `GetService` method.
 *
 * @generated from message google.api.serviceusage.v1.GetServiceRequest
 */
export type GetServiceRequest = Message<"google.api.serviceusage.v1.GetServiceRequest"> & {
  /**
   * Name of the consumer and service to get the `ConsumerState` for.
   *
   * An example name would be:
   * `projects/123/services/serviceusage.googleapis.com` where `123` is the
   * project number.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.api.serviceusage.v1.GetServiceRequest.
 * Use `create(GetServiceRequestSchema)` to create a new message.
 */
export const GetServiceRequestSchema: GenMessage<GetServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 4);

/**
 * Request message for the `ListServices` method.
 *
 * @generated from message google.api.serviceusage.v1.ListServicesRequest
 */
export type ListServicesRequest = Message<"google.api.serviceusage.v1.ListServicesRequest"> & {
  /**
   * Parent to search for services on.
   *
   * An example name would be:
   * `projects/123` where `123` is the project number.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested size of the next page of data.
   * Requested page size cannot exceed 200.
   * If not set, the default page size is 50.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Token identifying which result to start with, which is returned by a
   * previous list call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Only list services that conform to the given filter.
   * The allowed filter strings are `state:ENABLED` and `state:DISABLED`.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.api.serviceusage.v1.ListServicesRequest.
 * Use `create(ListServicesRequestSchema)` to create a new message.
 */
export const ListServicesRequestSchema: GenMessage<ListServicesRequest> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 5);

/**
 * Response message for the `ListServices` method.
 *
 * @generated from message google.api.serviceusage.v1.ListServicesResponse
 */
export type ListServicesResponse = Message<"google.api.serviceusage.v1.ListServicesResponse"> & {
  /**
   * The available services for the requested project.
   *
   * @generated from field: repeated google.api.serviceusage.v1.Service services = 1;
   */
  services: Service[];

  /**
   * Token that can be passed to `ListServices` to resume a paginated
   * query.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.api.serviceusage.v1.ListServicesResponse.
 * Use `create(ListServicesResponseSchema)` to create a new message.
 */
export const ListServicesResponseSchema: GenMessage<ListServicesResponse> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 6);

/**
 * Request message for the `BatchEnableServices` method.
 *
 * @generated from message google.api.serviceusage.v1.BatchEnableServicesRequest
 */
export type BatchEnableServicesRequest = Message<"google.api.serviceusage.v1.BatchEnableServicesRequest"> & {
  /**
   * Parent to enable services on.
   *
   * An example name would be:
   * `projects/123` where `123` is the project number.
   *
   * The `BatchEnableServices` method currently only supports projects.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The identifiers of the services to enable on the project.
   *
   * A valid identifier would be:
   * serviceusage.googleapis.com
   *
   * Enabling services requires that each service is public or is shared with
   * the user enabling the service.
   *
   * A single request can enable a maximum of 20 services at a time. If more
   * than 20 services are specified, the request will fail, and no state changes
   * will occur.
   *
   * @generated from field: repeated string service_ids = 2;
   */
  serviceIds: string[];
};

/**
 * Describes the message google.api.serviceusage.v1.BatchEnableServicesRequest.
 * Use `create(BatchEnableServicesRequestSchema)` to create a new message.
 */
export const BatchEnableServicesRequestSchema: GenMessage<BatchEnableServicesRequest> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 7);

/**
 * Response message for the `BatchEnableServices` method.
 * This response message is assigned to the `response` field of the returned
 * Operation when that operation is done.
 *
 * @generated from message google.api.serviceusage.v1.BatchEnableServicesResponse
 */
export type BatchEnableServicesResponse = Message<"google.api.serviceusage.v1.BatchEnableServicesResponse"> & {
  /**
   * The new state of the services after enabling.
   *
   * @generated from field: repeated google.api.serviceusage.v1.Service services = 1;
   */
  services: Service[];

  /**
   * If allow_partial_success is true, and one or more services could not be
   * enabled, this field contains the details about each failure.
   *
   * @generated from field: repeated google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure failures = 2;
   */
  failures: BatchEnableServicesResponse_EnableFailure[];
};

/**
 * Describes the message google.api.serviceusage.v1.BatchEnableServicesResponse.
 * Use `create(BatchEnableServicesResponseSchema)` to create a new message.
 */
export const BatchEnableServicesResponseSchema: GenMessage<BatchEnableServicesResponse> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 8);

/**
 * Provides error messages for the failing services.
 *
 * @generated from message google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure
 */
export type BatchEnableServicesResponse_EnableFailure = Message<"google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure"> & {
  /**
   * The service id of a service that could not be enabled.
   *
   * @generated from field: string service_id = 1;
   */
  serviceId: string;

  /**
   * An error message describing why the service could not be enabled.
   *
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;
};

/**
 * Describes the message google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure.
 * Use `create(BatchEnableServicesResponse_EnableFailureSchema)` to create a new message.
 */
export const BatchEnableServicesResponse_EnableFailureSchema: GenMessage<BatchEnableServicesResponse_EnableFailure> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 8, 0);

/**
 * Request message for the `BatchGetServices` method.
 *
 * @generated from message google.api.serviceusage.v1.BatchGetServicesRequest
 */
export type BatchGetServicesRequest = Message<"google.api.serviceusage.v1.BatchGetServicesRequest"> & {
  /**
   * Parent to retrieve services from.
   * If this is set, the parent of all of the services specified in `names` must
   * match this field. An example name would be: `projects/123` where `123` is
   * the project number. The `BatchGetServices` method currently only supports
   * projects.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Names of the services to retrieve.
   *
   * An example name would be:
   * `projects/123/services/serviceusage.googleapis.com` where `123` is the
   * project number.
   * A single request can get a maximum of 30 services at a time.
   *
   * @generated from field: repeated string names = 2;
   */
  names: string[];
};

/**
 * Describes the message google.api.serviceusage.v1.BatchGetServicesRequest.
 * Use `create(BatchGetServicesRequestSchema)` to create a new message.
 */
export const BatchGetServicesRequestSchema: GenMessage<BatchGetServicesRequest> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 9);

/**
 * Response message for the `BatchGetServices` method.
 *
 * @generated from message google.api.serviceusage.v1.BatchGetServicesResponse
 */
export type BatchGetServicesResponse = Message<"google.api.serviceusage.v1.BatchGetServicesResponse"> & {
  /**
   * The requested Service states.
   *
   * @generated from field: repeated google.api.serviceusage.v1.Service services = 1;
   */
  services: Service[];
};

/**
 * Describes the message google.api.serviceusage.v1.BatchGetServicesResponse.
 * Use `create(BatchGetServicesResponseSchema)` to create a new message.
 */
export const BatchGetServicesResponseSchema: GenMessage<BatchGetServicesResponse> = /*@__PURE__*/
  messageDesc(file_google_api_serviceusage_v1_serviceusage, 10);

/**
 * Enables services that service consumers want to use on Google Cloud Platform,
 * lists the available or enabled services, or disables services that service
 * consumers no longer use.
 *
 * See [Service Usage API](https://cloud.google.com/service-usage/docs/overview)
 *
 * @generated from service google.api.serviceusage.v1.ServiceUsage
 */
export const ServiceUsage: GenService<{
  /**
   * Enable a service so that it can be used with a project.
   *
   * @generated from rpc google.api.serviceusage.v1.ServiceUsage.EnableService
   */
  enableService: {
    methodKind: "unary";
    input: typeof EnableServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Disable a service so that it can no longer be used with a project.
   * This prevents unintended usage that may cause unexpected billing
   * charges or security leaks.
   *
   * It is not valid to call the disable method on a service that is not
   * currently enabled. Callers will receive a `FAILED_PRECONDITION` status if
   * the target service is not currently enabled.
   *
   * @generated from rpc google.api.serviceusage.v1.ServiceUsage.DisableService
   */
  disableService: {
    methodKind: "unary";
    input: typeof DisableServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Returns the service configuration and enabled state for a given service.
   *
   * @generated from rpc google.api.serviceusage.v1.ServiceUsage.GetService
   */
  getService: {
    methodKind: "unary";
    input: typeof GetServiceRequestSchema;
    output: typeof ServiceSchema;
  },
  /**
   * List all services available to the specified project, and the current
   * state of those services with respect to the project. The list includes
   * all public services, all services for which the calling user has the
   * `servicemanagement.services.bind` permission, and all services that have
   * already been enabled on the project. The list can be filtered to
   * only include services in a specific state, for example to only include
   * services enabled on the project.
   *
   * WARNING: If you need to query enabled services frequently or across
   * an organization, you should use
   * [Cloud Asset Inventory
   * API](https://cloud.google.com/asset-inventory/docs/apis), which provides
   * higher throughput and richer filtering capability.
   *
   * @generated from rpc google.api.serviceusage.v1.ServiceUsage.ListServices
   */
  listServices: {
    methodKind: "unary";
    input: typeof ListServicesRequestSchema;
    output: typeof ListServicesResponseSchema;
  },
  /**
   * Enable multiple services on a project. The operation is atomic: if enabling
   * any service fails, then the entire batch fails, and no state changes occur.
   * To enable a single service, use the `EnableService` method instead.
   *
   * @generated from rpc google.api.serviceusage.v1.ServiceUsage.BatchEnableServices
   */
  batchEnableServices: {
    methodKind: "unary";
    input: typeof BatchEnableServicesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Returns the service configurations and enabled states for a given list of
   * services.
   *
   * @generated from rpc google.api.serviceusage.v1.ServiceUsage.BatchGetServices
   */
  batchGetServices: {
    methodKind: "unary";
    input: typeof BatchGetServicesRequestSchema;
    output: typeof BatchGetServicesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_api_serviceusage_v1_serviceusage, 0);

