// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/api/logging.proto (package google.api, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/api/logging.proto.
 */
export const file_google_api_logging: GenFile = /*@__PURE__*/
  fileDesc("Chhnb29nbGUvYXBpL2xvZ2dpbmcucHJvdG8SCmdvb2dsZS5hcGki1wEKB0xvZ2dpbmcSRQoVcHJvZHVjZXJfZGVzdGluYXRpb25zGAEgAygLMiYuZ29vZ2xlLmFwaS5Mb2dnaW5nLkxvZ2dpbmdEZXN0aW5hdGlvbhJFChVjb25zdW1lcl9kZXN0aW5hdGlvbnMYAiADKAsyJi5nb29nbGUuYXBpLkxvZ2dpbmcuTG9nZ2luZ0Rlc3RpbmF0aW9uGj4KEkxvZ2dpbmdEZXN0aW5hdGlvbhIaChJtb25pdG9yZWRfcmVzb3VyY2UYAyABKAkSDAoEbG9ncxgBIAMoCUJuCg5jb20uZ29vZ2xlLmFwaUIMTG9nZ2luZ1Byb3RvUAFaRWdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYXBpL3NlcnZpY2Vjb25maWc7c2VydmljZWNvbmZpZ6ICBEdBUEliBnByb3RvMw");

/**
 * Logging configuration of the service.
 *
 * The following example shows how to configure logs to be sent to the
 * producer and consumer projects. In the example, the `activity_history`
 * log is sent to both the producer and consumer projects, whereas the
 * `purchase_history` log is only sent to the producer project.
 *
 *     monitored_resources:
 *     - type: library.googleapis.com/branch
 *       labels:
 *       - key: /city
 *         description: The city where the library branch is located in.
 *       - key: /name
 *         description: The name of the branch.
 *     logs:
 *     - name: activity_history
 *       labels:
 *       - key: /customer_id
 *     - name: purchase_history
 *     logging:
 *       producer_destinations:
 *       - monitored_resource: library.googleapis.com/branch
 *         logs:
 *         - activity_history
 *         - purchase_history
 *       consumer_destinations:
 *       - monitored_resource: library.googleapis.com/branch
 *         logs:
 *         - activity_history
 *
 * @generated from message google.api.Logging
 */
export type Logging = Message<"google.api.Logging"> & {
  /**
   * Logging configurations for sending logs to the producer project.
   * There can be multiple producer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one producer destination.
   *
   * @generated from field: repeated google.api.Logging.LoggingDestination producer_destinations = 1;
   */
  producerDestinations: Logging_LoggingDestination[];

  /**
   * Logging configurations for sending logs to the consumer project.
   * There can be multiple consumer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one consumer destination.
   *
   * @generated from field: repeated google.api.Logging.LoggingDestination consumer_destinations = 2;
   */
  consumerDestinations: Logging_LoggingDestination[];
};

/**
 * Describes the message google.api.Logging.
 * Use `create(LoggingSchema)` to create a new message.
 */
export const LoggingSchema: GenMessage<Logging> = /*@__PURE__*/
  messageDesc(file_google_api_logging, 0);

/**
 * Configuration of a specific logging destination (the producer project
 * or the consumer project).
 *
 * @generated from message google.api.Logging.LoggingDestination
 */
export type Logging_LoggingDestination = Message<"google.api.Logging.LoggingDestination"> & {
  /**
   * The monitored resource type. The type must be defined in the
   * [Service.monitored_resources][google.api.Service.monitored_resources]
   * section.
   *
   * @generated from field: string monitored_resource = 3;
   */
  monitoredResource: string;

  /**
   * Names of the logs to be sent to this destination. Each name must
   * be defined in the [Service.logs][google.api.Service.logs] section. If the
   * log name is not a domain scoped name, it will be automatically prefixed
   * with the service name followed by "/".
   *
   * @generated from field: repeated string logs = 1;
   */
  logs: string[];
};

/**
 * Describes the message google.api.Logging.LoggingDestination.
 * Use `create(Logging_LoggingDestinationSchema)` to create a new message.
 */
export const Logging_LoggingDestinationSchema: GenMessage<Logging_LoggingDestination> = /*@__PURE__*/
  messageDesc(file_google_api_logging, 0, 0);

