// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/api/servicecontrol/v1/quota_controller.proto (package google.api.servicecontrol.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../annotations_pb";
import type { MetricValueSet } from "./metric_value_pb";
import { file_google_api_servicecontrol_v1_metric_value } from "./metric_value_pb";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import { file_google_api_client } from "../../client_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/api/servicecontrol/v1/quota_controller.proto.
 */
export const file_google_api_servicecontrol_v1_quota_controller: GenFile = /*@__PURE__*/
  fileDesc("CjNnb29nbGUvYXBpL3NlcnZpY2Vjb250cm9sL3YxL3F1b3RhX2NvbnRyb2xsZXIucHJvdG8SHGdvb2dsZS5hcGkuc2VydmljZWNvbnRyb2wudjEikQEKFEFsbG9jYXRlUXVvdGFSZXF1ZXN0EhQKDHNlcnZpY2VfbmFtZRgBIAEoCRJIChJhbGxvY2F0ZV9vcGVyYXRpb24YAiABKAsyLC5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLlF1b3RhT3BlcmF0aW9uEhkKEXNlcnZpY2VfY29uZmlnX2lkGAQgASgJIsYDCg5RdW90YU9wZXJhdGlvbhIUCgxvcGVyYXRpb25faWQYASABKAkSEwoLbWV0aG9kX25hbWUYAiABKAkSEwoLY29uc3VtZXJfaWQYAyABKAkSSAoGbGFiZWxzGAQgAygLMjguZ29vZ2xlLmFwaS5zZXJ2aWNlY29udHJvbC52MS5RdW90YU9wZXJhdGlvbi5MYWJlbHNFbnRyeRJDCg1xdW90YV9tZXRyaWNzGAUgAygLMiwuZ29vZ2xlLmFwaS5zZXJ2aWNlY29udHJvbC52MS5NZXRyaWNWYWx1ZVNldBJKCgpxdW90YV9tb2RlGAYgASgOMjYuZ29vZ2xlLmFwaS5zZXJ2aWNlY29udHJvbC52MS5RdW90YU9wZXJhdGlvbi5RdW90YU1vZGUaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJqCglRdW90YU1vZGUSDwoLVU5TUEVDSUZJRUQQABIKCgZOT1JNQUwQARIPCgtCRVNUX0VGRk9SVBACEg4KCkNIRUNLX09OTFkQAxIOCgpRVUVSWV9PTkxZEAQSDwoLQURKVVNUX09OTFkQBSLQAQoVQWxsb2NhdGVRdW90YVJlc3BvbnNlEhQKDG9wZXJhdGlvbl9pZBgBIAEoCRJBCg9hbGxvY2F0ZV9lcnJvcnMYAiADKAsyKC5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLlF1b3RhRXJyb3ISQwoNcXVvdGFfbWV0cmljcxgDIAMoCzIsLmdvb2dsZS5hcGkuc2VydmljZWNvbnRyb2wudjEuTWV0cmljVmFsdWVTZXQSGQoRc2VydmljZV9jb25maWdfaWQYBCABKAkinAIKClF1b3RhRXJyb3ISOwoEY29kZRgBIAEoDjItLmdvb2dsZS5hcGkuc2VydmljZWNvbnRyb2wudjEuUXVvdGFFcnJvci5Db2RlEg8KB3N1YmplY3QYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSIgoGc3RhdHVzGAQgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMihgEKBENvZGUSDwoLVU5TUEVDSUZJRUQQABIWChJSRVNPVVJDRV9FWEhBVVNURUQQCBIWChJCSUxMSU5HX05PVF9BQ1RJVkUQaxITCg9QUk9KRUNUX0RFTEVURUQQbBITCg9BUElfS0VZX0lOVkFMSUQQaRITCg9BUElfS0VZX0VYUElSRUQQcDLFAgoPUXVvdGFDb250cm9sbGVyEq4BCg1BbGxvY2F0ZVF1b3RhEjIuZ29vZ2xlLmFwaS5zZXJ2aWNlY29udHJvbC52MS5BbGxvY2F0ZVF1b3RhUmVxdWVzdBozLmdvb2dsZS5hcGkuc2VydmljZWNvbnRyb2wudjEuQWxsb2NhdGVRdW90YVJlc3BvbnNlIjSC0+STAi46ASoiKS92MS9zZXJ2aWNlcy97c2VydmljZV9uYW1lfTphbGxvY2F0ZVF1b3RhGoABykEdc2VydmljZWNvbnRyb2wuZ29vZ2xlYXBpcy5jb23SQV1odHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvc2VydmljZWNvbnRyb2xC7wEKIGNvbS5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxQhRRdW90YUNvbnRyb2xsZXJQcm90b1ABWkpjbG91ZC5nb29nbGUuY29tL2dvL3NlcnZpY2Vjb250cm9sL2FwaXYxL3NlcnZpY2Vjb250cm9scGI7c2VydmljZWNvbnRyb2xwYvgBAaoCHkdvb2dsZS5DbG91ZC5TZXJ2aWNlQ29udHJvbC5WMcoCHkdvb2dsZVxDbG91ZFxTZXJ2aWNlQ29udHJvbFxWMeoCIUdvb2dsZTo6Q2xvdWQ6OlNlcnZpY2VDb250cm9sOjpWMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_servicecontrol_v1_metric_value, file_google_rpc_status, file_google_api_client]);

/**
 * Request message for the AllocateQuota method.
 *
 * @generated from message google.api.servicecontrol.v1.AllocateQuotaRequest
 */
export type AllocateQuotaRequest = Message<"google.api.servicecontrol.v1.AllocateQuotaRequest"> & {
  /**
   * Name of the service as specified in the service configuration. For example,
   * `"pubsub.googleapis.com"`.
   *
   * See [google.api.Service][google.api.Service] for the definition of a service name.
   *
   * @generated from field: string service_name = 1;
   */
  serviceName: string;

  /**
   * Operation that describes the quota allocation.
   *
   * @generated from field: google.api.servicecontrol.v1.QuotaOperation allocate_operation = 2;
   */
  allocateOperation?: QuotaOperation;

  /**
   * Specifies which version of service configuration should be used to process
   * the request. If unspecified or no matching version can be found, the latest
   * one will be used.
   *
   * @generated from field: string service_config_id = 4;
   */
  serviceConfigId: string;
};

/**
 * Describes the message google.api.servicecontrol.v1.AllocateQuotaRequest.
 * Use `create(AllocateQuotaRequestSchema)` to create a new message.
 */
export const AllocateQuotaRequestSchema: GenMessage<AllocateQuotaRequest> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_quota_controller, 0);

/**
 * Represents information regarding a quota operation.
 *
 * @generated from message google.api.servicecontrol.v1.QuotaOperation
 */
export type QuotaOperation = Message<"google.api.servicecontrol.v1.QuotaOperation"> & {
  /**
   * Identity of the operation. This is expected to be unique within the scope
   * of the service that generated the operation, and guarantees idempotency in
   * case of retries.
   *
   * In order to ensure best performance and latency in the Quota backends,
   * operation_ids are optimally associated with time, so that related
   * operations can be accessed fast in storage. For this reason, the
   * recommended token for services that intend to operate at a high QPS is
   * Unix time in nanos + UUID
   *
   * @generated from field: string operation_id = 1;
   */
  operationId: string;

  /**
   * Fully qualified name of the API method for which this quota operation is
   * requested. This name is used for matching quota rules or metric rules and
   * billing status rules defined in service configuration.
   *
   * This field should not be set if any of the following is true:
   * (1) the quota operation is performed on non-API resources.
   * (2) quota_metrics is set because the caller is doing quota override.
   *
   *
   * Example of an RPC method name:
   *     google.example.library.v1.LibraryService.CreateShelf
   *
   * @generated from field: string method_name = 2;
   */
  methodName: string;

  /**
   * Identity of the consumer for whom this quota operation is being performed.
   *
   * This can be in one of the following formats:
   *   project:<project_id>,
   *   project_number:<project_number>,
   *   api_key:<api_key>.
   *
   * @generated from field: string consumer_id = 3;
   */
  consumerId: string;

  /**
   * Labels describing the operation.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Represents information about this operation. Each MetricValueSet
   * corresponds to a metric defined in the service configuration.
   * The data type used in the MetricValueSet must agree with
   * the data type specified in the metric definition.
   *
   * Within a single operation, it is not allowed to have more than one
   * MetricValue instances that have the same metric names and identical
   * label value combinations. If a request has such duplicated MetricValue
   * instances, the entire request is rejected with
   * an invalid argument error.
   *
   * This field is mutually exclusive with method_name.
   *
   * @generated from field: repeated google.api.servicecontrol.v1.MetricValueSet quota_metrics = 5;
   */
  quotaMetrics: MetricValueSet[];

  /**
   * Quota mode for this operation.
   *
   * @generated from field: google.api.servicecontrol.v1.QuotaOperation.QuotaMode quota_mode = 6;
   */
  quotaMode: QuotaOperation_QuotaMode;
};

/**
 * Describes the message google.api.servicecontrol.v1.QuotaOperation.
 * Use `create(QuotaOperationSchema)` to create a new message.
 */
export const QuotaOperationSchema: GenMessage<QuotaOperation> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_quota_controller, 1);

/**
 * Supported quota modes.
 *
 * @generated from enum google.api.servicecontrol.v1.QuotaOperation.QuotaMode
 */
export enum QuotaOperation_QuotaMode {
  /**
   * Guard against implicit default. Must not be used.
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * For AllocateQuota request, allocates quota for the amount specified in
   * the service configuration or specified using the quota metrics. If the
   * amount is higher than the available quota, allocation error will be
   * returned and no quota will be allocated.
   * If multiple quotas are part of the request, and one fails, none of the
   * quotas are allocated or released.
   *
   * @generated from enum value: NORMAL = 1;
   */
  NORMAL = 1,

  /**
   * The operation allocates quota for the amount specified in the service
   * configuration or specified using the quota metrics. If the amount is
   * higher than the available quota, request does not fail but all available
   * quota will be allocated.
   * For rate quota, BEST_EFFORT will continue to deduct from other groups
   * even if one does not have enough quota. For allocation, it will find the
   * minimum available amount across all groups and deduct that amount from
   * all the affected groups.
   *
   * @generated from enum value: BEST_EFFORT = 2;
   */
  BEST_EFFORT = 2,

  /**
   * For AllocateQuota request, only checks if there is enough quota
   * available and does not change the available quota. No lock is placed on
   * the available quota either.
   *
   * @generated from enum value: CHECK_ONLY = 3;
   */
  CHECK_ONLY = 3,

  /**
   * Unimplemented. When used in AllocateQuotaRequest, this returns the
   * effective quota limit(s) in the response, and no quota check will be
   * performed. Not supported for other requests, and even for
   * AllocateQuotaRequest, this is currently supported only for allowlisted
   * services.
   *
   * @generated from enum value: QUERY_ONLY = 4;
   */
  QUERY_ONLY = 4,

  /**
   * The operation allocates quota for the amount specified in the service
   * configuration or specified using the quota metrics. If the requested
   * amount is higher than the available quota, request does not fail and
   * remaining quota would become negative (going over the limit).
   * Not supported for Rate Quota.
   *
   * @generated from enum value: ADJUST_ONLY = 5;
   */
  ADJUST_ONLY = 5,
}

/**
 * Describes the enum google.api.servicecontrol.v1.QuotaOperation.QuotaMode.
 */
export const QuotaOperation_QuotaModeSchema: GenEnum<QuotaOperation_QuotaMode> = /*@__PURE__*/
  enumDesc(file_google_api_servicecontrol_v1_quota_controller, 1, 0);

/**
 * Response message for the AllocateQuota method.
 *
 * @generated from message google.api.servicecontrol.v1.AllocateQuotaResponse
 */
export type AllocateQuotaResponse = Message<"google.api.servicecontrol.v1.AllocateQuotaResponse"> & {
  /**
   * The same operation_id value used in the AllocateQuotaRequest. Used for
   * logging and diagnostics purposes.
   *
   * @generated from field: string operation_id = 1;
   */
  operationId: string;

  /**
   * Indicates the decision of the allocate.
   *
   * @generated from field: repeated google.api.servicecontrol.v1.QuotaError allocate_errors = 2;
   */
  allocateErrors: QuotaError[];

  /**
   * Quota metrics to indicate the result of allocation. Depending on the
   * request, one or more of the following metrics will be included:
   *
   * 1. Per quota group or per quota metric incremental usage will be specified
   * using the following delta metric :
   *   "serviceruntime.googleapis.com/api/consumer/quota_used_count"
   *
   * 2. The quota limit reached condition will be specified using the following
   * boolean metric :
   *   "serviceruntime.googleapis.com/quota/exceeded"
   *
   * @generated from field: repeated google.api.servicecontrol.v1.MetricValueSet quota_metrics = 3;
   */
  quotaMetrics: MetricValueSet[];

  /**
   * ID of the actual config used to process the request.
   *
   * @generated from field: string service_config_id = 4;
   */
  serviceConfigId: string;
};

/**
 * Describes the message google.api.servicecontrol.v1.AllocateQuotaResponse.
 * Use `create(AllocateQuotaResponseSchema)` to create a new message.
 */
export const AllocateQuotaResponseSchema: GenMessage<AllocateQuotaResponse> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_quota_controller, 2);

/**
 * Represents error information for [QuotaOperation][google.api.servicecontrol.v1.QuotaOperation].
 *
 * @generated from message google.api.servicecontrol.v1.QuotaError
 */
export type QuotaError = Message<"google.api.servicecontrol.v1.QuotaError"> & {
  /**
   * Error code.
   *
   * @generated from field: google.api.servicecontrol.v1.QuotaError.Code code = 1;
   */
  code: QuotaError_Code;

  /**
   * Subject to whom this error applies. See the specific enum for more details
   * on this field. For example, "clientip:<ip address of client>" or
   * "project:<Google developer project id>".
   *
   * @generated from field: string subject = 2;
   */
  subject: string;

  /**
   * Free-form text that provides details on the cause of the error.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Contains additional information about the quota error.
   * If available, `status.code` will be non zero.
   *
   * @generated from field: google.rpc.Status status = 4;
   */
  status?: Status;
};

/**
 * Describes the message google.api.servicecontrol.v1.QuotaError.
 * Use `create(QuotaErrorSchema)` to create a new message.
 */
export const QuotaErrorSchema: GenMessage<QuotaError> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_quota_controller, 3);

/**
 * Error codes related to project config validations are deprecated since the
 * quota controller methods do not perform these validations. Instead services
 * have to call the Check method, without quota_properties field, to perform
 * these validations before calling the quota controller methods. These
 * methods check only for project deletion to be wipe out compliant.
 *
 * @generated from enum google.api.servicecontrol.v1.QuotaError.Code
 */
export enum QuotaError_Code {
  /**
   * This is never used.
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Quota allocation failed.
   * Same as [google.rpc.Code.RESOURCE_EXHAUSTED][google.rpc.Code.RESOURCE_EXHAUSTED].
   *
   * @generated from enum value: RESOURCE_EXHAUSTED = 8;
   */
  RESOURCE_EXHAUSTED = 8,

  /**
   * Consumer cannot access the service because the service requires active
   * billing.
   *
   * @generated from enum value: BILLING_NOT_ACTIVE = 107;
   */
  BILLING_NOT_ACTIVE = 107,

  /**
   * Consumer's project has been marked as deleted (soft deletion).
   *
   * @generated from enum value: PROJECT_DELETED = 108;
   */
  PROJECT_DELETED = 108,

  /**
   * Specified API key is invalid.
   *
   * @generated from enum value: API_KEY_INVALID = 105;
   */
  API_KEY_INVALID = 105,

  /**
   * Specified API Key has expired.
   *
   * @generated from enum value: API_KEY_EXPIRED = 112;
   */
  API_KEY_EXPIRED = 112,
}

/**
 * Describes the enum google.api.servicecontrol.v1.QuotaError.Code.
 */
export const QuotaError_CodeSchema: GenEnum<QuotaError_Code> = /*@__PURE__*/
  enumDesc(file_google_api_servicecontrol_v1_quota_controller, 3, 0);

/**
 * [Google Quota Control API](/service-control/overview)
 *
 * Allows clients to allocate and release quota against a [managed
 * service](https://cloud.google.com/service-management/reference/rpc/google.api/servicemanagement.v1#google.api.servicemanagement.v1.ManagedService).
 *
 * @generated from service google.api.servicecontrol.v1.QuotaController
 */
export const QuotaController: GenService<{
  /**
   * Attempts to allocate quota for the specified consumer. It should be called
   * before the operation is executed.
   *
   * This method requires the `servicemanagement.services.quota`
   * permission on the specified service. For more information, see
   * [Cloud IAM](https://cloud.google.com/iam).
   *
   * **NOTE:** The client **must** fail-open on server errors `INTERNAL`,
   * `UNKNOWN`, `DEADLINE_EXCEEDED`, and `UNAVAILABLE`. To ensure system
   * reliability, the server may inject these errors to prohibit any hard
   * dependency on the quota functionality.
   *
   * @generated from rpc google.api.servicecontrol.v1.QuotaController.AllocateQuota
   */
  allocateQuota: {
    methodKind: "unary";
    input: typeof AllocateQuotaRequestSchema;
    output: typeof AllocateQuotaResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_api_servicecontrol_v1_quota_controller, 0);

