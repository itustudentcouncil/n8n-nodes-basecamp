// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/api/servicecontrol/v1/service_controller.proto (package google.api.servicecontrol.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../annotations_pb";
import { file_google_api_client } from "../../client_pb";
import type { CheckError } from "./check_error_pb";
import { file_google_api_servicecontrol_v1_check_error } from "./check_error_pb";
import type { Operation } from "./operation_pb";
import { file_google_api_servicecontrol_v1_operation } from "./operation_pb";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/api/servicecontrol/v1/service_controller.proto.
 */
export const file_google_api_servicecontrol_v1_service_controller: GenFile = /*@__PURE__*/
  fileDesc("CjVnb29nbGUvYXBpL3NlcnZpY2Vjb250cm9sL3YxL3NlcnZpY2VfY29udHJvbGxlci5wcm90bxIcZ29vZ2xlLmFwaS5zZXJ2aWNlY29udHJvbC52MSJ7CgxDaGVja1JlcXVlc3QSFAoMc2VydmljZV9uYW1lGAEgASgJEjoKCW9wZXJhdGlvbhgCIAEoCzInLmdvb2dsZS5hcGkuc2VydmljZWNvbnRyb2wudjEuT3BlcmF0aW9uEhkKEXNlcnZpY2VfY29uZmlnX2lkGAQgASgJIvwECg1DaGVja1Jlc3BvbnNlEhQKDG9wZXJhdGlvbl9pZBgBIAEoCRI+CgxjaGVja19lcnJvcnMYAiADKAsyKC5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLkNoZWNrRXJyb3ISGQoRc2VydmljZV9jb25maWdfaWQYBSABKAkSGgoSc2VydmljZV9yb2xsb3V0X2lkGAsgASgJEkkKCmNoZWNrX2luZm8YBiABKAsyNS5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLkNoZWNrUmVzcG9uc2UuQ2hlY2tJbmZvGosBCglDaGVja0luZm8SGAoQdW51c2VkX2FyZ3VtZW50cxgBIAMoCRJPCg1jb25zdW1lcl9pbmZvGAIgASgLMjguZ29vZ2xlLmFwaS5zZXJ2aWNlY29udHJvbC52MS5DaGVja1Jlc3BvbnNlLkNvbnN1bWVySW5mbxITCgthcGlfa2V5X3VpZBgFIAEoCRqEAgoMQ29uc3VtZXJJbmZvEhYKDnByb2plY3RfbnVtYmVyGAEgASgDElMKBHR5cGUYAiABKA4yRS5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLkNoZWNrUmVzcG9uc2UuQ29uc3VtZXJJbmZvLkNvbnN1bWVyVHlwZRIXCg9jb25zdW1lcl9udW1iZXIYAyABKAMibgoMQ29uc3VtZXJUeXBlEh0KGUNPTlNVTUVSX1RZUEVfVU5TUEVDSUZJRUQQABILCgdQUk9KRUNUEAESCgoGRk9MREVSEAISEAoMT1JHQU5JWkFUSU9OEAMSFAoQU0VSVklDRV9TUEVDSUZJQxAEIn0KDVJlcG9ydFJlcXVlc3QSFAoMc2VydmljZV9uYW1lGAEgASgJEjsKCm9wZXJhdGlvbnMYAiADKAsyJy5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLk9wZXJhdGlvbhIZChFzZXJ2aWNlX2NvbmZpZ19pZBgDIAEoCSLhAQoOUmVwb3J0UmVzcG9uc2USTwoNcmVwb3J0X2Vycm9ycxgBIAMoCzI4Lmdvb2dsZS5hcGkuc2VydmljZWNvbnRyb2wudjEuUmVwb3J0UmVzcG9uc2UuUmVwb3J0RXJyb3ISGQoRc2VydmljZV9jb25maWdfaWQYAiABKAkSGgoSc2VydmljZV9yb2xsb3V0X2lkGAQgASgJGkcKC1JlcG9ydEVycm9yEhQKDG9wZXJhdGlvbl9pZBgBIAEoCRIiCgZzdGF0dXMYAiABKAsyEi5nb29nbGUucnBjLlN0YXR1czK8AwoRU2VydmljZUNvbnRyb2xsZXISjgEKBUNoZWNrEiouZ29vZ2xlLmFwaS5zZXJ2aWNlY29udHJvbC52MS5DaGVja1JlcXVlc3QaKy5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLkNoZWNrUmVzcG9uc2UiLILT5JMCJjoBKiIhL3YxL3NlcnZpY2VzL3tzZXJ2aWNlX25hbWV9OmNoZWNrEpIBCgZSZXBvcnQSKy5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLlJlcG9ydFJlcXVlc3QaLC5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLlJlcG9ydFJlc3BvbnNlIi2C0+STAic6ASoiIi92MS9zZXJ2aWNlcy97c2VydmljZV9uYW1lfTpyZXBvcnQagAHKQR1zZXJ2aWNlY29udHJvbC5nb29nbGVhcGlzLmNvbdJBXWh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9zZXJ2aWNlY29udHJvbEL4AQogY29tLmdvb2dsZS5hcGkuc2VydmljZWNvbnRyb2wudjFCFlNlcnZpY2VDb250cm9sbGVyUHJvdG9QAVpKY2xvdWQuZ29vZ2xlLmNvbS9nby9zZXJ2aWNlY29udHJvbC9hcGl2MS9zZXJ2aWNlY29udHJvbHBiO3NlcnZpY2Vjb250cm9scGL4AQGiAgRHQVNDqgIeR29vZ2xlLkNsb3VkLlNlcnZpY2VDb250cm9sLlYxygIeR29vZ2xlXENsb3VkXFNlcnZpY2VDb250cm9sXFYx6gIhR29vZ2xlOjpDbG91ZDo6U2VydmljZUNvbnRyb2w6OlYxYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_servicecontrol_v1_check_error, file_google_api_servicecontrol_v1_operation, file_google_rpc_status]);

/**
 * Request message for the Check method.
 *
 * @generated from message google.api.servicecontrol.v1.CheckRequest
 */
export type CheckRequest = Message<"google.api.servicecontrol.v1.CheckRequest"> & {
  /**
   * The service name as specified in its service configuration. For example,
   * `"pubsub.googleapis.com"`.
   *
   * See
   * [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
   * for the definition of a service name.
   *
   * @generated from field: string service_name = 1;
   */
  serviceName: string;

  /**
   * The operation to be checked.
   *
   * @generated from field: google.api.servicecontrol.v1.Operation operation = 2;
   */
  operation?: Operation;

  /**
   * Specifies which version of service configuration should be used to process
   * the request.
   *
   * If unspecified or no matching version can be found, the
   * latest one will be used.
   *
   * @generated from field: string service_config_id = 4;
   */
  serviceConfigId: string;
};

/**
 * Describes the message google.api.servicecontrol.v1.CheckRequest.
 * Use `create(CheckRequestSchema)` to create a new message.
 */
export const CheckRequestSchema: GenMessage<CheckRequest> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_service_controller, 0);

/**
 * Response message for the Check method.
 *
 * @generated from message google.api.servicecontrol.v1.CheckResponse
 */
export type CheckResponse = Message<"google.api.servicecontrol.v1.CheckResponse"> & {
  /**
   * The same operation_id value used in the
   * [CheckRequest][google.api.servicecontrol.v1.CheckRequest]. Used for logging
   * and diagnostics purposes.
   *
   * @generated from field: string operation_id = 1;
   */
  operationId: string;

  /**
   * Indicate the decision of the check.
   *
   * If no check errors are present, the service should process the operation.
   * Otherwise the service should use the list of errors to determine the
   * appropriate action.
   *
   * @generated from field: repeated google.api.servicecontrol.v1.CheckError check_errors = 2;
   */
  checkErrors: CheckError[];

  /**
   * The actual config id used to process the request.
   *
   * @generated from field: string service_config_id = 5;
   */
  serviceConfigId: string;

  /**
   * The current service rollout id used to process the request.
   *
   * @generated from field: string service_rollout_id = 11;
   */
  serviceRolloutId: string;

  /**
   * Feedback data returned from the server during processing a Check request.
   *
   * @generated from field: google.api.servicecontrol.v1.CheckResponse.CheckInfo check_info = 6;
   */
  checkInfo?: CheckResponse_CheckInfo;
};

/**
 * Describes the message google.api.servicecontrol.v1.CheckResponse.
 * Use `create(CheckResponseSchema)` to create a new message.
 */
export const CheckResponseSchema: GenMessage<CheckResponse> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_service_controller, 1);

/**
 * Contains additional information about the check operation.
 *
 * @generated from message google.api.servicecontrol.v1.CheckResponse.CheckInfo
 */
export type CheckResponse_CheckInfo = Message<"google.api.servicecontrol.v1.CheckResponse.CheckInfo"> & {
  /**
   * A list of fields and label keys that are ignored by the server.
   * The client doesn't need to send them for following requests to improve
   * performance and allow better aggregation.
   *
   * @generated from field: repeated string unused_arguments = 1;
   */
  unusedArguments: string[];

  /**
   * Consumer info of this check.
   *
   * @generated from field: google.api.servicecontrol.v1.CheckResponse.ConsumerInfo consumer_info = 2;
   */
  consumerInfo?: CheckResponse_ConsumerInfo;

  /**
   * The unique id of the api key in the format of "apikey:<UID>".
   * This field will be populated when the consumer passed to Service Control
   * is an API key and all the API key related validations are successful.
   *
   * @generated from field: string api_key_uid = 5;
   */
  apiKeyUid: string;
};

/**
 * Describes the message google.api.servicecontrol.v1.CheckResponse.CheckInfo.
 * Use `create(CheckResponse_CheckInfoSchema)` to create a new message.
 */
export const CheckResponse_CheckInfoSchema: GenMessage<CheckResponse_CheckInfo> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_service_controller, 1, 0);

/**
 * `ConsumerInfo` provides information about the consumer.
 *
 * @generated from message google.api.servicecontrol.v1.CheckResponse.ConsumerInfo
 */
export type CheckResponse_ConsumerInfo = Message<"google.api.servicecontrol.v1.CheckResponse.ConsumerInfo"> & {
  /**
   * The Google cloud project number, e.g. 1234567890. A value of 0 indicates
   * no project number is found.
   *
   * NOTE: This field is deprecated after we support flexible consumer
   * id. New code should not depend on this field anymore.
   *
   * @generated from field: int64 project_number = 1;
   */
  projectNumber: bigint;

  /**
   * The type of the consumer which should have been defined in
   * [Google Resource Manager](https://cloud.google.com/resource-manager/).
   *
   * @generated from field: google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.ConsumerType type = 2;
   */
  type: CheckResponse_ConsumerInfo_ConsumerType;

  /**
   * The consumer identity number, can be Google cloud project number, folder
   * number or organization number e.g. 1234567890. A value of 0 indicates no
   * consumer number is found.
   *
   * @generated from field: int64 consumer_number = 3;
   */
  consumerNumber: bigint;
};

/**
 * Describes the message google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.
 * Use `create(CheckResponse_ConsumerInfoSchema)` to create a new message.
 */
export const CheckResponse_ConsumerInfoSchema: GenMessage<CheckResponse_ConsumerInfo> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_service_controller, 1, 1);

/**
 * The type of the consumer as defined in
 * [Google Resource Manager](https://cloud.google.com/resource-manager/).
 *
 * @generated from enum google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.ConsumerType
 */
export enum CheckResponse_ConsumerInfo_ConsumerType {
  /**
   * This is never used.
   *
   * @generated from enum value: CONSUMER_TYPE_UNSPECIFIED = 0;
   */
  CONSUMER_TYPE_UNSPECIFIED = 0,

  /**
   * The consumer is a Google Cloud Project.
   *
   * @generated from enum value: PROJECT = 1;
   */
  PROJECT = 1,

  /**
   * The consumer is a Google Cloud Folder.
   *
   * @generated from enum value: FOLDER = 2;
   */
  FOLDER = 2,

  /**
   * The consumer is a Google Cloud Organization.
   *
   * @generated from enum value: ORGANIZATION = 3;
   */
  ORGANIZATION = 3,

  /**
   * Service-specific resource container which is defined by the service
   * producer to offer their users the ability to manage service control
   * functionalities at a finer level of granularity than the PROJECT.
   *
   * @generated from enum value: SERVICE_SPECIFIC = 4;
   */
  SERVICE_SPECIFIC = 4,
}

/**
 * Describes the enum google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.ConsumerType.
 */
export const CheckResponse_ConsumerInfo_ConsumerTypeSchema: GenEnum<CheckResponse_ConsumerInfo_ConsumerType> = /*@__PURE__*/
  enumDesc(file_google_api_servicecontrol_v1_service_controller, 1, 1, 0);

/**
 * Request message for the Report method.
 *
 * @generated from message google.api.servicecontrol.v1.ReportRequest
 */
export type ReportRequest = Message<"google.api.servicecontrol.v1.ReportRequest"> & {
  /**
   * The service name as specified in its service configuration. For example,
   * `"pubsub.googleapis.com"`.
   *
   * See
   * [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
   * for the definition of a service name.
   *
   * @generated from field: string service_name = 1;
   */
  serviceName: string;

  /**
   * Operations to be reported.
   *
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   *
   * There is no limit on the number of operations in the same ReportRequest,
   * however the ReportRequest size should be no larger than 1MB. See
   * [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors]
   * for partial failure behavior.
   *
   * @generated from field: repeated google.api.servicecontrol.v1.Operation operations = 2;
   */
  operations: Operation[];

  /**
   * Specifies which version of service config should be used to process the
   * request.
   *
   * If unspecified or no matching version can be found, the
   * latest one will be used.
   *
   * @generated from field: string service_config_id = 3;
   */
  serviceConfigId: string;
};

/**
 * Describes the message google.api.servicecontrol.v1.ReportRequest.
 * Use `create(ReportRequestSchema)` to create a new message.
 */
export const ReportRequestSchema: GenMessage<ReportRequest> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_service_controller, 2);

/**
 * Response message for the Report method.
 *
 * @generated from message google.api.servicecontrol.v1.ReportResponse
 */
export type ReportResponse = Message<"google.api.servicecontrol.v1.ReportResponse"> & {
  /**
   * Partial failures, one for each `Operation` in the request that failed
   * processing. There are three possible combinations of the RPC status:
   *
   * 1. The combination of a successful RPC status and an empty `report_errors`
   *    list indicates a complete success where all `Operations` in the
   *    request are processed successfully.
   * 2. The combination of a successful RPC status and a non-empty
   *    `report_errors` list indicates a partial success where some
   *    `Operations` in the request succeeded. Each
   *    `Operation` that failed processing has a corresponding item
   *    in this list.
   * 3. A failed RPC status indicates a general non-deterministic failure.
   *    When this happens, it's impossible to know which of the
   *    'Operations' in the request succeeded or failed.
   *
   * @generated from field: repeated google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
   */
  reportErrors: ReportResponse_ReportError[];

  /**
   * The actual config id used to process the request.
   *
   * @generated from field: string service_config_id = 2;
   */
  serviceConfigId: string;

  /**
   * The current service rollout id used to process the request.
   *
   * @generated from field: string service_rollout_id = 4;
   */
  serviceRolloutId: string;
};

/**
 * Describes the message google.api.servicecontrol.v1.ReportResponse.
 * Use `create(ReportResponseSchema)` to create a new message.
 */
export const ReportResponseSchema: GenMessage<ReportResponse> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_service_controller, 3);

/**
 * Represents the processing error of one
 * [Operation][google.api.servicecontrol.v1.Operation] in the request.
 *
 * @generated from message google.api.servicecontrol.v1.ReportResponse.ReportError
 */
export type ReportResponse_ReportError = Message<"google.api.servicecontrol.v1.ReportResponse.ReportError"> & {
  /**
   * The
   * [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
   * value from the request.
   *
   * @generated from field: string operation_id = 1;
   */
  operationId: string;

  /**
   * Details of the error when processing the
   * [Operation][google.api.servicecontrol.v1.Operation].
   *
   * @generated from field: google.rpc.Status status = 2;
   */
  status?: Status;
};

/**
 * Describes the message google.api.servicecontrol.v1.ReportResponse.ReportError.
 * Use `create(ReportResponse_ReportErrorSchema)` to create a new message.
 */
export const ReportResponse_ReportErrorSchema: GenMessage<ReportResponse_ReportError> = /*@__PURE__*/
  messageDesc(file_google_api_servicecontrol_v1_service_controller, 3, 0);

/**
 * [Google Service Control API](/service-control/overview)
 *
 * Lets clients check and report operations against a [managed
 * service](https://cloud.google.com/service-management/reference/rpc/google.api/servicemanagement.v1#google.api.servicemanagement.v1.ManagedService).
 *
 * @generated from service google.api.servicecontrol.v1.ServiceController
 */
export const ServiceController: GenService<{
  /**
   * Checks whether an operation on a service should be allowed to proceed
   * based on the configuration of the service and related policies. It must be
   * called before the operation is executed.
   *
   * If feasible, the client should cache the check results and reuse them for
   * 60 seconds. In case of any server errors, the client should rely on the
   * cached results for much longer time to avoid outage.
   * WARNING: There is general 60s delay for the configuration and policy
   * propagation, therefore callers MUST NOT depend on the `Check` method having
   * the latest policy information.
   *
   * NOTE: the [CheckRequest][google.api.servicecontrol.v1.CheckRequest] has
   * the size limit (wire-format byte size) of 1MB.
   *
   * This method requires the `servicemanagement.services.check` permission
   * on the specified service. For more information, see
   * [Cloud IAM](https://cloud.google.com/iam).
   *
   * @generated from rpc google.api.servicecontrol.v1.ServiceController.Check
   */
  check: {
    methodKind: "unary";
    input: typeof CheckRequestSchema;
    output: typeof CheckResponseSchema;
  },
  /**
   * Reports operation results to Google Service Control, such as logs and
   * metrics. It should be called after an operation is completed.
   *
   * If feasible, the client should aggregate reporting data for up to 5
   * seconds to reduce API traffic. Limiting aggregation to 5 seconds is to
   * reduce data loss during client crashes. Clients should carefully choose
   * the aggregation time window to avoid data loss risk more than 0.01%
   * for business and compliance reasons.
   *
   * NOTE: the [ReportRequest][google.api.servicecontrol.v1.ReportRequest] has
   * the size limit (wire-format byte size) of 1MB.
   *
   * This method requires the `servicemanagement.services.report` permission
   * on the specified service. For more information, see
   * [Google Cloud IAM](https://cloud.google.com/iam).
   *
   * @generated from rpc google.api.servicecontrol.v1.ServiceController.Report
   */
  report: {
    methodKind: "unary";
    input: typeof ReportRequestSchema;
    output: typeof ReportResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_api_servicecontrol_v1_service_controller, 0);

