// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/webrisk/v1beta1/webrisk.proto (package google.cloud.webrisk.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/webrisk/v1beta1/webrisk.proto.
 */
export const file_google_cloud_webrisk_v1beta1_webrisk: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvY2xvdWQvd2Vicmlzay92MWJldGExL3dlYnJpc2sucHJvdG8SHGdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxYmV0YTEi8gIKHENvbXB1dGVUaHJlYXRMaXN0RGlmZlJlcXVlc3QSQgoLdGhyZWF0X3R5cGUYASABKA4yKC5nb29nbGUuY2xvdWQud2Vicmlzay52MWJldGExLlRocmVhdFR5cGVCA+BBAhIVCg12ZXJzaW9uX3Rva2VuGAIgASgMEmAKC2NvbnN0cmFpbnRzGAMgASgLMkYuZ29vZ2xlLmNsb3VkLndlYnJpc2sudjFiZXRhMS5Db21wdXRlVGhyZWF0TGlzdERpZmZSZXF1ZXN0LkNvbnN0cmFpbnRzQgPgQQIalAEKC0NvbnN0cmFpbnRzEhgKEG1heF9kaWZmX2VudHJpZXMYASABKAUSHAoUbWF4X2RhdGFiYXNlX2VudHJpZXMYAiABKAUSTQoWc3VwcG9ydGVkX2NvbXByZXNzaW9ucxgDIAMoDjItLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxYmV0YTEuQ29tcHJlc3Npb25UeXBlIpoECh1Db21wdXRlVGhyZWF0TGlzdERpZmZSZXNwb25zZRJfCg1yZXNwb25zZV90eXBlGAQgASgOMkguZ29vZ2xlLmNsb3VkLndlYnJpc2sudjFiZXRhMS5Db21wdXRlVGhyZWF0TGlzdERpZmZSZXNwb25zZS5SZXNwb25zZVR5cGUSRQoJYWRkaXRpb25zGAUgASgLMjIuZ29vZ2xlLmNsb3VkLndlYnJpc2sudjFiZXRhMS5UaHJlYXRFbnRyeUFkZGl0aW9ucxJDCghyZW1vdmFscxgGIAEoCzIxLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxYmV0YTEuVGhyZWF0RW50cnlSZW1vdmFscxIZChFuZXdfdmVyc2lvbl90b2tlbhgHIAEoDBJWCghjaGVja3N1bRgIIAEoCzJELmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxYmV0YTEuQ29tcHV0ZVRocmVhdExpc3REaWZmUmVzcG9uc2UuQ2hlY2tzdW0SOQoVcmVjb21tZW5kZWRfbmV4dF9kaWZmGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBoaCghDaGVja3N1bRIOCgZzaGEyNTYYASABKAwiQgoMUmVzcG9uc2VUeXBlEh0KGVJFU1BPTlNFX1RZUEVfVU5TUEVDSUZJRUQQABIICgRESUZGEAESCQoFUkVTRVQQAiJqChFTZWFyY2hVcmlzUmVxdWVzdBIQCgN1cmkYASABKAlCA+BBAhJDCgx0aHJlYXRfdHlwZXMYAiADKA4yKC5nb29nbGUuY2xvdWQud2Vicmlzay52MWJldGExLlRocmVhdFR5cGVCA+BBAiLeAQoSU2VhcmNoVXJpc1Jlc3BvbnNlEkoKBnRocmVhdBgBIAEoCzI6Lmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxYmV0YTEuU2VhcmNoVXJpc1Jlc3BvbnNlLlRocmVhdFVyaRp8CglUaHJlYXRVcmkSPgoMdGhyZWF0X3R5cGVzGAEgAygOMiguZ29vZ2xlLmNsb3VkLndlYnJpc2sudjFiZXRhMS5UaHJlYXRUeXBlEi8KC2V4cGlyZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJvChNTZWFyY2hIYXNoZXNSZXF1ZXN0EhMKC2hhc2hfcHJlZml4GAEgASgMEkMKDHRocmVhdF90eXBlcxgCIAMoDjIoLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxYmV0YTEuVGhyZWF0VHlwZUID4EECIq4CChRTZWFyY2hIYXNoZXNSZXNwb25zZRJOCgd0aHJlYXRzGAEgAygLMj0uZ29vZ2xlLmNsb3VkLndlYnJpc2sudjFiZXRhMS5TZWFyY2hIYXNoZXNSZXNwb25zZS5UaHJlYXRIYXNoEjgKFG5lZ2F0aXZlX2V4cGlyZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBqLAQoKVGhyZWF0SGFzaBI+Cgx0aHJlYXRfdHlwZXMYASADKA4yKC5nb29nbGUuY2xvdWQud2Vicmlzay52MWJldGExLlRocmVhdFR5cGUSDAoEaGFzaBgCIAEoDBIvCgtleHBpcmVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAimQEKFFRocmVhdEVudHJ5QWRkaXRpb25zEjsKCnJhd19oYXNoZXMYASADKAsyJy5nb29nbGUuY2xvdWQud2Vicmlzay52MWJldGExLlJhd0hhc2hlcxJECgtyaWNlX2hhc2hlcxgCIAEoCzIvLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxYmV0YTEuUmljZURlbHRhRW5jb2RpbmcimwEKE1RocmVhdEVudHJ5UmVtb3ZhbHMSPQoLcmF3X2luZGljZXMYASABKAsyKC5nb29nbGUuY2xvdWQud2Vicmlzay52MWJldGExLlJhd0luZGljZXMSRQoMcmljZV9pbmRpY2VzGAIgASgLMi8uZ29vZ2xlLmNsb3VkLndlYnJpc2sudjFiZXRhMS5SaWNlRGVsdGFFbmNvZGluZyIdCgpSYXdJbmRpY2VzEg8KB2luZGljZXMYASADKAUiNAoJUmF3SGFzaGVzEhMKC3ByZWZpeF9zaXplGAEgASgFEhIKCnJhd19oYXNoZXMYAiABKAwiawoRUmljZURlbHRhRW5jb2RpbmcSEwoLZmlyc3RfdmFsdWUYASABKAMSFgoOcmljZV9wYXJhbWV0ZXIYAiABKAUSEwoLZW50cnlfY291bnQYAyABKAUSFAoMZW5jb2RlZF9kYXRhGAQgASgMKmUKClRocmVhdFR5cGUSGwoXVEhSRUFUX1RZUEVfVU5TUEVDSUZJRUQQABILCgdNQUxXQVJFEAESFgoSU09DSUFMX0VOR0lORUVSSU5HEAISFQoRVU5XQU5URURfU09GVFdBUkUQAypGCg9Db21wcmVzc2lvblR5cGUSIAocQ09NUFJFU1NJT05fVFlQRV9VTlNQRUNJRklFRBAAEgcKA1JBVxABEggKBFJJQ0UQAjKeBQoVV2ViUmlza1NlcnZpY2VWMUJldGExEuIBChVDb21wdXRlVGhyZWF0TGlzdERpZmYSOi5nb29nbGUuY2xvdWQud2Vicmlzay52MWJldGExLkNvbXB1dGVUaHJlYXRMaXN0RGlmZlJlcXVlc3QaOy5nb29nbGUuY2xvdWQud2Vicmlzay52MWJldGExLkNvbXB1dGVUaHJlYXRMaXN0RGlmZlJlc3BvbnNlIlDaQSV0aHJlYXRfdHlwZSx2ZXJzaW9uX3Rva2VuLGNvbnN0cmFpbnRzgtPkkwIiEiAvdjFiZXRhMS90aHJlYXRMaXN0czpjb21wdXRlRGlmZhKgAQoKU2VhcmNoVXJpcxIvLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxYmV0YTEuU2VhcmNoVXJpc1JlcXVlc3QaMC5nb29nbGUuY2xvdWQud2Vicmlzay52MWJldGExLlNlYXJjaFVyaXNSZXNwb25zZSIv2kEQdXJpLHRocmVhdF90eXBlc4LT5JMCFhIUL3YxYmV0YTEvdXJpczpzZWFyY2gSsAEKDFNlYXJjaEhhc2hlcxIxLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxYmV0YTEuU2VhcmNoSGFzaGVzUmVxdWVzdBoyLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxYmV0YTEuU2VhcmNoSGFzaGVzUmVzcG9uc2UiOdpBGGhhc2hfcHJlZml4LHRocmVhdF90eXBlc4LT5JMCGBIWL3YxYmV0YTEvaGFzaGVzOnNlYXJjaBpKykEWd2Vicmlzay5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CzwEKGmNvbS5nb29nbGUud2Vicmlzay52MWJldGExQgxXZWJSaXNrUHJvdG9QAVo6Y2xvdWQuZ29vZ2xlLmNvbS9nby93ZWJyaXNrL2FwaXYxYmV0YTEvd2Vicmlza3BiO3dlYnJpc2twYqICBEdDV1KqAhxHb29nbGUuQ2xvdWQuV2ViUmlzay5WMUJldGExygIcR29vZ2xlXENsb3VkXFdlYlJpc2tcVjFiZXRhMeoCH0dvb2dsZTo6Q2xvdWQ6OldlYlJpc2s6OlYxYmV0YTFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_protobuf_timestamp]);

/**
 * Describes an API diff request.
 *
 * @generated from message google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest
 */
export type ComputeThreatListDiffRequest = Message<"google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest"> & {
  /**
   * The ThreatList to update.
   *
   * @generated from field: google.cloud.webrisk.v1beta1.ThreatType threat_type = 1;
   */
  threatType: ThreatType;

  /**
   * The current version token of the client for the requested list (the
   * client version that was received from the last successful diff).
   *
   * @generated from field: bytes version_token = 2;
   */
  versionToken: Uint8Array;

  /**
   * Required. The constraints associated with this request.
   *
   * @generated from field: google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints constraints = 3;
   */
  constraints?: ComputeThreatListDiffRequest_Constraints;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.
 * Use `create(ComputeThreatListDiffRequestSchema)` to create a new message.
 */
export const ComputeThreatListDiffRequestSchema: GenMessage<ComputeThreatListDiffRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 0);

/**
 * The constraints for this diff.
 *
 * @generated from message google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints
 */
export type ComputeThreatListDiffRequest_Constraints = Message<"google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints"> & {
  /**
   * The maximum size in number of entries. The diff will not contain more
   * entries than this value.  This should be a power of 2 between 2**10 and
   * 2**20.  If zero, no diff size limit is set.
   *
   * @generated from field: int32 max_diff_entries = 1;
   */
  maxDiffEntries: number;

  /**
   * Sets the maximum number of entries that the client is willing to have
   * in the local database. This should be a power of 2 between 2**10 and
   * 2**20. If zero, no database size limit is set.
   *
   * @generated from field: int32 max_database_entries = 2;
   */
  maxDatabaseEntries: number;

  /**
   * The compression types supported by the client.
   *
   * @generated from field: repeated google.cloud.webrisk.v1beta1.CompressionType supported_compressions = 3;
   */
  supportedCompressions: CompressionType[];
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.
 * Use `create(ComputeThreatListDiffRequest_ConstraintsSchema)` to create a new message.
 */
export const ComputeThreatListDiffRequest_ConstraintsSchema: GenMessage<ComputeThreatListDiffRequest_Constraints> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 0, 0);

/**
 * @generated from message google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse
 */
export type ComputeThreatListDiffResponse = Message<"google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse"> & {
  /**
   * The type of response. This may indicate that an action must be taken by the
   * client when the response is received.
   *
   * @generated from field: google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.ResponseType response_type = 4;
   */
  responseType: ComputeThreatListDiffResponse_ResponseType;

  /**
   * A set of entries to add to a local threat type's list.
   *
   * @generated from field: google.cloud.webrisk.v1beta1.ThreatEntryAdditions additions = 5;
   */
  additions?: ThreatEntryAdditions;

  /**
   * A set of entries to remove from a local threat type's list.
   * This field may be empty.
   *
   * @generated from field: google.cloud.webrisk.v1beta1.ThreatEntryRemovals removals = 6;
   */
  removals?: ThreatEntryRemovals;

  /**
   * The new opaque client version token.
   *
   * @generated from field: bytes new_version_token = 7;
   */
  newVersionToken: Uint8Array;

  /**
   * The expected SHA256 hash of the client state; that is, of the sorted list
   * of all hashes present in the database after applying the provided diff.
   * If the client state doesn't match the expected state, the client must
   * disregard this diff and retry later.
   *
   * @generated from field: google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum checksum = 8;
   */
  checksum?: ComputeThreatListDiffResponse_Checksum;

  /**
   * The soonest the client should wait before issuing any diff
   * request. Querying sooner is unlikely to produce a meaningful diff.
   * Waiting longer is acceptable considering the use case.
   * If this field is not set clients may update as soon as they want.
   *
   * @generated from field: google.protobuf.Timestamp recommended_next_diff = 2;
   */
  recommendedNextDiff?: Timestamp;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.
 * Use `create(ComputeThreatListDiffResponseSchema)` to create a new message.
 */
export const ComputeThreatListDiffResponseSchema: GenMessage<ComputeThreatListDiffResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 1);

/**
 * The expected state of a client's local database.
 *
 * @generated from message google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum
 */
export type ComputeThreatListDiffResponse_Checksum = Message<"google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum"> & {
  /**
   * The SHA256 hash of the client state; that is, of the sorted list of all
   * hashes present in the database.
   *
   * @generated from field: bytes sha256 = 1;
   */
  sha256: Uint8Array;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.
 * Use `create(ComputeThreatListDiffResponse_ChecksumSchema)` to create a new message.
 */
export const ComputeThreatListDiffResponse_ChecksumSchema: GenMessage<ComputeThreatListDiffResponse_Checksum> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 1, 0);

/**
 * The type of response sent to the client.
 *
 * @generated from enum google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.ResponseType
 */
export enum ComputeThreatListDiffResponse_ResponseType {
  /**
   * Unknown.
   *
   * @generated from enum value: RESPONSE_TYPE_UNSPECIFIED = 0;
   */
  RESPONSE_TYPE_UNSPECIFIED = 0,

  /**
   * Partial updates are applied to the client's existing local database.
   *
   * @generated from enum value: DIFF = 1;
   */
  DIFF = 1,

  /**
   * Full updates resets the client's entire local database. This means
   * that either the client had no state, was seriously out-of-date,
   * or the client is believed to be corrupt.
   *
   * @generated from enum value: RESET = 2;
   */
  RESET = 2,
}

/**
 * Describes the enum google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.ResponseType.
 */
export const ComputeThreatListDiffResponse_ResponseTypeSchema: GenEnum<ComputeThreatListDiffResponse_ResponseType> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1beta1_webrisk, 1, 0);

/**
 * Request to check URI entries against threatLists.
 *
 * @generated from message google.cloud.webrisk.v1beta1.SearchUrisRequest
 */
export type SearchUrisRequest = Message<"google.cloud.webrisk.v1beta1.SearchUrisRequest"> & {
  /**
   * Required. The URI to be checked for matches.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Required. The ThreatLists to search in.
   *
   * @generated from field: repeated google.cloud.webrisk.v1beta1.ThreatType threat_types = 2;
   */
  threatTypes: ThreatType[];
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.SearchUrisRequest.
 * Use `create(SearchUrisRequestSchema)` to create a new message.
 */
export const SearchUrisRequestSchema: GenMessage<SearchUrisRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 2);

/**
 * @generated from message google.cloud.webrisk.v1beta1.SearchUrisResponse
 */
export type SearchUrisResponse = Message<"google.cloud.webrisk.v1beta1.SearchUrisResponse"> & {
  /**
   * The threat list matches. This may be empty if the URI is on no list.
   *
   * @generated from field: google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri threat = 1;
   */
  threat?: SearchUrisResponse_ThreatUri;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.SearchUrisResponse.
 * Use `create(SearchUrisResponseSchema)` to create a new message.
 */
export const SearchUrisResponseSchema: GenMessage<SearchUrisResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 3);

/**
 * Contains threat information on a matching uri.
 *
 * @generated from message google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri
 */
export type SearchUrisResponse_ThreatUri = Message<"google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri"> & {
  /**
   * The ThreatList this threat belongs to.
   *
   * @generated from field: repeated google.cloud.webrisk.v1beta1.ThreatType threat_types = 1;
   */
  threatTypes: ThreatType[];

  /**
   * The cache lifetime for the returned match. Clients must not cache this
   * response past this timestamp to avoid false positives.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 2;
   */
  expireTime?: Timestamp;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.
 * Use `create(SearchUrisResponse_ThreatUriSchema)` to create a new message.
 */
export const SearchUrisResponse_ThreatUriSchema: GenMessage<SearchUrisResponse_ThreatUri> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 3, 0);

/**
 * Request to return full hashes matched by the provided hash prefixes.
 *
 * @generated from message google.cloud.webrisk.v1beta1.SearchHashesRequest
 */
export type SearchHashesRequest = Message<"google.cloud.webrisk.v1beta1.SearchHashesRequest"> & {
  /**
   * A hash prefix, consisting of the most significant 4-32 bytes of a SHA256
   * hash. For JSON requests, this field is base64-encoded.
   *
   * @generated from field: bytes hash_prefix = 1;
   */
  hashPrefix: Uint8Array;

  /**
   * Required. The ThreatLists to search in.
   *
   * @generated from field: repeated google.cloud.webrisk.v1beta1.ThreatType threat_types = 2;
   */
  threatTypes: ThreatType[];
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.SearchHashesRequest.
 * Use `create(SearchHashesRequestSchema)` to create a new message.
 */
export const SearchHashesRequestSchema: GenMessage<SearchHashesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 4);

/**
 * @generated from message google.cloud.webrisk.v1beta1.SearchHashesResponse
 */
export type SearchHashesResponse = Message<"google.cloud.webrisk.v1beta1.SearchHashesResponse"> & {
  /**
   * The full hashes that matched the requested prefixes.
   * The hash will be populated in the key.
   *
   * @generated from field: repeated google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash threats = 1;
   */
  threats: SearchHashesResponse_ThreatHash[];

  /**
   * For requested entities that did not match the threat list, how long to
   * cache the response until.
   *
   * @generated from field: google.protobuf.Timestamp negative_expire_time = 2;
   */
  negativeExpireTime?: Timestamp;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.SearchHashesResponse.
 * Use `create(SearchHashesResponseSchema)` to create a new message.
 */
export const SearchHashesResponseSchema: GenMessage<SearchHashesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 5);

/**
 * Contains threat information on a matching hash.
 *
 * @generated from message google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash
 */
export type SearchHashesResponse_ThreatHash = Message<"google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash"> & {
  /**
   * The ThreatList this threat belongs to.
   * This must contain at least one entry.
   *
   * @generated from field: repeated google.cloud.webrisk.v1beta1.ThreatType threat_types = 1;
   */
  threatTypes: ThreatType[];

  /**
   * A 32 byte SHA256 hash. This field is in binary format. For JSON
   * requests, hashes are base64-encoded.
   *
   * @generated from field: bytes hash = 2;
   */
  hash: Uint8Array;

  /**
   * The cache lifetime for the returned match. Clients must not cache this
   * response past this timestamp to avoid false positives.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 3;
   */
  expireTime?: Timestamp;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.
 * Use `create(SearchHashesResponse_ThreatHashSchema)` to create a new message.
 */
export const SearchHashesResponse_ThreatHashSchema: GenMessage<SearchHashesResponse_ThreatHash> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 5, 0);

/**
 * Contains the set of entries to add to a local database.
 * May contain a combination of compressed and raw data in a single response.
 *
 * @generated from message google.cloud.webrisk.v1beta1.ThreatEntryAdditions
 */
export type ThreatEntryAdditions = Message<"google.cloud.webrisk.v1beta1.ThreatEntryAdditions"> & {
  /**
   * The raw SHA256-formatted entries.
   * Repeated to allow returning sets of hashes with different prefix sizes.
   *
   * @generated from field: repeated google.cloud.webrisk.v1beta1.RawHashes raw_hashes = 1;
   */
  rawHashes: RawHashes[];

  /**
   * The encoded 4-byte prefixes of SHA256-formatted entries, using a
   * Golomb-Rice encoding. The hashes are converted to uint32, sorted in
   * ascending order, then delta encoded and stored as encoded_data.
   *
   * @generated from field: google.cloud.webrisk.v1beta1.RiceDeltaEncoding rice_hashes = 2;
   */
  riceHashes?: RiceDeltaEncoding;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.ThreatEntryAdditions.
 * Use `create(ThreatEntryAdditionsSchema)` to create a new message.
 */
export const ThreatEntryAdditionsSchema: GenMessage<ThreatEntryAdditions> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 6);

/**
 * Contains the set of entries to remove from a local database.
 *
 * @generated from message google.cloud.webrisk.v1beta1.ThreatEntryRemovals
 */
export type ThreatEntryRemovals = Message<"google.cloud.webrisk.v1beta1.ThreatEntryRemovals"> & {
  /**
   * The raw removal indices for a local list.
   *
   * @generated from field: google.cloud.webrisk.v1beta1.RawIndices raw_indices = 1;
   */
  rawIndices?: RawIndices;

  /**
   * The encoded local, lexicographically-sorted list indices, using a
   * Golomb-Rice encoding. Used for sending compressed removal indices. The
   * removal indices (uint32) are sorted in ascending order, then delta encoded
   * and stored as encoded_data.
   *
   * @generated from field: google.cloud.webrisk.v1beta1.RiceDeltaEncoding rice_indices = 2;
   */
  riceIndices?: RiceDeltaEncoding;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.ThreatEntryRemovals.
 * Use `create(ThreatEntryRemovalsSchema)` to create a new message.
 */
export const ThreatEntryRemovalsSchema: GenMessage<ThreatEntryRemovals> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 7);

/**
 * A set of raw indices to remove from a local list.
 *
 * @generated from message google.cloud.webrisk.v1beta1.RawIndices
 */
export type RawIndices = Message<"google.cloud.webrisk.v1beta1.RawIndices"> & {
  /**
   * The indices to remove from a lexicographically-sorted local list.
   *
   * @generated from field: repeated int32 indices = 1;
   */
  indices: number[];
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.RawIndices.
 * Use `create(RawIndicesSchema)` to create a new message.
 */
export const RawIndicesSchema: GenMessage<RawIndices> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 8);

/**
 * The uncompressed threat entries in hash format.
 * Hashes can be anywhere from 4 to 32 bytes in size. A large majority are 4
 * bytes, but some hashes are lengthened if they collide with the hash of a
 * popular URI.
 *
 * Used for sending ThreatEntryAdditons to clients that do not support
 * compression, or when sending non-4-byte hashes to clients that do support
 * compression.
 *
 * @generated from message google.cloud.webrisk.v1beta1.RawHashes
 */
export type RawHashes = Message<"google.cloud.webrisk.v1beta1.RawHashes"> & {
  /**
   * The number of bytes for each prefix encoded below.  This field can be
   * anywhere from 4 (shortest prefix) to 32 (full SHA256 hash).
   *
   * @generated from field: int32 prefix_size = 1;
   */
  prefixSize: number;

  /**
   * The hashes, in binary format, concatenated into one long string. Hashes are
   * sorted in lexicographic order. For JSON API users, hashes are
   * base64-encoded.
   *
   * @generated from field: bytes raw_hashes = 2;
   */
  rawHashes: Uint8Array;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.RawHashes.
 * Use `create(RawHashesSchema)` to create a new message.
 */
export const RawHashesSchema: GenMessage<RawHashes> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 9);

/**
 * The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or
 * compressed removal indices.
 *
 * @generated from message google.cloud.webrisk.v1beta1.RiceDeltaEncoding
 */
export type RiceDeltaEncoding = Message<"google.cloud.webrisk.v1beta1.RiceDeltaEncoding"> & {
  /**
   * The offset of the first entry in the encoded data, or, if only a single
   * integer was encoded, that single integer's value. If the field is empty or
   * missing, assume zero.
   *
   * @generated from field: int64 first_value = 1;
   */
  firstValue: bigint;

  /**
   * The Golomb-Rice parameter, which is a number between 2 and 28. This field
   * is missing (that is, zero) if `num_entries` is zero.
   *
   * @generated from field: int32 rice_parameter = 2;
   */
  riceParameter: number;

  /**
   * The number of entries that are delta encoded in the encoded data. If only a
   * single integer was encoded, this will be zero and the single value will be
   * stored in `first_value`.
   *
   * @generated from field: int32 entry_count = 3;
   */
  entryCount: number;

  /**
   * The encoded deltas that are encoded using the Golomb-Rice coder.
   *
   * @generated from field: bytes encoded_data = 4;
   */
  encodedData: Uint8Array;
};

/**
 * Describes the message google.cloud.webrisk.v1beta1.RiceDeltaEncoding.
 * Use `create(RiceDeltaEncodingSchema)` to create a new message.
 */
export const RiceDeltaEncodingSchema: GenMessage<RiceDeltaEncoding> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1beta1_webrisk, 10);

/**
 * The type of threat. This maps dirrectly to the threat list a threat may
 * belong to.
 *
 * @generated from enum google.cloud.webrisk.v1beta1.ThreatType
 */
export enum ThreatType {
  /**
   * Unknown.
   *
   * @generated from enum value: THREAT_TYPE_UNSPECIFIED = 0;
   */
  THREAT_TYPE_UNSPECIFIED = 0,

  /**
   * Malware targeting any platform.
   *
   * @generated from enum value: MALWARE = 1;
   */
  MALWARE = 1,

  /**
   * Social engineering targeting any platform.
   *
   * @generated from enum value: SOCIAL_ENGINEERING = 2;
   */
  SOCIAL_ENGINEERING = 2,

  /**
   * Unwanted software targeting any platform.
   *
   * @generated from enum value: UNWANTED_SOFTWARE = 3;
   */
  UNWANTED_SOFTWARE = 3,
}

/**
 * Describes the enum google.cloud.webrisk.v1beta1.ThreatType.
 */
export const ThreatTypeSchema: GenEnum<ThreatType> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1beta1_webrisk, 0);

/**
 * The ways in which threat entry sets can be compressed.
 *
 * @generated from enum google.cloud.webrisk.v1beta1.CompressionType
 */
export enum CompressionType {
  /**
   * Unknown.
   *
   * @generated from enum value: COMPRESSION_TYPE_UNSPECIFIED = 0;
   */
  COMPRESSION_TYPE_UNSPECIFIED = 0,

  /**
   * Raw, uncompressed data.
   *
   * @generated from enum value: RAW = 1;
   */
  RAW = 1,

  /**
   * Rice-Golomb encoded data.
   *
   * @generated from enum value: RICE = 2;
   */
  RICE = 2,
}

/**
 * Describes the enum google.cloud.webrisk.v1beta1.CompressionType.
 */
export const CompressionTypeSchema: GenEnum<CompressionType> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1beta1_webrisk, 1);

/**
 * Web Risk v1beta1 API defines an interface to detect malicious URLs on your
 * website and in client applications.
 *
 * @generated from service google.cloud.webrisk.v1beta1.WebRiskServiceV1Beta1
 */
export const WebRiskServiceV1Beta1: GenService<{
  /**
   * Gets the most recent threat list diffs.
   *
   * @generated from rpc google.cloud.webrisk.v1beta1.WebRiskServiceV1Beta1.ComputeThreatListDiff
   */
  computeThreatListDiff: {
    methodKind: "unary";
    input: typeof ComputeThreatListDiffRequestSchema;
    output: typeof ComputeThreatListDiffResponseSchema;
  },
  /**
   * This method is used to check whether a URI is on a given threatList.
   *
   * @generated from rpc google.cloud.webrisk.v1beta1.WebRiskServiceV1Beta1.SearchUris
   */
  searchUris: {
    methodKind: "unary";
    input: typeof SearchUrisRequestSchema;
    output: typeof SearchUrisResponseSchema;
  },
  /**
   * Gets the full hashes that match the requested hash prefix.
   * This is used after a hash prefix is looked up in a threatList
   * and there is a match. The client side threatList only holds partial hashes
   * so the client must query this method to determine if there is a full
   * hash match of a threat.
   *
   * @generated from rpc google.cloud.webrisk.v1beta1.WebRiskServiceV1Beta1.SearchHashes
   */
  searchHashes: {
    methodKind: "unary";
    input: typeof SearchHashesRequestSchema;
    output: typeof SearchHashesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_webrisk_v1beta1_webrisk, 0);

