// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/webrisk/v1/webrisk.proto (package google.cloud.webrisk.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/webrisk/v1/webrisk.proto.
 */
export const file_google_cloud_webrisk_v1_webrisk: GenFile = /*@__PURE__*/
  fileDesc("CiVnb29nbGUvY2xvdWQvd2Vicmlzay92MS93ZWJyaXNrLnByb3RvEhdnb29nbGUuY2xvdWQud2Vicmlzay52MSLjAgocQ29tcHV0ZVRocmVhdExpc3REaWZmUmVxdWVzdBI9Cgt0aHJlYXRfdHlwZRgBIAEoDjIjLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlRocmVhdFR5cGVCA+BBAhIVCg12ZXJzaW9uX3Rva2VuGAIgASgMElsKC2NvbnN0cmFpbnRzGAMgASgLMkEuZ29vZ2xlLmNsb3VkLndlYnJpc2sudjEuQ29tcHV0ZVRocmVhdExpc3REaWZmUmVxdWVzdC5Db25zdHJhaW50c0ID4EECGo8BCgtDb25zdHJhaW50cxIYChBtYXhfZGlmZl9lbnRyaWVzGAEgASgFEhwKFG1heF9kYXRhYmFzZV9lbnRyaWVzGAIgASgFEkgKFnN1cHBvcnRlZF9jb21wcmVzc2lvbnMYAyADKA4yKC5nb29nbGUuY2xvdWQud2Vicmlzay52MS5Db21wcmVzc2lvblR5cGUihgQKHUNvbXB1dGVUaHJlYXRMaXN0RGlmZlJlc3BvbnNlEloKDXJlc3BvbnNlX3R5cGUYBCABKA4yQy5nb29nbGUuY2xvdWQud2Vicmlzay52MS5Db21wdXRlVGhyZWF0TGlzdERpZmZSZXNwb25zZS5SZXNwb25zZVR5cGUSQAoJYWRkaXRpb25zGAUgASgLMi0uZ29vZ2xlLmNsb3VkLndlYnJpc2sudjEuVGhyZWF0RW50cnlBZGRpdGlvbnMSPgoIcmVtb3ZhbHMYBiABKAsyLC5nb29nbGUuY2xvdWQud2Vicmlzay52MS5UaHJlYXRFbnRyeVJlbW92YWxzEhkKEW5ld192ZXJzaW9uX3Rva2VuGAcgASgMElEKCGNoZWNrc3VtGAggASgLMj8uZ29vZ2xlLmNsb3VkLndlYnJpc2sudjEuQ29tcHV0ZVRocmVhdExpc3REaWZmUmVzcG9uc2UuQ2hlY2tzdW0SOQoVcmVjb21tZW5kZWRfbmV4dF9kaWZmGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBoaCghDaGVja3N1bRIOCgZzaGEyNTYYASABKAwiQgoMUmVzcG9uc2VUeXBlEh0KGVJFU1BPTlNFX1RZUEVfVU5TUEVDSUZJRUQQABIICgRESUZGEAESCQoFUkVTRVQQAiJlChFTZWFyY2hVcmlzUmVxdWVzdBIQCgN1cmkYASABKAlCA+BBAhI+Cgx0aHJlYXRfdHlwZXMYAiADKA4yIy5nb29nbGUuY2xvdWQud2Vicmlzay52MS5UaHJlYXRUeXBlQgPgQQIi1AEKElNlYXJjaFVyaXNSZXNwb25zZRJFCgZ0aHJlYXQYASABKAsyNS5nb29nbGUuY2xvdWQud2Vicmlzay52MS5TZWFyY2hVcmlzUmVzcG9uc2UuVGhyZWF0VXJpGncKCVRocmVhdFVyaRI5Cgx0aHJlYXRfdHlwZXMYASADKA4yIy5nb29nbGUuY2xvdWQud2Vicmlzay52MS5UaHJlYXRUeXBlEi8KC2V4cGlyZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJqChNTZWFyY2hIYXNoZXNSZXF1ZXN0EhMKC2hhc2hfcHJlZml4GAEgASgMEj4KDHRocmVhdF90eXBlcxgCIAMoDjIjLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlRocmVhdFR5cGVCA+BBAiKkAgoUU2VhcmNoSGFzaGVzUmVzcG9uc2USSQoHdGhyZWF0cxgBIAMoCzI4Lmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlNlYXJjaEhhc2hlc1Jlc3BvbnNlLlRocmVhdEhhc2gSOAoUbmVnYXRpdmVfZXhwaXJlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGoYBCgpUaHJlYXRIYXNoEjkKDHRocmVhdF90eXBlcxgBIAMoDjIjLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlRocmVhdFR5cGUSDAoEaGFzaBgCIAEoDBIvCgtleHBpcmVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAijwEKFFRocmVhdEVudHJ5QWRkaXRpb25zEjYKCnJhd19oYXNoZXMYASADKAsyIi5nb29nbGUuY2xvdWQud2Vicmlzay52MS5SYXdIYXNoZXMSPwoLcmljZV9oYXNoZXMYAiABKAsyKi5nb29nbGUuY2xvdWQud2Vicmlzay52MS5SaWNlRGVsdGFFbmNvZGluZyKRAQoTVGhyZWF0RW50cnlSZW1vdmFscxI4CgtyYXdfaW5kaWNlcxgBIAEoCzIjLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlJhd0luZGljZXMSQAoMcmljZV9pbmRpY2VzGAIgASgLMiouZ29vZ2xlLmNsb3VkLndlYnJpc2sudjEuUmljZURlbHRhRW5jb2RpbmciHQoKUmF3SW5kaWNlcxIPCgdpbmRpY2VzGAEgAygFIjQKCVJhd0hhc2hlcxITCgtwcmVmaXhfc2l6ZRgBIAEoBRISCgpyYXdfaGFzaGVzGAIgASgMImsKEVJpY2VEZWx0YUVuY29kaW5nEhMKC2ZpcnN0X3ZhbHVlGAEgASgDEhYKDnJpY2VfcGFyYW1ldGVyGAIgASgFEhMKC2VudHJ5X2NvdW50GAMgASgFEhQKDGVuY29kZWRfZGF0YRgEIAEoDCJeCgpTdWJtaXNzaW9uEhAKA3VyaRgBIAEoCUID4EECEj4KDHRocmVhdF90eXBlcxgCIAMoDjIjLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlRocmVhdFR5cGVCA+BBAyKlBgoKVGhyZWF0SW5mbxJBCgphYnVzZV90eXBlGAEgASgOMi0uZ29vZ2xlLmNsb3VkLndlYnJpc2sudjEuVGhyZWF0SW5mby5BYnVzZVR5cGUSSQoRdGhyZWF0X2NvbmZpZGVuY2UYAiABKAsyLi5nb29nbGUuY2xvdWQud2Vicmlzay52MS5UaHJlYXRJbmZvLkNvbmZpZGVuY2USVQoUdGhyZWF0X2p1c3RpZmljYXRpb24YAyABKAsyNy5nb29nbGUuY2xvdWQud2Vicmlzay52MS5UaHJlYXRJbmZvLlRocmVhdEp1c3RpZmljYXRpb24aywEKCkNvbmZpZGVuY2USDwoFc2NvcmUYASABKAJIABJPCgVsZXZlbBgCIAEoDjI+Lmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlRocmVhdEluZm8uQ29uZmlkZW5jZS5Db25maWRlbmNlTGV2ZWxIACJSCg9Db25maWRlbmNlTGV2ZWwSIAocQ09ORklERU5DRV9MRVZFTF9VTlNQRUNJRklFRBAAEgcKA0xPVxABEgoKBk1FRElVTRACEggKBEhJR0gQA0IHCgV2YWx1ZRr+AQoTVGhyZWF0SnVzdGlmaWNhdGlvbhJaCgZsYWJlbHMYASADKA4ySi5nb29nbGUuY2xvdWQud2Vicmlzay52MS5UaHJlYXRJbmZvLlRocmVhdEp1c3RpZmljYXRpb24uSnVzdGlmaWNhdGlvbkxhYmVsEhAKCGNvbW1lbnRzGAIgAygJInkKEkp1c3RpZmljYXRpb25MYWJlbBIjCh9KVVNUSUZJQ0FUSU9OX0xBQkVMX1VOU1BFQ0lGSUVEEAASFwoTTUFOVUFMX1ZFUklGSUNBVElPThABEg8KC1VTRVJfUkVQT1JUEAISFAoQQVVUT01BVEVEX1JFUE9SVBADImMKCUFidXNlVHlwZRIaChZBQlVTRV9UWVBFX1VOU1BFQ0lGSUVEEAASCwoHTUFMV0FSRRABEhYKElNPQ0lBTF9FTkdJTkVFUklORxACEhUKEVVOV0FOVEVEX1NPRlRXQVJFEAMiwAEKD1RocmVhdERpc2NvdmVyeRJDCghwbGF0Zm9ybRgBIAEoDjIxLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlRocmVhdERpc2NvdmVyeS5QbGF0Zm9ybRIUCgxyZWdpb25fY29kZXMYAiADKAkiUgoIUGxhdGZvcm0SGAoUUExBVEZPUk1fVU5TUEVDSUZJRUQQABILCgdBTkRST0lEEAESBwoDSU9TEAISCQoFTUFDT1MQAxILCgdXSU5ET1dTEAQinAEKF0NyZWF0ZVN1Ym1pc3Npb25SZXF1ZXN0EkMKBnBhcmVudBgBIAEoCUIz4EEC+kEtCitjbG91ZHJlc291cmNlbWFuYWdlci5nb29nbGVhcGlzLmNvbS9Qcm9qZWN0EjwKCnN1Ym1pc3Npb24YAiABKAsyIy5nb29nbGUuY2xvdWQud2Vicmlzay52MS5TdWJtaXNzaW9uQgPgQQIikwIKEFN1Ym1pdFVyaVJlcXVlc3QSQwoGcGFyZW50GAEgASgJQjPgQQL6QS0KK2Nsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1Byb2plY3QSPAoKc3VibWlzc2lvbhgCIAEoCzIjLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlN1Ym1pc3Npb25CA+BBAhI4Cgt0aHJlYXRfaW5mbxgDIAEoCzIjLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlRocmVhdEluZm8SQgoQdGhyZWF0X2Rpc2NvdmVyeRgEIAEoCzIoLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlRocmVhdERpc2NvdmVyeSKZAgoRU3VibWl0VXJpTWV0YWRhdGESPwoFc3RhdGUYASABKA4yMC5nb29nbGUuY2xvdWQud2Vicmlzay52MS5TdWJtaXRVcmlNZXRhZGF0YS5TdGF0ZRIvCgtjcmVhdGVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLdXBkYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wImEKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASCwoHUlVOTklORxABEg0KCVNVQ0NFRURFRBACEg0KCUNBTkNFTExFRBADEgoKBkZBSUxFRBAEEgoKBkNMT1NFRBAFKo8BCgpUaHJlYXRUeXBlEhsKF1RIUkVBVF9UWVBFX1VOU1BFQ0lGSUVEEAASCwoHTUFMV0FSRRABEhYKElNPQ0lBTF9FTkdJTkVFUklORxACEhUKEVVOV0FOVEVEX1NPRlRXQVJFEAMSKAokU09DSUFMX0VOR0lORUVSSU5HX0VYVEVOREVEX0NPVkVSQUdFEAQqRgoPQ29tcHJlc3Npb25UeXBlEiAKHENPTVBSRVNTSU9OX1RZUEVfVU5TUEVDSUZJRUQQABIHCgNSQVcQARIICgRSSUNFEAIyzQcKDldlYlJpc2tTZXJ2aWNlEtMBChVDb21wdXRlVGhyZWF0TGlzdERpZmYSNS5nb29nbGUuY2xvdWQud2Vicmlzay52MS5Db21wdXRlVGhyZWF0TGlzdERpZmZSZXF1ZXN0GjYuZ29vZ2xlLmNsb3VkLndlYnJpc2sudjEuQ29tcHV0ZVRocmVhdExpc3REaWZmUmVzcG9uc2UiS9pBJXRocmVhdF90eXBlLHZlcnNpb25fdG9rZW4sY29uc3RyYWludHOC0+STAh0SGy92MS90aHJlYXRMaXN0czpjb21wdXRlRGlmZhKRAQoKU2VhcmNoVXJpcxIqLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlNlYXJjaFVyaXNSZXF1ZXN0GisuZ29vZ2xlLmNsb3VkLndlYnJpc2sudjEuU2VhcmNoVXJpc1Jlc3BvbnNlIiraQRB1cmksdGhyZWF0X3R5cGVzgtPkkwIREg8vdjEvdXJpczpzZWFyY2gSoQEKDFNlYXJjaEhhc2hlcxIsLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLlNlYXJjaEhhc2hlc1JlcXVlc3QaLS5nb29nbGUuY2xvdWQud2Vicmlzay52MS5TZWFyY2hIYXNoZXNSZXNwb25zZSI02kEYaGFzaF9wcmVmaXgsdGhyZWF0X3R5cGVzgtPkkwITEhEvdjEvaGFzaGVzOnNlYXJjaBK2AQoQQ3JlYXRlU3VibWlzc2lvbhIwLmdvb2dsZS5jbG91ZC53ZWJyaXNrLnYxLkNyZWF0ZVN1Ym1pc3Npb25SZXF1ZXN0GiMuZ29vZ2xlLmNsb3VkLndlYnJpc2sudjEuU3VibWlzc2lvbiJL2kERcGFyZW50LHN1Ym1pc3Npb26C0+STAjE6CnN1Ym1pc3Npb24iIy92MS97cGFyZW50PXByb2plY3RzLyp9L3N1Ym1pc3Npb25zEqcBCglTdWJtaXRVcmkSKS5nb29nbGUuY2xvdWQud2Vicmlzay52MS5TdWJtaXRVcmlSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJQykEfCgpTdWJtaXNzaW9uEhFTdWJtaXRVcmlNZXRhZGF0YYLT5JMCKDoBKiIjL3YxL3twYXJlbnQ9cHJvamVjdHMvKn0vdXJpczpzdWJtaXQaSspBFndlYnJpc2suZ29vZ2xlYXBpcy5jb23SQS5odHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtQrYBChVjb20uZ29vZ2xlLndlYnJpc2sudjFCDFdlYlJpc2tQcm90b1ABWjVjbG91ZC5nb29nbGUuY29tL2dvL3dlYnJpc2svYXBpdjEvd2Vicmlza3BiO3dlYnJpc2twYqICBEdDV1KqAhdHb29nbGUuQ2xvdWQuV2ViUmlzay5WMcoCF0dvb2dsZVxDbG91ZFxXZWJSaXNrXFYx6gIaR29vZ2xlOjpDbG91ZDo6V2ViUmlzazo6VjFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_timestamp]);

/**
 * Describes an API diff request.
 *
 * @generated from message google.cloud.webrisk.v1.ComputeThreatListDiffRequest
 */
export type ComputeThreatListDiffRequest = Message<"google.cloud.webrisk.v1.ComputeThreatListDiffRequest"> & {
  /**
   * Required. The threat list to update. Only a single ThreatType should be
   * specified per request. If you want to handle multiple ThreatTypes, you must
   * make one request per ThreatType.
   *
   * @generated from field: google.cloud.webrisk.v1.ThreatType threat_type = 1;
   */
  threatType: ThreatType;

  /**
   * The current version token of the client for the requested list (the
   * client version that was received from the last successful diff).
   * If the client does not have a version token (this is the first time calling
   * ComputeThreatListDiff), this may be left empty and a full database
   * snapshot will be returned.
   *
   * @generated from field: bytes version_token = 2;
   */
  versionToken: Uint8Array;

  /**
   * Required. The constraints associated with this request.
   *
   * @generated from field: google.cloud.webrisk.v1.ComputeThreatListDiffRequest.Constraints constraints = 3;
   */
  constraints?: ComputeThreatListDiffRequest_Constraints;
};

/**
 * Describes the message google.cloud.webrisk.v1.ComputeThreatListDiffRequest.
 * Use `create(ComputeThreatListDiffRequestSchema)` to create a new message.
 */
export const ComputeThreatListDiffRequestSchema: GenMessage<ComputeThreatListDiffRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 0);

/**
 * The constraints for this diff.
 *
 * @generated from message google.cloud.webrisk.v1.ComputeThreatListDiffRequest.Constraints
 */
export type ComputeThreatListDiffRequest_Constraints = Message<"google.cloud.webrisk.v1.ComputeThreatListDiffRequest.Constraints"> & {
  /**
   * The maximum size in number of entries. The diff will not contain more
   * entries than this value.  This should be a power of 2 between 2**10 and
   * 2**20.  If zero, no diff size limit is set.
   *
   * @generated from field: int32 max_diff_entries = 1;
   */
  maxDiffEntries: number;

  /**
   * Sets the maximum number of entries that the client is willing to have
   * in the local database. This should be a power of 2 between 2**10 and
   * 2**20. If zero, no database size limit is set.
   *
   * @generated from field: int32 max_database_entries = 2;
   */
  maxDatabaseEntries: number;

  /**
   * The compression types supported by the client.
   *
   * @generated from field: repeated google.cloud.webrisk.v1.CompressionType supported_compressions = 3;
   */
  supportedCompressions: CompressionType[];
};

/**
 * Describes the message google.cloud.webrisk.v1.ComputeThreatListDiffRequest.Constraints.
 * Use `create(ComputeThreatListDiffRequest_ConstraintsSchema)` to create a new message.
 */
export const ComputeThreatListDiffRequest_ConstraintsSchema: GenMessage<ComputeThreatListDiffRequest_Constraints> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 0, 0);

/**
 * @generated from message google.cloud.webrisk.v1.ComputeThreatListDiffResponse
 */
export type ComputeThreatListDiffResponse = Message<"google.cloud.webrisk.v1.ComputeThreatListDiffResponse"> & {
  /**
   * The type of response. This may indicate that an action must be taken by the
   * client when the response is received.
   *
   * @generated from field: google.cloud.webrisk.v1.ComputeThreatListDiffResponse.ResponseType response_type = 4;
   */
  responseType: ComputeThreatListDiffResponse_ResponseType;

  /**
   * A set of entries to add to a local threat type's list.
   *
   * @generated from field: google.cloud.webrisk.v1.ThreatEntryAdditions additions = 5;
   */
  additions?: ThreatEntryAdditions;

  /**
   * A set of entries to remove from a local threat type's list.
   * This field may be empty.
   *
   * @generated from field: google.cloud.webrisk.v1.ThreatEntryRemovals removals = 6;
   */
  removals?: ThreatEntryRemovals;

  /**
   * The new opaque client version token. This should be retained by the client
   * and passed into the next call of ComputeThreatListDiff as 'version_token'.
   * A separate version token should be stored and used for each threatList.
   *
   * @generated from field: bytes new_version_token = 7;
   */
  newVersionToken: Uint8Array;

  /**
   * The expected SHA256 hash of the client state; that is, of the sorted list
   * of all hashes present in the database after applying the provided diff.
   * If the client state doesn't match the expected state, the client must
   * discard this diff and retry later.
   *
   * @generated from field: google.cloud.webrisk.v1.ComputeThreatListDiffResponse.Checksum checksum = 8;
   */
  checksum?: ComputeThreatListDiffResponse_Checksum;

  /**
   * The soonest the client should wait before issuing any diff
   * request. Querying sooner is unlikely to produce a meaningful diff.
   * Waiting longer is acceptable considering the use case.
   * If this field is not set clients may update as soon as they want.
   *
   * @generated from field: google.protobuf.Timestamp recommended_next_diff = 2;
   */
  recommendedNextDiff?: Timestamp;
};

/**
 * Describes the message google.cloud.webrisk.v1.ComputeThreatListDiffResponse.
 * Use `create(ComputeThreatListDiffResponseSchema)` to create a new message.
 */
export const ComputeThreatListDiffResponseSchema: GenMessage<ComputeThreatListDiffResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 1);

/**
 * The expected state of a client's local database.
 *
 * @generated from message google.cloud.webrisk.v1.ComputeThreatListDiffResponse.Checksum
 */
export type ComputeThreatListDiffResponse_Checksum = Message<"google.cloud.webrisk.v1.ComputeThreatListDiffResponse.Checksum"> & {
  /**
   * The SHA256 hash of the client state; that is, of the sorted list of all
   * hashes present in the database.
   *
   * @generated from field: bytes sha256 = 1;
   */
  sha256: Uint8Array;
};

/**
 * Describes the message google.cloud.webrisk.v1.ComputeThreatListDiffResponse.Checksum.
 * Use `create(ComputeThreatListDiffResponse_ChecksumSchema)` to create a new message.
 */
export const ComputeThreatListDiffResponse_ChecksumSchema: GenMessage<ComputeThreatListDiffResponse_Checksum> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 1, 0);

/**
 * The type of response sent to the client.
 *
 * @generated from enum google.cloud.webrisk.v1.ComputeThreatListDiffResponse.ResponseType
 */
export enum ComputeThreatListDiffResponse_ResponseType {
  /**
   * Unknown.
   *
   * @generated from enum value: RESPONSE_TYPE_UNSPECIFIED = 0;
   */
  RESPONSE_TYPE_UNSPECIFIED = 0,

  /**
   * Partial updates are applied to the client's existing local database.
   *
   * @generated from enum value: DIFF = 1;
   */
  DIFF = 1,

  /**
   * Full updates resets the client's entire local database. This means
   * that either the client had no state, was seriously out-of-date,
   * or the client is believed to be corrupt.
   *
   * @generated from enum value: RESET = 2;
   */
  RESET = 2,
}

/**
 * Describes the enum google.cloud.webrisk.v1.ComputeThreatListDiffResponse.ResponseType.
 */
export const ComputeThreatListDiffResponse_ResponseTypeSchema: GenEnum<ComputeThreatListDiffResponse_ResponseType> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1_webrisk, 1, 0);

/**
 * Request to check URI entries against threatLists.
 *
 * @generated from message google.cloud.webrisk.v1.SearchUrisRequest
 */
export type SearchUrisRequest = Message<"google.cloud.webrisk.v1.SearchUrisRequest"> & {
  /**
   * Required. The URI to be checked for matches.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Required. The ThreatLists to search in. Multiple ThreatLists may be
   * specified.
   *
   * @generated from field: repeated google.cloud.webrisk.v1.ThreatType threat_types = 2;
   */
  threatTypes: ThreatType[];
};

/**
 * Describes the message google.cloud.webrisk.v1.SearchUrisRequest.
 * Use `create(SearchUrisRequestSchema)` to create a new message.
 */
export const SearchUrisRequestSchema: GenMessage<SearchUrisRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 2);

/**
 * @generated from message google.cloud.webrisk.v1.SearchUrisResponse
 */
export type SearchUrisResponse = Message<"google.cloud.webrisk.v1.SearchUrisResponse"> & {
  /**
   * The threat list matches. This might be empty if the URI is on no list.
   *
   * @generated from field: google.cloud.webrisk.v1.SearchUrisResponse.ThreatUri threat = 1;
   */
  threat?: SearchUrisResponse_ThreatUri;
};

/**
 * Describes the message google.cloud.webrisk.v1.SearchUrisResponse.
 * Use `create(SearchUrisResponseSchema)` to create a new message.
 */
export const SearchUrisResponseSchema: GenMessage<SearchUrisResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 3);

/**
 * Contains threat information on a matching uri.
 *
 * @generated from message google.cloud.webrisk.v1.SearchUrisResponse.ThreatUri
 */
export type SearchUrisResponse_ThreatUri = Message<"google.cloud.webrisk.v1.SearchUrisResponse.ThreatUri"> & {
  /**
   * The ThreatList this threat belongs to.
   *
   * @generated from field: repeated google.cloud.webrisk.v1.ThreatType threat_types = 1;
   */
  threatTypes: ThreatType[];

  /**
   * The cache lifetime for the returned match. Clients must not cache this
   * response past this timestamp to avoid false positives.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 2;
   */
  expireTime?: Timestamp;
};

/**
 * Describes the message google.cloud.webrisk.v1.SearchUrisResponse.ThreatUri.
 * Use `create(SearchUrisResponse_ThreatUriSchema)` to create a new message.
 */
export const SearchUrisResponse_ThreatUriSchema: GenMessage<SearchUrisResponse_ThreatUri> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 3, 0);

/**
 * Request to return full hashes matched by the provided hash prefixes.
 *
 * @generated from message google.cloud.webrisk.v1.SearchHashesRequest
 */
export type SearchHashesRequest = Message<"google.cloud.webrisk.v1.SearchHashesRequest"> & {
  /**
   * A hash prefix, consisting of the most significant 4-32 bytes of a SHA256
   * hash. For JSON requests, this field is base64-encoded.
   * Note that if this parameter is provided by a URI, it must be encoded using
   * the web safe base64 variant (RFC 4648).
   *
   * @generated from field: bytes hash_prefix = 1;
   */
  hashPrefix: Uint8Array;

  /**
   * Required. The ThreatLists to search in. Multiple ThreatLists may be
   * specified.
   *
   * @generated from field: repeated google.cloud.webrisk.v1.ThreatType threat_types = 2;
   */
  threatTypes: ThreatType[];
};

/**
 * Describes the message google.cloud.webrisk.v1.SearchHashesRequest.
 * Use `create(SearchHashesRequestSchema)` to create a new message.
 */
export const SearchHashesRequestSchema: GenMessage<SearchHashesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 4);

/**
 * @generated from message google.cloud.webrisk.v1.SearchHashesResponse
 */
export type SearchHashesResponse = Message<"google.cloud.webrisk.v1.SearchHashesResponse"> & {
  /**
   * The full hashes that matched the requested prefixes.
   * The hash will be populated in the key.
   *
   * @generated from field: repeated google.cloud.webrisk.v1.SearchHashesResponse.ThreatHash threats = 1;
   */
  threats: SearchHashesResponse_ThreatHash[];

  /**
   * For requested entities that did not match the threat list, how long to
   * cache the response until.
   *
   * @generated from field: google.protobuf.Timestamp negative_expire_time = 2;
   */
  negativeExpireTime?: Timestamp;
};

/**
 * Describes the message google.cloud.webrisk.v1.SearchHashesResponse.
 * Use `create(SearchHashesResponseSchema)` to create a new message.
 */
export const SearchHashesResponseSchema: GenMessage<SearchHashesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 5);

/**
 * Contains threat information on a matching hash.
 *
 * @generated from message google.cloud.webrisk.v1.SearchHashesResponse.ThreatHash
 */
export type SearchHashesResponse_ThreatHash = Message<"google.cloud.webrisk.v1.SearchHashesResponse.ThreatHash"> & {
  /**
   * The ThreatList this threat belongs to.
   * This must contain at least one entry.
   *
   * @generated from field: repeated google.cloud.webrisk.v1.ThreatType threat_types = 1;
   */
  threatTypes: ThreatType[];

  /**
   * A 32 byte SHA256 hash. This field is in binary format. For JSON
   * requests, hashes are base64-encoded.
   *
   * @generated from field: bytes hash = 2;
   */
  hash: Uint8Array;

  /**
   * The cache lifetime for the returned match. Clients must not cache this
   * response past this timestamp to avoid false positives.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 3;
   */
  expireTime?: Timestamp;
};

/**
 * Describes the message google.cloud.webrisk.v1.SearchHashesResponse.ThreatHash.
 * Use `create(SearchHashesResponse_ThreatHashSchema)` to create a new message.
 */
export const SearchHashesResponse_ThreatHashSchema: GenMessage<SearchHashesResponse_ThreatHash> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 5, 0);

/**
 * Contains the set of entries to add to a local database.
 * May contain a combination of compressed and raw data in a single response.
 *
 * @generated from message google.cloud.webrisk.v1.ThreatEntryAdditions
 */
export type ThreatEntryAdditions = Message<"google.cloud.webrisk.v1.ThreatEntryAdditions"> & {
  /**
   * The raw SHA256-formatted entries.
   * Repeated to allow returning sets of hashes with different prefix sizes.
   *
   * @generated from field: repeated google.cloud.webrisk.v1.RawHashes raw_hashes = 1;
   */
  rawHashes: RawHashes[];

  /**
   * The encoded 4-byte prefixes of SHA256-formatted entries, using a
   * Golomb-Rice encoding. The hashes are converted to uint32, sorted in
   * ascending order, then delta encoded and stored as encoded_data.
   *
   * @generated from field: google.cloud.webrisk.v1.RiceDeltaEncoding rice_hashes = 2;
   */
  riceHashes?: RiceDeltaEncoding;
};

/**
 * Describes the message google.cloud.webrisk.v1.ThreatEntryAdditions.
 * Use `create(ThreatEntryAdditionsSchema)` to create a new message.
 */
export const ThreatEntryAdditionsSchema: GenMessage<ThreatEntryAdditions> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 6);

/**
 * Contains the set of entries to remove from a local database.
 *
 * @generated from message google.cloud.webrisk.v1.ThreatEntryRemovals
 */
export type ThreatEntryRemovals = Message<"google.cloud.webrisk.v1.ThreatEntryRemovals"> & {
  /**
   * The raw removal indices for a local list.
   *
   * @generated from field: google.cloud.webrisk.v1.RawIndices raw_indices = 1;
   */
  rawIndices?: RawIndices;

  /**
   * The encoded local, lexicographically-sorted list indices, using a
   * Golomb-Rice encoding. Used for sending compressed removal indices. The
   * removal indices (uint32) are sorted in ascending order, then delta encoded
   * and stored as encoded_data.
   *
   * @generated from field: google.cloud.webrisk.v1.RiceDeltaEncoding rice_indices = 2;
   */
  riceIndices?: RiceDeltaEncoding;
};

/**
 * Describes the message google.cloud.webrisk.v1.ThreatEntryRemovals.
 * Use `create(ThreatEntryRemovalsSchema)` to create a new message.
 */
export const ThreatEntryRemovalsSchema: GenMessage<ThreatEntryRemovals> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 7);

/**
 * A set of raw indices to remove from a local list.
 *
 * @generated from message google.cloud.webrisk.v1.RawIndices
 */
export type RawIndices = Message<"google.cloud.webrisk.v1.RawIndices"> & {
  /**
   * The indices to remove from a lexicographically-sorted local list.
   *
   * @generated from field: repeated int32 indices = 1;
   */
  indices: number[];
};

/**
 * Describes the message google.cloud.webrisk.v1.RawIndices.
 * Use `create(RawIndicesSchema)` to create a new message.
 */
export const RawIndicesSchema: GenMessage<RawIndices> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 8);

/**
 * The uncompressed threat entries in hash format.
 * Hashes can be anywhere from 4 to 32 bytes in size. A large majority are 4
 * bytes, but some hashes are lengthened if they collide with the hash of a
 * popular URI.
 *
 * Used for sending ThreatEntryAdditons to clients that do not support
 * compression, or when sending non-4-byte hashes to clients that do support
 * compression.
 *
 * @generated from message google.cloud.webrisk.v1.RawHashes
 */
export type RawHashes = Message<"google.cloud.webrisk.v1.RawHashes"> & {
  /**
   * The number of bytes for each prefix encoded below.  This field can be
   * anywhere from 4 (shortest prefix) to 32 (full SHA256 hash).
   * In practice this is almost always 4, except in exceptional circumstances.
   *
   * @generated from field: int32 prefix_size = 1;
   */
  prefixSize: number;

  /**
   * The hashes, in binary format, concatenated into one long string. Hashes are
   * sorted in lexicographic order. For JSON API users, hashes are
   * base64-encoded.
   *
   * @generated from field: bytes raw_hashes = 2;
   */
  rawHashes: Uint8Array;
};

/**
 * Describes the message google.cloud.webrisk.v1.RawHashes.
 * Use `create(RawHashesSchema)` to create a new message.
 */
export const RawHashesSchema: GenMessage<RawHashes> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 9);

/**
 * The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or
 * compressed removal indices.
 *
 * @generated from message google.cloud.webrisk.v1.RiceDeltaEncoding
 */
export type RiceDeltaEncoding = Message<"google.cloud.webrisk.v1.RiceDeltaEncoding"> & {
  /**
   * The offset of the first entry in the encoded data, or, if only a single
   * integer was encoded, that single integer's value. If the field is empty or
   * missing, assume zero.
   *
   * @generated from field: int64 first_value = 1;
   */
  firstValue: bigint;

  /**
   * The Golomb-Rice parameter, which is a number between 2 and 28. This field
   * is missing (that is, zero) if `num_entries` is zero.
   *
   * @generated from field: int32 rice_parameter = 2;
   */
  riceParameter: number;

  /**
   * The number of entries that are delta encoded in the encoded data. If only a
   * single integer was encoded, this will be zero and the single value will be
   * stored in `first_value`.
   *
   * @generated from field: int32 entry_count = 3;
   */
  entryCount: number;

  /**
   * The encoded deltas that are encoded using the Golomb-Rice coder.
   *
   * @generated from field: bytes encoded_data = 4;
   */
  encodedData: Uint8Array;
};

/**
 * Describes the message google.cloud.webrisk.v1.RiceDeltaEncoding.
 * Use `create(RiceDeltaEncodingSchema)` to create a new message.
 */
export const RiceDeltaEncodingSchema: GenMessage<RiceDeltaEncoding> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 10);

/**
 * Wraps a URI that might be displaying malicious content.
 *
 * @generated from message google.cloud.webrisk.v1.Submission
 */
export type Submission = Message<"google.cloud.webrisk.v1.Submission"> & {
  /**
   * Required. The URI that is being reported for malicious content to be
   * analyzed.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Output only. ThreatTypes found to be associated with the submitted URI
   * after reviewing it. This might be empty if the URI was not added to any
   * list.
   *
   * @generated from field: repeated google.cloud.webrisk.v1.ThreatType threat_types = 2;
   */
  threatTypes: ThreatType[];
};

/**
 * Describes the message google.cloud.webrisk.v1.Submission.
 * Use `create(SubmissionSchema)` to create a new message.
 */
export const SubmissionSchema: GenMessage<Submission> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 11);

/**
 * Context about the submission including the type of abuse found on the URI and
 * supporting details.
 * option (google.api.message_visibility).restriction = "TRUSTED_TESTER";
 *
 * @generated from message google.cloud.webrisk.v1.ThreatInfo
 */
export type ThreatInfo = Message<"google.cloud.webrisk.v1.ThreatInfo"> & {
  /**
   * The type of abuse.
   *
   * @generated from field: google.cloud.webrisk.v1.ThreatInfo.AbuseType abuse_type = 1;
   */
  abuseType: ThreatInfo_AbuseType;

  /**
   * Confidence that the URI is unsafe.
   *
   * @generated from field: google.cloud.webrisk.v1.ThreatInfo.Confidence threat_confidence = 2;
   */
  threatConfidence?: ThreatInfo_Confidence;

  /**
   * Context about why the URI is unsafe.
   *
   * @generated from field: google.cloud.webrisk.v1.ThreatInfo.ThreatJustification threat_justification = 3;
   */
  threatJustification?: ThreatInfo_ThreatJustification;
};

/**
 * Describes the message google.cloud.webrisk.v1.ThreatInfo.
 * Use `create(ThreatInfoSchema)` to create a new message.
 */
export const ThreatInfoSchema: GenMessage<ThreatInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 12);

/**
 * Confidence that a URI is unsafe.
 *
 * @generated from message google.cloud.webrisk.v1.ThreatInfo.Confidence
 */
export type ThreatInfo_Confidence = Message<"google.cloud.webrisk.v1.ThreatInfo.Confidence"> & {
  /**
   * @generated from oneof google.cloud.webrisk.v1.ThreatInfo.Confidence.value
   */
  value: {
    /**
     * A decimal representation of confidence in the range of 0
     * to 1 where 0 indicates no confidence and 1 indicates
     * complete confidence.
     *
     * @generated from field: float score = 1;
     */
    value: number;
    case: "score";
  } | {
    /**
     * Enum representation of confidence.
     *
     * @generated from field: google.cloud.webrisk.v1.ThreatInfo.Confidence.ConfidenceLevel level = 2;
     */
    value: ThreatInfo_Confidence_ConfidenceLevel;
    case: "level";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.webrisk.v1.ThreatInfo.Confidence.
 * Use `create(ThreatInfo_ConfidenceSchema)` to create a new message.
 */
export const ThreatInfo_ConfidenceSchema: GenMessage<ThreatInfo_Confidence> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 12, 0);

/**
 * Enum representation of confidence.
 *
 * @generated from enum google.cloud.webrisk.v1.ThreatInfo.Confidence.ConfidenceLevel
 */
export enum ThreatInfo_Confidence_ConfidenceLevel {
  /**
   * Default.
   *
   * @generated from enum value: CONFIDENCE_LEVEL_UNSPECIFIED = 0;
   */
  CONFIDENCE_LEVEL_UNSPECIFIED = 0,

  /**
   * Less than 60% confidence that the URI is unsafe.
   *
   * @generated from enum value: LOW = 1;
   */
  LOW = 1,

  /**
   * Between 60% and 80% confidence that the URI is unsafe.
   *
   * @generated from enum value: MEDIUM = 2;
   */
  MEDIUM = 2,

  /**
   * Greater than 80% confidence that the URI is unsafe.
   *
   * @generated from enum value: HIGH = 3;
   */
  HIGH = 3,
}

/**
 * Describes the enum google.cloud.webrisk.v1.ThreatInfo.Confidence.ConfidenceLevel.
 */
export const ThreatInfo_Confidence_ConfidenceLevelSchema: GenEnum<ThreatInfo_Confidence_ConfidenceLevel> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1_webrisk, 12, 0, 0);

/**
 * Context about why the URI is unsafe.
 *
 * @generated from message google.cloud.webrisk.v1.ThreatInfo.ThreatJustification
 */
export type ThreatInfo_ThreatJustification = Message<"google.cloud.webrisk.v1.ThreatInfo.ThreatJustification"> & {
  /**
   * Labels associated with this URI that explain how it was classified.
   *
   * @generated from field: repeated google.cloud.webrisk.v1.ThreatInfo.ThreatJustification.JustificationLabel labels = 1;
   */
  labels: ThreatInfo_ThreatJustification_JustificationLabel[];

  /**
   * Free-form context on why this URI is unsafe.
   *
   * @generated from field: repeated string comments = 2;
   */
  comments: string[];
};

/**
 * Describes the message google.cloud.webrisk.v1.ThreatInfo.ThreatJustification.
 * Use `create(ThreatInfo_ThreatJustificationSchema)` to create a new message.
 */
export const ThreatInfo_ThreatJustificationSchema: GenMessage<ThreatInfo_ThreatJustification> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 12, 1);

/**
 * Labels that explain how the URI was classified.
 *
 * @generated from enum google.cloud.webrisk.v1.ThreatInfo.ThreatJustification.JustificationLabel
 */
export enum ThreatInfo_ThreatJustification_JustificationLabel {
  /**
   * Default.
   *
   * @generated from enum value: JUSTIFICATION_LABEL_UNSPECIFIED = 0;
   */
  JUSTIFICATION_LABEL_UNSPECIFIED = 0,

  /**
   * The submitter manually verified that the submission is unsafe.
   *
   * @generated from enum value: MANUAL_VERIFICATION = 1;
   */
  MANUAL_VERIFICATION = 1,

  /**
   * The submitter received the submission from an end user.
   *
   * @generated from enum value: USER_REPORT = 2;
   */
  USER_REPORT = 2,

  /**
   * The submitter received the submission from an automated system.
   *
   * @generated from enum value: AUTOMATED_REPORT = 3;
   */
  AUTOMATED_REPORT = 3,
}

/**
 * Describes the enum google.cloud.webrisk.v1.ThreatInfo.ThreatJustification.JustificationLabel.
 */
export const ThreatInfo_ThreatJustification_JustificationLabelSchema: GenEnum<ThreatInfo_ThreatJustification_JustificationLabel> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1_webrisk, 12, 1, 0);

/**
 * The abuse type found on the URI.
 *
 * @generated from enum google.cloud.webrisk.v1.ThreatInfo.AbuseType
 */
export enum ThreatInfo_AbuseType {
  /**
   * Default.
   *
   * @generated from enum value: ABUSE_TYPE_UNSPECIFIED = 0;
   */
  ABUSE_TYPE_UNSPECIFIED = 0,

  /**
   * The URI contains malware.
   *
   * @generated from enum value: MALWARE = 1;
   */
  MALWARE = 1,

  /**
   * The URI contains social engineering.
   *
   * @generated from enum value: SOCIAL_ENGINEERING = 2;
   */
  SOCIAL_ENGINEERING = 2,

  /**
   * The URI contains unwanted software.
   *
   * @generated from enum value: UNWANTED_SOFTWARE = 3;
   */
  UNWANTED_SOFTWARE = 3,
}

/**
 * Describes the enum google.cloud.webrisk.v1.ThreatInfo.AbuseType.
 */
export const ThreatInfo_AbuseTypeSchema: GenEnum<ThreatInfo_AbuseType> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1_webrisk, 12, 0);

/**
 * Details about how the threat was discovered.
 *
 * @generated from message google.cloud.webrisk.v1.ThreatDiscovery
 */
export type ThreatDiscovery = Message<"google.cloud.webrisk.v1.ThreatDiscovery"> & {
  /**
   * Platform on which the threat was discovered.
   *
   * @generated from field: google.cloud.webrisk.v1.ThreatDiscovery.Platform platform = 1;
   */
  platform: ThreatDiscovery_Platform;

  /**
   * CLDR region code of the countries/regions the URI poses a threat ordered
   * from most impact to least impact. Example: "US" for United States.
   *
   * @generated from field: repeated string region_codes = 2;
   */
  regionCodes: string[];
};

/**
 * Describes the message google.cloud.webrisk.v1.ThreatDiscovery.
 * Use `create(ThreatDiscoverySchema)` to create a new message.
 */
export const ThreatDiscoverySchema: GenMessage<ThreatDiscovery> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 13);

/**
 * Platform types.
 *
 * @generated from enum google.cloud.webrisk.v1.ThreatDiscovery.Platform
 */
export enum ThreatDiscovery_Platform {
  /**
   * Default.
   *
   * @generated from enum value: PLATFORM_UNSPECIFIED = 0;
   */
  PLATFORM_UNSPECIFIED = 0,

  /**
   * General Android platform.
   *
   * @generated from enum value: ANDROID = 1;
   */
  ANDROID = 1,

  /**
   * General iOS platform.
   *
   * @generated from enum value: IOS = 2;
   */
  IOS = 2,

  /**
   * General macOS platform.
   *
   * @generated from enum value: MACOS = 3;
   */
  MACOS = 3,

  /**
   * General Windows platform.
   *
   * @generated from enum value: WINDOWS = 4;
   */
  WINDOWS = 4,
}

/**
 * Describes the enum google.cloud.webrisk.v1.ThreatDiscovery.Platform.
 */
export const ThreatDiscovery_PlatformSchema: GenEnum<ThreatDiscovery_Platform> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1_webrisk, 13, 0);

/**
 * Request to send a potentially phishy URI to WebRisk.
 *
 * @generated from message google.cloud.webrisk.v1.CreateSubmissionRequest
 */
export type CreateSubmissionRequest = Message<"google.cloud.webrisk.v1.CreateSubmissionRequest"> & {
  /**
   * Required. The name of the project that is making the submission. This
   * string is in the format "projects/{project_number}".
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The submission that contains the content of the phishing report.
   *
   * @generated from field: google.cloud.webrisk.v1.Submission submission = 2;
   */
  submission?: Submission;
};

/**
 * Describes the message google.cloud.webrisk.v1.CreateSubmissionRequest.
 * Use `create(CreateSubmissionRequestSchema)` to create a new message.
 */
export const CreateSubmissionRequestSchema: GenMessage<CreateSubmissionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 14);

/**
 * Request to send a potentially malicious URI to WebRisk.
 *
 * @generated from message google.cloud.webrisk.v1.SubmitUriRequest
 */
export type SubmitUriRequest = Message<"google.cloud.webrisk.v1.SubmitUriRequest"> & {
  /**
   * Required. The name of the project that is making the submission. This
   * string is in the format "projects/{project_number}".
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The submission that contains the URI to be scanned.
   *
   * @generated from field: google.cloud.webrisk.v1.Submission submission = 2;
   */
  submission?: Submission;

  /**
   * Provides additional information about the submission.
   *
   * @generated from field: google.cloud.webrisk.v1.ThreatInfo threat_info = 3;
   */
  threatInfo?: ThreatInfo;

  /**
   * Provides additional information about how the submission was discovered.
   *
   * @generated from field: google.cloud.webrisk.v1.ThreatDiscovery threat_discovery = 4;
   */
  threatDiscovery?: ThreatDiscovery;
};

/**
 * Describes the message google.cloud.webrisk.v1.SubmitUriRequest.
 * Use `create(SubmitUriRequestSchema)` to create a new message.
 */
export const SubmitUriRequestSchema: GenMessage<SubmitUriRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 15);

/**
 * Metadata for the Submit URI long-running operation.
 * option (google.api.message_visibility).restriction = "TRUSTED_TESTER";
 *
 * @generated from message google.cloud.webrisk.v1.SubmitUriMetadata
 */
export type SubmitUriMetadata = Message<"google.cloud.webrisk.v1.SubmitUriMetadata"> & {
  /**
   * The state of the operation.
   *
   * @generated from field: google.cloud.webrisk.v1.SubmitUriMetadata.State state = 1;
   */
  state: SubmitUriMetadata_State;

  /**
   * Creation time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Latest update time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.webrisk.v1.SubmitUriMetadata.
 * Use `create(SubmitUriMetadataSchema)` to create a new message.
 */
export const SubmitUriMetadataSchema: GenMessage<SubmitUriMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_webrisk_v1_webrisk, 16);

/**
 * Enum that represents the state of the long-running operation.
 *
 * @generated from enum google.cloud.webrisk.v1.SubmitUriMetadata.State
 */
export enum SubmitUriMetadata_State {
  /**
   * Default unspecified state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The operation is currently running.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The operation finished with a success status.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The operation was cancelled.
   *
   * @generated from enum value: CANCELLED = 3;
   */
  CANCELLED = 3,

  /**
   * The operation finished with a failure status.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * The operation was closed with no action taken.
   *
   * @generated from enum value: CLOSED = 5;
   */
  CLOSED = 5,
}

/**
 * Describes the enum google.cloud.webrisk.v1.SubmitUriMetadata.State.
 */
export const SubmitUriMetadata_StateSchema: GenEnum<SubmitUriMetadata_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1_webrisk, 16, 0);

/**
 * The type of threat. This maps directly to the threat list a threat may
 * belong to.
 *
 * @generated from enum google.cloud.webrisk.v1.ThreatType
 */
export enum ThreatType {
  /**
   * No entries should match this threat type. This threat type is unused.
   *
   * @generated from enum value: THREAT_TYPE_UNSPECIFIED = 0;
   */
  THREAT_TYPE_UNSPECIFIED = 0,

  /**
   * Malware targeting any platform.
   *
   * @generated from enum value: MALWARE = 1;
   */
  MALWARE = 1,

  /**
   * Social engineering targeting any platform.
   *
   * @generated from enum value: SOCIAL_ENGINEERING = 2;
   */
  SOCIAL_ENGINEERING = 2,

  /**
   * Unwanted software targeting any platform.
   *
   * @generated from enum value: UNWANTED_SOFTWARE = 3;
   */
  UNWANTED_SOFTWARE = 3,

  /**
   * A list of extended coverage social engineering URIs targeting any
   * platform.
   *
   * @generated from enum value: SOCIAL_ENGINEERING_EXTENDED_COVERAGE = 4;
   */
  SOCIAL_ENGINEERING_EXTENDED_COVERAGE = 4,
}

/**
 * Describes the enum google.cloud.webrisk.v1.ThreatType.
 */
export const ThreatTypeSchema: GenEnum<ThreatType> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1_webrisk, 0);

/**
 * The ways in which threat entry sets can be compressed.
 *
 * @generated from enum google.cloud.webrisk.v1.CompressionType
 */
export enum CompressionType {
  /**
   * Unknown.
   *
   * @generated from enum value: COMPRESSION_TYPE_UNSPECIFIED = 0;
   */
  COMPRESSION_TYPE_UNSPECIFIED = 0,

  /**
   * Raw, uncompressed data.
   *
   * @generated from enum value: RAW = 1;
   */
  RAW = 1,

  /**
   * Rice-Golomb encoded data.
   *
   * @generated from enum value: RICE = 2;
   */
  RICE = 2,
}

/**
 * Describes the enum google.cloud.webrisk.v1.CompressionType.
 */
export const CompressionTypeSchema: GenEnum<CompressionType> = /*@__PURE__*/
  enumDesc(file_google_cloud_webrisk_v1_webrisk, 1);

/**
 * Web Risk API defines an interface to detect malicious URLs on your
 * website and in client applications.
 *
 * @generated from service google.cloud.webrisk.v1.WebRiskService
 */
export const WebRiskService: GenService<{
  /**
   * Gets the most recent threat list diffs. These diffs should be applied to
   * a local database of hashes to keep it up-to-date. If the local database is
   * empty or excessively out-of-date, a complete snapshot of the database will
   * be returned. This Method only updates a single ThreatList at a time. To
   * update multiple ThreatList databases, this method needs to be called once
   * for each list.
   *
   * @generated from rpc google.cloud.webrisk.v1.WebRiskService.ComputeThreatListDiff
   */
  computeThreatListDiff: {
    methodKind: "unary";
    input: typeof ComputeThreatListDiffRequestSchema;
    output: typeof ComputeThreatListDiffResponseSchema;
  },
  /**
   * This method is used to check whether a URI is on a given threatList.
   * Multiple threatLists may be searched in a single query.
   * The response will list all requested threatLists the URI was found to
   * match. If the URI is not found on any of the requested ThreatList an
   * empty response will be returned.
   *
   * @generated from rpc google.cloud.webrisk.v1.WebRiskService.SearchUris
   */
  searchUris: {
    methodKind: "unary";
    input: typeof SearchUrisRequestSchema;
    output: typeof SearchUrisResponseSchema;
  },
  /**
   * Gets the full hashes that match the requested hash prefix.
   * This is used after a hash prefix is looked up in a threatList
   * and there is a match. The client side threatList only holds partial hashes
   * so the client must query this method to determine if there is a full
   * hash match of a threat.
   *
   * @generated from rpc google.cloud.webrisk.v1.WebRiskService.SearchHashes
   */
  searchHashes: {
    methodKind: "unary";
    input: typeof SearchHashesRequestSchema;
    output: typeof SearchHashesResponseSchema;
  },
  /**
   * Creates a Submission of a URI suspected of containing phishing content to
   * be reviewed. If the result verifies the existence of malicious phishing
   * content, the site will be added to the [Google's Social Engineering
   * lists](https://support.google.com/webmasters/answer/6350487/) in order to
   * protect users that could get exposed to this threat in the future. Only
   * allowlisted projects can use this method during Early Access. Please reach
   * out to Sales or your customer engineer to obtain access.
   *
   * @generated from rpc google.cloud.webrisk.v1.WebRiskService.CreateSubmission
   */
  createSubmission: {
    methodKind: "unary";
    input: typeof CreateSubmissionRequestSchema;
    output: typeof SubmissionSchema;
  },
  /**
   * Submits a URI suspected of containing malicious content to be reviewed.
   * Returns a google.longrunning.Operation which, once the review is complete,
   * is updated with its result. You can use the [Pub/Sub API]
   * (https://cloud.google.com/pubsub) to receive notifications for the returned
   * Operation. If the result verifies the existence of malicious content, the
   * site will be added to the [Google's Social Engineering lists]
   * (https://support.google.com/webmasters/answer/6350487/) in order to
   * protect users that could get exposed to this threat in the future. Only
   * allowlisted projects can use this method during Early Access. Please reach
   * out to Sales or your customer engineer to obtain access.
   *
   * @generated from rpc google.cloud.webrisk.v1.WebRiskService.SubmitUri
   */
  submitUri: {
    methodKind: "unary";
    input: typeof SubmitUriRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_webrisk_v1_webrisk, 0);

