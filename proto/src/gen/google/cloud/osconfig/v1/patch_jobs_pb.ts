// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/osconfig/v1/patch_jobs.proto (package google.cloud.osconfig.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { FixedOrPercent } from "./osconfig_common_pb";
import { file_google_cloud_osconfig_v1_osconfig_common } from "./osconfig_common_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/osconfig/v1/patch_jobs.proto.
 */
export const file_google_cloud_osconfig_v1_patch_jobs: GenFile = /*@__PURE__*/
  fileDesc("Cilnb29nbGUvY2xvdWQvb3Njb25maWcvdjEvcGF0Y2hfam9icy5wcm90bxIYZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxIokDChZFeGVjdXRlUGF0Y2hKb2JSZXF1ZXN0EkMKBnBhcmVudBgBIAEoCUIz4EEC+kEtCitjbG91ZHJlc291cmNlbWFuYWdlci5nb29nbGVhcGlzLmNvbS9Qcm9qZWN0EhMKC2Rlc2NyaXB0aW9uGAIgASgJEksKD2luc3RhbmNlX2ZpbHRlchgHIAEoCzItLmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MS5QYXRjaEluc3RhbmNlRmlsdGVyQgPgQQISOwoMcGF0Y2hfY29uZmlnGAQgASgLMiUuZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLlBhdGNoQ29uZmlnEisKCGR1cmF0aW9uGAUgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEg8KB2RyeV9ydW4YBiABKAgSFAoMZGlzcGxheV9uYW1lGAggASgJEjcKB3JvbGxvdXQYCSABKAsyJi5nb29nbGUuY2xvdWQub3Njb25maWcudjEuUGF0Y2hSb2xsb3V0IkwKEkdldFBhdGNoSm9iUmVxdWVzdBI2CgRuYW1lGAEgASgJQijgQQL6QSIKIG9zY29uZmlnLmdvb2dsZWFwaXMuY29tL1BhdGNoSm9iIpUBCiJMaXN0UGF0Y2hKb2JJbnN0YW5jZURldGFpbHNSZXF1ZXN0EjgKBnBhcmVudBgBIAEoCUIo4EEC+kEiCiBvc2NvbmZpZy5nb29nbGVhcGlzLmNvbS9QYXRjaEpvYhIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCRIOCgZmaWx0ZXIYBCABKAkilQEKI0xpc3RQYXRjaEpvYkluc3RhbmNlRGV0YWlsc1Jlc3BvbnNlElUKGnBhdGNoX2pvYl9pbnN0YW5jZV9kZXRhaWxzGAEgAygLMjEuZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLlBhdGNoSm9iSW5zdGFuY2VEZXRhaWxzEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSLWAQoXUGF0Y2hKb2JJbnN0YW5jZURldGFpbHMSMgoEbmFtZRgBIAEoCUIk+kEhCh9jb21wdXRlLmdvb2dsZWFwaXMuY29tL0luc3RhbmNlEhoKEmluc3RhbmNlX3N5c3RlbV9pZBgCIAEoCRI8CgVzdGF0ZRgDIAEoDjItLmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MS5JbnN0YW5jZS5QYXRjaFN0YXRlEhYKDmZhaWx1cmVfcmVhc29uGAQgASgJEhUKDWF0dGVtcHRfY291bnQYBSABKAMikgEKFExpc3RQYXRjaEpvYnNSZXF1ZXN0EkMKBnBhcmVudBgBIAEoCUIz4EEC+kEtCitjbG91ZHJlc291cmNlbWFuYWdlci5nb29nbGVhcGlzLmNvbS9Qcm9qZWN0EhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJEg4KBmZpbHRlchgEIAEoCSJoChVMaXN0UGF0Y2hKb2JzUmVzcG9uc2USNgoKcGF0Y2hfam9icxgBIAMoCzIiLmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MS5QYXRjaEpvYhIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAki3AsKCFBhdGNoSm9iEgwKBG5hbWUYASABKAkSFAoMZGlzcGxheV9uYW1lGA4gASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEi8KC2NyZWF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIvCgt1cGRhdGVfdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNwoFc3RhdGUYBSABKA4yKC5nb29nbGUuY2xvdWQub3Njb25maWcudjEuUGF0Y2hKb2IuU3RhdGUSRgoPaW5zdGFuY2VfZmlsdGVyGA0gASgLMi0uZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLlBhdGNoSW5zdGFuY2VGaWx0ZXISOwoMcGF0Y2hfY29uZmlnGAcgASgLMiUuZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLlBhdGNoQ29uZmlnEisKCGR1cmF0aW9uGAggASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uElsKGGluc3RhbmNlX2RldGFpbHNfc3VtbWFyeRgJIAEoCzI5Lmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MS5QYXRjaEpvYi5JbnN0YW5jZURldGFpbHNTdW1tYXJ5Eg8KB2RyeV9ydW4YCiABKAgSFQoNZXJyb3JfbWVzc2FnZRgLIAEoCRIYChBwZXJjZW50X2NvbXBsZXRlGAwgASgBEkkKEHBhdGNoX2RlcGxveW1lbnQYDyABKAlCL+BBA/pBKQonb3Njb25maWcuZ29vZ2xlYXBpcy5jb20vUGF0Y2hEZXBsb3ltZW50EjcKB3JvbGxvdXQYECABKAsyJi5nb29nbGUuY2xvdWQub3Njb25maWcudjEuUGF0Y2hSb2xsb3V0Gr0EChZJbnN0YW5jZURldGFpbHNTdW1tYXJ5Eh4KFnBlbmRpbmdfaW5zdGFuY2VfY291bnQYASABKAMSHwoXaW5hY3RpdmVfaW5zdGFuY2VfY291bnQYAiABKAMSHwoXbm90aWZpZWRfaW5zdGFuY2VfY291bnQYAyABKAMSHgoWc3RhcnRlZF9pbnN0YW5jZV9jb3VudBgEIAEoAxIqCiJkb3dubG9hZGluZ19wYXRjaGVzX2luc3RhbmNlX2NvdW50GAUgASgDEicKH2FwcGx5aW5nX3BhdGNoZXNfaW5zdGFuY2VfY291bnQYBiABKAMSIAoYcmVib290aW5nX2luc3RhbmNlX2NvdW50GAcgASgDEiAKGHN1Y2NlZWRlZF9pbnN0YW5jZV9jb3VudBgIIAEoAxIwCihzdWNjZWVkZWRfcmVib290X3JlcXVpcmVkX2luc3RhbmNlX2NvdW50GAkgASgDEh0KFWZhaWxlZF9pbnN0YW5jZV9jb3VudBgKIAEoAxIcChRhY2tlZF9pbnN0YW5jZV9jb3VudBgLIAEoAxIgChh0aW1lZF9vdXRfaW5zdGFuY2VfY291bnQYDCABKAMSJQodcHJlX3BhdGNoX3N0ZXBfaW5zdGFuY2VfY291bnQYDSABKAMSJgoecG9zdF9wYXRjaF9zdGVwX2luc3RhbmNlX2NvdW50GA4gASgDEigKIG5vX2FnZW50X2RldGVjdGVkX2luc3RhbmNlX2NvdW50GA8gASgDIpUBCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgsKB1NUQVJURUQQARITCg9JTlNUQU5DRV9MT09LVVAQAhIMCghQQVRDSElORxADEg0KCVNVQ0NFRURFRBAEEhkKFUNPTVBMRVRFRF9XSVRIX0VSUk9SUxAFEgwKCENBTkNFTEVEEAYSDQoJVElNRURfT1VUEAc6T+pBTAogb3Njb25maWcuZ29vZ2xlYXBpcy5jb20vUGF0Y2hKb2ISKHByb2plY3RzL3twcm9qZWN0fS9wYXRjaEpvYnMve3BhdGNoX2pvYn0i1gQKC1BhdGNoQ29uZmlnEkkKDXJlYm9vdF9jb25maWcYASABKA4yMi5nb29nbGUuY2xvdWQub3Njb25maWcudjEuUGF0Y2hDb25maWcuUmVib290Q29uZmlnEjIKA2FwdBgDIAEoCzIlLmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MS5BcHRTZXR0aW5ncxIyCgN5dW0YBCABKAsyJS5nb29nbGUuY2xvdWQub3Njb25maWcudjEuWXVtU2V0dGluZ3MSMgoDZ29vGAUgASgLMiUuZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLkdvb1NldHRpbmdzEjgKBnp5cHBlchgGIAEoCzIoLmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MS5aeXBwZXJTZXR0aW5ncxJHCg53aW5kb3dzX3VwZGF0ZRgHIAEoCzIvLmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MS5XaW5kb3dzVXBkYXRlU2V0dGluZ3MSNAoIcHJlX3N0ZXAYCCABKAsyIi5nb29nbGUuY2xvdWQub3Njb25maWcudjEuRXhlY1N0ZXASNQoJcG9zdF9zdGVwGAkgASgLMiIuZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLkV4ZWNTdGVwEh0KFW1pZ19pbnN0YW5jZXNfYWxsb3dlZBgKIAEoCCJRCgxSZWJvb3RDb25maWcSHQoZUkVCT09UX0NPTkZJR19VTlNQRUNJRklFRBAAEgsKB0RFRkFVTFQQARIKCgZBTFdBWVMQAhIJCgVORVZFUhADIs4CCghJbnN0YW5jZSLBAgoKUGF0Y2hTdGF0ZRIbChdQQVRDSF9TVEFURV9VTlNQRUNJRklFRBAAEgsKB1BFTkRJTkcQARIMCghJTkFDVElWRRACEgwKCE5PVElGSUVEEAMSCwoHU1RBUlRFRBAEEhcKE0RPV05MT0FESU5HX1BBVENIRVMQBRIUChBBUFBMWUlOR19QQVRDSEVTEAYSDQoJUkVCT09USU5HEAcSDQoJU1VDQ0VFREVEEAgSHQoZU1VDQ0VFREVEX1JFQk9PVF9SRVFVSVJFRBAJEgoKBkZBSUxFRBAKEgkKBUFDS0VEEAsSDQoJVElNRURfT1VUEAwSGgoWUlVOTklOR19QUkVfUEFUQ0hfU1RFUBANEhsKF1JVTk5JTkdfUE9TVF9QQVRDSF9TVEVQEA4SFQoRTk9fQUdFTlRfREVURUNURUQQDyJPChVDYW5jZWxQYXRjaEpvYlJlcXVlc3QSNgoEbmFtZRgBIAEoCUIo4EEC+kEiCiBvc2NvbmZpZy5nb29nbGVhcGlzLmNvbS9QYXRjaEpvYiKqAQoLQXB0U2V0dGluZ3MSOAoEdHlwZRgBIAEoDjIqLmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MS5BcHRTZXR0aW5ncy5UeXBlEhAKCGV4Y2x1ZGVzGAIgAygJEhoKEmV4Y2x1c2l2ZV9wYWNrYWdlcxgDIAMoCSIzCgRUeXBlEhQKEFRZUEVfVU5TUEVDSUZJRUQQABIICgRESVNUEAESCwoHVVBHUkFERRACIl4KC1l1bVNldHRpbmdzEhAKCHNlY3VyaXR5GAEgASgIEg8KB21pbmltYWwYAiABKAgSEAoIZXhjbHVkZXMYAyADKAkSGgoSZXhjbHVzaXZlX3BhY2thZ2VzGAQgAygJIg0KC0dvb1NldHRpbmdzIpEBCg5aeXBwZXJTZXR0aW5ncxIVCg13aXRoX29wdGlvbmFsGAEgASgIEhMKC3dpdGhfdXBkYXRlGAIgASgIEhIKCmNhdGVnb3JpZXMYAyADKAkSEgoKc2V2ZXJpdGllcxgEIAMoCRIQCghleGNsdWRlcxgFIAMoCRIZChFleGNsdXNpdmVfcGF0Y2hlcxgGIAMoCSLVAgoVV2luZG93c1VwZGF0ZVNldHRpbmdzElcKD2NsYXNzaWZpY2F0aW9ucxgBIAMoDjI+Lmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MS5XaW5kb3dzVXBkYXRlU2V0dGluZ3MuQ2xhc3NpZmljYXRpb24SEAoIZXhjbHVkZXMYAiADKAkSGQoRZXhjbHVzaXZlX3BhdGNoZXMYAyADKAkitQEKDkNsYXNzaWZpY2F0aW9uEh4KGkNMQVNTSUZJQ0FUSU9OX1VOU1BFQ0lGSUVEEAASDAoIQ1JJVElDQUwQARIMCghTRUNVUklUWRACEg4KCkRFRklOSVRJT04QAxIKCgZEUklWRVIQBBIQCgxGRUFUVVJFX1BBQ0sQBRIQCgxTRVJWSUNFX1BBQ0sQBhIICgRUT09MEAcSEQoNVVBEQVRFX1JPTExVUBAIEgoKBlVQREFURRAJIqABCghFeGVjU3RlcBJIChZsaW51eF9leGVjX3N0ZXBfY29uZmlnGAEgASgLMiguZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLkV4ZWNTdGVwQ29uZmlnEkoKGHdpbmRvd3NfZXhlY19zdGVwX2NvbmZpZxgCIAEoCzIoLmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MS5FeGVjU3RlcENvbmZpZyKgAgoORXhlY1N0ZXBDb25maWcSFAoKbG9jYWxfcGF0aBgBIAEoCUgAEjkKCmdjc19vYmplY3QYAiABKAsyIy5nb29nbGUuY2xvdWQub3Njb25maWcudjEuR2NzT2JqZWN0SAASHQoVYWxsb3dlZF9zdWNjZXNzX2NvZGVzGAMgAygFEkkKC2ludGVycHJldGVyGAQgASgOMjQuZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLkV4ZWNTdGVwQ29uZmlnLkludGVycHJldGVyIkUKC0ludGVycHJldGVyEhsKF0lOVEVSUFJFVEVSX1VOU1BFQ0lGSUVEEAASCQoFU0hFTEwQARIOCgpQT1dFUlNIRUxMEAJCDAoKZXhlY3V0YWJsZSJVCglHY3NPYmplY3QSEwoGYnVja2V0GAEgASgJQgPgQQISEwoGb2JqZWN0GAIgASgJQgPgQQISHgoRZ2VuZXJhdGlvbl9udW1iZXIYAyABKANCA+BBAiLIAgoTUGF0Y2hJbnN0YW5jZUZpbHRlchILCgNhbGwYASABKAgSTgoMZ3JvdXBfbGFiZWxzGAIgAygLMjguZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLlBhdGNoSW5zdGFuY2VGaWx0ZXIuR3JvdXBMYWJlbBINCgV6b25lcxgDIAMoCRIRCglpbnN0YW5jZXMYBCADKAkSHgoWaW5zdGFuY2VfbmFtZV9wcmVmaXhlcxgFIAMoCRqRAQoKR3JvdXBMYWJlbBJUCgZsYWJlbHMYASADKAsyRC5nb29nbGUuY2xvdWQub3Njb25maWcudjEuUGF0Y2hJbnN0YW5jZUZpbHRlci5Hcm91cExhYmVsLkxhYmVsc0VudHJ5Gi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi1AEKDFBhdGNoUm9sbG91dBI5CgRtb2RlGAEgASgOMisuZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLlBhdGNoUm9sbG91dC5Nb2RlEkMKEWRpc3J1cHRpb25fYnVkZ2V0GAIgASgLMiguZ29vZ2xlLmNsb3VkLm9zY29uZmlnLnYxLkZpeGVkT3JQZXJjZW50IkQKBE1vZGUSFAoQTU9ERV9VTlNQRUNJRklFRBAAEhAKDFpPTkVfQllfWk9ORRABEhQKEENPTkNVUlJFTlRfWk9ORVMQAkK3AQocY29tLmdvb2dsZS5jbG91ZC5vc2NvbmZpZy52MUIJUGF0Y2hKb2JzWjhjbG91ZC5nb29nbGUuY29tL2dvL29zY29uZmlnL2FwaXYxL29zY29uZmlncGI7b3Njb25maWdwYqoCGEdvb2dsZS5DbG91ZC5Pc0NvbmZpZy5WMcoCGEdvb2dsZVxDbG91ZFxPc0NvbmZpZ1xWMeoCG0dvb2dsZTo6Q2xvdWQ6Ok9zQ29uZmlnOjpWMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_osconfig_v1_osconfig_common, file_google_protobuf_duration, file_google_protobuf_timestamp]);

/**
 * A request message to initiate patching across Compute Engine
 * instances.
 *
 * @generated from message google.cloud.osconfig.v1.ExecutePatchJobRequest
 */
export type ExecutePatchJobRequest = Message<"google.cloud.osconfig.v1.ExecutePatchJobRequest"> & {
  /**
   * Required. The project in which to run this patch in the form `projects/*`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Description of the patch job. Length of the description is limited
   * to 1024 characters.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Required. Instances to patch, either explicitly or filtered by some
   * criteria such as zone or labels.
   *
   * @generated from field: google.cloud.osconfig.v1.PatchInstanceFilter instance_filter = 7;
   */
  instanceFilter?: PatchInstanceFilter;

  /**
   * Patch configuration being applied. If omitted, instances are
   * patched using the default configurations.
   *
   * @generated from field: google.cloud.osconfig.v1.PatchConfig patch_config = 4;
   */
  patchConfig?: PatchConfig;

  /**
   * Duration of the patch job. After the duration ends, the patch job
   * times out.
   *
   * @generated from field: google.protobuf.Duration duration = 5;
   */
  duration?: Duration;

  /**
   * If this patch is a dry-run only, instances are contacted but
   * will do nothing.
   *
   * @generated from field: bool dry_run = 6;
   */
  dryRun: boolean;

  /**
   * Display name for this patch job. This does not have to be unique.
   *
   * @generated from field: string display_name = 8;
   */
  displayName: string;

  /**
   * Rollout strategy of the patch job.
   *
   * @generated from field: google.cloud.osconfig.v1.PatchRollout rollout = 9;
   */
  rollout?: PatchRollout;
};

/**
 * Describes the message google.cloud.osconfig.v1.ExecutePatchJobRequest.
 * Use `create(ExecutePatchJobRequestSchema)` to create a new message.
 */
export const ExecutePatchJobRequestSchema: GenMessage<ExecutePatchJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 0);

/**
 * Request to get an active or completed patch job.
 *
 * @generated from message google.cloud.osconfig.v1.GetPatchJobRequest
 */
export type GetPatchJobRequest = Message<"google.cloud.osconfig.v1.GetPatchJobRequest"> & {
  /**
   * Required. Name of the patch in the form `projects/*\/patchJobs/*`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.osconfig.v1.GetPatchJobRequest.
 * Use `create(GetPatchJobRequestSchema)` to create a new message.
 */
export const GetPatchJobRequestSchema: GenMessage<GetPatchJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 1);

/**
 * Request to list details for all instances that are part of a patch job.
 *
 * @generated from message google.cloud.osconfig.v1.ListPatchJobInstanceDetailsRequest
 */
export type ListPatchJobInstanceDetailsRequest = Message<"google.cloud.osconfig.v1.ListPatchJobInstanceDetailsRequest"> & {
  /**
   * Required. The parent for the instances are in the form of
   * `projects/*\/patchJobs/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of instance details records to return.  Default is 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A pagination token returned from a previous call
   * that indicates where this listing should continue from.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that filters results listed in the response. This
   * field supports filtering results by instance zone, name, state, or
   * `failure_reason`.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.osconfig.v1.ListPatchJobInstanceDetailsRequest.
 * Use `create(ListPatchJobInstanceDetailsRequestSchema)` to create a new message.
 */
export const ListPatchJobInstanceDetailsRequestSchema: GenMessage<ListPatchJobInstanceDetailsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 2);

/**
 * A response message for listing the instances details for a patch job.
 *
 * @generated from message google.cloud.osconfig.v1.ListPatchJobInstanceDetailsResponse
 */
export type ListPatchJobInstanceDetailsResponse = Message<"google.cloud.osconfig.v1.ListPatchJobInstanceDetailsResponse"> & {
  /**
   * A list of instance status.
   *
   * @generated from field: repeated google.cloud.osconfig.v1.PatchJobInstanceDetails patch_job_instance_details = 1;
   */
  patchJobInstanceDetails: PatchJobInstanceDetails[];

  /**
   * A pagination token that can be used to get the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.osconfig.v1.ListPatchJobInstanceDetailsResponse.
 * Use `create(ListPatchJobInstanceDetailsResponseSchema)` to create a new message.
 */
export const ListPatchJobInstanceDetailsResponseSchema: GenMessage<ListPatchJobInstanceDetailsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 3);

/**
 * Patch details for a VM instance. For more information about reviewing VM
 * instance details, see
 * [Listing all VM instance details for a specific patch
 * job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details).
 *
 * @generated from message google.cloud.osconfig.v1.PatchJobInstanceDetails
 */
export type PatchJobInstanceDetails = Message<"google.cloud.osconfig.v1.PatchJobInstanceDetails"> & {
  /**
   * The instance name in the form `projects/*\/zones/*\/instances/*`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The unique identifier for the instance. This identifier is
   * defined by the server.
   *
   * @generated from field: string instance_system_id = 2;
   */
  instanceSystemId: string;

  /**
   * Current state of instance patch.
   *
   * @generated from field: google.cloud.osconfig.v1.Instance.PatchState state = 3;
   */
  state: Instance_PatchState;

  /**
   * If the patch fails, this field provides the reason.
   *
   * @generated from field: string failure_reason = 4;
   */
  failureReason: string;

  /**
   * The number of times the agent that the agent attempts to apply the patch.
   *
   * @generated from field: int64 attempt_count = 5;
   */
  attemptCount: bigint;
};

/**
 * Describes the message google.cloud.osconfig.v1.PatchJobInstanceDetails.
 * Use `create(PatchJobInstanceDetailsSchema)` to create a new message.
 */
export const PatchJobInstanceDetailsSchema: GenMessage<PatchJobInstanceDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 4);

/**
 * A request message for listing patch jobs.
 *
 * @generated from message google.cloud.osconfig.v1.ListPatchJobsRequest
 */
export type ListPatchJobsRequest = Message<"google.cloud.osconfig.v1.ListPatchJobsRequest"> & {
  /**
   * Required. In the form of `projects/*`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of instance status to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A pagination token returned from a previous call
   * that indicates where this listing should continue from.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * If provided, this field specifies the criteria that must be met by patch
   * jobs to be included in the response.
   * Currently, filtering is only available on the patch_deployment field.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.osconfig.v1.ListPatchJobsRequest.
 * Use `create(ListPatchJobsRequestSchema)` to create a new message.
 */
export const ListPatchJobsRequestSchema: GenMessage<ListPatchJobsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 5);

/**
 * A response message for listing patch jobs.
 *
 * @generated from message google.cloud.osconfig.v1.ListPatchJobsResponse
 */
export type ListPatchJobsResponse = Message<"google.cloud.osconfig.v1.ListPatchJobsResponse"> & {
  /**
   * The list of patch jobs.
   *
   * @generated from field: repeated google.cloud.osconfig.v1.PatchJob patch_jobs = 1;
   */
  patchJobs: PatchJob[];

  /**
   * A pagination token that can be used to get the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.osconfig.v1.ListPatchJobsResponse.
 * Use `create(ListPatchJobsResponseSchema)` to create a new message.
 */
export const ListPatchJobsResponseSchema: GenMessage<ListPatchJobsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 6);

/**
 * A high level representation of a patch job that is either in progress
 * or has completed.
 *
 * Instance details are not included in the job. To paginate through instance
 * details, use ListPatchJobInstanceDetails.
 *
 * For more information about patch jobs, see
 * [Creating patch
 * jobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job).
 *
 * @generated from message google.cloud.osconfig.v1.PatchJob
 */
export type PatchJob = Message<"google.cloud.osconfig.v1.PatchJob"> & {
  /**
   * Unique identifier for this patch job in the form
   * `projects/*\/patchJobs/*`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Display name for this patch job. This is not a unique identifier.
   *
   * @generated from field: string display_name = 14;
   */
  displayName: string;

  /**
   * Description of the patch job. Length of the description is limited
   * to 1024 characters.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Time this patch job was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Last time this patch job was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * The current state of the PatchJob.
   *
   * @generated from field: google.cloud.osconfig.v1.PatchJob.State state = 5;
   */
  state: PatchJob_State;

  /**
   * Instances to patch.
   *
   * @generated from field: google.cloud.osconfig.v1.PatchInstanceFilter instance_filter = 13;
   */
  instanceFilter?: PatchInstanceFilter;

  /**
   * Patch configuration being applied.
   *
   * @generated from field: google.cloud.osconfig.v1.PatchConfig patch_config = 7;
   */
  patchConfig?: PatchConfig;

  /**
   * Duration of the patch job. After the duration ends, the
   * patch job times out.
   *
   * @generated from field: google.protobuf.Duration duration = 8;
   */
  duration?: Duration;

  /**
   * Summary of instance details.
   *
   * @generated from field: google.cloud.osconfig.v1.PatchJob.InstanceDetailsSummary instance_details_summary = 9;
   */
  instanceDetailsSummary?: PatchJob_InstanceDetailsSummary;

  /**
   * If this patch job is a dry run, the agent reports that it has
   * finished without running any updates on the VM instance.
   *
   * @generated from field: bool dry_run = 10;
   */
  dryRun: boolean;

  /**
   * If this patch job failed, this message provides information about the
   * failure.
   *
   * @generated from field: string error_message = 11;
   */
  errorMessage: string;

  /**
   * Reflects the overall progress of the patch job in the range of
   * 0.0 being no progress to 100.0 being complete.
   *
   * @generated from field: double percent_complete = 12;
   */
  percentComplete: number;

  /**
   * Output only. Name of the patch deployment that created this patch job.
   *
   * @generated from field: string patch_deployment = 15;
   */
  patchDeployment: string;

  /**
   * Rollout strategy being applied.
   *
   * @generated from field: google.cloud.osconfig.v1.PatchRollout rollout = 16;
   */
  rollout?: PatchRollout;
};

/**
 * Describes the message google.cloud.osconfig.v1.PatchJob.
 * Use `create(PatchJobSchema)` to create a new message.
 */
export const PatchJobSchema: GenMessage<PatchJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 7);

/**
 * A summary of the current patch state across all instances that this patch
 * job affects. Contains counts of instances in different states. These states
 * map to `InstancePatchState`. List patch job instance details to see the
 * specific states of each instance.
 *
 * @generated from message google.cloud.osconfig.v1.PatchJob.InstanceDetailsSummary
 */
export type PatchJob_InstanceDetailsSummary = Message<"google.cloud.osconfig.v1.PatchJob.InstanceDetailsSummary"> & {
  /**
   * Number of instances pending patch job.
   *
   * @generated from field: int64 pending_instance_count = 1;
   */
  pendingInstanceCount: bigint;

  /**
   * Number of instances that are inactive.
   *
   * @generated from field: int64 inactive_instance_count = 2;
   */
  inactiveInstanceCount: bigint;

  /**
   * Number of instances notified about patch job.
   *
   * @generated from field: int64 notified_instance_count = 3;
   */
  notifiedInstanceCount: bigint;

  /**
   * Number of instances that have started.
   *
   * @generated from field: int64 started_instance_count = 4;
   */
  startedInstanceCount: bigint;

  /**
   * Number of instances that are downloading patches.
   *
   * @generated from field: int64 downloading_patches_instance_count = 5;
   */
  downloadingPatchesInstanceCount: bigint;

  /**
   * Number of instances that are applying patches.
   *
   * @generated from field: int64 applying_patches_instance_count = 6;
   */
  applyingPatchesInstanceCount: bigint;

  /**
   * Number of instances rebooting.
   *
   * @generated from field: int64 rebooting_instance_count = 7;
   */
  rebootingInstanceCount: bigint;

  /**
   * Number of instances that have completed successfully.
   *
   * @generated from field: int64 succeeded_instance_count = 8;
   */
  succeededInstanceCount: bigint;

  /**
   * Number of instances that require reboot.
   *
   * @generated from field: int64 succeeded_reboot_required_instance_count = 9;
   */
  succeededRebootRequiredInstanceCount: bigint;

  /**
   * Number of instances that failed.
   *
   * @generated from field: int64 failed_instance_count = 10;
   */
  failedInstanceCount: bigint;

  /**
   * Number of instances that have acked and will start shortly.
   *
   * @generated from field: int64 acked_instance_count = 11;
   */
  ackedInstanceCount: bigint;

  /**
   * Number of instances that exceeded the time out while applying the patch.
   *
   * @generated from field: int64 timed_out_instance_count = 12;
   */
  timedOutInstanceCount: bigint;

  /**
   * Number of instances that are running the pre-patch step.
   *
   * @generated from field: int64 pre_patch_step_instance_count = 13;
   */
  prePatchStepInstanceCount: bigint;

  /**
   * Number of instances that are running the post-patch step.
   *
   * @generated from field: int64 post_patch_step_instance_count = 14;
   */
  postPatchStepInstanceCount: bigint;

  /**
   * Number of instances that do not appear to be running the agent. Check to
   * ensure that the agent is installed, running, and able to communicate with
   * the service.
   *
   * @generated from field: int64 no_agent_detected_instance_count = 15;
   */
  noAgentDetectedInstanceCount: bigint;
};

/**
 * Describes the message google.cloud.osconfig.v1.PatchJob.InstanceDetailsSummary.
 * Use `create(PatchJob_InstanceDetailsSummarySchema)` to create a new message.
 */
export const PatchJob_InstanceDetailsSummarySchema: GenMessage<PatchJob_InstanceDetailsSummary> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 7, 0);

/**
 * Enumeration of the various states a patch job passes through as it
 * executes.
 *
 * @generated from enum google.cloud.osconfig.v1.PatchJob.State
 */
export enum PatchJob_State {
  /**
   * State must be specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The patch job was successfully initiated.
   *
   * @generated from enum value: STARTED = 1;
   */
  STARTED = 1,

  /**
   * The patch job is looking up instances to run the patch on.
   *
   * @generated from enum value: INSTANCE_LOOKUP = 2;
   */
  INSTANCE_LOOKUP = 2,

  /**
   * Instances are being patched.
   *
   * @generated from enum value: PATCHING = 3;
   */
  PATCHING = 3,

  /**
   * Patch job completed successfully.
   *
   * @generated from enum value: SUCCEEDED = 4;
   */
  SUCCEEDED = 4,

  /**
   * Patch job completed but there were errors.
   *
   * @generated from enum value: COMPLETED_WITH_ERRORS = 5;
   */
  COMPLETED_WITH_ERRORS = 5,

  /**
   * The patch job was canceled.
   *
   * @generated from enum value: CANCELED = 6;
   */
  CANCELED = 6,

  /**
   * The patch job timed out.
   *
   * @generated from enum value: TIMED_OUT = 7;
   */
  TIMED_OUT = 7,
}

/**
 * Describes the enum google.cloud.osconfig.v1.PatchJob.State.
 */
export const PatchJob_StateSchema: GenEnum<PatchJob_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_osconfig_v1_patch_jobs, 7, 0);

/**
 * Patch configuration specifications. Contains details on how to apply the
 * patch(es) to a VM instance.
 *
 * @generated from message google.cloud.osconfig.v1.PatchConfig
 */
export type PatchConfig = Message<"google.cloud.osconfig.v1.PatchConfig"> & {
  /**
   * Post-patch reboot settings.
   *
   * @generated from field: google.cloud.osconfig.v1.PatchConfig.RebootConfig reboot_config = 1;
   */
  rebootConfig: PatchConfig_RebootConfig;

  /**
   * Apt update settings. Use this setting to override the default `apt` patch
   * rules.
   *
   * @generated from field: google.cloud.osconfig.v1.AptSettings apt = 3;
   */
  apt?: AptSettings;

  /**
   * Yum update settings. Use this setting to override the default `yum` patch
   * rules.
   *
   * @generated from field: google.cloud.osconfig.v1.YumSettings yum = 4;
   */
  yum?: YumSettings;

  /**
   * Goo update settings. Use this setting to override the default `goo` patch
   * rules.
   *
   * @generated from field: google.cloud.osconfig.v1.GooSettings goo = 5;
   */
  goo?: GooSettings;

  /**
   * Zypper update settings. Use this setting to override the default `zypper`
   * patch rules.
   *
   * @generated from field: google.cloud.osconfig.v1.ZypperSettings zypper = 6;
   */
  zypper?: ZypperSettings;

  /**
   * Windows update settings. Use this override the default windows patch rules.
   *
   * @generated from field: google.cloud.osconfig.v1.WindowsUpdateSettings windows_update = 7;
   */
  windowsUpdate?: WindowsUpdateSettings;

  /**
   * The `ExecStep` to run before the patch update.
   *
   * @generated from field: google.cloud.osconfig.v1.ExecStep pre_step = 8;
   */
  preStep?: ExecStep;

  /**
   * The `ExecStep` to run after the patch update.
   *
   * @generated from field: google.cloud.osconfig.v1.ExecStep post_step = 9;
   */
  postStep?: ExecStep;

  /**
   * Allows the patch job to run on Managed instance groups (MIGs).
   *
   * @generated from field: bool mig_instances_allowed = 10;
   */
  migInstancesAllowed: boolean;
};

/**
 * Describes the message google.cloud.osconfig.v1.PatchConfig.
 * Use `create(PatchConfigSchema)` to create a new message.
 */
export const PatchConfigSchema: GenMessage<PatchConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 8);

/**
 * Post-patch reboot settings.
 *
 * @generated from enum google.cloud.osconfig.v1.PatchConfig.RebootConfig
 */
export enum PatchConfig_RebootConfig {
  /**
   * The default behavior is DEFAULT.
   *
   * @generated from enum value: REBOOT_CONFIG_UNSPECIFIED = 0;
   */
  REBOOT_CONFIG_UNSPECIFIED = 0,

  /**
   * The agent decides if a reboot is necessary by checking signals such as
   * registry keys on Windows or `/var/run/reboot-required` on APT based
   * systems. On RPM based systems, a set of core system package install times
   * are compared with system boot time.
   *
   * @generated from enum value: DEFAULT = 1;
   */
  DEFAULT = 1,

  /**
   * Always reboot the machine after the update completes.
   *
   * @generated from enum value: ALWAYS = 2;
   */
  ALWAYS = 2,

  /**
   * Never reboot the machine after the update completes.
   *
   * @generated from enum value: NEVER = 3;
   */
  NEVER = 3,
}

/**
 * Describes the enum google.cloud.osconfig.v1.PatchConfig.RebootConfig.
 */
export const PatchConfig_RebootConfigSchema: GenEnum<PatchConfig_RebootConfig> = /*@__PURE__*/
  enumDesc(file_google_cloud_osconfig_v1_patch_jobs, 8, 0);

/**
 * Namespace for instance state enums.
 *
 * @generated from message google.cloud.osconfig.v1.Instance
 */
export type Instance = Message<"google.cloud.osconfig.v1.Instance"> & {
};

/**
 * Describes the message google.cloud.osconfig.v1.Instance.
 * Use `create(InstanceSchema)` to create a new message.
 */
export const InstanceSchema: GenMessage<Instance> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 9);

/**
 * Patch state of an instance.
 *
 * @generated from enum google.cloud.osconfig.v1.Instance.PatchState
 */
export enum Instance_PatchState {
  /**
   * Unspecified.
   *
   * @generated from enum value: PATCH_STATE_UNSPECIFIED = 0;
   */
  PATCH_STATE_UNSPECIFIED = 0,

  /**
   * The instance is not yet notified.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * Instance is inactive and cannot be patched.
   *
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * The instance is notified that it should be patched.
   *
   * @generated from enum value: NOTIFIED = 3;
   */
  NOTIFIED = 3,

  /**
   * The instance has started the patching process.
   *
   * @generated from enum value: STARTED = 4;
   */
  STARTED = 4,

  /**
   * The instance is downloading patches.
   *
   * @generated from enum value: DOWNLOADING_PATCHES = 5;
   */
  DOWNLOADING_PATCHES = 5,

  /**
   * The instance is applying patches.
   *
   * @generated from enum value: APPLYING_PATCHES = 6;
   */
  APPLYING_PATCHES = 6,

  /**
   * The instance is rebooting.
   *
   * @generated from enum value: REBOOTING = 7;
   */
  REBOOTING = 7,

  /**
   * The instance has completed applying patches.
   *
   * @generated from enum value: SUCCEEDED = 8;
   */
  SUCCEEDED = 8,

  /**
   * The instance has completed applying patches but a reboot is required.
   *
   * @generated from enum value: SUCCEEDED_REBOOT_REQUIRED = 9;
   */
  SUCCEEDED_REBOOT_REQUIRED = 9,

  /**
   * The instance has failed to apply the patch.
   *
   * @generated from enum value: FAILED = 10;
   */
  FAILED = 10,

  /**
   * The instance acked the notification and will start shortly.
   *
   * @generated from enum value: ACKED = 11;
   */
  ACKED = 11,

  /**
   * The instance exceeded the time out while applying the patch.
   *
   * @generated from enum value: TIMED_OUT = 12;
   */
  TIMED_OUT = 12,

  /**
   * The instance is running the pre-patch step.
   *
   * @generated from enum value: RUNNING_PRE_PATCH_STEP = 13;
   */
  RUNNING_PRE_PATCH_STEP = 13,

  /**
   * The instance is running the post-patch step.
   *
   * @generated from enum value: RUNNING_POST_PATCH_STEP = 14;
   */
  RUNNING_POST_PATCH_STEP = 14,

  /**
   * The service could not detect the presence of the agent. Check to ensure
   * that the agent is installed, running, and able to communicate with the
   * service.
   *
   * @generated from enum value: NO_AGENT_DETECTED = 15;
   */
  NO_AGENT_DETECTED = 15,
}

/**
 * Describes the enum google.cloud.osconfig.v1.Instance.PatchState.
 */
export const Instance_PatchStateSchema: GenEnum<Instance_PatchState> = /*@__PURE__*/
  enumDesc(file_google_cloud_osconfig_v1_patch_jobs, 9, 0);

/**
 * Message for canceling a patch job.
 *
 * @generated from message google.cloud.osconfig.v1.CancelPatchJobRequest
 */
export type CancelPatchJobRequest = Message<"google.cloud.osconfig.v1.CancelPatchJobRequest"> & {
  /**
   * Required. Name of the patch in the form `projects/*\/patchJobs/*`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.osconfig.v1.CancelPatchJobRequest.
 * Use `create(CancelPatchJobRequestSchema)` to create a new message.
 */
export const CancelPatchJobRequestSchema: GenMessage<CancelPatchJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 10);

/**
 * Apt patching is completed by executing `apt-get update && apt-get
 * upgrade`. Additional options can be set to control how this is executed.
 *
 * @generated from message google.cloud.osconfig.v1.AptSettings
 */
export type AptSettings = Message<"google.cloud.osconfig.v1.AptSettings"> & {
  /**
   * By changing the type to DIST, the patching is performed
   * using `apt-get dist-upgrade` instead.
   *
   * @generated from field: google.cloud.osconfig.v1.AptSettings.Type type = 1;
   */
  type: AptSettings_Type;

  /**
   * List of packages to exclude from update. These packages will be excluded
   *
   * @generated from field: repeated string excludes = 2;
   */
  excludes: string[];

  /**
   * An exclusive list of packages to be updated. These are the only packages
   * that will be updated. If these packages are not installed, they will be
   * ignored. This field cannot be specified with any other patch configuration
   * fields.
   *
   * @generated from field: repeated string exclusive_packages = 3;
   */
  exclusivePackages: string[];
};

/**
 * Describes the message google.cloud.osconfig.v1.AptSettings.
 * Use `create(AptSettingsSchema)` to create a new message.
 */
export const AptSettingsSchema: GenMessage<AptSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 11);

/**
 * Apt patch type.
 *
 * @generated from enum google.cloud.osconfig.v1.AptSettings.Type
 */
export enum AptSettings_Type {
  /**
   * By default, upgrade will be performed.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Runs `apt-get dist-upgrade`.
   *
   * @generated from enum value: DIST = 1;
   */
  DIST = 1,

  /**
   * Runs `apt-get upgrade`.
   *
   * @generated from enum value: UPGRADE = 2;
   */
  UPGRADE = 2,
}

/**
 * Describes the enum google.cloud.osconfig.v1.AptSettings.Type.
 */
export const AptSettings_TypeSchema: GenEnum<AptSettings_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_osconfig_v1_patch_jobs, 11, 0);

/**
 * Yum patching is performed by executing `yum update`. Additional options
 * can be set to control how this is executed.
 *
 * Note that not all settings are supported on all platforms.
 *
 * @generated from message google.cloud.osconfig.v1.YumSettings
 */
export type YumSettings = Message<"google.cloud.osconfig.v1.YumSettings"> & {
  /**
   * Adds the `--security` flag to `yum update`. Not supported on
   * all platforms.
   *
   * @generated from field: bool security = 1;
   */
  security: boolean;

  /**
   * Will cause patch to run `yum update-minimal` instead.
   *
   * @generated from field: bool minimal = 2;
   */
  minimal: boolean;

  /**
   * List of packages to exclude from update. These packages are excluded by
   * using the yum `--exclude` flag.
   *
   * @generated from field: repeated string excludes = 3;
   */
  excludes: string[];

  /**
   * An exclusive list of packages to be updated. These are the only packages
   * that will be updated. If these packages are not installed, they will be
   * ignored. This field must not be specified with any other patch
   * configuration fields.
   *
   * @generated from field: repeated string exclusive_packages = 4;
   */
  exclusivePackages: string[];
};

/**
 * Describes the message google.cloud.osconfig.v1.YumSettings.
 * Use `create(YumSettingsSchema)` to create a new message.
 */
export const YumSettingsSchema: GenMessage<YumSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 12);

/**
 * Googet patching is performed by running `googet update`.
 *
 * @generated from message google.cloud.osconfig.v1.GooSettings
 */
export type GooSettings = Message<"google.cloud.osconfig.v1.GooSettings"> & {
};

/**
 * Describes the message google.cloud.osconfig.v1.GooSettings.
 * Use `create(GooSettingsSchema)` to create a new message.
 */
export const GooSettingsSchema: GenMessage<GooSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 13);

/**
 * Zypper patching is performed by running `zypper patch`.
 * See also https://en.opensuse.org/SDB:Zypper_manual.
 *
 * @generated from message google.cloud.osconfig.v1.ZypperSettings
 */
export type ZypperSettings = Message<"google.cloud.osconfig.v1.ZypperSettings"> & {
  /**
   * Adds the `--with-optional` flag to `zypper patch`.
   *
   * @generated from field: bool with_optional = 1;
   */
  withOptional: boolean;

  /**
   * Adds the `--with-update` flag, to `zypper patch`.
   *
   * @generated from field: bool with_update = 2;
   */
  withUpdate: boolean;

  /**
   * Install only patches with these categories.
   * Common categories include security, recommended, and feature.
   *
   * @generated from field: repeated string categories = 3;
   */
  categories: string[];

  /**
   * Install only patches with these severities.
   * Common severities include critical, important, moderate, and low.
   *
   * @generated from field: repeated string severities = 4;
   */
  severities: string[];

  /**
   * List of patches to exclude from update.
   *
   * @generated from field: repeated string excludes = 5;
   */
  excludes: string[];

  /**
   * An exclusive list of patches to be updated. These are the only patches
   * that will be installed using 'zypper patch patch:<patch_name>' command.
   * This field must not be used with any other patch configuration fields.
   *
   * @generated from field: repeated string exclusive_patches = 6;
   */
  exclusivePatches: string[];
};

/**
 * Describes the message google.cloud.osconfig.v1.ZypperSettings.
 * Use `create(ZypperSettingsSchema)` to create a new message.
 */
export const ZypperSettingsSchema: GenMessage<ZypperSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 14);

/**
 * Windows patching is performed using the Windows Update Agent.
 *
 * @generated from message google.cloud.osconfig.v1.WindowsUpdateSettings
 */
export type WindowsUpdateSettings = Message<"google.cloud.osconfig.v1.WindowsUpdateSettings"> & {
  /**
   * Only apply updates of these windows update classifications. If empty, all
   * updates are applied.
   *
   * @generated from field: repeated google.cloud.osconfig.v1.WindowsUpdateSettings.Classification classifications = 1;
   */
  classifications: WindowsUpdateSettings_Classification[];

  /**
   * List of KBs to exclude from update.
   *
   * @generated from field: repeated string excludes = 2;
   */
  excludes: string[];

  /**
   * An exclusive list of kbs to be updated. These are the only patches
   * that will be updated. This field must not be used with other
   * patch configurations.
   *
   * @generated from field: repeated string exclusive_patches = 3;
   */
  exclusivePatches: string[];
};

/**
 * Describes the message google.cloud.osconfig.v1.WindowsUpdateSettings.
 * Use `create(WindowsUpdateSettingsSchema)` to create a new message.
 */
export const WindowsUpdateSettingsSchema: GenMessage<WindowsUpdateSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 15);

/**
 * Microsoft Windows update classifications as defined in
 * [1]
 * https://support.microsoft.com/en-us/help/824684/description-of-the-standard-terminology-that-is-used-to-describe-micro
 *
 * @generated from enum google.cloud.osconfig.v1.WindowsUpdateSettings.Classification
 */
export enum WindowsUpdateSettings_Classification {
  /**
   * Invalid. If classifications are included, they must be specified.
   *
   * @generated from enum value: CLASSIFICATION_UNSPECIFIED = 0;
   */
  CLASSIFICATION_UNSPECIFIED = 0,

  /**
   * "A widely released fix for a specific problem that addresses a critical,
   * non-security-related bug." [1]
   *
   * @generated from enum value: CRITICAL = 1;
   */
  CRITICAL = 1,

  /**
   * "A widely released fix for a product-specific, security-related
   * vulnerability. Security vulnerabilities are rated by their severity. The
   * severity rating is indicated in the Microsoft security bulletin as
   * critical, important, moderate, or low." [1]
   *
   * @generated from enum value: SECURITY = 2;
   */
  SECURITY = 2,

  /**
   * "A widely released and frequent software update that contains additions
   * to a product's definition database. Definition databases are often used
   * to detect objects that have specific attributes, such as malicious code,
   * phishing websites, or junk mail." [1]
   *
   * @generated from enum value: DEFINITION = 3;
   */
  DEFINITION = 3,

  /**
   * "Software that controls the input and output of a device." [1]
   *
   * @generated from enum value: DRIVER = 4;
   */
  DRIVER = 4,

  /**
   * "New product functionality that is first distributed outside the context
   * of a product release and that is typically included in the next full
   * product release." [1]
   *
   * @generated from enum value: FEATURE_PACK = 5;
   */
  FEATURE_PACK = 5,

  /**
   * "A tested, cumulative set of all hotfixes, security updates, critical
   * updates, and updates. Additionally, service packs may contain additional
   * fixes for problems that are found internally since the release of the
   * product. Service packs my also contain a limited number of
   * customer-requested design changes or features." [1]
   *
   * @generated from enum value: SERVICE_PACK = 6;
   */
  SERVICE_PACK = 6,

  /**
   * "A utility or feature that helps complete a task or set of tasks." [1]
   *
   * @generated from enum value: TOOL = 7;
   */
  TOOL = 7,

  /**
   * "A tested, cumulative set of hotfixes, security updates, critical
   * updates, and updates that are packaged together for easy deployment. A
   * rollup generally targets a specific area, such as security, or a
   * component of a product, such as Internet Information Services (IIS)." [1]
   *
   * @generated from enum value: UPDATE_ROLLUP = 8;
   */
  UPDATE_ROLLUP = 8,

  /**
   * "A widely released fix for a specific problem. An update addresses a
   * noncritical, non-security-related bug." [1]
   *
   * @generated from enum value: UPDATE = 9;
   */
  UPDATE = 9,
}

/**
 * Describes the enum google.cloud.osconfig.v1.WindowsUpdateSettings.Classification.
 */
export const WindowsUpdateSettings_ClassificationSchema: GenEnum<WindowsUpdateSettings_Classification> = /*@__PURE__*/
  enumDesc(file_google_cloud_osconfig_v1_patch_jobs, 15, 0);

/**
 * A step that runs an executable for a PatchJob.
 *
 * @generated from message google.cloud.osconfig.v1.ExecStep
 */
export type ExecStep = Message<"google.cloud.osconfig.v1.ExecStep"> & {
  /**
   * The ExecStepConfig for all Linux VMs targeted by the PatchJob.
   *
   * @generated from field: google.cloud.osconfig.v1.ExecStepConfig linux_exec_step_config = 1;
   */
  linuxExecStepConfig?: ExecStepConfig;

  /**
   * The ExecStepConfig for all Windows VMs targeted by the PatchJob.
   *
   * @generated from field: google.cloud.osconfig.v1.ExecStepConfig windows_exec_step_config = 2;
   */
  windowsExecStepConfig?: ExecStepConfig;
};

/**
 * Describes the message google.cloud.osconfig.v1.ExecStep.
 * Use `create(ExecStepSchema)` to create a new message.
 */
export const ExecStepSchema: GenMessage<ExecStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 16);

/**
 * Common configurations for an ExecStep.
 *
 * @generated from message google.cloud.osconfig.v1.ExecStepConfig
 */
export type ExecStepConfig = Message<"google.cloud.osconfig.v1.ExecStepConfig"> & {
  /**
   * Location of the executable.
   *
   * @generated from oneof google.cloud.osconfig.v1.ExecStepConfig.executable
   */
  executable: {
    /**
     * An absolute path to the executable on the VM.
     *
     * @generated from field: string local_path = 1;
     */
    value: string;
    case: "localPath";
  } | {
    /**
     * A Cloud Storage object containing the executable.
     *
     * @generated from field: google.cloud.osconfig.v1.GcsObject gcs_object = 2;
     */
    value: GcsObject;
    case: "gcsObject";
  } | { case: undefined; value?: undefined };

  /**
   * Defaults to [0]. A list of possible return values that the
   * execution can return to indicate a success.
   *
   * @generated from field: repeated int32 allowed_success_codes = 3;
   */
  allowedSuccessCodes: number[];

  /**
   * The script interpreter to use to run the script. If no interpreter is
   * specified the script will be executed directly, which will likely
   * only succeed for scripts with [shebang lines]
   * (https://en.wikipedia.org/wiki/Shebang_\(Unix\)).
   *
   * @generated from field: google.cloud.osconfig.v1.ExecStepConfig.Interpreter interpreter = 4;
   */
  interpreter: ExecStepConfig_Interpreter;
};

/**
 * Describes the message google.cloud.osconfig.v1.ExecStepConfig.
 * Use `create(ExecStepConfigSchema)` to create a new message.
 */
export const ExecStepConfigSchema: GenMessage<ExecStepConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 17);

/**
 * The interpreter used to execute the a file.
 *
 * @generated from enum google.cloud.osconfig.v1.ExecStepConfig.Interpreter
 */
export enum ExecStepConfig_Interpreter {
  /**
   * Invalid for a Windows ExecStepConfig. For a Linux ExecStepConfig, the
   * interpreter will be parsed from the shebang line of the script if
   * unspecified.
   *
   * @generated from enum value: INTERPRETER_UNSPECIFIED = 0;
   */
  INTERPRETER_UNSPECIFIED = 0,

  /**
   * Indicates that the script is run with `/bin/sh` on Linux and `cmd`
   * on Windows.
   *
   * @generated from enum value: SHELL = 1;
   */
  SHELL = 1,

  /**
   * Indicates that the file is run with PowerShell flags
   * `-NonInteractive`, `-NoProfile`, and `-ExecutionPolicy Bypass`.
   *
   * @generated from enum value: POWERSHELL = 2;
   */
  POWERSHELL = 2,
}

/**
 * Describes the enum google.cloud.osconfig.v1.ExecStepConfig.Interpreter.
 */
export const ExecStepConfig_InterpreterSchema: GenEnum<ExecStepConfig_Interpreter> = /*@__PURE__*/
  enumDesc(file_google_cloud_osconfig_v1_patch_jobs, 17, 0);

/**
 * Cloud Storage object representation.
 *
 * @generated from message google.cloud.osconfig.v1.GcsObject
 */
export type GcsObject = Message<"google.cloud.osconfig.v1.GcsObject"> & {
  /**
   * Required. Bucket of the Cloud Storage object.
   *
   * @generated from field: string bucket = 1;
   */
  bucket: string;

  /**
   * Required. Name of the Cloud Storage object.
   *
   * @generated from field: string object = 2;
   */
  object: string;

  /**
   * Required. Generation number of the Cloud Storage object. This is used to
   * ensure that the ExecStep specified by this PatchJob does not change.
   *
   * @generated from field: int64 generation_number = 3;
   */
  generationNumber: bigint;
};

/**
 * Describes the message google.cloud.osconfig.v1.GcsObject.
 * Use `create(GcsObjectSchema)` to create a new message.
 */
export const GcsObjectSchema: GenMessage<GcsObject> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 18);

/**
 * A filter to target VM instances for patching. The targeted
 * VMs must meet all criteria specified. So if both labels and zones are
 * specified, the patch job targets only VMs with those labels and in those
 * zones.
 *
 * @generated from message google.cloud.osconfig.v1.PatchInstanceFilter
 */
export type PatchInstanceFilter = Message<"google.cloud.osconfig.v1.PatchInstanceFilter"> & {
  /**
   * Target all VM instances in the project. If true, no other criteria is
   * permitted.
   *
   * @generated from field: bool all = 1;
   */
  all: boolean;

  /**
   * Targets VM instances matching ANY of these GroupLabels. This allows
   * targeting of disparate groups of VM instances.
   *
   * @generated from field: repeated google.cloud.osconfig.v1.PatchInstanceFilter.GroupLabel group_labels = 2;
   */
  groupLabels: PatchInstanceFilter_GroupLabel[];

  /**
   * Targets VM instances in ANY of these zones. Leave empty to target VM
   * instances in any zone.
   *
   * @generated from field: repeated string zones = 3;
   */
  zones: string[];

  /**
   * Targets any of the VM instances specified. Instances are specified by their
   * URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`,
   * `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or
   * `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`
   *
   * @generated from field: repeated string instances = 4;
   */
  instances: string[];

  /**
   * Targets VMs whose name starts with one of these prefixes. Similar to
   * labels, this is another way to group VMs when targeting configs, for
   * example prefix="prod-".
   *
   * @generated from field: repeated string instance_name_prefixes = 5;
   */
  instanceNamePrefixes: string[];
};

/**
 * Describes the message google.cloud.osconfig.v1.PatchInstanceFilter.
 * Use `create(PatchInstanceFilterSchema)` to create a new message.
 */
export const PatchInstanceFilterSchema: GenMessage<PatchInstanceFilter> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 19);

/**
 * Targets a group of VM instances by using their [assigned
 * labels](https://cloud.google.com/compute/docs/labeling-resources). Labels
 * are key-value pairs. A `GroupLabel` is a combination of labels
 * that is used to target VMs for a patch job.
 *
 * For example, a patch job can target VMs that have the following
 * `GroupLabel`: `{"env":"test", "app":"web"}`. This means that the patch job
 * is applied to VMs that have both the labels `env=test` and `app=web`.
 *
 * @generated from message google.cloud.osconfig.v1.PatchInstanceFilter.GroupLabel
 */
export type PatchInstanceFilter_GroupLabel = Message<"google.cloud.osconfig.v1.PatchInstanceFilter.GroupLabel"> & {
  /**
   * Compute Engine instance labels that must be present for a VM
   * instance to be targeted by this filter.
   *
   * @generated from field: map<string, string> labels = 1;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.osconfig.v1.PatchInstanceFilter.GroupLabel.
 * Use `create(PatchInstanceFilter_GroupLabelSchema)` to create a new message.
 */
export const PatchInstanceFilter_GroupLabelSchema: GenMessage<PatchInstanceFilter_GroupLabel> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 19, 0);

/**
 * Patch rollout configuration specifications. Contains details on the
 * concurrency control when applying patch(es) to all targeted VMs.
 *
 * @generated from message google.cloud.osconfig.v1.PatchRollout
 */
export type PatchRollout = Message<"google.cloud.osconfig.v1.PatchRollout"> & {
  /**
   * Mode of the patch rollout.
   *
   * @generated from field: google.cloud.osconfig.v1.PatchRollout.Mode mode = 1;
   */
  mode: PatchRollout_Mode;

  /**
   * The maximum number (or percentage) of VMs per zone to disrupt at any given
   * moment. The number of VMs calculated from multiplying the percentage by the
   * total number of VMs in a zone is rounded up.
   *
   * During patching, a VM is considered disrupted from the time the agent is
   * notified to begin until patching has completed. This disruption time
   * includes the time to complete reboot and any post-patch steps.
   *
   * A VM contributes to the disruption budget if its patching operation fails
   * either when applying the patches, running pre or post patch steps, or if it
   * fails to respond with a success notification before timing out. VMs that
   * are not running or do not have an active agent do not count toward this
   * disruption budget.
   *
   * For zone-by-zone rollouts, if the disruption budget in a zone is exceeded,
   * the patch job stops, because continuing to the next zone requires
   * completion of the patch process in the previous zone.
   *
   * For example, if the disruption budget has a fixed value of `10`, and 8 VMs
   * fail to patch in the current zone, the patch job continues to patch 2 VMs
   * at a time until the zone is completed. When that zone is completed
   * successfully, patching begins with 10 VMs at a time in the next zone. If 10
   * VMs in the next zone fail to patch, the patch job stops.
   *
   * @generated from field: google.cloud.osconfig.v1.FixedOrPercent disruption_budget = 2;
   */
  disruptionBudget?: FixedOrPercent;
};

/**
 * Describes the message google.cloud.osconfig.v1.PatchRollout.
 * Use `create(PatchRolloutSchema)` to create a new message.
 */
export const PatchRolloutSchema: GenMessage<PatchRollout> = /*@__PURE__*/
  messageDesc(file_google_cloud_osconfig_v1_patch_jobs, 20);

/**
 * Type of the rollout.
 *
 * @generated from enum google.cloud.osconfig.v1.PatchRollout.Mode
 */
export enum PatchRollout_Mode {
  /**
   * Mode must be specified.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * Patches are applied one zone at a time. The patch job begins in the
   * region with the lowest number of targeted VMs. Within the region,
   * patching begins in the zone with the lowest number of targeted VMs. If
   * multiple regions (or zones within a region) have the same number of
   * targeted VMs, a tie-breaker is achieved by sorting the regions or zones
   * in alphabetical order.
   *
   * @generated from enum value: ZONE_BY_ZONE = 1;
   */
  ZONE_BY_ZONE = 1,

  /**
   * Patches are applied to VMs in all zones at the same time.
   *
   * @generated from enum value: CONCURRENT_ZONES = 2;
   */
  CONCURRENT_ZONES = 2,
}

/**
 * Describes the enum google.cloud.osconfig.v1.PatchRollout.Mode.
 */
export const PatchRollout_ModeSchema: GenEnum<PatchRollout_Mode> = /*@__PURE__*/
  enumDesc(file_google_cloud_osconfig_v1_patch_jobs, 20, 0);

