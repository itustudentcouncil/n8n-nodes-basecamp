// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/resourcemanager/v2/folders.proto (package google.cloud.resourcemanager.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/resourcemanager/v2/folders.proto.
 */
export const file_google_cloud_resourcemanager_v2_folders: GenFile = /*@__PURE__*/
  fileDesc("Ci1nb29nbGUvY2xvdWQvcmVzb3VyY2VtYW5hZ2VyL3YyL2ZvbGRlcnMucHJvdG8SH2dvb2dsZS5jbG91ZC5yZXNvdXJjZW1hbmFnZXIudjIioAMKBkZvbGRlchIRCgRuYW1lGAEgASgJQgPgQQMSEwoGcGFyZW50GAIgASgJQgPgQQISFAoMZGlzcGxheV9uYW1lGAMgASgJElQKD2xpZmVjeWNsZV9zdGF0ZRgEIAEoDjI2Lmdvb2dsZS5jbG91ZC5yZXNvdXJjZW1hbmFnZXIudjIuRm9sZGVyLkxpZmVjeWNsZVN0YXRlQgPgQQMSNAoLY3JlYXRlX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMiUwoOTGlmZWN5Y2xlU3RhdGUSHwobTElGRUNZQ0xFX1NUQVRFX1VOU1BFQ0lGSUVEEAASCgoGQUNUSVZFEAESFAoQREVMRVRFX1JFUVVFU1RFRBACOkHqQT4KKmNsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL0ZvbGRlchIQZm9sZGVycy97Zm9sZGVyfSJ7ChJMaXN0Rm9sZGVyc1JlcXVlc3QSGQoGcGFyZW50GAEgASgJQgngQQL6QQMSASoSFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBEhkKDHNob3dfZGVsZXRlZBgEIAEoCEID4EEBImgKE0xpc3RGb2xkZXJzUmVzcG9uc2USOAoHZm9sZGVycxgBIAMoCzInLmdvb2dsZS5jbG91ZC5yZXNvdXJjZW1hbmFnZXIudjIuRm9sZGVyEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJWChRTZWFyY2hGb2xkZXJzUmVxdWVzdBIWCglwYWdlX3NpemUYASABKAVCA+BBARIXCgpwYWdlX3Rva2VuGAIgASgJQgPgQQESDQoFcXVlcnkYAyABKAkiagoVU2VhcmNoRm9sZGVyc1Jlc3BvbnNlEjgKB2ZvbGRlcnMYASADKAsyJy5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLkZvbGRlchIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiVAoQR2V0Rm9sZGVyUmVxdWVzdBJACgRuYW1lGAEgASgJQjLgQQL6QSwKKmNsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL0ZvbGRlciJuChNDcmVhdGVGb2xkZXJSZXF1ZXN0EhkKBnBhcmVudBgBIAEoCUIJ4EEC+kEDEgEqEjwKBmZvbGRlchgCIAEoCzInLmdvb2dsZS5jbG91ZC5yZXNvdXJjZW1hbmFnZXIudjIuRm9sZGVyQgPgQQIifAoRTW92ZUZvbGRlclJlcXVlc3QSQAoEbmFtZRgBIAEoCUIy4EEC+kEsCipjbG91ZHJlc291cmNlbWFuYWdlci5nb29nbGVhcGlzLmNvbS9Gb2xkZXISJQoSZGVzdGluYXRpb25fcGFyZW50GAIgASgJQgngQQL6QQMSASoiiQEKE1VwZGF0ZUZvbGRlclJlcXVlc3QSPAoGZm9sZGVyGAEgASgLMicuZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5Gb2xkZXJCA+BBAhI0Cgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BBAiJxChNEZWxldGVGb2xkZXJSZXF1ZXN0EkAKBG5hbWUYASABKAlCMuBBAvpBLAoqY2xvdWRyZXNvdXJjZW1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vRm9sZGVyEhgKEHJlY3Vyc2l2ZV9kZWxldGUYAiABKAgiWQoVVW5kZWxldGVGb2xkZXJSZXF1ZXN0EkAKBG5hbWUYASABKAlCMuBBAvpBLAoqY2xvdWRyZXNvdXJjZW1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vRm9sZGVyIvkBCg9Gb2xkZXJPcGVyYXRpb24SFAoMZGlzcGxheV9uYW1lGAEgASgJElYKDm9wZXJhdGlvbl90eXBlGAIgASgOMj4uZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5Gb2xkZXJPcGVyYXRpb24uT3BlcmF0aW9uVHlwZRIVCg1zb3VyY2VfcGFyZW50GAMgASgJEhoKEmRlc3RpbmF0aW9uX3BhcmVudBgEIAEoCSJFCg1PcGVyYXRpb25UeXBlEh4KGk9QRVJBVElPTl9UWVBFX1VOU1BFQ0lGSUVEEAASCgoGQ1JFQVRFEAESCAoETU9WRRACMr4PCgdGb2xkZXJzEqMBCgtMaXN0Rm9sZGVycxIzLmdvb2dsZS5jbG91ZC5yZXNvdXJjZW1hbmFnZXIudjIuTGlzdEZvbGRlcnNSZXF1ZXN0GjQuZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5MaXN0Rm9sZGVyc1Jlc3BvbnNlIinaQRNwYXJlbnQsc2hvd19kZWxldGVkgtPkkwINEgsvdjIvZm9sZGVycxKlAQoNU2VhcmNoRm9sZGVycxI1Lmdvb2dsZS5jbG91ZC5yZXNvdXJjZW1hbmFnZXIudjIuU2VhcmNoRm9sZGVyc1JlcXVlc3QaNi5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLlNlYXJjaEZvbGRlcnNSZXNwb25zZSIl2kEFcXVlcnmC0+STAhc6ASoiEi92Mi9mb2xkZXJzOnNlYXJjaBKMAQoJR2V0Rm9sZGVyEjEuZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5HZXRGb2xkZXJSZXF1ZXN0GicuZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5Gb2xkZXIiI9pBBG5hbWWC0+STAhYSFC92Mi97bmFtZT1mb2xkZXJzLyp9EqwBCgxDcmVhdGVGb2xkZXISNC5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLkNyZWF0ZUZvbGRlclJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIkfKQRkKBkZvbGRlchIPRm9sZGVyT3BlcmF0aW9u2kENcGFyZW50LGZvbGRlcoLT5JMCFToGZm9sZGVyIgsvdjIvZm9sZGVycxKvAQoMVXBkYXRlRm9sZGVyEjQuZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5VcGRhdGVGb2xkZXJSZXF1ZXN0GicuZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5Gb2xkZXIiQNpBEmZvbGRlcix1cGRhdGVfbWFza4LT5JMCJToGZm9sZGVyMhsvdjIve2ZvbGRlci5uYW1lPWZvbGRlcnMvKn0SuwEKCk1vdmVGb2xkZXISMi5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLk1vdmVGb2xkZXJSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJaykEZCgZGb2xkZXISD0ZvbGRlck9wZXJhdGlvbtpBF25hbWUsZGVzdGluYXRpb25fcGFyZW50gtPkkwIeOgEqIhkvdjIve25hbWU9Zm9sZGVycy8qfTptb3ZlEqoBCgxEZWxldGVGb2xkZXISNC5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLkRlbGV0ZUZvbGRlclJlcXVlc3QaJy5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLkZvbGRlciI72kEEbmFtZdpBFW5hbWUscmVjdXJzaXZlX2RlbGV0ZYLT5JMCFioUL3YyL3tuYW1lPWZvbGRlcnMvKn0SogEKDlVuZGVsZXRlRm9sZGVyEjYuZ29vZ2xlLmNsb3VkLnJlc291cmNlbWFuYWdlci52Mi5VbmRlbGV0ZUZvbGRlclJlcXVlc3QaJy5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyLkZvbGRlciIv2kEEbmFtZYLT5JMCIjoBKiIdL3YyL3tuYW1lPWZvbGRlcnMvKn06dW5kZWxldGUShgEKDEdldElhbVBvbGljeRIiLmdvb2dsZS5pYW0udjEuR2V0SWFtUG9saWN5UmVxdWVzdBoVLmdvb2dsZS5pYW0udjEuUG9saWN5IjvaQQhyZXNvdXJjZYLT5JMCKjoBKiIlL3YyL3tyZXNvdXJjZT1mb2xkZXJzLyp9OmdldElhbVBvbGljeRKNAQoMU2V0SWFtUG9saWN5EiIuZ29vZ2xlLmlhbS52MS5TZXRJYW1Qb2xpY3lSZXF1ZXN0GhUuZ29vZ2xlLmlhbS52MS5Qb2xpY3kiQtpBD3Jlc291cmNlLHBvbGljeYLT5JMCKjoBKiIlL3YyL3tyZXNvdXJjZT1mb2xkZXJzLyp9OnNldElhbVBvbGljeRK4AQoSVGVzdElhbVBlcm1pc3Npb25zEiguZ29vZ2xlLmlhbS52MS5UZXN0SWFtUGVybWlzc2lvbnNSZXF1ZXN0GikuZ29vZ2xlLmlhbS52MS5UZXN0SWFtUGVybWlzc2lvbnNSZXNwb25zZSJN2kEUcmVzb3VyY2UscGVybWlzc2lvbnOC0+STAjA6ASoiKy92Mi97cmVzb3VyY2U9Zm9sZGVycy8qfTp0ZXN0SWFtUGVybWlzc2lvbnMakAHKQSNjbG91ZHJlc291cmNlbWFuYWdlci5nb29nbGVhcGlzLmNvbdJBZ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybS5yZWFkLW9ubHlCyAEKI2NvbS5nb29nbGUuY2xvdWQucmVzb3VyY2VtYW5hZ2VyLnYyQgxGb2xkZXJzUHJvdG9QAVpNY2xvdWQuZ29vZ2xlLmNvbS9nby9yZXNvdXJjZW1hbmFnZXIvYXBpdjIvcmVzb3VyY2VtYW5hZ2VycGI7cmVzb3VyY2VtYW5hZ2VycGKqAh9Hb29nbGUuQ2xvdWQuUmVzb3VyY2VNYW5hZ2VyLlYyygIfR29vZ2xlXENsb3VkXFJlc291cmNlTWFuYWdlclxWMmIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_longrunning_operations, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * A Folder in an Organization's resource hierarchy, used to
 * organize that Organization's resources.
 *
 * @generated from message google.cloud.resourcemanager.v2.Folder
 */
export type Folder = Message<"google.cloud.resourcemanager.v2.Folder"> & {
  /**
   * Output only. The resource name of the Folder.
   * Its format is `folders/{folder_id}`, for example: "folders/1234".
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The Folder’s parent's resource name.
   * Updates to the folder's parent must be performed via
   * [MoveFolder][google.cloud.resourcemanager.v2.Folders.MoveFolder].
   *
   * @generated from field: string parent = 2;
   */
  parent: string;

  /**
   * The folder’s display name.
   * A folder’s display name must be unique amongst its siblings, e.g.
   * no two folders with the same parent can share the same display name.
   * The display name must start and end with a letter or digit, may contain
   * letters, digits, spaces, hyphens and underscores and can be no longer
   * than 30 characters. This is captured by the regular expression:
   * [\p{L}\p{N}]([\p{L}\p{N}_- ]{0,28}[\p{L}\p{N}])?.
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * Output only. The lifecycle state of the folder.
   * Updates to the lifecycle_state must be performed via
   * [DeleteFolder][google.cloud.resourcemanager.v2.Folders.DeleteFolder] and
   * [UndeleteFolder][google.cloud.resourcemanager.v2.Folders.UndeleteFolder].
   *
   * @generated from field: google.cloud.resourcemanager.v2.Folder.LifecycleState lifecycle_state = 4;
   */
  lifecycleState: Folder_LifecycleState;

  /**
   * Output only. Timestamp when the Folder was created. Assigned by the server.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. Timestamp when the Folder was last modified.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.Folder.
 * Use `create(FolderSchema)` to create a new message.
 */
export const FolderSchema: GenMessage<Folder> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 0);

/**
 * Folder lifecycle states.
 *
 * @generated from enum google.cloud.resourcemanager.v2.Folder.LifecycleState
 */
export enum Folder_LifecycleState {
  /**
   * Unspecified state.
   *
   * @generated from enum value: LIFECYCLE_STATE_UNSPECIFIED = 0;
   */
  LIFECYCLE_STATE_UNSPECIFIED = 0,

  /**
   * The normal and active state.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * The folder has been marked for deletion by the user.
   *
   * @generated from enum value: DELETE_REQUESTED = 2;
   */
  DELETE_REQUESTED = 2,
}

/**
 * Describes the enum google.cloud.resourcemanager.v2.Folder.LifecycleState.
 */
export const Folder_LifecycleStateSchema: GenEnum<Folder_LifecycleState> = /*@__PURE__*/
  enumDesc(file_google_cloud_resourcemanager_v2_folders, 0, 0);

/**
 * The ListFolders request message.
 *
 * @generated from message google.cloud.resourcemanager.v2.ListFoldersRequest
 */
export type ListFoldersRequest = Message<"google.cloud.resourcemanager.v2.ListFoldersRequest"> & {
  /**
   * Required. The resource name of the Organization or Folder whose Folders are
   * being listed.
   * Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.
   * Access to this method is controlled by checking the
   * `resourcemanager.folders.list` permission on the `parent`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of Folders to return in the response.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A pagination token returned from a previous call to `ListFolders`
   * that indicates where this listing should continue from.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Controls whether Folders in the
   * [DELETE_REQUESTED][google.cloud.resourcemanager.v2.Folder.LifecycleState.DELETE_REQUESTED]
   * state should be returned. Defaults to false.
   *
   * @generated from field: bool show_deleted = 4;
   */
  showDeleted: boolean;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.ListFoldersRequest.
 * Use `create(ListFoldersRequestSchema)` to create a new message.
 */
export const ListFoldersRequestSchema: GenMessage<ListFoldersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 1);

/**
 * The ListFolders response message.
 *
 * @generated from message google.cloud.resourcemanager.v2.ListFoldersResponse
 */
export type ListFoldersResponse = Message<"google.cloud.resourcemanager.v2.ListFoldersResponse"> & {
  /**
   * A possibly paginated list of Folders that are direct descendants of
   * the specified parent resource.
   *
   * @generated from field: repeated google.cloud.resourcemanager.v2.Folder folders = 1;
   */
  folders: Folder[];

  /**
   * A pagination token returned from a previous call to `ListFolders`
   * that indicates from where listing should continue.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.ListFoldersResponse.
 * Use `create(ListFoldersResponseSchema)` to create a new message.
 */
export const ListFoldersResponseSchema: GenMessage<ListFoldersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 2);

/**
 * The request message for searching folders.
 *
 * @generated from message google.cloud.resourcemanager.v2.SearchFoldersRequest
 */
export type SearchFoldersRequest = Message<"google.cloud.resourcemanager.v2.SearchFoldersRequest"> & {
  /**
   * Optional. The maximum number of folders to return in the response.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Optional. A pagination token returned from a previous call to `SearchFolders`
   * that indicates from where search should continue.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Search criteria used to select the Folders to return.
   * If no search criteria is specified then all accessible folders will be
   * returned.
   *
   * Query expressions can be used to restrict results based upon displayName,
   * lifecycleState and parent, where the operators `=`, `NOT`, `AND` and `OR`
   * can be used along with the suffix wildcard symbol `*`.
   *
   * The displayName field in a query expression should use escaped quotes
   * for values that include whitespace to prevent unexpected behavior.
   *
   * Some example queries are:
   *
   * * Query `displayName=Test*` returns Folder resources whose display name
   * starts with "Test".
   * * Query `lifecycleState=ACTIVE` returns Folder resources with
   * `lifecycleState` set to `ACTIVE`.
   * * Query `parent=folders/123` returns Folder resources that have
   * `folders/123` as a parent resource.
   * * Query `parent=folders/123 AND lifecycleState=ACTIVE` returns active
   * Folder resources that have `folders/123` as a parent resource.
   * * Query `displayName=\\"Test String\\"` returns Folder resources with
   * display names that include both "Test" and "String".
   *
   * @generated from field: string query = 3;
   */
  query: string;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.SearchFoldersRequest.
 * Use `create(SearchFoldersRequestSchema)` to create a new message.
 */
export const SearchFoldersRequestSchema: GenMessage<SearchFoldersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 3);

/**
 * The response message for searching folders.
 *
 * @generated from message google.cloud.resourcemanager.v2.SearchFoldersResponse
 */
export type SearchFoldersResponse = Message<"google.cloud.resourcemanager.v2.SearchFoldersResponse"> & {
  /**
   * A possibly paginated folder search results.
   * the specified parent resource.
   *
   * @generated from field: repeated google.cloud.resourcemanager.v2.Folder folders = 1;
   */
  folders: Folder[];

  /**
   * A pagination token returned from a previous call to `SearchFolders`
   * that indicates from where searching should continue.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.SearchFoldersResponse.
 * Use `create(SearchFoldersResponseSchema)` to create a new message.
 */
export const SearchFoldersResponseSchema: GenMessage<SearchFoldersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 4);

/**
 * The GetFolder request message.
 *
 * @generated from message google.cloud.resourcemanager.v2.GetFolderRequest
 */
export type GetFolderRequest = Message<"google.cloud.resourcemanager.v2.GetFolderRequest"> & {
  /**
   * Required. The resource name of the Folder to retrieve.
   * Must be of the form `folders/{folder_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.GetFolderRequest.
 * Use `create(GetFolderRequestSchema)` to create a new message.
 */
export const GetFolderRequestSchema: GenMessage<GetFolderRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 5);

/**
 * The CreateFolder request message.
 *
 * @generated from message google.cloud.resourcemanager.v2.CreateFolderRequest
 */
export type CreateFolderRequest = Message<"google.cloud.resourcemanager.v2.CreateFolderRequest"> & {
  /**
   * Required. The resource name of the new Folder's parent.
   * Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The Folder being created, only the display name will be consulted.
   * All other fields will be ignored.
   *
   * @generated from field: google.cloud.resourcemanager.v2.Folder folder = 2;
   */
  folder?: Folder;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.CreateFolderRequest.
 * Use `create(CreateFolderRequestSchema)` to create a new message.
 */
export const CreateFolderRequestSchema: GenMessage<CreateFolderRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 6);

/**
 * The MoveFolder request message.
 *
 * @generated from message google.cloud.resourcemanager.v2.MoveFolderRequest
 */
export type MoveFolderRequest = Message<"google.cloud.resourcemanager.v2.MoveFolderRequest"> & {
  /**
   * Required. The resource name of the Folder to move.
   * Must be of the form folders/{folder_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The resource name of the Folder or Organization to reparent
   * the folder under.
   * Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.
   *
   * @generated from field: string destination_parent = 2;
   */
  destinationParent: string;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.MoveFolderRequest.
 * Use `create(MoveFolderRequestSchema)` to create a new message.
 */
export const MoveFolderRequestSchema: GenMessage<MoveFolderRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 7);

/**
 * The request message for updating a folder's display name.
 *
 * @generated from message google.cloud.resourcemanager.v2.UpdateFolderRequest
 */
export type UpdateFolderRequest = Message<"google.cloud.resourcemanager.v2.UpdateFolderRequest"> & {
  /**
   * Required. The new definition of the Folder. It must include a
   * a `name` and `display_name` field. The other fields
   * will be ignored.
   *
   * @generated from field: google.cloud.resourcemanager.v2.Folder folder = 1;
   */
  folder?: Folder;

  /**
   * Required. Fields to be updated.
   * Only the `display_name` can be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.UpdateFolderRequest.
 * Use `create(UpdateFolderRequestSchema)` to create a new message.
 */
export const UpdateFolderRequestSchema: GenMessage<UpdateFolderRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 8);

/**
 * The DeleteFolder request message.
 *
 * @generated from message google.cloud.resourcemanager.v2.DeleteFolderRequest
 */
export type DeleteFolderRequest = Message<"google.cloud.resourcemanager.v2.DeleteFolderRequest"> & {
  /**
   * Required. The resource name of the Folder to be deleted.
   * Must be of the form `folders/{folder_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Instructs DeleteFolderAction to delete a folder even when the folder is not
   * empty.
   *
   * @generated from field: bool recursive_delete = 2;
   */
  recursiveDelete: boolean;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.DeleteFolderRequest.
 * Use `create(DeleteFolderRequestSchema)` to create a new message.
 */
export const DeleteFolderRequestSchema: GenMessage<DeleteFolderRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 9);

/**
 * The UndeleteFolder request message.
 *
 * @generated from message google.cloud.resourcemanager.v2.UndeleteFolderRequest
 */
export type UndeleteFolderRequest = Message<"google.cloud.resourcemanager.v2.UndeleteFolderRequest"> & {
  /**
   * Required. The resource name of the Folder to undelete.
   * Must be of the form `folders/{folder_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.UndeleteFolderRequest.
 * Use `create(UndeleteFolderRequestSchema)` to create a new message.
 */
export const UndeleteFolderRequestSchema: GenMessage<UndeleteFolderRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 10);

/**
 * Metadata describing a long running folder operation
 *
 * @generated from message google.cloud.resourcemanager.v2.FolderOperation
 */
export type FolderOperation = Message<"google.cloud.resourcemanager.v2.FolderOperation"> & {
  /**
   * The display name of the folder.
   *
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * The type of this operation.
   *
   * @generated from field: google.cloud.resourcemanager.v2.FolderOperation.OperationType operation_type = 2;
   */
  operationType: FolderOperation_OperationType;

  /**
   * The resource name of the folder's parent.
   * Only applicable when the operation_type is MOVE.
   *
   * @generated from field: string source_parent = 3;
   */
  sourceParent: string;

  /**
   * The resource name of the folder or organization we are either creating
   * the folder under or moving the folder to.
   *
   * @generated from field: string destination_parent = 4;
   */
  destinationParent: string;
};

/**
 * Describes the message google.cloud.resourcemanager.v2.FolderOperation.
 * Use `create(FolderOperationSchema)` to create a new message.
 */
export const FolderOperationSchema: GenMessage<FolderOperation> = /*@__PURE__*/
  messageDesc(file_google_cloud_resourcemanager_v2_folders, 11);

/**
 * The type of operation that failed.
 *
 * @generated from enum google.cloud.resourcemanager.v2.FolderOperation.OperationType
 */
export enum FolderOperation_OperationType {
  /**
   * Operation type not specified.
   *
   * @generated from enum value: OPERATION_TYPE_UNSPECIFIED = 0;
   */
  OPERATION_TYPE_UNSPECIFIED = 0,

  /**
   * A create folder operation.
   *
   * @generated from enum value: CREATE = 1;
   */
  CREATE = 1,

  /**
   * A move folder operation.
   *
   * @generated from enum value: MOVE = 2;
   */
  MOVE = 2,
}

/**
 * Describes the enum google.cloud.resourcemanager.v2.FolderOperation.OperationType.
 */
export const FolderOperation_OperationTypeSchema: GenEnum<FolderOperation_OperationType> = /*@__PURE__*/
  enumDesc(file_google_cloud_resourcemanager_v2_folders, 11, 0);

/**
 * Manages Cloud Resource Folders.
 * Cloud Resource Folders can be used to organize the resources under an
 * organization and to control the IAM policies applied to groups of resources.
 *
 * @generated from service google.cloud.resourcemanager.v2.Folders
 */
export const Folders: GenService<{
  /**
   * Lists the Folders that are direct descendants of supplied parent resource.
   * List provides a strongly consistent view of the Folders underneath
   * the specified parent resource.
   * List returns Folders sorted based upon the (ascending) lexical ordering
   * of their display_name.
   * The caller must have `resourcemanager.folders.list` permission on the
   * identified parent.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.ListFolders
   */
  listFolders: {
    methodKind: "unary";
    input: typeof ListFoldersRequestSchema;
    output: typeof ListFoldersResponseSchema;
  },
  /**
   * Search for folders that match specific filter criteria.
   * Search provides an eventually consistent view of the folders a user has
   * access to which meet the specified filter criteria.
   *
   * This will only return folders on which the caller has the
   * permission `resourcemanager.folders.get`.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.SearchFolders
   */
  searchFolders: {
    methodKind: "unary";
    input: typeof SearchFoldersRequestSchema;
    output: typeof SearchFoldersResponseSchema;
  },
  /**
   * Retrieves a Folder identified by the supplied resource name.
   * Valid Folder resource names have the format `folders/{folder_id}`
   * (for example, `folders/1234`).
   * The caller must have `resourcemanager.folders.get` permission on the
   * identified folder.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.GetFolder
   */
  getFolder: {
    methodKind: "unary";
    input: typeof GetFolderRequestSchema;
    output: typeof FolderSchema;
  },
  /**
   * Creates a Folder in the resource hierarchy.
   * Returns an Operation which can be used to track the progress of the
   * folder creation workflow.
   * Upon success the Operation.response field will be populated with the
   * created Folder.
   *
   * In order to succeed, the addition of this new Folder must not violate
   * the Folder naming, height or fanout constraints.
   *
   * + The Folder's display_name must be distinct from all other Folder's that
   * share its parent.
   * + The addition of the Folder must not cause the active Folder hierarchy
   * to exceed a height of 4. Note, the full active + deleted Folder hierarchy
   * is allowed to reach a height of 8; this provides additional headroom when
   * moving folders that contain deleted folders.
   * + The addition of the Folder must not cause the total number of Folders
   * under its parent to exceed 100.
   *
   * If the operation fails due to a folder constraint violation, some errors
   * may be returned by the CreateFolder request, with status code
   * FAILED_PRECONDITION and an error description. Other folder constraint
   * violations will be communicated in the Operation, with the specific
   * PreconditionFailure returned via the details list in the Operation.error
   * field.
   *
   * The caller must have `resourcemanager.folders.create` permission on the
   * identified parent.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.CreateFolder
   */
  createFolder: {
    methodKind: "unary";
    input: typeof CreateFolderRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a Folder, changing its display_name.
   * Changes to the folder display_name will be rejected if they violate either
   * the display_name formatting rules or naming constraints described in
   * the [CreateFolder][google.cloud.resourcemanager.v2.Folders.CreateFolder] documentation.
   *
   * The Folder's display name must start and end with a letter or digit,
   * may contain letters, digits, spaces, hyphens and underscores and can be
   * no longer than 30 characters. This is captured by the regular expression:
   * [\p{L}\p{N}]([\p{L}\p{N}_- ]{0,28}[\p{L}\p{N}])?.
   * The caller must have `resourcemanager.folders.update` permission on the
   * identified folder.
   *
   * If the update fails due to the unique name constraint then a
   * PreconditionFailure explaining this violation will be returned
   * in the Status.details field.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.UpdateFolder
   */
  updateFolder: {
    methodKind: "unary";
    input: typeof UpdateFolderRequestSchema;
    output: typeof FolderSchema;
  },
  /**
   * Moves a Folder under a new resource parent.
   * Returns an Operation which can be used to track the progress of the
   * folder move workflow.
   * Upon success the Operation.response field will be populated with the
   * moved Folder.
   * Upon failure, a FolderOperationError categorizing the failure cause will
   * be returned - if the failure occurs synchronously then the
   * FolderOperationError will be returned via the Status.details field
   * and if it occurs asynchronously then the FolderOperation will be returned
   * via the Operation.error field.
   * In addition, the Operation.metadata field will be populated with a
   * FolderOperation message as an aid to stateless clients.
   * Folder moves will be rejected if they violate either the naming, height
   * or fanout constraints described in the
   * [CreateFolder][google.cloud.resourcemanager.v2.Folders.CreateFolder] documentation.
   * The caller must have `resourcemanager.folders.move` permission on the
   * folder's current and proposed new parent.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.MoveFolder
   */
  moveFolder: {
    methodKind: "unary";
    input: typeof MoveFolderRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Requests deletion of a Folder. The Folder is moved into the
   * [DELETE_REQUESTED][google.cloud.resourcemanager.v2.Folder.LifecycleState.DELETE_REQUESTED] state
   * immediately, and is deleted approximately 30 days later. This method may
   * only be called on an empty Folder in the
   * [ACTIVE][google.cloud.resourcemanager.v2.Folder.LifecycleState.ACTIVE] state, where a Folder is empty if
   * it doesn't contain any Folders or Projects in the
   * [ACTIVE][google.cloud.resourcemanager.v2.Folder.LifecycleState.ACTIVE] state.
   * The caller must have `resourcemanager.folders.delete` permission on the
   * identified folder.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.DeleteFolder
   */
  deleteFolder: {
    methodKind: "unary";
    input: typeof DeleteFolderRequestSchema;
    output: typeof FolderSchema;
  },
  /**
   * Cancels the deletion request for a Folder. This method may only be
   * called on a Folder in the
   * [DELETE_REQUESTED][google.cloud.resourcemanager.v2.Folder.LifecycleState.DELETE_REQUESTED] state.
   * In order to succeed, the Folder's parent must be in the
   * [ACTIVE][google.cloud.resourcemanager.v2.Folder.LifecycleState.ACTIVE] state.
   * In addition, reintroducing the folder into the tree must not violate
   * folder naming, height and fanout constraints described in the
   * [CreateFolder][google.cloud.resourcemanager.v2.Folders.CreateFolder] documentation.
   * The caller must have `resourcemanager.folders.undelete` permission on the
   * identified folder.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.UndeleteFolder
   */
  undeleteFolder: {
    methodKind: "unary";
    input: typeof UndeleteFolderRequestSchema;
    output: typeof FolderSchema;
  },
  /**
   * Gets the access control policy for a Folder. The returned policy may be
   * empty if no such policy or resource exists. The `resource` field should
   * be the Folder's resource name, e.g. "folders/1234".
   * The caller must have `resourcemanager.folders.getIamPolicy` permission
   * on the identified folder.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Sets the access control policy on a Folder, replacing any existing policy.
   * The `resource` field should be the Folder's resource name, e.g.
   * "folders/1234".
   * The caller must have `resourcemanager.folders.setIamPolicy` permission
   * on the identified folder.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Returns permissions that a caller has on the specified Folder.
   * The `resource` field should be the Folder's resource name,
   * e.g. "folders/1234".
   *
   * There are no permissions required for making this API call.
   *
   * @generated from rpc google.cloud.resourcemanager.v2.Folders.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_resourcemanager_v2_folders, 0);

