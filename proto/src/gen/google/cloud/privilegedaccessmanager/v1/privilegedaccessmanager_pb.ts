// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/privilegedaccessmanager/v1/privilegedaccessmanager.proto (package google.cloud.privilegedaccessmanager.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Duration, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/privilegedaccessmanager/v1/privilegedaccessmanager.proto.
 */
export const file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * Request message for `CheckOnboardingStatus` method.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusRequest
 */
export type CheckOnboardingStatusRequest = Message<"google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusRequest"> & {
  /**
   * Required. The resource for which the onboarding status should be checked.
   * Should be in one of the following formats:
   *
   * * `projects/{project-number|project-id}/locations/{region}`
   * * `folders/{folder-number}/locations/{region}`
   * * `organizations/{organization-number}/locations/{region}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusRequest.
 * Use `create(CheckOnboardingStatusRequestSchema)` to create a new message.
 */
export const CheckOnboardingStatusRequestSchema: GenMessage<CheckOnboardingStatusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 0);

/**
 * Response message for `CheckOnboardingStatus` method.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse
 */
export type CheckOnboardingStatusResponse = Message<"google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse"> & {
  /**
   * The service account that PAM uses to act on this resource.
   *
   * @generated from field: string service_account = 1;
   */
  serviceAccount: string;

  /**
   * List of issues that are preventing PAM from functioning for this resource
   * and need to be fixed to complete onboarding. Some issues might not be
   * detected or reported.
   *
   * @generated from field: repeated google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse.Finding findings = 2;
   */
  findings: CheckOnboardingStatusResponse_Finding[];
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse.
 * Use `create(CheckOnboardingStatusResponseSchema)` to create a new message.
 */
export const CheckOnboardingStatusResponseSchema: GenMessage<CheckOnboardingStatusResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 1);

/**
 * Finding represents an issue which prevents PAM from functioning properly
 * for this resource.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse.Finding
 */
export type CheckOnboardingStatusResponse_Finding = Message<"google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse.Finding"> & {
  /**
   * @generated from oneof google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse.Finding.finding_type
   */
  findingType: {
    /**
     * PAM's service account is being denied access by Cloud IAM.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse.Finding.IAMAccessDenied iam_access_denied = 1;
     */
    value: CheckOnboardingStatusResponse_Finding_IAMAccessDenied;
    case: "iamAccessDenied";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse.Finding.
 * Use `create(CheckOnboardingStatusResponse_FindingSchema)` to create a new message.
 */
export const CheckOnboardingStatusResponse_FindingSchema: GenMessage<CheckOnboardingStatusResponse_Finding> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 1, 0);

/**
 * PAM's service account is being denied access by Cloud IAM.
 * This can be fixed by granting a role that contains the missing
 * permissions to the service account or exempting it from deny policies if
 * they are blocking the access.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse.Finding.IAMAccessDenied
 */
export type CheckOnboardingStatusResponse_Finding_IAMAccessDenied = Message<"google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse.Finding.IAMAccessDenied"> & {
  /**
   * List of permissions that are being denied.
   *
   * @generated from field: repeated string missing_permissions = 1;
   */
  missingPermissions: string[];
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.CheckOnboardingStatusResponse.Finding.IAMAccessDenied.
 * Use `create(CheckOnboardingStatusResponse_Finding_IAMAccessDeniedSchema)` to create a new message.
 */
export const CheckOnboardingStatusResponse_Finding_IAMAccessDeniedSchema: GenMessage<CheckOnboardingStatusResponse_Finding_IAMAccessDenied> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 1, 0, 0);

/**
 * An entitlement defines the eligibility of a set of users to obtain
 * predefined access for some time possibly after going through an approval
 * workflow.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Entitlement
 */
export type Entitlement = Message<"google.cloud.privilegedaccessmanager.v1.Entitlement"> & {
  /**
   * Identifier. Name of the entitlement.
   * Possible formats:
   *
   * * `organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id}`
   * * `folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}`
   * * `projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Create time stamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. Update time stamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Who can create grants using this entitlement. This list should
   * contain at most one entry.
   *
   * @generated from field: repeated google.cloud.privilegedaccessmanager.v1.AccessControlEntry eligible_users = 5;
   */
  eligibleUsers: AccessControlEntry[];

  /**
   * Optional. The approvals needed before access are granted to a requester. No
   * approvals are needed if this field is null.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.ApprovalWorkflow approval_workflow = 6;
   */
  approvalWorkflow?: ApprovalWorkflow;

  /**
   * The access granted to a requester on successful approval.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.PrivilegedAccess privileged_access = 7;
   */
  privilegedAccess?: PrivilegedAccess;

  /**
   * Required. The maximum amount of time that access is granted for a request.
   * A requester can ask for a duration less than this, but never more.
   *
   * @generated from field: google.protobuf.Duration max_request_duration = 8;
   */
  maxRequestDuration?: Duration;

  /**
   * Output only. Current state of this entitlement.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.Entitlement.State state = 9;
   */
  state: Entitlement_State;

  /**
   * Required. The manner in which the requester should provide a justification
   * for requesting access.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig requester_justification_config = 10;
   */
  requesterJustificationConfig?: Entitlement_RequesterJustificationConfig;

  /**
   * Optional. Additional email addresses to be notified based on actions taken.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.Entitlement.AdditionalNotificationTargets additional_notification_targets = 11;
   */
  additionalNotificationTargets?: Entitlement_AdditionalNotificationTargets;

  /**
   * An `etag` is used for optimistic concurrency control as a way to prevent
   * simultaneous updates to the same entitlement. An `etag` is returned in the
   * response to `GetEntitlement` and the caller should put the `etag` in the
   * request to `UpdateEntitlement` so that their change is applied on
   * the same version. If this field is omitted or if there is a mismatch while
   * updating an entitlement, then the server rejects the request.
   *
   * @generated from field: string etag = 12;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Entitlement.
 * Use `create(EntitlementSchema)` to create a new message.
 */
export const EntitlementSchema: GenMessage<Entitlement> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 2);

/**
 * Defines how a requester must provide a justification when requesting
 * access.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig
 */
export type Entitlement_RequesterJustificationConfig = Message<"google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig"> & {
  /**
   * This is a required field and the user must explicitly opt out if a
   * justification from the requester isn't mandatory.
   *
   * @generated from oneof google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig.justification_type
   */
  justificationType: {
    /**
     * This option means the requester isn't required to provide a
     * justification.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig.NotMandatory not_mandatory = 1;
     */
    value: Entitlement_RequesterJustificationConfig_NotMandatory;
    case: "notMandatory";
  } | {
    /**
     * This option means the requester must provide a string as
     * justification. If this is selected, the server allows the requester
     * to provide a justification but doesn't validate it.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig.Unstructured unstructured = 2;
     */
    value: Entitlement_RequesterJustificationConfig_Unstructured;
    case: "unstructured";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig.
 * Use `create(Entitlement_RequesterJustificationConfigSchema)` to create a new message.
 */
export const Entitlement_RequesterJustificationConfigSchema: GenMessage<Entitlement_RequesterJustificationConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 2, 0);

/**
 * The justification is not mandatory but can be provided in any of the
 * supported formats.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig.NotMandatory
 */
export type Entitlement_RequesterJustificationConfig_NotMandatory = Message<"google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig.NotMandatory"> & {
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig.NotMandatory.
 * Use `create(Entitlement_RequesterJustificationConfig_NotMandatorySchema)` to create a new message.
 */
export const Entitlement_RequesterJustificationConfig_NotMandatorySchema: GenMessage<Entitlement_RequesterJustificationConfig_NotMandatory> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 2, 0, 0);

/**
 * The requester has to provide a justification in the form of a string.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig.Unstructured
 */
export type Entitlement_RequesterJustificationConfig_Unstructured = Message<"google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig.Unstructured"> & {
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig.Unstructured.
 * Use `create(Entitlement_RequesterJustificationConfig_UnstructuredSchema)` to create a new message.
 */
export const Entitlement_RequesterJustificationConfig_UnstructuredSchema: GenMessage<Entitlement_RequesterJustificationConfig_Unstructured> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 2, 0, 1);

/**
 * AdditionalNotificationTargets includes email addresses to be notified.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Entitlement.AdditionalNotificationTargets
 */
export type Entitlement_AdditionalNotificationTargets = Message<"google.cloud.privilegedaccessmanager.v1.Entitlement.AdditionalNotificationTargets"> & {
  /**
   * Optional. Additional email addresses to be notified when a principal
   * (requester) is granted access.
   *
   * @generated from field: repeated string admin_email_recipients = 1;
   */
  adminEmailRecipients: string[];

  /**
   * Optional. Additional email address to be notified about an eligible
   * entitlement.
   *
   * @generated from field: repeated string requester_email_recipients = 2;
   */
  requesterEmailRecipients: string[];
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Entitlement.AdditionalNotificationTargets.
 * Use `create(Entitlement_AdditionalNotificationTargetsSchema)` to create a new message.
 */
export const Entitlement_AdditionalNotificationTargetsSchema: GenMessage<Entitlement_AdditionalNotificationTargets> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 2, 1);

/**
 * Different states an entitlement can be in.
 *
 * @generated from enum google.cloud.privilegedaccessmanager.v1.Entitlement.State
 */
export enum Entitlement_State {
  /**
   * Unspecified state. This value is never returned by the server.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The entitlement is being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The entitlement is available for requesting access.
   *
   * @generated from enum value: AVAILABLE = 2;
   */
  AVAILABLE = 2,

  /**
   * The entitlement is being deleted.
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,

  /**
   * The entitlement has been deleted.
   *
   * @generated from enum value: DELETED = 4;
   */
  DELETED = 4,

  /**
   * The entitlement is being updated.
   *
   * @generated from enum value: UPDATING = 5;
   */
  UPDATING = 5,
}

/**
 * Describes the enum google.cloud.privilegedaccessmanager.v1.Entitlement.State.
 */
export const Entitlement_StateSchema: GenEnum<Entitlement_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 2, 0);

/**
 * AccessControlEntry is used to control who can do some operation.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.AccessControlEntry
 */
export type AccessControlEntry = Message<"google.cloud.privilegedaccessmanager.v1.AccessControlEntry"> & {
  /**
   * Optional. Users who are allowed for the operation. Each entry should be a
   * valid v1 IAM principal identifier. The format for these is documented at:
   * https://cloud.google.com/iam/docs/principal-identifiers#v1
   *
   * @generated from field: repeated string principals = 1;
   */
  principals: string[];
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.AccessControlEntry.
 * Use `create(AccessControlEntrySchema)` to create a new message.
 */
export const AccessControlEntrySchema: GenMessage<AccessControlEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 3);

/**
 * Different types of approval workflows that can be used to gate privileged
 * access granting.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.ApprovalWorkflow
 */
export type ApprovalWorkflow = Message<"google.cloud.privilegedaccessmanager.v1.ApprovalWorkflow"> & {
  /**
   * @generated from oneof google.cloud.privilegedaccessmanager.v1.ApprovalWorkflow.approval_workflow
   */
  approvalWorkflow: {
    /**
     * An approval workflow where users designated as approvers review and act
     * on the grants.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.ManualApprovals manual_approvals = 1;
     */
    value: ManualApprovals;
    case: "manualApprovals";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.ApprovalWorkflow.
 * Use `create(ApprovalWorkflowSchema)` to create a new message.
 */
export const ApprovalWorkflowSchema: GenMessage<ApprovalWorkflow> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 4);

/**
 * A manual approval workflow where users who are designated as approvers
 * need to call the `ApproveGrant`/`DenyGrant` APIs for a grant. The workflow
 * can consist of multiple serial steps where each step defines who can act as
 * approver in that step and how many of those users should approve before the
 * workflow moves to the next step.
 *
 * This can be used to create approval workflows such as:
 *
 * * Require an approval from any user in a group G.
 * * Require an approval from any k number of users from a Group G.
 * * Require an approval from any user in a group G and then from a user U.
 *
 * A single user might be part of the `approvers` ACL for multiple steps in this
 * workflow, but they can only approve once and that approval is only considered
 * to satisfy the approval step at which it was granted.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.ManualApprovals
 */
export type ManualApprovals = Message<"google.cloud.privilegedaccessmanager.v1.ManualApprovals"> & {
  /**
   * Optional. Do the approvers need to provide a justification for their
   * actions?
   *
   * @generated from field: bool require_approver_justification = 1;
   */
  requireApproverJustification: boolean;

  /**
   * Optional. List of approval steps in this workflow. These steps are followed
   * in the specified order sequentially. Only 1 step is supported.
   *
   * @generated from field: repeated google.cloud.privilegedaccessmanager.v1.ManualApprovals.Step steps = 2;
   */
  steps: ManualApprovals_Step[];
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.ManualApprovals.
 * Use `create(ManualApprovalsSchema)` to create a new message.
 */
export const ManualApprovalsSchema: GenMessage<ManualApprovals> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 5);

/**
 * Step represents a logical step in a manual approval workflow.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.ManualApprovals.Step
 */
export type ManualApprovals_Step = Message<"google.cloud.privilegedaccessmanager.v1.ManualApprovals.Step"> & {
  /**
   * Optional. The potential set of approvers in this step. This list must
   * contain at most one entry.
   *
   * @generated from field: repeated google.cloud.privilegedaccessmanager.v1.AccessControlEntry approvers = 1;
   */
  approvers: AccessControlEntry[];

  /**
   * Required. How many users from the above list need to approve. If there
   * aren't enough distinct users in the list, then the workflow indefinitely
   * blocks. Should always be greater than 0. 1 is the only supported value.
   *
   * @generated from field: int32 approvals_needed = 2;
   */
  approvalsNeeded: number;

  /**
   * Optional. Additional email addresses to be notified when a grant is
   * pending approval.
   *
   * @generated from field: repeated string approver_email_recipients = 3;
   */
  approverEmailRecipients: string[];
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.ManualApprovals.Step.
 * Use `create(ManualApprovals_StepSchema)` to create a new message.
 */
export const ManualApprovals_StepSchema: GenMessage<ManualApprovals_Step> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 5, 0);

/**
 * Privileged access that this service can be used to gate.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.PrivilegedAccess
 */
export type PrivilegedAccess = Message<"google.cloud.privilegedaccessmanager.v1.PrivilegedAccess"> & {
  /**
   * @generated from oneof google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.access_type
   */
  accessType: {
    /**
     * Access to a Google Cloud resource through IAM.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess gcp_iam_access = 1;
     */
    value: PrivilegedAccess_GcpIamAccess;
    case: "gcpIamAccess";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.
 * Use `create(PrivilegedAccessSchema)` to create a new message.
 */
export const PrivilegedAccessSchema: GenMessage<PrivilegedAccess> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 6);

/**
 * GcpIamAccess represents IAM based access control on a Google Cloud
 * resource. Refer to https://cloud.google.com/iam/docs to understand more
 * about IAM.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess
 */
export type PrivilegedAccess_GcpIamAccess = Message<"google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess"> & {
  /**
   * Required. The type of this resource.
   *
   * @generated from field: string resource_type = 1;
   */
  resourceType: string;

  /**
   * Required. Name of the resource.
   *
   * @generated from field: string resource = 2;
   */
  resource: string;

  /**
   * Required. Role bindings that are created on successful grant.
   *
   * @generated from field: repeated google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.RoleBinding role_bindings = 4;
   */
  roleBindings: PrivilegedAccess_GcpIamAccess_RoleBinding[];
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.
 * Use `create(PrivilegedAccess_GcpIamAccessSchema)` to create a new message.
 */
export const PrivilegedAccess_GcpIamAccessSchema: GenMessage<PrivilegedAccess_GcpIamAccess> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 6, 0);

/**
 * IAM Role bindings that are created after a successful grant.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.RoleBinding
 */
export type PrivilegedAccess_GcpIamAccess_RoleBinding = Message<"google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.RoleBinding"> & {
  /**
   * Required. IAM role to be granted.
   * https://cloud.google.com/iam/docs/roles-overview.
   *
   * @generated from field: string role = 1;
   */
  role: string;

  /**
   * Optional. The expression field of the IAM condition to be associated
   * with the role. If specified, a user with an active grant for this
   * entitlement is able to access the resource only if this condition
   * evaluates to true for their request.
   *
   * This field uses the same CEL format as IAM and supports all attributes
   * that IAM supports, except tags.
   * https://cloud.google.com/iam/docs/conditions-overview#attributes.
   *
   * @generated from field: string condition_expression = 2;
   */
  conditionExpression: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.RoleBinding.
 * Use `create(PrivilegedAccess_GcpIamAccess_RoleBindingSchema)` to create a new message.
 */
export const PrivilegedAccess_GcpIamAccess_RoleBindingSchema: GenMessage<PrivilegedAccess_GcpIamAccess_RoleBinding> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 6, 0, 0);

/**
 * Message for requesting list of entitlements.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.ListEntitlementsRequest
 */
export type ListEntitlementsRequest = Message<"google.cloud.privilegedaccessmanager.v1.ListEntitlementsRequest"> & {
  /**
   * Required. The parent which owns the entitlement resources.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Requested page size. Server may return fewer items than
   * requested. If unspecified, the server picks an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filtering results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Hint for how to order the results.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.ListEntitlementsRequest.
 * Use `create(ListEntitlementsRequestSchema)` to create a new message.
 */
export const ListEntitlementsRequestSchema: GenMessage<ListEntitlementsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 7);

/**
 * Message for response to listing entitlements.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.ListEntitlementsResponse
 */
export type ListEntitlementsResponse = Message<"google.cloud.privilegedaccessmanager.v1.ListEntitlementsResponse"> & {
  /**
   * The list of entitlements.
   *
   * @generated from field: repeated google.cloud.privilegedaccessmanager.v1.Entitlement entitlements = 1;
   */
  entitlements: Entitlement[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.ListEntitlementsResponse.
 * Use `create(ListEntitlementsResponseSchema)` to create a new message.
 */
export const ListEntitlementsResponseSchema: GenMessage<ListEntitlementsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 8);

/**
 * Request message for `SearchEntitlements` method.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.SearchEntitlementsRequest
 */
export type SearchEntitlementsRequest = Message<"google.cloud.privilegedaccessmanager.v1.SearchEntitlementsRequest"> & {
  /**
   * Required. The parent which owns the entitlement resources.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Only entitlements where the calling user has this access are
   * returned.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.SearchEntitlementsRequest.CallerAccessType caller_access_type = 2;
   */
  callerAccessType: SearchEntitlementsRequest_CallerAccessType;

  /**
   * Optional. Only entitlements matching this filter are returned in the
   * response.
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * Optional. Requested page size. The server may return fewer items than
   * requested. If unspecified, the server picks an appropriate default.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.SearchEntitlementsRequest.
 * Use `create(SearchEntitlementsRequestSchema)` to create a new message.
 */
export const SearchEntitlementsRequestSchema: GenMessage<SearchEntitlementsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 9);

/**
 * Different types of access a user can have on the entitlement resource.
 *
 * @generated from enum google.cloud.privilegedaccessmanager.v1.SearchEntitlementsRequest.CallerAccessType
 */
export enum SearchEntitlementsRequest_CallerAccessType {
  /**
   * Unspecified access type.
   *
   * @generated from enum value: CALLER_ACCESS_TYPE_UNSPECIFIED = 0;
   */
  CALLER_ACCESS_TYPE_UNSPECIFIED = 0,

  /**
   * The user has access to create grants using this entitlement.
   *
   * @generated from enum value: GRANT_REQUESTER = 1;
   */
  GRANT_REQUESTER = 1,

  /**
   * The user has access to approve/deny grants created under this
   * entitlement.
   *
   * @generated from enum value: GRANT_APPROVER = 2;
   */
  GRANT_APPROVER = 2,
}

/**
 * Describes the enum google.cloud.privilegedaccessmanager.v1.SearchEntitlementsRequest.CallerAccessType.
 */
export const SearchEntitlementsRequest_CallerAccessTypeSchema: GenEnum<SearchEntitlementsRequest_CallerAccessType> = /*@__PURE__*/
  enumDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 9, 0);

/**
 * Response message for `SearchEntitlements` method.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.SearchEntitlementsResponse
 */
export type SearchEntitlementsResponse = Message<"google.cloud.privilegedaccessmanager.v1.SearchEntitlementsResponse"> & {
  /**
   * The list of entitlements.
   *
   * @generated from field: repeated google.cloud.privilegedaccessmanager.v1.Entitlement entitlements = 1;
   */
  entitlements: Entitlement[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.SearchEntitlementsResponse.
 * Use `create(SearchEntitlementsResponseSchema)` to create a new message.
 */
export const SearchEntitlementsResponseSchema: GenMessage<SearchEntitlementsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 10);

/**
 * Message for getting an entitlement.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.GetEntitlementRequest
 */
export type GetEntitlementRequest = Message<"google.cloud.privilegedaccessmanager.v1.GetEntitlementRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.GetEntitlementRequest.
 * Use `create(GetEntitlementRequestSchema)` to create a new message.
 */
export const GetEntitlementRequestSchema: GenMessage<GetEntitlementRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 11);

/**
 * Message for creating an entitlement.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.CreateEntitlementRequest
 */
export type CreateEntitlementRequest = Message<"google.cloud.privilegedaccessmanager.v1.CreateEntitlementRequest"> & {
  /**
   * Required. Name of the parent resource for the entitlement.
   * Possible formats:
   *
   * * `organizations/{organization-number}/locations/{region}`
   * * `folders/{folder-number}/locations/{region}`
   * * `projects/{project-id|project-number}/locations/{region}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID to use for this entitlement. This becomes the last part of
   * the resource name.
   *
   * This value should be 4-63 characters in length, and valid characters are
   * "[a-z]", "[0-9]", and "-". The first character should be from [a-z].
   *
   * This value should be unique among all other entitlements under the
   * specified `parent`.
   *
   * @generated from field: string entitlement_id = 2;
   */
  entitlementId: string;

  /**
   * Required. The resource being created
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.Entitlement entitlement = 3;
   */
  entitlement?: Entitlement;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server knows to
   * ignore the request if it has already been completed. The server guarantees
   * this for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, ignores the second request and returns the
   * previous operation's response. This prevents clients from accidentally
   * creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.CreateEntitlementRequest.
 * Use `create(CreateEntitlementRequestSchema)` to create a new message.
 */
export const CreateEntitlementRequestSchema: GenMessage<CreateEntitlementRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 12);

/**
 * Message for deleting an entitlement.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.DeleteEntitlementRequest
 */
export type DeleteEntitlementRequest = Message<"google.cloud.privilegedaccessmanager.v1.DeleteEntitlementRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server knows to
   * ignore the request if it has already been completed. The server guarantees
   * this for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, ignores the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Optional. If set to true, any child grant under this entitlement is also
   * deleted. (Otherwise, the request only works if the entitlement has no child
   * grant.)
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.DeleteEntitlementRequest.
 * Use `create(DeleteEntitlementRequestSchema)` to create a new message.
 */
export const DeleteEntitlementRequestSchema: GenMessage<DeleteEntitlementRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 13);

/**
 * Message for updating an entitlement.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.UpdateEntitlementRequest
 */
export type UpdateEntitlementRequest = Message<"google.cloud.privilegedaccessmanager.v1.UpdateEntitlementRequest"> & {
  /**
   * Required. The entitlement resource that is updated.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.Entitlement entitlement = 1;
   */
  entitlement?: Entitlement;

  /**
   * Required. The list of fields to update. A field is overwritten if, and only
   * if, it is in the mask. Any immutable fields set in the mask are ignored by
   * the server. Repeated fields and map fields are only allowed in the last
   * position of a `paths` string and overwrite the existing values. Hence an
   * update to a repeated field or a map should contain the entire list of
   * values. The fields specified in the update_mask are relative to the
   * resource and not to the request.
   * (e.g. `MaxRequestDuration`; *not* `entitlement.MaxRequestDuration`)
   * A value of '*' for this field refers to full replacement of the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.UpdateEntitlementRequest.
 * Use `create(UpdateEntitlementRequestSchema)` to create a new message.
 */
export const UpdateEntitlementRequestSchema: GenMessage<UpdateEntitlementRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 14);

/**
 * This is to ensure that the `Grants` and `ProducerGrants` proto are byte
 * compatible.
 * A grant represents a request from a user for obtaining the access specified
 * in an entitlement they are eligible for.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant
 */
export type Grant = Message<"google.cloud.privilegedaccessmanager.v1.Grant"> & {
  /**
   * Identifier. Name of this grant.
   * Possible formats:
   *
   * * `organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id}/grants/{grant-id}`
   * * `folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}/grants/{grant-id}`
   * * `projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}/grants/{grant-id}`
   *
   * The last segment of this name (`{grant-id}`) is autogenerated.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Create time stamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. Update time stamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Output only. Username of the user who created this grant.
   *
   * @generated from field: string requester = 4;
   */
  requester: string;

  /**
   * Required. The amount of time access is needed for. This value should be
   * less than the `max_request_duration` value of the entitlement.
   *
   * @generated from field: google.protobuf.Duration requested_duration = 5;
   */
  requestedDuration?: Duration;

  /**
   * Optional. Justification of why this access is needed.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.Justification justification = 6;
   */
  justification?: Justification;

  /**
   * Output only. Current state of this grant.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.State state = 7;
   */
  state: Grant_State;

  /**
   * Output only. Timeline of this grant.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline timeline = 8;
   */
  timeline?: Grant_Timeline;

  /**
   * Output only. The access that would be granted by this grant.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.PrivilegedAccess privileged_access = 9;
   */
  privilegedAccess?: PrivilegedAccess;

  /**
   * Output only. Audit trail of access provided by this grant. If unspecified
   * then access was never granted.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.AuditTrail audit_trail = 10;
   */
  auditTrail?: Grant_AuditTrail;

  /**
   * Optional. Additional email addresses to notify for all the actions
   * performed on the grant.
   *
   * @generated from field: repeated string additional_email_recipients = 11;
   */
  additionalEmailRecipients: string[];

  /**
   * Output only. Flag set by the PAM system to indicate that policy bindings
   * made by this grant have been modified from outside PAM.
   *
   * After it is set, this flag remains set forever irrespective of the grant
   * state. A `true` value here indicates that PAM no longer has any certainty
   * on the access a user has because of this grant.
   *
   * @generated from field: bool externally_modified = 12;
   */
  externallyModified: boolean;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.
 * Use `create(GrantSchema)` to create a new message.
 */
export const GrantSchema: GenMessage<Grant> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15);

/**
 * Timeline of a grant describing what happened to it and when.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline
 */
export type Grant_Timeline = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline"> & {
  /**
   * Output only. The events that have occurred on this grant. This list
   * contains entries in the same order as they occurred. The first entry is
   * always be of type `Requested` and there is always at least one entry in
   * this array.
   *
   * @generated from field: repeated google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event events = 1;
   */
  events: Grant_Timeline_Event[];
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.
 * Use `create(Grant_TimelineSchema)` to create a new message.
 */
export const Grant_TimelineSchema: GenMessage<Grant_Timeline> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0);

/**
 * A single operation on the grant.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event
 */
export type Grant_Timeline_Event = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event"> & {
  /**
   * @generated from oneof google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.event
   */
  event: {
    /**
     * The grant was requested.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Requested requested = 2;
     */
    value: Grant_Timeline_Event_Requested;
    case: "requested";
  } | {
    /**
     * The grant was approved.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Approved approved = 3;
     */
    value: Grant_Timeline_Event_Approved;
    case: "approved";
  } | {
    /**
     * The grant was denied.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Denied denied = 4;
     */
    value: Grant_Timeline_Event_Denied;
    case: "denied";
  } | {
    /**
     * The grant was revoked.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Revoked revoked = 5;
     */
    value: Grant_Timeline_Event_Revoked;
    case: "revoked";
  } | {
    /**
     * The grant has been scheduled to give access.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Scheduled scheduled = 6;
     */
    value: Grant_Timeline_Event_Scheduled;
    case: "scheduled";
  } | {
    /**
     * The grant was successfully activated to give access.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Activated activated = 7;
     */
    value: Grant_Timeline_Event_Activated;
    case: "activated";
  } | {
    /**
     * There was a non-retriable error while trying to give access.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ActivationFailed activation_failed = 8;
     */
    value: Grant_Timeline_Event_ActivationFailed;
    case: "activationFailed";
  } | {
    /**
     * The approval workflow did not complete in the necessary duration,
     * and so the grant is expired.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Expired expired = 10;
     */
    value: Grant_Timeline_Event_Expired;
    case: "expired";
  } | {
    /**
     * Access given by the grant ended automatically as the approved
     * duration was over.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Ended ended = 11;
     */
    value: Grant_Timeline_Event_Ended;
    case: "ended";
  } | {
    /**
     * The policy bindings made by grant have been modified outside of PAM.
     *
     * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ExternallyModified externally_modified = 12;
     */
    value: Grant_Timeline_Event_ExternallyModified;
    case: "externallyModified";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The time (as recorded at server) when this event occurred.
   *
   * @generated from field: google.protobuf.Timestamp event_time = 1;
   */
  eventTime?: Timestamp;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.
 * Use `create(Grant_Timeline_EventSchema)` to create a new message.
 */
export const Grant_Timeline_EventSchema: GenMessage<Grant_Timeline_Event> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0);

/**
 * An event representing that a grant was requested.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Requested
 */
export type Grant_Timeline_Event_Requested = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Requested"> & {
  /**
   * Output only. The time at which this grant expires unless the approval
   * workflow completes. If omitted, then the request never expires.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 1;
   */
  expireTime?: Timestamp;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Requested.
 * Use `create(Grant_Timeline_Event_RequestedSchema)` to create a new message.
 */
export const Grant_Timeline_Event_RequestedSchema: GenMessage<Grant_Timeline_Event_Requested> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0, 0);

/**
 * An event representing that the grant was approved.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Approved
 */
export type Grant_Timeline_Event_Approved = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Approved"> & {
  /**
   * Output only. The reason provided by the approver for approving the
   * grant.
   *
   * @generated from field: string reason = 1;
   */
  reason: string;

  /**
   * Output only. Username of the user who approved the grant.
   *
   * @generated from field: string actor = 2;
   */
  actor: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Approved.
 * Use `create(Grant_Timeline_Event_ApprovedSchema)` to create a new message.
 */
export const Grant_Timeline_Event_ApprovedSchema: GenMessage<Grant_Timeline_Event_Approved> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0, 1);

/**
 * An event representing that the grant was denied.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Denied
 */
export type Grant_Timeline_Event_Denied = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Denied"> & {
  /**
   * Output only. The reason provided by the approver for denying the
   * grant.
   *
   * @generated from field: string reason = 1;
   */
  reason: string;

  /**
   * Output only. Username of the user who denied the grant.
   *
   * @generated from field: string actor = 2;
   */
  actor: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Denied.
 * Use `create(Grant_Timeline_Event_DeniedSchema)` to create a new message.
 */
export const Grant_Timeline_Event_DeniedSchema: GenMessage<Grant_Timeline_Event_Denied> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0, 2);

/**
 * An event representing that the grant was revoked.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Revoked
 */
export type Grant_Timeline_Event_Revoked = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Revoked"> & {
  /**
   * Output only. The reason provided by the user for revoking the grant.
   *
   * @generated from field: string reason = 1;
   */
  reason: string;

  /**
   * Output only. Username of the user who revoked the grant.
   *
   * @generated from field: string actor = 2;
   */
  actor: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Revoked.
 * Use `create(Grant_Timeline_Event_RevokedSchema)` to create a new message.
 */
export const Grant_Timeline_Event_RevokedSchema: GenMessage<Grant_Timeline_Event_Revoked> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0, 3);

/**
 * An event representing that the grant has been scheduled to be
 * activated later.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Scheduled
 */
export type Grant_Timeline_Event_Scheduled = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Scheduled"> & {
  /**
   * Output only. The time at which the access is granted.
   *
   * @generated from field: google.protobuf.Timestamp scheduled_activation_time = 1;
   */
  scheduledActivationTime?: Timestamp;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Scheduled.
 * Use `create(Grant_Timeline_Event_ScheduledSchema)` to create a new message.
 */
export const Grant_Timeline_Event_ScheduledSchema: GenMessage<Grant_Timeline_Event_Scheduled> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0, 4);

/**
 * An event representing that the grant was successfully
 * activated.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Activated
 */
export type Grant_Timeline_Event_Activated = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Activated"> & {
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Activated.
 * Use `create(Grant_Timeline_Event_ActivatedSchema)` to create a new message.
 */
export const Grant_Timeline_Event_ActivatedSchema: GenMessage<Grant_Timeline_Event_Activated> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0, 5);

/**
 * An event representing that the grant activation failed.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ActivationFailed
 */
export type Grant_Timeline_Event_ActivationFailed = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ActivationFailed"> & {
  /**
   * Output only. The error that occurred while activating the grant.
   *
   * @generated from field: google.rpc.Status error = 1;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ActivationFailed.
 * Use `create(Grant_Timeline_Event_ActivationFailedSchema)` to create a new message.
 */
export const Grant_Timeline_Event_ActivationFailedSchema: GenMessage<Grant_Timeline_Event_ActivationFailed> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0, 6);

/**
 * An event representing that the grant was expired.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Expired
 */
export type Grant_Timeline_Event_Expired = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Expired"> & {
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Expired.
 * Use `create(Grant_Timeline_Event_ExpiredSchema)` to create a new message.
 */
export const Grant_Timeline_Event_ExpiredSchema: GenMessage<Grant_Timeline_Event_Expired> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0, 7);

/**
 * An event representing that the grant has ended.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Ended
 */
export type Grant_Timeline_Event_Ended = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Ended"> & {
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Ended.
 * Use `create(Grant_Timeline_Event_EndedSchema)` to create a new message.
 */
export const Grant_Timeline_Event_EndedSchema: GenMessage<Grant_Timeline_Event_Ended> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0, 8);

/**
 * An event representing that the policy bindings made by this grant were
 * modified externally.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ExternallyModified
 */
export type Grant_Timeline_Event_ExternallyModified = Message<"google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ExternallyModified"> & {
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ExternallyModified.
 * Use `create(Grant_Timeline_Event_ExternallyModifiedSchema)` to create a new message.
 */
export const Grant_Timeline_Event_ExternallyModifiedSchema: GenMessage<Grant_Timeline_Event_ExternallyModified> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0, 0, 9);

/**
 * Audit trail for the access provided by this grant.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Grant.AuditTrail
 */
export type Grant_AuditTrail = Message<"google.cloud.privilegedaccessmanager.v1.Grant.AuditTrail"> & {
  /**
   * Output only. The time at which access was given.
   *
   * @generated from field: google.protobuf.Timestamp access_grant_time = 1;
   */
  accessGrantTime?: Timestamp;

  /**
   * Output only. The time at which the system removed access. This could be
   * because of an automatic expiry or because of a revocation.
   *
   * If unspecified, then access hasn't been removed yet.
   *
   * @generated from field: google.protobuf.Timestamp access_remove_time = 2;
   */
  accessRemoveTime?: Timestamp;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Grant.AuditTrail.
 * Use `create(Grant_AuditTrailSchema)` to create a new message.
 */
export const Grant_AuditTrailSchema: GenMessage<Grant_AuditTrail> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 1);

/**
 * Different states a grant can be in.
 *
 * @generated from enum google.cloud.privilegedaccessmanager.v1.Grant.State
 */
export enum Grant_State {
  /**
   * Unspecified state. This value is never returned by the server.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The entitlement had an approval workflow configured and this grant is
   * waiting for the workflow to complete.
   *
   * @generated from enum value: APPROVAL_AWAITED = 1;
   */
  APPROVAL_AWAITED = 1,

  /**
   * The approval workflow completed with a denied result. No access is
   * granted for this grant. This is a terminal state.
   *
   * @generated from enum value: DENIED = 3;
   */
  DENIED = 3,

  /**
   * The approval workflow completed successfully with an approved result or
   * none was configured. Access is provided at an appropriate time.
   *
   * @generated from enum value: SCHEDULED = 4;
   */
  SCHEDULED = 4,

  /**
   * Access is being given.
   *
   * @generated from enum value: ACTIVATING = 5;
   */
  ACTIVATING = 5,

  /**
   * Access was successfully given and is currently active.
   *
   * @generated from enum value: ACTIVE = 6;
   */
  ACTIVE = 6,

  /**
   * The system could not give access due to a non-retriable error. This is a
   * terminal state.
   *
   * @generated from enum value: ACTIVATION_FAILED = 7;
   */
  ACTIVATION_FAILED = 7,

  /**
   * Expired after waiting for the approval workflow to complete. This is a
   * terminal state.
   *
   * @generated from enum value: EXPIRED = 8;
   */
  EXPIRED = 8,

  /**
   * Access is being revoked.
   *
   * @generated from enum value: REVOKING = 9;
   */
  REVOKING = 9,

  /**
   * Access was revoked by a user. This is a terminal state.
   *
   * @generated from enum value: REVOKED = 10;
   */
  REVOKED = 10,

  /**
   * System took back access as the requested duration was over. This is a
   * terminal state.
   *
   * @generated from enum value: ENDED = 11;
   */
  ENDED = 11,
}

/**
 * Describes the enum google.cloud.privilegedaccessmanager.v1.Grant.State.
 */
export const Grant_StateSchema: GenEnum<Grant_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 15, 0);

/**
 * Justification represents a justification for requesting access.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.Justification
 */
export type Justification = Message<"google.cloud.privilegedaccessmanager.v1.Justification"> & {
  /**
   * @generated from oneof google.cloud.privilegedaccessmanager.v1.Justification.justification
   */
  justification: {
    /**
     * A free form textual justification. The system only ensures that this
     * is not empty. No other kind of validation is performed on the string.
     *
     * @generated from field: string unstructured_justification = 1;
     */
    value: string;
    case: "unstructuredJustification";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.Justification.
 * Use `create(JustificationSchema)` to create a new message.
 */
export const JustificationSchema: GenMessage<Justification> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 16);

/**
 * Message for requesting list of grants.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.ListGrantsRequest
 */
export type ListGrantsRequest = Message<"google.cloud.privilegedaccessmanager.v1.ListGrantsRequest"> & {
  /**
   * Required. The parent resource which owns the grants.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Requested page size. The server may return fewer items than
   * requested. If unspecified, the server picks an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filtering results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Hint for how to order the results
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.ListGrantsRequest.
 * Use `create(ListGrantsRequestSchema)` to create a new message.
 */
export const ListGrantsRequestSchema: GenMessage<ListGrantsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 17);

/**
 * Message for response to listing grants.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.ListGrantsResponse
 */
export type ListGrantsResponse = Message<"google.cloud.privilegedaccessmanager.v1.ListGrantsResponse"> & {
  /**
   * The list of grants.
   *
   * @generated from field: repeated google.cloud.privilegedaccessmanager.v1.Grant grants = 1;
   */
  grants: Grant[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.ListGrantsResponse.
 * Use `create(ListGrantsResponseSchema)` to create a new message.
 */
export const ListGrantsResponseSchema: GenMessage<ListGrantsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 18);

/**
 * Request message for `SearchGrants` method.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.SearchGrantsRequest
 */
export type SearchGrantsRequest = Message<"google.cloud.privilegedaccessmanager.v1.SearchGrantsRequest"> & {
  /**
   * Required. The parent which owns the grant resources.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Only grants which the caller is related to by this relationship
   * are returned in the response.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.SearchGrantsRequest.CallerRelationshipType caller_relationship = 2;
   */
  callerRelationship: SearchGrantsRequest_CallerRelationshipType;

  /**
   * Optional. Only grants matching this filter are returned in the response.
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * Optional. Requested page size. The server may return fewer items than
   * requested. If unspecified, server picks an appropriate default.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.SearchGrantsRequest.
 * Use `create(SearchGrantsRequestSchema)` to create a new message.
 */
export const SearchGrantsRequestSchema: GenMessage<SearchGrantsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 19);

/**
 * Different types of relationships a user can have with a grant.
 *
 * @generated from enum google.cloud.privilegedaccessmanager.v1.SearchGrantsRequest.CallerRelationshipType
 */
export enum SearchGrantsRequest_CallerRelationshipType {
  /**
   * Unspecified caller relationship type.
   *
   * @generated from enum value: CALLER_RELATIONSHIP_TYPE_UNSPECIFIED = 0;
   */
  CALLER_RELATIONSHIP_TYPE_UNSPECIFIED = 0,

  /**
   * The user created this grant by calling `CreateGrant` earlier.
   *
   * @generated from enum value: HAD_CREATED = 1;
   */
  HAD_CREATED = 1,

  /**
   * The user is an approver for the entitlement that this grant is parented
   * under and can currently approve/deny it.
   *
   * @generated from enum value: CAN_APPROVE = 2;
   */
  CAN_APPROVE = 2,

  /**
   * The caller had successfully approved/denied this grant earlier.
   *
   * @generated from enum value: HAD_APPROVED = 3;
   */
  HAD_APPROVED = 3,
}

/**
 * Describes the enum google.cloud.privilegedaccessmanager.v1.SearchGrantsRequest.CallerRelationshipType.
 */
export const SearchGrantsRequest_CallerRelationshipTypeSchema: GenEnum<SearchGrantsRequest_CallerRelationshipType> = /*@__PURE__*/
  enumDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 19, 0);

/**
 * Response message for `SearchGrants` method.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.SearchGrantsResponse
 */
export type SearchGrantsResponse = Message<"google.cloud.privilegedaccessmanager.v1.SearchGrantsResponse"> & {
  /**
   * The list of grants.
   *
   * @generated from field: repeated google.cloud.privilegedaccessmanager.v1.Grant grants = 1;
   */
  grants: Grant[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.SearchGrantsResponse.
 * Use `create(SearchGrantsResponseSchema)` to create a new message.
 */
export const SearchGrantsResponseSchema: GenMessage<SearchGrantsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 20);

/**
 * Message for getting a grant.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.GetGrantRequest
 */
export type GetGrantRequest = Message<"google.cloud.privilegedaccessmanager.v1.GetGrantRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.GetGrantRequest.
 * Use `create(GetGrantRequestSchema)` to create a new message.
 */
export const GetGrantRequestSchema: GenMessage<GetGrantRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 21);

/**
 * Request message for `ApproveGrant` method.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.ApproveGrantRequest
 */
export type ApproveGrantRequest = Message<"google.cloud.privilegedaccessmanager.v1.ApproveGrantRequest"> & {
  /**
   * Required. Name of the grant resource which is being approved.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The reason for approving this grant. This is required if the
   * `require_approver_justification` field of the `ManualApprovals` workflow
   * used in this grant is true.
   *
   * @generated from field: string reason = 2;
   */
  reason: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.ApproveGrantRequest.
 * Use `create(ApproveGrantRequestSchema)` to create a new message.
 */
export const ApproveGrantRequestSchema: GenMessage<ApproveGrantRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 22);

/**
 * Request message for `DenyGrant` method.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.DenyGrantRequest
 */
export type DenyGrantRequest = Message<"google.cloud.privilegedaccessmanager.v1.DenyGrantRequest"> & {
  /**
   * Required. Name of the grant resource which is being denied.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The reason for denying this grant. This is required if
   * `require_approver_justification` field of the `ManualApprovals` workflow
   * used in this grant is true.
   *
   * @generated from field: string reason = 2;
   */
  reason: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.DenyGrantRequest.
 * Use `create(DenyGrantRequestSchema)` to create a new message.
 */
export const DenyGrantRequestSchema: GenMessage<DenyGrantRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 23);

/**
 * Request message for `RevokeGrant` method.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.RevokeGrantRequest
 */
export type RevokeGrantRequest = Message<"google.cloud.privilegedaccessmanager.v1.RevokeGrantRequest"> & {
  /**
   * Required. Name of the grant resource which is being revoked.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The reason for revoking this grant.
   *
   * @generated from field: string reason = 2;
   */
  reason: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.RevokeGrantRequest.
 * Use `create(RevokeGrantRequestSchema)` to create a new message.
 */
export const RevokeGrantRequestSchema: GenMessage<RevokeGrantRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 24);

/**
 * Message for creating a grant
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.CreateGrantRequest
 */
export type CreateGrantRequest = Message<"google.cloud.privilegedaccessmanager.v1.CreateGrantRequest"> & {
  /**
   * Required. Name of the parent entitlement for which this grant is being
   * requested.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.privilegedaccessmanager.v1.Grant grant = 2;
   */
  grant?: Grant;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server knows to
   * ignore the request if it has already been completed. The server guarantees
   * this for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, ignores the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.CreateGrantRequest.
 * Use `create(CreateGrantRequestSchema)` to create a new message.
 */
export const CreateGrantRequestSchema: GenMessage<CreateGrantRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 25);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.privilegedaccessmanager.v1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.privilegedaccessmanager.v1.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. Identifies whether the user has requested cancellation
   * of the operation. Operations that have been cancelled successfully
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.privilegedaccessmanager.v1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 26);

/**
 * This API allows customers to manage temporary, request based privileged
 * access to their resources.
 *
 * It defines the following resource model:
 *
 * * A collection of `Entitlement` resources. An entitlement allows configuring
 *   (among other things):
 *
 *   * Some kind of privileged access that users can request.
 *   * A set of users called _requesters_ who can request this access.
 *   * A maximum duration for which the access can be requested.
 *   * An optional approval workflow which must be satisfied before access is
 *     granted.
 *
 * * A collection of `Grant` resources. A grant is a request by a requester to
 *   get the privileged access specified in an entitlement for some duration.
 *
 *   After the approval workflow as specified in the entitlement is satisfied,
 *   the specified access is given to the requester. The access is automatically
 *   taken back after the requested duration is over.
 *
 * @generated from service google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager
 */
export const PrivilegedAccessManager: GenService<{
  /**
   * CheckOnboardingStatus reports the onboarding status for a
   * project/folder/organization. Any findings reported by this API need to be
   * fixed before PAM can be used on the resource.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.CheckOnboardingStatus
   */
  checkOnboardingStatus: {
    methodKind: "unary";
    input: typeof CheckOnboardingStatusRequestSchema;
    output: typeof CheckOnboardingStatusResponseSchema;
  },
  /**
   * Lists entitlements in a given project/folder/organization and location.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.ListEntitlements
   */
  listEntitlements: {
    methodKind: "unary";
    input: typeof ListEntitlementsRequestSchema;
    output: typeof ListEntitlementsResponseSchema;
  },
  /**
   * `SearchEntitlements` returns entitlements on which the caller has the
   * specified access.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.SearchEntitlements
   */
  searchEntitlements: {
    methodKind: "unary";
    input: typeof SearchEntitlementsRequestSchema;
    output: typeof SearchEntitlementsResponseSchema;
  },
  /**
   * Gets details of a single entitlement.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.GetEntitlement
   */
  getEntitlement: {
    methodKind: "unary";
    input: typeof GetEntitlementRequestSchema;
    output: typeof EntitlementSchema;
  },
  /**
   * Creates a new entitlement in a given project/folder/organization and
   * location.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.CreateEntitlement
   */
  createEntitlement: {
    methodKind: "unary";
    input: typeof CreateEntitlementRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single entitlement. This method can only be called when there
   * are no in-progress (ACTIVE/ACTIVATING/REVOKING) grants under the
   * entitlement.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.DeleteEntitlement
   */
  deleteEntitlement: {
    methodKind: "unary";
    input: typeof DeleteEntitlementRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the entitlement specified in the request. Updated fields in the
   * entitlement need to be specified in an update mask. The changes made to an
   * entitlement are applicable only on future grants of the entitlement.
   * However, if new approvers are added or existing approvers are removed from
   * the approval workflow, the changes are effective on existing grants.
   *
   * The following fields are not supported for updates:
   *
   *  * All immutable fields
   *  * Entitlement name
   *  * Resource name
   *  * Resource type
   *  * Adding an approval workflow in an entitlement which previously had no
   *    approval workflow.
   *  * Deleting the approval workflow from an entitlement.
   *  * Adding or deleting a step in the approval workflow (only one step is
   *    supported)
   *
   * Note that updates are allowed on the list of approvers in an approval
   * workflow step.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.UpdateEntitlement
   */
  updateEntitlement: {
    methodKind: "unary";
    input: typeof UpdateEntitlementRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists grants for a given entitlement.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.ListGrants
   */
  listGrants: {
    methodKind: "unary";
    input: typeof ListGrantsRequestSchema;
    output: typeof ListGrantsResponseSchema;
  },
  /**
   * `SearchGrants` returns grants that are related to the calling user in the
   * specified way.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.SearchGrants
   */
  searchGrants: {
    methodKind: "unary";
    input: typeof SearchGrantsRequestSchema;
    output: typeof SearchGrantsResponseSchema;
  },
  /**
   * Get details of a single grant.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.GetGrant
   */
  getGrant: {
    methodKind: "unary";
    input: typeof GetGrantRequestSchema;
    output: typeof GrantSchema;
  },
  /**
   * Creates a new grant in a given project and location.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.CreateGrant
   */
  createGrant: {
    methodKind: "unary";
    input: typeof CreateGrantRequestSchema;
    output: typeof GrantSchema;
  },
  /**
   * `ApproveGrant` is used to approve a grant. This method can only be called
   * on a grant when it's in the `APPROVAL_AWAITED` state. This operation can't
   * be undone.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.ApproveGrant
   */
  approveGrant: {
    methodKind: "unary";
    input: typeof ApproveGrantRequestSchema;
    output: typeof GrantSchema;
  },
  /**
   * `DenyGrant` is used to deny a grant. This method can only be called on a
   * grant when it's in the `APPROVAL_AWAITED` state. This operation can't be
   * undone.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.DenyGrant
   */
  denyGrant: {
    methodKind: "unary";
    input: typeof DenyGrantRequestSchema;
    output: typeof GrantSchema;
  },
  /**
   * `RevokeGrant` is used to immediately revoke access for a grant. This method
   * can be called when the grant is in a non-terminal state.
   *
   * @generated from rpc google.cloud.privilegedaccessmanager.v1.PrivilegedAccessManager.RevokeGrant
   */
  revokeGrant: {
    methodKind: "unary";
    input: typeof RevokeGrantRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_privilegedaccessmanager_v1_privilegedaccessmanager, 0);

