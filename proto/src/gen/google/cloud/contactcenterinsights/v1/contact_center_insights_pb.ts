// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/contactcenterinsights/v1/contact_center_insights.proto (package google.cloud.contactcenterinsights.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Analysis, AnalysisSchema, AnnotatorSelector, Conversation, Conversation_Medium, ConversationSchema, Issue, IssueModel, IssueModelLabelStats, IssueModelLabelStats_IssueStats, IssueModelSchema, IssueSchema, PhraseMatcher, PhraseMatcherSchema, RedactionConfig, Settings, SettingsSchema, SpeechConfig, View, ViewSchema } from "./resources_pb";
import { file_google_cloud_contactcenterinsights_v1_resources } from "./resources_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Duration, EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/contactcenterinsights/v1/contact_center_insights.proto.
 */
export const file_google_cloud_contactcenterinsights_v1_contact_center_insights: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_contactcenterinsights_v1_resources, file_google_longrunning_operations, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * The request for calculating conversation statistics.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CalculateStatsRequest
 */
export type CalculateStatsRequest = Message<"google.cloud.contactcenterinsights.v1.CalculateStatsRequest"> & {
  /**
   * Required. The location of the conversations.
   *
   * @generated from field: string location = 1;
   */
  location: string;

  /**
   * A filter to reduce results to a specific subset. This field is useful for
   * getting statistics about conversations with specific properties.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CalculateStatsRequest.
 * Use `create(CalculateStatsRequestSchema)` to create a new message.
 */
export const CalculateStatsRequestSchema: GenMessage<CalculateStatsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 0);

/**
 * The response for calculating conversation statistics.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CalculateStatsResponse
 */
export type CalculateStatsResponse = Message<"google.cloud.contactcenterinsights.v1.CalculateStatsResponse"> & {
  /**
   * The average duration of all conversations. The average is calculated using
   * only conversations that have a time duration.
   *
   * @generated from field: google.protobuf.Duration average_duration = 1;
   */
  averageDuration?: Duration;

  /**
   * The average number of turns per conversation.
   *
   * @generated from field: int32 average_turn_count = 2;
   */
  averageTurnCount: number;

  /**
   * The total number of conversations.
   *
   * @generated from field: int32 conversation_count = 3;
   */
  conversationCount: number;

  /**
   * A map associating each smart highlighter display name with its respective
   * number of matches in the set of conversations.
   *
   * @generated from field: map<string, int32> smart_highlighter_matches = 4;
   */
  smartHighlighterMatches: { [key: string]: number };

  /**
   * A map associating each custom highlighter resource name with its respective
   * number of matches in the set of conversations.
   *
   * @generated from field: map<string, int32> custom_highlighter_matches = 5;
   */
  customHighlighterMatches: { [key: string]: number };

  /**
   * A map associating each issue resource name with its respective number of
   * matches in the set of conversations. Key has the format:
   * `projects/<Project-ID>/locations/<Location-ID>/issueModels/<Issue-Model-ID>/issues/<Issue-ID>`
   * Deprecated, use `issue_matches_stats` field instead.
   *
   * @generated from field: map<string, int32> issue_matches = 6 [deprecated = true];
   * @deprecated
   */
  issueMatches: { [key: string]: number };

  /**
   * A map associating each issue resource name with its respective number of
   * matches in the set of conversations. Key has the format:
   * `projects/<Project-ID>/locations/<Location-ID>/issueModels/<Issue-Model-ID>/issues/<Issue-ID>`
   *
   * @generated from field: map<string, google.cloud.contactcenterinsights.v1.IssueModelLabelStats.IssueStats> issue_matches_stats = 8;
   */
  issueMatchesStats: { [key: string]: IssueModelLabelStats_IssueStats };

  /**
   * A time series representing the count of conversations created over time
   * that match that requested filter criteria.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.CalculateStatsResponse.TimeSeries conversation_count_time_series = 7;
   */
  conversationCountTimeSeries?: CalculateStatsResponse_TimeSeries;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CalculateStatsResponse.
 * Use `create(CalculateStatsResponseSchema)` to create a new message.
 */
export const CalculateStatsResponseSchema: GenMessage<CalculateStatsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 1);

/**
 * A time series representing conversations over time.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CalculateStatsResponse.TimeSeries
 */
export type CalculateStatsResponse_TimeSeries = Message<"google.cloud.contactcenterinsights.v1.CalculateStatsResponse.TimeSeries"> & {
  /**
   * The duration of each interval.
   *
   * @generated from field: google.protobuf.Duration interval_duration = 1;
   */
  intervalDuration?: Duration;

  /**
   * An ordered list of intervals from earliest to latest, where each interval
   * represents the number of conversations that transpired during the time
   * window.
   *
   * @generated from field: repeated google.cloud.contactcenterinsights.v1.CalculateStatsResponse.TimeSeries.Interval points = 2;
   */
  points: CalculateStatsResponse_TimeSeries_Interval[];
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CalculateStatsResponse.TimeSeries.
 * Use `create(CalculateStatsResponse_TimeSeriesSchema)` to create a new message.
 */
export const CalculateStatsResponse_TimeSeriesSchema: GenMessage<CalculateStatsResponse_TimeSeries> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 1, 0);

/**
 * A single interval in a time series.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CalculateStatsResponse.TimeSeries.Interval
 */
export type CalculateStatsResponse_TimeSeries_Interval = Message<"google.cloud.contactcenterinsights.v1.CalculateStatsResponse.TimeSeries.Interval"> & {
  /**
   * The start time of this interval.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The number of conversations created in this interval.
   *
   * @generated from field: int32 conversation_count = 2;
   */
  conversationCount: number;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CalculateStatsResponse.TimeSeries.Interval.
 * Use `create(CalculateStatsResponse_TimeSeries_IntervalSchema)` to create a new message.
 */
export const CalculateStatsResponse_TimeSeries_IntervalSchema: GenMessage<CalculateStatsResponse_TimeSeries_Interval> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 1, 0, 0);

/**
 * Metadata for a create analysis operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CreateAnalysisOperationMetadata
 */
export type CreateAnalysisOperationMetadata = Message<"google.cloud.contactcenterinsights.v1.CreateAnalysisOperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. The Conversation that this Analysis Operation belongs to.
   *
   * @generated from field: string conversation = 3;
   */
  conversation: string;

  /**
   * Output only. The annotator selector used for the analysis (if any).
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.AnnotatorSelector annotator_selector = 4;
   */
  annotatorSelector?: AnnotatorSelector;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CreateAnalysisOperationMetadata.
 * Use `create(CreateAnalysisOperationMetadataSchema)` to create a new message.
 */
export const CreateAnalysisOperationMetadataSchema: GenMessage<CreateAnalysisOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 2);

/**
 * Request to create a conversation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CreateConversationRequest
 */
export type CreateConversationRequest = Message<"google.cloud.contactcenterinsights.v1.CreateConversationRequest"> & {
  /**
   * Required. The parent resource of the conversation.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The conversation resource to create.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.Conversation conversation = 2;
   */
  conversation?: Conversation;

  /**
   * A unique ID for the new conversation. This ID will become the final
   * component of the conversation's resource name. If no ID is specified, a
   * server-generated ID will be used.
   *
   * This value should be 4-64 characters and must match the regular
   * expression `^[a-z0-9-]{4,64}$`. Valid characters are `[a-z][0-9]-`
   *
   * @generated from field: string conversation_id = 3;
   */
  conversationId: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CreateConversationRequest.
 * Use `create(CreateConversationRequestSchema)` to create a new message.
 */
export const CreateConversationRequestSchema: GenMessage<CreateConversationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 3);

/**
 * Request to upload a conversation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UploadConversationRequest
 */
export type UploadConversationRequest = Message<"google.cloud.contactcenterinsights.v1.UploadConversationRequest"> & {
  /**
   * Required. The parent resource of the conversation.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The conversation resource to create.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.Conversation conversation = 2;
   */
  conversation?: Conversation;

  /**
   * Optional. A unique ID for the new conversation. This ID will become the
   * final component of the conversation's resource name. If no ID is specified,
   * a server-generated ID will be used.
   *
   * This value should be 4-64 characters and must match the regular
   * expression `^[a-z0-9-]{4,64}$`. Valid characters are `[a-z][0-9]-`
   *
   * @generated from field: string conversation_id = 3;
   */
  conversationId: string;

  /**
   * Optional. DLP settings for transcript redaction. Will default to the config
   * specified in Settings.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.RedactionConfig redaction_config = 4;
   */
  redactionConfig?: RedactionConfig;

  /**
   * Optional. Speech-to-Text configuration. Will default to the config
   * specified in Settings.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.SpeechConfig speech_config = 11;
   */
  speechConfig?: SpeechConfig;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UploadConversationRequest.
 * Use `create(UploadConversationRequestSchema)` to create a new message.
 */
export const UploadConversationRequestSchema: GenMessage<UploadConversationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 4);

/**
 * The metadata for an UploadConversation operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UploadConversationMetadata
 */
export type UploadConversationMetadata = Message<"google.cloud.contactcenterinsights.v1.UploadConversationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. The original request.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.UploadConversationRequest request = 3;
   */
  request?: UploadConversationRequest;

  /**
   * Output only. The operation name for a successfully created analysis
   * operation, if any.
   *
   * @generated from field: string analysis_operation = 4;
   */
  analysisOperation: string;

  /**
   * Output only. The redaction config applied to the uploaded conversation.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.RedactionConfig applied_redaction_config = 5;
   */
  appliedRedactionConfig?: RedactionConfig;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UploadConversationMetadata.
 * Use `create(UploadConversationMetadataSchema)` to create a new message.
 */
export const UploadConversationMetadataSchema: GenMessage<UploadConversationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 5);

/**
 * Request to list conversations.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListConversationsRequest
 */
export type ListConversationsRequest = Message<"google.cloud.contactcenterinsights.v1.ListConversationsRequest"> & {
  /**
   * Required. The parent resource of the conversation.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of conversations to return in the response. A valid page
   * size ranges from 0 to 1,000 inclusive. If the page size is zero or
   * unspecified, a default page size of 100 will be chosen. Note that a call
   * might return fewer results than the requested page size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The value returned by the last `ListConversationsResponse`. This value
   * indicates that this is a continuation of a prior `ListConversations` call
   * and that the system should return the next page of data.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter to reduce results to a specific subset. Useful for querying
   * conversations with specific properties.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * The level of details of the conversation. Default is `BASIC`.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.ConversationView view = 5;
   */
  view: ConversationView;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListConversationsRequest.
 * Use `create(ListConversationsRequestSchema)` to create a new message.
 */
export const ListConversationsRequestSchema: GenMessage<ListConversationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 6);

/**
 * The response of listing conversations.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListConversationsResponse
 */
export type ListConversationsResponse = Message<"google.cloud.contactcenterinsights.v1.ListConversationsResponse"> & {
  /**
   * The conversations that match the request.
   *
   * @generated from field: repeated google.cloud.contactcenterinsights.v1.Conversation conversations = 1;
   */
  conversations: Conversation[];

  /**
   * A token which can be sent as `page_token` to retrieve the next page. If
   * this field is set, it means there is another page available. If it is not
   * set, it means no other pages are available.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListConversationsResponse.
 * Use `create(ListConversationsResponseSchema)` to create a new message.
 */
export const ListConversationsResponseSchema: GenMessage<ListConversationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 7);

/**
 * The request to get a conversation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.GetConversationRequest
 */
export type GetConversationRequest = Message<"google.cloud.contactcenterinsights.v1.GetConversationRequest"> & {
  /**
   * Required. The name of the conversation to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The level of details of the conversation. Default is `FULL`.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.ConversationView view = 2;
   */
  view: ConversationView;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.GetConversationRequest.
 * Use `create(GetConversationRequestSchema)` to create a new message.
 */
export const GetConversationRequestSchema: GenMessage<GetConversationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 8);

/**
 * The request to update a conversation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UpdateConversationRequest
 */
export type UpdateConversationRequest = Message<"google.cloud.contactcenterinsights.v1.UpdateConversationRequest"> & {
  /**
   * Required. The new values for the conversation.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.Conversation conversation = 1;
   */
  conversation?: Conversation;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UpdateConversationRequest.
 * Use `create(UpdateConversationRequestSchema)` to create a new message.
 */
export const UpdateConversationRequestSchema: GenMessage<UpdateConversationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 9);

/**
 * The request to delete a conversation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.DeleteConversationRequest
 */
export type DeleteConversationRequest = Message<"google.cloud.contactcenterinsights.v1.DeleteConversationRequest"> & {
  /**
   * Required. The name of the conversation to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If set to true, all of this conversation's analyses will also be deleted.
   * Otherwise, the request will only succeed if the conversation has no
   * analyses.
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.DeleteConversationRequest.
 * Use `create(DeleteConversationRequestSchema)` to create a new message.
 */
export const DeleteConversationRequestSchema: GenMessage<DeleteConversationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 10);

/**
 * The request to ingest conversations.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.IngestConversationsRequest
 */
export type IngestConversationsRequest = Message<"google.cloud.contactcenterinsights.v1.IngestConversationsRequest"> & {
  /**
   * Configuration for an external data store containing objects that will
   * be converted to conversations.
   *
   * @generated from oneof google.cloud.contactcenterinsights.v1.IngestConversationsRequest.source
   */
  source: {
    /**
     * A cloud storage bucket source. Note that any previously ingested objects
     * from the source will be skipped to avoid duplication.
     *
     * @generated from field: google.cloud.contactcenterinsights.v1.IngestConversationsRequest.GcsSource gcs_source = 2;
     */
    value: IngestConversationsRequest_GcsSource;
    case: "gcsSource";
  } | { case: undefined; value?: undefined };

  /**
   * Configuration for converting individual `source` objects to conversations.
   *
   * @generated from oneof google.cloud.contactcenterinsights.v1.IngestConversationsRequest.object_config
   */
  objectConfig: {
    /**
     * Configuration for when `source` contains conversation transcripts.
     *
     * @generated from field: google.cloud.contactcenterinsights.v1.IngestConversationsRequest.TranscriptObjectConfig transcript_object_config = 3;
     */
    value: IngestConversationsRequest_TranscriptObjectConfig;
    case: "transcriptObjectConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The parent resource for new conversations.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Configuration that applies to all conversations.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.IngestConversationsRequest.ConversationConfig conversation_config = 4;
   */
  conversationConfig?: IngestConversationsRequest_ConversationConfig;

  /**
   * Optional. DLP settings for transcript redaction. Optional, will default to
   * the config specified in Settings.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.RedactionConfig redaction_config = 5;
   */
  redactionConfig?: RedactionConfig;

  /**
   * Optional. Default Speech-to-Text configuration. Optional, will default to
   * the config specified in Settings.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.SpeechConfig speech_config = 6;
   */
  speechConfig?: SpeechConfig;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.IngestConversationsRequest.
 * Use `create(IngestConversationsRequestSchema)` to create a new message.
 */
export const IngestConversationsRequestSchema: GenMessage<IngestConversationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 11);

/**
 * Configuration for Cloud Storage bucket sources.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.IngestConversationsRequest.GcsSource
 */
export type IngestConversationsRequest_GcsSource = Message<"google.cloud.contactcenterinsights.v1.IngestConversationsRequest.GcsSource"> & {
  /**
   * Required. The Cloud Storage bucket containing source objects.
   *
   * @generated from field: string bucket_uri = 1;
   */
  bucketUri: string;

  /**
   * Optional. Specifies the type of the objects in `bucket_uri`.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.IngestConversationsRequest.GcsSource.BucketObjectType bucket_object_type = 2;
   */
  bucketObjectType: IngestConversationsRequest_GcsSource_BucketObjectType;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.IngestConversationsRequest.GcsSource.
 * Use `create(IngestConversationsRequest_GcsSourceSchema)` to create a new message.
 */
export const IngestConversationsRequest_GcsSourceSchema: GenMessage<IngestConversationsRequest_GcsSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 11, 0);

/**
 * @generated from enum google.cloud.contactcenterinsights.v1.IngestConversationsRequest.GcsSource.BucketObjectType
 */
export enum IngestConversationsRequest_GcsSource_BucketObjectType {
  /**
   * The object type is unspecified and will default to `TRANSCRIPT`.
   *
   * @generated from enum value: BUCKET_OBJECT_TYPE_UNSPECIFIED = 0;
   */
  BUCKET_OBJECT_TYPE_UNSPECIFIED = 0,

  /**
   * The object is a transcript.
   *
   * @generated from enum value: TRANSCRIPT = 1;
   */
  TRANSCRIPT = 1,

  /**
   * The object is an audio file.
   *
   * @generated from enum value: AUDIO = 2;
   */
  AUDIO = 2,
}

/**
 * Describes the enum google.cloud.contactcenterinsights.v1.IngestConversationsRequest.GcsSource.BucketObjectType.
 */
export const IngestConversationsRequest_GcsSource_BucketObjectTypeSchema: GenEnum<IngestConversationsRequest_GcsSource_BucketObjectType> = /*@__PURE__*/
  enumDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 11, 0, 0);

/**
 * Configuration for processing transcript objects.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.IngestConversationsRequest.TranscriptObjectConfig
 */
export type IngestConversationsRequest_TranscriptObjectConfig = Message<"google.cloud.contactcenterinsights.v1.IngestConversationsRequest.TranscriptObjectConfig"> & {
  /**
   * Required. The medium transcript objects represent.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.Conversation.Medium medium = 1;
   */
  medium: Conversation_Medium;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.IngestConversationsRequest.TranscriptObjectConfig.
 * Use `create(IngestConversationsRequest_TranscriptObjectConfigSchema)` to create a new message.
 */
export const IngestConversationsRequest_TranscriptObjectConfigSchema: GenMessage<IngestConversationsRequest_TranscriptObjectConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 11, 1);

/**
 * Configuration that applies to all conversations.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.IngestConversationsRequest.ConversationConfig
 */
export type IngestConversationsRequest_ConversationConfig = Message<"google.cloud.contactcenterinsights.v1.IngestConversationsRequest.ConversationConfig"> & {
  /**
   * An opaque, user-specified string representing the human agent who handled
   * the conversations.
   *
   * @generated from field: string agent_id = 1;
   */
  agentId: string;

  /**
   * Optional. Indicates which of the channels, 1 or 2, contains the agent.
   * Note that this must be set for conversations to be properly displayed and
   * analyzed.
   *
   * @generated from field: int32 agent_channel = 2;
   */
  agentChannel: number;

  /**
   * Optional. Indicates which of the channels, 1 or 2, contains the agent.
   * Note that this must be set for conversations to be properly displayed and
   * analyzed.
   *
   * @generated from field: int32 customer_channel = 3;
   */
  customerChannel: number;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.IngestConversationsRequest.ConversationConfig.
 * Use `create(IngestConversationsRequest_ConversationConfigSchema)` to create a new message.
 */
export const IngestConversationsRequest_ConversationConfigSchema: GenMessage<IngestConversationsRequest_ConversationConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 11, 2);

/**
 * The metadata for an IngestConversations operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.IngestConversationsMetadata
 */
export type IngestConversationsMetadata = Message<"google.cloud.contactcenterinsights.v1.IngestConversationsMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. The original request for ingest.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.IngestConversationsRequest request = 3;
   */
  request?: IngestConversationsRequest;

  /**
   * Output only. Partial errors during ingest operation that might cause the
   * operation output to be incomplete.
   *
   * @generated from field: repeated google.rpc.Status partial_errors = 4;
   */
  partialErrors: Status[];

  /**
   * Output only. Statistics for IngestConversations operation.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.IngestConversationsMetadata.IngestConversationsStats ingest_conversations_stats = 5;
   */
  ingestConversationsStats?: IngestConversationsMetadata_IngestConversationsStats;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.IngestConversationsMetadata.
 * Use `create(IngestConversationsMetadataSchema)` to create a new message.
 */
export const IngestConversationsMetadataSchema: GenMessage<IngestConversationsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 12);

/**
 * Statistics for IngestConversations operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.IngestConversationsMetadata.IngestConversationsStats
 */
export type IngestConversationsMetadata_IngestConversationsStats = Message<"google.cloud.contactcenterinsights.v1.IngestConversationsMetadata.IngestConversationsStats"> & {
  /**
   * Output only. The number of objects processed during the ingest operation.
   *
   * @generated from field: int32 processed_object_count = 1;
   */
  processedObjectCount: number;

  /**
   * Output only. The number of objects skipped because another conversation
   * with the same transcript uri had already been ingested.
   *
   * @generated from field: int32 duplicates_skipped_count = 2;
   */
  duplicatesSkippedCount: number;

  /**
   * Output only. The number of new conversations added during this ingest
   * operation.
   *
   * @generated from field: int32 successful_ingest_count = 3;
   */
  successfulIngestCount: number;

  /**
   * Output only. The number of objects which were unable to be ingested due
   * to errors. The errors are populated in the partial_errors field.
   *
   * @generated from field: int32 failed_ingest_count = 4;
   */
  failedIngestCount: number;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.IngestConversationsMetadata.IngestConversationsStats.
 * Use `create(IngestConversationsMetadata_IngestConversationsStatsSchema)` to create a new message.
 */
export const IngestConversationsMetadata_IngestConversationsStatsSchema: GenMessage<IngestConversationsMetadata_IngestConversationsStats> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 12, 0);

/**
 * The response to an IngestConversations operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.IngestConversationsResponse
 */
export type IngestConversationsResponse = Message<"google.cloud.contactcenterinsights.v1.IngestConversationsResponse"> & {
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.IngestConversationsResponse.
 * Use `create(IngestConversationsResponseSchema)` to create a new message.
 */
export const IngestConversationsResponseSchema: GenMessage<IngestConversationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 13);

/**
 * The request to create an analysis.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CreateAnalysisRequest
 */
export type CreateAnalysisRequest = Message<"google.cloud.contactcenterinsights.v1.CreateAnalysisRequest"> & {
  /**
   * Required. The parent resource of the analysis.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The analysis to create.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.Analysis analysis = 2;
   */
  analysis?: Analysis;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CreateAnalysisRequest.
 * Use `create(CreateAnalysisRequestSchema)` to create a new message.
 */
export const CreateAnalysisRequestSchema: GenMessage<CreateAnalysisRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 14);

/**
 * The request to list analyses.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListAnalysesRequest
 */
export type ListAnalysesRequest = Message<"google.cloud.contactcenterinsights.v1.ListAnalysesRequest"> & {
  /**
   * Required. The parent resource of the analyses.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of analyses to return in the response. If this
   * value is zero, the service will select a default size. A call might return
   * fewer objects than requested. A non-empty `next_page_token` in the response
   * indicates that more data is available.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The value returned by the last `ListAnalysesResponse`; indicates
   * that this is a continuation of a prior `ListAnalyses` call and
   * the system should return the next page of data.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter to reduce results to a specific subset. Useful for querying
   * conversations with specific properties.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListAnalysesRequest.
 * Use `create(ListAnalysesRequestSchema)` to create a new message.
 */
export const ListAnalysesRequestSchema: GenMessage<ListAnalysesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 15);

/**
 * The response to list analyses.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListAnalysesResponse
 */
export type ListAnalysesResponse = Message<"google.cloud.contactcenterinsights.v1.ListAnalysesResponse"> & {
  /**
   * The analyses that match the request.
   *
   * @generated from field: repeated google.cloud.contactcenterinsights.v1.Analysis analyses = 1;
   */
  analyses: Analysis[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListAnalysesResponse.
 * Use `create(ListAnalysesResponseSchema)` to create a new message.
 */
export const ListAnalysesResponseSchema: GenMessage<ListAnalysesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 16);

/**
 * The request to get an analysis.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.GetAnalysisRequest
 */
export type GetAnalysisRequest = Message<"google.cloud.contactcenterinsights.v1.GetAnalysisRequest"> & {
  /**
   * Required. The name of the analysis to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.GetAnalysisRequest.
 * Use `create(GetAnalysisRequestSchema)` to create a new message.
 */
export const GetAnalysisRequestSchema: GenMessage<GetAnalysisRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 17);

/**
 * The request to delete an analysis.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.DeleteAnalysisRequest
 */
export type DeleteAnalysisRequest = Message<"google.cloud.contactcenterinsights.v1.DeleteAnalysisRequest"> & {
  /**
   * Required. The name of the analysis to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.DeleteAnalysisRequest.
 * Use `create(DeleteAnalysisRequestSchema)` to create a new message.
 */
export const DeleteAnalysisRequestSchema: GenMessage<DeleteAnalysisRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 18);

/**
 * The request to analyze conversations in bulk.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsRequest
 */
export type BulkAnalyzeConversationsRequest = Message<"google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsRequest"> & {
  /**
   * Required. The parent resource to create analyses in.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Filter used to select the subset of conversations to analyze.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Required. Percentage of selected conversation to analyze, between
   * [0, 100].
   *
   * @generated from field: float analysis_percentage = 3;
   */
  analysisPercentage: number;

  /**
   * To select the annotators to run and the phrase matchers to use
   * (if any). If not specified, all annotators will be run.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.AnnotatorSelector annotator_selector = 8;
   */
  annotatorSelector?: AnnotatorSelector;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsRequest.
 * Use `create(BulkAnalyzeConversationsRequestSchema)` to create a new message.
 */
export const BulkAnalyzeConversationsRequestSchema: GenMessage<BulkAnalyzeConversationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 19);

/**
 * The metadata for a bulk analyze conversations operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsMetadata
 */
export type BulkAnalyzeConversationsMetadata = Message<"google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsMetadata"> & {
  /**
   * The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The original request for bulk analyze.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsRequest request = 3;
   */
  request?: BulkAnalyzeConversationsRequest;

  /**
   * The number of requested analyses that have completed successfully so far.
   *
   * @generated from field: int32 completed_analyses_count = 4;
   */
  completedAnalysesCount: number;

  /**
   * The number of requested analyses that have failed so far.
   *
   * @generated from field: int32 failed_analyses_count = 5;
   */
  failedAnalysesCount: number;

  /**
   * Total number of analyses requested. Computed by the number of conversations
   * returned by `filter` multiplied by `analysis_percentage` in the request.
   *
   * @generated from field: int32 total_requested_analyses_count = 6;
   */
  totalRequestedAnalysesCount: number;

  /**
   * Output only. Partial errors during bulk analyze operation that might cause
   * the operation output to be incomplete.
   *
   * @generated from field: repeated google.rpc.Status partial_errors = 7;
   */
  partialErrors: Status[];
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsMetadata.
 * Use `create(BulkAnalyzeConversationsMetadataSchema)` to create a new message.
 */
export const BulkAnalyzeConversationsMetadataSchema: GenMessage<BulkAnalyzeConversationsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 20);

/**
 * The response for a bulk analyze conversations operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsResponse
 */
export type BulkAnalyzeConversationsResponse = Message<"google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsResponse"> & {
  /**
   * Count of successful analyses.
   *
   * @generated from field: int32 successful_analysis_count = 1;
   */
  successfulAnalysisCount: number;

  /**
   * Count of failed analyses.
   *
   * @generated from field: int32 failed_analysis_count = 2;
   */
  failedAnalysisCount: number;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsResponse.
 * Use `create(BulkAnalyzeConversationsResponseSchema)` to create a new message.
 */
export const BulkAnalyzeConversationsResponseSchema: GenMessage<BulkAnalyzeConversationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 21);

/**
 * The request to delete conversations in bulk.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.BulkDeleteConversationsRequest
 */
export type BulkDeleteConversationsRequest = Message<"google.cloud.contactcenterinsights.v1.BulkDeleteConversationsRequest"> & {
  /**
   * Required. The parent resource to delete conversations from.
   * Format:
   * projects/{project}/locations/{location}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Filter used to select the subset of conversations to delete.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Maximum number of conversations to delete.
   *
   * @generated from field: int32 max_delete_count = 3;
   */
  maxDeleteCount: number;

  /**
   * If set to true, all of this conversation's analyses will also be deleted.
   * Otherwise, the request will only succeed if the conversation has no
   * analyses.
   *
   * @generated from field: bool force = 4;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.BulkDeleteConversationsRequest.
 * Use `create(BulkDeleteConversationsRequestSchema)` to create a new message.
 */
export const BulkDeleteConversationsRequestSchema: GenMessage<BulkDeleteConversationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 22);

/**
 * The metadata for a bulk delete conversations operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.BulkDeleteConversationsMetadata
 */
export type BulkDeleteConversationsMetadata = Message<"google.cloud.contactcenterinsights.v1.BulkDeleteConversationsMetadata"> & {
  /**
   * The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The original request for bulk delete.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.BulkDeleteConversationsRequest request = 3;
   */
  request?: BulkDeleteConversationsRequest;

  /**
   * Partial errors during bulk delete conversations operation that might cause
   * the operation output to be incomplete.
   *
   * @generated from field: repeated google.rpc.Status partial_errors = 4;
   */
  partialErrors: Status[];
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.BulkDeleteConversationsMetadata.
 * Use `create(BulkDeleteConversationsMetadataSchema)` to create a new message.
 */
export const BulkDeleteConversationsMetadataSchema: GenMessage<BulkDeleteConversationsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 23);

/**
 * The response for a bulk delete conversations operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.BulkDeleteConversationsResponse
 */
export type BulkDeleteConversationsResponse = Message<"google.cloud.contactcenterinsights.v1.BulkDeleteConversationsResponse"> & {
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.BulkDeleteConversationsResponse.
 * Use `create(BulkDeleteConversationsResponseSchema)` to create a new message.
 */
export const BulkDeleteConversationsResponseSchema: GenMessage<BulkDeleteConversationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 24);

/**
 * The request to export insights.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest
 */
export type ExportInsightsDataRequest = Message<"google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest"> & {
  /**
   * Exporter destination.
   *
   * @generated from oneof google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest.destination
   */
  destination: {
    /**
     * Specified if sink is a BigQuery table.
     *
     * @generated from field: google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest.BigQueryDestination big_query_destination = 2;
     */
    value: ExportInsightsDataRequest_BigQueryDestination;
    case: "bigQueryDestination";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The parent resource to export data from.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * A filter to reduce results to a specific subset. Useful for exporting
   * conversations with specific properties.
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * A fully qualified KMS key name for BigQuery tables protected by CMEK.
   * Format:
   * projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
   *
   * @generated from field: string kms_key = 4;
   */
  kmsKey: string;

  /**
   * Options for what to do if the destination table already exists.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest.WriteDisposition write_disposition = 5;
   */
  writeDisposition: ExportInsightsDataRequest_WriteDisposition;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest.
 * Use `create(ExportInsightsDataRequestSchema)` to create a new message.
 */
export const ExportInsightsDataRequestSchema: GenMessage<ExportInsightsDataRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 25);

/**
 * A BigQuery Table Reference.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest.BigQueryDestination
 */
export type ExportInsightsDataRequest_BigQueryDestination = Message<"google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest.BigQueryDestination"> & {
  /**
   * A project ID or number. If specified, then export will attempt to
   * write data to this project instead of the resource project. Otherwise,
   * the resource project will be used.
   *
   * @generated from field: string project_id = 3;
   */
  projectId: string;

  /**
   * Required. The name of the BigQuery dataset that the snapshot result
   * should be exported to. If this dataset does not exist, the export call
   * returns an INVALID_ARGUMENT error.
   *
   * @generated from field: string dataset = 1;
   */
  dataset: string;

  /**
   * The BigQuery table name to which the insights data should be written.
   * If this table does not exist, the export call returns an INVALID_ARGUMENT
   * error.
   *
   * @generated from field: string table = 2;
   */
  table: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest.BigQueryDestination.
 * Use `create(ExportInsightsDataRequest_BigQueryDestinationSchema)` to create a new message.
 */
export const ExportInsightsDataRequest_BigQueryDestinationSchema: GenMessage<ExportInsightsDataRequest_BigQueryDestination> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 25, 0);

/**
 * Specifies the action that occurs if the destination table already exists.
 *
 * @generated from enum google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest.WriteDisposition
 */
export enum ExportInsightsDataRequest_WriteDisposition {
  /**
   * Write disposition is not specified. Defaults to WRITE_TRUNCATE.
   *
   * @generated from enum value: WRITE_DISPOSITION_UNSPECIFIED = 0;
   */
  WRITE_DISPOSITION_UNSPECIFIED = 0,

  /**
   * If the table already exists, BigQuery will overwrite the table data and
   * use the schema from the load.
   *
   * @generated from enum value: WRITE_TRUNCATE = 1;
   */
  WRITE_TRUNCATE = 1,

  /**
   * If the table already exists, BigQuery will append data to the table.
   *
   * @generated from enum value: WRITE_APPEND = 2;
   */
  WRITE_APPEND = 2,
}

/**
 * Describes the enum google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest.WriteDisposition.
 */
export const ExportInsightsDataRequest_WriteDispositionSchema: GenEnum<ExportInsightsDataRequest_WriteDisposition> = /*@__PURE__*/
  enumDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 25, 0);

/**
 * Metadata for an export insights operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ExportInsightsDataMetadata
 */
export type ExportInsightsDataMetadata = Message<"google.cloud.contactcenterinsights.v1.ExportInsightsDataMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The original request for export.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.ExportInsightsDataRequest request = 3;
   */
  request?: ExportInsightsDataRequest;

  /**
   * Partial errors during export operation that might cause the operation
   * output to be incomplete.
   *
   * @generated from field: repeated google.rpc.Status partial_errors = 4;
   */
  partialErrors: Status[];
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ExportInsightsDataMetadata.
 * Use `create(ExportInsightsDataMetadataSchema)` to create a new message.
 */
export const ExportInsightsDataMetadataSchema: GenMessage<ExportInsightsDataMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 26);

/**
 * Response for an export insights operation.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ExportInsightsDataResponse
 */
export type ExportInsightsDataResponse = Message<"google.cloud.contactcenterinsights.v1.ExportInsightsDataResponse"> & {
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ExportInsightsDataResponse.
 * Use `create(ExportInsightsDataResponseSchema)` to create a new message.
 */
export const ExportInsightsDataResponseSchema: GenMessage<ExportInsightsDataResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 27);

/**
 * The request to create an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CreateIssueModelRequest
 */
export type CreateIssueModelRequest = Message<"google.cloud.contactcenterinsights.v1.CreateIssueModelRequest"> & {
  /**
   * Required. The parent resource of the issue model.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The issue model to create.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.IssueModel issue_model = 2;
   */
  issueModel?: IssueModel;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CreateIssueModelRequest.
 * Use `create(CreateIssueModelRequestSchema)` to create a new message.
 */
export const CreateIssueModelRequestSchema: GenMessage<CreateIssueModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 28);

/**
 * Metadata for creating an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CreateIssueModelMetadata
 */
export type CreateIssueModelMetadata = Message<"google.cloud.contactcenterinsights.v1.CreateIssueModelMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The original request for creation.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.CreateIssueModelRequest request = 3;
   */
  request?: CreateIssueModelRequest;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CreateIssueModelMetadata.
 * Use `create(CreateIssueModelMetadataSchema)` to create a new message.
 */
export const CreateIssueModelMetadataSchema: GenMessage<CreateIssueModelMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 29);

/**
 * The request to update an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UpdateIssueModelRequest
 */
export type UpdateIssueModelRequest = Message<"google.cloud.contactcenterinsights.v1.UpdateIssueModelRequest"> & {
  /**
   * Required. The new values for the issue model.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.IssueModel issue_model = 1;
   */
  issueModel?: IssueModel;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UpdateIssueModelRequest.
 * Use `create(UpdateIssueModelRequestSchema)` to create a new message.
 */
export const UpdateIssueModelRequestSchema: GenMessage<UpdateIssueModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 30);

/**
 * Request to list issue models.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListIssueModelsRequest
 */
export type ListIssueModelsRequest = Message<"google.cloud.contactcenterinsights.v1.ListIssueModelsRequest"> & {
  /**
   * Required. The parent resource of the issue model.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListIssueModelsRequest.
 * Use `create(ListIssueModelsRequestSchema)` to create a new message.
 */
export const ListIssueModelsRequestSchema: GenMessage<ListIssueModelsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 31);

/**
 * The response of listing issue models.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListIssueModelsResponse
 */
export type ListIssueModelsResponse = Message<"google.cloud.contactcenterinsights.v1.ListIssueModelsResponse"> & {
  /**
   * The issue models that match the request.
   *
   * @generated from field: repeated google.cloud.contactcenterinsights.v1.IssueModel issue_models = 1;
   */
  issueModels: IssueModel[];
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListIssueModelsResponse.
 * Use `create(ListIssueModelsResponseSchema)` to create a new message.
 */
export const ListIssueModelsResponseSchema: GenMessage<ListIssueModelsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 32);

/**
 * The request to get an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.GetIssueModelRequest
 */
export type GetIssueModelRequest = Message<"google.cloud.contactcenterinsights.v1.GetIssueModelRequest"> & {
  /**
   * Required. The name of the issue model to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.GetIssueModelRequest.
 * Use `create(GetIssueModelRequestSchema)` to create a new message.
 */
export const GetIssueModelRequestSchema: GenMessage<GetIssueModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 33);

/**
 * The request to delete an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.DeleteIssueModelRequest
 */
export type DeleteIssueModelRequest = Message<"google.cloud.contactcenterinsights.v1.DeleteIssueModelRequest"> & {
  /**
   * Required. The name of the issue model to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.DeleteIssueModelRequest.
 * Use `create(DeleteIssueModelRequestSchema)` to create a new message.
 */
export const DeleteIssueModelRequestSchema: GenMessage<DeleteIssueModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 34);

/**
 * Metadata for deleting an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.DeleteIssueModelMetadata
 */
export type DeleteIssueModelMetadata = Message<"google.cloud.contactcenterinsights.v1.DeleteIssueModelMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The original request for deletion.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.DeleteIssueModelRequest request = 3;
   */
  request?: DeleteIssueModelRequest;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.DeleteIssueModelMetadata.
 * Use `create(DeleteIssueModelMetadataSchema)` to create a new message.
 */
export const DeleteIssueModelMetadataSchema: GenMessage<DeleteIssueModelMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 35);

/**
 * The request to deploy an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.DeployIssueModelRequest
 */
export type DeployIssueModelRequest = Message<"google.cloud.contactcenterinsights.v1.DeployIssueModelRequest"> & {
  /**
   * Required. The issue model to deploy.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.DeployIssueModelRequest.
 * Use `create(DeployIssueModelRequestSchema)` to create a new message.
 */
export const DeployIssueModelRequestSchema: GenMessage<DeployIssueModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 36);

/**
 * The response to deploy an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.DeployIssueModelResponse
 */
export type DeployIssueModelResponse = Message<"google.cloud.contactcenterinsights.v1.DeployIssueModelResponse"> & {
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.DeployIssueModelResponse.
 * Use `create(DeployIssueModelResponseSchema)` to create a new message.
 */
export const DeployIssueModelResponseSchema: GenMessage<DeployIssueModelResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 37);

/**
 * Metadata for deploying an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.DeployIssueModelMetadata
 */
export type DeployIssueModelMetadata = Message<"google.cloud.contactcenterinsights.v1.DeployIssueModelMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The original request for deployment.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.DeployIssueModelRequest request = 3;
   */
  request?: DeployIssueModelRequest;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.DeployIssueModelMetadata.
 * Use `create(DeployIssueModelMetadataSchema)` to create a new message.
 */
export const DeployIssueModelMetadataSchema: GenMessage<DeployIssueModelMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 38);

/**
 * The request to undeploy an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UndeployIssueModelRequest
 */
export type UndeployIssueModelRequest = Message<"google.cloud.contactcenterinsights.v1.UndeployIssueModelRequest"> & {
  /**
   * Required. The issue model to undeploy.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UndeployIssueModelRequest.
 * Use `create(UndeployIssueModelRequestSchema)` to create a new message.
 */
export const UndeployIssueModelRequestSchema: GenMessage<UndeployIssueModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 39);

/**
 * The response to undeploy an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UndeployIssueModelResponse
 */
export type UndeployIssueModelResponse = Message<"google.cloud.contactcenterinsights.v1.UndeployIssueModelResponse"> & {
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UndeployIssueModelResponse.
 * Use `create(UndeployIssueModelResponseSchema)` to create a new message.
 */
export const UndeployIssueModelResponseSchema: GenMessage<UndeployIssueModelResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 40);

/**
 * Metadata for undeploying an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UndeployIssueModelMetadata
 */
export type UndeployIssueModelMetadata = Message<"google.cloud.contactcenterinsights.v1.UndeployIssueModelMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The original request for undeployment.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.UndeployIssueModelRequest request = 3;
   */
  request?: UndeployIssueModelRequest;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UndeployIssueModelMetadata.
 * Use `create(UndeployIssueModelMetadataSchema)` to create a new message.
 */
export const UndeployIssueModelMetadataSchema: GenMessage<UndeployIssueModelMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 41);

/**
 * The request to get an issue.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.GetIssueRequest
 */
export type GetIssueRequest = Message<"google.cloud.contactcenterinsights.v1.GetIssueRequest"> & {
  /**
   * Required. The name of the issue to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.GetIssueRequest.
 * Use `create(GetIssueRequestSchema)` to create a new message.
 */
export const GetIssueRequestSchema: GenMessage<GetIssueRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 42);

/**
 * Request to list issues.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListIssuesRequest
 */
export type ListIssuesRequest = Message<"google.cloud.contactcenterinsights.v1.ListIssuesRequest"> & {
  /**
   * Required. The parent resource of the issue.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListIssuesRequest.
 * Use `create(ListIssuesRequestSchema)` to create a new message.
 */
export const ListIssuesRequestSchema: GenMessage<ListIssuesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 43);

/**
 * The response of listing issues.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListIssuesResponse
 */
export type ListIssuesResponse = Message<"google.cloud.contactcenterinsights.v1.ListIssuesResponse"> & {
  /**
   * The issues that match the request.
   *
   * @generated from field: repeated google.cloud.contactcenterinsights.v1.Issue issues = 1;
   */
  issues: Issue[];
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListIssuesResponse.
 * Use `create(ListIssuesResponseSchema)` to create a new message.
 */
export const ListIssuesResponseSchema: GenMessage<ListIssuesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 44);

/**
 * The request to update an issue.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UpdateIssueRequest
 */
export type UpdateIssueRequest = Message<"google.cloud.contactcenterinsights.v1.UpdateIssueRequest"> & {
  /**
   * Required. The new values for the issue.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.Issue issue = 1;
   */
  issue?: Issue;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UpdateIssueRequest.
 * Use `create(UpdateIssueRequestSchema)` to create a new message.
 */
export const UpdateIssueRequestSchema: GenMessage<UpdateIssueRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 45);

/**
 * The request to delete an issue.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.DeleteIssueRequest
 */
export type DeleteIssueRequest = Message<"google.cloud.contactcenterinsights.v1.DeleteIssueRequest"> & {
  /**
   * Required. The name of the issue to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.DeleteIssueRequest.
 * Use `create(DeleteIssueRequestSchema)` to create a new message.
 */
export const DeleteIssueRequestSchema: GenMessage<DeleteIssueRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 46);

/**
 * Request to get statistics of an issue model.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CalculateIssueModelStatsRequest
 */
export type CalculateIssueModelStatsRequest = Message<"google.cloud.contactcenterinsights.v1.CalculateIssueModelStatsRequest"> & {
  /**
   * Required. The resource name of the issue model to query against.
   *
   * @generated from field: string issue_model = 1;
   */
  issueModel: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CalculateIssueModelStatsRequest.
 * Use `create(CalculateIssueModelStatsRequestSchema)` to create a new message.
 */
export const CalculateIssueModelStatsRequestSchema: GenMessage<CalculateIssueModelStatsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 47);

/**
 * Response of querying an issue model's statistics.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CalculateIssueModelStatsResponse
 */
export type CalculateIssueModelStatsResponse = Message<"google.cloud.contactcenterinsights.v1.CalculateIssueModelStatsResponse"> & {
  /**
   * The latest label statistics for the queried issue model. Includes results
   * on both training data and data labeled after deployment.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.IssueModelLabelStats current_stats = 4;
   */
  currentStats?: IssueModelLabelStats;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CalculateIssueModelStatsResponse.
 * Use `create(CalculateIssueModelStatsResponseSchema)` to create a new message.
 */
export const CalculateIssueModelStatsResponseSchema: GenMessage<CalculateIssueModelStatsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 48);

/**
 * Request to create a phrase matcher.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CreatePhraseMatcherRequest
 */
export type CreatePhraseMatcherRequest = Message<"google.cloud.contactcenterinsights.v1.CreatePhraseMatcherRequest"> & {
  /**
   * Required. The parent resource of the phrase matcher. Required. The location
   * to create a phrase matcher for. Format: `projects/<Project
   * ID>/locations/<Location ID>` or `projects/<Project
   * Number>/locations/<Location ID>`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The phrase matcher resource to create.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.PhraseMatcher phrase_matcher = 2;
   */
  phraseMatcher?: PhraseMatcher;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CreatePhraseMatcherRequest.
 * Use `create(CreatePhraseMatcherRequestSchema)` to create a new message.
 */
export const CreatePhraseMatcherRequestSchema: GenMessage<CreatePhraseMatcherRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 49);

/**
 * Request to list phrase matchers.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListPhraseMatchersRequest
 */
export type ListPhraseMatchersRequest = Message<"google.cloud.contactcenterinsights.v1.ListPhraseMatchersRequest"> & {
  /**
   * Required. The parent resource of the phrase matcher.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of phrase matchers to return in the response. If this
   * value is zero, the service will select a default size. A call might return
   * fewer objects than requested. A non-empty `next_page_token` in the response
   * indicates that more data is available.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The value returned by the last `ListPhraseMatchersResponse`. This value
   * indicates that this is a continuation of a prior `ListPhraseMatchers` call
   * and that the system should return the next page of data.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter to reduce results to a specific subset. Useful for querying
   * phrase matchers with specific properties.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListPhraseMatchersRequest.
 * Use `create(ListPhraseMatchersRequestSchema)` to create a new message.
 */
export const ListPhraseMatchersRequestSchema: GenMessage<ListPhraseMatchersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 50);

/**
 * The response of listing phrase matchers.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListPhraseMatchersResponse
 */
export type ListPhraseMatchersResponse = Message<"google.cloud.contactcenterinsights.v1.ListPhraseMatchersResponse"> & {
  /**
   * The phrase matchers that match the request.
   *
   * @generated from field: repeated google.cloud.contactcenterinsights.v1.PhraseMatcher phrase_matchers = 1;
   */
  phraseMatchers: PhraseMatcher[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListPhraseMatchersResponse.
 * Use `create(ListPhraseMatchersResponseSchema)` to create a new message.
 */
export const ListPhraseMatchersResponseSchema: GenMessage<ListPhraseMatchersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 51);

/**
 * The request to get a a phrase matcher.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.GetPhraseMatcherRequest
 */
export type GetPhraseMatcherRequest = Message<"google.cloud.contactcenterinsights.v1.GetPhraseMatcherRequest"> & {
  /**
   * Required. The name of the phrase matcher to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.GetPhraseMatcherRequest.
 * Use `create(GetPhraseMatcherRequestSchema)` to create a new message.
 */
export const GetPhraseMatcherRequestSchema: GenMessage<GetPhraseMatcherRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 52);

/**
 * The request to delete a phrase matcher.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.DeletePhraseMatcherRequest
 */
export type DeletePhraseMatcherRequest = Message<"google.cloud.contactcenterinsights.v1.DeletePhraseMatcherRequest"> & {
  /**
   * Required. The name of the phrase matcher to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.DeletePhraseMatcherRequest.
 * Use `create(DeletePhraseMatcherRequestSchema)` to create a new message.
 */
export const DeletePhraseMatcherRequestSchema: GenMessage<DeletePhraseMatcherRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 53);

/**
 * The request to update a phrase matcher.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UpdatePhraseMatcherRequest
 */
export type UpdatePhraseMatcherRequest = Message<"google.cloud.contactcenterinsights.v1.UpdatePhraseMatcherRequest"> & {
  /**
   * Required. The new values for the phrase matcher.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.PhraseMatcher phrase_matcher = 1;
   */
  phraseMatcher?: PhraseMatcher;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UpdatePhraseMatcherRequest.
 * Use `create(UpdatePhraseMatcherRequestSchema)` to create a new message.
 */
export const UpdatePhraseMatcherRequestSchema: GenMessage<UpdatePhraseMatcherRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 54);

/**
 * The request to get project-level settings.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.GetSettingsRequest
 */
export type GetSettingsRequest = Message<"google.cloud.contactcenterinsights.v1.GetSettingsRequest"> & {
  /**
   * Required. The name of the settings resource to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.GetSettingsRequest.
 * Use `create(GetSettingsRequestSchema)` to create a new message.
 */
export const GetSettingsRequestSchema: GenMessage<GetSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 55);

/**
 * The request to update project-level settings.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UpdateSettingsRequest
 */
export type UpdateSettingsRequest = Message<"google.cloud.contactcenterinsights.v1.UpdateSettingsRequest"> & {
  /**
   * Required. The new settings values.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.Settings settings = 1;
   */
  settings?: Settings;

  /**
   * Required. The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UpdateSettingsRequest.
 * Use `create(UpdateSettingsRequestSchema)` to create a new message.
 */
export const UpdateSettingsRequestSchema: GenMessage<UpdateSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 56);

/**
 * The request to create a view.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.CreateViewRequest
 */
export type CreateViewRequest = Message<"google.cloud.contactcenterinsights.v1.CreateViewRequest"> & {
  /**
   * Required. The parent resource of the view. Required. The location to create
   * a view for.
   * Format: `projects/<Project ID>/locations/<Location ID>` or
   * `projects/<Project Number>/locations/<Location ID>`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The view resource to create.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.View view = 2;
   */
  view?: View;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.CreateViewRequest.
 * Use `create(CreateViewRequestSchema)` to create a new message.
 */
export const CreateViewRequestSchema: GenMessage<CreateViewRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 57);

/**
 * The request to get a view.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.GetViewRequest
 */
export type GetViewRequest = Message<"google.cloud.contactcenterinsights.v1.GetViewRequest"> & {
  /**
   * Required. The name of the view to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.GetViewRequest.
 * Use `create(GetViewRequestSchema)` to create a new message.
 */
export const GetViewRequestSchema: GenMessage<GetViewRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 58);

/**
 * The request to list views.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListViewsRequest
 */
export type ListViewsRequest = Message<"google.cloud.contactcenterinsights.v1.ListViewsRequest"> & {
  /**
   * Required. The parent resource of the views.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of views to return in the response. If this
   * value is zero, the service will select a default size. A call may return
   * fewer objects than requested. A non-empty `next_page_token` in the response
   * indicates that more data is available.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The value returned by the last `ListViewsResponse`; indicates
   * that this is a continuation of a prior `ListViews` call and
   * the system should return the next page of data.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListViewsRequest.
 * Use `create(ListViewsRequestSchema)` to create a new message.
 */
export const ListViewsRequestSchema: GenMessage<ListViewsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 59);

/**
 * The response of listing views.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.ListViewsResponse
 */
export type ListViewsResponse = Message<"google.cloud.contactcenterinsights.v1.ListViewsResponse"> & {
  /**
   * The views that match the request.
   *
   * @generated from field: repeated google.cloud.contactcenterinsights.v1.View views = 1;
   */
  views: View[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.ListViewsResponse.
 * Use `create(ListViewsResponseSchema)` to create a new message.
 */
export const ListViewsResponseSchema: GenMessage<ListViewsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 60);

/**
 * The request to update a view.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.UpdateViewRequest
 */
export type UpdateViewRequest = Message<"google.cloud.contactcenterinsights.v1.UpdateViewRequest"> & {
  /**
   * Required. The new view.
   *
   * @generated from field: google.cloud.contactcenterinsights.v1.View view = 1;
   */
  view?: View;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.UpdateViewRequest.
 * Use `create(UpdateViewRequestSchema)` to create a new message.
 */
export const UpdateViewRequestSchema: GenMessage<UpdateViewRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 61);

/**
 * The request to delete a view.
 *
 * @generated from message google.cloud.contactcenterinsights.v1.DeleteViewRequest
 */
export type DeleteViewRequest = Message<"google.cloud.contactcenterinsights.v1.DeleteViewRequest"> & {
  /**
   * Required. The name of the view to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contactcenterinsights.v1.DeleteViewRequest.
 * Use `create(DeleteViewRequestSchema)` to create a new message.
 */
export const DeleteViewRequestSchema: GenMessage<DeleteViewRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 62);

/**
 * Represents the options for viewing a conversation.
 *
 * @generated from enum google.cloud.contactcenterinsights.v1.ConversationView
 */
export enum ConversationView {
  /**
   * The conversation view is not specified.
   *
   * * Defaults to `FULL` in `GetConversationRequest`.
   * * Defaults to `BASIC` in `ListConversationsRequest`.
   *
   * @generated from enum value: CONVERSATION_VIEW_UNSPECIFIED = 0;
   */
  CONVERSATION_VIEW_UNSPECIFIED = 0,

  /**
   * Populates all fields in the conversation.
   *
   * @generated from enum value: FULL = 2;
   */
  FULL = 2,

  /**
   * Populates all fields in the conversation except the transcript.
   *
   * @generated from enum value: BASIC = 1;
   */
  BASIC = 1,
}

/**
 * Describes the enum google.cloud.contactcenterinsights.v1.ConversationView.
 */
export const ConversationViewSchema: GenEnum<ConversationView> = /*@__PURE__*/
  enumDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 0);

/**
 * An API that lets users analyze and explore their business conversation data.
 *
 * @generated from service google.cloud.contactcenterinsights.v1.ContactCenterInsights
 */
export const ContactCenterInsights: GenService<{
  /**
   * Creates a conversation.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.CreateConversation
   */
  createConversation: {
    methodKind: "unary";
    input: typeof CreateConversationRequestSchema;
    output: typeof ConversationSchema;
  },
  /**
   * Create a longrunning conversation upload operation. This method differs
   * from CreateConversation by allowing audio transcription and optional DLP
   * redaction.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.UploadConversation
   */
  uploadConversation: {
    methodKind: "unary";
    input: typeof UploadConversationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a conversation.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.UpdateConversation
   */
  updateConversation: {
    methodKind: "unary";
    input: typeof UpdateConversationRequestSchema;
    output: typeof ConversationSchema;
  },
  /**
   * Gets a conversation.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.GetConversation
   */
  getConversation: {
    methodKind: "unary";
    input: typeof GetConversationRequestSchema;
    output: typeof ConversationSchema;
  },
  /**
   * Lists conversations.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.ListConversations
   */
  listConversations: {
    methodKind: "unary";
    input: typeof ListConversationsRequestSchema;
    output: typeof ListConversationsResponseSchema;
  },
  /**
   * Deletes a conversation.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.DeleteConversation
   */
  deleteConversation: {
    methodKind: "unary";
    input: typeof DeleteConversationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Creates an analysis. The long running operation is done when the analysis
   * has completed.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.CreateAnalysis
   */
  createAnalysis: {
    methodKind: "unary";
    input: typeof CreateAnalysisRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets an analysis.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.GetAnalysis
   */
  getAnalysis: {
    methodKind: "unary";
    input: typeof GetAnalysisRequestSchema;
    output: typeof AnalysisSchema;
  },
  /**
   * Lists analyses.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.ListAnalyses
   */
  listAnalyses: {
    methodKind: "unary";
    input: typeof ListAnalysesRequestSchema;
    output: typeof ListAnalysesResponseSchema;
  },
  /**
   * Deletes an analysis.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.DeleteAnalysis
   */
  deleteAnalysis: {
    methodKind: "unary";
    input: typeof DeleteAnalysisRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Analyzes multiple conversations in a single request.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.BulkAnalyzeConversations
   */
  bulkAnalyzeConversations: {
    methodKind: "unary";
    input: typeof BulkAnalyzeConversationsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes multiple conversations in a single request.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.BulkDeleteConversations
   */
  bulkDeleteConversations: {
    methodKind: "unary";
    input: typeof BulkDeleteConversationsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Imports conversations and processes them according to the user's
   * configuration.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.IngestConversations
   */
  ingestConversations: {
    methodKind: "unary";
    input: typeof IngestConversationsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Export insights data to a destination defined in the request body.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.ExportInsightsData
   */
  exportInsightsData: {
    methodKind: "unary";
    input: typeof ExportInsightsDataRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates an issue model.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.CreateIssueModel
   */
  createIssueModel: {
    methodKind: "unary";
    input: typeof CreateIssueModelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates an issue model.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.UpdateIssueModel
   */
  updateIssueModel: {
    methodKind: "unary";
    input: typeof UpdateIssueModelRequestSchema;
    output: typeof IssueModelSchema;
  },
  /**
   * Gets an issue model.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.GetIssueModel
   */
  getIssueModel: {
    methodKind: "unary";
    input: typeof GetIssueModelRequestSchema;
    output: typeof IssueModelSchema;
  },
  /**
   * Lists issue models.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.ListIssueModels
   */
  listIssueModels: {
    methodKind: "unary";
    input: typeof ListIssueModelsRequestSchema;
    output: typeof ListIssueModelsResponseSchema;
  },
  /**
   * Deletes an issue model.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.DeleteIssueModel
   */
  deleteIssueModel: {
    methodKind: "unary";
    input: typeof DeleteIssueModelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deploys an issue model. Returns an error if a model is already deployed.
   * An issue model can only be used in analysis after it has been deployed.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.DeployIssueModel
   */
  deployIssueModel: {
    methodKind: "unary";
    input: typeof DeployIssueModelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Undeploys an issue model.
   * An issue model can not be used in analysis after it has been undeployed.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.UndeployIssueModel
   */
  undeployIssueModel: {
    methodKind: "unary";
    input: typeof UndeployIssueModelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets an issue.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.GetIssue
   */
  getIssue: {
    methodKind: "unary";
    input: typeof GetIssueRequestSchema;
    output: typeof IssueSchema;
  },
  /**
   * Lists issues.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.ListIssues
   */
  listIssues: {
    methodKind: "unary";
    input: typeof ListIssuesRequestSchema;
    output: typeof ListIssuesResponseSchema;
  },
  /**
   * Updates an issue.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.UpdateIssue
   */
  updateIssue: {
    methodKind: "unary";
    input: typeof UpdateIssueRequestSchema;
    output: typeof IssueSchema;
  },
  /**
   * Deletes an issue.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.DeleteIssue
   */
  deleteIssue: {
    methodKind: "unary";
    input: typeof DeleteIssueRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets an issue model's statistics.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.CalculateIssueModelStats
   */
  calculateIssueModelStats: {
    methodKind: "unary";
    input: typeof CalculateIssueModelStatsRequestSchema;
    output: typeof CalculateIssueModelStatsResponseSchema;
  },
  /**
   * Creates a phrase matcher.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.CreatePhraseMatcher
   */
  createPhraseMatcher: {
    methodKind: "unary";
    input: typeof CreatePhraseMatcherRequestSchema;
    output: typeof PhraseMatcherSchema;
  },
  /**
   * Gets a phrase matcher.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.GetPhraseMatcher
   */
  getPhraseMatcher: {
    methodKind: "unary";
    input: typeof GetPhraseMatcherRequestSchema;
    output: typeof PhraseMatcherSchema;
  },
  /**
   * Lists phrase matchers.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.ListPhraseMatchers
   */
  listPhraseMatchers: {
    methodKind: "unary";
    input: typeof ListPhraseMatchersRequestSchema;
    output: typeof ListPhraseMatchersResponseSchema;
  },
  /**
   * Deletes a phrase matcher.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.DeletePhraseMatcher
   */
  deletePhraseMatcher: {
    methodKind: "unary";
    input: typeof DeletePhraseMatcherRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Updates a phrase matcher.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.UpdatePhraseMatcher
   */
  updatePhraseMatcher: {
    methodKind: "unary";
    input: typeof UpdatePhraseMatcherRequestSchema;
    output: typeof PhraseMatcherSchema;
  },
  /**
   * Gets conversation statistics.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.CalculateStats
   */
  calculateStats: {
    methodKind: "unary";
    input: typeof CalculateStatsRequestSchema;
    output: typeof CalculateStatsResponseSchema;
  },
  /**
   * Gets project-level settings.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.GetSettings
   */
  getSettings: {
    methodKind: "unary";
    input: typeof GetSettingsRequestSchema;
    output: typeof SettingsSchema;
  },
  /**
   * Updates project-level settings.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.UpdateSettings
   */
  updateSettings: {
    methodKind: "unary";
    input: typeof UpdateSettingsRequestSchema;
    output: typeof SettingsSchema;
  },
  /**
   * Creates a view.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.CreateView
   */
  createView: {
    methodKind: "unary";
    input: typeof CreateViewRequestSchema;
    output: typeof ViewSchema;
  },
  /**
   * Gets a view.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.GetView
   */
  getView: {
    methodKind: "unary";
    input: typeof GetViewRequestSchema;
    output: typeof ViewSchema;
  },
  /**
   * Lists views.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.ListViews
   */
  listViews: {
    methodKind: "unary";
    input: typeof ListViewsRequestSchema;
    output: typeof ListViewsResponseSchema;
  },
  /**
   * Updates a view.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.UpdateView
   */
  updateView: {
    methodKind: "unary";
    input: typeof UpdateViewRequestSchema;
    output: typeof ViewSchema;
  },
  /**
   * Deletes a view.
   *
   * @generated from rpc google.cloud.contactcenterinsights.v1.ContactCenterInsights.DeleteView
   */
  deleteView: {
    methodKind: "unary";
    input: typeof DeleteViewRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_contactcenterinsights_v1_contact_center_insights, 0);

