// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/retail/v2/catalog.proto (package google.cloud.retail.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { AttributeConfigLevel, Interval } from "./common_pb";
import { file_google_cloud_retail_v2_common } from "./common_pb";
import type { CompletionDataInputConfig } from "./import_config_pb";
import { file_google_cloud_retail_v2_import_config } from "./import_config_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/retail/v2/catalog.proto.
 */
export const file_google_cloud_retail_v2_catalog: GenFile = /*@__PURE__*/
  fileDesc("CiRnb29nbGUvY2xvdWQvcmV0YWlsL3YyL2NhdGFsb2cucHJvdG8SFmdvb2dsZS5jbG91ZC5yZXRhaWwudjIiXgoSUHJvZHVjdExldmVsQ29uZmlnEh4KFmluZ2VzdGlvbl9wcm9kdWN0X3R5cGUYASABKAkSKAogbWVyY2hhbnRfY2VudGVyX3Byb2R1Y3RfaWRfZmllbGQYAiABKAki9w8KEENhdGFsb2dBdHRyaWJ1dGUSEAoDa2V5GAEgASgJQgPgQQISEwoGaW5fdXNlGAkgASgIQgPgQQMSSQoEdHlwZRgKIAEoDjI2Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ2F0YWxvZ0F0dHJpYnV0ZS5BdHRyaWJ1dGVUeXBlQgPgQQMSUgoQaW5kZXhhYmxlX29wdGlvbhgFIAEoDjI4Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ2F0YWxvZ0F0dHJpYnV0ZS5JbmRleGFibGVPcHRpb24SYQoYZHluYW1pY19mYWNldGFibGVfb3B0aW9uGAYgASgOMj8uZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5DYXRhbG9nQXR0cmlidXRlLkR5bmFtaWNGYWNldGFibGVPcHRpb24SVAoRc2VhcmNoYWJsZV9vcHRpb24YByABKA4yOS5nb29nbGUuY2xvdWQucmV0YWlsLnYyLkNhdGFsb2dBdHRyaWJ1dGUuU2VhcmNoYWJsZU9wdGlvbhJfChdleGFjdF9zZWFyY2hhYmxlX29wdGlvbhgLIAEoDjI+Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ2F0YWxvZ0F0dHJpYnV0ZS5FeGFjdFNlYXJjaGFibGVPcHRpb24SVgoScmV0cmlldmFibGVfb3B0aW9uGAwgASgOMjouZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5DYXRhbG9nQXR0cmlidXRlLlJldHJpZXZhYmxlT3B0aW9uEkoKDGZhY2V0X2NvbmZpZxgNIAEoCzI0Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ2F0YWxvZ0F0dHJpYnV0ZS5GYWNldENvbmZpZxrpBQoLRmFjZXRDb25maWcSOQoPZmFjZXRfaW50ZXJ2YWxzGAEgAygLMiAuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5JbnRlcnZhbBJlChRpZ25vcmVkX2ZhY2V0X3ZhbHVlcxgCIAMoCzJHLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ2F0YWxvZ0F0dHJpYnV0ZS5GYWNldENvbmZpZy5JZ25vcmVkRmFjZXRWYWx1ZXMSYgoTbWVyZ2VkX2ZhY2V0X3ZhbHVlcxgDIAMoCzJFLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ2F0YWxvZ0F0dHJpYnV0ZS5GYWNldENvbmZpZy5NZXJnZWRGYWNldFZhbHVlElYKDG1lcmdlZF9mYWNldBgEIAEoCzJALmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ2F0YWxvZ0F0dHJpYnV0ZS5GYWNldENvbmZpZy5NZXJnZWRGYWNldBJYCg1yZXJhbmtfY29uZmlnGAUgASgLMkEuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5DYXRhbG9nQXR0cmlidXRlLkZhY2V0Q29uZmlnLlJlcmFua0NvbmZpZxqCAQoSSWdub3JlZEZhY2V0VmFsdWVzEg4KBnZhbHVlcxgBIAMoCRIuCgpzdGFydF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaOAoQTWVyZ2VkRmFjZXRWYWx1ZRIOCgZ2YWx1ZXMYASADKAkSFAoMbWVyZ2VkX3ZhbHVlGAIgASgJGicKC01lcmdlZEZhY2V0EhgKEG1lcmdlZF9mYWNldF9rZXkYASABKAkaOgoMUmVyYW5rQ29uZmlnEhQKDHJlcmFua19mYWNldBgBIAEoCBIUCgxmYWNldF92YWx1ZXMYAiADKAkiOAoNQXR0cmlidXRlVHlwZRILCgdVTktOT1dOEAASCwoHVEVYVFVBTBABEg0KCU5VTUVSSUNBTBACImIKD0luZGV4YWJsZU9wdGlvbhIgChxJTkRFWEFCTEVfT1BUSU9OX1VOU1BFQ0lGSUVEEAASFQoRSU5ERVhBQkxFX0VOQUJMRUQQARIWChJJTkRFWEFCTEVfRElTQUJMRUQQAiKBAQoWRHluYW1pY0ZhY2V0YWJsZU9wdGlvbhIoCiREWU5BTUlDX0ZBQ0VUQUJMRV9PUFRJT05fVU5TUEVDSUZJRUQQABIdChlEWU5BTUlDX0ZBQ0VUQUJMRV9FTkFCTEVEEAESHgoaRFlOQU1JQ19GQUNFVEFCTEVfRElTQUJMRUQQAiJmChBTZWFyY2hhYmxlT3B0aW9uEiEKHVNFQVJDSEFCTEVfT1BUSU9OX1VOU1BFQ0lGSUVEEAASFgoSU0VBUkNIQUJMRV9FTkFCTEVEEAESFwoTU0VBUkNIQUJMRV9ESVNBQkxFRBACIn0KFUV4YWN0U2VhcmNoYWJsZU9wdGlvbhInCiNFWEFDVF9TRUFSQ0hBQkxFX09QVElPTl9VTlNQRUNJRklFRBAAEhwKGEVYQUNUX1NFQVJDSEFCTEVfRU5BQkxFRBABEh0KGUVYQUNUX1NFQVJDSEFCTEVfRElTQUJMRUQQAiJqChFSZXRyaWV2YWJsZU9wdGlvbhIiCh5SRVRSSUVWQUJMRV9PUFRJT05fVU5TUEVDSUZJRUQQABIXChNSRVRSSUVWQUJMRV9FTkFCTEVEEAESGAoUUkVUUklFVkFCTEVfRElTQUJMRUQQAiK2AwoQQXR0cmlidXRlc0NvbmZpZxIUCgRuYW1lGAEgASgJQgbgQQLgQQUSWwoSY2F0YWxvZ19hdHRyaWJ1dGVzGAIgAygLMj8uZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5BdHRyaWJ1dGVzQ29uZmlnLkNhdGFsb2dBdHRyaWJ1dGVzRW50cnkSUQoWYXR0cmlidXRlX2NvbmZpZ19sZXZlbBgDIAEoDjIsLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQXR0cmlidXRlQ29uZmlnTGV2ZWxCA+BBAxpiChZDYXRhbG9nQXR0cmlidXRlc0VudHJ5EgsKA2tleRgBIAEoCRI3CgV2YWx1ZRgCIAEoCzIoLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ2F0YWxvZ0F0dHJpYnV0ZToCOAE6eOpBdQomcmV0YWlsLmdvb2dsZWFwaXMuY29tL0F0dHJpYnV0ZXNDb25maWcSS3Byb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9jYXRhbG9ncy97Y2F0YWxvZ30vYXR0cmlidXRlc0NvbmZpZyKZBQoQQ29tcGxldGlvbkNvbmZpZxIUCgRuYW1lGAEgASgJQgbgQQLgQQUSFgoObWF0Y2hpbmdfb3JkZXIYAiABKAkSFwoPbWF4X3N1Z2dlc3Rpb25zGAMgASgFEhkKEW1pbl9wcmVmaXhfbGVuZ3RoGAQgASgFEhUKDWF1dG9fbGVhcm5pbmcYCyABKAgSWAoYc3VnZ2VzdGlvbnNfaW5wdXRfY29uZmlnGAUgASgLMjEuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5Db21wbGV0aW9uRGF0YUlucHV0Q29uZmlnQgPgQQMSLgohbGFzdF9zdWdnZXN0aW9uc19pbXBvcnRfb3BlcmF0aW9uGAYgASgJQgPgQQMSVQoVZGVueWxpc3RfaW5wdXRfY29uZmlnGAcgASgLMjEuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5Db21wbGV0aW9uRGF0YUlucHV0Q29uZmlnQgPgQQMSKwoebGFzdF9kZW55bGlzdF9pbXBvcnRfb3BlcmF0aW9uGAggASgJQgPgQQMSVgoWYWxsb3dsaXN0X2lucHV0X2NvbmZpZxgJIAEoCzIxLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ29tcGxldGlvbkRhdGFJbnB1dENvbmZpZ0ID4EEDEiwKH2xhc3RfYWxsb3dsaXN0X2ltcG9ydF9vcGVyYXRpb24YCiABKAlCA+BBAzp46kF1CiZyZXRhaWwuZ29vZ2xlYXBpcy5jb20vQ29tcGxldGlvbkNvbmZpZxJLcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2NhdGFsb2dzL3tjYXRhbG9nfS9jb21wbGV0aW9uQ29uZmlnIuwBCgdDYXRhbG9nEhQKBG5hbWUYASABKAlCBuBBAuBBBRIcCgxkaXNwbGF5X25hbWUYAiABKAlCBuBBAuBBBRJNChRwcm9kdWN0X2xldmVsX2NvbmZpZxgEIAEoCzIqLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUHJvZHVjdExldmVsQ29uZmlnQgPgQQI6XupBWwodcmV0YWlsLmdvb2dsZWFwaXMuY29tL0NhdGFsb2cSOnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9jYXRhbG9ncy97Y2F0YWxvZ31CtwEKGmNvbS5nb29nbGUuY2xvdWQucmV0YWlsLnYyQgxDYXRhbG9nUHJvdG9QAVoyY2xvdWQuZ29vZ2xlLmNvbS9nby9yZXRhaWwvYXBpdjIvcmV0YWlscGI7cmV0YWlscGKiAgZSRVRBSUyqAhZHb29nbGUuQ2xvdWQuUmV0YWlsLlYyygIWR29vZ2xlXENsb3VkXFJldGFpbFxWMuoCGUdvb2dsZTo6Q2xvdWQ6OlJldGFpbDo6VjJiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_retail_v2_common, file_google_cloud_retail_v2_import_config, file_google_protobuf_timestamp]);

/**
 * Configures what level the product should be uploaded with regards to
 * how users will be send events and how predictions will be made.
 *
 * @generated from message google.cloud.retail.v2.ProductLevelConfig
 */
export type ProductLevelConfig = Message<"google.cloud.retail.v2.ProductLevelConfig"> & {
  /**
   * The type of [Product][google.cloud.retail.v2.Product]s allowed to be
   * ingested into the catalog. Acceptable values are:
   *
   * * `primary` (default): You can ingest
   * [Product][google.cloud.retail.v2.Product]s of all types. When
   *   ingesting a [Product][google.cloud.retail.v2.Product], its type will
   *   default to
   *   [Product.Type.PRIMARY][google.cloud.retail.v2.Product.Type.PRIMARY] if
   *   unset.
   * * `variant` (incompatible with Retail Search): You can only
   *   ingest
   *   [Product.Type.VARIANT][google.cloud.retail.v2.Product.Type.VARIANT]
   *   [Product][google.cloud.retail.v2.Product]s. This means
   *   [Product.primary_product_id][google.cloud.retail.v2.Product.primary_product_id]
   *   cannot be empty.
   *
   * If this field is set to an invalid value other than these, an
   * INVALID_ARGUMENT error is returned.
   *
   * If this field is `variant` and
   * [merchant_center_product_id_field][google.cloud.retail.v2.ProductLevelConfig.merchant_center_product_id_field]
   * is `itemGroupId`, an INVALID_ARGUMENT error is returned.
   *
   * See [Product
   * levels](https://cloud.google.com/retail/docs/catalog#product-levels)
   * for more details.
   *
   * @generated from field: string ingestion_product_type = 1;
   */
  ingestionProductType: string;

  /**
   * Which field of [Merchant Center
   * Product](/bigquery-transfer/docs/merchant-center-products-schema) should be
   * imported as [Product.id][google.cloud.retail.v2.Product.id]. Acceptable
   * values are:
   *
   * * `offerId` (default): Import `offerId` as the product ID.
   * * `itemGroupId`: Import `itemGroupId` as the product ID. Notice that Retail
   *   API will choose one item from the ones with the same `itemGroupId`, and
   *   use it to represent the item group.
   *
   * If this field is set to an invalid value other than these, an
   * INVALID_ARGUMENT error is returned.
   *
   * If this field is `itemGroupId` and
   * [ingestion_product_type][google.cloud.retail.v2.ProductLevelConfig.ingestion_product_type]
   * is `variant`, an INVALID_ARGUMENT error is returned.
   *
   * See [Product
   * levels](https://cloud.google.com/retail/docs/catalog#product-levels)
   * for more details.
   *
   * @generated from field: string merchant_center_product_id_field = 2;
   */
  merchantCenterProductIdField: string;
};

/**
 * Describes the message google.cloud.retail.v2.ProductLevelConfig.
 * Use `create(ProductLevelConfigSchema)` to create a new message.
 */
export const ProductLevelConfigSchema: GenMessage<ProductLevelConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_catalog, 0);

/**
 * Catalog level attribute config for an attribute. For example, if customers
 * want to enable/disable facet for a specific attribute.
 *
 * @generated from message google.cloud.retail.v2.CatalogAttribute
 */
export type CatalogAttribute = Message<"google.cloud.retail.v2.CatalogAttribute"> & {
  /**
   * Required. Attribute name.
   * For example: `color`, `brands`, `attributes.custom_attribute`, such as
   * `attributes.xyz`.
   * To be indexable, the attribute name can contain only alpha-numeric
   * characters and underscores. For example, an attribute named
   * `attributes.abc_xyz` can be indexed, but an attribute named
   * `attributes.abc-xyz` cannot be indexed.
   *
   * If the attribute key starts with `attributes.`, then the attribute is a
   * custom attribute. Attributes such as `brands`, `patterns`, and `title` are
   * built-in and called system attributes.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Output only. Indicates whether this attribute has been used by any
   * products. `True` if at least one [Product][google.cloud.retail.v2.Product]
   * is using this attribute in
   * [Product.attributes][google.cloud.retail.v2.Product.attributes]. Otherwise,
   * this field is `False`.
   *
   * [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] can be
   * pre-loaded by using
   * [CatalogService.AddCatalogAttribute][google.cloud.retail.v2.CatalogService.AddCatalogAttribute],
   * [CatalogService.ImportCatalogAttributes][], or
   * [CatalogService.UpdateAttributesConfig][google.cloud.retail.v2.CatalogService.UpdateAttributesConfig]
   * APIs. This field is `False` for pre-loaded
   * [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute]s.
   *
   * Only pre-loaded [catalog
   * attributes][google.cloud.retail.v2.CatalogAttribute] that are neither in
   * use by products nor predefined can be deleted. [Catalog
   * attributes][google.cloud.retail.v2.CatalogAttribute] that are
   * either in use by products or are predefined attributes cannot be deleted;
   * however, their configuration properties will reset to default values upon
   * removal request.
   *
   * After catalog changes, it takes about 10 minutes for this field to update.
   *
   * @generated from field: bool in_use = 9;
   */
  inUse: boolean;

  /**
   * Output only. The type of this attribute. This is derived from the attribute
   * in [Product.attributes][google.cloud.retail.v2.Product.attributes].
   *
   * @generated from field: google.cloud.retail.v2.CatalogAttribute.AttributeType type = 10;
   */
  type: CatalogAttribute_AttributeType;

  /**
   * When
   * [AttributesConfig.attribute_config_level][google.cloud.retail.v2.AttributesConfig.attribute_config_level]
   * is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values
   * are indexed so that it can be filtered, faceted, or boosted in
   * [SearchService.Search][google.cloud.retail.v2.SearchService.Search].
   *
   * Must be specified when
   * [AttributesConfig.attribute_config_level][google.cloud.retail.v2.AttributesConfig.attribute_config_level]
   * is CATALOG_LEVEL_ATTRIBUTE_CONFIG, otherwise throws INVALID_FORMAT error.
   *
   * @generated from field: google.cloud.retail.v2.CatalogAttribute.IndexableOption indexable_option = 5;
   */
  indexableOption: CatalogAttribute_IndexableOption;

  /**
   * If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic
   * facet. Could only be DYNAMIC_FACETABLE_DISABLED if
   * [CatalogAttribute.indexable_option][google.cloud.retail.v2.CatalogAttribute.indexable_option]
   * is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * Must be specified, otherwise throws INVALID_FORMAT error.
   *
   * @generated from field: google.cloud.retail.v2.CatalogAttribute.DynamicFacetableOption dynamic_facetable_option = 6;
   */
  dynamicFacetableOption: CatalogAttribute_DynamicFacetableOption;

  /**
   * When
   * [AttributesConfig.attribute_config_level][google.cloud.retail.v2.AttributesConfig.attribute_config_level]
   * is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values
   * are searchable by text queries in
   * [SearchService.Search][google.cloud.retail.v2.SearchService.Search].
   *
   * If SEARCHABLE_ENABLED but attribute type is numerical, attribute values
   * will not be searchable by text queries in
   * [SearchService.Search][google.cloud.retail.v2.SearchService.Search], as
   * there are no text values associated to numerical attributes.
   *
   * Must be specified, when
   * [AttributesConfig.attribute_config_level][google.cloud.retail.v2.AttributesConfig.attribute_config_level]
   * is CATALOG_LEVEL_ATTRIBUTE_CONFIG, otherwise throws INVALID_FORMAT error.
   *
   * @generated from field: google.cloud.retail.v2.CatalogAttribute.SearchableOption searchable_option = 7;
   */
  searchableOption: CatalogAttribute_SearchableOption;

  /**
   * If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable.
   * This property only applies to textual custom attributes and requires
   * indexable set to enabled to enable exact-searchable. If unset, the server
   * behavior defaults to
   * [EXACT_SEARCHABLE_DISABLED][google.cloud.retail.v2.CatalogAttribute.ExactSearchableOption.EXACT_SEARCHABLE_DISABLED].
   *
   * @generated from field: google.cloud.retail.v2.CatalogAttribute.ExactSearchableOption exact_searchable_option = 11;
   */
  exactSearchableOption: CatalogAttribute_ExactSearchableOption;

  /**
   * If RETRIEVABLE_ENABLED, attribute values are retrievable in the search
   * results. If unset, the server behavior defaults to
   * [RETRIEVABLE_DISABLED][google.cloud.retail.v2.CatalogAttribute.RetrievableOption.RETRIEVABLE_DISABLED].
   *
   * @generated from field: google.cloud.retail.v2.CatalogAttribute.RetrievableOption retrievable_option = 12;
   */
  retrievableOption: CatalogAttribute_RetrievableOption;

  /**
   * Contains facet options.
   *
   * @generated from field: google.cloud.retail.v2.CatalogAttribute.FacetConfig facet_config = 13;
   */
  facetConfig?: CatalogAttribute_FacetConfig;
};

/**
 * Describes the message google.cloud.retail.v2.CatalogAttribute.
 * Use `create(CatalogAttributeSchema)` to create a new message.
 */
export const CatalogAttributeSchema: GenMessage<CatalogAttribute> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_catalog, 1);

/**
 * Possible options for the facet that corresponds to the current attribute
 * config.
 *
 * @generated from message google.cloud.retail.v2.CatalogAttribute.FacetConfig
 */
export type CatalogAttribute_FacetConfig = Message<"google.cloud.retail.v2.CatalogAttribute.FacetConfig"> & {
  /**
   * If you don't set the facet
   * [SearchRequest.FacetSpec.FacetKey.intervals][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.intervals]
   * in the request to a numerical attribute, then we use the computed
   * intervals with rounded bounds obtained from all its product numerical
   * attribute values. The computed intervals might not be ideal for some
   * attributes. Therefore, we give you the option to overwrite them with the
   * facet_intervals field. The maximum of facet intervals per
   * [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] is 40. Each
   * interval must have a lower bound or an upper bound. If both bounds are
   * provided, then the lower bound must be smaller or equal than the upper
   * bound.
   *
   * @generated from field: repeated google.cloud.retail.v2.Interval facet_intervals = 1;
   */
  facetIntervals: Interval[];

  /**
   * Each instance represents a list of attribute values to ignore as facet
   * values for a specific time range. The maximum number of instances per
   * [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] is 25.
   *
   * @generated from field: repeated google.cloud.retail.v2.CatalogAttribute.FacetConfig.IgnoredFacetValues ignored_facet_values = 2;
   */
  ignoredFacetValues: CatalogAttribute_FacetConfig_IgnoredFacetValues[];

  /**
   * Each instance replaces a list of facet values by a merged facet
   * value. If a facet value is not in any list, then it will stay the same.
   * To avoid conflicts, only paths of length 1 are accepted. In other words,
   * if "dark_blue" merged into "BLUE", then the latter can't merge into
   * "blues" because this would create a path of length 2. The maximum number
   * of instances of MergedFacetValue per
   * [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] is 100. This
   * feature is available only for textual custom attributes.
   *
   * @generated from field: repeated google.cloud.retail.v2.CatalogAttribute.FacetConfig.MergedFacetValue merged_facet_values = 3;
   */
  mergedFacetValues: CatalogAttribute_FacetConfig_MergedFacetValue[];

  /**
   * Use this field only if you want to merge a facet key into another facet
   * key.
   *
   * @generated from field: google.cloud.retail.v2.CatalogAttribute.FacetConfig.MergedFacet merged_facet = 4;
   */
  mergedFacet?: CatalogAttribute_FacetConfig_MergedFacet;

  /**
   * Set this field only if you want to rerank based on facet values engaged
   * by the user for the current key. This option is only possible for custom
   * facetable textual keys.
   *
   * @generated from field: google.cloud.retail.v2.CatalogAttribute.FacetConfig.RerankConfig rerank_config = 5;
   */
  rerankConfig?: CatalogAttribute_FacetConfig_RerankConfig;
};

/**
 * Describes the message google.cloud.retail.v2.CatalogAttribute.FacetConfig.
 * Use `create(CatalogAttribute_FacetConfigSchema)` to create a new message.
 */
export const CatalogAttribute_FacetConfigSchema: GenMessage<CatalogAttribute_FacetConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_catalog, 1, 0);

/**
 * [Facet values][google.cloud.retail.v2.SearchResponse.Facet.values] to
 * ignore on [facets][google.cloud.retail.v2.SearchResponse.Facet] during
 * the specified time range for the given
 * [SearchResponse.Facet.key][google.cloud.retail.v2.SearchResponse.Facet.key]
 * attribute.
 *
 * @generated from message google.cloud.retail.v2.CatalogAttribute.FacetConfig.IgnoredFacetValues
 */
export type CatalogAttribute_FacetConfig_IgnoredFacetValues = Message<"google.cloud.retail.v2.CatalogAttribute.FacetConfig.IgnoredFacetValues"> & {
  /**
   * List of facet values to ignore for the following time range. The facet
   * values are the same as the attribute values. There is a limit of 10
   * values per instance of IgnoredFacetValues. Each value can have at most
   * 128 characters.
   *
   * @generated from field: repeated string values = 1;
   */
  values: string[];

  /**
   * Time range for the current list of facet values to ignore.
   * If multiple time ranges are specified for an facet value for the
   * current attribute, consider all of them. If both are empty, ignore
   * always. If start time and end time are set, then start time
   * must be before end time.
   * If start time is not empty and end time is empty, then will ignore
   * these facet values after the start time.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * If start time is empty and end time is not empty, then ignore these
   * facet values before end time.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.retail.v2.CatalogAttribute.FacetConfig.IgnoredFacetValues.
 * Use `create(CatalogAttribute_FacetConfig_IgnoredFacetValuesSchema)` to create a new message.
 */
export const CatalogAttribute_FacetConfig_IgnoredFacetValuesSchema: GenMessage<CatalogAttribute_FacetConfig_IgnoredFacetValues> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_catalog, 1, 0, 0);

/**
 * Replaces a set of textual facet values by the same (possibly different)
 * merged facet value. Each facet value should appear at most once as a
 * value per [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute].
 * This feature is available only for textual custom attributes.
 *
 * @generated from message google.cloud.retail.v2.CatalogAttribute.FacetConfig.MergedFacetValue
 */
export type CatalogAttribute_FacetConfig_MergedFacetValue = Message<"google.cloud.retail.v2.CatalogAttribute.FacetConfig.MergedFacetValue"> & {
  /**
   * All the facet values that are replaces by the same
   * [merged_value][google.cloud.retail.v2.CatalogAttribute.FacetConfig.MergedFacetValue.merged_value]
   * that follows. The maximum number of values per MergedFacetValue is 25.
   * Each value can have up to 128 characters.
   *
   * @generated from field: repeated string values = 1;
   */
  values: string[];

  /**
   * All the previous values are replaced by this merged facet value.
   * This merged_value must be non-empty and can have up to 128 characters.
   *
   * @generated from field: string merged_value = 2;
   */
  mergedValue: string;
};

/**
 * Describes the message google.cloud.retail.v2.CatalogAttribute.FacetConfig.MergedFacetValue.
 * Use `create(CatalogAttribute_FacetConfig_MergedFacetValueSchema)` to create a new message.
 */
export const CatalogAttribute_FacetConfig_MergedFacetValueSchema: GenMessage<CatalogAttribute_FacetConfig_MergedFacetValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_catalog, 1, 0, 1);

/**
 * The current facet key (i.e. attribute config) maps into the
 * [merged_facet_key][google.cloud.retail.v2.CatalogAttribute.FacetConfig.MergedFacet.merged_facet_key].
 * A facet key can have at most one child. The current facet key and the
 * merged facet key need both to be textual custom attributes or both
 * numerical custom attributes (same type).
 *
 * @generated from message google.cloud.retail.v2.CatalogAttribute.FacetConfig.MergedFacet
 */
export type CatalogAttribute_FacetConfig_MergedFacet = Message<"google.cloud.retail.v2.CatalogAttribute.FacetConfig.MergedFacet"> & {
  /**
   * The merged facet key should be a valid facet key that is different than
   * the facet key of the current catalog attribute. We refer this is
   * merged facet key as the child of the current catalog attribute. This
   * merged facet key can't be a parent of another facet key (i.e. no
   * directed path of length 2). This merged facet key needs to be either a
   * textual custom attribute or a numerical custom attribute.
   *
   * @generated from field: string merged_facet_key = 1;
   */
  mergedFacetKey: string;
};

/**
 * Describes the message google.cloud.retail.v2.CatalogAttribute.FacetConfig.MergedFacet.
 * Use `create(CatalogAttribute_FacetConfig_MergedFacetSchema)` to create a new message.
 */
export const CatalogAttribute_FacetConfig_MergedFacetSchema: GenMessage<CatalogAttribute_FacetConfig_MergedFacet> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_catalog, 1, 0, 2);

/**
 * Options to rerank based on facet values engaged by the user for the
 * current key. That key needs to be a custom textual key and facetable.
 * To use this control, you also need to pass all the facet keys engaged by
 * the user in the request using the field [SearchRequest.FacetSpec]. In
 * particular, if you don't pass the facet keys engaged that you want to
 * rerank on, this control won't be effective. Moreover, to obtain better
 * results, the facet values that you want to rerank on should be close to
 * English (ideally made of words, underscores, and spaces).
 *
 * @generated from message google.cloud.retail.v2.CatalogAttribute.FacetConfig.RerankConfig
 */
export type CatalogAttribute_FacetConfig_RerankConfig = Message<"google.cloud.retail.v2.CatalogAttribute.FacetConfig.RerankConfig"> & {
  /**
   * If set to true, then we also rerank the dynamic facets based on the
   * facet values engaged by the user for the current attribute key during
   * serving.
   *
   * @generated from field: bool rerank_facet = 1;
   */
  rerankFacet: boolean;

  /**
   * If empty, rerank on all facet values for the current key. Otherwise,
   * will rerank on the facet values from this list only.
   *
   * @generated from field: repeated string facet_values = 2;
   */
  facetValues: string[];
};

/**
 * Describes the message google.cloud.retail.v2.CatalogAttribute.FacetConfig.RerankConfig.
 * Use `create(CatalogAttribute_FacetConfig_RerankConfigSchema)` to create a new message.
 */
export const CatalogAttribute_FacetConfig_RerankConfigSchema: GenMessage<CatalogAttribute_FacetConfig_RerankConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_catalog, 1, 0, 3);

/**
 * The type of an attribute.
 *
 * @generated from enum google.cloud.retail.v2.CatalogAttribute.AttributeType
 */
export enum CatalogAttribute_AttributeType {
  /**
   * The type of the attribute is unknown.
   *
   * Used when type cannot be derived from attribute that is not
   * [in_use][google.cloud.retail.v2.CatalogAttribute.in_use].
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Textual attribute.
   *
   * @generated from enum value: TEXTUAL = 1;
   */
  TEXTUAL = 1,

  /**
   * Numerical attribute.
   *
   * @generated from enum value: NUMERICAL = 2;
   */
  NUMERICAL = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.CatalogAttribute.AttributeType.
 */
export const CatalogAttribute_AttributeTypeSchema: GenEnum<CatalogAttribute_AttributeType> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_catalog, 1, 0);

/**
 * The status of the indexable option of a catalog attribute.
 *
 * @generated from enum google.cloud.retail.v2.CatalogAttribute.IndexableOption
 */
export enum CatalogAttribute_IndexableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: INDEXABLE_OPTION_UNSPECIFIED = 0;
   */
  INDEXABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Indexable option enabled for an attribute.
   *
   * @generated from enum value: INDEXABLE_ENABLED = 1;
   */
  INDEXABLE_ENABLED = 1,

  /**
   * Indexable option disabled for an attribute.
   *
   * @generated from enum value: INDEXABLE_DISABLED = 2;
   */
  INDEXABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.CatalogAttribute.IndexableOption.
 */
export const CatalogAttribute_IndexableOptionSchema: GenEnum<CatalogAttribute_IndexableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_catalog, 1, 1);

/**
 * The status of the dynamic facetable option of a catalog attribute.
 *
 * @generated from enum google.cloud.retail.v2.CatalogAttribute.DynamicFacetableOption
 */
export enum CatalogAttribute_DynamicFacetableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: DYNAMIC_FACETABLE_OPTION_UNSPECIFIED = 0;
   */
  DYNAMIC_FACETABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Dynamic facetable option enabled for an attribute.
   *
   * @generated from enum value: DYNAMIC_FACETABLE_ENABLED = 1;
   */
  DYNAMIC_FACETABLE_ENABLED = 1,

  /**
   * Dynamic facetable option disabled for an attribute.
   *
   * @generated from enum value: DYNAMIC_FACETABLE_DISABLED = 2;
   */
  DYNAMIC_FACETABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.CatalogAttribute.DynamicFacetableOption.
 */
export const CatalogAttribute_DynamicFacetableOptionSchema: GenEnum<CatalogAttribute_DynamicFacetableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_catalog, 1, 2);

/**
 * The status of the searchable option of a catalog attribute.
 *
 * @generated from enum google.cloud.retail.v2.CatalogAttribute.SearchableOption
 */
export enum CatalogAttribute_SearchableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: SEARCHABLE_OPTION_UNSPECIFIED = 0;
   */
  SEARCHABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Searchable option enabled for an attribute.
   *
   * @generated from enum value: SEARCHABLE_ENABLED = 1;
   */
  SEARCHABLE_ENABLED = 1,

  /**
   * Searchable option disabled for an attribute.
   *
   * @generated from enum value: SEARCHABLE_DISABLED = 2;
   */
  SEARCHABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.CatalogAttribute.SearchableOption.
 */
export const CatalogAttribute_SearchableOptionSchema: GenEnum<CatalogAttribute_SearchableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_catalog, 1, 3);

/**
 * The status of the exact-searchable option of a catalog attribute.
 *
 * @generated from enum google.cloud.retail.v2.CatalogAttribute.ExactSearchableOption
 */
export enum CatalogAttribute_ExactSearchableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: EXACT_SEARCHABLE_OPTION_UNSPECIFIED = 0;
   */
  EXACT_SEARCHABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Exact searchable option enabled for an attribute.
   *
   * @generated from enum value: EXACT_SEARCHABLE_ENABLED = 1;
   */
  EXACT_SEARCHABLE_ENABLED = 1,

  /**
   * Exact searchable option disabled for an attribute.
   *
   * @generated from enum value: EXACT_SEARCHABLE_DISABLED = 2;
   */
  EXACT_SEARCHABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.CatalogAttribute.ExactSearchableOption.
 */
export const CatalogAttribute_ExactSearchableOptionSchema: GenEnum<CatalogAttribute_ExactSearchableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_catalog, 1, 4);

/**
 * The status of the retrievable option of a catalog attribute.
 *
 * @generated from enum google.cloud.retail.v2.CatalogAttribute.RetrievableOption
 */
export enum CatalogAttribute_RetrievableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: RETRIEVABLE_OPTION_UNSPECIFIED = 0;
   */
  RETRIEVABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Retrievable option enabled for an attribute.
   *
   * @generated from enum value: RETRIEVABLE_ENABLED = 1;
   */
  RETRIEVABLE_ENABLED = 1,

  /**
   * Retrievable option disabled for an attribute.
   *
   * @generated from enum value: RETRIEVABLE_DISABLED = 2;
   */
  RETRIEVABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.CatalogAttribute.RetrievableOption.
 */
export const CatalogAttribute_RetrievableOptionSchema: GenEnum<CatalogAttribute_RetrievableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_catalog, 1, 5);

/**
 * Catalog level attribute config.
 *
 * @generated from message google.cloud.retail.v2.AttributesConfig
 */
export type AttributesConfig = Message<"google.cloud.retail.v2.AttributesConfig"> & {
  /**
   * Required. Immutable. The fully qualified resource name of the attribute
   * config. Format: `projects/*\/locations/*\/catalogs/*\/attributesConfig`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Enable attribute(s) config at catalog level.
   * For example, indexable, dynamic_facetable, or searchable for each
   * attribute.
   *
   * The key is catalog attribute's name.
   * For example: `color`, `brands`, `attributes.custom_attribute`, such as
   * `attributes.xyz`.
   *
   * The maximum number of catalog attributes allowed in a request is 1000.
   *
   * @generated from field: map<string, google.cloud.retail.v2.CatalogAttribute> catalog_attributes = 2;
   */
  catalogAttributes: { [key: string]: CatalogAttribute };

  /**
   * Output only. The
   * [AttributeConfigLevel][google.cloud.retail.v2.AttributeConfigLevel] used
   * for this catalog.
   *
   * @generated from field: google.cloud.retail.v2.AttributeConfigLevel attribute_config_level = 3;
   */
  attributeConfigLevel: AttributeConfigLevel;
};

/**
 * Describes the message google.cloud.retail.v2.AttributesConfig.
 * Use `create(AttributesConfigSchema)` to create a new message.
 */
export const AttributesConfigSchema: GenMessage<AttributesConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_catalog, 2);

/**
 * Catalog level autocomplete config for customers to customize autocomplete
 * feature's settings.
 *
 * @generated from message google.cloud.retail.v2.CompletionConfig
 */
export type CompletionConfig = Message<"google.cloud.retail.v2.CompletionConfig"> & {
  /**
   * Required. Immutable. Fully qualified name
   * `projects/*\/locations/*\/catalogs/*\/completionConfig`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Specifies the matching order for autocomplete suggestions, e.g., a query
   * consisting of 'sh' with 'out-of-order' specified would suggest "women's
   * shoes", whereas a query of 'red s' with 'exact-prefix' specified would
   * suggest "red shoes". Currently supported values:
   *
   * * 'out-of-order'
   * * 'exact-prefix'
   *
   * Default value: 'exact-prefix'.
   *
   * @generated from field: string matching_order = 2;
   */
  matchingOrder: string;

  /**
   * The maximum number of autocomplete suggestions returned per term. Default
   * value is 20. If left unset or set to 0, then will fallback to default
   * value.
   *
   * Value range is 1 to 20.
   *
   * @generated from field: int32 max_suggestions = 3;
   */
  maxSuggestions: number;

  /**
   * The minimum number of characters needed to be typed in order to get
   * suggestions. Default value is 2. If left unset or set to 0, then will
   * fallback to default value.
   *
   * Value range is 1 to 20.
   *
   * @generated from field: int32 min_prefix_length = 4;
   */
  minPrefixLength: number;

  /**
   * If set to true, the auto learning function is enabled. Auto learning uses
   * user data to generate suggestions using ML techniques. Default value is
   * false. Only after enabling auto learning can users use `cloud-retail`
   * data in
   * [CompleteQueryRequest][google.cloud.retail.v2.CompleteQueryRequest].
   *
   * @generated from field: bool auto_learning = 11;
   */
  autoLearning: boolean;

  /**
   * Output only. The source data for the latest import of the autocomplete
   * suggestion phrases.
   *
   * @generated from field: google.cloud.retail.v2.CompletionDataInputConfig suggestions_input_config = 5;
   */
  suggestionsInputConfig?: CompletionDataInputConfig;

  /**
   * Output only. Name of the LRO corresponding to the latest suggestion terms
   * list import.
   *
   * Can use [GetOperation][google.longrunning.Operations.GetOperation] API
   * method to retrieve the latest state of the Long Running Operation.
   *
   * @generated from field: string last_suggestions_import_operation = 6;
   */
  lastSuggestionsImportOperation: string;

  /**
   * Output only. The source data for the latest import of the autocomplete
   * denylist phrases.
   *
   * @generated from field: google.cloud.retail.v2.CompletionDataInputConfig denylist_input_config = 7;
   */
  denylistInputConfig?: CompletionDataInputConfig;

  /**
   * Output only. Name of the LRO corresponding to the latest denylist import.
   *
   * Can use [GetOperation][google.longrunning.Operations.GetOperation] API to
   * retrieve the latest state of the Long Running Operation.
   *
   * @generated from field: string last_denylist_import_operation = 8;
   */
  lastDenylistImportOperation: string;

  /**
   * Output only. The source data for the latest import of the autocomplete
   * allowlist phrases.
   *
   * @generated from field: google.cloud.retail.v2.CompletionDataInputConfig allowlist_input_config = 9;
   */
  allowlistInputConfig?: CompletionDataInputConfig;

  /**
   * Output only. Name of the LRO corresponding to the latest allowlist import.
   *
   * Can use [GetOperation][google.longrunning.Operations.GetOperation] API to
   * retrieve the latest state of the Long Running Operation.
   *
   * @generated from field: string last_allowlist_import_operation = 10;
   */
  lastAllowlistImportOperation: string;
};

/**
 * Describes the message google.cloud.retail.v2.CompletionConfig.
 * Use `create(CompletionConfigSchema)` to create a new message.
 */
export const CompletionConfigSchema: GenMessage<CompletionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_catalog, 3);

/**
 * The catalog configuration.
 *
 * @generated from message google.cloud.retail.v2.Catalog
 */
export type Catalog = Message<"google.cloud.retail.v2.Catalog"> & {
  /**
   * Required. Immutable. The fully qualified resource name of the catalog.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Immutable. The catalog display name.
   *
   * This field must be a UTF-8 encoded string with a length limit of 128
   * characters. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Required. The product level configuration.
   *
   * @generated from field: google.cloud.retail.v2.ProductLevelConfig product_level_config = 4;
   */
  productLevelConfig?: ProductLevelConfig;
};

/**
 * Describes the message google.cloud.retail.v2.Catalog.
 * Use `create(CatalogSchema)` to create a new message.
 */
export const CatalogSchema: GenMessage<Catalog> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_catalog, 4);

