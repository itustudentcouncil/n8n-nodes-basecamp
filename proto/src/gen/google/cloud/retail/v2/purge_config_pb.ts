// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/retail/v2/purge_config.proto (package google.cloud.retail.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/retail/v2/purge_config.proto.
 */
export const file_google_cloud_retail_v2_purge_config: GenFile = /*@__PURE__*/
  fileDesc("Cilnb29nbGUvY2xvdWQvcmV0YWlsL3YyL3B1cmdlX2NvbmZpZy5wcm90bxIWZ29vZ2xlLmNsb3VkLnJldGFpbC52MiIPCg1QdXJnZU1ldGFkYXRhIqcBChVQdXJnZVByb2R1Y3RzTWV0YWRhdGESLwoLY3JlYXRlX3RpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC3VwZGF0ZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIVCg1zdWNjZXNzX2NvdW50GAMgASgDEhUKDWZhaWx1cmVfY291bnQYBCABKAMicAoUUHVyZ2VQcm9kdWN0c1JlcXVlc3QSNAoGcGFyZW50GAEgASgJQiTgQQL6QR4KHHJldGFpbC5nb29nbGVhcGlzLmNvbS9CcmFuY2gSEwoGZmlsdGVyGAIgASgJQgPgQQISDQoFZm9yY2UYAyABKAgiZgoVUHVyZ2VQcm9kdWN0c1Jlc3BvbnNlEhMKC3B1cmdlX2NvdW50GAEgASgDEjgKDHB1cmdlX3NhbXBsZRgCIAMoCUIi+kEfCh1yZXRhaWwuZ29vZ2xlYXBpcy5jb20vUHJvZHVjdCJzChZQdXJnZVVzZXJFdmVudHNSZXF1ZXN0EjUKBnBhcmVudBgBIAEoCUIl4EEC+kEfCh1yZXRhaWwuZ29vZ2xlYXBpcy5jb20vQ2F0YWxvZxITCgZmaWx0ZXIYAiABKAlCA+BBAhINCgVmb3JjZRgDIAEoCCI2ChdQdXJnZVVzZXJFdmVudHNSZXNwb25zZRIbChNwdXJnZWRfZXZlbnRzX2NvdW50GAEgASgDQrsBChpjb20uZ29vZ2xlLmNsb3VkLnJldGFpbC52MkIQUHVyZ2VDb25maWdQcm90b1ABWjJjbG91ZC5nb29nbGUuY29tL2dvL3JldGFpbC9hcGl2Mi9yZXRhaWxwYjtyZXRhaWxwYqICBlJFVEFJTKoCFkdvb2dsZS5DbG91ZC5SZXRhaWwuVjLKAhZHb29nbGVcQ2xvdWRcUmV0YWlsXFYy6gIZR29vZ2xlOjpDbG91ZDo6UmV0YWlsOjpWMmIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_timestamp]);

/**
 * Metadata related to the progress of the Purge operation.
 * This will be returned by the google.longrunning.Operation.metadata field.
 *
 * @generated from message google.cloud.retail.v2.PurgeMetadata
 */
export type PurgeMetadata = Message<"google.cloud.retail.v2.PurgeMetadata"> & {
};

/**
 * Describes the message google.cloud.retail.v2.PurgeMetadata.
 * Use `create(PurgeMetadataSchema)` to create a new message.
 */
export const PurgeMetadataSchema: GenMessage<PurgeMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_purge_config, 0);

/**
 * Metadata related to the progress of the PurgeProducts operation.
 * This will be returned by the google.longrunning.Operation.metadata field.
 *
 * @generated from message google.cloud.retail.v2.PurgeProductsMetadata
 */
export type PurgeProductsMetadata = Message<"google.cloud.retail.v2.PurgeProductsMetadata"> & {
  /**
   * Operation create time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Operation last update time. If the operation is done, this is also the
   * finish time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 2;
   */
  updateTime?: Timestamp;

  /**
   * Count of entries that were deleted successfully.
   *
   * @generated from field: int64 success_count = 3;
   */
  successCount: bigint;

  /**
   * Count of entries that encountered errors while processing.
   *
   * @generated from field: int64 failure_count = 4;
   */
  failureCount: bigint;
};

/**
 * Describes the message google.cloud.retail.v2.PurgeProductsMetadata.
 * Use `create(PurgeProductsMetadataSchema)` to create a new message.
 */
export const PurgeProductsMetadataSchema: GenMessage<PurgeProductsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_purge_config, 1);

/**
 * Request message for PurgeProducts method.
 *
 * @generated from message google.cloud.retail.v2.PurgeProductsRequest
 */
export type PurgeProductsRequest = Message<"google.cloud.retail.v2.PurgeProductsRequest"> & {
  /**
   * Required. The resource name of the branch under which the products are
   * created. The format is
   * `projects/${projectId}/locations/global/catalogs/${catalogId}/branches/${branchId}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The filter string to specify the products to be deleted with a
   * length limit of 5,000 characters.
   *
   * Empty string filter is not allowed. "*" implies delete all items in a
   * branch.
   *
   * The eligible fields for filtering are:
   *
   * * `availability`: Double quoted
   * [Product.availability][google.cloud.retail.v2.Product.availability] string.
   * * `create_time` : in ISO 8601 "zulu" format.
   *
   * Supported syntax:
   *
   * * Comparators (">", "<", ">=", "<=", "=").
   *   Examples:
   *   * create_time <= "2015-02-13T17:05:46Z"
   *   * availability = "IN_STOCK"
   *
   * * Conjunctions ("AND")
   *   Examples:
   *   * create_time <= "2015-02-13T17:05:46Z" AND availability = "PREORDER"
   *
   * * Disjunctions ("OR")
   *   Examples:
   *   * create_time <= "2015-02-13T17:05:46Z" OR availability = "IN_STOCK"
   *
   * * Can support nested queries.
   *   Examples:
   *   * (create_time <= "2015-02-13T17:05:46Z" AND availability = "PREORDER")
   *   OR (create_time >= "2015-02-14T13:03:32Z" AND availability = "IN_STOCK")
   *
   * * Filter Limits:
   *   * Filter should not contain more than 6 conditions.
   *   * Max nesting depth should not exceed 2 levels.
   *
   * Examples queries:
   * * Delete back order products created before a timestamp.
   *   create_time <= "2015-02-13T17:05:46Z" OR availability = "BACKORDER"
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Actually perform the purge.
   * If `force` is set to false, the method will return the expected purge count
   * without deleting any products.
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.retail.v2.PurgeProductsRequest.
 * Use `create(PurgeProductsRequestSchema)` to create a new message.
 */
export const PurgeProductsRequestSchema: GenMessage<PurgeProductsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_purge_config, 2);

/**
 * Response of the PurgeProductsRequest. If the long running operation is
 * successfully done, then this message is returned by the
 * google.longrunning.Operations.response field.
 *
 * @generated from message google.cloud.retail.v2.PurgeProductsResponse
 */
export type PurgeProductsResponse = Message<"google.cloud.retail.v2.PurgeProductsResponse"> & {
  /**
   * The total count of products purged as a result of the operation.
   *
   * @generated from field: int64 purge_count = 1;
   */
  purgeCount: bigint;

  /**
   * A sample of the product names that will be deleted.
   * Only populated if `force` is set to false. A max of 100 names will be
   * returned and the names are chosen at random.
   *
   * @generated from field: repeated string purge_sample = 2;
   */
  purgeSample: string[];
};

/**
 * Describes the message google.cloud.retail.v2.PurgeProductsResponse.
 * Use `create(PurgeProductsResponseSchema)` to create a new message.
 */
export const PurgeProductsResponseSchema: GenMessage<PurgeProductsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_purge_config, 3);

/**
 * Request message for PurgeUserEvents method.
 *
 * @generated from message google.cloud.retail.v2.PurgeUserEventsRequest
 */
export type PurgeUserEventsRequest = Message<"google.cloud.retail.v2.PurgeUserEventsRequest"> & {
  /**
   * Required. The resource name of the catalog under which the events are
   * created. The format is
   * `projects/${projectId}/locations/global/catalogs/${catalogId}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The filter string to specify the events to be deleted with a
   * length limit of 5,000 characters. Empty string filter is not allowed. The
   * eligible fields for filtering are:
   *
   * * `eventType`: Double quoted
   * [UserEvent.event_type][google.cloud.retail.v2.UserEvent.event_type] string.
   * * `eventTime`: in ISO 8601 "zulu" format.
   * * `visitorId`: Double quoted string. Specifying this will delete all
   *   events associated with a visitor.
   * * `userId`: Double quoted string. Specifying this will delete all events
   *   associated with a user.
   *
   * Examples:
   *
   * * Deleting all events in a time range:
   *   `eventTime > "2012-04-23T18:25:43.511Z"
   *   eventTime < "2012-04-23T18:30:43.511Z"`
   * * Deleting specific eventType in time range:
   *   `eventTime > "2012-04-23T18:25:43.511Z" eventType = "detail-page-view"`
   * * Deleting all events for a specific visitor:
   *   `visitorId = "visitor1024"`
   *
   * The filtering fields are assumed to have an implicit AND.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Actually perform the purge.
   * If `force` is set to false, the method will return the expected purge count
   * without deleting any user events.
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.retail.v2.PurgeUserEventsRequest.
 * Use `create(PurgeUserEventsRequestSchema)` to create a new message.
 */
export const PurgeUserEventsRequestSchema: GenMessage<PurgeUserEventsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_purge_config, 4);

/**
 * Response of the PurgeUserEventsRequest. If the long running operation is
 * successfully done, then this message is returned by the
 * google.longrunning.Operations.response field.
 *
 * @generated from message google.cloud.retail.v2.PurgeUserEventsResponse
 */
export type PurgeUserEventsResponse = Message<"google.cloud.retail.v2.PurgeUserEventsResponse"> & {
  /**
   * The total count of events purged as a result of the operation.
   *
   * @generated from field: int64 purged_events_count = 1;
   */
  purgedEventsCount: bigint;
};

/**
 * Describes the message google.cloud.retail.v2.PurgeUserEventsResponse.
 * Use `create(PurgeUserEventsResponseSchema)` to create a new message.
 */
export const PurgeUserEventsResponseSchema: GenMessage<PurgeUserEventsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_purge_config, 5);

