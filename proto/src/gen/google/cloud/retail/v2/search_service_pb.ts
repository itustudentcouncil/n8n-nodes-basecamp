// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/retail/v2/search_service.proto (package google.cloud.retail.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Interval, UserInfo } from "./common_pb";
import { file_google_cloud_retail_v2_common } from "./common_pb";
import type { Product } from "./product_pb";
import { file_google_cloud_retail_v2_product } from "./product_pb";
import type { FieldMask, Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/retail/v2/search_service.proto.
 */
export const file_google_cloud_retail_v2_search_service: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvY2xvdWQvcmV0YWlsL3YyL3NlYXJjaF9zZXJ2aWNlLnByb3RvEhZnb29nbGUuY2xvdWQucmV0YWlsLnYyIr4TCg1TZWFyY2hSZXF1ZXN0EhYKCXBsYWNlbWVudBgBIAEoCUID4EECEjEKBmJyYW5jaBgCIAEoCUIh+kEeChxyZXRhaWwuZ29vZ2xlYXBpcy5jb20vQnJhbmNoEg0KBXF1ZXJ5GAMgASgJEhcKCnZpc2l0b3JfaWQYBCABKAlCA+BBAhIzCgl1c2VyX2luZm8YBSABKAsyIC5nb29nbGUuY2xvdWQucmV0YWlsLnYyLlVzZXJJbmZvEhEKCXBhZ2Vfc2l6ZRgHIAEoBRISCgpwYWdlX3Rva2VuGAggASgJEg4KBm9mZnNldBgJIAEoBRIOCgZmaWx0ZXIYCiABKAkSGAoQY2Fub25pY2FsX2ZpbHRlchgcIAEoCRIQCghvcmRlcl9ieRgLIAEoCRJECgtmYWNldF9zcGVjcxgMIAMoCzIvLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVxdWVzdC5GYWNldFNwZWMSVgoSZHluYW1pY19mYWNldF9zcGVjGBUgASgLMjYuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5TZWFyY2hSZXF1ZXN0LkR5bmFtaWNGYWNldFNwZWNCAhgBEkMKCmJvb3N0X3NwZWMYDSABKAsyLy5nb29nbGUuY2xvdWQucmV0YWlsLnYyLlNlYXJjaFJlcXVlc3QuQm9vc3RTcGVjElYKFHF1ZXJ5X2V4cGFuc2lvbl9zcGVjGA4gASgLMjguZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5TZWFyY2hSZXF1ZXN0LlF1ZXJ5RXhwYW5zaW9uU3BlYxIbChN2YXJpYW50X3JvbGx1cF9rZXlzGBEgAygJEhcKD3BhZ2VfY2F0ZWdvcmllcxgXIAMoCRJFCgtzZWFyY2hfbW9kZRgfIAEoDjIwLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVxdWVzdC5TZWFyY2hNb2RlElcKFHBlcnNvbmFsaXphdGlvbl9zcGVjGCAgASgLMjkuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5TZWFyY2hSZXF1ZXN0LlBlcnNvbmFsaXphdGlvblNwZWMSQQoGbGFiZWxzGCIgAygLMjEuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5TZWFyY2hSZXF1ZXN0LkxhYmVsc0VudHJ5El0KFXNwZWxsX2NvcnJlY3Rpb25fc3BlYxgjIAEoCzI5Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVxdWVzdC5TcGVsbENvcnJlY3Rpb25TcGVjSACIAQESDgoGZW50aXR5GCYgASgJGpEDCglGYWNldFNwZWMSUAoJZmFjZXRfa2V5GAEgASgLMjguZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5TZWFyY2hSZXF1ZXN0LkZhY2V0U3BlYy5GYWNldEtleUID4EECEg0KBWxpbWl0GAIgASgFEhwKFGV4Y2x1ZGVkX2ZpbHRlcl9rZXlzGAMgAygJEh8KF2VuYWJsZV9keW5hbWljX3Bvc2l0aW9uGAQgASgIGuMBCghGYWNldEtleRIQCgNrZXkYASABKAlCA+BBAhIzCglpbnRlcnZhbHMYAiADKAsyIC5nb29nbGUuY2xvdWQucmV0YWlsLnYyLkludGVydmFsEhkKEXJlc3RyaWN0ZWRfdmFsdWVzGAMgAygJEhAKCHByZWZpeGVzGAggAygJEhAKCGNvbnRhaW5zGAkgAygJEhgKEGNhc2VfaW5zZW5zaXRpdmUYCiABKAgSEAoIb3JkZXJfYnkYBCABKAkSDQoFcXVlcnkYBSABKAkSFgoOcmV0dXJuX21pbl9tYXgYCyABKAgalgEKEER5bmFtaWNGYWNldFNwZWMSSQoEbW9kZRgBIAEoDjI7Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVxdWVzdC5EeW5hbWljRmFjZXRTcGVjLk1vZGUiNwoETW9kZRIUChBNT0RFX1VOU1BFQ0lGSUVEEAASDAoIRElTQUJMRUQQARILCgdFTkFCTEVEEAIa7gEKCUJvb3N0U3BlYxJhChVjb25kaXRpb25fYm9vc3Rfc3BlY3MYASADKAsyQi5nb29nbGUuY2xvdWQucmV0YWlsLnYyLlNlYXJjaFJlcXVlc3QuQm9vc3RTcGVjLkNvbmRpdGlvbkJvb3N0U3BlYxInChpza2lwX2Jvb3N0X3NwZWNfdmFsaWRhdGlvbhgCIAEoCEgAiAEBGjYKEkNvbmRpdGlvbkJvb3N0U3BlYxIRCgljb25kaXRpb24YASABKAkSDQoFYm9vc3QYAiABKAJCHQobX3NraXBfYm9vc3Rfc3BlY192YWxpZGF0aW9uGssBChJRdWVyeUV4cGFuc2lvblNwZWMSVQoJY29uZGl0aW9uGAEgASgOMkIuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5TZWFyY2hSZXF1ZXN0LlF1ZXJ5RXhwYW5zaW9uU3BlYy5Db25kaXRpb24SHgoWcGluX3VuZXhwYW5kZWRfcmVzdWx0cxgCIAEoCCI+CglDb25kaXRpb24SGQoVQ09ORElUSU9OX1VOU1BFQ0lGSUVEEAASDAoIRElTQUJMRUQQARIICgRBVVRPEAMamQEKE1BlcnNvbmFsaXphdGlvblNwZWMSTAoEbW9kZRgBIAEoDjI+Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVxdWVzdC5QZXJzb25hbGl6YXRpb25TcGVjLk1vZGUiNAoETW9kZRIUChBNT0RFX1VOU1BFQ0lGSUVEEAASCAoEQVVUTxABEgwKCERJU0FCTEVEEAIaoAEKE1NwZWxsQ29ycmVjdGlvblNwZWMSTAoEbW9kZRgBIAEoDjI+Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVxdWVzdC5TcGVsbENvcnJlY3Rpb25TcGVjLk1vZGUiOwoETW9kZRIUChBNT0RFX1VOU1BFQ0lGSUVEEAASEwoPU1VHR0VTVElPTl9PTkxZEAESCAoEQVVUTxACGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiWwoKU2VhcmNoTW9kZRIbChdTRUFSQ0hfTU9ERV9VTlNQRUNJRklFRBAAEhcKE1BST0RVQ1RfU0VBUkNIX09OTFkQARIXChNGQUNFVEVEX1NFQVJDSF9PTkxZEAJCGAoWX3NwZWxsX2NvcnJlY3Rpb25fc3BlYyKaCwoOU2VhcmNoUmVzcG9uc2USRAoHcmVzdWx0cxgBIAMoCzIzLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVzcG9uc2UuU2VhcmNoUmVzdWx0EjwKBmZhY2V0cxgCIAMoCzIsLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVzcG9uc2UuRmFjZXQSEgoKdG90YWxfc2l6ZRgDIAEoBRIXCg9jb3JyZWN0ZWRfcXVlcnkYBCABKAkSGQoRYXR0cmlidXRpb25fdG9rZW4YBSABKAkSFwoPbmV4dF9wYWdlX3Rva2VuGAYgASgJElcKFHF1ZXJ5X2V4cGFuc2lvbl9pbmZvGAcgASgLMjkuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5TZWFyY2hSZXNwb25zZS5RdWVyeUV4cGFuc2lvbkluZm8SFAoMcmVkaXJlY3RfdXJpGAogASgJEhgKEGFwcGxpZWRfY29udHJvbHMYDCADKAkSaQodaW52YWxpZF9jb25kaXRpb25fYm9vc3Rfc3BlY3MYDiADKAsyQi5nb29nbGUuY2xvdWQucmV0YWlsLnYyLlNlYXJjaFJlcXVlc3QuQm9vc3RTcGVjLkNvbmRpdGlvbkJvb3N0U3BlYxI/Cg9leHBlcmltZW50X2luZm8YESADKAsyJi5nb29nbGUuY2xvdWQucmV0YWlsLnYyLkV4cGVyaW1lbnRJbmZvGpEECgxTZWFyY2hSZXN1bHQSCgoCaWQYASABKAkSMAoHcHJvZHVjdBgCIAEoCzIfLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUHJvZHVjdBIeChZtYXRjaGluZ192YXJpYW50X2NvdW50GAMgASgFEm8KF21hdGNoaW5nX3ZhcmlhbnRfZmllbGRzGAQgAygLMk4uZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5TZWFyY2hSZXNwb25zZS5TZWFyY2hSZXN1bHQuTWF0Y2hpbmdWYXJpYW50RmllbGRzRW50cnkSawoVdmFyaWFudF9yb2xsdXBfdmFsdWVzGAUgAygLMkwuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5TZWFyY2hSZXNwb25zZS5TZWFyY2hSZXN1bHQuVmFyaWFudFJvbGx1cFZhbHVlc0VudHJ5EhcKD3BlcnNvbmFsX2xhYmVscxgHIAMoCRpYChpNYXRjaGluZ1ZhcmlhbnRGaWVsZHNFbnRyeRILCgNrZXkYASABKAkSKQoFdmFsdWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrOgI4ARpSChhWYXJpYW50Um9sbHVwVmFsdWVzRW50cnkSCwoDa2V5GAEgASgJEiUKBXZhbHVlGAIgASgLMhYuZ29vZ2xlLnByb3RvYnVmLlZhbHVlOgI4ARqOAgoFRmFjZXQSCwoDa2V5GAEgASgJEkcKBnZhbHVlcxgCIAMoCzI3Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVzcG9uc2UuRmFjZXQuRmFjZXRWYWx1ZRIVCg1keW5hbWljX2ZhY2V0GAMgASgIGpcBCgpGYWNldFZhbHVlEg8KBXZhbHVlGAEgASgJSAASNAoIaW50ZXJ2YWwYAiABKAsyIC5nb29nbGUuY2xvdWQucmV0YWlsLnYyLkludGVydmFsSAASDQoFY291bnQYAyABKAMSEQoJbWluX3ZhbHVlGAUgASgBEhEKCW1heF92YWx1ZRgGIAEoAUINCgtmYWNldF92YWx1ZRpJChJRdWVyeUV4cGFuc2lvbkluZm8SFgoOZXhwYW5kZWRfcXVlcnkYASABKAgSGwoTcGlubmVkX3Jlc3VsdF9jb3VudBgCIAEoAyL7AgoORXhwZXJpbWVudEluZm8SYwoZc2VydmluZ19jb25maWdfZXhwZXJpbWVudBgCIAEoCzI+Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuRXhwZXJpbWVudEluZm8uU2VydmluZ0NvbmZpZ0V4cGVyaW1lbnRIABI5CgpleHBlcmltZW50GAEgASgJQiX6QSIKIHJldGFpbC5nb29nbGVhcGlzLmNvbS9FeHBlcmltZW50GrEBChdTZXJ2aW5nQ29uZmlnRXhwZXJpbWVudBJJChdvcmlnaW5hbF9zZXJ2aW5nX2NvbmZpZxgBIAEoCUIo+kElCiNyZXRhaWwuZ29vZ2xlYXBpcy5jb20vU2VydmluZ0NvbmZpZxJLChlleHBlcmltZW50X3NlcnZpbmdfY29uZmlnGAIgASgJQij6QSUKI3JldGFpbC5nb29nbGVhcGlzLmNvbS9TZXJ2aW5nQ29uZmlnQhUKE2V4cGVyaW1lbnRfbWV0YWRhdGEy2AIKDVNlYXJjaFNlcnZpY2US+wEKBlNlYXJjaBIlLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVxdWVzdBomLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuU2VhcmNoUmVzcG9uc2UioQGC0+STApoBOgEqWk46ASoiSS92Mi97cGxhY2VtZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovY2F0YWxvZ3MvKi9zZXJ2aW5nQ29uZmlncy8qfTpzZWFyY2giRS92Mi97cGxhY2VtZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovY2F0YWxvZ3MvKi9wbGFjZW1lbnRzLyp9OnNlYXJjaBpJykEVcmV0YWlsLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybUK3AgoaY29tLmdvb2dsZS5jbG91ZC5yZXRhaWwudjJCElNlYXJjaFNlcnZpY2VQcm90b1ABWjJjbG91ZC5nb29nbGUuY29tL2dvL3JldGFpbC9hcGl2Mi9yZXRhaWxwYjtyZXRhaWxwYqICBlJFVEFJTKoCFkdvb2dsZS5DbG91ZC5SZXRhaWwuVjLKAhZHb29nbGVcQ2xvdWRcUmV0YWlsXFYy6gIZR29vZ2xlOjpDbG91ZDo6UmV0YWlsOjpWMupBdwogcmV0YWlsLmdvb2dsZWFwaXMuY29tL0V4cGVyaW1lbnQSU3Byb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9jYXRhbG9ncy97Y2F0YWxvZ30vZXhwZXJpbWVudHMve2V4cGVyaW1lbnR9YgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_retail_v2_common, file_google_cloud_retail_v2_product, file_google_protobuf_field_mask, file_google_protobuf_struct]);

/**
 * Request message for
 * [SearchService.Search][google.cloud.retail.v2.SearchService.Search] method.
 *
 * @generated from message google.cloud.retail.v2.SearchRequest
 */
export type SearchRequest = Message<"google.cloud.retail.v2.SearchRequest"> & {
  /**
   * Required. The resource name of the Retail Search serving config, such as
   * `projects/*\/locations/global/catalogs/default_catalog/servingConfigs/default_serving_config`
   * or the name of the legacy placement resource, such as
   * `projects/*\/locations/global/catalogs/default_catalog/placements/default_search`.
   * This field is used to identify the serving config name and the set
   * of models that are used to make the search.
   *
   * @generated from field: string placement = 1;
   */
  placement: string;

  /**
   * The branch resource name, such as
   * `projects/*\/locations/global/catalogs/default_catalog/branches/0`.
   *
   * Use "default_branch" as the branch ID or leave this field empty, to search
   * products under the default branch.
   *
   * @generated from field: string branch = 2;
   */
  branch: string;

  /**
   * Raw search query.
   *
   * If this field is empty, the request is considered a category browsing
   * request and returned results are based on
   * [filter][google.cloud.retail.v2.SearchRequest.filter] and
   * [page_categories][google.cloud.retail.v2.SearchRequest.page_categories].
   *
   * @generated from field: string query = 3;
   */
  query: string;

  /**
   * Required. A unique identifier for tracking visitors. For example, this
   * could be implemented with an HTTP cookie, which should be able to uniquely
   * identify a visitor on a single device. This unique identifier should not
   * change if the visitor logs in or out of the website.
   *
   * This should be the same identifier as
   * [UserEvent.visitor_id][google.cloud.retail.v2.UserEvent.visitor_id].
   *
   * The field must be a UTF-8 encoded string with a length limit of 128
   * characters. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: string visitor_id = 4;
   */
  visitorId: string;

  /**
   * User information.
   *
   * @generated from field: google.cloud.retail.v2.UserInfo user_info = 5;
   */
  userInfo?: UserInfo;

  /**
   * Maximum number of [Product][google.cloud.retail.v2.Product]s to return. If
   * unspecified, defaults to a reasonable value. The maximum allowed value is
   * 120. Values above 120 will be coerced to 120.
   *
   * If this field is negative, an INVALID_ARGUMENT is returned.
   *
   * @generated from field: int32 page_size = 7;
   */
  pageSize: number;

  /**
   * A page token
   * [SearchResponse.next_page_token][google.cloud.retail.v2.SearchResponse.next_page_token],
   * received from a previous
   * [SearchService.Search][google.cloud.retail.v2.SearchService.Search] call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [SearchService.Search][google.cloud.retail.v2.SearchService.Search] must
   * match the call that provided the page token. Otherwise, an INVALID_ARGUMENT
   * error is returned.
   *
   * @generated from field: string page_token = 8;
   */
  pageToken: string;

  /**
   * A 0-indexed integer that specifies the current offset (that is, starting
   * result location, amongst the [Product][google.cloud.retail.v2.Product]s
   * deemed by the API as relevant) in search results. This field is only
   * considered if [page_token][google.cloud.retail.v2.SearchRequest.page_token]
   * is unset.
   *
   * If this field is negative, an INVALID_ARGUMENT is returned.
   *
   * @generated from field: int32 offset = 9;
   */
  offset: number;

  /**
   * The filter syntax consists of an expression language for constructing a
   * predicate from one or more fields of the products being filtered. Filter
   * expression is case-sensitive. For more information, see
   * [Filter](https://cloud.google.com/retail/docs/filter-and-order#filter).
   *
   * If this field is unrecognizable, an INVALID_ARGUMENT is returned.
   *
   * @generated from field: string filter = 10;
   */
  filter: string;

  /**
   * The default filter that is applied when a user performs a search without
   * checking any filters on the search page.
   *
   * The filter applied to every search request when quality improvement such as
   * query expansion is needed. In the case a query does not have a sufficient
   * amount of results this filter will be used to determine whether or not to
   * enable the query expansion flow. The original filter will still be used for
   * the query expanded search.
   * This field is strongly recommended to achieve high search quality.
   *
   * For more information about filter syntax, see
   * [SearchRequest.filter][google.cloud.retail.v2.SearchRequest.filter].
   *
   * @generated from field: string canonical_filter = 28;
   */
  canonicalFilter: string;

  /**
   * The order in which products are returned. Products can be ordered by
   * a field in an [Product][google.cloud.retail.v2.Product] object. Leave it
   * unset if ordered by relevance. OrderBy expression is case-sensitive. For
   * more information, see
   * [Order](https://cloud.google.com/retail/docs/filter-and-order#order).
   *
   * If this field is unrecognizable, an INVALID_ARGUMENT is returned.
   *
   * @generated from field: string order_by = 11;
   */
  orderBy: string;

  /**
   * Facet specifications for faceted search. If empty, no facets are returned.
   *
   * A maximum of 200 values are allowed. Otherwise, an INVALID_ARGUMENT error
   * is returned.
   *
   * @generated from field: repeated google.cloud.retail.v2.SearchRequest.FacetSpec facet_specs = 12;
   */
  facetSpecs: SearchRequest_FacetSpec[];

  /**
   * Deprecated. Refer to https://cloud.google.com/retail/docs/configs#dynamic
   * to enable dynamic facets. Do not set this field.
   *
   * The specification for dynamically generated facets. Notice that only
   * textual facets can be dynamically generated.
   *
   * @generated from field: google.cloud.retail.v2.SearchRequest.DynamicFacetSpec dynamic_facet_spec = 21 [deprecated = true];
   * @deprecated
   */
  dynamicFacetSpec?: SearchRequest_DynamicFacetSpec;

  /**
   * Boost specification to boost certain products. For more information, see
   * [Boost results](https://cloud.google.com/retail/docs/boosting).
   *
   * Notice that if both
   * [ServingConfig.boost_control_ids][google.cloud.retail.v2.ServingConfig.boost_control_ids]
   * and
   * [SearchRequest.boost_spec][google.cloud.retail.v2.SearchRequest.boost_spec]
   * are set, the boost conditions from both places are evaluated. If a search
   * request matches multiple boost conditions, the final boost score is equal
   * to the sum of the boost scores from all matched boost conditions.
   *
   * @generated from field: google.cloud.retail.v2.SearchRequest.BoostSpec boost_spec = 13;
   */
  boostSpec?: SearchRequest_BoostSpec;

  /**
   * The query expansion specification that specifies the conditions under which
   * query expansion occurs. For more information, see [Query
   * expansion](https://cloud.google.com/retail/docs/result-size#query_expansion).
   *
   * @generated from field: google.cloud.retail.v2.SearchRequest.QueryExpansionSpec query_expansion_spec = 14;
   */
  queryExpansionSpec?: SearchRequest_QueryExpansionSpec;

  /**
   * The keys to fetch and rollup the matching
   * [variant][google.cloud.retail.v2.Product.Type.VARIANT]
   * [Product][google.cloud.retail.v2.Product]s attributes,
   * [FulfillmentInfo][google.cloud.retail.v2.FulfillmentInfo] or
   * [LocalInventory][google.cloud.retail.v2.LocalInventory]s attributes. The
   * attributes from all the matching
   * [variant][google.cloud.retail.v2.Product.Type.VARIANT]
   * [Product][google.cloud.retail.v2.Product]s or
   * [LocalInventory][google.cloud.retail.v2.LocalInventory]s are merged and
   * de-duplicated. Notice that rollup attributes will lead to extra query
   * latency. Maximum number of keys is 30.
   *
   * For [FulfillmentInfo][google.cloud.retail.v2.FulfillmentInfo], a
   * fulfillment type and a fulfillment ID must be provided in the format of
   * "fulfillmentType.fulfillmentId". E.g., in "pickupInStore.store123",
   * "pickupInStore" is fulfillment type and "store123" is the store ID.
   *
   * Supported keys are:
   *
   * * colorFamilies
   * * price
   * * originalPrice
   * * discount
   * * variantId
   * * inventory(place_id,price)
   * * inventory(place_id,original_price)
   * * inventory(place_id,attributes.key), where key is any key in the
   *   [Product.local_inventories.attributes][google.cloud.retail.v2.LocalInventory.attributes]
   *   map.
   * * attributes.key, where key is any key in the
   *   [Product.attributes][google.cloud.retail.v2.Product.attributes] map.
   * * pickupInStore.id, where id is any
   * [FulfillmentInfo.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids]
   * for [FulfillmentInfo.type][google.cloud.retail.v2.FulfillmentInfo.type]
   *   "pickup-in-store".
   * * shipToStore.id, where id is any
   * [FulfillmentInfo.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids]
   * for [FulfillmentInfo.type][google.cloud.retail.v2.FulfillmentInfo.type]
   *   "ship-to-store".
   * * sameDayDelivery.id, where id is any
   * [FulfillmentInfo.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids]
   * for [FulfillmentInfo.type][google.cloud.retail.v2.FulfillmentInfo.type]
   *   "same-day-delivery".
   * * nextDayDelivery.id, where id is any
   * [FulfillmentInfo.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids]
   * for [FulfillmentInfo.type][google.cloud.retail.v2.FulfillmentInfo.type]
   *   "next-day-delivery".
   * * customFulfillment1.id, where id is any
   * [FulfillmentInfo.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids]
   * for [FulfillmentInfo.type][google.cloud.retail.v2.FulfillmentInfo.type]
   *   "custom-type-1".
   * * customFulfillment2.id, where id is any
   * [FulfillmentInfo.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids]
   * for [FulfillmentInfo.type][google.cloud.retail.v2.FulfillmentInfo.type]
   *   "custom-type-2".
   * * customFulfillment3.id, where id is any
   * [FulfillmentInfo.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids]
   * for [FulfillmentInfo.type][google.cloud.retail.v2.FulfillmentInfo.type]
   *   "custom-type-3".
   * * customFulfillment4.id, where id is any
   * [FulfillmentInfo.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids]
   * for [FulfillmentInfo.type][google.cloud.retail.v2.FulfillmentInfo.type]
   *   "custom-type-4".
   * * customFulfillment5.id, where id is any
   * [FulfillmentInfo.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids]
   * for [FulfillmentInfo.type][google.cloud.retail.v2.FulfillmentInfo.type]
   *   "custom-type-5".
   *
   * If this field is set to an invalid value other than these, an
   * INVALID_ARGUMENT error is returned.
   *
   * @generated from field: repeated string variant_rollup_keys = 17;
   */
  variantRollupKeys: string[];

  /**
   * The categories associated with a category page. Must be set for category
   * navigation queries to achieve good search quality. The format should be
   * the same as
   * [UserEvent.page_categories][google.cloud.retail.v2.UserEvent.page_categories];
   *
   * To represent full path of category, use '>' sign to separate different
   * hierarchies. If '>' is part of the category name, replace it with
   * other character(s).
   *
   * Category pages include special pages such as sales or promotions. For
   * instance, a special sale page may have the category hierarchy:
   * "pageCategories" : ["Sales > 2017 Black Friday Deals"].
   *
   * @generated from field: repeated string page_categories = 23;
   */
  pageCategories: string[];

  /**
   * The search mode of the search request. If not specified, a single search
   * request triggers both product search and faceted search.
   *
   * @generated from field: google.cloud.retail.v2.SearchRequest.SearchMode search_mode = 31;
   */
  searchMode: SearchRequest_SearchMode;

  /**
   * The specification for personalization.
   *
   * Notice that if both
   * [ServingConfig.personalization_spec][google.cloud.retail.v2.ServingConfig.personalization_spec]
   * and
   * [SearchRequest.personalization_spec][google.cloud.retail.v2.SearchRequest.personalization_spec]
   * are set.
   * [SearchRequest.personalization_spec][google.cloud.retail.v2.SearchRequest.personalization_spec]
   * will override
   * [ServingConfig.personalization_spec][google.cloud.retail.v2.ServingConfig.personalization_spec].
   *
   * @generated from field: google.cloud.retail.v2.SearchRequest.PersonalizationSpec personalization_spec = 32;
   */
  personalizationSpec?: SearchRequest_PersonalizationSpec;

  /**
   * The labels applied to a resource must meet the following requirements:
   *
   * * Each resource can have multiple labels, up to a maximum of 64.
   * * Each label must be a key-value pair.
   * * Keys have a minimum length of 1 character and a maximum length of 63
   *   characters and cannot be empty. Values can be empty and have a maximum
   *   length of 63 characters.
   * * Keys and values can contain only lowercase letters, numeric characters,
   *   underscores, and dashes. All characters must use UTF-8 encoding, and
   *   international characters are allowed.
   * * The key portion of a label must be unique. However, you can use the same
   *   key with multiple resources.
   * * Keys must start with a lowercase letter or international character.
   *
   * For more information, see [Requirements for
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
   * in the Resource Manager documentation.
   *
   * @generated from field: map<string, string> labels = 34;
   */
  labels: { [key: string]: string };

  /**
   * The spell correction specification that specifies the mode under
   * which spell correction will take effect.
   *
   * @generated from field: optional google.cloud.retail.v2.SearchRequest.SpellCorrectionSpec spell_correction_spec = 35;
   */
  spellCorrectionSpec?: SearchRequest_SpellCorrectionSpec;

  /**
   * The entity for customers that may run multiple different entities, domains,
   * sites or regions, for example, `Google US`, `Google Ads`, `Waymo`,
   * `google.com`, `youtube.com`, etc.
   * If this is set, it should be exactly matched with
   * [UserEvent.entity][google.cloud.retail.v2.UserEvent.entity] to get search
   * results boosted by entity.
   *
   * @generated from field: string entity = 38;
   */
  entity: string;
};

/**
 * Describes the message google.cloud.retail.v2.SearchRequest.
 * Use `create(SearchRequestSchema)` to create a new message.
 */
export const SearchRequestSchema: GenMessage<SearchRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 0);

/**
 * A facet specification to perform faceted search.
 *
 * @generated from message google.cloud.retail.v2.SearchRequest.FacetSpec
 */
export type SearchRequest_FacetSpec = Message<"google.cloud.retail.v2.SearchRequest.FacetSpec"> & {
  /**
   * Required. The facet key specification.
   *
   * @generated from field: google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey facet_key = 1;
   */
  facetKey?: SearchRequest_FacetSpec_FacetKey;

  /**
   * Maximum of facet values that should be returned for this facet. If
   * unspecified, defaults to 50. The maximum allowed value is 300. Values
   * above 300 will be coerced to 300.
   *
   * If this field is negative, an INVALID_ARGUMENT is returned.
   *
   * @generated from field: int32 limit = 2;
   */
  limit: number;

  /**
   * List of keys to exclude when faceting.
   *
   *
   * By default,
   * [FacetKey.key][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.key]
   * is not excluded from the filter unless it is listed in this field.
   *
   * Listing a facet key in this field allows its values to appear as facet
   * results, even when they are filtered out of search results. Using this
   * field does not affect what search results are returned.
   *
   * For example, suppose there are 100 products with the color facet "Red"
   * and 200 products with the color facet "Blue". A query containing the
   * filter "colorFamilies:ANY("Red")" and having "colorFamilies" as
   * [FacetKey.key][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.key]
   * would by default return only "Red" products in the search results, and
   * also return "Red" with count 100 as the only color facet. Although there
   * are also blue products available, "Blue" would not be shown as an
   * available facet value.
   *
   * If "colorFamilies" is listed in "excludedFilterKeys", then the query
   * returns the facet values "Red" with count 100 and "Blue" with count
   * 200, because the "colorFamilies" key is now excluded from the filter.
   * Because this field doesn't affect search results, the search results
   * are still correctly filtered to return only "Red" products.
   *
   * A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error
   * is returned.
   *
   * @generated from field: repeated string excluded_filter_keys = 3;
   */
  excludedFilterKeys: string[];

  /**
   * Enables dynamic position for this facet. If set to true, the position of
   * this facet among all facets in the response is determined by Google
   * Retail Search. It is ordered together with dynamic facets if dynamic
   * facets is enabled. If set to false, the position of this facet in the
   * response is the same as in the request, and it is ranked before
   * the facets with dynamic position enable and all dynamic facets.
   *
   * For example, you may always want to have rating facet returned in
   * the response, but it's not necessarily to always display the rating facet
   * at the top. In that case, you can set enable_dynamic_position to true so
   * that the position of rating facet in response is determined by
   * Google Retail Search.
   *
   * Another example, assuming you have the following facets in the request:
   *
   * * "rating", enable_dynamic_position = true
   *
   * * "price", enable_dynamic_position = false
   *
   * * "brands", enable_dynamic_position = false
   *
   * And also you have a dynamic facets enable, which generates a facet
   * "gender". Then, the final order of the facets in the response can be
   * ("price", "brands", "rating", "gender") or ("price", "brands", "gender",
   * "rating") depends on how Google Retail Search orders "gender" and
   * "rating" facets. However, notice that "price" and "brands" are always
   * ranked at first and second position because their enable_dynamic_position
   * values are false.
   *
   * @generated from field: bool enable_dynamic_position = 4;
   */
  enableDynamicPosition: boolean;
};

/**
 * Describes the message google.cloud.retail.v2.SearchRequest.FacetSpec.
 * Use `create(SearchRequest_FacetSpecSchema)` to create a new message.
 */
export const SearchRequest_FacetSpecSchema: GenMessage<SearchRequest_FacetSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 0, 0);

/**
 * Specifies how a facet is computed.
 *
 * @generated from message google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey
 */
export type SearchRequest_FacetSpec_FacetKey = Message<"google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey"> & {
  /**
   * Required. Supported textual and numerical facet keys in
   * [Product][google.cloud.retail.v2.Product] object, over which the facet
   * values are computed. Facet key is case-sensitive.
   *
   * Allowed facet keys when
   * [FacetKey.query][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.query]
   * is not specified:
   *
   * * textual_field =
   *     * "brands"
   *     * "categories"
   *     * "genders"
   *     * "ageGroups"
   *     * "availability"
   *     * "colorFamilies"
   *     * "colors"
   *     * "sizes"
   *     * "materials"
   *     * "patterns"
   *     * "conditions"
   *     * "attributes.key"
   *     * "pickupInStore"
   *     * "shipToStore"
   *     * "sameDayDelivery"
   *     * "nextDayDelivery"
   *     * "customFulfillment1"
   *     * "customFulfillment2"
   *     * "customFulfillment3"
   *     * "customFulfillment4"
   *     * "customFulfillment5"
   *     * "inventory(place_id,attributes.key)"
   *
   * * numerical_field =
   *     * "price"
   *     * "discount"
   *     * "rating"
   *     * "ratingCount"
   *     * "attributes.key"
   *     * "inventory(place_id,price)"
   *     * "inventory(place_id,original_price)"
   *     * "inventory(place_id,attributes.key)"
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Set only if values should be bucketized into intervals. Must be set
   * for facets with numerical values. Must not be set for facet with text
   * values. Maximum number of intervals is 40.
   *
   * For all numerical facet keys that appear in the list of products from
   * the catalog, the percentiles 0, 10, 30, 50, 70, 90, and 100 are
   * computed from their distribution weekly. If the model assigns a high
   * score to a numerical facet key and its intervals are not specified in
   * the search request, these percentiles become the bounds
   * for its intervals and are returned in the response. If the
   * facet key intervals are specified in the request, then the specified
   * intervals are returned instead.
   *
   * @generated from field: repeated google.cloud.retail.v2.Interval intervals = 2;
   */
  intervals: Interval[];

  /**
   * Only get facet for the given restricted values. For example, when using
   * "pickupInStore" as key and set restricted values to
   * ["store123", "store456"], only facets for "store123" and "store456" are
   * returned. Only supported on predefined textual fields, custom textual
   * attributes and fulfillments. Maximum is 20.
   *
   * Must be set for the fulfillment facet keys:
   *
   * * pickupInStore
   *
   * * shipToStore
   *
   * * sameDayDelivery
   *
   * * nextDayDelivery
   *
   * * customFulfillment1
   *
   * * customFulfillment2
   *
   * * customFulfillment3
   *
   * * customFulfillment4
   *
   * * customFulfillment5
   *
   * @generated from field: repeated string restricted_values = 3;
   */
  restrictedValues: string[];

  /**
   * Only get facet values that start with the given string prefix. For
   * example, suppose "categories" has three values "Women > Shoe",
   * "Women > Dress" and "Men > Shoe". If set "prefixes" to "Women", the
   * "categories" facet gives only "Women > Shoe" and "Women > Dress".
   * Only supported on textual fields. Maximum is 10.
   *
   * @generated from field: repeated string prefixes = 8;
   */
  prefixes: string[];

  /**
   * Only get facet values that contains the given strings. For example,
   * suppose "categories" has three values "Women > Shoe",
   * "Women > Dress" and "Men > Shoe". If set "contains" to "Shoe", the
   * "categories" facet gives only "Women > Shoe" and "Men > Shoe".
   * Only supported on textual fields. Maximum is 10.
   *
   * @generated from field: repeated string contains = 9;
   */
  contains: string[];

  /**
   * True to make facet keys case insensitive when getting faceting
   * values with prefixes or contains; false otherwise.
   *
   * @generated from field: bool case_insensitive = 10;
   */
  caseInsensitive: boolean;

  /**
   * The order in which
   * [SearchResponse.Facet.values][google.cloud.retail.v2.SearchResponse.Facet.values]
   * are returned.
   *
   * Allowed values are:
   *
   * * "count desc", which means order by
   * [SearchResponse.Facet.values.count][google.cloud.retail.v2.SearchResponse.Facet.FacetValue.count]
   * descending.
   *
   * * "value desc", which means order by
   * [SearchResponse.Facet.values.value][google.cloud.retail.v2.SearchResponse.Facet.FacetValue.value]
   * descending.
   *   Only applies to textual facets.
   *
   * If not set, textual values are sorted in [natural
   * order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical
   * intervals are sorted in the order given by
   * [FacetSpec.FacetKey.intervals][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.intervals];
   * [FulfillmentInfo.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids]
   * are sorted in the order given by
   * [FacetSpec.FacetKey.restricted_values][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.restricted_values].
   *
   * @generated from field: string order_by = 4;
   */
  orderBy: string;

  /**
   * The query that is used to compute facet for the given facet key.
   * When provided, it overrides the default behavior of facet
   * computation. The query syntax is the same as a filter expression. See
   * [SearchRequest.filter][google.cloud.retail.v2.SearchRequest.filter] for
   * detail syntax and limitations. Notice that there is no limitation on
   * [FacetKey.key][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.key]
   * when query is specified.
   *
   * In the response,
   * [SearchResponse.Facet.values.value][google.cloud.retail.v2.SearchResponse.Facet.FacetValue.value]
   * is always "1" and
   * [SearchResponse.Facet.values.count][google.cloud.retail.v2.SearchResponse.Facet.FacetValue.count]
   * is the number of results that match the query.
   *
   * For example, you can set a customized facet for "shipToStore",
   * where
   * [FacetKey.key][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.key]
   * is "customizedShipToStore", and
   * [FacetKey.query][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.query]
   * is "availability: ANY(\"IN_STOCK\") AND shipToStore: ANY(\"123\")".
   * Then the facet counts the products that are both in stock and ship
   * to store "123".
   *
   * @generated from field: string query = 5;
   */
  query: string;

  /**
   * Returns the min and max value for each numerical facet intervals.
   * Ignored for textual facets.
   *
   * @generated from field: bool return_min_max = 11;
   */
  returnMinMax: boolean;
};

/**
 * Describes the message google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.
 * Use `create(SearchRequest_FacetSpec_FacetKeySchema)` to create a new message.
 */
export const SearchRequest_FacetSpec_FacetKeySchema: GenMessage<SearchRequest_FacetSpec_FacetKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 0, 0, 0);

/**
 * The specifications of dynamically generated facets.
 *
 * @generated from message google.cloud.retail.v2.SearchRequest.DynamicFacetSpec
 */
export type SearchRequest_DynamicFacetSpec = Message<"google.cloud.retail.v2.SearchRequest.DynamicFacetSpec"> & {
  /**
   * Mode of the DynamicFacet feature.
   * Defaults to
   * [Mode.DISABLED][google.cloud.retail.v2.SearchRequest.DynamicFacetSpec.Mode.DISABLED]
   * if it's unset.
   *
   * @generated from field: google.cloud.retail.v2.SearchRequest.DynamicFacetSpec.Mode mode = 1;
   */
  mode: SearchRequest_DynamicFacetSpec_Mode;
};

/**
 * Describes the message google.cloud.retail.v2.SearchRequest.DynamicFacetSpec.
 * Use `create(SearchRequest_DynamicFacetSpecSchema)` to create a new message.
 */
export const SearchRequest_DynamicFacetSpecSchema: GenMessage<SearchRequest_DynamicFacetSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 0, 1);

/**
 * Enum to control DynamicFacet mode
 *
 * @generated from enum google.cloud.retail.v2.SearchRequest.DynamicFacetSpec.Mode
 */
export enum SearchRequest_DynamicFacetSpec_Mode {
  /**
   * Default value.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * Disable Dynamic Facet.
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * Automatic mode built by Google Retail Search.
   *
   * @generated from enum value: ENABLED = 2;
   */
  ENABLED = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.SearchRequest.DynamicFacetSpec.Mode.
 */
export const SearchRequest_DynamicFacetSpec_ModeSchema: GenEnum<SearchRequest_DynamicFacetSpec_Mode> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_search_service, 0, 1, 0);

/**
 * Boost specification to boost certain items.
 *
 * @generated from message google.cloud.retail.v2.SearchRequest.BoostSpec
 */
export type SearchRequest_BoostSpec = Message<"google.cloud.retail.v2.SearchRequest.BoostSpec"> & {
  /**
   * Condition boost specifications. If a product matches multiple conditions
   * in the specifictions, boost scores from these specifications are all
   * applied and combined in a non-linear way. Maximum number of
   * specifications is 20.
   *
   * @generated from field: repeated google.cloud.retail.v2.SearchRequest.BoostSpec.ConditionBoostSpec condition_boost_specs = 1;
   */
  conditionBoostSpecs: SearchRequest_BoostSpec_ConditionBoostSpec[];

  /**
   * Whether to skip boostspec validation. If this field is set to true,
   * invalid
   * [BoostSpec.condition_boost_specs][google.cloud.retail.v2.SearchRequest.BoostSpec.condition_boost_specs]
   * will be ignored and valid
   * [BoostSpec.condition_boost_specs][google.cloud.retail.v2.SearchRequest.BoostSpec.condition_boost_specs]
   * will still be applied.
   *
   * @generated from field: optional bool skip_boost_spec_validation = 2;
   */
  skipBoostSpecValidation?: boolean;
};

/**
 * Describes the message google.cloud.retail.v2.SearchRequest.BoostSpec.
 * Use `create(SearchRequest_BoostSpecSchema)` to create a new message.
 */
export const SearchRequest_BoostSpecSchema: GenMessage<SearchRequest_BoostSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 0, 2);

/**
 * Boost applies to products which match a condition.
 *
 * @generated from message google.cloud.retail.v2.SearchRequest.BoostSpec.ConditionBoostSpec
 */
export type SearchRequest_BoostSpec_ConditionBoostSpec = Message<"google.cloud.retail.v2.SearchRequest.BoostSpec.ConditionBoostSpec"> & {
  /**
   * An expression which specifies a boost condition. The syntax and
   * supported fields are the same as a filter expression. See
   * [SearchRequest.filter][google.cloud.retail.v2.SearchRequest.filter] for
   * detail syntax and limitations.
   *
   * Examples:
   *
   * * To boost products with product ID "product_1" or "product_2", and
   * color
   *   "Red" or "Blue":
   *     * (id: ANY("product_1", "product_2")) AND (colorFamilies:
   *     ANY("Red","Blue"))
   *
   * @generated from field: string condition = 1;
   */
  condition: string;

  /**
   * Strength of the condition boost, which should be in [-1, 1]. Negative
   * boost means demotion. Default is 0.0.
   *
   * Setting to 1.0 gives the item a big promotion. However, it does not
   * necessarily mean that the boosted item will be the top result at all
   * times, nor that other items will be excluded. Results could still be
   * shown even when none of them matches the condition. And results that
   * are significantly more relevant to the search query can still trump
   * your heavily favored but irrelevant items.
   *
   * Setting to -1.0 gives the item a big demotion. However, results that
   * are deeply relevant might still be shown. The item will have an
   * upstream battle to get a fairly high ranking, but it is not blocked out
   * completely.
   *
   * Setting to 0.0 means no boost applied. The boosting condition is
   * ignored.
   *
   * @generated from field: float boost = 2;
   */
  boost: number;
};

/**
 * Describes the message google.cloud.retail.v2.SearchRequest.BoostSpec.ConditionBoostSpec.
 * Use `create(SearchRequest_BoostSpec_ConditionBoostSpecSchema)` to create a new message.
 */
export const SearchRequest_BoostSpec_ConditionBoostSpecSchema: GenMessage<SearchRequest_BoostSpec_ConditionBoostSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 0, 2, 0);

/**
 * Specification to determine under which conditions query expansion should
 * occur.
 *
 * @generated from message google.cloud.retail.v2.SearchRequest.QueryExpansionSpec
 */
export type SearchRequest_QueryExpansionSpec = Message<"google.cloud.retail.v2.SearchRequest.QueryExpansionSpec"> & {
  /**
   * The condition under which query expansion should occur. Default to
   * [Condition.DISABLED][google.cloud.retail.v2.SearchRequest.QueryExpansionSpec.Condition.DISABLED].
   *
   * @generated from field: google.cloud.retail.v2.SearchRequest.QueryExpansionSpec.Condition condition = 1;
   */
  condition: SearchRequest_QueryExpansionSpec_Condition;

  /**
   * Whether to pin unexpanded results. If this field is set to true,
   * unexpanded products are always at the top of the search results, followed
   * by the expanded results.
   *
   * @generated from field: bool pin_unexpanded_results = 2;
   */
  pinUnexpandedResults: boolean;
};

/**
 * Describes the message google.cloud.retail.v2.SearchRequest.QueryExpansionSpec.
 * Use `create(SearchRequest_QueryExpansionSpecSchema)` to create a new message.
 */
export const SearchRequest_QueryExpansionSpecSchema: GenMessage<SearchRequest_QueryExpansionSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 0, 3);

/**
 * Enum describing under which condition query expansion should occur.
 *
 * @generated from enum google.cloud.retail.v2.SearchRequest.QueryExpansionSpec.Condition
 */
export enum SearchRequest_QueryExpansionSpec_Condition {
  /**
   * Unspecified query expansion condition. In this case, server behavior
   * defaults to
   * [Condition.DISABLED][google.cloud.retail.v2.SearchRequest.QueryExpansionSpec.Condition.DISABLED].
   *
   * @generated from enum value: CONDITION_UNSPECIFIED = 0;
   */
  CONDITION_UNSPECIFIED = 0,

  /**
   * Disabled query expansion. Only the exact search query is used, even if
   * [SearchResponse.total_size][google.cloud.retail.v2.SearchResponse.total_size]
   * is zero.
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * Automatic query expansion built by Google Retail Search.
   *
   * @generated from enum value: AUTO = 3;
   */
  AUTO = 3,
}

/**
 * Describes the enum google.cloud.retail.v2.SearchRequest.QueryExpansionSpec.Condition.
 */
export const SearchRequest_QueryExpansionSpec_ConditionSchema: GenEnum<SearchRequest_QueryExpansionSpec_Condition> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_search_service, 0, 3, 0);

/**
 * The specification for personalization.
 *
 * @generated from message google.cloud.retail.v2.SearchRequest.PersonalizationSpec
 */
export type SearchRequest_PersonalizationSpec = Message<"google.cloud.retail.v2.SearchRequest.PersonalizationSpec"> & {
  /**
   * Defaults to
   * [Mode.AUTO][google.cloud.retail.v2.SearchRequest.PersonalizationSpec.Mode.AUTO].
   *
   * @generated from field: google.cloud.retail.v2.SearchRequest.PersonalizationSpec.Mode mode = 1;
   */
  mode: SearchRequest_PersonalizationSpec_Mode;
};

/**
 * Describes the message google.cloud.retail.v2.SearchRequest.PersonalizationSpec.
 * Use `create(SearchRequest_PersonalizationSpecSchema)` to create a new message.
 */
export const SearchRequest_PersonalizationSpecSchema: GenMessage<SearchRequest_PersonalizationSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 0, 4);

/**
 * The personalization mode of each search request.
 *
 * @generated from enum google.cloud.retail.v2.SearchRequest.PersonalizationSpec.Mode
 */
export enum SearchRequest_PersonalizationSpec_Mode {
  /**
   * Default value. In this case, server behavior defaults to
   * [Mode.AUTO][google.cloud.retail.v2.SearchRequest.PersonalizationSpec.Mode.AUTO].
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * Let CRS decide whether to use personalization based on quality of user
   * event data.
   *
   * @generated from enum value: AUTO = 1;
   */
  AUTO = 1,

  /**
   * Disable personalization.
   *
   * @generated from enum value: DISABLED = 2;
   */
  DISABLED = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.SearchRequest.PersonalizationSpec.Mode.
 */
export const SearchRequest_PersonalizationSpec_ModeSchema: GenEnum<SearchRequest_PersonalizationSpec_Mode> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_search_service, 0, 4, 0);

/**
 * The specification for query spell correction.
 *
 * @generated from message google.cloud.retail.v2.SearchRequest.SpellCorrectionSpec
 */
export type SearchRequest_SpellCorrectionSpec = Message<"google.cloud.retail.v2.SearchRequest.SpellCorrectionSpec"> & {
  /**
   * The mode under which spell correction should take effect to
   * replace the original search query. Default to
   * [Mode.AUTO][google.cloud.retail.v2.SearchRequest.SpellCorrectionSpec.Mode.AUTO].
   *
   * @generated from field: google.cloud.retail.v2.SearchRequest.SpellCorrectionSpec.Mode mode = 1;
   */
  mode: SearchRequest_SpellCorrectionSpec_Mode;
};

/**
 * Describes the message google.cloud.retail.v2.SearchRequest.SpellCorrectionSpec.
 * Use `create(SearchRequest_SpellCorrectionSpecSchema)` to create a new message.
 */
export const SearchRequest_SpellCorrectionSpecSchema: GenMessage<SearchRequest_SpellCorrectionSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 0, 5);

/**
 * Enum describing under which mode spell correction should occur.
 *
 * @generated from enum google.cloud.retail.v2.SearchRequest.SpellCorrectionSpec.Mode
 */
export enum SearchRequest_SpellCorrectionSpec_Mode {
  /**
   * Unspecified spell correction mode. In this case, server behavior
   * defaults to
   * [Mode.AUTO][google.cloud.retail.v2.SearchRequest.SpellCorrectionSpec.Mode.AUTO].
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * Google Retail Search will try to find a spell suggestion if there
   * is any and put in the
   * [SearchResponse.corrected_query][google.cloud.retail.v2.SearchResponse.corrected_query].
   * The spell suggestion will not be used as the search query.
   *
   * @generated from enum value: SUGGESTION_ONLY = 1;
   */
  SUGGESTION_ONLY = 1,

  /**
   * Automatic spell correction built by Google Retail Search. Search will
   * be based on the corrected query if found.
   *
   * @generated from enum value: AUTO = 2;
   */
  AUTO = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.SearchRequest.SpellCorrectionSpec.Mode.
 */
export const SearchRequest_SpellCorrectionSpec_ModeSchema: GenEnum<SearchRequest_SpellCorrectionSpec_Mode> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_search_service, 0, 5, 0);

/**
 * The search mode of each search request.
 *
 * @generated from enum google.cloud.retail.v2.SearchRequest.SearchMode
 */
export enum SearchRequest_SearchMode {
  /**
   * Default value. In this case both product search and faceted search will
   * be performed. Both
   * [SearchResponse.SearchResult][google.cloud.retail.v2.SearchResponse.SearchResult]
   * and [SearchResponse.Facet][google.cloud.retail.v2.SearchResponse.Facet]
   * will be returned.
   *
   * @generated from enum value: SEARCH_MODE_UNSPECIFIED = 0;
   */
  SEARCH_MODE_UNSPECIFIED = 0,

  /**
   * Only product search will be performed. The faceted search will be
   * disabled.
   *
   * Only
   * [SearchResponse.SearchResult][google.cloud.retail.v2.SearchResponse.SearchResult]
   * will be returned.
   * [SearchResponse.Facet][google.cloud.retail.v2.SearchResponse.Facet] will
   * not be returned, even if
   * [SearchRequest.facet_specs][google.cloud.retail.v2.SearchRequest.facet_specs]
   * or
   * [SearchRequest.dynamic_facet_spec][google.cloud.retail.v2.SearchRequest.dynamic_facet_spec]
   * is set.
   *
   * @generated from enum value: PRODUCT_SEARCH_ONLY = 1;
   */
  PRODUCT_SEARCH_ONLY = 1,

  /**
   * Only faceted search will be performed. The product search will be
   * disabled.
   *
   * When in this mode, one or both of
   * [SearchRequest.facet_specs][google.cloud.retail.v2.SearchRequest.facet_specs]
   * and
   * [SearchRequest.dynamic_facet_spec][google.cloud.retail.v2.SearchRequest.dynamic_facet_spec]
   * should be set. Otherwise, an INVALID_ARGUMENT error is returned. Only
   * [SearchResponse.Facet][google.cloud.retail.v2.SearchResponse.Facet] will
   * be returned.
   * [SearchResponse.SearchResult][google.cloud.retail.v2.SearchResponse.SearchResult]
   * will not be returned.
   *
   * @generated from enum value: FACETED_SEARCH_ONLY = 2;
   */
  FACETED_SEARCH_ONLY = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.SearchRequest.SearchMode.
 */
export const SearchRequest_SearchModeSchema: GenEnum<SearchRequest_SearchMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_search_service, 0, 0);

/**
 * Response message for
 * [SearchService.Search][google.cloud.retail.v2.SearchService.Search] method.
 *
 * @generated from message google.cloud.retail.v2.SearchResponse
 */
export type SearchResponse = Message<"google.cloud.retail.v2.SearchResponse"> & {
  /**
   * A list of matched items. The order represents the ranking.
   *
   * @generated from field: repeated google.cloud.retail.v2.SearchResponse.SearchResult results = 1;
   */
  results: SearchResponse_SearchResult[];

  /**
   * Results of facets requested by user.
   *
   * @generated from field: repeated google.cloud.retail.v2.SearchResponse.Facet facets = 2;
   */
  facets: SearchResponse_Facet[];

  /**
   * The estimated total count of matched items irrespective of pagination. The
   * count of [results][google.cloud.retail.v2.SearchResponse.results] returned
   * by pagination may be less than the
   * [total_size][google.cloud.retail.v2.SearchResponse.total_size] that
   * matches.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;

  /**
   * Contains the spell corrected query, if found. If the spell correction type
   * is AUTOMATIC, then the search results are based on corrected_query.
   * Otherwise the original query is used for search.
   *
   * @generated from field: string corrected_query = 4;
   */
  correctedQuery: string;

  /**
   * A unique search token. This should be included in the
   * [UserEvent][google.cloud.retail.v2.UserEvent] logs resulting from this
   * search, which enables accurate attribution of search model performance.
   *
   * @generated from field: string attribution_token = 5;
   */
  attributionToken: string;

  /**
   * A token that can be sent as
   * [SearchRequest.page_token][google.cloud.retail.v2.SearchRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 6;
   */
  nextPageToken: string;

  /**
   * Query expansion information for the returned results.
   *
   * @generated from field: google.cloud.retail.v2.SearchResponse.QueryExpansionInfo query_expansion_info = 7;
   */
  queryExpansionInfo?: SearchResponse_QueryExpansionInfo;

  /**
   * The URI of a customer-defined redirect page. If redirect action is
   * triggered, no search is performed, and only
   * [redirect_uri][google.cloud.retail.v2.SearchResponse.redirect_uri] and
   * [attribution_token][google.cloud.retail.v2.SearchResponse.attribution_token]
   * are set in the response.
   *
   * @generated from field: string redirect_uri = 10;
   */
  redirectUri: string;

  /**
   * The fully qualified resource name of applied
   * [controls](https://cloud.google.com/retail/docs/serving-control-rules).
   *
   * @generated from field: repeated string applied_controls = 12;
   */
  appliedControls: string[];

  /**
   * The invalid
   * [SearchRequest.BoostSpec.condition_boost_specs][google.cloud.retail.v2.SearchRequest.BoostSpec.condition_boost_specs]
   * that are not applied during serving.
   *
   * @generated from field: repeated google.cloud.retail.v2.SearchRequest.BoostSpec.ConditionBoostSpec invalid_condition_boost_specs = 14;
   */
  invalidConditionBoostSpecs: SearchRequest_BoostSpec_ConditionBoostSpec[];

  /**
   * Metadata related to A/B testing [Experiment][] associated with this
   * response. Only exists when an experiment is triggered.
   *
   * @generated from field: repeated google.cloud.retail.v2.ExperimentInfo experiment_info = 17;
   */
  experimentInfo: ExperimentInfo[];
};

/**
 * Describes the message google.cloud.retail.v2.SearchResponse.
 * Use `create(SearchResponseSchema)` to create a new message.
 */
export const SearchResponseSchema: GenMessage<SearchResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 1);

/**
 * Represents the search results.
 *
 * @generated from message google.cloud.retail.v2.SearchResponse.SearchResult
 */
export type SearchResponse_SearchResult = Message<"google.cloud.retail.v2.SearchResponse.SearchResult"> & {
  /**
   * [Product.id][google.cloud.retail.v2.Product.id] of the searched
   * [Product][google.cloud.retail.v2.Product].
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The product data snippet in the search response. Only
   * [Product.name][google.cloud.retail.v2.Product.name] is guaranteed to be
   * populated.
   *
   * [Product.variants][google.cloud.retail.v2.Product.variants] contains the
   * product variants that match the search query. If there are multiple
   * product variants matching the query, top 5 most relevant product variants
   * are returned and ordered by relevancy.
   *
   * If relevancy can be deternmined, use
   * [matching_variant_fields][google.cloud.retail.v2.SearchResponse.SearchResult.matching_variant_fields]
   * to look up matched product variants fields. If relevancy cannot be
   * determined, e.g. when searching "shoe" all products in a shoe product can
   * be a match, 5 product variants are returned but order is meaningless.
   *
   * @generated from field: google.cloud.retail.v2.Product product = 2;
   */
  product?: Product;

  /**
   * The count of matched
   * [variant][google.cloud.retail.v2.Product.Type.VARIANT]
   * [Product][google.cloud.retail.v2.Product]s.
   *
   * @generated from field: int32 matching_variant_count = 3;
   */
  matchingVariantCount: number;

  /**
   * If a [variant][google.cloud.retail.v2.Product.Type.VARIANT]
   * [Product][google.cloud.retail.v2.Product] matches the search query, this
   * map indicates which [Product][google.cloud.retail.v2.Product] fields are
   * matched. The key is the
   * [Product.name][google.cloud.retail.v2.Product.name], the value is a field
   * mask of the matched [Product][google.cloud.retail.v2.Product] fields. If
   * matched attributes cannot be determined, this map will be empty.
   *
   * For example, a key "sku1" with field mask
   * "products.color_info" indicates there is a match between
   * "sku1" [ColorInfo][google.cloud.retail.v2.ColorInfo] and the query.
   *
   * @generated from field: map<string, google.protobuf.FieldMask> matching_variant_fields = 4;
   */
  matchingVariantFields: { [key: string]: FieldMask };

  /**
   * The rollup matching
   * [variant][google.cloud.retail.v2.Product.Type.VARIANT]
   * [Product][google.cloud.retail.v2.Product] attributes. The key is one of
   * the
   * [SearchRequest.variant_rollup_keys][google.cloud.retail.v2.SearchRequest.variant_rollup_keys].
   * The values are the merged and de-duplicated
   * [Product][google.cloud.retail.v2.Product] attributes. Notice that the
   * rollup values are respect filter. For example, when filtering by
   * "colorFamilies:ANY(\"red\")" and rollup "colorFamilies", only "red" is
   * returned.
   *
   * For textual and numerical attributes, the rollup values is a list of
   * string or double values with type
   * [google.protobuf.ListValue][google.protobuf.ListValue]. For example, if
   * there are two variants with colors "red" and "blue", the rollup values
   * are
   *
   *     { key: "colorFamilies"
   *       value {
   *         list_value {
   *           values { string_value: "red" }
   *           values { string_value: "blue" }
   *          }
   *       }
   *     }
   *
   * For [FulfillmentInfo][google.cloud.retail.v2.FulfillmentInfo], the rollup
   * values is a double value with type
   * [google.protobuf.Value][google.protobuf.Value]. For example,
   * `{key: "pickupInStore.store1" value { number_value: 10 }}` means a there
   * are 10 variants in this product are available in the store "store1".
   *
   * @generated from field: map<string, google.protobuf.Value> variant_rollup_values = 5;
   */
  variantRollupValues: { [key: string]: Value };

  /**
   * Specifies previous events related to this product for this user based on
   * [UserEvent][google.cloud.retail.v2.UserEvent] with same
   * [SearchRequest.visitor_id][google.cloud.retail.v2.SearchRequest.visitor_id]
   * or [UserInfo.user_id][google.cloud.retail.v2.UserInfo.user_id].
   *
   * This is set only when
   * [SearchRequest.PersonalizationSpec.mode][google.cloud.retail.v2.SearchRequest.PersonalizationSpec.mode]
   * is
   * [SearchRequest.PersonalizationSpec.Mode.AUTO][google.cloud.retail.v2.SearchRequest.PersonalizationSpec.Mode.AUTO].
   *
   * Possible values:
   *
   * * `purchased`: Indicates that this product has been purchased before.
   *
   * @generated from field: repeated string personal_labels = 7;
   */
  personalLabels: string[];
};

/**
 * Describes the message google.cloud.retail.v2.SearchResponse.SearchResult.
 * Use `create(SearchResponse_SearchResultSchema)` to create a new message.
 */
export const SearchResponse_SearchResultSchema: GenMessage<SearchResponse_SearchResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 1, 0);

/**
 * A facet result.
 *
 * @generated from message google.cloud.retail.v2.SearchResponse.Facet
 */
export type SearchResponse_Facet = Message<"google.cloud.retail.v2.SearchResponse.Facet"> & {
  /**
   * The key for this facet. E.g., "colorFamilies" or "price" or
   * "attributes.attr1".
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The facet values for this field.
   *
   * @generated from field: repeated google.cloud.retail.v2.SearchResponse.Facet.FacetValue values = 2;
   */
  values: SearchResponse_Facet_FacetValue[];

  /**
   * Whether the facet is dynamically generated.
   *
   * @generated from field: bool dynamic_facet = 3;
   */
  dynamicFacet: boolean;
};

/**
 * Describes the message google.cloud.retail.v2.SearchResponse.Facet.
 * Use `create(SearchResponse_FacetSchema)` to create a new message.
 */
export const SearchResponse_FacetSchema: GenMessage<SearchResponse_Facet> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 1, 1);

/**
 * A facet value which contains value names and their count.
 *
 * @generated from message google.cloud.retail.v2.SearchResponse.Facet.FacetValue
 */
export type SearchResponse_Facet_FacetValue = Message<"google.cloud.retail.v2.SearchResponse.Facet.FacetValue"> & {
  /**
   * A facet value which contains values.
   *
   * @generated from oneof google.cloud.retail.v2.SearchResponse.Facet.FacetValue.facet_value
   */
  facetValue: {
    /**
     * Text value of a facet, such as "Black" for facet "colorFamilies".
     *
     * @generated from field: string value = 1;
     */
    value: string;
    case: "value";
  } | {
    /**
     * Interval value for a facet, such as [10, 20) for facet "price".
     *
     * @generated from field: google.cloud.retail.v2.Interval interval = 2;
     */
    value: Interval;
    case: "interval";
  } | { case: undefined; value?: undefined };

  /**
   * Number of items that have this facet value.
   *
   * @generated from field: int64 count = 3;
   */
  count: bigint;

  /**
   * The minimum value in the
   * [FacetValue.interval][google.cloud.retail.v2.SearchResponse.Facet.FacetValue.interval].
   * Only supported on numerical facets and returned if
   * [SearchRequest.FacetSpec.FacetKey.return_min_max][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.return_min_max]
   * is true.
   *
   * @generated from field: double min_value = 5;
   */
  minValue: number;

  /**
   * The maximum value in the
   * [FacetValue.interval][google.cloud.retail.v2.SearchResponse.Facet.FacetValue.interval].
   * Only supported on numerical facets and returned if
   * [SearchRequest.FacetSpec.FacetKey.return_min_max][google.cloud.retail.v2.SearchRequest.FacetSpec.FacetKey.return_min_max]
   * is true.
   *
   * @generated from field: double max_value = 6;
   */
  maxValue: number;
};

/**
 * Describes the message google.cloud.retail.v2.SearchResponse.Facet.FacetValue.
 * Use `create(SearchResponse_Facet_FacetValueSchema)` to create a new message.
 */
export const SearchResponse_Facet_FacetValueSchema: GenMessage<SearchResponse_Facet_FacetValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 1, 1, 0);

/**
 * Information describing query expansion including whether expansion has
 * occurred.
 *
 * @generated from message google.cloud.retail.v2.SearchResponse.QueryExpansionInfo
 */
export type SearchResponse_QueryExpansionInfo = Message<"google.cloud.retail.v2.SearchResponse.QueryExpansionInfo"> & {
  /**
   * Bool describing whether query expansion has occurred.
   *
   * @generated from field: bool expanded_query = 1;
   */
  expandedQuery: boolean;

  /**
   * Number of pinned results. This field will only be set when expansion
   * happens and
   * [SearchRequest.QueryExpansionSpec.pin_unexpanded_results][google.cloud.retail.v2.SearchRequest.QueryExpansionSpec.pin_unexpanded_results]
   * is set to true.
   *
   * @generated from field: int64 pinned_result_count = 2;
   */
  pinnedResultCount: bigint;
};

/**
 * Describes the message google.cloud.retail.v2.SearchResponse.QueryExpansionInfo.
 * Use `create(SearchResponse_QueryExpansionInfoSchema)` to create a new message.
 */
export const SearchResponse_QueryExpansionInfoSchema: GenMessage<SearchResponse_QueryExpansionInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 1, 2);

/**
 * Metadata for active A/B testing [Experiment][].
 *
 * @generated from message google.cloud.retail.v2.ExperimentInfo
 */
export type ExperimentInfo = Message<"google.cloud.retail.v2.ExperimentInfo"> & {
  /**
   * Information associated with the specific experiment entity being recorded.
   *
   * @generated from oneof google.cloud.retail.v2.ExperimentInfo.experiment_metadata
   */
  experimentMetadata: {
    /**
     * A/B test between existing Cloud Retail Search
     * [ServingConfig][google.cloud.retail.v2.ServingConfig]s.
     *
     * @generated from field: google.cloud.retail.v2.ExperimentInfo.ServingConfigExperiment serving_config_experiment = 2;
     */
    value: ExperimentInfo_ServingConfigExperiment;
    case: "servingConfigExperiment";
  } | { case: undefined; value?: undefined };

  /**
   * The fully qualified resource name of the experiment that provides the
   * serving config under test, should an active experiment exist. For example:
   * `projects/*\/locations/global/catalogs/default_catalog/experiments/experiment_id`
   *
   * @generated from field: string experiment = 1;
   */
  experiment: string;
};

/**
 * Describes the message google.cloud.retail.v2.ExperimentInfo.
 * Use `create(ExperimentInfoSchema)` to create a new message.
 */
export const ExperimentInfoSchema: GenMessage<ExperimentInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 2);

/**
 * Metadata for active serving config A/B tests.
 *
 * @generated from message google.cloud.retail.v2.ExperimentInfo.ServingConfigExperiment
 */
export type ExperimentInfo_ServingConfigExperiment = Message<"google.cloud.retail.v2.ExperimentInfo.ServingConfigExperiment"> & {
  /**
   * The fully qualified resource name of the original
   * [SearchRequest.placement][google.cloud.retail.v2.SearchRequest.placement]
   * in the search request prior to reassignment by experiment API. For
   * example: `projects/*\/locations/*\/catalogs/*\/servingConfigs/*`.
   *
   * @generated from field: string original_serving_config = 1;
   */
  originalServingConfig: string;

  /**
   * The fully qualified resource name of the serving config
   * [Experiment.VariantArm.serving_config_id][] responsible for generating
   * the search response. For example:
   * `projects/*\/locations/*\/catalogs/*\/servingConfigs/*`.
   *
   * @generated from field: string experiment_serving_config = 2;
   */
  experimentServingConfig: string;
};

/**
 * Describes the message google.cloud.retail.v2.ExperimentInfo.ServingConfigExperiment.
 * Use `create(ExperimentInfo_ServingConfigExperimentSchema)` to create a new message.
 */
export const ExperimentInfo_ServingConfigExperimentSchema: GenMessage<ExperimentInfo_ServingConfigExperiment> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_search_service, 2, 0);

/**
 * Service for search.
 *
 * This feature is only available for users who have Retail Search enabled.
 * Enable Retail Search on Cloud Console before using this feature.
 *
 * @generated from service google.cloud.retail.v2.SearchService
 */
export const SearchService: GenService<{
  /**
   * Performs a search.
   *
   * This feature is only available for users who have Retail Search enabled.
   * Enable Retail Search on Cloud Console before using this feature.
   *
   * @generated from rpc google.cloud.retail.v2.SearchService.Search
   */
  search: {
    methodKind: "unary";
    input: typeof SearchRequestSchema;
    output: typeof SearchResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_retail_v2_search_service, 0);

