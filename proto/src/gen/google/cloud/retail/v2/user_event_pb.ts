// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/retail/v2/user_event.proto (package google.cloud.retail.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { CustomAttribute, UserInfo } from "./common_pb";
import { file_google_cloud_retail_v2_common } from "./common_pb";
import type { Product } from "./product_pb";
import { file_google_cloud_retail_v2_product } from "./product_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/retail/v2/user_event.proto.
 */
export const file_google_cloud_retail_v2_user_event: GenFile = /*@__PURE__*/
  fileDesc("Cidnb29nbGUvY2xvdWQvcmV0YWlsL3YyL3VzZXJfZXZlbnQucHJvdG8SFmdvb2dsZS5jbG91ZC5yZXRhaWwudjIilwYKCVVzZXJFdmVudBIXCgpldmVudF90eXBlGAEgASgJQgPgQQISFwoKdmlzaXRvcl9pZBgCIAEoCUID4EECEhIKCnNlc3Npb25faWQYFSABKAkSLgoKZXZlbnRfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFgoOZXhwZXJpbWVudF9pZHMYBCADKAkSGQoRYXR0cmlidXRpb25fdG9rZW4YBSABKAkSPgoPcHJvZHVjdF9kZXRhaWxzGAYgAygLMiUuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5Qcm9kdWN0RGV0YWlsEkMKEWNvbXBsZXRpb25fZGV0YWlsGBYgASgLMiguZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5Db21wbGV0aW9uRGV0YWlsEkUKCmF0dHJpYnV0ZXMYByADKAsyMS5nb29nbGUuY2xvdWQucmV0YWlsLnYyLlVzZXJFdmVudC5BdHRyaWJ1dGVzRW50cnkSDwoHY2FydF9pZBgIIAEoCRJJChRwdXJjaGFzZV90cmFuc2FjdGlvbhgJIAEoCzIrLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUHVyY2hhc2VUcmFuc2FjdGlvbhIUCgxzZWFyY2hfcXVlcnkYCiABKAkSDgoGZmlsdGVyGBAgASgJEhAKCG9yZGVyX2J5GBEgASgJEg4KBm9mZnNldBgSIAEoBRIXCg9wYWdlX2NhdGVnb3JpZXMYCyADKAkSMwoJdXNlcl9pbmZvGAwgASgLMiAuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5Vc2VySW5mbxILCgN1cmkYDSABKAkSFAoMcmVmZXJyZXJfdXJpGA4gASgJEhQKDHBhZ2Vfdmlld19pZBgPIAEoCRIOCgZlbnRpdHkYFyABKAkaWgoPQXR0cmlidXRlc0VudHJ5EgsKA2tleRgBIAEoCRI2CgV2YWx1ZRgCIAEoCzInLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ3VzdG9tQXR0cmlidXRlOgI4ASJ1Cg1Qcm9kdWN0RGV0YWlsEjUKB3Byb2R1Y3QYASABKAsyHy5nb29nbGUuY2xvdWQucmV0YWlsLnYyLlByb2R1Y3RCA+BBAhItCghxdWFudGl0eRgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlInAKEENvbXBsZXRpb25EZXRhaWwSJAocY29tcGxldGlvbl9hdHRyaWJ1dGlvbl90b2tlbhgBIAEoCRIbChNzZWxlY3RlZF9zdWdnZXN0aW9uGAIgASgJEhkKEXNlbGVjdGVkX3Bvc2l0aW9uGAMgASgFIm4KE1B1cmNoYXNlVHJhbnNhY3Rpb24SCgoCaWQYASABKAkSFAoHcmV2ZW51ZRgCIAEoAkID4EECEgsKA3RheBgDIAEoAhIMCgRjb3N0GAQgASgCEhoKDWN1cnJlbmN5X2NvZGUYBSABKAlCA+BBAkK5AQoaY29tLmdvb2dsZS5jbG91ZC5yZXRhaWwudjJCDlVzZXJFdmVudFByb3RvUAFaMmNsb3VkLmdvb2dsZS5jb20vZ28vcmV0YWlsL2FwaXYyL3JldGFpbHBiO3JldGFpbHBiogIGUkVUQUlMqgIWR29vZ2xlLkNsb3VkLlJldGFpbC5WMsoCFkdvb2dsZVxDbG91ZFxSZXRhaWxcVjLqAhlHb29nbGU6OkNsb3VkOjpSZXRhaWw6OlYyYgZwcm90bzM", [file_google_api_field_behavior, file_google_cloud_retail_v2_common, file_google_cloud_retail_v2_product, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * UserEvent captures all metadata information Retail API needs to know about
 * how end users interact with customers' website.
 *
 * @generated from message google.cloud.retail.v2.UserEvent
 */
export type UserEvent = Message<"google.cloud.retail.v2.UserEvent"> & {
  /**
   * Required. User event type. Allowed values are:
   *
   * * `add-to-cart`: Products being added to cart.
   * * `remove-from-cart`: Products being removed from cart.
   * * `category-page-view`: Special pages such as sale or promotion pages
   *   viewed.
   * * `detail-page-view`: Products detail page viewed.
   * * `home-page-view`: Homepage viewed.
   * * `promotion-offered`: Promotion is offered to a user.
   * * `promotion-not-offered`: Promotion is not offered to a user.
   * * `purchase-complete`: User finishing a purchase.
   * * `search`: Product search.
   * * `shopping-cart-page-view`: User viewing a shopping cart.
   *
   * @generated from field: string event_type = 1;
   */
  eventType: string;

  /**
   * Required. A unique identifier for tracking visitors.
   *
   * For example, this could be implemented with an HTTP cookie, which should be
   * able to uniquely identify a visitor on a single device. This unique
   * identifier should not change if the visitor log in/out of the website.
   *
   * Don't set the field to the same fixed ID for different users. This mixes
   * the event history of those users together, which results in degraded model
   * quality.
   *
   * The field must be a UTF-8 encoded string with a length limit of 128
   * characters. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * The field should not contain PII or user-data. We recommend to use Google
   * Analytics [Client
   * ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId)
   * for this field.
   *
   * @generated from field: string visitor_id = 2;
   */
  visitorId: string;

  /**
   * A unique identifier for tracking a visitor session with a length limit of
   * 128 bytes. A session is an aggregation of an end user behavior in a time
   * span.
   *
   * A general guideline to populate the sesion_id:
   * 1. If user has no activity for 30 min, a new session_id should be assigned.
   * 2. The session_id should be unique across users, suggest use uuid or add
   * visitor_id as prefix.
   *
   * @generated from field: string session_id = 21;
   */
  sessionId: string;

  /**
   * Only required for
   * [UserEventService.ImportUserEvents][google.cloud.retail.v2.UserEventService.ImportUserEvents]
   * method. Timestamp of when the user event happened.
   *
   * @generated from field: google.protobuf.Timestamp event_time = 3;
   */
  eventTime?: Timestamp;

  /**
   * A list of identifiers for the independent experiment groups this user event
   * belongs to. This is used to distinguish between user events associated with
   * different experiment setups (e.g. using Retail API, using different
   * recommendation models).
   *
   * @generated from field: repeated string experiment_ids = 4;
   */
  experimentIds: string[];

  /**
   * Highly recommended for user events that are the result of
   * [PredictionService.Predict][google.cloud.retail.v2.PredictionService.Predict].
   * This field enables accurate attribution of recommendation model
   * performance.
   *
   * The value must be a valid
   * [PredictResponse.attribution_token][google.cloud.retail.v2.PredictResponse.attribution_token]
   * for user events that are the result of
   * [PredictionService.Predict][google.cloud.retail.v2.PredictionService.Predict].
   * The value must be a valid
   * [SearchResponse.attribution_token][google.cloud.retail.v2.SearchResponse.attribution_token]
   * for user events that are the result of
   * [SearchService.Search][google.cloud.retail.v2.SearchService.Search].
   *
   * This token enables us to accurately attribute page view or purchase back to
   * the event and the particular predict response containing this
   * clicked/purchased product. If user clicks on product K in the
   * recommendation results, pass
   * [PredictResponse.attribution_token][google.cloud.retail.v2.PredictResponse.attribution_token]
   * as a URL parameter to product K's page. When recording events on product
   * K's page, log the
   * [PredictResponse.attribution_token][google.cloud.retail.v2.PredictResponse.attribution_token]
   * to this field.
   *
   * @generated from field: string attribution_token = 5;
   */
  attributionToken: string;

  /**
   * The main product details related to the event.
   *
   * This field is optional except for the following event types:
   *
   * * `add-to-cart`
   * * `detail-page-view`
   * * `purchase-complete`
   *
   * In a `search` event, this field represents the products returned to the end
   * user on the current page (the end user may have not finished browsing the
   * whole page yet). When a new page is returned to the end user, after
   * pagination/filtering/ordering even for the same query, a new `search` event
   * with different
   * [product_details][google.cloud.retail.v2.UserEvent.product_details] is
   * desired. The end user may have not finished browsing the whole page yet.
   *
   * @generated from field: repeated google.cloud.retail.v2.ProductDetail product_details = 6;
   */
  productDetails: ProductDetail[];

  /**
   * The main auto-completion details related to the event.
   *
   * This field should be set for `search` event when autocomplete function is
   * enabled and the user clicks a suggestion for search.
   *
   * @generated from field: google.cloud.retail.v2.CompletionDetail completion_detail = 22;
   */
  completionDetail?: CompletionDetail;

  /**
   * Extra user event features to include in the recommendation model.
   *
   * If you provide custom attributes for ingested user events, also include
   * them in the user events that you associate with prediction requests. Custom
   * attribute formatting must be consistent between imported events and events
   * provided with prediction requests. This lets the Retail API use
   * those custom attributes when training models and serving predictions, which
   * helps improve recommendation quality.
   *
   * This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT
   * error is returned:
   *
   * * The key must be a UTF-8 encoded string with a length limit of 5,000
   *   characters.
   * * For text attributes, at most 400 values are allowed. Empty values are not
   *   allowed. Each value must be a UTF-8 encoded string with a length limit of
   *   256 characters.
   * * For number attributes, at most 400 values are allowed.
   *
   * For product recommendations, an example of extra user information is
   * traffic_channel, which is how a user arrives at the site. Users can arrive
   * at the site by coming to the site directly, coming through Google
   * search, or in other ways.
   *
   * @generated from field: map<string, google.cloud.retail.v2.CustomAttribute> attributes = 7;
   */
  attributes: { [key: string]: CustomAttribute };

  /**
   * The ID or name of the associated shopping cart. This ID is used
   * to associate multiple items added or present in the cart before purchase.
   *
   * This can only be set for `add-to-cart`, `purchase-complete`, or
   * `shopping-cart-page-view` events.
   *
   * @generated from field: string cart_id = 8;
   */
  cartId: string;

  /**
   * A transaction represents the entire purchase transaction.
   *
   * Required for `purchase-complete` events. Other event types should not set
   * this field. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: google.cloud.retail.v2.PurchaseTransaction purchase_transaction = 9;
   */
  purchaseTransaction?: PurchaseTransaction;

  /**
   * The user's search query.
   *
   * See [SearchRequest.query][google.cloud.retail.v2.SearchRequest.query] for
   * definition.
   *
   * The value must be a UTF-8 encoded string with a length limit of 5,000
   * characters. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * At least one of
   * [search_query][google.cloud.retail.v2.UserEvent.search_query] or
   * [page_categories][google.cloud.retail.v2.UserEvent.page_categories] is
   * required for `search` events. Other event types should not set this field.
   * Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: string search_query = 10;
   */
  searchQuery: string;

  /**
   * The filter syntax consists of an expression language for constructing a
   * predicate from one or more fields of the products being filtered.
   *
   * See [SearchRequest.filter][google.cloud.retail.v2.SearchRequest.filter] for
   * definition and syntax.
   *
   * The value must be a UTF-8 encoded string with a length limit of 1,000
   * characters. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: string filter = 16;
   */
  filter: string;

  /**
   * The order in which products are returned.
   *
   * See [SearchRequest.order_by][google.cloud.retail.v2.SearchRequest.order_by]
   * for definition and syntax.
   *
   * The value must be a UTF-8 encoded string with a length limit of 1,000
   * characters. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * This can only be set for `search` events. Other event types should not set
   * this field. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: string order_by = 17;
   */
  orderBy: string;

  /**
   * An integer that specifies the current offset for pagination (the 0-indexed
   * starting location, amongst the products deemed by the API as relevant).
   *
   * See [SearchRequest.offset][google.cloud.retail.v2.SearchRequest.offset] for
   * definition.
   *
   * If this field is negative, an INVALID_ARGUMENT is returned.
   *
   * This can only be set for `search` events. Other event types should not set
   * this field. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: int32 offset = 18;
   */
  offset: number;

  /**
   * The categories associated with a category page.
   *
   * To represent full path of category, use '>' sign to separate different
   * hierarchies. If '>' is part of the category name, replace it with
   * other character(s).
   *
   * Category pages include special pages such as sales or promotions. For
   * instance, a special sale page may have the category hierarchy:
   * "pageCategories" : ["Sales > 2017 Black Friday Deals"].
   *
   * Required for `category-page-view` events. At least one of
   * [search_query][google.cloud.retail.v2.UserEvent.search_query] or
   * [page_categories][google.cloud.retail.v2.UserEvent.page_categories] is
   * required for `search` events. Other event types should not set this field.
   * Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: repeated string page_categories = 11;
   */
  pageCategories: string[];

  /**
   * User information.
   *
   * @generated from field: google.cloud.retail.v2.UserInfo user_info = 12;
   */
  userInfo?: UserInfo;

  /**
   * Complete URL (window.location.href) of the user's current page.
   *
   * When using the client side event reporting with JavaScript pixel and Google
   * Tag Manager, this value is filled in automatically. Maximum length 5,000
   * characters.
   *
   * @generated from field: string uri = 13;
   */
  uri: string;

  /**
   * The referrer URL of the current page.
   *
   * When using the client side event reporting with JavaScript pixel and Google
   * Tag Manager, this value is filled in automatically.
   *
   * @generated from field: string referrer_uri = 14;
   */
  referrerUri: string;

  /**
   * A unique ID of a web page view.
   *
   * This should be kept the same for all user events triggered from the same
   * pageview. For example, an item detail page view could trigger multiple
   * events as the user is browsing the page. The `pageViewId` property should
   * be kept the same for all these events so that they can be grouped together
   * properly.
   *
   * When using the client side event reporting with JavaScript pixel and Google
   * Tag Manager, this value is filled in automatically.
   *
   * @generated from field: string page_view_id = 15;
   */
  pageViewId: string;

  /**
   * The entity for customers that may run multiple different entities, domains,
   * sites or regions, for example, `Google US`, `Google Ads`, `Waymo`,
   * `google.com`, `youtube.com`, etc.
   * We recommend that you set this field to get better per-entity search,
   * completion, and prediction results.
   *
   * @generated from field: string entity = 23;
   */
  entity: string;
};

/**
 * Describes the message google.cloud.retail.v2.UserEvent.
 * Use `create(UserEventSchema)` to create a new message.
 */
export const UserEventSchema: GenMessage<UserEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_user_event, 0);

/**
 * Detailed product information associated with a user event.
 *
 * @generated from message google.cloud.retail.v2.ProductDetail
 */
export type ProductDetail = Message<"google.cloud.retail.v2.ProductDetail"> & {
  /**
   * Required. [Product][google.cloud.retail.v2.Product] information.
   *
   * Required field(s):
   *
   * * [Product.id][google.cloud.retail.v2.Product.id]
   *
   * Optional override field(s):
   *
   * * [Product.price_info][google.cloud.retail.v2.Product.price_info]
   *
   * If any supported optional fields are provided, we will treat them as a full
   * override when looking up product information from the catalog. Thus, it is
   * important to ensure that the overriding fields are accurate and
   * complete.
   *
   * All other product fields are ignored and instead populated via catalog
   * lookup after event ingestion.
   *
   * @generated from field: google.cloud.retail.v2.Product product = 1;
   */
  product?: Product;

  /**
   * Quantity of the product associated with the user event.
   *
   * For example, this field will be 2 if two products are added to the shopping
   * cart for `purchase-complete` event. Required for `add-to-cart` and
   * `purchase-complete` event types.
   *
   * @generated from field: google.protobuf.Int32Value quantity = 2;
   */
  quantity?: number;
};

/**
 * Describes the message google.cloud.retail.v2.ProductDetail.
 * Use `create(ProductDetailSchema)` to create a new message.
 */
export const ProductDetailSchema: GenMessage<ProductDetail> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_user_event, 1);

/**
 * Detailed completion information including completion attribution token and
 * clicked completion info.
 *
 * @generated from message google.cloud.retail.v2.CompletionDetail
 */
export type CompletionDetail = Message<"google.cloud.retail.v2.CompletionDetail"> & {
  /**
   * Completion attribution token in
   * [CompleteQueryResponse.attribution_token][google.cloud.retail.v2.CompleteQueryResponse.attribution_token].
   *
   * @generated from field: string completion_attribution_token = 1;
   */
  completionAttributionToken: string;

  /**
   * End user selected
   * [CompleteQueryResponse.CompletionResult.suggestion][google.cloud.retail.v2.CompleteQueryResponse.CompletionResult.suggestion].
   *
   * @generated from field: string selected_suggestion = 2;
   */
  selectedSuggestion: string;

  /**
   * End user selected
   * [CompleteQueryResponse.CompletionResult.suggestion][google.cloud.retail.v2.CompleteQueryResponse.CompletionResult.suggestion]
   * position, starting from 0.
   *
   * @generated from field: int32 selected_position = 3;
   */
  selectedPosition: number;
};

/**
 * Describes the message google.cloud.retail.v2.CompletionDetail.
 * Use `create(CompletionDetailSchema)` to create a new message.
 */
export const CompletionDetailSchema: GenMessage<CompletionDetail> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_user_event, 2);

/**
 * A transaction represents the entire purchase transaction.
 *
 * @generated from message google.cloud.retail.v2.PurchaseTransaction
 */
export type PurchaseTransaction = Message<"google.cloud.retail.v2.PurchaseTransaction"> & {
  /**
   * The transaction ID with a length limit of 128 characters.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. Total non-zero revenue or grand total associated with the
   * transaction. This value include shipping, tax, or other adjustments to
   * total revenue that you want to include as part of your revenue
   * calculations.
   *
   * @generated from field: float revenue = 2;
   */
  revenue: number;

  /**
   * All the taxes associated with the transaction.
   *
   * @generated from field: float tax = 3;
   */
  tax: number;

  /**
   * All the costs associated with the products. These can be manufacturing
   * costs, shipping expenses not borne by the end user, or any other costs,
   * such that:
   *
   * * Profit = [revenue][google.cloud.retail.v2.PurchaseTransaction.revenue] -
   * [tax][google.cloud.retail.v2.PurchaseTransaction.tax] -
   * [cost][google.cloud.retail.v2.PurchaseTransaction.cost]
   *
   * @generated from field: float cost = 4;
   */
  cost: number;

  /**
   * Required. Currency code. Use three-character ISO-4217 code.
   *
   * @generated from field: string currency_code = 5;
   */
  currencyCode: string;
};

/**
 * Describes the message google.cloud.retail.v2.PurchaseTransaction.
 * Use `create(PurchaseTransactionSchema)` to create a new message.
 */
export const PurchaseTransactionSchema: GenMessage<PurchaseTransaction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_user_event, 3);

