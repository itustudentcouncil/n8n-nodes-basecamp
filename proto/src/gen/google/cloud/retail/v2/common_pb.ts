// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/retail/v2/common.proto (package google.cloud.retail.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/retail/v2/common.proto.
 */
export const file_google_cloud_retail_v2_common: GenFile = /*@__PURE__*/
  fileDesc("CiNnb29nbGUvY2xvdWQvcmV0YWlsL3YyL2NvbW1vbi5wcm90bxIWZ29vZ2xlLmNsb3VkLnJldGFpbC52MiLJAgoJQ29uZGl0aW9uEkAKC3F1ZXJ5X3Rlcm1zGAEgAygLMisuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5Db25kaXRpb24uUXVlcnlUZXJtEkYKEWFjdGl2ZV90aW1lX3JhbmdlGAMgAygLMisuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5Db25kaXRpb24uVGltZVJhbmdlEhcKD3BhZ2VfY2F0ZWdvcmllcxgEIAMoCRouCglRdWVyeVRlcm0SDQoFdmFsdWUYASABKAkSEgoKZnVsbF9tYXRjaBgCIAEoCBppCglUaW1lUmFuZ2USLgoKc3RhcnRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIqUMCgRSdWxlEkAKDGJvb3N0X2FjdGlvbhgCIAEoCzIoLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUnVsZS5Cb29zdEFjdGlvbkgAEkYKD3JlZGlyZWN0X2FjdGlvbhgDIAEoCzIrLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUnVsZS5SZWRpcmVjdEFjdGlvbkgAElMKFm9uZXdheV9zeW5vbnltc19hY3Rpb24YBiABKAsyMS5nb29nbGUuY2xvdWQucmV0YWlsLnYyLlJ1bGUuT25ld2F5U3lub255bXNBY3Rpb25IABJUChdkb19ub3RfYXNzb2NpYXRlX2FjdGlvbhgHIAEoCzIxLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUnVsZS5Eb05vdEFzc29jaWF0ZUFjdGlvbkgAEkwKEnJlcGxhY2VtZW50X2FjdGlvbhgIIAEoCzIuLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUnVsZS5SZXBsYWNlbWVudEFjdGlvbkgAEkIKDWlnbm9yZV9hY3Rpb24YCSABKAsyKS5nb29nbGUuY2xvdWQucmV0YWlsLnYyLlJ1bGUuSWdub3JlQWN0aW9uSAASQgoNZmlsdGVyX2FjdGlvbhgKIAEoCzIpLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUnVsZS5GaWx0ZXJBY3Rpb25IABJTChZ0d293YXlfc3lub255bXNfYWN0aW9uGAsgASgLMjEuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5SdWxlLlR3b3dheVN5bm9ueW1zQWN0aW9uSAASWAoZZm9yY2VfcmV0dXJuX2ZhY2V0X2FjdGlvbhgMIAEoCzIzLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUnVsZS5Gb3JjZVJldHVybkZhY2V0QWN0aW9uSAASTQoTcmVtb3ZlX2ZhY2V0X2FjdGlvbhgNIAEoCzIuLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUnVsZS5SZW1vdmVGYWNldEFjdGlvbkgAEjkKCWNvbmRpdGlvbhgBIAEoCzIhLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuQ29uZGl0aW9uQgPgQQIaNQoLQm9vc3RBY3Rpb24SDQoFYm9vc3QYASABKAISFwoPcHJvZHVjdHNfZmlsdGVyGAIgASgJGh4KDEZpbHRlckFjdGlvbhIOCgZmaWx0ZXIYASABKAkaJgoOUmVkaXJlY3RBY3Rpb24SFAoMcmVkaXJlY3RfdXJpGAEgASgJGigKFFR3b3dheVN5bm9ueW1zQWN0aW9uEhAKCHN5bm9ueW1zGAEgAygJGlMKFE9uZXdheVN5bm9ueW1zQWN0aW9uEhMKC3F1ZXJ5X3Rlcm1zGAMgAygJEhAKCHN5bm9ueW1zGAQgAygJEhQKDG9uZXdheV90ZXJtcxgCIAMoCRpaChREb05vdEFzc29jaWF0ZUFjdGlvbhITCgtxdWVyeV90ZXJtcxgCIAMoCRIeChZkb19ub3RfYXNzb2NpYXRlX3Rlcm1zGAMgAygJEg0KBXRlcm1zGAEgAygJGlAKEVJlcGxhY2VtZW50QWN0aW9uEhMKC3F1ZXJ5X3Rlcm1zGAIgAygJEhgKEHJlcGxhY2VtZW50X3Rlcm0YAyABKAkSDAoEdGVybRgBIAEoCRokCgxJZ25vcmVBY3Rpb24SFAoMaWdub3JlX3Rlcm1zGAEgAygJGs4BChZGb3JjZVJldHVybkZhY2V0QWN0aW9uEm8KGmZhY2V0X3Bvc2l0aW9uX2FkanVzdG1lbnRzGAEgAygLMksuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5SdWxlLkZvcmNlUmV0dXJuRmFjZXRBY3Rpb24uRmFjZXRQb3NpdGlvbkFkanVzdG1lbnQaQwoXRmFjZXRQb3NpdGlvbkFkanVzdG1lbnQSFgoOYXR0cmlidXRlX25hbWUYASABKAkSEAoIcG9zaXRpb24YAiABKAUaLAoRUmVtb3ZlRmFjZXRBY3Rpb24SFwoPYXR0cmlidXRlX25hbWVzGAEgAygJQggKBmFjdGlvbiIvCghBdWRpZW5jZRIPCgdnZW5kZXJzGAEgAygJEhIKCmFnZV9ncm91cHMYAiADKAkiMwoJQ29sb3JJbmZvEhYKDmNvbG9yX2ZhbWlsaWVzGAEgAygJEg4KBmNvbG9ycxgCIAMoCSKGAQoPQ3VzdG9tQXR0cmlidXRlEgwKBHRleHQYASADKAkSDwoHbnVtYmVycxgCIAMoARIbCgpzZWFyY2hhYmxlGAMgASgIQgIYAUgAiAEBEhoKCWluZGV4YWJsZRgEIAEoCEICGAFIAYgBAUINCgtfc2VhcmNoYWJsZUIMCgpfaW5kZXhhYmxlIjIKD0Z1bGZpbGxtZW50SW5mbxIMCgR0eXBlGAEgASgJEhEKCXBsYWNlX2lkcxgCIAMoCSI4CgVJbWFnZRIQCgN1cmkYASABKAlCA+BBAhIOCgZoZWlnaHQYAiABKAUSDQoFd2lkdGgYAyABKAUieAoISW50ZXJ2YWwSEQoHbWluaW11bRgBIAEoAUgAEhsKEWV4Y2x1c2l2ZV9taW5pbXVtGAIgASgBSAASEQoHbWF4aW11bRgDIAEoAUgBEhsKEWV4Y2x1c2l2ZV9tYXhpbXVtGAQgASgBSAFCBQoDbWluQgUKA21heCKJAwoJUHJpY2VJbmZvEhUKDWN1cnJlbmN5X2NvZGUYASABKAkSDQoFcHJpY2UYAiABKAISFgoOb3JpZ2luYWxfcHJpY2UYAyABKAISDAoEY29zdBgEIAEoAhI4ChRwcmljZV9lZmZlY3RpdmVfdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNQoRcHJpY2VfZXhwaXJlX3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEkYKC3ByaWNlX3JhbmdlGAcgASgLMiwuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5QcmljZUluZm8uUHJpY2VSYW5nZUID4EEDGncKClByaWNlUmFuZ2USLwoFcHJpY2UYASABKAsyIC5nb29nbGUuY2xvdWQucmV0YWlsLnYyLkludGVydmFsEjgKDm9yaWdpbmFsX3ByaWNlGAIgASgLMiAuZ29vZ2xlLmNsb3VkLnJldGFpbC52Mi5JbnRlcnZhbCJQCgZSYXRpbmcSFAoMcmF0aW5nX2NvdW50GAEgASgFEhYKDmF2ZXJhZ2VfcmF0aW5nGAIgASgCEhgKEHJhdGluZ19oaXN0b2dyYW0YAyADKAUiYAoIVXNlckluZm8SDwoHdXNlcl9pZBgBIAEoCRISCgppcF9hZGRyZXNzGAIgASgJEhIKCnVzZXJfYWdlbnQYAyABKAkSGwoTZGlyZWN0X3VzZXJfcmVxdWVzdBgEIAEoCCKhAgoOTG9jYWxJbnZlbnRvcnkSEAoIcGxhY2VfaWQYASABKAkSNQoKcHJpY2VfaW5mbxgCIAEoCzIhLmdvb2dsZS5jbG91ZC5yZXRhaWwudjIuUHJpY2VJbmZvEkoKCmF0dHJpYnV0ZXMYAyADKAsyNi5nb29nbGUuY2xvdWQucmV0YWlsLnYyLkxvY2FsSW52ZW50b3J5LkF0dHJpYnV0ZXNFbnRyeRIeChFmdWxmaWxsbWVudF90eXBlcxgEIAMoCUID4EEEGloKD0F0dHJpYnV0ZXNFbnRyeRILCgNrZXkYASABKAkSNgoFdmFsdWUYAiABKAsyJy5nb29nbGUuY2xvdWQucmV0YWlsLnYyLkN1c3RvbUF0dHJpYnV0ZToCOAEqhgEKFEF0dHJpYnV0ZUNvbmZpZ0xldmVsEiYKIkFUVFJJQlVURV9DT05GSUdfTEVWRUxfVU5TUEVDSUZJRUQQABIiCh5QUk9EVUNUX0xFVkVMX0FUVFJJQlVURV9DT05GSUcQARIiCh5DQVRBTE9HX0xFVkVMX0FUVFJJQlVURV9DT05GSUcQAippCgxTb2x1dGlvblR5cGUSHQoZU09MVVRJT05fVFlQRV9VTlNQRUNJRklFRBAAEiAKHFNPTFVUSU9OX1RZUEVfUkVDT01NRU5EQVRJT04QARIYChRTT0xVVElPTl9UWVBFX1NFQVJDSBACKqEBCh5SZWNvbW1lbmRhdGlvbnNGaWx0ZXJpbmdPcHRpb24SMAosUkVDT01NRU5EQVRJT05TX0ZJTFRFUklOR19PUFRJT05fVU5TUEVDSUZJRUQQABImCiJSRUNPTU1FTkRBVElPTlNfRklMVEVSSU5HX0RJU0FCTEVEEAESJQohUkVDT01NRU5EQVRJT05TX0ZJTFRFUklOR19FTkFCTEVEEAMqiwEKFVNlYXJjaFNvbHV0aW9uVXNlQ2FzZRIoCiRTRUFSQ0hfU09MVVRJT05fVVNFX0NBU0VfVU5TUEVDSUZJRUQQABIjCh9TRUFSQ0hfU09MVVRJT05fVVNFX0NBU0VfU0VBUkNIEAESIwofU0VBUkNIX1NPTFVUSU9OX1VTRV9DQVNFX0JST1dTRRACQrYBChpjb20uZ29vZ2xlLmNsb3VkLnJldGFpbC52MkILQ29tbW9uUHJvdG9QAVoyY2xvdWQuZ29vZ2xlLmNvbS9nby9yZXRhaWwvYXBpdjIvcmV0YWlscGI7cmV0YWlscGKiAgZSRVRBSUyqAhZHb29nbGUuQ2xvdWQuUmV0YWlsLlYyygIWR29vZ2xlXENsb3VkXFJldGFpbFxWMuoCGUdvb2dsZTo6Q2xvdWQ6OlJldGFpbDo6VjJiBnByb3RvMw", [file_google_api_field_behavior, file_google_protobuf_timestamp]);

/**
 * Metadata that is used to define a condition that triggers an action.
 * A valid condition must specify at least one of 'query_terms' or
 * 'products_filter'. If multiple fields are specified, the condition is met if
 * all the fields are satisfied e.g. if a set of query terms and product_filter
 * are set, then only items matching the product_filter for requests with a
 * query matching the query terms wil get boosted.
 *
 * @generated from message google.cloud.retail.v2.Condition
 */
export type Condition = Message<"google.cloud.retail.v2.Condition"> & {
  /**
   * A list (up to 10 entries) of terms to match the query on. If not
   * specified, match all queries.
   * If many query terms are specified, the condition
   * is matched if any of the terms is a match (i.e. using the OR operator).
   *
   * @generated from field: repeated google.cloud.retail.v2.Condition.QueryTerm query_terms = 1;
   */
  queryTerms: Condition_QueryTerm[];

  /**
   * Range of time(s) specifying when Condition is active.
   * Condition true if any time range matches.
   *
   * @generated from field: repeated google.cloud.retail.v2.Condition.TimeRange active_time_range = 3;
   */
  activeTimeRange: Condition_TimeRange[];

  /**
   * Used to support browse uses cases.
   * A list (up to 10 entries) of categories or departments.
   * The format should be the same as
   * [UserEvent.page_categories][google.cloud.retail.v2.UserEvent.page_categories];
   *
   * @generated from field: repeated string page_categories = 4;
   */
  pageCategories: string[];
};

/**
 * Describes the message google.cloud.retail.v2.Condition.
 * Use `create(ConditionSchema)` to create a new message.
 */
export const ConditionSchema: GenMessage<Condition> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 0);

/**
 * Query terms that we want to match on.
 *
 * @generated from message google.cloud.retail.v2.Condition.QueryTerm
 */
export type Condition_QueryTerm = Message<"google.cloud.retail.v2.Condition.QueryTerm"> & {
  /**
   * The value of the term to match on.
   * Value cannot be empty.
   * Value can have at most 3 terms if specified as a partial match. Each
   * space separated string is considered as one term.
   * For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms
   * and not allowed for a partial match.
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * Whether this is supposed to be a full or partial match.
   *
   * @generated from field: bool full_match = 2;
   */
  fullMatch: boolean;
};

/**
 * Describes the message google.cloud.retail.v2.Condition.QueryTerm.
 * Use `create(Condition_QueryTermSchema)` to create a new message.
 */
export const Condition_QueryTermSchema: GenMessage<Condition_QueryTerm> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 0, 0);

/**
 * Used for time-dependent conditions.
 * Example: Want to have rule applied for week long sale.
 *
 * @generated from message google.cloud.retail.v2.Condition.TimeRange
 */
export type Condition_TimeRange = Message<"google.cloud.retail.v2.Condition.TimeRange"> & {
  /**
   * Start of time range. Range is inclusive.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * End of time range. Range is inclusive.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.retail.v2.Condition.TimeRange.
 * Use `create(Condition_TimeRangeSchema)` to create a new message.
 */
export const Condition_TimeRangeSchema: GenMessage<Condition_TimeRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 0, 1);

/**
 * A rule is a condition-action pair
 *
 * * A condition defines when a rule is to be triggered.
 * * An action specifies what occurs on that trigger.
 * Currently rules only work for [controls][google.cloud.retail.v2.Control] with
 * [SOLUTION_TYPE_SEARCH][google.cloud.retail.v2.SolutionType.SOLUTION_TYPE_SEARCH].
 *
 * @generated from message google.cloud.retail.v2.Rule
 */
export type Rule = Message<"google.cloud.retail.v2.Rule"> & {
  /**
   * An action must be provided.
   *
   * @generated from oneof google.cloud.retail.v2.Rule.action
   */
  action: {
    /**
     * A boost action.
     *
     * @generated from field: google.cloud.retail.v2.Rule.BoostAction boost_action = 2;
     */
    value: Rule_BoostAction;
    case: "boostAction";
  } | {
    /**
     * Redirects a shopper to a specific page.
     *
     * @generated from field: google.cloud.retail.v2.Rule.RedirectAction redirect_action = 3;
     */
    value: Rule_RedirectAction;
    case: "redirectAction";
  } | {
    /**
     * Treats specific term as a synonym with a group of terms.
     * Group of terms will not be treated as synonyms with the specific term.
     *
     * @generated from field: google.cloud.retail.v2.Rule.OnewaySynonymsAction oneway_synonyms_action = 6;
     */
    value: Rule_OnewaySynonymsAction;
    case: "onewaySynonymsAction";
  } | {
    /**
     * Prevents term from being associated with other terms.
     *
     * @generated from field: google.cloud.retail.v2.Rule.DoNotAssociateAction do_not_associate_action = 7;
     */
    value: Rule_DoNotAssociateAction;
    case: "doNotAssociateAction";
  } | {
    /**
     * Replaces specific terms in the query.
     *
     * @generated from field: google.cloud.retail.v2.Rule.ReplacementAction replacement_action = 8;
     */
    value: Rule_ReplacementAction;
    case: "replacementAction";
  } | {
    /**
     * Ignores specific terms from query during search.
     *
     * @generated from field: google.cloud.retail.v2.Rule.IgnoreAction ignore_action = 9;
     */
    value: Rule_IgnoreAction;
    case: "ignoreAction";
  } | {
    /**
     * Filters results.
     *
     * @generated from field: google.cloud.retail.v2.Rule.FilterAction filter_action = 10;
     */
    value: Rule_FilterAction;
    case: "filterAction";
  } | {
    /**
     * Treats a set of terms as synonyms of one another.
     *
     * @generated from field: google.cloud.retail.v2.Rule.TwowaySynonymsAction twoway_synonyms_action = 11;
     */
    value: Rule_TwowaySynonymsAction;
    case: "twowaySynonymsAction";
  } | {
    /**
     * Force returns an attribute as a facet in the request.
     *
     * @generated from field: google.cloud.retail.v2.Rule.ForceReturnFacetAction force_return_facet_action = 12;
     */
    value: Rule_ForceReturnFacetAction;
    case: "forceReturnFacetAction";
  } | {
    /**
     * Remove an attribute as a facet in the request (if present).
     *
     * @generated from field: google.cloud.retail.v2.Rule.RemoveFacetAction remove_facet_action = 13;
     */
    value: Rule_RemoveFacetAction;
    case: "removeFacetAction";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The condition that triggers the rule.
   * If the condition is empty, the rule will always apply.
   *
   * @generated from field: google.cloud.retail.v2.Condition condition = 1;
   */
  condition?: Condition;
};

/**
 * Describes the message google.cloud.retail.v2.Rule.
 * Use `create(RuleSchema)` to create a new message.
 */
export const RuleSchema: GenMessage<Rule> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1);

/**
 * A boost action to apply to results matching condition specified above.
 *
 * @generated from message google.cloud.retail.v2.Rule.BoostAction
 */
export type Rule_BoostAction = Message<"google.cloud.retail.v2.Rule.BoostAction"> & {
  /**
   * Strength of the condition boost, which must be in [-1, 1]. Negative
   * boost means demotion. Default is 0.0.
   *
   * Setting to 1.0 gives the item a big promotion. However, it does not
   * necessarily mean that the boosted item will be the top result at all
   * times, nor that other items will be excluded. Results could still be
   * shown even when none of them matches the condition. And results that
   * are significantly more relevant to the search query can still trump
   * your heavily favored but irrelevant items.
   *
   * Setting to -1.0 gives the item a big demotion. However, results that
   * are deeply relevant might still be shown. The item will have an
   * upstream battle to get a fairly high ranking, but it is not blocked out
   * completely.
   *
   * Setting to 0.0 means no boost applied. The boosting condition is
   * ignored.
   *
   * @generated from field: float boost = 1;
   */
  boost: number;

  /**
   * The filter can have a max size of 5000 characters.
   * An expression which specifies which products to apply an action to.
   * The syntax and supported fields are the same as a filter expression. See
   * [SearchRequest.filter][google.cloud.retail.v2.SearchRequest.filter] for
   * detail syntax and limitations.
   *
   * Examples:
   *
   * * To boost products with product ID "product_1" or "product_2", and
   * color
   *   "Red" or "Blue":<br>
   *   *(id: ANY("product_1", "product_2"))<br>*
   *   *AND<br>*
   *   *(colorFamilies: ANY("Red", "Blue"))<br>*
   *
   * @generated from field: string products_filter = 2;
   */
  productsFilter: string;
};

/**
 * Describes the message google.cloud.retail.v2.Rule.BoostAction.
 * Use `create(Rule_BoostActionSchema)` to create a new message.
 */
export const Rule_BoostActionSchema: GenMessage<Rule_BoostAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 0);

/**
 * * Rule Condition:
 *     - No
 *     [Condition.query_terms][google.cloud.retail.v2.Condition.query_terms]
 *     provided is a global match.
 *     - 1 or more
 *     [Condition.query_terms][google.cloud.retail.v2.Condition.query_terms]
 *     provided are combined with OR operator.
 *
 * * Action Input: The request query and filter that are applied to the
 * retrieved products, in addition to any filters already provided with the
 * SearchRequest. The AND operator is used to combine the query's existing
 * filters with the filter rule(s). NOTE: May result in 0 results when
 * filters conflict.
 *
 * * Action Result: Filters the returned objects to be ONLY those that passed
 * the filter.
 *
 * @generated from message google.cloud.retail.v2.Rule.FilterAction
 */
export type Rule_FilterAction = Message<"google.cloud.retail.v2.Rule.FilterAction"> & {
  /**
   * A filter to apply on the matching condition results. Supported features:
   *
   * * [filter][google.cloud.retail.v2.Rule.FilterAction.filter] must be set.
   * * Filter syntax is identical to
   * [SearchRequest.filter][google.cloud.retail.v2.SearchRequest.filter]. For
   * more
   *   information, see [Filter](/retail/docs/filter-and-order#filter).
   * * To filter products with product ID "product_1" or "product_2", and
   * color
   *   "Red" or "Blue":<br>
   *   *(id: ANY("product_1", "product_2"))<br>*
   *   *AND<br>*
   *   *(colorFamilies: ANY("Red", "Blue"))<br>*
   *
   * @generated from field: string filter = 1;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.retail.v2.Rule.FilterAction.
 * Use `create(Rule_FilterActionSchema)` to create a new message.
 */
export const Rule_FilterActionSchema: GenMessage<Rule_FilterAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 1);

/**
 * Redirects a shopper to a specific page.
 *
 * * Rule Condition:
 *   Must specify
 *   [Condition.query_terms][google.cloud.retail.v2.Condition.query_terms].
 * * Action Input: Request Query
 * * Action Result: Redirects shopper to provided uri.
 *
 * @generated from message google.cloud.retail.v2.Rule.RedirectAction
 */
export type Rule_RedirectAction = Message<"google.cloud.retail.v2.Rule.RedirectAction"> & {
  /**
   * URL must have length equal or less than 2000 characters.
   *
   * @generated from field: string redirect_uri = 1;
   */
  redirectUri: string;
};

/**
 * Describes the message google.cloud.retail.v2.Rule.RedirectAction.
 * Use `create(Rule_RedirectActionSchema)` to create a new message.
 */
export const Rule_RedirectActionSchema: GenMessage<Rule_RedirectAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 2);

/**
 * Creates a set of terms that will be treated as synonyms of each other.
 * Example: synonyms of "sneakers" and "shoes":
 *
 *  * "sneakers" will use a synonym of "shoes".
 *  * "shoes" will use a synonym of "sneakers".
 *
 * @generated from message google.cloud.retail.v2.Rule.TwowaySynonymsAction
 */
export type Rule_TwowaySynonymsAction = Message<"google.cloud.retail.v2.Rule.TwowaySynonymsAction"> & {
  /**
   * Defines a set of synonyms.
   * Can specify up to 100 synonyms.
   * Must specify at least 2 synonyms.
   *
   * @generated from field: repeated string synonyms = 1;
   */
  synonyms: string[];
};

/**
 * Describes the message google.cloud.retail.v2.Rule.TwowaySynonymsAction.
 * Use `create(Rule_TwowaySynonymsActionSchema)` to create a new message.
 */
export const Rule_TwowaySynonymsActionSchema: GenMessage<Rule_TwowaySynonymsAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 3);

/**
 * Maps a set of terms to a set of synonyms.
 * Set of synonyms will be treated as synonyms of each query term only.
 * `query_terms` will not be treated as synonyms of each other.
 * Example: "sneakers" will use a synonym of "shoes".
 * "shoes" will not use a synonym of "sneakers".
 *
 * @generated from message google.cloud.retail.v2.Rule.OnewaySynonymsAction
 */
export type Rule_OnewaySynonymsAction = Message<"google.cloud.retail.v2.Rule.OnewaySynonymsAction"> & {
  /**
   * Terms from the search query.
   * Will treat synonyms as their synonyms.
   * Not themselves synonyms of the synonyms.
   * Can specify up to 100 terms.
   *
   * @generated from field: repeated string query_terms = 3;
   */
  queryTerms: string[];

  /**
   * Defines a set of synonyms.
   * Cannot contain duplicates.
   * Can specify up to 100 synonyms.
   *
   * @generated from field: repeated string synonyms = 4;
   */
  synonyms: string[];

  /**
   * Will be [deprecated = true] post migration;
   *
   * @generated from field: repeated string oneway_terms = 2;
   */
  onewayTerms: string[];
};

/**
 * Describes the message google.cloud.retail.v2.Rule.OnewaySynonymsAction.
 * Use `create(Rule_OnewaySynonymsActionSchema)` to create a new message.
 */
export const Rule_OnewaySynonymsActionSchema: GenMessage<Rule_OnewaySynonymsAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 4);

/**
 * Prevents `query_term` from being associated with specified terms during
 * search.
 * Example: Don't associate "gShoe" and "cheap".
 *
 * @generated from message google.cloud.retail.v2.Rule.DoNotAssociateAction
 */
export type Rule_DoNotAssociateAction = Message<"google.cloud.retail.v2.Rule.DoNotAssociateAction"> & {
  /**
   * Terms from the search query.
   * Will not consider do_not_associate_terms for search if in search query.
   * Can specify up to 100 terms.
   *
   * @generated from field: repeated string query_terms = 2;
   */
  queryTerms: string[];

  /**
   * Cannot contain duplicates or the query term.
   * Can specify up to 100 terms.
   *
   * @generated from field: repeated string do_not_associate_terms = 3;
   */
  doNotAssociateTerms: string[];

  /**
   * Will be [deprecated = true] post migration;
   *
   * @generated from field: repeated string terms = 1;
   */
  terms: string[];
};

/**
 * Describes the message google.cloud.retail.v2.Rule.DoNotAssociateAction.
 * Use `create(Rule_DoNotAssociateActionSchema)` to create a new message.
 */
export const Rule_DoNotAssociateActionSchema: GenMessage<Rule_DoNotAssociateAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 5);

/**
 * Replaces a term in the query. Multiple replacement candidates can be
 * specified. All `query_terms` will be replaced with the replacement term.
 * Example: Replace "gShoe" with "google shoe".
 *
 * @generated from message google.cloud.retail.v2.Rule.ReplacementAction
 */
export type Rule_ReplacementAction = Message<"google.cloud.retail.v2.Rule.ReplacementAction"> & {
  /**
   * Terms from the search query.
   * Will be replaced by replacement term.
   * Can specify up to 100 terms.
   *
   * @generated from field: repeated string query_terms = 2;
   */
  queryTerms: string[];

  /**
   * Term that will be used for replacement.
   *
   * @generated from field: string replacement_term = 3;
   */
  replacementTerm: string;

  /**
   * Will be [deprecated = true] post migration;
   *
   * @generated from field: string term = 1;
   */
  term: string;
};

/**
 * Describes the message google.cloud.retail.v2.Rule.ReplacementAction.
 * Use `create(Rule_ReplacementActionSchema)` to create a new message.
 */
export const Rule_ReplacementActionSchema: GenMessage<Rule_ReplacementAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 6);

/**
 * Prevents a term in the query from being used in search.
 * Example: Don't search for "shoddy".
 *
 * @generated from message google.cloud.retail.v2.Rule.IgnoreAction
 */
export type Rule_IgnoreAction = Message<"google.cloud.retail.v2.Rule.IgnoreAction"> & {
  /**
   * Terms to ignore in the search query.
   *
   * @generated from field: repeated string ignore_terms = 1;
   */
  ignoreTerms: string[];
};

/**
 * Describes the message google.cloud.retail.v2.Rule.IgnoreAction.
 * Use `create(Rule_IgnoreActionSchema)` to create a new message.
 */
export const Rule_IgnoreActionSchema: GenMessage<Rule_IgnoreAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 7);

/**
 * Force returns an attribute/facet in the request around a certain position
 * or above.
 *
 * * Rule Condition:
 *   Must specify non-empty
 *   [Condition.query_terms][google.cloud.retail.v2.Condition.query_terms]
 *   (for search only) or
 *   [Condition.page_categories][google.cloud.retail.v2.Condition.page_categories]
 *   (for browse only), but can't specify both.
 *
 * * Action Inputs: attribute name, position
 *
 * * Action Result: Will force return a facet key around a certain position
 * or above if the condition is satisfied.
 *
 * Example: Suppose the query is "shoes", the
 * [Condition.query_terms][google.cloud.retail.v2.Condition.query_terms] is
 * "shoes", the
 * [ForceReturnFacetAction.FacetPositionAdjustment.attribute_name][google.cloud.retail.v2.Rule.ForceReturnFacetAction.FacetPositionAdjustment.attribute_name]
 * is "size" and the
 * [ForceReturnFacetAction.FacetPositionAdjustment.position][google.cloud.retail.v2.Rule.ForceReturnFacetAction.FacetPositionAdjustment.position]
 * is 8.
 *
 * Two cases: a) The facet key "size" is not already in the top 8 slots, then
 * the facet "size" will appear at a position close to 8. b) The facet key
 * "size" in among the top 8 positions in the request, then it will stay at
 * its current rank.
 *
 * @generated from message google.cloud.retail.v2.Rule.ForceReturnFacetAction
 */
export type Rule_ForceReturnFacetAction = Message<"google.cloud.retail.v2.Rule.ForceReturnFacetAction"> & {
  /**
   * Each instance corresponds to a force return attribute for the given
   * condition. There can't be more 3 instances here.
   *
   * @generated from field: repeated google.cloud.retail.v2.Rule.ForceReturnFacetAction.FacetPositionAdjustment facet_position_adjustments = 1;
   */
  facetPositionAdjustments: Rule_ForceReturnFacetAction_FacetPositionAdjustment[];
};

/**
 * Describes the message google.cloud.retail.v2.Rule.ForceReturnFacetAction.
 * Use `create(Rule_ForceReturnFacetActionSchema)` to create a new message.
 */
export const Rule_ForceReturnFacetActionSchema: GenMessage<Rule_ForceReturnFacetAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 8);

/**
 * Each facet position adjustment consists of a single attribute name (i.e.
 * facet key) along with a specified position.
 *
 * @generated from message google.cloud.retail.v2.Rule.ForceReturnFacetAction.FacetPositionAdjustment
 */
export type Rule_ForceReturnFacetAction_FacetPositionAdjustment = Message<"google.cloud.retail.v2.Rule.ForceReturnFacetAction.FacetPositionAdjustment"> & {
  /**
   * The attribute name to force return as a facet. Each attribute name
   * should be a valid attribute name, be non-empty and contain at most 80
   * characters long.
   *
   * @generated from field: string attribute_name = 1;
   */
  attributeName: string;

  /**
   * This is the position in the request as explained above. It should be
   * strictly positive be at most 100.
   *
   * @generated from field: int32 position = 2;
   */
  position: number;
};

/**
 * Describes the message google.cloud.retail.v2.Rule.ForceReturnFacetAction.FacetPositionAdjustment.
 * Use `create(Rule_ForceReturnFacetAction_FacetPositionAdjustmentSchema)` to create a new message.
 */
export const Rule_ForceReturnFacetAction_FacetPositionAdjustmentSchema: GenMessage<Rule_ForceReturnFacetAction_FacetPositionAdjustment> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 8, 0);

/**
 * Removes an attribute/facet in the request if is present.
 *
 * * Rule Condition:
 *   Must specify non-empty
 *   [Condition.query_terms][google.cloud.retail.v2.Condition.query_terms]
 *   (for search only) or
 *   [Condition.page_categories][google.cloud.retail.v2.Condition.page_categories]
 *   (for browse only), but can't specify both.
 *
 * * Action Input: attribute name
 *
 * * Action Result: Will remove the attribute (as a facet) from the request
 * if it is present.
 *
 * Example: Suppose the query is "shoes", the
 * [Condition.query_terms][google.cloud.retail.v2.Condition.query_terms] is
 * "shoes" and the attribute name "size", then facet key "size" will be
 * removed from the request (if it is present).
 *
 * @generated from message google.cloud.retail.v2.Rule.RemoveFacetAction
 */
export type Rule_RemoveFacetAction = Message<"google.cloud.retail.v2.Rule.RemoveFacetAction"> & {
  /**
   * The attribute names (i.e. facet keys) to remove from the dynamic facets
   * (if present in the request). There can't be more 3 attribute names.
   * Each attribute name should be a valid attribute name, be non-empty and
   * contain at most 80 characters.
   *
   * @generated from field: repeated string attribute_names = 1;
   */
  attributeNames: string[];
};

/**
 * Describes the message google.cloud.retail.v2.Rule.RemoveFacetAction.
 * Use `create(Rule_RemoveFacetActionSchema)` to create a new message.
 */
export const Rule_RemoveFacetActionSchema: GenMessage<Rule_RemoveFacetAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 1, 9);

/**
 * An intended audience of the [Product][google.cloud.retail.v2.Product] for
 * whom it's sold.
 *
 * @generated from message google.cloud.retail.v2.Audience
 */
export type Audience = Message<"google.cloud.retail.v2.Audience"> & {
  /**
   * The genders of the audience. Strongly encouraged to use the standard
   * values: "male", "female", "unisex".
   *
   * At most 5 values are allowed. Each value must be a UTF-8 encoded string
   * with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error
   * is returned.
   *
   * Google Merchant Center property
   * [gender](https://support.google.com/merchants/answer/6324479). Schema.org
   * property
   * [Product.audience.suggestedGender](https://schema.org/suggestedGender).
   *
   * @generated from field: repeated string genders = 1;
   */
  genders: string[];

  /**
   * The age groups of the audience. Strongly encouraged to use the standard
   * values: "newborn" (up to 3 months old), "infant" (3–12 months old),
   * "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically
   * teens or older).
   *
   * At most 5 values are allowed. Each value must be a UTF-8 encoded string
   * with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error
   * is returned.
   *
   * Google Merchant Center property
   * [age_group](https://support.google.com/merchants/answer/6324463).
   * Schema.org property
   * [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and
   * [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
   *
   * @generated from field: repeated string age_groups = 2;
   */
  ageGroups: string[];
};

/**
 * Describes the message google.cloud.retail.v2.Audience.
 * Use `create(AudienceSchema)` to create a new message.
 */
export const AudienceSchema: GenMessage<Audience> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 2);

/**
 * The color information of a [Product][google.cloud.retail.v2.Product].
 *
 * @generated from message google.cloud.retail.v2.ColorInfo
 */
export type ColorInfo = Message<"google.cloud.retail.v2.ColorInfo"> & {
  /**
   * The standard color families. Strongly recommended to use the following
   * standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple",
   * "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and
   * "Mixed". Normally it is expected to have only 1 color family. May consider
   * using single "Mixed" instead of multiple values.
   *
   * A maximum of 5 values are allowed. Each value must be a UTF-8 encoded
   * string with a length limit of 128 characters. Otherwise, an
   * INVALID_ARGUMENT error is returned.
   *
   * Google Merchant Center property
   * [color](https://support.google.com/merchants/answer/6324487). Schema.org
   * property [Product.color](https://schema.org/color).
   *
   * @generated from field: repeated string color_families = 1;
   */
  colorFamilies: string[];

  /**
   * The color display names, which may be different from standard color family
   * names, such as the color aliases used in the website frontend. Normally
   * it is expected to have only 1 color. May consider using single "Mixed"
   * instead of multiple values.
   *
   * A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded
   * string with a length limit of 128 characters. Otherwise, an
   * INVALID_ARGUMENT error is returned.
   *
   * Google Merchant Center property
   * [color](https://support.google.com/merchants/answer/6324487). Schema.org
   * property [Product.color](https://schema.org/color).
   *
   * @generated from field: repeated string colors = 2;
   */
  colors: string[];
};

/**
 * Describes the message google.cloud.retail.v2.ColorInfo.
 * Use `create(ColorInfoSchema)` to create a new message.
 */
export const ColorInfoSchema: GenMessage<ColorInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 3);

/**
 * A custom attribute that is not explicitly modeled in
 * [Product][google.cloud.retail.v2.Product].
 *
 * @generated from message google.cloud.retail.v2.CustomAttribute
 */
export type CustomAttribute = Message<"google.cloud.retail.v2.CustomAttribute"> & {
  /**
   * The textual values of this custom attribute. For example, `["yellow",
   * "green"]` when the key is "color".
   *
   * Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is
   * returned.
   *
   * Exactly one of [text][google.cloud.retail.v2.CustomAttribute.text] or
   * [numbers][google.cloud.retail.v2.CustomAttribute.numbers] should be set.
   * Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: repeated string text = 1;
   */
  text: string[];

  /**
   * The numerical values of this custom attribute. For example, `[2.3, 15.4]`
   * when the key is "lengths_cm".
   *
   * Exactly one of [text][google.cloud.retail.v2.CustomAttribute.text] or
   * [numbers][google.cloud.retail.v2.CustomAttribute.numbers] should be set.
   * Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: repeated double numbers = 2;
   */
  numbers: number[];

  /**
   * This field is normally ignored unless
   * [AttributesConfig.attribute_config_level][google.cloud.retail.v2.AttributesConfig.attribute_config_level]
   * of the [Catalog][google.cloud.retail.v2.Catalog] is set to the deprecated
   * 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level
   * attribute configuration, see [Configuration
   * modes](https://cloud.google.com/retail/docs/attribute-config#config-modes).
   * If true, custom attribute values are searchable by text queries in
   * [SearchService.Search][google.cloud.retail.v2.SearchService.Search].
   *
   * This field is ignored in a [UserEvent][google.cloud.retail.v2.UserEvent].
   *
   * Only set if type [text][google.cloud.retail.v2.CustomAttribute.text] is
   * set. Otherwise, a INVALID_ARGUMENT error is returned.
   *
   * @generated from field: optional bool searchable = 3 [deprecated = true];
   * @deprecated
   */
  searchable?: boolean;

  /**
   * This field is normally ignored unless
   * [AttributesConfig.attribute_config_level][google.cloud.retail.v2.AttributesConfig.attribute_config_level]
   * of the [Catalog][google.cloud.retail.v2.Catalog] is set to the deprecated
   * 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level
   * attribute configuration, see [Configuration
   * modes](https://cloud.google.com/retail/docs/attribute-config#config-modes).
   * If true, custom attribute values are indexed, so that they can be filtered,
   * faceted or boosted in
   * [SearchService.Search][google.cloud.retail.v2.SearchService.Search].
   *
   * This field is ignored in a [UserEvent][google.cloud.retail.v2.UserEvent].
   *
   * See [SearchRequest.filter][google.cloud.retail.v2.SearchRequest.filter],
   * [SearchRequest.facet_specs][google.cloud.retail.v2.SearchRequest.facet_specs]
   * and
   * [SearchRequest.boost_spec][google.cloud.retail.v2.SearchRequest.boost_spec]
   * for more details.
   *
   * @generated from field: optional bool indexable = 4 [deprecated = true];
   * @deprecated
   */
  indexable?: boolean;
};

/**
 * Describes the message google.cloud.retail.v2.CustomAttribute.
 * Use `create(CustomAttributeSchema)` to create a new message.
 */
export const CustomAttributeSchema: GenMessage<CustomAttribute> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 4);

/**
 * Fulfillment information, such as the store IDs for in-store pickup or region
 * IDs for different shipping methods.
 *
 * @generated from message google.cloud.retail.v2.FulfillmentInfo
 */
export type FulfillmentInfo = Message<"google.cloud.retail.v2.FulfillmentInfo"> & {
  /**
   * The fulfillment type, including commonly used types (such as pickup in
   * store and same day delivery), and custom types. Customers have to map
   * custom types to their display names before rendering UI.
   *
   * Supported values:
   *
   * * "pickup-in-store"
   * * "ship-to-store"
   * * "same-day-delivery"
   * * "next-day-delivery"
   * * "custom-type-1"
   * * "custom-type-2"
   * * "custom-type-3"
   * * "custom-type-4"
   * * "custom-type-5"
   *
   * If this field is set to an invalid value other than these, an
   * INVALID_ARGUMENT error is returned.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * The IDs for this [type][google.cloud.retail.v2.FulfillmentInfo.type], such
   * as the store IDs for
   * [FulfillmentInfo.type.pickup-in-store][google.cloud.retail.v2.FulfillmentInfo.type]
   * or the region IDs for
   * [FulfillmentInfo.type.same-day-delivery][google.cloud.retail.v2.FulfillmentInfo.type].
   *
   * A maximum of 3000 values are allowed. Each value must be a string with a
   * length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such
   * as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is
   * returned.
   *
   * @generated from field: repeated string place_ids = 2;
   */
  placeIds: string[];
};

/**
 * Describes the message google.cloud.retail.v2.FulfillmentInfo.
 * Use `create(FulfillmentInfoSchema)` to create a new message.
 */
export const FulfillmentInfoSchema: GenMessage<FulfillmentInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 5);

/**
 * [Product][google.cloud.retail.v2.Product] image. Recommendations AI and
 * Retail Search do not use product images to improve prediction and search
 * results. However, product images can be returned in results, and are shown in
 * prediction or search previews in the console.
 *
 * @generated from message google.cloud.retail.v2.Image
 */
export type Image = Message<"google.cloud.retail.v2.Image"> & {
  /**
   * Required. URI of the image.
   *
   * This field must be a valid UTF-8 encoded URI with a length limit of 5,000
   * characters. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * Google Merchant Center property
   * [image_link](https://support.google.com/merchants/answer/6324350).
   * Schema.org property [Product.image](https://schema.org/image).
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Height of the image in number of pixels.
   *
   * This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is
   * returned.
   *
   * @generated from field: int32 height = 2;
   */
  height: number;

  /**
   * Width of the image in number of pixels.
   *
   * This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is
   * returned.
   *
   * @generated from field: int32 width = 3;
   */
  width: number;
};

/**
 * Describes the message google.cloud.retail.v2.Image.
 * Use `create(ImageSchema)` to create a new message.
 */
export const ImageSchema: GenMessage<Image> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 6);

/**
 * A floating point interval.
 *
 * @generated from message google.cloud.retail.v2.Interval
 */
export type Interval = Message<"google.cloud.retail.v2.Interval"> & {
  /**
   * The lower bound of the interval. If neither of the min fields are set, then
   * the lower bound is negative infinity.
   *
   * This field must not be larger than max.
   * Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from oneof google.cloud.retail.v2.Interval.min
   */
  min: {
    /**
     * Inclusive lower bound.
     *
     * @generated from field: double minimum = 1;
     */
    value: number;
    case: "minimum";
  } | {
    /**
     * Exclusive lower bound.
     *
     * @generated from field: double exclusive_minimum = 2;
     */
    value: number;
    case: "exclusiveMinimum";
  } | { case: undefined; value?: undefined };

  /**
   * The upper bound of the interval. If neither of the max fields are set, then
   * the upper bound is positive infinity.
   *
   * This field must be not smaller than min.
   * Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from oneof google.cloud.retail.v2.Interval.max
   */
  max: {
    /**
     * Inclusive upper bound.
     *
     * @generated from field: double maximum = 3;
     */
    value: number;
    case: "maximum";
  } | {
    /**
     * Exclusive upper bound.
     *
     * @generated from field: double exclusive_maximum = 4;
     */
    value: number;
    case: "exclusiveMaximum";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.retail.v2.Interval.
 * Use `create(IntervalSchema)` to create a new message.
 */
export const IntervalSchema: GenMessage<Interval> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 7);

/**
 * The price information of a [Product][google.cloud.retail.v2.Product].
 *
 * @generated from message google.cloud.retail.v2.PriceInfo
 */
export type PriceInfo = Message<"google.cloud.retail.v2.PriceInfo"> & {
  /**
   * The 3-letter currency code defined in [ISO
   * 4217](https://www.iso.org/iso-4217-currency-codes.html).
   *
   * If this field is an unrecognizable currency code, an INVALID_ARGUMENT
   * error is returned.
   *
   * The [Product.Type.VARIANT][google.cloud.retail.v2.Product.Type.VARIANT]
   * [Product][google.cloud.retail.v2.Product]s with the same
   * [Product.primary_product_id][google.cloud.retail.v2.Product.primary_product_id]
   * must share the same
   * [currency_code][google.cloud.retail.v2.PriceInfo.currency_code]. Otherwise,
   * a FAILED_PRECONDITION error is returned.
   *
   * @generated from field: string currency_code = 1;
   */
  currencyCode: string;

  /**
   * Price of the product.
   *
   * Google Merchant Center property
   * [price](https://support.google.com/merchants/answer/6324371). Schema.org
   * property [Offer.price](https://schema.org/price).
   *
   * @generated from field: float price = 2;
   */
  price: number;

  /**
   * Price of the product without any discount. If zero, by default set to be
   * the [price][google.cloud.retail.v2.PriceInfo.price]. If set,
   * [original_price][google.cloud.retail.v2.PriceInfo.original_price] should be
   * greater than or equal to [price][google.cloud.retail.v2.PriceInfo.price],
   * otherwise an INVALID_ARGUMENT error is thrown.
   *
   * @generated from field: float original_price = 3;
   */
  originalPrice: number;

  /**
   * The costs associated with the sale of a particular product. Used for gross
   * profit reporting.
   *
   * * Profit = [price][google.cloud.retail.v2.PriceInfo.price] -
   * [cost][google.cloud.retail.v2.PriceInfo.cost]
   *
   * Google Merchant Center property
   * [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
   *
   * @generated from field: float cost = 4;
   */
  cost: number;

  /**
   * The timestamp when the [price][google.cloud.retail.v2.PriceInfo.price]
   * starts to be effective. This can be set as a future timestamp, and the
   * [price][google.cloud.retail.v2.PriceInfo.price] is only used for search
   * after
   * [price_effective_time][google.cloud.retail.v2.PriceInfo.price_effective_time].
   * If so, the
   * [original_price][google.cloud.retail.v2.PriceInfo.original_price] must be
   * set and [original_price][google.cloud.retail.v2.PriceInfo.original_price]
   * is used before
   * [price_effective_time][google.cloud.retail.v2.PriceInfo.price_effective_time].
   *
   * Do not set if [price][google.cloud.retail.v2.PriceInfo.price] is always
   * effective because it will cause additional latency during search.
   *
   * @generated from field: google.protobuf.Timestamp price_effective_time = 5;
   */
  priceEffectiveTime?: Timestamp;

  /**
   * The timestamp when the [price][google.cloud.retail.v2.PriceInfo.price]
   * stops to be effective. The [price][google.cloud.retail.v2.PriceInfo.price]
   * is used for search before
   * [price_expire_time][google.cloud.retail.v2.PriceInfo.price_expire_time]. If
   * this field is set, the
   * [original_price][google.cloud.retail.v2.PriceInfo.original_price] must be
   * set and [original_price][google.cloud.retail.v2.PriceInfo.original_price]
   * is used after
   * [price_expire_time][google.cloud.retail.v2.PriceInfo.price_expire_time].
   *
   * Do not set if [price][google.cloud.retail.v2.PriceInfo.price] is always
   * effective because it will cause additional latency during search.
   *
   * @generated from field: google.protobuf.Timestamp price_expire_time = 6;
   */
  priceExpireTime?: Timestamp;

  /**
   * Output only. The price range of all the child
   * [Product.Type.VARIANT][google.cloud.retail.v2.Product.Type.VARIANT]
   * [Product][google.cloud.retail.v2.Product]s grouped together on the
   * [Product.Type.PRIMARY][google.cloud.retail.v2.Product.Type.PRIMARY]
   * [Product][google.cloud.retail.v2.Product]. Only populated for
   * [Product.Type.PRIMARY][google.cloud.retail.v2.Product.Type.PRIMARY]
   * [Product][google.cloud.retail.v2.Product]s.
   *
   * Note: This field is OUTPUT_ONLY for
   * [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct].
   * Do not set this field in API requests.
   *
   * @generated from field: google.cloud.retail.v2.PriceInfo.PriceRange price_range = 7;
   */
  priceRange?: PriceInfo_PriceRange;
};

/**
 * Describes the message google.cloud.retail.v2.PriceInfo.
 * Use `create(PriceInfoSchema)` to create a new message.
 */
export const PriceInfoSchema: GenMessage<PriceInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 8);

/**
 * The price range of all
 * [variant][google.cloud.retail.v2.Product.Type.VARIANT]
 * [Product][google.cloud.retail.v2.Product] having the same
 * [Product.primary_product_id][google.cloud.retail.v2.Product.primary_product_id].
 *
 * @generated from message google.cloud.retail.v2.PriceInfo.PriceRange
 */
export type PriceInfo_PriceRange = Message<"google.cloud.retail.v2.PriceInfo.PriceRange"> & {
  /**
   * The inclusive
   * [Product.pricing_info.price][google.cloud.retail.v2.PriceInfo.price]
   * interval of all [variant][google.cloud.retail.v2.Product.Type.VARIANT]
   * [Product][google.cloud.retail.v2.Product] having the same
   * [Product.primary_product_id][google.cloud.retail.v2.Product.primary_product_id].
   *
   * @generated from field: google.cloud.retail.v2.Interval price = 1;
   */
  price?: Interval;

  /**
   * The inclusive
   * [Product.pricing_info.original_price][google.cloud.retail.v2.PriceInfo.original_price]
   * internal of all [variant][google.cloud.retail.v2.Product.Type.VARIANT]
   * [Product][google.cloud.retail.v2.Product] having the same
   * [Product.primary_product_id][google.cloud.retail.v2.Product.primary_product_id].
   *
   * @generated from field: google.cloud.retail.v2.Interval original_price = 2;
   */
  originalPrice?: Interval;
};

/**
 * Describes the message google.cloud.retail.v2.PriceInfo.PriceRange.
 * Use `create(PriceInfo_PriceRangeSchema)` to create a new message.
 */
export const PriceInfo_PriceRangeSchema: GenMessage<PriceInfo_PriceRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 8, 0);

/**
 * The rating of a [Product][google.cloud.retail.v2.Product].
 *
 * @generated from message google.cloud.retail.v2.Rating
 */
export type Rating = Message<"google.cloud.retail.v2.Rating"> & {
  /**
   * The total number of ratings. This value is independent of the value of
   * [rating_histogram][google.cloud.retail.v2.Rating.rating_histogram].
   *
   * This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is
   * returned.
   *
   * @generated from field: int32 rating_count = 1;
   */
  ratingCount: number;

  /**
   * The average rating of the [Product][google.cloud.retail.v2.Product].
   *
   * The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is
   * returned.
   *
   * @generated from field: float average_rating = 2;
   */
  averageRating: number;

  /**
   * List of rating counts per rating value (index = rating - 1). The list is
   * empty if there is no rating. If the list is non-empty, its size is
   * always 5. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * For example, [41, 14, 13, 47, 303]. It means that the
   * [Product][google.cloud.retail.v2.Product] got 41 ratings with 1 star, 14
   * ratings with 2 star, and so on.
   *
   * @generated from field: repeated int32 rating_histogram = 3;
   */
  ratingHistogram: number[];
};

/**
 * Describes the message google.cloud.retail.v2.Rating.
 * Use `create(RatingSchema)` to create a new message.
 */
export const RatingSchema: GenMessage<Rating> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 9);

/**
 * Information of an end user.
 *
 * @generated from message google.cloud.retail.v2.UserInfo
 */
export type UserInfo = Message<"google.cloud.retail.v2.UserInfo"> & {
  /**
   * Highly recommended for logged-in users. Unique identifier for logged-in
   * user, such as a user name. Don't set for anonymous users.
   *
   * Always use a hashed value for this ID.
   *
   * Don't set the field to the same fixed ID for different users. This mixes
   * the event history of those users together, which results in degraded
   * model quality.
   *
   * The field must be a UTF-8 encoded string with a length limit of 128
   * characters. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The end user's IP address. This field is used to extract location
   * information for personalization.
   *
   * This field must be either an IPv4 address (e.g. "104.133.9.80") or an IPv6
   * address (e.g. "2001:0db8:85a3:0000:0000:8a2e:0370:7334"). Otherwise, an
   * INVALID_ARGUMENT error is returned.
   *
   * This should not be set when:
   *
   * * setting
   * [SearchRequest.user_info][google.cloud.retail.v2.SearchRequest.user_info].
   * * using the JavaScript tag in
   * [UserEventService.CollectUserEvent][google.cloud.retail.v2.UserEventService.CollectUserEvent]
   * or if
   * [direct_user_request][google.cloud.retail.v2.UserInfo.direct_user_request]
   * is set.
   *
   * @generated from field: string ip_address = 2;
   */
  ipAddress: string;

  /**
   * User agent as included in the HTTP header. Required for getting
   * [SearchResponse.sponsored_results][google.cloud.retail.v2.SearchResponse.sponsored_results].
   *
   * The field must be a UTF-8 encoded string with a length limit of 1,000
   * characters. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * This should not be set when using the client side event reporting with
   * GTM or JavaScript tag in
   * [UserEventService.CollectUserEvent][google.cloud.retail.v2.UserEventService.CollectUserEvent]
   * or if
   * [direct_user_request][google.cloud.retail.v2.UserInfo.direct_user_request]
   * is set.
   *
   * @generated from field: string user_agent = 3;
   */
  userAgent: string;

  /**
   * True if the request is made directly from the end user, in which case the
   * [ip_address][google.cloud.retail.v2.UserInfo.ip_address] and
   * [user_agent][google.cloud.retail.v2.UserInfo.user_agent] can be populated
   * from the HTTP request. This flag should be set only if the API request is
   * made directly from the end user such as a mobile app (and not if a gateway
   * or a server is processing and pushing the user events).
   *
   * This should not be set when using the JavaScript tag in
   * [UserEventService.CollectUserEvent][google.cloud.retail.v2.UserEventService.CollectUserEvent].
   *
   * @generated from field: bool direct_user_request = 4;
   */
  directUserRequest: boolean;
};

/**
 * Describes the message google.cloud.retail.v2.UserInfo.
 * Use `create(UserInfoSchema)` to create a new message.
 */
export const UserInfoSchema: GenMessage<UserInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 10);

/**
 * The inventory information at a place (e.g. a store) identified
 * by a place ID.
 *
 * @generated from message google.cloud.retail.v2.LocalInventory
 */
export type LocalInventory = Message<"google.cloud.retail.v2.LocalInventory"> & {
  /**
   * The place ID for the current set of inventory information.
   *
   * @generated from field: string place_id = 1;
   */
  placeId: string;

  /**
   * Product price and cost information.
   *
   * Google Merchant Center property
   * [price](https://support.google.com/merchants/answer/6324371).
   *
   * @generated from field: google.cloud.retail.v2.PriceInfo price_info = 2;
   */
  priceInfo?: PriceInfo;

  /**
   * Additional local inventory attributes, for example, store name, promotion
   * tags, etc.
   *
   * This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT
   * error is returned:
   *
   * * At most 30 attributes are allowed.
   * * The key must be a UTF-8 encoded string with a length limit of 32
   *   characters.
   * * The key must match the pattern: `[a-zA-Z0-9][a-zA-Z0-9_]*`. For example,
   *   key0LikeThis or KEY_1_LIKE_THIS.
   * * The attribute values must be of the same type (text or number).
   * * Only 1 value is allowed for each attribute.
   * * For text values, the length limit is 256 UTF-8 characters.
   * * The attribute does not support search. The `searchable` field should be
   *   unset or set to false.
   * * The max summed total bytes of custom attribute keys and values per
   *   product is 5MiB.
   *
   * @generated from field: map<string, google.cloud.retail.v2.CustomAttribute> attributes = 3;
   */
  attributes: { [key: string]: CustomAttribute };

  /**
   * Input only. Supported fulfillment types. Valid fulfillment type values
   * include commonly used types (such as pickup in store and same day
   * delivery), and custom types. Customers have to map custom types to their
   * display names before rendering UI.
   *
   * Supported values:
   *
   * * "pickup-in-store"
   * * "ship-to-store"
   * * "same-day-delivery"
   * * "next-day-delivery"
   * * "custom-type-1"
   * * "custom-type-2"
   * * "custom-type-3"
   * * "custom-type-4"
   * * "custom-type-5"
   *
   * If this field is set to an invalid value other than these, an
   * INVALID_ARGUMENT error is returned.
   *
   * All the elements must be distinct. Otherwise, an INVALID_ARGUMENT error is
   * returned.
   *
   * @generated from field: repeated string fulfillment_types = 4;
   */
  fulfillmentTypes: string[];
};

/**
 * Describes the message google.cloud.retail.v2.LocalInventory.
 * Use `create(LocalInventorySchema)` to create a new message.
 */
export const LocalInventorySchema: GenMessage<LocalInventory> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_v2_common, 11);

/**
 * At which level we offer configuration for attributes.
 *
 * @generated from enum google.cloud.retail.v2.AttributeConfigLevel
 */
export enum AttributeConfigLevel {
  /**
   * Value used when unset. In this case, server behavior defaults to
   * [CATALOG_LEVEL_ATTRIBUTE_CONFIG][google.cloud.retail.v2.AttributeConfigLevel.CATALOG_LEVEL_ATTRIBUTE_CONFIG].
   *
   * @generated from enum value: ATTRIBUTE_CONFIG_LEVEL_UNSPECIFIED = 0;
   */
  ATTRIBUTE_CONFIG_LEVEL_UNSPECIFIED = 0,

  /**
   * At this level, we honor the attribute configurations set in
   * [Product.attributes][google.cloud.retail.v2.Product.attributes].
   *
   * @generated from enum value: PRODUCT_LEVEL_ATTRIBUTE_CONFIG = 1;
   */
  PRODUCT_LEVEL_ATTRIBUTE_CONFIG = 1,

  /**
   * At this level, we honor the attribute configurations set in
   * [CatalogConfig.attribute_configs][].
   *
   * @generated from enum value: CATALOG_LEVEL_ATTRIBUTE_CONFIG = 2;
   */
  CATALOG_LEVEL_ATTRIBUTE_CONFIG = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.AttributeConfigLevel.
 */
export const AttributeConfigLevelSchema: GenEnum<AttributeConfigLevel> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_common, 0);

/**
 * The type of solution.
 *
 * @generated from enum google.cloud.retail.v2.SolutionType
 */
export enum SolutionType {
  /**
   * Default value.
   *
   * @generated from enum value: SOLUTION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Used for Recommendations AI.
   *
   * @generated from enum value: SOLUTION_TYPE_RECOMMENDATION = 1;
   */
  RECOMMENDATION = 1,

  /**
   * Used for Retail Search.
   *
   * @generated from enum value: SOLUTION_TYPE_SEARCH = 2;
   */
  SEARCH = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.SolutionType.
 */
export const SolutionTypeSchema: GenEnum<SolutionType> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_common, 1);

/**
 * If filtering for recommendations is enabled.
 *
 * @generated from enum google.cloud.retail.v2.RecommendationsFilteringOption
 */
export enum RecommendationsFilteringOption {
  /**
   * Value used when unset.
   * In this case, server behavior defaults to
   * [RECOMMENDATIONS_FILTERING_DISABLED][google.cloud.retail.v2.RecommendationsFilteringOption.RECOMMENDATIONS_FILTERING_DISABLED].
   *
   * @generated from enum value: RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED = 0;
   */
  RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED = 0,

  /**
   * Recommendation filtering is disabled.
   *
   * @generated from enum value: RECOMMENDATIONS_FILTERING_DISABLED = 1;
   */
  RECOMMENDATIONS_FILTERING_DISABLED = 1,

  /**
   * Recommendation filtering is enabled.
   *
   * @generated from enum value: RECOMMENDATIONS_FILTERING_ENABLED = 3;
   */
  RECOMMENDATIONS_FILTERING_ENABLED = 3,
}

/**
 * Describes the enum google.cloud.retail.v2.RecommendationsFilteringOption.
 */
export const RecommendationsFilteringOptionSchema: GenEnum<RecommendationsFilteringOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_common, 2);

/**
 * The use case of Cloud Retail Search.
 *
 * @generated from enum google.cloud.retail.v2.SearchSolutionUseCase
 */
export enum SearchSolutionUseCase {
  /**
   * The value when it's unspecified. In this case, server behavior defaults to
   * [SEARCH_SOLUTION_USE_CASE_SEARCH][google.cloud.retail.v2.SearchSolutionUseCase.SEARCH_SOLUTION_USE_CASE_SEARCH].
   *
   * @generated from enum value: SEARCH_SOLUTION_USE_CASE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Search use case. Expects the traffic has a non-empty
   * [query][google.cloud.retail.v2.SearchRequest.query].
   *
   * @generated from enum value: SEARCH_SOLUTION_USE_CASE_SEARCH = 1;
   */
  SEARCH = 1,

  /**
   * Browse use case. Expects the traffic has an empty
   * [query][google.cloud.retail.v2.SearchRequest.query].
   *
   * @generated from enum value: SEARCH_SOLUTION_USE_CASE_BROWSE = 2;
   */
  BROWSE = 2,
}

/**
 * Describes the enum google.cloud.retail.v2.SearchSolutionUseCase.
 */
export const SearchSolutionUseCaseSchema: GenEnum<SearchSolutionUseCase> = /*@__PURE__*/
  enumDesc(file_google_cloud_retail_v2_common, 3);

