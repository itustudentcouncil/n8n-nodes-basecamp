// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/retail/logging/error_log.proto (package google.cloud.retail.logging, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/retail/logging/error_log.proto.
 */
export const file_google_cloud_retail_logging_error_log: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvY2xvdWQvcmV0YWlsL2xvZ2dpbmcvZXJyb3JfbG9nLnByb3RvEhtnb29nbGUuY2xvdWQucmV0YWlsLmxvZ2dpbmciIQoOU2VydmljZUNvbnRleHQSDwoHc2VydmljZRgBIAEoCSIyChJIdHRwUmVxdWVzdENvbnRleHQSHAoUcmVzcG9uc2Vfc3RhdHVzX2NvZGUYASABKAUiJwoOU291cmNlTG9jYXRpb24SFQoNZnVuY3Rpb25fbmFtZRgBIAEoCSKbAQoMRXJyb3JDb250ZXh0EkUKDGh0dHBfcmVxdWVzdBgBIAEoCzIvLmdvb2dsZS5jbG91ZC5yZXRhaWwubG9nZ2luZy5IdHRwUmVxdWVzdENvbnRleHQSRAoPcmVwb3J0X2xvY2F0aW9uGAIgASgLMisuZ29vZ2xlLmNsb3VkLnJldGFpbC5sb2dnaW5nLlNvdXJjZUxvY2F0aW9uIqQBChJJbXBvcnRFcnJvckNvbnRleHQSFgoOb3BlcmF0aW9uX25hbWUYASABKAkSEAoIZ2NzX3BhdGgYAiABKAkSEwoLbGluZV9udW1iZXIYAyABKAkSFgoMY2F0YWxvZ19pdGVtGAQgASgJSAASEQoHcHJvZHVjdBgFIAEoCUgAEhQKCnVzZXJfZXZlbnQYBiABKAlIAEIOCgxsaW5lX2NvbnRlbnQi7wIKCEVycm9yTG9nEkQKD3NlcnZpY2VfY29udGV4dBgBIAEoCzIrLmdvb2dsZS5jbG91ZC5yZXRhaWwubG9nZ2luZy5TZXJ2aWNlQ29udGV4dBI6Cgdjb250ZXh0GAIgASgLMikuZ29vZ2xlLmNsb3VkLnJldGFpbC5sb2dnaW5nLkVycm9yQ29udGV4dBIPCgdtZXNzYWdlGAMgASgJEiIKBnN0YXR1cxgEIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzEjAKD3JlcXVlc3RfcGF5bG9hZBgFIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSMQoQcmVzcG9uc2VfcGF5bG9hZBgGIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSRwoOaW1wb3J0X3BheWxvYWQYByABKAsyLy5nb29nbGUuY2xvdWQucmV0YWlsLmxvZ2dpbmcuSW1wb3J0RXJyb3JDb250ZXh0QtABCh9jb20uZ29vZ2xlLmNsb3VkLnJldGFpbC5sb2dnaW5nQg1FcnJvckxvZ1Byb3RvUAFaNmNsb3VkLmdvb2dsZS5jb20vZ28vcmV0YWlsL2xvZ2dpbmcvbG9nZ2luZ3BiO2xvZ2dpbmdwYqICBlJFVEFJTKoCG0dvb2dsZS5DbG91ZC5SZXRhaWwuTG9nZ2luZ8oCG0dvb2dsZVxDbG91ZFxSZXRhaWxcTG9nZ2luZ+oCHkdvb2dsZTo6Q2xvdWQ6OlJldGFpbDo6TG9nZ2luZ2IGcHJvdG8z", [file_google_protobuf_struct, file_google_rpc_status]);

/**
 * Describes a running service that sends errors.
 *
 * @generated from message google.cloud.retail.logging.ServiceContext
 */
export type ServiceContext = Message<"google.cloud.retail.logging.ServiceContext"> & {
  /**
   * An identifier of the service.
   * For example, "retail.googleapis.com".
   *
   * @generated from field: string service = 1;
   */
  service: string;
};

/**
 * Describes the message google.cloud.retail.logging.ServiceContext.
 * Use `create(ServiceContextSchema)` to create a new message.
 */
export const ServiceContextSchema: GenMessage<ServiceContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_logging_error_log, 0);

/**
 * HTTP request data that is related to a reported error.
 *
 * @generated from message google.cloud.retail.logging.HttpRequestContext
 */
export type HttpRequestContext = Message<"google.cloud.retail.logging.HttpRequestContext"> & {
  /**
   * The HTTP response status code for the request.
   *
   * @generated from field: int32 response_status_code = 1;
   */
  responseStatusCode: number;
};

/**
 * Describes the message google.cloud.retail.logging.HttpRequestContext.
 * Use `create(HttpRequestContextSchema)` to create a new message.
 */
export const HttpRequestContextSchema: GenMessage<HttpRequestContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_logging_error_log, 1);

/**
 * Indicates a location in the source code of the service for which
 * errors are reported.
 *
 * @generated from message google.cloud.retail.logging.SourceLocation
 */
export type SourceLocation = Message<"google.cloud.retail.logging.SourceLocation"> & {
  /**
   * Human-readable name of a function or method.
   * For example, "google.cloud.retail.v2.UserEventService.ImportUserEvents".
   *
   * @generated from field: string function_name = 1;
   */
  functionName: string;
};

/**
 * Describes the message google.cloud.retail.logging.SourceLocation.
 * Use `create(SourceLocationSchema)` to create a new message.
 */
export const SourceLocationSchema: GenMessage<SourceLocation> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_logging_error_log, 2);

/**
 * A description of the context in which an error occurred.
 *
 * @generated from message google.cloud.retail.logging.ErrorContext
 */
export type ErrorContext = Message<"google.cloud.retail.logging.ErrorContext"> & {
  /**
   * The HTTP request which was processed when the error was triggered.
   *
   * @generated from field: google.cloud.retail.logging.HttpRequestContext http_request = 1;
   */
  httpRequest?: HttpRequestContext;

  /**
   * The location in the source code where the decision was made to
   * report the error, usually the place where it was logged.
   *
   * @generated from field: google.cloud.retail.logging.SourceLocation report_location = 2;
   */
  reportLocation?: SourceLocation;
};

/**
 * Describes the message google.cloud.retail.logging.ErrorContext.
 * Use `create(ErrorContextSchema)` to create a new message.
 */
export const ErrorContextSchema: GenMessage<ErrorContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_logging_error_log, 3);

/**
 * The error payload that is populated on LRO import APIs, including
 *   "google.cloud.retail.v2.ProductService.ImportProducts" and
 *   "google.cloud.retail.v2.EventService.ImportUserEvents".
 *
 * @generated from message google.cloud.retail.logging.ImportErrorContext
 */
export type ImportErrorContext = Message<"google.cloud.retail.logging.ImportErrorContext"> & {
  /**
   * The operation resource name of the LRO.
   *
   * @generated from field: string operation_name = 1;
   */
  operationName: string;

  /**
   * Cloud Storage file path of the import source.
   * Can be set for batch operation error.
   *
   * @generated from field: string gcs_path = 2;
   */
  gcsPath: string;

  /**
   * Line number of the content in file.
   * Should be empty for permission or batch operation error.
   *
   * @generated from field: string line_number = 3;
   */
  lineNumber: string;

  /**
   * Detailed content which caused the error.
   * Should be empty for permission or batch operation error.
   *
   * @generated from oneof google.cloud.retail.logging.ImportErrorContext.line_content
   */
  lineContent: {
    /**
     * The detailed content which caused the error on importing a catalog item.
     *
     * @generated from field: string catalog_item = 4;
     */
    value: string;
    case: "catalogItem";
  } | {
    /**
     * The detailed content which caused the error on importing a product.
     *
     * @generated from field: string product = 5;
     */
    value: string;
    case: "product";
  } | {
    /**
     * The detailed content which caused the error on importing a user event.
     *
     * @generated from field: string user_event = 6;
     */
    value: string;
    case: "userEvent";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.retail.logging.ImportErrorContext.
 * Use `create(ImportErrorContextSchema)` to create a new message.
 */
export const ImportErrorContextSchema: GenMessage<ImportErrorContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_logging_error_log, 4);

/**
 * An error log which is reported to the Error Reporting system.
 * This proto a superset of
 * google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.
 *
 * @generated from message google.cloud.retail.logging.ErrorLog
 */
export type ErrorLog = Message<"google.cloud.retail.logging.ErrorLog"> & {
  /**
   * The service context in which this error has occurred.
   *
   * @generated from field: google.cloud.retail.logging.ServiceContext service_context = 1;
   */
  serviceContext?: ServiceContext;

  /**
   * A description of the context in which the error occurred.
   *
   * @generated from field: google.cloud.retail.logging.ErrorContext context = 2;
   */
  context?: ErrorContext;

  /**
   * A message describing the error.
   *
   * @generated from field: string message = 3;
   */
  message: string;

  /**
   * The RPC status associated with the error log.
   *
   * @generated from field: google.rpc.Status status = 4;
   */
  status?: Status;

  /**
   * The API request payload, represented as a protocol buffer.
   *
   * Most API request types are supported. For example:
   *
   *   "type.googleapis.com/google.cloud.retail.v2.ProductService.CreateProductRequest"
   *   "type.googleapis.com/google.cloud.retail.v2.UserEventService.WriteUserEventRequest"
   *
   * @generated from field: google.protobuf.Struct request_payload = 5;
   */
  requestPayload?: JsonObject;

  /**
   * The API response payload, represented as a protocol buffer.
   *
   * This is used to log some "soft errors", where the response is valid but we
   * consider there are some quality issues like unjoined events.
   *
   * The following API responses are supported and no PII is included:
   *   "google.cloud.retail.v2.PredictionService.Predict"
   *   "google.cloud.retail.v2.UserEventService.WriteUserEvent"
   *   "google.cloud.retail.v2.UserEventService.CollectUserEvent"
   *
   * @generated from field: google.protobuf.Struct response_payload = 6;
   */
  responsePayload?: JsonObject;

  /**
   * The error payload that is populated on LRO import APIs.
   *
   * @generated from field: google.cloud.retail.logging.ImportErrorContext import_payload = 7;
   */
  importPayload?: ImportErrorContext;
};

/**
 * Describes the message google.cloud.retail.logging.ErrorLog.
 * Use `create(ErrorLogSchema)` to create a new message.
 */
export const ErrorLogSchema: GenMessage<ErrorLog> = /*@__PURE__*/
  messageDesc(file_google_cloud_retail_logging_error_log, 5);

