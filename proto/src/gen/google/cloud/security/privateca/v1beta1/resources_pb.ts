// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/security/privateca/v1beta1/resources.proto (package google.cloud.security.privateca.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/security/privateca/v1beta1/resources.proto.
 */
export const file_google_cloud_security_privateca_v1beta1_resources: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * A [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] represents an individual Certificate Authority.
 * A [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] can be used to create [Certificates][google.cloud.security.privateca.v1beta1.Certificate].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateAuthority
 */
export type CertificateAuthority = Message<"google.cloud.security.privateca.v1beta1.CertificateAuthority"> & {
  /**
   * Output only. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
   * format `projects/*\/locations/*\/certificateAuthorities/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Immutable. The [Type][google.cloud.security.privateca.v1beta1.CertificateAuthority.Type] of this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.Type type = 2;
   */
  type: CertificateAuthority_Type;

  /**
   * Required. Immutable. The [Tier][google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier] of this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier tier = 3;
   */
  tier: CertificateAuthority_Tier;

  /**
   * Required. Immutable. The config used to create a self-signed X.509 certificate or CSR.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateConfig config = 4;
   */
  config?: CertificateConfig;

  /**
   * Required. The desired lifetime of the CA certificate. Used to create the
   * "not_before_time" and "not_after_time" fields inside an X.509
   * certificate.
   *
   * @generated from field: google.protobuf.Duration lifetime = 5;
   */
  lifetime?: Duration;

  /**
   * Required. Immutable. Used when issuing certificates for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]. If this
   * [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] is a self-signed CertificateAuthority, this key
   * is also used to sign the self-signed CA certificate. Otherwise, it
   * is used to sign a CSR.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec key_spec = 6;
   */
  keySpec?: CertificateAuthority_KeyVersionSpec;

  /**
   * Optional. The [CertificateAuthorityPolicy][google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy] to enforce when issuing
   * [Certificates][google.cloud.security.privateca.v1beta1.Certificate] from this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy certificate_policy = 7;
   */
  certificatePolicy?: CertificateAuthority_CertificateAuthorityPolicy;

  /**
   * Optional. The [IssuingOptions][google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions] to follow when issuing [Certificates][google.cloud.security.privateca.v1beta1.Certificate]
   * from this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions issuing_options = 8;
   */
  issuingOptions?: CertificateAuthority_IssuingOptions;

  /**
   * Optional. If this is a subordinate [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority], this field will be set
   * with the subordinate configuration, which describes its issuers. This may
   * be updated, but this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] must continue to validate.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.SubordinateConfig subordinate_config = 19;
   */
  subordinateConfig?: SubordinateConfig;

  /**
   * Output only. The [State][google.cloud.security.privateca.v1beta1.CertificateAuthority.State] for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.State state = 10;
   */
  state: CertificateAuthority_State;

  /**
   * Output only. This [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]'s certificate chain, including the current
   * [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]'s certificate. Ordered such that the root issuer
   * is the final element (consistent with RFC 5246). For a self-signed CA, this
   * will only list the current [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]'s certificate.
   *
   * @generated from field: repeated string pem_ca_certificates = 9;
   */
  pemCaCertificates: string[];

  /**
   * Output only. A structured description of this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]'s CA certificate
   * and its issuers. Ordered as self-to-root.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.CertificateDescription ca_certificate_descriptions = 12;
   */
  caCertificateDescriptions: CertificateDescription[];

  /**
   * Immutable. The name of a Cloud Storage bucket where this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] will
   * publish content, such as the CA certificate and CRLs. This must be a bucket
   * name, without any prefixes (such as `gs://`) or suffixes (such as
   * `.googleapis.com`). For example, to use a bucket named `my-bucket`, you
   * would simply specify `my-bucket`. If not specified, a managed bucket will
   * be created.
   *
   * @generated from field: string gcs_bucket = 13;
   */
  gcsBucket: string;

  /**
   * Output only. URLs for accessing content published by this CA, such as the CA certificate
   * and CRLs.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls access_urls = 14;
   */
  accessUrls?: CertificateAuthority_AccessUrls;

  /**
   * Output only. The time at which this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 15;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 16;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The time at which this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] will be deleted, if
   * scheduled for deletion.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 17;
   */
  deleteTime?: Timestamp;

  /**
   * Optional. Labels with user-defined metadata.
   *
   * @generated from field: map<string, string> labels = 18;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateAuthority.
 * Use `create(CertificateAuthoritySchema)` to create a new message.
 */
export const CertificateAuthoritySchema: GenMessage<CertificateAuthority> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 0);

/**
 * Options that affect all certificates issued by a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
 */
export type CertificateAuthority_IssuingOptions = Message<"google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions"> & {
  /**
   * Required. When true, includes a URL to the issuing CA certificate in the
   * "authority information access" X.509 extension.
   *
   * @generated from field: bool include_ca_cert_url = 1;
   */
  includeCaCertUrl: boolean;

  /**
   * Required. When true, includes a URL to the CRL corresponding to certificates
   * issued from a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   * CRLs will expire 7 days from their creation. However, we will rebuild
   * daily. CRLs are also rebuilt shortly after a certificate is revoked.
   *
   * @generated from field: bool include_crl_access_url = 2;
   */
  includeCrlAccessUrl: boolean;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions.
 * Use `create(CertificateAuthority_IssuingOptionsSchema)` to create a new message.
 */
export const CertificateAuthority_IssuingOptionsSchema: GenMessage<CertificateAuthority_IssuingOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 0);

/**
 * The issuing policy for a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
 * [Certificates][google.cloud.security.privateca.v1beta1.Certificate] will not be successfully issued from this
 * [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] if they violate the policy.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
 */
export type CertificateAuthority_CertificateAuthorityPolicy = Message<"google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy"> & {
  /**
   * Allowed configurations or a single configuration for all issued
   * certificates.
   *
   * @generated from oneof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.config_policy
   */
  configPolicy: {
    /**
     * Optional. All [Certificates][google.cloud.security.privateca.v1beta1.Certificate] issued by the [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]
     * must match at least one listed [ReusableConfigWrapper][google.cloud.security.privateca.v1beta1.ReusableConfigWrapper] in the list.
     *
     * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList allowed_config_list = 1;
     */
    value: CertificateAuthority_CertificateAuthorityPolicy_AllowedConfigList;
    case: "allowedConfigList";
  } | {
    /**
     * Optional. All [Certificates][google.cloud.security.privateca.v1beta1.Certificate] issued by the [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]
     * will use the provided configuration values, overwriting any requested
     * configuration values.
     *
     * @generated from field: google.cloud.security.privateca.v1beta1.ReusableConfigWrapper overwrite_config_values = 2;
     */
    value: ReusableConfigWrapper;
    case: "overwriteConfigValues";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. If any [Subject][google.cloud.security.privateca.v1beta1.Subject] is specified here, then all
   * [Certificates][google.cloud.security.privateca.v1beta1.Certificate] issued by the [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] must
   * match at least one listed [Subject][google.cloud.security.privateca.v1beta1.Subject]. If a [Subject][google.cloud.security.privateca.v1beta1.Subject] has an empty
   * field, any value will be allowed for that field.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.Subject allowed_locations_and_organizations = 3;
   */
  allowedLocationsAndOrganizations: Subject[];

  /**
   * Optional. If any value is specified here, then all
   * [Certificates][google.cloud.security.privateca.v1beta1.Certificate] issued by the [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] must
   * match at least one listed value. If no value is specified, all values
   * will be allowed for this fied. Glob patterns are also supported.
   *
   * @generated from field: repeated string allowed_common_names = 4;
   */
  allowedCommonNames: string[];

  /**
   * Optional. If a [AllowedSubjectAltNames][google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames] is specified here, then all
   * [Certificates][google.cloud.security.privateca.v1beta1.Certificate] issued by the [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] must
   * match [AllowedSubjectAltNames][google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames]. If no value or an empty value
   * is specified, any value will be allowed for the [SubjectAltNames][google.cloud.security.privateca.v1beta1.SubjectAltNames]
   * field.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames allowed_sans = 5;
   */
  allowedSans?: CertificateAuthority_CertificateAuthorityPolicy_AllowedSubjectAltNames;

  /**
   * Optional. The maximum lifetime allowed by the [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]. Note that
   * if the any part if the issuing chain expires before a [Certificate][google.cloud.security.privateca.v1beta1.Certificate]'s
   * requested maximum_lifetime, the effective lifetime will be explicitly
   * truncated.
   *
   * @generated from field: google.protobuf.Duration maximum_lifetime = 6;
   */
  maximumLifetime?: Duration;

  /**
   * Optional. If specified, then only methods allowed in the [IssuanceModes][google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes] may be
   * used to issue [Certificates][google.cloud.security.privateca.v1beta1.Certificate].
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes allowed_issuance_modes = 8;
   */
  allowedIssuanceModes?: CertificateAuthority_CertificateAuthorityPolicy_IssuanceModes;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.
 * Use `create(CertificateAuthority_CertificateAuthorityPolicySchema)` to create a new message.
 */
export const CertificateAuthority_CertificateAuthorityPolicySchema: GenMessage<CertificateAuthority_CertificateAuthorityPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 1);

/**
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
 */
export type CertificateAuthority_CertificateAuthorityPolicy_AllowedConfigList = Message<"google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList"> & {
  /**
   * Required. All [Certificates][google.cloud.security.privateca.v1beta1.Certificate] issued by the [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]
   * must match at least one listed [ReusableConfigWrapper][google.cloud.security.privateca.v1beta1.ReusableConfigWrapper]. If a
   * [ReusableConfigWrapper][google.cloud.security.privateca.v1beta1.ReusableConfigWrapper] has an empty field, any value will be
   * allowed for that field.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.ReusableConfigWrapper allowed_config_values = 1;
   */
  allowedConfigValues: ReusableConfigWrapper[];
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList.
 * Use `create(CertificateAuthority_CertificateAuthorityPolicy_AllowedConfigListSchema)` to create a new message.
 */
export const CertificateAuthority_CertificateAuthorityPolicy_AllowedConfigListSchema: GenMessage<CertificateAuthority_CertificateAuthorityPolicy_AllowedConfigList> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 1, 0);

/**
 * [AllowedSubjectAltNames][google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames] specifies the allowed values for
 * [SubjectAltNames][google.cloud.security.privateca.v1beta1.SubjectAltNames] by the [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] when issuing
 * [Certificates][google.cloud.security.privateca.v1beta1.Certificate].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
 */
export type CertificateAuthority_CertificateAuthorityPolicy_AllowedSubjectAltNames = Message<"google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames"> & {
  /**
   * Optional. Contains valid, fully-qualified host names. Glob patterns are also
   * supported. To allow an explicit wildcard certificate, escape with
   * backlash (i.e. `\*`).
   * E.g. for globbed entries: `*bar.com` will allow `foo.bar.com`, but not
   * `*.bar.com`, unless the [allow_globbing_dns_wildcards][google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.allow_globbing_dns_wildcards] field is set.
   * E.g. for wildcard entries: `\*.bar.com` will allow `*.bar.com`, but not
   * `foo.bar.com`.
   *
   * @generated from field: repeated string allowed_dns_names = 1;
   */
  allowedDnsNames: string[];

  /**
   * Optional. Contains valid RFC 3986 URIs. Glob patterns are also supported. To
   * match across path seperators (i.e. '/') use the double star glob
   * pattern (i.e. '**').
   *
   * @generated from field: repeated string allowed_uris = 2;
   */
  allowedUris: string[];

  /**
   * Optional. Contains valid RFC 2822 E-mail addresses. Glob patterns are also
   * supported.
   *
   * @generated from field: repeated string allowed_email_addresses = 3;
   */
  allowedEmailAddresses: string[];

  /**
   * Optional. Contains valid 32-bit IPv4 addresses and subnet ranges or RFC 4291 IPv6
   * addresses and subnet ranges. Subnet ranges are specified using the
   * '/' notation (e.g. 10.0.0.0/8, 2001:700:300:1800::/64). Glob patterns
   * are supported only for ip address entries (i.e. not for subnet ranges).
   *
   * @generated from field: repeated string allowed_ips = 4;
   */
  allowedIps: string[];

  /**
   * Optional. Specifies if glob patterns used for [allowed_dns_names][google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.allowed_dns_names] allows
   * wildcard certificates.
   *
   * @generated from field: bool allow_globbing_dns_wildcards = 5;
   */
  allowGlobbingDnsWildcards: boolean;

  /**
   * Optional. Specifies if to allow custom X509Extension values.
   *
   * @generated from field: bool allow_custom_sans = 6;
   */
  allowCustomSans: boolean;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.
 * Use `create(CertificateAuthority_CertificateAuthorityPolicy_AllowedSubjectAltNamesSchema)` to create a new message.
 */
export const CertificateAuthority_CertificateAuthorityPolicy_AllowedSubjectAltNamesSchema: GenMessage<CertificateAuthority_CertificateAuthorityPolicy_AllowedSubjectAltNames> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 1, 1);

/**
 * [IssuanceModes][google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes] specifies the allowed ways in which
 * [Certificates][google.cloud.security.privateca.v1beta1.Certificate] may be requested from this
 * [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
 */
export type CertificateAuthority_CertificateAuthorityPolicy_IssuanceModes = Message<"google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes"> & {
  /**
   * Required. When true, allows callers to create [Certificates][google.cloud.security.privateca.v1beta1.Certificate] by
   * specifying a CSR.
   *
   * @generated from field: bool allow_csr_based_issuance = 1;
   */
  allowCsrBasedIssuance: boolean;

  /**
   * Required. When true, allows callers to create [Certificates][google.cloud.security.privateca.v1beta1.Certificate] by
   * specifying a [CertificateConfig][google.cloud.security.privateca.v1beta1.CertificateConfig].
   *
   * @generated from field: bool allow_config_based_issuance = 2;
   */
  allowConfigBasedIssuance: boolean;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes.
 * Use `create(CertificateAuthority_CertificateAuthorityPolicy_IssuanceModesSchema)` to create a new message.
 */
export const CertificateAuthority_CertificateAuthorityPolicy_IssuanceModesSchema: GenMessage<CertificateAuthority_CertificateAuthorityPolicy_IssuanceModes> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 1, 2);

/**
 * URLs where a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] will publish content.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
 */
export type CertificateAuthority_AccessUrls = Message<"google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls"> & {
  /**
   * The URL where this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]'s CA certificate is
   * published. This will only be set for CAs that have been activated.
   *
   * @generated from field: string ca_certificate_access_url = 1;
   */
  caCertificateAccessUrl: string;

  /**
   * The URL where this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]'s CRLs are published. This
   * will only be set for CAs that have been activated.
   *
   * @generated from field: string crl_access_url = 2;
   */
  crlAccessUrl: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls.
 * Use `create(CertificateAuthority_AccessUrlsSchema)` to create a new message.
 */
export const CertificateAuthority_AccessUrlsSchema: GenMessage<CertificateAuthority_AccessUrls> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 2);

/**
 * A Cloud KMS key configuration that a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] will use.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
 */
export type CertificateAuthority_KeyVersionSpec = Message<"google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec"> & {
  /**
   * @generated from oneof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec.KeyVersion
   */
  KeyVersion: {
    /**
     * Required. The resource name for an existing Cloud KMS CryptoKeyVersion in the
     * format
     * `projects/*\/locations/*\/keyRings/*\/cryptoKeys/*\/cryptoKeyVersions/*`.
     * This option enables full flexibility in the key's capabilities and
     * properties.
     *
     * @generated from field: string cloud_kms_key_version = 1;
     */
    value: string;
    case: "cloudKmsKeyVersion";
  } | {
    /**
     * Required. The algorithm to use for creating a managed Cloud KMS key for a for a
     * simplified experience. All managed keys will be have their
     * [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] as `HSM`.
     *
     * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority.SignHashAlgorithm algorithm = 2;
     */
    value: CertificateAuthority_SignHashAlgorithm;
    case: "algorithm";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec.
 * Use `create(CertificateAuthority_KeyVersionSpecSchema)` to create a new message.
 */
export const CertificateAuthority_KeyVersionSpecSchema: GenMessage<CertificateAuthority_KeyVersionSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 3);

/**
 * The type of a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority], indicating its issuing chain.
 *
 * @generated from enum google.cloud.security.privateca.v1beta1.CertificateAuthority.Type
 */
export enum CertificateAuthority_Type {
  /**
   * Not specified.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Self-signed CA.
   *
   * @generated from enum value: SELF_SIGNED = 1;
   */
  SELF_SIGNED = 1,

  /**
   * Subordinate CA. Could be issued by a Private CA [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]
   * or an unmanaged CA.
   *
   * @generated from enum value: SUBORDINATE = 2;
   */
  SUBORDINATE = 2,
}

/**
 * Describes the enum google.cloud.security.privateca.v1beta1.CertificateAuthority.Type.
 */
export const CertificateAuthority_TypeSchema: GenEnum<CertificateAuthority_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 0);

/**
 * The tier of a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority], indicating its supported
 * functionality and/or billing SKU.
 *
 * @generated from enum google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier
 */
export enum CertificateAuthority_Tier {
  /**
   * Not specified.
   *
   * @generated from enum value: TIER_UNSPECIFIED = 0;
   */
  TIER_UNSPECIFIED = 0,

  /**
   * Enterprise tier.
   *
   * @generated from enum value: ENTERPRISE = 1;
   */
  ENTERPRISE = 1,

  /**
   * DevOps tier.
   *
   * @generated from enum value: DEVOPS = 2;
   */
  DEVOPS = 2,
}

/**
 * Describes the enum google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier.
 */
export const CertificateAuthority_TierSchema: GenEnum<CertificateAuthority_Tier> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 1);

/**
 * The state of a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority], indicating if it can be used.
 *
 * @generated from enum google.cloud.security.privateca.v1beta1.CertificateAuthority.State
 */
export enum CertificateAuthority_State {
  /**
   * Not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Certificates can be issued from this CA. CRLs will be generated for this
   * CA.
   *
   * @generated from enum value: ENABLED = 1;
   */
  ENABLED = 1,

  /**
   * Certificates cannot be issued from this CA. CRLs will still be generated.
   *
   * @generated from enum value: DISABLED = 2;
   */
  DISABLED = 2,

  /**
   * Certificates cannot be issued from this CA. CRLs will not be generated.
   *
   * @generated from enum value: PENDING_ACTIVATION = 3;
   */
  PENDING_ACTIVATION = 3,

  /**
   * Certificates cannot be issued from this CA. CRLs will not be generated.
   *
   * @generated from enum value: PENDING_DELETION = 4;
   */
  PENDING_DELETION = 4,
}

/**
 * Describes the enum google.cloud.security.privateca.v1beta1.CertificateAuthority.State.
 */
export const CertificateAuthority_StateSchema: GenEnum<CertificateAuthority_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 2);

/**
 * The algorithm of a Cloud KMS CryptoKeyVersion of a
 * [CryptoKey][google.cloud.kms.v1.CryptoKey] with the
 * [CryptoKeyPurpose][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose] value
 * `ASYMMETRIC_SIGN`. These values correspond to the
 * [CryptoKeyVersionAlgorithm][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm]
 * values. For RSA signing algorithms, the PSS algorithms should be preferred,
 * use PKCS1 algorithms if required for compatibility. For further
 * recommandations, see
 * https://cloud.google.com/kms/docs/algorithms#algorithm_recommendations.
 *
 * @generated from enum google.cloud.security.privateca.v1beta1.CertificateAuthority.SignHashAlgorithm
 */
export enum CertificateAuthority_SignHashAlgorithm {
  /**
   * Not specified.
   *
   * @generated from enum value: SIGN_HASH_ALGORITHM_UNSPECIFIED = 0;
   */
  SIGN_HASH_ALGORITHM_UNSPECIFIED = 0,

  /**
   * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_2048_SHA256
   *
   * @generated from enum value: RSA_PSS_2048_SHA256 = 1;
   */
  RSA_PSS_2048_SHA256 = 1,

  /**
   * maps to CryptoKeyVersionAlgorithm. RSA_SIGN_PSS_3072_SHA256
   *
   * @generated from enum value: RSA_PSS_3072_SHA256 = 2;
   */
  RSA_PSS_3072_SHA256 = 2,

  /**
   * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_4096_SHA256
   *
   * @generated from enum value: RSA_PSS_4096_SHA256 = 3;
   */
  RSA_PSS_4096_SHA256 = 3,

  /**
   * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_2048_SHA256
   *
   * @generated from enum value: RSA_PKCS1_2048_SHA256 = 6;
   */
  RSA_PKCS1_2048_SHA256 = 6,

  /**
   * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_3072_SHA256
   *
   * @generated from enum value: RSA_PKCS1_3072_SHA256 = 7;
   */
  RSA_PKCS1_3072_SHA256 = 7,

  /**
   * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_4096_SHA256
   *
   * @generated from enum value: RSA_PKCS1_4096_SHA256 = 8;
   */
  RSA_PKCS1_4096_SHA256 = 8,

  /**
   * maps to CryptoKeyVersionAlgorithm.EC_SIGN_P256_SHA256
   *
   * @generated from enum value: EC_P256_SHA256 = 4;
   */
  EC_P256_SHA256 = 4,

  /**
   * maps to CryptoKeyVersionAlgorithm.EC_SIGN_P384_SHA384
   *
   * @generated from enum value: EC_P384_SHA384 = 5;
   */
  EC_P384_SHA384 = 5,
}

/**
 * Describes the enum google.cloud.security.privateca.v1beta1.CertificateAuthority.SignHashAlgorithm.
 */
export const CertificateAuthority_SignHashAlgorithmSchema: GenEnum<CertificateAuthority_SignHashAlgorithm> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1beta1_resources, 0, 3);

/**
 * A [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] corresponds to a signed X.509 certificate
 * Revocation List (CRL). A CRL contains the serial numbers of certificates that
 * should no longer be trusted.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateRevocationList
 */
export type CertificateRevocationList = Message<"google.cloud.security.privateca.v1beta1.CertificateRevocationList"> & {
  /**
   * Output only. The resource path for this [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] in
   * the format
   * `projects/*\/locations/*\/certificateAuthorities/*\/
   *    certificateRevocationLists/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The CRL sequence number that appears in pem_crl.
   *
   * @generated from field: int64 sequence_number = 2;
   */
  sequenceNumber: bigint;

  /**
   * Output only. The revoked serial numbers that appear in pem_crl.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate revoked_certificates = 3;
   */
  revokedCertificates: CertificateRevocationList_RevokedCertificate[];

  /**
   * Output only. The PEM-encoded X.509 CRL.
   *
   * @generated from field: string pem_crl = 4;
   */
  pemCrl: string;

  /**
   * Output only. The location where 'pem_crl' can be accessed.
   *
   * @generated from field: string access_url = 5;
   */
  accessUrl: string;

  /**
   * Output only. The [State][google.cloud.security.privateca.v1beta1.CertificateRevocationList.State] for this [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList].
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateRevocationList.State state = 6;
   */
  state: CertificateRevocationList_State;

  /**
   * Output only. The time at which this [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 7;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which this [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 8;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels with user-defined metadata.
   *
   * @generated from field: map<string, string> labels = 9;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateRevocationList.
 * Use `create(CertificateRevocationListSchema)` to create a new message.
 */
export const CertificateRevocationListSchema: GenMessage<CertificateRevocationList> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 1);

/**
 * Describes a revoked [Certificate][google.cloud.security.privateca.v1beta1.Certificate].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
 */
export type CertificateRevocationList_RevokedCertificate = Message<"google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate"> & {
  /**
   * The resource path for the [Certificate][google.cloud.security.privateca.v1beta1.Certificate] in the format
   * `projects/*\/locations/*\/certificateAuthorities/*\/certificates/*`.
   *
   * @generated from field: string certificate = 1;
   */
  certificate: string;

  /**
   * The serial number of the [Certificate][google.cloud.security.privateca.v1beta1.Certificate].
   *
   * @generated from field: string hex_serial_number = 2;
   */
  hexSerialNumber: string;

  /**
   * The reason the [Certificate][google.cloud.security.privateca.v1beta1.Certificate] was revoked.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.RevocationReason revocation_reason = 3;
   */
  revocationReason: RevocationReason;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate.
 * Use `create(CertificateRevocationList_RevokedCertificateSchema)` to create a new message.
 */
export const CertificateRevocationList_RevokedCertificateSchema: GenMessage<CertificateRevocationList_RevokedCertificate> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 1, 0);

/**
 * The state of a [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList], indicating if it is current.
 *
 * @generated from enum google.cloud.security.privateca.v1beta1.CertificateRevocationList.State
 */
export enum CertificateRevocationList_State {
  /**
   * Not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] is up to date.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * The [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] is no longer current.
   *
   * @generated from enum value: SUPERSEDED = 2;
   */
  SUPERSEDED = 2,
}

/**
 * Describes the enum google.cloud.security.privateca.v1beta1.CertificateRevocationList.State.
 */
export const CertificateRevocationList_StateSchema: GenEnum<CertificateRevocationList_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1beta1_resources, 1, 0);

/**
 * A [Certificate][google.cloud.security.privateca.v1beta1.Certificate] corresponds to a signed X.509 certificate issued by a
 * [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.Certificate
 */
export type Certificate = Message<"google.cloud.security.privateca.v1beta1.Certificate"> & {
  /**
   * Output only. The resource path for this [Certificate][google.cloud.security.privateca.v1beta1.Certificate] in the format
   * `projects/*\/locations/*\/certificateAuthorities/*\/certificates/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The config used to create a signed X.509 certificate.
   *
   * @generated from oneof google.cloud.security.privateca.v1beta1.Certificate.certificate_config
   */
  certificateConfig: {
    /**
     * Immutable. A pem-encoded X.509 certificate signing request (CSR).
     *
     * @generated from field: string pem_csr = 2;
     */
    value: string;
    case: "pemCsr";
  } | {
    /**
     * Immutable. A description of the certificate and key that does not require X.509 or
     * ASN.1.
     *
     * @generated from field: google.cloud.security.privateca.v1beta1.CertificateConfig config = 3;
     */
    value: CertificateConfig;
    case: "config";
  } | { case: undefined; value?: undefined };

  /**
   * Required. Immutable. The desired lifetime of a certificate. Used to create the
   * "not_before_time" and "not_after_time" fields inside an X.509
   * certificate. Note that the lifetime may be truncated if it would extend
   * past the life of any certificate authority in the issuing chain.
   *
   * @generated from field: google.protobuf.Duration lifetime = 4;
   */
  lifetime?: Duration;

  /**
   * Output only. Details regarding the revocation of this [Certificate][google.cloud.security.privateca.v1beta1.Certificate]. This
   * [Certificate][google.cloud.security.privateca.v1beta1.Certificate] is considered revoked if and only if this field is present.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails revocation_details = 5;
   */
  revocationDetails?: Certificate_RevocationDetails;

  /**
   * Output only. The pem-encoded, signed X.509 certificate.
   *
   * @generated from field: string pem_certificate = 6;
   */
  pemCertificate: string;

  /**
   * Output only. A structured description of the issued X.509 certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateDescription certificate_description = 7;
   */
  certificateDescription?: CertificateDescription;

  /**
   * Output only. The chain that may be used to verify the X.509 certificate. Expected to be
   * in issuer-to-root order according to RFC 5246.
   *
   * @generated from field: repeated string pem_certificate_chain = 8;
   */
  pemCertificateChain: string[];

  /**
   * Output only. The time at which this [Certificate][google.cloud.security.privateca.v1beta1.Certificate] was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 9;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which this [Certificate][google.cloud.security.privateca.v1beta1.Certificate] was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 10;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels with user-defined metadata.
   *
   * @generated from field: map<string, string> labels = 11;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.Certificate.
 * Use `create(CertificateSchema)` to create a new message.
 */
export const CertificateSchema: GenMessage<Certificate> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 2);

/**
 * Describes fields that are relavent to the revocation of a [Certificate][google.cloud.security.privateca.v1beta1.Certificate].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
 */
export type Certificate_RevocationDetails = Message<"google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails"> & {
  /**
   * Indicates why a [Certificate][google.cloud.security.privateca.v1beta1.Certificate] was revoked.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.RevocationReason revocation_state = 1;
   */
  revocationState: RevocationReason;

  /**
   * The time at which this [Certificate][google.cloud.security.privateca.v1beta1.Certificate] was revoked.
   *
   * @generated from field: google.protobuf.Timestamp revocation_time = 2;
   */
  revocationTime?: Timestamp;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails.
 * Use `create(Certificate_RevocationDetailsSchema)` to create a new message.
 */
export const Certificate_RevocationDetailsSchema: GenMessage<Certificate_RevocationDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 2, 0);

/**
 * A [ReusableConfig][google.cloud.security.privateca.v1beta1.ReusableConfig] refers to a managed [ReusableConfigValues][google.cloud.security.privateca.v1beta1.ReusableConfigValues]. Those, in
 * turn, are used to describe certain fields of an X.509 certificate, such as
 * the key usage fields, fields specific to CA certificates, certificate policy
 * extensions and custom extensions.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ReusableConfig
 */
export type ReusableConfig = Message<"google.cloud.security.privateca.v1beta1.ReusableConfig"> & {
  /**
   * Output only. The resource path for this [ReusableConfig][google.cloud.security.privateca.v1beta1.ReusableConfig] in the format
   * `projects/*\/locations/*\/reusableConfigs/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The config values.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.ReusableConfigValues values = 2;
   */
  values?: ReusableConfigValues;

  /**
   * Optional. A human-readable description of scenarios these ReusableConfigValues may be
   * compatible with.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. The time at which this [ReusableConfig][google.cloud.security.privateca.v1beta1.ReusableConfig] was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which this [ReusableConfig][google.cloud.security.privateca.v1beta1.ReusableConfig] was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels with user-defined metadata.
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ReusableConfig.
 * Use `create(ReusableConfigSchema)` to create a new message.
 */
export const ReusableConfigSchema: GenMessage<ReusableConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 3);

/**
 * A [ReusableConfigValues][google.cloud.security.privateca.v1beta1.ReusableConfigValues] is used to describe certain fields of an
 * X.509 certificate, such as the key usage fields, fields specific to CA
 * certificates, certificate policy extensions and custom extensions.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ReusableConfigValues
 */
export type ReusableConfigValues = Message<"google.cloud.security.privateca.v1beta1.ReusableConfigValues"> & {
  /**
   * Optional. Indicates the intended use for keys that correspond to a certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.KeyUsage key_usage = 1;
   */
  keyUsage?: KeyUsage;

  /**
   * Optional. Describes options in this [ReusableConfigValues][google.cloud.security.privateca.v1beta1.ReusableConfigValues] that are
   * relevant in a CA certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions ca_options = 2;
   */
  caOptions?: ReusableConfigValues_CaOptions;

  /**
   * Optional. Describes the X.509 certificate policy object identifiers, per
   * https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.ObjectId policy_ids = 3;
   */
  policyIds: ObjectId[];

  /**
   * Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses
   * that appear in the "Authority Information Access" extension in the
   * certificate.
   *
   * @generated from field: repeated string aia_ocsp_servers = 4;
   */
  aiaOcspServers: string[];

  /**
   * Optional. Describes custom X.509 extensions.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.X509Extension additional_extensions = 5;
   */
  additionalExtensions: X509Extension[];
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ReusableConfigValues.
 * Use `create(ReusableConfigValuesSchema)` to create a new message.
 */
export const ReusableConfigValuesSchema: GenMessage<ReusableConfigValues> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 4);

/**
 * Describes values that are relevant in a CA certificate.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
 */
export type ReusableConfigValues_CaOptions = Message<"google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions"> & {
  /**
   * Optional. Refers to the "CA" X.509 extension, which is a boolean value. When this
   * value is missing, the extension will be omitted from the CA certificate.
   *
   * @generated from field: google.protobuf.BoolValue is_ca = 1;
   */
  isCa?: boolean;

  /**
   * Optional. Refers to the path length restriction X.509 extension. For a CA
   * certificate, this value describes the depth of subordinate CA
   * certificates that are allowed.
   * If this value is less than 0, the request will fail.
   * If this value is missing, the max path length will be omitted from the
   * CA certificate.
   *
   * @generated from field: google.protobuf.Int32Value max_issuer_path_length = 2;
   */
  maxIssuerPathLength?: number;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions.
 * Use `create(ReusableConfigValues_CaOptionsSchema)` to create a new message.
 */
export const ReusableConfigValues_CaOptionsSchema: GenMessage<ReusableConfigValues_CaOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 4, 0);

/**
 * A [ReusableConfigWrapper][google.cloud.security.privateca.v1beta1.ReusableConfigWrapper] describes values that may assist in creating an
 * X.509 certificate, or a reference to a pre-defined set of values.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
 */
export type ReusableConfigWrapper = Message<"google.cloud.security.privateca.v1beta1.ReusableConfigWrapper"> & {
  /**
   * Reusable or inline config values.
   *
   * @generated from oneof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.config_values
   */
  configValues: {
    /**
     * Required. A resource path to a [ReusableConfig][google.cloud.security.privateca.v1beta1.ReusableConfig] in the format
     * `projects/*\/locations/*\/reusableConfigs/*`.
     *
     * @generated from field: string reusable_config = 1;
     */
    value: string;
    case: "reusableConfig";
  } | {
    /**
     * Required. A user-specified inline [ReusableConfigValues][google.cloud.security.privateca.v1beta1.ReusableConfigValues].
     *
     * @generated from field: google.cloud.security.privateca.v1beta1.ReusableConfigValues reusable_config_values = 2;
     */
    value: ReusableConfigValues;
    case: "reusableConfigValues";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.
 * Use `create(ReusableConfigWrapperSchema)` to create a new message.
 */
export const ReusableConfigWrapperSchema: GenMessage<ReusableConfigWrapper> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 5);

/**
 * Describes a subordinate CA's issuers. This is either a resource path to a
 * known issuing [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority], or a PEM issuer certificate chain.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.SubordinateConfig
 */
export type SubordinateConfig = Message<"google.cloud.security.privateca.v1beta1.SubordinateConfig"> & {
  /**
   * @generated from oneof google.cloud.security.privateca.v1beta1.SubordinateConfig.subordinate_config
   */
  subordinateConfig: {
    /**
     * Required. This can refer to a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the same project that
     * was used to create a subordinate [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]. This field
     * is used for information and usability purposes only. The resource name
     * is in the format `projects/*\/locations/*\/certificateAuthorities/*`.
     *
     * @generated from field: string certificate_authority = 1;
     */
    value: string;
    case: "certificateAuthority";
  } | {
    /**
     * Required. Contains the PEM certificate chain for the issuers of this
     * [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority], but not pem certificate for this CA itself.
     *
     * @generated from field: google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain pem_issuer_chain = 2;
     */
    value: SubordinateConfig_SubordinateConfigChain;
    case: "pemIssuerChain";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.SubordinateConfig.
 * Use `create(SubordinateConfigSchema)` to create a new message.
 */
export const SubordinateConfigSchema: GenMessage<SubordinateConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 6);

/**
 * This message describes a subordinate CA's issuer certificate chain. This
 * wrapper exists for compatibility reasons.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
 */
export type SubordinateConfig_SubordinateConfigChain = Message<"google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain"> & {
  /**
   * Required. Expected to be in leaf-to-root order according to RFC 5246.
   *
   * @generated from field: repeated string pem_certificates = 1;
   */
  pemCertificates: string[];
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain.
 * Use `create(SubordinateConfig_SubordinateConfigChainSchema)` to create a new message.
 */
export const SubordinateConfig_SubordinateConfigChainSchema: GenMessage<SubordinateConfig_SubordinateConfigChain> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 6, 0);

/**
 * A [PublicKey][google.cloud.security.privateca.v1beta1.PublicKey] describes a public key.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.PublicKey
 */
export type PublicKey = Message<"google.cloud.security.privateca.v1beta1.PublicKey"> & {
  /**
   * Required. The type of public key.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.PublicKey.KeyType type = 1;
   */
  type: PublicKey_KeyType;

  /**
   * Required. A public key. Padding and encoding varies by 'KeyType' and is described
   * along with the KeyType values.
   *
   * @generated from field: bytes key = 2;
   */
  key: Uint8Array;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.PublicKey.
 * Use `create(PublicKeySchema)` to create a new message.
 */
export const PublicKeySchema: GenMessage<PublicKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 7);

/**
 * Types of public keys that are supported.
 * At a minimum, we support RSA and ECDSA, for the key sizes or curves listed:
 * https://cloud.google.com/kms/docs/algorithms#asymmetric_signing_algorithms
 *
 * @generated from enum google.cloud.security.privateca.v1beta1.PublicKey.KeyType
 */
export enum PublicKey_KeyType {
  /**
   * Default unspecified value.
   *
   * @generated from enum value: KEY_TYPE_UNSPECIFIED = 0;
   */
  KEY_TYPE_UNSPECIFIED = 0,

  /**
   * A PEM-encoded PKCS#1/RFC 3447 RSAPrivateKey structure.
   *
   * @generated from enum value: PEM_RSA_KEY = 1;
   */
  PEM_RSA_KEY = 1,

  /**
   * A PEM-encoded compressed NIST P-256/secp256r1/prime256v1 or P-384 key.
   *
   * @generated from enum value: PEM_EC_KEY = 2;
   */
  PEM_EC_KEY = 2,
}

/**
 * Describes the enum google.cloud.security.privateca.v1beta1.PublicKey.KeyType.
 */
export const PublicKey_KeyTypeSchema: GenEnum<PublicKey_KeyType> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1beta1_resources, 7, 0);

/**
 * A [CertificateConfig][google.cloud.security.privateca.v1beta1.CertificateConfig] describes an X.509 certificate or CSR that is to be
 * created, as an alternative to using ASN.1.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateConfig
 */
export type CertificateConfig = Message<"google.cloud.security.privateca.v1beta1.CertificateConfig"> & {
  /**
   * Required. Specifies some of the values in a certificate that are related to the
   * subject.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig subject_config = 1;
   */
  subjectConfig?: CertificateConfig_SubjectConfig;

  /**
   * Required. Describes how some of the technical fields in a certificate should be
   * populated.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.ReusableConfigWrapper reusable_config = 2;
   */
  reusableConfig?: ReusableConfigWrapper;

  /**
   * Optional. The public key that corresponds to this config. This is, for example, used
   * when issuing [Certificates][google.cloud.security.privateca.v1beta1.Certificate], but not when creating a
   * self-signed [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] or [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] CSR.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.PublicKey public_key = 3;
   */
  publicKey?: PublicKey;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateConfig.
 * Use `create(CertificateConfigSchema)` to create a new message.
 */
export const CertificateConfigSchema: GenMessage<CertificateConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 8);

/**
 * These values are used to create the distinguished name and subject
 * alternative name fields in an X.509 certificate.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
 */
export type CertificateConfig_SubjectConfig = Message<"google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig"> & {
  /**
   * Required. Contains distinguished name fields such as the location and organization.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.Subject subject = 1;
   */
  subject?: Subject;

  /**
   * Optional. The "common name" of the distinguished name.
   *
   * @generated from field: string common_name = 2;
   */
  commonName: string;

  /**
   * Optional. The subject alternative name fields.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.SubjectAltNames subject_alt_name = 3;
   */
  subjectAltName?: SubjectAltNames;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig.
 * Use `create(CertificateConfig_SubjectConfigSchema)` to create a new message.
 */
export const CertificateConfig_SubjectConfigSchema: GenMessage<CertificateConfig_SubjectConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 8, 0);

/**
 * A [CertificateDescription][google.cloud.security.privateca.v1beta1.CertificateDescription] describes an X.509 certificate or CSR that has
 * been issued, as an alternative to using ASN.1 / X.509.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateDescription
 */
export type CertificateDescription = Message<"google.cloud.security.privateca.v1beta1.CertificateDescription"> & {
  /**
   * Describes some of the values in a certificate that are related to the
   * subject and lifetime.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription subject_description = 1;
   */
  subjectDescription?: CertificateDescription_SubjectDescription;

  /**
   * Describes some of the technical fields in a certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.ReusableConfigValues config_values = 2;
   */
  configValues?: ReusableConfigValues;

  /**
   * The public key that corresponds to an issued certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.PublicKey public_key = 3;
   */
  publicKey?: PublicKey;

  /**
   * Provides a means of identifiying certificates that contain a particular
   * public key, per https://tools.ietf.org/html/rfc5280#section-4.2.1.2.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId subject_key_id = 4;
   */
  subjectKeyId?: CertificateDescription_KeyId;

  /**
   * Identifies the subject_key_id of the parent certificate, per
   * https://tools.ietf.org/html/rfc5280#section-4.2.1.1
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId authority_key_id = 5;
   */
  authorityKeyId?: CertificateDescription_KeyId;

  /**
   * Describes a list of locations to obtain CRL information, i.e.
   * the DistributionPoint.fullName described by
   * https://tools.ietf.org/html/rfc5280#section-4.2.1.13
   *
   * @generated from field: repeated string crl_distribution_points = 6;
   */
  crlDistributionPoints: string[];

  /**
   * Describes lists of issuer CA certificate URLs that appear in the
   * "Authority Information Access" extension in the certificate.
   *
   * @generated from field: repeated string aia_issuing_certificate_urls = 7;
   */
  aiaIssuingCertificateUrls: string[];

  /**
   * The hash of the x.509 certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint cert_fingerprint = 8;
   */
  certFingerprint?: CertificateDescription_CertificateFingerprint;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateDescription.
 * Use `create(CertificateDescriptionSchema)` to create a new message.
 */
export const CertificateDescriptionSchema: GenMessage<CertificateDescription> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 9);

/**
 * These values describe fields in an issued X.509 certificate such as the
 * distinguished name, subject alternative names, serial number, and lifetime.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
 */
export type CertificateDescription_SubjectDescription = Message<"google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription"> & {
  /**
   * Contains distinguished name fields such as the location and organization.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.Subject subject = 1;
   */
  subject?: Subject;

  /**
   * The "common name" of the distinguished name.
   *
   * @generated from field: string common_name = 2;
   */
  commonName: string;

  /**
   * The subject alternative name fields.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.SubjectAltNames subject_alt_name = 3;
   */
  subjectAltName?: SubjectAltNames;

  /**
   * The serial number encoded in lowercase hexadecimal.
   *
   * @generated from field: string hex_serial_number = 4;
   */
  hexSerialNumber: string;

  /**
   * For convenience, the actual lifetime of an issued certificate.
   * Corresponds to 'not_after_time' - 'not_before_time'.
   *
   * @generated from field: google.protobuf.Duration lifetime = 5;
   */
  lifetime?: Duration;

  /**
   * The time at which the certificate becomes valid.
   *
   * @generated from field: google.protobuf.Timestamp not_before_time = 6;
   */
  notBeforeTime?: Timestamp;

  /**
   * The time at which the certificate expires.
   *
   * @generated from field: google.protobuf.Timestamp not_after_time = 7;
   */
  notAfterTime?: Timestamp;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.
 * Use `create(CertificateDescription_SubjectDescriptionSchema)` to create a new message.
 */
export const CertificateDescription_SubjectDescriptionSchema: GenMessage<CertificateDescription_SubjectDescription> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 9, 0);

/**
 * A KeyId identifies a specific public key, usually by hashing the public
 * key.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
 */
export type CertificateDescription_KeyId = Message<"google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId"> & {
  /**
   * Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most
   * likely the 160 bit SHA-1 hash of the public key.
   *
   * @generated from field: string key_id = 1;
   */
  keyId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.
 * Use `create(CertificateDescription_KeyIdSchema)` to create a new message.
 */
export const CertificateDescription_KeyIdSchema: GenMessage<CertificateDescription_KeyId> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 9, 1);

/**
 * A group of fingerprints for the x509 certificate.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
 */
export type CertificateDescription_CertificateFingerprint = Message<"google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint"> & {
  /**
   * The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate.
   *
   * @generated from field: string sha256_hash = 1;
   */
  sha256Hash: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint.
 * Use `create(CertificateDescription_CertificateFingerprintSchema)` to create a new message.
 */
export const CertificateDescription_CertificateFingerprintSchema: GenMessage<CertificateDescription_CertificateFingerprint> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 9, 2);

/**
 * An [ObjectId][google.cloud.security.privateca.v1beta1.ObjectId] specifies an object identifier (OID). These provide context
 * and describe types in ASN.1 messages.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ObjectId
 */
export type ObjectId = Message<"google.cloud.security.privateca.v1beta1.ObjectId"> & {
  /**
   * Required. The parts of an OID path. The most significant parts of the path come
   * first.
   *
   * @generated from field: repeated int32 object_id_path = 1;
   */
  objectIdPath: number[];
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ObjectId.
 * Use `create(ObjectIdSchema)` to create a new message.
 */
export const ObjectIdSchema: GenMessage<ObjectId> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 10);

/**
 * An [X509Extension][google.cloud.security.privateca.v1beta1.X509Extension] specifies an X.509 extension, which may be used in
 * different parts of X.509 objects like certificates, CSRs, and CRLs.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.X509Extension
 */
export type X509Extension = Message<"google.cloud.security.privateca.v1beta1.X509Extension"> & {
  /**
   * Required. The OID for this X.509 extension.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.ObjectId object_id = 1;
   */
  objectId?: ObjectId;

  /**
   * Required. Indicates whether or not this extension is critical (i.e., if the client
   * does not know how to handle this extension, the client should consider this
   * to be an error).
   *
   * @generated from field: bool critical = 2;
   */
  critical: boolean;

  /**
   * Required. The value of this X.509 extension.
   *
   * @generated from field: bytes value = 3;
   */
  value: Uint8Array;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.X509Extension.
 * Use `create(X509ExtensionSchema)` to create a new message.
 */
export const X509ExtensionSchema: GenMessage<X509Extension> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 11);

/**
 * A [KeyUsage][google.cloud.security.privateca.v1beta1.KeyUsage] describes key usage values that may appear in an X.509
 * certificate.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.KeyUsage
 */
export type KeyUsage = Message<"google.cloud.security.privateca.v1beta1.KeyUsage"> & {
  /**
   * Describes high-level ways in which a key may be used.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions base_key_usage = 1;
   */
  baseKeyUsage?: KeyUsage_KeyUsageOptions;

  /**
   * Detailed scenarios in which a key may be used.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions extended_key_usage = 2;
   */
  extendedKeyUsage?: KeyUsage_ExtendedKeyUsageOptions;

  /**
   * Used to describe extended key usages that are not listed in the
   * [KeyUsage.ExtendedKeyUsageOptions][google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions] message.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.ObjectId unknown_extended_key_usages = 3;
   */
  unknownExtendedKeyUsages: ObjectId[];
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.KeyUsage.
 * Use `create(KeyUsageSchema)` to create a new message.
 */
export const KeyUsageSchema: GenMessage<KeyUsage> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 12);

/**
 * [KeyUsage.KeyUsageOptions][google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions] corresponds to the key usage values
 * described in https://tools.ietf.org/html/rfc5280#section-4.2.1.3.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
 */
export type KeyUsage_KeyUsageOptions = Message<"google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions"> & {
  /**
   * The key may be used for digital signatures.
   *
   * @generated from field: bool digital_signature = 1;
   */
  digitalSignature: boolean;

  /**
   * The key may be used for cryptographic commitments. Note that this may
   * also be referred to as "non-repudiation".
   *
   * @generated from field: bool content_commitment = 2;
   */
  contentCommitment: boolean;

  /**
   * The key may be used to encipher other keys.
   *
   * @generated from field: bool key_encipherment = 3;
   */
  keyEncipherment: boolean;

  /**
   * The key may be used to encipher data.
   *
   * @generated from field: bool data_encipherment = 4;
   */
  dataEncipherment: boolean;

  /**
   * The key may be used in a key agreement protocol.
   *
   * @generated from field: bool key_agreement = 5;
   */
  keyAgreement: boolean;

  /**
   * The key may be used to sign certificates.
   *
   * @generated from field: bool cert_sign = 6;
   */
  certSign: boolean;

  /**
   * The key may be used sign certificate revocation lists.
   *
   * @generated from field: bool crl_sign = 7;
   */
  crlSign: boolean;

  /**
   * The key may be used to encipher only.
   *
   * @generated from field: bool encipher_only = 8;
   */
  encipherOnly: boolean;

  /**
   * The key may be used to decipher only.
   *
   * @generated from field: bool decipher_only = 9;
   */
  decipherOnly: boolean;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions.
 * Use `create(KeyUsage_KeyUsageOptionsSchema)` to create a new message.
 */
export const KeyUsage_KeyUsageOptionsSchema: GenMessage<KeyUsage_KeyUsageOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 12, 0);

/**
 * [KeyUsage.ExtendedKeyUsageOptions][google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions] has fields that correspond to
 * certain common OIDs that could be specified as an extended key usage value.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
 */
export type KeyUsage_ExtendedKeyUsageOptions = Message<"google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions"> & {
  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW
   * server authentication", though regularly used for non-WWW TLS.
   *
   * @generated from field: bool server_auth = 1;
   */
  serverAuth: boolean;

  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW
   * client authentication", though regularly used for non-WWW TLS.
   *
   * @generated from field: bool client_auth = 2;
   */
  clientAuth: boolean;

  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of
   * downloadable executable code client authentication".
   *
   * @generated from field: bool code_signing = 3;
   */
  codeSigning: boolean;

  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email
   * protection".
   *
   * @generated from field: bool email_protection = 4;
   */
  emailProtection: boolean;

  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding
   * the hash of an object to a time".
   *
   * @generated from field: bool time_stamping = 5;
   */
  timeStamping: boolean;

  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing
   * OCSP responses".
   *
   * @generated from field: bool ocsp_signing = 6;
   */
  ocspSigning: boolean;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions.
 * Use `create(KeyUsage_ExtendedKeyUsageOptionsSchema)` to create a new message.
 */
export const KeyUsage_ExtendedKeyUsageOptionsSchema: GenMessage<KeyUsage_ExtendedKeyUsageOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 12, 1);

/**
 * [Subject][google.cloud.security.privateca.v1beta1.Subject] describes parts of a distinguished name that, in turn,
 * describes the subject of the certificate.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.Subject
 */
export type Subject = Message<"google.cloud.security.privateca.v1beta1.Subject"> & {
  /**
   * The country code of the subject.
   *
   * @generated from field: string country_code = 1;
   */
  countryCode: string;

  /**
   * The organization of the subject.
   *
   * @generated from field: string organization = 2;
   */
  organization: string;

  /**
   * The organizational_unit of the subject.
   *
   * @generated from field: string organizational_unit = 3;
   */
  organizationalUnit: string;

  /**
   * The locality or city of the subject.
   *
   * @generated from field: string locality = 4;
   */
  locality: string;

  /**
   * The province, territory, or regional state of the subject.
   *
   * @generated from field: string province = 5;
   */
  province: string;

  /**
   * The street address of the subject.
   *
   * @generated from field: string street_address = 6;
   */
  streetAddress: string;

  /**
   * The postal code of the subject.
   *
   * @generated from field: string postal_code = 7;
   */
  postalCode: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.Subject.
 * Use `create(SubjectSchema)` to create a new message.
 */
export const SubjectSchema: GenMessage<Subject> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 13);

/**
 * [SubjectAltNames][google.cloud.security.privateca.v1beta1.SubjectAltNames] corresponds to a more modern way of listing what
 * the asserted identity is in a certificate (i.e., compared to the "common
 * name" in the distinguished name).
 *
 * @generated from message google.cloud.security.privateca.v1beta1.SubjectAltNames
 */
export type SubjectAltNames = Message<"google.cloud.security.privateca.v1beta1.SubjectAltNames"> & {
  /**
   * Contains only valid, fully-qualified host names.
   *
   * @generated from field: repeated string dns_names = 1;
   */
  dnsNames: string[];

  /**
   * Contains only valid RFC 3986 URIs.
   *
   * @generated from field: repeated string uris = 2;
   */
  uris: string[];

  /**
   * Contains only valid RFC 2822 E-mail addresses.
   *
   * @generated from field: repeated string email_addresses = 3;
   */
  emailAddresses: string[];

  /**
   * Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
   *
   * @generated from field: repeated string ip_addresses = 4;
   */
  ipAddresses: string[];

  /**
   * Contains additional subject alternative name values.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.X509Extension custom_sans = 5;
   */
  customSans: X509Extension[];
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.SubjectAltNames.
 * Use `create(SubjectAltNamesSchema)` to create a new message.
 */
export const SubjectAltNamesSchema: GenMessage<SubjectAltNames> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_resources, 14);

/**
 * A [RevocationReason][google.cloud.security.privateca.v1beta1.RevocationReason] indicates whether a [Certificate][google.cloud.security.privateca.v1beta1.Certificate] has been revoked,
 * and the reason for revocation. These correspond to standard revocation
 * reasons from RFC 5280. Note that the enum labels and values in this
 * definition are not the same ASN.1 values defined in RFC 5280. These values
 * will be translated to the correct ASN.1 values when a CRL is created.
 *
 * @generated from enum google.cloud.security.privateca.v1beta1.RevocationReason
 */
export enum RevocationReason {
  /**
   * Default unspecified value. This value does indicate that a [Certificate][google.cloud.security.privateca.v1beta1.Certificate]
   * has been revoked, but that a reason has not been recorded.
   *
   * @generated from enum value: REVOCATION_REASON_UNSPECIFIED = 0;
   */
  REVOCATION_REASON_UNSPECIFIED = 0,

  /**
   * Key material for this [Certificate][google.cloud.security.privateca.v1beta1.Certificate] may have leaked.
   *
   * @generated from enum value: KEY_COMPROMISE = 1;
   */
  KEY_COMPROMISE = 1,

  /**
   * The key material for a certificate authority in the issuing path may have
   * leaked.
   *
   * @generated from enum value: CERTIFICATE_AUTHORITY_COMPROMISE = 2;
   */
  CERTIFICATE_AUTHORITY_COMPROMISE = 2,

  /**
   * The subject or other attributes in this [Certificate][google.cloud.security.privateca.v1beta1.Certificate] have changed.
   *
   * @generated from enum value: AFFILIATION_CHANGED = 3;
   */
  AFFILIATION_CHANGED = 3,

  /**
   * This [Certificate][google.cloud.security.privateca.v1beta1.Certificate] has been superseded.
   *
   * @generated from enum value: SUPERSEDED = 4;
   */
  SUPERSEDED = 4,

  /**
   * This [Certificate][google.cloud.security.privateca.v1beta1.Certificate] or entities in the issuing path have ceased to
   * operate.
   *
   * @generated from enum value: CESSATION_OF_OPERATION = 5;
   */
  CESSATION_OF_OPERATION = 5,

  /**
   * This [Certificate][google.cloud.security.privateca.v1beta1.Certificate] should not be considered valid, it is expected that it
   * may become valid in the future.
   *
   * @generated from enum value: CERTIFICATE_HOLD = 6;
   */
  CERTIFICATE_HOLD = 6,

  /**
   * This [Certificate][google.cloud.security.privateca.v1beta1.Certificate] no longer has permission to assert the listed
   * attributes.
   *
   * @generated from enum value: PRIVILEGE_WITHDRAWN = 7;
   */
  PRIVILEGE_WITHDRAWN = 7,

  /**
   * The authority which determines appropriate attributes for a [Certificate][google.cloud.security.privateca.v1beta1.Certificate]
   * may have been compromised.
   *
   * @generated from enum value: ATTRIBUTE_AUTHORITY_COMPROMISE = 8;
   */
  ATTRIBUTE_AUTHORITY_COMPROMISE = 8,
}

/**
 * Describes the enum google.cloud.security.privateca.v1beta1.RevocationReason.
 */
export const RevocationReasonSchema: GenEnum<RevocationReason> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1beta1_resources, 0);

