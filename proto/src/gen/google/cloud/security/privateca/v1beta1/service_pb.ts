// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/security/privateca/v1beta1/service.proto (package google.cloud.security.privateca.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Certificate, CertificateAuthority, CertificateAuthoritySchema, CertificateRevocationList, CertificateRevocationListSchema, CertificateSchema, ReusableConfig, ReusableConfigSchema, RevocationReason, SubordinateConfig } from "./resources_pb";
import { file_google_cloud_security_privateca_v1beta1_resources } from "./resources_pb";
import type { OperationSchema } from "../../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/security/privateca/v1beta1/service.proto.
 */
export const file_google_cloud_security_privateca_v1beta1_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_security_privateca_v1beta1_resources, file_google_longrunning_operations, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Request message for [CertificateAuthorityService.CreateCertificate][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.CreateCertificate].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CreateCertificateRequest
 */
export type CreateCertificateRequest = Message<"google.cloud.security.privateca.v1beta1.CreateCertificateRequest"> & {
  /**
   * Required. The resource name of the location and [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]
   * associated with the [Certificate][google.cloud.security.privateca.v1beta1.Certificate], in the format
   * `projects/*\/locations/*\/certificateAuthorities/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. It must be unique within a location and match the regular
   * expression `[a-zA-Z0-9_-]{1,63}`. This field is required when using a
   * [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the Enterprise [CertificateAuthority.Tier][google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier],
   * but is optional and its value is ignored otherwise.
   *
   * @generated from field: string certificate_id = 2;
   */
  certificateId: string;

  /**
   * Required. A [Certificate][google.cloud.security.privateca.v1beta1.Certificate] with initial field values.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.Certificate certificate = 3;
   */
  certificate?: Certificate;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CreateCertificateRequest.
 * Use `create(CreateCertificateRequestSchema)` to create a new message.
 */
export const CreateCertificateRequestSchema: GenMessage<CreateCertificateRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 0);

/**
 * Request message for
 * [CertificateAuthorityService.GetCertificate][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificate].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.GetCertificateRequest
 */
export type GetCertificateRequest = Message<"google.cloud.security.privateca.v1beta1.GetCertificateRequest"> & {
  /**
   * Required. The [name][google.cloud.security.privateca.v1beta1.Certificate.name] of the [Certificate][google.cloud.security.privateca.v1beta1.Certificate] to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.GetCertificateRequest.
 * Use `create(GetCertificateRequestSchema)` to create a new message.
 */
export const GetCertificateRequestSchema: GenMessage<GetCertificateRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 1);

/**
 * Request message for [CertificateAuthorityService.ListCertificates][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificates].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ListCertificatesRequest
 */
export type ListCertificatesRequest = Message<"google.cloud.security.privateca.v1beta1.ListCertificatesRequest"> & {
  /**
   * Required. The resource name of the location associated with the
   * [Certificates][google.cloud.security.privateca.v1beta1.Certificate], in the format
   * `projects/*\/locations/*\/certificateauthorities/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Limit on the number of
   * [Certificates][google.cloud.security.privateca.v1beta1.Certificate] to include in the
   * response. Further [Certificates][google.cloud.security.privateca.v1beta1.Certificate] can subsequently be obtained
   * by including the
   * [ListCertificatesResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificatesResponse.next_page_token] in a subsequent
   * request. If unspecified, the server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. Pagination token, returned earlier via
   * [ListCertificatesResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificatesResponse.next_page_token].
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Only include resources that match the filter in the response. For details
   * on supported filters and syntax, see [Certificates Filtering
   * documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#filtering_support).
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Specify how the results should be sorted. For details on supported fields
   * and syntax, see [Certificates Sorting
   * documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#sorting_support).
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ListCertificatesRequest.
 * Use `create(ListCertificatesRequestSchema)` to create a new message.
 */
export const ListCertificatesRequestSchema: GenMessage<ListCertificatesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 2);

/**
 * Response message for [CertificateAuthorityService.ListCertificates][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificates].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ListCertificatesResponse
 */
export type ListCertificatesResponse = Message<"google.cloud.security.privateca.v1beta1.ListCertificatesResponse"> & {
  /**
   * The list of [Certificates][google.cloud.security.privateca.v1beta1.Certificate].
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.Certificate certificates = 1;
   */
  certificates: Certificate[];

  /**
   * A token to retrieve next page of results. Pass this value in
   * [ListCertificatesRequest.next_page_token][] to retrieve the
   * next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * A list of locations (e.g. "us-west1") that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ListCertificatesResponse.
 * Use `create(ListCertificatesResponseSchema)` to create a new message.
 */
export const ListCertificatesResponseSchema: GenMessage<ListCertificatesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 3);

/**
 * Request message for
 * [CertificateAuthorityService.RevokeCertificate][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.RevokeCertificate].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
 */
export type RevokeCertificateRequest = Message<"google.cloud.security.privateca.v1beta1.RevokeCertificateRequest"> & {
  /**
   * Required. The resource name for this [Certificate][google.cloud.security.privateca.v1beta1.Certificate] in the
   * format `projects/*\/locations/*\/certificateAuthorities/*\/certificates/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The [RevocationReason][google.cloud.security.privateca.v1beta1.RevocationReason] for revoking this certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.RevocationReason reason = 2;
   */
  reason: RevocationReason;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.RevokeCertificateRequest.
 * Use `create(RevokeCertificateRequestSchema)` to create a new message.
 */
export const RevokeCertificateRequestSchema: GenMessage<RevokeCertificateRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 4);

/**
 * Request message for [CertificateAuthorityService.UpdateCertificate][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificate].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
 */
export type UpdateCertificateRequest = Message<"google.cloud.security.privateca.v1beta1.UpdateCertificateRequest"> & {
  /**
   * Required. [Certificate][google.cloud.security.privateca.v1beta1.Certificate] with updated values.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.Certificate certificate = 1;
   */
  certificate?: Certificate;

  /**
   * Required. A list of fields to be updated in this request.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.UpdateCertificateRequest.
 * Use `create(UpdateCertificateRequestSchema)` to create a new message.
 */
export const UpdateCertificateRequestSchema: GenMessage<UpdateCertificateRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 5);

/**
 * Request message for
 * [CertificateAuthorityService.ActivateCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ActivateCertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
 */
export type ActivateCertificateAuthorityRequest = Message<"google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest"> & {
  /**
   * Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
   * format `projects/*\/locations/*\/certificateAuthorities/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The signed CA certificate issued from
   * [FetchCertificateAuthorityCsrResponse.pem_csr][google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse.pem_csr].
   *
   * @generated from field: string pem_ca_certificate = 2;
   */
  pemCaCertificate: string;

  /**
   * Required. Must include information about the issuer of 'pem_ca_certificate', and any
   * further issuers until the self-signed CA.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.SubordinateConfig subordinate_config = 3;
   */
  subordinateConfig?: SubordinateConfig;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest.
 * Use `create(ActivateCertificateAuthorityRequestSchema)` to create a new message.
 */
export const ActivateCertificateAuthorityRequestSchema: GenMessage<ActivateCertificateAuthorityRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 6);

/**
 * Request message for
 * [CertificateAuthorityService.CreateCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.CreateCertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
 */
export type CreateCertificateAuthorityRequest = Message<"google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest"> & {
  /**
   * Required. The resource name of the location associated with the
   * [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority], in the format
   * `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. It must be unique within a location and match the regular
   * expression `[a-zA-Z0-9_-]{1,63}`
   *
   * @generated from field: string certificate_authority_id = 2;
   */
  certificateAuthorityId: string;

  /**
   * Required. A [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] with initial field values.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority certificate_authority = 3;
   */
  certificateAuthority?: CertificateAuthority;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest.
 * Use `create(CreateCertificateAuthorityRequestSchema)` to create a new message.
 */
export const CreateCertificateAuthorityRequestSchema: GenMessage<CreateCertificateAuthorityRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 7);

/**
 * Request message for
 * [CertificateAuthorityService.DisableCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.DisableCertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
 */
export type DisableCertificateAuthorityRequest = Message<"google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest"> & {
  /**
   * Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
   * format `projects/*\/locations/*\/certificateAuthorities/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest.
 * Use `create(DisableCertificateAuthorityRequestSchema)` to create a new message.
 */
export const DisableCertificateAuthorityRequestSchema: GenMessage<DisableCertificateAuthorityRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 8);

/**
 * Request message for
 * [CertificateAuthorityService.EnableCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.EnableCertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
 */
export type EnableCertificateAuthorityRequest = Message<"google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest"> & {
  /**
   * Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
   * format `projects/*\/locations/*\/certificateAuthorities/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest.
 * Use `create(EnableCertificateAuthorityRequestSchema)` to create a new message.
 */
export const EnableCertificateAuthorityRequestSchema: GenMessage<EnableCertificateAuthorityRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 9);

/**
 * Request message for
 * [CertificateAuthorityService.FetchCertificateAuthorityCsr][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.FetchCertificateAuthorityCsr].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
 */
export type FetchCertificateAuthorityCsrRequest = Message<"google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest"> & {
  /**
   * Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
   * format `projects/*\/locations/*\/certificateAuthorities/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest.
 * Use `create(FetchCertificateAuthorityCsrRequestSchema)` to create a new message.
 */
export const FetchCertificateAuthorityCsrRequestSchema: GenMessage<FetchCertificateAuthorityCsrRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 10);

/**
 * Response message for
 * [CertificateAuthorityService.FetchCertificateAuthorityCsr][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.FetchCertificateAuthorityCsr].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
 */
export type FetchCertificateAuthorityCsrResponse = Message<"google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse"> & {
  /**
   * Output only. The PEM-encoded signed certificate signing request (CSR).
   *
   * @generated from field: string pem_csr = 1;
   */
  pemCsr: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse.
 * Use `create(FetchCertificateAuthorityCsrResponseSchema)` to create a new message.
 */
export const FetchCertificateAuthorityCsrResponseSchema: GenMessage<FetchCertificateAuthorityCsrResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 11);

/**
 * Request message for [CertificateAuthorityService.GetCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
 */
export type GetCertificateAuthorityRequest = Message<"google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest"> & {
  /**
   * Required. The [name][google.cloud.security.privateca.v1beta1.CertificateAuthority.name] of the [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] to
   * get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest.
 * Use `create(GetCertificateAuthorityRequestSchema)` to create a new message.
 */
export const GetCertificateAuthorityRequestSchema: GenMessage<GetCertificateAuthorityRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 12);

/**
 * Request message for
 * [CertificateAuthorityService.ListCertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateAuthorities].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
 */
export type ListCertificateAuthoritiesRequest = Message<"google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest"> & {
  /**
   * Required. The resource name of the location associated with the
   * [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority], in the format
   * `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Limit on the number of [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority] to
   * include in the response.
   * Further [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority] can subsequently be
   * obtained by including the
   * [ListCertificateAuthoritiesResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.next_page_token] in a subsequent
   * request. If unspecified, the server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. Pagination token, returned earlier via
   * [ListCertificateAuthoritiesResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.next_page_token].
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Only include resources that match the filter in the response.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Specify how the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest.
 * Use `create(ListCertificateAuthoritiesRequestSchema)` to create a new message.
 */
export const ListCertificateAuthoritiesRequestSchema: GenMessage<ListCertificateAuthoritiesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 13);

/**
 * Response message for
 * [CertificateAuthorityService.ListCertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateAuthorities].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
 */
export type ListCertificateAuthoritiesResponse = Message<"google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse"> & {
  /**
   * The list of [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.CertificateAuthority certificate_authorities = 1;
   */
  certificateAuthorities: CertificateAuthority[];

  /**
   * A token to retrieve next page of results. Pass this value in
   * [ListCertificateAuthoritiesRequest.next_page_token][] to retrieve the next
   * page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * A list of locations (e.g. "us-west1") that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.
 * Use `create(ListCertificateAuthoritiesResponseSchema)` to create a new message.
 */
export const ListCertificateAuthoritiesResponseSchema: GenMessage<ListCertificateAuthoritiesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 14);

/**
 * Request message for
 * [CertificateAuthorityService.RestoreCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.RestoreCertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
 */
export type RestoreCertificateAuthorityRequest = Message<"google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest"> & {
  /**
   * Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
   * format `projects/*\/locations/*\/certificateAuthorities/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest.
 * Use `create(RestoreCertificateAuthorityRequestSchema)` to create a new message.
 */
export const RestoreCertificateAuthorityRequestSchema: GenMessage<RestoreCertificateAuthorityRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 15);

/**
 * Request message for
 * [CertificateAuthorityService.ScheduleDeleteCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ScheduleDeleteCertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
 */
export type ScheduleDeleteCertificateAuthorityRequest = Message<"google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest"> & {
  /**
   * Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in the
   * format `projects/*\/locations/*\/certificateAuthorities/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest.
 * Use `create(ScheduleDeleteCertificateAuthorityRequestSchema)` to create a new message.
 */
export const ScheduleDeleteCertificateAuthorityRequestSchema: GenMessage<ScheduleDeleteCertificateAuthorityRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 16);

/**
 * Request message for
 * [CertificateAuthorityService.UpdateCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
 */
export type UpdateCertificateAuthorityRequest = Message<"google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest"> & {
  /**
   * Required. [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] with updated values.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateAuthority certificate_authority = 1;
   */
  certificateAuthority?: CertificateAuthority;

  /**
   * Required. A list of fields to be updated in this request.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest.
 * Use `create(UpdateCertificateAuthorityRequestSchema)` to create a new message.
 */
export const UpdateCertificateAuthorityRequestSchema: GenMessage<UpdateCertificateAuthorityRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 17);

/**
 * Request message for
 * [CertificateAuthorityService.GetCertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificateRevocationList].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
 */
export type GetCertificateRevocationListRequest = Message<"google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest"> & {
  /**
   * Required. The [name][google.cloud.security.privateca.v1beta1.CertificateRevocationList.name] of the
   * [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest.
 * Use `create(GetCertificateRevocationListRequestSchema)` to create a new message.
 */
export const GetCertificateRevocationListRequestSchema: GenMessage<GetCertificateRevocationListRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 18);

/**
 * Request message for
 * [CertificateAuthorityService.ListCertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateRevocationLists].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
 */
export type ListCertificateRevocationListsRequest = Message<"google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest"> & {
  /**
   * Required. The resource name of the location associated with the
   * [CertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateRevocationList], in the format
   * `projects/*\/locations/*\/certificateauthorities/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Limit on the number of
   * [CertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateRevocationList] to include in the
   * response. Further [CertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateRevocationList]
   * can subsequently be obtained by including the
   * [ListCertificateRevocationListsResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.next_page_token] in a subsequent
   * request. If unspecified, the server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. Pagination token, returned earlier via
   * [ListCertificateRevocationListsResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.next_page_token].
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Only include resources that match the filter in the response.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Specify how the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest.
 * Use `create(ListCertificateRevocationListsRequestSchema)` to create a new message.
 */
export const ListCertificateRevocationListsRequestSchema: GenMessage<ListCertificateRevocationListsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 19);

/**
 * Response message for
 * [CertificateAuthorityService.ListCertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateRevocationLists].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
 */
export type ListCertificateRevocationListsResponse = Message<"google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse"> & {
  /**
   * The list of [CertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateRevocationList].
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.CertificateRevocationList certificate_revocation_lists = 1;
   */
  certificateRevocationLists: CertificateRevocationList[];

  /**
   * A token to retrieve next page of results. Pass this value in
   * [ListCertificateRevocationListsRequest.next_page_token][] to retrieve the
   * next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * A list of locations (e.g. "us-west1") that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.
 * Use `create(ListCertificateRevocationListsResponseSchema)` to create a new message.
 */
export const ListCertificateRevocationListsResponseSchema: GenMessage<ListCertificateRevocationListsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 20);

/**
 * Request message for
 * [CertificateAuthorityService.UpdateCertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificateRevocationList].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
 */
export type UpdateCertificateRevocationListRequest = Message<"google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest"> & {
  /**
   * Required. [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList] with updated values.
   *
   * @generated from field: google.cloud.security.privateca.v1beta1.CertificateRevocationList certificate_revocation_list = 1;
   */
  certificateRevocationList?: CertificateRevocationList;

  /**
   * Required. A list of fields to be updated in this request.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Optional. An ID to identify requests. Specify a unique request ID so that if you must
   * retry your request, the server will know to ignore the request if it has
   * already been completed. The server will guarantee that for at least 60
   * minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest.
 * Use `create(UpdateCertificateRevocationListRequestSchema)` to create a new message.
 */
export const UpdateCertificateRevocationListRequestSchema: GenMessage<UpdateCertificateRevocationListRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 21);

/**
 * Request message for
 * [CertificateAuthorityService.GetReusableConfig][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetReusableConfig].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
 */
export type GetReusableConfigRequest = Message<"google.cloud.security.privateca.v1beta1.GetReusableConfigRequest"> & {
  /**
   * Required. The [name][ReusableConfigs.name] of the [ReusableConfigs][] to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.GetReusableConfigRequest.
 * Use `create(GetReusableConfigRequestSchema)` to create a new message.
 */
export const GetReusableConfigRequestSchema: GenMessage<GetReusableConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 22);

/**
 * Request message for
 * [CertificateAuthorityService.ListReusableConfigs][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListReusableConfigs].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
 */
export type ListReusableConfigsRequest = Message<"google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest"> & {
  /**
   * Required. The resource name of the location associated with the
   * [ReusableConfigs][google.cloud.security.privateca.v1beta1.ReusableConfig], in the format
   * `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Limit on the number of
   * [ReusableConfigs][google.cloud.security.privateca.v1beta1.ReusableConfig] to include in the response.
   * Further [ReusableConfigs][google.cloud.security.privateca.v1beta1.ReusableConfig] can subsequently be
   * obtained by including the
   * [ListReusableConfigsResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.next_page_token] in a subsequent request. If
   * unspecified, the server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. Pagination token, returned earlier via
   * [ListReusableConfigsResponse.next_page_token][google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.next_page_token].
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Only include resources that match the filter in the response.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Specify how the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest.
 * Use `create(ListReusableConfigsRequestSchema)` to create a new message.
 */
export const ListReusableConfigsRequestSchema: GenMessage<ListReusableConfigsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 23);

/**
 * Response message for
 * [CertificateAuthorityService.ListReusableConfigs][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListReusableConfigs].
 *
 * @generated from message google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
 */
export type ListReusableConfigsResponse = Message<"google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse"> & {
  /**
   * The list of [ReusableConfigs][google.cloud.security.privateca.v1beta1.ReusableConfig].
   *
   * @generated from field: repeated google.cloud.security.privateca.v1beta1.ReusableConfig reusable_configs = 1;
   */
  reusableConfigs: ReusableConfig[];

  /**
   * A token to retrieve next page of results. Pass this value in
   * [ListReusableConfigsRequest.next_page_token][] to retrieve
   * the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * A list of locations (e.g. "us-west1") that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.
 * Use `create(ListReusableConfigsResponseSchema)` to create a new message.
 */
export const ListReusableConfigsResponseSchema: GenMessage<ListReusableConfigsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 24);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.security.privateca.v1beta1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.security.privateca.v1beta1.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. Identifies whether the user has requested cancellation
   * of the operation. Operations that have successfully been cancelled
   * have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
   * corresponding to `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1beta1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1beta1_service, 25);

/**
 * [Certificate Authority Service][google.cloud.security.privateca.v1beta1.CertificateAuthorityService] manages private
 * certificate authorities and issued certificates.
 *
 * @generated from service google.cloud.security.privateca.v1beta1.CertificateAuthorityService
 */
export const CertificateAuthorityService: GenService<{
  /**
   * Create a new [Certificate][google.cloud.security.privateca.v1beta1.Certificate] in a given Project, Location from a particular
   * [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.CreateCertificate
   */
  createCertificate: {
    methodKind: "unary";
    input: typeof CreateCertificateRequestSchema;
    output: typeof CertificateSchema;
  },
  /**
   * Returns a [Certificate][google.cloud.security.privateca.v1beta1.Certificate].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificate
   */
  getCertificate: {
    methodKind: "unary";
    input: typeof GetCertificateRequestSchema;
    output: typeof CertificateSchema;
  },
  /**
   * Lists [Certificates][google.cloud.security.privateca.v1beta1.Certificate].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificates
   */
  listCertificates: {
    methodKind: "unary";
    input: typeof ListCertificatesRequestSchema;
    output: typeof ListCertificatesResponseSchema;
  },
  /**
   * Revoke a [Certificate][google.cloud.security.privateca.v1beta1.Certificate].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.RevokeCertificate
   */
  revokeCertificate: {
    methodKind: "unary";
    input: typeof RevokeCertificateRequestSchema;
    output: typeof CertificateSchema;
  },
  /**
   * Update a [Certificate][google.cloud.security.privateca.v1beta1.Certificate]. Currently, the only field you can update is the
   * [labels][google.cloud.security.privateca.v1beta1.Certificate.labels] field.
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificate
   */
  updateCertificate: {
    methodKind: "unary";
    input: typeof UpdateCertificateRequestSchema;
    output: typeof CertificateSchema;
  },
  /**
   * Activate a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] that is in state
   * [PENDING_ACTIVATION][google.cloud.security.privateca.v1beta1.CertificateAuthority.State.PENDING_ACTIVATION] and is
   * of type [SUBORDINATE][google.cloud.security.privateca.v1beta1.CertificateAuthority.Type.SUBORDINATE]. After the
   * parent Certificate Authority signs a certificate signing request from
   * [FetchCertificateAuthorityCsr][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.FetchCertificateAuthorityCsr], this method can complete the activation
   * process.
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ActivateCertificateAuthority
   */
  activateCertificateAuthority: {
    methodKind: "unary";
    input: typeof ActivateCertificateAuthorityRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Create a new [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] in a given Project and Location.
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.CreateCertificateAuthority
   */
  createCertificateAuthority: {
    methodKind: "unary";
    input: typeof CreateCertificateAuthorityRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Disable a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.DisableCertificateAuthority
   */
  disableCertificateAuthority: {
    methodKind: "unary";
    input: typeof DisableCertificateAuthorityRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Enable a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.EnableCertificateAuthority
   */
  enableCertificateAuthority: {
    methodKind: "unary";
    input: typeof EnableCertificateAuthorityRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Fetch a certificate signing request (CSR) from a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority]
   * that is in state
   * [PENDING_ACTIVATION][google.cloud.security.privateca.v1beta1.CertificateAuthority.State.PENDING_ACTIVATION] and is
   * of type [SUBORDINATE][google.cloud.security.privateca.v1beta1.CertificateAuthority.Type.SUBORDINATE]. The CSR must
   * then be signed by the desired parent Certificate Authority, which could be
   * another [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] resource, or could be an on-prem
   * certificate authority. See also [ActivateCertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ActivateCertificateAuthority].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.FetchCertificateAuthorityCsr
   */
  fetchCertificateAuthorityCsr: {
    methodKind: "unary";
    input: typeof FetchCertificateAuthorityCsrRequestSchema;
    output: typeof FetchCertificateAuthorityCsrResponseSchema;
  },
  /**
   * Returns a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificateAuthority
   */
  getCertificateAuthority: {
    methodKind: "unary";
    input: typeof GetCertificateAuthorityRequestSchema;
    output: typeof CertificateAuthoritySchema;
  },
  /**
   * Lists [CertificateAuthorities][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateAuthorities
   */
  listCertificateAuthorities: {
    methodKind: "unary";
    input: typeof ListCertificateAuthoritiesRequestSchema;
    output: typeof ListCertificateAuthoritiesResponseSchema;
  },
  /**
   * Restore a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] that is scheduled for deletion.
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.RestoreCertificateAuthority
   */
  restoreCertificateAuthority: {
    methodKind: "unary";
    input: typeof RestoreCertificateAuthorityRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Schedule a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority] for deletion.
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ScheduleDeleteCertificateAuthority
   */
  scheduleDeleteCertificateAuthority: {
    methodKind: "unary";
    input: typeof ScheduleDeleteCertificateAuthorityRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Update a [CertificateAuthority][google.cloud.security.privateca.v1beta1.CertificateAuthority].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificateAuthority
   */
  updateCertificateAuthority: {
    methodKind: "unary";
    input: typeof UpdateCertificateAuthorityRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Returns a [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificateRevocationList
   */
  getCertificateRevocationList: {
    methodKind: "unary";
    input: typeof GetCertificateRevocationListRequestSchema;
    output: typeof CertificateRevocationListSchema;
  },
  /**
   * Lists [CertificateRevocationLists][google.cloud.security.privateca.v1beta1.CertificateRevocationList].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateRevocationLists
   */
  listCertificateRevocationLists: {
    methodKind: "unary";
    input: typeof ListCertificateRevocationListsRequestSchema;
    output: typeof ListCertificateRevocationListsResponseSchema;
  },
  /**
   * Update a [CertificateRevocationList][google.cloud.security.privateca.v1beta1.CertificateRevocationList].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificateRevocationList
   */
  updateCertificateRevocationList: {
    methodKind: "unary";
    input: typeof UpdateCertificateRevocationListRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Returns a [ReusableConfig][google.cloud.security.privateca.v1beta1.ReusableConfig].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetReusableConfig
   */
  getReusableConfig: {
    methodKind: "unary";
    input: typeof GetReusableConfigRequestSchema;
    output: typeof ReusableConfigSchema;
  },
  /**
   * Lists [ReusableConfigs][google.cloud.security.privateca.v1beta1.ReusableConfig].
   *
   * @generated from rpc google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListReusableConfigs
   */
  listReusableConfigs: {
    methodKind: "unary";
    input: typeof ListReusableConfigsRequestSchema;
    output: typeof ListReusableConfigsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_security_privateca_v1beta1_service, 0);

