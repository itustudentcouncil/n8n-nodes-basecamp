// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/security/privateca/v1/resources.proto (package google.cloud.security.privateca.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Expr } from "../../../../type/expr_pb";
import { file_google_type_expr } from "../../../../type/expr_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/security/privateca/v1/resources.proto.
 */
export const file_google_cloud_security_privateca_v1_resources: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_type_expr]);

/**
 * A
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
 * represents an individual Certificate Authority. A
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
 * can be used to create
 * [Certificates][google.cloud.security.privateca.v1.Certificate].
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateAuthority
 */
export type CertificateAuthority = Message<"google.cloud.security.privateca.v1.CertificateAuthority"> & {
  /**
   * Output only. The resource name for this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * in the format `projects/*\/locations/*\/caPools/*\/certificateAuthorities/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Immutable. The
   * [Type][google.cloud.security.privateca.v1.CertificateAuthority.Type] of
   * this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority].
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateAuthority.Type type = 2;
   */
  type: CertificateAuthority_Type;

  /**
   * Required. Immutable. The config used to create a self-signed X.509
   * certificate or CSR.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateConfig config = 3;
   */
  config?: CertificateConfig;

  /**
   * Required. Immutable. The desired lifetime of the CA certificate. Used to
   * create the "not_before_time" and "not_after_time" fields inside an X.509
   * certificate.
   *
   * @generated from field: google.protobuf.Duration lifetime = 4;
   */
  lifetime?: Duration;

  /**
   * Required. Immutable. Used when issuing certificates for this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority].
   * If this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * is a self-signed CertificateAuthority, this key is also used to sign the
   * self-signed CA certificate. Otherwise, it is used to sign a CSR.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec key_spec = 5;
   */
  keySpec?: CertificateAuthority_KeyVersionSpec;

  /**
   * Optional. If this is a subordinate
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority],
   * this field will be set with the subordinate configuration, which describes
   * its issuers. This may be updated, but this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * must continue to validate.
   *
   * @generated from field: google.cloud.security.privateca.v1.SubordinateConfig subordinate_config = 6;
   */
  subordinateConfig?: SubordinateConfig;

  /**
   * Output only. The
   * [CaPool.Tier][google.cloud.security.privateca.v1.CaPool.Tier] of the
   * [CaPool][google.cloud.security.privateca.v1.CaPool] that includes this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority].
   *
   * @generated from field: google.cloud.security.privateca.v1.CaPool.Tier tier = 7;
   */
  tier: CaPool_Tier;

  /**
   * Output only. The
   * [State][google.cloud.security.privateca.v1.CertificateAuthority.State] for
   * this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority].
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateAuthority.State state = 8;
   */
  state: CertificateAuthority_State;

  /**
   * Output only. This
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
   * certificate chain, including the current
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
   * certificate. Ordered such that the root issuer is the final element
   * (consistent with RFC 5246). For a self-signed CA, this will only list the
   * current
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
   * certificate.
   *
   * @generated from field: repeated string pem_ca_certificates = 9;
   */
  pemCaCertificates: string[];

  /**
   * Output only. A structured description of this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
   * CA certificate and its issuers. Ordered as self-to-root.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1.CertificateDescription ca_certificate_descriptions = 10;
   */
  caCertificateDescriptions: CertificateDescription[];

  /**
   * Immutable. The name of a Cloud Storage bucket where this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * will publish content, such as the CA certificate and CRLs. This must be a
   * bucket name, without any prefixes (such as `gs://`) or suffixes (such as
   * `.googleapis.com`). For example, to use a bucket named `my-bucket`, you
   * would simply specify `my-bucket`. If not specified, a managed bucket will
   * be created.
   *
   * @generated from field: string gcs_bucket = 11;
   */
  gcsBucket: string;

  /**
   * Output only. URLs for accessing content published by this CA, such as the
   * CA certificate and CRLs.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls access_urls = 12;
   */
  accessUrls?: CertificateAuthority_AccessUrls;

  /**
   * Output only. The time at which this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 13;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 14;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The time at which this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * was soft deleted, if it is in the
   * [DELETED][google.cloud.security.privateca.v1.CertificateAuthority.State.DELETED]
   * state.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 15;
   */
  deleteTime?: Timestamp;

  /**
   * Output only. The time at which this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * will be permanently purged, if it is in the
   * [DELETED][google.cloud.security.privateca.v1.CertificateAuthority.State.DELETED]
   * state.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 16;
   */
  expireTime?: Timestamp;

  /**
   * Optional. Labels with user-defined metadata.
   *
   * @generated from field: map<string, string> labels = 17;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateAuthority.
 * Use `create(CertificateAuthoritySchema)` to create a new message.
 */
export const CertificateAuthoritySchema: GenMessage<CertificateAuthority> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 0);

/**
 * URLs where a
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
 * will publish content.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
 */
export type CertificateAuthority_AccessUrls = Message<"google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls"> & {
  /**
   * The URL where this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
   * CA certificate is published. This will only be set for CAs that have been
   * activated.
   *
   * @generated from field: string ca_certificate_access_url = 1;
   */
  caCertificateAccessUrl: string;

  /**
   * The URLs where this
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
   * CRLs are published. This will only be set for CAs that have been
   * activated.
   *
   * @generated from field: repeated string crl_access_urls = 2;
   */
  crlAccessUrls: string[];
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls.
 * Use `create(CertificateAuthority_AccessUrlsSchema)` to create a new message.
 */
export const CertificateAuthority_AccessUrlsSchema: GenMessage<CertificateAuthority_AccessUrls> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 0, 0);

/**
 * A Cloud KMS key configuration that a
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
 * will use.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
 */
export type CertificateAuthority_KeyVersionSpec = Message<"google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec"> & {
  /**
   * @generated from oneof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec.KeyVersion
   */
  KeyVersion: {
    /**
     * The resource name for an existing Cloud KMS CryptoKeyVersion in the
     * format
     * `projects/*\/locations/*\/keyRings/*\/cryptoKeys/*\/cryptoKeyVersions/*`.
     * This option enables full flexibility in the key's capabilities and
     * properties.
     *
     * @generated from field: string cloud_kms_key_version = 1;
     */
    value: string;
    case: "cloudKmsKeyVersion";
  } | {
    /**
     * The algorithm to use for creating a managed Cloud KMS key for a for a
     * simplified experience. All managed keys will be have their
     * [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] as `HSM`.
     *
     * @generated from field: google.cloud.security.privateca.v1.CertificateAuthority.SignHashAlgorithm algorithm = 2;
     */
    value: CertificateAuthority_SignHashAlgorithm;
    case: "algorithm";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec.
 * Use `create(CertificateAuthority_KeyVersionSpecSchema)` to create a new message.
 */
export const CertificateAuthority_KeyVersionSpecSchema: GenMessage<CertificateAuthority_KeyVersionSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 0, 1);

/**
 * The type of a
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority],
 * indicating its issuing chain.
 *
 * @generated from enum google.cloud.security.privateca.v1.CertificateAuthority.Type
 */
export enum CertificateAuthority_Type {
  /**
   * Not specified.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Self-signed CA.
   *
   * @generated from enum value: SELF_SIGNED = 1;
   */
  SELF_SIGNED = 1,

  /**
   * Subordinate CA. Could be issued by a Private CA
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * or an unmanaged CA.
   *
   * @generated from enum value: SUBORDINATE = 2;
   */
  SUBORDINATE = 2,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.CertificateAuthority.Type.
 */
export const CertificateAuthority_TypeSchema: GenEnum<CertificateAuthority_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 0, 0);

/**
 * The state of a
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority],
 * indicating if it can be used.
 *
 * @generated from enum google.cloud.security.privateca.v1.CertificateAuthority.State
 */
export enum CertificateAuthority_State {
  /**
   * Not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Certificates can be issued from this CA. CRLs will be generated for this
   * CA. The CA will be part of the
   * [CaPool][google.cloud.security.privateca.v1.CaPool]'s trust anchor, and
   * will be used to issue certificates from the
   * [CaPool][google.cloud.security.privateca.v1.CaPool].
   *
   * @generated from enum value: ENABLED = 1;
   */
  ENABLED = 1,

  /**
   * Certificates cannot be issued from this CA. CRLs will still be generated.
   * The CA will be part of the
   * [CaPool][google.cloud.security.privateca.v1.CaPool]'s trust anchor, but
   * will not be used to issue certificates from the
   * [CaPool][google.cloud.security.privateca.v1.CaPool].
   *
   * @generated from enum value: DISABLED = 2;
   */
  DISABLED = 2,

  /**
   * Certificates can be issued from this CA. CRLs will be generated for this
   * CA. The CA will be part of the
   * [CaPool][google.cloud.security.privateca.v1.CaPool]'s trust anchor, but
   * will not be used to issue certificates from the
   * [CaPool][google.cloud.security.privateca.v1.CaPool].
   *
   * @generated from enum value: STAGED = 3;
   */
  STAGED = 3,

  /**
   * Certificates cannot be issued from this CA. CRLs will not be generated.
   * The CA will not be part of the
   * [CaPool][google.cloud.security.privateca.v1.CaPool]'s trust anchor, and
   * will not be used to issue certificates from the
   * [CaPool][google.cloud.security.privateca.v1.CaPool].
   *
   * @generated from enum value: AWAITING_USER_ACTIVATION = 4;
   */
  AWAITING_USER_ACTIVATION = 4,

  /**
   * Certificates cannot be issued from this CA. CRLs will not be generated.
   * The CA may still be recovered by calling
   * [CertificateAuthorityService.UndeleteCertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthorityService.UndeleteCertificateAuthority]
   * before
   * [expire_time][google.cloud.security.privateca.v1.CertificateAuthority.expire_time].
   * The CA will not be part of the
   * [CaPool][google.cloud.security.privateca.v1.CaPool]'s trust anchor, and
   * will not be used to issue certificates from the
   * [CaPool][google.cloud.security.privateca.v1.CaPool].
   *
   * @generated from enum value: DELETED = 5;
   */
  DELETED = 5,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.CertificateAuthority.State.
 */
export const CertificateAuthority_StateSchema: GenEnum<CertificateAuthority_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 0, 1);

/**
 * The algorithm of a Cloud KMS CryptoKeyVersion of a
 * [CryptoKey][google.cloud.kms.v1.CryptoKey] with the
 * [CryptoKeyPurpose][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose] value
 * `ASYMMETRIC_SIGN`. These values correspond to the
 * [CryptoKeyVersionAlgorithm][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm]
 * values. For RSA signing algorithms, the PSS algorithms should be preferred,
 * use PKCS1 algorithms if required for compatibility. For further
 * recommendations, see
 * https://cloud.google.com/kms/docs/algorithms#algorithm_recommendations.
 *
 * @generated from enum google.cloud.security.privateca.v1.CertificateAuthority.SignHashAlgorithm
 */
export enum CertificateAuthority_SignHashAlgorithm {
  /**
   * Not specified.
   *
   * @generated from enum value: SIGN_HASH_ALGORITHM_UNSPECIFIED = 0;
   */
  SIGN_HASH_ALGORITHM_UNSPECIFIED = 0,

  /**
   * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_2048_SHA256
   *
   * @generated from enum value: RSA_PSS_2048_SHA256 = 1;
   */
  RSA_PSS_2048_SHA256 = 1,

  /**
   * maps to CryptoKeyVersionAlgorithm. RSA_SIGN_PSS_3072_SHA256
   *
   * @generated from enum value: RSA_PSS_3072_SHA256 = 2;
   */
  RSA_PSS_3072_SHA256 = 2,

  /**
   * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_4096_SHA256
   *
   * @generated from enum value: RSA_PSS_4096_SHA256 = 3;
   */
  RSA_PSS_4096_SHA256 = 3,

  /**
   * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_2048_SHA256
   *
   * @generated from enum value: RSA_PKCS1_2048_SHA256 = 6;
   */
  RSA_PKCS1_2048_SHA256 = 6,

  /**
   * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_3072_SHA256
   *
   * @generated from enum value: RSA_PKCS1_3072_SHA256 = 7;
   */
  RSA_PKCS1_3072_SHA256 = 7,

  /**
   * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_4096_SHA256
   *
   * @generated from enum value: RSA_PKCS1_4096_SHA256 = 8;
   */
  RSA_PKCS1_4096_SHA256 = 8,

  /**
   * maps to CryptoKeyVersionAlgorithm.EC_SIGN_P256_SHA256
   *
   * @generated from enum value: EC_P256_SHA256 = 4;
   */
  EC_P256_SHA256 = 4,

  /**
   * maps to CryptoKeyVersionAlgorithm.EC_SIGN_P384_SHA384
   *
   * @generated from enum value: EC_P384_SHA384 = 5;
   */
  EC_P384_SHA384 = 5,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.CertificateAuthority.SignHashAlgorithm.
 */
export const CertificateAuthority_SignHashAlgorithmSchema: GenEnum<CertificateAuthority_SignHashAlgorithm> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 0, 2);

/**
 * A [CaPool][google.cloud.security.privateca.v1.CaPool] represents a group of
 * [CertificateAuthorities][google.cloud.security.privateca.v1.CertificateAuthority]
 * that form a trust anchor. A
 * [CaPool][google.cloud.security.privateca.v1.CaPool] can be used to manage
 * issuance policies for one or more
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
 * resources and to rotate CA certificates in and out of the trust anchor.
 *
 * @generated from message google.cloud.security.privateca.v1.CaPool
 */
export type CaPool = Message<"google.cloud.security.privateca.v1.CaPool"> & {
  /**
   * Output only. The resource name for this
   * [CaPool][google.cloud.security.privateca.v1.CaPool] in the format
   * `projects/*\/locations/*\/caPools/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Immutable. The
   * [Tier][google.cloud.security.privateca.v1.CaPool.Tier] of this
   * [CaPool][google.cloud.security.privateca.v1.CaPool].
   *
   * @generated from field: google.cloud.security.privateca.v1.CaPool.Tier tier = 2;
   */
  tier: CaPool_Tier;

  /**
   * Optional. The
   * [IssuancePolicy][google.cloud.security.privateca.v1.CaPool.IssuancePolicy]
   * to control how
   * [Certificates][google.cloud.security.privateca.v1.Certificate] will be
   * issued from this [CaPool][google.cloud.security.privateca.v1.CaPool].
   *
   * @generated from field: google.cloud.security.privateca.v1.CaPool.IssuancePolicy issuance_policy = 3;
   */
  issuancePolicy?: CaPool_IssuancePolicy;

  /**
   * Optional. The
   * [PublishingOptions][google.cloud.security.privateca.v1.CaPool.PublishingOptions]
   * to follow when issuing
   * [Certificates][google.cloud.security.privateca.v1.Certificate] from any
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * in this [CaPool][google.cloud.security.privateca.v1.CaPool].
   *
   * @generated from field: google.cloud.security.privateca.v1.CaPool.PublishingOptions publishing_options = 4;
   */
  publishingOptions?: CaPool_PublishingOptions;

  /**
   * Optional. Labels with user-defined metadata.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.security.privateca.v1.CaPool.
 * Use `create(CaPoolSchema)` to create a new message.
 */
export const CaPoolSchema: GenMessage<CaPool> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 1);

/**
 * Options relating to the publication of each
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
 * CA certificate and CRLs and their inclusion as extensions in issued
 * [Certificates][google.cloud.security.privateca.v1.Certificate]. The options
 * set here apply to certificates issued by any
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
 * in the [CaPool][google.cloud.security.privateca.v1.CaPool].
 *
 * @generated from message google.cloud.security.privateca.v1.CaPool.PublishingOptions
 */
export type CaPool_PublishingOptions = Message<"google.cloud.security.privateca.v1.CaPool.PublishingOptions"> & {
  /**
   * Optional. When true, publishes each
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
   * CA certificate and includes its URL in the "Authority Information Access"
   * X.509 extension in all issued
   * [Certificates][google.cloud.security.privateca.v1.Certificate]. If this
   * is false, the CA certificate will not be published and the corresponding
   * X.509 extension will not be written in issued certificates.
   *
   * @generated from field: bool publish_ca_cert = 1;
   */
  publishCaCert: boolean;

  /**
   * Optional. When true, publishes each
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
   * CRL and includes its URL in the "CRL Distribution Points" X.509 extension
   * in all issued
   * [Certificates][google.cloud.security.privateca.v1.Certificate]. If this
   * is false, CRLs will not be published and the corresponding X.509
   * extension will not be written in issued certificates. CRLs will expire 7
   * days from their creation. However, we will rebuild daily. CRLs are also
   * rebuilt shortly after a certificate is revoked.
   *
   * @generated from field: bool publish_crl = 2;
   */
  publishCrl: boolean;

  /**
   * Optional. Specifies the encoding format of each
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * resource's CA certificate and CRLs. If this is omitted, CA certificates
   * and CRLs will be published in PEM.
   *
   * @generated from field: google.cloud.security.privateca.v1.CaPool.PublishingOptions.EncodingFormat encoding_format = 3;
   */
  encodingFormat: CaPool_PublishingOptions_EncodingFormat;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CaPool.PublishingOptions.
 * Use `create(CaPool_PublishingOptionsSchema)` to create a new message.
 */
export const CaPool_PublishingOptionsSchema: GenMessage<CaPool_PublishingOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 1, 0);

/**
 * Supported encoding formats for publishing.
 *
 * @generated from enum google.cloud.security.privateca.v1.CaPool.PublishingOptions.EncodingFormat
 */
export enum CaPool_PublishingOptions_EncodingFormat {
  /**
   * Not specified. By default, PEM format will be used.
   *
   * @generated from enum value: ENCODING_FORMAT_UNSPECIFIED = 0;
   */
  ENCODING_FORMAT_UNSPECIFIED = 0,

  /**
   * The
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
   * CA certificate and CRLs will be published in PEM format.
   *
   * @generated from enum value: PEM = 1;
   */
  PEM = 1,

  /**
   * The
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]'s
   * CA certificate and CRLs will be published in DER format.
   *
   * @generated from enum value: DER = 2;
   */
  DER = 2,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.CaPool.PublishingOptions.EncodingFormat.
 */
export const CaPool_PublishingOptions_EncodingFormatSchema: GenEnum<CaPool_PublishingOptions_EncodingFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 1, 0, 0);

/**
 * Defines controls over all certificate issuance within a
 * [CaPool][google.cloud.security.privateca.v1.CaPool].
 *
 * @generated from message google.cloud.security.privateca.v1.CaPool.IssuancePolicy
 */
export type CaPool_IssuancePolicy = Message<"google.cloud.security.privateca.v1.CaPool.IssuancePolicy"> & {
  /**
   * Optional. If any
   * [AllowedKeyType][google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType]
   * is specified, then the certificate request's public key must match one of
   * the key types listed here. Otherwise, any key may be used.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType allowed_key_types = 1;
   */
  allowedKeyTypes: CaPool_IssuancePolicy_AllowedKeyType[];

  /**
   * Optional. The maximum lifetime allowed for issued
   * [Certificates][google.cloud.security.privateca.v1.Certificate]. Note that
   * if the issuing
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * expires before a
   * [Certificate][google.cloud.security.privateca.v1.Certificate] resource's
   * requested maximum_lifetime, the effective lifetime will be explicitly
   * truncated to match it.
   *
   * @generated from field: google.protobuf.Duration maximum_lifetime = 2;
   */
  maximumLifetime?: Duration;

  /**
   * Optional. If specified, then only methods allowed in the
   * [IssuanceModes][google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes]
   * may be used to issue
   * [Certificates][google.cloud.security.privateca.v1.Certificate].
   *
   * @generated from field: google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes allowed_issuance_modes = 3;
   */
  allowedIssuanceModes?: CaPool_IssuancePolicy_IssuanceModes;

  /**
   * Optional. A set of X.509 values that will be applied to all certificates
   * issued through this [CaPool][google.cloud.security.privateca.v1.CaPool].
   * If a certificate request includes conflicting values for the same
   * properties, they will be overwritten by the values defined here. If a
   * certificate request uses a
   * [CertificateTemplate][google.cloud.security.privateca.v1.CertificateTemplate]
   * that defines conflicting
   * [predefined_values][google.cloud.security.privateca.v1.CertificateTemplate.predefined_values]
   * for the same properties, the certificate issuance request will fail.
   *
   * @generated from field: google.cloud.security.privateca.v1.X509Parameters baseline_values = 4;
   */
  baselineValues?: X509Parameters;

  /**
   * Optional. Describes constraints on identities that may appear in
   * [Certificates][google.cloud.security.privateca.v1.Certificate] issued
   * through this [CaPool][google.cloud.security.privateca.v1.CaPool]. If this
   * is omitted, then this [CaPool][google.cloud.security.privateca.v1.CaPool]
   * will not add restrictions on a certificate's identity.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateIdentityConstraints identity_constraints = 5;
   */
  identityConstraints?: CertificateIdentityConstraints;

  /**
   * Optional. Describes the set of X.509 extensions that may appear in a
   * [Certificate][google.cloud.security.privateca.v1.Certificate] issued
   * through this [CaPool][google.cloud.security.privateca.v1.CaPool]. If a
   * certificate request sets extensions that don't appear in the
   * [passthrough_extensions][google.cloud.security.privateca.v1.CaPool.IssuancePolicy.passthrough_extensions],
   * those extensions will be dropped. If a certificate request uses a
   * [CertificateTemplate][google.cloud.security.privateca.v1.CertificateTemplate]
   * with
   * [predefined_values][google.cloud.security.privateca.v1.CertificateTemplate.predefined_values]
   * that don't appear here, the certificate issuance request will fail. If
   * this is omitted, then this
   * [CaPool][google.cloud.security.privateca.v1.CaPool] will not add
   * restrictions on a certificate's X.509 extensions. These constraints do
   * not apply to X.509 extensions set in this
   * [CaPool][google.cloud.security.privateca.v1.CaPool]'s
   * [baseline_values][google.cloud.security.privateca.v1.CaPool.IssuancePolicy.baseline_values].
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateExtensionConstraints passthrough_extensions = 6;
   */
  passthroughExtensions?: CertificateExtensionConstraints;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CaPool.IssuancePolicy.
 * Use `create(CaPool_IssuancePolicySchema)` to create a new message.
 */
export const CaPool_IssuancePolicySchema: GenMessage<CaPool_IssuancePolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 1, 1);

/**
 * Describes a "type" of key that may be used in a
 * [Certificate][google.cloud.security.privateca.v1.Certificate] issued from
 * a [CaPool][google.cloud.security.privateca.v1.CaPool]. Note that a single
 * [AllowedKeyType][google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType]
 * may refer to either a fully-qualified key algorithm, such as RSA 4096, or
 * a family of key algorithms, such as any RSA key.
 *
 * @generated from message google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
 */
export type CaPool_IssuancePolicy_AllowedKeyType = Message<"google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType"> & {
  /**
   * @generated from oneof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.key_type
   */
  keyType: {
    /**
     * Represents an allowed RSA key type.
     *
     * @generated from field: google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType rsa = 1;
     */
    value: CaPool_IssuancePolicy_AllowedKeyType_RsaKeyType;
    case: "rsa";
  } | {
    /**
     * Represents an allowed Elliptic Curve key type.
     *
     * @generated from field: google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType elliptic_curve = 2;
     */
    value: CaPool_IssuancePolicy_AllowedKeyType_EcKeyType;
    case: "ellipticCurve";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.
 * Use `create(CaPool_IssuancePolicy_AllowedKeyTypeSchema)` to create a new message.
 */
export const CaPool_IssuancePolicy_AllowedKeyTypeSchema: GenMessage<CaPool_IssuancePolicy_AllowedKeyType> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 1, 1, 0);

/**
 * Describes an RSA key that may be used in a
 * [Certificate][google.cloud.security.privateca.v1.Certificate] issued
 * from a [CaPool][google.cloud.security.privateca.v1.CaPool].
 *
 * @generated from message google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
 */
export type CaPool_IssuancePolicy_AllowedKeyType_RsaKeyType = Message<"google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType"> & {
  /**
   * Optional. The minimum allowed RSA modulus size (inclusive), in bits.
   * If this is not set, or if set to zero, the service-level min RSA
   * modulus size will continue to apply.
   *
   * @generated from field: int64 min_modulus_size = 1;
   */
  minModulusSize: bigint;

  /**
   * Optional. The maximum allowed RSA modulus size (inclusive), in bits.
   * If this is not set, or if set to zero, the service will not enforce
   * an explicit upper bound on RSA modulus sizes.
   *
   * @generated from field: int64 max_modulus_size = 2;
   */
  maxModulusSize: bigint;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType.
 * Use `create(CaPool_IssuancePolicy_AllowedKeyType_RsaKeyTypeSchema)` to create a new message.
 */
export const CaPool_IssuancePolicy_AllowedKeyType_RsaKeyTypeSchema: GenMessage<CaPool_IssuancePolicy_AllowedKeyType_RsaKeyType> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 1, 1, 0, 0);

/**
 * Describes an Elliptic Curve key that may be used in a
 * [Certificate][google.cloud.security.privateca.v1.Certificate] issued
 * from a [CaPool][google.cloud.security.privateca.v1.CaPool].
 *
 * @generated from message google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
 */
export type CaPool_IssuancePolicy_AllowedKeyType_EcKeyType = Message<"google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType"> & {
  /**
   * Optional. A signature algorithm that must be used. If this is
   * omitted, any EC-based signature algorithm will be allowed.
   *
   * @generated from field: google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.EcSignatureAlgorithm signature_algorithm = 1;
   */
  signatureAlgorithm: CaPool_IssuancePolicy_AllowedKeyType_EcKeyType_EcSignatureAlgorithm;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.
 * Use `create(CaPool_IssuancePolicy_AllowedKeyType_EcKeyTypeSchema)` to create a new message.
 */
export const CaPool_IssuancePolicy_AllowedKeyType_EcKeyTypeSchema: GenMessage<CaPool_IssuancePolicy_AllowedKeyType_EcKeyType> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 1, 1, 0, 1);

/**
 * Describes an elliptic curve-based signature algorithm that may be
 * used in a
 * [Certificate][google.cloud.security.privateca.v1.Certificate] issued
 * from a [CaPool][google.cloud.security.privateca.v1.CaPool].
 *
 * @generated from enum google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.EcSignatureAlgorithm
 */
export enum CaPool_IssuancePolicy_AllowedKeyType_EcKeyType_EcSignatureAlgorithm {
  /**
   * Not specified. Signifies that any signature algorithm may be used.
   *
   * @generated from enum value: EC_SIGNATURE_ALGORITHM_UNSPECIFIED = 0;
   */
  EC_SIGNATURE_ALGORITHM_UNSPECIFIED = 0,

  /**
   * Refers to the Elliptic Curve Digital Signature Algorithm over the
   * NIST P-256 curve.
   *
   * @generated from enum value: ECDSA_P256 = 1;
   */
  ECDSA_P256 = 1,

  /**
   * Refers to the Elliptic Curve Digital Signature Algorithm over the
   * NIST P-384 curve.
   *
   * @generated from enum value: ECDSA_P384 = 2;
   */
  ECDSA_P384 = 2,

  /**
   * Refers to the Edwards-curve Digital Signature Algorithm over curve
   * 25519, as described in RFC 8410.
   *
   * @generated from enum value: EDDSA_25519 = 3;
   */
  EDDSA_25519 = 3,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.EcSignatureAlgorithm.
 */
export const CaPool_IssuancePolicy_AllowedKeyType_EcKeyType_EcSignatureAlgorithmSchema: GenEnum<CaPool_IssuancePolicy_AllowedKeyType_EcKeyType_EcSignatureAlgorithm> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 1, 1, 0, 1, 0);

/**
 * [IssuanceModes][google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes]
 * specifies the allowed ways in which
 * [Certificates][google.cloud.security.privateca.v1.Certificate] may be
 * requested from this [CaPool][google.cloud.security.privateca.v1.CaPool].
 *
 * @generated from message google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
 */
export type CaPool_IssuancePolicy_IssuanceModes = Message<"google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes"> & {
  /**
   * Optional. When true, allows callers to create
   * [Certificates][google.cloud.security.privateca.v1.Certificate] by
   * specifying a CSR.
   *
   * @generated from field: bool allow_csr_based_issuance = 1;
   */
  allowCsrBasedIssuance: boolean;

  /**
   * Optional. When true, allows callers to create
   * [Certificates][google.cloud.security.privateca.v1.Certificate] by
   * specifying a
   * [CertificateConfig][google.cloud.security.privateca.v1.CertificateConfig].
   *
   * @generated from field: bool allow_config_based_issuance = 2;
   */
  allowConfigBasedIssuance: boolean;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes.
 * Use `create(CaPool_IssuancePolicy_IssuanceModesSchema)` to create a new message.
 */
export const CaPool_IssuancePolicy_IssuanceModesSchema: GenMessage<CaPool_IssuancePolicy_IssuanceModes> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 1, 1, 1);

/**
 * The tier of a [CaPool][google.cloud.security.privateca.v1.CaPool],
 * indicating its supported functionality and/or billing SKU.
 *
 * @generated from enum google.cloud.security.privateca.v1.CaPool.Tier
 */
export enum CaPool_Tier {
  /**
   * Not specified.
   *
   * @generated from enum value: TIER_UNSPECIFIED = 0;
   */
  TIER_UNSPECIFIED = 0,

  /**
   * Enterprise tier.
   *
   * @generated from enum value: ENTERPRISE = 1;
   */
  ENTERPRISE = 1,

  /**
   * DevOps tier.
   *
   * @generated from enum value: DEVOPS = 2;
   */
  DEVOPS = 2,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.CaPool.Tier.
 */
export const CaPool_TierSchema: GenEnum<CaPool_Tier> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 1, 0);

/**
 * A
 * [CertificateRevocationList][google.cloud.security.privateca.v1.CertificateRevocationList]
 * corresponds to a signed X.509 certificate Revocation List (CRL). A CRL
 * contains the serial numbers of certificates that should no longer be trusted.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateRevocationList
 */
export type CertificateRevocationList = Message<"google.cloud.security.privateca.v1.CertificateRevocationList"> & {
  /**
   * Output only. The resource name for this
   * [CertificateRevocationList][google.cloud.security.privateca.v1.CertificateRevocationList]
   * in the format `projects/*\/locations/*\/caPools/*certificateAuthorities/*\/
   *    certificateRevocationLists/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The CRL sequence number that appears in pem_crl.
   *
   * @generated from field: int64 sequence_number = 2;
   */
  sequenceNumber: bigint;

  /**
   * Output only. The revoked serial numbers that appear in pem_crl.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate revoked_certificates = 3;
   */
  revokedCertificates: CertificateRevocationList_RevokedCertificate[];

  /**
   * Output only. The PEM-encoded X.509 CRL.
   *
   * @generated from field: string pem_crl = 4;
   */
  pemCrl: string;

  /**
   * Output only. The location where 'pem_crl' can be accessed.
   *
   * @generated from field: string access_url = 5;
   */
  accessUrl: string;

  /**
   * Output only. The
   * [State][google.cloud.security.privateca.v1.CertificateRevocationList.State]
   * for this
   * [CertificateRevocationList][google.cloud.security.privateca.v1.CertificateRevocationList].
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateRevocationList.State state = 6;
   */
  state: CertificateRevocationList_State;

  /**
   * Output only. The time at which this
   * [CertificateRevocationList][google.cloud.security.privateca.v1.CertificateRevocationList]
   * was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 7;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which this
   * [CertificateRevocationList][google.cloud.security.privateca.v1.CertificateRevocationList]
   * was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 8;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The revision ID of this
   * [CertificateRevocationList][google.cloud.security.privateca.v1.CertificateRevocationList].
   * A new revision is committed whenever a new CRL is published. The format is
   * an 8-character hexadecimal string.
   *
   * @generated from field: string revision_id = 9;
   */
  revisionId: string;

  /**
   * Optional. Labels with user-defined metadata.
   *
   * @generated from field: map<string, string> labels = 10;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateRevocationList.
 * Use `create(CertificateRevocationListSchema)` to create a new message.
 */
export const CertificateRevocationListSchema: GenMessage<CertificateRevocationList> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 2);

/**
 * Describes a revoked
 * [Certificate][google.cloud.security.privateca.v1.Certificate].
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
 */
export type CertificateRevocationList_RevokedCertificate = Message<"google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate"> & {
  /**
   * The resource name for the
   * [Certificate][google.cloud.security.privateca.v1.Certificate] in the
   * format `projects/*\/locations/*\/caPools/*\/certificates/*`.
   *
   * @generated from field: string certificate = 1;
   */
  certificate: string;

  /**
   * The serial number of the
   * [Certificate][google.cloud.security.privateca.v1.Certificate].
   *
   * @generated from field: string hex_serial_number = 2;
   */
  hexSerialNumber: string;

  /**
   * The reason the
   * [Certificate][google.cloud.security.privateca.v1.Certificate] was
   * revoked.
   *
   * @generated from field: google.cloud.security.privateca.v1.RevocationReason revocation_reason = 3;
   */
  revocationReason: RevocationReason;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate.
 * Use `create(CertificateRevocationList_RevokedCertificateSchema)` to create a new message.
 */
export const CertificateRevocationList_RevokedCertificateSchema: GenMessage<CertificateRevocationList_RevokedCertificate> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 2, 0);

/**
 * The state of a
 * [CertificateRevocationList][google.cloud.security.privateca.v1.CertificateRevocationList],
 * indicating if it is current.
 *
 * @generated from enum google.cloud.security.privateca.v1.CertificateRevocationList.State
 */
export enum CertificateRevocationList_State {
  /**
   * Not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The
   * [CertificateRevocationList][google.cloud.security.privateca.v1.CertificateRevocationList]
   * is up to date.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * The
   * [CertificateRevocationList][google.cloud.security.privateca.v1.CertificateRevocationList]
   * is no longer current.
   *
   * @generated from enum value: SUPERSEDED = 2;
   */
  SUPERSEDED = 2,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.CertificateRevocationList.State.
 */
export const CertificateRevocationList_StateSchema: GenEnum<CertificateRevocationList_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 2, 0);

/**
 * A [Certificate][google.cloud.security.privateca.v1.Certificate] corresponds
 * to a signed X.509 certificate issued by a
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority].
 *
 * @generated from message google.cloud.security.privateca.v1.Certificate
 */
export type Certificate = Message<"google.cloud.security.privateca.v1.Certificate"> & {
  /**
   * Output only. The resource name for this
   * [Certificate][google.cloud.security.privateca.v1.Certificate] in the format
   * `projects/*\/locations/*\/caPools/*\/certificates/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The config used to create a signed X.509 certificate.
   *
   * @generated from oneof google.cloud.security.privateca.v1.Certificate.certificate_config
   */
  certificateConfig: {
    /**
     * Immutable. A pem-encoded X.509 certificate signing request (CSR).
     *
     * @generated from field: string pem_csr = 2;
     */
    value: string;
    case: "pemCsr";
  } | {
    /**
     * Immutable. A description of the certificate and key that does not require
     * X.509 or ASN.1.
     *
     * @generated from field: google.cloud.security.privateca.v1.CertificateConfig config = 3;
     */
    value: CertificateConfig;
    case: "config";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The resource name of the issuing
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * in the format `projects/*\/locations/*\/caPools/*\/certificateAuthorities/*`.
   *
   * @generated from field: string issuer_certificate_authority = 4;
   */
  issuerCertificateAuthority: string;

  /**
   * Required. Immutable. The desired lifetime of a certificate. Used to create
   * the "not_before_time" and "not_after_time" fields inside an X.509
   * certificate. Note that the lifetime may be truncated if it would extend
   * past the life of any certificate authority in the issuing chain.
   *
   * @generated from field: google.protobuf.Duration lifetime = 5;
   */
  lifetime?: Duration;

  /**
   * Immutable. The resource name for a
   * [CertificateTemplate][google.cloud.security.privateca.v1.CertificateTemplate]
   * used to issue this certificate, in the format
   * `projects/*\/locations/*\/certificateTemplates/*`.
   * If this is specified, the caller must have the necessary permission to
   * use this template. If this is omitted, no template will be used.
   * This template must be in the same location as the
   * [Certificate][google.cloud.security.privateca.v1.Certificate].
   *
   * @generated from field: string certificate_template = 6;
   */
  certificateTemplate: string;

  /**
   * Immutable. Specifies how the
   * [Certificate][google.cloud.security.privateca.v1.Certificate]'s identity
   * fields are to be decided. If this is omitted, the `DEFAULT` subject mode
   * will be used.
   *
   * @generated from field: google.cloud.security.privateca.v1.SubjectRequestMode subject_mode = 7;
   */
  subjectMode: SubjectRequestMode;

  /**
   * Output only. Details regarding the revocation of this
   * [Certificate][google.cloud.security.privateca.v1.Certificate]. This
   * [Certificate][google.cloud.security.privateca.v1.Certificate] is considered
   * revoked if and only if this field is present.
   *
   * @generated from field: google.cloud.security.privateca.v1.Certificate.RevocationDetails revocation_details = 8;
   */
  revocationDetails?: Certificate_RevocationDetails;

  /**
   * Output only. The pem-encoded, signed X.509 certificate.
   *
   * @generated from field: string pem_certificate = 9;
   */
  pemCertificate: string;

  /**
   * Output only. A structured description of the issued X.509 certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateDescription certificate_description = 10;
   */
  certificateDescription?: CertificateDescription;

  /**
   * Output only. The chain that may be used to verify the X.509 certificate.
   * Expected to be in issuer-to-root order according to RFC 5246.
   *
   * @generated from field: repeated string pem_certificate_chain = 11;
   */
  pemCertificateChain: string[];

  /**
   * Output only. The time at which this
   * [Certificate][google.cloud.security.privateca.v1.Certificate] was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 12;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which this
   * [Certificate][google.cloud.security.privateca.v1.Certificate] was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 13;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels with user-defined metadata.
   *
   * @generated from field: map<string, string> labels = 14;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.security.privateca.v1.Certificate.
 * Use `create(CertificateSchema)` to create a new message.
 */
export const CertificateSchema: GenMessage<Certificate> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 3);

/**
 * Describes fields that are relavent to the revocation of a
 * [Certificate][google.cloud.security.privateca.v1.Certificate].
 *
 * @generated from message google.cloud.security.privateca.v1.Certificate.RevocationDetails
 */
export type Certificate_RevocationDetails = Message<"google.cloud.security.privateca.v1.Certificate.RevocationDetails"> & {
  /**
   * Indicates why a
   * [Certificate][google.cloud.security.privateca.v1.Certificate] was
   * revoked.
   *
   * @generated from field: google.cloud.security.privateca.v1.RevocationReason revocation_state = 1;
   */
  revocationState: RevocationReason;

  /**
   * The time at which this
   * [Certificate][google.cloud.security.privateca.v1.Certificate] was
   * revoked.
   *
   * @generated from field: google.protobuf.Timestamp revocation_time = 2;
   */
  revocationTime?: Timestamp;
};

/**
 * Describes the message google.cloud.security.privateca.v1.Certificate.RevocationDetails.
 * Use `create(Certificate_RevocationDetailsSchema)` to create a new message.
 */
export const Certificate_RevocationDetailsSchema: GenMessage<Certificate_RevocationDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 3, 0);

/**
 * A
 * [CertificateTemplate][google.cloud.security.privateca.v1.CertificateTemplate]
 * refers to a managed template for certificate issuance.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateTemplate
 */
export type CertificateTemplate = Message<"google.cloud.security.privateca.v1.CertificateTemplate"> & {
  /**
   * Output only. The resource name for this
   * [CertificateTemplate][google.cloud.security.privateca.v1.CertificateTemplate]
   * in the format `projects/*\/locations/*\/certificateTemplates/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The maximum lifetime allowed for issued
   * [Certificates][google.cloud.security.privateca.v1.Certificate] that use
   * this template. If the issuing
   * [CaPool][google.cloud.security.privateca.v1.CaPool] resource's
   * [IssuancePolicy][google.cloud.security.privateca.v1.CaPool.IssuancePolicy]
   * specifies a
   * [maximum_lifetime][google.cloud.security.privateca.v1.CaPool.IssuancePolicy.maximum_lifetime]
   * the minimum of the two durations will be the maximum lifetime for issued
   * [Certificates][google.cloud.security.privateca.v1.Certificate]. Note that
   * if the issuing
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * expires before a
   * [Certificate][google.cloud.security.privateca.v1.Certificate]'s requested
   * maximum_lifetime, the effective lifetime will be explicitly truncated
   *  to match it.
   *
   * @generated from field: google.protobuf.Duration maximum_lifetime = 9;
   */
  maximumLifetime?: Duration;

  /**
   * Optional. A set of X.509 values that will be applied to all issued
   * certificates that use this template. If the certificate request includes
   * conflicting values for the same properties, they will be overwritten by the
   * values defined here. If the issuing
   * [CaPool][google.cloud.security.privateca.v1.CaPool]'s
   * [IssuancePolicy][google.cloud.security.privateca.v1.CaPool.IssuancePolicy]
   * defines conflicting
   * [baseline_values][google.cloud.security.privateca.v1.CaPool.IssuancePolicy.baseline_values]
   * for the same properties, the certificate issuance request will fail.
   *
   * @generated from field: google.cloud.security.privateca.v1.X509Parameters predefined_values = 2;
   */
  predefinedValues?: X509Parameters;

  /**
   * Optional. Describes constraints on identities that may be appear in
   * [Certificates][google.cloud.security.privateca.v1.Certificate] issued using
   * this template. If this is omitted, then this template will not add
   * restrictions on a certificate's identity.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateIdentityConstraints identity_constraints = 3;
   */
  identityConstraints?: CertificateIdentityConstraints;

  /**
   * Optional. Describes the set of X.509 extensions that may appear in a
   * [Certificate][google.cloud.security.privateca.v1.Certificate] issued using
   * this
   * [CertificateTemplate][google.cloud.security.privateca.v1.CertificateTemplate].
   * If a certificate request sets extensions that don't appear in the
   * [passthrough_extensions][google.cloud.security.privateca.v1.CertificateTemplate.passthrough_extensions],
   * those extensions will be dropped. If the issuing
   * [CaPool][google.cloud.security.privateca.v1.CaPool]'s
   * [IssuancePolicy][google.cloud.security.privateca.v1.CaPool.IssuancePolicy]
   * defines
   * [baseline_values][google.cloud.security.privateca.v1.CaPool.IssuancePolicy.baseline_values]
   * that don't appear here, the certificate issuance request will fail. If this
   * is omitted, then this template will not add restrictions on a certificate's
   * X.509 extensions. These constraints do not apply to X.509 extensions set in
   * this
   * [CertificateTemplate][google.cloud.security.privateca.v1.CertificateTemplate]'s
   * [predefined_values][google.cloud.security.privateca.v1.CertificateTemplate.predefined_values].
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateExtensionConstraints passthrough_extensions = 4;
   */
  passthroughExtensions?: CertificateExtensionConstraints;

  /**
   * Optional. A human-readable description of scenarios this template is
   * intended for.
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Output only. The time at which this
   * [CertificateTemplate][google.cloud.security.privateca.v1.CertificateTemplate]
   * was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which this
   * [CertificateTemplate][google.cloud.security.privateca.v1.CertificateTemplate]
   * was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 7;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels with user-defined metadata.
   *
   * @generated from field: map<string, string> labels = 8;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateTemplate.
 * Use `create(CertificateTemplateSchema)` to create a new message.
 */
export const CertificateTemplateSchema: GenMessage<CertificateTemplate> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 4);

/**
 * An [X509Parameters][google.cloud.security.privateca.v1.X509Parameters] is
 * used to describe certain fields of an X.509 certificate, such as the key
 * usage fields, fields specific to CA certificates, certificate policy
 * extensions and custom extensions.
 *
 * @generated from message google.cloud.security.privateca.v1.X509Parameters
 */
export type X509Parameters = Message<"google.cloud.security.privateca.v1.X509Parameters"> & {
  /**
   * Optional. Indicates the intended use for keys that correspond to a
   * certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1.KeyUsage key_usage = 1;
   */
  keyUsage?: KeyUsage;

  /**
   * Optional. Describes options in this
   * [X509Parameters][google.cloud.security.privateca.v1.X509Parameters] that
   * are relevant in a CA certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1.X509Parameters.CaOptions ca_options = 2;
   */
  caOptions?: X509Parameters_CaOptions;

  /**
   * Optional. Describes the X.509 certificate policy object identifiers, per
   * https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1.ObjectId policy_ids = 3;
   */
  policyIds: ObjectId[];

  /**
   * Optional. Describes Online Certificate Status Protocol (OCSP) endpoint
   * addresses that appear in the "Authority Information Access" extension in
   * the certificate.
   *
   * @generated from field: repeated string aia_ocsp_servers = 4;
   */
  aiaOcspServers: string[];

  /**
   * Optional. Describes the X.509 name constraints extension.
   *
   * @generated from field: google.cloud.security.privateca.v1.X509Parameters.NameConstraints name_constraints = 6;
   */
  nameConstraints?: X509Parameters_NameConstraints;

  /**
   * Optional. Describes custom X.509 extensions.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1.X509Extension additional_extensions = 5;
   */
  additionalExtensions: X509Extension[];
};

/**
 * Describes the message google.cloud.security.privateca.v1.X509Parameters.
 * Use `create(X509ParametersSchema)` to create a new message.
 */
export const X509ParametersSchema: GenMessage<X509Parameters> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 5);

/**
 * Describes values that are relevant in a CA certificate.
 *
 * @generated from message google.cloud.security.privateca.v1.X509Parameters.CaOptions
 */
export type X509Parameters_CaOptions = Message<"google.cloud.security.privateca.v1.X509Parameters.CaOptions"> & {
  /**
   * Optional. Refers to the "CA" X.509 extension, which is a boolean value.
   * When this value is missing, the extension will be omitted from the CA
   * certificate.
   *
   * @generated from field: optional bool is_ca = 1;
   */
  isCa?: boolean;

  /**
   * Optional. Refers to the path length restriction X.509 extension. For a CA
   * certificate, this value describes the depth of subordinate CA
   * certificates that are allowed.
   * If this value is less than 0, the request will fail.
   * If this value is missing, the max path length will be omitted from the
   * CA certificate.
   *
   * @generated from field: optional int32 max_issuer_path_length = 2;
   */
  maxIssuerPathLength?: number;
};

/**
 * Describes the message google.cloud.security.privateca.v1.X509Parameters.CaOptions.
 * Use `create(X509Parameters_CaOptionsSchema)` to create a new message.
 */
export const X509Parameters_CaOptionsSchema: GenMessage<X509Parameters_CaOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 5, 0);

/**
 * Describes the X.509 name constraints extension, per
 * https://tools.ietf.org/html/rfc5280#section-4.2.1.10
 *
 * @generated from message google.cloud.security.privateca.v1.X509Parameters.NameConstraints
 */
export type X509Parameters_NameConstraints = Message<"google.cloud.security.privateca.v1.X509Parameters.NameConstraints"> & {
  /**
   * Indicates whether or not the name constraints are marked critical.
   *
   * @generated from field: bool critical = 1;
   */
  critical: boolean;

  /**
   * Contains permitted DNS names. Any DNS name that can be
   * constructed by simply adding zero or more labels to
   * the left-hand side of the name satisfies the name constraint.
   * For example, `example.com`, `www.example.com`, `www.sub.example.com`
   * would satisfy `example.com` while `example1.com` does not.
   *
   * @generated from field: repeated string permitted_dns_names = 2;
   */
  permittedDnsNames: string[];

  /**
   * Contains excluded DNS names. Any DNS name that can be
   * constructed by simply adding zero or more labels to
   * the left-hand side of the name satisfies the name constraint.
   * For example, `example.com`, `www.example.com`, `www.sub.example.com`
   * would satisfy `example.com` while `example1.com` does not.
   *
   * @generated from field: repeated string excluded_dns_names = 3;
   */
  excludedDnsNames: string[];

  /**
   * Contains the permitted IP ranges. For IPv4 addresses, the ranges
   * are expressed using CIDR notation as specified in RFC 4632.
   * For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
   * addresses.
   *
   * @generated from field: repeated string permitted_ip_ranges = 4;
   */
  permittedIpRanges: string[];

  /**
   * Contains the excluded IP ranges. For IPv4 addresses, the ranges
   * are expressed using CIDR notation as specified in RFC 4632.
   * For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
   * addresses.
   *
   * @generated from field: repeated string excluded_ip_ranges = 5;
   */
  excludedIpRanges: string[];

  /**
   * Contains the permitted email addresses. The value can be a particular
   * email address, a hostname to indicate all email addresses on that host or
   * a domain with a leading period (e.g. `.example.com`) to indicate
   * all email addresses in that domain.
   *
   * @generated from field: repeated string permitted_email_addresses = 6;
   */
  permittedEmailAddresses: string[];

  /**
   * Contains the excluded email addresses. The value can be a particular
   * email address, a hostname to indicate all email addresses on that host or
   * a domain with a leading period (e.g. `.example.com`) to indicate
   * all email addresses in that domain.
   *
   * @generated from field: repeated string excluded_email_addresses = 7;
   */
  excludedEmailAddresses: string[];

  /**
   * Contains the permitted URIs that apply to the host part of the name.
   * The value can be a hostname or a domain with a
   * leading period (like `.example.com`)
   *
   * @generated from field: repeated string permitted_uris = 8;
   */
  permittedUris: string[];

  /**
   * Contains the excluded URIs that apply to the host part of the name.
   * The value can be a hostname or a domain with a
   * leading period (like `.example.com`)
   *
   * @generated from field: repeated string excluded_uris = 9;
   */
  excludedUris: string[];
};

/**
 * Describes the message google.cloud.security.privateca.v1.X509Parameters.NameConstraints.
 * Use `create(X509Parameters_NameConstraintsSchema)` to create a new message.
 */
export const X509Parameters_NameConstraintsSchema: GenMessage<X509Parameters_NameConstraints> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 5, 1);

/**
 * Describes a subordinate CA's issuers. This is either a resource name to a
 * known issuing
 * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority],
 * or a PEM issuer certificate chain.
 *
 * @generated from message google.cloud.security.privateca.v1.SubordinateConfig
 */
export type SubordinateConfig = Message<"google.cloud.security.privateca.v1.SubordinateConfig"> & {
  /**
   * @generated from oneof google.cloud.security.privateca.v1.SubordinateConfig.subordinate_config
   */
  subordinateConfig: {
    /**
     * Required. This can refer to a
     * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
     * that was used to create a subordinate
     * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority].
     * This field is used for information and usability purposes only. The
     * resource name is in the format
     * `projects/*\/locations/*\/caPools/*\/certificateAuthorities/*`.
     *
     * @generated from field: string certificate_authority = 1;
     */
    value: string;
    case: "certificateAuthority";
  } | {
    /**
     * Required. Contains the PEM certificate chain for the issuers of this
     * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority],
     * but not pem certificate for this CA itself.
     *
     * @generated from field: google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain pem_issuer_chain = 2;
     */
    value: SubordinateConfig_SubordinateConfigChain;
    case: "pemIssuerChain";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.security.privateca.v1.SubordinateConfig.
 * Use `create(SubordinateConfigSchema)` to create a new message.
 */
export const SubordinateConfigSchema: GenMessage<SubordinateConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 6);

/**
 * This message describes a subordinate CA's issuer certificate chain. This
 * wrapper exists for compatibility reasons.
 *
 * @generated from message google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
 */
export type SubordinateConfig_SubordinateConfigChain = Message<"google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain"> & {
  /**
   * Required. Expected to be in leaf-to-root order according to RFC 5246.
   *
   * @generated from field: repeated string pem_certificates = 1;
   */
  pemCertificates: string[];
};

/**
 * Describes the message google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain.
 * Use `create(SubordinateConfig_SubordinateConfigChainSchema)` to create a new message.
 */
export const SubordinateConfig_SubordinateConfigChainSchema: GenMessage<SubordinateConfig_SubordinateConfigChain> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 6, 0);

/**
 * A [PublicKey][google.cloud.security.privateca.v1.PublicKey] describes a
 * public key.
 *
 * @generated from message google.cloud.security.privateca.v1.PublicKey
 */
export type PublicKey = Message<"google.cloud.security.privateca.v1.PublicKey"> & {
  /**
   * Required. A public key. The padding and encoding
   * must match with the `KeyFormat` value specified for the `format` field.
   *
   * @generated from field: bytes key = 1;
   */
  key: Uint8Array;

  /**
   * Required. The format of the public key.
   *
   * @generated from field: google.cloud.security.privateca.v1.PublicKey.KeyFormat format = 2;
   */
  format: PublicKey_KeyFormat;
};

/**
 * Describes the message google.cloud.security.privateca.v1.PublicKey.
 * Use `create(PublicKeySchema)` to create a new message.
 */
export const PublicKeySchema: GenMessage<PublicKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 7);

/**
 * Types of public keys formats that are supported. Currently, only `PEM`
 * format is supported.
 *
 * @generated from enum google.cloud.security.privateca.v1.PublicKey.KeyFormat
 */
export enum PublicKey_KeyFormat {
  /**
   * Default unspecified value.
   *
   * @generated from enum value: KEY_FORMAT_UNSPECIFIED = 0;
   */
  KEY_FORMAT_UNSPECIFIED = 0,

  /**
   * The key is PEM-encoded as defined in [RFC
   * 7468](https://tools.ietf.org/html/rfc7468). It can be any of the
   * following: a PEM-encoded PKCS#1/RFC 3447 RSAPublicKey
   * structure, an RFC 5280
   * [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1)
   * or a PEM-encoded X.509 certificate signing request (CSR). If a
   * [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1)
   * is specified, it can contain a A PEM-encoded PKCS#1/RFC 3447 RSAPublicKey
   * or a NIST P-256/secp256r1/prime256v1 or P-384 key. If a CSR is specified,
   * it will used solely for the purpose of extracting the public key. When
   * generated by the service, it will always be an RFC 5280
   * [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1)
   * structure containing an algorithm identifier and a key.
   *
   * @generated from enum value: PEM = 1;
   */
  PEM = 1,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.PublicKey.KeyFormat.
 */
export const PublicKey_KeyFormatSchema: GenEnum<PublicKey_KeyFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 7, 0);

/**
 * A [CertificateConfig][google.cloud.security.privateca.v1.CertificateConfig]
 * describes an X.509 certificate or CSR that is to be created, as an
 * alternative to using ASN.1.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateConfig
 */
export type CertificateConfig = Message<"google.cloud.security.privateca.v1.CertificateConfig"> & {
  /**
   * Required. Specifies some of the values in a certificate that are related to
   * the subject.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig subject_config = 1;
   */
  subjectConfig?: CertificateConfig_SubjectConfig;

  /**
   * Required. Describes how some of the technical X.509 fields in a certificate
   * should be populated.
   *
   * @generated from field: google.cloud.security.privateca.v1.X509Parameters x509_config = 2;
   */
  x509Config?: X509Parameters;

  /**
   * Optional. The public key that corresponds to this config. This is, for
   * example, used when issuing
   * [Certificates][google.cloud.security.privateca.v1.Certificate], but not
   * when creating a self-signed
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * or
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * CSR.
   *
   * @generated from field: google.cloud.security.privateca.v1.PublicKey public_key = 3;
   */
  publicKey?: PublicKey;

  /**
   * Optional. When specified this provides a custom SKI to be used in the
   * certificate. This should only be used to maintain a SKI of an existing CA
   * originally created outside CA service, which was not generated using method
   * (1) described in RFC 5280 section 4.2.1.2.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateConfig.KeyId subject_key_id = 4;
   */
  subjectKeyId?: CertificateConfig_KeyId;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateConfig.
 * Use `create(CertificateConfigSchema)` to create a new message.
 */
export const CertificateConfigSchema: GenMessage<CertificateConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 8);

/**
 * These values are used to create the distinguished name and subject
 * alternative name fields in an X.509 certificate.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
 */
export type CertificateConfig_SubjectConfig = Message<"google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig"> & {
  /**
   * Optional. Contains distinguished name fields such as the common name,
   * location and organization.
   *
   * @generated from field: google.cloud.security.privateca.v1.Subject subject = 1;
   */
  subject?: Subject;

  /**
   * Optional. The subject alternative name fields.
   *
   * @generated from field: google.cloud.security.privateca.v1.SubjectAltNames subject_alt_name = 2;
   */
  subjectAltName?: SubjectAltNames;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig.
 * Use `create(CertificateConfig_SubjectConfigSchema)` to create a new message.
 */
export const CertificateConfig_SubjectConfigSchema: GenMessage<CertificateConfig_SubjectConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 8, 0);

/**
 * A KeyId identifies a specific public key, usually by hashing the public
 * key.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateConfig.KeyId
 */
export type CertificateConfig_KeyId = Message<"google.cloud.security.privateca.v1.CertificateConfig.KeyId"> & {
  /**
   * Required. The value of this KeyId encoded in lowercase hexadecimal. This
   * is most likely the 160 bit SHA-1 hash of the public key.
   *
   * @generated from field: string key_id = 1;
   */
  keyId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateConfig.KeyId.
 * Use `create(CertificateConfig_KeyIdSchema)` to create a new message.
 */
export const CertificateConfig_KeyIdSchema: GenMessage<CertificateConfig_KeyId> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 8, 1);

/**
 * A
 * [CertificateDescription][google.cloud.security.privateca.v1.CertificateDescription]
 * describes an X.509 certificate or CSR that has been issued, as an alternative
 * to using ASN.1 / X.509.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateDescription
 */
export type CertificateDescription = Message<"google.cloud.security.privateca.v1.CertificateDescription"> & {
  /**
   * Describes some of the values in a certificate that are related to the
   * subject and lifetime.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription subject_description = 1;
   */
  subjectDescription?: CertificateDescription_SubjectDescription;

  /**
   * Describes some of the technical X.509 fields in a certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1.X509Parameters x509_description = 2;
   */
  x509Description?: X509Parameters;

  /**
   * The public key that corresponds to an issued certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1.PublicKey public_key = 3;
   */
  publicKey?: PublicKey;

  /**
   * Provides a means of identifiying certificates that contain a particular
   * public key, per https://tools.ietf.org/html/rfc5280#section-4.2.1.2.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateDescription.KeyId subject_key_id = 4;
   */
  subjectKeyId?: CertificateDescription_KeyId;

  /**
   * Identifies the subject_key_id of the parent certificate, per
   * https://tools.ietf.org/html/rfc5280#section-4.2.1.1
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateDescription.KeyId authority_key_id = 5;
   */
  authorityKeyId?: CertificateDescription_KeyId;

  /**
   * Describes a list of locations to obtain CRL information, i.e.
   * the DistributionPoint.fullName described by
   * https://tools.ietf.org/html/rfc5280#section-4.2.1.13
   *
   * @generated from field: repeated string crl_distribution_points = 6;
   */
  crlDistributionPoints: string[];

  /**
   * Describes lists of issuer CA certificate URLs that appear in the
   * "Authority Information Access" extension in the certificate.
   *
   * @generated from field: repeated string aia_issuing_certificate_urls = 7;
   */
  aiaIssuingCertificateUrls: string[];

  /**
   * The hash of the x.509 certificate.
   *
   * @generated from field: google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint cert_fingerprint = 8;
   */
  certFingerprint?: CertificateDescription_CertificateFingerprint;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateDescription.
 * Use `create(CertificateDescriptionSchema)` to create a new message.
 */
export const CertificateDescriptionSchema: GenMessage<CertificateDescription> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 9);

/**
 * These values describe fields in an issued X.509 certificate such as the
 * distinguished name, subject alternative names, serial number, and lifetime.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
 */
export type CertificateDescription_SubjectDescription = Message<"google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription"> & {
  /**
   * Contains distinguished name fields such as the common name, location and
   * / organization.
   *
   * @generated from field: google.cloud.security.privateca.v1.Subject subject = 1;
   */
  subject?: Subject;

  /**
   * The subject alternative name fields.
   *
   * @generated from field: google.cloud.security.privateca.v1.SubjectAltNames subject_alt_name = 2;
   */
  subjectAltName?: SubjectAltNames;

  /**
   * The serial number encoded in lowercase hexadecimal.
   *
   * @generated from field: string hex_serial_number = 3;
   */
  hexSerialNumber: string;

  /**
   * For convenience, the actual lifetime of an issued certificate.
   *
   * @generated from field: google.protobuf.Duration lifetime = 4;
   */
  lifetime?: Duration;

  /**
   * The time at which the certificate becomes valid.
   *
   * @generated from field: google.protobuf.Timestamp not_before_time = 5;
   */
  notBeforeTime?: Timestamp;

  /**
   * The time after which the certificate is expired.
   * Per RFC 5280, the validity period for a certificate is the period of time
   * from not_before_time through not_after_time, inclusive.
   * Corresponds to 'not_before_time' + 'lifetime' - 1 second.
   *
   * @generated from field: google.protobuf.Timestamp not_after_time = 6;
   */
  notAfterTime?: Timestamp;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.
 * Use `create(CertificateDescription_SubjectDescriptionSchema)` to create a new message.
 */
export const CertificateDescription_SubjectDescriptionSchema: GenMessage<CertificateDescription_SubjectDescription> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 9, 0);

/**
 * A KeyId identifies a specific public key, usually by hashing the public
 * key.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateDescription.KeyId
 */
export type CertificateDescription_KeyId = Message<"google.cloud.security.privateca.v1.CertificateDescription.KeyId"> & {
  /**
   * Optional. The value of this KeyId encoded in lowercase hexadecimal. This
   * is most likely the 160 bit SHA-1 hash of the public key.
   *
   * @generated from field: string key_id = 1;
   */
  keyId: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateDescription.KeyId.
 * Use `create(CertificateDescription_KeyIdSchema)` to create a new message.
 */
export const CertificateDescription_KeyIdSchema: GenMessage<CertificateDescription_KeyId> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 9, 1);

/**
 * A group of fingerprints for the x509 certificate.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
 */
export type CertificateDescription_CertificateFingerprint = Message<"google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint"> & {
  /**
   * The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate.
   *
   * @generated from field: string sha256_hash = 1;
   */
  sha256Hash: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint.
 * Use `create(CertificateDescription_CertificateFingerprintSchema)` to create a new message.
 */
export const CertificateDescription_CertificateFingerprintSchema: GenMessage<CertificateDescription_CertificateFingerprint> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 9, 2);

/**
 * An [ObjectId][google.cloud.security.privateca.v1.ObjectId] specifies an
 * object identifier (OID). These provide context and describe types in ASN.1
 * messages.
 *
 * @generated from message google.cloud.security.privateca.v1.ObjectId
 */
export type ObjectId = Message<"google.cloud.security.privateca.v1.ObjectId"> & {
  /**
   * Required. The parts of an OID path. The most significant parts of the path
   * come first.
   *
   * @generated from field: repeated int32 object_id_path = 1;
   */
  objectIdPath: number[];
};

/**
 * Describes the message google.cloud.security.privateca.v1.ObjectId.
 * Use `create(ObjectIdSchema)` to create a new message.
 */
export const ObjectIdSchema: GenMessage<ObjectId> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 10);

/**
 * An [X509Extension][google.cloud.security.privateca.v1.X509Extension]
 * specifies an X.509 extension, which may be used in different parts of X.509
 * objects like certificates, CSRs, and CRLs.
 *
 * @generated from message google.cloud.security.privateca.v1.X509Extension
 */
export type X509Extension = Message<"google.cloud.security.privateca.v1.X509Extension"> & {
  /**
   * Required. The OID for this X.509 extension.
   *
   * @generated from field: google.cloud.security.privateca.v1.ObjectId object_id = 1;
   */
  objectId?: ObjectId;

  /**
   * Optional. Indicates whether or not this extension is critical (i.e., if the
   * client does not know how to handle this extension, the client should
   * consider this to be an error).
   *
   * @generated from field: bool critical = 2;
   */
  critical: boolean;

  /**
   * Required. The value of this X.509 extension.
   *
   * @generated from field: bytes value = 3;
   */
  value: Uint8Array;
};

/**
 * Describes the message google.cloud.security.privateca.v1.X509Extension.
 * Use `create(X509ExtensionSchema)` to create a new message.
 */
export const X509ExtensionSchema: GenMessage<X509Extension> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 11);

/**
 * A [KeyUsage][google.cloud.security.privateca.v1.KeyUsage] describes key usage
 * values that may appear in an X.509 certificate.
 *
 * @generated from message google.cloud.security.privateca.v1.KeyUsage
 */
export type KeyUsage = Message<"google.cloud.security.privateca.v1.KeyUsage"> & {
  /**
   * Describes high-level ways in which a key may be used.
   *
   * @generated from field: google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions base_key_usage = 1;
   */
  baseKeyUsage?: KeyUsage_KeyUsageOptions;

  /**
   * Detailed scenarios in which a key may be used.
   *
   * @generated from field: google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions extended_key_usage = 2;
   */
  extendedKeyUsage?: KeyUsage_ExtendedKeyUsageOptions;

  /**
   * Used to describe extended key usages that are not listed in the
   * [KeyUsage.ExtendedKeyUsageOptions][google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions]
   * message.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1.ObjectId unknown_extended_key_usages = 3;
   */
  unknownExtendedKeyUsages: ObjectId[];
};

/**
 * Describes the message google.cloud.security.privateca.v1.KeyUsage.
 * Use `create(KeyUsageSchema)` to create a new message.
 */
export const KeyUsageSchema: GenMessage<KeyUsage> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 12);

/**
 * [KeyUsage.KeyUsageOptions][google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions]
 * corresponds to the key usage values described in
 * https://tools.ietf.org/html/rfc5280#section-4.2.1.3.
 *
 * @generated from message google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
 */
export type KeyUsage_KeyUsageOptions = Message<"google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions"> & {
  /**
   * The key may be used for digital signatures.
   *
   * @generated from field: bool digital_signature = 1;
   */
  digitalSignature: boolean;

  /**
   * The key may be used for cryptographic commitments. Note that this may
   * also be referred to as "non-repudiation".
   *
   * @generated from field: bool content_commitment = 2;
   */
  contentCommitment: boolean;

  /**
   * The key may be used to encipher other keys.
   *
   * @generated from field: bool key_encipherment = 3;
   */
  keyEncipherment: boolean;

  /**
   * The key may be used to encipher data.
   *
   * @generated from field: bool data_encipherment = 4;
   */
  dataEncipherment: boolean;

  /**
   * The key may be used in a key agreement protocol.
   *
   * @generated from field: bool key_agreement = 5;
   */
  keyAgreement: boolean;

  /**
   * The key may be used to sign certificates.
   *
   * @generated from field: bool cert_sign = 6;
   */
  certSign: boolean;

  /**
   * The key may be used sign certificate revocation lists.
   *
   * @generated from field: bool crl_sign = 7;
   */
  crlSign: boolean;

  /**
   * The key may be used to encipher only.
   *
   * @generated from field: bool encipher_only = 8;
   */
  encipherOnly: boolean;

  /**
   * The key may be used to decipher only.
   *
   * @generated from field: bool decipher_only = 9;
   */
  decipherOnly: boolean;
};

/**
 * Describes the message google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions.
 * Use `create(KeyUsage_KeyUsageOptionsSchema)` to create a new message.
 */
export const KeyUsage_KeyUsageOptionsSchema: GenMessage<KeyUsage_KeyUsageOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 12, 0);

/**
 * [KeyUsage.ExtendedKeyUsageOptions][google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions]
 * has fields that correspond to certain common OIDs that could be specified
 * as an extended key usage value.
 *
 * @generated from message google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
 */
export type KeyUsage_ExtendedKeyUsageOptions = Message<"google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions"> & {
  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW
   * server authentication", though regularly used for non-WWW TLS.
   *
   * @generated from field: bool server_auth = 1;
   */
  serverAuth: boolean;

  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW
   * client authentication", though regularly used for non-WWW TLS.
   *
   * @generated from field: bool client_auth = 2;
   */
  clientAuth: boolean;

  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of
   * downloadable executable code client authentication".
   *
   * @generated from field: bool code_signing = 3;
   */
  codeSigning: boolean;

  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email
   * protection".
   *
   * @generated from field: bool email_protection = 4;
   */
  emailProtection: boolean;

  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding
   * the hash of an object to a time".
   *
   * @generated from field: bool time_stamping = 5;
   */
  timeStamping: boolean;

  /**
   * Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing
   * OCSP responses".
   *
   * @generated from field: bool ocsp_signing = 6;
   */
  ocspSigning: boolean;
};

/**
 * Describes the message google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions.
 * Use `create(KeyUsage_ExtendedKeyUsageOptionsSchema)` to create a new message.
 */
export const KeyUsage_ExtendedKeyUsageOptionsSchema: GenMessage<KeyUsage_ExtendedKeyUsageOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 12, 1);

/**
 * [Subject][google.cloud.security.privateca.v1.Subject] describes parts of a
 * distinguished name that, in turn, describes the subject of the certificate.
 *
 * @generated from message google.cloud.security.privateca.v1.Subject
 */
export type Subject = Message<"google.cloud.security.privateca.v1.Subject"> & {
  /**
   * The "common name" of the subject.
   *
   * @generated from field: string common_name = 1;
   */
  commonName: string;

  /**
   * The country code of the subject.
   *
   * @generated from field: string country_code = 2;
   */
  countryCode: string;

  /**
   * The organization of the subject.
   *
   * @generated from field: string organization = 3;
   */
  organization: string;

  /**
   * The organizational_unit of the subject.
   *
   * @generated from field: string organizational_unit = 4;
   */
  organizationalUnit: string;

  /**
   * The locality or city of the subject.
   *
   * @generated from field: string locality = 5;
   */
  locality: string;

  /**
   * The province, territory, or regional state of the subject.
   *
   * @generated from field: string province = 6;
   */
  province: string;

  /**
   * The street address of the subject.
   *
   * @generated from field: string street_address = 7;
   */
  streetAddress: string;

  /**
   * The postal code of the subject.
   *
   * @generated from field: string postal_code = 8;
   */
  postalCode: string;
};

/**
 * Describes the message google.cloud.security.privateca.v1.Subject.
 * Use `create(SubjectSchema)` to create a new message.
 */
export const SubjectSchema: GenMessage<Subject> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 13);

/**
 * [SubjectAltNames][google.cloud.security.privateca.v1.SubjectAltNames]
 * corresponds to a more modern way of listing what the asserted identity is in
 * a certificate (i.e., compared to the "common name" in the distinguished
 * name).
 *
 * @generated from message google.cloud.security.privateca.v1.SubjectAltNames
 */
export type SubjectAltNames = Message<"google.cloud.security.privateca.v1.SubjectAltNames"> & {
  /**
   * Contains only valid, fully-qualified host names.
   *
   * @generated from field: repeated string dns_names = 1;
   */
  dnsNames: string[];

  /**
   * Contains only valid RFC 3986 URIs.
   *
   * @generated from field: repeated string uris = 2;
   */
  uris: string[];

  /**
   * Contains only valid RFC 2822 E-mail addresses.
   *
   * @generated from field: repeated string email_addresses = 3;
   */
  emailAddresses: string[];

  /**
   * Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
   *
   * @generated from field: repeated string ip_addresses = 4;
   */
  ipAddresses: string[];

  /**
   * Contains additional subject alternative name values.
   * For each custom_san, the `value` field must contain an ASN.1 encoded
   * UTF8String.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1.X509Extension custom_sans = 5;
   */
  customSans: X509Extension[];
};

/**
 * Describes the message google.cloud.security.privateca.v1.SubjectAltNames.
 * Use `create(SubjectAltNamesSchema)` to create a new message.
 */
export const SubjectAltNamesSchema: GenMessage<SubjectAltNames> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 14);

/**
 * Describes constraints on a
 * [Certificate][google.cloud.security.privateca.v1.Certificate]'s
 * [Subject][google.cloud.security.privateca.v1.Subject] and
 * [SubjectAltNames][google.cloud.security.privateca.v1.SubjectAltNames].
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateIdentityConstraints
 */
export type CertificateIdentityConstraints = Message<"google.cloud.security.privateca.v1.CertificateIdentityConstraints"> & {
  /**
   * Optional. A CEL expression that may be used to validate the resolved X.509
   * Subject and/or Subject Alternative Name before a certificate is signed. To
   * see the full allowed syntax and some examples, see
   * https://cloud.google.com/certificate-authority-service/docs/using-cel
   *
   * @generated from field: google.type.Expr cel_expression = 1;
   */
  celExpression?: Expr;

  /**
   * Required. If this is true, the
   * [Subject][google.cloud.security.privateca.v1.Subject] field may be copied
   * from a certificate request into the signed certificate. Otherwise, the
   * requested [Subject][google.cloud.security.privateca.v1.Subject] will be
   * discarded.
   *
   * @generated from field: optional bool allow_subject_passthrough = 2;
   */
  allowSubjectPassthrough?: boolean;

  /**
   * Required. If this is true, the
   * [SubjectAltNames][google.cloud.security.privateca.v1.SubjectAltNames]
   * extension may be copied from a certificate request into the signed
   * certificate. Otherwise, the requested
   * [SubjectAltNames][google.cloud.security.privateca.v1.SubjectAltNames] will
   * be discarded.
   *
   * @generated from field: optional bool allow_subject_alt_names_passthrough = 3;
   */
  allowSubjectAltNamesPassthrough?: boolean;
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateIdentityConstraints.
 * Use `create(CertificateIdentityConstraintsSchema)` to create a new message.
 */
export const CertificateIdentityConstraintsSchema: GenMessage<CertificateIdentityConstraints> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 15);

/**
 * Describes a set of X.509 extensions that may be part of some certificate
 * issuance controls.
 *
 * @generated from message google.cloud.security.privateca.v1.CertificateExtensionConstraints
 */
export type CertificateExtensionConstraints = Message<"google.cloud.security.privateca.v1.CertificateExtensionConstraints"> & {
  /**
   * Optional. A set of named X.509 extensions. Will be combined with
   * [additional_extensions][google.cloud.security.privateca.v1.CertificateExtensionConstraints.additional_extensions]
   * to determine the full set of X.509 extensions.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1.CertificateExtensionConstraints.KnownCertificateExtension known_extensions = 1;
   */
  knownExtensions: CertificateExtensionConstraints_KnownCertificateExtension[];

  /**
   * Optional. A set of [ObjectIds][google.cloud.security.privateca.v1.ObjectId]
   * identifying custom X.509 extensions. Will be combined with
   * [known_extensions][google.cloud.security.privateca.v1.CertificateExtensionConstraints.known_extensions]
   * to determine the full set of X.509 extensions.
   *
   * @generated from field: repeated google.cloud.security.privateca.v1.ObjectId additional_extensions = 2;
   */
  additionalExtensions: ObjectId[];
};

/**
 * Describes the message google.cloud.security.privateca.v1.CertificateExtensionConstraints.
 * Use `create(CertificateExtensionConstraintsSchema)` to create a new message.
 */
export const CertificateExtensionConstraintsSchema: GenMessage<CertificateExtensionConstraints> = /*@__PURE__*/
  messageDesc(file_google_cloud_security_privateca_v1_resources, 16);

/**
 * Describes well-known X.509 extensions that can appear in a
 * [Certificate][google.cloud.security.privateca.v1.Certificate], not
 * including the
 * [SubjectAltNames][google.cloud.security.privateca.v1.SubjectAltNames]
 * extension.
 *
 * @generated from enum google.cloud.security.privateca.v1.CertificateExtensionConstraints.KnownCertificateExtension
 */
export enum CertificateExtensionConstraints_KnownCertificateExtension {
  /**
   * Not specified.
   *
   * @generated from enum value: KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED = 0;
   */
  KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED = 0,

  /**
   * Refers to a certificate's Key Usage extension, as described in [RFC 5280
   * section 4.2.1.3](https://tools.ietf.org/html/rfc5280#section-4.2.1.3).
   * This corresponds to the
   * [KeyUsage.base_key_usage][google.cloud.security.privateca.v1.KeyUsage.base_key_usage]
   * field.
   *
   * @generated from enum value: BASE_KEY_USAGE = 1;
   */
  BASE_KEY_USAGE = 1,

  /**
   * Refers to a certificate's Extended Key Usage extension, as described in
   * [RFC 5280
   * section 4.2.1.12](https://tools.ietf.org/html/rfc5280#section-4.2.1.12).
   * This corresponds to the
   * [KeyUsage.extended_key_usage][google.cloud.security.privateca.v1.KeyUsage.extended_key_usage]
   * message.
   *
   * @generated from enum value: EXTENDED_KEY_USAGE = 2;
   */
  EXTENDED_KEY_USAGE = 2,

  /**
   * Refers to a certificate's Basic Constraints extension, as described in
   * [RFC 5280
   * section 4.2.1.9](https://tools.ietf.org/html/rfc5280#section-4.2.1.9).
   * This corresponds to the
   * [X509Parameters.ca_options][google.cloud.security.privateca.v1.X509Parameters.ca_options]
   * field.
   *
   * @generated from enum value: CA_OPTIONS = 3;
   */
  CA_OPTIONS = 3,

  /**
   * Refers to a certificate's Policy object identifiers, as described in
   * [RFC 5280
   * section 4.2.1.4](https://tools.ietf.org/html/rfc5280#section-4.2.1.4).
   * This corresponds to the
   * [X509Parameters.policy_ids][google.cloud.security.privateca.v1.X509Parameters.policy_ids]
   * field.
   *
   * @generated from enum value: POLICY_IDS = 4;
   */
  POLICY_IDS = 4,

  /**
   * Refers to OCSP servers in a certificate's Authority Information Access
   * extension, as described in
   * [RFC 5280
   * section 4.2.2.1](https://tools.ietf.org/html/rfc5280#section-4.2.2.1),
   * This corresponds to the
   * [X509Parameters.aia_ocsp_servers][google.cloud.security.privateca.v1.X509Parameters.aia_ocsp_servers]
   * field.
   *
   * @generated from enum value: AIA_OCSP_SERVERS = 5;
   */
  AIA_OCSP_SERVERS = 5,

  /**
   * Refers to Name Constraints extension as described in
   * [RFC 5280
   * section 4.2.1.10](https://tools.ietf.org/html/rfc5280#section-4.2.1.10)
   *
   * @generated from enum value: NAME_CONSTRAINTS = 6;
   */
  NAME_CONSTRAINTS = 6,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.CertificateExtensionConstraints.KnownCertificateExtension.
 */
export const CertificateExtensionConstraints_KnownCertificateExtensionSchema: GenEnum<CertificateExtensionConstraints_KnownCertificateExtension> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 16, 0);

/**
 * A [RevocationReason][google.cloud.security.privateca.v1.RevocationReason]
 * indicates whether a
 * [Certificate][google.cloud.security.privateca.v1.Certificate] has been
 * revoked, and the reason for revocation. These correspond to standard
 * revocation reasons from RFC 5280. Note that the enum labels and values in
 * this definition are not the same ASN.1 values defined in RFC 5280. These
 * values will be translated to the correct ASN.1 values when a CRL is created.
 *
 * @generated from enum google.cloud.security.privateca.v1.RevocationReason
 */
export enum RevocationReason {
  /**
   * Default unspecified value. This value does indicate that a
   * [Certificate][google.cloud.security.privateca.v1.Certificate] has been
   * revoked, but that a reason has not been recorded.
   *
   * @generated from enum value: REVOCATION_REASON_UNSPECIFIED = 0;
   */
  REVOCATION_REASON_UNSPECIFIED = 0,

  /**
   * Key material for this
   * [Certificate][google.cloud.security.privateca.v1.Certificate] may have
   * leaked.
   *
   * @generated from enum value: KEY_COMPROMISE = 1;
   */
  KEY_COMPROMISE = 1,

  /**
   * The key material for a certificate authority in the issuing path may have
   * leaked.
   *
   * @generated from enum value: CERTIFICATE_AUTHORITY_COMPROMISE = 2;
   */
  CERTIFICATE_AUTHORITY_COMPROMISE = 2,

  /**
   * The subject or other attributes in this
   * [Certificate][google.cloud.security.privateca.v1.Certificate] have changed.
   *
   * @generated from enum value: AFFILIATION_CHANGED = 3;
   */
  AFFILIATION_CHANGED = 3,

  /**
   * This [Certificate][google.cloud.security.privateca.v1.Certificate] has been
   * superseded.
   *
   * @generated from enum value: SUPERSEDED = 4;
   */
  SUPERSEDED = 4,

  /**
   * This [Certificate][google.cloud.security.privateca.v1.Certificate] or
   * entities in the issuing path have ceased to operate.
   *
   * @generated from enum value: CESSATION_OF_OPERATION = 5;
   */
  CESSATION_OF_OPERATION = 5,

  /**
   * This [Certificate][google.cloud.security.privateca.v1.Certificate] should
   * not be considered valid, it is expected that it may become valid in the
   * future.
   *
   * @generated from enum value: CERTIFICATE_HOLD = 6;
   */
  CERTIFICATE_HOLD = 6,

  /**
   * This [Certificate][google.cloud.security.privateca.v1.Certificate] no
   * longer has permission to assert the listed attributes.
   *
   * @generated from enum value: PRIVILEGE_WITHDRAWN = 7;
   */
  PRIVILEGE_WITHDRAWN = 7,

  /**
   * The authority which determines appropriate attributes for a
   * [Certificate][google.cloud.security.privateca.v1.Certificate] may have been
   * compromised.
   *
   * @generated from enum value: ATTRIBUTE_AUTHORITY_COMPROMISE = 8;
   */
  ATTRIBUTE_AUTHORITY_COMPROMISE = 8,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.RevocationReason.
 */
export const RevocationReasonSchema: GenEnum<RevocationReason> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 0);

/**
 * Describes the way in which a
 * [Certificate][google.cloud.security.privateca.v1.Certificate]'s
 * [Subject][google.cloud.security.privateca.v1.Subject] and/or
 * [SubjectAltNames][google.cloud.security.privateca.v1.SubjectAltNames] will be
 * resolved.
 *
 * @generated from enum google.cloud.security.privateca.v1.SubjectRequestMode
 */
export enum SubjectRequestMode {
  /**
   * Not specified.
   *
   * @generated from enum value: SUBJECT_REQUEST_MODE_UNSPECIFIED = 0;
   */
  SUBJECT_REQUEST_MODE_UNSPECIFIED = 0,

  /**
   * The default mode used in most cases. Indicates that the certificate's
   * [Subject][google.cloud.security.privateca.v1.Subject] and/or
   * [SubjectAltNames][google.cloud.security.privateca.v1.SubjectAltNames] are
   * specified in the certificate request. This mode requires the caller to have
   * the `privateca.certificates.create` permission.
   *
   * @generated from enum value: DEFAULT = 1;
   */
  DEFAULT = 1,

  /**
   * A mode reserved for special cases. Indicates that the certificate should
   * have one SPIFFE
   * [SubjectAltNames][google.cloud.security.privateca.v1.SubjectAltNames] set
   * by the service based on the caller's identity. This mode will ignore any
   * explicitly specified [Subject][google.cloud.security.privateca.v1.Subject]
   * and/or
   * [SubjectAltNames][google.cloud.security.privateca.v1.SubjectAltNames] in
   * the certificate request. This mode requires the caller to have the
   * `privateca.certificates.createForSelf` permission.
   *
   * @generated from enum value: REFLECTED_SPIFFE = 2;
   */
  REFLECTED_SPIFFE = 2,
}

/**
 * Describes the enum google.cloud.security.privateca.v1.SubjectRequestMode.
 */
export const SubjectRequestModeSchema: GenEnum<SubjectRequestMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_security_privateca_v1_resources, 1);

