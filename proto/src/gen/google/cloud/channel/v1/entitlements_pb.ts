// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/channel/v1/entitlements.proto (package google.cloud.channel.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Value } from "./common_pb";
import { file_google_cloud_channel_v1_common } from "./common_pb";
import type { PaymentPlan, Period } from "./offers_pb";
import { file_google_cloud_channel_v1_offers } from "./offers_pb";
import type { Sku } from "./products_pb";
import { file_google_cloud_channel_v1_products } from "./products_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/channel/v1/entitlements.proto.
 */
export const file_google_cloud_channel_v1_entitlements: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvY2xvdWQvY2hhbm5lbC92MS9lbnRpdGxlbWVudHMucHJvdG8SF2dvb2dsZS5jbG91ZC5jaGFubmVsLnYxIvsICgtFbnRpdGxlbWVudBIRCgRuYW1lGAEgASgJQgPgQQMSNAoLY3JlYXRlX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSOAoFb2ZmZXIYCCABKAlCKeBBAvpBIwohY2xvdWRjaGFubmVsLmdvb2dsZWFwaXMuY29tL09mZmVyEkgKE2NvbW1pdG1lbnRfc2V0dGluZ3MYDCABKAsyKy5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5Db21taXRtZW50U2V0dGluZ3MSVwoScHJvdmlzaW9uaW5nX3N0YXRlGA0gASgOMjYuZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuRW50aXRsZW1lbnQuUHJvdmlzaW9uaW5nU3RhdGVCA+BBAxJNChNwcm92aXNpb25lZF9zZXJ2aWNlGBAgASgLMisuZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuUHJvdmlzaW9uZWRTZXJ2aWNlQgPgQQMSVgoSc3VzcGVuc2lvbl9yZWFzb25zGBIgAygOMjUuZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuRW50aXRsZW1lbnQuU3VzcGVuc2lvblJlYXNvbkID4EEDEh4KEXB1cmNoYXNlX29yZGVyX2lkGBMgASgJQgPgQQESQwoOdHJpYWxfc2V0dGluZ3MYFSABKAsyJi5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5UcmlhbFNldHRpbmdzQgPgQQMSQgoQYXNzb2NpYXRpb25faW5mbxgXIAEoCzIoLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLkFzc29jaWF0aW9uSW5mbxI2CgpwYXJhbWV0ZXJzGBogAygLMiIuZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuUGFyYW1ldGVyEhwKD2JpbGxpbmdfYWNjb3VudBgcIAEoCUID4EEBIlIKEVByb3Zpc2lvbmluZ1N0YXRlEiIKHlBST1ZJU0lPTklOR19TVEFURV9VTlNQRUNJRklFRBAAEgoKBkFDVElWRRABEg0KCVNVU1BFTkRFRBAFIqMBChBTdXNwZW5zaW9uUmVhc29uEiEKHVNVU1BFTlNJT05fUkVBU09OX1VOU1BFQ0lGSUVEEAASFgoSUkVTRUxMRVJfSU5JVElBVEVEEAESDwoLVFJJQUxfRU5ERUQQAhIcChhSRU5FV0FMX1dJVEhfVFlQRV9DQU5DRUwQAxIaChZQRU5ESU5HX1RPU19BQ0NFUFRBTkNFEAQSCQoFT1RIRVIQZDpw6kFtCidjbG91ZGNoYW5uZWwuZ29vZ2xlYXBpcy5jb20vRW50aXRsZW1lbnQSQmFjY291bnRzL3thY2NvdW50fS9jdXN0b21lcnMve2N1c3RvbWVyfS9lbnRpdGxlbWVudHMve2VudGl0bGVtZW50fSJfCglQYXJhbWV0ZXISDAoEbmFtZRgBIAEoCRItCgV2YWx1ZRgCIAEoCzIeLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLlZhbHVlEhUKCGVkaXRhYmxlGAMgASgIQgPgQQMiWQoPQXNzb2NpYXRpb25JbmZvEkYKEGJhc2VfZW50aXRsZW1lbnQYASABKAlCLPpBKQonY2xvdWRjaGFubmVsLmdvb2dsZWFwaXMuY29tL0VudGl0bGVtZW50ImAKElByb3Zpc2lvbmVkU2VydmljZRIcCg9wcm92aXNpb25pbmdfaWQYASABKAlCA+BBAxIXCgpwcm9kdWN0X2lkGAIgASgJQgPgQQMSEwoGc2t1X2lkGAMgASgJQgPgQQMixQEKEkNvbW1pdG1lbnRTZXR0aW5ncxIzCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjEKCGVuZF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEkcKEHJlbmV3YWxfc2V0dGluZ3MYBCABKAsyKC5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5SZW5ld2FsU2V0dGluZ3NCA+BBASK4AQoPUmVuZXdhbFNldHRpbmdzEhYKDmVuYWJsZV9yZW5ld2FsGAEgASgIEhkKEXJlc2l6ZV91bml0X2NvdW50GAIgASgIEjoKDHBheW1lbnRfcGxhbhgFIAEoDjIkLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLlBheW1lbnRQbGFuEjYKDXBheW1lbnRfY3ljbGUYBiABKAsyHy5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5QZXJpb2QiTAoNVHJpYWxTZXR0aW5ncxINCgV0cmlhbBgBIAEoCBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAivwEKD1RyYW5zZmVyYWJsZVNrdRJKChR0cmFuc2Zlcl9lbGlnaWJpbGl0eRgJIAEoCzIsLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLlRyYW5zZmVyRWxpZ2liaWxpdHkSKQoDc2t1GAsgASgLMhwuZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuU2t1EjUKCmxlZ2FjeV9za3UYDCABKAsyHC5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5Ta3VCA+BBASKmAgoTVHJhbnNmZXJFbGlnaWJpbGl0eRITCgtpc19lbGlnaWJsZRgBIAEoCBITCgtkZXNjcmlwdGlvbhgCIAEoCRJRChRpbmVsaWdpYmlsaXR5X3JlYXNvbhgDIAEoDjIzLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLlRyYW5zZmVyRWxpZ2liaWxpdHkuUmVhc29uIpEBCgZSZWFzb24SFgoSUkVBU09OX1VOU1BFQ0lGSUVEEAASGgoWUEVORElOR19UT1NfQUNDRVBUQU5DRRABEhQKEFNLVV9OT1RfRUxJR0lCTEUQAhIRCg1TS1VfU1VTUEVOREVEEAMSKgomQ0hBTk5FTF9QQVJUTkVSX05PVF9BVVRIT1JJWkVEX0ZPUl9TS1UQBEJpChtjb20uZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjFCEUVudGl0bGVtZW50c1Byb3RvUAFaNWNsb3VkLmdvb2dsZS5jb20vZ28vY2hhbm5lbC9hcGl2MS9jaGFubmVscGI7Y2hhbm5lbHBiYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_channel_v1_common, file_google_cloud_channel_v1_offers, file_google_cloud_channel_v1_products, file_google_protobuf_timestamp]);

/**
 * An entitlement is a representation of a customer's ability to use a service.
 *
 * @generated from message google.cloud.channel.v1.Entitlement
 */
export type Entitlement = Message<"google.cloud.channel.v1.Entitlement"> & {
  /**
   * Output only. Resource name of an entitlement in the form:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time at which the entitlement is created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which the entitlement is updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;

  /**
   * Required. The offer resource name for which the entitlement is to be
   * created. Takes the form: accounts/{account_id}/offers/{offer_id}.
   *
   * @generated from field: string offer = 8;
   */
  offer: string;

  /**
   * Commitment settings for a commitment-based Offer.
   * Required for commitment based offers.
   *
   * @generated from field: google.cloud.channel.v1.CommitmentSettings commitment_settings = 12;
   */
  commitmentSettings?: CommitmentSettings;

  /**
   * Output only. Current provisioning state of the entitlement.
   *
   * @generated from field: google.cloud.channel.v1.Entitlement.ProvisioningState provisioning_state = 13;
   */
  provisioningState: Entitlement_ProvisioningState;

  /**
   * Output only. Service provisioning details for the entitlement.
   *
   * @generated from field: google.cloud.channel.v1.ProvisionedService provisioned_service = 16;
   */
  provisionedService?: ProvisionedService;

  /**
   * Output only. Enumerable of all current suspension reasons for an
   * entitlement.
   *
   * @generated from field: repeated google.cloud.channel.v1.Entitlement.SuspensionReason suspension_reasons = 18;
   */
  suspensionReasons: Entitlement_SuspensionReason[];

  /**
   * Optional. This purchase order (PO) information is for resellers to use for
   * their company tracking usage. If a purchaseOrderId value is given, it
   * appears in the API responses and shows up in the invoice. The property
   * accepts up to 80 plain text characters. This is only supported for Google
   * Workspace entitlements.
   *
   * @generated from field: string purchase_order_id = 19;
   */
  purchaseOrderId: string;

  /**
   * Output only. Settings for trial offers.
   *
   * @generated from field: google.cloud.channel.v1.TrialSettings trial_settings = 21;
   */
  trialSettings?: TrialSettings;

  /**
   * Association information to other entitlements.
   *
   * @generated from field: google.cloud.channel.v1.AssociationInfo association_info = 23;
   */
  associationInfo?: AssociationInfo;

  /**
   * Extended entitlement parameters. When creating an entitlement, valid
   * parameter names and values are defined in the
   * [Offer.parameter_definitions][google.cloud.channel.v1.Offer.parameter_definitions].
   *
   * For Google Workspace, the following Parameters may be accepted as input:
   *
   * - max_units: The maximum assignable units for a flexible offer
   *
   * OR
   *
   * - num_units: The total commitment for commitment-based offers
   *
   * The response may additionally include the following output-only Parameters:
   *
   * - assigned_units: The number of licenses assigned to users.
   *
   * For Google Cloud billing subaccounts, the following Parameter may be
   * accepted as input:
   *
   * - display_name: The display name of the billing subaccount.
   *
   * @generated from field: repeated google.cloud.channel.v1.Parameter parameters = 26;
   */
  parameters: Parameter[];

  /**
   * Optional. The billing account resource name that is used to pay for this
   * entitlement.
   *
   * @generated from field: string billing_account = 28;
   */
  billingAccount: string;
};

/**
 * Describes the message google.cloud.channel.v1.Entitlement.
 * Use `create(EntitlementSchema)` to create a new message.
 */
export const EntitlementSchema: GenMessage<Entitlement> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_entitlements, 0);

/**
 * Indicates the current provisioning state of the entitlement.
 *
 * @generated from enum google.cloud.channel.v1.Entitlement.ProvisioningState
 */
export enum Entitlement_ProvisioningState {
  /**
   * Not used.
   *
   * @generated from enum value: PROVISIONING_STATE_UNSPECIFIED = 0;
   */
  PROVISIONING_STATE_UNSPECIFIED = 0,

  /**
   * The entitlement is currently active.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * The entitlement is currently suspended.
   *
   * @generated from enum value: SUSPENDED = 5;
   */
  SUSPENDED = 5,
}

/**
 * Describes the enum google.cloud.channel.v1.Entitlement.ProvisioningState.
 */
export const Entitlement_ProvisioningStateSchema: GenEnum<Entitlement_ProvisioningState> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_entitlements, 0, 0);

/**
 * Suspension reason for an entitlement if
 * [provisioning_state][google.cloud.channel.v1.Entitlement.provisioning_state]
 * = SUSPENDED.
 *
 * @generated from enum google.cloud.channel.v1.Entitlement.SuspensionReason
 */
export enum Entitlement_SuspensionReason {
  /**
   * Not used.
   *
   * @generated from enum value: SUSPENSION_REASON_UNSPECIFIED = 0;
   */
  SUSPENSION_REASON_UNSPECIFIED = 0,

  /**
   * Entitlement was manually suspended by the Reseller.
   *
   * @generated from enum value: RESELLER_INITIATED = 1;
   */
  RESELLER_INITIATED = 1,

  /**
   * Trial ended.
   *
   * @generated from enum value: TRIAL_ENDED = 2;
   */
  TRIAL_ENDED = 2,

  /**
   * Entitlement renewal was canceled.
   *
   * @generated from enum value: RENEWAL_WITH_TYPE_CANCEL = 3;
   */
  RENEWAL_WITH_TYPE_CANCEL = 3,

  /**
   * Entitlement was automatically suspended on creation for pending ToS
   * acceptance on customer.
   *
   * @generated from enum value: PENDING_TOS_ACCEPTANCE = 4;
   */
  PENDING_TOS_ACCEPTANCE = 4,

  /**
   * Other reasons (internal reasons, abuse, etc.).
   *
   * @generated from enum value: OTHER = 100;
   */
  OTHER = 100,
}

/**
 * Describes the enum google.cloud.channel.v1.Entitlement.SuspensionReason.
 */
export const Entitlement_SuspensionReasonSchema: GenEnum<Entitlement_SuspensionReason> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_entitlements, 0, 1);

/**
 * Definition for extended entitlement parameters.
 *
 * @generated from message google.cloud.channel.v1.Parameter
 */
export type Parameter = Message<"google.cloud.channel.v1.Parameter"> & {
  /**
   * Name of the parameter.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Value of the parameter.
   *
   * @generated from field: google.cloud.channel.v1.Value value = 2;
   */
  value?: Value;

  /**
   * Output only. Specifies whether this parameter is allowed to be changed. For
   * example, for a Google Workspace Business Starter entitlement in commitment
   * plan, num_units is editable when entitlement is active.
   *
   * @generated from field: bool editable = 3;
   */
  editable: boolean;
};

/**
 * Describes the message google.cloud.channel.v1.Parameter.
 * Use `create(ParameterSchema)` to create a new message.
 */
export const ParameterSchema: GenMessage<Parameter> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_entitlements, 1);

/**
 * Association links that an entitlement has to other entitlements.
 *
 * @generated from message google.cloud.channel.v1.AssociationInfo
 */
export type AssociationInfo = Message<"google.cloud.channel.v1.AssociationInfo"> & {
  /**
   * The name of the base entitlement, for which this entitlement is an add-on.
   *
   * @generated from field: string base_entitlement = 1;
   */
  baseEntitlement: string;
};

/**
 * Describes the message google.cloud.channel.v1.AssociationInfo.
 * Use `create(AssociationInfoSchema)` to create a new message.
 */
export const AssociationInfoSchema: GenMessage<AssociationInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_entitlements, 2);

/**
 * Service provisioned for an entitlement.
 *
 * @generated from message google.cloud.channel.v1.ProvisionedService
 */
export type ProvisionedService = Message<"google.cloud.channel.v1.ProvisionedService"> & {
  /**
   * Output only. Provisioning ID of the entitlement. For Google Workspace, this
   * is the underlying Subscription ID. For Google Cloud, this is the Billing
   * Account ID of the billing subaccount.
   *
   * @generated from field: string provisioning_id = 1;
   */
  provisioningId: string;

  /**
   * Output only. The product pertaining to the provisioning resource as
   * specified in the Offer.
   *
   * @generated from field: string product_id = 2;
   */
  productId: string;

  /**
   * Output only. The SKU pertaining to the provisioning resource as specified
   * in the Offer.
   *
   * @generated from field: string sku_id = 3;
   */
  skuId: string;
};

/**
 * Describes the message google.cloud.channel.v1.ProvisionedService.
 * Use `create(ProvisionedServiceSchema)` to create a new message.
 */
export const ProvisionedServiceSchema: GenMessage<ProvisionedService> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_entitlements, 3);

/**
 * Commitment settings for commitment-based offers.
 *
 * @generated from message google.cloud.channel.v1.CommitmentSettings
 */
export type CommitmentSettings = Message<"google.cloud.channel.v1.CommitmentSettings"> & {
  /**
   * Output only. Commitment start timestamp.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * Output only. Commitment end timestamp.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Optional. Renewal settings applicable for a commitment-based Offer.
   *
   * @generated from field: google.cloud.channel.v1.RenewalSettings renewal_settings = 4;
   */
  renewalSettings?: RenewalSettings;
};

/**
 * Describes the message google.cloud.channel.v1.CommitmentSettings.
 * Use `create(CommitmentSettingsSchema)` to create a new message.
 */
export const CommitmentSettingsSchema: GenMessage<CommitmentSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_entitlements, 4);

/**
 * Renewal settings for renewable Offers.
 *
 * @generated from message google.cloud.channel.v1.RenewalSettings
 */
export type RenewalSettings = Message<"google.cloud.channel.v1.RenewalSettings"> & {
  /**
   * If false, the plan will be completed at the end date.
   *
   * @generated from field: bool enable_renewal = 1;
   */
  enableRenewal: boolean;

  /**
   * If true and enable_renewal = true, the unit (for example seats or licenses)
   * will be set to the number of active units at renewal time.
   *
   * @generated from field: bool resize_unit_count = 2;
   */
  resizeUnitCount: boolean;

  /**
   * Describes how a reseller will be billed.
   *
   * @generated from field: google.cloud.channel.v1.PaymentPlan payment_plan = 5;
   */
  paymentPlan: PaymentPlan;

  /**
   * Describes how frequently the reseller will be billed, such as
   * once per month.
   *
   * @generated from field: google.cloud.channel.v1.Period payment_cycle = 6;
   */
  paymentCycle?: Period;
};

/**
 * Describes the message google.cloud.channel.v1.RenewalSettings.
 * Use `create(RenewalSettingsSchema)` to create a new message.
 */
export const RenewalSettingsSchema: GenMessage<RenewalSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_entitlements, 5);

/**
 * Settings for trial offers.
 *
 * @generated from message google.cloud.channel.v1.TrialSettings
 */
export type TrialSettings = Message<"google.cloud.channel.v1.TrialSettings"> & {
  /**
   * Determines if the entitlement is in a trial or not:
   *
   * * `true` - The entitlement is in trial.
   * * `false` - The entitlement is not in trial.
   *
   * @generated from field: bool trial = 1;
   */
  trial: boolean;

  /**
   * Date when the trial ends. The value is in milliseconds
   * using the UNIX Epoch format. See an example [Epoch
   * converter](https://www.epochconverter.com).
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.channel.v1.TrialSettings.
 * Use `create(TrialSettingsSchema)` to create a new message.
 */
export const TrialSettingsSchema: GenMessage<TrialSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_entitlements, 6);

/**
 * TransferableSku represents information a reseller needs to view existing
 * provisioned services for a customer that they do not own.
 * Read-only.
 *
 * @generated from message google.cloud.channel.v1.TransferableSku
 */
export type TransferableSku = Message<"google.cloud.channel.v1.TransferableSku"> & {
  /**
   * Describes the transfer eligibility of a SKU.
   *
   * @generated from field: google.cloud.channel.v1.TransferEligibility transfer_eligibility = 9;
   */
  transferEligibility?: TransferEligibility;

  /**
   * The SKU pertaining to the provisioning resource as specified in the Offer.
   *
   * @generated from field: google.cloud.channel.v1.Sku sku = 11;
   */
  sku?: Sku;

  /**
   * Optional. The customer to transfer has an entitlement with the populated
   * legacy SKU.
   *
   * @generated from field: google.cloud.channel.v1.Sku legacy_sku = 12;
   */
  legacySku?: Sku;
};

/**
 * Describes the message google.cloud.channel.v1.TransferableSku.
 * Use `create(TransferableSkuSchema)` to create a new message.
 */
export const TransferableSkuSchema: GenMessage<TransferableSku> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_entitlements, 7);

/**
 * Specifies transfer eligibility of a SKU.
 *
 * @generated from message google.cloud.channel.v1.TransferEligibility
 */
export type TransferEligibility = Message<"google.cloud.channel.v1.TransferEligibility"> & {
  /**
   * Whether reseller is eligible to transfer the SKU.
   *
   * @generated from field: bool is_eligible = 1;
   */
  isEligible: boolean;

  /**
   * Localized description if reseller is not eligible to transfer the SKU.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Specified the reason for ineligibility.
   *
   * @generated from field: google.cloud.channel.v1.TransferEligibility.Reason ineligibility_reason = 3;
   */
  ineligibilityReason: TransferEligibility_Reason;
};

/**
 * Describes the message google.cloud.channel.v1.TransferEligibility.
 * Use `create(TransferEligibilitySchema)` to create a new message.
 */
export const TransferEligibilitySchema: GenMessage<TransferEligibility> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_entitlements, 8);

/**
 * Reason of ineligibility.
 *
 * @generated from enum google.cloud.channel.v1.TransferEligibility.Reason
 */
export enum TransferEligibility_Reason {
  /**
   * Not used.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Reseller needs to accept TOS before transferring the SKU.
   *
   * @generated from enum value: PENDING_TOS_ACCEPTANCE = 1;
   */
  PENDING_TOS_ACCEPTANCE = 1,

  /**
   * Reseller not eligible to sell the SKU.
   *
   * @generated from enum value: SKU_NOT_ELIGIBLE = 2;
   */
  SKU_NOT_ELIGIBLE = 2,

  /**
   * SKU subscription is suspended
   *
   * @generated from enum value: SKU_SUSPENDED = 3;
   */
  SKU_SUSPENDED = 3,

  /**
   * The reseller is not authorized to transact on this Product. See
   * https://support.google.com/channelservices/answer/9759265
   *
   * @generated from enum value: CHANNEL_PARTNER_NOT_AUTHORIZED_FOR_SKU = 4;
   */
  CHANNEL_PARTNER_NOT_AUTHORIZED_FOR_SKU = 4,
}

/**
 * Describes the enum google.cloud.channel.v1.TransferEligibility.Reason.
 */
export const TransferEligibility_ReasonSchema: GenEnum<TransferEligibility_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_entitlements, 8, 0);

