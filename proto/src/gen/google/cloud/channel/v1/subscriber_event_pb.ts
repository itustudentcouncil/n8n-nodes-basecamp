// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/channel/v1/subscriber_event.proto (package google.cloud.channel.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/channel/v1/subscriber_event.proto.
 */
export const file_google_cloud_channel_v1_subscriber_event: GenFile = /*@__PURE__*/
  fileDesc("Ci5nb29nbGUvY2xvdWQvY2hhbm5lbC92MS9zdWJzY3JpYmVyX2V2ZW50LnByb3RvEhdnb29nbGUuY2xvdWQuY2hhbm5lbC52MSLkAQoNQ3VzdG9tZXJFdmVudBI7CghjdXN0b21lchgBIAEoCUIp+kEmCiRjbG91ZGNoYW5uZWwuZ29vZ2xlYXBpcy5jb20vQ3VzdG9tZXISPwoKZXZlbnRfdHlwZRgCIAEoDjIrLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLkN1c3RvbWVyRXZlbnQuVHlwZSJVCgRUeXBlEhQKEFRZUEVfVU5TUEVDSUZJRUQQABIaChZQUklNQVJZX0RPTUFJTl9DSEFOR0VEEAESGwoXUFJJTUFSWV9ET01BSU5fVkVSSUZJRUQQAiKxAwoQRW50aXRsZW1lbnRFdmVudBJBCgtlbnRpdGxlbWVudBgBIAEoCUIs+kEpCidjbG91ZGNoYW5uZWwuZ29vZ2xlYXBpcy5jb20vRW50aXRsZW1lbnQSQgoKZXZlbnRfdHlwZRgCIAEoDjIuLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLkVudGl0bGVtZW50RXZlbnQuVHlwZSKVAgoEVHlwZRIUChBUWVBFX1VOU1BFQ0lGSUVEEAASCwoHQ1JFQVRFRBABEhcKE1BSSUNFX1BMQU5fU1dJVENIRUQQAxIWChJDT01NSVRNRU5UX0NIQU5HRUQQBBILCgdSRU5FV0VEEAUSDQoJU1VTUEVOREVEEAYSDQoJQUNUSVZBVEVEEAcSDQoJQ0FOQ0VMTEVEEAgSDwoLU0tVX0NIQU5HRUQQCRIbChdSRU5FV0FMX1NFVFRJTkdfQ0hBTkdFRBAKEhgKFFBBSURfU0VSVklDRV9TVEFSVEVEEAsSHgoaTElDRU5TRV9BU1NJR05NRU5UX0NIQU5HRUQQDBIXChNMSUNFTlNFX0NBUF9DSEFOR0VEEA0ipAEKD1N1YnNjcmliZXJFdmVudBJACg5jdXN0b21lcl9ldmVudBgBIAEoCzImLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLkN1c3RvbWVyRXZlbnRIABJGChFlbnRpdGxlbWVudF9ldmVudBgCIAEoCzIpLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLkVudGl0bGVtZW50RXZlbnRIAEIHCgVldmVudEJsChtjb20uZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjFCFFN1YnNjcmliZXJFdmVudFByb3RvUAFaNWNsb3VkLmdvb2dsZS5jb20vZ28vY2hhbm5lbC9hcGl2MS9jaGFubmVscGI7Y2hhbm5lbHBiYgZwcm90bzM", [file_google_api_resource]);

/**
 * Represents Pub/Sub message content describing customer update.
 *
 * @generated from message google.cloud.channel.v1.CustomerEvent
 */
export type CustomerEvent = Message<"google.cloud.channel.v1.CustomerEvent"> & {
  /**
   * Resource name of the customer.
   * Format: accounts/{account_id}/customers/{customer_id}
   *
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * Type of event which happened on the customer.
   *
   * @generated from field: google.cloud.channel.v1.CustomerEvent.Type event_type = 2;
   */
  eventType: CustomerEvent_Type;
};

/**
 * Describes the message google.cloud.channel.v1.CustomerEvent.
 * Use `create(CustomerEventSchema)` to create a new message.
 */
export const CustomerEventSchema: GenMessage<CustomerEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_subscriber_event, 0);

/**
 * Type of customer event.
 *
 * @generated from enum google.cloud.channel.v1.CustomerEvent.Type
 */
export enum CustomerEvent_Type {
  /**
   * Not used.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Primary domain for customer was changed.
   *
   * @generated from enum value: PRIMARY_DOMAIN_CHANGED = 1;
   */
  PRIMARY_DOMAIN_CHANGED = 1,

  /**
   * Primary domain of the customer has been verified.
   *
   * @generated from enum value: PRIMARY_DOMAIN_VERIFIED = 2;
   */
  PRIMARY_DOMAIN_VERIFIED = 2,
}

/**
 * Describes the enum google.cloud.channel.v1.CustomerEvent.Type.
 */
export const CustomerEvent_TypeSchema: GenEnum<CustomerEvent_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_subscriber_event, 0, 0);

/**
 * Represents Pub/Sub message content describing entitlement update.
 *
 * @generated from message google.cloud.channel.v1.EntitlementEvent
 */
export type EntitlementEvent = Message<"google.cloud.channel.v1.EntitlementEvent"> & {
  /**
   * Resource name of an entitlement of the form:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string entitlement = 1;
   */
  entitlement: string;

  /**
   * Type of event which happened on the entitlement.
   *
   * @generated from field: google.cloud.channel.v1.EntitlementEvent.Type event_type = 2;
   */
  eventType: EntitlementEvent_Type;
};

/**
 * Describes the message google.cloud.channel.v1.EntitlementEvent.
 * Use `create(EntitlementEventSchema)` to create a new message.
 */
export const EntitlementEventSchema: GenMessage<EntitlementEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_subscriber_event, 1);

/**
 * Type of entitlement event.
 *
 * @generated from enum google.cloud.channel.v1.EntitlementEvent.Type
 */
export enum EntitlementEvent_Type {
  /**
   * Not used.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * A new entitlement was created.
   *
   * @generated from enum value: CREATED = 1;
   */
  CREATED = 1,

  /**
   * The offer type associated with an entitlement was changed.
   * This is not triggered if an entitlement converts from a commit offer to a
   * flexible offer as part of a renewal.
   *
   * @generated from enum value: PRICE_PLAN_SWITCHED = 3;
   */
  PRICE_PLAN_SWITCHED = 3,

  /**
   * Annual commitment for a commit plan was changed.
   *
   * @generated from enum value: COMMITMENT_CHANGED = 4;
   */
  COMMITMENT_CHANGED = 4,

  /**
   * An annual entitlement was renewed.
   *
   * @generated from enum value: RENEWED = 5;
   */
  RENEWED = 5,

  /**
   * Entitlement was suspended.
   *
   * @generated from enum value: SUSPENDED = 6;
   */
  SUSPENDED = 6,

  /**
   * Entitlement was unsuspended.
   *
   * @generated from enum value: ACTIVATED = 7;
   */
  ACTIVATED = 7,

  /**
   * Entitlement was cancelled.
   *
   * @generated from enum value: CANCELLED = 8;
   */
  CANCELLED = 8,

  /**
   * Entitlement was upgraded or downgraded (e.g. from Google Workspace
   * Business Standard to Google Workspace Business Plus).
   *
   * @generated from enum value: SKU_CHANGED = 9;
   */
  SKU_CHANGED = 9,

  /**
   * The renewal settings of an entitlement has changed.
   *
   * @generated from enum value: RENEWAL_SETTING_CHANGED = 10;
   */
  RENEWAL_SETTING_CHANGED = 10,

  /**
   * Paid service has started on trial entitlement.
   *
   * @generated from enum value: PAID_SERVICE_STARTED = 11;
   */
  PAID_SERVICE_STARTED = 11,

  /**
   * License was assigned to or revoked from a user.
   *
   * @generated from enum value: LICENSE_ASSIGNMENT_CHANGED = 12;
   */
  LICENSE_ASSIGNMENT_CHANGED = 12,

  /**
   * License cap was changed for the entitlement.
   *
   * @generated from enum value: LICENSE_CAP_CHANGED = 13;
   */
  LICENSE_CAP_CHANGED = 13,
}

/**
 * Describes the enum google.cloud.channel.v1.EntitlementEvent.Type.
 */
export const EntitlementEvent_TypeSchema: GenEnum<EntitlementEvent_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_subscriber_event, 1, 0);

/**
 * Represents information which resellers will get as part of notification from
 * Pub/Sub.
 *
 * @generated from message google.cloud.channel.v1.SubscriberEvent
 */
export type SubscriberEvent = Message<"google.cloud.channel.v1.SubscriberEvent"> & {
  /**
   * Specifies the Pub/Sub event provided to the partners.
   * This is a required field.
   *
   * @generated from oneof google.cloud.channel.v1.SubscriberEvent.event
   */
  event: {
    /**
     * Customer event sent as part of Pub/Sub event to partners.
     *
     * @generated from field: google.cloud.channel.v1.CustomerEvent customer_event = 1;
     */
    value: CustomerEvent;
    case: "customerEvent";
  } | {
    /**
     * Entitlement event sent as part of Pub/Sub event to partners.
     *
     * @generated from field: google.cloud.channel.v1.EntitlementEvent entitlement_event = 2;
     */
    value: EntitlementEvent;
    case: "entitlementEvent";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.channel.v1.SubscriberEvent.
 * Use `create(SubscriberEventSchema)` to create a new message.
 */
export const SubscriberEventSchema: GenMessage<SubscriberEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_subscriber_event, 2);

