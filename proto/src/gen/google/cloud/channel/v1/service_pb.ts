// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/channel/v1/service.proto (package google.cloud.channel.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { BillingAccount } from "./billing_accounts_pb";
import { file_google_cloud_channel_v1_billing_accounts } from "./billing_accounts_pb";
import type { ChannelPartnerLink, ChannelPartnerLinkSchema, ChannelPartnerLinkView } from "./channel_partner_links_pb";
import { file_google_cloud_channel_v1_channel_partner_links } from "./channel_partner_links_pb";
import type { AdminUser, CloudIdentityInfo } from "./common_pb";
import { file_google_cloud_channel_v1_common } from "./common_pb";
import type { Customer, CustomerSchema } from "./customers_pb";
import { file_google_cloud_channel_v1_customers } from "./customers_pb";
import type { EntitlementChange } from "./entitlement_changes_pb";
import { file_google_cloud_channel_v1_entitlement_changes } from "./entitlement_changes_pb";
import type { Entitlement, EntitlementSchema, Parameter, RenewalSettings, TransferableSku } from "./entitlements_pb";
import { file_google_cloud_channel_v1_entitlements } from "./entitlements_pb";
import type { Offer, OfferSchema } from "./offers_pb";
import { file_google_cloud_channel_v1_offers } from "./offers_pb";
import { file_google_cloud_channel_v1_operations } from "./operations_pb";
import type { Product, Sku } from "./products_pb";
import { file_google_cloud_channel_v1_products } from "./products_pb";
import type { ChannelPartnerRepricingConfig, ChannelPartnerRepricingConfigSchema, CustomerRepricingConfig, CustomerRepricingConfigSchema } from "./repricing_pb";
import { file_google_cloud_channel_v1_repricing } from "./repricing_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/channel/v1/service.proto.
 */
export const file_google_cloud_channel_v1_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_channel_v1_billing_accounts, file_google_cloud_channel_v1_channel_partner_links, file_google_cloud_channel_v1_common, file_google_cloud_channel_v1_customers, file_google_cloud_channel_v1_entitlement_changes, file_google_cloud_channel_v1_entitlements, file_google_cloud_channel_v1_offers, file_google_cloud_channel_v1_operations, file_google_cloud_channel_v1_products, file_google_cloud_channel_v1_repricing, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Request message for
 * [CloudChannelService.CheckCloudIdentityAccountsExist][google.cloud.channel.v1.CloudChannelService.CheckCloudIdentityAccountsExist].
 *
 * @generated from message google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
 */
export type CheckCloudIdentityAccountsExistRequest = Message<"google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest"> & {
  /**
   * Required. The reseller account's resource name.
   * Parent uses the format: accounts/{account_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Domain to fetch for Cloud Identity account customer.
   *
   * @generated from field: string domain = 2;
   */
  domain: string;
};

/**
 * Describes the message google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest.
 * Use `create(CheckCloudIdentityAccountsExistRequestSchema)` to create a new message.
 */
export const CheckCloudIdentityAccountsExistRequestSchema: GenMessage<CheckCloudIdentityAccountsExistRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 0);

/**
 * Entity representing a Cloud Identity account that may be
 * associated with a Channel Services API partner.
 *
 * @generated from message google.cloud.channel.v1.CloudIdentityCustomerAccount
 */
export type CloudIdentityCustomerAccount = Message<"google.cloud.channel.v1.CloudIdentityCustomerAccount"> & {
  /**
   * Returns true if a Cloud Identity account exists for a specific domain.
   *
   * @generated from field: bool existing = 1;
   */
  existing: boolean;

  /**
   * Returns true if the Cloud Identity account is associated with a customer
   * of the Channel Services partner.
   *
   * @generated from field: bool owned = 2;
   */
  owned: boolean;

  /**
   * If owned = true, the name of the customer that owns the Cloud Identity
   * account.
   * Customer_name uses the format:
   * accounts/{account_id}/customers/{customer_id}
   *
   * @generated from field: string customer_name = 3;
   */
  customerName: string;

  /**
   * If existing = true, the Cloud Identity ID of the customer.
   *
   * @generated from field: string customer_cloud_identity_id = 4;
   */
  customerCloudIdentityId: string;
};

/**
 * Describes the message google.cloud.channel.v1.CloudIdentityCustomerAccount.
 * Use `create(CloudIdentityCustomerAccountSchema)` to create a new message.
 */
export const CloudIdentityCustomerAccountSchema: GenMessage<CloudIdentityCustomerAccount> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 1);

/**
 * Response message for
 * [CloudChannelService.CheckCloudIdentityAccountsExist][google.cloud.channel.v1.CloudChannelService.CheckCloudIdentityAccountsExist].
 *
 * @generated from message google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
 */
export type CheckCloudIdentityAccountsExistResponse = Message<"google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse"> & {
  /**
   * The Cloud Identity accounts associated with the domain.
   *
   * @generated from field: repeated google.cloud.channel.v1.CloudIdentityCustomerAccount cloud_identity_accounts = 1;
   */
  cloudIdentityAccounts: CloudIdentityCustomerAccount[];
};

/**
 * Describes the message google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse.
 * Use `create(CheckCloudIdentityAccountsExistResponseSchema)` to create a new message.
 */
export const CheckCloudIdentityAccountsExistResponseSchema: GenMessage<CheckCloudIdentityAccountsExistResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 2);

/**
 * Request message for
 * [CloudChannelService.ListCustomers][google.cloud.channel.v1.CloudChannelService.ListCustomers]
 *
 * @generated from message google.cloud.channel.v1.ListCustomersRequest
 */
export type ListCustomersRequest = Message<"google.cloud.channel.v1.ListCustomersRequest"> & {
  /**
   * Required. The resource name of the reseller account to list customers from.
   * Parent uses the format: accounts/{account_id}.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of customers to return. The service may return
   * fewer than this value. If unspecified, returns at most 10 customers. The
   * maximum value is 50.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results other than the first page.
   * Obtained through
   * [ListCustomersResponse.next_page_token][google.cloud.channel.v1.ListCustomersResponse.next_page_token]
   * of the previous
   * [CloudChannelService.ListCustomers][google.cloud.channel.v1.CloudChannelService.ListCustomers]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filters applied to the [CloudChannelService.ListCustomers]
   * results. See
   * https://cloud.google.com/channel/docs/concepts/google-cloud/filter-customers
   * for more information.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListCustomersRequest.
 * Use `create(ListCustomersRequestSchema)` to create a new message.
 */
export const ListCustomersRequestSchema: GenMessage<ListCustomersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 3);

/**
 * Response message for
 * [CloudChannelService.ListCustomers][google.cloud.channel.v1.CloudChannelService.ListCustomers].
 *
 * @generated from message google.cloud.channel.v1.ListCustomersResponse
 */
export type ListCustomersResponse = Message<"google.cloud.channel.v1.ListCustomersResponse"> & {
  /**
   * The customers belonging to a reseller or distributor.
   *
   * @generated from field: repeated google.cloud.channel.v1.Customer customers = 1;
   */
  customers: Customer[];

  /**
   * A token to retrieve the next page of results.
   * Pass to
   * [ListCustomersRequest.page_token][google.cloud.channel.v1.ListCustomersRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListCustomersResponse.
 * Use `create(ListCustomersResponseSchema)` to create a new message.
 */
export const ListCustomersResponseSchema: GenMessage<ListCustomersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 4);

/**
 * Request message for
 * [CloudChannelService.GetCustomer][google.cloud.channel.v1.CloudChannelService.GetCustomer].
 *
 * @generated from message google.cloud.channel.v1.GetCustomerRequest
 */
export type GetCustomerRequest = Message<"google.cloud.channel.v1.GetCustomerRequest"> & {
  /**
   * Required. The resource name of the customer to retrieve.
   * Name uses the format: accounts/{account_id}/customers/{customer_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.channel.v1.GetCustomerRequest.
 * Use `create(GetCustomerRequestSchema)` to create a new message.
 */
export const GetCustomerRequestSchema: GenMessage<GetCustomerRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 5);

/**
 * Request message for
 * [CloudChannelService.CreateCustomer][google.cloud.channel.v1.CloudChannelService.CreateCustomer]
 *
 * @generated from message google.cloud.channel.v1.CreateCustomerRequest
 */
export type CreateCustomerRequest = Message<"google.cloud.channel.v1.CreateCustomerRequest"> & {
  /**
   * Required. The resource name of reseller account in which to create the
   * customer. Parent uses the format: accounts/{account_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The customer to create.
   *
   * @generated from field: google.cloud.channel.v1.Customer customer = 2;
   */
  customer?: Customer;
};

/**
 * Describes the message google.cloud.channel.v1.CreateCustomerRequest.
 * Use `create(CreateCustomerRequestSchema)` to create a new message.
 */
export const CreateCustomerRequestSchema: GenMessage<CreateCustomerRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 6);

/**
 * Request message for
 * [CloudChannelService.UpdateCustomer][google.cloud.channel.v1.CloudChannelService.UpdateCustomer].
 *
 * @generated from message google.cloud.channel.v1.UpdateCustomerRequest
 */
export type UpdateCustomerRequest = Message<"google.cloud.channel.v1.UpdateCustomerRequest"> & {
  /**
   * Required. New contents of the customer.
   *
   * @generated from field: google.cloud.channel.v1.Customer customer = 2;
   */
  customer?: Customer;

  /**
   * The update mask that applies to the resource.
   * Optional.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.channel.v1.UpdateCustomerRequest.
 * Use `create(UpdateCustomerRequestSchema)` to create a new message.
 */
export const UpdateCustomerRequestSchema: GenMessage<UpdateCustomerRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 7);

/**
 * Request message for
 * [CloudChannelService.DeleteCustomer][google.cloud.channel.v1.CloudChannelService.DeleteCustomer].
 *
 * @generated from message google.cloud.channel.v1.DeleteCustomerRequest
 */
export type DeleteCustomerRequest = Message<"google.cloud.channel.v1.DeleteCustomerRequest"> & {
  /**
   * Required. The resource name of the customer to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.channel.v1.DeleteCustomerRequest.
 * Use `create(DeleteCustomerRequestSchema)` to create a new message.
 */
export const DeleteCustomerRequestSchema: GenMessage<DeleteCustomerRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 8);

/**
 * Request message for
 * [CloudChannelService.ImportCustomer][google.cloud.channel.v1.CloudChannelService.ImportCustomer]
 *
 * @generated from message google.cloud.channel.v1.ImportCustomerRequest
 */
export type ImportCustomerRequest = Message<"google.cloud.channel.v1.ImportCustomerRequest"> & {
  /**
   * Specifies the identity of the transfer customer.
   * A customer's cloud_identity_id or domain is required to look up the
   * customer's Cloud Identity. For Team customers, only the cloud_identity_id
   * option is valid.
   *
   * @generated from oneof google.cloud.channel.v1.ImportCustomerRequest.customer_identity
   */
  customerIdentity: {
    /**
     * Required. Customer domain.
     *
     * @generated from field: string domain = 2;
     */
    value: string;
    case: "domain";
  } | {
    /**
     * Required. Customer's Cloud Identity ID
     *
     * @generated from field: string cloud_identity_id = 3;
     */
    value: string;
    case: "cloudIdentityId";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the reseller's account.
   * Parent takes the format: accounts/{account_id} or
   * accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The super admin of the resold customer generates this token to
   * authorize a reseller to access their Cloud Identity and purchase
   * entitlements on their behalf. You can omit this token after authorization.
   * See https://support.google.com/a/answer/7643790 for more details.
   *
   * @generated from field: string auth_token = 4;
   */
  authToken: string;

  /**
   * Required. Choose to overwrite an existing customer if found.
   * This must be set to true if there is an existing customer with a
   * conflicting region code or domain.
   *
   * @generated from field: bool overwrite_if_exists = 5;
   */
  overwriteIfExists: boolean;

  /**
   * Optional. Cloud Identity ID of a channel partner who will be the direct
   * reseller for the customer's order. This field is required for 2-tier
   * transfer scenarios and can be provided via the request Parent binding as
   * well.
   *
   * @generated from field: string channel_partner_id = 6;
   */
  channelPartnerId: string;

  /**
   * Optional. Specifies the customer that will receive imported Cloud Identity
   * information.
   * Format: accounts/{account_id}/customers/{customer_id}
   *
   * @generated from field: string customer = 7;
   */
  customer: string;
};

/**
 * Describes the message google.cloud.channel.v1.ImportCustomerRequest.
 * Use `create(ImportCustomerRequestSchema)` to create a new message.
 */
export const ImportCustomerRequestSchema: GenMessage<ImportCustomerRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 9);

/**
 * Request message for
 * [CloudChannelService.ProvisionCloudIdentity][google.cloud.channel.v1.CloudChannelService.ProvisionCloudIdentity]
 *
 * @generated from message google.cloud.channel.v1.ProvisionCloudIdentityRequest
 */
export type ProvisionCloudIdentityRequest = Message<"google.cloud.channel.v1.ProvisionCloudIdentityRequest"> & {
  /**
   * Required. Resource name of the customer.
   * Format: accounts/{account_id}/customers/{customer_id}
   *
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * CloudIdentity-specific customer information.
   *
   * @generated from field: google.cloud.channel.v1.CloudIdentityInfo cloud_identity_info = 2;
   */
  cloudIdentityInfo?: CloudIdentityInfo;

  /**
   * Admin user information.
   *
   * @generated from field: google.cloud.channel.v1.AdminUser user = 3;
   */
  user?: AdminUser;

  /**
   * Validate the request and preview the review, but do not post it.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.channel.v1.ProvisionCloudIdentityRequest.
 * Use `create(ProvisionCloudIdentityRequestSchema)` to create a new message.
 */
export const ProvisionCloudIdentityRequestSchema: GenMessage<ProvisionCloudIdentityRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 10);

/**
 * Request message for
 * [CloudChannelService.ListEntitlements][google.cloud.channel.v1.CloudChannelService.ListEntitlements]
 *
 * @generated from message google.cloud.channel.v1.ListEntitlementsRequest
 */
export type ListEntitlementsRequest = Message<"google.cloud.channel.v1.ListEntitlementsRequest"> & {
  /**
   * Required. The resource name of the reseller's customer account to list
   * entitlements for.
   * Parent uses the format: accounts/{account_id}/customers/{customer_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Requested page size. Server might return fewer results than
   * requested. If unspecified, return at most 50 entitlements. The maximum
   * value is 100; the server will coerce values above 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token for a page of results other than the first page.
   * Obtained using
   * [ListEntitlementsResponse.next_page_token][google.cloud.channel.v1.ListEntitlementsResponse.next_page_token]
   * of the previous
   * [CloudChannelService.ListEntitlements][google.cloud.channel.v1.CloudChannelService.ListEntitlements]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListEntitlementsRequest.
 * Use `create(ListEntitlementsRequestSchema)` to create a new message.
 */
export const ListEntitlementsRequestSchema: GenMessage<ListEntitlementsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 11);

/**
 * Response message for
 * [CloudChannelService.ListEntitlements][google.cloud.channel.v1.CloudChannelService.ListEntitlements].
 *
 * @generated from message google.cloud.channel.v1.ListEntitlementsResponse
 */
export type ListEntitlementsResponse = Message<"google.cloud.channel.v1.ListEntitlementsResponse"> & {
  /**
   * The reseller customer's entitlements.
   *
   * @generated from field: repeated google.cloud.channel.v1.Entitlement entitlements = 1;
   */
  entitlements: Entitlement[];

  /**
   * A token to list the next page of results.
   * Pass to
   * [ListEntitlementsRequest.page_token][google.cloud.channel.v1.ListEntitlementsRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListEntitlementsResponse.
 * Use `create(ListEntitlementsResponseSchema)` to create a new message.
 */
export const ListEntitlementsResponseSchema: GenMessage<ListEntitlementsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 12);

/**
 * Request message for
 * [CloudChannelService.ListTransferableSkus][google.cloud.channel.v1.CloudChannelService.ListTransferableSkus]
 *
 * @generated from message google.cloud.channel.v1.ListTransferableSkusRequest
 */
export type ListTransferableSkusRequest = Message<"google.cloud.channel.v1.ListTransferableSkusRequest"> & {
  /**
   * Specifies the identity of transferred customer.
   * Either a cloud_identity_id of the customer or the customer name is
   * required to look up transferable SKUs.
   *
   * @generated from oneof google.cloud.channel.v1.ListTransferableSkusRequest.transferred_customer_identity
   */
  transferredCustomerIdentity: {
    /**
     * Customer's Cloud Identity ID
     *
     * @generated from field: string cloud_identity_id = 4;
     */
    value: string;
    case: "cloudIdentityId";
  } | {
    /**
     * A reseller is required to create a customer and use the resource name of
     * the created customer here.
     * Customer_name uses the format:
     * accounts/{account_id}/customers/{customer_id}
     *
     * @generated from field: string customer_name = 7;
     */
    value: string;
    case: "customerName";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The reseller account's resource name.
   * Parent uses the format: accounts/{account_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The requested page size. Server might return fewer results than requested.
   * If unspecified, returns at most 100 SKUs.
   * The maximum value is 1000; the server will coerce values above 1000.
   * Optional.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token for a page of results other than the first page.
   * Obtained using
   * [ListTransferableSkusResponse.next_page_token][google.cloud.channel.v1.ListTransferableSkusResponse.next_page_token]
   * of the previous
   * [CloudChannelService.ListTransferableSkus][google.cloud.channel.v1.CloudChannelService.ListTransferableSkus]
   * call. Optional.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The super admin of the resold customer generates this token to
   * authorize a reseller to access their Cloud Identity and purchase
   * entitlements on their behalf. You can omit this token after authorization.
   * See https://support.google.com/a/answer/7643790 for more details.
   *
   * @generated from field: string auth_token = 5;
   */
  authToken: string;

  /**
   * The BCP-47 language code. For example, "en-US". The
   * response will localize in the corresponding language code, if specified.
   * The default value is "en-US".
   * Optional.
   *
   * @generated from field: string language_code = 6;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListTransferableSkusRequest.
 * Use `create(ListTransferableSkusRequestSchema)` to create a new message.
 */
export const ListTransferableSkusRequestSchema: GenMessage<ListTransferableSkusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 13);

/**
 * Response message for
 * [CloudChannelService.ListTransferableSkus][google.cloud.channel.v1.CloudChannelService.ListTransferableSkus].
 *
 * @generated from message google.cloud.channel.v1.ListTransferableSkusResponse
 */
export type ListTransferableSkusResponse = Message<"google.cloud.channel.v1.ListTransferableSkusResponse"> & {
  /**
   * Information about existing SKUs for a customer that needs a transfer.
   *
   * @generated from field: repeated google.cloud.channel.v1.TransferableSku transferable_skus = 1;
   */
  transferableSkus: TransferableSku[];

  /**
   * A token to retrieve the next page of results.
   * Pass to
   * [ListTransferableSkusRequest.page_token][google.cloud.channel.v1.ListTransferableSkusRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListTransferableSkusResponse.
 * Use `create(ListTransferableSkusResponseSchema)` to create a new message.
 */
export const ListTransferableSkusResponseSchema: GenMessage<ListTransferableSkusResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 14);

/**
 * Request message for
 * [CloudChannelService.ListTransferableOffers][google.cloud.channel.v1.CloudChannelService.ListTransferableOffers]
 *
 * @generated from message google.cloud.channel.v1.ListTransferableOffersRequest
 */
export type ListTransferableOffersRequest = Message<"google.cloud.channel.v1.ListTransferableOffersRequest"> & {
  /**
   * Specifies the identity of transferred customer.
   * Either a cloud_identity_id of the customer or the customer name is
   * required to look up transferrable Offers.
   *
   * @generated from oneof google.cloud.channel.v1.ListTransferableOffersRequest.transferred_customer_identity
   */
  transferredCustomerIdentity: {
    /**
     * Customer's Cloud Identity ID
     *
     * @generated from field: string cloud_identity_id = 4;
     */
    value: string;
    case: "cloudIdentityId";
  } | {
    /**
     * A reseller should create a customer and use the resource name of
     * that customer here.
     *
     * @generated from field: string customer_name = 5;
     */
    value: string;
    case: "customerName";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the reseller's account.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server might return fewer results than requested.
   * If unspecified, returns at most 100 offers.
   * The maximum value is 1000; the server will coerce values above 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token for a page of results other than the first page.
   * Obtained using
   * [ListTransferableOffersResponse.next_page_token][google.cloud.channel.v1.ListTransferableOffersResponse.next_page_token]
   * of the previous
   * [CloudChannelService.ListTransferableOffers][google.cloud.channel.v1.CloudChannelService.ListTransferableOffers]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Required. The SKU to look up Offers for.
   *
   * @generated from field: string sku = 6;
   */
  sku: string;

  /**
   * Optional. The BCP-47 language code. For example, "en-US". The
   * response will localize in the corresponding language code, if specified.
   * The default value is "en-US".
   *
   * @generated from field: string language_code = 7;
   */
  languageCode: string;

  /**
   * Optional. The Billing Account to look up Offers for. Format:
   * accounts/{account_id}/billingAccounts/{billing_account_id}.
   *
   * This field is only relevant for multi-currency accounts. It should be left
   * empty for single currency accounts.
   *
   * @generated from field: string billing_account = 8;
   */
  billingAccount: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListTransferableOffersRequest.
 * Use `create(ListTransferableOffersRequestSchema)` to create a new message.
 */
export const ListTransferableOffersRequestSchema: GenMessage<ListTransferableOffersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 15);

/**
 * Response message for
 * [CloudChannelService.ListTransferableOffers][google.cloud.channel.v1.CloudChannelService.ListTransferableOffers].
 *
 * @generated from message google.cloud.channel.v1.ListTransferableOffersResponse
 */
export type ListTransferableOffersResponse = Message<"google.cloud.channel.v1.ListTransferableOffersResponse"> & {
  /**
   * Information about Offers for a customer that can be used for
   * transfer.
   *
   * @generated from field: repeated google.cloud.channel.v1.TransferableOffer transferable_offers = 1;
   */
  transferableOffers: TransferableOffer[];

  /**
   * A token to retrieve the next page of results.
   * Pass to
   * [ListTransferableOffersRequest.page_token][google.cloud.channel.v1.ListTransferableOffersRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListTransferableOffersResponse.
 * Use `create(ListTransferableOffersResponseSchema)` to create a new message.
 */
export const ListTransferableOffersResponseSchema: GenMessage<ListTransferableOffersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 16);

/**
 * TransferableOffer represents an Offer that can be used in Transfer.
 * Read-only.
 *
 * @generated from message google.cloud.channel.v1.TransferableOffer
 */
export type TransferableOffer = Message<"google.cloud.channel.v1.TransferableOffer"> & {
  /**
   * Offer with parameter constraints updated to allow the Transfer.
   *
   * @generated from field: google.cloud.channel.v1.Offer offer = 1;
   */
  offer?: Offer;
};

/**
 * Describes the message google.cloud.channel.v1.TransferableOffer.
 * Use `create(TransferableOfferSchema)` to create a new message.
 */
export const TransferableOfferSchema: GenMessage<TransferableOffer> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 17);

/**
 * Request message for
 * [CloudChannelService.GetEntitlement][google.cloud.channel.v1.CloudChannelService.GetEntitlement].
 *
 * @generated from message google.cloud.channel.v1.GetEntitlementRequest
 */
export type GetEntitlementRequest = Message<"google.cloud.channel.v1.GetEntitlementRequest"> & {
  /**
   * Required. The resource name of the entitlement to retrieve.
   * Name uses the format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.channel.v1.GetEntitlementRequest.
 * Use `create(GetEntitlementRequestSchema)` to create a new message.
 */
export const GetEntitlementRequestSchema: GenMessage<GetEntitlementRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 18);

/**
 * Request message for
 * [CloudChannelService.ListChannelPartnerLinks][google.cloud.channel.v1.CloudChannelService.ListChannelPartnerLinks]
 *
 * @generated from message google.cloud.channel.v1.ListChannelPartnerLinksRequest
 */
export type ListChannelPartnerLinksRequest = Message<"google.cloud.channel.v1.ListChannelPartnerLinksRequest"> & {
  /**
   * Required. The resource name of the reseller account for listing channel
   * partner links. Parent uses the format: accounts/{account_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Requested page size. Server might return fewer results than
   * requested. If unspecified, server will pick a default size (25). The
   * maximum value is 200; the server will coerce values above 200.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token for a page of results other than the first page.
   * Obtained using
   * [ListChannelPartnerLinksResponse.next_page_token][google.cloud.channel.v1.ListChannelPartnerLinksResponse.next_page_token]
   * of the previous
   * [CloudChannelService.ListChannelPartnerLinks][google.cloud.channel.v1.CloudChannelService.ListChannelPartnerLinks]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The level of granularity the ChannelPartnerLink will display.
   *
   * @generated from field: google.cloud.channel.v1.ChannelPartnerLinkView view = 4;
   */
  view: ChannelPartnerLinkView;
};

/**
 * Describes the message google.cloud.channel.v1.ListChannelPartnerLinksRequest.
 * Use `create(ListChannelPartnerLinksRequestSchema)` to create a new message.
 */
export const ListChannelPartnerLinksRequestSchema: GenMessage<ListChannelPartnerLinksRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 19);

/**
 * Response message for
 * [CloudChannelService.ListChannelPartnerLinks][google.cloud.channel.v1.CloudChannelService.ListChannelPartnerLinks].
 *
 * @generated from message google.cloud.channel.v1.ListChannelPartnerLinksResponse
 */
export type ListChannelPartnerLinksResponse = Message<"google.cloud.channel.v1.ListChannelPartnerLinksResponse"> & {
  /**
   * The Channel partner links for a reseller.
   *
   * @generated from field: repeated google.cloud.channel.v1.ChannelPartnerLink channel_partner_links = 1;
   */
  channelPartnerLinks: ChannelPartnerLink[];

  /**
   * A token to retrieve the next page of results.
   * Pass to
   * [ListChannelPartnerLinksRequest.page_token][google.cloud.channel.v1.ListChannelPartnerLinksRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListChannelPartnerLinksResponse.
 * Use `create(ListChannelPartnerLinksResponseSchema)` to create a new message.
 */
export const ListChannelPartnerLinksResponseSchema: GenMessage<ListChannelPartnerLinksResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 20);

/**
 * Request message for
 * [CloudChannelService.GetChannelPartnerLink][google.cloud.channel.v1.CloudChannelService.GetChannelPartnerLink].
 *
 * @generated from message google.cloud.channel.v1.GetChannelPartnerLinkRequest
 */
export type GetChannelPartnerLinkRequest = Message<"google.cloud.channel.v1.GetChannelPartnerLinkRequest"> & {
  /**
   * Required. The resource name of the channel partner link to retrieve.
   * Name uses the format: accounts/{account_id}/channelPartnerLinks/{id}
   * where {id} is the Cloud Identity ID of the partner.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The level of granularity the ChannelPartnerLink will display.
   *
   * @generated from field: google.cloud.channel.v1.ChannelPartnerLinkView view = 2;
   */
  view: ChannelPartnerLinkView;
};

/**
 * Describes the message google.cloud.channel.v1.GetChannelPartnerLinkRequest.
 * Use `create(GetChannelPartnerLinkRequestSchema)` to create a new message.
 */
export const GetChannelPartnerLinkRequestSchema: GenMessage<GetChannelPartnerLinkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 21);

/**
 * Request message for
 * [CloudChannelService.CreateChannelPartnerLink][google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerLink]
 *
 * @generated from message google.cloud.channel.v1.CreateChannelPartnerLinkRequest
 */
export type CreateChannelPartnerLinkRequest = Message<"google.cloud.channel.v1.CreateChannelPartnerLinkRequest"> & {
  /**
   * Required. Create a channel partner link for the provided reseller account's
   * resource name.
   * Parent uses the format: accounts/{account_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The channel partner link to create.
   * Either channel_partner_link.reseller_cloud_identity_id or domain can be
   * used to create a link.
   *
   * @generated from field: google.cloud.channel.v1.ChannelPartnerLink channel_partner_link = 2;
   */
  channelPartnerLink?: ChannelPartnerLink;
};

/**
 * Describes the message google.cloud.channel.v1.CreateChannelPartnerLinkRequest.
 * Use `create(CreateChannelPartnerLinkRequestSchema)` to create a new message.
 */
export const CreateChannelPartnerLinkRequestSchema: GenMessage<CreateChannelPartnerLinkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 22);

/**
 * Request message for
 * [CloudChannelService.UpdateChannelPartnerLink][google.cloud.channel.v1.CloudChannelService.UpdateChannelPartnerLink]
 *
 * @generated from message google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
 */
export type UpdateChannelPartnerLinkRequest = Message<"google.cloud.channel.v1.UpdateChannelPartnerLinkRequest"> & {
  /**
   * Required. The resource name of the channel partner link to cancel.
   * Name uses the format: accounts/{account_id}/channelPartnerLinks/{id}
   * where {id} is the Cloud Identity ID of the partner.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The channel partner link to update. Only
   * channel_partner_link.link_state is allowed for updates.
   *
   * @generated from field: google.cloud.channel.v1.ChannelPartnerLink channel_partner_link = 2;
   */
  channelPartnerLink?: ChannelPartnerLink;

  /**
   * Required. The update mask that applies to the resource.
   * The only allowable value for an update mask is
   * channel_partner_link.link_state.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.channel.v1.UpdateChannelPartnerLinkRequest.
 * Use `create(UpdateChannelPartnerLinkRequestSchema)` to create a new message.
 */
export const UpdateChannelPartnerLinkRequestSchema: GenMessage<UpdateChannelPartnerLinkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 23);

/**
 * Request message for
 * [CloudChannelService.GetCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.GetCustomerRepricingConfig].
 *
 * @generated from message google.cloud.channel.v1.GetCustomerRepricingConfigRequest
 */
export type GetCustomerRepricingConfigRequest = Message<"google.cloud.channel.v1.GetCustomerRepricingConfigRequest"> & {
  /**
   * Required. The resource name of the CustomerRepricingConfig.
   * Format:
   * accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.channel.v1.GetCustomerRepricingConfigRequest.
 * Use `create(GetCustomerRepricingConfigRequestSchema)` to create a new message.
 */
export const GetCustomerRepricingConfigRequestSchema: GenMessage<GetCustomerRepricingConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 24);

/**
 * Request message for
 * [CloudChannelService.ListCustomerRepricingConfigs][google.cloud.channel.v1.CloudChannelService.ListCustomerRepricingConfigs].
 *
 * @generated from message google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
 */
export type ListCustomerRepricingConfigsRequest = Message<"google.cloud.channel.v1.ListCustomerRepricingConfigsRequest"> & {
  /**
   * Required. The resource name of the customer.
   * Parent uses the format: accounts/{account_id}/customers/{customer_id}.
   * Supports accounts/{account_id}/customers/- to retrieve configs for all
   * customers.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of repricing configs to return. The service
   * may return fewer than this value. If unspecified, returns a maximum of 50
   * rules. The maximum value is 100; values above 100 will be coerced to 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results beyond the first page.
   * Obtained through
   * [ListCustomerRepricingConfigsResponse.next_page_token][google.cloud.channel.v1.ListCustomerRepricingConfigsResponse.next_page_token]
   * of the previous
   * [CloudChannelService.ListCustomerRepricingConfigs][google.cloud.channel.v1.CloudChannelService.ListCustomerRepricingConfigs]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. A filter for [CloudChannelService.ListCustomerRepricingConfigs]
   * results (customer only). You can use this filter when you support
   * a BatchGet-like query.
   * To use the filter, you must set `parent=accounts/{account_id}/customers/-`.
   *
   * Example: customer = accounts/account_id/customers/c1 OR
   * customer = accounts/account_id/customers/c2.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListCustomerRepricingConfigsRequest.
 * Use `create(ListCustomerRepricingConfigsRequestSchema)` to create a new message.
 */
export const ListCustomerRepricingConfigsRequestSchema: GenMessage<ListCustomerRepricingConfigsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 25);

/**
 * Response message for
 * [CloudChannelService.ListCustomerRepricingConfigs][google.cloud.channel.v1.CloudChannelService.ListCustomerRepricingConfigs].
 *
 * @generated from message google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
 */
export type ListCustomerRepricingConfigsResponse = Message<"google.cloud.channel.v1.ListCustomerRepricingConfigsResponse"> & {
  /**
   * The repricing configs for this channel partner.
   *
   * @generated from field: repeated google.cloud.channel.v1.CustomerRepricingConfig customer_repricing_configs = 1;
   */
  customerRepricingConfigs: CustomerRepricingConfig[];

  /**
   * A token to retrieve the next page of results.
   * Pass to
   * [ListCustomerRepricingConfigsRequest.page_token][google.cloud.channel.v1.ListCustomerRepricingConfigsRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListCustomerRepricingConfigsResponse.
 * Use `create(ListCustomerRepricingConfigsResponseSchema)` to create a new message.
 */
export const ListCustomerRepricingConfigsResponseSchema: GenMessage<ListCustomerRepricingConfigsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 26);

/**
 * Request message for
 * [CloudChannelService.CreateCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfig].
 *
 * @generated from message google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
 */
export type CreateCustomerRepricingConfigRequest = Message<"google.cloud.channel.v1.CreateCustomerRepricingConfigRequest"> & {
  /**
   * Required. The resource name of the customer that will receive this
   * repricing config. Parent uses the format:
   * accounts/{account_id}/customers/{customer_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The CustomerRepricingConfig object to update.
   *
   * @generated from field: google.cloud.channel.v1.CustomerRepricingConfig customer_repricing_config = 2;
   */
  customerRepricingConfig?: CustomerRepricingConfig;
};

/**
 * Describes the message google.cloud.channel.v1.CreateCustomerRepricingConfigRequest.
 * Use `create(CreateCustomerRepricingConfigRequestSchema)` to create a new message.
 */
export const CreateCustomerRepricingConfigRequestSchema: GenMessage<CreateCustomerRepricingConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 27);

/**
 * Request message for
 * [CloudChannelService.UpdateCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.UpdateCustomerRepricingConfig].
 *
 * @generated from message google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
 */
export type UpdateCustomerRepricingConfigRequest = Message<"google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest"> & {
  /**
   * Required. The CustomerRepricingConfig object to update.
   *
   * @generated from field: google.cloud.channel.v1.CustomerRepricingConfig customer_repricing_config = 1;
   */
  customerRepricingConfig?: CustomerRepricingConfig;
};

/**
 * Describes the message google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest.
 * Use `create(UpdateCustomerRepricingConfigRequestSchema)` to create a new message.
 */
export const UpdateCustomerRepricingConfigRequestSchema: GenMessage<UpdateCustomerRepricingConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 28);

/**
 * Request message for
 * [CloudChannelService.DeleteCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.DeleteCustomerRepricingConfig].
 *
 * @generated from message google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
 */
export type DeleteCustomerRepricingConfigRequest = Message<"google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest"> & {
  /**
   * Required. The resource name of the customer repricing config rule to
   * delete. Format:
   * accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest.
 * Use `create(DeleteCustomerRepricingConfigRequestSchema)` to create a new message.
 */
export const DeleteCustomerRepricingConfigRequestSchema: GenMessage<DeleteCustomerRepricingConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 29);

/**
 * Request message for
 * [CloudChannelService.GetChannelPartnerRepricingConfig][google.cloud.channel.v1.CloudChannelService.GetChannelPartnerRepricingConfig]
 *
 * @generated from message google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
 */
export type GetChannelPartnerRepricingConfigRequest = Message<"google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest"> & {
  /**
   * Required. The resource name of the ChannelPartnerRepricingConfig
   * Format:
   * accounts/{account_id}/channelPartnerLinks/{channel_partner_id}/channelPartnerRepricingConfigs/{id}.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest.
 * Use `create(GetChannelPartnerRepricingConfigRequestSchema)` to create a new message.
 */
export const GetChannelPartnerRepricingConfigRequestSchema: GenMessage<GetChannelPartnerRepricingConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 30);

/**
 * Request message for
 * [CloudChannelService.ListChannelPartnerRepricingConfigs][google.cloud.channel.v1.CloudChannelService.ListChannelPartnerRepricingConfigs].
 *
 * @generated from message google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
 */
export type ListChannelPartnerRepricingConfigsRequest = Message<"google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest"> & {
  /**
   * Required. The resource name of the account's
   * [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]. Parent
   * uses the format:
   * accounts/{account_id}/channelPartnerLinks/{channel_partner_id}.
   * Supports accounts/{account_id}/channelPartnerLinks/- to retrieve configs
   * for all channel partners.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of repricing configs to return. The service
   * may return fewer than this value. If unspecified, returns a maximum of 50
   * rules. The maximum value is 100; values above 100 will be coerced to 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results beyond the first page.
   * Obtained through
   * [ListChannelPartnerRepricingConfigsResponse.next_page_token][google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse.next_page_token]
   * of the previous
   * [CloudChannelService.ListChannelPartnerRepricingConfigs][google.cloud.channel.v1.CloudChannelService.ListChannelPartnerRepricingConfigs]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. A filter for
   * [CloudChannelService.ListChannelPartnerRepricingConfigs] results
   * (channel_partner_link only). You can use this filter when you support a
   * BatchGet-like query. To use the filter, you must set
   * `parent=accounts/{account_id}/channelPartnerLinks/-`.
   *
   * Example: `channel_partner_link =
   * accounts/account_id/channelPartnerLinks/c1` OR `channel_partner_link =
   * accounts/account_id/channelPartnerLinks/c2`.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest.
 * Use `create(ListChannelPartnerRepricingConfigsRequestSchema)` to create a new message.
 */
export const ListChannelPartnerRepricingConfigsRequestSchema: GenMessage<ListChannelPartnerRepricingConfigsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 31);

/**
 * Response message for
 * [CloudChannelService.ListChannelPartnerRepricingConfigs][google.cloud.channel.v1.CloudChannelService.ListChannelPartnerRepricingConfigs].
 *
 * @generated from message google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
 */
export type ListChannelPartnerRepricingConfigsResponse = Message<"google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse"> & {
  /**
   * The repricing configs for this channel partner.
   *
   * @generated from field: repeated google.cloud.channel.v1.ChannelPartnerRepricingConfig channel_partner_repricing_configs = 1;
   */
  channelPartnerRepricingConfigs: ChannelPartnerRepricingConfig[];

  /**
   * A token to retrieve the next page of results.
   * Pass to
   * [ListChannelPartnerRepricingConfigsRequest.page_token][google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse.
 * Use `create(ListChannelPartnerRepricingConfigsResponseSchema)` to create a new message.
 */
export const ListChannelPartnerRepricingConfigsResponseSchema: GenMessage<ListChannelPartnerRepricingConfigsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 32);

/**
 * Request message for
 * [CloudChannelService.CreateChannelPartnerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfig].
 *
 * @generated from message google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
 */
export type CreateChannelPartnerRepricingConfigRequest = Message<"google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest"> & {
  /**
   * Required. The resource name of the ChannelPartner that will receive the
   * repricing config. Parent uses the format:
   * accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ChannelPartnerRepricingConfig object to update.
   *
   * @generated from field: google.cloud.channel.v1.ChannelPartnerRepricingConfig channel_partner_repricing_config = 2;
   */
  channelPartnerRepricingConfig?: ChannelPartnerRepricingConfig;
};

/**
 * Describes the message google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest.
 * Use `create(CreateChannelPartnerRepricingConfigRequestSchema)` to create a new message.
 */
export const CreateChannelPartnerRepricingConfigRequestSchema: GenMessage<CreateChannelPartnerRepricingConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 33);

/**
 * Request message for
 * [CloudChannelService.UpdateChannelPartnerRepricingConfig][google.cloud.channel.v1.CloudChannelService.UpdateChannelPartnerRepricingConfig].
 *
 * @generated from message google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
 */
export type UpdateChannelPartnerRepricingConfigRequest = Message<"google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest"> & {
  /**
   * Required. The ChannelPartnerRepricingConfig object to update.
   *
   * @generated from field: google.cloud.channel.v1.ChannelPartnerRepricingConfig channel_partner_repricing_config = 1;
   */
  channelPartnerRepricingConfig?: ChannelPartnerRepricingConfig;
};

/**
 * Describes the message google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest.
 * Use `create(UpdateChannelPartnerRepricingConfigRequestSchema)` to create a new message.
 */
export const UpdateChannelPartnerRepricingConfigRequestSchema: GenMessage<UpdateChannelPartnerRepricingConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 34);

/**
 * Request message for DeleteChannelPartnerRepricingConfig.
 *
 * @generated from message google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
 */
export type DeleteChannelPartnerRepricingConfigRequest = Message<"google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest"> & {
  /**
   * Required. The resource name of the channel partner repricing config rule to
   * delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest.
 * Use `create(DeleteChannelPartnerRepricingConfigRequestSchema)` to create a new message.
 */
export const DeleteChannelPartnerRepricingConfigRequestSchema: GenMessage<DeleteChannelPartnerRepricingConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 35);

/**
 * Request message for ListSkuGroups.
 *
 * @generated from message google.cloud.channel.v1.ListSkuGroupsRequest
 */
export type ListSkuGroupsRequest = Message<"google.cloud.channel.v1.ListSkuGroupsRequest"> & {
  /**
   * Required. The resource name of the account from which to list SKU groups.
   * Parent uses the format: accounts/{account}.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of SKU groups to return. The service may
   * return fewer than this value. If unspecified, returns a maximum of 1000 SKU
   * groups. The maximum value is 1000; values above 1000 will be coerced to
   * 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results beyond the first page.
   * Obtained through
   * [ListSkuGroups.next_page_token][] of the previous
   * [CloudChannelService.ListSkuGroups][google.cloud.channel.v1.CloudChannelService.ListSkuGroups]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListSkuGroupsRequest.
 * Use `create(ListSkuGroupsRequestSchema)` to create a new message.
 */
export const ListSkuGroupsRequestSchema: GenMessage<ListSkuGroupsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 36);

/**
 * Request message for ListSkuGroupBillableSkus.
 *
 * @generated from message google.cloud.channel.v1.ListSkuGroupBillableSkusRequest
 */
export type ListSkuGroupBillableSkusRequest = Message<"google.cloud.channel.v1.ListSkuGroupBillableSkusRequest"> & {
  /**
   * Required. Resource name of the SKU group.
   * Format: accounts/{account}/skuGroups/{sku_group}.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of SKUs to return. The service may return
   * fewer than this value. If unspecified, returns a maximum of 100000 SKUs.
   * The maximum value is 100000; values above 100000 will be coerced to 100000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results beyond the first page.
   * Obtained through
   * [ListSkuGroupBillableSkus.next_page_token][] of the previous
   * [CloudChannelService.ListSkuGroupBillableSkus][google.cloud.channel.v1.CloudChannelService.ListSkuGroupBillableSkus]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListSkuGroupBillableSkusRequest.
 * Use `create(ListSkuGroupBillableSkusRequestSchema)` to create a new message.
 */
export const ListSkuGroupBillableSkusRequestSchema: GenMessage<ListSkuGroupBillableSkusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 37);

/**
 * Response message for ListSkuGroups.
 *
 * @generated from message google.cloud.channel.v1.ListSkuGroupsResponse
 */
export type ListSkuGroupsResponse = Message<"google.cloud.channel.v1.ListSkuGroupsResponse"> & {
  /**
   * The list of SKU groups requested.
   *
   * @generated from field: repeated google.cloud.channel.v1.SkuGroup sku_groups = 1;
   */
  skuGroups: SkuGroup[];

  /**
   * A token to retrieve the next page of results.
   * Pass to [ListSkuGroups.page_token][] to obtain that
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListSkuGroupsResponse.
 * Use `create(ListSkuGroupsResponseSchema)` to create a new message.
 */
export const ListSkuGroupsResponseSchema: GenMessage<ListSkuGroupsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 38);

/**
 * Response message for ListSkuGroupBillableSkus.
 *
 * @generated from message google.cloud.channel.v1.ListSkuGroupBillableSkusResponse
 */
export type ListSkuGroupBillableSkusResponse = Message<"google.cloud.channel.v1.ListSkuGroupBillableSkusResponse"> & {
  /**
   * The list of billable SKUs in the requested SKU group.
   *
   * @generated from field: repeated google.cloud.channel.v1.BillableSku billable_skus = 1;
   */
  billableSkus: BillableSku[];

  /**
   * A token to retrieve the next page of results.
   * Pass to [ListSkuGroupBillableSkus.page_token][] to obtain that
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListSkuGroupBillableSkusResponse.
 * Use `create(ListSkuGroupBillableSkusResponseSchema)` to create a new message.
 */
export const ListSkuGroupBillableSkusResponseSchema: GenMessage<ListSkuGroupBillableSkusResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 39);

/**
 * Represents the SKU group information.
 *
 * @generated from message google.cloud.channel.v1.SkuGroup
 */
export type SkuGroup = Message<"google.cloud.channel.v1.SkuGroup"> & {
  /**
   * Resource name of SKU group. Format:
   * accounts/{account}/skuGroups/{sku_group}.
   * Example:
   * "accounts/C01234/skuGroups/3d50fd57-3157-4577-a5a9-a219b8490041".
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Unique human readable identifier for the SKU group.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;
};

/**
 * Describes the message google.cloud.channel.v1.SkuGroup.
 * Use `create(SkuGroupSchema)` to create a new message.
 */
export const SkuGroupSchema: GenMessage<SkuGroup> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 40);

/**
 * Represents the Billable SKU information.
 *
 * @generated from message google.cloud.channel.v1.BillableSku
 */
export type BillableSku = Message<"google.cloud.channel.v1.BillableSku"> & {
  /**
   * Resource name of Billable SKU. Format:
   * billableSkus/{sku}.
   * Example:
   * billableSkus/6E1B-6634-470F".
   *
   * @generated from field: string sku = 1;
   */
  sku: string;

  /**
   * Unique human readable name for the SKU.
   *
   * @generated from field: string sku_display_name = 2;
   */
  skuDisplayName: string;

  /**
   * Resource name of Service which contains Repricing SKU. Format:
   * services/{service}.
   * Example:
   * "services/B7D9-FDCB-15D8".
   *
   * @generated from field: string service = 3;
   */
  service: string;

  /**
   * Unique human readable name for the Service.
   *
   * @generated from field: string service_display_name = 4;
   */
  serviceDisplayName: string;
};

/**
 * Describes the message google.cloud.channel.v1.BillableSku.
 * Use `create(BillableSkuSchema)` to create a new message.
 */
export const BillableSkuSchema: GenMessage<BillableSku> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 41);

/**
 * Request message for
 * [CloudChannelService.CreateEntitlement][google.cloud.channel.v1.CloudChannelService.CreateEntitlement]
 *
 * @generated from message google.cloud.channel.v1.CreateEntitlementRequest
 */
export type CreateEntitlementRequest = Message<"google.cloud.channel.v1.CreateEntitlementRequest"> & {
  /**
   * Required. The resource name of the reseller's customer account in which to
   * create the entitlement. Parent uses the format:
   * accounts/{account_id}/customers/{customer_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The entitlement to create.
   *
   * @generated from field: google.cloud.channel.v1.Entitlement entitlement = 2;
   */
  entitlement?: Entitlement;

  /**
   * Optional. You can specify an optional unique request ID, and if you need to
   * retry your request, the server will know to ignore the request if it's
   * complete.
   *
   * For example, you make an initial request and the request times out. If you
   * make the request again with the same request ID, the server can check if
   * it received the original operation with the same request ID. If it did, it
   * will ignore the second request.
   *
   * The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   * with the exception that zero UUID is not supported
   * (`00000000-0000-0000-0000-000000000000`).
   *
   * @generated from field: string request_id = 5;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.channel.v1.CreateEntitlementRequest.
 * Use `create(CreateEntitlementRequestSchema)` to create a new message.
 */
export const CreateEntitlementRequestSchema: GenMessage<CreateEntitlementRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 42);

/**
 * Request message for
 * [CloudChannelService.TransferEntitlements][google.cloud.channel.v1.CloudChannelService.TransferEntitlements].
 *
 * @generated from message google.cloud.channel.v1.TransferEntitlementsRequest
 */
export type TransferEntitlementsRequest = Message<"google.cloud.channel.v1.TransferEntitlementsRequest"> & {
  /**
   * Required. The resource name of the reseller's customer account that will
   * receive transferred entitlements. Parent uses the format:
   * accounts/{account_id}/customers/{customer_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The new entitlements to create or transfer.
   *
   * @generated from field: repeated google.cloud.channel.v1.Entitlement entitlements = 2;
   */
  entitlements: Entitlement[];

  /**
   * The super admin of the resold customer generates this token to
   * authorize a reseller to access their Cloud Identity and purchase
   * entitlements on their behalf. You can omit this token after authorization.
   * See https://support.google.com/a/answer/7643790 for more details.
   *
   * @generated from field: string auth_token = 4;
   */
  authToken: string;

  /**
   * Optional. You can specify an optional unique request ID, and if you need to
   * retry your request, the server will know to ignore the request if it's
   * complete.
   *
   * For example, you make an initial request and the request times out. If you
   * make the request again with the same request ID, the server can check if
   * it received the original operation with the same request ID. If it did, it
   * will ignore the second request.
   *
   * The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   * with the exception that zero UUID is not supported
   * (`00000000-0000-0000-0000-000000000000`).
   *
   * @generated from field: string request_id = 6;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.channel.v1.TransferEntitlementsRequest.
 * Use `create(TransferEntitlementsRequestSchema)` to create a new message.
 */
export const TransferEntitlementsRequestSchema: GenMessage<TransferEntitlementsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 43);

/**
 * Response message for
 * [CloudChannelService.TransferEntitlements][google.cloud.channel.v1.CloudChannelService.TransferEntitlements].
 * This is put in the response field of google.longrunning.Operation.
 *
 * @generated from message google.cloud.channel.v1.TransferEntitlementsResponse
 */
export type TransferEntitlementsResponse = Message<"google.cloud.channel.v1.TransferEntitlementsResponse"> & {
  /**
   * The transferred entitlements.
   *
   * @generated from field: repeated google.cloud.channel.v1.Entitlement entitlements = 1;
   */
  entitlements: Entitlement[];
};

/**
 * Describes the message google.cloud.channel.v1.TransferEntitlementsResponse.
 * Use `create(TransferEntitlementsResponseSchema)` to create a new message.
 */
export const TransferEntitlementsResponseSchema: GenMessage<TransferEntitlementsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 44);

/**
 * Request message for
 * [CloudChannelService.TransferEntitlementsToGoogle][google.cloud.channel.v1.CloudChannelService.TransferEntitlementsToGoogle].
 *
 * @generated from message google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
 */
export type TransferEntitlementsToGoogleRequest = Message<"google.cloud.channel.v1.TransferEntitlementsToGoogleRequest"> & {
  /**
   * Required. The resource name of the reseller's customer account where the
   * entitlements transfer from. Parent uses the format:
   * accounts/{account_id}/customers/{customer_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The entitlements to transfer to Google.
   *
   * @generated from field: repeated google.cloud.channel.v1.Entitlement entitlements = 2;
   */
  entitlements: Entitlement[];

  /**
   * Optional. You can specify an optional unique request ID, and if you need to
   * retry your request, the server will know to ignore the request if it's
   * complete.
   *
   * For example, you make an initial request and the request times out. If you
   * make the request again with the same request ID, the server can check if
   * it received the original operation with the same request ID. If it did, it
   * will ignore the second request.
   *
   * The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   * with the exception that zero UUID is not supported
   * (`00000000-0000-0000-0000-000000000000`).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.channel.v1.TransferEntitlementsToGoogleRequest.
 * Use `create(TransferEntitlementsToGoogleRequestSchema)` to create a new message.
 */
export const TransferEntitlementsToGoogleRequestSchema: GenMessage<TransferEntitlementsToGoogleRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 45);

/**
 * Request message for [CloudChannelService.ChangeParametersRequest][].
 *
 * @generated from message google.cloud.channel.v1.ChangeParametersRequest
 */
export type ChangeParametersRequest = Message<"google.cloud.channel.v1.ChangeParametersRequest"> & {
  /**
   * Required. The name of the entitlement to update.
   * Name uses the format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Entitlement parameters to update. You can only change editable
   * parameters.
   *
   * To view the available Parameters for a request, refer to the
   * [Offer.parameter_definitions][google.cloud.channel.v1.Offer.parameter_definitions]
   * from the desired offer.
   *
   * @generated from field: repeated google.cloud.channel.v1.Parameter parameters = 2;
   */
  parameters: Parameter[];

  /**
   * Optional. You can specify an optional unique request ID, and if you need to
   * retry your request, the server will know to ignore the request if it's
   * complete.
   *
   * For example, you make an initial request and the request times out. If you
   * make the request again with the same request ID, the server can check if
   * it received the original operation with the same request ID. If it did, it
   * will ignore the second request.
   *
   * The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   * with the exception that zero UUID is not supported
   * (`00000000-0000-0000-0000-000000000000`).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. Purchase order ID provided by the reseller.
   *
   * @generated from field: string purchase_order_id = 5;
   */
  purchaseOrderId: string;
};

/**
 * Describes the message google.cloud.channel.v1.ChangeParametersRequest.
 * Use `create(ChangeParametersRequestSchema)` to create a new message.
 */
export const ChangeParametersRequestSchema: GenMessage<ChangeParametersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 46);

/**
 * Request message for
 * [CloudChannelService.ChangeRenewalSettings][google.cloud.channel.v1.CloudChannelService.ChangeRenewalSettings].
 *
 * @generated from message google.cloud.channel.v1.ChangeRenewalSettingsRequest
 */
export type ChangeRenewalSettingsRequest = Message<"google.cloud.channel.v1.ChangeRenewalSettingsRequest"> & {
  /**
   * Required. The name of the entitlement to update.
   * Name uses the format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. New renewal settings.
   *
   * @generated from field: google.cloud.channel.v1.RenewalSettings renewal_settings = 4;
   */
  renewalSettings?: RenewalSettings;

  /**
   * Optional. You can specify an optional unique request ID, and if you need to
   * retry your request, the server will know to ignore the request if it's
   * complete.
   *
   * For example, you make an initial request and the request times out. If you
   * make the request again with the same request ID, the server can check if
   * it received the original operation with the same request ID. If it did, it
   * will ignore the second request.
   *
   * The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   * with the exception that zero UUID is not supported
   * (`00000000-0000-0000-0000-000000000000`).
   *
   * @generated from field: string request_id = 5;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.channel.v1.ChangeRenewalSettingsRequest.
 * Use `create(ChangeRenewalSettingsRequestSchema)` to create a new message.
 */
export const ChangeRenewalSettingsRequestSchema: GenMessage<ChangeRenewalSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 47);

/**
 * Request message for
 * [CloudChannelService.ChangeOffer][google.cloud.channel.v1.CloudChannelService.ChangeOffer].
 *
 * @generated from message google.cloud.channel.v1.ChangeOfferRequest
 */
export type ChangeOfferRequest = Message<"google.cloud.channel.v1.ChangeOfferRequest"> & {
  /**
   * Required. The resource name of the entitlement to update.
   * Name uses the format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. New Offer.
   * Format: accounts/{account_id}/offers/{offer_id}.
   *
   * @generated from field: string offer = 2;
   */
  offer: string;

  /**
   * Optional. Parameters needed to purchase the Offer. To view the available
   * Parameters refer to the
   * [Offer.parameter_definitions][google.cloud.channel.v1.Offer.parameter_definitions]
   * from the desired offer.
   *
   * @generated from field: repeated google.cloud.channel.v1.Parameter parameters = 3;
   */
  parameters: Parameter[];

  /**
   * Optional. Purchase order id provided by the reseller.
   *
   * @generated from field: string purchase_order_id = 5;
   */
  purchaseOrderId: string;

  /**
   * Optional. You can specify an optional unique request ID, and if you need to
   * retry your request, the server will know to ignore the request if it's
   * complete.
   *
   * For example, you make an initial request and the request times out. If you
   * make the request again with the same request ID, the server can check if
   * it received the original operation with the same request ID. If it did, it
   * will ignore the second request.
   *
   * The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   * with the exception that zero UUID is not supported
   * (`00000000-0000-0000-0000-000000000000`).
   *
   * @generated from field: string request_id = 6;
   */
  requestId: string;

  /**
   * Optional. The billing account resource name that is used to pay for this
   * entitlement when setting up billing on a trial subscription.
   *
   * This field is only relevant for multi-currency accounts. It should be
   * left empty for single currency accounts.
   *
   * @generated from field: string billing_account = 7;
   */
  billingAccount: string;
};

/**
 * Describes the message google.cloud.channel.v1.ChangeOfferRequest.
 * Use `create(ChangeOfferRequestSchema)` to create a new message.
 */
export const ChangeOfferRequestSchema: GenMessage<ChangeOfferRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 48);

/**
 * Request message for
 * [CloudChannelService.StartPaidService][google.cloud.channel.v1.CloudChannelService.StartPaidService].
 *
 * @generated from message google.cloud.channel.v1.StartPaidServiceRequest
 */
export type StartPaidServiceRequest = Message<"google.cloud.channel.v1.StartPaidServiceRequest"> & {
  /**
   * Required. The name of the entitlement to start a paid service for.
   * Name uses the format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. You can specify an optional unique request ID, and if you need to
   * retry your request, the server will know to ignore the request if it's
   * complete.
   *
   * For example, you make an initial request and the request times out. If you
   * make the request again with the same request ID, the server can check if
   * it received the original operation with the same request ID. If it did, it
   * will ignore the second request.
   *
   * The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   * with the exception that zero UUID is not supported
   * (`00000000-0000-0000-0000-000000000000`).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.channel.v1.StartPaidServiceRequest.
 * Use `create(StartPaidServiceRequestSchema)` to create a new message.
 */
export const StartPaidServiceRequestSchema: GenMessage<StartPaidServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 49);

/**
 * Request message for
 * [CloudChannelService.CancelEntitlement][google.cloud.channel.v1.CloudChannelService.CancelEntitlement].
 *
 * @generated from message google.cloud.channel.v1.CancelEntitlementRequest
 */
export type CancelEntitlementRequest = Message<"google.cloud.channel.v1.CancelEntitlementRequest"> & {
  /**
   * Required. The resource name of the entitlement to cancel.
   * Name uses the format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. You can specify an optional unique request ID, and if you need to
   * retry your request, the server will know to ignore the request if it's
   * complete.
   *
   * For example, you make an initial request and the request times out. If you
   * make the request again with the same request ID, the server can check if
   * it received the original operation with the same request ID. If it did, it
   * will ignore the second request.
   *
   * The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   * with the exception that zero UUID is not supported
   * (`00000000-0000-0000-0000-000000000000`).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.channel.v1.CancelEntitlementRequest.
 * Use `create(CancelEntitlementRequestSchema)` to create a new message.
 */
export const CancelEntitlementRequestSchema: GenMessage<CancelEntitlementRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 50);

/**
 * Request message for
 * [CloudChannelService.SuspendEntitlement][google.cloud.channel.v1.CloudChannelService.SuspendEntitlement].
 *
 * @generated from message google.cloud.channel.v1.SuspendEntitlementRequest
 */
export type SuspendEntitlementRequest = Message<"google.cloud.channel.v1.SuspendEntitlementRequest"> & {
  /**
   * Required. The resource name of the entitlement to suspend.
   * Name uses the format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. You can specify an optional unique request ID, and if you need to
   * retry your request, the server will know to ignore the request if it's
   * complete.
   *
   * For example, you make an initial request and the request times out. If you
   * make the request again with the same request ID, the server can check if
   * it received the original operation with the same request ID. If it did, it
   * will ignore the second request.
   *
   * The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   * with the exception that zero UUID is not supported
   * (`00000000-0000-0000-0000-000000000000`).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.channel.v1.SuspendEntitlementRequest.
 * Use `create(SuspendEntitlementRequestSchema)` to create a new message.
 */
export const SuspendEntitlementRequestSchema: GenMessage<SuspendEntitlementRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 51);

/**
 * Request message for
 * [CloudChannelService.ActivateEntitlement][google.cloud.channel.v1.CloudChannelService.ActivateEntitlement].
 *
 * @generated from message google.cloud.channel.v1.ActivateEntitlementRequest
 */
export type ActivateEntitlementRequest = Message<"google.cloud.channel.v1.ActivateEntitlementRequest"> & {
  /**
   * Required. The resource name of the entitlement to activate.
   * Name uses the format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. You can specify an optional unique request ID, and if you need to
   * retry your request, the server will know to ignore the request if it's
   * complete.
   *
   * For example, you make an initial request and the request times out. If you
   * make the request again with the same request ID, the server can check if
   * it received the original operation with the same request ID. If it did, it
   * will ignore the second request.
   *
   * The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   * with the exception that zero UUID is not supported
   * (`00000000-0000-0000-0000-000000000000`).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.channel.v1.ActivateEntitlementRequest.
 * Use `create(ActivateEntitlementRequestSchema)` to create a new message.
 */
export const ActivateEntitlementRequestSchema: GenMessage<ActivateEntitlementRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 52);

/**
 * Request message for LookupOffer.
 *
 * @generated from message google.cloud.channel.v1.LookupOfferRequest
 */
export type LookupOfferRequest = Message<"google.cloud.channel.v1.LookupOfferRequest"> & {
  /**
   * Required. The resource name of the entitlement to retrieve the Offer.
   * Entitlement uses the format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string entitlement = 1;
   */
  entitlement: string;
};

/**
 * Describes the message google.cloud.channel.v1.LookupOfferRequest.
 * Use `create(LookupOfferRequestSchema)` to create a new message.
 */
export const LookupOfferRequestSchema: GenMessage<LookupOfferRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 53);

/**
 * Request message for ListProducts.
 *
 * @generated from message google.cloud.channel.v1.ListProductsRequest
 */
export type ListProductsRequest = Message<"google.cloud.channel.v1.ListProductsRequest"> & {
  /**
   * Required. The resource name of the reseller account.
   * Format: accounts/{account_id}.
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * Optional. Requested page size. Server might return fewer results than
   * requested. If unspecified, returns at most 100 Products. The maximum value
   * is 1000; the server will coerce values above 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token for a page of results other than the first page.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The BCP-47 language code. For example, "en-US". The
   * response will localize in the corresponding language code, if specified.
   * The default value is "en-US".
   *
   * @generated from field: string language_code = 4;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListProductsRequest.
 * Use `create(ListProductsRequestSchema)` to create a new message.
 */
export const ListProductsRequestSchema: GenMessage<ListProductsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 54);

/**
 * Response message for ListProducts.
 *
 * @generated from message google.cloud.channel.v1.ListProductsResponse
 */
export type ListProductsResponse = Message<"google.cloud.channel.v1.ListProductsResponse"> & {
  /**
   * List of Products requested.
   *
   * @generated from field: repeated google.cloud.channel.v1.Product products = 1;
   */
  products: Product[];

  /**
   * A token to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListProductsResponse.
 * Use `create(ListProductsResponseSchema)` to create a new message.
 */
export const ListProductsResponseSchema: GenMessage<ListProductsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 55);

/**
 * Request message for ListSkus.
 *
 * @generated from message google.cloud.channel.v1.ListSkusRequest
 */
export type ListSkusRequest = Message<"google.cloud.channel.v1.ListSkusRequest"> & {
  /**
   * Required. The resource name of the Product to list SKUs for.
   * Parent uses the format: products/{product_id}.
   * Supports products/- to retrieve SKUs for all products.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Resource name of the reseller.
   * Format: accounts/{account_id}.
   *
   * @generated from field: string account = 2;
   */
  account: string;

  /**
   * Optional. Requested page size. Server might return fewer results than
   * requested. If unspecified, returns at most 100 SKUs. The maximum value is
   * 1000; the server will coerce values above 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Optional. A token for a page of results other than the first page.
   * Optional.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Optional. The BCP-47 language code. For example, "en-US". The
   * response will localize in the corresponding language code, if specified.
   * The default value is "en-US".
   *
   * @generated from field: string language_code = 5;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListSkusRequest.
 * Use `create(ListSkusRequestSchema)` to create a new message.
 */
export const ListSkusRequestSchema: GenMessage<ListSkusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 56);

/**
 * Response message for ListSkus.
 *
 * @generated from message google.cloud.channel.v1.ListSkusResponse
 */
export type ListSkusResponse = Message<"google.cloud.channel.v1.ListSkusResponse"> & {
  /**
   * The list of SKUs requested.
   *
   * @generated from field: repeated google.cloud.channel.v1.Sku skus = 1;
   */
  skus: Sku[];

  /**
   * A token to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListSkusResponse.
 * Use `create(ListSkusResponseSchema)` to create a new message.
 */
export const ListSkusResponseSchema: GenMessage<ListSkusResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 57);

/**
 * Request message for ListOffers.
 *
 * @generated from message google.cloud.channel.v1.ListOffersRequest
 */
export type ListOffersRequest = Message<"google.cloud.channel.v1.ListOffersRequest"> & {
  /**
   * Required. The resource name of the reseller account from which to list
   * Offers. Parent uses the format: accounts/{account_id}.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Requested page size. Server might return fewer results than
   * requested. If unspecified, returns at most 500 Offers. The maximum value is
   * 1000; the server will coerce values above 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token for a page of results other than the first page.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The expression to filter results by name (name of
   * the Offer), sku.name (name of the SKU), or sku.product.name (name of the
   * Product).
   * Example 1: sku.product.name=products/p1 AND sku.name!=products/p1/skus/s1
   * Example 2: name=accounts/a1/offers/o1
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. The BCP-47 language code. For example, "en-US". The
   * response will localize in the corresponding language code, if specified.
   * The default value is "en-US".
   *
   * @generated from field: string language_code = 5;
   */
  languageCode: string;

  /**
   * Optional. A boolean flag that determines if a response returns future
   * offers 30 days from now. If the show_future_offers is true, the response
   * will only contain offers that are scheduled to be available 30 days from
   * now.
   *
   * @generated from field: bool show_future_offers = 7;
   */
  showFutureOffers: boolean;
};

/**
 * Describes the message google.cloud.channel.v1.ListOffersRequest.
 * Use `create(ListOffersRequestSchema)` to create a new message.
 */
export const ListOffersRequestSchema: GenMessage<ListOffersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 58);

/**
 * Response message for ListOffers.
 *
 * @generated from message google.cloud.channel.v1.ListOffersResponse
 */
export type ListOffersResponse = Message<"google.cloud.channel.v1.ListOffersResponse"> & {
  /**
   * The list of Offers requested.
   *
   * @generated from field: repeated google.cloud.channel.v1.Offer offers = 1;
   */
  offers: Offer[];

  /**
   * A token to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListOffersResponse.
 * Use `create(ListOffersResponseSchema)` to create a new message.
 */
export const ListOffersResponseSchema: GenMessage<ListOffersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 59);

/**
 * Request message for ListPurchasableSkus.
 *
 * @generated from message google.cloud.channel.v1.ListPurchasableSkusRequest
 */
export type ListPurchasableSkusRequest = Message<"google.cloud.channel.v1.ListPurchasableSkusRequest"> & {
  /**
   * Defines the intended purchase.
   *
   * @generated from oneof google.cloud.channel.v1.ListPurchasableSkusRequest.purchase_option
   */
  purchaseOption: {
    /**
     * List SKUs for CreateEntitlement purchase.
     *
     * @generated from field: google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase create_entitlement_purchase = 2;
     */
    value: ListPurchasableSkusRequest_CreateEntitlementPurchase;
    case: "createEntitlementPurchase";
  } | {
    /**
     * List SKUs for ChangeOffer purchase with a new SKU.
     *
     * @generated from field: google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase change_offer_purchase = 3;
     */
    value: ListPurchasableSkusRequest_ChangeOfferPurchase;
    case: "changeOfferPurchase";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the customer to list SKUs for.
   * Format: accounts/{account_id}/customers/{customer_id}.
   *
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * Optional. Requested page size. Server might return fewer results than
   * requested. If unspecified, returns at most 100 SKUs. The maximum value is
   * 1000; the server will coerce values above 1000.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * Optional. A token for a page of results other than the first page.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;

  /**
   * Optional. The BCP-47 language code. For example, "en-US". The
   * response will localize in the corresponding language code, if specified.
   * The default value is "en-US".
   *
   * @generated from field: string language_code = 6;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListPurchasableSkusRequest.
 * Use `create(ListPurchasableSkusRequestSchema)` to create a new message.
 */
export const ListPurchasableSkusRequestSchema: GenMessage<ListPurchasableSkusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 60);

/**
 * List SKUs for a new entitlement. Make the purchase using
 * [CloudChannelService.CreateEntitlement][google.cloud.channel.v1.CloudChannelService.CreateEntitlement].
 *
 * @generated from message google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
 */
export type ListPurchasableSkusRequest_CreateEntitlementPurchase = Message<"google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase"> & {
  /**
   * Required. List SKUs belonging to this Product.
   * Format: products/{product_id}.
   * Supports products/- to retrieve SKUs for all products.
   *
   * @generated from field: string product = 1;
   */
  product: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase.
 * Use `create(ListPurchasableSkusRequest_CreateEntitlementPurchaseSchema)` to create a new message.
 */
export const ListPurchasableSkusRequest_CreateEntitlementPurchaseSchema: GenMessage<ListPurchasableSkusRequest_CreateEntitlementPurchase> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 60, 0);

/**
 * List SKUs for upgrading or downgrading an entitlement. Make the purchase
 * using
 * [CloudChannelService.ChangeOffer][google.cloud.channel.v1.CloudChannelService.ChangeOffer].
 *
 * @generated from message google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
 */
export type ListPurchasableSkusRequest_ChangeOfferPurchase = Message<"google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase"> & {
  /**
   * Required. Resource name of the entitlement.
   * Format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string entitlement = 1;
   */
  entitlement: string;

  /**
   * Required. Change Type for the entitlement.
   *
   * @generated from field: google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.ChangeType change_type = 2;
   */
  changeType: ListPurchasableSkusRequest_ChangeOfferPurchase_ChangeType;
};

/**
 * Describes the message google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.
 * Use `create(ListPurchasableSkusRequest_ChangeOfferPurchaseSchema)` to create a new message.
 */
export const ListPurchasableSkusRequest_ChangeOfferPurchaseSchema: GenMessage<ListPurchasableSkusRequest_ChangeOfferPurchase> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 60, 1);

/**
 * Change Type enum.
 *
 * @generated from enum google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.ChangeType
 */
export enum ListPurchasableSkusRequest_ChangeOfferPurchase_ChangeType {
  /**
   * Not used.
   *
   * @generated from enum value: CHANGE_TYPE_UNSPECIFIED = 0;
   */
  CHANGE_TYPE_UNSPECIFIED = 0,

  /**
   * SKU is an upgrade on the current entitlement.
   *
   * @generated from enum value: UPGRADE = 1;
   */
  UPGRADE = 1,

  /**
   * SKU is a downgrade on the current entitlement.
   *
   * @generated from enum value: DOWNGRADE = 2;
   */
  DOWNGRADE = 2,
}

/**
 * Describes the enum google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.ChangeType.
 */
export const ListPurchasableSkusRequest_ChangeOfferPurchase_ChangeTypeSchema: GenEnum<ListPurchasableSkusRequest_ChangeOfferPurchase_ChangeType> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_service, 60, 1, 0);

/**
 * Response message for ListPurchasableSkus.
 *
 * @generated from message google.cloud.channel.v1.ListPurchasableSkusResponse
 */
export type ListPurchasableSkusResponse = Message<"google.cloud.channel.v1.ListPurchasableSkusResponse"> & {
  /**
   * The list of SKUs requested.
   *
   * @generated from field: repeated google.cloud.channel.v1.PurchasableSku purchasable_skus = 1;
   */
  purchasableSkus: PurchasableSku[];

  /**
   * A token to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListPurchasableSkusResponse.
 * Use `create(ListPurchasableSkusResponseSchema)` to create a new message.
 */
export const ListPurchasableSkusResponseSchema: GenMessage<ListPurchasableSkusResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 61);

/**
 * SKU that you can purchase. This is used in ListPurchasableSku API
 * response.
 *
 * @generated from message google.cloud.channel.v1.PurchasableSku
 */
export type PurchasableSku = Message<"google.cloud.channel.v1.PurchasableSku"> & {
  /**
   * SKU
   *
   * @generated from field: google.cloud.channel.v1.Sku sku = 1;
   */
  sku?: Sku;
};

/**
 * Describes the message google.cloud.channel.v1.PurchasableSku.
 * Use `create(PurchasableSkuSchema)` to create a new message.
 */
export const PurchasableSkuSchema: GenMessage<PurchasableSku> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 62);

/**
 * Request message for ListPurchasableOffers.
 *
 * @generated from message google.cloud.channel.v1.ListPurchasableOffersRequest
 */
export type ListPurchasableOffersRequest = Message<"google.cloud.channel.v1.ListPurchasableOffersRequest"> & {
  /**
   * Defines the intended purchase.
   *
   * @generated from oneof google.cloud.channel.v1.ListPurchasableOffersRequest.purchase_option
   */
  purchaseOption: {
    /**
     * List Offers for CreateEntitlement purchase.
     *
     * @generated from field: google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase create_entitlement_purchase = 2;
     */
    value: ListPurchasableOffersRequest_CreateEntitlementPurchase;
    case: "createEntitlementPurchase";
  } | {
    /**
     * List Offers for ChangeOffer purchase.
     *
     * @generated from field: google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase change_offer_purchase = 3;
     */
    value: ListPurchasableOffersRequest_ChangeOfferPurchase;
    case: "changeOfferPurchase";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the customer to list Offers for.
   * Format: accounts/{account_id}/customers/{customer_id}.
   *
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * Optional. Requested page size. Server might return fewer results than
   * requested. If unspecified, returns at most 100 Offers. The maximum value is
   * 1000; the server will coerce values above 1000.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * Optional. A token for a page of results other than the first page.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;

  /**
   * Optional. The BCP-47 language code. For example, "en-US". The
   * response will localize in the corresponding language code, if specified.
   * The default value is "en-US".
   *
   * @generated from field: string language_code = 6;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListPurchasableOffersRequest.
 * Use `create(ListPurchasableOffersRequestSchema)` to create a new message.
 */
export const ListPurchasableOffersRequestSchema: GenMessage<ListPurchasableOffersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 63);

/**
 * List Offers for CreateEntitlement purchase.
 *
 * @generated from message google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
 */
export type ListPurchasableOffersRequest_CreateEntitlementPurchase = Message<"google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase"> & {
  /**
   * Required. SKU that the result should be restricted to.
   * Format: products/{product_id}/skus/{sku_id}.
   *
   * @generated from field: string sku = 1;
   */
  sku: string;

  /**
   * Optional. Billing account that the result should be restricted to.
   * Format: accounts/{account_id}/billingAccounts/{billing_account_id}.
   *
   * @generated from field: string billing_account = 2;
   */
  billingAccount: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase.
 * Use `create(ListPurchasableOffersRequest_CreateEntitlementPurchaseSchema)` to create a new message.
 */
export const ListPurchasableOffersRequest_CreateEntitlementPurchaseSchema: GenMessage<ListPurchasableOffersRequest_CreateEntitlementPurchase> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 63, 0);

/**
 * List Offers for ChangeOffer purchase.
 *
 * @generated from message google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
 */
export type ListPurchasableOffersRequest_ChangeOfferPurchase = Message<"google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase"> & {
  /**
   * Required. Resource name of the entitlement.
   * Format:
   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *
   * @generated from field: string entitlement = 1;
   */
  entitlement: string;

  /**
   * Optional. Resource name of the new target SKU. Provide this SKU when
   * upgrading or downgrading an entitlement. Format:
   * products/{product_id}/skus/{sku_id}
   *
   * @generated from field: string new_sku = 2;
   */
  newSku: string;

  /**
   * Optional. Resource name of the new target Billing Account. Provide this
   * Billing Account when setting up billing for a trial subscription. Format:
   * accounts/{account_id}/billingAccounts/{billing_account_id}.
   *
   * This field is only relevant for multi-currency accounts. It should be
   * left empty for single currency accounts.
   *
   * @generated from field: string billing_account = 3;
   */
  billingAccount: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase.
 * Use `create(ListPurchasableOffersRequest_ChangeOfferPurchaseSchema)` to create a new message.
 */
export const ListPurchasableOffersRequest_ChangeOfferPurchaseSchema: GenMessage<ListPurchasableOffersRequest_ChangeOfferPurchase> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 63, 1);

/**
 * Response message for ListPurchasableOffers.
 *
 * @generated from message google.cloud.channel.v1.ListPurchasableOffersResponse
 */
export type ListPurchasableOffersResponse = Message<"google.cloud.channel.v1.ListPurchasableOffersResponse"> & {
  /**
   * The list of Offers requested.
   *
   * @generated from field: repeated google.cloud.channel.v1.PurchasableOffer purchasable_offers = 1;
   */
  purchasableOffers: PurchasableOffer[];

  /**
   * A token to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListPurchasableOffersResponse.
 * Use `create(ListPurchasableOffersResponseSchema)` to create a new message.
 */
export const ListPurchasableOffersResponseSchema: GenMessage<ListPurchasableOffersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 64);

/**
 * Offer that you can purchase for a customer. This is used in the
 * ListPurchasableOffer API response.
 *
 * @generated from message google.cloud.channel.v1.PurchasableOffer
 */
export type PurchasableOffer = Message<"google.cloud.channel.v1.PurchasableOffer"> & {
  /**
   * Offer.
   *
   * @generated from field: google.cloud.channel.v1.Offer offer = 1;
   */
  offer?: Offer;
};

/**
 * Describes the message google.cloud.channel.v1.PurchasableOffer.
 * Use `create(PurchasableOfferSchema)` to create a new message.
 */
export const PurchasableOfferSchema: GenMessage<PurchasableOffer> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 65);

/**
 * Request message for QueryEligibleBillingAccounts.
 *
 * @generated from message google.cloud.channel.v1.QueryEligibleBillingAccountsRequest
 */
export type QueryEligibleBillingAccountsRequest = Message<"google.cloud.channel.v1.QueryEligibleBillingAccountsRequest"> & {
  /**
   * Required. The resource name of the customer to list eligible billing
   * accounts for. Format: accounts/{account_id}/customers/{customer_id}.
   *
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * Required. List of SKUs to list eligible billing accounts for. At least one
   * SKU is required. Format: products/{product_id}/skus/{sku_id}.
   *
   * @generated from field: repeated string skus = 2;
   */
  skus: string[];
};

/**
 * Describes the message google.cloud.channel.v1.QueryEligibleBillingAccountsRequest.
 * Use `create(QueryEligibleBillingAccountsRequestSchema)` to create a new message.
 */
export const QueryEligibleBillingAccountsRequestSchema: GenMessage<QueryEligibleBillingAccountsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 66);

/**
 * Response message for QueryEligibleBillingAccounts.
 *
 * @generated from message google.cloud.channel.v1.QueryEligibleBillingAccountsResponse
 */
export type QueryEligibleBillingAccountsResponse = Message<"google.cloud.channel.v1.QueryEligibleBillingAccountsResponse"> & {
  /**
   * List of SKU purchase groups where each group represents a set of SKUs that
   * must be purchased using the same billing account. Each SKU from
   * [QueryEligibleBillingAccountsRequest.skus] will appear in exactly one SKU
   * group.
   *
   * @generated from field: repeated google.cloud.channel.v1.SkuPurchaseGroup sku_purchase_groups = 1;
   */
  skuPurchaseGroups: SkuPurchaseGroup[];
};

/**
 * Describes the message google.cloud.channel.v1.QueryEligibleBillingAccountsResponse.
 * Use `create(QueryEligibleBillingAccountsResponseSchema)` to create a new message.
 */
export const QueryEligibleBillingAccountsResponseSchema: GenMessage<QueryEligibleBillingAccountsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 67);

/**
 * Represents a set of SKUs that must be purchased using the same billing
 * account.
 *
 * @generated from message google.cloud.channel.v1.SkuPurchaseGroup
 */
export type SkuPurchaseGroup = Message<"google.cloud.channel.v1.SkuPurchaseGroup"> & {
  /**
   * Resource names of the SKUs included in this group.
   * Format: products/{product_id}/skus/{sku_id}.
   *
   * @generated from field: repeated string skus = 1;
   */
  skus: string[];

  /**
   * List of billing accounts that are eligible to purhcase these SKUs.
   *
   * @generated from field: repeated google.cloud.channel.v1.BillingAccountPurchaseInfo billing_account_purchase_infos = 2;
   */
  billingAccountPurchaseInfos: BillingAccountPurchaseInfo[];
};

/**
 * Describes the message google.cloud.channel.v1.SkuPurchaseGroup.
 * Use `create(SkuPurchaseGroupSchema)` to create a new message.
 */
export const SkuPurchaseGroupSchema: GenMessage<SkuPurchaseGroup> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 68);

/**
 * Represents a billing account that can be used to make a purchase.
 *
 * @generated from message google.cloud.channel.v1.BillingAccountPurchaseInfo
 */
export type BillingAccountPurchaseInfo = Message<"google.cloud.channel.v1.BillingAccountPurchaseInfo"> & {
  /**
   * The billing account resource.
   *
   * @generated from field: google.cloud.channel.v1.BillingAccount billing_account = 1;
   */
  billingAccount?: BillingAccount;
};

/**
 * Describes the message google.cloud.channel.v1.BillingAccountPurchaseInfo.
 * Use `create(BillingAccountPurchaseInfoSchema)` to create a new message.
 */
export const BillingAccountPurchaseInfoSchema: GenMessage<BillingAccountPurchaseInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 69);

/**
 * Request Message for RegisterSubscriber.
 *
 * @generated from message google.cloud.channel.v1.RegisterSubscriberRequest
 */
export type RegisterSubscriberRequest = Message<"google.cloud.channel.v1.RegisterSubscriberRequest"> & {
  /**
   * Required. Resource name of the account.
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * Required. Service account that provides subscriber access to the registered
   * topic.
   *
   * @generated from field: string service_account = 2;
   */
  serviceAccount: string;
};

/**
 * Describes the message google.cloud.channel.v1.RegisterSubscriberRequest.
 * Use `create(RegisterSubscriberRequestSchema)` to create a new message.
 */
export const RegisterSubscriberRequestSchema: GenMessage<RegisterSubscriberRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 70);

/**
 * Response Message for RegisterSubscriber.
 *
 * @generated from message google.cloud.channel.v1.RegisterSubscriberResponse
 */
export type RegisterSubscriberResponse = Message<"google.cloud.channel.v1.RegisterSubscriberResponse"> & {
  /**
   * Name of the topic the subscriber will listen to.
   *
   * @generated from field: string topic = 1;
   */
  topic: string;
};

/**
 * Describes the message google.cloud.channel.v1.RegisterSubscriberResponse.
 * Use `create(RegisterSubscriberResponseSchema)` to create a new message.
 */
export const RegisterSubscriberResponseSchema: GenMessage<RegisterSubscriberResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 71);

/**
 * Request Message for UnregisterSubscriber.
 *
 * @generated from message google.cloud.channel.v1.UnregisterSubscriberRequest
 */
export type UnregisterSubscriberRequest = Message<"google.cloud.channel.v1.UnregisterSubscriberRequest"> & {
  /**
   * Required. Resource name of the account.
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * Required. Service account to unregister from subscriber access to the
   * topic.
   *
   * @generated from field: string service_account = 2;
   */
  serviceAccount: string;
};

/**
 * Describes the message google.cloud.channel.v1.UnregisterSubscriberRequest.
 * Use `create(UnregisterSubscriberRequestSchema)` to create a new message.
 */
export const UnregisterSubscriberRequestSchema: GenMessage<UnregisterSubscriberRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 72);

/**
 * Response Message for UnregisterSubscriber.
 *
 * @generated from message google.cloud.channel.v1.UnregisterSubscriberResponse
 */
export type UnregisterSubscriberResponse = Message<"google.cloud.channel.v1.UnregisterSubscriberResponse"> & {
  /**
   * Name of the topic the service account subscriber access was removed from.
   *
   * @generated from field: string topic = 1;
   */
  topic: string;
};

/**
 * Describes the message google.cloud.channel.v1.UnregisterSubscriberResponse.
 * Use `create(UnregisterSubscriberResponseSchema)` to create a new message.
 */
export const UnregisterSubscriberResponseSchema: GenMessage<UnregisterSubscriberResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 73);

/**
 * Request Message for ListSubscribers.
 *
 * @generated from message google.cloud.channel.v1.ListSubscribersRequest
 */
export type ListSubscribersRequest = Message<"google.cloud.channel.v1.ListSubscribersRequest"> & {
  /**
   * Required. Resource name of the account.
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * Optional. The maximum number of service accounts to return. The service may
   * return fewer than this value. If unspecified, returns at most 100 service
   * accounts. The maximum value is 1000; the server will coerce values above
   * 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous `ListSubscribers` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListSubscribers` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListSubscribersRequest.
 * Use `create(ListSubscribersRequestSchema)` to create a new message.
 */
export const ListSubscribersRequestSchema: GenMessage<ListSubscribersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 74);

/**
 * Response Message for ListSubscribers.
 *
 * @generated from message google.cloud.channel.v1.ListSubscribersResponse
 */
export type ListSubscribersResponse = Message<"google.cloud.channel.v1.ListSubscribersResponse"> & {
  /**
   * Name of the topic registered with the reseller.
   *
   * @generated from field: string topic = 1;
   */
  topic: string;

  /**
   * List of service accounts which have subscriber access to the topic.
   *
   * @generated from field: repeated string service_accounts = 2;
   */
  serviceAccounts: string[];

  /**
   * A token that can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListSubscribersResponse.
 * Use `create(ListSubscribersResponseSchema)` to create a new message.
 */
export const ListSubscribersResponseSchema: GenMessage<ListSubscribersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 75);

/**
 * Request message for
 * [CloudChannelService.ListEntitlementChanges][google.cloud.channel.v1.CloudChannelService.ListEntitlementChanges]
 *
 * @generated from message google.cloud.channel.v1.ListEntitlementChangesRequest
 */
export type ListEntitlementChangesRequest = Message<"google.cloud.channel.v1.ListEntitlementChangesRequest"> & {
  /**
   * Required. The resource name of the entitlement for which to list
   * entitlement changes. The `-` wildcard may be used to match entitlements
   * across a customer. Formats:
   *
   *   * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   *   * accounts/{account_id}/customers/{customer_id}/entitlements/-
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of entitlement changes to return. The service
   * may return fewer than this value. If unspecified, returns at most 10
   * entitlement changes. The maximum value is 50; the server will coerce values
   * above 50.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous
   * [CloudChannelService.ListEntitlementChanges][google.cloud.channel.v1.CloudChannelService.ListEntitlementChanges]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [CloudChannelService.ListEntitlementChanges][google.cloud.channel.v1.CloudChannelService.ListEntitlementChanges]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filters applied to the list results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListEntitlementChangesRequest.
 * Use `create(ListEntitlementChangesRequestSchema)` to create a new message.
 */
export const ListEntitlementChangesRequestSchema: GenMessage<ListEntitlementChangesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 76);

/**
 * Response message for
 * [CloudChannelService.ListEntitlementChanges][google.cloud.channel.v1.CloudChannelService.ListEntitlementChanges]
 *
 * @generated from message google.cloud.channel.v1.ListEntitlementChangesResponse
 */
export type ListEntitlementChangesResponse = Message<"google.cloud.channel.v1.ListEntitlementChangesResponse"> & {
  /**
   * The list of entitlement changes.
   *
   * @generated from field: repeated google.cloud.channel.v1.EntitlementChange entitlement_changes = 1;
   */
  entitlementChanges: EntitlementChange[];

  /**
   * A token to list the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.channel.v1.ListEntitlementChangesResponse.
 * Use `create(ListEntitlementChangesResponseSchema)` to create a new message.
 */
export const ListEntitlementChangesResponseSchema: GenMessage<ListEntitlementChangesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_service, 77);

/**
 * CloudChannelService lets Google cloud resellers and distributors manage
 * their customers, channel partners, entitlements, and reports.
 *
 * Using this service:
 * 1. Resellers and distributors can manage a customer entity.
 * 2. Distributors can register an authorized reseller in their channel and
 *    provide them with delegated admin access.
 * 3. Resellers and distributors can manage customer entitlements.
 *
 * CloudChannelService exposes the following resources:
 * - [Customer][google.cloud.channel.v1.Customer]s: An entity-usually an
 * enterprise-managed by a reseller or distributor.
 *
 * - [Entitlement][google.cloud.channel.v1.Entitlement]s: An entity that
 * provides a customer with the means to use a service. Entitlements are created
 * or updated as a result of a successful fulfillment.
 *
 * - [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]s: An
 * entity that identifies links between distributors and their indirect
 * resellers in a channel.
 *
 * @generated from service google.cloud.channel.v1.CloudChannelService
 */
export const CloudChannelService: GenService<{
  /**
   * List [Customer][google.cloud.channel.v1.Customer]s.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * List of [Customer][google.cloud.channel.v1.Customer]s, or an empty list if
   * there are no customers.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListCustomers
   */
  listCustomers: {
    methodKind: "unary";
    input: typeof ListCustomersRequestSchema;
    output: typeof ListCustomersResponseSchema;
  },
  /**
   * Returns the requested [Customer][google.cloud.channel.v1.Customer]
   * resource.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The customer resource doesn't exist. Usually the result of an
   * invalid name parameter.
   *
   * Return value:
   * The [Customer][google.cloud.channel.v1.Customer] resource.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.GetCustomer
   */
  getCustomer: {
    methodKind: "unary";
    input: typeof GetCustomerRequestSchema;
    output: typeof CustomerSchema;
  },
  /**
   * Confirms the existence of Cloud Identity accounts based on the domain and
   * if the Cloud Identity accounts are owned by the reseller.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * INVALID_VALUE: Invalid domain value in the request.
   *
   * Return value:
   * A list of
   * [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
   * resources for the domain (may be empty)
   *
   * Note: in the v1alpha1 version of the API, a NOT_FOUND error returns if
   * no
   * [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
   * resources match the domain.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.CheckCloudIdentityAccountsExist
   */
  checkCloudIdentityAccountsExist: {
    methodKind: "unary";
    input: typeof CheckCloudIdentityAccountsExistRequestSchema;
    output: typeof CheckCloudIdentityAccountsExistResponseSchema;
  },
  /**
   * Creates a new [Customer][google.cloud.channel.v1.Customer] resource under
   * the reseller or distributor account.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED:
   *     * The reseller account making the request is different from the
   *     reseller account in the API request.
   *     * You are not authorized to create a customer. See
   *     https://support.google.com/channelservices/answer/9759265
   * * INVALID_ARGUMENT:
   *     * Required request parameters are missing or invalid.
   *     * Domain field value doesn't match the primary email domain.
   *
   * Return value:
   * The newly created [Customer][google.cloud.channel.v1.Customer] resource.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.CreateCustomer
   */
  createCustomer: {
    methodKind: "unary";
    input: typeof CreateCustomerRequestSchema;
    output: typeof CustomerSchema;
  },
  /**
   * Updates an existing [Customer][google.cloud.channel.v1.Customer] resource
   * for the reseller or distributor.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
   * for the name in the request.
   *
   * Return value:
   * The updated [Customer][google.cloud.channel.v1.Customer] resource.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.UpdateCustomer
   */
  updateCustomer: {
    methodKind: "unary";
    input: typeof UpdateCustomerRequestSchema;
    output: typeof CustomerSchema;
  },
  /**
   * Deletes the given [Customer][google.cloud.channel.v1.Customer] permanently.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The account making the request does not own
   * this customer.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * FAILED_PRECONDITION: The customer has existing entitlements.
   * * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
   * for the name in the request.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.DeleteCustomer
   */
  deleteCustomer: {
    methodKind: "unary";
    input: typeof DeleteCustomerRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Imports a [Customer][google.cloud.channel.v1.Customer] from the Cloud
   * Identity associated with the provided Cloud Identity ID or domain before a
   * TransferEntitlements call. If a linked Customer already exists and
   * overwrite_if_exists is true, it will update that Customer's data.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED:
   *     * The reseller account making the request is different from the
   *     reseller account in the API request.
   *     * You are not authorized to import the customer. See
   *     https://support.google.com/channelservices/answer/9759265
   * * NOT_FOUND: Cloud Identity doesn't exist or was deleted.
   * * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
   * expired or invalid.
   * * ALREADY_EXISTS: A customer already exists and has conflicting critical
   * fields. Requires an overwrite.
   *
   * Return value:
   * The [Customer][google.cloud.channel.v1.Customer].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ImportCustomer
   */
  importCustomer: {
    methodKind: "unary";
    input: typeof ImportCustomerRequestSchema;
    output: typeof CustomerSchema;
  },
  /**
   * Creates a Cloud Identity for the given customer using the customer's
   * information, or the information provided here.
   *
   * Possible error codes:
   *
   * *  PERMISSION_DENIED:
   *      * The customer doesn't belong to the reseller.
   *      * You are not authorized to provision cloud identity id. See
   *      https://support.google.com/channelservices/answer/9759265
   * *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * *  NOT_FOUND: The customer was not found.
   * *  ALREADY_EXISTS: The customer's primary email already exists. Retry
   *    after changing the customer's primary contact email.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata contains an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ProvisionCloudIdentity
   */
  provisionCloudIdentity: {
    methodKind: "unary";
    input: typeof ProvisionCloudIdentityRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists [Entitlement][google.cloud.channel.v1.Entitlement]s belonging to a
   * customer.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * A list of the customer's
   * [Entitlement][google.cloud.channel.v1.Entitlement]s.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListEntitlements
   */
  listEntitlements: {
    methodKind: "unary";
    input: typeof ListEntitlementsRequestSchema;
    output: typeof ListEntitlementsResponseSchema;
  },
  /**
   * List [TransferableSku][google.cloud.channel.v1.TransferableSku]s of a
   * customer based on the Cloud Identity ID or Customer Name in the request.
   *
   * Use this method to list the entitlements information of an
   * unowned customer. You should provide the customer's
   * Cloud Identity ID or Customer Name.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED:
   *     * The customer doesn't belong to the reseller and has no auth token.
   *     * The supplied auth token is invalid.
   *     * The reseller account making the request is different
   *     from the reseller account in the query.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * A list of the customer's
   * [TransferableSku][google.cloud.channel.v1.TransferableSku].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListTransferableSkus
   */
  listTransferableSkus: {
    methodKind: "unary";
    input: typeof ListTransferableSkusRequestSchema;
    output: typeof ListTransferableSkusResponseSchema;
  },
  /**
   * List [TransferableOffer][google.cloud.channel.v1.TransferableOffer]s of a
   * customer based on Cloud Identity ID or Customer Name in the request.
   *
   * Use this method when a reseller gets the entitlement information of an
   * unowned customer. The reseller should provide the customer's
   * Cloud Identity ID or Customer Name.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED:
   *     * The customer doesn't belong to the reseller and has no auth token.
   *     * The customer provided incorrect reseller information when generating
   *     auth token.
   *     * The reseller account making the request is different
   *     from the reseller account in the query.
   *     * The reseller is not authorized to transact on this Product. See
   *     https://support.google.com/channelservices/answer/9759265
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * List of [TransferableOffer][google.cloud.channel.v1.TransferableOffer] for
   * the given customer and SKU.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListTransferableOffers
   */
  listTransferableOffers: {
    methodKind: "unary";
    input: typeof ListTransferableOffersRequestSchema;
    output: typeof ListTransferableOffersResponseSchema;
  },
  /**
   * Returns the requested [Entitlement][google.cloud.channel.v1.Entitlement]
   * resource.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The customer entitlement was not found.
   *
   * Return value:
   * The requested [Entitlement][google.cloud.channel.v1.Entitlement] resource.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.GetEntitlement
   */
  getEntitlement: {
    methodKind: "unary";
    input: typeof GetEntitlementRequestSchema;
    output: typeof EntitlementSchema;
  },
  /**
   * Creates an entitlement for a customer.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED:
   *     * The customer doesn't belong to the reseller.
   *     * The reseller is not authorized to transact on this Product. See
   *     https://support.google.com/channelservices/answer/9759265
   * * INVALID_ARGUMENT:
   *     * Required request parameters are missing or invalid.
   *     * There is already a customer entitlement for a SKU from the same
   *     product family.
   * * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact
   * Google Channel support for further troubleshooting.
   * * NOT_FOUND: The customer or offer resource was not found.
   * * ALREADY_EXISTS:
   *     * The SKU was already purchased for the customer.
   *     * The customer's primary email already exists. Retry
   *     after changing the customer's primary contact email.
   * * CONDITION_NOT_MET or FAILED_PRECONDITION:
   *     * The domain required for purchasing a SKU has not been verified.
   *     * A pre-requisite SKU required to purchase an Add-On SKU is missing.
   *     For example, Google Workspace Business Starter is required to purchase
   *     Vault or Drive.
   *     * (Developer accounts only) Reseller and resold domain must meet the
   *     following naming requirements:
   *         * Domain names must start with goog-test.
   *         * Domain names must include the reseller domain.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.CreateEntitlement
   */
  createEntitlement: {
    methodKind: "unary";
    input: typeof CreateEntitlementRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Change parameters of the entitlement.
   *
   * An entitlement update is a long-running operation and it updates the
   * entitlement as a result of fulfillment.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * For example, the number of seats being changed is greater than the allowed
   * number of max seats, or decreasing seats for a commitment based plan.
   * * NOT_FOUND: Entitlement resource not found.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ChangeParameters
   */
  changeParameters: {
    methodKind: "unary";
    input: typeof ChangeParametersRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the renewal settings for an existing customer entitlement.
   *
   * An entitlement update is a long-running operation and it updates the
   * entitlement as a result of fulfillment.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement resource not found.
   * * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a
   * commitment plan. Can't enable or disable renewals for non-commitment plans.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   *   Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ChangeRenewalSettings
   */
  changeRenewalSettings: {
    methodKind: "unary";
    input: typeof ChangeRenewalSettingsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the Offer for an existing customer entitlement.
   *
   * An entitlement update is a long-running operation and it updates the
   * entitlement as a result of fulfillment.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Offer or Entitlement resource not found.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ChangeOffer
   */
  changeOffer: {
    methodKind: "unary";
    input: typeof ChangeOfferRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Starts paid service for a trial entitlement.
   *
   * Starts paid service for a trial entitlement immediately. This method is
   * only applicable if a plan is set up for a trial entitlement but has some
   * trial days remaining.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement resource not found.
   * * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for
   * entitlement on trial plans.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.StartPaidService
   */
  startPaidService: {
    methodKind: "unary";
    input: typeof StartPaidServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Suspends a previously fulfilled entitlement.
   *
   * An entitlement suspension is a long-running operation.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement resource not found.
   * * NOT_ACTIVE: Entitlement is not active.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.SuspendEntitlement
   */
  suspendEntitlement: {
    methodKind: "unary";
    input: typeof SuspendEntitlementRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Cancels a previously fulfilled entitlement.
   *
   * An entitlement cancellation is a long-running operation.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * FAILED_PRECONDITION: There are Google Cloud projects linked to the
   * Google Cloud entitlement's Cloud Billing subaccount.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement resource not found.
   * * DELETION_TYPE_NOT_ALLOWED: Cancel is only allowed for Google Workspace
   * add-ons, or entitlements for Google Cloud's development platform.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The response will contain
   * google.protobuf.Empty on success. The Operation metadata will contain an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.CancelEntitlement
   */
  cancelEntitlement: {
    methodKind: "unary";
    input: typeof CancelEntitlementRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Activates a previously suspended entitlement. Entitlements suspended for
   * pending ToS acceptance can't be activated using this method.
   *
   * An entitlement activation is a long-running operation and it updates
   * the state of the customer entitlement.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement resource not found.
   * * SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated
   * suspensions and entitlements that have accepted the TOS.
   * * NOT_SUSPENDED: Can only activate suspended entitlements not in an ACTIVE
   * state.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ActivateEntitlement
   */
  activateEntitlement: {
    methodKind: "unary";
    input: typeof ActivateEntitlementRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Transfers customer entitlements to new reseller.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED:
   *     * The customer doesn't belong to the reseller.
   *     * The reseller is not authorized to transact on this Product. See
   *     https://support.google.com/channelservices/answer/9759265
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The customer or offer resource was not found.
   * * ALREADY_EXISTS: The SKU was already transferred for the customer.
   * * CONDITION_NOT_MET or FAILED_PRECONDITION:
   *     * The SKU requires domain verification to transfer, but the domain is
   *     not verified.
   *     * An Add-On SKU (example, Vault or Drive) is missing the
   *     pre-requisite SKU (example, G Suite Basic).
   *     * (Developer accounts only) Reseller and resold domain must meet the
   *     following naming requirements:
   *         * Domain names must start with goog-test.
   *         * Domain names must include the reseller domain.
   *     * Specify all transferring entitlements.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.TransferEntitlements
   */
  transferEntitlements: {
    methodKind: "unary";
    input: typeof TransferEntitlementsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Transfers customer entitlements from their current reseller to Google.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The customer or offer resource was not found.
   * * ALREADY_EXISTS: The SKU was already transferred for the customer.
   * * CONDITION_NOT_MET or FAILED_PRECONDITION:
   *     * The SKU requires domain verification to transfer, but the domain is
   *     not verified.
   *     * An Add-On SKU (example, Vault or Drive) is missing the
   *     pre-requisite SKU (example, G Suite Basic).
   *     * (Developer accounts only) Reseller and resold domain must meet the
   *     following naming requirements:
   *         * Domain names must start with goog-test.
   *         * Domain names must include the reseller domain.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The response will contain
   * google.protobuf.Empty on success. The Operation metadata will contain an
   * instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.TransferEntitlementsToGoogle
   */
  transferEntitlementsToGoogle: {
    methodKind: "unary";
    input: typeof TransferEntitlementsToGoogleRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * List [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]s
   * belonging to a distributor. You must be a distributor to call this method.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * The list of the distributor account's
   * [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resources.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListChannelPartnerLinks
   */
  listChannelPartnerLinks: {
    methodKind: "unary";
    input: typeof ListChannelPartnerLinksRequestSchema;
    output: typeof ListChannelPartnerLinksResponseSchema;
  },
  /**
   * Returns the requested
   * [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
   * You must be a distributor to call this method.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: ChannelPartnerLink resource not found because of an
   * invalid channel partner link name.
   *
   * Return value:
   * The [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
   * resource.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.GetChannelPartnerLink
   */
  getChannelPartnerLink: {
    methodKind: "unary";
    input: typeof GetChannelPartnerLinkRequestSchema;
    output: typeof ChannelPartnerLinkSchema;
  },
  /**
   * Initiates a channel partner link between a distributor and a reseller, or
   * between resellers in an n-tier reseller channel.
   * Invited partners need to follow the invite_link_uri provided in the
   * response to accept. After accepting the invitation, a link is set up
   * between the two parties.
   * You must be a distributor to call this method.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already
   * exists.
   * * NOT_FOUND: No Cloud Identity customer exists for provided domain.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The new [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
   * resource.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerLink
   */
  createChannelPartnerLink: {
    methodKind: "unary";
    input: typeof CreateChannelPartnerLinkRequestSchema;
    output: typeof ChannelPartnerLinkSchema;
  },
  /**
   * Updates a channel partner link. Distributors call this method to change a
   * link's status. For example, to suspend a partner link.
   * You must be a distributor to call this method.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT:
   *     * Required request parameters are missing or invalid.
   *     * Link state cannot change from invited to active or suspended.
   *     * Cannot send reseller_cloud_identity_id, invite_url, or name in update
   *     mask.
   * * NOT_FOUND: ChannelPartnerLink resource not found.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The updated
   * [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.UpdateChannelPartnerLink
   */
  updateChannelPartnerLink: {
    methodKind: "unary";
    input: typeof UpdateChannelPartnerLinkRequestSchema;
    output: typeof ChannelPartnerLinkSchema;
  },
  /**
   * Gets information about how a Reseller modifies their bill before sending
   * it to a Customer.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * NOT_FOUND: The
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * was not found.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * resource, otherwise returns an error.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.GetCustomerRepricingConfig
   */
  getCustomerRepricingConfig: {
    methodKind: "unary";
    input: typeof GetCustomerRepricingConfigRequestSchema;
    output: typeof CustomerRepricingConfigSchema;
  },
  /**
   * Lists information about how a Reseller modifies their bill before sending
   * it to a Customer.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * NOT_FOUND: The
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * resources. The data for each resource is displayed in the ascending order
   * of:
   *
   * * Customer ID
   * * [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement]
   * * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
   * * [CustomerRepricingConfig.update_time][google.cloud.channel.v1.CustomerRepricingConfig.update_time]
   *
   * If unsuccessful, returns an error.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListCustomerRepricingConfigs
   */
  listCustomerRepricingConfigs: {
    methodKind: "unary";
    input: typeof ListCustomerRepricingConfigsRequestSchema;
    output: typeof ListCustomerRepricingConfigsResponseSchema;
  },
  /**
   * Creates a CustomerRepricingConfig. Call this method to set modifications
   * for a specific customer's bill. You can only create configs if the
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
   * is a future month. If needed, you can create a config for the current
   * month, with some restrictions.
   *
   * When creating a config for a future month, make sure there are no existing
   * configs for that
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
   *
   * The following restrictions are for creating configs in the current month.
   *
   * * This functionality is reserved for recovering from an erroneous config,
   * and should not be used for regular business cases.
   * * The new config will not modify exports used with other configs.
   * Changes to the config may be immediate, but may take up to 24 hours.
   * * There is a limit of ten configs for any
   * [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
   * for any
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
   * * The contained
   * [CustomerRepricingConfig.repricing_config][google.cloud.channel.v1.CustomerRepricingConfig.repricing_config]
   * value must be different from the value used in the current config for a
   * [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement].
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * INVALID_ARGUMENT: Missing or invalid required parameters in the
   * request. Also displays if the updated config is for the current month or
   * past months.
   * * NOT_FOUND: The
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the updated
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * resource, otherwise returns an error.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfig
   */
  createCustomerRepricingConfig: {
    methodKind: "unary";
    input: typeof CreateCustomerRepricingConfigRequestSchema;
    output: typeof CustomerRepricingConfigSchema;
  },
  /**
   * Updates a CustomerRepricingConfig. Call this method to set modifications
   * for a specific customer's bill. This method overwrites the existing
   * CustomerRepricingConfig.
   *
   * You can only update configs if the
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
   * is a future month. To make changes to configs for the current month, use
   * [CreateCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfig],
   * taking note of its restrictions. You cannot update the
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
   *
   * When updating a config in the future:
   *
   * * This config must already exist.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * INVALID_ARGUMENT: Missing or invalid required parameters in the
   * request. Also displays if the updated config is for the current month or
   * past months.
   * * NOT_FOUND: The
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the updated
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * resource, otherwise returns an error.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.UpdateCustomerRepricingConfig
   */
  updateCustomerRepricingConfig: {
    methodKind: "unary";
    input: typeof UpdateCustomerRepricingConfigRequestSchema;
    output: typeof CustomerRepricingConfigSchema;
  },
  /**
   * Deletes the given
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * permanently. You can only delete configs if their
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
   * is set to a date after the current month.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The account making the request does not own
   * this customer.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * FAILED_PRECONDITION: The
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * is active or in the past.
   * * NOT_FOUND: No
   * [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
   * found for the name in the request.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.DeleteCustomerRepricingConfig
   */
  deleteCustomerRepricingConfig: {
    methodKind: "unary";
    input: typeof DeleteCustomerRepricingConfigRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets information about how a Distributor modifies their bill before sending
   * it to a ChannelPartner.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * NOT_FOUND: The
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * was not found.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * resource, otherwise returns an error.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.GetChannelPartnerRepricingConfig
   */
  getChannelPartnerRepricingConfig: {
    methodKind: "unary";
    input: typeof GetChannelPartnerRepricingConfigRequestSchema;
    output: typeof ChannelPartnerRepricingConfigSchema;
  },
  /**
   * Lists information about how a Reseller modifies their bill before sending
   * it to a ChannelPartner.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * NOT_FOUND: The
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * resources. The data for each resource is displayed in the ascending order
   * of:
   *
   * * Channel Partner ID
   * * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
   * * [ChannelPartnerRepricingConfig.update_time][google.cloud.channel.v1.ChannelPartnerRepricingConfig.update_time]
   *
   * If unsuccessful, returns an error.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListChannelPartnerRepricingConfigs
   */
  listChannelPartnerRepricingConfigs: {
    methodKind: "unary";
    input: typeof ListChannelPartnerRepricingConfigsRequestSchema;
    output: typeof ListChannelPartnerRepricingConfigsResponseSchema;
  },
  /**
   * Creates a ChannelPartnerRepricingConfig. Call this method to set
   * modifications for a specific ChannelPartner's bill. You can only create
   * configs if the
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
   * is a future month. If needed, you can create a config for the current
   * month, with some restrictions.
   *
   * When creating a config for a future month, make sure there are no existing
   * configs for that
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
   *
   * The following restrictions are for creating configs in the current month.
   *
   * * This functionality is reserved for recovering from an erroneous config,
   * and should not be used for regular business cases.
   * * The new config will not modify exports used with other configs.
   * Changes to the config may be immediate, but may take up to 24 hours.
   * * There is a limit of ten configs for any ChannelPartner or
   * [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
   * for any
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
   * * The contained
   * [ChannelPartnerRepricingConfig.repricing_config][google.cloud.channel.v1.ChannelPartnerRepricingConfig.repricing_config]
   * value must be different from the value used in the current config for a
   * ChannelPartner.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * INVALID_ARGUMENT: Missing or invalid required parameters in the
   * request. Also displays if the updated config is for the current month or
   * past months.
   * * NOT_FOUND: The
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the updated
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * resource, otherwise returns an error.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfig
   */
  createChannelPartnerRepricingConfig: {
    methodKind: "unary";
    input: typeof CreateChannelPartnerRepricingConfigRequestSchema;
    output: typeof ChannelPartnerRepricingConfigSchema;
  },
  /**
   * Updates a ChannelPartnerRepricingConfig. Call this method to set
   * modifications for a specific ChannelPartner's bill. This method overwrites
   * the existing CustomerRepricingConfig.
   *
   * You can only update configs if the
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
   * is a future month. To make changes to configs for the current month, use
   * [CreateChannelPartnerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfig],
   * taking note of its restrictions. You cannot update the
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
   *
   * When updating a config in the future:
   *
   * * This config must already exist.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * INVALID_ARGUMENT: Missing or invalid required parameters in the
   * request. Also displays if the updated config is for the current month or
   * past months.
   * * NOT_FOUND: The
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the updated
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * resource, otherwise returns an error.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.UpdateChannelPartnerRepricingConfig
   */
  updateChannelPartnerRepricingConfig: {
    methodKind: "unary";
    input: typeof UpdateChannelPartnerRepricingConfigRequestSchema;
    output: typeof ChannelPartnerRepricingConfigSchema;
  },
  /**
   * Deletes the given
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * permanently. You can only delete configs if their
   * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
   * is set to a date after the current month.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The account making the request does not own
   * this customer.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * FAILED_PRECONDITION: The
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * is active or in the past.
   * * NOT_FOUND: No
   * [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
   * found for the name in the request.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.DeleteChannelPartnerRepricingConfig
   */
  deleteChannelPartnerRepricingConfig: {
    methodKind: "unary";
    input: typeof DeleteChannelPartnerRepricingConfigRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists the Rebilling supported SKU groups the account is authorized to
   * sell.
   * Reference: https://cloud.google.com/skus/sku-groups
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different, or the account doesn't exist.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the [SkuGroup][google.cloud.channel.v1.SkuGroup] resources.
   * The data for each resource is displayed in the alphabetical order of SKU
   * group display name.
   * The data for each resource is displayed in the ascending order of
   * [SkuGroup.display_name][google.cloud.channel.v1.SkuGroup.display_name]
   *
   * If unsuccessful, returns an error.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListSkuGroups
   */
  listSkuGroups: {
    methodKind: "unary";
    input: typeof ListSkuGroupsRequestSchema;
    output: typeof ListSkuGroupsResponseSchema;
  },
  /**
   * Lists the Billable SKUs in a given SKU group.
   *
   * Possible error codes:
   * PERMISSION_DENIED: If the account making the request and the account
   * being queried for are different, or the account doesn't exist.
   * INVALID_ARGUMENT: Missing or invalid required parameters in the
   * request.
   * INTERNAL: Any non-user error related to technical issue in the
   * backend. In this case, contact cloud channel support.
   *
   * Return Value:
   * If successful, the [BillableSku][google.cloud.channel.v1.BillableSku]
   * resources. The data for each resource is displayed in the ascending order
   * of:
   *
   * * [BillableSku.service_display_name][google.cloud.channel.v1.BillableSku.service_display_name]
   * * [BillableSku.sku_display_name][google.cloud.channel.v1.BillableSku.sku_display_name]
   *
   * If unsuccessful, returns an error.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListSkuGroupBillableSkus
   */
  listSkuGroupBillableSkus: {
    methodKind: "unary";
    input: typeof ListSkuGroupBillableSkusRequestSchema;
    output: typeof ListSkuGroupBillableSkusResponseSchema;
  },
  /**
   * Returns the requested [Offer][google.cloud.channel.v1.Offer] resource.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The entitlement doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement or offer was not found.
   *
   * Return value:
   * The [Offer][google.cloud.channel.v1.Offer] resource.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.LookupOffer
   */
  lookupOffer: {
    methodKind: "unary";
    input: typeof LookupOfferRequestSchema;
    output: typeof OfferSchema;
  },
  /**
   * Lists the Products the reseller is authorized to sell.
   *
   * Possible error codes:
   *
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListProducts
   */
  listProducts: {
    methodKind: "unary";
    input: typeof ListProductsRequestSchema;
    output: typeof ListProductsResponseSchema;
  },
  /**
   * Lists the SKUs for a product the reseller is authorized to sell.
   *
   * Possible error codes:
   *
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListSkus
   */
  listSkus: {
    methodKind: "unary";
    input: typeof ListSkusRequestSchema;
    output: typeof ListSkusResponseSchema;
  },
  /**
   * Lists the Offers the reseller can sell.
   *
   * Possible error codes:
   *
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListOffers
   */
  listOffers: {
    methodKind: "unary";
    input: typeof ListOffersRequestSchema;
    output: typeof ListOffersResponseSchema;
  },
  /**
   * Lists the following:
   *
   * * SKUs that you can purchase for a customer
   * * SKUs that you can upgrade or downgrade for an entitlement.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListPurchasableSkus
   */
  listPurchasableSkus: {
    methodKind: "unary";
    input: typeof ListPurchasableSkusRequestSchema;
    output: typeof ListPurchasableSkusResponseSchema;
  },
  /**
   * Lists the following:
   *
   * * Offers that you can purchase for a customer.
   * * Offers that you can change for an entitlement.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED:
   *     * The customer doesn't belong to the reseller
   *     * The reseller is not authorized to transact on this Product. See
   *     https://support.google.com/channelservices/answer/9759265
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListPurchasableOffers
   */
  listPurchasableOffers: {
    methodKind: "unary";
    input: typeof ListPurchasableOffersRequestSchema;
    output: typeof ListPurchasableOffersResponseSchema;
  },
  /**
   * Lists the billing accounts that are eligible to purchase particular SKUs
   * for a given customer.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * Based on the provided list of SKUs, returns a list of SKU groups that must
   * be purchased using the same billing account and the billing accounts
   * eligible to purchase each SKU group.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.QueryEligibleBillingAccounts
   */
  queryEligibleBillingAccounts: {
    methodKind: "unary";
    input: typeof QueryEligibleBillingAccountsRequestSchema;
    output: typeof QueryEligibleBillingAccountsResponseSchema;
  },
  /**
   * Registers a service account with subscriber privileges on the Cloud Pub/Sub
   * topic for this Channel Services account. After you create a
   * subscriber, you get the events through
   * [SubscriberEvent][google.cloud.channel.v1.SubscriberEvent]
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request and the
   * provided reseller account are different, or the impersonated user
   * is not a super admin.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The topic name with the registered service email address.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.RegisterSubscriber
   */
  registerSubscriber: {
    methodKind: "unary";
    input: typeof RegisterSubscriberRequestSchema;
    output: typeof RegisterSubscriberResponseSchema;
  },
  /**
   * Unregisters a service account with subscriber privileges on the Cloud
   * Pub/Sub topic created for this Channel Services account. If there are no
   * service accounts left with subscriber privileges, this deletes the topic.
   * You can call ListSubscribers to check for these accounts.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request and the
   * provided reseller account are different, or the impersonated user
   * is not a super admin.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The topic resource doesn't exist.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The topic name that unregistered the service email address.
   * Returns a success response if the service email address wasn't registered
   * with the topic.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.UnregisterSubscriber
   */
  unregisterSubscriber: {
    methodKind: "unary";
    input: typeof UnregisterSubscriberRequestSchema;
    output: typeof UnregisterSubscriberResponseSchema;
  },
  /**
   * Lists service accounts with subscriber privileges on the Cloud Pub/Sub
   * topic created for this Channel Services account.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request and the
   * provided reseller account are different, or the impersonated user
   * is not a super admin.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The topic resource doesn't exist.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * A list of service email addresses.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListSubscribers
   */
  listSubscribers: {
    methodKind: "unary";
    input: typeof ListSubscribersRequestSchema;
    output: typeof ListSubscribersResponseSchema;
  },
  /**
   * List entitlement history.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request and the
   * provided reseller account are different.
   * * INVALID_ARGUMENT: Missing or invalid required fields in the request.
   * * NOT_FOUND: The parent resource doesn't exist. Usually the result of an
   * invalid name parameter.
   * * INTERNAL: Any non-user error related to a technical issue in the backend.
   * In this case, contact CloudChannel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * In this case, contact Cloud Channel support.
   *
   * Return value:
   * List of [EntitlementChange][google.cloud.channel.v1.EntitlementChange]s.
   *
   * @generated from rpc google.cloud.channel.v1.CloudChannelService.ListEntitlementChanges
   */
  listEntitlementChanges: {
    methodKind: "unary";
    input: typeof ListEntitlementChangesRequestSchema;
    output: typeof ListEntitlementChangesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_channel_v1_service, 0);

