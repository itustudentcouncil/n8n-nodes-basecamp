// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/channel/v1/offers.proto (package google.cloud.channel.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { CloudIdentityInfo_CustomerType, Value } from "./common_pb";
import { file_google_cloud_channel_v1_common } from "./common_pb";
import type { MarketingInfo, Sku } from "./products_pb";
import { file_google_cloud_channel_v1_products } from "./products_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Money } from "../../../type/money_pb";
import { file_google_type_money } from "../../../type/money_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/channel/v1/offers.proto.
 */
export const file_google_cloud_channel_v1_offers: GenFile = /*@__PURE__*/
  fileDesc("CiRnb29nbGUvY2xvdWQvY2hhbm5lbC92MS9vZmZlcnMucHJvdG8SF2dvb2dsZS5jbG91ZC5jaGFubmVsLnYxIrwECgVPZmZlchIMCgRuYW1lGAEgASgJEj4KDm1hcmtldGluZ19pbmZvGAIgASgLMiYuZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuTWFya2V0aW5nSW5mbxIpCgNza3UYAyABKAsyHC5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5Ta3USKwoEcGxhbhgEIAEoCzIdLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLlBsYW4SOQoLY29uc3RyYWludHMYBSABKAsyJC5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5Db25zdHJhaW50cxJEChJwcmljZV9ieV9yZXNvdXJjZXMYBiADKAsyKC5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5QcmljZUJ5UmVzb3VyY2USLgoKc3RhcnRfdGltZRgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMQoIZW5kX3RpbWUYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSSwoVcGFyYW1ldGVyX2RlZmluaXRpb25zGAkgAygLMiwuZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuUGFyYW1ldGVyRGVmaW5pdGlvbhIRCglkZWFsX2NvZGUYDCABKAk6SepBRgohY2xvdWRjaGFubmVsLmdvb2dsZWFwaXMuY29tL09mZmVyEiFhY2NvdW50cy97YWNjb3VudH0vb2ZmZXJzL3tvZmZlcn0iiAMKE1BhcmFtZXRlckRlZmluaXRpb24SDAoEbmFtZRgBIAEoCRJSCg5wYXJhbWV0ZXJfdHlwZRgCIAEoDjI6Lmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLlBhcmFtZXRlckRlZmluaXRpb24uUGFyYW1ldGVyVHlwZRIxCgltaW5fdmFsdWUYAyABKAsyHi5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5WYWx1ZRIxCgltYXhfdmFsdWUYBCABKAsyHi5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5WYWx1ZRI2Cg5hbGxvd2VkX3ZhbHVlcxgFIAMoCzIeLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLlZhbHVlEhAKCG9wdGlvbmFsGAYgASgIIl8KDVBhcmFtZXRlclR5cGUSHgoaUEFSQU1FVEVSX1RZUEVfVU5TUEVDSUZJRUQQABIJCgVJTlQ2NBABEgoKBlNUUklORxACEgoKBkRPVUJMRRADEgsKB0JPT0xFQU4QBCJZCgtDb25zdHJhaW50cxJKChRjdXN0b21lcl9jb25zdHJhaW50cxgBIAEoCzIsLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLkN1c3RvbWVyQ29uc3RyYWludHMi1wEKE0N1c3RvbWVyQ29uc3RyYWludHMSFwoPYWxsb3dlZF9yZWdpb25zGAEgAygJElcKFmFsbG93ZWRfY3VzdG9tZXJfdHlwZXMYAiADKA4yNy5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5DbG91ZElkZW50aXR5SW5mby5DdXN0b21lclR5cGUSTgoXcHJvbW90aW9uYWxfb3JkZXJfdHlwZXMYAyADKA4yLS5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5Qcm9tb3Rpb25hbE9yZGVyVHlwZSKGAgoEUGxhbhI6CgxwYXltZW50X3BsYW4YASABKA4yJC5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5QYXltZW50UGxhbhI6CgxwYXltZW50X3R5cGUYAiABKA4yJC5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5QYXltZW50VHlwZRI2Cg1wYXltZW50X2N5Y2xlGAMgASgLMh8uZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuUGVyaW9kEjUKDHRyaWFsX3BlcmlvZBgEIAEoCzIfLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLlBlcmlvZBIXCg9iaWxsaW5nX2FjY291bnQYBSABKAkiuQEKD1ByaWNlQnlSZXNvdXJjZRI8Cg1yZXNvdXJjZV90eXBlGAEgASgOMiUuZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuUmVzb3VyY2VUeXBlEi0KBXByaWNlGAIgASgLMh4uZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuUHJpY2USOQoMcHJpY2VfcGhhc2VzGAMgAygLMiMuZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuUHJpY2VQaGFzZSKKAQoFUHJpY2USJgoKYmFzZV9wcmljZRgBIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5EhAKCGRpc2NvdW50GAIgASgBEisKD2VmZmVjdGl2ZV9wcmljZRgDIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5EhoKEmV4dGVybmFsX3ByaWNlX3VyaRgEIAEoCSLZAQoKUHJpY2VQaGFzZRI4CgtwZXJpb2RfdHlwZRgBIAEoDjIjLmdvb2dsZS5jbG91ZC5jaGFubmVsLnYxLlBlcmlvZFR5cGUSFAoMZmlyc3RfcGVyaW9kGAIgASgFEhMKC2xhc3RfcGVyaW9kGAMgASgFEi0KBXByaWNlGAQgASgLMh4uZ29vZ2xlLmNsb3VkLmNoYW5uZWwudjEuUHJpY2USNwoLcHJpY2VfdGllcnMYBSADKAsyIi5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5QcmljZVRpZXIiaQoJUHJpY2VUaWVyEhYKDmZpcnN0X3Jlc291cmNlGAEgASgFEhUKDWxhc3RfcmVzb3VyY2UYAiABKAUSLQoFcHJpY2UYAyABKAsyHi5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5QcmljZSJUCgZQZXJpb2QSEAoIZHVyYXRpb24YASABKAUSOAoLcGVyaW9kX3R5cGUYAiABKA4yIy5nb29nbGUuY2xvdWQuY2hhbm5lbC52MS5QZXJpb2RUeXBlKm0KFFByb21vdGlvbmFsT3JkZXJUeXBlEiAKHFBST01PVElPTkFMX1RZUEVfVU5TUEVDSUZJRUQQABIPCgtORVdfVVBHUkFERRABEgwKCFRSQU5TRkVSEAISFAoQUFJPTU9USU9OX1NXSVRDSBADKmsKC1BheW1lbnRQbGFuEhwKGFBBWU1FTlRfUExBTl9VTlNQRUNJRklFRBAAEg4KCkNPTU1JVE1FTlQQARIMCghGTEVYSUJMRRACEggKBEZSRUUQAxIJCgVUUklBTBAEEgsKB09GRkxJTkUQBSpECgtQYXltZW50VHlwZRIcChhQQVlNRU5UX1RZUEVfVU5TUEVDSUZJRUQQABIKCgZQUkVQQVkQARILCgdQT1NUUEFZEAIqigEKDFJlc291cmNlVHlwZRIdChlSRVNPVVJDRV9UWVBFX1VOU1BFQ0lGSUVEEAASCAoEU0VBVBABEgcKA01BVRACEgYKAkdCEAMSEQoNTElDRU5TRURfVVNFUhAEEgsKB01JTlVURVMQBRIOCgpJQUFTX1VTQUdFEAYSEAoMU1VCU0NSSVBUSU9OEAcqRwoKUGVyaW9kVHlwZRIbChdQRVJJT0RfVFlQRV9VTlNQRUNJRklFRBAAEgcKA0RBWRABEgkKBU1PTlRIEAISCAoEWUVBUhADQmMKG2NvbS5nb29nbGUuY2xvdWQuY2hhbm5lbC52MUILT2ZmZXJzUHJvdG9QAVo1Y2xvdWQuZ29vZ2xlLmNvbS9nby9jaGFubmVsL2FwaXYxL2NoYW5uZWxwYjtjaGFubmVscGJiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_channel_v1_common, file_google_cloud_channel_v1_products, file_google_protobuf_timestamp, file_google_type_money]);

/**
 * Represents an offer made to resellers for purchase.
 * An offer is associated with a [Sku][google.cloud.channel.v1.Sku], has a plan
 * for payment, a price, and defines the constraints for buying.
 *
 * @generated from message google.cloud.channel.v1.Offer
 */
export type Offer = Message<"google.cloud.channel.v1.Offer"> & {
  /**
   * Resource Name of the Offer.
   * Format: accounts/{account_id}/offers/{offer_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Marketing information for the Offer.
   *
   * @generated from field: google.cloud.channel.v1.MarketingInfo marketing_info = 2;
   */
  marketingInfo?: MarketingInfo;

  /**
   * SKU the offer is associated with.
   *
   * @generated from field: google.cloud.channel.v1.Sku sku = 3;
   */
  sku?: Sku;

  /**
   * Describes the payment plan for the Offer.
   *
   * @generated from field: google.cloud.channel.v1.Plan plan = 4;
   */
  plan?: Plan;

  /**
   * Constraints on transacting the Offer.
   *
   * @generated from field: google.cloud.channel.v1.Constraints constraints = 5;
   */
  constraints?: Constraints;

  /**
   * Price for each monetizable resource type.
   *
   * @generated from field: repeated google.cloud.channel.v1.PriceByResource price_by_resources = 6;
   */
  priceByResources: PriceByResource[];

  /**
   * Start of the Offer validity time.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 7;
   */
  startTime?: Timestamp;

  /**
   * Output only. End of the Offer validity time.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 8;
   */
  endTime?: Timestamp;

  /**
   * Parameters required to use current Offer to purchase.
   *
   * @generated from field: repeated google.cloud.channel.v1.ParameterDefinition parameter_definitions = 9;
   */
  parameterDefinitions: ParameterDefinition[];

  /**
   * The deal code of the offer to get a special promotion or discount.
   *
   * @generated from field: string deal_code = 12;
   */
  dealCode: string;
};

/**
 * Describes the message google.cloud.channel.v1.Offer.
 * Use `create(OfferSchema)` to create a new message.
 */
export const OfferSchema: GenMessage<Offer> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_offers, 0);

/**
 * Parameter's definition. Specifies what parameter is required to use the
 * current Offer to purchase.
 *
 * @generated from message google.cloud.channel.v1.ParameterDefinition
 */
export type ParameterDefinition = Message<"google.cloud.channel.v1.ParameterDefinition"> & {
  /**
   * Name of the parameter.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Data type of the parameter. Minimal value, Maximum value and allowed values
   * will use specified data type here.
   *
   * @generated from field: google.cloud.channel.v1.ParameterDefinition.ParameterType parameter_type = 2;
   */
  parameterType: ParameterDefinition_ParameterType;

  /**
   * Minimal value of the parameter, if applicable. Inclusive. For example,
   * minimal commitment when purchasing Anthos is 0.01.
   * Applicable to INT64 and DOUBLE parameter types.
   *
   * @generated from field: google.cloud.channel.v1.Value min_value = 3;
   */
  minValue?: Value;

  /**
   * Maximum value of the parameter, if applicable. Inclusive. For example,
   * maximum seats when purchasing Google Workspace Business Standard.
   * Applicable to INT64 and DOUBLE parameter types.
   *
   * @generated from field: google.cloud.channel.v1.Value max_value = 4;
   */
  maxValue?: Value;

  /**
   * If not empty, parameter values must be drawn from this list.
   * For example, [us-west1, us-west2, ...]
   * Applicable to STRING parameter type.
   *
   * @generated from field: repeated google.cloud.channel.v1.Value allowed_values = 5;
   */
  allowedValues: Value[];

  /**
   * If set to true, parameter is optional to purchase this Offer.
   *
   * @generated from field: bool optional = 6;
   */
  optional: boolean;
};

/**
 * Describes the message google.cloud.channel.v1.ParameterDefinition.
 * Use `create(ParameterDefinitionSchema)` to create a new message.
 */
export const ParameterDefinitionSchema: GenMessage<ParameterDefinition> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_offers, 1);

/**
 * Data type of the parameter.
 *
 * @generated from enum google.cloud.channel.v1.ParameterDefinition.ParameterType
 */
export enum ParameterDefinition_ParameterType {
  /**
   * Not used.
   *
   * @generated from enum value: PARAMETER_TYPE_UNSPECIFIED = 0;
   */
  PARAMETER_TYPE_UNSPECIFIED = 0,

  /**
   * Int64 type.
   *
   * @generated from enum value: INT64 = 1;
   */
  INT64 = 1,

  /**
   * String type.
   *
   * @generated from enum value: STRING = 2;
   */
  STRING = 2,

  /**
   * Double type.
   *
   * @generated from enum value: DOUBLE = 3;
   */
  DOUBLE = 3,

  /**
   * Boolean type.
   *
   * @generated from enum value: BOOLEAN = 4;
   */
  BOOLEAN = 4,
}

/**
 * Describes the enum google.cloud.channel.v1.ParameterDefinition.ParameterType.
 */
export const ParameterDefinition_ParameterTypeSchema: GenEnum<ParameterDefinition_ParameterType> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_offers, 1, 0);

/**
 * Represents the constraints for buying the Offer.
 *
 * @generated from message google.cloud.channel.v1.Constraints
 */
export type Constraints = Message<"google.cloud.channel.v1.Constraints"> & {
  /**
   * Represents constraints required to purchase the Offer for a customer.
   *
   * @generated from field: google.cloud.channel.v1.CustomerConstraints customer_constraints = 1;
   */
  customerConstraints?: CustomerConstraints;
};

/**
 * Describes the message google.cloud.channel.v1.Constraints.
 * Use `create(ConstraintsSchema)` to create a new message.
 */
export const ConstraintsSchema: GenMessage<Constraints> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_offers, 2);

/**
 * Represents constraints required to purchase the Offer for a customer.
 *
 * @generated from message google.cloud.channel.v1.CustomerConstraints
 */
export type CustomerConstraints = Message<"google.cloud.channel.v1.CustomerConstraints"> & {
  /**
   * Allowed geographical regions of the customer.
   *
   * @generated from field: repeated string allowed_regions = 1;
   */
  allowedRegions: string[];

  /**
   * Allowed Customer Type.
   *
   * @generated from field: repeated google.cloud.channel.v1.CloudIdentityInfo.CustomerType allowed_customer_types = 2;
   */
  allowedCustomerTypes: CloudIdentityInfo_CustomerType[];

  /**
   * Allowed Promotional Order Type. Present for Promotional offers.
   *
   * @generated from field: repeated google.cloud.channel.v1.PromotionalOrderType promotional_order_types = 3;
   */
  promotionalOrderTypes: PromotionalOrderType[];
};

/**
 * Describes the message google.cloud.channel.v1.CustomerConstraints.
 * Use `create(CustomerConstraintsSchema)` to create a new message.
 */
export const CustomerConstraintsSchema: GenMessage<CustomerConstraints> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_offers, 3);

/**
 * The payment plan for the Offer. Describes how to make a payment.
 *
 * @generated from message google.cloud.channel.v1.Plan
 */
export type Plan = Message<"google.cloud.channel.v1.Plan"> & {
  /**
   * Describes how a reseller will be billed.
   *
   * @generated from field: google.cloud.channel.v1.PaymentPlan payment_plan = 1;
   */
  paymentPlan: PaymentPlan;

  /**
   * Specifies when the payment needs to happen.
   *
   * @generated from field: google.cloud.channel.v1.PaymentType payment_type = 2;
   */
  paymentType: PaymentType;

  /**
   * Describes how frequently the reseller will be billed, such as
   * once per month.
   *
   * @generated from field: google.cloud.channel.v1.Period payment_cycle = 3;
   */
  paymentCycle?: Period;

  /**
   * Present for Offers with a trial period.
   * For trial-only Offers, a paid service needs to start before the trial
   * period ends for continued service.
   * For Regular Offers with a trial period, the regular pricing goes into
   * effect when trial period ends, or if paid service is started before the end
   * of the trial period.
   *
   * @generated from field: google.cloud.channel.v1.Period trial_period = 4;
   */
  trialPeriod?: Period;

  /**
   * Reseller Billing account to charge after an offer transaction.
   * Only present for Google Cloud offers.
   *
   * @generated from field: string billing_account = 5;
   */
  billingAccount: string;
};

/**
 * Describes the message google.cloud.channel.v1.Plan.
 * Use `create(PlanSchema)` to create a new message.
 */
export const PlanSchema: GenMessage<Plan> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_offers, 4);

/**
 * Represents price by resource type.
 *
 * @generated from message google.cloud.channel.v1.PriceByResource
 */
export type PriceByResource = Message<"google.cloud.channel.v1.PriceByResource"> & {
  /**
   * Resource Type. Example: SEAT
   *
   * @generated from field: google.cloud.channel.v1.ResourceType resource_type = 1;
   */
  resourceType: ResourceType;

  /**
   * Price of the Offer. Present if there are no price phases.
   *
   * @generated from field: google.cloud.channel.v1.Price price = 2;
   */
  price?: Price;

  /**
   * Specifies the price by time range.
   *
   * @generated from field: repeated google.cloud.channel.v1.PricePhase price_phases = 3;
   */
  pricePhases: PricePhase[];
};

/**
 * Describes the message google.cloud.channel.v1.PriceByResource.
 * Use `create(PriceByResourceSchema)` to create a new message.
 */
export const PriceByResourceSchema: GenMessage<PriceByResource> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_offers, 5);

/**
 * Represents the price of the Offer.
 *
 * @generated from message google.cloud.channel.v1.Price
 */
export type Price = Message<"google.cloud.channel.v1.Price"> & {
  /**
   * Base price.
   *
   * @generated from field: google.type.Money base_price = 1;
   */
  basePrice?: Money;

  /**
   * Discount percentage, represented as decimal.
   * For example, a 20% discount will be represent as 0.2.
   *
   * @generated from field: double discount = 2;
   */
  discount: number;

  /**
   * Effective Price after applying the discounts.
   *
   * @generated from field: google.type.Money effective_price = 3;
   */
  effectivePrice?: Money;

  /**
   * Link to external price list, such as link to Google Voice rate card.
   *
   * @generated from field: string external_price_uri = 4;
   */
  externalPriceUri: string;
};

/**
 * Describes the message google.cloud.channel.v1.Price.
 * Use `create(PriceSchema)` to create a new message.
 */
export const PriceSchema: GenMessage<Price> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_offers, 6);

/**
 * Specifies the price by the duration of months.
 * For example, a 20% discount for the first six months, then a 10% discount
 * starting on the seventh month.
 *
 * @generated from message google.cloud.channel.v1.PricePhase
 */
export type PricePhase = Message<"google.cloud.channel.v1.PricePhase"> & {
  /**
   * Defines the phase period type.
   *
   * @generated from field: google.cloud.channel.v1.PeriodType period_type = 1;
   */
  periodType: PeriodType;

  /**
   * Defines first period for the phase.
   *
   * @generated from field: int32 first_period = 2;
   */
  firstPeriod: number;

  /**
   * Defines first period for the phase.
   *
   * @generated from field: int32 last_period = 3;
   */
  lastPeriod: number;

  /**
   * Price of the phase. Present if there are no price tiers.
   *
   * @generated from field: google.cloud.channel.v1.Price price = 4;
   */
  price?: Price;

  /**
   * Price by the resource tiers.
   *
   * @generated from field: repeated google.cloud.channel.v1.PriceTier price_tiers = 5;
   */
  priceTiers: PriceTier[];
};

/**
 * Describes the message google.cloud.channel.v1.PricePhase.
 * Use `create(PricePhaseSchema)` to create a new message.
 */
export const PricePhaseSchema: GenMessage<PricePhase> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_offers, 7);

/**
 * Defines price at resource tier level.
 * For example, an offer with following definition :
 *
 * * Tier 1: Provide 25% discount for all seats between 1 and 25.
 * * Tier 2: Provide 10% discount for all seats between 26 and 100.
 * * Tier 3: Provide flat 15% discount for all seats above 100.
 *
 * Each of these tiers is represented as a PriceTier.
 *
 * @generated from message google.cloud.channel.v1.PriceTier
 */
export type PriceTier = Message<"google.cloud.channel.v1.PriceTier"> & {
  /**
   * First resource for which the tier price applies.
   *
   * @generated from field: int32 first_resource = 1;
   */
  firstResource: number;

  /**
   * Last resource for which the tier price applies.
   *
   * @generated from field: int32 last_resource = 2;
   */
  lastResource: number;

  /**
   * Price of the tier.
   *
   * @generated from field: google.cloud.channel.v1.Price price = 3;
   */
  price?: Price;
};

/**
 * Describes the message google.cloud.channel.v1.PriceTier.
 * Use `create(PriceTierSchema)` to create a new message.
 */
export const PriceTierSchema: GenMessage<PriceTier> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_offers, 8);

/**
 * Represents period in days/months/years.
 *
 * @generated from message google.cloud.channel.v1.Period
 */
export type Period = Message<"google.cloud.channel.v1.Period"> & {
  /**
   * Total duration of Period Type defined.
   *
   * @generated from field: int32 duration = 1;
   */
  duration: number;

  /**
   * Period Type.
   *
   * @generated from field: google.cloud.channel.v1.PeriodType period_type = 2;
   */
  periodType: PeriodType;
};

/**
 * Describes the message google.cloud.channel.v1.Period.
 * Use `create(PeriodSchema)` to create a new message.
 */
export const PeriodSchema: GenMessage<Period> = /*@__PURE__*/
  messageDesc(file_google_cloud_channel_v1_offers, 9);

/**
 * Constraints type for Promotional offers.
 *
 * @generated from enum google.cloud.channel.v1.PromotionalOrderType
 */
export enum PromotionalOrderType {
  /**
   * Not used.
   *
   * @generated from enum value: PROMOTIONAL_TYPE_UNSPECIFIED = 0;
   */
  PROMOTIONAL_TYPE_UNSPECIFIED = 0,

  /**
   * Order used for new customers, trial conversions and upgrades.
   *
   * @generated from enum value: NEW_UPGRADE = 1;
   */
  NEW_UPGRADE = 1,

  /**
   * All orders for transferring an existing customer.
   *
   * @generated from enum value: TRANSFER = 2;
   */
  TRANSFER = 2,

  /**
   * Orders for modifying an existing customer's promotion on the same SKU.
   *
   * @generated from enum value: PROMOTION_SWITCH = 3;
   */
  PROMOTION_SWITCH = 3,
}

/**
 * Describes the enum google.cloud.channel.v1.PromotionalOrderType.
 */
export const PromotionalOrderTypeSchema: GenEnum<PromotionalOrderType> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_offers, 0);

/**
 * Describes how the reseller will be billed.
 *
 * @generated from enum google.cloud.channel.v1.PaymentPlan
 */
export enum PaymentPlan {
  /**
   * Not used.
   *
   * @generated from enum value: PAYMENT_PLAN_UNSPECIFIED = 0;
   */
  PAYMENT_PLAN_UNSPECIFIED = 0,

  /**
   * Commitment.
   *
   * @generated from enum value: COMMITMENT = 1;
   */
  COMMITMENT = 1,

  /**
   * No commitment.
   *
   * @generated from enum value: FLEXIBLE = 2;
   */
  FLEXIBLE = 2,

  /**
   * Free.
   *
   * @generated from enum value: FREE = 3;
   */
  FREE = 3,

  /**
   * Trial.
   *
   * @generated from enum value: TRIAL = 4;
   */
  TRIAL = 4,

  /**
   * Price and ordering not available through API.
   *
   * @generated from enum value: OFFLINE = 5;
   */
  OFFLINE = 5,
}

/**
 * Describes the enum google.cloud.channel.v1.PaymentPlan.
 */
export const PaymentPlanSchema: GenEnum<PaymentPlan> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_offers, 1);

/**
 * Specifies when the payment needs to happen.
 *
 * @generated from enum google.cloud.channel.v1.PaymentType
 */
export enum PaymentType {
  /**
   * Not used.
   *
   * @generated from enum value: PAYMENT_TYPE_UNSPECIFIED = 0;
   */
  PAYMENT_TYPE_UNSPECIFIED = 0,

  /**
   * Prepay. Amount has to be paid before service is rendered.
   *
   * @generated from enum value: PREPAY = 1;
   */
  PREPAY = 1,

  /**
   * Postpay. Reseller is charged at the end of the Payment cycle.
   *
   * @generated from enum value: POSTPAY = 2;
   */
  POSTPAY = 2,
}

/**
 * Describes the enum google.cloud.channel.v1.PaymentType.
 */
export const PaymentTypeSchema: GenEnum<PaymentType> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_offers, 2);

/**
 * Represents the type for a monetizable resource(any entity on which billing
 * happens). For example, this could be MINUTES for Google Voice and GB for
 * Google Drive. One SKU can map to multiple monetizable resources.
 *
 * @generated from enum google.cloud.channel.v1.ResourceType
 */
export enum ResourceType {
  /**
   * Not used.
   *
   * @generated from enum value: RESOURCE_TYPE_UNSPECIFIED = 0;
   */
  RESOURCE_TYPE_UNSPECIFIED = 0,

  /**
   * Seat.
   *
   * @generated from enum value: SEAT = 1;
   */
  SEAT = 1,

  /**
   * Monthly active user.
   *
   * @generated from enum value: MAU = 2;
   */
  MAU = 2,

  /**
   * GB (used for storage SKUs).
   *
   * @generated from enum value: GB = 3;
   */
  GB = 3,

  /**
   * Active licensed users(for Voice SKUs).
   *
   * @generated from enum value: LICENSED_USER = 4;
   */
  LICENSED_USER = 4,

  /**
   * Voice usage.
   *
   * @generated from enum value: MINUTES = 5;
   */
  MINUTES = 5,

  /**
   * For IaaS SKUs like Google Cloud, monetization is based on usage accrued on
   * your billing account irrespective of the type of monetizable resource. This
   * enum represents an aggregated resource/container for all usage SKUs on a
   * billing account. Currently, only applicable to Google Cloud.
   *
   * @generated from enum value: IAAS_USAGE = 6;
   */
  IAAS_USAGE = 6,

  /**
   * For Google Cloud subscriptions like Anthos or SAP.
   *
   * @generated from enum value: SUBSCRIPTION = 7;
   */
  SUBSCRIPTION = 7,
}

/**
 * Describes the enum google.cloud.channel.v1.ResourceType.
 */
export const ResourceTypeSchema: GenEnum<ResourceType> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_offers, 3);

/**
 * Period Type.
 *
 * @generated from enum google.cloud.channel.v1.PeriodType
 */
export enum PeriodType {
  /**
   * Not used.
   *
   * @generated from enum value: PERIOD_TYPE_UNSPECIFIED = 0;
   */
  PERIOD_TYPE_UNSPECIFIED = 0,

  /**
   * Day.
   *
   * @generated from enum value: DAY = 1;
   */
  DAY = 1,

  /**
   * Month.
   *
   * @generated from enum value: MONTH = 2;
   */
  MONTH = 2,

  /**
   * Year.
   *
   * @generated from enum value: YEAR = 3;
   */
  YEAR = 3,
}

/**
 * Describes the enum google.cloud.channel.v1.PeriodType.
 */
export const PeriodTypeSchema: GenEnum<PeriodType> = /*@__PURE__*/
  enumDesc(file_google_cloud_channel_v1_offers, 4);

