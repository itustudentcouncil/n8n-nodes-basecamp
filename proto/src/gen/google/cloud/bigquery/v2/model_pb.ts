// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/bigquery/v2/model.proto (package google.cloud.bigquery.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { EncryptionConfiguration } from "./encryption_config_pb";
import { file_google_cloud_bigquery_v2_encryption_config } from "./encryption_config_pb";
import type { ModelReference } from "./model_reference_pb";
import { file_google_cloud_bigquery_v2_model_reference } from "./model_reference_pb";
import type { StandardSqlDataType, StandardSqlField } from "./standard_sql_pb";
import { file_google_cloud_bigquery_v2_standard_sql } from "./standard_sql_pb";
import type { TableReference } from "./table_reference_pb";
import { file_google_cloud_bigquery_v2_table_reference } from "./table_reference_pb";
import type { DoubleValue, EmptySchema, Int64Value, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/bigquery/v2/model.proto.
 */
export const file_google_cloud_bigquery_v2_model: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_cloud_bigquery_v2_encryption_config, file_google_cloud_bigquery_v2_model_reference, file_google_cloud_bigquery_v2_standard_sql, file_google_cloud_bigquery_v2_table_reference, file_google_protobuf_empty, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * Remote Model Info
 *
 * @generated from message google.cloud.bigquery.v2.RemoteModelInfo
 */
export type RemoteModelInfo = Message<"google.cloud.bigquery.v2.RemoteModelInfo"> & {
  /**
   * Remote services are services outside of BigQuery used by remote models for
   * predictions. A remote service is backed by either an arbitrary endpoint or
   * a selected remote service type, but not both.
   *
   * @generated from oneof google.cloud.bigquery.v2.RemoteModelInfo.remote_service
   */
  remoteService: {
    /**
     * Output only. The endpoint for remote model.
     *
     * @generated from field: string endpoint = 1;
     */
    value: string;
    case: "endpoint";
  } | {
    /**
     * Output only. The remote service type for remote model.
     *
     * @generated from field: google.cloud.bigquery.v2.RemoteModelInfo.RemoteServiceType remote_service_type = 2;
     */
    value: RemoteModelInfo_RemoteServiceType;
    case: "remoteServiceType";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Fully qualified name of the user-provided connection object of
   * the remote model. Format:
   * ```"projects/{project_id}/locations/{location_id}/connections/{connection_id}"```
   *
   * @generated from field: string connection = 3;
   */
  connection: string;

  /**
   * Output only. Max number of rows in each batch sent to the remote service.
   * If unset, the number of rows in each batch is set dynamically.
   *
   * @generated from field: int64 max_batching_rows = 4;
   */
  maxBatchingRows: bigint;

  /**
   * Output only. The model version for LLM.
   *
   * @generated from field: string remote_model_version = 5;
   */
  remoteModelVersion: string;

  /**
   * Output only. The name of the speech recognizer to use for speech
   * recognition. The expected format is
   * `projects/{project}/locations/{location}/recognizers/{recognizer}`.
   * Customers can specify this field at model creation. If not specified, a
   * default recognizer `projects/{model
   * project}/locations/global/recognizers/_` will be used. See more details at
   * [recognizers](https://cloud.google.com/speech-to-text/v2/docs/reference/rest/v2/projects.locations.recognizers)
   *
   * @generated from field: string speech_recognizer = 7;
   */
  speechRecognizer: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.RemoteModelInfo.
 * Use `create(RemoteModelInfoSchema)` to create a new message.
 */
export const RemoteModelInfoSchema: GenMessage<RemoteModelInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 0);

/**
 * Supported service type for remote model.
 *
 * @generated from enum google.cloud.bigquery.v2.RemoteModelInfo.RemoteServiceType
 */
export enum RemoteModelInfo_RemoteServiceType {
  /**
   * Unspecified remote service type.
   *
   * @generated from enum value: REMOTE_SERVICE_TYPE_UNSPECIFIED = 0;
   */
  REMOTE_SERVICE_TYPE_UNSPECIFIED = 0,

  /**
   * V3 Cloud AI Translation API. See more details at [Cloud Translation API]
   * (https://cloud.google.com/translate/docs/reference/rest).
   *
   * @generated from enum value: CLOUD_AI_TRANSLATE_V3 = 1;
   */
  CLOUD_AI_TRANSLATE_V3 = 1,

  /**
   * V1 Cloud AI Vision API See more details at [Cloud Vision API]
   * (https://cloud.google.com/vision/docs/reference/rest).
   *
   * @generated from enum value: CLOUD_AI_VISION_V1 = 2;
   */
  CLOUD_AI_VISION_V1 = 2,

  /**
   * V1 Cloud AI Natural Language API. See more details at [REST Resource:
   * documents](https://cloud.google.com/natural-language/docs/reference/rest/v1/documents).
   *
   * @generated from enum value: CLOUD_AI_NATURAL_LANGUAGE_V1 = 3;
   */
  CLOUD_AI_NATURAL_LANGUAGE_V1 = 3,

  /**
   * V2 Speech-to-Text API. See more details at [Google Cloud Speech-to-Text
   * V2 API](https://cloud.google.com/speech-to-text/v2/docs)
   *
   * @generated from enum value: CLOUD_AI_SPEECH_TO_TEXT_V2 = 7;
   */
  CLOUD_AI_SPEECH_TO_TEXT_V2 = 7,
}

/**
 * Describes the enum google.cloud.bigquery.v2.RemoteModelInfo.RemoteServiceType.
 */
export const RemoteModelInfo_RemoteServiceTypeSchema: GenEnum<RemoteModelInfo_RemoteServiceType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 0, 0);

/**
 * Information about a single transform column.
 *
 * @generated from message google.cloud.bigquery.v2.TransformColumn
 */
export type TransformColumn = Message<"google.cloud.bigquery.v2.TransformColumn"> & {
  /**
   * Output only. Name of the column.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Data type of the column after the transform.
   *
   * @generated from field: google.cloud.bigquery.v2.StandardSqlDataType type = 2;
   */
  type?: StandardSqlDataType;

  /**
   * Output only. The SQL expression used in the column transform.
   *
   * @generated from field: string transform_sql = 3;
   */
  transformSql: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.TransformColumn.
 * Use `create(TransformColumnSchema)` to create a new message.
 */
export const TransformColumnSchema: GenMessage<TransformColumn> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 1);

/**
 * @generated from message google.cloud.bigquery.v2.Model
 */
export type Model = Message<"google.cloud.bigquery.v2.Model"> & {
  /**
   * Output only. A hash of this resource.
   *
   * @generated from field: string etag = 1;
   */
  etag: string;

  /**
   * Required. Unique identifier for this model.
   *
   * @generated from field: google.cloud.bigquery.v2.ModelReference model_reference = 2;
   */
  modelReference?: ModelReference;

  /**
   * Output only. The time when this model was created, in millisecs since the
   * epoch.
   *
   * @generated from field: int64 creation_time = 5;
   */
  creationTime: bigint;

  /**
   * Output only. The time when this model was last modified, in millisecs since
   * the epoch.
   *
   * @generated from field: int64 last_modified_time = 6;
   */
  lastModifiedTime: bigint;

  /**
   * Optional. A user-friendly description of this model.
   *
   * @generated from field: string description = 12;
   */
  description: string;

  /**
   * Optional. A descriptive name for this model.
   *
   * @generated from field: string friendly_name = 14;
   */
  friendlyName: string;

  /**
   * The labels associated with this model. You can use these to organize
   * and group your models. Label keys and values can be no longer
   * than 63 characters, can only contain lowercase letters, numeric
   * characters, underscores and dashes. International characters are allowed.
   * Label values are optional. Label keys must start with a letter and each
   * label in the list must have a different key.
   *
   * @generated from field: map<string, string> labels = 15;
   */
  labels: { [key: string]: string };

  /**
   * Optional. The time when this model expires, in milliseconds since the
   * epoch. If not present, the model will persist indefinitely. Expired models
   * will be deleted and their storage reclaimed.  The defaultTableExpirationMs
   * property of the encapsulating dataset can be used to set a default
   * expirationTime on newly created models.
   *
   * @generated from field: int64 expiration_time = 16;
   */
  expirationTime: bigint;

  /**
   * Output only. The geographic location where the model resides. This value
   * is inherited from the dataset.
   *
   * @generated from field: string location = 13;
   */
  location: string;

  /**
   * Custom encryption configuration (e.g., Cloud KMS keys). This shows the
   * encryption configuration of the model data while stored in BigQuery
   * storage. This field can be used with PatchModel to update encryption key
   * for an already encrypted model.
   *
   * @generated from field: google.cloud.bigquery.v2.EncryptionConfiguration encryption_configuration = 17;
   */
  encryptionConfiguration?: EncryptionConfiguration;

  /**
   * Output only. Type of the model resource.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.ModelType model_type = 7;
   */
  modelType: Model_ModelType;

  /**
   * Information for all training runs in increasing order of start_time.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.TrainingRun training_runs = 9;
   */
  trainingRuns: Model_TrainingRun[];

  /**
   * Output only. Input feature columns for the model inference. If the model is
   * trained with TRANSFORM clause, these are the input of the TRANSFORM clause.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.StandardSqlField feature_columns = 10;
   */
  featureColumns: StandardSqlField[];

  /**
   * Output only. Label columns that were used to train this model.
   * The output of the model will have a "predicted_" prefix to these columns.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.StandardSqlField label_columns = 11;
   */
  labelColumns: StandardSqlField[];

  /**
   * Output only. This field will be populated if a TRANSFORM clause was used to
   * train a model. TRANSFORM clause (if used) takes feature_columns as input
   * and outputs transform_columns. transform_columns then are used to train the
   * model.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.TransformColumn transform_columns = 26;
   */
  transformColumns: TransformColumn[];

  /**
   * Output only. All hyperparameter search spaces in this model.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.HparamSearchSpaces hparam_search_spaces = 18;
   */
  hparamSearchSpaces?: Model_HparamSearchSpaces;

  /**
   * Output only. The default trial_id to use in TVFs when the trial_id is not
   * passed in. For single-objective [hyperparameter
   * tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview)
   * models, this is the best trial ID. For multi-objective [hyperparameter
   * tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview)
   * models, this is the smallest trial ID among all Pareto optimal trials.
   *
   * @generated from field: int64 default_trial_id = 21;
   */
  defaultTrialId: bigint;

  /**
   * Output only. Trials of a [hyperparameter
   * tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview)
   * model sorted by trial_id.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.HparamTuningTrial hparam_trials = 20;
   */
  hparamTrials: Model_HparamTuningTrial[];

  /**
   * Output only. For single-objective [hyperparameter
   * tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview)
   * models, it only contains the best trial. For multi-objective
   * [hyperparameter
   * tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview)
   * models, it contains all Pareto optimal trials sorted by trial_id.
   *
   * @generated from field: repeated int64 optimal_trial_ids = 22;
   */
  optimalTrialIds: bigint[];

  /**
   * Output only. Remote model info
   *
   * @generated from field: google.cloud.bigquery.v2.RemoteModelInfo remote_model_info = 25;
   */
  remoteModelInfo?: RemoteModelInfo;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.
 * Use `create(ModelSchema)` to create a new message.
 */
export const ModelSchema: GenMessage<Model> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2);

/**
 * Enums for seasonal period.
 *
 * @generated from message google.cloud.bigquery.v2.Model.SeasonalPeriod
 */
export type Model_SeasonalPeriod = Message<"google.cloud.bigquery.v2.Model.SeasonalPeriod"> & {
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.SeasonalPeriod.
 * Use `create(Model_SeasonalPeriodSchema)` to create a new message.
 */
export const Model_SeasonalPeriodSchema: GenMessage<Model_SeasonalPeriod> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 0);

/**
 * Seasonal period type.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType
 */
export enum Model_SeasonalPeriod_SeasonalPeriodType {
  /**
   * Unspecified seasonal period.
   *
   * @generated from enum value: SEASONAL_PERIOD_TYPE_UNSPECIFIED = 0;
   */
  SEASONAL_PERIOD_TYPE_UNSPECIFIED = 0,

  /**
   * No seasonality
   *
   * @generated from enum value: NO_SEASONALITY = 1;
   */
  NO_SEASONALITY = 1,

  /**
   * Daily period, 24 hours.
   *
   * @generated from enum value: DAILY = 2;
   */
  DAILY = 2,

  /**
   * Weekly period, 7 days.
   *
   * @generated from enum value: WEEKLY = 3;
   */
  WEEKLY = 3,

  /**
   * Monthly period, 30 days or irregular.
   *
   * @generated from enum value: MONTHLY = 4;
   */
  MONTHLY = 4,

  /**
   * Quarterly period, 90 days or irregular.
   *
   * @generated from enum value: QUARTERLY = 5;
   */
  QUARTERLY = 5,

  /**
   * Yearly period, 365 days or irregular.
   *
   * @generated from enum value: YEARLY = 6;
   */
  YEARLY = 6,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType.
 */
export const Model_SeasonalPeriod_SeasonalPeriodTypeSchema: GenEnum<Model_SeasonalPeriod_SeasonalPeriodType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 0, 0);

/**
 * Enums for kmeans model type.
 *
 * @generated from message google.cloud.bigquery.v2.Model.KmeansEnums
 */
export type Model_KmeansEnums = Message<"google.cloud.bigquery.v2.Model.KmeansEnums"> & {
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.KmeansEnums.
 * Use `create(Model_KmeansEnumsSchema)` to create a new message.
 */
export const Model_KmeansEnumsSchema: GenMessage<Model_KmeansEnums> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 1);

/**
 * Indicates the method used to initialize the centroids for KMeans
 * clustering algorithm.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.KmeansEnums.KmeansInitializationMethod
 */
export enum Model_KmeansEnums_KmeansInitializationMethod {
  /**
   * Unspecified initialization method.
   *
   * @generated from enum value: KMEANS_INITIALIZATION_METHOD_UNSPECIFIED = 0;
   */
  KMEANS_INITIALIZATION_METHOD_UNSPECIFIED = 0,

  /**
   * Initializes the centroids randomly.
   *
   * @generated from enum value: RANDOM = 1;
   */
  RANDOM = 1,

  /**
   * Initializes the centroids using data specified in
   * kmeans_initialization_column.
   *
   * @generated from enum value: CUSTOM = 2;
   */
  CUSTOM = 2,

  /**
   * Initializes with kmeans++.
   *
   * @generated from enum value: KMEANS_PLUS_PLUS = 3;
   */
  KMEANS_PLUS_PLUS = 3,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.KmeansEnums.KmeansInitializationMethod.
 */
export const Model_KmeansEnums_KmeansInitializationMethodSchema: GenEnum<Model_KmeansEnums_KmeansInitializationMethod> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 1, 0);

/**
 * Enums for XGBoost model type.
 *
 * @generated from message google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums
 */
export type Model_BoostedTreeOptionEnums = Message<"google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums"> & {
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums.
 * Use `create(Model_BoostedTreeOptionEnumsSchema)` to create a new message.
 */
export const Model_BoostedTreeOptionEnumsSchema: GenMessage<Model_BoostedTreeOptionEnums> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 2);

/**
 * Booster types supported. Refer to booster parameter in XGBoost.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums.BoosterType
 */
export enum Model_BoostedTreeOptionEnums_BoosterType {
  /**
   * Unspecified booster type.
   *
   * @generated from enum value: BOOSTER_TYPE_UNSPECIFIED = 0;
   */
  BOOSTER_TYPE_UNSPECIFIED = 0,

  /**
   * Gbtree booster.
   *
   * @generated from enum value: GBTREE = 1;
   */
  GBTREE = 1,

  /**
   * Dart booster.
   *
   * @generated from enum value: DART = 2;
   */
  DART = 2,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums.BoosterType.
 */
export const Model_BoostedTreeOptionEnums_BoosterTypeSchema: GenEnum<Model_BoostedTreeOptionEnums_BoosterType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 2, 0);

/**
 * Type of normalization algorithm for boosted tree models using dart
 * booster. Refer to normalize_type in XGBoost.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums.DartNormalizeType
 */
export enum Model_BoostedTreeOptionEnums_DartNormalizeType {
  /**
   * Unspecified dart normalize type.
   *
   * @generated from enum value: DART_NORMALIZE_TYPE_UNSPECIFIED = 0;
   */
  DART_NORMALIZE_TYPE_UNSPECIFIED = 0,

  /**
   * New trees have the same weight of each of dropped trees.
   *
   * @generated from enum value: TREE = 1;
   */
  TREE = 1,

  /**
   * New trees have the same weight of sum of dropped trees.
   *
   * @generated from enum value: FOREST = 2;
   */
  FOREST = 2,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums.DartNormalizeType.
 */
export const Model_BoostedTreeOptionEnums_DartNormalizeTypeSchema: GenEnum<Model_BoostedTreeOptionEnums_DartNormalizeType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 2, 1);

/**
 * Tree construction algorithm used in boosted tree models.
 * Refer to tree_method in XGBoost.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums.TreeMethod
 */
export enum Model_BoostedTreeOptionEnums_TreeMethod {
  /**
   * Unspecified tree method.
   *
   * @generated from enum value: TREE_METHOD_UNSPECIFIED = 0;
   */
  TREE_METHOD_UNSPECIFIED = 0,

  /**
   * Use heuristic to choose the fastest method.
   *
   * @generated from enum value: AUTO = 1;
   */
  AUTO = 1,

  /**
   * Exact greedy algorithm.
   *
   * @generated from enum value: EXACT = 2;
   */
  EXACT = 2,

  /**
   * Approximate greedy algorithm using quantile sketch and gradient
   * histogram.
   *
   * @generated from enum value: APPROX = 3;
   */
  APPROX = 3,

  /**
   * Fast histogram optimized approximate greedy algorithm.
   *
   * @generated from enum value: HIST = 4;
   */
  HIST = 4,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums.TreeMethod.
 */
export const Model_BoostedTreeOptionEnums_TreeMethodSchema: GenEnum<Model_BoostedTreeOptionEnums_TreeMethod> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 2, 2);

/**
 * Enums for hyperparameter tuning.
 *
 * @generated from message google.cloud.bigquery.v2.Model.HparamTuningEnums
 */
export type Model_HparamTuningEnums = Message<"google.cloud.bigquery.v2.Model.HparamTuningEnums"> & {
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.HparamTuningEnums.
 * Use `create(Model_HparamTuningEnumsSchema)` to create a new message.
 */
export const Model_HparamTuningEnumsSchema: GenMessage<Model_HparamTuningEnums> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 3);

/**
 * Available evaluation metrics used as hyperparameter tuning objectives.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.HparamTuningEnums.HparamTuningObjective
 */
export enum Model_HparamTuningEnums_HparamTuningObjective {
  /**
   * Unspecified evaluation metric.
   *
   * @generated from enum value: HPARAM_TUNING_OBJECTIVE_UNSPECIFIED = 0;
   */
  HPARAM_TUNING_OBJECTIVE_UNSPECIFIED = 0,

  /**
   * Mean absolute error.
   * mean_absolute_error = AVG(ABS(label - predicted))
   *
   * @generated from enum value: MEAN_ABSOLUTE_ERROR = 1;
   */
  MEAN_ABSOLUTE_ERROR = 1,

  /**
   * Mean squared error.
   * mean_squared_error = AVG(POW(label - predicted, 2))
   *
   * @generated from enum value: MEAN_SQUARED_ERROR = 2;
   */
  MEAN_SQUARED_ERROR = 2,

  /**
   * Mean squared log error.
   * mean_squared_log_error = AVG(POW(LN(1 + label) - LN(1 + predicted), 2))
   *
   * @generated from enum value: MEAN_SQUARED_LOG_ERROR = 3;
   */
  MEAN_SQUARED_LOG_ERROR = 3,

  /**
   * Mean absolute error.
   * median_absolute_error = APPROX_QUANTILES(absolute_error, 2)[OFFSET(1)]
   *
   * @generated from enum value: MEDIAN_ABSOLUTE_ERROR = 4;
   */
  MEDIAN_ABSOLUTE_ERROR = 4,

  /**
   * R^2 score. This corresponds to r2_score in ML.EVALUATE.
   * r_squared = 1 - SUM(squared_error)/(COUNT(label)*VAR_POP(label))
   *
   * @generated from enum value: R_SQUARED = 5;
   */
  R_SQUARED = 5,

  /**
   * Explained variance.
   * explained_variance = 1 - VAR_POP(label_error)/VAR_POP(label)
   *
   * @generated from enum value: EXPLAINED_VARIANCE = 6;
   */
  EXPLAINED_VARIANCE = 6,

  /**
   * Precision is the fraction of actual positive predictions that had
   * positive actual labels. For multiclass this is a macro-averaged metric
   * treating each class as a binary classifier.
   *
   * @generated from enum value: PRECISION = 7;
   */
  PRECISION = 7,

  /**
   * Recall is the fraction of actual positive labels that were given a
   * positive prediction. For multiclass this is a macro-averaged metric.
   *
   * @generated from enum value: RECALL = 8;
   */
  RECALL = 8,

  /**
   * Accuracy is the fraction of predictions given the correct label. For
   * multiclass this is a globally micro-averaged metric.
   *
   * @generated from enum value: ACCURACY = 9;
   */
  ACCURACY = 9,

  /**
   * The F1 score is an average of recall and precision. For multiclass this
   * is a macro-averaged metric.
   *
   * @generated from enum value: F1_SCORE = 10;
   */
  F1_SCORE = 10,

  /**
   * Logorithmic Loss. For multiclass this is a macro-averaged metric.
   *
   * @generated from enum value: LOG_LOSS = 11;
   */
  LOG_LOSS = 11,

  /**
   * Area Under an ROC Curve. For multiclass this is a macro-averaged
   * metric.
   *
   * @generated from enum value: ROC_AUC = 12;
   */
  ROC_AUC = 12,

  /**
   * Davies-Bouldin Index.
   *
   * @generated from enum value: DAVIES_BOULDIN_INDEX = 13;
   */
  DAVIES_BOULDIN_INDEX = 13,

  /**
   * Mean Average Precision.
   *
   * @generated from enum value: MEAN_AVERAGE_PRECISION = 14;
   */
  MEAN_AVERAGE_PRECISION = 14,

  /**
   * Normalized Discounted Cumulative Gain.
   *
   * @generated from enum value: NORMALIZED_DISCOUNTED_CUMULATIVE_GAIN = 15;
   */
  NORMALIZED_DISCOUNTED_CUMULATIVE_GAIN = 15,

  /**
   * Average Rank.
   *
   * @generated from enum value: AVERAGE_RANK = 16;
   */
  AVERAGE_RANK = 16,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.HparamTuningEnums.HparamTuningObjective.
 */
export const Model_HparamTuningEnums_HparamTuningObjectiveSchema: GenEnum<Model_HparamTuningEnums_HparamTuningObjective> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 3, 0);

/**
 * Evaluation metrics for regression and explicit feedback type matrix
 * factorization models.
 *
 * @generated from message google.cloud.bigquery.v2.Model.RegressionMetrics
 */
export type Model_RegressionMetrics = Message<"google.cloud.bigquery.v2.Model.RegressionMetrics"> & {
  /**
   * Mean absolute error.
   *
   * @generated from field: google.protobuf.DoubleValue mean_absolute_error = 1;
   */
  meanAbsoluteError?: number;

  /**
   * Mean squared error.
   *
   * @generated from field: google.protobuf.DoubleValue mean_squared_error = 2;
   */
  meanSquaredError?: number;

  /**
   * Mean squared log error.
   *
   * @generated from field: google.protobuf.DoubleValue mean_squared_log_error = 3;
   */
  meanSquaredLogError?: number;

  /**
   * Median absolute error.
   *
   * @generated from field: google.protobuf.DoubleValue median_absolute_error = 4;
   */
  medianAbsoluteError?: number;

  /**
   * R^2 score. This corresponds to r2_score in ML.EVALUATE.
   *
   * @generated from field: google.protobuf.DoubleValue r_squared = 5;
   */
  rSquared?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.RegressionMetrics.
 * Use `create(Model_RegressionMetricsSchema)` to create a new message.
 */
export const Model_RegressionMetricsSchema: GenMessage<Model_RegressionMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 4);

/**
 * Aggregate metrics for classification/classifier models. For multi-class
 * models, the metrics are either macro-averaged or micro-averaged. When
 * macro-averaged, the metrics are calculated for each label and then an
 * unweighted average is taken of those values. When micro-averaged, the
 * metric is calculated globally by counting the total number of correctly
 * predicted rows.
 *
 * @generated from message google.cloud.bigquery.v2.Model.AggregateClassificationMetrics
 */
export type Model_AggregateClassificationMetrics = Message<"google.cloud.bigquery.v2.Model.AggregateClassificationMetrics"> & {
  /**
   * Precision is the fraction of actual positive predictions that had
   * positive actual labels. For multiclass this is a macro-averaged
   * metric treating each class as a binary classifier.
   *
   * @generated from field: google.protobuf.DoubleValue precision = 1;
   */
  precision?: number;

  /**
   * Recall is the fraction of actual positive labels that were given a
   * positive prediction. For multiclass this is a macro-averaged metric.
   *
   * @generated from field: google.protobuf.DoubleValue recall = 2;
   */
  recall?: number;

  /**
   * Accuracy is the fraction of predictions given the correct label. For
   * multiclass this is a micro-averaged metric.
   *
   * @generated from field: google.protobuf.DoubleValue accuracy = 3;
   */
  accuracy?: number;

  /**
   * Threshold at which the metrics are computed. For binary
   * classification models this is the positive class threshold.
   * For multi-class classfication models this is the confidence
   * threshold.
   *
   * @generated from field: google.protobuf.DoubleValue threshold = 4;
   */
  threshold?: number;

  /**
   * The F1 score is an average of recall and precision. For multiclass
   * this is a macro-averaged metric.
   *
   * @generated from field: google.protobuf.DoubleValue f1_score = 5;
   */
  f1Score?: number;

  /**
   * Logarithmic Loss. For multiclass this is a macro-averaged metric.
   *
   * @generated from field: google.protobuf.DoubleValue log_loss = 6;
   */
  logLoss?: number;

  /**
   * Area Under a ROC Curve. For multiclass this is a macro-averaged
   * metric.
   *
   * @generated from field: google.protobuf.DoubleValue roc_auc = 7;
   */
  rocAuc?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.
 * Use `create(Model_AggregateClassificationMetricsSchema)` to create a new message.
 */
export const Model_AggregateClassificationMetricsSchema: GenMessage<Model_AggregateClassificationMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 5);

/**
 * Evaluation metrics for binary classification/classifier models.
 *
 * @generated from message google.cloud.bigquery.v2.Model.BinaryClassificationMetrics
 */
export type Model_BinaryClassificationMetrics = Message<"google.cloud.bigquery.v2.Model.BinaryClassificationMetrics"> & {
  /**
   * Aggregate classification metrics.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.AggregateClassificationMetrics aggregate_classification_metrics = 1;
   */
  aggregateClassificationMetrics?: Model_AggregateClassificationMetrics;

  /**
   * Binary confusion matrix at multiple thresholds.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix binary_confusion_matrix_list = 2;
   */
  binaryConfusionMatrixList: Model_BinaryClassificationMetrics_BinaryConfusionMatrix[];

  /**
   * Label representing the positive class.
   *
   * @generated from field: string positive_label = 3;
   */
  positiveLabel: string;

  /**
   * Label representing the negative class.
   *
   * @generated from field: string negative_label = 4;
   */
  negativeLabel: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.
 * Use `create(Model_BinaryClassificationMetricsSchema)` to create a new message.
 */
export const Model_BinaryClassificationMetricsSchema: GenMessage<Model_BinaryClassificationMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 6);

/**
 * Confusion matrix for binary classification models.
 *
 * @generated from message google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix
 */
export type Model_BinaryClassificationMetrics_BinaryConfusionMatrix = Message<"google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix"> & {
  /**
   * Threshold value used when computing each of the following metric.
   *
   * @generated from field: google.protobuf.DoubleValue positive_class_threshold = 1;
   */
  positiveClassThreshold?: number;

  /**
   * Number of true samples predicted as true.
   *
   * @generated from field: google.protobuf.Int64Value true_positives = 2;
   */
  truePositives?: bigint;

  /**
   * Number of false samples predicted as true.
   *
   * @generated from field: google.protobuf.Int64Value false_positives = 3;
   */
  falsePositives?: bigint;

  /**
   * Number of true samples predicted as false.
   *
   * @generated from field: google.protobuf.Int64Value true_negatives = 4;
   */
  trueNegatives?: bigint;

  /**
   * Number of false samples predicted as false.
   *
   * @generated from field: google.protobuf.Int64Value false_negatives = 5;
   */
  falseNegatives?: bigint;

  /**
   * The fraction of actual positive predictions that had positive actual
   * labels.
   *
   * @generated from field: google.protobuf.DoubleValue precision = 6;
   */
  precision?: number;

  /**
   * The fraction of actual positive labels that were given a positive
   * prediction.
   *
   * @generated from field: google.protobuf.DoubleValue recall = 7;
   */
  recall?: number;

  /**
   * The equally weighted average of recall and precision.
   *
   * @generated from field: google.protobuf.DoubleValue f1_score = 8;
   */
  f1Score?: number;

  /**
   * The fraction of predictions given the correct label.
   *
   * @generated from field: google.protobuf.DoubleValue accuracy = 9;
   */
  accuracy?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.
 * Use `create(Model_BinaryClassificationMetrics_BinaryConfusionMatrixSchema)` to create a new message.
 */
export const Model_BinaryClassificationMetrics_BinaryConfusionMatrixSchema: GenMessage<Model_BinaryClassificationMetrics_BinaryConfusionMatrix> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 6, 0);

/**
 * Evaluation metrics for multi-class classification/classifier models.
 *
 * @generated from message google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics
 */
export type Model_MultiClassClassificationMetrics = Message<"google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics"> & {
  /**
   * Aggregate classification metrics.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.AggregateClassificationMetrics aggregate_classification_metrics = 1;
   */
  aggregateClassificationMetrics?: Model_AggregateClassificationMetrics;

  /**
   * Confusion matrix at different thresholds.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix confusion_matrix_list = 2;
   */
  confusionMatrixList: Model_MultiClassClassificationMetrics_ConfusionMatrix[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.
 * Use `create(Model_MultiClassClassificationMetricsSchema)` to create a new message.
 */
export const Model_MultiClassClassificationMetricsSchema: GenMessage<Model_MultiClassClassificationMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 7);

/**
 * Confusion matrix for multi-class classification models.
 *
 * @generated from message google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix
 */
export type Model_MultiClassClassificationMetrics_ConfusionMatrix = Message<"google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix"> & {
  /**
   * Confidence threshold used when computing the entries of the
   * confusion matrix.
   *
   * @generated from field: google.protobuf.DoubleValue confidence_threshold = 1;
   */
  confidenceThreshold?: number;

  /**
   * One row per actual label.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row rows = 2;
   */
  rows: Model_MultiClassClassificationMetrics_ConfusionMatrix_Row[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.
 * Use `create(Model_MultiClassClassificationMetrics_ConfusionMatrixSchema)` to create a new message.
 */
export const Model_MultiClassClassificationMetrics_ConfusionMatrixSchema: GenMessage<Model_MultiClassClassificationMetrics_ConfusionMatrix> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 7, 0);

/**
 * A single entry in the confusion matrix.
 *
 * @generated from message google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry
 */
export type Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry = Message<"google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry"> & {
  /**
   * The predicted label. For confidence_threshold > 0, we will
   * also add an entry indicating the number of items under the
   * confidence threshold.
   *
   * @generated from field: string predicted_label = 1;
   */
  predictedLabel: string;

  /**
   * Number of items being predicted as this label.
   *
   * @generated from field: google.protobuf.Int64Value item_count = 2;
   */
  itemCount?: bigint;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.
 * Use `create(Model_MultiClassClassificationMetrics_ConfusionMatrix_EntrySchema)` to create a new message.
 */
export const Model_MultiClassClassificationMetrics_ConfusionMatrix_EntrySchema: GenMessage<Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 7, 0, 0);

/**
 * A single row in the confusion matrix.
 *
 * @generated from message google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row
 */
export type Model_MultiClassClassificationMetrics_ConfusionMatrix_Row = Message<"google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row"> & {
  /**
   * The original label of this row.
   *
   * @generated from field: string actual_label = 1;
   */
  actualLabel: string;

  /**
   * Info describing predicted label distribution.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry entries = 2;
   */
  entries: Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.
 * Use `create(Model_MultiClassClassificationMetrics_ConfusionMatrix_RowSchema)` to create a new message.
 */
export const Model_MultiClassClassificationMetrics_ConfusionMatrix_RowSchema: GenMessage<Model_MultiClassClassificationMetrics_ConfusionMatrix_Row> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 7, 0, 1);

/**
 * Evaluation metrics for clustering models.
 *
 * @generated from message google.cloud.bigquery.v2.Model.ClusteringMetrics
 */
export type Model_ClusteringMetrics = Message<"google.cloud.bigquery.v2.Model.ClusteringMetrics"> & {
  /**
   * Davies-Bouldin index.
   *
   * @generated from field: google.protobuf.DoubleValue davies_bouldin_index = 1;
   */
  daviesBouldinIndex?: number;

  /**
   * Mean of squared distances between each sample to its cluster centroid.
   *
   * @generated from field: google.protobuf.DoubleValue mean_squared_distance = 2;
   */
  meanSquaredDistance?: number;

  /**
   * Information for all clusters.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster clusters = 3;
   */
  clusters: Model_ClusteringMetrics_Cluster[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.ClusteringMetrics.
 * Use `create(Model_ClusteringMetricsSchema)` to create a new message.
 */
export const Model_ClusteringMetricsSchema: GenMessage<Model_ClusteringMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 8);

/**
 * Message containing the information about one cluster.
 *
 * @generated from message google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster
 */
export type Model_ClusteringMetrics_Cluster = Message<"google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster"> & {
  /**
   * Centroid id.
   *
   * @generated from field: int64 centroid_id = 1;
   */
  centroidId: bigint;

  /**
   * Values of highly variant features for this cluster.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue feature_values = 2;
   */
  featureValues: Model_ClusteringMetrics_Cluster_FeatureValue[];

  /**
   * Count of training data rows that were assigned to this cluster.
   *
   * @generated from field: google.protobuf.Int64Value count = 3;
   */
  count?: bigint;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.
 * Use `create(Model_ClusteringMetrics_ClusterSchema)` to create a new message.
 */
export const Model_ClusteringMetrics_ClusterSchema: GenMessage<Model_ClusteringMetrics_Cluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 8, 0);

/**
 * Representative value of a single feature within the cluster.
 *
 * @generated from message google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue
 */
export type Model_ClusteringMetrics_Cluster_FeatureValue = Message<"google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue"> & {
  /**
   * The feature column name.
   *
   * @generated from field: string feature_column = 1;
   */
  featureColumn: string;

  /**
   * Value.
   *
   * @generated from oneof google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.value
   */
  value: {
    /**
     * The numerical feature value. This is the centroid value for this
     * feature.
     *
     * @generated from field: google.protobuf.DoubleValue numerical_value = 2;
     */
    value: DoubleValue;
    case: "numericalValue";
  } | {
    /**
     * The categorical feature value.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue categorical_value = 3;
     */
    value: Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue;
    case: "categoricalValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.
 * Use `create(Model_ClusteringMetrics_Cluster_FeatureValueSchema)` to create a new message.
 */
export const Model_ClusteringMetrics_Cluster_FeatureValueSchema: GenMessage<Model_ClusteringMetrics_Cluster_FeatureValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 8, 0, 0);

/**
 * Representative value of a categorical feature.
 *
 * @generated from message google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue
 */
export type Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue = Message<"google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue"> & {
  /**
   * Counts of all categories for the categorical feature. If there are
   * more than ten categories, we return top ten (by count) and return
   * one more CategoryCount with category "_OTHER_" and count as
   * aggregate counts of remaining categories.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount category_counts = 1;
   */
  categoryCounts: Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.
 * Use `create(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValueSchema)` to create a new message.
 */
export const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValueSchema: GenMessage<Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 8, 0, 0, 0);

/**
 * Represents the count of a single category within the cluster.
 *
 * @generated from message google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount
 */
export type Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount = Message<"google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount"> & {
  /**
   * The name of category.
   *
   * @generated from field: string category = 1;
   */
  category: string;

  /**
   * The count of training samples matching the category within the
   * cluster.
   *
   * @generated from field: google.protobuf.Int64Value count = 2;
   */
  count?: bigint;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.
 * Use `create(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCountSchema)` to create a new message.
 */
export const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCountSchema: GenMessage<Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 8, 0, 0, 0, 0);

/**
 * Evaluation metrics used by weighted-ALS models specified by
 * feedback_type=implicit.
 *
 * @generated from message google.cloud.bigquery.v2.Model.RankingMetrics
 */
export type Model_RankingMetrics = Message<"google.cloud.bigquery.v2.Model.RankingMetrics"> & {
  /**
   * Calculates a precision per user for all the items by ranking them and
   * then averages all the precisions across all the users.
   *
   * @generated from field: google.protobuf.DoubleValue mean_average_precision = 1;
   */
  meanAveragePrecision?: number;

  /**
   * Similar to the mean squared error computed in regression and explicit
   * recommendation models except instead of computing the rating directly,
   * the output from evaluate is computed against a preference which is 1 or 0
   * depending on if the rating exists or not.
   *
   * @generated from field: google.protobuf.DoubleValue mean_squared_error = 2;
   */
  meanSquaredError?: number;

  /**
   * A metric to determine the goodness of a ranking calculated from the
   * predicted confidence by comparing it to an ideal rank measured by the
   * original ratings.
   *
   * @generated from field: google.protobuf.DoubleValue normalized_discounted_cumulative_gain = 3;
   */
  normalizedDiscountedCumulativeGain?: number;

  /**
   * Determines the goodness of a ranking by computing the percentile rank
   * from the predicted confidence and dividing it by the original rank.
   *
   * @generated from field: google.protobuf.DoubleValue average_rank = 4;
   */
  averageRank?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.RankingMetrics.
 * Use `create(Model_RankingMetricsSchema)` to create a new message.
 */
export const Model_RankingMetricsSchema: GenMessage<Model_RankingMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 9);

/**
 * Model evaluation metrics for ARIMA forecasting models.
 *
 * @generated from message google.cloud.bigquery.v2.Model.ArimaForecastingMetrics
 */
export type Model_ArimaForecastingMetrics = Message<"google.cloud.bigquery.v2.Model.ArimaForecastingMetrics"> & {
  /**
   * Repeated as there can be many metric sets (one for each model) in
   * auto-arima and the large-scale case.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics arima_single_model_forecasting_metrics = 6;
   */
  arimaSingleModelForecastingMetrics: Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.
 * Use `create(Model_ArimaForecastingMetricsSchema)` to create a new message.
 */
export const Model_ArimaForecastingMetricsSchema: GenMessage<Model_ArimaForecastingMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 10);

/**
 * Model evaluation metrics for a single ARIMA forecasting model.
 *
 * @generated from message google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics
 */
export type Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics = Message<"google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics"> & {
  /**
   * Non-seasonal order.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 1;
   */
  nonSeasonalOrder?: Model_ArimaOrder;

  /**
   * Arima fitting metrics.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.ArimaFittingMetrics arima_fitting_metrics = 2;
   */
  arimaFittingMetrics?: Model_ArimaFittingMetrics;

  /**
   * Is arima model fitted with drift or not. It is always false when d
   * is not 1.
   *
   * @generated from field: google.protobuf.BoolValue has_drift = 3;
   */
  hasDrift?: boolean;

  /**
   * The time_series_id value for this time series. It will be one of
   * the unique values from the time_series_id_column specified during
   * ARIMA model training. Only present when time_series_id_column
   * training option was used.
   *
   * @generated from field: string time_series_id = 4;
   */
  timeSeriesId: string;

  /**
   * The tuple of time_series_ids identifying this time series. It will
   * be one of the unique tuples of values present in the
   * time_series_id_columns specified during ARIMA model training. Only
   * present when time_series_id_columns training option was used and
   * the order of values here are same as the order of
   * time_series_id_columns.
   *
   * @generated from field: repeated string time_series_ids = 9;
   */
  timeSeriesIds: string[];

  /**
   * Seasonal periods. Repeated because multiple periods are supported
   * for one time series.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 5;
   */
  seasonalPeriods: Model_SeasonalPeriod_SeasonalPeriodType[];

  /**
   * If true, holiday_effect is a part of time series decomposition result.
   *
   * @generated from field: google.protobuf.BoolValue has_holiday_effect = 6;
   */
  hasHolidayEffect?: boolean;

  /**
   * If true, spikes_and_dips is a part of time series decomposition result.
   *
   * @generated from field: google.protobuf.BoolValue has_spikes_and_dips = 7;
   */
  hasSpikesAndDips?: boolean;

  /**
   * If true, step_changes is a part of time series decomposition result.
   *
   * @generated from field: google.protobuf.BoolValue has_step_changes = 8;
   */
  hasStepChanges?: boolean;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.
 * Use `create(Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetricsSchema)` to create a new message.
 */
export const Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetricsSchema: GenMessage<Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 10, 0);

/**
 * Model evaluation metrics for dimensionality reduction models.
 *
 * @generated from message google.cloud.bigquery.v2.Model.DimensionalityReductionMetrics
 */
export type Model_DimensionalityReductionMetrics = Message<"google.cloud.bigquery.v2.Model.DimensionalityReductionMetrics"> & {
  /**
   * Total percentage of variance explained by the selected principal
   * components.
   *
   * @generated from field: google.protobuf.DoubleValue total_explained_variance_ratio = 1;
   */
  totalExplainedVarianceRatio?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.DimensionalityReductionMetrics.
 * Use `create(Model_DimensionalityReductionMetricsSchema)` to create a new message.
 */
export const Model_DimensionalityReductionMetricsSchema: GenMessage<Model_DimensionalityReductionMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 11);

/**
 * Evaluation metrics of a model. These are either computed on all training
 * data or just the eval data based on whether eval data was used during
 * training. These are not present for imported models.
 *
 * @generated from message google.cloud.bigquery.v2.Model.EvaluationMetrics
 */
export type Model_EvaluationMetrics = Message<"google.cloud.bigquery.v2.Model.EvaluationMetrics"> & {
  /**
   * Metrics.
   *
   * @generated from oneof google.cloud.bigquery.v2.Model.EvaluationMetrics.metrics
   */
  metrics: {
    /**
     * Populated for regression models and explicit feedback type matrix
     * factorization models.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.RegressionMetrics regression_metrics = 1;
     */
    value: Model_RegressionMetrics;
    case: "regressionMetrics";
  } | {
    /**
     * Populated for binary classification/classifier models.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.BinaryClassificationMetrics binary_classification_metrics = 2;
     */
    value: Model_BinaryClassificationMetrics;
    case: "binaryClassificationMetrics";
  } | {
    /**
     * Populated for multi-class classification/classifier models.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics multi_class_classification_metrics = 3;
     */
    value: Model_MultiClassClassificationMetrics;
    case: "multiClassClassificationMetrics";
  } | {
    /**
     * Populated for clustering models.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.ClusteringMetrics clustering_metrics = 4;
     */
    value: Model_ClusteringMetrics;
    case: "clusteringMetrics";
  } | {
    /**
     * Populated for implicit feedback type matrix factorization models.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.RankingMetrics ranking_metrics = 5;
     */
    value: Model_RankingMetrics;
    case: "rankingMetrics";
  } | {
    /**
     * Populated for ARIMA models.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.ArimaForecastingMetrics arima_forecasting_metrics = 6;
     */
    value: Model_ArimaForecastingMetrics;
    case: "arimaForecastingMetrics";
  } | {
    /**
     * Evaluation metrics when the model is a dimensionality reduction model,
     * which currently includes PCA.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.DimensionalityReductionMetrics dimensionality_reduction_metrics = 7;
     */
    value: Model_DimensionalityReductionMetrics;
    case: "dimensionalityReductionMetrics";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.EvaluationMetrics.
 * Use `create(Model_EvaluationMetricsSchema)` to create a new message.
 */
export const Model_EvaluationMetricsSchema: GenMessage<Model_EvaluationMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 12);

/**
 * Data split result. This contains references to the training and evaluation
 * data tables that were used to train the model.
 *
 * @generated from message google.cloud.bigquery.v2.Model.DataSplitResult
 */
export type Model_DataSplitResult = Message<"google.cloud.bigquery.v2.Model.DataSplitResult"> & {
  /**
   * Table reference of the training data after split.
   *
   * @generated from field: google.cloud.bigquery.v2.TableReference training_table = 1;
   */
  trainingTable?: TableReference;

  /**
   * Table reference of the evaluation data after split.
   *
   * @generated from field: google.cloud.bigquery.v2.TableReference evaluation_table = 2;
   */
  evaluationTable?: TableReference;

  /**
   * Table reference of the test data after split.
   *
   * @generated from field: google.cloud.bigquery.v2.TableReference test_table = 3;
   */
  testTable?: TableReference;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.DataSplitResult.
 * Use `create(Model_DataSplitResultSchema)` to create a new message.
 */
export const Model_DataSplitResultSchema: GenMessage<Model_DataSplitResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 13);

/**
 * Arima order, can be used for both non-seasonal and seasonal parts.
 *
 * @generated from message google.cloud.bigquery.v2.Model.ArimaOrder
 */
export type Model_ArimaOrder = Message<"google.cloud.bigquery.v2.Model.ArimaOrder"> & {
  /**
   * Order of the autoregressive part.
   *
   * @generated from field: google.protobuf.Int64Value p = 1;
   */
  p?: bigint;

  /**
   * Order of the differencing part.
   *
   * @generated from field: google.protobuf.Int64Value d = 2;
   */
  d?: bigint;

  /**
   * Order of the moving-average part.
   *
   * @generated from field: google.protobuf.Int64Value q = 3;
   */
  q?: bigint;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.ArimaOrder.
 * Use `create(Model_ArimaOrderSchema)` to create a new message.
 */
export const Model_ArimaOrderSchema: GenMessage<Model_ArimaOrder> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 14);

/**
 * ARIMA model fitting metrics.
 *
 * @generated from message google.cloud.bigquery.v2.Model.ArimaFittingMetrics
 */
export type Model_ArimaFittingMetrics = Message<"google.cloud.bigquery.v2.Model.ArimaFittingMetrics"> & {
  /**
   * Log-likelihood.
   *
   * @generated from field: google.protobuf.DoubleValue log_likelihood = 1;
   */
  logLikelihood?: number;

  /**
   * AIC.
   *
   * @generated from field: google.protobuf.DoubleValue aic = 2;
   */
  aic?: number;

  /**
   * Variance.
   *
   * @generated from field: google.protobuf.DoubleValue variance = 3;
   */
  variance?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.ArimaFittingMetrics.
 * Use `create(Model_ArimaFittingMetricsSchema)` to create a new message.
 */
export const Model_ArimaFittingMetricsSchema: GenMessage<Model_ArimaFittingMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 15);

/**
 * Global explanations containing the top most important features
 * after training.
 *
 * @generated from message google.cloud.bigquery.v2.Model.GlobalExplanation
 */
export type Model_GlobalExplanation = Message<"google.cloud.bigquery.v2.Model.GlobalExplanation"> & {
  /**
   * A list of the top global explanations. Sorted by absolute value of
   * attribution in descending order.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation explanations = 1;
   */
  explanations: Model_GlobalExplanation_Explanation[];

  /**
   * Class label for this set of global explanations. Will be empty/null for
   * binary logistic and linear regression models. Sorted alphabetically in
   * descending order.
   *
   * @generated from field: string class_label = 2;
   */
  classLabel: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.GlobalExplanation.
 * Use `create(Model_GlobalExplanationSchema)` to create a new message.
 */
export const Model_GlobalExplanationSchema: GenMessage<Model_GlobalExplanation> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 16);

/**
 * Explanation for a single feature.
 *
 * @generated from message google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation
 */
export type Model_GlobalExplanation_Explanation = Message<"google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation"> & {
  /**
   * The full feature name. For non-numerical features, will be formatted
   * like `<column_name>.<encoded_feature_name>`. Overall size of feature
   * name will always be truncated to first 120 characters.
   *
   * @generated from field: string feature_name = 1;
   */
  featureName: string;

  /**
   * Attribution of feature.
   *
   * @generated from field: google.protobuf.DoubleValue attribution = 2;
   */
  attribution?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.
 * Use `create(Model_GlobalExplanation_ExplanationSchema)` to create a new message.
 */
export const Model_GlobalExplanation_ExplanationSchema: GenMessage<Model_GlobalExplanation_Explanation> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 16, 0);

/**
 * Encoding methods for categorical features.
 *
 * @generated from message google.cloud.bigquery.v2.Model.CategoryEncodingMethod
 */
export type Model_CategoryEncodingMethod = Message<"google.cloud.bigquery.v2.Model.CategoryEncodingMethod"> & {
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.CategoryEncodingMethod.
 * Use `create(Model_CategoryEncodingMethodSchema)` to create a new message.
 */
export const Model_CategoryEncodingMethodSchema: GenMessage<Model_CategoryEncodingMethod> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 17);

/**
 * Supported encoding methods for categorical features.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.CategoryEncodingMethod.EncodingMethod
 */
export enum Model_CategoryEncodingMethod_EncodingMethod {
  /**
   * Unspecified encoding method.
   *
   * @generated from enum value: ENCODING_METHOD_UNSPECIFIED = 0;
   */
  ENCODING_METHOD_UNSPECIFIED = 0,

  /**
   * Applies one-hot encoding.
   *
   * @generated from enum value: ONE_HOT_ENCODING = 1;
   */
  ONE_HOT_ENCODING = 1,

  /**
   * Applies label encoding.
   *
   * @generated from enum value: LABEL_ENCODING = 2;
   */
  LABEL_ENCODING = 2,

  /**
   * Applies dummy encoding.
   *
   * @generated from enum value: DUMMY_ENCODING = 3;
   */
  DUMMY_ENCODING = 3,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.CategoryEncodingMethod.EncodingMethod.
 */
export const Model_CategoryEncodingMethod_EncodingMethodSchema: GenEnum<Model_CategoryEncodingMethod_EncodingMethod> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 17, 0);

/**
 * PCA solver options.
 *
 * @generated from message google.cloud.bigquery.v2.Model.PcaSolverOptionEnums
 */
export type Model_PcaSolverOptionEnums = Message<"google.cloud.bigquery.v2.Model.PcaSolverOptionEnums"> & {
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.PcaSolverOptionEnums.
 * Use `create(Model_PcaSolverOptionEnumsSchema)` to create a new message.
 */
export const Model_PcaSolverOptionEnumsSchema: GenMessage<Model_PcaSolverOptionEnums> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 18);

/**
 * Enums for supported PCA solvers.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.PcaSolverOptionEnums.PcaSolver
 */
export enum Model_PcaSolverOptionEnums_PcaSolver {
  /**
   * Default value.
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Full eigen-decoposition.
   *
   * @generated from enum value: FULL = 1;
   */
  FULL = 1,

  /**
   * Randomized SVD.
   *
   * @generated from enum value: RANDOMIZED = 2;
   */
  RANDOMIZED = 2,

  /**
   * Auto.
   *
   * @generated from enum value: AUTO = 3;
   */
  AUTO = 3,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.PcaSolverOptionEnums.PcaSolver.
 */
export const Model_PcaSolverOptionEnums_PcaSolverSchema: GenEnum<Model_PcaSolverOptionEnums_PcaSolver> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 18, 0);

/**
 * Model registry options.
 *
 * @generated from message google.cloud.bigquery.v2.Model.ModelRegistryOptionEnums
 */
export type Model_ModelRegistryOptionEnums = Message<"google.cloud.bigquery.v2.Model.ModelRegistryOptionEnums"> & {
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.ModelRegistryOptionEnums.
 * Use `create(Model_ModelRegistryOptionEnumsSchema)` to create a new message.
 */
export const Model_ModelRegistryOptionEnumsSchema: GenMessage<Model_ModelRegistryOptionEnums> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 19);

/**
 * Enums for supported model registries.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.ModelRegistryOptionEnums.ModelRegistry
 */
export enum Model_ModelRegistryOptionEnums_ModelRegistry {
  /**
   * Default value.
   *
   * @generated from enum value: MODEL_REGISTRY_UNSPECIFIED = 0;
   */
  MODEL_REGISTRY_UNSPECIFIED = 0,

  /**
   * Vertex AI.
   *
   * @generated from enum value: VERTEX_AI = 1;
   */
  VERTEX_AI = 1,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.ModelRegistryOptionEnums.ModelRegistry.
 */
export const Model_ModelRegistryOptionEnums_ModelRegistrySchema: GenEnum<Model_ModelRegistryOptionEnums_ModelRegistry> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 19, 0);

/**
 * Information about a single training query run for the model.
 *
 * @generated from message google.cloud.bigquery.v2.Model.TrainingRun
 */
export type Model_TrainingRun = Message<"google.cloud.bigquery.v2.Model.TrainingRun"> & {
  /**
   * Output only. Options that were used for this training run, includes
   * user specified and default options that were used.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions training_options = 1;
   */
  trainingOptions?: Model_TrainingRun_TrainingOptions;

  /**
   * Output only. The start time of this training run.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 8;
   */
  startTime?: Timestamp;

  /**
   * Output only. Output of each iteration run, results.size() <=
   * max_iterations.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.TrainingRun.IterationResult results = 6;
   */
  results: Model_TrainingRun_IterationResult[];

  /**
   * Output only. The evaluation metrics over training/eval data that were
   * computed at the end of training.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.EvaluationMetrics evaluation_metrics = 7;
   */
  evaluationMetrics?: Model_EvaluationMetrics;

  /**
   * Output only. Data split result of the training run. Only set when the
   * input data is actually split.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DataSplitResult data_split_result = 9;
   */
  dataSplitResult?: Model_DataSplitResult;

  /**
   * Output only. Global explanation contains the explanation of top features
   * on the model level. Applies to both regression and classification models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.GlobalExplanation model_level_global_explanation = 11;
   */
  modelLevelGlobalExplanation?: Model_GlobalExplanation;

  /**
   * Output only. Global explanation contains the explanation of top features
   * on the class level. Applies to classification models only.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.GlobalExplanation class_level_global_explanations = 12;
   */
  classLevelGlobalExplanations: Model_GlobalExplanation[];

  /**
   * The model id in the [Vertex AI Model
   * Registry](https://cloud.google.com/vertex-ai/docs/model-registry/introduction)
   * for this training run.
   *
   * @generated from field: string vertex_ai_model_id = 14;
   */
  vertexAiModelId: string;

  /**
   * Output only. The model version in the [Vertex AI Model
   * Registry](https://cloud.google.com/vertex-ai/docs/model-registry/introduction)
   * for this training run.
   *
   * @generated from field: string vertex_ai_model_version = 15;
   */
  vertexAiModelVersion: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.TrainingRun.
 * Use `create(Model_TrainingRunSchema)` to create a new message.
 */
export const Model_TrainingRunSchema: GenMessage<Model_TrainingRun> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 20);

/**
 * Options used in model training.
 *
 * @generated from message google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions
 */
export type Model_TrainingRun_TrainingOptions = Message<"google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions"> & {
  /**
   * The maximum number of iterations in training. Used only for iterative
   * training algorithms.
   *
   * @generated from field: int64 max_iterations = 1;
   */
  maxIterations: bigint;

  /**
   * Type of loss function used during training run.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.LossType loss_type = 2;
   */
  lossType: Model_LossType;

  /**
   * Learning rate in training. Used only for iterative training algorithms.
   *
   * @generated from field: double learn_rate = 3;
   */
  learnRate: number;

  /**
   * L1 regularization coefficient.
   *
   * @generated from field: google.protobuf.DoubleValue l1_regularization = 4;
   */
  l1Regularization?: number;

  /**
   * L2 regularization coefficient.
   *
   * @generated from field: google.protobuf.DoubleValue l2_regularization = 5;
   */
  l2Regularization?: number;

  /**
   * When early_stop is true, stops training when accuracy improvement is
   * less than 'min_relative_progress'. Used only for iterative training
   * algorithms.
   *
   * @generated from field: google.protobuf.DoubleValue min_relative_progress = 6;
   */
  minRelativeProgress?: number;

  /**
   * Whether to train a model from the last checkpoint.
   *
   * @generated from field: google.protobuf.BoolValue warm_start = 7;
   */
  warmStart?: boolean;

  /**
   * Whether to stop early when the loss doesn't improve significantly
   * any more (compared to min_relative_progress). Used only for iterative
   * training algorithms.
   *
   * @generated from field: google.protobuf.BoolValue early_stop = 8;
   */
  earlyStop?: boolean;

  /**
   * Name of input label columns in training data.
   *
   * @generated from field: repeated string input_label_columns = 9;
   */
  inputLabelColumns: string[];

  /**
   * The data split type for training and evaluation, e.g. RANDOM.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DataSplitMethod data_split_method = 10;
   */
  dataSplitMethod: Model_DataSplitMethod;

  /**
   * The fraction of evaluation data over the whole input data. The rest
   * of data will be used as training data. The format should be double.
   * Accurate to two decimal places.
   * Default value is 0.2.
   *
   * @generated from field: double data_split_eval_fraction = 11;
   */
  dataSplitEvalFraction: number;

  /**
   * The column to split data with. This column won't be used as a
   * feature.
   * 1. When data_split_method is CUSTOM, the corresponding column should
   * be boolean. The rows with true value tag are eval data, and the false
   * are training data.
   * 2. When data_split_method is SEQ, the first DATA_SPLIT_EVAL_FRACTION
   * rows (from smallest to largest) in the corresponding column are used
   * as training data, and the rest are eval data. It respects the order
   * in Orderable data types:
   * https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#data-type-properties
   *
   * @generated from field: string data_split_column = 12;
   */
  dataSplitColumn: string;

  /**
   * The strategy to determine learn rate for the current iteration.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.LearnRateStrategy learn_rate_strategy = 13;
   */
  learnRateStrategy: Model_LearnRateStrategy;

  /**
   * Specifies the initial learning rate for the line search learn rate
   * strategy.
   *
   * @generated from field: double initial_learn_rate = 16;
   */
  initialLearnRate: number;

  /**
   * Weights associated with each label class, for rebalancing the
   * training data. Only applicable for classification models.
   *
   * @generated from field: map<string, double> label_class_weights = 17;
   */
  labelClassWeights: { [key: string]: number };

  /**
   * User column specified for matrix factorization models.
   *
   * @generated from field: string user_column = 18;
   */
  userColumn: string;

  /**
   * Item column specified for matrix factorization models.
   *
   * @generated from field: string item_column = 19;
   */
  itemColumn: string;

  /**
   * Distance type for clustering models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DistanceType distance_type = 20;
   */
  distanceType: Model_DistanceType;

  /**
   * Number of clusters for clustering models.
   *
   * @generated from field: int64 num_clusters = 21;
   */
  numClusters: bigint;

  /**
   * Google Cloud Storage URI from which the model was imported. Only
   * applicable for imported models.
   *
   * @generated from field: string model_uri = 22;
   */
  modelUri: string;

  /**
   * Optimization strategy for training linear regression models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.OptimizationStrategy optimization_strategy = 23;
   */
  optimizationStrategy: Model_OptimizationStrategy;

  /**
   * Hidden units for dnn models.
   *
   * @generated from field: repeated int64 hidden_units = 24;
   */
  hiddenUnits: bigint[];

  /**
   * Batch size for dnn models.
   *
   * @generated from field: int64 batch_size = 25;
   */
  batchSize: bigint;

  /**
   * Dropout probability for dnn models.
   *
   * @generated from field: google.protobuf.DoubleValue dropout = 26;
   */
  dropout?: number;

  /**
   * Maximum depth of a tree for boosted tree models.
   *
   * @generated from field: int64 max_tree_depth = 27;
   */
  maxTreeDepth: bigint;

  /**
   * Subsample fraction of the training data to grow tree to prevent
   * overfitting for boosted tree models.
   *
   * @generated from field: double subsample = 28;
   */
  subsample: number;

  /**
   * Minimum split loss for boosted tree models.
   *
   * @generated from field: google.protobuf.DoubleValue min_split_loss = 29;
   */
  minSplitLoss?: number;

  /**
   * Booster type for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums.BoosterType booster_type = 60;
   */
  boosterType: Model_BoostedTreeOptionEnums_BoosterType;

  /**
   * Number of parallel trees constructed during each iteration for boosted
   * tree models.
   *
   * @generated from field: google.protobuf.Int64Value num_parallel_tree = 61;
   */
  numParallelTree?: bigint;

  /**
   * Type of normalization algorithm for boosted tree models using
   * dart booster.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums.DartNormalizeType dart_normalize_type = 62;
   */
  dartNormalizeType: Model_BoostedTreeOptionEnums_DartNormalizeType;

  /**
   * Tree construction algorithm for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.BoostedTreeOptionEnums.TreeMethod tree_method = 63;
   */
  treeMethod: Model_BoostedTreeOptionEnums_TreeMethod;

  /**
   * Minimum sum of instance weight needed in a child for boosted tree
   * models.
   *
   * @generated from field: google.protobuf.Int64Value min_tree_child_weight = 64;
   */
  minTreeChildWeight?: bigint;

  /**
   * Subsample ratio of columns when constructing each tree for boosted tree
   * models.
   *
   * @generated from field: google.protobuf.DoubleValue colsample_bytree = 65;
   */
  colsampleBytree?: number;

  /**
   * Subsample ratio of columns for each level for boosted tree models.
   *
   * @generated from field: google.protobuf.DoubleValue colsample_bylevel = 66;
   */
  colsampleBylevel?: number;

  /**
   * Subsample ratio of columns for each node(split) for boosted tree
   * models.
   *
   * @generated from field: google.protobuf.DoubleValue colsample_bynode = 67;
   */
  colsampleBynode?: number;

  /**
   * Num factors specified for matrix factorization models.
   *
   * @generated from field: int64 num_factors = 30;
   */
  numFactors: bigint;

  /**
   * Feedback type that specifies which algorithm to run for matrix
   * factorization.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.FeedbackType feedback_type = 31;
   */
  feedbackType: Model_FeedbackType;

  /**
   * Hyperparameter for matrix factoration when implicit feedback type is
   * specified.
   *
   * @generated from field: google.protobuf.DoubleValue wals_alpha = 32;
   */
  walsAlpha?: number;

  /**
   * The method used to initialize the centroids for kmeans algorithm.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.KmeansEnums.KmeansInitializationMethod kmeans_initialization_method = 33;
   */
  kmeansInitializationMethod: Model_KmeansEnums_KmeansInitializationMethod;

  /**
   * The column used to provide the initial centroids for kmeans algorithm
   * when kmeans_initialization_method is CUSTOM.
   *
   * @generated from field: string kmeans_initialization_column = 34;
   */
  kmeansInitializationColumn: string;

  /**
   * Column to be designated as time series timestamp for ARIMA model.
   *
   * @generated from field: string time_series_timestamp_column = 35;
   */
  timeSeriesTimestampColumn: string;

  /**
   * Column to be designated as time series data for ARIMA model.
   *
   * @generated from field: string time_series_data_column = 36;
   */
  timeSeriesDataColumn: string;

  /**
   * Whether to enable auto ARIMA or not.
   *
   * @generated from field: google.protobuf.BoolValue auto_arima = 37;
   */
  autoArima?: boolean;

  /**
   * A specification of the non-seasonal part of the ARIMA model: the three
   * components (p, d, q) are the AR order, the degree of differencing, and
   * the MA order.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 38;
   */
  nonSeasonalOrder?: Model_ArimaOrder;

  /**
   * The data frequency of a time series.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DataFrequency data_frequency = 39;
   */
  dataFrequency: Model_DataFrequency;

  /**
   * Whether or not p-value test should be computed for this model. Only
   * available for linear and logistic regression models.
   *
   * @generated from field: google.protobuf.BoolValue calculate_p_values = 40;
   */
  calculatePValues?: boolean;

  /**
   * Include drift when fitting an ARIMA model.
   *
   * @generated from field: google.protobuf.BoolValue include_drift = 41;
   */
  includeDrift?: boolean;

  /**
   * The geographical region based on which the holidays are considered in
   * time series modeling. If a valid value is specified, then holiday
   * effects modeling is enabled.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.HolidayRegion holiday_region = 42;
   */
  holidayRegion: Model_HolidayRegion;

  /**
   * A list of geographical regions that are used for time series modeling.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.HolidayRegion holiday_regions = 71;
   */
  holidayRegions: Model_HolidayRegion[];

  /**
   * The time series id column that was used during ARIMA model training.
   *
   * @generated from field: string time_series_id_column = 43;
   */
  timeSeriesIdColumn: string;

  /**
   * The time series id columns that were used during ARIMA model training.
   *
   * @generated from field: repeated string time_series_id_columns = 51;
   */
  timeSeriesIdColumns: string[];

  /**
   * The number of periods ahead that need to be forecasted.
   *
   * @generated from field: int64 horizon = 44;
   */
  horizon: bigint;

  /**
   * The max value of the sum of non-seasonal p and q.
   *
   * @generated from field: int64 auto_arima_max_order = 46;
   */
  autoArimaMaxOrder: bigint;

  /**
   * The min value of the sum of non-seasonal p and q.
   *
   * @generated from field: int64 auto_arima_min_order = 83;
   */
  autoArimaMinOrder: bigint;

  /**
   * Number of trials to run this hyperparameter tuning job.
   *
   * @generated from field: int64 num_trials = 47;
   */
  numTrials: bigint;

  /**
   * Maximum number of trials to run in parallel.
   *
   * @generated from field: int64 max_parallel_trials = 48;
   */
  maxParallelTrials: bigint;

  /**
   * The target evaluation metrics to optimize the hyperparameters for.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.HparamTuningEnums.HparamTuningObjective hparam_tuning_objectives = 54;
   */
  hparamTuningObjectives: Model_HparamTuningEnums_HparamTuningObjective[];

  /**
   * If true, perform decompose time series and save the results.
   *
   * @generated from field: google.protobuf.BoolValue decompose_time_series = 50;
   */
  decomposeTimeSeries?: boolean;

  /**
   * If true, clean spikes and dips in the input time series.
   *
   * @generated from field: google.protobuf.BoolValue clean_spikes_and_dips = 52;
   */
  cleanSpikesAndDips?: boolean;

  /**
   * If true, detect step changes and make data adjustment in the input time
   * series.
   *
   * @generated from field: google.protobuf.BoolValue adjust_step_changes = 53;
   */
  adjustStepChanges?: boolean;

  /**
   * If true, enable global explanation during training.
   *
   * @generated from field: google.protobuf.BoolValue enable_global_explain = 55;
   */
  enableGlobalExplain?: boolean;

  /**
   * Number of paths for the sampled Shapley explain method.
   *
   * @generated from field: int64 sampled_shapley_num_paths = 56;
   */
  sampledShapleyNumPaths: bigint;

  /**
   * Number of integral steps for the integrated gradients explain method.
   *
   * @generated from field: int64 integrated_gradients_num_steps = 57;
   */
  integratedGradientsNumSteps: bigint;

  /**
   * Categorical feature encoding method.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.CategoryEncodingMethod.EncodingMethod category_encoding_method = 58;
   */
  categoryEncodingMethod: Model_CategoryEncodingMethod_EncodingMethod;

  /**
   * Based on the selected TF version, the corresponding docker image is
   * used to train external models.
   *
   * @generated from field: string tf_version = 70;
   */
  tfVersion: string;

  /**
   * Enums for color space, used for processing images in Object Table.
   * See more details at
   * https://www.tensorflow.org/io/tutorials/colorspace.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.ColorSpace color_space = 72;
   */
  colorSpace: Model_ColorSpace;

  /**
   * Name of the instance weight column for training data.
   * This column isn't be used as a feature.
   *
   * @generated from field: string instance_weight_column = 73;
   */
  instanceWeightColumn: string;

  /**
   * Smoothing window size for the trend component. When a positive value is
   * specified, a center moving average smoothing is applied on the history
   * trend. When the smoothing window is out of the boundary at the
   * beginning or the end of the trend, the first element or the last
   * element is padded to fill the smoothing window before the average is
   * applied.
   *
   * @generated from field: int64 trend_smoothing_window_size = 74;
   */
  trendSmoothingWindowSize: bigint;

  /**
   * The fraction of the interpolated length of the time series that's used
   * to model the time series trend component. All of the time points of the
   * time series are used to model the non-trend component. This training
   * option accelerates modeling training without sacrificing much
   * forecasting accuracy. You can use this option with
   * `minTimeSeriesLength` but not with `maxTimeSeriesLength`.
   *
   * @generated from field: double time_series_length_fraction = 75;
   */
  timeSeriesLengthFraction: number;

  /**
   * The minimum number of time points in a time series that are used in
   * modeling the trend component of the time series. If you use this option
   * you must also set the `timeSeriesLengthFraction` option. This training
   * option ensures that enough time points are available when you use
   * `timeSeriesLengthFraction` in trend modeling. This is particularly
   * important when forecasting multiple time series in a single query using
   * `timeSeriesIdColumn`. If the total number of time points is less than
   * the `minTimeSeriesLength` value, then the query uses all available time
   * points.
   *
   * @generated from field: int64 min_time_series_length = 76;
   */
  minTimeSeriesLength: bigint;

  /**
   * The maximum number of time points in a time series that can be used in
   * modeling the trend component of the time series. Don't use this option
   * with the `timeSeriesLengthFraction` or `minTimeSeriesLength` options.
   *
   * @generated from field: int64 max_time_series_length = 77;
   */
  maxTimeSeriesLength: bigint;

  /**
   * User-selected XGBoost versions for training of XGBoost models.
   *
   * @generated from field: string xgboost_version = 78;
   */
  xgboostVersion: string;

  /**
   * Whether to use approximate feature contribution method in XGBoost model
   * explanation for global explain.
   *
   * @generated from field: google.protobuf.BoolValue approx_global_feature_contrib = 84;
   */
  approxGlobalFeatureContrib?: boolean;

  /**
   * Whether the model should include intercept during model training.
   *
   * @generated from field: google.protobuf.BoolValue fit_intercept = 85;
   */
  fitIntercept?: boolean;

  /**
   * Number of principal components to keep in the PCA model. Must be <= the
   * number of features.
   *
   * @generated from field: int64 num_principal_components = 86;
   */
  numPrincipalComponents: bigint;

  /**
   * The minimum ratio of cumulative explained variance that needs to be
   * given by the PCA model.
   *
   * @generated from field: double pca_explained_variance_ratio = 87;
   */
  pcaExplainedVarianceRatio: number;

  /**
   * If true, scale the feature values by dividing the feature standard
   * deviation. Currently only apply to PCA.
   *
   * @generated from field: google.protobuf.BoolValue scale_features = 88;
   */
  scaleFeatures?: boolean;

  /**
   * The solver for PCA.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.PcaSolverOptionEnums.PcaSolver pca_solver = 89;
   */
  pcaSolver: Model_PcaSolverOptionEnums_PcaSolver;

  /**
   * Whether to calculate class weights automatically based on the
   * popularity of each label.
   *
   * @generated from field: google.protobuf.BoolValue auto_class_weights = 90;
   */
  autoClassWeights?: boolean;

  /**
   * Activation function of the neural nets.
   *
   * @generated from field: string activation_fn = 91;
   */
  activationFn: string;

  /**
   * Optimizer used for training the neural nets.
   *
   * @generated from field: string optimizer = 92;
   */
  optimizer: string;

  /**
   * Budget in hours for AutoML training.
   *
   * @generated from field: double budget_hours = 93;
   */
  budgetHours: number;

  /**
   * Whether to standardize numerical features. Default to true.
   *
   * @generated from field: google.protobuf.BoolValue standardize_features = 94;
   */
  standardizeFeatures?: boolean;

  /**
   * L1 regularization coefficient to activations.
   *
   * @generated from field: double l1_reg_activation = 95;
   */
  l1RegActivation: number;

  /**
   * The model registry.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.ModelRegistryOptionEnums.ModelRegistry model_registry = 96;
   */
  modelRegistry: Model_ModelRegistryOptionEnums_ModelRegistry;

  /**
   * The version aliases to apply in Vertex AI model registry. Always
   * overwrite if the version aliases exists in a existing model.
   *
   * @generated from field: repeated string vertex_ai_model_version_aliases = 97;
   */
  vertexAiModelVersionAliases: string[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.
 * Use `create(Model_TrainingRun_TrainingOptionsSchema)` to create a new message.
 */
export const Model_TrainingRun_TrainingOptionsSchema: GenMessage<Model_TrainingRun_TrainingOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 20, 0);

/**
 * Information about a single iteration of the training run.
 *
 * @generated from message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult
 */
export type Model_TrainingRun_IterationResult = Message<"google.cloud.bigquery.v2.Model.TrainingRun.IterationResult"> & {
  /**
   * Index of the iteration, 0 based.
   *
   * @generated from field: google.protobuf.Int32Value index = 1;
   */
  index?: number;

  /**
   * Time taken to run the iteration in milliseconds.
   *
   * @generated from field: google.protobuf.Int64Value duration_ms = 4;
   */
  durationMs?: bigint;

  /**
   * Loss computed on the training data at the end of iteration.
   *
   * @generated from field: google.protobuf.DoubleValue training_loss = 5;
   */
  trainingLoss?: number;

  /**
   * Loss computed on the eval data at the end of iteration.
   *
   * @generated from field: google.protobuf.DoubleValue eval_loss = 6;
   */
  evalLoss?: number;

  /**
   * Learn rate used for this iteration.
   *
   * @generated from field: double learn_rate = 7;
   */
  learnRate: number;

  /**
   * Information about top clusters for clustering models.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo cluster_infos = 8;
   */
  clusterInfos: Model_TrainingRun_IterationResult_ClusterInfo[];

  /**
   * Arima result.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult arima_result = 9;
   */
  arimaResult?: Model_TrainingRun_IterationResult_ArimaResult;

  /**
   * The information of the principal components.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.PrincipalComponentInfo principal_component_infos = 10;
   */
  principalComponentInfos: Model_TrainingRun_IterationResult_PrincipalComponentInfo[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.
 * Use `create(Model_TrainingRun_IterationResultSchema)` to create a new message.
 */
export const Model_TrainingRun_IterationResultSchema: GenMessage<Model_TrainingRun_IterationResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 20, 1);

/**
 * Information about a single cluster for clustering model.
 *
 * @generated from message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo
 */
export type Model_TrainingRun_IterationResult_ClusterInfo = Message<"google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo"> & {
  /**
   * Centroid id.
   *
   * @generated from field: int64 centroid_id = 1;
   */
  centroidId: bigint;

  /**
   * Cluster radius, the average distance from centroid
   * to each point assigned to the cluster.
   *
   * @generated from field: google.protobuf.DoubleValue cluster_radius = 2;
   */
  clusterRadius?: number;

  /**
   * Cluster size, the total number of points assigned to the cluster.
   *
   * @generated from field: google.protobuf.Int64Value cluster_size = 3;
   */
  clusterSize?: bigint;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.
 * Use `create(Model_TrainingRun_IterationResult_ClusterInfoSchema)` to create a new message.
 */
export const Model_TrainingRun_IterationResult_ClusterInfoSchema: GenMessage<Model_TrainingRun_IterationResult_ClusterInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 20, 1, 0);

/**
 * (Auto-)arima fitting result. Wrap everything in ArimaResult for easier
 * refactoring if we want to use model-specific iteration results.
 *
 * @generated from message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult
 */
export type Model_TrainingRun_IterationResult_ArimaResult = Message<"google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult"> & {
  /**
   * This message is repeated because there are multiple arima models
   * fitted in auto-arima. For non-auto-arima model, its size is one.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo arima_model_info = 1;
   */
  arimaModelInfo: Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo[];

  /**
   * Seasonal periods. Repeated because multiple periods are supported for
   * one time series.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 2;
   */
  seasonalPeriods: Model_SeasonalPeriod_SeasonalPeriodType[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.
 * Use `create(Model_TrainingRun_IterationResult_ArimaResultSchema)` to create a new message.
 */
export const Model_TrainingRun_IterationResult_ArimaResultSchema: GenMessage<Model_TrainingRun_IterationResult_ArimaResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 20, 1, 1);

/**
 * Arima coefficients.
 *
 * @generated from message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients
 */
export type Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients = Message<"google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients"> & {
  /**
   * Auto-regressive coefficients, an array of double.
   *
   * @generated from field: repeated double auto_regressive_coefficients = 1;
   */
  autoRegressiveCoefficients: number[];

  /**
   * Moving-average coefficients, an array of double.
   *
   * @generated from field: repeated double moving_average_coefficients = 2;
   */
  movingAverageCoefficients: number[];

  /**
   * Intercept coefficient, just a double not an array.
   *
   * @generated from field: google.protobuf.DoubleValue intercept_coefficient = 3;
   */
  interceptCoefficient?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.
 * Use `create(Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficientsSchema)` to create a new message.
 */
export const Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficientsSchema: GenMessage<Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 20, 1, 1, 0);

/**
 * Arima model information.
 *
 * @generated from message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo
 */
export type Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo = Message<"google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo"> & {
  /**
   * Non-seasonal order.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 1;
   */
  nonSeasonalOrder?: Model_ArimaOrder;

  /**
   * Arima coefficients.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients arima_coefficients = 2;
   */
  arimaCoefficients?: Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients;

  /**
   * Arima fitting metrics.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.ArimaFittingMetrics arima_fitting_metrics = 3;
   */
  arimaFittingMetrics?: Model_ArimaFittingMetrics;

  /**
   * Whether Arima model fitted with drift or not. It is always false
   * when d is not 1.
   *
   * @generated from field: google.protobuf.BoolValue has_drift = 4;
   */
  hasDrift?: boolean;

  /**
   * The time_series_id value for this time series. It will be one of
   * the unique values from the time_series_id_column specified during
   * ARIMA model training. Only present when time_series_id_column
   * training option was used.
   *
   * @generated from field: string time_series_id = 5;
   */
  timeSeriesId: string;

  /**
   * The tuple of time_series_ids identifying this time series. It will
   * be one of the unique tuples of values present in the
   * time_series_id_columns specified during ARIMA model training. Only
   * present when time_series_id_columns training option was used and
   * the order of values here are same as the order of
   * time_series_id_columns.
   *
   * @generated from field: repeated string time_series_ids = 10;
   */
  timeSeriesIds: string[];

  /**
   * Seasonal periods. Repeated because multiple periods are supported
   * for one time series.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 6;
   */
  seasonalPeriods: Model_SeasonalPeriod_SeasonalPeriodType[];

  /**
   * If true, holiday_effect is a part of time series decomposition
   * result.
   *
   * @generated from field: google.protobuf.BoolValue has_holiday_effect = 7;
   */
  hasHolidayEffect?: boolean;

  /**
   * If true, spikes_and_dips is a part of time series decomposition
   * result.
   *
   * @generated from field: google.protobuf.BoolValue has_spikes_and_dips = 8;
   */
  hasSpikesAndDips?: boolean;

  /**
   * If true, step_changes is a part of time series decomposition
   * result.
   *
   * @generated from field: google.protobuf.BoolValue has_step_changes = 9;
   */
  hasStepChanges?: boolean;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.
 * Use `create(Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfoSchema)` to create a new message.
 */
export const Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfoSchema: GenMessage<Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 20, 1, 1, 1);

/**
 * Principal component infos, used only for eigen decomposition based
 * models, e.g., PCA. Ordered by explained_variance in the descending
 * order.
 *
 * @generated from message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.PrincipalComponentInfo
 */
export type Model_TrainingRun_IterationResult_PrincipalComponentInfo = Message<"google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.PrincipalComponentInfo"> & {
  /**
   * Id of the principal component.
   *
   * @generated from field: google.protobuf.Int64Value principal_component_id = 1;
   */
  principalComponentId?: bigint;

  /**
   * Explained variance by this principal component, which is simply the
   * eigenvalue.
   *
   * @generated from field: google.protobuf.DoubleValue explained_variance = 2;
   */
  explainedVariance?: number;

  /**
   * Explained_variance over the total explained variance.
   *
   * @generated from field: google.protobuf.DoubleValue explained_variance_ratio = 3;
   */
  explainedVarianceRatio?: number;

  /**
   * The explained_variance is pre-ordered in the descending order to
   * compute the cumulative explained variance ratio.
   *
   * @generated from field: google.protobuf.DoubleValue cumulative_explained_variance_ratio = 4;
   */
  cumulativeExplainedVarianceRatio?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.PrincipalComponentInfo.
 * Use `create(Model_TrainingRun_IterationResult_PrincipalComponentInfoSchema)` to create a new message.
 */
export const Model_TrainingRun_IterationResult_PrincipalComponentInfoSchema: GenMessage<Model_TrainingRun_IterationResult_PrincipalComponentInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 20, 1, 2);

/**
 * Search space for a double hyperparameter.
 *
 * @generated from message google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace
 */
export type Model_DoubleHparamSearchSpace = Message<"google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace"> & {
  /**
   * Search space.
   *
   * @generated from oneof google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace.search_space
   */
  searchSpace: {
    /**
     * Range of the double hyperparameter.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace.DoubleRange range = 1;
     */
    value: Model_DoubleHparamSearchSpace_DoubleRange;
    case: "range";
  } | {
    /**
     * Candidates of the double hyperparameter.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace.DoubleCandidates candidates = 2;
     */
    value: Model_DoubleHparamSearchSpace_DoubleCandidates;
    case: "candidates";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace.
 * Use `create(Model_DoubleHparamSearchSpaceSchema)` to create a new message.
 */
export const Model_DoubleHparamSearchSpaceSchema: GenMessage<Model_DoubleHparamSearchSpace> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 21);

/**
 * Range of a double hyperparameter.
 *
 * @generated from message google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace.DoubleRange
 */
export type Model_DoubleHparamSearchSpace_DoubleRange = Message<"google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace.DoubleRange"> & {
  /**
   * Min value of the double parameter.
   *
   * @generated from field: google.protobuf.DoubleValue min = 1;
   */
  min?: number;

  /**
   * Max value of the double parameter.
   *
   * @generated from field: google.protobuf.DoubleValue max = 2;
   */
  max?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace.DoubleRange.
 * Use `create(Model_DoubleHparamSearchSpace_DoubleRangeSchema)` to create a new message.
 */
export const Model_DoubleHparamSearchSpace_DoubleRangeSchema: GenMessage<Model_DoubleHparamSearchSpace_DoubleRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 21, 0);

/**
 * Discrete candidates of a double hyperparameter.
 *
 * @generated from message google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace.DoubleCandidates
 */
export type Model_DoubleHparamSearchSpace_DoubleCandidates = Message<"google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace.DoubleCandidates"> & {
  /**
   * Candidates for the double parameter in increasing order.
   *
   * @generated from field: repeated google.protobuf.DoubleValue candidates = 1;
   */
  candidates: DoubleValue[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace.DoubleCandidates.
 * Use `create(Model_DoubleHparamSearchSpace_DoubleCandidatesSchema)` to create a new message.
 */
export const Model_DoubleHparamSearchSpace_DoubleCandidatesSchema: GenMessage<Model_DoubleHparamSearchSpace_DoubleCandidates> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 21, 1);

/**
 * Search space for an int hyperparameter.
 *
 * @generated from message google.cloud.bigquery.v2.Model.IntHparamSearchSpace
 */
export type Model_IntHparamSearchSpace = Message<"google.cloud.bigquery.v2.Model.IntHparamSearchSpace"> & {
  /**
   * Search space.
   *
   * @generated from oneof google.cloud.bigquery.v2.Model.IntHparamSearchSpace.search_space
   */
  searchSpace: {
    /**
     * Range of the int hyperparameter.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.IntHparamSearchSpace.IntRange range = 1;
     */
    value: Model_IntHparamSearchSpace_IntRange;
    case: "range";
  } | {
    /**
     * Candidates of the int hyperparameter.
     *
     * @generated from field: google.cloud.bigquery.v2.Model.IntHparamSearchSpace.IntCandidates candidates = 2;
     */
    value: Model_IntHparamSearchSpace_IntCandidates;
    case: "candidates";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.IntHparamSearchSpace.
 * Use `create(Model_IntHparamSearchSpaceSchema)` to create a new message.
 */
export const Model_IntHparamSearchSpaceSchema: GenMessage<Model_IntHparamSearchSpace> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 22);

/**
 * Range of an int hyperparameter.
 *
 * @generated from message google.cloud.bigquery.v2.Model.IntHparamSearchSpace.IntRange
 */
export type Model_IntHparamSearchSpace_IntRange = Message<"google.cloud.bigquery.v2.Model.IntHparamSearchSpace.IntRange"> & {
  /**
   * Min value of the int parameter.
   *
   * @generated from field: google.protobuf.Int64Value min = 1;
   */
  min?: bigint;

  /**
   * Max value of the int parameter.
   *
   * @generated from field: google.protobuf.Int64Value max = 2;
   */
  max?: bigint;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.IntHparamSearchSpace.IntRange.
 * Use `create(Model_IntHparamSearchSpace_IntRangeSchema)` to create a new message.
 */
export const Model_IntHparamSearchSpace_IntRangeSchema: GenMessage<Model_IntHparamSearchSpace_IntRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 22, 0);

/**
 * Discrete candidates of an int hyperparameter.
 *
 * @generated from message google.cloud.bigquery.v2.Model.IntHparamSearchSpace.IntCandidates
 */
export type Model_IntHparamSearchSpace_IntCandidates = Message<"google.cloud.bigquery.v2.Model.IntHparamSearchSpace.IntCandidates"> & {
  /**
   * Candidates for the int parameter in increasing order.
   *
   * @generated from field: repeated google.protobuf.Int64Value candidates = 1;
   */
  candidates: Int64Value[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.IntHparamSearchSpace.IntCandidates.
 * Use `create(Model_IntHparamSearchSpace_IntCandidatesSchema)` to create a new message.
 */
export const Model_IntHparamSearchSpace_IntCandidatesSchema: GenMessage<Model_IntHparamSearchSpace_IntCandidates> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 22, 1);

/**
 * Search space for string and enum.
 *
 * @generated from message google.cloud.bigquery.v2.Model.StringHparamSearchSpace
 */
export type Model_StringHparamSearchSpace = Message<"google.cloud.bigquery.v2.Model.StringHparamSearchSpace"> & {
  /**
   * Canididates for the string or enum parameter in lower case.
   *
   * @generated from field: repeated string candidates = 1;
   */
  candidates: string[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.StringHparamSearchSpace.
 * Use `create(Model_StringHparamSearchSpaceSchema)` to create a new message.
 */
export const Model_StringHparamSearchSpaceSchema: GenMessage<Model_StringHparamSearchSpace> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 23);

/**
 * Search space for int array.
 *
 * @generated from message google.cloud.bigquery.v2.Model.IntArrayHparamSearchSpace
 */
export type Model_IntArrayHparamSearchSpace = Message<"google.cloud.bigquery.v2.Model.IntArrayHparamSearchSpace"> & {
  /**
   * Candidates for the int array parameter.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model.IntArrayHparamSearchSpace.IntArray candidates = 1;
   */
  candidates: Model_IntArrayHparamSearchSpace_IntArray[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.IntArrayHparamSearchSpace.
 * Use `create(Model_IntArrayHparamSearchSpaceSchema)` to create a new message.
 */
export const Model_IntArrayHparamSearchSpaceSchema: GenMessage<Model_IntArrayHparamSearchSpace> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 24);

/**
 * An array of int.
 *
 * @generated from message google.cloud.bigquery.v2.Model.IntArrayHparamSearchSpace.IntArray
 */
export type Model_IntArrayHparamSearchSpace_IntArray = Message<"google.cloud.bigquery.v2.Model.IntArrayHparamSearchSpace.IntArray"> & {
  /**
   * Elements in the int array.
   *
   * @generated from field: repeated int64 elements = 1;
   */
  elements: bigint[];
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.IntArrayHparamSearchSpace.IntArray.
 * Use `create(Model_IntArrayHparamSearchSpace_IntArraySchema)` to create a new message.
 */
export const Model_IntArrayHparamSearchSpace_IntArraySchema: GenMessage<Model_IntArrayHparamSearchSpace_IntArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 24, 0);

/**
 * Hyperparameter search spaces.
 * These should be a subset of training_options.
 *
 * @generated from message google.cloud.bigquery.v2.Model.HparamSearchSpaces
 */
export type Model_HparamSearchSpaces = Message<"google.cloud.bigquery.v2.Model.HparamSearchSpaces"> & {
  /**
   * Learning rate of training jobs.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace learn_rate = 2;
   */
  learnRate?: Model_DoubleHparamSearchSpace;

  /**
   * L1 regularization coefficient.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace l1_reg = 3;
   */
  l1Reg?: Model_DoubleHparamSearchSpace;

  /**
   * L2 regularization coefficient.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace l2_reg = 4;
   */
  l2Reg?: Model_DoubleHparamSearchSpace;

  /**
   * Number of clusters for k-means.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.IntHparamSearchSpace num_clusters = 26;
   */
  numClusters?: Model_IntHparamSearchSpace;

  /**
   * Number of latent factors to train on.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.IntHparamSearchSpace num_factors = 31;
   */
  numFactors?: Model_IntHparamSearchSpace;

  /**
   * Hidden units for neural network models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.IntArrayHparamSearchSpace hidden_units = 34;
   */
  hiddenUnits?: Model_IntArrayHparamSearchSpace;

  /**
   * Mini batch sample size.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.IntHparamSearchSpace batch_size = 37;
   */
  batchSize?: Model_IntHparamSearchSpace;

  /**
   * Dropout probability for dnn model training and boosted tree models
   * using dart booster.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace dropout = 38;
   */
  dropout?: Model_DoubleHparamSearchSpace;

  /**
   * Maximum depth of a tree for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.IntHparamSearchSpace max_tree_depth = 41;
   */
  maxTreeDepth?: Model_IntHparamSearchSpace;

  /**
   * Subsample the training data to grow tree to prevent overfitting for
   * boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace subsample = 42;
   */
  subsample?: Model_DoubleHparamSearchSpace;

  /**
   * Minimum split loss for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace min_split_loss = 43;
   */
  minSplitLoss?: Model_DoubleHparamSearchSpace;

  /**
   * Hyperparameter for matrix factoration when implicit feedback type is
   * specified.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace wals_alpha = 49;
   */
  walsAlpha?: Model_DoubleHparamSearchSpace;

  /**
   * Booster type for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.StringHparamSearchSpace booster_type = 56;
   */
  boosterType?: Model_StringHparamSearchSpace;

  /**
   * Number of parallel trees for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.IntHparamSearchSpace num_parallel_tree = 57;
   */
  numParallelTree?: Model_IntHparamSearchSpace;

  /**
   * Dart normalization type for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.StringHparamSearchSpace dart_normalize_type = 58;
   */
  dartNormalizeType?: Model_StringHparamSearchSpace;

  /**
   * Tree construction algorithm for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.StringHparamSearchSpace tree_method = 59;
   */
  treeMethod?: Model_StringHparamSearchSpace;

  /**
   * Minimum sum of instance weight needed in a child for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.IntHparamSearchSpace min_tree_child_weight = 60;
   */
  minTreeChildWeight?: Model_IntHparamSearchSpace;

  /**
   * Subsample ratio of columns when constructing each tree for boosted tree
   * models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace colsample_bytree = 61;
   */
  colsampleBytree?: Model_DoubleHparamSearchSpace;

  /**
   * Subsample ratio of columns for each level for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace colsample_bylevel = 62;
   */
  colsampleBylevel?: Model_DoubleHparamSearchSpace;

  /**
   * Subsample ratio of columns for each node(split) for boosted tree models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.DoubleHparamSearchSpace colsample_bynode = 63;
   */
  colsampleBynode?: Model_DoubleHparamSearchSpace;

  /**
   * Activation functions of neural network models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.StringHparamSearchSpace activation_fn = 67;
   */
  activationFn?: Model_StringHparamSearchSpace;

  /**
   * Optimizer of TF models.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.StringHparamSearchSpace optimizer = 68;
   */
  optimizer?: Model_StringHparamSearchSpace;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.HparamSearchSpaces.
 * Use `create(Model_HparamSearchSpacesSchema)` to create a new message.
 */
export const Model_HparamSearchSpacesSchema: GenMessage<Model_HparamSearchSpaces> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 25);

/**
 * Training info of a trial in [hyperparameter
 * tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview)
 * models.
 *
 * @generated from message google.cloud.bigquery.v2.Model.HparamTuningTrial
 */
export type Model_HparamTuningTrial = Message<"google.cloud.bigquery.v2.Model.HparamTuningTrial"> & {
  /**
   * 1-based index of the trial.
   *
   * @generated from field: int64 trial_id = 1;
   */
  trialId: bigint;

  /**
   * Starting time of the trial.
   *
   * @generated from field: int64 start_time_ms = 2;
   */
  startTimeMs: bigint;

  /**
   * Ending time of the trial.
   *
   * @generated from field: int64 end_time_ms = 3;
   */
  endTimeMs: bigint;

  /**
   * The hyperprameters selected for this trial.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions hparams = 4;
   */
  hparams?: Model_TrainingRun_TrainingOptions;

  /**
   * Evaluation metrics of this trial calculated on the test data.
   * Empty in Job API.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.EvaluationMetrics evaluation_metrics = 5;
   */
  evaluationMetrics?: Model_EvaluationMetrics;

  /**
   * The status of the trial.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.HparamTuningTrial.TrialStatus status = 6;
   */
  status: Model_HparamTuningTrial_TrialStatus;

  /**
   * Error message for FAILED and INFEASIBLE trial.
   *
   * @generated from field: string error_message = 7;
   */
  errorMessage: string;

  /**
   * Loss computed on the training data at the end of trial.
   *
   * @generated from field: google.protobuf.DoubleValue training_loss = 8;
   */
  trainingLoss?: number;

  /**
   * Loss computed on the eval data at the end of trial.
   *
   * @generated from field: google.protobuf.DoubleValue eval_loss = 9;
   */
  evalLoss?: number;

  /**
   * Hyperparameter tuning evaluation metrics of this trial calculated on the
   * eval data. Unlike evaluation_metrics, only the fields corresponding to
   * the hparam_tuning_objectives are set.
   *
   * @generated from field: google.cloud.bigquery.v2.Model.EvaluationMetrics hparam_tuning_evaluation_metrics = 10;
   */
  hparamTuningEvaluationMetrics?: Model_EvaluationMetrics;
};

/**
 * Describes the message google.cloud.bigquery.v2.Model.HparamTuningTrial.
 * Use `create(Model_HparamTuningTrialSchema)` to create a new message.
 */
export const Model_HparamTuningTrialSchema: GenMessage<Model_HparamTuningTrial> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 2, 26);

/**
 * Current status of the trial.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.HparamTuningTrial.TrialStatus
 */
export enum Model_HparamTuningTrial_TrialStatus {
  /**
   * Default value.
   *
   * @generated from enum value: TRIAL_STATUS_UNSPECIFIED = 0;
   */
  TRIAL_STATUS_UNSPECIFIED = 0,

  /**
   * Scheduled but not started.
   *
   * @generated from enum value: NOT_STARTED = 1;
   */
  NOT_STARTED = 1,

  /**
   * Running state.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The trial succeeded.
   *
   * @generated from enum value: SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * The trial failed.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * The trial is infeasible due to the invalid params.
   *
   * @generated from enum value: INFEASIBLE = 5;
   */
  INFEASIBLE = 5,

  /**
   * Trial stopped early because it's not promising.
   *
   * @generated from enum value: STOPPED_EARLY = 6;
   */
  STOPPED_EARLY = 6,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.HparamTuningTrial.TrialStatus.
 */
export const Model_HparamTuningTrial_TrialStatusSchema: GenEnum<Model_HparamTuningTrial_TrialStatus> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 26, 0);

/**
 * Indicates the type of the Model.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.ModelType
 */
export enum Model_ModelType {
  /**
   * Default value.
   *
   * @generated from enum value: MODEL_TYPE_UNSPECIFIED = 0;
   */
  MODEL_TYPE_UNSPECIFIED = 0,

  /**
   * Linear regression model.
   *
   * @generated from enum value: LINEAR_REGRESSION = 1;
   */
  LINEAR_REGRESSION = 1,

  /**
   * Logistic regression based classification model.
   *
   * @generated from enum value: LOGISTIC_REGRESSION = 2;
   */
  LOGISTIC_REGRESSION = 2,

  /**
   * K-means clustering model.
   *
   * @generated from enum value: KMEANS = 3;
   */
  KMEANS = 3,

  /**
   * Matrix factorization model.
   *
   * @generated from enum value: MATRIX_FACTORIZATION = 4;
   */
  MATRIX_FACTORIZATION = 4,

  /**
   * DNN classifier model.
   *
   * @generated from enum value: DNN_CLASSIFIER = 5;
   */
  DNN_CLASSIFIER = 5,

  /**
   * An imported TensorFlow model.
   *
   * @generated from enum value: TENSORFLOW = 6;
   */
  TENSORFLOW = 6,

  /**
   * DNN regressor model.
   *
   * @generated from enum value: DNN_REGRESSOR = 7;
   */
  DNN_REGRESSOR = 7,

  /**
   * An imported XGBoost model.
   *
   * @generated from enum value: XGBOOST = 8;
   */
  XGBOOST = 8,

  /**
   * Boosted tree regressor model.
   *
   * @generated from enum value: BOOSTED_TREE_REGRESSOR = 9;
   */
  BOOSTED_TREE_REGRESSOR = 9,

  /**
   * Boosted tree classifier model.
   *
   * @generated from enum value: BOOSTED_TREE_CLASSIFIER = 10;
   */
  BOOSTED_TREE_CLASSIFIER = 10,

  /**
   * ARIMA model.
   *
   * @generated from enum value: ARIMA = 11;
   */
  ARIMA = 11,

  /**
   * AutoML Tables regression model.
   *
   * @generated from enum value: AUTOML_REGRESSOR = 12;
   */
  AUTOML_REGRESSOR = 12,

  /**
   * AutoML Tables classification model.
   *
   * @generated from enum value: AUTOML_CLASSIFIER = 13;
   */
  AUTOML_CLASSIFIER = 13,

  /**
   * Prinpical Component Analysis model.
   *
   * @generated from enum value: PCA = 14;
   */
  PCA = 14,

  /**
   * Wide-and-deep classifier model.
   *
   * @generated from enum value: DNN_LINEAR_COMBINED_CLASSIFIER = 16;
   */
  DNN_LINEAR_COMBINED_CLASSIFIER = 16,

  /**
   * Wide-and-deep regressor model.
   *
   * @generated from enum value: DNN_LINEAR_COMBINED_REGRESSOR = 17;
   */
  DNN_LINEAR_COMBINED_REGRESSOR = 17,

  /**
   * Autoencoder model.
   *
   * @generated from enum value: AUTOENCODER = 18;
   */
  AUTOENCODER = 18,

  /**
   * New name for the ARIMA model.
   *
   * @generated from enum value: ARIMA_PLUS = 19;
   */
  ARIMA_PLUS = 19,

  /**
   * ARIMA with external regressors.
   *
   * @generated from enum value: ARIMA_PLUS_XREG = 23;
   */
  ARIMA_PLUS_XREG = 23,

  /**
   * Random forest regressor model.
   *
   * @generated from enum value: RANDOM_FOREST_REGRESSOR = 24;
   */
  RANDOM_FOREST_REGRESSOR = 24,

  /**
   * Random forest classifier model.
   *
   * @generated from enum value: RANDOM_FOREST_CLASSIFIER = 25;
   */
  RANDOM_FOREST_CLASSIFIER = 25,

  /**
   * An imported TensorFlow Lite model.
   *
   * @generated from enum value: TENSORFLOW_LITE = 26;
   */
  TENSORFLOW_LITE = 26,

  /**
   * An imported ONNX model.
   *
   * @generated from enum value: ONNX = 28;
   */
  ONNX = 28,

  /**
   * Model to capture the columns and logic in the TRANSFORM clause along with
   * statistics useful for ML analytic functions.
   *
   * @generated from enum value: TRANSFORM_ONLY = 29;
   */
  TRANSFORM_ONLY = 29,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.ModelType.
 */
export const Model_ModelTypeSchema: GenEnum<Model_ModelType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 0);

/**
 * Loss metric to evaluate model training performance.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.LossType
 */
export enum Model_LossType {
  /**
   * Default value.
   *
   * @generated from enum value: LOSS_TYPE_UNSPECIFIED = 0;
   */
  LOSS_TYPE_UNSPECIFIED = 0,

  /**
   * Mean squared loss, used for linear regression.
   *
   * @generated from enum value: MEAN_SQUARED_LOSS = 1;
   */
  MEAN_SQUARED_LOSS = 1,

  /**
   * Mean log loss, used for logistic regression.
   *
   * @generated from enum value: MEAN_LOG_LOSS = 2;
   */
  MEAN_LOG_LOSS = 2,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.LossType.
 */
export const Model_LossTypeSchema: GenEnum<Model_LossType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 1);

/**
 * Distance metric used to compute the distance between two points.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.DistanceType
 */
export enum Model_DistanceType {
  /**
   * Default value.
   *
   * @generated from enum value: DISTANCE_TYPE_UNSPECIFIED = 0;
   */
  DISTANCE_TYPE_UNSPECIFIED = 0,

  /**
   * Eculidean distance.
   *
   * @generated from enum value: EUCLIDEAN = 1;
   */
  EUCLIDEAN = 1,

  /**
   * Cosine distance.
   *
   * @generated from enum value: COSINE = 2;
   */
  COSINE = 2,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.DistanceType.
 */
export const Model_DistanceTypeSchema: GenEnum<Model_DistanceType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 2);

/**
 * Indicates the method to split input data into multiple tables.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.DataSplitMethod
 */
export enum Model_DataSplitMethod {
  /**
   * Default value.
   *
   * @generated from enum value: DATA_SPLIT_METHOD_UNSPECIFIED = 0;
   */
  DATA_SPLIT_METHOD_UNSPECIFIED = 0,

  /**
   * Splits data randomly.
   *
   * @generated from enum value: RANDOM = 1;
   */
  RANDOM = 1,

  /**
   * Splits data with the user provided tags.
   *
   * @generated from enum value: CUSTOM = 2;
   */
  CUSTOM = 2,

  /**
   * Splits data sequentially.
   *
   * @generated from enum value: SEQUENTIAL = 3;
   */
  SEQUENTIAL = 3,

  /**
   * Data split will be skipped.
   *
   * @generated from enum value: NO_SPLIT = 4;
   */
  NO_SPLIT = 4,

  /**
   * Splits data automatically: Uses NO_SPLIT if the data size is small.
   * Otherwise uses RANDOM.
   *
   * @generated from enum value: AUTO_SPLIT = 5;
   */
  AUTO_SPLIT = 5,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.DataSplitMethod.
 */
export const Model_DataSplitMethodSchema: GenEnum<Model_DataSplitMethod> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 3);

/**
 * Type of supported data frequency for time series forecasting models.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.DataFrequency
 */
export enum Model_DataFrequency {
  /**
   * Default value.
   *
   * @generated from enum value: DATA_FREQUENCY_UNSPECIFIED = 0;
   */
  DATA_FREQUENCY_UNSPECIFIED = 0,

  /**
   * Automatically inferred from timestamps.
   *
   * @generated from enum value: AUTO_FREQUENCY = 1;
   */
  AUTO_FREQUENCY = 1,

  /**
   * Yearly data.
   *
   * @generated from enum value: YEARLY = 2;
   */
  YEARLY = 2,

  /**
   * Quarterly data.
   *
   * @generated from enum value: QUARTERLY = 3;
   */
  QUARTERLY = 3,

  /**
   * Monthly data.
   *
   * @generated from enum value: MONTHLY = 4;
   */
  MONTHLY = 4,

  /**
   * Weekly data.
   *
   * @generated from enum value: WEEKLY = 5;
   */
  WEEKLY = 5,

  /**
   * Daily data.
   *
   * @generated from enum value: DAILY = 6;
   */
  DAILY = 6,

  /**
   * Hourly data.
   *
   * @generated from enum value: HOURLY = 7;
   */
  HOURLY = 7,

  /**
   * Per-minute data.
   *
   * @generated from enum value: PER_MINUTE = 8;
   */
  PER_MINUTE = 8,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.DataFrequency.
 */
export const Model_DataFrequencySchema: GenEnum<Model_DataFrequency> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 4);

/**
 * Type of supported holiday regions for time series forecasting models.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.HolidayRegion
 */
export enum Model_HolidayRegion {
  /**
   * Holiday region unspecified.
   *
   * @generated from enum value: HOLIDAY_REGION_UNSPECIFIED = 0;
   */
  HOLIDAY_REGION_UNSPECIFIED = 0,

  /**
   * Global.
   *
   * @generated from enum value: GLOBAL = 1;
   */
  GLOBAL = 1,

  /**
   * North America.
   *
   * @generated from enum value: NA = 2;
   */
  NA = 2,

  /**
   * Japan and Asia Pacific: Korea, Greater China, India, Australia, and New
   * Zealand.
   *
   * @generated from enum value: JAPAC = 3;
   */
  JAPAC = 3,

  /**
   * Europe, the Middle East and Africa.
   *
   * @generated from enum value: EMEA = 4;
   */
  EMEA = 4,

  /**
   * Latin America and the Caribbean.
   *
   * @generated from enum value: LAC = 5;
   */
  LAC = 5,

  /**
   * United Arab Emirates
   *
   * @generated from enum value: AE = 6;
   */
  AE = 6,

  /**
   * Argentina
   *
   * @generated from enum value: AR = 7;
   */
  AR = 7,

  /**
   * Austria
   *
   * @generated from enum value: AT = 8;
   */
  AT = 8,

  /**
   * Australia
   *
   * @generated from enum value: AU = 9;
   */
  AU = 9,

  /**
   * Belgium
   *
   * @generated from enum value: BE = 10;
   */
  BE = 10,

  /**
   * Brazil
   *
   * @generated from enum value: BR = 11;
   */
  BR = 11,

  /**
   * Canada
   *
   * @generated from enum value: CA = 12;
   */
  CA = 12,

  /**
   * Switzerland
   *
   * @generated from enum value: CH = 13;
   */
  CH = 13,

  /**
   * Chile
   *
   * @generated from enum value: CL = 14;
   */
  CL = 14,

  /**
   * China
   *
   * @generated from enum value: CN = 15;
   */
  CN = 15,

  /**
   * Colombia
   *
   * @generated from enum value: CO = 16;
   */
  CO = 16,

  /**
   * Czechoslovakia
   *
   * @generated from enum value: CS = 17;
   */
  CS = 17,

  /**
   * Czech Republic
   *
   * @generated from enum value: CZ = 18;
   */
  CZ = 18,

  /**
   * Germany
   *
   * @generated from enum value: DE = 19;
   */
  DE = 19,

  /**
   * Denmark
   *
   * @generated from enum value: DK = 20;
   */
  DK = 20,

  /**
   * Algeria
   *
   * @generated from enum value: DZ = 21;
   */
  DZ = 21,

  /**
   * Ecuador
   *
   * @generated from enum value: EC = 22;
   */
  EC = 22,

  /**
   * Estonia
   *
   * @generated from enum value: EE = 23;
   */
  EE = 23,

  /**
   * Egypt
   *
   * @generated from enum value: EG = 24;
   */
  EG = 24,

  /**
   * Spain
   *
   * @generated from enum value: ES = 25;
   */
  ES = 25,

  /**
   * Finland
   *
   * @generated from enum value: FI = 26;
   */
  FI = 26,

  /**
   * France
   *
   * @generated from enum value: FR = 27;
   */
  FR = 27,

  /**
   * Great Britain (United Kingdom)
   *
   * @generated from enum value: GB = 28;
   */
  GB = 28,

  /**
   * Greece
   *
   * @generated from enum value: GR = 29;
   */
  GR = 29,

  /**
   * Hong Kong
   *
   * @generated from enum value: HK = 30;
   */
  HK = 30,

  /**
   * Hungary
   *
   * @generated from enum value: HU = 31;
   */
  HU = 31,

  /**
   * Indonesia
   *
   * @generated from enum value: ID = 32;
   */
  ID = 32,

  /**
   * Ireland
   *
   * @generated from enum value: IE = 33;
   */
  IE = 33,

  /**
   * Israel
   *
   * @generated from enum value: IL = 34;
   */
  IL = 34,

  /**
   * India
   *
   * @generated from enum value: IN = 35;
   */
  IN = 35,

  /**
   * Iran
   *
   * @generated from enum value: IR = 36;
   */
  IR = 36,

  /**
   * Italy
   *
   * @generated from enum value: IT = 37;
   */
  IT = 37,

  /**
   * Japan
   *
   * @generated from enum value: JP = 38;
   */
  JP = 38,

  /**
   * Korea (South)
   *
   * @generated from enum value: KR = 39;
   */
  KR = 39,

  /**
   * Latvia
   *
   * @generated from enum value: LV = 40;
   */
  LV = 40,

  /**
   * Morocco
   *
   * @generated from enum value: MA = 41;
   */
  MA = 41,

  /**
   * Mexico
   *
   * @generated from enum value: MX = 42;
   */
  MX = 42,

  /**
   * Malaysia
   *
   * @generated from enum value: MY = 43;
   */
  MY = 43,

  /**
   * Nigeria
   *
   * @generated from enum value: NG = 44;
   */
  NG = 44,

  /**
   * Netherlands
   *
   * @generated from enum value: NL = 45;
   */
  NL = 45,

  /**
   * Norway
   *
   * @generated from enum value: NO = 46;
   */
  NO = 46,

  /**
   * New Zealand
   *
   * @generated from enum value: NZ = 47;
   */
  NZ = 47,

  /**
   * Peru
   *
   * @generated from enum value: PE = 48;
   */
  PE = 48,

  /**
   * Philippines
   *
   * @generated from enum value: PH = 49;
   */
  PH = 49,

  /**
   * Pakistan
   *
   * @generated from enum value: PK = 50;
   */
  PK = 50,

  /**
   * Poland
   *
   * @generated from enum value: PL = 51;
   */
  PL = 51,

  /**
   * Portugal
   *
   * @generated from enum value: PT = 52;
   */
  PT = 52,

  /**
   * Romania
   *
   * @generated from enum value: RO = 53;
   */
  RO = 53,

  /**
   * Serbia
   *
   * @generated from enum value: RS = 54;
   */
  RS = 54,

  /**
   * Russian Federation
   *
   * @generated from enum value: RU = 55;
   */
  RU = 55,

  /**
   * Saudi Arabia
   *
   * @generated from enum value: SA = 56;
   */
  SA = 56,

  /**
   * Sweden
   *
   * @generated from enum value: SE = 57;
   */
  SE = 57,

  /**
   * Singapore
   *
   * @generated from enum value: SG = 58;
   */
  SG = 58,

  /**
   * Slovenia
   *
   * @generated from enum value: SI = 59;
   */
  SI = 59,

  /**
   * Slovakia
   *
   * @generated from enum value: SK = 60;
   */
  SK = 60,

  /**
   * Thailand
   *
   * @generated from enum value: TH = 61;
   */
  TH = 61,

  /**
   * Turkey
   *
   * @generated from enum value: TR = 62;
   */
  TR = 62,

  /**
   * Taiwan
   *
   * @generated from enum value: TW = 63;
   */
  TW = 63,

  /**
   * Ukraine
   *
   * @generated from enum value: UA = 64;
   */
  UA = 64,

  /**
   * United States
   *
   * @generated from enum value: US = 65;
   */
  US = 65,

  /**
   * Venezuela
   *
   * @generated from enum value: VE = 66;
   */
  VE = 66,

  /**
   * Viet Nam
   *
   * @generated from enum value: VN = 67;
   */
  VN = 67,

  /**
   * South Africa
   *
   * @generated from enum value: ZA = 68;
   */
  ZA = 68,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.HolidayRegion.
 */
export const Model_HolidayRegionSchema: GenEnum<Model_HolidayRegion> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 5);

/**
 * Enums for color space, used for processing images in Object Table.
 * See more details at
 * https://www.tensorflow.org/io/tutorials/colorspace.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.ColorSpace
 */
export enum Model_ColorSpace {
  /**
   * Unspecified color space
   *
   * @generated from enum value: COLOR_SPACE_UNSPECIFIED = 0;
   */
  COLOR_SPACE_UNSPECIFIED = 0,

  /**
   * RGB
   *
   * @generated from enum value: RGB = 1;
   */
  RGB = 1,

  /**
   * HSV
   *
   * @generated from enum value: HSV = 2;
   */
  HSV = 2,

  /**
   * YIQ
   *
   * @generated from enum value: YIQ = 3;
   */
  YIQ = 3,

  /**
   * YUV
   *
   * @generated from enum value: YUV = 4;
   */
  YUV = 4,

  /**
   * GRAYSCALE
   *
   * @generated from enum value: GRAYSCALE = 5;
   */
  GRAYSCALE = 5,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.ColorSpace.
 */
export const Model_ColorSpaceSchema: GenEnum<Model_ColorSpace> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 6);

/**
 * Indicates the learning rate optimization strategy to use.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.LearnRateStrategy
 */
export enum Model_LearnRateStrategy {
  /**
   * Default value.
   *
   * @generated from enum value: LEARN_RATE_STRATEGY_UNSPECIFIED = 0;
   */
  LEARN_RATE_STRATEGY_UNSPECIFIED = 0,

  /**
   * Use line search to determine learning rate.
   *
   * @generated from enum value: LINE_SEARCH = 1;
   */
  LINE_SEARCH = 1,

  /**
   * Use a constant learning rate.
   *
   * @generated from enum value: CONSTANT = 2;
   */
  CONSTANT = 2,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.LearnRateStrategy.
 */
export const Model_LearnRateStrategySchema: GenEnum<Model_LearnRateStrategy> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 7);

/**
 * Indicates the optimization strategy used for training.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.OptimizationStrategy
 */
export enum Model_OptimizationStrategy {
  /**
   * Default value.
   *
   * @generated from enum value: OPTIMIZATION_STRATEGY_UNSPECIFIED = 0;
   */
  OPTIMIZATION_STRATEGY_UNSPECIFIED = 0,

  /**
   * Uses an iterative batch gradient descent algorithm.
   *
   * @generated from enum value: BATCH_GRADIENT_DESCENT = 1;
   */
  BATCH_GRADIENT_DESCENT = 1,

  /**
   * Uses a normal equation to solve linear regression problem.
   *
   * @generated from enum value: NORMAL_EQUATION = 2;
   */
  NORMAL_EQUATION = 2,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.OptimizationStrategy.
 */
export const Model_OptimizationStrategySchema: GenEnum<Model_OptimizationStrategy> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 8);

/**
 * Indicates the training algorithm to use for matrix factorization models.
 *
 * @generated from enum google.cloud.bigquery.v2.Model.FeedbackType
 */
export enum Model_FeedbackType {
  /**
   * Default value.
   *
   * @generated from enum value: FEEDBACK_TYPE_UNSPECIFIED = 0;
   */
  FEEDBACK_TYPE_UNSPECIFIED = 0,

  /**
   * Use weighted-als for implicit feedback problems.
   *
   * @generated from enum value: IMPLICIT = 1;
   */
  IMPLICIT = 1,

  /**
   * Use nonweighted-als for explicit feedback problems.
   *
   * @generated from enum value: EXPLICIT = 2;
   */
  EXPLICIT = 2,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Model.FeedbackType.
 */
export const Model_FeedbackTypeSchema: GenEnum<Model_FeedbackType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_model, 2, 9);

/**
 * Request format for getting information about a BigQuery ML model.
 *
 * @generated from message google.cloud.bigquery.v2.GetModelRequest
 */
export type GetModelRequest = Message<"google.cloud.bigquery.v2.GetModelRequest"> & {
  /**
   * Required. Project ID of the requested model.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the requested model.
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. Model ID of the requested model.
   *
   * @generated from field: string model_id = 3;
   */
  modelId: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.GetModelRequest.
 * Use `create(GetModelRequestSchema)` to create a new message.
 */
export const GetModelRequestSchema: GenMessage<GetModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 3);

/**
 * @generated from message google.cloud.bigquery.v2.PatchModelRequest
 */
export type PatchModelRequest = Message<"google.cloud.bigquery.v2.PatchModelRequest"> & {
  /**
   * Required. Project ID of the model to patch.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the model to patch.
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. Model ID of the model to patch.
   *
   * @generated from field: string model_id = 3;
   */
  modelId: string;

  /**
   * Required. Patched model.
   * Follows RFC5789 patch semantics. Missing fields are not updated.
   * To clear a field, explicitly set to default value.
   *
   * @generated from field: google.cloud.bigquery.v2.Model model = 4;
   */
  model?: Model;
};

/**
 * Describes the message google.cloud.bigquery.v2.PatchModelRequest.
 * Use `create(PatchModelRequestSchema)` to create a new message.
 */
export const PatchModelRequestSchema: GenMessage<PatchModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 4);

/**
 * Request format for deleting BigQuery ML models.
 *
 * @generated from message google.cloud.bigquery.v2.DeleteModelRequest
 */
export type DeleteModelRequest = Message<"google.cloud.bigquery.v2.DeleteModelRequest"> & {
  /**
   * Required. Project ID of the model to delete.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the model to delete.
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. Model ID of the model to delete.
   *
   * @generated from field: string model_id = 3;
   */
  modelId: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.DeleteModelRequest.
 * Use `create(DeleteModelRequestSchema)` to create a new message.
 */
export const DeleteModelRequestSchema: GenMessage<DeleteModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 5);

/**
 * Request format for listing BigQuery ML models.
 *
 * @generated from message google.cloud.bigquery.v2.ListModelsRequest
 */
export type ListModelsRequest = Message<"google.cloud.bigquery.v2.ListModelsRequest"> & {
  /**
   * Required. Project ID of the models to list.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the models to list.
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * The maximum number of results to return in a single response page.
   * Leverage the page tokens to iterate through the entire collection.
   *
   * @generated from field: google.protobuf.UInt32Value max_results = 3;
   */
  maxResults?: number;

  /**
   * Page token, returned by a previous call to request the next page of
   * results
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.ListModelsRequest.
 * Use `create(ListModelsRequestSchema)` to create a new message.
 */
export const ListModelsRequestSchema: GenMessage<ListModelsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 6);

/**
 * Response format for a single page when listing BigQuery ML models.
 *
 * @generated from message google.cloud.bigquery.v2.ListModelsResponse
 */
export type ListModelsResponse = Message<"google.cloud.bigquery.v2.ListModelsResponse"> & {
  /**
   * Models in the requested dataset. Only the following fields are populated:
   * model_reference, model_type, creation_time, last_modified_time and
   * labels.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Model models = 1;
   */
  models: Model[];

  /**
   * A token to request the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.ListModelsResponse.
 * Use `create(ListModelsResponseSchema)` to create a new message.
 */
export const ListModelsResponseSchema: GenMessage<ListModelsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_model, 7);

/**
 * This is an experimental RPC service definition for the BigQuery
 * Model Service.
 *
 * It should not be relied on for production use cases at this time.
 *
 * @generated from service google.cloud.bigquery.v2.ModelService
 */
export const ModelService: GenService<{
  /**
   * Gets the specified model resource by model ID.
   *
   * @generated from rpc google.cloud.bigquery.v2.ModelService.GetModel
   */
  getModel: {
    methodKind: "unary";
    input: typeof GetModelRequestSchema;
    output: typeof ModelSchema;
  },
  /**
   * Lists all models in the specified dataset. Requires the READER dataset
   * role. After retrieving the list of models, you can get information about a
   * particular model by calling the models.get method.
   *
   * @generated from rpc google.cloud.bigquery.v2.ModelService.ListModels
   */
  listModels: {
    methodKind: "unary";
    input: typeof ListModelsRequestSchema;
    output: typeof ListModelsResponseSchema;
  },
  /**
   * Patch specific fields in the specified model.
   *
   * @generated from rpc google.cloud.bigquery.v2.ModelService.PatchModel
   */
  patchModel: {
    methodKind: "unary";
    input: typeof PatchModelRequestSchema;
    output: typeof ModelSchema;
  },
  /**
   * Deletes the model specified by modelId from the dataset.
   *
   * @generated from rpc google.cloud.bigquery.v2.ModelService.DeleteModel
   */
  deleteModel: {
    methodKind: "unary";
    input: typeof DeleteModelRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_bigquery_v2_model, 0);

