// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/bigquery/v2/table.proto (package google.cloud.bigquery.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { BigLakeConfiguration } from "./biglake_config_pb";
import { file_google_cloud_bigquery_v2_biglake_config } from "./biglake_config_pb";
import type { Clustering } from "./clustering_pb";
import { file_google_cloud_bigquery_v2_clustering } from "./clustering_pb";
import type { EncryptionConfiguration } from "./encryption_config_pb";
import { file_google_cloud_bigquery_v2_encryption_config } from "./encryption_config_pb";
import type { ErrorProto } from "./error_pb";
import { file_google_cloud_bigquery_v2_error } from "./error_pb";
import type { ExternalCatalogTableOptions } from "./external_catalog_table_options_pb";
import { file_google_cloud_bigquery_v2_external_catalog_table_options } from "./external_catalog_table_options_pb";
import type { ExternalDataConfiguration } from "./external_data_config_pb";
import { file_google_cloud_bigquery_v2_external_data_config } from "./external_data_config_pb";
import type { PartitioningDefinition } from "./partitioning_definition_pb";
import { file_google_cloud_bigquery_v2_partitioning_definition } from "./partitioning_definition_pb";
import type { PrivacyPolicy } from "./privacy_policy_pb";
import { file_google_cloud_bigquery_v2_privacy_policy } from "./privacy_policy_pb";
import type { RangePartitioning } from "./range_partitioning_pb";
import { file_google_cloud_bigquery_v2_range_partitioning } from "./range_partitioning_pb";
import type { RestrictionConfig } from "./restriction_config_pb";
import { file_google_cloud_bigquery_v2_restriction_config } from "./restriction_config_pb";
import type { TableConstraints } from "./table_constraints_pb";
import { file_google_cloud_bigquery_v2_table_constraints } from "./table_constraints_pb";
import type { TableReference } from "./table_reference_pb";
import { file_google_cloud_bigquery_v2_table_reference } from "./table_reference_pb";
import type { TableFieldSchema_RoundingMode, TableSchema as TableSchema$1 } from "./table_schema_pb";
import { file_google_cloud_bigquery_v2_table_schema } from "./table_schema_pb";
import type { TimePartitioning } from "./time_partitioning_pb";
import { file_google_cloud_bigquery_v2_time_partitioning } from "./time_partitioning_pb";
import type { UserDefinedFunctionResource } from "./udf_resource_pb";
import { file_google_cloud_bigquery_v2_udf_resource } from "./udf_resource_pb";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/bigquery/v2/table.proto.
 */
export const file_google_cloud_bigquery_v2_table: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_cloud_bigquery_v2_biglake_config, file_google_cloud_bigquery_v2_clustering, file_google_cloud_bigquery_v2_encryption_config, file_google_cloud_bigquery_v2_error, file_google_cloud_bigquery_v2_external_catalog_table_options, file_google_cloud_bigquery_v2_external_data_config, file_google_cloud_bigquery_v2_partitioning_definition, file_google_cloud_bigquery_v2_privacy_policy, file_google_cloud_bigquery_v2_range_partitioning, file_google_cloud_bigquery_v2_restriction_config, file_google_cloud_bigquery_v2_table_constraints, file_google_cloud_bigquery_v2_table_reference, file_google_cloud_bigquery_v2_table_schema, file_google_cloud_bigquery_v2_time_partitioning, file_google_cloud_bigquery_v2_udf_resource, file_google_protobuf_empty, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * Replication info of a table created using `AS REPLICA` DDL like:
 * `CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`
 *
 * @generated from message google.cloud.bigquery.v2.TableReplicationInfo
 */
export type TableReplicationInfo = Message<"google.cloud.bigquery.v2.TableReplicationInfo"> & {
  /**
   * Required. Source table reference that is replicated.
   *
   * @generated from field: google.cloud.bigquery.v2.TableReference source_table = 1;
   */
  sourceTable?: TableReference;

  /**
   * Optional. Specifies the interval at which the source table is polled for
   * updates.
   * It's Optional. If not specified, default replication interval would be
   * applied.
   *
   * @generated from field: int64 replication_interval_ms = 2;
   */
  replicationIntervalMs: bigint;

  /**
   * Optional. Output only. If source is a materialized view, this field
   * signifies the last refresh time of the source.
   *
   * @generated from field: int64 replicated_source_last_refresh_time = 3;
   */
  replicatedSourceLastRefreshTime: bigint;

  /**
   * Optional. Output only. Replication status of configured replication.
   *
   * @generated from field: google.cloud.bigquery.v2.TableReplicationInfo.ReplicationStatus replication_status = 4;
   */
  replicationStatus: TableReplicationInfo_ReplicationStatus;

  /**
   * Optional. Output only. Replication error that will permanently stopped
   * table replication.
   *
   * @generated from field: google.cloud.bigquery.v2.ErrorProto replication_error = 5;
   */
  replicationError?: ErrorProto;
};

/**
 * Describes the message google.cloud.bigquery.v2.TableReplicationInfo.
 * Use `create(TableReplicationInfoSchema)` to create a new message.
 */
export const TableReplicationInfoSchema: GenMessage<TableReplicationInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 0);

/**
 * Replication status of the table created using `AS REPLICA` like:
 * `CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`
 *
 * @generated from enum google.cloud.bigquery.v2.TableReplicationInfo.ReplicationStatus
 */
export enum TableReplicationInfo_ReplicationStatus {
  /**
   * Default value.
   *
   * @generated from enum value: REPLICATION_STATUS_UNSPECIFIED = 0;
   */
  REPLICATION_STATUS_UNSPECIFIED = 0,

  /**
   * Replication is Active with no errors.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * Source object is deleted.
   *
   * @generated from enum value: SOURCE_DELETED = 2;
   */
  SOURCE_DELETED = 2,

  /**
   * Source revoked replication permissions.
   *
   * @generated from enum value: PERMISSION_DENIED = 3;
   */
  PERMISSION_DENIED = 3,

  /**
   * Source configuration doesn’t allow replication.
   *
   * @generated from enum value: UNSUPPORTED_CONFIGURATION = 4;
   */
  UNSUPPORTED_CONFIGURATION = 4,
}

/**
 * Describes the enum google.cloud.bigquery.v2.TableReplicationInfo.ReplicationStatus.
 */
export const TableReplicationInfo_ReplicationStatusSchema: GenEnum<TableReplicationInfo_ReplicationStatus> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_table, 0, 0);

/**
 * Describes the definition of a logical view.
 *
 * @generated from message google.cloud.bigquery.v2.ViewDefinition
 */
export type ViewDefinition = Message<"google.cloud.bigquery.v2.ViewDefinition"> & {
  /**
   * Required. A query that BigQuery executes when the view is referenced.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * Describes user-defined function resources used in the query.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.UserDefinedFunctionResource user_defined_function_resources = 2;
   */
  userDefinedFunctionResources: UserDefinedFunctionResource[];

  /**
   * Specifies whether to use BigQuery's legacy SQL for this view.
   * The default value is true. If set to false, the view will use
   * BigQuery's GoogleSQL:
   * https://cloud.google.com/bigquery/sql-reference/
   *
   * Queries and views that reference this view must use the same flag value.
   * A wrapper is used here because the default value is True.
   *
   * @generated from field: google.protobuf.BoolValue use_legacy_sql = 3;
   */
  useLegacySql?: boolean;

  /**
   * True if the column names are explicitly specified. For example by using the
   * 'CREATE VIEW v(c1, c2) AS ...' syntax.
   * Can only be set for GoogleSQL views.
   *
   * @generated from field: bool use_explicit_column_names = 4;
   */
  useExplicitColumnNames: boolean;

  /**
   * Optional. Specifices the privacy policy for the view.
   *
   * @generated from field: google.cloud.bigquery.v2.PrivacyPolicy privacy_policy = 5;
   */
  privacyPolicy?: PrivacyPolicy;

  /**
   * Optional. Foreign view representations.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.ForeignViewDefinition foreign_definitions = 6;
   */
  foreignDefinitions: ForeignViewDefinition[];
};

/**
 * Describes the message google.cloud.bigquery.v2.ViewDefinition.
 * Use `create(ViewDefinitionSchema)` to create a new message.
 */
export const ViewDefinitionSchema: GenMessage<ViewDefinition> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 1);

/**
 * A view can be represented in multiple ways. Each representation has its own
 * dialect. This message stores the metadata required for these representations.
 *
 * @generated from message google.cloud.bigquery.v2.ForeignViewDefinition
 */
export type ForeignViewDefinition = Message<"google.cloud.bigquery.v2.ForeignViewDefinition"> & {
  /**
   * Required. The query that defines the view.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * Optional. Represents the dialect of the query.
   *
   * @generated from field: string dialect = 7;
   */
  dialect: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.ForeignViewDefinition.
 * Use `create(ForeignViewDefinitionSchema)` to create a new message.
 */
export const ForeignViewDefinitionSchema: GenMessage<ForeignViewDefinition> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 2);

/**
 * Definition and configuration of a materialized view.
 *
 * @generated from message google.cloud.bigquery.v2.MaterializedViewDefinition
 */
export type MaterializedViewDefinition = Message<"google.cloud.bigquery.v2.MaterializedViewDefinition"> & {
  /**
   * Required. A query whose results are persisted.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * Output only. The time when this materialized view was last refreshed, in
   * milliseconds since the epoch.
   *
   * @generated from field: int64 last_refresh_time = 2;
   */
  lastRefreshTime: bigint;

  /**
   * Optional. Enable automatic refresh of the materialized view when the base
   * table is updated. The default value is "true".
   *
   * @generated from field: google.protobuf.BoolValue enable_refresh = 3;
   */
  enableRefresh?: boolean;

  /**
   * Optional. The maximum frequency at which this materialized view will be
   * refreshed. The default value is "1800000" (30 minutes).
   *
   * @generated from field: google.protobuf.UInt64Value refresh_interval_ms = 4;
   */
  refreshIntervalMs?: bigint;

  /**
   * Optional. This option declares the intention to construct a materialized
   * view that isn't refreshed incrementally.
   *
   * @generated from field: google.protobuf.BoolValue allow_non_incremental_definition = 6;
   */
  allowNonIncrementalDefinition?: boolean;
};

/**
 * Describes the message google.cloud.bigquery.v2.MaterializedViewDefinition.
 * Use `create(MaterializedViewDefinitionSchema)` to create a new message.
 */
export const MaterializedViewDefinitionSchema: GenMessage<MaterializedViewDefinition> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 3);

/**
 * Status of a materialized view.
 * The last refresh timestamp status is omitted here, but is present in the
 * MaterializedViewDefinition message.
 *
 * @generated from message google.cloud.bigquery.v2.MaterializedViewStatus
 */
export type MaterializedViewStatus = Message<"google.cloud.bigquery.v2.MaterializedViewStatus"> & {
  /**
   * Output only. Refresh watermark of materialized view. The base tables' data
   * were collected into the materialized view cache until this time.
   *
   * @generated from field: google.protobuf.Timestamp refresh_watermark = 1;
   */
  refreshWatermark?: Timestamp;

  /**
   * Output only. Error result of the last automatic refresh. If present,
   * indicates that the last automatic refresh was unsuccessful.
   *
   * @generated from field: google.cloud.bigquery.v2.ErrorProto last_refresh_status = 2;
   */
  lastRefreshStatus?: ErrorProto;
};

/**
 * Describes the message google.cloud.bigquery.v2.MaterializedViewStatus.
 * Use `create(MaterializedViewStatusSchema)` to create a new message.
 */
export const MaterializedViewStatusSchema: GenMessage<MaterializedViewStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 4);

/**
 * Information about base table and snapshot time of the snapshot.
 *
 * @generated from message google.cloud.bigquery.v2.SnapshotDefinition
 */
export type SnapshotDefinition = Message<"google.cloud.bigquery.v2.SnapshotDefinition"> & {
  /**
   * Required. Reference describing the ID of the table that was snapshot.
   *
   * @generated from field: google.cloud.bigquery.v2.TableReference base_table_reference = 1;
   */
  baseTableReference?: TableReference;

  /**
   * Required. The time at which the base table was snapshot. This value is
   * reported in the JSON response using RFC3339 format.
   *
   * @generated from field: google.protobuf.Timestamp snapshot_time = 2;
   */
  snapshotTime?: Timestamp;
};

/**
 * Describes the message google.cloud.bigquery.v2.SnapshotDefinition.
 * Use `create(SnapshotDefinitionSchema)` to create a new message.
 */
export const SnapshotDefinitionSchema: GenMessage<SnapshotDefinition> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 5);

/**
 * Information about base table and clone time of a table clone.
 *
 * @generated from message google.cloud.bigquery.v2.CloneDefinition
 */
export type CloneDefinition = Message<"google.cloud.bigquery.v2.CloneDefinition"> & {
  /**
   * Required. Reference describing the ID of the table that was cloned.
   *
   * @generated from field: google.cloud.bigquery.v2.TableReference base_table_reference = 1;
   */
  baseTableReference?: TableReference;

  /**
   * Required. The time at which the base table was cloned. This value is
   * reported in the JSON response using RFC3339 format.
   *
   * @generated from field: google.protobuf.Timestamp clone_time = 2;
   */
  cloneTime?: Timestamp;
};

/**
 * Describes the message google.cloud.bigquery.v2.CloneDefinition.
 * Use `create(CloneDefinitionSchema)` to create a new message.
 */
export const CloneDefinitionSchema: GenMessage<CloneDefinition> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 6);

/**
 * @generated from message google.cloud.bigquery.v2.Streamingbuffer
 */
export type Streamingbuffer = Message<"google.cloud.bigquery.v2.Streamingbuffer"> & {
  /**
   * Output only. A lower-bound estimate of the number of bytes currently in
   * the streaming buffer.
   *
   * @generated from field: uint64 estimated_bytes = 1;
   */
  estimatedBytes: bigint;

  /**
   * Output only. A lower-bound estimate of the number of rows currently in the
   * streaming buffer.
   *
   * @generated from field: uint64 estimated_rows = 2;
   */
  estimatedRows: bigint;

  /**
   * Output only. Contains the timestamp of the oldest entry in the streaming
   * buffer, in milliseconds since the epoch, if the streaming buffer is
   * available.
   *
   * @generated from field: fixed64 oldest_entry_time = 3;
   */
  oldestEntryTime: bigint;
};

/**
 * Describes the message google.cloud.bigquery.v2.Streamingbuffer.
 * Use `create(StreamingbufferSchema)` to create a new message.
 */
export const StreamingbufferSchema: GenMessage<Streamingbuffer> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 7);

/**
 * @generated from message google.cloud.bigquery.v2.Table
 */
export type Table = Message<"google.cloud.bigquery.v2.Table"> & {
  /**
   * The type of resource ID.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Output only. A hash of this resource.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;

  /**
   * Output only. An opaque ID uniquely identifying the table.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Output only. A URL that can be used to access this resource again.
   *
   * @generated from field: string self_link = 4;
   */
  selfLink: string;

  /**
   * Required. Reference describing the ID of this table.
   *
   * @generated from field: google.cloud.bigquery.v2.TableReference table_reference = 5;
   */
  tableReference?: TableReference;

  /**
   * Optional. A descriptive name for this table.
   *
   * @generated from field: google.protobuf.StringValue friendly_name = 6;
   */
  friendlyName?: string;

  /**
   * Optional. A user-friendly description of this table.
   *
   * @generated from field: google.protobuf.StringValue description = 7;
   */
  description?: string;

  /**
   * The labels associated with this table. You can use these to organize and
   * group your tables. Label keys and values can be no longer than 63
   * characters, can only contain lowercase letters, numeric characters,
   * underscores and dashes. International characters are allowed. Label values
   * are optional. Label keys must start with a letter and each label in the
   * list must have a different key.
   *
   * @generated from field: map<string, string> labels = 8;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Describes the schema of this table.
   *
   * @generated from field: google.cloud.bigquery.v2.TableSchema schema = 9;
   */
  schema?: TableSchema$1;

  /**
   * If specified, configures time-based partitioning for this table.
   *
   * @generated from field: google.cloud.bigquery.v2.TimePartitioning time_partitioning = 10;
   */
  timePartitioning?: TimePartitioning;

  /**
   * If specified, configures range partitioning for this table.
   *
   * @generated from field: google.cloud.bigquery.v2.RangePartitioning range_partitioning = 27;
   */
  rangePartitioning?: RangePartitioning;

  /**
   * Clustering specification for the table. Must be specified with time-based
   * partitioning, data in the table will be first partitioned and subsequently
   * clustered.
   *
   * @generated from field: google.cloud.bigquery.v2.Clustering clustering = 23;
   */
  clustering?: Clustering;

  /**
   * Optional. If set to true, queries over this table require
   * a partition filter that can be used for partition elimination to be
   * specified.
   *
   * @generated from field: google.protobuf.BoolValue require_partition_filter = 28;
   */
  requirePartitionFilter?: boolean;

  /**
   * Optional. The partition information for all table formats, including
   * managed partitioned tables, hive partitioned tables, iceberg partitioned,
   * and metastore partitioned tables. This field is only populated for
   * metastore partitioned tables. For other table formats, this is an output
   * only field.
   *
   * @generated from field: optional google.cloud.bigquery.v2.PartitioningDefinition partition_definition = 51;
   */
  partitionDefinition?: PartitioningDefinition;

  /**
   * Output only. The size of this table in logical bytes, excluding any data in
   * the streaming buffer.
   *
   * @generated from field: google.protobuf.Int64Value num_bytes = 11;
   */
  numBytes?: bigint;

  /**
   * Output only. The physical size of this table in bytes. This includes
   * storage used for time travel.
   *
   * @generated from field: google.protobuf.Int64Value num_physical_bytes = 26;
   */
  numPhysicalBytes?: bigint;

  /**
   * Output only. The number of logical bytes in the table that are considered
   * "long-term storage".
   *
   * @generated from field: google.protobuf.Int64Value num_long_term_bytes = 12;
   */
  numLongTermBytes?: bigint;

  /**
   * Output only. The number of rows of data in this table, excluding any data
   * in the streaming buffer.
   *
   * @generated from field: google.protobuf.UInt64Value num_rows = 13;
   */
  numRows?: bigint;

  /**
   * Output only. The time when this table was created, in milliseconds since
   * the epoch.
   *
   * @generated from field: int64 creation_time = 14;
   */
  creationTime: bigint;

  /**
   * Optional. The time when this table expires, in milliseconds since the
   * epoch. If not present, the table will persist indefinitely. Expired tables
   * will be deleted and their storage reclaimed.  The defaultTableExpirationMs
   * property of the encapsulating dataset can be used to set a default
   * expirationTime on newly created tables.
   *
   * @generated from field: google.protobuf.Int64Value expiration_time = 15;
   */
  expirationTime?: bigint;

  /**
   * Output only. The time when this table was last modified, in milliseconds
   * since the epoch.
   *
   * @generated from field: fixed64 last_modified_time = 16;
   */
  lastModifiedTime: bigint;

  /**
   * Output only. Describes the table type. The following values are supported:
   *
   * * `TABLE`: A normal BigQuery table.
   * * `VIEW`: A virtual table defined by a SQL query.
   * * `EXTERNAL`: A table that references data stored in an external storage
   *   system, such as Google Cloud Storage.
   * * `MATERIALIZED_VIEW`: A precomputed view defined by a SQL query.
   * * `SNAPSHOT`: An immutable BigQuery table that preserves the contents of a
   *   base table at a particular time. See additional information on
   *   [table
   *   snapshots](https://cloud.google.com/bigquery/docs/table-snapshots-intro).
   *
   * The default value is `TABLE`.
   *
   * @generated from field: string type = 17;
   */
  type: string;

  /**
   * Optional. The view definition.
   *
   * @generated from field: google.cloud.bigquery.v2.ViewDefinition view = 18;
   */
  view?: ViewDefinition;

  /**
   * Optional. The materialized view definition.
   *
   * @generated from field: google.cloud.bigquery.v2.MaterializedViewDefinition materialized_view = 25;
   */
  materializedView?: MaterializedViewDefinition;

  /**
   * Output only. The materialized view status.
   *
   * @generated from field: google.cloud.bigquery.v2.MaterializedViewStatus materialized_view_status = 42;
   */
  materializedViewStatus?: MaterializedViewStatus;

  /**
   * Optional. Describes the data format, location, and other properties of
   * a table stored outside of BigQuery. By defining these properties, the data
   * source can then be queried as if it were a standard BigQuery table.
   *
   * @generated from field: google.cloud.bigquery.v2.ExternalDataConfiguration external_data_configuration = 19;
   */
  externalDataConfiguration?: ExternalDataConfiguration;

  /**
   * Optional. Specifies the configuration of a BigLake managed table.
   *
   * @generated from field: google.cloud.bigquery.v2.BigLakeConfiguration biglake_configuration = 45;
   */
  biglakeConfiguration?: BigLakeConfiguration;

  /**
   * Output only. The geographic location where the table resides. This value
   * is inherited from the dataset.
   *
   * @generated from field: string location = 20;
   */
  location: string;

  /**
   * Output only. Contains information regarding this table's streaming buffer,
   * if one is present. This field will be absent if the table is not being
   * streamed to or if there is no data in the streaming buffer.
   *
   * @generated from field: google.cloud.bigquery.v2.Streamingbuffer streaming_buffer = 21;
   */
  streamingBuffer?: Streamingbuffer;

  /**
   * Custom encryption configuration (e.g., Cloud KMS keys).
   *
   * @generated from field: google.cloud.bigquery.v2.EncryptionConfiguration encryption_configuration = 22;
   */
  encryptionConfiguration?: EncryptionConfiguration;

  /**
   * Output only. Contains information about the snapshot. This value is set via
   * snapshot creation.
   *
   * @generated from field: google.cloud.bigquery.v2.SnapshotDefinition snapshot_definition = 29;
   */
  snapshotDefinition?: SnapshotDefinition;

  /**
   * Optional. Defines the default collation specification of new STRING fields
   * in the table. During table creation or update, if a STRING field is added
   * to this table without explicit collation specified, then the table inherits
   * the table default collation. A change to this field affects only fields
   * added afterwards, and does not alter the existing fields.
   * The following values are supported:
   *
   * * 'und:ci': undetermined locale, case insensitive.
   * * '': empty string. Default to case-sensitive behavior.
   *
   * @generated from field: google.protobuf.StringValue default_collation = 30;
   */
  defaultCollation?: string;

  /**
   * Optional. Defines the default rounding mode specification of new decimal
   * fields (NUMERIC OR BIGNUMERIC) in the table. During table creation or
   * update, if a decimal field is added to this table without an explicit
   * rounding mode specified, then the field inherits the table default
   * rounding mode. Changing this field doesn't affect existing fields.
   *
   * @generated from field: google.cloud.bigquery.v2.TableFieldSchema.RoundingMode default_rounding_mode = 44;
   */
  defaultRoundingMode: TableFieldSchema_RoundingMode;

  /**
   * Output only. Contains information about the clone. This value is set via
   * the clone operation.
   *
   * @generated from field: google.cloud.bigquery.v2.CloneDefinition clone_definition = 31;
   */
  cloneDefinition?: CloneDefinition;

  /**
   * Output only. Number of physical bytes used by time travel storage (deleted
   * or changed data). This data is not kept in real time, and might be delayed
   * by a few seconds to a few minutes.
   *
   * @generated from field: google.protobuf.Int64Value num_time_travel_physical_bytes = 33;
   */
  numTimeTravelPhysicalBytes?: bigint;

  /**
   * Output only. Total number of logical bytes in the table or materialized
   * view.
   *
   * @generated from field: google.protobuf.Int64Value num_total_logical_bytes = 34;
   */
  numTotalLogicalBytes?: bigint;

  /**
   * Output only. Number of logical bytes that are less than 90 days old.
   *
   * @generated from field: google.protobuf.Int64Value num_active_logical_bytes = 35;
   */
  numActiveLogicalBytes?: bigint;

  /**
   * Output only. Number of logical bytes that are more than 90 days old.
   *
   * @generated from field: google.protobuf.Int64Value num_long_term_logical_bytes = 36;
   */
  numLongTermLogicalBytes?: bigint;

  /**
   * Output only. Number of physical bytes used by current live data storage.
   * This data is not kept in real time, and might be delayed by a few seconds
   * to a few minutes.
   *
   * @generated from field: google.protobuf.Int64Value num_current_physical_bytes = 53;
   */
  numCurrentPhysicalBytes?: bigint;

  /**
   * Output only. The physical size of this table in bytes. This also includes
   * storage used for time travel. This data is not kept in real time, and might
   * be delayed by a few seconds to a few minutes.
   *
   * @generated from field: google.protobuf.Int64Value num_total_physical_bytes = 37;
   */
  numTotalPhysicalBytes?: bigint;

  /**
   * Output only. Number of physical bytes less than 90 days old. This data is
   * not kept in real time, and might be delayed by a few seconds to a few
   * minutes.
   *
   * @generated from field: google.protobuf.Int64Value num_active_physical_bytes = 38;
   */
  numActivePhysicalBytes?: bigint;

  /**
   * Output only. Number of physical bytes more than 90 days old.
   * This data is not kept in real time, and might be delayed by a few seconds
   * to a few minutes.
   *
   * @generated from field: google.protobuf.Int64Value num_long_term_physical_bytes = 39;
   */
  numLongTermPhysicalBytes?: bigint;

  /**
   * Output only. The number of partitions present in the table or materialized
   * view. This data is not kept in real time, and might be delayed by a few
   * seconds to a few minutes.
   *
   * @generated from field: google.protobuf.Int64Value num_partitions = 40;
   */
  numPartitions?: bigint;

  /**
   * Optional. The maximum staleness of data that could be returned when the
   * table (or stale MV) is queried. Staleness encoded as a string encoding
   * of sql IntervalValue type.
   *
   * @generated from field: string max_staleness = 41;
   */
  maxStaleness: string;

  /**
   * Optional. Output only. Restriction config for table. If set, restrict
   * certain accesses on the table based on the config. See [Data
   * egress](https://cloud.google.com/bigquery/docs/analytics-hub-introduction#data_egress)
   * for more details.
   *
   * @generated from field: google.cloud.bigquery.v2.RestrictionConfig restrictions = 46;
   */
  restrictions?: RestrictionConfig;

  /**
   * Optional. Tables Primary Key and Foreign Key information
   *
   * @generated from field: google.cloud.bigquery.v2.TableConstraints table_constraints = 47;
   */
  tableConstraints?: TableConstraints;

  /**
   * Optional. The [tags](https://cloud.google.com/bigquery/docs/tags) attached
   * to this table. Tag keys are globally unique. Tag key is expected to be in
   * the namespaced format, for example "123456789012/environment" where
   * 123456789012 is the ID of the parent organization or project resource for
   * this tag key. Tag value is expected to be the short name, for example
   * "Production". See [Tag
   * definitions](https://cloud.google.com/iam/docs/tags-access-control#definitions)
   * for more details.
   *
   * @generated from field: map<string, string> resource_tags = 48;
   */
  resourceTags: { [key: string]: string };

  /**
   * Optional. Table replication info for table created `AS REPLICA` DDL like:
   * `CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`
   *
   * @generated from field: google.cloud.bigquery.v2.TableReplicationInfo table_replication_info = 49;
   */
  tableReplicationInfo?: TableReplicationInfo;

  /**
   * Optional. Output only. Table references of all replicas currently active on
   * the table.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.TableReference replicas = 50;
   */
  replicas: TableReference[];

  /**
   * Optional. Options defining open source compatible table.
   *
   * @generated from field: google.cloud.bigquery.v2.ExternalCatalogTableOptions external_catalog_table_options = 54;
   */
  externalCatalogTableOptions?: ExternalCatalogTableOptions;
};

/**
 * Describes the message google.cloud.bigquery.v2.Table.
 * Use `create(TableSchema)` to create a new message.
 */
export const TableSchema: GenMessage<Table> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 8);

/**
 * Request format for getting table metadata.
 *
 * @generated from message google.cloud.bigquery.v2.GetTableRequest
 */
export type GetTableRequest = Message<"google.cloud.bigquery.v2.GetTableRequest"> & {
  /**
   * Required. Project ID of the requested table
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the requested table
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. Table ID of the requested table
   *
   * @generated from field: string table_id = 3;
   */
  tableId: string;

  /**
   * List of table schema fields to return (comma-separated).
   * If unspecified, all fields are returned.
   * A fieldMask cannot be used here because the fields will automatically be
   * converted from camelCase to snake_case and the conversion will fail if
   * there are underscores. Since these are fields in BigQuery table schemas,
   * underscores are allowed.
   *
   * @generated from field: string selected_fields = 4;
   */
  selectedFields: string;

  /**
   * Optional. Specifies the view that determines which table information is
   * returned. By default, basic table information and storage statistics
   * (STORAGE_STATS) are returned.
   *
   * @generated from field: google.cloud.bigquery.v2.GetTableRequest.TableMetadataView view = 5;
   */
  view: GetTableRequest_TableMetadataView;
};

/**
 * Describes the message google.cloud.bigquery.v2.GetTableRequest.
 * Use `create(GetTableRequestSchema)` to create a new message.
 */
export const GetTableRequestSchema: GenMessage<GetTableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 9);

/**
 * TableMetadataView specifies which table information is returned.
 *
 * @generated from enum google.cloud.bigquery.v2.GetTableRequest.TableMetadataView
 */
export enum GetTableRequest_TableMetadataView {
  /**
   * The default value.
   * Default to the STORAGE_STATS view.
   *
   * @generated from enum value: TABLE_METADATA_VIEW_UNSPECIFIED = 0;
   */
  TABLE_METADATA_VIEW_UNSPECIFIED = 0,

  /**
   * Includes basic table information including schema and
   * partitioning specification. This view does not include storage statistics
   * such as numRows or numBytes. This view is significantly more efficient
   * and should be used to support high query rates.
   *
   * @generated from enum value: BASIC = 1;
   */
  BASIC = 1,

  /**
   * Includes all information in the BASIC view as well as storage statistics
   * (numBytes, numLongTermBytes, numRows and lastModifiedTime).
   *
   * @generated from enum value: STORAGE_STATS = 2;
   */
  STORAGE_STATS = 2,

  /**
   * Includes all table information, including storage statistics.
   * It returns same information as STORAGE_STATS view, but may contain
   * additional information in the future.
   *
   * @generated from enum value: FULL = 3;
   */
  FULL = 3,
}

/**
 * Describes the enum google.cloud.bigquery.v2.GetTableRequest.TableMetadataView.
 */
export const GetTableRequest_TableMetadataViewSchema: GenEnum<GetTableRequest_TableMetadataView> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_table, 9, 0);

/**
 * Request format for inserting table metadata.
 *
 * @generated from message google.cloud.bigquery.v2.InsertTableRequest
 */
export type InsertTableRequest = Message<"google.cloud.bigquery.v2.InsertTableRequest"> & {
  /**
   * Required. Project ID of the new table
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the new table
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. A tables resource to insert
   *
   * @generated from field: google.cloud.bigquery.v2.Table table = 4;
   */
  table?: Table;
};

/**
 * Describes the message google.cloud.bigquery.v2.InsertTableRequest.
 * Use `create(InsertTableRequestSchema)` to create a new message.
 */
export const InsertTableRequestSchema: GenMessage<InsertTableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 10);

/**
 * @generated from message google.cloud.bigquery.v2.UpdateOrPatchTableRequest
 */
export type UpdateOrPatchTableRequest = Message<"google.cloud.bigquery.v2.UpdateOrPatchTableRequest"> & {
  /**
   * Required. Project ID of the table to update
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the table to update
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. Table ID of the table to update
   *
   * @generated from field: string table_id = 3;
   */
  tableId: string;

  /**
   * Required. A tables resource which will replace or patch the specified table
   *
   * @generated from field: google.cloud.bigquery.v2.Table table = 4;
   */
  table?: Table;

  /**
   * Optional. When true will autodetect schema, else will keep original schema.
   *
   * @generated from field: bool autodetect_schema = 5;
   */
  autodetectSchema: boolean;
};

/**
 * Describes the message google.cloud.bigquery.v2.UpdateOrPatchTableRequest.
 * Use `create(UpdateOrPatchTableRequestSchema)` to create a new message.
 */
export const UpdateOrPatchTableRequestSchema: GenMessage<UpdateOrPatchTableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 11);

/**
 * Request format for deleting a table.
 *
 * @generated from message google.cloud.bigquery.v2.DeleteTableRequest
 */
export type DeleteTableRequest = Message<"google.cloud.bigquery.v2.DeleteTableRequest"> & {
  /**
   * Required. Project ID of the table to delete
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the table to delete
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. Table ID of the table to delete
   *
   * @generated from field: string table_id = 3;
   */
  tableId: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.DeleteTableRequest.
 * Use `create(DeleteTableRequestSchema)` to create a new message.
 */
export const DeleteTableRequestSchema: GenMessage<DeleteTableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 12);

/**
 * Request format for enumerating tables.
 *
 * @generated from message google.cloud.bigquery.v2.ListTablesRequest
 */
export type ListTablesRequest = Message<"google.cloud.bigquery.v2.ListTablesRequest"> & {
  /**
   * Required. Project ID of the tables to list
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the tables to list
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * The maximum number of results to return in a single response page.
   * Leverage the page tokens to iterate through the entire collection.
   *
   * @generated from field: google.protobuf.UInt32Value max_results = 3;
   */
  maxResults?: number;

  /**
   * Page token, returned by a previous call, to request the next page of
   * results
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.ListTablesRequest.
 * Use `create(ListTablesRequestSchema)` to create a new message.
 */
export const ListTablesRequestSchema: GenMessage<ListTablesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 13);

/**
 * Information about a logical view.
 *
 * @generated from message google.cloud.bigquery.v2.ListFormatView
 */
export type ListFormatView = Message<"google.cloud.bigquery.v2.ListFormatView"> & {
  /**
   * True if view is defined in legacy SQL dialect,
   * false if in GoogleSQL.
   *
   * @generated from field: google.protobuf.BoolValue use_legacy_sql = 1;
   */
  useLegacySql?: boolean;

  /**
   * Specifices the privacy policy for the view.
   *
   * @generated from field: google.cloud.bigquery.v2.PrivacyPolicy privacy_policy = 2;
   */
  privacyPolicy?: PrivacyPolicy;
};

/**
 * Describes the message google.cloud.bigquery.v2.ListFormatView.
 * Use `create(ListFormatViewSchema)` to create a new message.
 */
export const ListFormatViewSchema: GenMessage<ListFormatView> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 14);

/**
 * @generated from message google.cloud.bigquery.v2.ListFormatTable
 */
export type ListFormatTable = Message<"google.cloud.bigquery.v2.ListFormatTable"> & {
  /**
   * The resource type.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * An opaque ID of the table.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * A reference uniquely identifying table.
   *
   * @generated from field: google.cloud.bigquery.v2.TableReference table_reference = 3;
   */
  tableReference?: TableReference;

  /**
   * The user-friendly name for this table.
   *
   * @generated from field: google.protobuf.StringValue friendly_name = 4;
   */
  friendlyName?: string;

  /**
   * The type of table.
   *
   * @generated from field: string type = 5;
   */
  type: string;

  /**
   * The time-based partitioning for this table.
   *
   * @generated from field: google.cloud.bigquery.v2.TimePartitioning time_partitioning = 6;
   */
  timePartitioning?: TimePartitioning;

  /**
   * The range partitioning for this table.
   *
   * @generated from field: google.cloud.bigquery.v2.RangePartitioning range_partitioning = 12;
   */
  rangePartitioning?: RangePartitioning;

  /**
   * Clustering specification for this table, if configured.
   *
   * @generated from field: google.cloud.bigquery.v2.Clustering clustering = 11;
   */
  clustering?: Clustering;

  /**
   * The labels associated with this table. You can use these to organize
   * and group your tables.
   *
   * @generated from field: map<string, string> labels = 7;
   */
  labels: { [key: string]: string };

  /**
   * Additional details for a view.
   *
   * @generated from field: google.cloud.bigquery.v2.ListFormatView view = 8;
   */
  view?: ListFormatView;

  /**
   * Output only. The time when this table was created, in milliseconds since
   * the epoch.
   *
   * @generated from field: int64 creation_time = 9;
   */
  creationTime: bigint;

  /**
   * The time when this table expires, in milliseconds since the
   * epoch. If not present, the table will persist indefinitely. Expired tables
   * will be deleted and their storage reclaimed.
   *
   * @generated from field: int64 expiration_time = 10;
   */
  expirationTime: bigint;

  /**
   * Optional. If set to true, queries including this table must specify a
   * partition filter. This filter is used for partition elimination.
   *
   * @generated from field: google.protobuf.BoolValue require_partition_filter = 14;
   */
  requirePartitionFilter?: boolean;
};

/**
 * Describes the message google.cloud.bigquery.v2.ListFormatTable.
 * Use `create(ListFormatTableSchema)` to create a new message.
 */
export const ListFormatTableSchema: GenMessage<ListFormatTable> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 15);

/**
 * Partial projection of the metadata for a given table in a list response.
 *
 * @generated from message google.cloud.bigquery.v2.TableList
 */
export type TableList = Message<"google.cloud.bigquery.v2.TableList"> & {
  /**
   * The type of list.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * A hash of this page of results.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;

  /**
   * A token to request the next page of results.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;

  /**
   * Tables in the requested dataset.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.ListFormatTable tables = 4;
   */
  tables: ListFormatTable[];

  /**
   * The total number of tables in the dataset.
   *
   * @generated from field: google.protobuf.Int32Value total_items = 5;
   */
  totalItems?: number;
};

/**
 * Describes the message google.cloud.bigquery.v2.TableList.
 * Use `create(TableListSchema)` to create a new message.
 */
export const TableListSchema: GenMessage<TableList> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_table, 16);

/**
 * This is an experimental RPC service definition for the BigQuery
 * Table Service.
 *
 * It should not be relied on for production use cases at this time.
 *
 * @generated from service google.cloud.bigquery.v2.TableService
 */
export const TableService: GenService<{
  /**
   * Gets the specified table resource by table ID.
   * This method does not return the data in the table, it only returns the
   * table resource, which describes the structure of this table.
   *
   * @generated from rpc google.cloud.bigquery.v2.TableService.GetTable
   */
  getTable: {
    methodKind: "unary";
    input: typeof GetTableRequestSchema;
    output: typeof TableSchema;
  },
  /**
   * Creates a new, empty table in the dataset.
   *
   * @generated from rpc google.cloud.bigquery.v2.TableService.InsertTable
   */
  insertTable: {
    methodKind: "unary";
    input: typeof InsertTableRequestSchema;
    output: typeof TableSchema;
  },
  /**
   * Updates information in an existing table. The update method replaces the
   * entire table resource, whereas the patch method only replaces fields that
   * are provided in the submitted table resource.
   * This method supports RFC5789 patch semantics.
   *
   * @generated from rpc google.cloud.bigquery.v2.TableService.PatchTable
   */
  patchTable: {
    methodKind: "unary";
    input: typeof UpdateOrPatchTableRequestSchema;
    output: typeof TableSchema;
  },
  /**
   * Updates information in an existing table. The update method replaces the
   * entire Table resource, whereas the patch method only replaces fields that
   * are provided in the submitted Table resource.
   *
   * @generated from rpc google.cloud.bigquery.v2.TableService.UpdateTable
   */
  updateTable: {
    methodKind: "unary";
    input: typeof UpdateOrPatchTableRequestSchema;
    output: typeof TableSchema;
  },
  /**
   * Deletes the table specified by tableId from the dataset.
   * If the table contains data, all the data will be deleted.
   *
   * @generated from rpc google.cloud.bigquery.v2.TableService.DeleteTable
   */
  deleteTable: {
    methodKind: "unary";
    input: typeof DeleteTableRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists all tables in the specified dataset. Requires the READER dataset
   * role.
   *
   * @generated from rpc google.cloud.bigquery.v2.TableService.ListTables
   */
  listTables: {
    methodKind: "unary";
    input: typeof ListTablesRequestSchema;
    output: typeof TableListSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_bigquery_v2_table, 0);

