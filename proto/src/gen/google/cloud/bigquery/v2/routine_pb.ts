// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/bigquery/v2/routine.proto (package google.cloud.bigquery.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { RoutineReference } from "./routine_reference_pb";
import { file_google_cloud_bigquery_v2_routine_reference } from "./routine_reference_pb";
import type { StandardSqlDataType, StandardSqlTableType } from "./standard_sql_pb";
import { file_google_cloud_bigquery_v2_standard_sql } from "./standard_sql_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/bigquery/v2/routine.proto.
 */
export const file_google_cloud_bigquery_v2_routine: GenFile = /*@__PURE__*/
  fileDesc("CiZnb29nbGUvY2xvdWQvYmlncXVlcnkvdjIvcm91dGluZS5wcm90bxIYZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnYyIrwRCgdSb3V0aW5lEhEKBGV0YWcYASABKAlCA+BBAxJKChFyb3V0aW5lX3JlZmVyZW5jZRgCIAEoCzIqLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5Sb3V0aW5lUmVmZXJlbmNlQgPgQQISSAoMcm91dGluZV90eXBlGAMgASgOMi0uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnYyLlJvdXRpbmUuUm91dGluZVR5cGVCA+BBAhIaCg1jcmVhdGlvbl90aW1lGAQgASgDQgPgQQMSHwoSbGFzdF9tb2RpZmllZF90aW1lGAUgASgDQgPgQQMSQQoIbGFuZ3VhZ2UYBiABKA4yKi5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIuUm91dGluZS5MYW5ndWFnZUID4EEBEj0KCWFyZ3VtZW50cxgHIAMoCzIqLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5Sb3V0aW5lLkFyZ3VtZW50EkIKC3JldHVybl90eXBlGAogASgLMi0uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnYyLlN0YW5kYXJkU3FsRGF0YVR5cGUSTgoRcmV0dXJuX3RhYmxlX3R5cGUYDSABKAsyLi5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIuU3RhbmRhcmRTcWxUYWJsZVR5cGVCA+BBARIaChJpbXBvcnRlZF9saWJyYXJpZXMYCCADKAkSFwoPZGVmaW5pdGlvbl9ib2R5GAkgASgJEhgKC2Rlc2NyaXB0aW9uGAsgASgJQgPgQQESUgoRZGV0ZXJtaW5pc21fbGV2ZWwYDCABKA4yMi5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIuUm91dGluZS5EZXRlcm1pbmlzbUxldmVsQgPgQQESSgoNc2VjdXJpdHlfbW9kZRgSIAEoDjIuLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5Sb3V0aW5lLlNlY3VyaXR5TW9kZUID4EEBEjQKC3N0cmljdF9tb2RlGA4gASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZUID4EEBEl0KF3JlbW90ZV9mdW5jdGlvbl9vcHRpb25zGA8gASgLMjcuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnYyLlJvdXRpbmUuUmVtb3RlRnVuY3Rpb25PcHRpb25zQgPgQQESQgoNc3Bhcmtfb3B0aW9ucxgQIAEoCzImLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5TcGFya09wdGlvbnNCA+BBARJXChRkYXRhX2dvdmVybmFuY2VfdHlwZRgRIAEoDjI0Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5Sb3V0aW5lLkRhdGFHb3Zlcm5hbmNlVHlwZUID4EEBGrEDCghBcmd1bWVudBIRCgRuYW1lGAEgASgJQgPgQQESUwoNYXJndW1lbnRfa2luZBgCIAEoDjI3Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5Sb3V0aW5lLkFyZ3VtZW50LkFyZ3VtZW50S2luZEID4EEBEj0KBG1vZGUYAyABKA4yLy5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIuUm91dGluZS5Bcmd1bWVudC5Nb2RlEkAKCWRhdGFfdHlwZRgEIAEoCzItLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5TdGFuZGFyZFNxbERhdGFUeXBlEjUKDGlzX2FnZ3JlZ2F0ZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWVCA+BBASJLCgxBcmd1bWVudEtpbmQSHQoZQVJHVU1FTlRfS0lORF9VTlNQRUNJRklFRBAAEg4KCkZJWEVEX1RZUEUQARIMCghBTllfVFlQRRACIjgKBE1vZGUSFAoQTU9ERV9VTlNQRUNJRklFRBAAEgYKAklOEAESBwoDT1VUEAISCQoFSU5PVVQQAxqCAgoVUmVtb3RlRnVuY3Rpb25PcHRpb25zEhAKCGVuZHBvaW50GAEgASgJEhIKCmNvbm5lY3Rpb24YAiABKAkSbQoUdXNlcl9kZWZpbmVkX2NvbnRleHQYAyADKAsyTy5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIuUm91dGluZS5SZW1vdGVGdW5jdGlvbk9wdGlvbnMuVXNlckRlZmluZWRDb250ZXh0RW50cnkSGQoRbWF4X2JhdGNoaW5nX3Jvd3MYBCABKAMaOQoXVXNlckRlZmluZWRDb250ZXh0RW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKCAQoLUm91dGluZVR5cGUSHAoYUk9VVElORV9UWVBFX1VOU1BFQ0lGSUVEEAASEwoPU0NBTEFSX0ZVTkNUSU9OEAESDQoJUFJPQ0VEVVJFEAISGQoVVEFCTEVfVkFMVUVEX0ZVTkNUSU9OEAMSFgoSQUdHUkVHQVRFX0ZVTkNUSU9OEAQiXgoITGFuZ3VhZ2USGAoUTEFOR1VBR0VfVU5TUEVDSUZJRUQQABIHCgNTUUwQARIOCgpKQVZBU0NSSVBUEAISCgoGUFlUSE9OEAMSCAoESkFWQRAEEgkKBVNDQUxBEAUiXwoQRGV0ZXJtaW5pc21MZXZlbBIhCh1ERVRFUk1JTklTTV9MRVZFTF9VTlNQRUNJRklFRBAAEhEKDURFVEVSTUlOSVNUSUMQARIVChFOT1RfREVURVJNSU5JU1RJQxACIkcKDFNlY3VyaXR5TW9kZRIdChlTRUNVUklUWV9NT0RFX1VOU1BFQ0lGSUVEEAASCwoHREVGSU5FUhABEgsKB0lOVk9LRVIQAiJMChJEYXRhR292ZXJuYW5jZVR5cGUSJAogREFUQV9HT1ZFUk5BTkNFX1RZUEVfVU5TUEVDSUZJRUQQABIQCgxEQVRBX01BU0tJTkcQASLPAgoMU3BhcmtPcHRpb25zEhIKCmNvbm5lY3Rpb24YASABKAkSFwoPcnVudGltZV92ZXJzaW9uGAIgASgJEhcKD2NvbnRhaW5lcl9pbWFnZRgDIAEoCRJKCgpwcm9wZXJ0aWVzGAQgAygLMjYuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnYyLlNwYXJrT3B0aW9ucy5Qcm9wZXJ0aWVzRW50cnkSFQoNbWFpbl9maWxlX3VyaRgFIAEoCRIUCgxweV9maWxlX3VyaXMYBiADKAkSEAoIamFyX3VyaXMYByADKAkSEQoJZmlsZV91cmlzGAggAygJEhQKDGFyY2hpdmVfdXJpcxgJIAMoCRISCgptYWluX2NsYXNzGAogASgJGjEKD1Byb3BlcnRpZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIl4KEUdldFJvdXRpbmVSZXF1ZXN0EhcKCnByb2plY3RfaWQYASABKAlCA+BBAhIXCgpkYXRhc2V0X2lkGAIgASgJQgPgQQISFwoKcm91dGluZV9pZBgDIAEoCUID4EECIoEBChRJbnNlcnRSb3V0aW5lUmVxdWVzdBIXCgpwcm9qZWN0X2lkGAEgASgJQgPgQQISFwoKZGF0YXNldF9pZBgCIAEoCUID4EECEjcKB3JvdXRpbmUYAyABKAsyIS5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIuUm91dGluZUID4EECIpoBChRVcGRhdGVSb3V0aW5lUmVxdWVzdBIXCgpwcm9qZWN0X2lkGAEgASgJQgPgQQISFwoKZGF0YXNldF9pZBgCIAEoCUID4EECEhcKCnJvdXRpbmVfaWQYAyABKAlCA+BBAhI3Cgdyb3V0aW5lGAQgASgLMiEuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnYyLlJvdXRpbmVCA+BBAiLJAQoTUGF0Y2hSb3V0aW5lUmVxdWVzdBIXCgpwcm9qZWN0X2lkGAEgASgJQgPgQQISFwoKZGF0YXNldF9pZBgCIAEoCUID4EECEhcKCnJvdXRpbmVfaWQYAyABKAlCA+BBAhI3Cgdyb3V0aW5lGAQgASgLMiEuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnYyLlJvdXRpbmVCA+BBAhIuCgpmaWVsZF9tYXNrGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJhChREZWxldGVSb3V0aW5lUmVxdWVzdBIXCgpwcm9qZWN0X2lkGAEgASgJQgPgQQISFwoKZGF0YXNldF9pZBgCIAEoCUID4EECEhcKCnJvdXRpbmVfaWQYAyABKAlCA+BBAiKeAQoTTGlzdFJvdXRpbmVzUmVxdWVzdBIXCgpwcm9qZWN0X2lkGAEgASgJQgPgQQISFwoKZGF0YXNldF9pZBgCIAEoCUID4EECEjEKC21heF9yZXN1bHRzGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJbnQzMlZhbHVlEhIKCnBhZ2VfdG9rZW4YBCABKAkSDgoGZmlsdGVyGAYgASgJImQKFExpc3RSb3V0aW5lc1Jlc3BvbnNlEjMKCHJvdXRpbmVzGAEgAygLMiEuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnYyLlJvdXRpbmUSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJMuIJCg5Sb3V0aW5lU2VydmljZRK6AQoKR2V0Um91dGluZRIrLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5HZXRSb3V0aW5lUmVxdWVzdBohLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5Sb3V0aW5lIlyC0+STAlYSVC9iaWdxdWVyeS92Mi9wcm9qZWN0cy97cHJvamVjdF9pZD0qfS9kYXRhc2V0cy97ZGF0YXNldF9pZD0qfS9yb3V0aW5lcy97cm91dGluZV9pZD0qfRK6AQoNSW5zZXJ0Um91dGluZRIuLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5JbnNlcnRSb3V0aW5lUmVxdWVzdBohLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5Sb3V0aW5lIlaC0+STAlA6B3JvdXRpbmUiRS9iaWdxdWVyeS92Mi9wcm9qZWN0cy97cHJvamVjdF9pZD0qfS9kYXRhc2V0cy97ZGF0YXNldF9pZD0qfS9yb3V0aW5lcxLJAQoNVXBkYXRlUm91dGluZRIuLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5VcGRhdGVSb3V0aW5lUmVxdWVzdBohLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5Sb3V0aW5lImWC0+STAl86B3JvdXRpbmUaVC9iaWdxdWVyeS92Mi9wcm9qZWN0cy97cHJvamVjdF9pZD0qfS9kYXRhc2V0cy97ZGF0YXNldF9pZD0qfS9yb3V0aW5lcy97cm91dGluZV9pZD0qfRJiCgxQYXRjaFJvdXRpbmUSLS5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIuUGF0Y2hSb3V0aW5lUmVxdWVzdBohLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5Sb3V0aW5lIgAStQEKDURlbGV0ZVJvdXRpbmUSLi5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIuRGVsZXRlUm91dGluZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiXILT5JMCVipUL2JpZ3F1ZXJ5L3YyL3Byb2plY3RzL3twcm9qZWN0X2lkPSp9L2RhdGFzZXRzL3tkYXRhc2V0X2lkPSp9L3JvdXRpbmVzL3tyb3V0aW5lX2lkPSp9ErwBCgxMaXN0Um91dGluZXMSLS5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIuTGlzdFJvdXRpbmVzUmVxdWVzdBouLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52Mi5MaXN0Um91dGluZXNSZXNwb25zZSJNgtPkkwJHEkUvYmlncXVlcnkvdjIvcHJvamVjdHMve3Byb2plY3RfaWQ9Kn0vZGF0YXNldHMve2RhdGFzZXRfaWQ9Kn0vcm91dGluZXMargHKQRdiaWdxdWVyeS5nb29nbGVhcGlzLmNvbdJBkAFodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2JpZ3F1ZXJ5LGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybS5yZWFkLW9ubHlCZgocY29tLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52MkIMUm91dGluZVByb3RvWjhjbG91ZC5nb29nbGUuY29tL2dvL2JpZ3F1ZXJ5L2FwaXYyL2JpZ3F1ZXJ5cGI7YmlncXVlcnlwYmIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_cloud_bigquery_v2_routine_reference, file_google_cloud_bigquery_v2_standard_sql, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_wrappers]);

/**
 * A user-defined function or a stored procedure.
 *
 * @generated from message google.cloud.bigquery.v2.Routine
 */
export type Routine = Message<"google.cloud.bigquery.v2.Routine"> & {
  /**
   * Output only. A hash of this resource.
   *
   * @generated from field: string etag = 1;
   */
  etag: string;

  /**
   * Required. Reference describing the ID of this routine.
   *
   * @generated from field: google.cloud.bigquery.v2.RoutineReference routine_reference = 2;
   */
  routineReference?: RoutineReference;

  /**
   * Required. The type of routine.
   *
   * @generated from field: google.cloud.bigquery.v2.Routine.RoutineType routine_type = 3;
   */
  routineType: Routine_RoutineType;

  /**
   * Output only. The time when this routine was created, in milliseconds since
   * the epoch.
   *
   * @generated from field: int64 creation_time = 4;
   */
  creationTime: bigint;

  /**
   * Output only. The time when this routine was last modified, in milliseconds
   * since the epoch.
   *
   * @generated from field: int64 last_modified_time = 5;
   */
  lastModifiedTime: bigint;

  /**
   * Optional. Defaults to "SQL" if remote_function_options field is absent, not
   * set otherwise.
   *
   * @generated from field: google.cloud.bigquery.v2.Routine.Language language = 6;
   */
  language: Routine_Language;

  /**
   * Optional.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Routine.Argument arguments = 7;
   */
  arguments: Routine_Argument[];

  /**
   * Optional if language = "SQL"; required otherwise.
   * Cannot be set if routine_type = "TABLE_VALUED_FUNCTION".
   *
   * If absent, the return type is inferred from definition_body at query time
   * in each query that references this routine. If present, then the evaluated
   * result will be cast to the specified returned type at query time.
   *
   * For example, for the functions created with the following statements:
   *
   * * `CREATE FUNCTION Add(x FLOAT64, y FLOAT64) RETURNS FLOAT64 AS (x + y);`
   *
   * * `CREATE FUNCTION Increment(x FLOAT64) AS (Add(x, 1));`
   *
   * * `CREATE FUNCTION Decrement(x FLOAT64) RETURNS FLOAT64 AS (Add(x, -1));`
   *
   * The return_type is `{type_kind: "FLOAT64"}` for `Add` and `Decrement`, and
   * is absent for `Increment` (inferred as FLOAT64 at query time).
   *
   * Suppose the function `Add` is replaced by
   *   `CREATE OR REPLACE FUNCTION Add(x INT64, y INT64) AS (x + y);`
   *
   * Then the inferred return type of `Increment` is automatically changed to
   * INT64 at query time, while the return type of `Decrement` remains FLOAT64.
   *
   * @generated from field: google.cloud.bigquery.v2.StandardSqlDataType return_type = 10;
   */
  returnType?: StandardSqlDataType;

  /**
   * Optional. Can be set only if routine_type = "TABLE_VALUED_FUNCTION".
   *
   * If absent, the return table type is inferred from definition_body at query
   * time in each query that references this routine. If present, then the
   * columns in the evaluated table result will be cast to match the column
   * types specified in return table type, at query time.
   *
   * @generated from field: google.cloud.bigquery.v2.StandardSqlTableType return_table_type = 13;
   */
  returnTableType?: StandardSqlTableType;

  /**
   * Optional. If language = "JAVASCRIPT", this field stores the path of the
   * imported JAVASCRIPT libraries.
   *
   * @generated from field: repeated string imported_libraries = 8;
   */
  importedLibraries: string[];

  /**
   * Required. The body of the routine.
   *
   * For functions, this is the expression in the AS clause.
   *
   * If language=SQL, it is the substring inside (but excluding) the
   * parentheses. For example, for the function created with the following
   * statement:
   *
   * `CREATE FUNCTION JoinLines(x string, y string) as (concat(x, "\n", y))`
   *
   * The definition_body is `concat(x, "\n", y)` (\n is not replaced with
   * linebreak).
   *
   * If language=JAVASCRIPT, it is the evaluated string in the AS clause.
   * For example, for the function created with the following statement:
   *
   * `CREATE FUNCTION f() RETURNS STRING LANGUAGE js AS 'return "\n";\n'`
   *
   * The definition_body is
   *
   * `return "\n";\n`
   *
   * Note that both \n are replaced with linebreaks.
   *
   * @generated from field: string definition_body = 9;
   */
  definitionBody: string;

  /**
   * Optional. The description of the routine, if defined.
   *
   * @generated from field: string description = 11;
   */
  description: string;

  /**
   * Optional. The determinism level of the JavaScript UDF, if defined.
   *
   * @generated from field: google.cloud.bigquery.v2.Routine.DeterminismLevel determinism_level = 12;
   */
  determinismLevel: Routine_DeterminismLevel;

  /**
   * Optional. The security mode of the routine, if defined. If not defined, the
   * security mode is automatically determined from the routine's configuration.
   *
   * @generated from field: google.cloud.bigquery.v2.Routine.SecurityMode security_mode = 18;
   */
  securityMode: Routine_SecurityMode;

  /**
   * Optional. Use this option to catch many common errors. Error checking is
   * not exhaustive, and successfully creating a procedure doesn't guarantee
   * that the procedure will successfully execute at runtime. If `strictMode` is
   * set to `TRUE`, the procedure body is further checked for errors such as
   * non-existent tables or columns. The `CREATE PROCEDURE` statement fails if
   * the body fails any of these checks.
   *
   * If `strictMode` is set to `FALSE`, the procedure body is checked only for
   * syntax. For procedures that invoke themselves recursively, specify
   * `strictMode=FALSE` to avoid non-existent procedure errors during
   * validation.
   *
   * Default value is `TRUE`.
   *
   * @generated from field: google.protobuf.BoolValue strict_mode = 14;
   */
  strictMode?: boolean;

  /**
   * Optional. Remote function specific options.
   *
   * @generated from field: google.cloud.bigquery.v2.Routine.RemoteFunctionOptions remote_function_options = 15;
   */
  remoteFunctionOptions?: Routine_RemoteFunctionOptions;

  /**
   * Optional. Spark specific options.
   *
   * @generated from field: google.cloud.bigquery.v2.SparkOptions spark_options = 16;
   */
  sparkOptions?: SparkOptions;

  /**
   * Optional. If set to `DATA_MASKING`, the function is validated and made
   * available as a masking function. For more information, see [Create custom
   * masking
   * routines](https://cloud.google.com/bigquery/docs/user-defined-functions#custom-mask).
   *
   * @generated from field: google.cloud.bigquery.v2.Routine.DataGovernanceType data_governance_type = 17;
   */
  dataGovernanceType: Routine_DataGovernanceType;
};

/**
 * Describes the message google.cloud.bigquery.v2.Routine.
 * Use `create(RoutineSchema)` to create a new message.
 */
export const RoutineSchema: GenMessage<Routine> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 0);

/**
 * Input/output argument of a function or a stored procedure.
 *
 * @generated from message google.cloud.bigquery.v2.Routine.Argument
 */
export type Routine_Argument = Message<"google.cloud.bigquery.v2.Routine.Argument"> & {
  /**
   * Optional. The name of this argument. Can be absent for function return
   * argument.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Defaults to FIXED_TYPE.
   *
   * @generated from field: google.cloud.bigquery.v2.Routine.Argument.ArgumentKind argument_kind = 2;
   */
  argumentKind: Routine_Argument_ArgumentKind;

  /**
   * Optional. Specifies whether the argument is input or output.
   * Can be set for procedures only.
   *
   * @generated from field: google.cloud.bigquery.v2.Routine.Argument.Mode mode = 3;
   */
  mode: Routine_Argument_Mode;

  /**
   * Required unless argument_kind = ANY_TYPE.
   *
   * @generated from field: google.cloud.bigquery.v2.StandardSqlDataType data_type = 4;
   */
  dataType?: StandardSqlDataType;

  /**
   * Optional. Whether the argument is an aggregate function parameter.
   * Must be Unset for routine types other than AGGREGATE_FUNCTION.
   * For AGGREGATE_FUNCTION, if set to false, it is equivalent to adding "NOT
   * AGGREGATE" clause in DDL; Otherwise, it is equivalent to omitting "NOT
   * AGGREGATE" clause in DDL.
   *
   * @generated from field: google.protobuf.BoolValue is_aggregate = 6;
   */
  isAggregate?: boolean;
};

/**
 * Describes the message google.cloud.bigquery.v2.Routine.Argument.
 * Use `create(Routine_ArgumentSchema)` to create a new message.
 */
export const Routine_ArgumentSchema: GenMessage<Routine_Argument> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 0, 0);

/**
 * Represents the kind of a given argument.
 *
 * @generated from enum google.cloud.bigquery.v2.Routine.Argument.ArgumentKind
 */
export enum Routine_Argument_ArgumentKind {
  /**
   * Default value.
   *
   * @generated from enum value: ARGUMENT_KIND_UNSPECIFIED = 0;
   */
  ARGUMENT_KIND_UNSPECIFIED = 0,

  /**
   * The argument is a variable with fully specified type, which can be a
   * struct or an array, but not a table.
   *
   * @generated from enum value: FIXED_TYPE = 1;
   */
  FIXED_TYPE = 1,

  /**
   * The argument is any type, including struct or array, but not a table.
   * To be added: FIXED_TABLE, ANY_TABLE
   *
   * @generated from enum value: ANY_TYPE = 2;
   */
  ANY_TYPE = 2,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Routine.Argument.ArgumentKind.
 */
export const Routine_Argument_ArgumentKindSchema: GenEnum<Routine_Argument_ArgumentKind> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_routine, 0, 0, 0);

/**
 * The input/output mode of the argument.
 *
 * @generated from enum google.cloud.bigquery.v2.Routine.Argument.Mode
 */
export enum Routine_Argument_Mode {
  /**
   * Default value.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * The argument is input-only.
   *
   * @generated from enum value: IN = 1;
   */
  IN = 1,

  /**
   * The argument is output-only.
   *
   * @generated from enum value: OUT = 2;
   */
  OUT = 2,

  /**
   * The argument is both an input and an output.
   *
   * @generated from enum value: INOUT = 3;
   */
  INOUT = 3,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Routine.Argument.Mode.
 */
export const Routine_Argument_ModeSchema: GenEnum<Routine_Argument_Mode> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_routine, 0, 0, 1);

/**
 * Options for a remote user-defined function.
 *
 * @generated from message google.cloud.bigquery.v2.Routine.RemoteFunctionOptions
 */
export type Routine_RemoteFunctionOptions = Message<"google.cloud.bigquery.v2.Routine.RemoteFunctionOptions"> & {
  /**
   * Endpoint of the user-provided remote service, e.g.
   * ```https://us-east1-my_gcf_project.cloudfunctions.net/remote_add```
   *
   * @generated from field: string endpoint = 1;
   */
  endpoint: string;

  /**
   * Fully qualified name of the user-provided connection object which holds
   * the authentication information to send requests to the remote service.
   * Format:
   * ```"projects/{projectId}/locations/{locationId}/connections/{connectionId}"```
   *
   * @generated from field: string connection = 2;
   */
  connection: string;

  /**
   * User-defined context as a set of key/value pairs, which will be sent as
   * function invocation context together with batched arguments in the
   * requests to the remote service. The total number of bytes of keys and
   * values must be less than 8KB.
   *
   * @generated from field: map<string, string> user_defined_context = 3;
   */
  userDefinedContext: { [key: string]: string };

  /**
   * Max number of rows in each batch sent to the remote service.
   * If absent or if 0, BigQuery dynamically decides the number of rows in a
   * batch.
   *
   * @generated from field: int64 max_batching_rows = 4;
   */
  maxBatchingRows: bigint;
};

/**
 * Describes the message google.cloud.bigquery.v2.Routine.RemoteFunctionOptions.
 * Use `create(Routine_RemoteFunctionOptionsSchema)` to create a new message.
 */
export const Routine_RemoteFunctionOptionsSchema: GenMessage<Routine_RemoteFunctionOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 0, 1);

/**
 * The fine-grained type of the routine.
 *
 * @generated from enum google.cloud.bigquery.v2.Routine.RoutineType
 */
export enum Routine_RoutineType {
  /**
   * Default value.
   *
   * @generated from enum value: ROUTINE_TYPE_UNSPECIFIED = 0;
   */
  ROUTINE_TYPE_UNSPECIFIED = 0,

  /**
   * Non-built-in persistent scalar function.
   *
   * @generated from enum value: SCALAR_FUNCTION = 1;
   */
  SCALAR_FUNCTION = 1,

  /**
   * Stored procedure.
   *
   * @generated from enum value: PROCEDURE = 2;
   */
  PROCEDURE = 2,

  /**
   * Non-built-in persistent TVF.
   *
   * @generated from enum value: TABLE_VALUED_FUNCTION = 3;
   */
  TABLE_VALUED_FUNCTION = 3,

  /**
   * Non-built-in persistent aggregate function.
   *
   * @generated from enum value: AGGREGATE_FUNCTION = 4;
   */
  AGGREGATE_FUNCTION = 4,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Routine.RoutineType.
 */
export const Routine_RoutineTypeSchema: GenEnum<Routine_RoutineType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_routine, 0, 0);

/**
 * The language of the routine.
 *
 * @generated from enum google.cloud.bigquery.v2.Routine.Language
 */
export enum Routine_Language {
  /**
   * Default value.
   *
   * @generated from enum value: LANGUAGE_UNSPECIFIED = 0;
   */
  LANGUAGE_UNSPECIFIED = 0,

  /**
   * SQL language.
   *
   * @generated from enum value: SQL = 1;
   */
  SQL = 1,

  /**
   * JavaScript language.
   *
   * @generated from enum value: JAVASCRIPT = 2;
   */
  JAVASCRIPT = 2,

  /**
   * Python language.
   *
   * @generated from enum value: PYTHON = 3;
   */
  PYTHON = 3,

  /**
   * Java language.
   *
   * @generated from enum value: JAVA = 4;
   */
  JAVA = 4,

  /**
   * Scala language.
   *
   * @generated from enum value: SCALA = 5;
   */
  SCALA = 5,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Routine.Language.
 */
export const Routine_LanguageSchema: GenEnum<Routine_Language> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_routine, 0, 1);

/**
 * JavaScript UDF determinism levels.
 *
 * If all JavaScript UDFs are DETERMINISTIC, the query result is
 * potentially cachable (see below). If any JavaScript UDF is
 * NOT_DETERMINISTIC, the query result is not cacheable.
 *
 * Even if a JavaScript UDF is deterministic, many other factors can prevent
 * usage of cached query results. Example factors include but not limited to:
 * DDL/DML, non-deterministic SQL function calls, update of referenced
 * tables/views/UDFs or imported JavaScript libraries.
 *
 * SQL UDFs cannot have determinism specified. Their determinism is
 * automatically determined.
 *
 * @generated from enum google.cloud.bigquery.v2.Routine.DeterminismLevel
 */
export enum Routine_DeterminismLevel {
  /**
   * The determinism of the UDF is unspecified.
   *
   * @generated from enum value: DETERMINISM_LEVEL_UNSPECIFIED = 0;
   */
  DETERMINISM_LEVEL_UNSPECIFIED = 0,

  /**
   * The UDF is deterministic, meaning that 2 function calls with the same
   * inputs always produce the same result, even across 2 query runs.
   *
   * @generated from enum value: DETERMINISTIC = 1;
   */
  DETERMINISTIC = 1,

  /**
   * The UDF is not deterministic.
   *
   * @generated from enum value: NOT_DETERMINISTIC = 2;
   */
  NOT_DETERMINISTIC = 2,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Routine.DeterminismLevel.
 */
export const Routine_DeterminismLevelSchema: GenEnum<Routine_DeterminismLevel> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_routine, 0, 2);

/**
 * Security mode.
 *
 * @generated from enum google.cloud.bigquery.v2.Routine.SecurityMode
 */
export enum Routine_SecurityMode {
  /**
   * The security mode of the routine is unspecified.
   *
   * @generated from enum value: SECURITY_MODE_UNSPECIFIED = 0;
   */
  SECURITY_MODE_UNSPECIFIED = 0,

  /**
   * The routine is to be executed with the privileges of the user who
   * defines it.
   *
   * @generated from enum value: DEFINER = 1;
   */
  DEFINER = 1,

  /**
   * The routine is to be executed with the privileges of the user who
   * invokes it.
   *
   * @generated from enum value: INVOKER = 2;
   */
  INVOKER = 2,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Routine.SecurityMode.
 */
export const Routine_SecurityModeSchema: GenEnum<Routine_SecurityMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_routine, 0, 3);

/**
 * Data governance type values. Only supports `DATA_MASKING`.
 *
 * @generated from enum google.cloud.bigquery.v2.Routine.DataGovernanceType
 */
export enum Routine_DataGovernanceType {
  /**
   * The data governance type is unspecified.
   *
   * @generated from enum value: DATA_GOVERNANCE_TYPE_UNSPECIFIED = 0;
   */
  DATA_GOVERNANCE_TYPE_UNSPECIFIED = 0,

  /**
   * The data governance type is data masking.
   *
   * @generated from enum value: DATA_MASKING = 1;
   */
  DATA_MASKING = 1,
}

/**
 * Describes the enum google.cloud.bigquery.v2.Routine.DataGovernanceType.
 */
export const Routine_DataGovernanceTypeSchema: GenEnum<Routine_DataGovernanceType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_v2_routine, 0, 4);

/**
 * Options for a user-defined Spark routine.
 *
 * @generated from message google.cloud.bigquery.v2.SparkOptions
 */
export type SparkOptions = Message<"google.cloud.bigquery.v2.SparkOptions"> & {
  /**
   * Fully qualified name of the user-provided Spark connection object. Format:
   * ```"projects/{project_id}/locations/{location_id}/connections/{connection_id}"```
   *
   * @generated from field: string connection = 1;
   */
  connection: string;

  /**
   * Runtime version. If not specified, the default runtime version is used.
   *
   * @generated from field: string runtime_version = 2;
   */
  runtimeVersion: string;

  /**
   * Custom container image for the runtime environment.
   *
   * @generated from field: string container_image = 3;
   */
  containerImage: string;

  /**
   * Configuration properties as a set of key/value pairs, which will be passed
   * on to the Spark application. For more information, see
   * [Apache Spark](https://spark.apache.org/docs/latest/index.html) and the
   * [procedure option
   * list](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language#procedure_option_list).
   *
   * @generated from field: map<string, string> properties = 4;
   */
  properties: { [key: string]: string };

  /**
   * The main file/jar URI of the Spark application. Exactly one of the
   * definition_body field and the main_file_uri field must be set for Python.
   * Exactly one of main_class and main_file_uri field
   * should be set for Java/Scala language type.
   *
   * @generated from field: string main_file_uri = 5;
   */
  mainFileUri: string;

  /**
   * Python files to be placed on the PYTHONPATH for PySpark application.
   * Supported file types: `.py`, `.egg`, and `.zip`. For more information
   * about Apache Spark, see
   * [Apache Spark](https://spark.apache.org/docs/latest/index.html).
   *
   * @generated from field: repeated string py_file_uris = 6;
   */
  pyFileUris: string[];

  /**
   * JARs to include on the driver and executor CLASSPATH.
   * For more information about Apache Spark, see
   * [Apache Spark](https://spark.apache.org/docs/latest/index.html).
   *
   * @generated from field: repeated string jar_uris = 7;
   */
  jarUris: string[];

  /**
   * Files to be placed in the working directory of each executor.
   * For more information about Apache Spark, see
   * [Apache Spark](https://spark.apache.org/docs/latest/index.html).
   *
   * @generated from field: repeated string file_uris = 8;
   */
  fileUris: string[];

  /**
   * Archive files to be extracted into the working directory of each executor.
   * For more information about Apache Spark, see
   * [Apache Spark](https://spark.apache.org/docs/latest/index.html).
   *
   * @generated from field: repeated string archive_uris = 9;
   */
  archiveUris: string[];

  /**
   * The fully qualified name of a class in jar_uris, for example,
   * com.example.wordcount. Exactly one of main_class and main_jar_uri field
   *  should be set for Java/Scala language type.
   *
   * @generated from field: string main_class = 10;
   */
  mainClass: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.SparkOptions.
 * Use `create(SparkOptionsSchema)` to create a new message.
 */
export const SparkOptionsSchema: GenMessage<SparkOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 1);

/**
 * Describes the format for getting information about a routine.
 *
 * @generated from message google.cloud.bigquery.v2.GetRoutineRequest
 */
export type GetRoutineRequest = Message<"google.cloud.bigquery.v2.GetRoutineRequest"> & {
  /**
   * Required. Project ID of the requested routine
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the requested routine
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. Routine ID of the requested routine
   *
   * @generated from field: string routine_id = 3;
   */
  routineId: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.GetRoutineRequest.
 * Use `create(GetRoutineRequestSchema)` to create a new message.
 */
export const GetRoutineRequestSchema: GenMessage<GetRoutineRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 2);

/**
 * Describes the format for inserting a routine.
 *
 * @generated from message google.cloud.bigquery.v2.InsertRoutineRequest
 */
export type InsertRoutineRequest = Message<"google.cloud.bigquery.v2.InsertRoutineRequest"> & {
  /**
   * Required. Project ID of the new routine
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the new routine
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. A routine resource to insert
   *
   * @generated from field: google.cloud.bigquery.v2.Routine routine = 3;
   */
  routine?: Routine;
};

/**
 * Describes the message google.cloud.bigquery.v2.InsertRoutineRequest.
 * Use `create(InsertRoutineRequestSchema)` to create a new message.
 */
export const InsertRoutineRequestSchema: GenMessage<InsertRoutineRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 3);

/**
 * Describes the format for updating a routine.
 *
 * @generated from message google.cloud.bigquery.v2.UpdateRoutineRequest
 */
export type UpdateRoutineRequest = Message<"google.cloud.bigquery.v2.UpdateRoutineRequest"> & {
  /**
   * Required. Project ID of the routine to update
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the routine to update
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. Routine ID of the routine to update
   *
   * @generated from field: string routine_id = 3;
   */
  routineId: string;

  /**
   * Required. A routine resource which will replace the specified routine
   *
   * @generated from field: google.cloud.bigquery.v2.Routine routine = 4;
   */
  routine?: Routine;
};

/**
 * Describes the message google.cloud.bigquery.v2.UpdateRoutineRequest.
 * Use `create(UpdateRoutineRequestSchema)` to create a new message.
 */
export const UpdateRoutineRequestSchema: GenMessage<UpdateRoutineRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 4);

/**
 * Describes the format for the partial update (patch) of a routine.
 *
 * @generated from message google.cloud.bigquery.v2.PatchRoutineRequest
 */
export type PatchRoutineRequest = Message<"google.cloud.bigquery.v2.PatchRoutineRequest"> & {
  /**
   * Required. Project ID of the routine to update
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the routine to update
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. Routine ID of the routine to update
   *
   * @generated from field: string routine_id = 3;
   */
  routineId: string;

  /**
   * Required. A routine resource which will be used to partially
   * update the specified routine
   *
   * @generated from field: google.cloud.bigquery.v2.Routine routine = 4;
   */
  routine?: Routine;

  /**
   * Only the Routine fields in the field mask are updated
   * by the given routine. Repeated routine fields will be fully replaced
   * if contained in the field mask.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 5;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message google.cloud.bigquery.v2.PatchRoutineRequest.
 * Use `create(PatchRoutineRequestSchema)` to create a new message.
 */
export const PatchRoutineRequestSchema: GenMessage<PatchRoutineRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 5);

/**
 * Describes the format for deleting a routine.
 *
 * @generated from message google.cloud.bigquery.v2.DeleteRoutineRequest
 */
export type DeleteRoutineRequest = Message<"google.cloud.bigquery.v2.DeleteRoutineRequest"> & {
  /**
   * Required. Project ID of the routine to delete
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the routine to delete
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * Required. Routine ID of the routine to delete
   *
   * @generated from field: string routine_id = 3;
   */
  routineId: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.DeleteRoutineRequest.
 * Use `create(DeleteRoutineRequestSchema)` to create a new message.
 */
export const DeleteRoutineRequestSchema: GenMessage<DeleteRoutineRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 6);

/**
 * Describes the format for listing routines.
 *
 * @generated from message google.cloud.bigquery.v2.ListRoutinesRequest
 */
export type ListRoutinesRequest = Message<"google.cloud.bigquery.v2.ListRoutinesRequest"> & {
  /**
   * Required. Project ID of the routines to list
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Dataset ID of the routines to list
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * The maximum number of results to return in a single response page.
   * Leverage the page tokens to iterate through the entire collection.
   *
   * @generated from field: google.protobuf.UInt32Value max_results = 3;
   */
  maxResults?: number;

  /**
   * Page token, returned by a previous call, to request the next page of
   * results
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * If set, then only the Routines matching this filter are returned.
   * The supported format is `routineType:{RoutineType}`, where `{RoutineType}`
   * is a RoutineType enum. For example: `routineType:SCALAR_FUNCTION`.
   *
   * @generated from field: string filter = 6;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.ListRoutinesRequest.
 * Use `create(ListRoutinesRequestSchema)` to create a new message.
 */
export const ListRoutinesRequestSchema: GenMessage<ListRoutinesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 7);

/**
 * Describes the format of a single result page when listing routines.
 *
 * @generated from message google.cloud.bigquery.v2.ListRoutinesResponse
 */
export type ListRoutinesResponse = Message<"google.cloud.bigquery.v2.ListRoutinesResponse"> & {
  /**
   * Routines in the requested dataset. Unless read_mask is set in the request,
   * only the following fields are populated:
   * etag, project_id, dataset_id, routine_id, routine_type, creation_time,
   * last_modified_time, language, and remote_function_options.
   *
   * @generated from field: repeated google.cloud.bigquery.v2.Routine routines = 1;
   */
  routines: Routine[];

  /**
   * A token to request the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.v2.ListRoutinesResponse.
 * Use `create(ListRoutinesResponseSchema)` to create a new message.
 */
export const ListRoutinesResponseSchema: GenMessage<ListRoutinesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_v2_routine, 8);

/**
 * This is an experimental RPC service definition for the BigQuery
 * Routine Service.
 *
 * It should not be relied on for production use cases at this time.
 *
 * @generated from service google.cloud.bigquery.v2.RoutineService
 */
export const RoutineService: GenService<{
  /**
   * Gets the specified routine resource by routine ID.
   *
   * @generated from rpc google.cloud.bigquery.v2.RoutineService.GetRoutine
   */
  getRoutine: {
    methodKind: "unary";
    input: typeof GetRoutineRequestSchema;
    output: typeof RoutineSchema;
  },
  /**
   * Creates a new routine in the dataset.
   *
   * @generated from rpc google.cloud.bigquery.v2.RoutineService.InsertRoutine
   */
  insertRoutine: {
    methodKind: "unary";
    input: typeof InsertRoutineRequestSchema;
    output: typeof RoutineSchema;
  },
  /**
   * Updates information in an existing routine. The update method replaces the
   * entire Routine resource.
   *
   * @generated from rpc google.cloud.bigquery.v2.RoutineService.UpdateRoutine
   */
  updateRoutine: {
    methodKind: "unary";
    input: typeof UpdateRoutineRequestSchema;
    output: typeof RoutineSchema;
  },
  /**
   * Patches information in an existing routine. The patch method does a partial
   * update to an existing Routine resource.
   *
   * @generated from rpc google.cloud.bigquery.v2.RoutineService.PatchRoutine
   */
  patchRoutine: {
    methodKind: "unary";
    input: typeof PatchRoutineRequestSchema;
    output: typeof RoutineSchema;
  },
  /**
   * Deletes the routine specified by routineId from the dataset.
   *
   * @generated from rpc google.cloud.bigquery.v2.RoutineService.DeleteRoutine
   */
  deleteRoutine: {
    methodKind: "unary";
    input: typeof DeleteRoutineRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists all routines in the specified dataset. Requires the READER dataset
   * role.
   *
   * @generated from rpc google.cloud.bigquery.v2.RoutineService.ListRoutines
   */
  listRoutines: {
    methodKind: "unary";
    input: typeof ListRoutinesRequestSchema;
    output: typeof ListRoutinesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_bigquery_v2_routine, 0);

