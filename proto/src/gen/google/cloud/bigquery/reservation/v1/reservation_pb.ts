// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/bigquery/reservation/v1/reservation.proto (package google.cloud.bigquery.reservation.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/bigquery/reservation/v1/reservation.proto.
 */
export const file_google_cloud_bigquery_reservation_v1_reservation: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * A reservation is a mechanism used to guarantee slots to users.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.Reservation
 */
export type Reservation = Message<"google.cloud.bigquery.reservation.v1.Reservation"> & {
  /**
   * The resource name of the reservation, e.g.,
   * `projects/*\/locations/*\/reservations/team1-prod`.
   * The reservation_id must only contain lower case alphanumeric characters or
   * dashes. It must start with a letter and must not end with a dash. Its
   * maximum length is 64 characters.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Minimum slots available to this reservation. A slot is a unit of
   * computational power in BigQuery, and serves as the unit of parallelism.
   *
   * Queries using this reservation might use more slots during runtime if
   * ignore_idle_slots is set to false.
   *
   * If total slot_capacity of the reservation and its siblings
   * exceeds the total slot_count of all capacity commitments, the request will
   * fail with `google.rpc.Code.RESOURCE_EXHAUSTED`.
   *
   *
   * NOTE: for reservations in US or EU multi-regions, slot capacity constraints
   * are checked separately for default and auxiliary regions. See
   * multi_region_auxiliary flag for more details.
   *
   * @generated from field: int64 slot_capacity = 2;
   */
  slotCapacity: bigint;

  /**
   * If false, any query or pipeline job using this reservation will use idle
   * slots from other reservations within the same admin project. If true, a
   * query or pipeline job using this reservation will execute with the slot
   * capacity specified in the slot_capacity field at most.
   *
   * @generated from field: bool ignore_idle_slots = 4;
   */
  ignoreIdleSlots: boolean;

  /**
   * The configuration parameters for the auto scaling feature. Note this is an
   * alpha feature.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.Reservation.Autoscale autoscale = 7;
   */
  autoscale?: Reservation_Autoscale;

  /**
   * Job concurrency target which sets a soft upper bound on the number of jobs
   * that can run concurrently in this reservation. This is a soft target due to
   * asynchronous nature of the system and various optimizations for small
   * queries.
   * Default value is 0 which means that concurrency target will be
   * automatically computed by the system.
   * NOTE: this field is exposed as `target_job_concurrency` in the Information
   * Schema, DDL and BQ CLI.
   *
   * @generated from field: int64 concurrency = 16;
   */
  concurrency: bigint;

  /**
   * Output only. Creation time of the reservation.
   *
   * @generated from field: google.protobuf.Timestamp creation_time = 8;
   */
  creationTime?: Timestamp;

  /**
   * Output only. Last update time of the reservation.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 9;
   */
  updateTime?: Timestamp;

  /**
   * Applicable only for reservations located within one of the BigQuery
   * multi-regions (US or EU).
   *
   * If set to true, this reservation is placed in the organization's
   * secondary region which is designated for disaster recovery purposes.
   * If false, this reservation is placed in the organization's default region.
   *
   * NOTE: this is a preview feature. Project must be allow-listed in order to
   * set this field.
   *
   * @generated from field: bool multi_region_auxiliary = 14;
   */
  multiRegionAuxiliary: boolean;

  /**
   * Edition of the reservation.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.Edition edition = 17;
   */
  edition: Edition;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.Reservation.
 * Use `create(ReservationSchema)` to create a new message.
 */
export const ReservationSchema: GenMessage<Reservation> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 0);

/**
 * Auto scaling settings.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.Reservation.Autoscale
 */
export type Reservation_Autoscale = Message<"google.cloud.bigquery.reservation.v1.Reservation.Autoscale"> & {
  /**
   * Output only. The slot capacity added to this reservation when autoscale
   * happens. Will be between [0, max_slots].
   *
   * @generated from field: int64 current_slots = 1;
   */
  currentSlots: bigint;

  /**
   * Number of slots to be scaled when needed.
   *
   * @generated from field: int64 max_slots = 2;
   */
  maxSlots: bigint;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.Reservation.Autoscale.
 * Use `create(Reservation_AutoscaleSchema)` to create a new message.
 */
export const Reservation_AutoscaleSchema: GenMessage<Reservation_Autoscale> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 0, 0);

/**
 * Capacity commitment is a way to purchase compute capacity for BigQuery jobs
 * (in the form of slots) with some committed period of usage. Annual
 * commitments renew by default. Commitments can be removed after their
 * commitment end time passes.
 *
 * In order to remove annual commitment, its plan needs to be changed
 * to monthly or flex first.
 *
 * A capacity commitment resource exists as a child resource of the admin
 * project.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.CapacityCommitment
 */
export type CapacityCommitment = Message<"google.cloud.bigquery.reservation.v1.CapacityCommitment"> & {
  /**
   * Output only. The resource name of the capacity commitment, e.g.,
   * `projects/myproject/locations/US/capacityCommitments/123`
   * The commitment_id must only contain lower case alphanumeric characters or
   * dashes. It must start with a letter and must not end
   * with a dash. Its maximum length is 64 characters.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Number of slots in this commitment.
   *
   * @generated from field: int64 slot_count = 2;
   */
  slotCount: bigint;

  /**
   * Capacity commitment commitment plan.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.CapacityCommitment.CommitmentPlan plan = 3;
   */
  plan: CapacityCommitment_CommitmentPlan;

  /**
   * Output only. State of the commitment.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.CapacityCommitment.State state = 4;
   */
  state: CapacityCommitment_State;

  /**
   * Output only. The start of the current commitment period. It is applicable
   * only for ACTIVE capacity commitments.
   *
   * @generated from field: google.protobuf.Timestamp commitment_start_time = 9;
   */
  commitmentStartTime?: Timestamp;

  /**
   * Output only. The end of the current commitment period. It is applicable
   * only for ACTIVE capacity commitments.
   *
   * @generated from field: google.protobuf.Timestamp commitment_end_time = 5;
   */
  commitmentEndTime?: Timestamp;

  /**
   * Output only. For FAILED commitment plan, provides the reason of failure.
   *
   * @generated from field: google.rpc.Status failure_status = 7;
   */
  failureStatus?: Status;

  /**
   * The plan this capacity commitment is converted to after commitment_end_time
   * passes. Once the plan is changed, committed period is extended according to
   * commitment plan. Only applicable for ANNUAL and TRIAL commitments.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.CapacityCommitment.CommitmentPlan renewal_plan = 8;
   */
  renewalPlan: CapacityCommitment_CommitmentPlan;

  /**
   * Applicable only for commitments located within one of the BigQuery
   * multi-regions (US or EU).
   *
   * If set to true, this commitment is placed in the organization's
   * secondary region which is designated for disaster recovery purposes.
   * If false, this commitment is placed in the organization's default region.
   *
   * NOTE: this is a preview feature. Project must be allow-listed in order to
   * set this field.
   *
   * @generated from field: bool multi_region_auxiliary = 10;
   */
  multiRegionAuxiliary: boolean;

  /**
   * Edition of the capacity commitment.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.Edition edition = 12;
   */
  edition: Edition;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.CapacityCommitment.
 * Use `create(CapacityCommitmentSchema)` to create a new message.
 */
export const CapacityCommitmentSchema: GenMessage<CapacityCommitment> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 1);

/**
 * Commitment plan defines the current committed period. Capacity commitment
 * cannot be deleted during it's committed period.
 *
 * @generated from enum google.cloud.bigquery.reservation.v1.CapacityCommitment.CommitmentPlan
 */
export enum CapacityCommitment_CommitmentPlan {
  /**
   * Invalid plan value. Requests with this value will be rejected with
   * error code `google.rpc.Code.INVALID_ARGUMENT`.
   *
   * @generated from enum value: COMMITMENT_PLAN_UNSPECIFIED = 0;
   */
  COMMITMENT_PLAN_UNSPECIFIED = 0,

  /**
   * Flex commitments have committed period of 1 minute after becoming ACTIVE.
   * After that, they are not in a committed period anymore and can be removed
   * any time.
   *
   * @generated from enum value: FLEX = 3;
   */
  FLEX = 3,

  /**
   * Same as FLEX, should only be used if flat-rate commitments are still
   * available.
   *
   * @generated from enum value: FLEX_FLAT_RATE = 7 [deprecated = true];
   * @deprecated
   */
  FLEX_FLAT_RATE = 7,

  /**
   * Trial commitments have a committed period of 182 days after becoming
   * ACTIVE. After that, they are converted to a new commitment based on the
   * `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so
   * that it can be deleted right after committed period ends.
   *
   * @generated from enum value: TRIAL = 5;
   */
  TRIAL = 5,

  /**
   * Monthly commitments have a committed period of 30 days after becoming
   * ACTIVE. After that, they are not in a committed period anymore and can be
   * removed any time.
   *
   * @generated from enum value: MONTHLY = 2;
   */
  MONTHLY = 2,

  /**
   * Same as MONTHLY, should only be used if flat-rate commitments are still
   * available.
   *
   * @generated from enum value: MONTHLY_FLAT_RATE = 8 [deprecated = true];
   * @deprecated
   */
  MONTHLY_FLAT_RATE = 8,

  /**
   * Annual commitments have a committed period of 365 days after becoming
   * ACTIVE. After that they are converted to a new commitment based on the
   * renewal_plan.
   *
   * @generated from enum value: ANNUAL = 4;
   */
  ANNUAL = 4,

  /**
   * Same as ANNUAL, should only be used if flat-rate commitments are still
   * available.
   *
   * @generated from enum value: ANNUAL_FLAT_RATE = 9 [deprecated = true];
   * @deprecated
   */
  ANNUAL_FLAT_RATE = 9,

  /**
   * 3-year commitments have a committed period of 1095(3 * 365) days after
   * becoming ACTIVE. After that they are converted to a new commitment based
   * on the renewal_plan.
   *
   * @generated from enum value: THREE_YEAR = 10;
   */
  THREE_YEAR = 10,

  /**
   * Should only be used for `renewal_plan` and is only meaningful if
   * edition is specified to values other than EDITION_UNSPECIFIED. Otherwise
   * CreateCapacityCommitmentRequest or UpdateCapacityCommitmentRequest will
   * be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`. If the
   * renewal_plan is NONE, capacity commitment will be removed at the end of
   * its commitment period.
   *
   * @generated from enum value: NONE = 6;
   */
  NONE = 6,
}

/**
 * Describes the enum google.cloud.bigquery.reservation.v1.CapacityCommitment.CommitmentPlan.
 */
export const CapacityCommitment_CommitmentPlanSchema: GenEnum<CapacityCommitment_CommitmentPlan> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_reservation_v1_reservation, 1, 0);

/**
 * Capacity commitment can either become ACTIVE right away or transition
 * from PENDING to ACTIVE or FAILED.
 *
 * @generated from enum google.cloud.bigquery.reservation.v1.CapacityCommitment.State
 */
export enum CapacityCommitment_State {
  /**
   * Invalid state value.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Capacity commitment is pending provisioning. Pending capacity commitment
   * does not contribute to the project's slot_capacity.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * Once slots are provisioned, capacity commitment becomes active.
   * slot_count is added to the project's slot_capacity.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * Capacity commitment is failed to be activated by the backend.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}

/**
 * Describes the enum google.cloud.bigquery.reservation.v1.CapacityCommitment.State.
 */
export const CapacityCommitment_StateSchema: GenEnum<CapacityCommitment_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_reservation_v1_reservation, 1, 1);

/**
 * The request for
 * [ReservationService.CreateReservation][google.cloud.bigquery.reservation.v1.ReservationService.CreateReservation].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.CreateReservationRequest
 */
export type CreateReservationRequest = Message<"google.cloud.bigquery.reservation.v1.CreateReservationRequest"> & {
  /**
   * Required. Project, location. E.g.,
   * `projects/myproject/locations/US`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The reservation ID. It must only contain lower case alphanumeric
   * characters or dashes. It must start with a letter and must not end
   * with a dash. Its maximum length is 64 characters.
   *
   * @generated from field: string reservation_id = 2;
   */
  reservationId: string;

  /**
   * Definition of the new reservation to create.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.Reservation reservation = 3;
   */
  reservation?: Reservation;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.CreateReservationRequest.
 * Use `create(CreateReservationRequestSchema)` to create a new message.
 */
export const CreateReservationRequestSchema: GenMessage<CreateReservationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 2);

/**
 * The request for
 * [ReservationService.ListReservations][google.cloud.bigquery.reservation.v1.ReservationService.ListReservations].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.ListReservationsRequest
 */
export type ListReservationsRequest = Message<"google.cloud.bigquery.reservation.v1.ListReservationsRequest"> & {
  /**
   * Required. The parent resource name containing project and location, e.g.:
   *   `projects/myproject/locations/US`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return per page.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.ListReservationsRequest.
 * Use `create(ListReservationsRequestSchema)` to create a new message.
 */
export const ListReservationsRequestSchema: GenMessage<ListReservationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 3);

/**
 * The response for
 * [ReservationService.ListReservations][google.cloud.bigquery.reservation.v1.ReservationService.ListReservations].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.ListReservationsResponse
 */
export type ListReservationsResponse = Message<"google.cloud.bigquery.reservation.v1.ListReservationsResponse"> & {
  /**
   * List of reservations visible to the user.
   *
   * @generated from field: repeated google.cloud.bigquery.reservation.v1.Reservation reservations = 1;
   */
  reservations: Reservation[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.ListReservationsResponse.
 * Use `create(ListReservationsResponseSchema)` to create a new message.
 */
export const ListReservationsResponseSchema: GenMessage<ListReservationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 4);

/**
 * The request for
 * [ReservationService.GetReservation][google.cloud.bigquery.reservation.v1.ReservationService.GetReservation].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.GetReservationRequest
 */
export type GetReservationRequest = Message<"google.cloud.bigquery.reservation.v1.GetReservationRequest"> & {
  /**
   * Required. Resource name of the reservation to retrieve. E.g.,
   *    `projects/myproject/locations/US/reservations/team1-prod`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.GetReservationRequest.
 * Use `create(GetReservationRequestSchema)` to create a new message.
 */
export const GetReservationRequestSchema: GenMessage<GetReservationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 5);

/**
 * The request for
 * [ReservationService.DeleteReservation][google.cloud.bigquery.reservation.v1.ReservationService.DeleteReservation].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.DeleteReservationRequest
 */
export type DeleteReservationRequest = Message<"google.cloud.bigquery.reservation.v1.DeleteReservationRequest"> & {
  /**
   * Required. Resource name of the reservation to retrieve. E.g.,
   *    `projects/myproject/locations/US/reservations/team1-prod`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.DeleteReservationRequest.
 * Use `create(DeleteReservationRequestSchema)` to create a new message.
 */
export const DeleteReservationRequestSchema: GenMessage<DeleteReservationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 6);

/**
 * The request for
 * [ReservationService.UpdateReservation][google.cloud.bigquery.reservation.v1.ReservationService.UpdateReservation].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.UpdateReservationRequest
 */
export type UpdateReservationRequest = Message<"google.cloud.bigquery.reservation.v1.UpdateReservationRequest"> & {
  /**
   * Content of the reservation to update.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.Reservation reservation = 1;
   */
  reservation?: Reservation;

  /**
   * Standard field mask for the set of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.UpdateReservationRequest.
 * Use `create(UpdateReservationRequestSchema)` to create a new message.
 */
export const UpdateReservationRequestSchema: GenMessage<UpdateReservationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 7);

/**
 * The request for
 * [ReservationService.CreateCapacityCommitment][google.cloud.bigquery.reservation.v1.ReservationService.CreateCapacityCommitment].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.CreateCapacityCommitmentRequest
 */
export type CreateCapacityCommitmentRequest = Message<"google.cloud.bigquery.reservation.v1.CreateCapacityCommitmentRequest"> & {
  /**
   * Required. Resource name of the parent reservation. E.g.,
   *    `projects/myproject/locations/US`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Content of the capacity commitment to create.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.CapacityCommitment capacity_commitment = 2;
   */
  capacityCommitment?: CapacityCommitment;

  /**
   * If true, fail the request if another project in the organization has a
   * capacity commitment.
   *
   * @generated from field: bool enforce_single_admin_project_per_org = 4;
   */
  enforceSingleAdminProjectPerOrg: boolean;

  /**
   * The optional capacity commitment ID. Capacity commitment name will be
   * generated automatically if this field is empty.
   * This field must only contain lower case alphanumeric characters or dashes.
   * The first and last character cannot be a dash. Max length is 64 characters.
   * NOTE: this ID won't be kept if the capacity commitment is split or merged.
   *
   * @generated from field: string capacity_commitment_id = 5;
   */
  capacityCommitmentId: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.CreateCapacityCommitmentRequest.
 * Use `create(CreateCapacityCommitmentRequestSchema)` to create a new message.
 */
export const CreateCapacityCommitmentRequestSchema: GenMessage<CreateCapacityCommitmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 8);

/**
 * The request for
 * [ReservationService.ListCapacityCommitments][google.cloud.bigquery.reservation.v1.ReservationService.ListCapacityCommitments].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.ListCapacityCommitmentsRequest
 */
export type ListCapacityCommitmentsRequest = Message<"google.cloud.bigquery.reservation.v1.ListCapacityCommitmentsRequest"> & {
  /**
   * Required. Resource name of the parent reservation. E.g.,
   *    `projects/myproject/locations/US`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.ListCapacityCommitmentsRequest.
 * Use `create(ListCapacityCommitmentsRequestSchema)` to create a new message.
 */
export const ListCapacityCommitmentsRequestSchema: GenMessage<ListCapacityCommitmentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 9);

/**
 * The response for
 * [ReservationService.ListCapacityCommitments][google.cloud.bigquery.reservation.v1.ReservationService.ListCapacityCommitments].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.ListCapacityCommitmentsResponse
 */
export type ListCapacityCommitmentsResponse = Message<"google.cloud.bigquery.reservation.v1.ListCapacityCommitmentsResponse"> & {
  /**
   * List of capacity commitments visible to the user.
   *
   * @generated from field: repeated google.cloud.bigquery.reservation.v1.CapacityCommitment capacity_commitments = 1;
   */
  capacityCommitments: CapacityCommitment[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.ListCapacityCommitmentsResponse.
 * Use `create(ListCapacityCommitmentsResponseSchema)` to create a new message.
 */
export const ListCapacityCommitmentsResponseSchema: GenMessage<ListCapacityCommitmentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 10);

/**
 * The request for
 * [ReservationService.GetCapacityCommitment][google.cloud.bigquery.reservation.v1.ReservationService.GetCapacityCommitment].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.GetCapacityCommitmentRequest
 */
export type GetCapacityCommitmentRequest = Message<"google.cloud.bigquery.reservation.v1.GetCapacityCommitmentRequest"> & {
  /**
   * Required. Resource name of the capacity commitment to retrieve. E.g.,
   *    `projects/myproject/locations/US/capacityCommitments/123`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.GetCapacityCommitmentRequest.
 * Use `create(GetCapacityCommitmentRequestSchema)` to create a new message.
 */
export const GetCapacityCommitmentRequestSchema: GenMessage<GetCapacityCommitmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 11);

/**
 * The request for
 * [ReservationService.DeleteCapacityCommitment][google.cloud.bigquery.reservation.v1.ReservationService.DeleteCapacityCommitment].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.DeleteCapacityCommitmentRequest
 */
export type DeleteCapacityCommitmentRequest = Message<"google.cloud.bigquery.reservation.v1.DeleteCapacityCommitmentRequest"> & {
  /**
   * Required. Resource name of the capacity commitment to delete. E.g.,
   *    `projects/myproject/locations/US/capacityCommitments/123`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Can be used to force delete commitments even if assignments exist. Deleting
   * commitments with assignments may cause queries to fail if they no longer
   * have access to slots.
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.DeleteCapacityCommitmentRequest.
 * Use `create(DeleteCapacityCommitmentRequestSchema)` to create a new message.
 */
export const DeleteCapacityCommitmentRequestSchema: GenMessage<DeleteCapacityCommitmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 12);

/**
 * The request for
 * [ReservationService.UpdateCapacityCommitment][google.cloud.bigquery.reservation.v1.ReservationService.UpdateCapacityCommitment].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.UpdateCapacityCommitmentRequest
 */
export type UpdateCapacityCommitmentRequest = Message<"google.cloud.bigquery.reservation.v1.UpdateCapacityCommitmentRequest"> & {
  /**
   * Content of the capacity commitment to update.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.CapacityCommitment capacity_commitment = 1;
   */
  capacityCommitment?: CapacityCommitment;

  /**
   * Standard field mask for the set of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.UpdateCapacityCommitmentRequest.
 * Use `create(UpdateCapacityCommitmentRequestSchema)` to create a new message.
 */
export const UpdateCapacityCommitmentRequestSchema: GenMessage<UpdateCapacityCommitmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 13);

/**
 * The request for
 * [ReservationService.SplitCapacityCommitment][google.cloud.bigquery.reservation.v1.ReservationService.SplitCapacityCommitment].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.SplitCapacityCommitmentRequest
 */
export type SplitCapacityCommitmentRequest = Message<"google.cloud.bigquery.reservation.v1.SplitCapacityCommitmentRequest"> & {
  /**
   * Required. The resource name e.g.,:
   *  `projects/myproject/locations/US/capacityCommitments/123`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Number of slots in the capacity commitment after the split.
   *
   * @generated from field: int64 slot_count = 2;
   */
  slotCount: bigint;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.SplitCapacityCommitmentRequest.
 * Use `create(SplitCapacityCommitmentRequestSchema)` to create a new message.
 */
export const SplitCapacityCommitmentRequestSchema: GenMessage<SplitCapacityCommitmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 14);

/**
 * The response for
 * [ReservationService.SplitCapacityCommitment][google.cloud.bigquery.reservation.v1.ReservationService.SplitCapacityCommitment].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.SplitCapacityCommitmentResponse
 */
export type SplitCapacityCommitmentResponse = Message<"google.cloud.bigquery.reservation.v1.SplitCapacityCommitmentResponse"> & {
  /**
   * First capacity commitment, result of a split.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.CapacityCommitment first = 1;
   */
  first?: CapacityCommitment;

  /**
   * Second capacity commitment, result of a split.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.CapacityCommitment second = 2;
   */
  second?: CapacityCommitment;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.SplitCapacityCommitmentResponse.
 * Use `create(SplitCapacityCommitmentResponseSchema)` to create a new message.
 */
export const SplitCapacityCommitmentResponseSchema: GenMessage<SplitCapacityCommitmentResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 15);

/**
 * The request for
 * [ReservationService.MergeCapacityCommitments][google.cloud.bigquery.reservation.v1.ReservationService.MergeCapacityCommitments].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.MergeCapacityCommitmentsRequest
 */
export type MergeCapacityCommitmentsRequest = Message<"google.cloud.bigquery.reservation.v1.MergeCapacityCommitmentsRequest"> & {
  /**
   * Parent resource that identifies admin project and location e.g.,
   *  `projects/myproject/locations/us`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Ids of capacity commitments to merge.
   * These capacity commitments must exist under admin project and location
   * specified in the parent.
   * ID is the last portion of capacity commitment name e.g., 'abc' for
   * projects/myproject/locations/US/capacityCommitments/abc
   *
   * @generated from field: repeated string capacity_commitment_ids = 2;
   */
  capacityCommitmentIds: string[];
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.MergeCapacityCommitmentsRequest.
 * Use `create(MergeCapacityCommitmentsRequestSchema)` to create a new message.
 */
export const MergeCapacityCommitmentsRequestSchema: GenMessage<MergeCapacityCommitmentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 16);

/**
 * An assignment allows a project to submit jobs
 * of a certain type using slots from the specified reservation.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.Assignment
 */
export type Assignment = Message<"google.cloud.bigquery.reservation.v1.Assignment"> & {
  /**
   * Output only. Name of the resource. E.g.:
   * `projects/myproject/locations/US/reservations/team1-prod/assignments/123`.
   * The assignment_id must only contain lower case alphanumeric characters or
   * dashes and the max length is 64 characters.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The resource which will use the reservation. E.g.
   * `projects/myproject`, `folders/123`, or `organizations/456`.
   *
   * @generated from field: string assignee = 4;
   */
  assignee: string;

  /**
   * Which type of jobs will use the reservation.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.Assignment.JobType job_type = 3;
   */
  jobType: Assignment_JobType;

  /**
   * Output only. State of the assignment.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.Assignment.State state = 6;
   */
  state: Assignment_State;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.Assignment.
 * Use `create(AssignmentSchema)` to create a new message.
 */
export const AssignmentSchema: GenMessage<Assignment> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 17);

/**
 * Types of job, which could be specified when using the reservation.
 *
 * @generated from enum google.cloud.bigquery.reservation.v1.Assignment.JobType
 */
export enum Assignment_JobType {
  /**
   * Invalid type. Requests with this value will be rejected with
   * error code `google.rpc.Code.INVALID_ARGUMENT`.
   *
   * @generated from enum value: JOB_TYPE_UNSPECIFIED = 0;
   */
  JOB_TYPE_UNSPECIFIED = 0,

  /**
   * Pipeline (load/export) jobs from the project will use the reservation.
   *
   * @generated from enum value: PIPELINE = 1;
   */
  PIPELINE = 1,

  /**
   * Query jobs from the project will use the reservation.
   *
   * @generated from enum value: QUERY = 2;
   */
  QUERY = 2,

  /**
   * BigQuery ML jobs that use services external to BigQuery for model
   * training. These jobs will not utilize idle slots from other reservations.
   *
   * @generated from enum value: ML_EXTERNAL = 3;
   */
  ML_EXTERNAL = 3,

  /**
   * Background jobs that BigQuery runs for the customers in the background.
   *
   * @generated from enum value: BACKGROUND = 4;
   */
  BACKGROUND = 4,
}

/**
 * Describes the enum google.cloud.bigquery.reservation.v1.Assignment.JobType.
 */
export const Assignment_JobTypeSchema: GenEnum<Assignment_JobType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_reservation_v1_reservation, 17, 0);

/**
 * Assignment will remain in PENDING state if no active capacity commitment is
 * present. It will become ACTIVE when some capacity commitment becomes
 * active.
 *
 * @generated from enum google.cloud.bigquery.reservation.v1.Assignment.State
 */
export enum Assignment_State {
  /**
   * Invalid state value.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Queries from assignee will be executed as on-demand, if related
   * assignment is pending.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * Assignment is ready.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,
}

/**
 * Describes the enum google.cloud.bigquery.reservation.v1.Assignment.State.
 */
export const Assignment_StateSchema: GenEnum<Assignment_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_reservation_v1_reservation, 17, 1);

/**
 * The request for
 * [ReservationService.CreateAssignment][google.cloud.bigquery.reservation.v1.ReservationService.CreateAssignment].
 * Note: "bigquery.reservationAssignments.create" permission is required on the
 * related assignee.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.CreateAssignmentRequest
 */
export type CreateAssignmentRequest = Message<"google.cloud.bigquery.reservation.v1.CreateAssignmentRequest"> & {
  /**
   * Required. The parent resource name of the assignment
   * E.g. `projects/myproject/locations/US/reservations/team1-prod`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Assignment resource to create.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.Assignment assignment = 2;
   */
  assignment?: Assignment;

  /**
   * The optional assignment ID. Assignment name will be generated automatically
   * if this field is empty.
   * This field must only contain lower case alphanumeric characters or dashes.
   * Max length is 64 characters.
   *
   * @generated from field: string assignment_id = 4;
   */
  assignmentId: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.CreateAssignmentRequest.
 * Use `create(CreateAssignmentRequestSchema)` to create a new message.
 */
export const CreateAssignmentRequestSchema: GenMessage<CreateAssignmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 18);

/**
 * The request for
 * [ReservationService.ListAssignments][google.cloud.bigquery.reservation.v1.ReservationService.ListAssignments].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.ListAssignmentsRequest
 */
export type ListAssignmentsRequest = Message<"google.cloud.bigquery.reservation.v1.ListAssignmentsRequest"> & {
  /**
   * Required. The parent resource name e.g.:
   *
   * `projects/myproject/locations/US/reservations/team1-prod`
   *
   * Or:
   *
   * `projects/myproject/locations/US/reservations/-`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return per page.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.ListAssignmentsRequest.
 * Use `create(ListAssignmentsRequestSchema)` to create a new message.
 */
export const ListAssignmentsRequestSchema: GenMessage<ListAssignmentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 19);

/**
 * The response for
 * [ReservationService.ListAssignments][google.cloud.bigquery.reservation.v1.ReservationService.ListAssignments].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.ListAssignmentsResponse
 */
export type ListAssignmentsResponse = Message<"google.cloud.bigquery.reservation.v1.ListAssignmentsResponse"> & {
  /**
   * List of assignments visible to the user.
   *
   * @generated from field: repeated google.cloud.bigquery.reservation.v1.Assignment assignments = 1;
   */
  assignments: Assignment[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.ListAssignmentsResponse.
 * Use `create(ListAssignmentsResponseSchema)` to create a new message.
 */
export const ListAssignmentsResponseSchema: GenMessage<ListAssignmentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 20);

/**
 * The request for
 * [ReservationService.DeleteAssignment][google.cloud.bigquery.reservation.v1.ReservationService.DeleteAssignment].
 * Note: "bigquery.reservationAssignments.delete" permission is required on the
 * related assignee.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.DeleteAssignmentRequest
 */
export type DeleteAssignmentRequest = Message<"google.cloud.bigquery.reservation.v1.DeleteAssignmentRequest"> & {
  /**
   * Required. Name of the resource, e.g.
   *   `projects/myproject/locations/US/reservations/team1-prod/assignments/123`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.DeleteAssignmentRequest.
 * Use `create(DeleteAssignmentRequestSchema)` to create a new message.
 */
export const DeleteAssignmentRequestSchema: GenMessage<DeleteAssignmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 21);

/**
 * The request for
 * [ReservationService.SearchAssignments][google.cloud.bigquery.reservation.v1.ReservationService.SearchAssignments].
 * Note: "bigquery.reservationAssignments.search" permission is required on the
 * related assignee.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.SearchAssignmentsRequest
 */
export type SearchAssignmentsRequest = Message<"google.cloud.bigquery.reservation.v1.SearchAssignmentsRequest"> & {
  /**
   * Required. The resource name of the admin project(containing project and
   * location), e.g.:
   *   `projects/myproject/locations/US`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Please specify resource name as assignee in the query.
   *
   * Examples:
   *
   * * `assignee=projects/myproject`
   * * `assignee=folders/123`
   * * `assignee=organizations/456`
   *
   * @generated from field: string query = 2;
   */
  query: string;

  /**
   * The maximum number of items to return per page.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.SearchAssignmentsRequest.
 * Use `create(SearchAssignmentsRequestSchema)` to create a new message.
 */
export const SearchAssignmentsRequestSchema: GenMessage<SearchAssignmentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 22);

/**
 * The request for
 * [ReservationService.SearchAllAssignments][google.cloud.bigquery.reservation.v1.ReservationService.SearchAllAssignments].
 * Note: "bigquery.reservationAssignments.search" permission is required on the
 * related assignee.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.SearchAllAssignmentsRequest
 */
export type SearchAllAssignmentsRequest = Message<"google.cloud.bigquery.reservation.v1.SearchAllAssignmentsRequest"> & {
  /**
   * Required. The resource name with location (project name could be the
   * wildcard '-'), e.g.:
   *   `projects/-/locations/US`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Please specify resource name as assignee in the query.
   *
   * Examples:
   *
   * * `assignee=projects/myproject`
   * * `assignee=folders/123`
   * * `assignee=organizations/456`
   *
   * @generated from field: string query = 2;
   */
  query: string;

  /**
   * The maximum number of items to return per page.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.SearchAllAssignmentsRequest.
 * Use `create(SearchAllAssignmentsRequestSchema)` to create a new message.
 */
export const SearchAllAssignmentsRequestSchema: GenMessage<SearchAllAssignmentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 23);

/**
 * The response for
 * [ReservationService.SearchAssignments][google.cloud.bigquery.reservation.v1.ReservationService.SearchAssignments].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.SearchAssignmentsResponse
 */
export type SearchAssignmentsResponse = Message<"google.cloud.bigquery.reservation.v1.SearchAssignmentsResponse"> & {
  /**
   * List of assignments visible to the user.
   *
   * @generated from field: repeated google.cloud.bigquery.reservation.v1.Assignment assignments = 1;
   */
  assignments: Assignment[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.SearchAssignmentsResponse.
 * Use `create(SearchAssignmentsResponseSchema)` to create a new message.
 */
export const SearchAssignmentsResponseSchema: GenMessage<SearchAssignmentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 24);

/**
 * The response for
 * [ReservationService.SearchAllAssignments][google.cloud.bigquery.reservation.v1.ReservationService.SearchAllAssignments].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.SearchAllAssignmentsResponse
 */
export type SearchAllAssignmentsResponse = Message<"google.cloud.bigquery.reservation.v1.SearchAllAssignmentsResponse"> & {
  /**
   * List of assignments visible to the user.
   *
   * @generated from field: repeated google.cloud.bigquery.reservation.v1.Assignment assignments = 1;
   */
  assignments: Assignment[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.SearchAllAssignmentsResponse.
 * Use `create(SearchAllAssignmentsResponseSchema)` to create a new message.
 */
export const SearchAllAssignmentsResponseSchema: GenMessage<SearchAllAssignmentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 25);

/**
 * The request for
 * [ReservationService.MoveAssignment][google.cloud.bigquery.reservation.v1.ReservationService.MoveAssignment].
 *
 * **Note**: "bigquery.reservationAssignments.create" permission is required on
 * the destination_id.
 *
 * **Note**: "bigquery.reservationAssignments.create" and
 * "bigquery.reservationAssignments.delete" permission are required on the
 * related assignee.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.MoveAssignmentRequest
 */
export type MoveAssignmentRequest = Message<"google.cloud.bigquery.reservation.v1.MoveAssignmentRequest"> & {
  /**
   * Required. The resource name of the assignment,
   * e.g.
   * `projects/myproject/locations/US/reservations/team1-prod/assignments/123`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The new reservation ID, e.g.:
   *   `projects/myotherproject/locations/US/reservations/team2-prod`
   *
   * @generated from field: string destination_id = 3;
   */
  destinationId: string;

  /**
   * The optional assignment ID. A new assignment name is generated if this
   * field is empty.
   *
   * This field can contain only lowercase alphanumeric characters or dashes.
   * Max length is 64 characters.
   *
   * @generated from field: string assignment_id = 5;
   */
  assignmentId: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.MoveAssignmentRequest.
 * Use `create(MoveAssignmentRequestSchema)` to create a new message.
 */
export const MoveAssignmentRequestSchema: GenMessage<MoveAssignmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 26);

/**
 * The request for
 * [ReservationService.UpdateAssignment][google.cloud.bigquery.reservation.v1.ReservationService.UpdateAssignment].
 *
 * @generated from message google.cloud.bigquery.reservation.v1.UpdateAssignmentRequest
 */
export type UpdateAssignmentRequest = Message<"google.cloud.bigquery.reservation.v1.UpdateAssignmentRequest"> & {
  /**
   * Content of the assignment to update.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.Assignment assignment = 1;
   */
  assignment?: Assignment;

  /**
   * Standard field mask for the set of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.UpdateAssignmentRequest.
 * Use `create(UpdateAssignmentRequestSchema)` to create a new message.
 */
export const UpdateAssignmentRequestSchema: GenMessage<UpdateAssignmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 27);

/**
 * Fully qualified reference to BigQuery table.
 * Internally stored as google.cloud.bi.v1.BqTableReference.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.TableReference
 */
export type TableReference = Message<"google.cloud.bigquery.reservation.v1.TableReference"> & {
  /**
   * The assigned project ID of the project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The ID of the dataset in the above project.
   *
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * The ID of the table in the above dataset.
   *
   * @generated from field: string table_id = 3;
   */
  tableId: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.TableReference.
 * Use `create(TableReferenceSchema)` to create a new message.
 */
export const TableReferenceSchema: GenMessage<TableReference> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 28);

/**
 * Represents a BI Reservation.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.BiReservation
 */
export type BiReservation = Message<"google.cloud.bigquery.reservation.v1.BiReservation"> & {
  /**
   * The resource name of the singleton BI reservation.
   * Reservation names have the form
   * `projects/{project_id}/locations/{location_id}/biReservation`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The last update timestamp of a reservation.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Size of a reservation, in bytes.
   *
   * @generated from field: int64 size = 4;
   */
  size: bigint;

  /**
   * Preferred tables to use BI capacity for.
   *
   * @generated from field: repeated google.cloud.bigquery.reservation.v1.TableReference preferred_tables = 5;
   */
  preferredTables: TableReference[];
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.BiReservation.
 * Use `create(BiReservationSchema)` to create a new message.
 */
export const BiReservationSchema: GenMessage<BiReservation> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 29);

/**
 * A request to get a singleton BI reservation.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.GetBiReservationRequest
 */
export type GetBiReservationRequest = Message<"google.cloud.bigquery.reservation.v1.GetBiReservationRequest"> & {
  /**
   * Required. Name of the requested reservation, for example:
   * `projects/{project_id}/locations/{location_id}/biReservation`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.GetBiReservationRequest.
 * Use `create(GetBiReservationRequestSchema)` to create a new message.
 */
export const GetBiReservationRequestSchema: GenMessage<GetBiReservationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 30);

/**
 * A request to update a BI reservation.
 *
 * @generated from message google.cloud.bigquery.reservation.v1.UpdateBiReservationRequest
 */
export type UpdateBiReservationRequest = Message<"google.cloud.bigquery.reservation.v1.UpdateBiReservationRequest"> & {
  /**
   * A reservation to update.
   *
   * @generated from field: google.cloud.bigquery.reservation.v1.BiReservation bi_reservation = 1;
   */
  biReservation?: BiReservation;

  /**
   * A list of fields to be updated in this request.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.bigquery.reservation.v1.UpdateBiReservationRequest.
 * Use `create(UpdateBiReservationRequestSchema)` to create a new message.
 */
export const UpdateBiReservationRequestSchema: GenMessage<UpdateBiReservationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_reservation_v1_reservation, 31);

/**
 * The type of editions.
 * Different features and behaviors are provided to different editions
 * Capacity commitments and reservations are linked to editions.
 *
 * @generated from enum google.cloud.bigquery.reservation.v1.Edition
 */
export enum Edition {
  /**
   * Default value, which will be treated as ENTERPRISE.
   *
   * @generated from enum value: EDITION_UNSPECIFIED = 0;
   */
  EDITION_UNSPECIFIED = 0,

  /**
   * Standard edition.
   *
   * @generated from enum value: STANDARD = 1;
   */
  STANDARD = 1,

  /**
   * Enterprise edition.
   *
   * @generated from enum value: ENTERPRISE = 2;
   */
  ENTERPRISE = 2,

  /**
   * Enterprise plus edition.
   *
   * @generated from enum value: ENTERPRISE_PLUS = 3;
   */
  ENTERPRISE_PLUS = 3,
}

/**
 * Describes the enum google.cloud.bigquery.reservation.v1.Edition.
 */
export const EditionSchema: GenEnum<Edition> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_reservation_v1_reservation, 0);

/**
 * This API allows users to manage their BigQuery reservations.
 *
 * A reservation provides computational resource guarantees, in the form of
 * [slots](https://cloud.google.com/bigquery/docs/slots), to users. A slot is a
 * unit of computational power in BigQuery, and serves as the basic unit of
 * parallelism. In a scan of a multi-partitioned table, a single slot operates
 * on a single partition of the table. A reservation resource exists as a child
 * resource of the admin project and location, e.g.:
 *   `projects/myproject/locations/US/reservations/reservationName`.
 *
 * A capacity commitment is a way to purchase compute capacity for BigQuery jobs
 * (in the form of slots) with some committed period of usage. A capacity
 * commitment resource exists as a child resource of the admin project and
 * location, e.g.:
 *   `projects/myproject/locations/US/capacityCommitments/id`.
 *
 * @generated from service google.cloud.bigquery.reservation.v1.ReservationService
 */
export const ReservationService: GenService<{
  /**
   * Creates a new reservation resource.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.CreateReservation
   */
  createReservation: {
    methodKind: "unary";
    input: typeof CreateReservationRequestSchema;
    output: typeof ReservationSchema;
  },
  /**
   * Lists all the reservations for the project in the specified location.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.ListReservations
   */
  listReservations: {
    methodKind: "unary";
    input: typeof ListReservationsRequestSchema;
    output: typeof ListReservationsResponseSchema;
  },
  /**
   * Returns information about the reservation.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.GetReservation
   */
  getReservation: {
    methodKind: "unary";
    input: typeof GetReservationRequestSchema;
    output: typeof ReservationSchema;
  },
  /**
   * Deletes a reservation.
   * Returns `google.rpc.Code.FAILED_PRECONDITION` when reservation has
   * assignments.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.DeleteReservation
   */
  deleteReservation: {
    methodKind: "unary";
    input: typeof DeleteReservationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Updates an existing reservation resource.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.UpdateReservation
   */
  updateReservation: {
    methodKind: "unary";
    input: typeof UpdateReservationRequestSchema;
    output: typeof ReservationSchema;
  },
  /**
   * Creates a new capacity commitment resource.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.CreateCapacityCommitment
   */
  createCapacityCommitment: {
    methodKind: "unary";
    input: typeof CreateCapacityCommitmentRequestSchema;
    output: typeof CapacityCommitmentSchema;
  },
  /**
   * Lists all the capacity commitments for the admin project.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.ListCapacityCommitments
   */
  listCapacityCommitments: {
    methodKind: "unary";
    input: typeof ListCapacityCommitmentsRequestSchema;
    output: typeof ListCapacityCommitmentsResponseSchema;
  },
  /**
   * Returns information about the capacity commitment.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.GetCapacityCommitment
   */
  getCapacityCommitment: {
    methodKind: "unary";
    input: typeof GetCapacityCommitmentRequestSchema;
    output: typeof CapacityCommitmentSchema;
  },
  /**
   * Deletes a capacity commitment. Attempting to delete capacity commitment
   * before its commitment_end_time will fail with the error code
   * `google.rpc.Code.FAILED_PRECONDITION`.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.DeleteCapacityCommitment
   */
  deleteCapacityCommitment: {
    methodKind: "unary";
    input: typeof DeleteCapacityCommitmentRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Updates an existing capacity commitment.
   *
   * Only `plan` and `renewal_plan` fields can be updated.
   *
   * Plan can only be changed to a plan of a longer commitment period.
   * Attempting to change to a plan with shorter commitment period will fail
   * with the error code `google.rpc.Code.FAILED_PRECONDITION`.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.UpdateCapacityCommitment
   */
  updateCapacityCommitment: {
    methodKind: "unary";
    input: typeof UpdateCapacityCommitmentRequestSchema;
    output: typeof CapacityCommitmentSchema;
  },
  /**
   * Splits capacity commitment to two commitments of the same plan and
   * `commitment_end_time`.
   *
   * A common use case is to enable downgrading commitments.
   *
   * For example, in order to downgrade from 10000 slots to 8000, you might
   * split a 10000 capacity commitment into commitments of 2000 and 8000. Then,
   * you delete the first one after the commitment end time passes.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.SplitCapacityCommitment
   */
  splitCapacityCommitment: {
    methodKind: "unary";
    input: typeof SplitCapacityCommitmentRequestSchema;
    output: typeof SplitCapacityCommitmentResponseSchema;
  },
  /**
   * Merges capacity commitments of the same plan into a single commitment.
   *
   * The resulting capacity commitment has the greater commitment_end_time
   * out of the to-be-merged capacity commitments.
   *
   * Attempting to merge capacity commitments of different plan will fail
   * with the error code `google.rpc.Code.FAILED_PRECONDITION`.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.MergeCapacityCommitments
   */
  mergeCapacityCommitments: {
    methodKind: "unary";
    input: typeof MergeCapacityCommitmentsRequestSchema;
    output: typeof CapacityCommitmentSchema;
  },
  /**
   * Creates an assignment object which allows the given project to submit jobs
   * of a certain type using slots from the specified reservation.
   *
   * Currently a
   * resource (project, folder, organization) can only have one assignment per
   * each (job_type, location) combination, and that reservation will be used
   * for all jobs of the matching type.
   *
   * Different assignments can be created on different levels of the
   * projects, folders or organization hierarchy.  During query execution,
   * the assignment is looked up at the project, folder and organization levels
   * in that order. The first assignment found is applied to the query.
   *
   * When creating assignments, it does not matter if other assignments exist at
   * higher levels.
   *
   * Example:
   *
   * * The organization `organizationA` contains two projects, `project1`
   *   and `project2`.
   * * Assignments for all three entities (`organizationA`, `project1`, and
   *   `project2`) could all be created and mapped to the same or different
   *   reservations.
   *
   * "None" assignments represent an absence of the assignment. Projects
   * assigned to None use on-demand pricing. To create a "None" assignment, use
   * "none" as a reservation_id in the parent. Example parent:
   * `projects/myproject/locations/US/reservations/none`.
   *
   * Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have
   * 'bigquery.admin' permissions on the project using the reservation
   * and the project that owns this reservation.
   *
   * Returns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment
   * does not match location of the reservation.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.CreateAssignment
   */
  createAssignment: {
    methodKind: "unary";
    input: typeof CreateAssignmentRequestSchema;
    output: typeof AssignmentSchema;
  },
  /**
   * Lists assignments.
   *
   * Only explicitly created assignments will be returned.
   *
   * Example:
   *
   * * Organization `organizationA` contains two projects, `project1` and
   *   `project2`.
   * * Reservation `res1` exists and was created previously.
   * * CreateAssignment was used previously to define the following
   *   associations between entities and reservations: `<organizationA, res1>`
   *   and `<project1, res1>`
   *
   * In this example, ListAssignments will just return the above two assignments
   * for reservation `res1`, and no expansion/merge will happen.
   *
   * The wildcard "-" can be used for
   * reservations in the request. In that case all assignments belongs to the
   * specified project and location will be listed.
   *
   * **Note** "-" cannot be used for projects nor locations.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.ListAssignments
   */
  listAssignments: {
    methodKind: "unary";
    input: typeof ListAssignmentsRequestSchema;
    output: typeof ListAssignmentsResponseSchema;
  },
  /**
   * Deletes a assignment. No expansion will happen.
   *
   * Example:
   *
   * * Organization `organizationA` contains two projects, `project1` and
   *   `project2`.
   * * Reservation `res1` exists and was created previously.
   * * CreateAssignment was used previously to define the following
   *   associations between entities and reservations: `<organizationA, res1>`
   *   and `<project1, res1>`
   *
   * In this example, deletion of the `<organizationA, res1>` assignment won't
   * affect the other assignment `<project1, res1>`. After said deletion,
   * queries from `project1` will still use `res1` while queries from
   * `project2` will switch to use on-demand mode.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.DeleteAssignment
   */
  deleteAssignment: {
    methodKind: "unary";
    input: typeof DeleteAssignmentRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Deprecated: Looks up assignments for a specified resource for a particular
   * region. If the request is about a project:
   *
   * 1. Assignments created on the project will be returned if they exist.
   * 2. Otherwise assignments created on the closest ancestor will be
   *    returned.
   * 3. Assignments for different JobTypes will all be returned.
   *
   * The same logic applies if the request is about a folder.
   *
   * If the request is about an organization, then assignments created on the
   * organization will be returned (organization doesn't have ancestors).
   *
   * Comparing to ListAssignments, there are some behavior
   * differences:
   *
   * 1. permission on the assignee will be verified in this API.
   * 2. Hierarchy lookup (project->folder->organization) happens in this API.
   * 3. Parent here is `projects/*\/locations/*`, instead of
   *    `projects/*\/locations/*reservations/*`.
   *
   * **Note** "-" cannot be used for projects
   * nor locations.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.SearchAssignments
   * @deprecated
   */
  searchAssignments: {
    methodKind: "unary";
    input: typeof SearchAssignmentsRequestSchema;
    output: typeof SearchAssignmentsResponseSchema;
  },
  /**
   * Looks up assignments for a specified resource for a particular region.
   * If the request is about a project:
   *
   * 1. Assignments created on the project will be returned if they exist.
   * 2. Otherwise assignments created on the closest ancestor will be
   *    returned.
   * 3. Assignments for different JobTypes will all be returned.
   *
   * The same logic applies if the request is about a folder.
   *
   * If the request is about an organization, then assignments created on the
   * organization will be returned (organization doesn't have ancestors).
   *
   * Comparing to ListAssignments, there are some behavior
   * differences:
   *
   * 1. permission on the assignee will be verified in this API.
   * 2. Hierarchy lookup (project->folder->organization) happens in this API.
   * 3. Parent here is `projects/*\/locations/*`, instead of
   *    `projects/*\/locations/*reservations/*`.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.SearchAllAssignments
   */
  searchAllAssignments: {
    methodKind: "unary";
    input: typeof SearchAllAssignmentsRequestSchema;
    output: typeof SearchAllAssignmentsResponseSchema;
  },
  /**
   * Moves an assignment under a new reservation.
   *
   * This differs from removing an existing assignment and recreating a new one
   * by providing a transactional change that ensures an assignee always has an
   * associated reservation.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.MoveAssignment
   */
  moveAssignment: {
    methodKind: "unary";
    input: typeof MoveAssignmentRequestSchema;
    output: typeof AssignmentSchema;
  },
  /**
   * Updates an existing assignment.
   *
   * Only the `priority` field can be updated.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.UpdateAssignment
   */
  updateAssignment: {
    methodKind: "unary";
    input: typeof UpdateAssignmentRequestSchema;
    output: typeof AssignmentSchema;
  },
  /**
   * Retrieves a BI reservation.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.GetBiReservation
   */
  getBiReservation: {
    methodKind: "unary";
    input: typeof GetBiReservationRequestSchema;
    output: typeof BiReservationSchema;
  },
  /**
   * Updates a BI reservation.
   *
   * Only fields specified in the `field_mask` are updated.
   *
   * A singleton BI reservation always exists with default size 0.
   * In order to reserve BI capacity it needs to be updated to an amount
   * greater than 0. In order to release BI capacity reservation size
   * must be set to 0.
   *
   * @generated from rpc google.cloud.bigquery.reservation.v1.ReservationService.UpdateBiReservation
   */
  updateBiReservation: {
    methodKind: "unary";
    input: typeof UpdateBiReservationRequestSchema;
    output: typeof BiReservationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_bigquery_reservation_v1_reservation, 0);

