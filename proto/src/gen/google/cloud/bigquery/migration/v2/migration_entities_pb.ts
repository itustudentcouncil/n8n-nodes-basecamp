// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/bigquery/migration/v2/migration_entities.proto (package google.cloud.bigquery.migration.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { ResourceErrorDetail } from "./migration_error_details_pb";
import { file_google_cloud_bigquery_migration_v2_migration_error_details } from "./migration_error_details_pb";
import type { TimeSeries } from "./migration_metrics_pb";
import { file_google_cloud_bigquery_migration_v2_migration_metrics } from "./migration_metrics_pb";
import type { TranslationConfigDetails } from "./translation_config_pb";
import { file_google_cloud_bigquery_migration_v2_translation_config } from "./translation_config_pb";
import type { Literal, TranslationDetails } from "./translation_details_pb";
import { file_google_cloud_bigquery_migration_v2_translation_details } from "./translation_details_pb";
import type { GcsReportLogMessage } from "./translation_usability_pb";
import { file_google_cloud_bigquery_migration_v2_translation_usability } from "./translation_usability_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { ErrorInfo } from "../../../../rpc/error_details_pb";
import { file_google_rpc_error_details } from "../../../../rpc/error_details_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/bigquery/migration/v2/migration_entities.proto.
 */
export const file_google_cloud_bigquery_migration_v2_migration_entities: GenFile = /*@__PURE__*/
  fileDesc("Cjtnb29nbGUvY2xvdWQvYmlncXVlcnkvbWlncmF0aW9uL3YyL21pZ3JhdGlvbl9lbnRpdGllcy5wcm90bxIiZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5Lm1pZ3JhdGlvbi52MiL2BAoRTWlncmF0aW9uV29ya2Zsb3cSFwoEbmFtZRgBIAEoCUIJ4EED4EEF4EEIEhQKDGRpc3BsYXlfbmFtZRgGIAEoCRJPCgV0YXNrcxgCIAMoCzJALmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5taWdyYXRpb24udjIuTWlncmF0aW9uV29ya2Zsb3cuVGFza3NFbnRyeRJPCgVzdGF0ZRgDIAEoDjI7Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5taWdyYXRpb24udjIuTWlncmF0aW9uV29ya2Zsb3cuU3RhdGVCA+BBAxIvCgtjcmVhdGVfdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNAoQbGFzdF91cGRhdGVfdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaXwoKVGFza3NFbnRyeRILCgNrZXkYASABKAkSQAoFdmFsdWUYAiABKAsyMS5nb29nbGUuY2xvdWQuYmlncXVlcnkubWlncmF0aW9uLnYyLk1pZ3JhdGlvblRhc2s6AjgBIlEKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASCQoFRFJBRlQQARILCgdSVU5OSU5HEAISCgoGUEFVU0VEEAMSDQoJQ09NUExFVEVEEAQ6depBcgoyYmlncXVlcnltaWdyYXRpb24uZ29vZ2xlYXBpcy5jb20vTWlncmF0aW9uV29ya2Zsb3cSPHByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS93b3JrZmxvd3Mve3dvcmtmbG93fSK0BwoNTWlncmF0aW9uVGFzaxJiChp0cmFuc2xhdGlvbl9jb25maWdfZGV0YWlscxgOIAEoCzI8Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5taWdyYXRpb24udjIuVHJhbnNsYXRpb25Db25maWdEZXRhaWxzSAASVQoTdHJhbnNsYXRpb25fZGV0YWlscxgQIAEoCzI2Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5taWdyYXRpb24udjIuVHJhbnNsYXRpb25EZXRhaWxzSAASEgoCaWQYASABKAlCBuBBA+BBBRIMCgR0eXBlGAIgASgJEksKBXN0YXRlGAQgASgOMjcuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5Lm1pZ3JhdGlvbi52Mi5NaWdyYXRpb25UYXNrLlN0YXRlQgPgQQMSNAoQcHJvY2Vzc2luZ19lcnJvchgFIAEoCzIVLmdvb2dsZS5ycGMuRXJyb3JJbmZvQgPgQQMSLwoLY3JlYXRlX3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQKEGxhc3RfdXBkYXRlX3RpbWUYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wElwKFnJlc291cmNlX2Vycm9yX2RldGFpbHMYESADKAsyNy5nb29nbGUuY2xvdWQuYmlncXVlcnkubWlncmF0aW9uLnYyLlJlc291cmNlRXJyb3JEZXRhaWxCA+BBAxIcChRyZXNvdXJjZV9lcnJvcl9jb3VudBgSIAEoBRI/CgdtZXRyaWNzGBMgAygLMi4uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5Lm1pZ3JhdGlvbi52Mi5UaW1lU2VyaWVzElEKC3Rhc2tfcmVzdWx0GBQgASgLMjcuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5Lm1pZ3JhdGlvbi52Mi5NaWdyYXRpb25UYXNrUmVzdWx0QgPgQQMSJAocdG90YWxfcHJvY2Vzc2luZ19lcnJvcl9jb3VudBgVIAEoBRIiChp0b3RhbF9yZXNvdXJjZV9lcnJvcl9jb3VudBgWIAEoBSJyCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgsKB1BFTkRJTkcQARIRCg1PUkNIRVNUUkFUSU5HEAISCwoHUlVOTklORxADEgoKBlBBVVNFRBAEEg0KCVNVQ0NFRURFRBAFEgoKBkZBSUxFRBAGQg4KDHRhc2tfZGV0YWlscyL0BQoQTWlncmF0aW9uU3VidGFzaxIUCgRuYW1lGAEgASgJQgbgQQPgQQUSDwoHdGFza19pZBgCIAEoCRIMCgR0eXBlGAMgASgJEk4KBXN0YXRlGAUgASgOMjouZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5Lm1pZ3JhdGlvbi52Mi5NaWdyYXRpb25TdWJ0YXNrLlN0YXRlQgPgQQMSNAoQcHJvY2Vzc2luZ19lcnJvchgGIAEoCzIVLmdvb2dsZS5ycGMuRXJyb3JJbmZvQgPgQQMSXAoWcmVzb3VyY2VfZXJyb3JfZGV0YWlscxgMIAMoCzI3Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5taWdyYXRpb24udjIuUmVzb3VyY2VFcnJvckRldGFpbEID4EEDEhwKFHJlc291cmNlX2Vycm9yX2NvdW50GA0gASgFEi8KC2NyZWF0ZV90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI0ChBsYXN0X3VwZGF0ZV90aW1lGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI/CgdtZXRyaWNzGAsgAygLMi4uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5Lm1pZ3JhdGlvbi52Mi5UaW1lU2VyaWVzInYKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASCgoGQUNUSVZFEAESCwoHUlVOTklORxACEg0KCVNVQ0NFRURFRBADEgoKBkZBSUxFRBAEEgoKBlBBVVNFRBAFEhYKElBFTkRJTkdfREVQRU5ERU5DWRAGOogB6kGEAQoxYmlncXVlcnltaWdyYXRpb24uZ29vZ2xlYXBpcy5jb20vTWlncmF0aW9uU3VidGFzaxJPcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3dvcmtmbG93cy97d29ya2Zsb3d9L3N1YnRhc2tzL3tzdWJ0YXNrfSJ+ChNNaWdyYXRpb25UYXNrUmVzdWx0ElwKF3RyYW5zbGF0aW9uX3Rhc2tfcmVzdWx0GAIgASgLMjkuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5Lm1pZ3JhdGlvbi52Mi5UcmFuc2xhdGlvblRhc2tSZXN1bHRIAEIJCgdkZXRhaWxzIrcBChVUcmFuc2xhdGlvblRhc2tSZXN1bHQSSAoTdHJhbnNsYXRlZF9saXRlcmFscxgBIAMoCzIrLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5taWdyYXRpb24udjIuTGl0ZXJhbBJUChNyZXBvcnRfbG9nX21lc3NhZ2VzGAIgAygLMjcuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5Lm1pZ3JhdGlvbi52Mi5HY3NSZXBvcnRMb2dNZXNzYWdlQtIBCiZjb20uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5Lm1pZ3JhdGlvbi52MkIWTWlncmF0aW9uRW50aXRpZXNQcm90b1ABWkRjbG91ZC5nb29nbGUuY29tL2dvL2JpZ3F1ZXJ5L21pZ3JhdGlvbi9hcGl2Mi9taWdyYXRpb25wYjttaWdyYXRpb25wYqoCIkdvb2dsZS5DbG91ZC5CaWdRdWVyeS5NaWdyYXRpb24uVjLKAiJHb29nbGVcQ2xvdWRcQmlnUXVlcnlcTWlncmF0aW9uXFYyYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_bigquery_migration_v2_migration_error_details, file_google_cloud_bigquery_migration_v2_migration_metrics, file_google_cloud_bigquery_migration_v2_translation_config, file_google_cloud_bigquery_migration_v2_translation_details, file_google_cloud_bigquery_migration_v2_translation_usability, file_google_protobuf_timestamp, file_google_rpc_error_details]);

/**
 * A migration workflow which specifies what needs to be done for an EDW
 * migration.
 *
 * @generated from message google.cloud.bigquery.migration.v2.MigrationWorkflow
 */
export type MigrationWorkflow = Message<"google.cloud.bigquery.migration.v2.MigrationWorkflow"> & {
  /**
   * Output only. Immutable. Identifier. The unique identifier for the migration
   * workflow. The ID is server-generated.
   *
   * Example: `projects/123/locations/us/workflows/345`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The display name of the workflow. This can be set to give a workflow
   * a descriptive name. There is no guarantee or enforcement of uniqueness.
   *
   * @generated from field: string display_name = 6;
   */
  displayName: string;

  /**
   * The tasks in a workflow in a named map. The name (i.e. key) has no
   * meaning and is merely a convenient way to address a specific task
   * in a workflow.
   *
   * @generated from field: map<string, google.cloud.bigquery.migration.v2.MigrationTask> tasks = 2;
   */
  tasks: { [key: string]: MigrationTask };

  /**
   * Output only. That status of the workflow.
   *
   * @generated from field: google.cloud.bigquery.migration.v2.MigrationWorkflow.State state = 3;
   */
  state: MigrationWorkflow_State;

  /**
   * Time when the workflow was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Time when the workflow was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_update_time = 5;
   */
  lastUpdateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.bigquery.migration.v2.MigrationWorkflow.
 * Use `create(MigrationWorkflowSchema)` to create a new message.
 */
export const MigrationWorkflowSchema: GenMessage<MigrationWorkflow> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_migration_v2_migration_entities, 0);

/**
 * Possible migration workflow states.
 *
 * @generated from enum google.cloud.bigquery.migration.v2.MigrationWorkflow.State
 */
export enum MigrationWorkflow_State {
  /**
   * Workflow state is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Workflow is in draft status, i.e. tasks are not yet eligible for
   * execution.
   *
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * Workflow is running (i.e. tasks are eligible for execution).
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * Workflow is paused. Tasks currently in progress may continue, but no
   * further tasks will be scheduled.
   *
   * @generated from enum value: PAUSED = 3;
   */
  PAUSED = 3,

  /**
   * Workflow is complete. There should not be any task in a non-terminal
   * state, but if they are (e.g. forced termination), they will not be
   * scheduled.
   *
   * @generated from enum value: COMPLETED = 4;
   */
  COMPLETED = 4,
}

/**
 * Describes the enum google.cloud.bigquery.migration.v2.MigrationWorkflow.State.
 */
export const MigrationWorkflow_StateSchema: GenEnum<MigrationWorkflow_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_migration_v2_migration_entities, 0, 0);

/**
 * A single task for a migration which has details about the configuration of
 * the task.
 *
 * @generated from message google.cloud.bigquery.migration.v2.MigrationTask
 */
export type MigrationTask = Message<"google.cloud.bigquery.migration.v2.MigrationTask"> & {
  /**
   * The details of the task.
   *
   * @generated from oneof google.cloud.bigquery.migration.v2.MigrationTask.task_details
   */
  taskDetails: {
    /**
     * Task configuration for CW Batch/Offline SQL Translation.
     *
     * @generated from field: google.cloud.bigquery.migration.v2.TranslationConfigDetails translation_config_details = 14;
     */
    value: TranslationConfigDetails;
    case: "translationConfigDetails";
  } | {
    /**
     * Task details for unified SQL Translation.
     *
     * @generated from field: google.cloud.bigquery.migration.v2.TranslationDetails translation_details = 16;
     */
    value: TranslationDetails;
    case: "translationDetails";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Immutable. The unique identifier for the migration task. The
   * ID is server-generated.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The type of the task. This must be one of the supported task types:
   * Translation_Teradata2BQ, Translation_Redshift2BQ, Translation_Bteq2BQ,
   * Translation_Oracle2BQ, Translation_HiveQL2BQ, Translation_SparkSQL2BQ,
   * Translation_Snowflake2BQ, Translation_Netezza2BQ,
   * Translation_AzureSynapse2BQ, Translation_Vertica2BQ,
   * Translation_SQLServer2BQ, Translation_Presto2BQ, Translation_MySQL2BQ,
   * Translation_Postgresql2BQ, Translation_SQLite2BQ, Translation_Greenplum2BQ.
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * Output only. The current state of the task.
   *
   * @generated from field: google.cloud.bigquery.migration.v2.MigrationTask.State state = 4;
   */
  state: MigrationTask_State;

  /**
   * Output only. An explanation that may be populated when the task is in
   * FAILED state.
   *
   * @generated from field: google.rpc.ErrorInfo processing_error = 5;
   */
  processingError?: ErrorInfo;

  /**
   * Time when the task was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Time when the task was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_update_time = 7;
   */
  lastUpdateTime?: Timestamp;

  /**
   * Output only. Provides details to errors and issues encountered while
   * processing the task. Presence of error details does not mean that the task
   * failed.
   *
   * @generated from field: repeated google.cloud.bigquery.migration.v2.ResourceErrorDetail resource_error_details = 17;
   */
  resourceErrorDetails: ResourceErrorDetail[];

  /**
   * The number or resources with errors. Note: This is not the total
   * number of errors as each resource can have more than one error.
   * This is used to indicate truncation by having a `resource_error_count`
   * that is higher than the size of `resource_error_details`.
   *
   * @generated from field: int32 resource_error_count = 18;
   */
  resourceErrorCount: number;

  /**
   * The metrics for the task.
   *
   * @generated from field: repeated google.cloud.bigquery.migration.v2.TimeSeries metrics = 19;
   */
  metrics: TimeSeries[];

  /**
   * Output only. The result of the task.
   *
   * @generated from field: google.cloud.bigquery.migration.v2.MigrationTaskResult task_result = 20;
   */
  taskResult?: MigrationTaskResult;

  /**
   * Count of all the processing errors in this task and its subtasks.
   *
   * @generated from field: int32 total_processing_error_count = 21;
   */
  totalProcessingErrorCount: number;

  /**
   * Count of all the resource errors in this task and its subtasks.
   *
   * @generated from field: int32 total_resource_error_count = 22;
   */
  totalResourceErrorCount: number;
};

/**
 * Describes the message google.cloud.bigquery.migration.v2.MigrationTask.
 * Use `create(MigrationTaskSchema)` to create a new message.
 */
export const MigrationTaskSchema: GenMessage<MigrationTask> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_migration_v2_migration_entities, 1);

/**
 * Possible states of a migration task.
 *
 * @generated from enum google.cloud.bigquery.migration.v2.MigrationTask.State
 */
export enum MigrationTask_State {
  /**
   * The state is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The task is waiting for orchestration.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The task is assigned to an orchestrator.
   *
   * @generated from enum value: ORCHESTRATING = 2;
   */
  ORCHESTRATING = 2,

  /**
   * The task is running, i.e. its subtasks are ready for execution.
   *
   * @generated from enum value: RUNNING = 3;
   */
  RUNNING = 3,

  /**
   * Tha task is paused. Assigned subtasks can continue, but no new subtasks
   * will be scheduled.
   *
   * @generated from enum value: PAUSED = 4;
   */
  PAUSED = 4,

  /**
   * The task finished successfully.
   *
   * @generated from enum value: SUCCEEDED = 5;
   */
  SUCCEEDED = 5,

  /**
   * The task finished unsuccessfully.
   *
   * @generated from enum value: FAILED = 6;
   */
  FAILED = 6,
}

/**
 * Describes the enum google.cloud.bigquery.migration.v2.MigrationTask.State.
 */
export const MigrationTask_StateSchema: GenEnum<MigrationTask_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_migration_v2_migration_entities, 1, 0);

/**
 * A subtask for a migration which carries details about the configuration of
 * the subtask. The content of the details should not matter to the end user,
 * but is a contract between the subtask creator and subtask worker.
 *
 * @generated from message google.cloud.bigquery.migration.v2.MigrationSubtask
 */
export type MigrationSubtask = Message<"google.cloud.bigquery.migration.v2.MigrationSubtask"> & {
  /**
   * Output only. Immutable. The resource name for the migration subtask. The ID
   * is server-generated.
   *
   * Example: `projects/123/locations/us/workflows/345/subtasks/678`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The unique ID of the task to which this subtask belongs.
   *
   * @generated from field: string task_id = 2;
   */
  taskId: string;

  /**
   * The type of the Subtask. The migration service does not check whether this
   * is a known type. It is up to the task creator (i.e. orchestrator or worker)
   * to ensure it only creates subtasks for which there are compatible workers
   * polling for Subtasks.
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * Output only. The current state of the subtask.
   *
   * @generated from field: google.cloud.bigquery.migration.v2.MigrationSubtask.State state = 5;
   */
  state: MigrationSubtask_State;

  /**
   * Output only. An explanation that may be populated when the task is in
   * FAILED state.
   *
   * @generated from field: google.rpc.ErrorInfo processing_error = 6;
   */
  processingError?: ErrorInfo;

  /**
   * Output only. Provides details to errors and issues encountered while
   * processing the subtask. Presence of error details does not mean that the
   * subtask failed.
   *
   * @generated from field: repeated google.cloud.bigquery.migration.v2.ResourceErrorDetail resource_error_details = 12;
   */
  resourceErrorDetails: ResourceErrorDetail[];

  /**
   * The number or resources with errors. Note: This is not the total
   * number of errors as each resource can have more than one error.
   * This is used to indicate truncation by having a `resource_error_count`
   * that is higher than the size of `resource_error_details`.
   *
   * @generated from field: int32 resource_error_count = 13;
   */
  resourceErrorCount: number;

  /**
   * Time when the subtask was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 7;
   */
  createTime?: Timestamp;

  /**
   * Time when the subtask was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_update_time = 8;
   */
  lastUpdateTime?: Timestamp;

  /**
   * The metrics for the subtask.
   *
   * @generated from field: repeated google.cloud.bigquery.migration.v2.TimeSeries metrics = 11;
   */
  metrics: TimeSeries[];
};

/**
 * Describes the message google.cloud.bigquery.migration.v2.MigrationSubtask.
 * Use `create(MigrationSubtaskSchema)` to create a new message.
 */
export const MigrationSubtaskSchema: GenMessage<MigrationSubtask> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_migration_v2_migration_entities, 2);

/**
 * Possible states of a migration subtask.
 *
 * @generated from enum google.cloud.bigquery.migration.v2.MigrationSubtask.State
 */
export enum MigrationSubtask_State {
  /**
   * The state is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The subtask is ready, i.e. it is ready for execution.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * The subtask is running, i.e. it is assigned to a worker for execution.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The subtask finished successfully.
   *
   * @generated from enum value: SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * The subtask finished unsuccessfully.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * The subtask is paused, i.e., it will not be scheduled. If it was already
   * assigned,it might still finish but no new lease renewals will be granted.
   *
   * @generated from enum value: PAUSED = 5;
   */
  PAUSED = 5,

  /**
   * The subtask is pending a dependency. It will be scheduled once its
   * dependencies are done.
   *
   * @generated from enum value: PENDING_DEPENDENCY = 6;
   */
  PENDING_DEPENDENCY = 6,
}

/**
 * Describes the enum google.cloud.bigquery.migration.v2.MigrationSubtask.State.
 */
export const MigrationSubtask_StateSchema: GenEnum<MigrationSubtask_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_migration_v2_migration_entities, 2, 0);

/**
 * The migration task result.
 *
 * @generated from message google.cloud.bigquery.migration.v2.MigrationTaskResult
 */
export type MigrationTaskResult = Message<"google.cloud.bigquery.migration.v2.MigrationTaskResult"> & {
  /**
   * Details specific to the task type.
   *
   * @generated from oneof google.cloud.bigquery.migration.v2.MigrationTaskResult.details
   */
  details: {
    /**
     * Details specific to translation task types.
     *
     * @generated from field: google.cloud.bigquery.migration.v2.TranslationTaskResult translation_task_result = 2;
     */
    value: TranslationTaskResult;
    case: "translationTaskResult";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.bigquery.migration.v2.MigrationTaskResult.
 * Use `create(MigrationTaskResultSchema)` to create a new message.
 */
export const MigrationTaskResultSchema: GenMessage<MigrationTaskResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_migration_v2_migration_entities, 3);

/**
 * Translation specific result details from the migration task.
 *
 * @generated from message google.cloud.bigquery.migration.v2.TranslationTaskResult
 */
export type TranslationTaskResult = Message<"google.cloud.bigquery.migration.v2.TranslationTaskResult"> & {
  /**
   * The list of the translated literals.
   *
   * @generated from field: repeated google.cloud.bigquery.migration.v2.Literal translated_literals = 1;
   */
  translatedLiterals: Literal[];

  /**
   * The records from the aggregate CSV report for a migration workflow.
   *
   * @generated from field: repeated google.cloud.bigquery.migration.v2.GcsReportLogMessage report_log_messages = 2;
   */
  reportLogMessages: GcsReportLogMessage[];
};

/**
 * Describes the message google.cloud.bigquery.migration.v2.TranslationTaskResult.
 * Use `create(TranslationTaskResultSchema)` to create a new message.
 */
export const TranslationTaskResultSchema: GenMessage<TranslationTaskResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_migration_v2_migration_entities, 4);

