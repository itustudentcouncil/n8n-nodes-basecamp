// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/bigquery/datatransfer/v1/datatransfer.proto (package google.cloud.bigquery.datatransfer.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { TransferConfig, TransferConfigSchema, TransferMessage, TransferMessage_MessageSeverity, TransferRun, TransferRunSchema, TransferState, TransferType } from "./transfer_pb";
import { file_google_cloud_bigquery_datatransfer_v1_transfer } from "./transfer_pb";
import type { Duration, EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/bigquery/datatransfer/v1/datatransfer.proto.
 */
export const file_google_cloud_bigquery_datatransfer_v1_datatransfer: GenFile = /*@__PURE__*/
  fileDesc("Cjhnb29nbGUvY2xvdWQvYmlncXVlcnkvZGF0YXRyYW5zZmVyL3YxL2RhdGF0cmFuc2Zlci5wcm90bxIlZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MSKPBQoTRGF0YVNvdXJjZVBhcmFtZXRlchIQCghwYXJhbV9pZBgBIAEoCRIUCgxkaXNwbGF5X25hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSTQoEdHlwZRgEIAEoDjI/Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuRGF0YVNvdXJjZVBhcmFtZXRlci5UeXBlEhAKCHJlcXVpcmVkGAUgASgIEhAKCHJlcGVhdGVkGAYgASgIEhgKEHZhbGlkYXRpb25fcmVnZXgYByABKAkSFgoOYWxsb3dlZF92YWx1ZXMYCCADKAkSLwoJbWluX3ZhbHVlGAkgASgLMhwuZ29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVlEi8KCW1heF92YWx1ZRgKIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1ZRJKCgZmaWVsZHMYCyADKAsyOi5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLkRhdGFTb3VyY2VQYXJhbWV0ZXISHgoWdmFsaWRhdGlvbl9kZXNjcmlwdGlvbhgMIAEoCRIbChN2YWxpZGF0aW9uX2hlbHBfdXJsGA0gASgJEhEKCWltbXV0YWJsZRgOIAEoCBIPCgdyZWN1cnNlGA8gASgIEhIKCmRlcHJlY2F0ZWQYFCABKAgicwoEVHlwZRIUChBUWVBFX1VOU1BFQ0lGSUVEEAASCgoGU1RSSU5HEAESCwoHSU5URUdFUhACEgoKBkRPVUJMRRADEgsKB0JPT0xFQU4QBBIKCgZSRUNPUkQQBRINCglQTFVTX1BBR0UQBhIICgRMSVNUEAcinAkKCkRhdGFTb3VyY2USEQoEbmFtZRgBIAEoCUID4EEDEhYKDmRhdGFfc291cmNlX2lkGAIgASgJEhQKDGRpc3BsYXlfbmFtZRgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRIRCgljbGllbnRfaWQYBSABKAkSDgoGc2NvcGVzGAYgAygJEk4KDXRyYW5zZmVyX3R5cGUYByABKA4yMy5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLlRyYW5zZmVyVHlwZUICGAESJwobc3VwcG9ydHNfbXVsdGlwbGVfdHJhbnNmZXJzGAggASgIQgIYARIfChd1cGRhdGVfZGVhZGxpbmVfc2Vjb25kcxgJIAEoBRIYChBkZWZhdWx0X3NjaGVkdWxlGAogASgJEiAKGHN1cHBvcnRzX2N1c3RvbV9zY2hlZHVsZRgLIAEoCBJOCgpwYXJhbWV0ZXJzGAwgAygLMjouZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5EYXRhU291cmNlUGFyYW1ldGVyEhAKCGhlbHBfdXJsGA0gASgJEl8KEmF1dGhvcml6YXRpb25fdHlwZRgOIAEoDjJDLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuRGF0YVNvdXJjZS5BdXRob3JpemF0aW9uVHlwZRJcChFkYXRhX3JlZnJlc2hfdHlwZRgPIAEoDjJBLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuRGF0YVNvdXJjZS5EYXRhUmVmcmVzaFR5cGUSKAogZGVmYXVsdF9kYXRhX3JlZnJlc2hfd2luZG93X2RheXMYECABKAUSHAoUbWFudWFsX3J1bnNfZGlzYWJsZWQYESABKAgSPAoZbWluaW11bV9zY2hlZHVsZV9pbnRlcnZhbBgSIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbiKKAQoRQXV0aG9yaXphdGlvblR5cGUSIgoeQVVUSE9SSVpBVElPTl9UWVBFX1VOU1BFQ0lGSUVEEAASFgoSQVVUSE9SSVpBVElPTl9DT0RFEAESIgoeR09PR0xFX1BMVVNfQVVUSE9SSVpBVElPTl9DT0RFEAISFQoRRklSU1RfUEFSVFlfT0FVVEgQAyJjCg9EYXRhUmVmcmVzaFR5cGUSIQodREFUQV9SRUZSRVNIX1RZUEVfVU5TUEVDSUZJRUQQABISCg5TTElESU5HX1dJTkRPVxABEhkKFUNVU1RPTV9TTElESU5HX1dJTkRPVxACOqUB6kGhAQouYmlncXVlcnlkYXRhdHJhbnNmZXIuZ29vZ2xlYXBpcy5jb20vRGF0YVNvdXJjZRIscHJvamVjdHMve3Byb2plY3R9L2RhdGFTb3VyY2VzL3tkYXRhX3NvdXJjZX0SQXByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9kYXRhU291cmNlcy97ZGF0YV9zb3VyY2V9IlwKFEdldERhdGFTb3VyY2VSZXF1ZXN0EkQKBG5hbWUYASABKAlCNuBBAvpBMAouYmlncXVlcnlkYXRhdHJhbnNmZXIuZ29vZ2xlYXBpcy5jb20vRGF0YVNvdXJjZSKHAQoWTGlzdERhdGFTb3VyY2VzUmVxdWVzdBJGCgZwYXJlbnQYASABKAlCNuBBAvpBMBIuYmlncXVlcnlkYXRhdHJhbnNmZXIuZ29vZ2xlYXBpcy5jb20vRGF0YVNvdXJjZRISCgpwYWdlX3Rva2VuGAMgASgJEhEKCXBhZ2Vfc2l6ZRgEIAEoBSKAAQoXTGlzdERhdGFTb3VyY2VzUmVzcG9uc2USRwoMZGF0YV9zb3VyY2VzGAEgAygLMjEuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5EYXRhU291cmNlEhwKD25leHRfcGFnZV90b2tlbhgCIAEoCUID4EEDIpICChtDcmVhdGVUcmFuc2ZlckNvbmZpZ1JlcXVlc3QSSgoGcGFyZW50GAEgASgJQjrgQQL6QTQSMmJpZ3F1ZXJ5ZGF0YXRyYW5zZmVyLmdvb2dsZWFwaXMuY29tL1RyYW5zZmVyQ29uZmlnElMKD3RyYW5zZmVyX2NvbmZpZxgCIAEoCzI1Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuVHJhbnNmZXJDb25maWdCA+BBAhIeChJhdXRob3JpemF0aW9uX2NvZGUYAyABKAlCAhgBEhQKDHZlcnNpb25faW5mbxgFIAEoCRIcChRzZXJ2aWNlX2FjY291bnRfbmFtZRgGIAEoCSL8AQobVXBkYXRlVHJhbnNmZXJDb25maWdSZXF1ZXN0ElMKD3RyYW5zZmVyX2NvbmZpZxgBIAEoCzI1Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuVHJhbnNmZXJDb25maWdCA+BBAhIeChJhdXRob3JpemF0aW9uX2NvZGUYAyABKAlCAhgBEjQKC3VwZGF0ZV9tYXNrGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EECEhQKDHZlcnNpb25faW5mbxgFIAEoCRIcChRzZXJ2aWNlX2FjY291bnRfbmFtZRgGIAEoCSJkChhHZXRUcmFuc2ZlckNvbmZpZ1JlcXVlc3QSSAoEbmFtZRgBIAEoCUI64EEC+kE0CjJiaWdxdWVyeWRhdGF0cmFuc2Zlci5nb29nbGVhcGlzLmNvbS9UcmFuc2ZlckNvbmZpZyJnChtEZWxldGVUcmFuc2ZlckNvbmZpZ1JlcXVlc3QSSAoEbmFtZRgBIAEoCUI64EEC+kE0CjJiaWdxdWVyeWRhdGF0cmFuc2Zlci5nb29nbGVhcGlzLmNvbS9UcmFuc2ZlckNvbmZpZyJWChVHZXRUcmFuc2ZlclJ1blJlcXVlc3QSPQoEbmFtZRgBIAEoCUIv4EEC+kEpCidiaWdxdWVyeWRhdGF0cmFuc2Zlci5nb29nbGVhcGlzLmNvbS9SdW4iWQoYRGVsZXRlVHJhbnNmZXJSdW5SZXF1ZXN0Ej0KBG5hbWUYASABKAlCL+BBAvpBKQonYmlncXVlcnlkYXRhdHJhbnNmZXIuZ29vZ2xlYXBpcy5jb20vUnVuIqgBChpMaXN0VHJhbnNmZXJDb25maWdzUmVxdWVzdBJKCgZwYXJlbnQYASABKAlCOuBBAvpBNBIyYmlncXVlcnlkYXRhdHJhbnNmZXIuZ29vZ2xlYXBpcy5jb20vVHJhbnNmZXJDb25maWcSFwoPZGF0YV9zb3VyY2VfaWRzGAIgAygJEhIKCnBhZ2VfdG9rZW4YAyABKAkSEQoJcGFnZV9zaXplGAQgASgFIpEBChtMaXN0VHJhbnNmZXJDb25maWdzUmVzcG9uc2USVAoQdHJhbnNmZXJfY29uZmlncxgBIAMoCzI1Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuVHJhbnNmZXJDb25maWdCA+BBAxIcCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAlCA+BBAyLeAgoXTGlzdFRyYW5zZmVyUnVuc1JlcXVlc3QSPwoGcGFyZW50GAEgASgJQi/gQQL6QSkSJ2JpZ3F1ZXJ5ZGF0YXRyYW5zZmVyLmdvb2dsZWFwaXMuY29tL1J1bhJECgZzdGF0ZXMYAiADKA4yNC5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLlRyYW5zZmVyU3RhdGUSEgoKcGFnZV90b2tlbhgDIAEoCRIRCglwYWdlX3NpemUYBCABKAUSXgoLcnVuX2F0dGVtcHQYBSABKA4ySS5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLkxpc3RUcmFuc2ZlclJ1bnNSZXF1ZXN0LlJ1bkF0dGVtcHQiNQoKUnVuQXR0ZW1wdBIbChdSVU5fQVRURU1QVF9VTlNQRUNJRklFRBAAEgoKBkxBVEVTVBABIogBChhMaXN0VHJhbnNmZXJSdW5zUmVzcG9uc2USTgoNdHJhbnNmZXJfcnVucxgBIAMoCzIyLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuVHJhbnNmZXJSdW5CA+BBAxIcCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAlCA+BBAyLgAQoXTGlzdFRyYW5zZmVyTG9nc1JlcXVlc3QSPwoGcGFyZW50GAEgASgJQi/gQQL6QSkKJ2JpZ3F1ZXJ5ZGF0YXRyYW5zZmVyLmdvb2dsZWFwaXMuY29tL1J1bhISCgpwYWdlX3Rva2VuGAQgASgJEhEKCXBhZ2Vfc2l6ZRgFIAEoBRJdCg1tZXNzYWdlX3R5cGVzGAYgAygOMkYuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5UcmFuc2Zlck1lc3NhZ2UuTWVzc2FnZVNldmVyaXR5IpABChhMaXN0VHJhbnNmZXJMb2dzUmVzcG9uc2USVgoRdHJhbnNmZXJfbWVzc2FnZXMYASADKAsyNi5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLlRyYW5zZmVyTWVzc2FnZUID4EEDEhwKD25leHRfcGFnZV90b2tlbhgCIAEoCUID4EEDIl4KFkNoZWNrVmFsaWRDcmVkc1JlcXVlc3QSRAoEbmFtZRgBIAEoCUI24EEC+kEwCi5iaWdxdWVyeWRhdGF0cmFuc2Zlci5nb29nbGVhcGlzLmNvbS9EYXRhU291cmNlIjIKF0NoZWNrVmFsaWRDcmVkc1Jlc3BvbnNlEhcKD2hhc192YWxpZF9jcmVkcxgBIAEoCCLRAQobU2NoZWR1bGVUcmFuc2ZlclJ1bnNSZXF1ZXN0EkoKBnBhcmVudBgBIAEoCUI64EEC+kE0CjJiaWdxdWVyeWRhdGF0cmFuc2Zlci5nb29nbGVhcGlzLmNvbS9UcmFuc2ZlckNvbmZpZxIzCgpzdGFydF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EECEjEKCGVuZF90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EECImAKHFNjaGVkdWxlVHJhbnNmZXJSdW5zUmVzcG9uc2USQAoEcnVucxgBIAMoCzIyLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuVHJhbnNmZXJSdW4iigMKHlN0YXJ0TWFudWFsVHJhbnNmZXJSdW5zUmVxdWVzdBJKCgZwYXJlbnQYASABKAlCOuBBAvpBNAoyYmlncXVlcnlkYXRhdHJhbnNmZXIuZ29vZ2xlYXBpcy5jb20vVHJhbnNmZXJDb25maWcSbwoUcmVxdWVzdGVkX3RpbWVfcmFuZ2UYAyABKAsyTy5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLlN0YXJ0TWFudWFsVHJhbnNmZXJSdW5zUmVxdWVzdC5UaW1lUmFuZ2VIABI4ChJyZXF1ZXN0ZWRfcnVuX3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAAaaQoJVGltZVJhbmdlEi4KCnN0YXJ0X3RpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIGCgR0aW1lImMKH1N0YXJ0TWFudWFsVHJhbnNmZXJSdW5zUmVzcG9uc2USQAoEcnVucxgBIAMoCzIyLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuVHJhbnNmZXJSdW4iRgoYRW5yb2xsRGF0YVNvdXJjZXNSZXF1ZXN0EhEKBG5hbWUYASABKAlCA+BBAhIXCg9kYXRhX3NvdXJjZV9pZHMYAiADKAkiSAoaVW5lbnJvbGxEYXRhU291cmNlc1JlcXVlc3QSEQoEbmFtZRgBIAEoCUID4EECEhcKD2RhdGFfc291cmNlX2lkcxgCIAMoCTLVIgoTRGF0YVRyYW5zZmVyU2VydmljZRLmAQoNR2V0RGF0YVNvdXJjZRI7Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuR2V0RGF0YVNvdXJjZVJlcXVlc3QaMS5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLkRhdGFTb3VyY2UiZdpBBG5hbWWC0+STAlhaJRIjL3YxL3tuYW1lPXByb2plY3RzLyovZGF0YVNvdXJjZXMvKn0SLy92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2RhdGFTb3VyY2VzLyp9EvkBCg9MaXN0RGF0YVNvdXJjZXMSPS5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLkxpc3REYXRhU291cmNlc1JlcXVlc3QaPi5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLkxpc3REYXRhU291cmNlc1Jlc3BvbnNlImfaQQZwYXJlbnSC0+STAlhaJRIjL3YxL3twYXJlbnQ9cHJvamVjdHMvKn0vZGF0YVNvdXJjZXMSLy92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2RhdGFTb3VyY2VzErYCChRDcmVhdGVUcmFuc2ZlckNvbmZpZxJCLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuQ3JlYXRlVHJhbnNmZXJDb25maWdSZXF1ZXN0GjUuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5UcmFuc2ZlckNvbmZpZyKiAdpBFnBhcmVudCx0cmFuc2Zlcl9jb25maWeC0+STAoIBOg90cmFuc2Zlcl9jb25maWdaOjoPdHJhbnNmZXJfY29uZmlnIicvdjEve3BhcmVudD1wcm9qZWN0cy8qfS90cmFuc2ZlckNvbmZpZ3MiMy92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L3RyYW5zZmVyQ29uZmlncxLbAgoUVXBkYXRlVHJhbnNmZXJDb25maWcSQi5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLlVwZGF0ZVRyYW5zZmVyQ29uZmlnUmVxdWVzdBo1Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuVHJhbnNmZXJDb25maWcixwHaQRt0cmFuc2Zlcl9jb25maWcsdXBkYXRlX21hc2uC0+STAqIBOg90cmFuc2Zlcl9jb25maWdaSjoPdHJhbnNmZXJfY29uZmlnMjcvdjEve3RyYW5zZmVyX2NvbmZpZy5uYW1lPXByb2plY3RzLyovdHJhbnNmZXJDb25maWdzLyp9MkMvdjEve3RyYW5zZmVyX2NvbmZpZy5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovdHJhbnNmZXJDb25maWdzLyp9EuEBChREZWxldGVUcmFuc2ZlckNvbmZpZxJCLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuRGVsZXRlVHJhbnNmZXJDb25maWdSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Im3aQQRuYW1lgtPkkwJgWikqJy92MS97bmFtZT1wcm9qZWN0cy8qL3RyYW5zZmVyQ29uZmlncy8qfSozL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovdHJhbnNmZXJDb25maWdzLyp9EvoBChFHZXRUcmFuc2ZlckNvbmZpZxI/Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuR2V0VHJhbnNmZXJDb25maWdSZXF1ZXN0GjUuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5UcmFuc2ZlckNvbmZpZyJt2kEEbmFtZYLT5JMCYFopEicvdjEve25hbWU9cHJvamVjdHMvKi90cmFuc2ZlckNvbmZpZ3MvKn0SMy92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3RyYW5zZmVyQ29uZmlncy8qfRKNAgoTTGlzdFRyYW5zZmVyQ29uZmlncxJBLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuTGlzdFRyYW5zZmVyQ29uZmlnc1JlcXVlc3QaQi5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLkxpc3RUcmFuc2ZlckNvbmZpZ3NSZXNwb25zZSJv2kEGcGFyZW50gtPkkwJgWikSJy92MS97cGFyZW50PXByb2plY3RzLyp9L3RyYW5zZmVyQ29uZmlncxIzL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vdHJhbnNmZXJDb25maWdzEs0CChRTY2hlZHVsZVRyYW5zZmVyUnVucxJCLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuU2NoZWR1bGVUcmFuc2ZlclJ1bnNSZXF1ZXN0GkMuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5TY2hlZHVsZVRyYW5zZmVyUnVuc1Jlc3BvbnNlIqsBiAIB2kEacGFyZW50LHN0YXJ0X3RpbWUsZW5kX3RpbWWC0+STAoQBOgEqWjs6ASoiNi92MS97cGFyZW50PXByb2plY3RzLyovdHJhbnNmZXJDb25maWdzLyp9OnNjaGVkdWxlUnVucyJCL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90cmFuc2ZlckNvbmZpZ3MvKn06c2NoZWR1bGVSdW5zErwCChdTdGFydE1hbnVhbFRyYW5zZmVyUnVucxJFLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuU3RhcnRNYW51YWxUcmFuc2ZlclJ1bnNSZXF1ZXN0GkYuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5TdGFydE1hbnVhbFRyYW5zZmVyUnVuc1Jlc3BvbnNlIpEBgtPkkwKKAToBKlo+OgEqIjkvdjEve3BhcmVudD1wcm9qZWN0cy8qL3RyYW5zZmVyQ29uZmlncy8qfTpzdGFydE1hbnVhbFJ1bnMiRS92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovdHJhbnNmZXJDb25maWdzLyp9OnN0YXJ0TWFudWFsUnVucxL/AQoOR2V0VHJhbnNmZXJSdW4SPC5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLkdldFRyYW5zZmVyUnVuUmVxdWVzdBoyLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuVHJhbnNmZXJSdW4ie9pBBG5hbWWC0+STAm5aMBIuL3YxL3tuYW1lPXByb2plY3RzLyovdHJhbnNmZXJDb25maWdzLyovcnVucy8qfRI6L3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovdHJhbnNmZXJDb25maWdzLyovcnVucy8qfRLpAQoRRGVsZXRlVHJhbnNmZXJSdW4SPy5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLkRlbGV0ZVRyYW5zZmVyUnVuUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJ72kEEbmFtZYLT5JMCblowKi4vdjEve25hbWU9cHJvamVjdHMvKi90cmFuc2ZlckNvbmZpZ3MvKi9ydW5zLyp9KjovdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90cmFuc2ZlckNvbmZpZ3MvKi9ydW5zLyp9EpICChBMaXN0VHJhbnNmZXJSdW5zEj4uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5MaXN0VHJhbnNmZXJSdW5zUmVxdWVzdBo/Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuTGlzdFRyYW5zZmVyUnVuc1Jlc3BvbnNlIn3aQQZwYXJlbnSC0+STAm5aMBIuL3YxL3twYXJlbnQ9cHJvamVjdHMvKi90cmFuc2ZlckNvbmZpZ3MvKn0vcnVucxI6L3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90cmFuc2ZlckNvbmZpZ3MvKn0vcnVucxKyAgoQTGlzdFRyYW5zZmVyTG9ncxI+Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuTGlzdFRyYW5zZmVyTG9nc1JlcXVlc3QaPy5nb29nbGUuY2xvdWQuYmlncXVlcnkuZGF0YXRyYW5zZmVyLnYxLkxpc3RUcmFuc2ZlckxvZ3NSZXNwb25zZSKcAdpBBnBhcmVudILT5JMCjAFaPxI9L3YxL3twYXJlbnQ9cHJvamVjdHMvKi90cmFuc2ZlckNvbmZpZ3MvKi9ydW5zLyp9L3RyYW5zZmVyTG9ncxJJL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90cmFuc2ZlckNvbmZpZ3MvKi9ydW5zLyp9L3RyYW5zZmVyTG9ncxKeAgoPQ2hlY2tWYWxpZENyZWRzEj0uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5DaGVja1ZhbGlkQ3JlZHNSZXF1ZXN0Gj4uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5DaGVja1ZhbGlkQ3JlZHNSZXNwb25zZSKLAdpBBG5hbWWC0+STAn46ASpaODoBKiIzL3YxL3tuYW1lPXByb2plY3RzLyovZGF0YVNvdXJjZXMvKn06Y2hlY2tWYWxpZENyZWRzIj8vdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9kYXRhU291cmNlcy8qfTpjaGVja1ZhbGlkQ3JlZHMS2gEKEUVucm9sbERhdGFTb3VyY2VzEj8uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmRhdGF0cmFuc2Zlci52MS5FbnJvbGxEYXRhU291cmNlc1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkibILT5JMCZjoBKlosOgEqIicvdjEve25hbWU9cHJvamVjdHMvKn06ZW5yb2xsRGF0YVNvdXJjZXMiMy92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfTplbnJvbGxEYXRhU291cmNlcxKyAQoTVW5lbnJvbGxEYXRhU291cmNlcxJBLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjEuVW5lbnJvbGxEYXRhU291cmNlc1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiQILT5JMCOjoBKiI1L3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyp9OnVuZW5yb2xsRGF0YVNvdXJjZXMaV8pBI2JpZ3F1ZXJ5ZGF0YXRyYW5zZmVyLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybUKLAgopY29tLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5kYXRhdHJhbnNmZXIudjFCEURhdGFUcmFuc2ZlclByb3RvUAFaTWNsb3VkLmdvb2dsZS5jb20vZ28vYmlncXVlcnkvZGF0YXRyYW5zZmVyL2FwaXYxL2RhdGF0cmFuc2ZlcnBiO2RhdGF0cmFuc2ZlcnBiqgIlR29vZ2xlLkNsb3VkLkJpZ1F1ZXJ5LkRhdGFUcmFuc2Zlci5WMcoCJUdvb2dsZVxDbG91ZFxCaWdRdWVyeVxEYXRhVHJhbnNmZXJcVjHqAilHb29nbGU6OkNsb3VkOjpCaWdxdWVyeTo6RGF0YVRyYW5zZmVyOjpWMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_bigquery_datatransfer_v1_transfer, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * A parameter used to define custom fields in a data source definition.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.DataSourceParameter
 */
export type DataSourceParameter = Message<"google.cloud.bigquery.datatransfer.v1.DataSourceParameter"> & {
  /**
   * Parameter identifier.
   *
   * @generated from field: string param_id = 1;
   */
  paramId: string;

  /**
   * Parameter display name in the user interface.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Parameter description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Parameter type.
   *
   * @generated from field: google.cloud.bigquery.datatransfer.v1.DataSourceParameter.Type type = 4;
   */
  type: DataSourceParameter_Type;

  /**
   * Is parameter required.
   *
   * @generated from field: bool required = 5;
   */
  required: boolean;

  /**
   * Deprecated. This field has no effect.
   *
   * @generated from field: bool repeated = 6;
   */
  repeated: boolean;

  /**
   * Regular expression which can be used for parameter validation.
   *
   * @generated from field: string validation_regex = 7;
   */
  validationRegex: string;

  /**
   * All possible values for the parameter.
   *
   * @generated from field: repeated string allowed_values = 8;
   */
  allowedValues: string[];

  /**
   * For integer and double values specifies minimum allowed value.
   *
   * @generated from field: google.protobuf.DoubleValue min_value = 9;
   */
  minValue?: number;

  /**
   * For integer and double values specifies maximum allowed value.
   *
   * @generated from field: google.protobuf.DoubleValue max_value = 10;
   */
  maxValue?: number;

  /**
   * Deprecated. This field has no effect.
   *
   * @generated from field: repeated google.cloud.bigquery.datatransfer.v1.DataSourceParameter fields = 11;
   */
  fields: DataSourceParameter[];

  /**
   * Description of the requirements for this field, in case the user input does
   * not fulfill the regex pattern or min/max values.
   *
   * @generated from field: string validation_description = 12;
   */
  validationDescription: string;

  /**
   * URL to a help document to further explain the naming requirements.
   *
   * @generated from field: string validation_help_url = 13;
   */
  validationHelpUrl: string;

  /**
   * Cannot be changed after initial creation.
   *
   * @generated from field: bool immutable = 14;
   */
  immutable: boolean;

  /**
   * Deprecated. This field has no effect.
   *
   * @generated from field: bool recurse = 15;
   */
  recurse: boolean;

  /**
   * If true, it should not be used in new transfers, and it should not be
   * visible to users.
   *
   * @generated from field: bool deprecated = 20;
   */
  deprecated: boolean;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.DataSourceParameter.
 * Use `create(DataSourceParameterSchema)` to create a new message.
 */
export const DataSourceParameterSchema: GenMessage<DataSourceParameter> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 0);

/**
 * Parameter type.
 *
 * @generated from enum google.cloud.bigquery.datatransfer.v1.DataSourceParameter.Type
 */
export enum DataSourceParameter_Type {
  /**
   * Type unspecified.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * String parameter.
   *
   * @generated from enum value: STRING = 1;
   */
  STRING = 1,

  /**
   * Integer parameter (64-bits).
   * Will be serialized to json as string.
   *
   * @generated from enum value: INTEGER = 2;
   */
  INTEGER = 2,

  /**
   * Double precision floating point parameter.
   *
   * @generated from enum value: DOUBLE = 3;
   */
  DOUBLE = 3,

  /**
   * Boolean parameter.
   *
   * @generated from enum value: BOOLEAN = 4;
   */
  BOOLEAN = 4,

  /**
   * Deprecated. This field has no effect.
   *
   * @generated from enum value: RECORD = 5;
   */
  RECORD = 5,

  /**
   * Page ID for a Google+ Page.
   *
   * @generated from enum value: PLUS_PAGE = 6;
   */
  PLUS_PAGE = 6,

  /**
   * List of strings parameter.
   *
   * @generated from enum value: LIST = 7;
   */
  LIST = 7,
}

/**
 * Describes the enum google.cloud.bigquery.datatransfer.v1.DataSourceParameter.Type.
 */
export const DataSourceParameter_TypeSchema: GenEnum<DataSourceParameter_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 0, 0);

/**
 * Defines the properties and custom parameters for a data source.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.DataSource
 */
export type DataSource = Message<"google.cloud.bigquery.datatransfer.v1.DataSource"> & {
  /**
   * Output only. Data source resource name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Data source id.
   *
   * @generated from field: string data_source_id = 2;
   */
  dataSourceId: string;

  /**
   * User friendly data source name.
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * User friendly data source description string.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * Data source client id which should be used to receive refresh token.
   *
   * @generated from field: string client_id = 5;
   */
  clientId: string;

  /**
   * Api auth scopes for which refresh token needs to be obtained. These are
   * scopes needed by a data source to prepare data and ingest them into
   * BigQuery, e.g., https://www.googleapis.com/auth/bigquery
   *
   * @generated from field: repeated string scopes = 6;
   */
  scopes: string[];

  /**
   * Deprecated. This field has no effect.
   *
   * @generated from field: google.cloud.bigquery.datatransfer.v1.TransferType transfer_type = 7 [deprecated = true];
   * @deprecated
   */
  transferType: TransferType;

  /**
   * Deprecated. This field has no effect.
   *
   * @generated from field: bool supports_multiple_transfers = 8 [deprecated = true];
   * @deprecated
   */
  supportsMultipleTransfers: boolean;

  /**
   * The number of seconds to wait for an update from the data source
   * before the Data Transfer Service marks the transfer as FAILED.
   *
   * @generated from field: int32 update_deadline_seconds = 9;
   */
  updateDeadlineSeconds: number;

  /**
   * Default data transfer schedule.
   * Examples of valid schedules include:
   * `1st,3rd monday of month 15:30`,
   * `every wed,fri of jan,jun 13:15`, and
   * `first sunday of quarter 00:00`.
   *
   * @generated from field: string default_schedule = 10;
   */
  defaultSchedule: string;

  /**
   * Specifies whether the data source supports a user defined schedule, or
   * operates on the default schedule.
   * When set to `true`, user can override default schedule.
   *
   * @generated from field: bool supports_custom_schedule = 11;
   */
  supportsCustomSchedule: boolean;

  /**
   * Data source parameters.
   *
   * @generated from field: repeated google.cloud.bigquery.datatransfer.v1.DataSourceParameter parameters = 12;
   */
  parameters: DataSourceParameter[];

  /**
   * Url for the help document for this data source.
   *
   * @generated from field: string help_url = 13;
   */
  helpUrl: string;

  /**
   * Indicates the type of authorization.
   *
   * @generated from field: google.cloud.bigquery.datatransfer.v1.DataSource.AuthorizationType authorization_type = 14;
   */
  authorizationType: DataSource_AuthorizationType;

  /**
   * Specifies whether the data source supports automatic data refresh for the
   * past few days, and how it's supported.
   * For some data sources, data might not be complete until a few days later,
   * so it's useful to refresh data automatically.
   *
   * @generated from field: google.cloud.bigquery.datatransfer.v1.DataSource.DataRefreshType data_refresh_type = 15;
   */
  dataRefreshType: DataSource_DataRefreshType;

  /**
   * Default data refresh window on days.
   * Only meaningful when `data_refresh_type` = `SLIDING_WINDOW`.
   *
   * @generated from field: int32 default_data_refresh_window_days = 16;
   */
  defaultDataRefreshWindowDays: number;

  /**
   * Disables backfilling and manual run scheduling
   * for the data source.
   *
   * @generated from field: bool manual_runs_disabled = 17;
   */
  manualRunsDisabled: boolean;

  /**
   * The minimum interval for scheduler to schedule runs.
   *
   * @generated from field: google.protobuf.Duration minimum_schedule_interval = 18;
   */
  minimumScheduleInterval?: Duration;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.DataSource.
 * Use `create(DataSourceSchema)` to create a new message.
 */
export const DataSourceSchema: GenMessage<DataSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 1);

/**
 * The type of authorization needed for this data source.
 *
 * @generated from enum google.cloud.bigquery.datatransfer.v1.DataSource.AuthorizationType
 */
export enum DataSource_AuthorizationType {
  /**
   * Type unspecified.
   *
   * @generated from enum value: AUTHORIZATION_TYPE_UNSPECIFIED = 0;
   */
  AUTHORIZATION_TYPE_UNSPECIFIED = 0,

  /**
   * Use OAuth 2 authorization codes that can be exchanged
   * for a refresh token on the backend.
   *
   * @generated from enum value: AUTHORIZATION_CODE = 1;
   */
  AUTHORIZATION_CODE = 1,

  /**
   * Return an authorization code for a given Google+ page that can then be
   * exchanged for a refresh token on the backend.
   *
   * @generated from enum value: GOOGLE_PLUS_AUTHORIZATION_CODE = 2;
   */
  GOOGLE_PLUS_AUTHORIZATION_CODE = 2,

  /**
   * Use First Party OAuth.
   *
   * @generated from enum value: FIRST_PARTY_OAUTH = 3;
   */
  FIRST_PARTY_OAUTH = 3,
}

/**
 * Describes the enum google.cloud.bigquery.datatransfer.v1.DataSource.AuthorizationType.
 */
export const DataSource_AuthorizationTypeSchema: GenEnum<DataSource_AuthorizationType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 1, 0);

/**
 * Represents how the data source supports data auto refresh.
 *
 * @generated from enum google.cloud.bigquery.datatransfer.v1.DataSource.DataRefreshType
 */
export enum DataSource_DataRefreshType {
  /**
   * The data source won't support data auto refresh, which is default value.
   *
   * @generated from enum value: DATA_REFRESH_TYPE_UNSPECIFIED = 0;
   */
  DATA_REFRESH_TYPE_UNSPECIFIED = 0,

  /**
   * The data source supports data auto refresh, and runs will be scheduled
   * for the past few days. Does not allow custom values to be set for each
   * transfer config.
   *
   * @generated from enum value: SLIDING_WINDOW = 1;
   */
  SLIDING_WINDOW = 1,

  /**
   * The data source supports data auto refresh, and runs will be scheduled
   * for the past few days. Allows custom values to be set for each transfer
   * config.
   *
   * @generated from enum value: CUSTOM_SLIDING_WINDOW = 2;
   */
  CUSTOM_SLIDING_WINDOW = 2,
}

/**
 * Describes the enum google.cloud.bigquery.datatransfer.v1.DataSource.DataRefreshType.
 */
export const DataSource_DataRefreshTypeSchema: GenEnum<DataSource_DataRefreshType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 1, 1);

/**
 * A request to get data source info.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest
 */
export type GetDataSourceRequest = Message<"google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest"> & {
  /**
   * Required. The field will contain name of the resource requested, for
   * example: `projects/{project_id}/dataSources/{data_source_id}` or
   * `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest.
 * Use `create(GetDataSourceRequestSchema)` to create a new message.
 */
export const GetDataSourceRequestSchema: GenMessage<GetDataSourceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 2);

/**
 * Request to list supported data sources and their data transfer settings.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest
 */
export type ListDataSourcesRequest = Message<"google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest"> & {
  /**
   * Required. The BigQuery project id for which data sources should be
   * returned. Must be in the form: `projects/{project_id}` or
   * `projects/{project_id}/locations/{location_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Pagination token, which can be used to request a specific page
   * of `ListDataSourcesRequest` list results. For multiple-page
   * results, `ListDataSourcesResponse` outputs
   * a `next_page` token, which can be used as the
   * `page_token` value to request the next page of list results.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Page size. The default page size is the maximum value of 1000 results.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest.
 * Use `create(ListDataSourcesRequestSchema)` to create a new message.
 */
export const ListDataSourcesRequestSchema: GenMessage<ListDataSourcesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 3);

/**
 * Returns list of supported data sources and their metadata.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse
 */
export type ListDataSourcesResponse = Message<"google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse"> & {
  /**
   * List of supported data sources and their transfer settings.
   *
   * @generated from field: repeated google.cloud.bigquery.datatransfer.v1.DataSource data_sources = 1;
   */
  dataSources: DataSource[];

  /**
   * Output only. The next-pagination token. For multiple-page list results,
   * this token can be used as the
   * `ListDataSourcesRequest.page_token`
   * to request the next page of list results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse.
 * Use `create(ListDataSourcesResponseSchema)` to create a new message.
 */
export const ListDataSourcesResponseSchema: GenMessage<ListDataSourcesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 4);

/**
 * A request to create a data transfer configuration. If new credentials are
 * needed for this transfer configuration, authorization info must be provided.
 * If authorization info is provided, the transfer configuration will be
 * associated with the user id corresponding to the authorization info.
 * Otherwise, the transfer configuration will be associated with the calling
 * user.
 *
 * When using a cross project service account for creating a transfer config,
 * you must enable cross project service account usage. For more information,
 * see [Disable attachment of service accounts to resources in other
 * projects](https://cloud.google.com/resource-manager/docs/organization-policy/restricting-service-accounts#disable_cross_project_service_accounts).
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest
 */
export type CreateTransferConfigRequest = Message<"google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest"> & {
  /**
   * Required. The BigQuery project id where the transfer configuration should
   * be created. Must be in the format
   * projects/{project_id}/locations/{location_id} or projects/{project_id}. If
   * specified location and location of the destination bigquery dataset do not
   * match - the request will fail.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Data transfer configuration to create.
   *
   * @generated from field: google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 2;
   */
  transferConfig?: TransferConfig;

  /**
   * Deprecated: Authorization code was required when
   * `transferConfig.dataSourceId` is 'youtube_channel' but it is no longer used
   * in any data sources. Use `version_info` instead.
   *
   * Optional OAuth2 authorization code to use with this transfer configuration.
   * This is required only if `transferConfig.dataSourceId` is 'youtube_channel'
   * and new credentials are needed, as indicated by `CheckValidCreds`. In order
   * to obtain authorization_code, make a request to the following URL:
   * <pre class="prettyprint" suppresswarning="true">
   * https://bigquery.cloud.google.com/datatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=<var>client_id</var>&scope=<var>data_source_scopes</var>
   * </pre>
   * * The <var>client_id</var> is the OAuth client_id of the data source as
   * returned by ListDataSources method.
   * * <var>data_source_scopes</var> are the scopes returned by ListDataSources
   * method.
   *
   * Note that this should not be set when `service_account_name` is used to
   * create the transfer config.
   *
   * @generated from field: string authorization_code = 3 [deprecated = true];
   * @deprecated
   */
  authorizationCode: string;

  /**
   * Optional version info. This parameter replaces `authorization_code` which
   * is no longer used in any data sources. This is required only if
   * `transferConfig.dataSourceId` is 'youtube_channel' *or* new credentials
   * are needed, as indicated by `CheckValidCreds`. In order to obtain version
   * info, make a request to the following URL:
   * <pre class="prettyprint" suppresswarning="true">
   * https://bigquery.cloud.google.com/datatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=<var>client_id</var>&scope=<var>data_source_scopes</var>
   * </pre>
   * * The <var>client_id</var> is the OAuth client_id of the data source as
   * returned by ListDataSources method.
   * * <var>data_source_scopes</var> are the scopes returned by ListDataSources
   * method.
   *
   * Note that this should not be set when `service_account_name` is used to
   * create the transfer config.
   *
   * @generated from field: string version_info = 5;
   */
  versionInfo: string;

  /**
   * Optional service account email. If this field is set, the transfer config
   * will be created with this service account's credentials. It requires that
   * the requesting user calling this API has permissions to act as this service
   * account.
   *
   * Note that not all data sources support service account credentials when
   * creating a transfer config. For the latest list of data sources, read about
   * [using service
   * accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts).
   *
   * @generated from field: string service_account_name = 6;
   */
  serviceAccountName: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest.
 * Use `create(CreateTransferConfigRequestSchema)` to create a new message.
 */
export const CreateTransferConfigRequestSchema: GenMessage<CreateTransferConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 5);

/**
 * A request to update a transfer configuration. To update the user id of the
 * transfer configuration, authorization info needs to be provided.
 *
 * When using a cross project service account for updating a transfer config,
 * you must enable cross project service account usage. For more information,
 * see [Disable attachment of service accounts to resources in other
 * projects](https://cloud.google.com/resource-manager/docs/organization-policy/restricting-service-accounts#disable_cross_project_service_accounts).
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest
 */
export type UpdateTransferConfigRequest = Message<"google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest"> & {
  /**
   * Required. Data transfer configuration to create.
   *
   * @generated from field: google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;
   */
  transferConfig?: TransferConfig;

  /**
   * Deprecated: Authorization code was required when
   * `transferConfig.dataSourceId` is 'youtube_channel' but it is no longer used
   * in any data sources. Use `version_info` instead.
   *
   * Optional OAuth2 authorization code to use with this transfer configuration.
   * This is required only if `transferConfig.dataSourceId` is 'youtube_channel'
   * and new credentials are needed, as indicated by `CheckValidCreds`. In order
   * to obtain authorization_code, make a request to the following URL:
   * <pre class="prettyprint" suppresswarning="true">
   * https://bigquery.cloud.google.com/datatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=<var>client_id</var>&scope=<var>data_source_scopes</var>
   * </pre>
   * * The <var>client_id</var> is the OAuth client_id of the data source as
   * returned by ListDataSources method.
   * * <var>data_source_scopes</var> are the scopes returned by ListDataSources
   * method.
   *
   * Note that this should not be set when `service_account_name` is used to
   * update the transfer config.
   *
   * @generated from field: string authorization_code = 3 [deprecated = true];
   * @deprecated
   */
  authorizationCode: string;

  /**
   * Required. Required list of fields to be updated in this request.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;

  /**
   * Optional version info. This parameter replaces `authorization_code` which
   * is no longer used in any data sources. This is required only if
   * `transferConfig.dataSourceId` is 'youtube_channel' *or* new credentials
   * are needed, as indicated by `CheckValidCreds`. In order to obtain version
   * info, make a request to the following URL:
   * <pre class="prettyprint" suppresswarning="true">
   * https://bigquery.cloud.google.com/datatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=<var>client_id</var>&scope=<var>data_source_scopes</var>
   * </pre>
   * * The <var>client_id</var> is the OAuth client_id of the data source as
   * returned by ListDataSources method.
   * * <var>data_source_scopes</var> are the scopes returned by ListDataSources
   * method.
   *
   * Note that this should not be set when `service_account_name` is used to
   * update the transfer config.
   *
   * @generated from field: string version_info = 5;
   */
  versionInfo: string;

  /**
   * Optional service account email. If this field is set, the transfer config
   * will be created with this service account's credentials. It requires that
   * the requesting user calling this API has permissions to act as this service
   * account.
   *
   * Note that not all data sources support service account credentials when
   * creating a transfer config. For the latest list of data sources, read about
   * [using service
   * accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts).
   *
   * @generated from field: string service_account_name = 6;
   */
  serviceAccountName: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.
 * Use `create(UpdateTransferConfigRequestSchema)` to create a new message.
 */
export const UpdateTransferConfigRequestSchema: GenMessage<UpdateTransferConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 6);

/**
 * A request to get data transfer information.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest
 */
export type GetTransferConfigRequest = Message<"google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest"> & {
  /**
   * Required. The field will contain name of the resource requested, for
   * example: `projects/{project_id}/transferConfigs/{config_id}` or
   * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest.
 * Use `create(GetTransferConfigRequestSchema)` to create a new message.
 */
export const GetTransferConfigRequestSchema: GenMessage<GetTransferConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 7);

/**
 * A request to delete data transfer information. All associated transfer runs
 * and log messages will be deleted as well.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest
 */
export type DeleteTransferConfigRequest = Message<"google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest"> & {
  /**
   * Required. The field will contain name of the resource requested, for
   * example: `projects/{project_id}/transferConfigs/{config_id}` or
   * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest.
 * Use `create(DeleteTransferConfigRequestSchema)` to create a new message.
 */
export const DeleteTransferConfigRequestSchema: GenMessage<DeleteTransferConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 8);

/**
 * A request to get data transfer run information.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest
 */
export type GetTransferRunRequest = Message<"google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest"> & {
  /**
   * Required. The field will contain name of the resource requested, for
   * example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`
   * or
   * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest.
 * Use `create(GetTransferRunRequestSchema)` to create a new message.
 */
export const GetTransferRunRequestSchema: GenMessage<GetTransferRunRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 9);

/**
 * A request to delete data transfer run information.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest
 */
export type DeleteTransferRunRequest = Message<"google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest"> & {
  /**
   * Required. The field will contain name of the resource requested, for
   * example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`
   * or
   * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest.
 * Use `create(DeleteTransferRunRequestSchema)` to create a new message.
 */
export const DeleteTransferRunRequestSchema: GenMessage<DeleteTransferRunRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 10);

/**
 * A request to list data transfers configured for a BigQuery project.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest
 */
export type ListTransferConfigsRequest = Message<"google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest"> & {
  /**
   * Required. The BigQuery project id for which transfer configs
   * should be returned: `projects/{project_id}` or
   * `projects/{project_id}/locations/{location_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * When specified, only configurations of requested data sources are returned.
   *
   * @generated from field: repeated string data_source_ids = 2;
   */
  dataSourceIds: string[];

  /**
   * Pagination token, which can be used to request a specific page
   * of `ListTransfersRequest` list results. For multiple-page
   * results, `ListTransfersResponse` outputs
   * a `next_page` token, which can be used as the
   * `page_token` value to request the next page of list results.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Page size. The default page size is the maximum value of 1000 results.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest.
 * Use `create(ListTransferConfigsRequestSchema)` to create a new message.
 */
export const ListTransferConfigsRequestSchema: GenMessage<ListTransferConfigsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 11);

/**
 * The returned list of pipelines in the project.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse
 */
export type ListTransferConfigsResponse = Message<"google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse"> & {
  /**
   * Output only. The stored pipeline transfer configurations.
   *
   * @generated from field: repeated google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_configs = 1;
   */
  transferConfigs: TransferConfig[];

  /**
   * Output only. The next-pagination token. For multiple-page list results,
   * this token can be used as the
   * `ListTransferConfigsRequest.page_token`
   * to request the next page of list results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse.
 * Use `create(ListTransferConfigsResponseSchema)` to create a new message.
 */
export const ListTransferConfigsResponseSchema: GenMessage<ListTransferConfigsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 12);

/**
 * A request to list data transfer runs.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest
 */
export type ListTransferRunsRequest = Message<"google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest"> & {
  /**
   * Required. Name of transfer configuration for which transfer runs should be
   * retrieved. Format of transfer configuration resource name is:
   * `projects/{project_id}/transferConfigs/{config_id}` or
   * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * When specified, only transfer runs with requested states are returned.
   *
   * @generated from field: repeated google.cloud.bigquery.datatransfer.v1.TransferState states = 2;
   */
  states: TransferState[];

  /**
   * Pagination token, which can be used to request a specific page
   * of `ListTransferRunsRequest` list results. For multiple-page
   * results, `ListTransferRunsResponse` outputs
   * a `next_page` token, which can be used as the
   * `page_token` value to request the next page of list results.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Page size. The default page size is the maximum value of 1000 results.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * Indicates how run attempts are to be pulled.
   *
   * @generated from field: google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.RunAttempt run_attempt = 5;
   */
  runAttempt: ListTransferRunsRequest_RunAttempt;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.
 * Use `create(ListTransferRunsRequestSchema)` to create a new message.
 */
export const ListTransferRunsRequestSchema: GenMessage<ListTransferRunsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 13);

/**
 * Represents which runs should be pulled.
 *
 * @generated from enum google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.RunAttempt
 */
export enum ListTransferRunsRequest_RunAttempt {
  /**
   * All runs should be returned.
   *
   * @generated from enum value: RUN_ATTEMPT_UNSPECIFIED = 0;
   */
  RUN_ATTEMPT_UNSPECIFIED = 0,

  /**
   * Only latest run per day should be returned.
   *
   * @generated from enum value: LATEST = 1;
   */
  LATEST = 1,
}

/**
 * Describes the enum google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.RunAttempt.
 */
export const ListTransferRunsRequest_RunAttemptSchema: GenEnum<ListTransferRunsRequest_RunAttempt> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 13, 0);

/**
 * The returned list of pipelines in the project.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse
 */
export type ListTransferRunsResponse = Message<"google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse"> & {
  /**
   * Output only. The stored pipeline transfer runs.
   *
   * @generated from field: repeated google.cloud.bigquery.datatransfer.v1.TransferRun transfer_runs = 1;
   */
  transferRuns: TransferRun[];

  /**
   * Output only. The next-pagination token. For multiple-page list results,
   * this token can be used as the
   * `ListTransferRunsRequest.page_token`
   * to request the next page of list results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse.
 * Use `create(ListTransferRunsResponseSchema)` to create a new message.
 */
export const ListTransferRunsResponseSchema: GenMessage<ListTransferRunsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 14);

/**
 * A request to get user facing log messages associated with data transfer run.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest
 */
export type ListTransferLogsRequest = Message<"google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest"> & {
  /**
   * Required. Transfer run name in the form:
   * `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or
   * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Pagination token, which can be used to request a specific page
   * of `ListTransferLogsRequest` list results. For multiple-page
   * results, `ListTransferLogsResponse` outputs
   * a `next_page` token, which can be used as the
   * `page_token` value to request the next page of list results.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Page size. The default page size is the maximum value of 1000 results.
   *
   * @generated from field: int32 page_size = 5;
   */
  pageSize: number;

  /**
   * Message types to return. If not populated - INFO, WARNING and ERROR
   * messages are returned.
   *
   * @generated from field: repeated google.cloud.bigquery.datatransfer.v1.TransferMessage.MessageSeverity message_types = 6;
   */
  messageTypes: TransferMessage_MessageSeverity[];
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest.
 * Use `create(ListTransferLogsRequestSchema)` to create a new message.
 */
export const ListTransferLogsRequestSchema: GenMessage<ListTransferLogsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 15);

/**
 * The returned list transfer run messages.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse
 */
export type ListTransferLogsResponse = Message<"google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse"> & {
  /**
   * Output only. The stored pipeline transfer messages.
   *
   * @generated from field: repeated google.cloud.bigquery.datatransfer.v1.TransferMessage transfer_messages = 1;
   */
  transferMessages: TransferMessage[];

  /**
   * Output only. The next-pagination token. For multiple-page list results,
   * this token can be used as the
   * `GetTransferRunLogRequest.page_token`
   * to request the next page of list results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse.
 * Use `create(ListTransferLogsResponseSchema)` to create a new message.
 */
export const ListTransferLogsResponseSchema: GenMessage<ListTransferLogsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 16);

/**
 * A request to determine whether the user has valid credentials. This method
 * is used to limit the number of OAuth popups in the user interface. The
 * user id is inferred from the API call context.
 * If the data source has the Google+ authorization type, this method
 * returns false, as it cannot be determined whether the credentials are
 * already valid merely based on the user id.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest
 */
export type CheckValidCredsRequest = Message<"google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest"> & {
  /**
   * Required. The data source in the form:
   * `projects/{project_id}/dataSources/{data_source_id}` or
   * `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest.
 * Use `create(CheckValidCredsRequestSchema)` to create a new message.
 */
export const CheckValidCredsRequestSchema: GenMessage<CheckValidCredsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 17);

/**
 * A response indicating whether the credentials exist and are valid.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse
 */
export type CheckValidCredsResponse = Message<"google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse"> & {
  /**
   * If set to `true`, the credentials exist and are valid.
   *
   * @generated from field: bool has_valid_creds = 1;
   */
  hasValidCreds: boolean;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse.
 * Use `create(CheckValidCredsResponseSchema)` to create a new message.
 */
export const CheckValidCredsResponseSchema: GenMessage<CheckValidCredsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 18);

/**
 * A request to schedule transfer runs for a time range.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest
 */
export type ScheduleTransferRunsRequest = Message<"google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest"> & {
  /**
   * Required. Transfer configuration name in the form:
   * `projects/{project_id}/transferConfigs/{config_id}` or
   * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Start time of the range of transfer runs. For example,
   * `"2017-05-25T00:00:00+00:00"`.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * Required. End time of the range of transfer runs. For example,
   * `"2017-05-30T00:00:00+00:00"`.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest.
 * Use `create(ScheduleTransferRunsRequestSchema)` to create a new message.
 */
export const ScheduleTransferRunsRequestSchema: GenMessage<ScheduleTransferRunsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 19);

/**
 * A response to schedule transfer runs for a time range.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse
 */
export type ScheduleTransferRunsResponse = Message<"google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse"> & {
  /**
   * The transfer runs that were scheduled.
   *
   * @generated from field: repeated google.cloud.bigquery.datatransfer.v1.TransferRun runs = 1;
   */
  runs: TransferRun[];
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse.
 * Use `create(ScheduleTransferRunsResponseSchema)` to create a new message.
 */
export const ScheduleTransferRunsResponseSchema: GenMessage<ScheduleTransferRunsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 20);

/**
 * A request to start manual transfer runs.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsRequest
 */
export type StartManualTransferRunsRequest = Message<"google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsRequest"> & {
  /**
   * Required. Transfer configuration name in the form:
   * `projects/{project_id}/transferConfigs/{config_id}` or
   * `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The requested time specification - this can be a time range or a specific
   * run_time.
   *
   * @generated from oneof google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsRequest.time
   */
  time: {
    /**
     * A time_range start and end timestamp for historical data files or reports
     * that are scheduled to be transferred by the scheduled transfer run.
     * requested_time_range must be a past time and cannot include future time
     * values.
     *
     * @generated from field: google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsRequest.TimeRange requested_time_range = 3;
     */
    value: StartManualTransferRunsRequest_TimeRange;
    case: "requestedTimeRange";
  } | {
    /**
     * A run_time timestamp for historical data files or reports
     * that are scheduled to be transferred by the scheduled transfer run.
     * requested_run_time must be a past time and cannot include future time
     * values.
     *
     * @generated from field: google.protobuf.Timestamp requested_run_time = 4;
     */
    value: Timestamp;
    case: "requestedRunTime";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsRequest.
 * Use `create(StartManualTransferRunsRequestSchema)` to create a new message.
 */
export const StartManualTransferRunsRequestSchema: GenMessage<StartManualTransferRunsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 21);

/**
 * A specification for a time range, this will request transfer runs with
 * run_time between start_time (inclusive) and end_time (exclusive).
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsRequest.TimeRange
 */
export type StartManualTransferRunsRequest_TimeRange = Message<"google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsRequest.TimeRange"> & {
  /**
   * Start time of the range of transfer runs. For example,
   * `"2017-05-25T00:00:00+00:00"`. The start_time must be strictly less than
   * the end_time. Creates transfer runs where run_time is in the range
   * between start_time (inclusive) and end_time (exclusive).
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * End time of the range of transfer runs. For example,
   * `"2017-05-30T00:00:00+00:00"`. The end_time must not be in the future.
   * Creates transfer runs where run_time is in the range between start_time
   * (inclusive) and end_time (exclusive).
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsRequest.TimeRange.
 * Use `create(StartManualTransferRunsRequest_TimeRangeSchema)` to create a new message.
 */
export const StartManualTransferRunsRequest_TimeRangeSchema: GenMessage<StartManualTransferRunsRequest_TimeRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 21, 0);

/**
 * A response to start manual transfer runs.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsResponse
 */
export type StartManualTransferRunsResponse = Message<"google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsResponse"> & {
  /**
   * The transfer runs that were created.
   *
   * @generated from field: repeated google.cloud.bigquery.datatransfer.v1.TransferRun runs = 1;
   */
  runs: TransferRun[];
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.StartManualTransferRunsResponse.
 * Use `create(StartManualTransferRunsResponseSchema)` to create a new message.
 */
export const StartManualTransferRunsResponseSchema: GenMessage<StartManualTransferRunsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 22);

/**
 * A request to enroll a set of data sources so they are visible in the
 * BigQuery UI's `Transfer` tab.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.EnrollDataSourcesRequest
 */
export type EnrollDataSourcesRequest = Message<"google.cloud.bigquery.datatransfer.v1.EnrollDataSourcesRequest"> & {
  /**
   * Required. The name of the project resource in the form:
   * `projects/{project_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Data sources that are enrolled. It is required to provide at least one
   * data source id.
   *
   * @generated from field: repeated string data_source_ids = 2;
   */
  dataSourceIds: string[];
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.EnrollDataSourcesRequest.
 * Use `create(EnrollDataSourcesRequestSchema)` to create a new message.
 */
export const EnrollDataSourcesRequestSchema: GenMessage<EnrollDataSourcesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 23);

/**
 * A request to unenroll a set of data sources so they are no longer visible in
 * the BigQuery UI's `Transfer` tab.
 *
 * @generated from message google.cloud.bigquery.datatransfer.v1.UnenrollDataSourcesRequest
 */
export type UnenrollDataSourcesRequest = Message<"google.cloud.bigquery.datatransfer.v1.UnenrollDataSourcesRequest"> & {
  /**
   * Required. The name of the project resource in the form:
   * `projects/{project_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Data sources that are unenrolled. It is required to provide at least one
   * data source id.
   *
   * @generated from field: repeated string data_source_ids = 2;
   */
  dataSourceIds: string[];
};

/**
 * Describes the message google.cloud.bigquery.datatransfer.v1.UnenrollDataSourcesRequest.
 * Use `create(UnenrollDataSourcesRequestSchema)` to create a new message.
 */
export const UnenrollDataSourcesRequestSchema: GenMessage<UnenrollDataSourcesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 24);

/**
 * This API allows users to manage their data transfers into BigQuery.
 *
 * @generated from service google.cloud.bigquery.datatransfer.v1.DataTransferService
 */
export const DataTransferService: GenService<{
  /**
   * Retrieves a supported data source and returns its settings.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.GetDataSource
   */
  getDataSource: {
    methodKind: "unary";
    input: typeof GetDataSourceRequestSchema;
    output: typeof DataSourceSchema;
  },
  /**
   * Lists supported data sources and returns their settings.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.ListDataSources
   */
  listDataSources: {
    methodKind: "unary";
    input: typeof ListDataSourcesRequestSchema;
    output: typeof ListDataSourcesResponseSchema;
  },
  /**
   * Creates a new data transfer configuration.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.CreateTransferConfig
   */
  createTransferConfig: {
    methodKind: "unary";
    input: typeof CreateTransferConfigRequestSchema;
    output: typeof TransferConfigSchema;
  },
  /**
   * Updates a data transfer configuration.
   * All fields must be set, even if they are not updated.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.UpdateTransferConfig
   */
  updateTransferConfig: {
    methodKind: "unary";
    input: typeof UpdateTransferConfigRequestSchema;
    output: typeof TransferConfigSchema;
  },
  /**
   * Deletes a data transfer configuration, including any associated transfer
   * runs and logs.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.DeleteTransferConfig
   */
  deleteTransferConfig: {
    methodKind: "unary";
    input: typeof DeleteTransferConfigRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Returns information about a data transfer config.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.GetTransferConfig
   */
  getTransferConfig: {
    methodKind: "unary";
    input: typeof GetTransferConfigRequestSchema;
    output: typeof TransferConfigSchema;
  },
  /**
   * Returns information about all transfer configs owned by a project in the
   * specified location.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.ListTransferConfigs
   */
  listTransferConfigs: {
    methodKind: "unary";
    input: typeof ListTransferConfigsRequestSchema;
    output: typeof ListTransferConfigsResponseSchema;
  },
  /**
   * Creates transfer runs for a time range [start_time, end_time].
   * For each date - or whatever granularity the data source supports - in the
   * range, one transfer run is created.
   * Note that runs are created per UTC time in the time range.
   * DEPRECATED: use StartManualTransferRuns instead.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.ScheduleTransferRuns
   * @deprecated
   */
  scheduleTransferRuns: {
    methodKind: "unary";
    input: typeof ScheduleTransferRunsRequestSchema;
    output: typeof ScheduleTransferRunsResponseSchema;
  },
  /**
   * Start manual transfer runs to be executed now with schedule_time equal to
   * current time. The transfer runs can be created for a time range where the
   * run_time is between start_time (inclusive) and end_time (exclusive), or for
   * a specific run_time.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.StartManualTransferRuns
   */
  startManualTransferRuns: {
    methodKind: "unary";
    input: typeof StartManualTransferRunsRequestSchema;
    output: typeof StartManualTransferRunsResponseSchema;
  },
  /**
   * Returns information about the particular transfer run.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.GetTransferRun
   */
  getTransferRun: {
    methodKind: "unary";
    input: typeof GetTransferRunRequestSchema;
    output: typeof TransferRunSchema;
  },
  /**
   * Deletes the specified transfer run.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.DeleteTransferRun
   */
  deleteTransferRun: {
    methodKind: "unary";
    input: typeof DeleteTransferRunRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Returns information about running and completed transfer runs.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.ListTransferRuns
   */
  listTransferRuns: {
    methodKind: "unary";
    input: typeof ListTransferRunsRequestSchema;
    output: typeof ListTransferRunsResponseSchema;
  },
  /**
   * Returns log messages for the transfer run.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.ListTransferLogs
   */
  listTransferLogs: {
    methodKind: "unary";
    input: typeof ListTransferLogsRequestSchema;
    output: typeof ListTransferLogsResponseSchema;
  },
  /**
   * Returns true if valid credentials exist for the given data source and
   * requesting user.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.CheckValidCreds
   */
  checkValidCreds: {
    methodKind: "unary";
    input: typeof CheckValidCredsRequestSchema;
    output: typeof CheckValidCredsResponseSchema;
  },
  /**
   * Enroll data sources in a user project. This allows users to create transfer
   * configurations for these data sources. They will also appear in the
   * ListDataSources RPC and as such, will appear in the
   * [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents
   * can be found in the public guide for
   * [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and
   * [Data Transfer
   * Service](https://cloud.google.com/bigquery/docs/working-with-transfers).
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.EnrollDataSources
   */
  enrollDataSources: {
    methodKind: "unary";
    input: typeof EnrollDataSourcesRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Unenroll data sources in a user project. This allows users to remove
   * transfer configurations for these data sources. They will no longer appear
   * in the ListDataSources RPC and will also no longer appear in the [BigQuery
   * UI](https://console.cloud.google.com/bigquery). Data transfers
   * configurations of unenrolled data sources will not be scheduled.
   *
   * @generated from rpc google.cloud.bigquery.datatransfer.v1.DataTransferService.UnenrollDataSources
   */
  unenrollDataSources: {
    methodKind: "unary";
    input: typeof UnenrollDataSourcesRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_bigquery_datatransfer_v1_datatransfer, 0);

