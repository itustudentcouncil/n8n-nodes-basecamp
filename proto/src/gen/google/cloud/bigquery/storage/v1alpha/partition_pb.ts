// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/bigquery/storage/v1alpha/partition.proto (package google.cloud.bigquery.storage.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/bigquery/storage/v1alpha/partition.proto.
 */
export const file_google_cloud_bigquery_storage_v1alpha_partition: GenFile = /*@__PURE__*/
  fileDesc("CjVnb29nbGUvY2xvdWQvYmlncXVlcnkvc3RvcmFnZS92MWFscGhhL3BhcnRpdGlvbi5wcm90bxIlZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFhbHBoYSIzCgtGaWVsZFNjaGVtYRIRCgRuYW1lGAEgASgJQgPgQQISEQoEdHlwZRgCIAEoCUID4EECIrABChFTdG9yYWdlRGVzY3JpcHRvchIZCgxsb2NhdGlvbl91cmkYASABKAlCA+BBARIZCgxpbnB1dF9mb3JtYXQYAiABKAlCA+BBARIaCg1vdXRwdXRfZm9ybWF0GAMgASgJQgPgQQESSQoKc2VyZGVfaW5mbxgEIAEoCzIwLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYWxwaGEuU2VyRGVJbmZvQgPgQQEi0AEKCVNlckRlSW5mbxIRCgRuYW1lGAEgASgJQgPgQQESIgoVc2VyaWFsaXphdGlvbl9saWJyYXJ5GAIgASgJQgPgQQISWQoKcGFyYW1ldGVycxgDIAMoCzJALmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYWxwaGEuU2VyRGVJbmZvLlBhcmFtZXRlcnNFbnRyeUID4EEBGjEKD1BhcmFtZXRlcnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIpoDChJNZXRhc3RvcmVQYXJ0aXRpb24SEwoGdmFsdWVzGAEgAygJQgPgQQISNAoLY3JlYXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSWQoSc3RvcmFnZV9kZXNjcmlwdG9yGAMgASgLMjguZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFhbHBoYS5TdG9yYWdlRGVzY3JpcHRvckID4EEBEmIKCnBhcmFtZXRlcnMYBCADKAsySS5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWFscGhhLk1ldGFzdG9yZVBhcnRpdGlvbi5QYXJhbWV0ZXJzRW50cnlCA+BBARJHCgZmaWVsZHMYBSADKAsyMi5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWFscGhhLkZpZWxkU2NoZW1hQgPgQQEaMQoPUGFyYW1ldGVyc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEibAoWTWV0YXN0b3JlUGFydGl0aW9uTGlzdBJSCgpwYXJ0aXRpb25zGAEgAygLMjkuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFhbHBoYS5NZXRhc3RvcmVQYXJ0aXRpb25CA+BBAiK6AQoKUmVhZFN0cmVhbRIUCgRuYW1lGAEgASgJQgbgQQPgQQg6lQHqQZEBCiliaWdxdWVyeXN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vUmVhZFN0cmVhbRJLcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3Nlc3Npb25zL3tzZXNzaW9ufS9zdHJlYW1zL3tzdHJlYW19KgtyZWFkU3RyZWFtczIKcmVhZFN0cmVhbSJVCgpTdHJlYW1MaXN0EkcKB3N0cmVhbXMYASADKAsyMS5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWFscGhhLlJlYWRTdHJlYW1CA+BBAyIvChhNZXRhc3RvcmVQYXJ0aXRpb25WYWx1ZXMSEwoGdmFsdWVzGAEgAygJQgPgQQJC2wEKKWNvbS5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWFscGhhQhdNZXRhc3RvcmVQYXJ0aXRpb25Qcm90b1ABWkNjbG91ZC5nb29nbGUuY29tL2dvL2JpZ3F1ZXJ5L3N0b3JhZ2UvYXBpdjFhbHBoYS9zdG9yYWdlcGI7c3RvcmFnZXBiqgIlR29vZ2xlLkNsb3VkLkJpZ1F1ZXJ5LlN0b3JhZ2UuVjFBbHBoYcoCJUdvb2dsZVxDbG91ZFxCaWdRdWVyeVxTdG9yYWdlXFYxYWxwaGFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_timestamp]);

/**
 * Schema description of a metastore partition column.
 *
 * @generated from message google.cloud.bigquery.storage.v1alpha.FieldSchema
 */
export type FieldSchema = Message<"google.cloud.bigquery.storage.v1alpha.FieldSchema"> & {
  /**
   * Required. The name of the column.
   * The maximum length of the name is 1024 characters
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The type of the metastore partition column. Maximum allowed
   * length is 1024 characters.
   *
   * @generated from field: string type = 2;
   */
  type: string;
};

/**
 * Describes the message google.cloud.bigquery.storage.v1alpha.FieldSchema.
 * Use `create(FieldSchemaSchema)` to create a new message.
 */
export const FieldSchemaSchema: GenMessage<FieldSchema> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1alpha_partition, 0);

/**
 * Contains information about the physical storage of the data in the metastore
 * partition.
 *
 * @generated from message google.cloud.bigquery.storage.v1alpha.StorageDescriptor
 */
export type StorageDescriptor = Message<"google.cloud.bigquery.storage.v1alpha.StorageDescriptor"> & {
  /**
   * Optional. The physical location of the metastore partition
   * (e.g. `gs://spark-dataproc-data/pangea-data/case_sensitive/` or
   * `gs://spark-dataproc-data/pangea-data/*`).
   *
   * @generated from field: string location_uri = 1;
   */
  locationUri: string;

  /**
   * Optional. Specifies the fully qualified class name of the InputFormat
   * (e.g. "org.apache.hadoop.hive.ql.io.orc.OrcInputFormat").
   * The maximum length is 128 characters.
   *
   * @generated from field: string input_format = 2;
   */
  inputFormat: string;

  /**
   * Optional. Specifies the fully qualified class name of the OutputFormat
   * (e.g. "org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat").
   * The maximum length is 128 characters.
   *
   * @generated from field: string output_format = 3;
   */
  outputFormat: string;

  /**
   * Optional. Serializer and deserializer information.
   *
   * @generated from field: google.cloud.bigquery.storage.v1alpha.SerDeInfo serde_info = 4;
   */
  serdeInfo?: SerDeInfo;
};

/**
 * Describes the message google.cloud.bigquery.storage.v1alpha.StorageDescriptor.
 * Use `create(StorageDescriptorSchema)` to create a new message.
 */
export const StorageDescriptorSchema: GenMessage<StorageDescriptor> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1alpha_partition, 1);

/**
 * Serializer and deserializer information.
 *
 * @generated from message google.cloud.bigquery.storage.v1alpha.SerDeInfo
 */
export type SerDeInfo = Message<"google.cloud.bigquery.storage.v1alpha.SerDeInfo"> & {
  /**
   * Optional. Name of the SerDe.
   * The maximum length is 256 characters.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Specifies a fully-qualified class name of the serialization
   * library that is responsible for the translation of data between table
   * representation and the underlying low-level input and output format
   * structures. The maximum length is 256 characters.
   *
   * @generated from field: string serialization_library = 2;
   */
  serializationLibrary: string;

  /**
   * Optional. Key-value pairs that define the initialization parameters for the
   * serialization library.
   * Maximum size 10 Kib.
   *
   * @generated from field: map<string, string> parameters = 3;
   */
  parameters: { [key: string]: string };
};

/**
 * Describes the message google.cloud.bigquery.storage.v1alpha.SerDeInfo.
 * Use `create(SerDeInfoSchema)` to create a new message.
 */
export const SerDeInfoSchema: GenMessage<SerDeInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1alpha_partition, 2);

/**
 * Information about a Hive partition.
 *
 * @generated from message google.cloud.bigquery.storage.v1alpha.MetastorePartition
 */
export type MetastorePartition = Message<"google.cloud.bigquery.storage.v1alpha.MetastorePartition"> & {
  /**
   * Required. Represents the values of the partition keys, where each value
   * corresponds to a specific partition key in the order in which the keys are
   * defined. Each value is limited to 1024 characters.
   *
   * @generated from field: repeated string values = 1;
   */
  values: string[];

  /**
   * Output only. The creation time of the partition.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Optional. Contains information about the physical storage of the data in
   * the partition.
   *
   * @generated from field: google.cloud.bigquery.storage.v1alpha.StorageDescriptor storage_descriptor = 3;
   */
  storageDescriptor?: StorageDescriptor;

  /**
   * Optional. Additional parameters or metadata associated with the partition.
   * Maximum size 10 KiB.
   *
   * @generated from field: map<string, string> parameters = 4;
   */
  parameters: { [key: string]: string };

  /**
   * Optional. List of columns.
   *
   * @generated from field: repeated google.cloud.bigquery.storage.v1alpha.FieldSchema fields = 5;
   */
  fields: FieldSchema[];
};

/**
 * Describes the message google.cloud.bigquery.storage.v1alpha.MetastorePartition.
 * Use `create(MetastorePartitionSchema)` to create a new message.
 */
export const MetastorePartitionSchema: GenMessage<MetastorePartition> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1alpha_partition, 3);

/**
 * List of metastore partitions.
 *
 * @generated from message google.cloud.bigquery.storage.v1alpha.MetastorePartitionList
 */
export type MetastorePartitionList = Message<"google.cloud.bigquery.storage.v1alpha.MetastorePartitionList"> & {
  /**
   * Required. List of partitions.
   *
   * @generated from field: repeated google.cloud.bigquery.storage.v1alpha.MetastorePartition partitions = 1;
   */
  partitions: MetastorePartition[];
};

/**
 * Describes the message google.cloud.bigquery.storage.v1alpha.MetastorePartitionList.
 * Use `create(MetastorePartitionListSchema)` to create a new message.
 */
export const MetastorePartitionListSchema: GenMessage<MetastorePartitionList> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1alpha_partition, 4);

/**
 * Information about a single stream that is used to read partitions.
 *
 * @generated from message google.cloud.bigquery.storage.v1alpha.ReadStream
 */
export type ReadStream = Message<"google.cloud.bigquery.storage.v1alpha.ReadStream"> & {
  /**
   * Output only. Identifier. Name of the stream, in the form
   * `projects/{project_id}/locations/{location}/sessions/{session_id}/streams/{stream_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.storage.v1alpha.ReadStream.
 * Use `create(ReadStreamSchema)` to create a new message.
 */
export const ReadStreamSchema: GenMessage<ReadStream> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1alpha_partition, 5);

/**
 * List of streams.
 *
 * @generated from message google.cloud.bigquery.storage.v1alpha.StreamList
 */
export type StreamList = Message<"google.cloud.bigquery.storage.v1alpha.StreamList"> & {
  /**
   * Output only. List of streams.
   *
   * @generated from field: repeated google.cloud.bigquery.storage.v1alpha.ReadStream streams = 1;
   */
  streams: ReadStream[];
};

/**
 * Describes the message google.cloud.bigquery.storage.v1alpha.StreamList.
 * Use `create(StreamListSchema)` to create a new message.
 */
export const StreamListSchema: GenMessage<StreamList> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1alpha_partition, 6);

/**
 * Represents the values of a metastore partition.
 *
 * @generated from message google.cloud.bigquery.storage.v1alpha.MetastorePartitionValues
 */
export type MetastorePartitionValues = Message<"google.cloud.bigquery.storage.v1alpha.MetastorePartitionValues"> & {
  /**
   * Required. The values of the partition keys, where each value corresponds to
   * a specific partition key in the order in which the keys are defined.
   *
   * @generated from field: repeated string values = 1;
   */
  values: string[];
};

/**
 * Describes the message google.cloud.bigquery.storage.v1alpha.MetastorePartitionValues.
 * Use `create(MetastorePartitionValuesSchema)` to create a new message.
 */
export const MetastorePartitionValuesSchema: GenMessage<MetastorePartitionValues> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1alpha_partition, 7);

