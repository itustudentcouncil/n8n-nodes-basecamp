// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/bigquery/storage/v1beta2/stream.proto (package google.cloud.bigquery.storage.v1beta2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { ArrowSchema, ArrowSerializationOptions } from "./arrow_pb";
import { file_google_cloud_bigquery_storage_v1beta2_arrow } from "./arrow_pb";
import type { AvroSchema } from "./avro_pb";
import { file_google_cloud_bigquery_storage_v1beta2_avro } from "./avro_pb";
import type { TableSchema } from "./table_pb";
import { file_google_cloud_bigquery_storage_v1beta2_table } from "./table_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/bigquery/storage/v1beta2/stream.proto.
 */
export const file_google_cloud_bigquery_storage_v1beta2_stream: GenFile = /*@__PURE__*/
  fileDesc("CjJnb29nbGUvY2xvdWQvYmlncXVlcnkvc3RvcmFnZS92MWJldGEyL3N0cmVhbS5wcm90bxIlZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMiLyBwoLUmVhZFNlc3Npb24SEQoEbmFtZRgBIAEoCUID4EEDEjQKC2V4cGlyZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEksKC2RhdGFfZm9ybWF0GAMgASgOMjEuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMi5EYXRhRm9ybWF0QgPgQQUSTQoLYXZyb19zY2hlbWEYBCABKAsyMS5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyLkF2cm9TY2hlbWFCA+BBA0gAEk8KDGFycm93X3NjaGVtYRgFIAEoCzIyLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTIuQXJyb3dTY2hlbWFCA+BBA0gAEjQKBXRhYmxlGAYgASgJQiXgQQX6QR8KHWJpZ3F1ZXJ5Lmdvb2dsZWFwaXMuY29tL1RhYmxlEl8KD3RhYmxlX21vZGlmaWVycxgHIAEoCzJBLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTIuUmVhZFNlc3Npb24uVGFibGVNb2RpZmllcnNCA+BBARJeCgxyZWFkX29wdGlvbnMYCCABKAsyQy5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyLlJlYWRTZXNzaW9uLlRhYmxlUmVhZE9wdGlvbnNCA+BBARJHCgdzdHJlYW1zGAogAygLMjEuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMi5SZWFkU3RyZWFtQgPgQQMaQwoOVGFibGVNb2RpZmllcnMSMQoNc25hcHNob3RfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAasAEKEFRhYmxlUmVhZE9wdGlvbnMSFwoPc2VsZWN0ZWRfZmllbGRzGAEgAygJEhcKD3Jvd19yZXN0cmljdGlvbhgCIAEoCRJqChthcnJvd19zZXJpYWxpemF0aW9uX29wdGlvbnMYAyABKAsyQC5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyLkFycm93U2VyaWFsaXphdGlvbk9wdGlvbnNCA+BBATpr6kFoCipiaWdxdWVyeXN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vUmVhZFNlc3Npb24SOnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9zZXNzaW9ucy97c2Vzc2lvbn1CCAoGc2NoZW1hIpwBCgpSZWFkU3RyZWFtEhEKBG5hbWUYASABKAlCA+BBAzp76kF4CiliaWdxdWVyeXN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vUmVhZFN0cmVhbRJLcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3Nlc3Npb25zL3tzZXNzaW9ufS9zdHJlYW1zL3tzdHJlYW19IucDCgtXcml0ZVN0cmVhbRIRCgRuYW1lGAEgASgJQgPgQQMSSgoEdHlwZRgCIAEoDjI3Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTIuV3JpdGVTdHJlYW0uVHlwZUID4EEFEjQKC2NyZWF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC2NvbW1pdF90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEk0KDHRhYmxlX3NjaGVtYRgFIAEoCzIyLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTIuVGFibGVTY2hlbWFCA+BBAyJGCgRUeXBlEhQKEFRZUEVfVU5TUEVDSUZJRUQQABINCglDT01NSVRURUQQARILCgdQRU5ESU5HEAISDAoIQlVGRkVSRUQQAzp26kFzCipiaWdxdWVyeXN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vV3JpdGVTdHJlYW0SRXByb2plY3RzL3twcm9qZWN0fS9kYXRhc2V0cy97ZGF0YXNldH0vdGFibGVzL3t0YWJsZX0vc3RyZWFtcy97c3RyZWFtfSo+CgpEYXRhRm9ybWF0EhsKF0RBVEFfRk9STUFUX1VOU1BFQ0lGSUVEEAASCAoEQVZSTxABEgkKBUFSUk9XEAJC1wEKKWNvbS5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyQgtTdHJlYW1Qcm90b1ABWkNjbG91ZC5nb29nbGUuY29tL2dvL2JpZ3F1ZXJ5L3N0b3JhZ2UvYXBpdjFiZXRhMi9zdG9yYWdlcGI7c3RvcmFnZXBi6kFVCh1iaWdxdWVyeS5nb29nbGVhcGlzLmNvbS9UYWJsZRI0cHJvamVjdHMve3Byb2plY3R9L2RhdGFzZXRzL3tkYXRhc2V0fS90YWJsZXMve3RhYmxlfWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_bigquery_storage_v1beta2_arrow, file_google_cloud_bigquery_storage_v1beta2_avro, file_google_cloud_bigquery_storage_v1beta2_table, file_google_protobuf_timestamp]);

/**
 * Information about the ReadSession.
 *
 * @generated from message google.cloud.bigquery.storage.v1beta2.ReadSession
 */
export type ReadSession = Message<"google.cloud.bigquery.storage.v1beta2.ReadSession"> & {
  /**
   * Output only. Unique identifier for the session, in the form
   * `projects/{project_id}/locations/{location}/sessions/{session_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Time at which the session becomes invalid. After this time, subsequent
   * requests to read this Session will return errors. The expire_time is
   * automatically assigned and currently cannot be specified or updated.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 2;
   */
  expireTime?: Timestamp;

  /**
   * Immutable. Data format of the output data.
   *
   * @generated from field: google.cloud.bigquery.storage.v1beta2.DataFormat data_format = 3;
   */
  dataFormat: DataFormat;

  /**
   * The schema for the read. If read_options.selected_fields is set, the
   * schema may be different from the table schema as it will only contain
   * the selected fields.
   *
   * @generated from oneof google.cloud.bigquery.storage.v1beta2.ReadSession.schema
   */
  schema: {
    /**
     * Output only. Avro schema.
     *
     * @generated from field: google.cloud.bigquery.storage.v1beta2.AvroSchema avro_schema = 4;
     */
    value: AvroSchema;
    case: "avroSchema";
  } | {
    /**
     * Output only. Arrow schema.
     *
     * @generated from field: google.cloud.bigquery.storage.v1beta2.ArrowSchema arrow_schema = 5;
     */
    value: ArrowSchema;
    case: "arrowSchema";
  } | { case: undefined; value?: undefined };

  /**
   * Immutable. Table that this ReadSession is reading from, in the form
   * `projects/{project_id}/datasets/{dataset_id}/tables/{table_id}
   *
   * @generated from field: string table = 6;
   */
  table: string;

  /**
   * Optional. Any modifiers which are applied when reading from the specified table.
   *
   * @generated from field: google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers table_modifiers = 7;
   */
  tableModifiers?: ReadSession_TableModifiers;

  /**
   * Optional. Read options for this session (e.g. column selection, filters).
   *
   * @generated from field: google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions read_options = 8;
   */
  readOptions?: ReadSession_TableReadOptions;

  /**
   * Output only. A list of streams created with the session.
   *
   * At least one stream is created with the session. In the future, larger
   * request_stream_count values *may* result in this list being unpopulated,
   * in that case, the user will need to use a List method to get the streams
   * instead, which is not yet available.
   *
   * @generated from field: repeated google.cloud.bigquery.storage.v1beta2.ReadStream streams = 10;
   */
  streams: ReadStream[];
};

/**
 * Describes the message google.cloud.bigquery.storage.v1beta2.ReadSession.
 * Use `create(ReadSessionSchema)` to create a new message.
 */
export const ReadSessionSchema: GenMessage<ReadSession> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1beta2_stream, 0);

/**
 * Additional attributes when reading a table.
 *
 * @generated from message google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers
 */
export type ReadSession_TableModifiers = Message<"google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers"> & {
  /**
   * The snapshot time of the table. If not set, interpreted as now.
   *
   * @generated from field: google.protobuf.Timestamp snapshot_time = 1;
   */
  snapshotTime?: Timestamp;
};

/**
 * Describes the message google.cloud.bigquery.storage.v1beta2.ReadSession.TableModifiers.
 * Use `create(ReadSession_TableModifiersSchema)` to create a new message.
 */
export const ReadSession_TableModifiersSchema: GenMessage<ReadSession_TableModifiers> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1beta2_stream, 0, 0);

/**
 * Options dictating how we read a table.
 *
 * @generated from message google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions
 */
export type ReadSession_TableReadOptions = Message<"google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions"> & {
  /**
   * Names of the fields in the table that should be read. If empty, all
   * fields will be read. If the specified field is a nested field, all
   * the sub-fields in the field will be selected. The output field order is
   * unrelated to the order of fields in selected_fields.
   *
   * @generated from field: repeated string selected_fields = 1;
   */
  selectedFields: string[];

  /**
   * SQL text filtering statement, similar to a WHERE clause in a query.
   * Aggregates are not supported.
   *
   * Examples: "int_field > 5"
   *           "date_field = CAST('2014-9-27' as DATE)"
   *           "nullable_field is not NULL"
   *           "st_equals(geo_field, st_geofromtext("POINT(2, 2)"))"
   *           "numeric_field BETWEEN 1.0 AND 5.0"
   *
   * Restricted to a maximum length for 1 MB.
   *
   * @generated from field: string row_restriction = 2;
   */
  rowRestriction: string;

  /**
   * Optional. Options specific to the Apache Arrow output format.
   *
   * @generated from field: google.cloud.bigquery.storage.v1beta2.ArrowSerializationOptions arrow_serialization_options = 3;
   */
  arrowSerializationOptions?: ArrowSerializationOptions;
};

/**
 * Describes the message google.cloud.bigquery.storage.v1beta2.ReadSession.TableReadOptions.
 * Use `create(ReadSession_TableReadOptionsSchema)` to create a new message.
 */
export const ReadSession_TableReadOptionsSchema: GenMessage<ReadSession_TableReadOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1beta2_stream, 0, 1);

/**
 * Information about a single stream that gets data out of the storage system.
 * Most of the information about `ReadStream` instances is aggregated, making
 * `ReadStream` lightweight.
 *
 * @generated from message google.cloud.bigquery.storage.v1beta2.ReadStream
 */
export type ReadStream = Message<"google.cloud.bigquery.storage.v1beta2.ReadStream"> & {
  /**
   * Output only. Name of the stream, in the form
   * `projects/{project_id}/locations/{location}/sessions/{session_id}/streams/{stream_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.storage.v1beta2.ReadStream.
 * Use `create(ReadStreamSchema)` to create a new message.
 */
export const ReadStreamSchema: GenMessage<ReadStream> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1beta2_stream, 1);

/**
 * Information about a single stream that gets data inside the storage system.
 *
 * @generated from message google.cloud.bigquery.storage.v1beta2.WriteStream
 */
export type WriteStream = Message<"google.cloud.bigquery.storage.v1beta2.WriteStream"> & {
  /**
   * Output only. Name of the stream, in the form
   * `projects/{project}/datasets/{dataset}/tables/{table}/streams/{stream}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Immutable. Type of the stream.
   *
   * @generated from field: google.cloud.bigquery.storage.v1beta2.WriteStream.Type type = 2;
   */
  type: WriteStream_Type;

  /**
   * Output only. Create time of the stream. For the _default stream, this is the
   * creation_time of the table.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. Commit time of the stream.
   * If a stream is of `COMMITTED` type, then it will have a commit_time same as
   * `create_time`. If the stream is of `PENDING` type, commit_time being empty
   * means it is not committed.
   *
   * @generated from field: google.protobuf.Timestamp commit_time = 4;
   */
  commitTime?: Timestamp;

  /**
   * Output only. The schema of the destination table. It is only returned in
   * `CreateWriteStream` response. Caller should generate data that's
   * compatible with this schema to send in initial `AppendRowsRequest`.
   * The table schema could go out of date during the life time of the stream.
   *
   * @generated from field: google.cloud.bigquery.storage.v1beta2.TableSchema table_schema = 5;
   */
  tableSchema?: TableSchema;
};

/**
 * Describes the message google.cloud.bigquery.storage.v1beta2.WriteStream.
 * Use `create(WriteStreamSchema)` to create a new message.
 */
export const WriteStreamSchema: GenMessage<WriteStream> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_storage_v1beta2_stream, 2);

/**
 * Type enum of the stream.
 *
 * @generated from enum google.cloud.bigquery.storage.v1beta2.WriteStream.Type
 */
export enum WriteStream_Type {
  /**
   * Unknown type.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Data will commit automatically and appear as soon as the write is
   * acknowledged.
   *
   * @generated from enum value: COMMITTED = 1;
   */
  COMMITTED = 1,

  /**
   * Data is invisible until the stream is committed.
   *
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * Data is only visible up to the offset to which it was flushed.
   *
   * @generated from enum value: BUFFERED = 3;
   */
  BUFFERED = 3,
}

/**
 * Describes the enum google.cloud.bigquery.storage.v1beta2.WriteStream.Type.
 */
export const WriteStream_TypeSchema: GenEnum<WriteStream_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_storage_v1beta2_stream, 2, 0);

/**
 * Data format for input or output data.
 *
 * @generated from enum google.cloud.bigquery.storage.v1beta2.DataFormat
 */
export enum DataFormat {
  /**
   * @generated from enum value: DATA_FORMAT_UNSPECIFIED = 0;
   */
  DATA_FORMAT_UNSPECIFIED = 0,

  /**
   * Avro is a standard open source row based file format.
   * See https://avro.apache.org/ for more details.
   *
   * @generated from enum value: AVRO = 1;
   */
  AVRO = 1,

  /**
   * Arrow is a standard open source column-based message format.
   * See https://arrow.apache.org/ for more details.
   *
   * @generated from enum value: ARROW = 2;
   */
  ARROW = 2,
}

/**
 * Describes the enum google.cloud.bigquery.storage.v1beta2.DataFormat.
 */
export const DataFormatSchema: GenEnum<DataFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_storage_v1beta2_stream, 0);

