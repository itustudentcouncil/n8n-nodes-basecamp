// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/bigquery/biglake/v1/metastore.proto (package google.cloud.bigquery.biglake.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/bigquery/biglake/v1/metastore.proto.
 */
export const file_google_cloud_bigquery_biglake_v1_metastore: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Catalog is the container of databases.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.Catalog
 */
export type Catalog = Message<"google.cloud.bigquery.biglake.v1.Catalog"> & {
  /**
   * Output only. The resource name.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The creation time of the catalog.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last modification time of the catalog.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The deletion time of the catalog. Only set after the catalog
   * is deleted.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 4;
   */
  deleteTime?: Timestamp;

  /**
   * Output only. The time when this catalog is considered expired. Only set
   * after the catalog is deleted.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 5;
   */
  expireTime?: Timestamp;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.Catalog.
 * Use `create(CatalogSchema)` to create a new message.
 */
export const CatalogSchema: GenMessage<Catalog> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 0);

/**
 * Database is the container of tables.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.Database
 */
export type Database = Message<"google.cloud.bigquery.biglake.v1.Database"> & {
  /**
   * Options specified for the database type.
   *
   * @generated from oneof google.cloud.bigquery.biglake.v1.Database.options
   */
  options: {
    /**
     * Options of a Hive database.
     *
     * @generated from field: google.cloud.bigquery.biglake.v1.HiveDatabaseOptions hive_options = 7;
     */
    value: HiveDatabaseOptions;
    case: "hiveOptions";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The resource name.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The creation time of the database.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last modification time of the database.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The deletion time of the database. Only set after the database
   * is deleted.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 4;
   */
  deleteTime?: Timestamp;

  /**
   * Output only. The time when this database is considered expired. Only set
   * after the database is deleted.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 5;
   */
  expireTime?: Timestamp;

  /**
   * The database type.
   *
   * @generated from field: google.cloud.bigquery.biglake.v1.Database.Type type = 6;
   */
  type: Database_Type;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.Database.
 * Use `create(DatabaseSchema)` to create a new message.
 */
export const DatabaseSchema: GenMessage<Database> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 1);

/**
 * The database type.
 *
 * @generated from enum google.cloud.bigquery.biglake.v1.Database.Type
 */
export enum Database_Type {
  /**
   * The type is not specified.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Represents a database storing tables compatible with Hive Metastore
   * tables.
   *
   * @generated from enum value: HIVE = 1;
   */
  HIVE = 1,
}

/**
 * Describes the enum google.cloud.bigquery.biglake.v1.Database.Type.
 */
export const Database_TypeSchema: GenEnum<Database_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_biglake_v1_metastore, 1, 0);

/**
 * Represents a table.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.Table
 */
export type Table = Message<"google.cloud.bigquery.biglake.v1.Table"> & {
  /**
   * Options specified for the table type.
   *
   * @generated from oneof google.cloud.bigquery.biglake.v1.Table.options
   */
  options: {
    /**
     * Options of a Hive table.
     *
     * @generated from field: google.cloud.bigquery.biglake.v1.HiveTableOptions hive_options = 7;
     */
    value: HiveTableOptions;
    case: "hiveOptions";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The resource name.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The creation time of the table.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last modification time of the table.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The deletion time of the table. Only set after the table is
   * deleted.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 4;
   */
  deleteTime?: Timestamp;

  /**
   * Output only. The time when this table is considered expired. Only set after
   * the table is deleted.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 5;
   */
  expireTime?: Timestamp;

  /**
   * The table type.
   *
   * @generated from field: google.cloud.bigquery.biglake.v1.Table.Type type = 6;
   */
  type: Table_Type;

  /**
   * The checksum of a table object computed by the server based on the value of
   * other fields. It may be sent on update requests to ensure the client has an
   * up-to-date value before proceeding. It is only checked for update table
   * operations.
   *
   * @generated from field: string etag = 8;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.Table.
 * Use `create(TableSchema)` to create a new message.
 */
export const TableSchema: GenMessage<Table> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 2);

/**
 * The table type.
 *
 * @generated from enum google.cloud.bigquery.biglake.v1.Table.Type
 */
export enum Table_Type {
  /**
   * The type is not specified.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Represents a table compatible with Hive Metastore tables.
   *
   * @generated from enum value: HIVE = 1;
   */
  HIVE = 1,
}

/**
 * Describes the enum google.cloud.bigquery.biglake.v1.Table.Type.
 */
export const Table_TypeSchema: GenEnum<Table_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_biglake_v1_metastore, 2, 0);

/**
 * Request message for the CreateCatalog method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.CreateCatalogRequest
 */
export type CreateCatalogRequest = Message<"google.cloud.bigquery.biglake.v1.CreateCatalogRequest"> & {
  /**
   * Required. The parent resource where this catalog will be created.
   * Format: projects/{project_id_or_number}/locations/{location_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The catalog to create.
   * The `name` field does not need to be provided.
   *
   * @generated from field: google.cloud.bigquery.biglake.v1.Catalog catalog = 2;
   */
  catalog?: Catalog;

  /**
   * Required. The ID to use for the catalog, which will become the final
   * component of the catalog's resource name.
   *
   * @generated from field: string catalog_id = 3;
   */
  catalogId: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.CreateCatalogRequest.
 * Use `create(CreateCatalogRequestSchema)` to create a new message.
 */
export const CreateCatalogRequestSchema: GenMessage<CreateCatalogRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 3);

/**
 * Request message for the DeleteCatalog method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.DeleteCatalogRequest
 */
export type DeleteCatalogRequest = Message<"google.cloud.bigquery.biglake.v1.DeleteCatalogRequest"> & {
  /**
   * Required. The name of the catalog to delete.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.DeleteCatalogRequest.
 * Use `create(DeleteCatalogRequestSchema)` to create a new message.
 */
export const DeleteCatalogRequestSchema: GenMessage<DeleteCatalogRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 4);

/**
 * Request message for the GetCatalog method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.GetCatalogRequest
 */
export type GetCatalogRequest = Message<"google.cloud.bigquery.biglake.v1.GetCatalogRequest"> & {
  /**
   * Required. The name of the catalog to retrieve.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.GetCatalogRequest.
 * Use `create(GetCatalogRequestSchema)` to create a new message.
 */
export const GetCatalogRequestSchema: GenMessage<GetCatalogRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 5);

/**
 * Request message for the ListCatalogs method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.ListCatalogsRequest
 */
export type ListCatalogsRequest = Message<"google.cloud.bigquery.biglake.v1.ListCatalogsRequest"> & {
  /**
   * Required. The parent, which owns this collection of catalogs.
   * Format: projects/{project_id_or_number}/locations/{location_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of catalogs to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 catalogs will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListCatalogs` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListCatalogs` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.ListCatalogsRequest.
 * Use `create(ListCatalogsRequestSchema)` to create a new message.
 */
export const ListCatalogsRequestSchema: GenMessage<ListCatalogsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 6);

/**
 * Response message for the ListCatalogs method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.ListCatalogsResponse
 */
export type ListCatalogsResponse = Message<"google.cloud.bigquery.biglake.v1.ListCatalogsResponse"> & {
  /**
   * The catalogs from the specified project.
   *
   * @generated from field: repeated google.cloud.bigquery.biglake.v1.Catalog catalogs = 1;
   */
  catalogs: Catalog[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.ListCatalogsResponse.
 * Use `create(ListCatalogsResponseSchema)` to create a new message.
 */
export const ListCatalogsResponseSchema: GenMessage<ListCatalogsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 7);

/**
 * Request message for the CreateDatabase method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.CreateDatabaseRequest
 */
export type CreateDatabaseRequest = Message<"google.cloud.bigquery.biglake.v1.CreateDatabaseRequest"> & {
  /**
   * Required. The parent resource where this database will be created.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The database to create.
   * The `name` field does not need to be provided.
   *
   * @generated from field: google.cloud.bigquery.biglake.v1.Database database = 2;
   */
  database?: Database;

  /**
   * Required. The ID to use for the database, which will become the final
   * component of the database's resource name.
   *
   * @generated from field: string database_id = 3;
   */
  databaseId: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.CreateDatabaseRequest.
 * Use `create(CreateDatabaseRequestSchema)` to create a new message.
 */
export const CreateDatabaseRequestSchema: GenMessage<CreateDatabaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 8);

/**
 * Request message for the DeleteDatabase method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.DeleteDatabaseRequest
 */
export type DeleteDatabaseRequest = Message<"google.cloud.bigquery.biglake.v1.DeleteDatabaseRequest"> & {
  /**
   * Required. The name of the database to delete.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.DeleteDatabaseRequest.
 * Use `create(DeleteDatabaseRequestSchema)` to create a new message.
 */
export const DeleteDatabaseRequestSchema: GenMessage<DeleteDatabaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 9);

/**
 * Request message for the UpdateDatabase method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.UpdateDatabaseRequest
 */
export type UpdateDatabaseRequest = Message<"google.cloud.bigquery.biglake.v1.UpdateDatabaseRequest"> & {
  /**
   * Required. The database to update.
   *
   * The database's `name` field is used to identify the database to update.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}
   *
   * @generated from field: google.cloud.bigquery.biglake.v1.Database database = 1;
   */
  database?: Database;

  /**
   * The list of fields to update.
   *
   * For the `FieldMask` definition, see
   * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
   * If not set, defaults to all of the fields that are allowed to update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.UpdateDatabaseRequest.
 * Use `create(UpdateDatabaseRequestSchema)` to create a new message.
 */
export const UpdateDatabaseRequestSchema: GenMessage<UpdateDatabaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 10);

/**
 * Request message for the GetDatabase method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.GetDatabaseRequest
 */
export type GetDatabaseRequest = Message<"google.cloud.bigquery.biglake.v1.GetDatabaseRequest"> & {
  /**
   * Required. The name of the database to retrieve.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.GetDatabaseRequest.
 * Use `create(GetDatabaseRequestSchema)` to create a new message.
 */
export const GetDatabaseRequestSchema: GenMessage<GetDatabaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 11);

/**
 * Request message for the ListDatabases method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.ListDatabasesRequest
 */
export type ListDatabasesRequest = Message<"google.cloud.bigquery.biglake.v1.ListDatabasesRequest"> & {
  /**
   * Required. The parent, which owns this collection of databases.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of databases to return. The service may return fewer
   * than this value.
   * If unspecified, at most 50 databases will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListDatabases` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListDatabases` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.ListDatabasesRequest.
 * Use `create(ListDatabasesRequestSchema)` to create a new message.
 */
export const ListDatabasesRequestSchema: GenMessage<ListDatabasesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 12);

/**
 * Response message for the ListDatabases method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.ListDatabasesResponse
 */
export type ListDatabasesResponse = Message<"google.cloud.bigquery.biglake.v1.ListDatabasesResponse"> & {
  /**
   * The databases from the specified catalog.
   *
   * @generated from field: repeated google.cloud.bigquery.biglake.v1.Database databases = 1;
   */
  databases: Database[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.ListDatabasesResponse.
 * Use `create(ListDatabasesResponseSchema)` to create a new message.
 */
export const ListDatabasesResponseSchema: GenMessage<ListDatabasesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 13);

/**
 * Request message for the CreateTable method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.CreateTableRequest
 */
export type CreateTableRequest = Message<"google.cloud.bigquery.biglake.v1.CreateTableRequest"> & {
  /**
   * Required. The parent resource where this table will be created.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The table to create. The `name` field does not need to be
   * provided for the table creation.
   *
   * @generated from field: google.cloud.bigquery.biglake.v1.Table table = 2;
   */
  table?: Table;

  /**
   * Required. The ID to use for the table, which will become the final
   * component of the table's resource name.
   *
   * @generated from field: string table_id = 3;
   */
  tableId: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.CreateTableRequest.
 * Use `create(CreateTableRequestSchema)` to create a new message.
 */
export const CreateTableRequestSchema: GenMessage<CreateTableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 14);

/**
 * Request message for the DeleteTable method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.DeleteTableRequest
 */
export type DeleteTableRequest = Message<"google.cloud.bigquery.biglake.v1.DeleteTableRequest"> & {
  /**
   * Required. The name of the table to delete.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.DeleteTableRequest.
 * Use `create(DeleteTableRequestSchema)` to create a new message.
 */
export const DeleteTableRequestSchema: GenMessage<DeleteTableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 15);

/**
 * Request message for the UpdateTable method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.UpdateTableRequest
 */
export type UpdateTableRequest = Message<"google.cloud.bigquery.biglake.v1.UpdateTableRequest"> & {
  /**
   * Required. The table to update.
   *
   * The table's `name` field is used to identify the table to update.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}
   *
   * @generated from field: google.cloud.bigquery.biglake.v1.Table table = 1;
   */
  table?: Table;

  /**
   * The list of fields to update.
   *
   * For the `FieldMask` definition, see
   * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
   * If not set, defaults to all of the fields that are allowed to update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.UpdateTableRequest.
 * Use `create(UpdateTableRequestSchema)` to create a new message.
 */
export const UpdateTableRequestSchema: GenMessage<UpdateTableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 16);

/**
 * Request message for the RenameTable method in MetastoreService
 *
 * @generated from message google.cloud.bigquery.biglake.v1.RenameTableRequest
 */
export type RenameTableRequest = Message<"google.cloud.bigquery.biglake.v1.RenameTableRequest"> & {
  /**
   * Required. The table's `name` field is used to identify the table to rename.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The new `name` for the specified table, must be in the same
   * database. Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}
   *
   * @generated from field: string new_name = 2;
   */
  newName: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.RenameTableRequest.
 * Use `create(RenameTableRequestSchema)` to create a new message.
 */
export const RenameTableRequestSchema: GenMessage<RenameTableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 17);

/**
 * Request message for the GetTable method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.GetTableRequest
 */
export type GetTableRequest = Message<"google.cloud.bigquery.biglake.v1.GetTableRequest"> & {
  /**
   * Required. The name of the table to retrieve.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.GetTableRequest.
 * Use `create(GetTableRequestSchema)` to create a new message.
 */
export const GetTableRequestSchema: GenMessage<GetTableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 18);

/**
 * Request message for the ListTables method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.ListTablesRequest
 */
export type ListTablesRequest = Message<"google.cloud.bigquery.biglake.v1.ListTablesRequest"> & {
  /**
   * Required. The parent, which owns this collection of tables.
   * Format:
   * projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of tables to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 tables will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListTables` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListTables` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The view for the returned tables.
   *
   * @generated from field: google.cloud.bigquery.biglake.v1.TableView view = 4;
   */
  view: TableView;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.ListTablesRequest.
 * Use `create(ListTablesRequestSchema)` to create a new message.
 */
export const ListTablesRequestSchema: GenMessage<ListTablesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 19);

/**
 * Response message for the ListTables method.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.ListTablesResponse
 */
export type ListTablesResponse = Message<"google.cloud.bigquery.biglake.v1.ListTablesResponse"> & {
  /**
   * The tables from the specified database.
   *
   * @generated from field: repeated google.cloud.bigquery.biglake.v1.Table tables = 1;
   */
  tables: Table[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.ListTablesResponse.
 * Use `create(ListTablesResponseSchema)` to create a new message.
 */
export const ListTablesResponseSchema: GenMessage<ListTablesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 20);

/**
 * Options of a Hive database.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.HiveDatabaseOptions
 */
export type HiveDatabaseOptions = Message<"google.cloud.bigquery.biglake.v1.HiveDatabaseOptions"> & {
  /**
   * Cloud Storage folder URI where the database data is stored, starting with
   * "gs://".
   *
   * @generated from field: string location_uri = 1;
   */
  locationUri: string;

  /**
   * Stores user supplied Hive database parameters.
   *
   * @generated from field: map<string, string> parameters = 2;
   */
  parameters: { [key: string]: string };
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.HiveDatabaseOptions.
 * Use `create(HiveDatabaseOptionsSchema)` to create a new message.
 */
export const HiveDatabaseOptionsSchema: GenMessage<HiveDatabaseOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 21);

/**
 * Options of a Hive table.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.HiveTableOptions
 */
export type HiveTableOptions = Message<"google.cloud.bigquery.biglake.v1.HiveTableOptions"> & {
  /**
   * Stores user supplied Hive table parameters.
   *
   * @generated from field: map<string, string> parameters = 1;
   */
  parameters: { [key: string]: string };

  /**
   * Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
   *
   * @generated from field: string table_type = 2;
   */
  tableType: string;

  /**
   * Stores physical storage information of the data.
   *
   * @generated from field: google.cloud.bigquery.biglake.v1.HiveTableOptions.StorageDescriptor storage_descriptor = 3;
   */
  storageDescriptor?: HiveTableOptions_StorageDescriptor;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.HiveTableOptions.
 * Use `create(HiveTableOptionsSchema)` to create a new message.
 */
export const HiveTableOptionsSchema: GenMessage<HiveTableOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 22);

/**
 * Serializer and deserializer information.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.HiveTableOptions.SerDeInfo
 */
export type HiveTableOptions_SerDeInfo = Message<"google.cloud.bigquery.biglake.v1.HiveTableOptions.SerDeInfo"> & {
  /**
   * The fully qualified Java class name of the serialization library.
   *
   * @generated from field: string serialization_lib = 1;
   */
  serializationLib: string;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.HiveTableOptions.SerDeInfo.
 * Use `create(HiveTableOptions_SerDeInfoSchema)` to create a new message.
 */
export const HiveTableOptions_SerDeInfoSchema: GenMessage<HiveTableOptions_SerDeInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 22, 0);

/**
 * Stores physical storage information of the data.
 *
 * @generated from message google.cloud.bigquery.biglake.v1.HiveTableOptions.StorageDescriptor
 */
export type HiveTableOptions_StorageDescriptor = Message<"google.cloud.bigquery.biglake.v1.HiveTableOptions.StorageDescriptor"> & {
  /**
   * Cloud Storage folder URI where the table data is stored, starting with
   * "gs://".
   *
   * @generated from field: string location_uri = 1;
   */
  locationUri: string;

  /**
   * The fully qualified Java class name of the input format.
   *
   * @generated from field: string input_format = 2;
   */
  inputFormat: string;

  /**
   * The fully qualified Java class name of the output format.
   *
   * @generated from field: string output_format = 3;
   */
  outputFormat: string;

  /**
   * Serializer and deserializer information.
   *
   * @generated from field: google.cloud.bigquery.biglake.v1.HiveTableOptions.SerDeInfo serde_info = 4;
   */
  serdeInfo?: HiveTableOptions_SerDeInfo;
};

/**
 * Describes the message google.cloud.bigquery.biglake.v1.HiveTableOptions.StorageDescriptor.
 * Use `create(HiveTableOptions_StorageDescriptorSchema)` to create a new message.
 */
export const HiveTableOptions_StorageDescriptorSchema: GenMessage<HiveTableOptions_StorageDescriptor> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_biglake_v1_metastore, 22, 1);

/**
 * View on Table. Represents which fields will be populated for calls that
 * return Table objects.
 *
 * @generated from enum google.cloud.bigquery.biglake.v1.TableView
 */
export enum TableView {
  /**
   * Default value. The API will default to the BASIC view.
   *
   * @generated from enum value: TABLE_VIEW_UNSPECIFIED = 0;
   */
  TABLE_VIEW_UNSPECIFIED = 0,

  /**
   * Include only table names.
   * This is the default value.
   *
   * @generated from enum value: BASIC = 1;
   */
  BASIC = 1,

  /**
   * Include everything.
   *
   * @generated from enum value: FULL = 2;
   */
  FULL = 2,
}

/**
 * Describes the enum google.cloud.bigquery.biglake.v1.TableView.
 */
export const TableViewSchema: GenEnum<TableView> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_biglake_v1_metastore, 0);

/**
 * BigLake Metastore is a serverless, highly available, multi-tenant runtime
 * metastore for Google Cloud Data Analytics products.
 *
 * The BigLake Metastore API defines the following resource model:
 *
 * * A collection of Google Cloud projects: `/projects/*`
 * * Each project has a collection of available locations: `/locations/*`
 * * Each location has a collection of catalogs: `/catalogs/*`
 * * Each catalog has a collection of databases: `/databases/*`
 * * Each database has a collection of tables: `/tables/*`
 *
 * @generated from service google.cloud.bigquery.biglake.v1.MetastoreService
 */
export const MetastoreService: GenService<{
  /**
   * Creates a new catalog.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.CreateCatalog
   */
  createCatalog: {
    methodKind: "unary";
    input: typeof CreateCatalogRequestSchema;
    output: typeof CatalogSchema;
  },
  /**
   * Deletes an existing catalog specified by the catalog ID.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.DeleteCatalog
   */
  deleteCatalog: {
    methodKind: "unary";
    input: typeof DeleteCatalogRequestSchema;
    output: typeof CatalogSchema;
  },
  /**
   * Gets the catalog specified by the resource name.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.GetCatalog
   */
  getCatalog: {
    methodKind: "unary";
    input: typeof GetCatalogRequestSchema;
    output: typeof CatalogSchema;
  },
  /**
   * List all catalogs in a specified project.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.ListCatalogs
   */
  listCatalogs: {
    methodKind: "unary";
    input: typeof ListCatalogsRequestSchema;
    output: typeof ListCatalogsResponseSchema;
  },
  /**
   * Creates a new database.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.CreateDatabase
   */
  createDatabase: {
    methodKind: "unary";
    input: typeof CreateDatabaseRequestSchema;
    output: typeof DatabaseSchema;
  },
  /**
   * Deletes an existing database specified by the database ID.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.DeleteDatabase
   */
  deleteDatabase: {
    methodKind: "unary";
    input: typeof DeleteDatabaseRequestSchema;
    output: typeof DatabaseSchema;
  },
  /**
   * Updates an existing database specified by the database ID.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.UpdateDatabase
   */
  updateDatabase: {
    methodKind: "unary";
    input: typeof UpdateDatabaseRequestSchema;
    output: typeof DatabaseSchema;
  },
  /**
   * Gets the database specified by the resource name.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.GetDatabase
   */
  getDatabase: {
    methodKind: "unary";
    input: typeof GetDatabaseRequestSchema;
    output: typeof DatabaseSchema;
  },
  /**
   * List all databases in a specified catalog.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.ListDatabases
   */
  listDatabases: {
    methodKind: "unary";
    input: typeof ListDatabasesRequestSchema;
    output: typeof ListDatabasesResponseSchema;
  },
  /**
   * Creates a new table.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.CreateTable
   */
  createTable: {
    methodKind: "unary";
    input: typeof CreateTableRequestSchema;
    output: typeof TableSchema;
  },
  /**
   * Deletes an existing table specified by the table ID.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.DeleteTable
   */
  deleteTable: {
    methodKind: "unary";
    input: typeof DeleteTableRequestSchema;
    output: typeof TableSchema;
  },
  /**
   * Updates an existing table specified by the table ID.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.UpdateTable
   */
  updateTable: {
    methodKind: "unary";
    input: typeof UpdateTableRequestSchema;
    output: typeof TableSchema;
  },
  /**
   * Renames an existing table specified by the table ID.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.RenameTable
   */
  renameTable: {
    methodKind: "unary";
    input: typeof RenameTableRequestSchema;
    output: typeof TableSchema;
  },
  /**
   * Gets the table specified by the resource name.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.GetTable
   */
  getTable: {
    methodKind: "unary";
    input: typeof GetTableRequestSchema;
    output: typeof TableSchema;
  },
  /**
   * List all tables in a specified database.
   *
   * @generated from rpc google.cloud.bigquery.biglake.v1.MetastoreService.ListTables
   */
  listTables: {
    methodKind: "unary";
    input: typeof ListTablesRequestSchema;
    output: typeof ListTablesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_bigquery_biglake_v1_metastore, 0);

