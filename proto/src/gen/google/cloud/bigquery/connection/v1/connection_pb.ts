// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/bigquery/connection/v1/connection.proto (package google.cloud.bigquery.connection.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../../iam/v1/policy_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/bigquery/connection/v1/connection.proto.
 */
export const file_google_cloud_bigquery_connection_v1_connection: GenFile = /*@__PURE__*/
  fileDesc("CjRnb29nbGUvY2xvdWQvYmlncXVlcnkvY29ubmVjdGlvbi92MS9jb25uZWN0aW9uLnByb3RvEiNnb29nbGUuY2xvdWQuYmlncXVlcnkuY29ubmVjdGlvbi52MSK6AQoXQ3JlYXRlQ29ubmVjdGlvblJlcXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhIaCg1jb25uZWN0aW9uX2lkGAIgASgJQgPgQQESSAoKY29ubmVjdGlvbhgDIAEoCzIvLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLkNvbm5lY3Rpb25CA+BBAiJaChRHZXRDb25uZWN0aW9uUmVxdWVzdBJCCgRuYW1lGAEgASgJQjTgQQL6QS4KLGJpZ3F1ZXJ5Y29ubmVjdGlvbi5nb29nbGVhcGlzLmNvbS9Db25uZWN0aW9uIn8KFkxpc3RDb25uZWN0aW9uc1JlcXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhIWCglwYWdlX3NpemUYBCABKAVCA+BBAhISCgpwYWdlX3Rva2VuGAMgASgJIngKF0xpc3RDb25uZWN0aW9uc1Jlc3BvbnNlEhcKD25leHRfcGFnZV90b2tlbhgBIAEoCRJECgtjb25uZWN0aW9ucxgCIAMoCzIvLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLkNvbm5lY3Rpb24i3QEKF1VwZGF0ZUNvbm5lY3Rpb25SZXF1ZXN0EkIKBG5hbWUYASABKAlCNOBBAvpBLgosYmlncXVlcnljb25uZWN0aW9uLmdvb2dsZWFwaXMuY29tL0Nvbm5lY3Rpb24SSAoKY29ubmVjdGlvbhgCIAEoCzIvLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLkNvbm5lY3Rpb25CA+BBAhI0Cgt1cGRhdGVfbWFzaxgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BBAiJdChdEZWxldGVDb25uZWN0aW9uUmVxdWVzdBJCCgRuYW1lGAEgASgJQjTgQQL6QS4KLGJpZ3F1ZXJ5Y29ubmVjdGlvbi5nb29nbGVhcGlzLmNvbS9Db25uZWN0aW9uItoGCgpDb25uZWN0aW9uEgwKBG5hbWUYASABKAkSFQoNZnJpZW5kbHlfbmFtZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCRJMCgljbG91ZF9zcWwYBCABKAsyNy5nb29nbGUuY2xvdWQuYmlncXVlcnkuY29ubmVjdGlvbi52MS5DbG91ZFNxbFByb3BlcnRpZXNIABJBCgNhd3MYCCABKAsyMi5nb29nbGUuY2xvdWQuYmlncXVlcnkuY29ubmVjdGlvbi52MS5Bd3NQcm9wZXJ0aWVzSAASRQoFYXp1cmUYCyABKAsyNC5nb29nbGUuY2xvdWQuYmlncXVlcnkuY29ubmVjdGlvbi52MS5BenVyZVByb3BlcnRpZXNIABJUCg1jbG91ZF9zcGFubmVyGBUgASgLMjsuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmNvbm5lY3Rpb24udjEuQ2xvdWRTcGFubmVyUHJvcGVydGllc0gAElYKDmNsb3VkX3Jlc291cmNlGBYgASgLMjwuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmNvbm5lY3Rpb24udjEuQ2xvdWRSZXNvdXJjZVByb3BlcnRpZXNIABJFCgVzcGFyaxgXIAEoCzI0Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLlNwYXJrUHJvcGVydGllc0gAEmgKFXNhbGVzZm9yY2VfZGF0YV9jbG91ZBgYIAEoCzJCLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLlNhbGVzZm9yY2VEYXRhQ2xvdWRQcm9wZXJ0aWVzQgPgQQFIABIaCg1jcmVhdGlvbl90aW1lGAUgASgDQgPgQQMSHwoSbGFzdF9tb2RpZmllZF90aW1lGAYgASgDQgPgQQMSGwoOaGFzX2NyZWRlbnRpYWwYByABKAhCA+BBAzpz6kFwCixiaWdxdWVyeWNvbm5lY3Rpb24uZ29vZ2xlYXBpcy5jb20vQ29ubmVjdGlvbhJAcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2Nvbm5lY3Rpb25zL3tjb25uZWN0aW9ufUIMCgpwcm9wZXJ0aWVzIsoCChJDbG91ZFNxbFByb3BlcnRpZXMSEwoLaW5zdGFuY2VfaWQYASABKAkSEAoIZGF0YWJhc2UYAiABKAkSUgoEdHlwZRgDIAEoDjJELmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLkNsb3VkU3FsUHJvcGVydGllcy5EYXRhYmFzZVR5cGUSUAoKY3JlZGVudGlhbBgEIAEoCzI3Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLkNsb3VkU3FsQ3JlZGVudGlhbEID4EEEEh8KEnNlcnZpY2VfYWNjb3VudF9pZBgFIAEoCUID4EEDIkYKDERhdGFiYXNlVHlwZRIdChlEQVRBQkFTRV9UWVBFX1VOU1BFQ0lGSUVEEAASDAoIUE9TVEdSRVMQARIJCgVNWVNRTBACIjgKEkNsb3VkU3FsQ3JlZGVudGlhbBIQCgh1c2VybmFtZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSKyAQoWQ2xvdWRTcGFubmVyUHJvcGVydGllcxIQCghkYXRhYmFzZRgBIAEoCRIXCg91c2VfcGFyYWxsZWxpc20YAiABKAgSFwoPbWF4X3BhcmFsbGVsaXNtGAUgASgFEiAKGHVzZV9zZXJ2ZXJsZXNzX2FuYWx5dGljcxgDIAEoCBIWCg51c2VfZGF0YV9ib29zdBgGIAEoCBIaCg1kYXRhYmFzZV9yb2xlGAQgASgJQgPgQQEizwEKDUF3c1Byb3BlcnRpZXMSWgoSY3Jvc3NfYWNjb3VudF9yb2xlGAIgASgLMjguZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmNvbm5lY3Rpb24udjEuQXdzQ3Jvc3NBY2NvdW50Um9sZUICGAFIABJJCgthY2Nlc3Nfcm9sZRgDIAEoCzIyLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLkF3c0FjY2Vzc1JvbGVIAEIXChVhdXRoZW50aWNhdGlvbl9tZXRob2QiXgoTQXdzQ3Jvc3NBY2NvdW50Um9sZRITCgtpYW1fcm9sZV9pZBgBIAEoCRIYCgtpYW1fdXNlcl9pZBgCIAEoCUID4EEDEhgKC2V4dGVybmFsX2lkGAMgASgJQgPgQQMiNgoNQXdzQWNjZXNzUm9sZRITCgtpYW1fcm9sZV9pZBgBIAEoCRIQCghpZGVudGl0eRgCIAEoCSLNAQoPQXp1cmVQcm9wZXJ0aWVzEhgKC2FwcGxpY2F0aW9uGAEgASgJQgPgQQMSFgoJY2xpZW50X2lkGAIgASgJQgPgQQMSFgoJb2JqZWN0X2lkGAMgASgJQgPgQQMSGgoSY3VzdG9tZXJfdGVuYW50X2lkGAQgASgJEhQKDHJlZGlyZWN0X3VyaRgFIAEoCRInCh9mZWRlcmF0ZWRfYXBwbGljYXRpb25fY2xpZW50X2lkGAYgASgJEhUKCGlkZW50aXR5GAcgASgJQgPgQQMiOgoXQ2xvdWRSZXNvdXJjZVByb3BlcnRpZXMSHwoSc2VydmljZV9hY2NvdW50X2lkGAEgASgJQgPgQQMiXQoWTWV0YXN0b3JlU2VydmljZUNvbmZpZxJDChFtZXRhc3RvcmVfc2VydmljZRgBIAEoCUIo4EEB+kEiCiBtZXRhc3RvcmUuZ29vZ2xlYXBpcy5jb20vU2VydmljZSJdChhTcGFya0hpc3RvcnlTZXJ2ZXJDb25maWcSQQoQZGF0YXByb2NfY2x1c3RlchgBIAEoCUIn4EEB+kEhCh9kYXRhcHJvYy5nb29nbGVhcGlzLmNvbS9DbHVzdGVyIv8BCg9TcGFya1Byb3BlcnRpZXMSHwoSc2VydmljZV9hY2NvdW50X2lkGAEgASgJQgPgQQMSYgoYbWV0YXN0b3JlX3NlcnZpY2VfY29uZmlnGAMgASgLMjsuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmNvbm5lY3Rpb24udjEuTWV0YXN0b3JlU2VydmljZUNvbmZpZ0ID4EEBEmcKG3NwYXJrX2hpc3Rvcnlfc2VydmVyX2NvbmZpZxgEIAEoCzI9Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLlNwYXJrSGlzdG9yeVNlcnZlckNvbmZpZ0ID4EEBIl8KHVNhbGVzZm9yY2VEYXRhQ2xvdWRQcm9wZXJ0aWVzEhQKDGluc3RhbmNlX3VyaRgBIAEoCRIVCghpZGVudGl0eRgCIAEoCUID4EEDEhEKCXRlbmFudF9pZBgDIAEoCTLMDQoRQ29ubmVjdGlvblNlcnZpY2US6AEKEENyZWF0ZUNvbm5lY3Rpb24SPC5nb29nbGUuY2xvdWQuYmlncXVlcnkuY29ubmVjdGlvbi52MS5DcmVhdGVDb25uZWN0aW9uUmVxdWVzdBovLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLkNvbm5lY3Rpb24iZdpBH3BhcmVudCxjb25uZWN0aW9uLGNvbm5lY3Rpb25faWSC0+STAj06CmNvbm5lY3Rpb24iLy92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2Nvbm5lY3Rpb25zErsBCg1HZXRDb25uZWN0aW9uEjkuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmNvbm5lY3Rpb24udjEuR2V0Q29ubmVjdGlvblJlcXVlc3QaLy5nb29nbGUuY2xvdWQuYmlncXVlcnkuY29ubmVjdGlvbi52MS5Db25uZWN0aW9uIj7aQQRuYW1lgtPkkwIxEi8vdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jb25uZWN0aW9ucy8qfRLOAQoPTGlzdENvbm5lY3Rpb25zEjsuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmNvbm5lY3Rpb24udjEuTGlzdENvbm5lY3Rpb25zUmVxdWVzdBo8Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxLkxpc3RDb25uZWN0aW9uc1Jlc3BvbnNlIkDaQQZwYXJlbnSC0+STAjESLy92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2Nvbm5lY3Rpb25zEuQBChBVcGRhdGVDb25uZWN0aW9uEjwuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmNvbm5lY3Rpb24udjEuVXBkYXRlQ29ubmVjdGlvblJlcXVlc3QaLy5nb29nbGUuY2xvdWQuYmlncXVlcnkuY29ubmVjdGlvbi52MS5Db25uZWN0aW9uImHaQRtuYW1lLGNvbm5lY3Rpb24sdXBkYXRlX21hc2uC0+STAj06CmNvbm5lY3Rpb24yLy92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2Nvbm5lY3Rpb25zLyp9EqgBChBEZWxldGVDb25uZWN0aW9uEjwuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LmNvbm5lY3Rpb24udjEuRGVsZXRlQ29ubmVjdGlvblJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiPtpBBG5hbWWC0+STAjEqLy92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2Nvbm5lY3Rpb25zLyp9EqkBCgxHZXRJYW1Qb2xpY3kSIi5nb29nbGUuaWFtLnYxLkdldElhbVBvbGljeVJlcXVlc3QaFS5nb29nbGUuaWFtLnYxLlBvbGljeSJe2kEQcmVzb3VyY2Usb3B0aW9uc4LT5JMCRToBKiJAL3YxL3tyZXNvdXJjZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2Nvbm5lY3Rpb25zLyp9OmdldElhbVBvbGljeRKoAQoMU2V0SWFtUG9saWN5EiIuZ29vZ2xlLmlhbS52MS5TZXRJYW1Qb2xpY3lSZXF1ZXN0GhUuZ29vZ2xlLmlhbS52MS5Qb2xpY3kiXdpBD3Jlc291cmNlLHBvbGljeYLT5JMCRToBKiJAL3YxL3tyZXNvdXJjZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2Nvbm5lY3Rpb25zLyp9OnNldElhbVBvbGljeRLTAQoSVGVzdElhbVBlcm1pc3Npb25zEiguZ29vZ2xlLmlhbS52MS5UZXN0SWFtUGVybWlzc2lvbnNSZXF1ZXN0GikuZ29vZ2xlLmlhbS52MS5UZXN0SWFtUGVybWlzc2lvbnNSZXNwb25zZSJo2kEUcmVzb3VyY2UscGVybWlzc2lvbnOC0+STAks6ASoiRi92MS97cmVzb3VyY2U9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jb25uZWN0aW9ucy8qfTp0ZXN0SWFtUGVybWlzc2lvbnMafspBIWJpZ3F1ZXJ5Y29ubmVjdGlvbi5nb29nbGVhcGlzLmNvbdJBV2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvYmlncXVlcnksaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybUL9AgonY29tLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5jb25uZWN0aW9uLnYxUAFaR2Nsb3VkLmdvb2dsZS5jb20vZ28vYmlncXVlcnkvY29ubmVjdGlvbi9hcGl2MS9jb25uZWN0aW9ucGI7Y29ubmVjdGlvbnBiqgIjR29vZ2xlLkNsb3VkLkJpZ1F1ZXJ5LkNvbm5lY3Rpb24uVjHKAiNHb29nbGVcQ2xvdWRcQmlnUXVlcnlcQ29ubmVjdGlvblxWMepBWQofZGF0YXByb2MuZ29vZ2xlYXBpcy5jb20vQ2x1c3RlchI2cHJvamVjdHMve3Byb2plY3R9L3JlZ2lvbnMve3JlZ2lvbn0vY2x1c3RlcnMve2NsdXN0ZXJ96kFeCiBtZXRhc3RvcmUuZ29vZ2xlYXBpcy5jb20vU2VydmljZRI6cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3NlcnZpY2VzL3tzZXJ2aWNlfWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * The request for
 * [ConnectionService.CreateConnection][google.cloud.bigquery.connection.v1.ConnectionService.CreateConnection].
 *
 * @generated from message google.cloud.bigquery.connection.v1.CreateConnectionRequest
 */
export type CreateConnectionRequest = Message<"google.cloud.bigquery.connection.v1.CreateConnectionRequest"> & {
  /**
   * Required. Parent resource name.
   * Must be in the format `projects/{project_id}/locations/{location_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Connection id that should be assigned to the created connection.
   *
   * @generated from field: string connection_id = 2;
   */
  connectionId: string;

  /**
   * Required. Connection to create.
   *
   * @generated from field: google.cloud.bigquery.connection.v1.Connection connection = 3;
   */
  connection?: Connection;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.CreateConnectionRequest.
 * Use `create(CreateConnectionRequestSchema)` to create a new message.
 */
export const CreateConnectionRequestSchema: GenMessage<CreateConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 0);

/**
 * The request for
 * [ConnectionService.GetConnection][google.cloud.bigquery.connection.v1.ConnectionService.GetConnection].
 *
 * @generated from message google.cloud.bigquery.connection.v1.GetConnectionRequest
 */
export type GetConnectionRequest = Message<"google.cloud.bigquery.connection.v1.GetConnectionRequest"> & {
  /**
   * Required. Name of the requested connection, for example:
   * `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.GetConnectionRequest.
 * Use `create(GetConnectionRequestSchema)` to create a new message.
 */
export const GetConnectionRequestSchema: GenMessage<GetConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 1);

/**
 * The request for
 * [ConnectionService.ListConnections][google.cloud.bigquery.connection.v1.ConnectionService.ListConnections].
 *
 * @generated from message google.cloud.bigquery.connection.v1.ListConnectionsRequest
 */
export type ListConnectionsRequest = Message<"google.cloud.bigquery.connection.v1.ListConnectionsRequest"> & {
  /**
   * Required. Parent resource name.
   * Must be in the form: `projects/{project_id}/locations/{location_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Page size.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * Page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.ListConnectionsRequest.
 * Use `create(ListConnectionsRequestSchema)` to create a new message.
 */
export const ListConnectionsRequestSchema: GenMessage<ListConnectionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 2);

/**
 * The response for
 * [ConnectionService.ListConnections][google.cloud.bigquery.connection.v1.ConnectionService.ListConnections].
 *
 * @generated from message google.cloud.bigquery.connection.v1.ListConnectionsResponse
 */
export type ListConnectionsResponse = Message<"google.cloud.bigquery.connection.v1.ListConnectionsResponse"> & {
  /**
   * Next page token.
   *
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken: string;

  /**
   * List of connections.
   *
   * @generated from field: repeated google.cloud.bigquery.connection.v1.Connection connections = 2;
   */
  connections: Connection[];
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.ListConnectionsResponse.
 * Use `create(ListConnectionsResponseSchema)` to create a new message.
 */
export const ListConnectionsResponseSchema: GenMessage<ListConnectionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 3);

/**
 * The request for
 * [ConnectionService.UpdateConnection][google.cloud.bigquery.connection.v1.ConnectionService.UpdateConnection].
 *
 * @generated from message google.cloud.bigquery.connection.v1.UpdateConnectionRequest
 */
export type UpdateConnectionRequest = Message<"google.cloud.bigquery.connection.v1.UpdateConnectionRequest"> & {
  /**
   * Required. Name of the connection to update, for example:
   * `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Connection containing the updated fields.
   *
   * @generated from field: google.cloud.bigquery.connection.v1.Connection connection = 2;
   */
  connection?: Connection;

  /**
   * Required. Update mask for the connection fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.UpdateConnectionRequest.
 * Use `create(UpdateConnectionRequestSchema)` to create a new message.
 */
export const UpdateConnectionRequestSchema: GenMessage<UpdateConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 4);

/**
 * The request for [ConnectionService.DeleteConnectionRequest][].
 *
 * @generated from message google.cloud.bigquery.connection.v1.DeleteConnectionRequest
 */
export type DeleteConnectionRequest = Message<"google.cloud.bigquery.connection.v1.DeleteConnectionRequest"> & {
  /**
   * Required. Name of the deleted connection, for example:
   * `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.DeleteConnectionRequest.
 * Use `create(DeleteConnectionRequestSchema)` to create a new message.
 */
export const DeleteConnectionRequestSchema: GenMessage<DeleteConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 5);

/**
 * Configuration parameters to establish connection with an external data
 * source, except the credential attributes.
 *
 * @generated from message google.cloud.bigquery.connection.v1.Connection
 */
export type Connection = Message<"google.cloud.bigquery.connection.v1.Connection"> & {
  /**
   * The resource name of the connection in the form of:
   * `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * User provided display name for the connection.
   *
   * @generated from field: string friendly_name = 2;
   */
  friendlyName: string;

  /**
   * User provided description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Properties specific to the underlying data source.
   *
   * @generated from oneof google.cloud.bigquery.connection.v1.Connection.properties
   */
  properties: {
    /**
     * Cloud SQL properties.
     *
     * @generated from field: google.cloud.bigquery.connection.v1.CloudSqlProperties cloud_sql = 4;
     */
    value: CloudSqlProperties;
    case: "cloudSql";
  } | {
    /**
     * Amazon Web Services (AWS) properties.
     *
     * @generated from field: google.cloud.bigquery.connection.v1.AwsProperties aws = 8;
     */
    value: AwsProperties;
    case: "aws";
  } | {
    /**
     * Azure properties.
     *
     * @generated from field: google.cloud.bigquery.connection.v1.AzureProperties azure = 11;
     */
    value: AzureProperties;
    case: "azure";
  } | {
    /**
     * Cloud Spanner properties.
     *
     * @generated from field: google.cloud.bigquery.connection.v1.CloudSpannerProperties cloud_spanner = 21;
     */
    value: CloudSpannerProperties;
    case: "cloudSpanner";
  } | {
    /**
     * Cloud Resource properties.
     *
     * @generated from field: google.cloud.bigquery.connection.v1.CloudResourceProperties cloud_resource = 22;
     */
    value: CloudResourceProperties;
    case: "cloudResource";
  } | {
    /**
     * Spark properties.
     *
     * @generated from field: google.cloud.bigquery.connection.v1.SparkProperties spark = 23;
     */
    value: SparkProperties;
    case: "spark";
  } | {
    /**
     * Optional. Salesforce DataCloud properties. This field is intended for
     * use only by Salesforce partner projects. This field contains properties
     * for your Salesforce DataCloud connection.
     *
     * @generated from field: google.cloud.bigquery.connection.v1.SalesforceDataCloudProperties salesforce_data_cloud = 24;
     */
    value: SalesforceDataCloudProperties;
    case: "salesforceDataCloud";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The creation timestamp of the connection.
   *
   * @generated from field: int64 creation_time = 5;
   */
  creationTime: bigint;

  /**
   * Output only. The last update timestamp of the connection.
   *
   * @generated from field: int64 last_modified_time = 6;
   */
  lastModifiedTime: bigint;

  /**
   * Output only. True, if credential is configured for this connection.
   *
   * @generated from field: bool has_credential = 7;
   */
  hasCredential: boolean;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.Connection.
 * Use `create(ConnectionSchema)` to create a new message.
 */
export const ConnectionSchema: GenMessage<Connection> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 6);

/**
 * Connection properties specific to the Cloud SQL.
 *
 * @generated from message google.cloud.bigquery.connection.v1.CloudSqlProperties
 */
export type CloudSqlProperties = Message<"google.cloud.bigquery.connection.v1.CloudSqlProperties"> & {
  /**
   * Cloud SQL instance ID in the form `project:location:instance`.
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * Database name.
   *
   * @generated from field: string database = 2;
   */
  database: string;

  /**
   * Type of the Cloud SQL database.
   *
   * @generated from field: google.cloud.bigquery.connection.v1.CloudSqlProperties.DatabaseType type = 3;
   */
  type: CloudSqlProperties_DatabaseType;

  /**
   * Input only. Cloud SQL credential.
   *
   * @generated from field: google.cloud.bigquery.connection.v1.CloudSqlCredential credential = 4;
   */
  credential?: CloudSqlCredential;

  /**
   * Output only. The account ID of the service used for the purpose of this
   * connection.
   *
   * When the connection is used in the context of an operation in
   * BigQuery, this service account will serve as the identity being used for
   * connecting to the CloudSQL instance specified in this connection.
   *
   * @generated from field: string service_account_id = 5;
   */
  serviceAccountId: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.CloudSqlProperties.
 * Use `create(CloudSqlPropertiesSchema)` to create a new message.
 */
export const CloudSqlPropertiesSchema: GenMessage<CloudSqlProperties> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 7);

/**
 * Supported Cloud SQL database types.
 *
 * @generated from enum google.cloud.bigquery.connection.v1.CloudSqlProperties.DatabaseType
 */
export enum CloudSqlProperties_DatabaseType {
  /**
   * Unspecified database type.
   *
   * @generated from enum value: DATABASE_TYPE_UNSPECIFIED = 0;
   */
  DATABASE_TYPE_UNSPECIFIED = 0,

  /**
   * Cloud SQL for PostgreSQL.
   *
   * @generated from enum value: POSTGRES = 1;
   */
  POSTGRES = 1,

  /**
   * Cloud SQL for MySQL.
   *
   * @generated from enum value: MYSQL = 2;
   */
  MYSQL = 2,
}

/**
 * Describes the enum google.cloud.bigquery.connection.v1.CloudSqlProperties.DatabaseType.
 */
export const CloudSqlProperties_DatabaseTypeSchema: GenEnum<CloudSqlProperties_DatabaseType> = /*@__PURE__*/
  enumDesc(file_google_cloud_bigquery_connection_v1_connection, 7, 0);

/**
 * Credential info for the Cloud SQL.
 *
 * @generated from message google.cloud.bigquery.connection.v1.CloudSqlCredential
 */
export type CloudSqlCredential = Message<"google.cloud.bigquery.connection.v1.CloudSqlCredential"> & {
  /**
   * The username for the credential.
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * The password for the credential.
   *
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.CloudSqlCredential.
 * Use `create(CloudSqlCredentialSchema)` to create a new message.
 */
export const CloudSqlCredentialSchema: GenMessage<CloudSqlCredential> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 8);

/**
 * Connection properties specific to Cloud Spanner.
 *
 * @generated from message google.cloud.bigquery.connection.v1.CloudSpannerProperties
 */
export type CloudSpannerProperties = Message<"google.cloud.bigquery.connection.v1.CloudSpannerProperties"> & {
  /**
   * Cloud Spanner database in the form `project/instance/database'
   *
   * @generated from field: string database = 1;
   */
  database: string;

  /**
   * If parallelism should be used when reading from Cloud Spanner
   *
   * @generated from field: bool use_parallelism = 2;
   */
  useParallelism: boolean;

  /**
   * Allows setting max parallelism per query when executing on Spanner
   * independent compute resources. If unspecified, default values of
   * parallelism are chosen that are dependent on the Cloud Spanner instance
   * configuration.
   *
   * REQUIRES: `use_parallelism` must be set.
   * REQUIRES: Either `use_data_boost` or `use_serverless_analytics` must be
   * set.
   *
   * @generated from field: int32 max_parallelism = 5;
   */
  maxParallelism: number;

  /**
   * If the serverless analytics service should be used to read data from Cloud
   * Spanner.
   * Note: `use_parallelism` must be set when using serverless analytics.
   *
   * @generated from field: bool use_serverless_analytics = 3;
   */
  useServerlessAnalytics: boolean;

  /**
   * If set, the request will be executed via Spanner independent compute
   * resources.
   * REQUIRES: `use_parallelism` must be set.
   *
   * NOTE: `use_serverless_analytics` will be deprecated. Prefer
   * `use_data_boost` over `use_serverless_analytics`.
   *
   * @generated from field: bool use_data_boost = 6;
   */
  useDataBoost: boolean;

  /**
   * Optional. Cloud Spanner database role for fine-grained access control.
   * The Cloud Spanner admin should have provisioned the database role with
   * appropriate permissions, such as `SELECT` and `INSERT`. Other users should
   * only use roles provided by their Cloud Spanner admins.
   *
   * For more details, see [About fine-grained access control]
   * (https://cloud.google.com/spanner/docs/fgac-about).
   *
   * REQUIRES: The database role name must start with a letter, and can only
   * contain letters, numbers, and underscores.
   *
   * @generated from field: string database_role = 4;
   */
  databaseRole: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.CloudSpannerProperties.
 * Use `create(CloudSpannerPropertiesSchema)` to create a new message.
 */
export const CloudSpannerPropertiesSchema: GenMessage<CloudSpannerProperties> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 9);

/**
 * Connection properties specific to Amazon Web Services (AWS).
 *
 * @generated from message google.cloud.bigquery.connection.v1.AwsProperties
 */
export type AwsProperties = Message<"google.cloud.bigquery.connection.v1.AwsProperties"> & {
  /**
   * Authentication method chosen at connection creation.
   *
   * @generated from oneof google.cloud.bigquery.connection.v1.AwsProperties.authentication_method
   */
  authenticationMethod: {
    /**
     * Authentication using Google owned AWS IAM user's access key to assume
     * into customer's AWS IAM Role.
     * Deprecated, do not use.
     *
     * @generated from field: google.cloud.bigquery.connection.v1.AwsCrossAccountRole cross_account_role = 2 [deprecated = true];
     * @deprecated
     */
    value: AwsCrossAccountRole;
    case: "crossAccountRole";
  } | {
    /**
     * Authentication using Google owned service account to assume into
     * customer's AWS IAM Role.
     *
     * @generated from field: google.cloud.bigquery.connection.v1.AwsAccessRole access_role = 3;
     */
    value: AwsAccessRole;
    case: "accessRole";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.AwsProperties.
 * Use `create(AwsPropertiesSchema)` to create a new message.
 */
export const AwsPropertiesSchema: GenMessage<AwsProperties> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 10);

/**
 * Authentication method for Amazon Web Services (AWS) that uses Google owned
 * AWS IAM user's access key to assume into customer's AWS IAM Role.
 *
 * @generated from message google.cloud.bigquery.connection.v1.AwsCrossAccountRole
 */
export type AwsCrossAccountRole = Message<"google.cloud.bigquery.connection.v1.AwsCrossAccountRole"> & {
  /**
   * The user’s AWS IAM Role that trusts the Google-owned AWS IAM user
   * Connection.
   *
   * @generated from field: string iam_role_id = 1;
   */
  iamRoleId: string;

  /**
   * Output only. Google-owned AWS IAM User for a Connection.
   *
   * @generated from field: string iam_user_id = 2;
   */
  iamUserId: string;

  /**
   * Output only. A Google-generated id for representing Connection’s identity
   * in AWS. External Id is also used for preventing the Confused Deputy
   * Problem. See
   * https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html
   *
   * @generated from field: string external_id = 3;
   */
  externalId: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.AwsCrossAccountRole.
 * Use `create(AwsCrossAccountRoleSchema)` to create a new message.
 */
export const AwsCrossAccountRoleSchema: GenMessage<AwsCrossAccountRole> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 11);

/**
 * Authentication method for Amazon Web Services (AWS) that uses Google owned
 * Google service account to assume into customer's AWS IAM Role.
 *
 * @generated from message google.cloud.bigquery.connection.v1.AwsAccessRole
 */
export type AwsAccessRole = Message<"google.cloud.bigquery.connection.v1.AwsAccessRole"> & {
  /**
   * The user’s AWS IAM Role that trusts the Google-owned AWS IAM user
   * Connection.
   *
   * @generated from field: string iam_role_id = 1;
   */
  iamRoleId: string;

  /**
   * A unique Google-owned and Google-generated identity for the Connection.
   * This identity will be used to access the user's AWS IAM Role.
   *
   * @generated from field: string identity = 2;
   */
  identity: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.AwsAccessRole.
 * Use `create(AwsAccessRoleSchema)` to create a new message.
 */
export const AwsAccessRoleSchema: GenMessage<AwsAccessRole> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 12);

/**
 * Container for connection properties specific to Azure.
 *
 * @generated from message google.cloud.bigquery.connection.v1.AzureProperties
 */
export type AzureProperties = Message<"google.cloud.bigquery.connection.v1.AzureProperties"> & {
  /**
   * Output only. The name of the Azure Active Directory Application.
   *
   * @generated from field: string application = 1;
   */
  application: string;

  /**
   * Output only. The client id of the Azure Active Directory Application.
   *
   * @generated from field: string client_id = 2;
   */
  clientId: string;

  /**
   * Output only. The object id of the Azure Active Directory Application.
   *
   * @generated from field: string object_id = 3;
   */
  objectId: string;

  /**
   * The id of customer's directory that host the data.
   *
   * @generated from field: string customer_tenant_id = 4;
   */
  customerTenantId: string;

  /**
   * The URL user will be redirected to after granting consent during connection
   * setup.
   *
   * @generated from field: string redirect_uri = 5;
   */
  redirectUri: string;

  /**
   * The client ID of the user's Azure Active Directory Application used for a
   * federated connection.
   *
   * @generated from field: string federated_application_client_id = 6;
   */
  federatedApplicationClientId: string;

  /**
   * Output only. A unique Google-owned and Google-generated identity for the
   * Connection. This identity will be used to access the user's Azure Active
   * Directory Application.
   *
   * @generated from field: string identity = 7;
   */
  identity: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.AzureProperties.
 * Use `create(AzurePropertiesSchema)` to create a new message.
 */
export const AzurePropertiesSchema: GenMessage<AzureProperties> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 13);

/**
 * Container for connection properties for delegation of access to GCP
 * resources.
 *
 * @generated from message google.cloud.bigquery.connection.v1.CloudResourceProperties
 */
export type CloudResourceProperties = Message<"google.cloud.bigquery.connection.v1.CloudResourceProperties"> & {
  /**
   * Output only. The account ID of the service created for the purpose of this
   * connection.
   *
   * The service account does not have any permissions associated with it
   * when it is created. After creation, customers delegate permissions
   * to the service account. When the connection is used in the context of an
   * operation in BigQuery, the service account will be used to connect to the
   * desired resources in GCP.
   *
   * The account ID is in the form of:
   *   <service-1234>@gcp-sa-bigquery-cloudresource.iam.gserviceaccount.com
   *
   * @generated from field: string service_account_id = 1;
   */
  serviceAccountId: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.CloudResourceProperties.
 * Use `create(CloudResourcePropertiesSchema)` to create a new message.
 */
export const CloudResourcePropertiesSchema: GenMessage<CloudResourceProperties> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 14);

/**
 * Configuration of the Dataproc Metastore Service.
 *
 * @generated from message google.cloud.bigquery.connection.v1.MetastoreServiceConfig
 */
export type MetastoreServiceConfig = Message<"google.cloud.bigquery.connection.v1.MetastoreServiceConfig"> & {
  /**
   * Optional. Resource name of an existing Dataproc Metastore service.
   *
   * Example:
   *
   * * `projects/[project_id]/locations/[region]/services/[service_id]`
   *
   * @generated from field: string metastore_service = 1;
   */
  metastoreService: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.MetastoreServiceConfig.
 * Use `create(MetastoreServiceConfigSchema)` to create a new message.
 */
export const MetastoreServiceConfigSchema: GenMessage<MetastoreServiceConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 15);

/**
 * Configuration of the Spark History Server.
 *
 * @generated from message google.cloud.bigquery.connection.v1.SparkHistoryServerConfig
 */
export type SparkHistoryServerConfig = Message<"google.cloud.bigquery.connection.v1.SparkHistoryServerConfig"> & {
  /**
   * Optional. Resource name of an existing Dataproc Cluster to act as a Spark
   * History Server for the connection.
   *
   * Example:
   *
   * * `projects/[project_id]/regions/[region]/clusters/[cluster_name]`
   *
   * @generated from field: string dataproc_cluster = 1;
   */
  dataprocCluster: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.SparkHistoryServerConfig.
 * Use `create(SparkHistoryServerConfigSchema)` to create a new message.
 */
export const SparkHistoryServerConfigSchema: GenMessage<SparkHistoryServerConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 16);

/**
 * Container for connection properties to execute stored procedures for Apache
 * Spark.
 *
 * @generated from message google.cloud.bigquery.connection.v1.SparkProperties
 */
export type SparkProperties = Message<"google.cloud.bigquery.connection.v1.SparkProperties"> & {
  /**
   * Output only. The account ID of the service created for the purpose of this
   * connection.
   *
   * The service account does not have any permissions associated with it when
   * it is created. After creation, customers delegate permissions to the
   * service account. When the connection is used in the context of a stored
   * procedure for Apache Spark in BigQuery, the service account is used to
   * connect to the desired resources in Google Cloud.
   *
   * The account ID is in the form of:
   * bqcx-<projectnumber>-<uniqueid>@gcp-sa-bigquery-consp.iam.gserviceaccount.com
   *
   * @generated from field: string service_account_id = 1;
   */
  serviceAccountId: string;

  /**
   * Optional. Dataproc Metastore Service configuration for the connection.
   *
   * @generated from field: google.cloud.bigquery.connection.v1.MetastoreServiceConfig metastore_service_config = 3;
   */
  metastoreServiceConfig?: MetastoreServiceConfig;

  /**
   * Optional. Spark History Server configuration for the connection.
   *
   * @generated from field: google.cloud.bigquery.connection.v1.SparkHistoryServerConfig spark_history_server_config = 4;
   */
  sparkHistoryServerConfig?: SparkHistoryServerConfig;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.SparkProperties.
 * Use `create(SparkPropertiesSchema)` to create a new message.
 */
export const SparkPropertiesSchema: GenMessage<SparkProperties> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 17);

/**
 * Connection properties specific to Salesforce DataCloud. This is intended for
 * use only by Salesforce partner projects.
 *
 * @generated from message google.cloud.bigquery.connection.v1.SalesforceDataCloudProperties
 */
export type SalesforceDataCloudProperties = Message<"google.cloud.bigquery.connection.v1.SalesforceDataCloudProperties"> & {
  /**
   * The URL to the user's Salesforce DataCloud instance.
   *
   * @generated from field: string instance_uri = 1;
   */
  instanceUri: string;

  /**
   * Output only. A unique Google-owned and Google-generated service account
   * identity for the connection.
   *
   * @generated from field: string identity = 2;
   */
  identity: string;

  /**
   * The ID of the user's Salesforce tenant.
   *
   * @generated from field: string tenant_id = 3;
   */
  tenantId: string;
};

/**
 * Describes the message google.cloud.bigquery.connection.v1.SalesforceDataCloudProperties.
 * Use `create(SalesforceDataCloudPropertiesSchema)` to create a new message.
 */
export const SalesforceDataCloudPropertiesSchema: GenMessage<SalesforceDataCloudProperties> = /*@__PURE__*/
  messageDesc(file_google_cloud_bigquery_connection_v1_connection, 18);

/**
 * Manages external data source connections and credentials.
 *
 * @generated from service google.cloud.bigquery.connection.v1.ConnectionService
 */
export const ConnectionService: GenService<{
  /**
   * Creates a new connection.
   *
   * @generated from rpc google.cloud.bigquery.connection.v1.ConnectionService.CreateConnection
   */
  createConnection: {
    methodKind: "unary";
    input: typeof CreateConnectionRequestSchema;
    output: typeof ConnectionSchema;
  },
  /**
   * Returns specified connection.
   *
   * @generated from rpc google.cloud.bigquery.connection.v1.ConnectionService.GetConnection
   */
  getConnection: {
    methodKind: "unary";
    input: typeof GetConnectionRequestSchema;
    output: typeof ConnectionSchema;
  },
  /**
   * Returns a list of connections in the given project.
   *
   * @generated from rpc google.cloud.bigquery.connection.v1.ConnectionService.ListConnections
   */
  listConnections: {
    methodKind: "unary";
    input: typeof ListConnectionsRequestSchema;
    output: typeof ListConnectionsResponseSchema;
  },
  /**
   * Updates the specified connection. For security reasons, also resets
   * credential if connection properties are in the update field mask.
   *
   * @generated from rpc google.cloud.bigquery.connection.v1.ConnectionService.UpdateConnection
   */
  updateConnection: {
    methodKind: "unary";
    input: typeof UpdateConnectionRequestSchema;
    output: typeof ConnectionSchema;
  },
  /**
   * Deletes connection and associated credential.
   *
   * @generated from rpc google.cloud.bigquery.connection.v1.ConnectionService.DeleteConnection
   */
  deleteConnection: {
    methodKind: "unary";
    input: typeof DeleteConnectionRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets the access control policy for a resource.
   * Returns an empty policy if the resource exists and does not have a policy
   * set.
   *
   * @generated from rpc google.cloud.bigquery.connection.v1.ConnectionService.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Sets the access control policy on the specified resource. Replaces any
   * existing policy.
   *
   * Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
   *
   * @generated from rpc google.cloud.bigquery.connection.v1.ConnectionService.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Returns permissions that a caller has on the specified resource.
   * If the resource does not exist, this will return an empty set of
   * permissions, not a `NOT_FOUND` error.
   *
   * Note: This operation is designed to be used for building permission-aware
   * UIs and command-line tools, not for authorization checking. This operation
   * may "fail open" without warning.
   *
   * @generated from rpc google.cloud.bigquery.connection.v1.ConnectionService.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_bigquery_connection_v1_connection, 0);

