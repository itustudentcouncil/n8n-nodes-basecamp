// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/baremetalsolution/v2/network.proto (package google.cloud.baremetalsolution.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/baremetalsolution/v2/network.proto.
 */
export const file_google_cloud_baremetalsolution_v2_network: GenFile = /*@__PURE__*/
  fileDesc("Ci9nb29nbGUvY2xvdWQvYmFyZW1ldGFsc29sdXRpb24vdjIvbmV0d29yay5wcm90bxIhZ29vZ2xlLmNsb3VkLmJhcmVtZXRhbHNvbHV0aW9uLnYyIqgHCgdOZXR3b3JrEhEKBG5hbWUYBSABKAlCA+BBAxIKCgJpZBgKIAEoCRI9CgR0eXBlGAIgASgOMi8uZ29vZ2xlLmNsb3VkLmJhcmVtZXRhbHNvbHV0aW9uLnYyLk5ldHdvcmsuVHlwZRISCgppcF9hZGRyZXNzGAMgASgJEhMKC21hY19hZGRyZXNzGAQgAygJEj8KBXN0YXRlGAYgASgOMjAuZ29vZ2xlLmNsb3VkLmJhcmVtZXRhbHNvbHV0aW9uLnYyLk5ldHdvcmsuU3RhdGUSDwoHdmxhbl9pZBgHIAEoCRIMCgRjaWRyGAggASgJEjMKA3ZyZhgJIAEoCzImLmdvb2dsZS5jbG91ZC5iYXJlbWV0YWxzb2x1dGlvbi52Mi5WUkYSRgoGbGFiZWxzGAsgAygLMjYuZ29vZ2xlLmNsb3VkLmJhcmVtZXRhbHNvbHV0aW9uLnYyLk5ldHdvcmsuTGFiZWxzRW50cnkSFQoNc2VydmljZXNfY2lkchgMIAEoCRJSCgxyZXNlcnZhdGlvbnMYDSADKAsyPC5nb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjIuTmV0d29ya0FkZHJlc3NSZXNlcnZhdGlvbhIQCgNwb2QYDiABKAlCA+BBAxJPCgxtb3VudF9wb2ludHMYDyADKAsyNC5nb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjIuTmV0d29ya01vdW50UG9pbnRCA+BBBBIcChRqdW1ib19mcmFtZXNfZW5hYmxlZBgQIAEoCBIXCgpnYXRld2F5X2lwGBEgASgJQgPgQQMaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASI1CgRUeXBlEhQKEFRZUEVfVU5TUEVDSUZJRUQQABIKCgZDTElFTlQQARILCgdQUklWQVRFEAIiYwoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIQCgxQUk9WSVNJT05JTkcQARIPCgtQUk9WSVNJT05FRBACEhIKDkRFUFJPVklTSU9OSU5HEAMSDAoIVVBEQVRJTkcQBDpp6kFmCihiYXJlbWV0YWxzb2x1dGlvbi5nb29nbGVhcGlzLmNvbS9OZXR3b3JrEjpwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vbmV0d29ya3Mve25ldHdvcmt9IlUKGU5ldHdvcmtBZGRyZXNzUmVzZXJ2YXRpb24SFQoNc3RhcnRfYWRkcmVzcxgBIAEoCRITCgtlbmRfYWRkcmVzcxgCIAEoCRIMCgRub3RlGAMgASgJIuUECgNWUkYSDAoEbmFtZRgBIAEoCRI7CgVzdGF0ZRgFIAEoDjIsLmdvb2dsZS5jbG91ZC5iYXJlbWV0YWxzb2x1dGlvbi52Mi5WUkYuU3RhdGUSRAoKcW9zX3BvbGljeRgGIAEoCzIwLmdvb2dsZS5jbG91ZC5iYXJlbWV0YWxzb2x1dGlvbi52Mi5WUkYuUW9zUG9saWN5Ek8KEHZsYW5fYXR0YWNobWVudHMYByADKAsyNS5nb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjIuVlJGLlZsYW5BdHRhY2htZW50GiMKCVFvc1BvbGljeRIWCg5iYW5kd2lkdGhfZ2JwcxgBIAEoARqTAgoOVmxhbkF0dGFjaG1lbnQSFAoMcGVlcl92bGFuX2lkGAEgASgDEg8KB3BlZXJfaXAYAiABKAkSEQoJcm91dGVyX2lwGAMgASgJEhgKC3BhaXJpbmdfa2V5GAQgASgJQgPgQQQSRAoKcW9zX3BvbGljeRgFIAEoCzIwLmdvb2dsZS5jbG91ZC5iYXJlbWV0YWxzb2x1dGlvbi52Mi5WUkYuUW9zUG9saWN5Eg8KAmlkGAYgASgJQgPgQQUSVgoXaW50ZXJjb25uZWN0X2F0dGFjaG1lbnQYByABKAlCNeBBAfpBLwotY29tcHV0ZS5nb29nbGVhcGlzLmNvbS9JbnRlcmNvbm5lY3RBdHRhY2htZW50IkEKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASEAoMUFJPVklTSU9OSU5HEAESDwoLUFJPVklTSU9ORUQQAiLbAgoQTG9naWNhbEludGVyZmFjZRJvChpsb2dpY2FsX25ldHdvcmtfaW50ZXJmYWNlcxgBIAMoCzJLLmdvb2dsZS5jbG91ZC5iYXJlbWV0YWxzb2x1dGlvbi52Mi5Mb2dpY2FsSW50ZXJmYWNlLkxvZ2ljYWxOZXR3b3JrSW50ZXJmYWNlEgwKBG5hbWUYAiABKAkSGwoPaW50ZXJmYWNlX2luZGV4GAMgASgFQgIYARqqAQoXTG9naWNhbE5ldHdvcmtJbnRlcmZhY2USDwoHbmV0d29yaxgBIAEoCRISCgppcF9hZGRyZXNzGAIgASgJEhcKD2RlZmF1bHRfZ2F0ZXdheRgDIAEoCBJFCgxuZXR3b3JrX3R5cGUYBCABKA4yLy5nb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjIuTmV0d29yay5UeXBlEgoKAmlkGAUgASgJIlMKEUdldE5ldHdvcmtSZXF1ZXN0Ej4KBG5hbWUYASABKAlCMOBBAvpBKgooYmFyZW1ldGFsc29sdXRpb24uZ29vZ2xlYXBpcy5jb20vTmV0d29yayKHAQoTTGlzdE5ldHdvcmtzUmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIwohbG9jYXRpb25zLmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uEhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJEg4KBmZpbHRlchgEIAEoCSKCAQoUTGlzdE5ldHdvcmtzUmVzcG9uc2USPAoIbmV0d29ya3MYASADKAsyKi5nb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjIuTmV0d29yaxIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSEwoLdW5yZWFjaGFibGUYAyADKAkiiQEKFFVwZGF0ZU5ldHdvcmtSZXF1ZXN0EkAKB25ldHdvcmsYASABKAsyKi5nb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjIuTmV0d29ya0ID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJdCgxOZXR3b3JrVXNhZ2USOwoHbmV0d29yaxgBIAEoCzIqLmdvb2dsZS5jbG91ZC5iYXJlbWV0YWxzb2x1dGlvbi52Mi5OZXR3b3JrEhAKCHVzZWRfaXBzGAIgAygJIlYKF0xpc3ROZXR3b3JrVXNhZ2VSZXF1ZXN0EjsKCGxvY2F0aW9uGAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbiJdChhMaXN0TmV0d29ya1VzYWdlUmVzcG9uc2USQQoIbmV0d29ya3MYASADKAsyLy5nb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjIuTmV0d29ya1VzYWdlIp0BChFOZXR3b3JrTW91bnRQb2ludBJACghpbnN0YW5jZRgBIAEoCUIu+kErCiliYXJlbWV0YWxzb2x1dGlvbi5nb29nbGVhcGlzLmNvbS9JbnN0YW5jZRIZChFsb2dpY2FsX2ludGVyZmFjZRgCIAEoCRIXCg9kZWZhdWx0X2dhdGV3YXkYAyABKAgSEgoKaXBfYWRkcmVzcxgEIAEoCSJzChRSZW5hbWVOZXR3b3JrUmVxdWVzdBI+CgRuYW1lGAEgASgJQjDgQQL6QSoKKGJhcmVtZXRhbHNvbHV0aW9uLmdvb2dsZWFwaXMuY29tL05ldHdvcmsSGwoObmV3X25ldHdvcmtfaWQYAiABKAlCA+BBAkKFAwolY29tLmdvb2dsZS5jbG91ZC5iYXJlbWV0YWxzb2x1dGlvbi52MkIMTmV0d29ya1Byb3RvUAFaU2Nsb3VkLmdvb2dsZS5jb20vZ28vYmFyZW1ldGFsc29sdXRpb24vYXBpdjIvYmFyZW1ldGFsc29sdXRpb25wYjtiYXJlbWV0YWxzb2x1dGlvbnBiqgIhR29vZ2xlLkNsb3VkLkJhcmVNZXRhbFNvbHV0aW9uLlYyygIhR29vZ2xlXENsb3VkXEJhcmVNZXRhbFNvbHV0aW9uXFYy6gIkR29vZ2xlOjpDbG91ZDo6QmFyZU1ldGFsU29sdXRpb246OlYy6kGGAQotY29tcHV0ZS5nb29nbGVhcGlzLmNvbS9JbnRlcmNvbm5lY3RBdHRhY2htZW50ElVwcm9qZWN0cy97cHJvamVjdH0vcmVnaW9ucy97cmVnaW9ufS9pbnRlcmNvbm5lY3RBdHRhY2htZW50cy97aW50ZXJjb25uZWN0X2F0dGFjaG1lbnR9YgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_field_mask]);

/**
 * A Network.
 *
 * @generated from message google.cloud.baremetalsolution.v2.Network
 */
export type Network = Message<"google.cloud.baremetalsolution.v2.Network"> & {
  /**
   * Output only. The resource name of this `Network`.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * Format:
   * `projects/{project}/locations/{location}/networks/{network}`
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * An identifier for the `Network`, generated by the backend.
   *
   * @generated from field: string id = 10;
   */
  id: string;

  /**
   * The type of this network.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.Network.Type type = 2;
   */
  type: Network_Type;

  /**
   * IP address configured.
   *
   * @generated from field: string ip_address = 3;
   */
  ipAddress: string;

  /**
   * List of physical interfaces.
   *
   * @generated from field: repeated string mac_address = 4;
   */
  macAddress: string[];

  /**
   * The Network state.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.Network.State state = 6;
   */
  state: Network_State;

  /**
   * The vlan id of the Network.
   *
   * @generated from field: string vlan_id = 7;
   */
  vlanId: string;

  /**
   * The cidr of the Network.
   *
   * @generated from field: string cidr = 8;
   */
  cidr: string;

  /**
   * The vrf for the Network.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.VRF vrf = 9;
   */
  vrf?: VRF;

  /**
   * Labels as key value pairs.
   *
   * @generated from field: map<string, string> labels = 11;
   */
  labels: { [key: string]: string };

  /**
   * IP range for reserved for services (e.g. NFS).
   *
   * @generated from field: string services_cidr = 12;
   */
  servicesCidr: string;

  /**
   * List of IP address reservations in this network.
   * When updating this field, an error will be generated if a reservation
   * conflicts with an IP address already allocated to a physical server.
   *
   * @generated from field: repeated google.cloud.baremetalsolution.v2.NetworkAddressReservation reservations = 13;
   */
  reservations: NetworkAddressReservation[];

  /**
   * Output only. Pod name.
   *
   * @generated from field: string pod = 14;
   */
  pod: string;

  /**
   * Input only. List of mount points to attach the network to.
   *
   * @generated from field: repeated google.cloud.baremetalsolution.v2.NetworkMountPoint mount_points = 15;
   */
  mountPoints: NetworkMountPoint[];

  /**
   * Whether network uses standard frames or jumbo ones.
   *
   * @generated from field: bool jumbo_frames_enabled = 16;
   */
  jumboFramesEnabled: boolean;

  /**
   * Output only. Gateway ip address.
   *
   * @generated from field: string gateway_ip = 17;
   */
  gatewayIp: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.Network.
 * Use `create(NetworkSchema)` to create a new message.
 */
export const NetworkSchema: GenMessage<Network> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 0);

/**
 * Network type.
 *
 * @generated from enum google.cloud.baremetalsolution.v2.Network.Type
 */
export enum Network_Type {
  /**
   * Unspecified value.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Client network, a network peered to a Google Cloud VPC.
   *
   * @generated from enum value: CLIENT = 1;
   */
  CLIENT = 1,

  /**
   * Private network, a network local to the Bare Metal Solution environment.
   *
   * @generated from enum value: PRIVATE = 2;
   */
  PRIVATE = 2,
}

/**
 * Describes the enum google.cloud.baremetalsolution.v2.Network.Type.
 */
export const Network_TypeSchema: GenEnum<Network_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_baremetalsolution_v2_network, 0, 0);

/**
 * The possible states for this Network.
 *
 * @generated from enum google.cloud.baremetalsolution.v2.Network.State
 */
export enum Network_State {
  /**
   * The Network is in an unknown state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The Network is provisioning.
   *
   * @generated from enum value: PROVISIONING = 1;
   */
  PROVISIONING = 1,

  /**
   * The Network has been provisioned.
   *
   * @generated from enum value: PROVISIONED = 2;
   */
  PROVISIONED = 2,

  /**
   * The Network is being deprovisioned.
   *
   * @generated from enum value: DEPROVISIONING = 3;
   */
  DEPROVISIONING = 3,

  /**
   * The Network is being updated.
   *
   * @generated from enum value: UPDATING = 4;
   */
  UPDATING = 4,
}

/**
 * Describes the enum google.cloud.baremetalsolution.v2.Network.State.
 */
export const Network_StateSchema: GenEnum<Network_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_baremetalsolution_v2_network, 0, 1);

/**
 * A reservation of one or more addresses in a network.
 *
 * @generated from message google.cloud.baremetalsolution.v2.NetworkAddressReservation
 */
export type NetworkAddressReservation = Message<"google.cloud.baremetalsolution.v2.NetworkAddressReservation"> & {
  /**
   * The first address of this reservation block.
   * Must be specified as a single IPv4 address, e.g. 10.1.2.2.
   *
   * @generated from field: string start_address = 1;
   */
  startAddress: string;

  /**
   * The last address of this reservation block, inclusive. I.e., for cases when
   * reservations are only single addresses, end_address and start_address will
   * be the same.
   * Must be specified as a single IPv4 address, e.g. 10.1.2.2.
   *
   * @generated from field: string end_address = 2;
   */
  endAddress: string;

  /**
   * A note about this reservation, intended for human consumption.
   *
   * @generated from field: string note = 3;
   */
  note: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.NetworkAddressReservation.
 * Use `create(NetworkAddressReservationSchema)` to create a new message.
 */
export const NetworkAddressReservationSchema: GenMessage<NetworkAddressReservation> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 1);

/**
 * A network VRF.
 *
 * @generated from message google.cloud.baremetalsolution.v2.VRF
 */
export type VRF = Message<"google.cloud.baremetalsolution.v2.VRF"> & {
  /**
   * The name of the VRF.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The possible state of VRF.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.VRF.State state = 5;
   */
  state: VRF_State;

  /**
   * The QOS policy applied to this VRF.
   * The value is only meaningful when all the vlan attachments have the same
   * QoS. This field should not be used for new integrations, use vlan
   * attachment level qos instead. The field is left for backward-compatibility.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.VRF.QosPolicy qos_policy = 6;
   */
  qosPolicy?: VRF_QosPolicy;

  /**
   * The list of VLAN attachments for the VRF.
   *
   * @generated from field: repeated google.cloud.baremetalsolution.v2.VRF.VlanAttachment vlan_attachments = 7;
   */
  vlanAttachments: VRF_VlanAttachment[];
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.VRF.
 * Use `create(VRFSchema)` to create a new message.
 */
export const VRFSchema: GenMessage<VRF> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 2);

/**
 * QOS policy parameters.
 *
 * @generated from message google.cloud.baremetalsolution.v2.VRF.QosPolicy
 */
export type VRF_QosPolicy = Message<"google.cloud.baremetalsolution.v2.VRF.QosPolicy"> & {
  /**
   * The bandwidth permitted by the QOS policy, in gbps.
   *
   * @generated from field: double bandwidth_gbps = 1;
   */
  bandwidthGbps: number;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.VRF.QosPolicy.
 * Use `create(VRF_QosPolicySchema)` to create a new message.
 */
export const VRF_QosPolicySchema: GenMessage<VRF_QosPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 2, 0);

/**
 * VLAN attachment details.
 *
 * @generated from message google.cloud.baremetalsolution.v2.VRF.VlanAttachment
 */
export type VRF_VlanAttachment = Message<"google.cloud.baremetalsolution.v2.VRF.VlanAttachment"> & {
  /**
   * The peer vlan ID of the attachment.
   *
   * @generated from field: int64 peer_vlan_id = 1;
   */
  peerVlanId: bigint;

  /**
   * The peer IP of the attachment.
   *
   * @generated from field: string peer_ip = 2;
   */
  peerIp: string;

  /**
   * The router IP of the attachment.
   *
   * @generated from field: string router_ip = 3;
   */
  routerIp: string;

  /**
   * Input only. Pairing key.
   *
   * @generated from field: string pairing_key = 4;
   */
  pairingKey: string;

  /**
   * The QOS policy applied to this VLAN attachment.
   * This value should be preferred to using qos at vrf level.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.VRF.QosPolicy qos_policy = 5;
   */
  qosPolicy?: VRF_QosPolicy;

  /**
   * Immutable. The identifier of the attachment within vrf.
   *
   * @generated from field: string id = 6;
   */
  id: string;

  /**
   * Optional. The name of the vlan attachment within vrf. This is of the form
   * projects/{project_number}/regions/{region}/interconnectAttachments/{interconnect_attachment}
   *
   * @generated from field: string interconnect_attachment = 7;
   */
  interconnectAttachment: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.VRF.VlanAttachment.
 * Use `create(VRF_VlanAttachmentSchema)` to create a new message.
 */
export const VRF_VlanAttachmentSchema: GenMessage<VRF_VlanAttachment> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 2, 1);

/**
 * The possible states for this VRF.
 *
 * @generated from enum google.cloud.baremetalsolution.v2.VRF.State
 */
export enum VRF_State {
  /**
   * The unspecified state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The vrf is provisioning.
   *
   * @generated from enum value: PROVISIONING = 1;
   */
  PROVISIONING = 1,

  /**
   * The vrf is provisioned.
   *
   * @generated from enum value: PROVISIONED = 2;
   */
  PROVISIONED = 2,
}

/**
 * Describes the enum google.cloud.baremetalsolution.v2.VRF.State.
 */
export const VRF_StateSchema: GenEnum<VRF_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_baremetalsolution_v2_network, 2, 0);

/**
 * Each logical interface represents a logical abstraction of the underlying
 * physical interface (for eg. bond, nic) of the instance. Each logical
 * interface can effectively map to multiple network-IP pairs and still be
 * mapped to one underlying physical interface.
 *
 * @generated from message google.cloud.baremetalsolution.v2.LogicalInterface
 */
export type LogicalInterface = Message<"google.cloud.baremetalsolution.v2.LogicalInterface"> & {
  /**
   * List of logical network interfaces within a logical interface.
   *
   * @generated from field: repeated google.cloud.baremetalsolution.v2.LogicalInterface.LogicalNetworkInterface logical_network_interfaces = 1;
   */
  logicalNetworkInterfaces: LogicalInterface_LogicalNetworkInterface[];

  /**
   * Interface name. This is of syntax <bond><bond_mode> or <nic> and
   * forms part of the network template name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The index of the logical interface mapping to the index of the hardware
   * bond or nic on the chosen network template. This field is deprecated.
   *
   * @generated from field: int32 interface_index = 3 [deprecated = true];
   * @deprecated
   */
  interfaceIndex: number;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.LogicalInterface.
 * Use `create(LogicalInterfaceSchema)` to create a new message.
 */
export const LogicalInterfaceSchema: GenMessage<LogicalInterface> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 3);

/**
 * Each logical network interface is effectively a network and IP pair.
 *
 * @generated from message google.cloud.baremetalsolution.v2.LogicalInterface.LogicalNetworkInterface
 */
export type LogicalInterface_LogicalNetworkInterface = Message<"google.cloud.baremetalsolution.v2.LogicalInterface.LogicalNetworkInterface"> & {
  /**
   * Name of the network
   *
   * @generated from field: string network = 1;
   */
  network: string;

  /**
   * IP address in the network
   *
   * @generated from field: string ip_address = 2;
   */
  ipAddress: string;

  /**
   * Whether this interface is the default gateway for the instance. Only
   * one interface can be the default gateway for the instance.
   *
   * @generated from field: bool default_gateway = 3;
   */
  defaultGateway: boolean;

  /**
   * Type of network.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.Network.Type network_type = 4;
   */
  networkType: Network_Type;

  /**
   * An identifier for the `Network`, generated by the backend.
   *
   * @generated from field: string id = 5;
   */
  id: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.LogicalInterface.LogicalNetworkInterface.
 * Use `create(LogicalInterface_LogicalNetworkInterfaceSchema)` to create a new message.
 */
export const LogicalInterface_LogicalNetworkInterfaceSchema: GenMessage<LogicalInterface_LogicalNetworkInterface> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 3, 0);

/**
 * Message for requesting network information.
 *
 * @generated from message google.cloud.baremetalsolution.v2.GetNetworkRequest
 */
export type GetNetworkRequest = Message<"google.cloud.baremetalsolution.v2.GetNetworkRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.GetNetworkRequest.
 * Use `create(GetNetworkRequestSchema)` to create a new message.
 */
export const GetNetworkRequestSchema: GenMessage<GetNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 4);

/**
 * Message for requesting a list of networks.
 *
 * @generated from message google.cloud.baremetalsolution.v2.ListNetworksRequest
 */
export type ListNetworksRequest = Message<"google.cloud.baremetalsolution.v2.ListNetworksRequest"> & {
  /**
   * Required. Parent value for ListNetworksRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. The server might return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results from the server.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * List filter.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.ListNetworksRequest.
 * Use `create(ListNetworksRequestSchema)` to create a new message.
 */
export const ListNetworksRequestSchema: GenMessage<ListNetworksRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 5);

/**
 * Response message containing the list of networks.
 *
 * @generated from message google.cloud.baremetalsolution.v2.ListNetworksResponse
 */
export type ListNetworksResponse = Message<"google.cloud.baremetalsolution.v2.ListNetworksResponse"> & {
  /**
   * The list of networks.
   *
   * @generated from field: repeated google.cloud.baremetalsolution.v2.Network networks = 1;
   */
  networks: Network[];

  /**
   * A token identifying a page of results from the server.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.ListNetworksResponse.
 * Use `create(ListNetworksResponseSchema)` to create a new message.
 */
export const ListNetworksResponseSchema: GenMessage<ListNetworksResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 6);

/**
 * Message requesting to updating a network.
 *
 * @generated from message google.cloud.baremetalsolution.v2.UpdateNetworkRequest
 */
export type UpdateNetworkRequest = Message<"google.cloud.baremetalsolution.v2.UpdateNetworkRequest"> & {
  /**
   * Required. The network to update.
   *
   * The `name` field is used to identify the instance to update.
   * Format: projects/{project}/locations/{location}/networks/{network}
   *
   * @generated from field: google.cloud.baremetalsolution.v2.Network network = 1;
   */
  network?: Network;

  /**
   * The list of fields to update.
   * The only currently supported fields are:
   *   `labels`, `reservations`, `vrf.vlan_attachments`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.UpdateNetworkRequest.
 * Use `create(UpdateNetworkRequestSchema)` to create a new message.
 */
export const UpdateNetworkRequestSchema: GenMessage<UpdateNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 7);

/**
 * Network with all used IP addresses.
 *
 * @generated from message google.cloud.baremetalsolution.v2.NetworkUsage
 */
export type NetworkUsage = Message<"google.cloud.baremetalsolution.v2.NetworkUsage"> & {
  /**
   * Network.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.Network network = 1;
   */
  network?: Network;

  /**
   * All used IP addresses in this network.
   *
   * @generated from field: repeated string used_ips = 2;
   */
  usedIps: string[];
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.NetworkUsage.
 * Use `create(NetworkUsageSchema)` to create a new message.
 */
export const NetworkUsageSchema: GenMessage<NetworkUsage> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 8);

/**
 * Request to get networks with IPs.
 *
 * @generated from message google.cloud.baremetalsolution.v2.ListNetworkUsageRequest
 */
export type ListNetworkUsageRequest = Message<"google.cloud.baremetalsolution.v2.ListNetworkUsageRequest"> & {
  /**
   * Required. Parent value (project and location).
   *
   * @generated from field: string location = 1;
   */
  location: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.ListNetworkUsageRequest.
 * Use `create(ListNetworkUsageRequestSchema)` to create a new message.
 */
export const ListNetworkUsageRequestSchema: GenMessage<ListNetworkUsageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 9);

/**
 * Response with Networks with IPs
 *
 * @generated from message google.cloud.baremetalsolution.v2.ListNetworkUsageResponse
 */
export type ListNetworkUsageResponse = Message<"google.cloud.baremetalsolution.v2.ListNetworkUsageResponse"> & {
  /**
   * Networks with IPs.
   *
   * @generated from field: repeated google.cloud.baremetalsolution.v2.NetworkUsage networks = 1;
   */
  networks: NetworkUsage[];
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.ListNetworkUsageResponse.
 * Use `create(ListNetworkUsageResponseSchema)` to create a new message.
 */
export const ListNetworkUsageResponseSchema: GenMessage<ListNetworkUsageResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 10);

/**
 * Mount point for a network.
 *
 * @generated from message google.cloud.baremetalsolution.v2.NetworkMountPoint
 */
export type NetworkMountPoint = Message<"google.cloud.baremetalsolution.v2.NetworkMountPoint"> & {
  /**
   * Instance to attach network to.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Logical interface to detach from.
   *
   * @generated from field: string logical_interface = 2;
   */
  logicalInterface: string;

  /**
   * Network should be a default gateway.
   *
   * @generated from field: bool default_gateway = 3;
   */
  defaultGateway: boolean;

  /**
   * Ip address of the server.
   *
   * @generated from field: string ip_address = 4;
   */
  ipAddress: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.NetworkMountPoint.
 * Use `create(NetworkMountPointSchema)` to create a new message.
 */
export const NetworkMountPointSchema: GenMessage<NetworkMountPoint> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 11);

/**
 * Message requesting rename of a server.
 *
 * @generated from message google.cloud.baremetalsolution.v2.RenameNetworkRequest
 */
export type RenameNetworkRequest = Message<"google.cloud.baremetalsolution.v2.RenameNetworkRequest"> & {
  /**
   * Required. The `name` field is used to identify the network.
   * Format: projects/{project}/locations/{location}/networks/{network}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The new `id` of the network.
   *
   * @generated from field: string new_network_id = 2;
   */
  newNetworkId: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.RenameNetworkRequest.
 * Use `create(RenameNetworkRequestSchema)` to create a new message.
 */
export const RenameNetworkRequestSchema: GenMessage<RenameNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_network, 12);

