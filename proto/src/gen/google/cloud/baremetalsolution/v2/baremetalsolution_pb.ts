// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/baremetalsolution/v2/baremetalsolution.proto (package google.cloud.baremetalsolution.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { DetachLunRequestSchema, DisableInteractiveSerialConsoleRequestSchema, EnableInteractiveSerialConsoleRequestSchema, GetInstanceRequestSchema, InstanceSchema, ListInstancesRequestSchema, ListInstancesResponseSchema, RenameInstanceRequestSchema, ResetInstanceRequestSchema, StartInstanceRequestSchema, StopInstanceRequestSchema, UpdateInstanceRequestSchema } from "./instance_pb";
import { file_google_cloud_baremetalsolution_v2_instance } from "./instance_pb";
import type { EvictLunRequestSchema, GetLunRequestSchema, ListLunsRequestSchema, ListLunsResponseSchema, LunSchema } from "./lun_pb";
import { file_google_cloud_baremetalsolution_v2_lun } from "./lun_pb";
import type { GetNetworkRequestSchema, ListNetworksRequestSchema, ListNetworksResponseSchema, ListNetworkUsageRequestSchema, ListNetworkUsageResponseSchema, NetworkSchema, RenameNetworkRequestSchema, UpdateNetworkRequestSchema } from "./network_pb";
import { file_google_cloud_baremetalsolution_v2_network } from "./network_pb";
import type { CreateNfsShareRequestSchema, DeleteNfsShareRequestSchema, GetNfsShareRequestSchema, ListNfsSharesRequestSchema, ListNfsSharesResponseSchema, NfsShareSchema, RenameNfsShareRequestSchema, UpdateNfsShareRequestSchema } from "./nfs_share_pb";
import { file_google_cloud_baremetalsolution_v2_nfs_share } from "./nfs_share_pb";
import type { ListOSImagesRequestSchema, ListOSImagesResponseSchema } from "./osimage_pb";
import { file_google_cloud_baremetalsolution_v2_osimage } from "./osimage_pb";
import type { CreateProvisioningConfigRequestSchema, GetProvisioningConfigRequestSchema, ListProvisioningQuotasRequestSchema, ListProvisioningQuotasResponseSchema, ProvisioningConfigSchema, SubmitProvisioningConfigRequestSchema, SubmitProvisioningConfigResponseSchema, UpdateProvisioningConfigRequestSchema } from "./provisioning_pb";
import { file_google_cloud_baremetalsolution_v2_provisioning } from "./provisioning_pb";
import type { CreateSSHKeyRequestSchema, DeleteSSHKeyRequestSchema, ListSSHKeysRequestSchema, ListSSHKeysResponseSchema, SSHKeySchema } from "./ssh_key_pb";
import { file_google_cloud_baremetalsolution_v2_ssh_key } from "./ssh_key_pb";
import type { EvictVolumeRequestSchema, GetVolumeRequestSchema, ListVolumesRequestSchema, ListVolumesResponseSchema, RenameVolumeRequestSchema, ResizeVolumeRequestSchema, UpdateVolumeRequestSchema, VolumeSchema } from "./volume_pb";
import { file_google_cloud_baremetalsolution_v2_volume } from "./volume_pb";
import type { CreateVolumeSnapshotRequestSchema, DeleteVolumeSnapshotRequestSchema, GetVolumeSnapshotRequestSchema, ListVolumeSnapshotsRequestSchema, ListVolumeSnapshotsResponseSchema, RestoreVolumeSnapshotRequestSchema, VolumeSnapshotSchema } from "./volume_snapshot_pb";
import { file_google_cloud_baremetalsolution_v2_volume_snapshot } from "./volume_snapshot_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/baremetalsolution/v2/baremetalsolution.proto.
 */
export const file_google_cloud_baremetalsolution_v2_baremetalsolution: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_cloud_baremetalsolution_v2_instance, file_google_cloud_baremetalsolution_v2_lun, file_google_cloud_baremetalsolution_v2_network, file_google_cloud_baremetalsolution_v2_nfs_share, file_google_cloud_baremetalsolution_v2_osimage, file_google_cloud_baremetalsolution_v2_provisioning, file_google_cloud_baremetalsolution_v2_ssh_key, file_google_cloud_baremetalsolution_v2_volume, file_google_cloud_baremetalsolution_v2_volume_snapshot, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_timestamp]);

/**
 * Represents the metadata from a long-running operation.
 *
 * @generated from message google.cloud.baremetalsolution.v2.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.baremetalsolution.v2.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the action executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. Identifies whether the user requested the cancellation
   * of the operation. Operations that have been successfully cancelled
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used with the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_baremetalsolution, 0);

/**
 * Response message from resetting a server.
 *
 * @generated from message google.cloud.baremetalsolution.v2.ResetInstanceResponse
 */
export type ResetInstanceResponse = Message<"google.cloud.baremetalsolution.v2.ResetInstanceResponse"> & {
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.ResetInstanceResponse.
 * Use `create(ResetInstanceResponseSchema)` to create a new message.
 */
export const ResetInstanceResponseSchema: GenMessage<ResetInstanceResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_baremetalsolution, 1);

/**
 * Performs management operations on Bare Metal Solution servers.
 *
 * The `baremetalsolution.googleapis.com` service provides management
 * capabilities for Bare Metal Solution servers. To access the API methods, you
 * must assign Bare Metal Solution IAM roles containing the desired permissions
 * to your staff in your Google Cloud project. You must also enable the Bare
 * Metal Solution API. Once enabled, the methods act
 * upon specific servers in your Bare Metal Solution environment.
 *
 * @generated from service google.cloud.baremetalsolution.v2.BareMetalSolution
 */
export const BareMetalSolution: GenService<{
  /**
   * List servers in a given project and location.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ListInstances
   */
  listInstances: {
    methodKind: "unary";
    input: typeof ListInstancesRequestSchema;
    output: typeof ListInstancesResponseSchema;
  },
  /**
   * Get details about a single server.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.GetInstance
   */
  getInstance: {
    methodKind: "unary";
    input: typeof GetInstanceRequestSchema;
    output: typeof InstanceSchema;
  },
  /**
   * Update details of a single server.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.UpdateInstance
   */
  updateInstance: {
    methodKind: "unary";
    input: typeof UpdateInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * RenameInstance sets a new name for an instance.
   * Use with caution, previous names become immediately invalidated.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.RenameInstance
   */
  renameInstance: {
    methodKind: "unary";
    input: typeof RenameInstanceRequestSchema;
    output: typeof InstanceSchema;
  },
  /**
   * Perform an ungraceful, hard reset on a server. Equivalent to shutting the
   * power off and then turning it back on.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ResetInstance
   */
  resetInstance: {
    methodKind: "unary";
    input: typeof ResetInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Starts a server that was shutdown.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.StartInstance
   */
  startInstance: {
    methodKind: "unary";
    input: typeof StartInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Stop a running server.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.StopInstance
   */
  stopInstance: {
    methodKind: "unary";
    input: typeof StopInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Enable the interactive serial console feature on an instance.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.EnableInteractiveSerialConsole
   */
  enableInteractiveSerialConsole: {
    methodKind: "unary";
    input: typeof EnableInteractiveSerialConsoleRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Disable the interactive serial console feature on an instance.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.DisableInteractiveSerialConsole
   */
  disableInteractiveSerialConsole: {
    methodKind: "unary";
    input: typeof DisableInteractiveSerialConsoleRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Detach LUN from Instance.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.DetachLun
   */
  detachLun: {
    methodKind: "unary";
    input: typeof DetachLunRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists the public SSH keys registered for the specified project.
   * These SSH keys are used only for the interactive serial console feature.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ListSSHKeys
   */
  listSSHKeys: {
    methodKind: "unary";
    input: typeof ListSSHKeysRequestSchema;
    output: typeof ListSSHKeysResponseSchema;
  },
  /**
   * Register a public SSH key in the specified project for use with the
   * interactive serial console feature.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.CreateSSHKey
   */
  createSSHKey: {
    methodKind: "unary";
    input: typeof CreateSSHKeyRequestSchema;
    output: typeof SSHKeySchema;
  },
  /**
   * Deletes a public SSH key registered in the specified project.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.DeleteSSHKey
   */
  deleteSSHKey: {
    methodKind: "unary";
    input: typeof DeleteSSHKeyRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * List storage volumes in a given project and location.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ListVolumes
   */
  listVolumes: {
    methodKind: "unary";
    input: typeof ListVolumesRequestSchema;
    output: typeof ListVolumesResponseSchema;
  },
  /**
   * Get details of a single storage volume.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.GetVolume
   */
  getVolume: {
    methodKind: "unary";
    input: typeof GetVolumeRequestSchema;
    output: typeof VolumeSchema;
  },
  /**
   * Update details of a single storage volume.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.UpdateVolume
   */
  updateVolume: {
    methodKind: "unary";
    input: typeof UpdateVolumeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * RenameVolume sets a new name for a volume.
   * Use with caution, previous names become immediately invalidated.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.RenameVolume
   */
  renameVolume: {
    methodKind: "unary";
    input: typeof RenameVolumeRequestSchema;
    output: typeof VolumeSchema;
  },
  /**
   * Skips volume's cooloff and deletes it now.
   * Volume must be in cooloff state.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.EvictVolume
   */
  evictVolume: {
    methodKind: "unary";
    input: typeof EvictVolumeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Emergency Volume resize.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ResizeVolume
   */
  resizeVolume: {
    methodKind: "unary";
    input: typeof ResizeVolumeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * List network in a given project and location.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ListNetworks
   */
  listNetworks: {
    methodKind: "unary";
    input: typeof ListNetworksRequestSchema;
    output: typeof ListNetworksResponseSchema;
  },
  /**
   * List all Networks (and used IPs for each Network) in the vendor account
   * associated with the specified project.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ListNetworkUsage
   */
  listNetworkUsage: {
    methodKind: "unary";
    input: typeof ListNetworkUsageRequestSchema;
    output: typeof ListNetworkUsageResponseSchema;
  },
  /**
   * Get details of a single network.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.GetNetwork
   */
  getNetwork: {
    methodKind: "unary";
    input: typeof GetNetworkRequestSchema;
    output: typeof NetworkSchema;
  },
  /**
   * Update details of a single network.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.UpdateNetwork
   */
  updateNetwork: {
    methodKind: "unary";
    input: typeof UpdateNetworkRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Takes a snapshot of a boot volume.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.CreateVolumeSnapshot
   */
  createVolumeSnapshot: {
    methodKind: "unary";
    input: typeof CreateVolumeSnapshotRequestSchema;
    output: typeof VolumeSnapshotSchema;
  },
  /**
   * Uses the specified snapshot to restore its parent volume.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.RestoreVolumeSnapshot
   */
  restoreVolumeSnapshot: {
    methodKind: "unary";
    input: typeof RestoreVolumeSnapshotRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a volume snapshot.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.DeleteVolumeSnapshot
   */
  deleteVolumeSnapshot: {
    methodKind: "unary";
    input: typeof DeleteVolumeSnapshotRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Returns the specified snapshot resource.
   * Returns INVALID_ARGUMENT if called for a non-boot volume.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.GetVolumeSnapshot
   */
  getVolumeSnapshot: {
    methodKind: "unary";
    input: typeof GetVolumeSnapshotRequestSchema;
    output: typeof VolumeSnapshotSchema;
  },
  /**
   * Retrieves the list of snapshots for the specified volume.
   * Returns a response with an empty list of snapshots if called
   * for a non-boot volume.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ListVolumeSnapshots
   */
  listVolumeSnapshots: {
    methodKind: "unary";
    input: typeof ListVolumeSnapshotsRequestSchema;
    output: typeof ListVolumeSnapshotsResponseSchema;
  },
  /**
   * Get details of a single storage logical unit number(LUN).
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.GetLun
   */
  getLun: {
    methodKind: "unary";
    input: typeof GetLunRequestSchema;
    output: typeof LunSchema;
  },
  /**
   * List storage volume luns for given storage volume.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ListLuns
   */
  listLuns: {
    methodKind: "unary";
    input: typeof ListLunsRequestSchema;
    output: typeof ListLunsResponseSchema;
  },
  /**
   * Skips lun's cooloff and deletes it now.
   * Lun must be in cooloff state.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.EvictLun
   */
  evictLun: {
    methodKind: "unary";
    input: typeof EvictLunRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Get details of a single NFS share.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.GetNfsShare
   */
  getNfsShare: {
    methodKind: "unary";
    input: typeof GetNfsShareRequestSchema;
    output: typeof NfsShareSchema;
  },
  /**
   * List NFS shares.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ListNfsShares
   */
  listNfsShares: {
    methodKind: "unary";
    input: typeof ListNfsSharesRequestSchema;
    output: typeof ListNfsSharesResponseSchema;
  },
  /**
   * Update details of a single NFS share.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.UpdateNfsShare
   */
  updateNfsShare: {
    methodKind: "unary";
    input: typeof UpdateNfsShareRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Create an NFS share.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.CreateNfsShare
   */
  createNfsShare: {
    methodKind: "unary";
    input: typeof CreateNfsShareRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * RenameNfsShare sets a new name for an nfsshare.
   * Use with caution, previous names become immediately invalidated.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.RenameNfsShare
   */
  renameNfsShare: {
    methodKind: "unary";
    input: typeof RenameNfsShareRequestSchema;
    output: typeof NfsShareSchema;
  },
  /**
   * Delete an NFS share. The underlying volume is automatically deleted.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.DeleteNfsShare
   */
  deleteNfsShare: {
    methodKind: "unary";
    input: typeof DeleteNfsShareRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * List the budget details to provision resources on a given project.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ListProvisioningQuotas
   */
  listProvisioningQuotas: {
    methodKind: "unary";
    input: typeof ListProvisioningQuotasRequestSchema;
    output: typeof ListProvisioningQuotasResponseSchema;
  },
  /**
   * Submit a provisiong configuration for a given project.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.SubmitProvisioningConfig
   */
  submitProvisioningConfig: {
    methodKind: "unary";
    input: typeof SubmitProvisioningConfigRequestSchema;
    output: typeof SubmitProvisioningConfigResponseSchema;
  },
  /**
   * Get ProvisioningConfig by name.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.GetProvisioningConfig
   */
  getProvisioningConfig: {
    methodKind: "unary";
    input: typeof GetProvisioningConfigRequestSchema;
    output: typeof ProvisioningConfigSchema;
  },
  /**
   * Create new ProvisioningConfig.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.CreateProvisioningConfig
   */
  createProvisioningConfig: {
    methodKind: "unary";
    input: typeof CreateProvisioningConfigRequestSchema;
    output: typeof ProvisioningConfigSchema;
  },
  /**
   * Update existing ProvisioningConfig.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.UpdateProvisioningConfig
   */
  updateProvisioningConfig: {
    methodKind: "unary";
    input: typeof UpdateProvisioningConfigRequestSchema;
    output: typeof ProvisioningConfigSchema;
  },
  /**
   * RenameNetwork sets a new name for a network.
   * Use with caution, previous names become immediately invalidated.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.RenameNetwork
   */
  renameNetwork: {
    methodKind: "unary";
    input: typeof RenameNetworkRequestSchema;
    output: typeof NetworkSchema;
  },
  /**
   * Retrieves the list of OS images which are currently approved.
   *
   * @generated from rpc google.cloud.baremetalsolution.v2.BareMetalSolution.ListOSImages
   */
  listOSImages: {
    methodKind: "unary";
    input: typeof ListOSImagesRequestSchema;
    output: typeof ListOSImagesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_baremetalsolution_v2_baremetalsolution, 0);

