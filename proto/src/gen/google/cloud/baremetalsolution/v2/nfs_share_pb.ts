// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/baremetalsolution/v2/nfs_share.proto (package google.cloud.baremetalsolution.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/baremetalsolution/v2/nfs_share.proto.
 */
export const file_google_cloud_baremetalsolution_v2_nfs_share: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2xvdWQvYmFyZW1ldGFsc29sdXRpb24vdjIvbmZzX3NoYXJlLnByb3RvEiFnb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjIinQkKCE5mc1NoYXJlEhEKBG5hbWUYASABKAlCA+BBBRIZCgxuZnNfc2hhcmVfaWQYAiABKAlCA+BBAxIPCgJpZBgIIAEoCUID4EEDEkUKBXN0YXRlGAMgASgOMjEuZ29vZ2xlLmNsb3VkLmJhcmVtZXRhbHNvbHV0aW9uLnYyLk5mc1NoYXJlLlN0YXRlQgPgQQMSPwoGdm9sdW1lGAQgASgJQi/gQQP6QSkKJ2JhcmVtZXRhbHNvbHV0aW9uLmdvb2dsZWFwaXMuY29tL1ZvbHVtZRJSCg9hbGxvd2VkX2NsaWVudHMYBSADKAsyOS5nb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjIuTmZzU2hhcmUuQWxsb3dlZENsaWVudBJHCgZsYWJlbHMYBiADKAsyNy5nb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjIuTmZzU2hhcmUuTGFiZWxzRW50cnkSGgoScmVxdWVzdGVkX3NpemVfZ2liGAcgASgDElIKDHN0b3JhZ2VfdHlwZRgJIAEoDjI3Lmdvb2dsZS5jbG91ZC5iYXJlbWV0YWxzb2x1dGlvbi52Mi5OZnNTaGFyZS5TdG9yYWdlVHlwZUID4EEFGrMCCg1BbGxvd2VkQ2xpZW50Ej4KB25ldHdvcmsYASABKAlCLfpBKgooYmFyZW1ldGFsc29sdXRpb24uZ29vZ2xlYXBpcy5jb20vTmV0d29yaxIVCghzaGFyZV9pcBgCIAEoCUID4EEDEhwKFGFsbG93ZWRfY2xpZW50c19jaWRyGAMgASgJElcKEW1vdW50X3Blcm1pc3Npb25zGAQgASgOMjwuZ29vZ2xlLmNsb3VkLmJhcmVtZXRhbHNvbHV0aW9uLnYyLk5mc1NoYXJlLk1vdW50UGVybWlzc2lvbnMSEQoJYWxsb3dfZGV2GAUgASgIEhIKCmFsbG93X3N1aWQYBiABKAgSFgoObm9fcm9vdF9zcXVhc2gYByABKAgSFQoIbmZzX3BhdGgYCCABKAlCA+BBAxotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIlkKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASDwoLUFJPVklTSU9ORUQQARIMCghDUkVBVElORxACEgwKCFVQREFUSU5HEAMSDAoIREVMRVRJTkcQBCJPChBNb3VudFBlcm1pc3Npb25zEiEKHU1PVU5UX1BFUk1JU1NJT05TX1VOU1BFQ0lGSUVEEAASCAoEUkVBRBABEg4KClJFQURfV1JJVEUQAiI9CgtTdG9yYWdlVHlwZRIcChhTVE9SQUdFX1RZUEVfVU5TUEVDSUZJRUQQABIHCgNTU0QQARIHCgNIREQQAjpt6kFqCiliYXJlbWV0YWxzb2x1dGlvbi5nb29nbGVhcGlzLmNvbS9ORlNTaGFyZRI9cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L25mc1NoYXJlcy97bmZzX3NoYXJlfSJVChJHZXROZnNTaGFyZVJlcXVlc3QSPwoEbmFtZRgBIAEoCUIx4EEC+kErCiliYXJlbWV0YWxzb2x1dGlvbi5nb29nbGVhcGlzLmNvbS9ORlNTaGFyZSKIAQoUTGlzdE5mc1NoYXJlc1JlcXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCRIOCgZmaWx0ZXIYBCABKAkihgEKFUxpc3ROZnNTaGFyZXNSZXNwb25zZRI/CgpuZnNfc2hhcmVzGAEgAygLMisuZ29vZ2xlLmNsb3VkLmJhcmVtZXRhbHNvbHV0aW9uLnYyLk5mc1NoYXJlEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRITCgt1bnJlYWNoYWJsZRgDIAMoCSKNAQoVVXBkYXRlTmZzU2hhcmVSZXF1ZXN0EkMKCW5mc19zaGFyZRgBIAEoCzIrLmdvb2dsZS5jbG91ZC5iYXJlbWV0YWxzb2x1dGlvbi52Mi5OZnNTaGFyZUID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJ2ChVSZW5hbWVOZnNTaGFyZVJlcXVlc3QSPwoEbmFtZRgBIAEoCUIx4EEC+kErCiliYXJlbWV0YWxzb2x1dGlvbi5nb29nbGVhcGlzLmNvbS9ORlNTaGFyZRIcCg9uZXdfbmZzc2hhcmVfaWQYAiABKAlCA+BBAiKXAQoVQ3JlYXRlTmZzU2hhcmVSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjCiFsb2NhdGlvbnMuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SQwoJbmZzX3NoYXJlGAIgASgLMisuZ29vZ2xlLmNsb3VkLmJhcmVtZXRhbHNvbHV0aW9uLnYyLk5mc1NoYXJlQgPgQQIiWAoVRGVsZXRlTmZzU2hhcmVSZXF1ZXN0Ej8KBG5hbWUYASABKAlCMeBBAvpBKwopYmFyZW1ldGFsc29sdXRpb24uZ29vZ2xlYXBpcy5jb20vTkZTU2hhcmVC/AEKJWNvbS5nb29nbGUuY2xvdWQuYmFyZW1ldGFsc29sdXRpb24udjJCDU5mc1NoYXJlUHJvdG9QAVpTY2xvdWQuZ29vZ2xlLmNvbS9nby9iYXJlbWV0YWxzb2x1dGlvbi9hcGl2Mi9iYXJlbWV0YWxzb2x1dGlvbnBiO2JhcmVtZXRhbHNvbHV0aW9ucGKqAiFHb29nbGUuQ2xvdWQuQmFyZU1ldGFsU29sdXRpb24uVjLKAiFHb29nbGVcQ2xvdWRcQmFyZU1ldGFsU29sdXRpb25cVjLqAiRHb29nbGU6OkNsb3VkOjpCYXJlTWV0YWxTb2x1dGlvbjo6VjJiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_field_mask]);

/**
 * An NFS share.
 *
 * @generated from message google.cloud.baremetalsolution.v2.NfsShare
 */
export type NfsShare = Message<"google.cloud.baremetalsolution.v2.NfsShare"> & {
  /**
   * Immutable. The name of the NFS share.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. An identifier for the NFS share, generated by the backend.
   * This field will be deprecated in the future, use `id` instead.
   *
   * @generated from field: string nfs_share_id = 2;
   */
  nfsShareId: string;

  /**
   * Output only. An identifier for the NFS share, generated by the backend.
   * This is the same value as nfs_share_id and will replace it in the future.
   *
   * @generated from field: string id = 8;
   */
  id: string;

  /**
   * Output only. The state of the NFS share.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.NfsShare.State state = 3;
   */
  state: NfsShare_State;

  /**
   * Output only. The underlying volume of the share. Created automatically
   * during provisioning.
   *
   * @generated from field: string volume = 4;
   */
  volume: string;

  /**
   * List of allowed access points.
   *
   * @generated from field: repeated google.cloud.baremetalsolution.v2.NfsShare.AllowedClient allowed_clients = 5;
   */
  allowedClients: NfsShare_AllowedClient[];

  /**
   * Labels as key value pairs.
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };

  /**
   * The requested size, in GiB.
   *
   * @generated from field: int64 requested_size_gib = 7;
   */
  requestedSizeGib: bigint;

  /**
   * Immutable. The storage type of the underlying volume.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.NfsShare.StorageType storage_type = 9;
   */
  storageType: NfsShare_StorageType;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.NfsShare.
 * Use `create(NfsShareSchema)` to create a new message.
 */
export const NfsShareSchema: GenMessage<NfsShare> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 0);

/**
 * Represents an 'access point' for the share.
 *
 * @generated from message google.cloud.baremetalsolution.v2.NfsShare.AllowedClient
 */
export type NfsShare_AllowedClient = Message<"google.cloud.baremetalsolution.v2.NfsShare.AllowedClient"> & {
  /**
   * The network the access point sits on.
   *
   * @generated from field: string network = 1;
   */
  network: string;

  /**
   * Output only. The IP address of the share on this network. Assigned
   * automatically during provisioning based on the network's services_cidr.
   *
   * @generated from field: string share_ip = 2;
   */
  shareIp: string;

  /**
   * The subnet of IP addresses permitted to access the share.
   *
   * @generated from field: string allowed_clients_cidr = 3;
   */
  allowedClientsCidr: string;

  /**
   * Mount permissions.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.NfsShare.MountPermissions mount_permissions = 4;
   */
  mountPermissions: NfsShare_MountPermissions;

  /**
   * Allow dev flag.  Which controls whether to allow creation of devices.
   *
   * @generated from field: bool allow_dev = 5;
   */
  allowDev: boolean;

  /**
   * Allow the setuid flag.
   *
   * @generated from field: bool allow_suid = 6;
   */
  allowSuid: boolean;

  /**
   * Disable root squashing, which is a feature of NFS.
   * Root squash is a special mapping of the remote superuser (root) identity
   * when using identity authentication.
   *
   * @generated from field: bool no_root_squash = 7;
   */
  noRootSquash: boolean;

  /**
   * Output only. The path to access NFS, in format shareIP:/InstanceID
   * InstanceID is the generated ID instead of customer provided name.
   * example like "10.0.0.0:/g123456789-nfs001"
   *
   * @generated from field: string nfs_path = 8;
   */
  nfsPath: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.NfsShare.AllowedClient.
 * Use `create(NfsShare_AllowedClientSchema)` to create a new message.
 */
export const NfsShare_AllowedClientSchema: GenMessage<NfsShare_AllowedClient> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 0, 0);

/**
 * The possible states for this NFS share.
 *
 * @generated from enum google.cloud.baremetalsolution.v2.NfsShare.State
 */
export enum NfsShare_State {
  /**
   * The share is in an unknown state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The share has been provisioned.
   *
   * @generated from enum value: PROVISIONED = 1;
   */
  PROVISIONED = 1,

  /**
   * The NFS Share is being created.
   *
   * @generated from enum value: CREATING = 2;
   */
  CREATING = 2,

  /**
   * The NFS Share is being updated.
   *
   * @generated from enum value: UPDATING = 3;
   */
  UPDATING = 3,

  /**
   * The NFS Share has been requested to be deleted.
   *
   * @generated from enum value: DELETING = 4;
   */
  DELETING = 4,
}

/**
 * Describes the enum google.cloud.baremetalsolution.v2.NfsShare.State.
 */
export const NfsShare_StateSchema: GenEnum<NfsShare_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 0, 0);

/**
 * The possible mount permissions.
 *
 * @generated from enum google.cloud.baremetalsolution.v2.NfsShare.MountPermissions
 */
export enum NfsShare_MountPermissions {
  /**
   * Permissions were not specified.
   *
   * @generated from enum value: MOUNT_PERMISSIONS_UNSPECIFIED = 0;
   */
  MOUNT_PERMISSIONS_UNSPECIFIED = 0,

  /**
   * NFS share can be mount with read-only permissions.
   *
   * @generated from enum value: READ = 1;
   */
  READ = 1,

  /**
   * NFS share can be mount with read-write permissions.
   *
   * @generated from enum value: READ_WRITE = 2;
   */
  READ_WRITE = 2,
}

/**
 * Describes the enum google.cloud.baremetalsolution.v2.NfsShare.MountPermissions.
 */
export const NfsShare_MountPermissionsSchema: GenEnum<NfsShare_MountPermissions> = /*@__PURE__*/
  enumDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 0, 1);

/**
 * The storage type for a volume.
 *
 * @generated from enum google.cloud.baremetalsolution.v2.NfsShare.StorageType
 */
export enum NfsShare_StorageType {
  /**
   * The storage type for this volume is unknown.
   *
   * @generated from enum value: STORAGE_TYPE_UNSPECIFIED = 0;
   */
  STORAGE_TYPE_UNSPECIFIED = 0,

  /**
   * The storage type for this volume is SSD.
   *
   * @generated from enum value: SSD = 1;
   */
  SSD = 1,

  /**
   * This storage type for this volume is HDD.
   *
   * @generated from enum value: HDD = 2;
   */
  HDD = 2,
}

/**
 * Describes the enum google.cloud.baremetalsolution.v2.NfsShare.StorageType.
 */
export const NfsShare_StorageTypeSchema: GenEnum<NfsShare_StorageType> = /*@__PURE__*/
  enumDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 0, 2);

/**
 * Message for requesting NFS share information.
 *
 * @generated from message google.cloud.baremetalsolution.v2.GetNfsShareRequest
 */
export type GetNfsShareRequest = Message<"google.cloud.baremetalsolution.v2.GetNfsShareRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.GetNfsShareRequest.
 * Use `create(GetNfsShareRequestSchema)` to create a new message.
 */
export const GetNfsShareRequestSchema: GenMessage<GetNfsShareRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 1);

/**
 * Message for requesting a list of NFS shares.
 *
 * @generated from message google.cloud.baremetalsolution.v2.ListNfsSharesRequest
 */
export type ListNfsSharesRequest = Message<"google.cloud.baremetalsolution.v2.ListNfsSharesRequest"> & {
  /**
   * Required. Parent value for ListNfsSharesRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. The server might return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results from the server.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * List filter.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.ListNfsSharesRequest.
 * Use `create(ListNfsSharesRequestSchema)` to create a new message.
 */
export const ListNfsSharesRequestSchema: GenMessage<ListNfsSharesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 2);

/**
 * Response message containing the list of NFS shares.
 *
 * @generated from message google.cloud.baremetalsolution.v2.ListNfsSharesResponse
 */
export type ListNfsSharesResponse = Message<"google.cloud.baremetalsolution.v2.ListNfsSharesResponse"> & {
  /**
   * The list of NFS shares.
   *
   * @generated from field: repeated google.cloud.baremetalsolution.v2.NfsShare nfs_shares = 1;
   */
  nfsShares: NfsShare[];

  /**
   * A token identifying a page of results from the server.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.ListNfsSharesResponse.
 * Use `create(ListNfsSharesResponseSchema)` to create a new message.
 */
export const ListNfsSharesResponseSchema: GenMessage<ListNfsSharesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 3);

/**
 * Message requesting to updating an NFS share.
 *
 * @generated from message google.cloud.baremetalsolution.v2.UpdateNfsShareRequest
 */
export type UpdateNfsShareRequest = Message<"google.cloud.baremetalsolution.v2.UpdateNfsShareRequest"> & {
  /**
   * Required. The NFS share to update.
   *
   * The `name` field is used to identify the NFS share to update.
   * Format: projects/{project}/locations/{location}/nfsShares/{nfs_share}
   *
   * @generated from field: google.cloud.baremetalsolution.v2.NfsShare nfs_share = 1;
   */
  nfsShare?: NfsShare;

  /**
   * The list of fields to update.
   * The only currently supported fields are:
   *   `labels`
   *   `allowed_clients`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.UpdateNfsShareRequest.
 * Use `create(UpdateNfsShareRequestSchema)` to create a new message.
 */
export const UpdateNfsShareRequestSchema: GenMessage<UpdateNfsShareRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 4);

/**
 * Message requesting rename of a server.
 *
 * @generated from message google.cloud.baremetalsolution.v2.RenameNfsShareRequest
 */
export type RenameNfsShareRequest = Message<"google.cloud.baremetalsolution.v2.RenameNfsShareRequest"> & {
  /**
   * Required. The `name` field is used to identify the nfsshare.
   * Format: projects/{project}/locations/{location}/nfsshares/{nfsshare}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The new `id` of the nfsshare.
   *
   * @generated from field: string new_nfsshare_id = 2;
   */
  newNfsshareId: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.RenameNfsShareRequest.
 * Use `create(RenameNfsShareRequestSchema)` to create a new message.
 */
export const RenameNfsShareRequestSchema: GenMessage<RenameNfsShareRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 5);

/**
 * Message for creating an NFS share.
 *
 * @generated from message google.cloud.baremetalsolution.v2.CreateNfsShareRequest
 */
export type CreateNfsShareRequest = Message<"google.cloud.baremetalsolution.v2.CreateNfsShareRequest"> & {
  /**
   * Required. The parent project and location.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The NfsShare to create.
   *
   * @generated from field: google.cloud.baremetalsolution.v2.NfsShare nfs_share = 2;
   */
  nfsShare?: NfsShare;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.CreateNfsShareRequest.
 * Use `create(CreateNfsShareRequestSchema)` to create a new message.
 */
export const CreateNfsShareRequestSchema: GenMessage<CreateNfsShareRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 6);

/**
 * Message for deleting an NFS share.
 *
 * @generated from message google.cloud.baremetalsolution.v2.DeleteNfsShareRequest
 */
export type DeleteNfsShareRequest = Message<"google.cloud.baremetalsolution.v2.DeleteNfsShareRequest"> & {
  /**
   * Required. The name of the NFS share to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.baremetalsolution.v2.DeleteNfsShareRequest.
 * Use `create(DeleteNfsShareRequestSchema)` to create a new message.
 */
export const DeleteNfsShareRequestSchema: GenMessage<DeleteNfsShareRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_baremetalsolution_v2_nfs_share, 7);

