// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/talent/v4/histogram.proto (package google.cloud.talent.v4, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/talent/v4/histogram.proto.
 */
export const file_google_cloud_talent_v4_histogram: GenFile = /*@__PURE__*/
  fileDesc("CiZnb29nbGUvY2xvdWQvdGFsZW50L3Y0L2hpc3RvZ3JhbS5wcm90bxIWZ29vZ2xlLmNsb3VkLnRhbGVudC52NCIpCg5IaXN0b2dyYW1RdWVyeRIXCg9oaXN0b2dyYW1fcXVlcnkYASABKAkisQEKFEhpc3RvZ3JhbVF1ZXJ5UmVzdWx0EhcKD2hpc3RvZ3JhbV9xdWVyeRgBIAEoCRJOCgloaXN0b2dyYW0YAiADKAsyOy5nb29nbGUuY2xvdWQudGFsZW50LnY0Lkhpc3RvZ3JhbVF1ZXJ5UmVzdWx0Lkhpc3RvZ3JhbUVudHJ5GjAKDkhpc3RvZ3JhbUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoAzoCOAFCaAoaY29tLmdvb2dsZS5jbG91ZC50YWxlbnQudjRCDkhpc3RvZ3JhbVByb3RvUAFaMmNsb3VkLmdvb2dsZS5jb20vZ28vdGFsZW50L2FwaXY0L3RhbGVudHBiO3RhbGVudHBiogIDQ1RTYgZwcm90bzM");

/**
 * The histogram request.
 *
 * @generated from message google.cloud.talent.v4.HistogramQuery
 */
export type HistogramQuery = Message<"google.cloud.talent.v4.HistogramQuery"> & {
  /**
   * An expression specifies a histogram request against matching jobs for
   * searches.
   *
   * See
   * [SearchJobsRequest.histogram_queries][google.cloud.talent.v4.SearchJobsRequest.histogram_queries]
   * for details about syntax.
   *
   * @generated from field: string histogram_query = 1;
   */
  histogramQuery: string;
};

/**
 * Describes the message google.cloud.talent.v4.HistogramQuery.
 * Use `create(HistogramQuerySchema)` to create a new message.
 */
export const HistogramQuerySchema: GenMessage<HistogramQuery> = /*@__PURE__*/
  messageDesc(file_google_cloud_talent_v4_histogram, 0);

/**
 * Histogram result that matches
 * [HistogramQuery][google.cloud.talent.v4.HistogramQuery] specified in
 * searches.
 *
 * @generated from message google.cloud.talent.v4.HistogramQueryResult
 */
export type HistogramQueryResult = Message<"google.cloud.talent.v4.HistogramQueryResult"> & {
  /**
   * Requested histogram expression.
   *
   * @generated from field: string histogram_query = 1;
   */
  histogramQuery: string;

  /**
   * A map from the values of the facet associated with distinct values to the
   * number of matching entries with corresponding value.
   *
   * The key format is:
   *
   * * (for string histogram) string values stored in the field.
   * * (for named numeric bucket) name specified in `bucket()` function, like
   *   for `bucket(0, MAX, "non-negative")`, the key will be `non-negative`.
   * * (for anonymous numeric bucket) range formatted as `<low>-<high>`, for
   *   example, `0-1000`, `MIN-0`, and `0-MAX`.
   *
   * @generated from field: map<string, int64> histogram = 2;
   */
  histogram: { [key: string]: bigint };
};

/**
 * Describes the message google.cloud.talent.v4.HistogramQueryResult.
 * Use `create(HistogramQueryResultSchema)` to create a new message.
 */
export const HistogramQueryResultSchema: GenMessage<HistogramQueryResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_talent_v4_histogram, 1);

