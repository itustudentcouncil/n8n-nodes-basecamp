// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/policytroubleshooter/v1/explanations.proto (package google.cloud.policytroubleshooter.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Policy } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { Expr } from "../../../type/expr_pb";
import { file_google_type_expr } from "../../../type/expr_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/policytroubleshooter/v1/explanations.proto.
 */
export const file_google_cloud_policytroubleshooter_v1_explanations: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvY2xvdWQvcG9saWN5dHJvdWJsZXNob290ZXIvdjEvZXhwbGFuYXRpb25zLnByb3RvEiRnb29nbGUuY2xvdWQucG9saWN5dHJvdWJsZXNob290ZXIudjEiXwoLQWNjZXNzVHVwbGUSFgoJcHJpbmNpcGFsGAEgASgJQgPgQQISHwoSZnVsbF9yZXNvdXJjZV9uYW1lGAIgASgJQgPgQQISFwoKcGVybWlzc2lvbhgDIAEoCUID4EECIrwCCg9FeHBsYWluZWRQb2xpY3kSQQoGYWNjZXNzGAEgASgOMjEuZ29vZ2xlLmNsb3VkLnBvbGljeXRyb3VibGVzaG9vdGVyLnYxLkFjY2Vzc1N0YXRlEhoKEmZ1bGxfcmVzb3VyY2VfbmFtZRgCIAEoCRIlCgZwb2xpY3kYAyABKAsyFS5nb29nbGUuaWFtLnYxLlBvbGljeRJWChRiaW5kaW5nX2V4cGxhbmF0aW9ucxgEIAMoCzI4Lmdvb2dsZS5jbG91ZC5wb2xpY3l0cm91Ymxlc2hvb3Rlci52MS5CaW5kaW5nRXhwbGFuYXRpb24SSwoJcmVsZXZhbmNlGAUgASgOMjguZ29vZ2xlLmNsb3VkLnBvbGljeXRyb3VibGVzaG9vdGVyLnYxLkhldXJpc3RpY1JlbGV2YW5jZSKDCQoSQmluZGluZ0V4cGxhbmF0aW9uEkYKBmFjY2VzcxgBIAEoDjIxLmdvb2dsZS5jbG91ZC5wb2xpY3l0cm91Ymxlc2hvb3Rlci52MS5BY2Nlc3NTdGF0ZUID4EECEgwKBHJvbGUYAiABKAkSYAoPcm9sZV9wZXJtaXNzaW9uGAMgASgOMkcuZ29vZ2xlLmNsb3VkLnBvbGljeXRyb3VibGVzaG9vdGVyLnYxLkJpbmRpbmdFeHBsYW5hdGlvbi5Sb2xlUGVybWlzc2lvbhJbChlyb2xlX3Blcm1pc3Npb25fcmVsZXZhbmNlGAQgASgOMjguZ29vZ2xlLmNsb3VkLnBvbGljeXRyb3VibGVzaG9vdGVyLnYxLkhldXJpc3RpY1JlbGV2YW5jZRJeCgttZW1iZXJzaGlwcxgFIAMoCzJJLmdvb2dsZS5jbG91ZC5wb2xpY3l0cm91Ymxlc2hvb3Rlci52MS5CaW5kaW5nRXhwbGFuYXRpb24uTWVtYmVyc2hpcHNFbnRyeRJLCglyZWxldmFuY2UYBiABKA4yOC5nb29nbGUuY2xvdWQucG9saWN5dHJvdWJsZXNob290ZXIudjEuSGV1cmlzdGljUmVsZXZhbmNlEiQKCWNvbmRpdGlvbhgHIAEoCzIRLmdvb2dsZS50eXBlLkV4cHIauwEKE0Fubm90YXRlZE1lbWJlcnNoaXASVwoKbWVtYmVyc2hpcBgBIAEoDjJDLmdvb2dsZS5jbG91ZC5wb2xpY3l0cm91Ymxlc2hvb3Rlci52MS5CaW5kaW5nRXhwbGFuYXRpb24uTWVtYmVyc2hpcBJLCglyZWxldmFuY2UYAiABKA4yOC5nb29nbGUuY2xvdWQucG9saWN5dHJvdWJsZXNob290ZXIudjEuSGV1cmlzdGljUmVsZXZhbmNlGoABChBNZW1iZXJzaGlwc0VudHJ5EgsKA2tleRgBIAEoCRJbCgV2YWx1ZRgCIAEoCzJMLmdvb2dsZS5jbG91ZC5wb2xpY3l0cm91Ymxlc2hvb3Rlci52MS5CaW5kaW5nRXhwbGFuYXRpb24uQW5ub3RhdGVkTWVtYmVyc2hpcDoCOAEimgEKDlJvbGVQZXJtaXNzaW9uEh8KG1JPTEVfUEVSTUlTU0lPTl9VTlNQRUNJRklFRBAAEhwKGFJPTEVfUEVSTUlTU0lPTl9JTkNMVURFRBABEiAKHFJPTEVfUEVSTUlTU0lPTl9OT1RfSU5DTFVERUQQAhInCiNST0xFX1BFUk1JU1NJT05fVU5LTk9XTl9JTkZPX0RFTklFRBADIqYBCgpNZW1iZXJzaGlwEhoKFk1FTUJFUlNISVBfVU5TUEVDSUZJRUQQABIXChNNRU1CRVJTSElQX0lOQ0xVREVEEAESGwoXTUVNQkVSU0hJUF9OT1RfSU5DTFVERUQQAhIiCh5NRU1CRVJTSElQX1VOS05PV05fSU5GT19ERU5JRUQQAxIiCh5NRU1CRVJTSElQX1VOS05PV05fVU5TVVBQT1JURUQQBCp7CgtBY2Nlc3NTdGF0ZRIcChhBQ0NFU1NfU1RBVEVfVU5TUEVDSUZJRUQQABILCgdHUkFOVEVEEAESDwoLTk9UX0dSQU5URUQQAhIXChNVTktOT1dOX0NPTkRJVElPTkFMEAMSFwoTVU5LTk9XTl9JTkZPX0RFTklFRBAEKk8KEkhldXJpc3RpY1JlbGV2YW5jZRIjCh9IRVVSSVNUSUNfUkVMRVZBTkNFX1VOU1BFQ0lGSUVEEAASCgoGTk9STUFMEAESCAoESElHSBACQtYBWlxjbG91ZC5nb29nbGUuY29tL2dvL3BvbGljeXRyb3VibGVzaG9vdGVyL2FwaXYxL3BvbGljeXRyb3VibGVzaG9vdGVycGI7cG9saWN5dHJvdWJsZXNob290ZXJwYqoCJEdvb2dsZS5DbG91ZC5Qb2xpY3lUcm91Ymxlc2hvb3Rlci5WMcoCJEdvb2dsZVxDbG91ZFxQb2xpY3lUcm91Ymxlc2hvb3RlclxWMeoCJ0dvb2dsZTo6Q2xvdWQ6OlBvbGljeVRyb3VibGVzaG9vdGVyOjpWMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_iam_v1_policy, file_google_type_expr]);

/**
 * Information about the principal, resource, and permission to check.
 *
 * @generated from message google.cloud.policytroubleshooter.v1.AccessTuple
 */
export type AccessTuple = Message<"google.cloud.policytroubleshooter.v1.AccessTuple"> & {
  /**
   * Required. The principal whose access you want to check, in the form of
   * the email address that represents that principal. For example,
   * `alice@example.com` or
   * `my-service-account@my-project.iam.gserviceaccount.com`.
   *
   * The principal must be a Google Account or a service account. Other types of
   * principals are not supported.
   *
   * @generated from field: string principal = 1;
   */
  principal: string;

  /**
   * Required. The full resource name that identifies the resource. For example,
   * `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
   *
   * For examples of full resource names for Google Cloud services, see
   * https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
   *
   * @generated from field: string full_resource_name = 2;
   */
  fullResourceName: string;

  /**
   * Required. The IAM permission to check for the specified principal and
   * resource.
   *
   * For a complete list of IAM permissions, see
   * https://cloud.google.com/iam/help/permissions/reference.
   *
   * For a complete list of predefined IAM roles and the permissions in each
   * role, see https://cloud.google.com/iam/help/roles/reference.
   *
   * @generated from field: string permission = 3;
   */
  permission: string;
};

/**
 * Describes the message google.cloud.policytroubleshooter.v1.AccessTuple.
 * Use `create(AccessTupleSchema)` to create a new message.
 */
export const AccessTupleSchema: GenMessage<AccessTuple> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_v1_explanations, 0);

/**
 * Details about how a specific IAM [Policy][google.iam.v1.Policy] contributed
 * to the access check.
 *
 * @generated from message google.cloud.policytroubleshooter.v1.ExplainedPolicy
 */
export type ExplainedPolicy = Message<"google.cloud.policytroubleshooter.v1.ExplainedPolicy"> & {
  /**
   * Indicates whether _this policy_ provides the specified permission to the
   * specified principal for the specified resource.
   *
   * This field does _not_ indicate whether the principal actually has the
   * permission for the resource. There might be another policy that overrides
   * this policy. To determine whether the principal actually has the
   * permission, use the `access` field in the
   * [TroubleshootIamPolicyResponse][IamChecker.TroubleshootIamPolicyResponse].
   *
   * @generated from field: google.cloud.policytroubleshooter.v1.AccessState access = 1;
   */
  access: AccessState;

  /**
   * The full resource name that identifies the resource. For example,
   * `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * For examples of full resource names for Google Cloud services, see
   * https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
   *
   * @generated from field: string full_resource_name = 2;
   */
  fullResourceName: string;

  /**
   * The IAM policy attached to the resource.
   *
   * If the sender of the request does not have access to the policy, this field
   * is empty.
   *
   * @generated from field: google.iam.v1.Policy policy = 3;
   */
  policy?: Policy;

  /**
   * Details about how each binding in the policy affects the principal's
   * ability, or inability, to use the permission for the resource.
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * @generated from field: repeated google.cloud.policytroubleshooter.v1.BindingExplanation binding_explanations = 4;
   */
  bindingExplanations: BindingExplanation[];

  /**
   * The relevance of this policy to the overall determination in the
   * [TroubleshootIamPolicyResponse][IamChecker.TroubleshootIamPolicyResponse].
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * @generated from field: google.cloud.policytroubleshooter.v1.HeuristicRelevance relevance = 5;
   */
  relevance: HeuristicRelevance;
};

/**
 * Describes the message google.cloud.policytroubleshooter.v1.ExplainedPolicy.
 * Use `create(ExplainedPolicySchema)` to create a new message.
 */
export const ExplainedPolicySchema: GenMessage<ExplainedPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_v1_explanations, 1);

/**
 * Details about how a binding in a policy affects a principal's ability to use
 * a permission.
 *
 * @generated from message google.cloud.policytroubleshooter.v1.BindingExplanation
 */
export type BindingExplanation = Message<"google.cloud.policytroubleshooter.v1.BindingExplanation"> & {
  /**
   * Required. Indicates whether _this binding_ provides the specified
   * permission to the specified principal for the specified resource.
   *
   * This field does _not_ indicate whether the principal actually has the
   * permission for the resource. There might be another binding that overrides
   * this binding. To determine whether the principal actually has the
   * permission, use the `access` field in the
   * [TroubleshootIamPolicyResponse][IamChecker.TroubleshootIamPolicyResponse].
   *
   * @generated from field: google.cloud.policytroubleshooter.v1.AccessState access = 1;
   */
  access: AccessState;

  /**
   * The role that this binding grants. For example,
   * `roles/compute.serviceAgent`.
   *
   * For a complete list of predefined IAM roles, as well as the permissions in
   * each role, see https://cloud.google.com/iam/help/roles/reference.
   *
   * @generated from field: string role = 2;
   */
  role: string;

  /**
   * Indicates whether the role granted by this binding contains the specified
   * permission.
   *
   * @generated from field: google.cloud.policytroubleshooter.v1.BindingExplanation.RolePermission role_permission = 3;
   */
  rolePermission: BindingExplanation_RolePermission;

  /**
   * The relevance of the permission's existence, or nonexistence, in the role
   * to the overall determination for the entire policy.
   *
   * @generated from field: google.cloud.policytroubleshooter.v1.HeuristicRelevance role_permission_relevance = 4;
   */
  rolePermissionRelevance: HeuristicRelevance;

  /**
   * Indicates whether each principal in the binding includes the principal
   * specified in the request, either directly or indirectly. Each key
   * identifies a principal in the binding, and each value indicates whether the
   * principal in the binding includes the principal in the request.
   *
   * For example, suppose that a binding includes the following principals:
   *
   * * `user:alice@example.com`
   * * `group:product-eng@example.com`
   *
   * You want to troubleshoot access for `user:bob@example.com`. This user is a
   * principal of the group `group:product-eng@example.com`.
   *
   * For the first principal in the binding, the key is
   * `user:alice@example.com`, and the `membership` field in the value is set to
   * `MEMBERSHIP_NOT_INCLUDED`.
   *
   * For the second principal in the binding, the key is
   * `group:product-eng@example.com`, and the `membership` field in the value is
   * set to `MEMBERSHIP_INCLUDED`.
   *
   * @generated from field: map<string, google.cloud.policytroubleshooter.v1.BindingExplanation.AnnotatedMembership> memberships = 5;
   */
  memberships: { [key: string]: BindingExplanation_AnnotatedMembership };

  /**
   * The relevance of this binding to the overall determination for the entire
   * policy.
   *
   * @generated from field: google.cloud.policytroubleshooter.v1.HeuristicRelevance relevance = 6;
   */
  relevance: HeuristicRelevance;

  /**
   * A condition expression that prevents this binding from granting access
   * unless the expression evaluates to `true`.
   *
   * To learn about IAM Conditions, see
   * https://cloud.google.com/iam/help/conditions/overview.
   *
   * @generated from field: google.type.Expr condition = 7;
   */
  condition?: Expr;
};

/**
 * Describes the message google.cloud.policytroubleshooter.v1.BindingExplanation.
 * Use `create(BindingExplanationSchema)` to create a new message.
 */
export const BindingExplanationSchema: GenMessage<BindingExplanation> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_v1_explanations, 2);

/**
 * Details about whether the binding includes the principal.
 *
 * @generated from message google.cloud.policytroubleshooter.v1.BindingExplanation.AnnotatedMembership
 */
export type BindingExplanation_AnnotatedMembership = Message<"google.cloud.policytroubleshooter.v1.BindingExplanation.AnnotatedMembership"> & {
  /**
   * Indicates whether the binding includes the principal.
   *
   * @generated from field: google.cloud.policytroubleshooter.v1.BindingExplanation.Membership membership = 1;
   */
  membership: BindingExplanation_Membership;

  /**
   * The relevance of the principal's status to the overall determination for
   * the binding.
   *
   * @generated from field: google.cloud.policytroubleshooter.v1.HeuristicRelevance relevance = 2;
   */
  relevance: HeuristicRelevance;
};

/**
 * Describes the message google.cloud.policytroubleshooter.v1.BindingExplanation.AnnotatedMembership.
 * Use `create(BindingExplanation_AnnotatedMembershipSchema)` to create a new message.
 */
export const BindingExplanation_AnnotatedMembershipSchema: GenMessage<BindingExplanation_AnnotatedMembership> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_v1_explanations, 2, 0);

/**
 * Whether a role includes a specific permission.
 *
 * @generated from enum google.cloud.policytroubleshooter.v1.BindingExplanation.RolePermission
 */
export enum BindingExplanation_RolePermission {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: ROLE_PERMISSION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The permission is included in the role.
   *
   * @generated from enum value: ROLE_PERMISSION_INCLUDED = 1;
   */
  INCLUDED = 1,

  /**
   * The permission is not included in the role.
   *
   * @generated from enum value: ROLE_PERMISSION_NOT_INCLUDED = 2;
   */
  NOT_INCLUDED = 2,

  /**
   * The sender of the request is not allowed to access the binding.
   *
   * @generated from enum value: ROLE_PERMISSION_UNKNOWN_INFO_DENIED = 3;
   */
  UNKNOWN_INFO_DENIED = 3,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.v1.BindingExplanation.RolePermission.
 */
export const BindingExplanation_RolePermissionSchema: GenEnum<BindingExplanation_RolePermission> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_v1_explanations, 2, 0);

/**
 * Whether the binding includes the principal.
 *
 * @generated from enum google.cloud.policytroubleshooter.v1.BindingExplanation.Membership
 */
export enum BindingExplanation_Membership {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: MEMBERSHIP_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The binding includes the principal. The principal can be included
   * directly or indirectly. For example:
   *
   * * A principal is included directly if that principal is listed in the
   *   binding.
   * * A principal is included indirectly if that principal is in a Google
   *   group or Google Workspace domain that is listed in the binding.
   *
   * @generated from enum value: MEMBERSHIP_INCLUDED = 1;
   */
  INCLUDED = 1,

  /**
   * The binding does not include the principal.
   *
   * @generated from enum value: MEMBERSHIP_NOT_INCLUDED = 2;
   */
  NOT_INCLUDED = 2,

  /**
   * The sender of the request is not allowed to access the binding.
   *
   * @generated from enum value: MEMBERSHIP_UNKNOWN_INFO_DENIED = 3;
   */
  UNKNOWN_INFO_DENIED = 3,

  /**
   * The principal is an unsupported type. Only Google Accounts and service
   * accounts are supported.
   *
   * @generated from enum value: MEMBERSHIP_UNKNOWN_UNSUPPORTED = 4;
   */
  UNKNOWN_UNSUPPORTED = 4,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.v1.BindingExplanation.Membership.
 */
export const BindingExplanation_MembershipSchema: GenEnum<BindingExplanation_Membership> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_v1_explanations, 2, 1);

/**
 * Whether a principal has a permission for a resource.
 *
 * @generated from enum google.cloud.policytroubleshooter.v1.AccessState
 */
export enum AccessState {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: ACCESS_STATE_UNSPECIFIED = 0;
   */
  ACCESS_STATE_UNSPECIFIED = 0,

  /**
   * The principal has the permission.
   *
   * @generated from enum value: GRANTED = 1;
   */
  GRANTED = 1,

  /**
   * The principal does not have the permission.
   *
   * @generated from enum value: NOT_GRANTED = 2;
   */
  NOT_GRANTED = 2,

  /**
   * The principal has the permission only if a condition expression evaluates
   * to `true`.
   *
   * @generated from enum value: UNKNOWN_CONDITIONAL = 3;
   */
  UNKNOWN_CONDITIONAL = 3,

  /**
   * The sender of the request does not have access to all of the policies that
   * Policy Troubleshooter needs to evaluate.
   *
   * @generated from enum value: UNKNOWN_INFO_DENIED = 4;
   */
  UNKNOWN_INFO_DENIED = 4,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.v1.AccessState.
 */
export const AccessStateSchema: GenEnum<AccessState> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_v1_explanations, 0);

/**
 * The extent to which a single data point, such as the existence of a binding
 * or whether a binding includes a specific principal, contributes to an overall
 * determination.
 *
 * @generated from enum google.cloud.policytroubleshooter.v1.HeuristicRelevance
 */
export enum HeuristicRelevance {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: HEURISTIC_RELEVANCE_UNSPECIFIED = 0;
   */
  HEURISTIC_RELEVANCE_UNSPECIFIED = 0,

  /**
   * The data point has a limited effect on the result. Changing the data point
   * is unlikely to affect the overall determination.
   *
   * @generated from enum value: NORMAL = 1;
   */
  NORMAL = 1,

  /**
   * The data point has a strong effect on the result. Changing the data point
   * is likely to affect the overall determination.
   *
   * @generated from enum value: HIGH = 2;
   */
  HIGH = 2,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.v1.HeuristicRelevance.
 */
export const HeuristicRelevanceSchema: GenEnum<HeuristicRelevance> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_v1_explanations, 1);

