// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/policytroubleshooter/iam/v3/troubleshooter.proto (package google.cloud.policytroubleshooter.iam.v3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import type { Policy } from "../../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../../iam/v1/policy_pb";
import type { Policy as Policy$1 } from "../../../../iam/v2/policy_pb";
import { file_google_iam_v2_policy } from "../../../../iam/v2/policy_pb";
import type { Timestamp, Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../../rpc/status_pb";
import type { Expr } from "../../../../type/expr_pb";
import { file_google_type_expr } from "../../../../type/expr_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/policytroubleshooter/iam/v3/troubleshooter.proto.
 */
export const file_google_cloud_policytroubleshooter_iam_v3_troubleshooter: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_iam_v1_policy, file_google_iam_v2_policy, file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_rpc_status, file_google_type_expr]);

/**
 * Request for
 * [TroubleshootIamPolicy][google.cloud.policytroubleshooter.iam.v3.PolicyTroubleshooter.TroubleshootIamPolicy].
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyRequest
 */
export type TroubleshootIamPolicyRequest = Message<"google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyRequest"> & {
  /**
   * The information to use for checking whether a principal has a permission
   * for a resource.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.AccessTuple access_tuple = 1;
   */
  accessTuple?: AccessTuple;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyRequest.
 * Use `create(TroubleshootIamPolicyRequestSchema)` to create a new message.
 */
export const TroubleshootIamPolicyRequestSchema: GenMessage<TroubleshootIamPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 0);

/**
 * Response for
 * [TroubleshootIamPolicy][google.cloud.policytroubleshooter.iam.v3.PolicyTroubleshooter.TroubleshootIamPolicy].
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse
 */
export type TroubleshootIamPolicyResponse = Message<"google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse"> & {
  /**
   * Indicates whether the principal has the specified permission for the
   * specified resource, based on evaluating all types of the applicable IAM
   * policies.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse.OverallAccessState overall_access_state = 1;
   */
  overallAccessState: TroubleshootIamPolicyResponse_OverallAccessState;

  /**
   * The access tuple from the request, including any provided context used to
   * evaluate the condition.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.AccessTuple access_tuple = 2;
   */
  accessTuple?: AccessTuple;

  /**
   * An explanation of how the applicable IAM allow policies affect the final
   * access state.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.AllowPolicyExplanation allow_policy_explanation = 3;
   */
  allowPolicyExplanation?: AllowPolicyExplanation;

  /**
   * An explanation of how the applicable IAM deny policies affect the final
   * access state.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.DenyPolicyExplanation deny_policy_explanation = 4;
   */
  denyPolicyExplanation?: DenyPolicyExplanation;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse.
 * Use `create(TroubleshootIamPolicyResponseSchema)` to create a new message.
 */
export const TroubleshootIamPolicyResponseSchema: GenMessage<TroubleshootIamPolicyResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 1);

/**
 * Whether the principal has the permission on the resource.
 *
 * @generated from enum google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse.OverallAccessState
 */
export enum TroubleshootIamPolicyResponse_OverallAccessState {
  /**
   * Not specified.
   *
   * @generated from enum value: OVERALL_ACCESS_STATE_UNSPECIFIED = 0;
   */
  OVERALL_ACCESS_STATE_UNSPECIFIED = 0,

  /**
   * The principal has the permission.
   *
   * @generated from enum value: CAN_ACCESS = 1;
   */
  CAN_ACCESS = 1,

  /**
   * The principal doesn't have the permission.
   *
   * @generated from enum value: CANNOT_ACCESS = 2;
   */
  CANNOT_ACCESS = 2,

  /**
   * The principal might have the permission, but the sender can't access all
   * of the information needed to fully evaluate the principal's access.
   *
   * @generated from enum value: UNKNOWN_INFO = 3;
   */
  UNKNOWN_INFO = 3,

  /**
   * The principal might have the permission, but Policy Troubleshooter can't
   * fully evaluate the principal's access because the sender didn't provide
   * the required context to evaluate the condition.
   *
   * @generated from enum value: UNKNOWN_CONDITIONAL = 4;
   */
  UNKNOWN_CONDITIONAL = 4,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse.OverallAccessState.
 */
export const TroubleshootIamPolicyResponse_OverallAccessStateSchema: GenEnum<TroubleshootIamPolicyResponse_OverallAccessState> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 1, 0);

/**
 * Information about the principal, resource, and permission to check.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.AccessTuple
 */
export type AccessTuple = Message<"google.cloud.policytroubleshooter.iam.v3.AccessTuple"> & {
  /**
   * Required. The email address of the principal whose access you want to
   * check. For example, `alice@example.com` or
   * `my-service-account@my-project.iam.gserviceaccount.com`.
   *
   * The principal must be a Google Account or a service account. Other types of
   * principals are not supported.
   *
   * @generated from field: string principal = 1;
   */
  principal: string;

  /**
   * Required. The full resource name that identifies the resource. For example,
   * `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
   *
   * For examples of full resource names for Google Cloud services, see
   * https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
   *
   * @generated from field: string full_resource_name = 2;
   */
  fullResourceName: string;

  /**
   * Required. The IAM permission to check for, either in the `v1` permission
   * format or the `v2` permission format.
   *
   * For a complete list of IAM permissions in the `v1` format, see
   * https://cloud.google.com/iam/help/permissions/reference.
   *
   * For a list of IAM permissions in the `v2` format, see
   * https://cloud.google.com/iam/help/deny/supported-permissions.
   *
   * For a complete list of predefined IAM roles and the permissions in each
   * role, see https://cloud.google.com/iam/help/roles/reference.
   *
   * @generated from field: string permission = 3;
   */
  permission: string;

  /**
   * Output only. The permission that Policy Troubleshooter checked for, in
   * the `v2` format.
   *
   * @generated from field: string permission_fqdn = 4;
   */
  permissionFqdn: string;

  /**
   * Optional. Additional context for the request, such as the request time or
   * IP address. This context allows Policy Troubleshooter to troubleshoot
   * conditional role bindings and deny rules.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.ConditionContext condition_context = 5;
   */
  conditionContext?: ConditionContext;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.AccessTuple.
 * Use `create(AccessTupleSchema)` to create a new message.
 */
export const AccessTupleSchema: GenMessage<AccessTuple> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 2);

/**
 * Additional context for troubleshooting conditional role bindings and deny
 * rules.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.ConditionContext
 */
export type ConditionContext = Message<"google.cloud.policytroubleshooter.iam.v3.ConditionContext"> & {
  /**
   * Represents a target resource that is involved with a network activity.
   * If multiple resources are involved with an activity, this must be the
   * primary one.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.ConditionContext.Resource resource = 1;
   */
  resource?: ConditionContext_Resource;

  /**
   * The destination of a network activity, such as accepting a TCP connection.
   * In a multi-hop network activity, the destination represents the receiver of
   * the last hop.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.ConditionContext.Peer destination = 2;
   */
  destination?: ConditionContext_Peer;

  /**
   * Represents a network request, such as an HTTP request.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.ConditionContext.Request request = 3;
   */
  request?: ConditionContext_Request;

  /**
   * Output only. The effective tags on the resource. The effective tags are
   * fetched during troubleshooting.
   *
   * @generated from field: repeated google.cloud.policytroubleshooter.iam.v3.ConditionContext.EffectiveTag effective_tags = 4;
   */
  effectiveTags: ConditionContext_EffectiveTag[];
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.ConditionContext.
 * Use `create(ConditionContextSchema)` to create a new message.
 */
export const ConditionContextSchema: GenMessage<ConditionContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 3);

/**
 * Core attributes for a resource. A resource is an
 * addressable (named) entity provided by the destination service. For
 * example, a Compute Engine instance.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.ConditionContext.Resource
 */
export type ConditionContext_Resource = Message<"google.cloud.policytroubleshooter.iam.v3.ConditionContext.Resource"> & {
  /**
   * The name of the service that this resource belongs to, such as
   * `compute.googleapis.com`. The service name might not match the DNS
   * hostname that actually serves the request.
   *
   * For a full list of resource service values, see
   * https://cloud.google.com/iam/help/conditions/resource-services
   *
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * The stable identifier (name) of a resource on the `service`. A resource
   * can be logically identified as `//{resource.service}/{resource.name}`.
   * Unlike the resource URI, the resource name doesn't contain any protocol
   * and version information.
   *
   * For a list of full resource name formats, see
   * https://cloud.google.com/iam/help/troubleshooter/full-resource-names
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The type of the resource, in the format `{service}/{kind}`.
   *
   * For a full list of resource type values, see
   * https://cloud.google.com/iam/help/conditions/resource-types
   *
   * @generated from field: string type = 3;
   */
  type: string;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.ConditionContext.Resource.
 * Use `create(ConditionContext_ResourceSchema)` to create a new message.
 */
export const ConditionContext_ResourceSchema: GenMessage<ConditionContext_Resource> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 3, 0);

/**
 * This message defines attributes for a node that handles a network request.
 * The node can be either a service or an application that sends, forwards,
 * or receives the request. Service peers should fill in
 * `principal` and `labels` as appropriate.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.ConditionContext.Peer
 */
export type ConditionContext_Peer = Message<"google.cloud.policytroubleshooter.iam.v3.ConditionContext.Peer"> & {
  /**
   * The IPv4 or IPv6 address of the peer.
   *
   * @generated from field: string ip = 1;
   */
  ip: string;

  /**
   * The network port of the peer.
   *
   * @generated from field: int64 port = 2;
   */
  port: bigint;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.ConditionContext.Peer.
 * Use `create(ConditionContext_PeerSchema)` to create a new message.
 */
export const ConditionContext_PeerSchema: GenMessage<ConditionContext_Peer> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 3, 1);

/**
 * This message defines attributes for an HTTP request. If the actual
 * request is not an HTTP request, the runtime system should try to map
 * the actual request to an equivalent HTTP request.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.ConditionContext.Request
 */
export type ConditionContext_Request = Message<"google.cloud.policytroubleshooter.iam.v3.ConditionContext.Request"> & {
  /**
   * Optional. The timestamp when the destination service receives the first
   * byte of the request.
   *
   * @generated from field: google.protobuf.Timestamp receive_time = 1;
   */
  receiveTime?: Timestamp;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.ConditionContext.Request.
 * Use `create(ConditionContext_RequestSchema)` to create a new message.
 */
export const ConditionContext_RequestSchema: GenMessage<ConditionContext_Request> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 3, 2);

/**
 * A tag that applies to a resource during policy evaluation. Tags can be
 * either directly bound to a resource or inherited from its ancestor.
 * `EffectiveTag` contains the `name` and `namespaced_name` of the tag value
 * and tag key, with additional fields of `inherited` to indicate the
 * inheritance status of the effective tag.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.ConditionContext.EffectiveTag
 */
export type ConditionContext_EffectiveTag = Message<"google.cloud.policytroubleshooter.iam.v3.ConditionContext.EffectiveTag"> & {
  /**
   * Output only. Resource name for TagValue in the format `tagValues/456`.
   *
   * @generated from field: string tag_value = 1;
   */
  tagValue: string;

  /**
   * Output only. The namespaced name of the TagValue. Can be in the form
   * `{organization_id}/{tag_key_short_name}/{tag_value_short_name}` or
   * `{project_id}/{tag_key_short_name}/{tag_value_short_name}` or
   * `{project_number}/{tag_key_short_name}/{tag_value_short_name}`.
   *
   * @generated from field: string namespaced_tag_value = 2;
   */
  namespacedTagValue: string;

  /**
   * Output only. The name of the TagKey, in the format `tagKeys/{id}`, such
   * as `tagKeys/123`.
   *
   * @generated from field: string tag_key = 3;
   */
  tagKey: string;

  /**
   * Output only. The namespaced name of the TagKey. Can be in the form
   * `{organization_id}/{tag_key_short_name}` or
   * `{project_id}/{tag_key_short_name}` or
   * `{project_number}/{tag_key_short_name}`.
   *
   * @generated from field: string namespaced_tag_key = 4;
   */
  namespacedTagKey: string;

  /**
   * The parent name of the tag key.
   * Must be in the format `organizations/{organization_id}` or
   * `projects/{project_number}`
   *
   * @generated from field: string tag_key_parent_name = 6;
   */
  tagKeyParentName: string;

  /**
   * Output only. Indicates the inheritance status of a tag value
   * attached to the given resource. If the tag value is inherited from one of
   * the resource's ancestors, inherited will be true. If false, then the tag
   * value is directly attached to the resource, inherited will be false.
   *
   * @generated from field: bool inherited = 5;
   */
  inherited: boolean;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.ConditionContext.EffectiveTag.
 * Use `create(ConditionContext_EffectiveTagSchema)` to create a new message.
 */
export const ConditionContext_EffectiveTagSchema: GenMessage<ConditionContext_EffectiveTag> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 3, 3);

/**
 * Details about how the relevant IAM allow policies affect the final access
 * state.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.AllowPolicyExplanation
 */
export type AllowPolicyExplanation = Message<"google.cloud.policytroubleshooter.iam.v3.AllowPolicyExplanation"> & {
  /**
   * Indicates whether the principal has the specified permission for the
   * specified resource, based on evaluating all applicable IAM allow policies.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.AllowAccessState allow_access_state = 1;
   */
  allowAccessState: AllowAccessState;

  /**
   * List of IAM allow policies that were evaluated to check the principal's
   * permissions, with annotations to indicate how each policy contributed to
   * the final result.
   *
   * The list of policies includes the policy for the resource itself, as well
   * as allow policies that are inherited from higher levels of the resource
   * hierarchy, including the organization, the folder, and the project.
   *
   * To learn more about the resource hierarchy, see
   * https://cloud.google.com/iam/help/resource-hierarchy.
   *
   * @generated from field: repeated google.cloud.policytroubleshooter.iam.v3.ExplainedAllowPolicy explained_policies = 2;
   */
  explainedPolicies: ExplainedAllowPolicy[];

  /**
   * The relevance of the allow policy type to the overall access state.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 3;
   */
  relevance: HeuristicRelevance;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.AllowPolicyExplanation.
 * Use `create(AllowPolicyExplanationSchema)` to create a new message.
 */
export const AllowPolicyExplanationSchema: GenMessage<AllowPolicyExplanation> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 4);

/**
 * Details about how a specific IAM allow policy contributed to the final access
 * state.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.ExplainedAllowPolicy
 */
export type ExplainedAllowPolicy = Message<"google.cloud.policytroubleshooter.iam.v3.ExplainedAllowPolicy"> & {
  /**
   * Required. Indicates whether _this policy_ provides the specified permission
   * to the specified principal for the specified resource.
   *
   * This field does _not_ indicate whether the principal actually has the
   * permission for the resource. There might be another policy that overrides
   * this policy. To determine whether the principal actually has the
   * permission, use the `overall_access_state` field in the
   * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.AllowAccessState allow_access_state = 1;
   */
  allowAccessState: AllowAccessState;

  /**
   * The full resource name that identifies the resource. For example,
   * `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * For examples of full resource names for Google Cloud services, see
   * https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
   *
   * @generated from field: string full_resource_name = 2;
   */
  fullResourceName: string;

  /**
   * Details about how each role binding in the policy affects the principal's
   * ability, or inability, to use the permission for the resource. The order of
   * the role bindings matches the role binding order in the policy.
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * @generated from field: repeated google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation binding_explanations = 3;
   */
  bindingExplanations: AllowBindingExplanation[];

  /**
   * The relevance of this policy to the overall access state in the
   * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 4;
   */
  relevance: HeuristicRelevance;

  /**
   * The IAM allow policy attached to the resource.
   *
   * If the sender of the request does not have access to the policy, this field
   * is empty.
   *
   * @generated from field: google.iam.v1.Policy policy = 5;
   */
  policy?: Policy;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.ExplainedAllowPolicy.
 * Use `create(ExplainedAllowPolicySchema)` to create a new message.
 */
export const ExplainedAllowPolicySchema: GenMessage<ExplainedAllowPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 5);

/**
 * Details about how a role binding in an allow policy affects a principal's
 * ability to use a permission.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
 */
export type AllowBindingExplanation = Message<"google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation"> & {
  /**
   * Required. Indicates whether _this role binding_ gives the specified
   * permission to the specified principal on the specified resource.
   *
   * This field does _not_ indicate whether the principal actually has the
   * permission on the resource. There might be another role binding that
   * overrides this role binding. To determine whether the principal actually
   * has the permission, use the `overall_access_state` field in the
   * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.AllowAccessState allow_access_state = 1;
   */
  allowAccessState: AllowAccessState;

  /**
   * The role that this role binding grants. For example,
   * `roles/compute.admin`.
   *
   * For a complete list of predefined IAM roles, as well as the permissions in
   * each role, see https://cloud.google.com/iam/help/roles/reference.
   *
   * @generated from field: string role = 2;
   */
  role: string;

  /**
   * Indicates whether the role granted by this role binding contains the
   * specified permission.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState role_permission = 3;
   */
  rolePermission: RolePermissionInclusionState;

  /**
   * The relevance of the permission's existence, or nonexistence, in the role
   * to the overall determination for the entire policy.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance role_permission_relevance = 4;
   */
  rolePermissionRelevance: HeuristicRelevance;

  /**
   * The combined result of all memberships. Indicates if the principal is
   * included in any role binding, either directly or indirectly.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
   */
  combinedMembership?: AllowBindingExplanation_AnnotatedAllowMembership;

  /**
   * Indicates whether each role binding includes the principal specified in the
   * request, either directly or indirectly. Each key identifies a principal in
   * the role binding, and each value indicates whether the principal in the
   * role binding includes the principal in the request.
   *
   * For example, suppose that a role binding includes the following principals:
   *
   * * `user:alice@example.com`
   * * `group:product-eng@example.com`
   *
   * You want to troubleshoot access for `user:bob@example.com`. This user is a
   * member of the group `group:product-eng@example.com`.
   *
   * For the first principal in the role binding, the key is
   * `user:alice@example.com`, and the `membership` field in the value is set to
   * `NOT_INCLUDED`.
   *
   * For the second principal in the role binding, the key is
   * `group:product-eng@example.com`, and the `membership` field in the value is
   * set to `INCLUDED`.
   *
   * @generated from field: map<string, google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership> memberships = 6;
   */
  memberships: { [key: string]: AllowBindingExplanation_AnnotatedAllowMembership };

  /**
   * The relevance of this role binding to the overall determination for the
   * entire policy.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 7;
   */
  relevance: HeuristicRelevance;

  /**
   * A condition expression that specifies when the role binding grants access.
   *
   * To learn about IAM Conditions, see
   * https://cloud.google.com/iam/help/conditions/overview.
   *
   * @generated from field: google.type.Expr condition = 8;
   */
  condition?: Expr;

  /**
   * Condition evaluation state for this role binding.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
   */
  conditionExplanation?: ConditionExplanation;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.
 * Use `create(AllowBindingExplanationSchema)` to create a new message.
 */
export const AllowBindingExplanationSchema: GenMessage<AllowBindingExplanation> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 6);

/**
 * Details about whether the role binding includes the principal.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership
 */
export type AllowBindingExplanation_AnnotatedAllowMembership = Message<"google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership"> & {
  /**
   * Indicates whether the role binding includes the principal.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
   */
  membership: MembershipMatchingState;

  /**
   * The relevance of the principal's status to the overall determination for
   * the role binding.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;
   */
  relevance: HeuristicRelevance;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership.
 * Use `create(AllowBindingExplanation_AnnotatedAllowMembershipSchema)` to create a new message.
 */
export const AllowBindingExplanation_AnnotatedAllowMembershipSchema: GenMessage<AllowBindingExplanation_AnnotatedAllowMembership> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 6, 0);

/**
 * Details about how the relevant IAM deny policies affect the final access
 * state.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.DenyPolicyExplanation
 */
export type DenyPolicyExplanation = Message<"google.cloud.policytroubleshooter.iam.v3.DenyPolicyExplanation"> & {
  /**
   * Indicates whether the principal is denied the specified permission for
   * the specified resource, based on evaluating all applicable IAM deny
   * policies.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1;
   */
  denyAccessState: DenyAccessState;

  /**
   * List of resources with IAM deny policies that were evaluated to check the
   * principal's denied permissions, with annotations to indicate how each
   * policy contributed to the final result.
   *
   * The list of resources includes the policy for the resource itself, as well
   * as policies that are inherited from higher levels of the resource
   * hierarchy, including the organization, the folder, and the project. The
   * order of the resources starts from the resource and climbs up the resource
   * hierarchy.
   *
   * To learn more about the resource hierarchy, see
   * https://cloud.google.com/iam/help/resource-hierarchy.
   *
   * @generated from field: repeated google.cloud.policytroubleshooter.iam.v3.ExplainedDenyResource explained_resources = 2;
   */
  explainedResources: ExplainedDenyResource[];

  /**
   * The relevance of the deny policy result to the overall access state.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 3;
   */
  relevance: HeuristicRelevance;

  /**
   * Indicates whether the permission to troubleshoot is supported in deny
   * policies.
   *
   * @generated from field: bool permission_deniable = 4;
   */
  permissionDeniable: boolean;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.DenyPolicyExplanation.
 * Use `create(DenyPolicyExplanationSchema)` to create a new message.
 */
export const DenyPolicyExplanationSchema: GenMessage<DenyPolicyExplanation> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 7);

/**
 * Details about how a specific resource contributed to the deny policy
 * evaluation.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.ExplainedDenyResource
 */
export type ExplainedDenyResource = Message<"google.cloud.policytroubleshooter.iam.v3.ExplainedDenyResource"> & {
  /**
   * Required. Indicates whether any policies attached to _this resource_ deny
   * the specific permission to the specified principal for the specified
   * resource.
   *
   * This field does _not_ indicate whether the principal actually has the
   * permission for the resource. There might be another policy that overrides
   * this policy. To determine whether the principal actually has the
   * permission, use the `overall_access_state` field in the
   * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1;
   */
  denyAccessState: DenyAccessState;

  /**
   * The full resource name that identifies the resource. For example,
   * `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * For examples of full resource names for Google Cloud services, see
   * https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
   *
   * @generated from field: string full_resource_name = 2;
   */
  fullResourceName: string;

  /**
   * List of IAM deny policies that were evaluated to check the principal's
   * denied permissions, with annotations to indicate how each policy
   * contributed to the final result.
   *
   * @generated from field: repeated google.cloud.policytroubleshooter.iam.v3.ExplainedDenyPolicy explained_policies = 3;
   */
  explainedPolicies: ExplainedDenyPolicy[];

  /**
   * The relevance of this policy to the overall access state in the
   * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 4;
   */
  relevance: HeuristicRelevance;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.ExplainedDenyResource.
 * Use `create(ExplainedDenyResourceSchema)` to create a new message.
 */
export const ExplainedDenyResourceSchema: GenMessage<ExplainedDenyResource> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 8);

/**
 * Details about how a specific IAM deny policy [Policy][google.iam.v2.Policy]
 * contributed to the access check.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.ExplainedDenyPolicy
 */
export type ExplainedDenyPolicy = Message<"google.cloud.policytroubleshooter.iam.v3.ExplainedDenyPolicy"> & {
  /**
   * Required. Indicates whether _this policy_ denies the specified permission
   * to the specified principal for the specified resource.
   *
   * This field does _not_ indicate whether the principal actually has the
   * permission for the resource. There might be another policy that overrides
   * this policy. To determine whether the principal actually has the
   * permission, use the `overall_access_state` field in the
   * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1;
   */
  denyAccessState: DenyAccessState;

  /**
   * The IAM deny policy attached to the resource.
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * @generated from field: google.iam.v2.Policy policy = 2;
   */
  policy?: Policy$1;

  /**
   * Details about how each rule in the policy affects the principal's inability
   * to use the permission for the resource. The order of the deny rule matches
   * the order of the rules in the deny policy.
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * @generated from field: repeated google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation rule_explanations = 3;
   */
  ruleExplanations: DenyRuleExplanation[];

  /**
   * The relevance of this policy to the overall access state in the
   * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
   *
   * If the sender of the request does not have access to the policy, this field
   * is omitted.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 4;
   */
  relevance: HeuristicRelevance;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.ExplainedDenyPolicy.
 * Use `create(ExplainedDenyPolicySchema)` to create a new message.
 */
export const ExplainedDenyPolicySchema: GenMessage<ExplainedDenyPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 9);

/**
 * Details about how a deny rule in a deny policy affects a principal's ability
 * to use a permission.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation
 */
export type DenyRuleExplanation = Message<"google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation"> & {
  /**
   * Required. Indicates whether _this rule_ denies the specified permission to
   * the specified principal for the specified resource.
   *
   * This field does _not_ indicate whether the principal is actually denied on
   * the permission for the resource. There might be another rule that overrides
   * this rule. To determine whether the principal actually has the permission,
   * use the `overall_access_state` field in the
   * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1;
   */
  denyAccessState: DenyAccessState;

  /**
   * Indicates whether the permission in the request is listed as a denied
   * permission in the deny rule.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching combined_denied_permission = 2;
   */
  combinedDeniedPermission?: DenyRuleExplanation_AnnotatedPermissionMatching;

  /**
   * Lists all denied permissions in the deny rule and indicates whether each
   * permission matches the permission in the request.
   *
   * Each key identifies a denied permission in the rule, and each value
   * indicates whether the denied permission matches the permission in the
   * request.
   *
   * @generated from field: map<string, google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching> denied_permissions = 3;
   */
  deniedPermissions: { [key: string]: DenyRuleExplanation_AnnotatedPermissionMatching };

  /**
   * Indicates whether the permission in the request is listed as an exception
   * permission in the deny rule.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching combined_exception_permission = 4;
   */
  combinedExceptionPermission?: DenyRuleExplanation_AnnotatedPermissionMatching;

  /**
   * Lists all exception permissions in the deny rule and indicates whether each
   * permission matches the permission in the request.
   *
   * Each key identifies a exception permission in the rule, and each value
   * indicates whether the exception permission matches the permission in the
   * request.
   *
   * @generated from field: map<string, google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching> exception_permissions = 5;
   */
  exceptionPermissions: { [key: string]: DenyRuleExplanation_AnnotatedPermissionMatching };

  /**
   * Indicates whether the principal is listed as a denied principal in the
   * deny rule, either directly or through membership in a principal set.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching combined_denied_principal = 6;
   */
  combinedDeniedPrincipal?: DenyRuleExplanation_AnnotatedDenyPrincipalMatching;

  /**
   * Lists all denied principals in the deny rule and indicates whether each
   * principal matches the principal in the request, either directly or through
   * membership in a principal set.
   *
   * Each key identifies a denied principal in the rule, and each value
   * indicates whether the denied principal matches the principal in the
   * request.
   *
   * @generated from field: map<string, google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching> denied_principals = 7;
   */
  deniedPrincipals: { [key: string]: DenyRuleExplanation_AnnotatedDenyPrincipalMatching };

  /**
   * Indicates whether the principal is listed as an exception principal in the
   * deny rule, either directly or through membership in a principal set.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching combined_exception_principal = 8;
   */
  combinedExceptionPrincipal?: DenyRuleExplanation_AnnotatedDenyPrincipalMatching;

  /**
   * Lists all exception principals in the deny rule and indicates whether each
   * principal matches the principal in the request, either directly or through
   * membership in a principal set.
   *
   * Each key identifies a exception principal in the rule, and each value
   * indicates whether the exception principal matches the principal in the
   * request.
   *
   * @generated from field: map<string, google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching> exception_principals = 9;
   */
  exceptionPrincipals: { [key: string]: DenyRuleExplanation_AnnotatedDenyPrincipalMatching };

  /**
   * The relevance of this role binding to the overall determination for the
   * entire policy.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 10;
   */
  relevance: HeuristicRelevance;

  /**
   * A condition expression that specifies when the deny rule denies the
   * principal access.
   *
   * To learn about IAM Conditions, see
   * https://cloud.google.com/iam/help/conditions/overview.
   *
   * @generated from field: google.type.Expr condition = 11;
   */
  condition?: Expr;

  /**
   * Condition evaluation state for this role binding.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 12;
   */
  conditionExplanation?: ConditionExplanation;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.
 * Use `create(DenyRuleExplanationSchema)` to create a new message.
 */
export const DenyRuleExplanationSchema: GenMessage<DenyRuleExplanation> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 10);

/**
 * Details about whether the permission in the request is denied by the
 * deny rule.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching
 */
export type DenyRuleExplanation_AnnotatedPermissionMatching = Message<"google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching"> & {
  /**
   * Indicates whether the permission in the request is denied by the deny
   * rule.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.PermissionPatternMatchingState permission_matching_state = 1;
   */
  permissionMatchingState: PermissionPatternMatchingState;

  /**
   * The relevance of the permission status to the overall determination for
   * the rule.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;
   */
  relevance: HeuristicRelevance;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching.
 * Use `create(DenyRuleExplanation_AnnotatedPermissionMatchingSchema)` to create a new message.
 */
export const DenyRuleExplanation_AnnotatedPermissionMatchingSchema: GenMessage<DenyRuleExplanation_AnnotatedPermissionMatching> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 10, 0);

/**
 * Details about whether the principal in the request is listed as a denied
 * principal in the deny rule, either directly or through membership in a
 * principal set.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching
 */
export type DenyRuleExplanation_AnnotatedDenyPrincipalMatching = Message<"google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching"> & {
  /**
   * Indicates whether the principal is listed as a denied principal in the
   * deny rule, either directly or through membership in a principal set.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
   */
  membership: MembershipMatchingState;

  /**
   * The relevance of the principal's status to the overall determination for
   * the role binding.
   *
   * @generated from field: google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;
   */
  relevance: HeuristicRelevance;
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching.
 * Use `create(DenyRuleExplanation_AnnotatedDenyPrincipalMatchingSchema)` to create a new message.
 */
export const DenyRuleExplanation_AnnotatedDenyPrincipalMatchingSchema: GenMessage<DenyRuleExplanation_AnnotatedDenyPrincipalMatching> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 10, 1);

/**
 * Explanation for how a condition affects a principal's access
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.ConditionExplanation
 */
export type ConditionExplanation = Message<"google.cloud.policytroubleshooter.iam.v3.ConditionExplanation"> & {
  /**
   * Value of the condition.
   *
   * @generated from field: google.protobuf.Value value = 1;
   */
  value?: Value;

  /**
   * Any errors that prevented complete evaluation of the condition expression.
   *
   * @generated from field: repeated google.rpc.Status errors = 3;
   */
  errors: Status[];

  /**
   * The value of each statement of the condition expression. The value can be
   * `true`, `false`, or `null`. The value is `null` if the statement can't be
   * evaluated.
   *
   * @generated from field: repeated google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.EvaluationState evaluation_states = 2;
   */
  evaluationStates: ConditionExplanation_EvaluationState[];
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.
 * Use `create(ConditionExplanationSchema)` to create a new message.
 */
export const ConditionExplanationSchema: GenMessage<ConditionExplanation> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 11);

/**
 * Evaluated state of a condition expression.
 *
 * @generated from message google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.EvaluationState
 */
export type ConditionExplanation_EvaluationState = Message<"google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.EvaluationState"> & {
  /**
   * Start position of an expression in the condition, by character.
   *
   * @generated from field: int32 start = 1;
   */
  start: number;

  /**
   * End position of an expression in the condition, by character,
   * end included, for example: the end position of the first part of
   * `a==b || c==d` would be 4.
   *
   * @generated from field: int32 end = 2;
   */
  end: number;

  /**
   * Value of this expression.
   *
   * @generated from field: google.protobuf.Value value = 3;
   */
  value?: Value;

  /**
   * Any errors that prevented complete evaluation of the condition
   * expression.
   *
   * @generated from field: repeated google.rpc.Status errors = 4;
   */
  errors: Status[];
};

/**
 * Describes the message google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.EvaluationState.
 * Use `create(ConditionExplanation_EvaluationStateSchema)` to create a new message.
 */
export const ConditionExplanation_EvaluationStateSchema: GenMessage<ConditionExplanation_EvaluationState> = /*@__PURE__*/
  messageDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 11, 0);

/**
 * Whether IAM allow policies gives the principal the permission.
 *
 * @generated from enum google.cloud.policytroubleshooter.iam.v3.AllowAccessState
 */
export enum AllowAccessState {
  /**
   * Not specified.
   *
   * @generated from enum value: ALLOW_ACCESS_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The allow policy gives the principal the permission.
   *
   * @generated from enum value: ALLOW_ACCESS_STATE_GRANTED = 1;
   */
  GRANTED = 1,

  /**
   * The allow policy doesn't give the principal the permission.
   *
   * @generated from enum value: ALLOW_ACCESS_STATE_NOT_GRANTED = 2;
   */
  NOT_GRANTED = 2,

  /**
   * The allow policy gives the principal the permission if a condition
   * expression evaluate to `true`. However, the sender of the request didn't
   * provide enough context for Policy Troubleshooter to evaluate the condition
   * expression.
   *
   * @generated from enum value: ALLOW_ACCESS_STATE_UNKNOWN_CONDITIONAL = 3;
   */
  UNKNOWN_CONDITIONAL = 3,

  /**
   * The sender of the request doesn't have access to all of the allow policies
   * that Policy Troubleshooter needs to evaluate the principal's access.
   *
   * @generated from enum value: ALLOW_ACCESS_STATE_UNKNOWN_INFO = 4;
   */
  UNKNOWN_INFO = 4,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.iam.v3.AllowAccessState.
 */
export const AllowAccessStateSchema: GenEnum<AllowAccessState> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 0);

/**
 * Whether IAM deny policies deny the principal the permission.
 *
 * @generated from enum google.cloud.policytroubleshooter.iam.v3.DenyAccessState
 */
export enum DenyAccessState {
  /**
   * Not specified.
   *
   * @generated from enum value: DENY_ACCESS_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The deny policy denies the principal the permission.
   *
   * @generated from enum value: DENY_ACCESS_STATE_DENIED = 1;
   */
  DENIED = 1,

  /**
   * The deny policy doesn't deny the principal the permission.
   *
   * @generated from enum value: DENY_ACCESS_STATE_NOT_DENIED = 2;
   */
  NOT_DENIED = 2,

  /**
   * The deny policy denies the principal the permission if a condition
   * expression evaluates to `true`. However, the sender of the request didn't
   * provide enough context for Policy Troubleshooter to evaluate the condition
   * expression.
   *
   * @generated from enum value: DENY_ACCESS_STATE_UNKNOWN_CONDITIONAL = 3;
   */
  UNKNOWN_CONDITIONAL = 3,

  /**
   * The sender of the request does not have access to all of the deny policies
   * that Policy Troubleshooter needs to evaluate the principal's access.
   *
   * @generated from enum value: DENY_ACCESS_STATE_UNKNOWN_INFO = 4;
   */
  UNKNOWN_INFO = 4,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.iam.v3.DenyAccessState.
 */
export const DenyAccessStateSchema: GenEnum<DenyAccessState> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 1);

/**
 * Whether a role includes a specific permission.
 *
 * @generated from enum google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState
 */
export enum RolePermissionInclusionState {
  /**
   * Not specified.
   *
   * @generated from enum value: ROLE_PERMISSION_INCLUSION_STATE_UNSPECIFIED = 0;
   */
  ROLE_PERMISSION_INCLUSION_STATE_UNSPECIFIED = 0,

  /**
   * The permission is included in the role.
   *
   * @generated from enum value: ROLE_PERMISSION_INCLUDED = 1;
   */
  ROLE_PERMISSION_INCLUDED = 1,

  /**
   * The permission is not included in the role.
   *
   * @generated from enum value: ROLE_PERMISSION_NOT_INCLUDED = 2;
   */
  ROLE_PERMISSION_NOT_INCLUDED = 2,

  /**
   * The sender of the request is not allowed to access the role definition.
   *
   * @generated from enum value: ROLE_PERMISSION_UNKNOWN_INFO = 3;
   */
  ROLE_PERMISSION_UNKNOWN_INFO = 3,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState.
 */
export const RolePermissionInclusionStateSchema: GenEnum<RolePermissionInclusionState> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 2);

/**
 * Whether the permission in the request matches the permission in the policy.
 *
 * @generated from enum google.cloud.policytroubleshooter.iam.v3.PermissionPatternMatchingState
 */
export enum PermissionPatternMatchingState {
  /**
   * Not specified.
   *
   * @generated from enum value: PERMISSION_PATTERN_MATCHING_STATE_UNSPECIFIED = 0;
   */
  PERMISSION_PATTERN_MATCHING_STATE_UNSPECIFIED = 0,

  /**
   * The permission in the request matches the permission in the policy.
   *
   * @generated from enum value: PERMISSION_PATTERN_MATCHED = 1;
   */
  PERMISSION_PATTERN_MATCHED = 1,

  /**
   * The permission in the request matches the permission in the policy.
   *
   * @generated from enum value: PERMISSION_PATTERN_NOT_MATCHED = 2;
   */
  PERMISSION_PATTERN_NOT_MATCHED = 2,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.iam.v3.PermissionPatternMatchingState.
 */
export const PermissionPatternMatchingStateSchema: GenEnum<PermissionPatternMatchingState> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 3);

/**
 * Whether the principal in the request matches the principal in the policy.
 *
 * @generated from enum google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState
 */
export enum MembershipMatchingState {
  /**
   * Not specified.
   *
   * @generated from enum value: MEMBERSHIP_MATCHING_STATE_UNSPECIFIED = 0;
   */
  MEMBERSHIP_MATCHING_STATE_UNSPECIFIED = 0,

  /**
   * The principal in the request matches the principal in the policy. The
   * principal can be included directly or indirectly:
   *
   * * A principal is included directly if that principal is listed in the
   *   role binding.
   * * A principal is included indirectly if that principal is in a Google
   *   group, Google Workspace account, or Cloud Identity domain that is listed
   *   in the policy.
   *
   * @generated from enum value: MEMBERSHIP_MATCHED = 1;
   */
  MEMBERSHIP_MATCHED = 1,

  /**
   * The principal in the request doesn't match the principal in the policy.
   *
   * @generated from enum value: MEMBERSHIP_NOT_MATCHED = 2;
   */
  MEMBERSHIP_NOT_MATCHED = 2,

  /**
   * The principal in the policy is a group or domain, and the sender of the
   * request doesn't have permission to view whether the principal in the
   * request is a member of the group or domain.
   *
   * @generated from enum value: MEMBERSHIP_UNKNOWN_INFO = 3;
   */
  MEMBERSHIP_UNKNOWN_INFO = 3,

  /**
   * The principal is an unsupported type.
   *
   * @generated from enum value: MEMBERSHIP_UNKNOWN_UNSUPPORTED = 4;
   */
  MEMBERSHIP_UNKNOWN_UNSUPPORTED = 4,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState.
 */
export const MembershipMatchingStateSchema: GenEnum<MembershipMatchingState> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 4);

/**
 * The extent to which a single data point contributes to an overall
 * determination.
 *
 * @generated from enum google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance
 */
export enum HeuristicRelevance {
  /**
   * Not specified.
   *
   * @generated from enum value: HEURISTIC_RELEVANCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The data point has a limited effect on the result. Changing the data point
   * is unlikely to affect the overall determination.
   *
   * @generated from enum value: HEURISTIC_RELEVANCE_NORMAL = 1;
   */
  NORMAL = 1,

  /**
   * The data point has a strong effect on the result. Changing the data point
   * is likely to affect the overall determination.
   *
   * @generated from enum value: HEURISTIC_RELEVANCE_HIGH = 2;
   */
  HIGH = 2,
}

/**
 * Describes the enum google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.
 */
export const HeuristicRelevanceSchema: GenEnum<HeuristicRelevance> = /*@__PURE__*/
  enumDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 5);

/**
 * IAM Policy Troubleshooter service.
 *
 * This service helps you troubleshoot access issues for Google Cloud resources.
 *
 * @generated from service google.cloud.policytroubleshooter.iam.v3.PolicyTroubleshooter
 */
export const PolicyTroubleshooter: GenService<{
  /**
   * Checks whether a principal has a specific permission for a specific
   * resource, and explains why the principal does or doesn't have that
   * permission.
   *
   * @generated from rpc google.cloud.policytroubleshooter.iam.v3.PolicyTroubleshooter.TroubleshootIamPolicy
   */
  troubleshootIamPolicy: {
    methodKind: "unary";
    input: typeof TroubleshootIamPolicyRequestSchema;
    output: typeof TroubleshootIamPolicyResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_policytroubleshooter_iam_v3_troubleshooter, 0);

