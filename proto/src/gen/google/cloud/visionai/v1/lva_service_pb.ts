// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/visionai/v1/lva_service.proto (package google.cloud.visionai.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import { file_google_cloud_visionai_v1_common } from "./common_pb";
import type { Analysis, AnalysisSchema, Operator, OperatorSchema, Process, ProcessSchema } from "./lva_resources_pb";
import { file_google_cloud_visionai_v1_lva_resources } from "./lva_resources_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/visionai/v1/lva_service.proto.
 */
export const file_google_cloud_visionai_v1_lva_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_visionai_v1_common, file_google_cloud_visionai_v1_lva_resources, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Message for requesting list of Operators.
 *
 * @generated from message google.cloud.visionai.v1.ListOperatorsRequest
 */
export type ListOperatorsRequest = Message<"google.cloud.visionai.v1.ListOperatorsRequest"> & {
  /**
   * Required. Parent value for ListOperatorsRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListOperatorsRequest.
 * Use `create(ListOperatorsRequestSchema)` to create a new message.
 */
export const ListOperatorsRequestSchema: GenMessage<ListOperatorsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 0);

/**
 * Message for response to listing Operators.
 *
 * @generated from message google.cloud.visionai.v1.ListOperatorsResponse
 */
export type ListOperatorsResponse = Message<"google.cloud.visionai.v1.ListOperatorsResponse"> & {
  /**
   * The list of Operator
   *
   * @generated from field: repeated google.cloud.visionai.v1.Operator operators = 1;
   */
  operators: Operator[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.visionai.v1.ListOperatorsResponse.
 * Use `create(ListOperatorsResponseSchema)` to create a new message.
 */
export const ListOperatorsResponseSchema: GenMessage<ListOperatorsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 1);

/**
 * Message for getting a Operator.
 *
 * @generated from message google.cloud.visionai.v1.GetOperatorRequest
 */
export type GetOperatorRequest = Message<"google.cloud.visionai.v1.GetOperatorRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetOperatorRequest.
 * Use `create(GetOperatorRequestSchema)` to create a new message.
 */
export const GetOperatorRequestSchema: GenMessage<GetOperatorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 2);

/**
 * Message for creating a Operator.
 *
 * @generated from message google.cloud.visionai.v1.CreateOperatorRequest
 */
export type CreateOperatorRequest = Message<"google.cloud.visionai.v1.CreateOperatorRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object.
   *
   * @generated from field: string operator_id = 2;
   */
  operatorId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.visionai.v1.Operator operator = 3;
   */
  operator?: Operator;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateOperatorRequest.
 * Use `create(CreateOperatorRequestSchema)` to create a new message.
 */
export const CreateOperatorRequestSchema: GenMessage<CreateOperatorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 3);

/**
 * Message for updating a Operator.
 *
 * @generated from message google.cloud.visionai.v1.UpdateOperatorRequest
 */
export type UpdateOperatorRequest = Message<"google.cloud.visionai.v1.UpdateOperatorRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Operator resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The resource being updated
   *
   * @generated from field: google.cloud.visionai.v1.Operator operator = 2;
   */
  operator?: Operator;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateOperatorRequest.
 * Use `create(UpdateOperatorRequestSchema)` to create a new message.
 */
export const UpdateOperatorRequestSchema: GenMessage<UpdateOperatorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 4);

/**
 * Message for deleting a Operator
 *
 * @generated from message google.cloud.visionai.v1.DeleteOperatorRequest
 */
export type DeleteOperatorRequest = Message<"google.cloud.visionai.v1.DeleteOperatorRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteOperatorRequest.
 * Use `create(DeleteOperatorRequestSchema)` to create a new message.
 */
export const DeleteOperatorRequestSchema: GenMessage<DeleteOperatorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 5);

/**
 * Message for requesting list of Analyses
 *
 * @generated from message google.cloud.visionai.v1.ListAnalysesRequest
 */
export type ListAnalysesRequest = Message<"google.cloud.visionai.v1.ListAnalysesRequest"> & {
  /**
   * Required. Parent value for ListAnalysesRequest
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListAnalysesRequest.
 * Use `create(ListAnalysesRequestSchema)` to create a new message.
 */
export const ListAnalysesRequestSchema: GenMessage<ListAnalysesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 6);

/**
 * Message for response to listing Analyses
 *
 * @generated from message google.cloud.visionai.v1.ListAnalysesResponse
 */
export type ListAnalysesResponse = Message<"google.cloud.visionai.v1.ListAnalysesResponse"> & {
  /**
   * The list of Analysis
   *
   * @generated from field: repeated google.cloud.visionai.v1.Analysis analyses = 1;
   */
  analyses: Analysis[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.visionai.v1.ListAnalysesResponse.
 * Use `create(ListAnalysesResponseSchema)` to create a new message.
 */
export const ListAnalysesResponseSchema: GenMessage<ListAnalysesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 7);

/**
 * Message for getting an Analysis.
 *
 * @generated from message google.cloud.visionai.v1.GetAnalysisRequest
 */
export type GetAnalysisRequest = Message<"google.cloud.visionai.v1.GetAnalysisRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetAnalysisRequest.
 * Use `create(GetAnalysisRequestSchema)` to create a new message.
 */
export const GetAnalysisRequestSchema: GenMessage<GetAnalysisRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 8);

/**
 * Message for creating an Analysis.
 *
 * @generated from message google.cloud.visionai.v1.CreateAnalysisRequest
 */
export type CreateAnalysisRequest = Message<"google.cloud.visionai.v1.CreateAnalysisRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object.
   *
   * @generated from field: string analysis_id = 2;
   */
  analysisId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.visionai.v1.Analysis analysis = 3;
   */
  analysis?: Analysis;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateAnalysisRequest.
 * Use `create(CreateAnalysisRequestSchema)` to create a new message.
 */
export const CreateAnalysisRequestSchema: GenMessage<CreateAnalysisRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 9);

/**
 * Message for updating an Analysis.
 *
 * @generated from message google.cloud.visionai.v1.UpdateAnalysisRequest
 */
export type UpdateAnalysisRequest = Message<"google.cloud.visionai.v1.UpdateAnalysisRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Analysis resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The resource being updated.
   *
   * @generated from field: google.cloud.visionai.v1.Analysis analysis = 2;
   */
  analysis?: Analysis;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateAnalysisRequest.
 * Use `create(UpdateAnalysisRequestSchema)` to create a new message.
 */
export const UpdateAnalysisRequestSchema: GenMessage<UpdateAnalysisRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 10);

/**
 * Message for deleting an Analysis.
 *
 * @generated from message google.cloud.visionai.v1.DeleteAnalysisRequest
 */
export type DeleteAnalysisRequest = Message<"google.cloud.visionai.v1.DeleteAnalysisRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteAnalysisRequest.
 * Use `create(DeleteAnalysisRequestSchema)` to create a new message.
 */
export const DeleteAnalysisRequestSchema: GenMessage<DeleteAnalysisRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 11);

/**
 * Message for requesting list of Processes.
 *
 * @generated from message google.cloud.visionai.v1.ListProcessesRequest
 */
export type ListProcessesRequest = Message<"google.cloud.visionai.v1.ListProcessesRequest"> & {
  /**
   * Required. Parent value for ListProcessesRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListProcessesRequest.
 * Use `create(ListProcessesRequestSchema)` to create a new message.
 */
export const ListProcessesRequestSchema: GenMessage<ListProcessesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 12);

/**
 * Message for response to listing Processes.
 *
 * @generated from message google.cloud.visionai.v1.ListProcessesResponse
 */
export type ListProcessesResponse = Message<"google.cloud.visionai.v1.ListProcessesResponse"> & {
  /**
   * The list of Processes.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Process processes = 1;
   */
  processes: Process[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.visionai.v1.ListProcessesResponse.
 * Use `create(ListProcessesResponseSchema)` to create a new message.
 */
export const ListProcessesResponseSchema: GenMessage<ListProcessesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 13);

/**
 * Message for getting a Process.
 *
 * @generated from message google.cloud.visionai.v1.GetProcessRequest
 */
export type GetProcessRequest = Message<"google.cloud.visionai.v1.GetProcessRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetProcessRequest.
 * Use `create(GetProcessRequestSchema)` to create a new message.
 */
export const GetProcessRequestSchema: GenMessage<GetProcessRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 14);

/**
 * Message for creating a Process.
 *
 * @generated from message google.cloud.visionai.v1.CreateProcessRequest
 */
export type CreateProcessRequest = Message<"google.cloud.visionai.v1.CreateProcessRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object.
   *
   * @generated from field: string process_id = 2;
   */
  processId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.visionai.v1.Process process = 3;
   */
  process?: Process;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateProcessRequest.
 * Use `create(CreateProcessRequestSchema)` to create a new message.
 */
export const CreateProcessRequestSchema: GenMessage<CreateProcessRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 15);

/**
 * Message for updating a Process.
 *
 * @generated from message google.cloud.visionai.v1.UpdateProcessRequest
 */
export type UpdateProcessRequest = Message<"google.cloud.visionai.v1.UpdateProcessRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Process resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The resource being updated.
   *
   * @generated from field: google.cloud.visionai.v1.Process process = 2;
   */
  process?: Process;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateProcessRequest.
 * Use `create(UpdateProcessRequestSchema)` to create a new message.
 */
export const UpdateProcessRequestSchema: GenMessage<UpdateProcessRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 16);

/**
 * Message for deleting a Process.
 *
 * @generated from message google.cloud.visionai.v1.DeleteProcessRequest
 */
export type DeleteProcessRequest = Message<"google.cloud.visionai.v1.DeleteProcessRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteProcessRequest.
 * Use `create(DeleteProcessRequestSchema)` to create a new message.
 */
export const DeleteProcessRequestSchema: GenMessage<DeleteProcessRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 17);

/**
 * Request message for running the processes in a batch.
 *
 * @generated from message google.cloud.visionai.v1.BatchRunProcessRequest
 */
export type BatchRunProcessRequest = Message<"google.cloud.visionai.v1.BatchRunProcessRequest"> & {
  /**
   * Required. The parent resource shared by all processes being created.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The create process requests.
   *
   * @generated from field: repeated google.cloud.visionai.v1.CreateProcessRequest requests = 2;
   */
  requests: CreateProcessRequest[];

  /**
   * Optional. Options for batch processes.
   *
   * @generated from field: google.cloud.visionai.v1.BatchRunProcessRequest.BatchRunProcessOptions options = 3;
   */
  options?: BatchRunProcessRequest_BatchRunProcessOptions;

  /**
   * Output only. The batch ID.
   *
   * @generated from field: string batch_id = 4;
   */
  batchId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.BatchRunProcessRequest.
 * Use `create(BatchRunProcessRequestSchema)` to create a new message.
 */
export const BatchRunProcessRequestSchema: GenMessage<BatchRunProcessRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 18);

/**
 * Options for batch processes.
 *
 * @generated from message google.cloud.visionai.v1.BatchRunProcessRequest.BatchRunProcessOptions
 */
export type BatchRunProcessRequest_BatchRunProcessOptions = Message<"google.cloud.visionai.v1.BatchRunProcessRequest.BatchRunProcessOptions"> & {
  /**
   * The retry counts per process. Default: 3.
   *
   * @generated from field: int32 retry_count = 1;
   */
  retryCount: number;

  /**
   * The batch size. Default: 5, maximum: 100.
   *
   * @generated from field: int32 batch_size = 2;
   */
  batchSize: number;
};

/**
 * Describes the message google.cloud.visionai.v1.BatchRunProcessRequest.BatchRunProcessOptions.
 * Use `create(BatchRunProcessRequest_BatchRunProcessOptionsSchema)` to create a new message.
 */
export const BatchRunProcessRequest_BatchRunProcessOptionsSchema: GenMessage<BatchRunProcessRequest_BatchRunProcessOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 18, 0);

/**
 * Response message for running the processes in a batch.
 *
 * @generated from message google.cloud.visionai.v1.BatchRunProcessResponse
 */
export type BatchRunProcessResponse = Message<"google.cloud.visionai.v1.BatchRunProcessResponse"> & {
  /**
   * The batch ID.
   *
   * @generated from field: string batch_id = 1;
   */
  batchId: string;

  /**
   * Processes created.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Process processes = 2;
   */
  processes: Process[];
};

/**
 * Describes the message google.cloud.visionai.v1.BatchRunProcessResponse.
 * Use `create(BatchRunProcessResponseSchema)` to create a new message.
 */
export const BatchRunProcessResponseSchema: GenMessage<BatchRunProcessResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 19);

/**
 * Request message for querying operator info.
 *
 * @generated from message google.cloud.visionai.v1.ResolveOperatorInfoRequest
 */
export type ResolveOperatorInfoRequest = Message<"google.cloud.visionai.v1.ResolveOperatorInfoRequest"> & {
  /**
   * Required. Parent value for ResolveOperatorInfoRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The operator queries.
   *
   * @generated from field: repeated google.cloud.visionai.v1.OperatorQuery queries = 2;
   */
  queries: OperatorQuery[];
};

/**
 * Describes the message google.cloud.visionai.v1.ResolveOperatorInfoRequest.
 * Use `create(ResolveOperatorInfoRequestSchema)` to create a new message.
 */
export const ResolveOperatorInfoRequestSchema: GenMessage<ResolveOperatorInfoRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 20);

/**
 * OperatorQuery represents one query to a Operator.
 *
 * @generated from message google.cloud.visionai.v1.OperatorQuery
 */
export type OperatorQuery = Message<"google.cloud.visionai.v1.OperatorQuery"> & {
  /**
   * Required. The canonical Name of the operator. e.g. OccupancyCounting.
   *
   * @generated from field: string operator = 1;
   */
  operator: string;

  /**
   * Optional. Tag of the operator.
   *
   * @generated from field: string tag = 2;
   */
  tag: string;

  /**
   * Optional. Registry of the operator.
   *
   * @generated from field: google.cloud.visionai.v1.Registry registry = 3;
   */
  registry: Registry;
};

/**
 * Describes the message google.cloud.visionai.v1.OperatorQuery.
 * Use `create(OperatorQuerySchema)` to create a new message.
 */
export const OperatorQuerySchema: GenMessage<OperatorQuery> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 21);

/**
 * Response message of ResolveOperatorInfo API.
 *
 * @generated from message google.cloud.visionai.v1.ResolveOperatorInfoResponse
 */
export type ResolveOperatorInfoResponse = Message<"google.cloud.visionai.v1.ResolveOperatorInfoResponse"> & {
  /**
   * Operators with detailed information.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Operator operators = 1;
   */
  operators: Operator[];
};

/**
 * Describes the message google.cloud.visionai.v1.ResolveOperatorInfoResponse.
 * Use `create(ResolveOperatorInfoResponseSchema)` to create a new message.
 */
export const ResolveOperatorInfoResponseSchema: GenMessage<ResolveOperatorInfoResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 22);

/**
 * Request message of ListPublicOperatorsRequest API.
 *
 * @generated from message google.cloud.visionai.v1.ListPublicOperatorsRequest
 */
export type ListPublicOperatorsRequest = Message<"google.cloud.visionai.v1.ListPublicOperatorsRequest"> & {
  /**
   * Required. Parent value for ListPublicOperatorsRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListPublicOperatorsRequest.
 * Use `create(ListPublicOperatorsRequestSchema)` to create a new message.
 */
export const ListPublicOperatorsRequestSchema: GenMessage<ListPublicOperatorsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 23);

/**
 * Response message of ListPublicOperators API.
 *
 * @generated from message google.cloud.visionai.v1.ListPublicOperatorsResponse
 */
export type ListPublicOperatorsResponse = Message<"google.cloud.visionai.v1.ListPublicOperatorsResponse"> & {
  /**
   * The list of Operator
   *
   * @generated from field: repeated google.cloud.visionai.v1.Operator operators = 1;
   */
  operators: Operator[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListPublicOperatorsResponse.
 * Use `create(ListPublicOperatorsResponseSchema)` to create a new message.
 */
export const ListPublicOperatorsResponseSchema: GenMessage<ListPublicOperatorsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_service, 24);

/**
 * The enum of the types of the Registry.
 *
 * @generated from enum google.cloud.visionai.v1.Registry
 */
export enum Registry {
  /**
   * Registry is unspecified.
   *
   * @generated from enum value: REGISTRY_UNSPECIFIED = 0;
   */
  REGISTRY_UNSPECIFIED = 0,

  /**
   * Public Registry containing the public Operators released by Google.
   *
   * @generated from enum value: PUBLIC = 1;
   */
  PUBLIC = 1,

  /**
   * Private Registry containing the local registered operators.
   *
   * @generated from enum value: PRIVATE = 2;
   */
  PRIVATE = 2,
}

/**
 * Describes the enum google.cloud.visionai.v1.Registry.
 */
export const RegistrySchema: GenEnum<Registry> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_lva_service, 0);

/**
 * Service describing handlers for resources. The service enables clients to run
 * Live Video Analytics (LVA) on the streaming inputs.
 *
 * @generated from service google.cloud.visionai.v1.LiveVideoAnalytics
 */
export const LiveVideoAnalytics: GenService<{
  /**
   * ListPublicOperators returns all the operators in public registry.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.ListPublicOperators
   */
  listPublicOperators: {
    methodKind: "unary";
    input: typeof ListPublicOperatorsRequestSchema;
    output: typeof ListPublicOperatorsResponseSchema;
  },
  /**
   * ResolveOperatorInfo returns the operator information based on the request.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.ResolveOperatorInfo
   */
  resolveOperatorInfo: {
    methodKind: "unary";
    input: typeof ResolveOperatorInfoRequestSchema;
    output: typeof ResolveOperatorInfoResponseSchema;
  },
  /**
   * Lists Operators in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.ListOperators
   */
  listOperators: {
    methodKind: "unary";
    input: typeof ListOperatorsRequestSchema;
    output: typeof ListOperatorsResponseSchema;
  },
  /**
   * Gets details of a single Operator.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.GetOperator
   */
  getOperator: {
    methodKind: "unary";
    input: typeof GetOperatorRequestSchema;
    output: typeof OperatorSchema;
  },
  /**
   * Creates a new Operator in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.CreateOperator
   */
  createOperator: {
    methodKind: "unary";
    input: typeof CreateOperatorRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Operator.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.UpdateOperator
   */
  updateOperator: {
    methodKind: "unary";
    input: typeof UpdateOperatorRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Operator.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.DeleteOperator
   */
  deleteOperator: {
    methodKind: "unary";
    input: typeof DeleteOperatorRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Analyses in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.ListAnalyses
   */
  listAnalyses: {
    methodKind: "unary";
    input: typeof ListAnalysesRequestSchema;
    output: typeof ListAnalysesResponseSchema;
  },
  /**
   * Gets details of a single Analysis.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.GetAnalysis
   */
  getAnalysis: {
    methodKind: "unary";
    input: typeof GetAnalysisRequestSchema;
    output: typeof AnalysisSchema;
  },
  /**
   * Creates a new Analysis in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.CreateAnalysis
   */
  createAnalysis: {
    methodKind: "unary";
    input: typeof CreateAnalysisRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Analysis.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.UpdateAnalysis
   */
  updateAnalysis: {
    methodKind: "unary";
    input: typeof UpdateAnalysisRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Analysis.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.DeleteAnalysis
   */
  deleteAnalysis: {
    methodKind: "unary";
    input: typeof DeleteAnalysisRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Processes in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.ListProcesses
   */
  listProcesses: {
    methodKind: "unary";
    input: typeof ListProcessesRequestSchema;
    output: typeof ListProcessesResponseSchema;
  },
  /**
   * Gets details of a single Process.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.GetProcess
   */
  getProcess: {
    methodKind: "unary";
    input: typeof GetProcessRequestSchema;
    output: typeof ProcessSchema;
  },
  /**
   * Creates a new Process in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.CreateProcess
   */
  createProcess: {
    methodKind: "unary";
    input: typeof CreateProcessRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Process.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.UpdateProcess
   */
  updateProcess: {
    methodKind: "unary";
    input: typeof UpdateProcessRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Process.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.DeleteProcess
   */
  deleteProcess: {
    methodKind: "unary";
    input: typeof DeleteProcessRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Run all of the processes to "completion". Max time for each process is
   * the LRO time limit.
   *
   * @generated from rpc google.cloud.visionai.v1.LiveVideoAnalytics.BatchRunProcess
   */
  batchRunProcess: {
    methodKind: "unary";
    input: typeof BatchRunProcessRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_visionai_v1_lva_service, 0);

