// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/visionai/v1/streams_resources.proto (package google.cloud.visionai.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/visionai/v1/streams_resources.proto.
 */
export const file_google_cloud_visionai_v1_streams_resources: GenFile = /*@__PURE__*/
  fileDesc("CjBnb29nbGUvY2xvdWQvdmlzaW9uYWkvdjEvc3RyZWFtc19yZXNvdXJjZXMucHJvdG8SGGdvb2dsZS5jbG91ZC52aXNpb25haS52MSKvBAoGU3RyZWFtEgwKBG5hbWUYASABKAkSNAoLY3JlYXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSPAoGbGFiZWxzGAQgAygLMiwuZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxLlN0cmVhbS5MYWJlbHNFbnRyeRJGCgthbm5vdGF0aW9ucxgFIAMoCzIxLmdvb2dsZS5jbG91ZC52aXNpb25haS52MS5TdHJlYW0uQW5ub3RhdGlvbnNFbnRyeRIUCgxkaXNwbGF5X25hbWUYBiABKAkSGwoTZW5hYmxlX2hsc19wbGF5YmFjaxgHIAEoCBIdChVtZWRpYV93YXJlaG91c2VfYXNzZXQYCCABKAkaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARoyChBBbm5vdGF0aW9uc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6cOpBbQoedmlzaW9uYWkuZ29vZ2xlYXBpcy5jb20vU3RyZWFtEktwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vY2x1c3RlcnMve2NsdXN0ZXJ9L3N0cmVhbXMve3N0cmVhbX0igQUKBUV2ZW50EgwKBG5hbWUYASABKAkSNAoLY3JlYXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSOwoGbGFiZWxzGAQgAygLMisuZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxLkV2ZW50LkxhYmVsc0VudHJ5EkUKC2Fubm90YXRpb25zGAUgAygLMjAuZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxLkV2ZW50LkFubm90YXRpb25zRW50cnkSPgoPYWxpZ25tZW50X2Nsb2NrGAYgASgOMiUuZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxLkV2ZW50LkNsb2NrEi8KDGdyYWNlX3BlcmlvZBgHIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGjIKEEFubm90YXRpb25zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASI3CgVDbG9jaxIVChFDTE9DS19VTlNQRUNJRklFRBAAEgsKB0NBUFRVUkUQARIKCgZJTkdFU1QQAjpt6kFqCh12aXNpb25haS5nb29nbGVhcGlzLmNvbS9FdmVudBJJcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2NsdXN0ZXJzL3tjbHVzdGVyfS9ldmVudHMve2V2ZW50fSLKBAoGU2VyaWVzEgwKBG5hbWUYASABKAkSNAoLY3JlYXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSPAoGbGFiZWxzGAQgAygLMiwuZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxLlNlcmllcy5MYWJlbHNFbnRyeRJGCgthbm5vdGF0aW9ucxgFIAMoCzIxLmdvb2dsZS5jbG91ZC52aXNpb25haS52MS5TZXJpZXMuQW5ub3RhdGlvbnNFbnRyeRI2CgZzdHJlYW0YBiABKAlCJuBBAvpBIAoedmlzaW9uYWkuZ29vZ2xlYXBpcy5jb20vU3RyZWFtEjQKBWV2ZW50GAcgASgJQiXgQQL6QR8KHXZpc2lvbmFpLmdvb2dsZWFwaXMuY29tL0V2ZW50Gi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaMgoQQW5ub3RhdGlvbnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBOm/qQWwKHnZpc2lvbmFpLmdvb2dsZWFwaXMuY29tL1NlcmllcxJKcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2NsdXN0ZXJzL3tjbHVzdGVyfS9zZXJpZXMve3Nlcmllc30i0QQKB0NoYW5uZWwSDAoEbmFtZRgBIAEoCRI0CgtjcmVhdGVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI9CgZsYWJlbHMYBCADKAsyLS5nb29nbGUuY2xvdWQudmlzaW9uYWkudjEuQ2hhbm5lbC5MYWJlbHNFbnRyeRJHCgthbm5vdGF0aW9ucxgFIAMoCzIyLmdvb2dsZS5jbG91ZC52aXNpb25haS52MS5DaGFubmVsLkFubm90YXRpb25zRW50cnkSNgoGc3RyZWFtGAYgASgJQibgQQL6QSAKHnZpc2lvbmFpLmdvb2dsZWFwaXMuY29tL1N0cmVhbRI0CgVldmVudBgHIAEoCUIl4EEC+kEfCh12aXNpb25haS5nb29nbGVhcGlzLmNvbS9FdmVudBotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGjIKEEFubm90YXRpb25zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ATpz6kFwCh92aXNpb25haS5nb29nbGVhcGlzLmNvbS9DaGFubmVsEk1wcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vY2x1c3RlcnMve2NsdXN0ZXJ9L2NoYW5uZWxzL3tjaGFubmVsfULFAQocY29tLmdvb2dsZS5jbG91ZC52aXNpb25haS52MUIVU3RyZWFtc1Jlc291cmNlc1Byb3RvUAFaOGNsb3VkLmdvb2dsZS5jb20vZ28vdmlzaW9uYWkvYXBpdjEvdmlzaW9uYWlwYjt2aXNpb25haXBiqgIYR29vZ2xlLkNsb3VkLlZpc2lvbkFJLlYxygIYR29vZ2xlXENsb3VkXFZpc2lvbkFJXFYx6gIbR29vZ2xlOjpDbG91ZDo6VmlzaW9uQUk6OlYxYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_timestamp]);

/**
 * Message describing the Stream object. The Stream and the Event resources are
 * many to many; i.e., each Stream resource can associate to many Event
 * resources and each Event resource can associate to many Stream resources.
 *
 * @generated from message google.cloud.visionai.v1.Stream
 */
export type Stream = Message<"google.cloud.visionai.v1.Stream"> & {
  /**
   * Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Labels as key value pairs.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Annotations to allow clients to store small amounts of arbitrary data.
   *
   * @generated from field: map<string, string> annotations = 5;
   */
  annotations: { [key: string]: string };

  /**
   * The display name for the stream resource.
   *
   * @generated from field: string display_name = 6;
   */
  displayName: string;

  /**
   * Whether to enable the HLS playback service on this stream.
   *
   * @generated from field: bool enable_hls_playback = 7;
   */
  enableHlsPlayback: boolean;

  /**
   * The name of the media warehouse asset for long term storage of stream data.
   * Format: projects/${p_id}/locations/${l_id}/corpora/${c_id}/assets/${a_id}
   * Remain empty if the media warehouse storage is not needed for the stream.
   *
   * @generated from field: string media_warehouse_asset = 8;
   */
  mediaWarehouseAsset: string;
};

/**
 * Describes the message google.cloud.visionai.v1.Stream.
 * Use `create(StreamSchema)` to create a new message.
 */
export const StreamSchema: GenMessage<Stream> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_resources, 0);

/**
 * Message describing the Event object.
 *
 * @generated from message google.cloud.visionai.v1.Event
 */
export type Event = Message<"google.cloud.visionai.v1.Event"> & {
  /**
   * Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Labels as key value pairs.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Annotations to allow clients to store small amounts of arbitrary data.
   *
   * @generated from field: map<string, string> annotations = 5;
   */
  annotations: { [key: string]: string };

  /**
   * The clock used for joining streams.
   *
   * @generated from field: google.cloud.visionai.v1.Event.Clock alignment_clock = 6;
   */
  alignmentClock: Event_Clock;

  /**
   * Grace period for cleaning up the event. This is the time the controller
   * waits for before deleting the event. During this period, if there is any
   * active channel on the event. The deletion of the event after grace_period
   * will be ignored.
   *
   * @generated from field: google.protobuf.Duration grace_period = 7;
   */
  gracePeriod?: Duration;
};

/**
 * Describes the message google.cloud.visionai.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema: GenMessage<Event> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_resources, 1);

/**
 * Clock that will be used for joining streams.
 *
 * @generated from enum google.cloud.visionai.v1.Event.Clock
 */
export enum Event_Clock {
  /**
   * Clock is not specified.
   *
   * @generated from enum value: CLOCK_UNSPECIFIED = 0;
   */
  CLOCK_UNSPECIFIED = 0,

  /**
   * Use the timestamp when the data is captured. Clients need to sync the
   * clock.
   *
   * @generated from enum value: CAPTURE = 1;
   */
  CAPTURE = 1,

  /**
   * Use the timestamp when the data is received.
   *
   * @generated from enum value: INGEST = 2;
   */
  INGEST = 2,
}

/**
 * Describes the enum google.cloud.visionai.v1.Event.Clock.
 */
export const Event_ClockSchema: GenEnum<Event_Clock> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_streams_resources, 1, 0);

/**
 * Message describing the Series object.
 *
 * @generated from message google.cloud.visionai.v1.Series
 */
export type Series = Message<"google.cloud.visionai.v1.Series"> & {
  /**
   * Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Labels as key value pairs.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Annotations to allow clients to store small amounts of arbitrary data.
   *
   * @generated from field: map<string, string> annotations = 5;
   */
  annotations: { [key: string]: string };

  /**
   * Required. Stream that is associated with this series.
   *
   * @generated from field: string stream = 6;
   */
  stream: string;

  /**
   * Required. Event that is associated with this series.
   *
   * @generated from field: string event = 7;
   */
  event: string;
};

/**
 * Describes the message google.cloud.visionai.v1.Series.
 * Use `create(SeriesSchema)` to create a new message.
 */
export const SeriesSchema: GenMessage<Series> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_resources, 2);

/**
 * Message describing the Channel object.
 *
 * @generated from message google.cloud.visionai.v1.Channel
 */
export type Channel = Message<"google.cloud.visionai.v1.Channel"> & {
  /**
   * Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Labels as key value pairs.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Annotations to allow clients to store small amounts of arbitrary data.
   *
   * @generated from field: map<string, string> annotations = 5;
   */
  annotations: { [key: string]: string };

  /**
   * Required. Stream that is associated with this series.
   *
   * @generated from field: string stream = 6;
   */
  stream: string;

  /**
   * Required. Event that is associated with this series.
   *
   * @generated from field: string event = 7;
   */
  event: string;
};

/**
 * Describes the message google.cloud.visionai.v1.Channel.
 * Use `create(ChannelSchema)` to create a new message.
 */
export const ChannelSchema: GenMessage<Channel> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_resources, 3);

