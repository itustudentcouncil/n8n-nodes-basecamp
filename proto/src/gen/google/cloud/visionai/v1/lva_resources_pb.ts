// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/visionai/v1/lva_resources.proto (package google.cloud.visionai.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { AnalysisDefinition, OperatorDefinition, RunMode, RunStatus } from "./lva_pb";
import { file_google_cloud_visionai_v1_lva } from "./lva_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/visionai/v1/lva_resources.proto.
 */
export const file_google_cloud_visionai_v1_lva_resources: GenFile = /*@__PURE__*/
  fileDesc("Cixnb29nbGUvY2xvdWQvdmlzaW9uYWkvdjEvbHZhX3Jlc291cmNlcy5wcm90bxIYZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxIrkDCghPcGVyYXRvchIMCgRuYW1lGAEgASgJEjQKC2NyZWF0ZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEj4KBmxhYmVscxgEIAMoCzIuLmdvb2dsZS5jbG91ZC52aXNpb25haS52MS5PcGVyYXRvci5MYWJlbHNFbnRyeRJJChNvcGVyYXRvcl9kZWZpbml0aW9uGAUgASgLMiwuZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxLk9wZXJhdG9yRGVmaW5pdGlvbhIUCgxkb2NrZXJfaW1hZ2UYBiABKAkaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ATpj6kFgCiB2aXNpb25haS5nb29nbGVhcGlzLmNvbS9PcGVyYXRvchI8cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L29wZXJhdG9ycy97b3BlcmF0b3J9IoUGCghBbmFseXNpcxIMCgRuYW1lGAEgASgJEjQKC2NyZWF0ZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEj4KBmxhYmVscxgEIAMoCzIuLmdvb2dsZS5jbG91ZC52aXNpb25haS52MS5BbmFseXNpcy5MYWJlbHNFbnRyeRJJChNhbmFseXNpc19kZWZpbml0aW9uGAUgASgLMiwuZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxLkFuYWx5c2lzRGVmaW5pdGlvbhJaChVpbnB1dF9zdHJlYW1zX21hcHBpbmcYBiADKAsyOy5nb29nbGUuY2xvdWQudmlzaW9uYWkudjEuQW5hbHlzaXMuSW5wdXRTdHJlYW1zTWFwcGluZ0VudHJ5ElwKFm91dHB1dF9zdHJlYW1zX21hcHBpbmcYByADKAsyPC5nb29nbGUuY2xvdWQudmlzaW9uYWkudjEuQW5hbHlzaXMuT3V0cHV0U3RyZWFtc01hcHBpbmdFbnRyeRIbChNkaXNhYmxlX2V2ZW50X3dhdGNoGAggASgIGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaOgoYSW5wdXRTdHJlYW1zTWFwcGluZ0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaOwoZT3V0cHV0U3RyZWFtc01hcHBpbmdFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBOnXqQXIKIHZpc2lvbmFpLmdvb2dsZWFwaXMuY29tL0FuYWx5c2lzEk5wcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vY2x1c3RlcnMve2NsdXN0ZXJ9L2FuYWx5c2VzL3thbmFseXNpc30ilwQKB1Byb2Nlc3MSDAoEbmFtZRgBIAEoCRI0CgtjcmVhdGVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI6CghhbmFseXNpcxgEIAEoCUIo4EEC+kEiCiB2aXNpb25haS5nb29nbGVhcGlzLmNvbS9BbmFseXNpcxIgChNhdHRyaWJ1dGVfb3ZlcnJpZGVzGAUgAygJQgPgQQESPAoKcnVuX3N0YXR1cxgGIAEoCzIjLmdvb2dsZS5jbG91ZC52aXNpb25haS52MS5SdW5TdGF0dXNCA+BBARI4CghydW5fbW9kZRgHIAEoDjIhLmdvb2dsZS5jbG91ZC52aXNpb25haS52MS5SdW5Nb2RlQgPgQQESFQoIZXZlbnRfaWQYCCABKAlCA+BBARIVCghiYXRjaF9pZBgJIAEoCUID4EEBEhgKC3JldHJ5X2NvdW50GAogASgFQgPgQQE6dOpBcQofdmlzaW9uYWkuZ29vZ2xlYXBpcy5jb20vUHJvY2VzcxJOcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2NsdXN0ZXJzL3tjbHVzdGVyfS9wcm9jZXNzZXMve3Byb2Nlc3N9QsEBChxjb20uZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxQhFMdmFSZXNvdXJjZXNQcm90b1ABWjhjbG91ZC5nb29nbGUuY29tL2dvL3Zpc2lvbmFpL2FwaXYxL3Zpc2lvbmFpcGI7dmlzaW9uYWlwYqoCGEdvb2dsZS5DbG91ZC5WaXNpb25BSS5WMcoCGEdvb2dsZVxDbG91ZFxWaXNpb25BSVxWMeoCG0dvb2dsZTo6Q2xvdWQ6OlZpc2lvbkFJOjpWMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_visionai_v1_lva, file_google_protobuf_timestamp]);

/**
 * Message describing the Operator object.
 *
 * @generated from message google.cloud.visionai.v1.Operator
 */
export type Operator = Message<"google.cloud.visionai.v1.Operator"> & {
  /**
   * Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Labels as key value pairs.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * The definition of the operator.
   *
   * @generated from field: google.cloud.visionai.v1.OperatorDefinition operator_definition = 5;
   */
  operatorDefinition?: OperatorDefinition;

  /**
   * The link to the docker image of the operator.
   *
   * @generated from field: string docker_image = 6;
   */
  dockerImage: string;
};

/**
 * Describes the message google.cloud.visionai.v1.Operator.
 * Use `create(OperatorSchema)` to create a new message.
 */
export const OperatorSchema: GenMessage<Operator> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_resources, 0);

/**
 * Message describing the Analysis object.
 *
 * @generated from message google.cloud.visionai.v1.Analysis
 */
export type Analysis = Message<"google.cloud.visionai.v1.Analysis"> & {
  /**
   * The name of resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Labels as key value pairs.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * The definition of the analysis.
   *
   * @generated from field: google.cloud.visionai.v1.AnalysisDefinition analysis_definition = 5;
   */
  analysisDefinition?: AnalysisDefinition;

  /**
   * Map from the input parameter in the definition to the real stream.
   * E.g., suppose you had a stream source operator named "input-0" and you try
   * to receive from the real stream "stream-0". You can add the following
   * mapping: [input-0: stream-0].
   *
   * @generated from field: map<string, string> input_streams_mapping = 6;
   */
  inputStreamsMapping: { [key: string]: string };

  /**
   * Map from the output parameter in the definition to the real stream.
   * E.g., suppose you had a stream sink operator named "output-0" and you try
   * to send to the real stream "stream-0". You can add the following
   * mapping: [output-0: stream-0].
   *
   * @generated from field: map<string, string> output_streams_mapping = 7;
   */
  outputStreamsMapping: { [key: string]: string };

  /**
   * Boolean flag to indicate whether you would like to disable the ability
   * to automatically start a Process when new event happening in the input
   * Stream. If you would like to start a Process manually, the field needs
   * to be set to true.
   *
   * @generated from field: bool disable_event_watch = 8;
   */
  disableEventWatch: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1.Analysis.
 * Use `create(AnalysisSchema)` to create a new message.
 */
export const AnalysisSchema: GenMessage<Analysis> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_resources, 1);

/**
 * Message describing the Process object.
 *
 * @generated from message google.cloud.visionai.v1.Process
 */
export type Process = Message<"google.cloud.visionai.v1.Process"> & {
  /**
   * The name of resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Required. Reference to an existing Analysis resource.
   *
   * @generated from field: string analysis = 4;
   */
  analysis: string;

  /**
   * Optional. Attribute overrides of the Analyzers.
   * Format for each single override item:
   * "{analyzer_name}:{attribute_key}={value}"
   *
   * @generated from field: repeated string attribute_overrides = 5;
   */
  attributeOverrides: string[];

  /**
   * Optional. Status of the Process.
   *
   * @generated from field: google.cloud.visionai.v1.RunStatus run_status = 6;
   */
  runStatus?: RunStatus;

  /**
   * Optional. Run mode of the Process.
   *
   * @generated from field: google.cloud.visionai.v1.RunMode run_mode = 7;
   */
  runMode: RunMode;

  /**
   * Optional. Event ID of the input/output streams.
   * This is useful when you have a StreamSource/StreamSink operator in the
   * Analysis, and you want to manually specify the Event to read from/write to.
   *
   * @generated from field: string event_id = 8;
   */
  eventId: string;

  /**
   * Optional. Optional: Batch ID of the Process.
   *
   * @generated from field: string batch_id = 9;
   */
  batchId: string;

  /**
   * Optional. Optional: The number of retries for a process in submission mode
   * the system should try before declaring failure. By default, no retry will
   * be performed.
   *
   * @generated from field: int32 retry_count = 10;
   */
  retryCount: number;
};

/**
 * Describes the message google.cloud.visionai.v1.Process.
 * Use `create(ProcessSchema)` to create a new message.
 */
export const ProcessSchema: GenMessage<Process> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_lva_resources, 2);

