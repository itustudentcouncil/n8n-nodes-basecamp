// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/visionai/v1/streams_service.proto (package google.cloud.visionai.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Cluster, ClusterSchema } from "./common_pb";
import { file_google_cloud_visionai_v1_common } from "./common_pb";
import type { Channel, Event, EventSchema, Series, SeriesSchema, Stream, StreamSchema } from "./streams_resources_pb";
import { file_google_cloud_visionai_v1_streams_resources } from "./streams_resources_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/visionai/v1/streams_service.proto.
 */
export const file_google_cloud_visionai_v1_streams_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_visionai_v1_common, file_google_cloud_visionai_v1_streams_resources, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Message for requesting list of Clusters.
 *
 * @generated from message google.cloud.visionai.v1.ListClustersRequest
 */
export type ListClustersRequest = Message<"google.cloud.visionai.v1.ListClustersRequest"> & {
  /**
   * Required. Parent value for ListClustersRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListClustersRequest.
 * Use `create(ListClustersRequestSchema)` to create a new message.
 */
export const ListClustersRequestSchema: GenMessage<ListClustersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 0);

/**
 * Message for response to listing Clusters.
 *
 * @generated from message google.cloud.visionai.v1.ListClustersResponse
 */
export type ListClustersResponse = Message<"google.cloud.visionai.v1.ListClustersResponse"> & {
  /**
   * The list of Cluster.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Cluster clusters = 1;
   */
  clusters: Cluster[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.visionai.v1.ListClustersResponse.
 * Use `create(ListClustersResponseSchema)` to create a new message.
 */
export const ListClustersResponseSchema: GenMessage<ListClustersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 1);

/**
 * Message for getting a Cluster.
 *
 * @generated from message google.cloud.visionai.v1.GetClusterRequest
 */
export type GetClusterRequest = Message<"google.cloud.visionai.v1.GetClusterRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetClusterRequest.
 * Use `create(GetClusterRequestSchema)` to create a new message.
 */
export const GetClusterRequestSchema: GenMessage<GetClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 2);

/**
 * Message for creating a Cluster.
 *
 * @generated from message google.cloud.visionai.v1.CreateClusterRequest
 */
export type CreateClusterRequest = Message<"google.cloud.visionai.v1.CreateClusterRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object.
   *
   * @generated from field: string cluster_id = 2;
   */
  clusterId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.visionai.v1.Cluster cluster = 3;
   */
  cluster?: Cluster;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateClusterRequest.
 * Use `create(CreateClusterRequestSchema)` to create a new message.
 */
export const CreateClusterRequestSchema: GenMessage<CreateClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 3);

/**
 * Message for updating a Cluster.
 *
 * @generated from message google.cloud.visionai.v1.UpdateClusterRequest
 */
export type UpdateClusterRequest = Message<"google.cloud.visionai.v1.UpdateClusterRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Cluster resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The resource being updated
   *
   * @generated from field: google.cloud.visionai.v1.Cluster cluster = 2;
   */
  cluster?: Cluster;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateClusterRequest.
 * Use `create(UpdateClusterRequestSchema)` to create a new message.
 */
export const UpdateClusterRequestSchema: GenMessage<UpdateClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 4);

/**
 * Message for deleting a Cluster.
 *
 * @generated from message google.cloud.visionai.v1.DeleteClusterRequest
 */
export type DeleteClusterRequest = Message<"google.cloud.visionai.v1.DeleteClusterRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteClusterRequest.
 * Use `create(DeleteClusterRequestSchema)` to create a new message.
 */
export const DeleteClusterRequestSchema: GenMessage<DeleteClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 5);

/**
 * Message for requesting list of Streams.
 *
 * @generated from message google.cloud.visionai.v1.ListStreamsRequest
 */
export type ListStreamsRequest = Message<"google.cloud.visionai.v1.ListStreamsRequest"> & {
  /**
   * Required. Parent value for ListStreamsRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListStreamsRequest.
 * Use `create(ListStreamsRequestSchema)` to create a new message.
 */
export const ListStreamsRequestSchema: GenMessage<ListStreamsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 6);

/**
 * Message for response to listing Streams.
 *
 * @generated from message google.cloud.visionai.v1.ListStreamsResponse
 */
export type ListStreamsResponse = Message<"google.cloud.visionai.v1.ListStreamsResponse"> & {
  /**
   * The list of Stream.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Stream streams = 1;
   */
  streams: Stream[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.visionai.v1.ListStreamsResponse.
 * Use `create(ListStreamsResponseSchema)` to create a new message.
 */
export const ListStreamsResponseSchema: GenMessage<ListStreamsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 7);

/**
 * Message for getting a Stream.
 *
 * @generated from message google.cloud.visionai.v1.GetStreamRequest
 */
export type GetStreamRequest = Message<"google.cloud.visionai.v1.GetStreamRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetStreamRequest.
 * Use `create(GetStreamRequestSchema)` to create a new message.
 */
export const GetStreamRequestSchema: GenMessage<GetStreamRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 8);

/**
 * Message for creating a Stream.
 *
 * @generated from message google.cloud.visionai.v1.CreateStreamRequest
 */
export type CreateStreamRequest = Message<"google.cloud.visionai.v1.CreateStreamRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object.
   *
   * @generated from field: string stream_id = 2;
   */
  streamId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.visionai.v1.Stream stream = 3;
   */
  stream?: Stream;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateStreamRequest.
 * Use `create(CreateStreamRequestSchema)` to create a new message.
 */
export const CreateStreamRequestSchema: GenMessage<CreateStreamRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 9);

/**
 * Message for updating a Stream.
 *
 * @generated from message google.cloud.visionai.v1.UpdateStreamRequest
 */
export type UpdateStreamRequest = Message<"google.cloud.visionai.v1.UpdateStreamRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Stream resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The resource being updated.
   *
   * @generated from field: google.cloud.visionai.v1.Stream stream = 2;
   */
  stream?: Stream;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateStreamRequest.
 * Use `create(UpdateStreamRequestSchema)` to create a new message.
 */
export const UpdateStreamRequestSchema: GenMessage<UpdateStreamRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 10);

/**
 * Message for deleting a Stream.
 *
 * @generated from message google.cloud.visionai.v1.DeleteStreamRequest
 */
export type DeleteStreamRequest = Message<"google.cloud.visionai.v1.DeleteStreamRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteStreamRequest.
 * Use `create(DeleteStreamRequestSchema)` to create a new message.
 */
export const DeleteStreamRequestSchema: GenMessage<DeleteStreamRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 11);

/**
 * Message for getting the thumbnail of a Stream.
 *
 * @generated from message google.cloud.visionai.v1.GetStreamThumbnailRequest
 */
export type GetStreamThumbnailRequest = Message<"google.cloud.visionai.v1.GetStreamThumbnailRequest"> & {
  /**
   * Required. The name of the stream for to get the thumbnail from.
   *
   * @generated from field: string stream = 1;
   */
  stream: string;

  /**
   * Required. The name of the GCS object to store the thumbnail image.
   *
   * @generated from field: string gcs_object_name = 2;
   */
  gcsObjectName: string;

  /**
   * Optional. The name of the event. If unspecified, the thumbnail will be
   * retrieved from the latest event.
   *
   * @generated from field: string event = 3;
   */
  event: string;

  /**
   * Optional. An optional request ID to identify the requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetStreamThumbnailRequest.
 * Use `create(GetStreamThumbnailRequestSchema)` to create a new message.
 */
export const GetStreamThumbnailRequestSchema: GenMessage<GetStreamThumbnailRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 12);

/**
 * Message for the response of GetStreamThumbnail. The empty response message
 * indicates the thumbnail image has been uploaded to GCS successfully.
 *
 * @generated from message google.cloud.visionai.v1.GetStreamThumbnailResponse
 */
export type GetStreamThumbnailResponse = Message<"google.cloud.visionai.v1.GetStreamThumbnailResponse"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.GetStreamThumbnailResponse.
 * Use `create(GetStreamThumbnailResponseSchema)` to create a new message.
 */
export const GetStreamThumbnailResponseSchema: GenMessage<GetStreamThumbnailResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 13);

/**
 * Request message for getting the auth token to access the stream HLS contents.
 *
 * @generated from message google.cloud.visionai.v1.GenerateStreamHlsTokenRequest
 */
export type GenerateStreamHlsTokenRequest = Message<"google.cloud.visionai.v1.GenerateStreamHlsTokenRequest"> & {
  /**
   * Required. The name of the stream.
   *
   * @generated from field: string stream = 1;
   */
  stream: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GenerateStreamHlsTokenRequest.
 * Use `create(GenerateStreamHlsTokenRequestSchema)` to create a new message.
 */
export const GenerateStreamHlsTokenRequestSchema: GenMessage<GenerateStreamHlsTokenRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 14);

/**
 * Response message for GenerateStreamHlsToken.
 *
 * @generated from message google.cloud.visionai.v1.GenerateStreamHlsTokenResponse
 */
export type GenerateStreamHlsTokenResponse = Message<"google.cloud.visionai.v1.GenerateStreamHlsTokenResponse"> & {
  /**
   * The generated JWT token.
   *
   * The caller should insert this token to the authorization header of the HTTP
   * requests to get the HLS playlist manifest and the video chunks.
   * eg: curl -H "Authorization: Bearer $TOKEN"
   *     https://domain.com/test-stream.playback/master.m3u8
   *
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * The expiration time of the token.
   *
   * @generated from field: google.protobuf.Timestamp expiration_time = 2;
   */
  expirationTime?: Timestamp;
};

/**
 * Describes the message google.cloud.visionai.v1.GenerateStreamHlsTokenResponse.
 * Use `create(GenerateStreamHlsTokenResponseSchema)` to create a new message.
 */
export const GenerateStreamHlsTokenResponseSchema: GenMessage<GenerateStreamHlsTokenResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 15);

/**
 * Message for requesting list of Events.
 *
 * @generated from message google.cloud.visionai.v1.ListEventsRequest
 */
export type ListEventsRequest = Message<"google.cloud.visionai.v1.ListEventsRequest"> & {
  /**
   * Required. Parent value for ListEventsRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListEventsRequest.
 * Use `create(ListEventsRequestSchema)` to create a new message.
 */
export const ListEventsRequestSchema: GenMessage<ListEventsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 16);

/**
 * Message for response to listing Events.
 *
 * @generated from message google.cloud.visionai.v1.ListEventsResponse
 */
export type ListEventsResponse = Message<"google.cloud.visionai.v1.ListEventsResponse"> & {
  /**
   * The list of Event.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Event events = 1;
   */
  events: Event[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.visionai.v1.ListEventsResponse.
 * Use `create(ListEventsResponseSchema)` to create a new message.
 */
export const ListEventsResponseSchema: GenMessage<ListEventsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 17);

/**
 * Message for getting a Event.
 *
 * @generated from message google.cloud.visionai.v1.GetEventRequest
 */
export type GetEventRequest = Message<"google.cloud.visionai.v1.GetEventRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetEventRequest.
 * Use `create(GetEventRequestSchema)` to create a new message.
 */
export const GetEventRequestSchema: GenMessage<GetEventRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 18);

/**
 * Message for creating a Event.
 *
 * @generated from message google.cloud.visionai.v1.CreateEventRequest
 */
export type CreateEventRequest = Message<"google.cloud.visionai.v1.CreateEventRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object.
   *
   * @generated from field: string event_id = 2;
   */
  eventId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.visionai.v1.Event event = 3;
   */
  event?: Event;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateEventRequest.
 * Use `create(CreateEventRequestSchema)` to create a new message.
 */
export const CreateEventRequestSchema: GenMessage<CreateEventRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 19);

/**
 * Message for updating a Event.
 *
 * @generated from message google.cloud.visionai.v1.UpdateEventRequest
 */
export type UpdateEventRequest = Message<"google.cloud.visionai.v1.UpdateEventRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Event resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The resource being updated.
   *
   * @generated from field: google.cloud.visionai.v1.Event event = 2;
   */
  event?: Event;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateEventRequest.
 * Use `create(UpdateEventRequestSchema)` to create a new message.
 */
export const UpdateEventRequestSchema: GenMessage<UpdateEventRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 20);

/**
 * Message for deleting a Event.
 *
 * @generated from message google.cloud.visionai.v1.DeleteEventRequest
 */
export type DeleteEventRequest = Message<"google.cloud.visionai.v1.DeleteEventRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteEventRequest.
 * Use `create(DeleteEventRequestSchema)` to create a new message.
 */
export const DeleteEventRequestSchema: GenMessage<DeleteEventRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 21);

/**
 * Message for requesting list of Series.
 *
 * @generated from message google.cloud.visionai.v1.ListSeriesRequest
 */
export type ListSeriesRequest = Message<"google.cloud.visionai.v1.ListSeriesRequest"> & {
  /**
   * Required. Parent value for ListSeriesRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListSeriesRequest.
 * Use `create(ListSeriesRequestSchema)` to create a new message.
 */
export const ListSeriesRequestSchema: GenMessage<ListSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 22);

/**
 * Message for response to listing Series.
 *
 * @generated from message google.cloud.visionai.v1.ListSeriesResponse
 */
export type ListSeriesResponse = Message<"google.cloud.visionai.v1.ListSeriesResponse"> & {
  /**
   * The list of Series.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Series series = 1;
   */
  series: Series[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.visionai.v1.ListSeriesResponse.
 * Use `create(ListSeriesResponseSchema)` to create a new message.
 */
export const ListSeriesResponseSchema: GenMessage<ListSeriesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 23);

/**
 * Message for getting a Series.
 *
 * @generated from message google.cloud.visionai.v1.GetSeriesRequest
 */
export type GetSeriesRequest = Message<"google.cloud.visionai.v1.GetSeriesRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetSeriesRequest.
 * Use `create(GetSeriesRequestSchema)` to create a new message.
 */
export const GetSeriesRequestSchema: GenMessage<GetSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 24);

/**
 * Message for creating a Series.
 *
 * @generated from message google.cloud.visionai.v1.CreateSeriesRequest
 */
export type CreateSeriesRequest = Message<"google.cloud.visionai.v1.CreateSeriesRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object.
   *
   * @generated from field: string series_id = 2;
   */
  seriesId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.visionai.v1.Series series = 3;
   */
  series?: Series;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateSeriesRequest.
 * Use `create(CreateSeriesRequestSchema)` to create a new message.
 */
export const CreateSeriesRequestSchema: GenMessage<CreateSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 25);

/**
 * Message for updating a Series.
 *
 * @generated from message google.cloud.visionai.v1.UpdateSeriesRequest
 */
export type UpdateSeriesRequest = Message<"google.cloud.visionai.v1.UpdateSeriesRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Series resource by the update. The fields specified in the update_mask are
   * relative to the resource, not the full request. A field will be overwritten
   * if it is in the mask. If the user does not provide a mask then all fields
   * will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The resource being updated
   *
   * @generated from field: google.cloud.visionai.v1.Series series = 2;
   */
  series?: Series;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateSeriesRequest.
 * Use `create(UpdateSeriesRequestSchema)` to create a new message.
 */
export const UpdateSeriesRequestSchema: GenMessage<UpdateSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 26);

/**
 * Message for deleting a Series.
 *
 * @generated from message google.cloud.visionai.v1.DeleteSeriesRequest
 */
export type DeleteSeriesRequest = Message<"google.cloud.visionai.v1.DeleteSeriesRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteSeriesRequest.
 * Use `create(DeleteSeriesRequestSchema)` to create a new message.
 */
export const DeleteSeriesRequestSchema: GenMessage<DeleteSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 27);

/**
 * Message for materializing a channel.
 *
 * @generated from message google.cloud.visionai.v1.MaterializeChannelRequest
 */
export type MaterializeChannelRequest = Message<"google.cloud.visionai.v1.MaterializeChannelRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the channel.
   *
   * @generated from field: string channel_id = 2;
   */
  channelId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.visionai.v1.Channel channel = 3;
   */
  channel?: Channel;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.MaterializeChannelRequest.
 * Use `create(MaterializeChannelRequestSchema)` to create a new message.
 */
export const MaterializeChannelRequestSchema: GenMessage<MaterializeChannelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_streams_service, 28);

/**
 * Service describing handlers for resources.
 * Vision API and Vision AI API are two independent APIs developed by the same
 * team. Vision API is for people to annotate their image while Vision AI is an
 * e2e solution for customer to build their own computer vision application.
 *
 * @generated from service google.cloud.visionai.v1.StreamsService
 */
export const StreamsService: GenService<{
  /**
   * Lists Clusters in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.ListClusters
   */
  listClusters: {
    methodKind: "unary";
    input: typeof ListClustersRequestSchema;
    output: typeof ListClustersResponseSchema;
  },
  /**
   * Gets details of a single Cluster.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.GetCluster
   */
  getCluster: {
    methodKind: "unary";
    input: typeof GetClusterRequestSchema;
    output: typeof ClusterSchema;
  },
  /**
   * Creates a new Cluster in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.CreateCluster
   */
  createCluster: {
    methodKind: "unary";
    input: typeof CreateClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Cluster.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.UpdateCluster
   */
  updateCluster: {
    methodKind: "unary";
    input: typeof UpdateClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Cluster.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.DeleteCluster
   */
  deleteCluster: {
    methodKind: "unary";
    input: typeof DeleteClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Streams in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.ListStreams
   */
  listStreams: {
    methodKind: "unary";
    input: typeof ListStreamsRequestSchema;
    output: typeof ListStreamsResponseSchema;
  },
  /**
   * Gets details of a single Stream.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.GetStream
   */
  getStream: {
    methodKind: "unary";
    input: typeof GetStreamRequestSchema;
    output: typeof StreamSchema;
  },
  /**
   * Creates a new Stream in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.CreateStream
   */
  createStream: {
    methodKind: "unary";
    input: typeof CreateStreamRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Stream.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.UpdateStream
   */
  updateStream: {
    methodKind: "unary";
    input: typeof UpdateStreamRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Stream.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.DeleteStream
   */
  deleteStream: {
    methodKind: "unary";
    input: typeof DeleteStreamRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets the thumbnail (image snapshot) of a single Stream.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.GetStreamThumbnail
   */
  getStreamThumbnail: {
    methodKind: "unary";
    input: typeof GetStreamThumbnailRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Generate the JWT auth token required to get the stream HLS contents.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.GenerateStreamHlsToken
   */
  generateStreamHlsToken: {
    methodKind: "unary";
    input: typeof GenerateStreamHlsTokenRequestSchema;
    output: typeof GenerateStreamHlsTokenResponseSchema;
  },
  /**
   * Lists Events in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.ListEvents
   */
  listEvents: {
    methodKind: "unary";
    input: typeof ListEventsRequestSchema;
    output: typeof ListEventsResponseSchema;
  },
  /**
   * Gets details of a single Event.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.GetEvent
   */
  getEvent: {
    methodKind: "unary";
    input: typeof GetEventRequestSchema;
    output: typeof EventSchema;
  },
  /**
   * Creates a new Event in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.CreateEvent
   */
  createEvent: {
    methodKind: "unary";
    input: typeof CreateEventRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Event.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.UpdateEvent
   */
  updateEvent: {
    methodKind: "unary";
    input: typeof UpdateEventRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Event.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.DeleteEvent
   */
  deleteEvent: {
    methodKind: "unary";
    input: typeof DeleteEventRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Series in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.ListSeries
   */
  listSeries: {
    methodKind: "unary";
    input: typeof ListSeriesRequestSchema;
    output: typeof ListSeriesResponseSchema;
  },
  /**
   * Gets details of a single Series.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.GetSeries
   */
  getSeries: {
    methodKind: "unary";
    input: typeof GetSeriesRequestSchema;
    output: typeof SeriesSchema;
  },
  /**
   * Creates a new Series in a given project and location.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.CreateSeries
   */
  createSeries: {
    methodKind: "unary";
    input: typeof CreateSeriesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Event.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.UpdateSeries
   */
  updateSeries: {
    methodKind: "unary";
    input: typeof UpdateSeriesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Series.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.DeleteSeries
   */
  deleteSeries: {
    methodKind: "unary";
    input: typeof DeleteSeriesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Materialize a channel.
   *
   * @generated from rpc google.cloud.visionai.v1.StreamsService.MaterializeChannel
   */
  materializeChannel: {
    methodKind: "unary";
    input: typeof MaterializeChannelRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_visionai_v1_streams_service, 0);

