// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/visionai/v1/warehouse.proto (package google.cloud.visionai.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationMetadata } from "./common_pb";
import { file_google_cloud_visionai_v1_common } from "./common_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Any, Duration, EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { DateTime } from "../../../type/datetime_pb";
import { file_google_type_datetime } from "../../../type/datetime_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/visionai/v1/warehouse.proto.
 */
export const file_google_cloud_visionai_v1_warehouse: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_visionai_v1_common, file_google_longrunning_operations, file_google_protobuf_any, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_rpc_status, file_google_type_datetime]);

/**
 * Request message for CreateAssetRequest.
 *
 * @generated from message google.cloud.visionai.v1.CreateAssetRequest
 */
export type CreateAssetRequest = Message<"google.cloud.visionai.v1.CreateAssetRequest"> & {
  /**
   * Required. The parent resource where this asset will be created.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The asset to create.
   *
   * @generated from field: google.cloud.visionai.v1.Asset asset = 2;
   */
  asset?: Asset;

  /**
   * Optional. The ID to use for the asset, which will become the final
   * component of the asset's resource name if user choose to specify.
   * Otherwise, asset id will be generated by system.
   *
   * This value should be up to 63 characters, and valid characters
   * are /[a-z][0-9]-/. The first character must be a letter, the last could be
   * a letter or a number.
   *
   * @generated from field: optional string asset_id = 3;
   */
  assetId?: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateAssetRequest.
 * Use `create(CreateAssetRequestSchema)` to create a new message.
 */
export const CreateAssetRequestSchema: GenMessage<CreateAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 0);

/**
 * Request message for GetAsset.
 *
 * @generated from message google.cloud.visionai.v1.GetAssetRequest
 */
export type GetAssetRequest = Message<"google.cloud.visionai.v1.GetAssetRequest"> & {
  /**
   * Required. The name of the asset to retrieve.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetAssetRequest.
 * Use `create(GetAssetRequestSchema)` to create a new message.
 */
export const GetAssetRequestSchema: GenMessage<GetAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 1);

/**
 * Request message for ListAssets.
 *
 * @generated from message google.cloud.visionai.v1.ListAssetsRequest
 */
export type ListAssetsRequest = Message<"google.cloud.visionai.v1.ListAssetsRequest"> & {
  /**
   * Required. The parent, which owns this collection of assets.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of assets to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 assets will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListAssets` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListAssets` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The filter applied to the returned list.
   * Only the following filterings are supported:
   * "assets_with_contents = true", which returns assets with contents uploaded;
   * "assets_with_contents = false", which returns assets without contents.
   *
   * @generated from field: string filter = 5;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListAssetsRequest.
 * Use `create(ListAssetsRequestSchema)` to create a new message.
 */
export const ListAssetsRequestSchema: GenMessage<ListAssetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 2);

/**
 * Response message for ListAssets.
 *
 * @generated from message google.cloud.visionai.v1.ListAssetsResponse
 */
export type ListAssetsResponse = Message<"google.cloud.visionai.v1.ListAssetsResponse"> & {
  /**
   * The assets from the specified corpus.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Asset assets = 1;
   */
  assets: Asset[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListAssetsResponse.
 * Use `create(ListAssetsResponseSchema)` to create a new message.
 */
export const ListAssetsResponseSchema: GenMessage<ListAssetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 3);

/**
 * Request message for UpdateAsset.
 *
 * @generated from message google.cloud.visionai.v1.UpdateAssetRequest
 */
export type UpdateAssetRequest = Message<"google.cloud.visionai.v1.UpdateAssetRequest"> & {
  /**
   * Required. The asset to update.
   *
   * The asset's `name` field is used to identify the asset to be updated.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}`
   *
   * @generated from field: google.cloud.visionai.v1.Asset asset = 1;
   */
  asset?: Asset;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateAssetRequest.
 * Use `create(UpdateAssetRequestSchema)` to create a new message.
 */
export const UpdateAssetRequestSchema: GenMessage<UpdateAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 4);

/**
 * Request message for DeleteAsset.
 *
 * @generated from message google.cloud.visionai.v1.DeleteAssetRequest
 */
export type DeleteAssetRequest = Message<"google.cloud.visionai.v1.DeleteAssetRequest"> & {
  /**
   * Required. The name of the asset to delete.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteAssetRequest.
 * Use `create(DeleteAssetRequestSchema)` to create a new message.
 */
export const DeleteAssetRequestSchema: GenMessage<DeleteAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 5);

/**
 * The source of the asset.
 *
 * @generated from message google.cloud.visionai.v1.AssetSource
 */
export type AssetSource = Message<"google.cloud.visionai.v1.AssetSource"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1.AssetSource.source_form
   */
  sourceForm: {
    /**
     * The source of the asset is from Cloud Storage.
     *
     * @generated from field: google.cloud.visionai.v1.AssetSource.AssetGcsSource asset_gcs_source = 1;
     */
    value: AssetSource_AssetGcsSource;
    case: "assetGcsSource";
  } | {
    /**
     * The source of the asset is from content bytes.
     *
     * @generated from field: google.cloud.visionai.v1.AssetSource.AssetContentData asset_content_data = 2;
     */
    value: AssetSource_AssetContentData;
    case: "assetContentData";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.visionai.v1.AssetSource.
 * Use `create(AssetSourceSchema)` to create a new message.
 */
export const AssetSourceSchema: GenMessage<AssetSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 6);

/**
 * The asset source is from Cloud Storage.
 *
 * @generated from message google.cloud.visionai.v1.AssetSource.AssetGcsSource
 */
export type AssetSource_AssetGcsSource = Message<"google.cloud.visionai.v1.AssetSource.AssetGcsSource"> & {
  /**
   * Cloud storage uri.
   *
   * @generated from field: string gcs_uri = 1;
   */
  gcsUri: string;
};

/**
 * Describes the message google.cloud.visionai.v1.AssetSource.AssetGcsSource.
 * Use `create(AssetSource_AssetGcsSourceSchema)` to create a new message.
 */
export const AssetSource_AssetGcsSourceSchema: GenMessage<AssetSource_AssetGcsSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 6, 0);

/**
 * The content of the asset.
 *
 * @generated from message google.cloud.visionai.v1.AssetSource.AssetContentData
 */
export type AssetSource_AssetContentData = Message<"google.cloud.visionai.v1.AssetSource.AssetContentData"> & {
  /**
   * @generated from field: bytes asset_content_data = 1;
   */
  assetContentData: Uint8Array;
};

/**
 * Describes the message google.cloud.visionai.v1.AssetSource.AssetContentData.
 * Use `create(AssetSource_AssetContentDataSchema)` to create a new message.
 */
export const AssetSource_AssetContentDataSchema: GenMessage<AssetSource_AssetContentData> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 6, 1);

/**
 * Request message for UploadAsset.
 *
 * @generated from message google.cloud.visionai.v1.UploadAssetRequest
 */
export type UploadAssetRequest = Message<"google.cloud.visionai.v1.UploadAssetRequest"> & {
  /**
   * Required. The resource name of the asset to upload.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The source of the asset.
   *
   * @generated from field: google.cloud.visionai.v1.AssetSource asset_source = 2;
   */
  assetSource?: AssetSource;
};

/**
 * Describes the message google.cloud.visionai.v1.UploadAssetRequest.
 * Use `create(UploadAssetRequestSchema)` to create a new message.
 */
export const UploadAssetRequestSchema: GenMessage<UploadAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 7);

/**
 * Response message for UploadAsset.
 *
 * @generated from message google.cloud.visionai.v1.UploadAssetResponse
 */
export type UploadAssetResponse = Message<"google.cloud.visionai.v1.UploadAssetResponse"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.UploadAssetResponse.
 * Use `create(UploadAssetResponseSchema)` to create a new message.
 */
export const UploadAssetResponseSchema: GenMessage<UploadAssetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 8);

/**
 * Metadata for UploadAsset.
 *
 * @generated from message google.cloud.visionai.v1.UploadAssetMetadata
 */
export type UploadAssetMetadata = Message<"google.cloud.visionai.v1.UploadAssetMetadata"> & {
  /**
   * The start time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The update time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 2;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.visionai.v1.UploadAssetMetadata.
 * Use `create(UploadAssetMetadataSchema)` to create a new message.
 */
export const UploadAssetMetadataSchema: GenMessage<UploadAssetMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 9);

/**
 * Request message for GenerateRetrievalUrl API.
 *
 * @generated from message google.cloud.visionai.v1.GenerateRetrievalUrlRequest
 */
export type GenerateRetrievalUrlRequest = Message<"google.cloud.visionai.v1.GenerateRetrievalUrlRequest"> & {
  /**
   * Required. The resource name of the asset to request signed url for.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GenerateRetrievalUrlRequest.
 * Use `create(GenerateRetrievalUrlRequestSchema)` to create a new message.
 */
export const GenerateRetrievalUrlRequestSchema: GenMessage<GenerateRetrievalUrlRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 10);

/**
 * Response message for GenerateRetrievalUrl API.
 *
 * @generated from message google.cloud.visionai.v1.GenerateRetrievalUrlResponse
 */
export type GenerateRetrievalUrlResponse = Message<"google.cloud.visionai.v1.GenerateRetrievalUrlResponse"> & {
  /**
   * A signed url to download the content of the asset.
   *
   * @generated from field: string signed_uri = 1;
   */
  signedUri: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GenerateRetrievalUrlResponse.
 * Use `create(GenerateRetrievalUrlResponseSchema)` to create a new message.
 */
export const GenerateRetrievalUrlResponseSchema: GenMessage<GenerateRetrievalUrlResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 11);

/**
 * An asset is a resource in corpus. It represents a media object inside corpus,
 * contains metadata and another resource annotation. Different feature could be
 * applied to the asset to generate annotations. User could specified annotation
 * related to the target asset.
 *
 * @generated from message google.cloud.visionai.v1.Asset
 */
export type Asset = Message<"google.cloud.visionai.v1.Asset"> & {
  /**
   * Resource name of the asset.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The duration for which all media assets, associated metadata, and search
   * documents can exist. If not set, then it will using the default ttl in the
   * parent corpus resource.
   *
   * @generated from field: google.protobuf.Duration ttl = 2;
   */
  ttl?: Duration;

  /**
   * Output only. The original cloud storage source uri that is associated with
   * this asset.
   *
   * @generated from field: google.cloud.visionai.v1.AssetSource.AssetGcsSource asset_gcs_source = 4;
   */
  assetGcsSource?: AssetSource_AssetGcsSource;
};

/**
 * Describes the message google.cloud.visionai.v1.Asset.
 * Use `create(AssetSchema)` to create a new message.
 */
export const AssetSchema: GenMessage<Asset> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 12);

/**
 * Request message for AnalyzeAsset.
 *
 * @generated from message google.cloud.visionai.v1.AnalyzeAssetRequest
 */
export type AnalyzeAssetRequest = Message<"google.cloud.visionai.v1.AnalyzeAssetRequest"> & {
  /**
   * Required. The resource name of the asset to analyze.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.AnalyzeAssetRequest.
 * Use `create(AnalyzeAssetRequestSchema)` to create a new message.
 */
export const AnalyzeAssetRequestSchema: GenMessage<AnalyzeAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 13);

/**
 * Metadata for AnalyzeAsset.
 *
 * @generated from message google.cloud.visionai.v1.AnalyzeAssetMetadata
 */
export type AnalyzeAssetMetadata = Message<"google.cloud.visionai.v1.AnalyzeAssetMetadata"> & {
  /**
   * The status of analysis on all search capabilities.
   *
   * @generated from field: repeated google.cloud.visionai.v1.AnalyzeAssetMetadata.AnalysisStatus analysis_status = 1;
   */
  analysisStatus: AnalyzeAssetMetadata_AnalysisStatus[];

  /**
   * The start time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * The update time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.visionai.v1.AnalyzeAssetMetadata.
 * Use `create(AnalyzeAssetMetadataSchema)` to create a new message.
 */
export const AnalyzeAssetMetadataSchema: GenMessage<AnalyzeAssetMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 14);

/**
 * The status of analysis on each search capability.
 *
 * @generated from message google.cloud.visionai.v1.AnalyzeAssetMetadata.AnalysisStatus
 */
export type AnalyzeAssetMetadata_AnalysisStatus = Message<"google.cloud.visionai.v1.AnalyzeAssetMetadata.AnalysisStatus"> & {
  /**
   * @generated from field: google.cloud.visionai.v1.AnalyzeAssetMetadata.AnalysisStatus.State state = 2;
   */
  state: AnalyzeAssetMetadata_AnalysisStatus_State;

  /**
   * @generated from field: string status_message = 3;
   */
  statusMessage: string;

  /**
   * The search capability requested.
   *
   * @generated from field: google.cloud.visionai.v1.SearchCapability search_capability = 4;
   */
  searchCapability?: SearchCapability;
};

/**
 * Describes the message google.cloud.visionai.v1.AnalyzeAssetMetadata.AnalysisStatus.
 * Use `create(AnalyzeAssetMetadata_AnalysisStatusSchema)` to create a new message.
 */
export const AnalyzeAssetMetadata_AnalysisStatusSchema: GenMessage<AnalyzeAssetMetadata_AnalysisStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 14, 0);

/**
 * The state of the search capability.
 *
 * @generated from enum google.cloud.visionai.v1.AnalyzeAssetMetadata.AnalysisStatus.State
 */
export enum AnalyzeAssetMetadata_AnalysisStatus_State {
  /**
   * The default process state should never happen.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The ml model analysis is in progress.
   *
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * The ml model analysis is successfully done.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The ml model analysis failed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}

/**
 * Describes the enum google.cloud.visionai.v1.AnalyzeAssetMetadata.AnalysisStatus.State.
 */
export const AnalyzeAssetMetadata_AnalysisStatus_StateSchema: GenEnum<AnalyzeAssetMetadata_AnalysisStatus_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 14, 0, 0);

/**
 * Response message for AnalyzeAsset.
 *
 * @generated from message google.cloud.visionai.v1.AnalyzeAssetResponse
 */
export type AnalyzeAssetResponse = Message<"google.cloud.visionai.v1.AnalyzeAssetResponse"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.AnalyzeAssetResponse.
 * Use `create(AnalyzeAssetResponseSchema)` to create a new message.
 */
export const AnalyzeAssetResponseSchema: GenMessage<AnalyzeAssetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 15);

/**
 * The status of indexing for the asset.
 *
 * @generated from message google.cloud.visionai.v1.IndexingStatus
 */
export type IndexingStatus = Message<"google.cloud.visionai.v1.IndexingStatus"> & {
  /**
   * Output only. State of this asset's indexing.
   *
   * @generated from field: google.cloud.visionai.v1.IndexingStatus.State state = 2;
   */
  state: IndexingStatus_State;

  /**
   * Detailed message describing the state.
   *
   * @generated from field: string status_message = 3;
   */
  statusMessage: string;
};

/**
 * Describes the message google.cloud.visionai.v1.IndexingStatus.
 * Use `create(IndexingStatusSchema)` to create a new message.
 */
export const IndexingStatusSchema: GenMessage<IndexingStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 16);

/**
 * State enum for this asset's indexing.
 *
 * @generated from enum google.cloud.visionai.v1.IndexingStatus.State
 */
export enum IndexingStatus_State {
  /**
   * The default process state should never happen.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The indexing is in progress.
   *
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * The process is successfully done.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The process failed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}

/**
 * Describes the enum google.cloud.visionai.v1.IndexingStatus.State.
 */
export const IndexingStatus_StateSchema: GenEnum<IndexingStatus_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 16, 0);

/**
 * Request message for IndexAsset.
 *
 * @generated from message google.cloud.visionai.v1.IndexAssetRequest
 */
export type IndexAssetRequest = Message<"google.cloud.visionai.v1.IndexAssetRequest"> & {
  /**
   * Required. The resource name of the asset to index.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The name of the index.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/indexes/{index}`
   *
   * @generated from field: string index = 2;
   */
  index: string;
};

/**
 * Describes the message google.cloud.visionai.v1.IndexAssetRequest.
 * Use `create(IndexAssetRequestSchema)` to create a new message.
 */
export const IndexAssetRequestSchema: GenMessage<IndexAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 17);

/**
 * Metadata for IndexAsset.
 *
 * @generated from message google.cloud.visionai.v1.IndexAssetMetadata
 */
export type IndexAssetMetadata = Message<"google.cloud.visionai.v1.IndexAssetMetadata"> & {
  /**
   * The status of indexing this asset.
   *
   * @generated from field: google.cloud.visionai.v1.IndexingStatus status = 4;
   */
  status?: IndexingStatus;

  /**
   * The start time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * The update time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.visionai.v1.IndexAssetMetadata.
 * Use `create(IndexAssetMetadataSchema)` to create a new message.
 */
export const IndexAssetMetadataSchema: GenMessage<IndexAssetMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 18);

/**
 * Response message for IndexAsset.
 *
 * @generated from message google.cloud.visionai.v1.IndexAssetResponse
 */
export type IndexAssetResponse = Message<"google.cloud.visionai.v1.IndexAssetResponse"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.IndexAssetResponse.
 * Use `create(IndexAssetResponseSchema)` to create a new message.
 */
export const IndexAssetResponseSchema: GenMessage<IndexAssetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 19);

/**
 * Request message for RemoveIndexAsset.
 *
 * @generated from message google.cloud.visionai.v1.RemoveIndexAssetRequest
 */
export type RemoveIndexAssetRequest = Message<"google.cloud.visionai.v1.RemoveIndexAssetRequest"> & {
  /**
   * Required. The resource name of the asset to index.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The name of the index.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/indexes/{index}`
   *
   * @generated from field: string index = 2;
   */
  index: string;
};

/**
 * Describes the message google.cloud.visionai.v1.RemoveIndexAssetRequest.
 * Use `create(RemoveIndexAssetRequestSchema)` to create a new message.
 */
export const RemoveIndexAssetRequestSchema: GenMessage<RemoveIndexAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 20);

/**
 * Metadata for RemoveIndexAsset.
 *
 * @generated from message google.cloud.visionai.v1.RemoveIndexAssetMetadata
 */
export type RemoveIndexAssetMetadata = Message<"google.cloud.visionai.v1.RemoveIndexAssetMetadata"> & {
  /**
   * The status of indexing this asset.
   *
   * @generated from field: google.cloud.visionai.v1.IndexingStatus indexing_status = 1;
   */
  indexingStatus?: IndexingStatus;

  /**
   * The start time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * The update time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.visionai.v1.RemoveIndexAssetMetadata.
 * Use `create(RemoveIndexAssetMetadataSchema)` to create a new message.
 */
export const RemoveIndexAssetMetadataSchema: GenMessage<RemoveIndexAssetMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 21);

/**
 * Response message for RemoveIndexAsset.
 *
 * @generated from message google.cloud.visionai.v1.RemoveIndexAssetResponse
 */
export type RemoveIndexAssetResponse = Message<"google.cloud.visionai.v1.RemoveIndexAssetResponse"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.RemoveIndexAssetResponse.
 * Use `create(RemoveIndexAssetResponseSchema)` to create a new message.
 */
export const RemoveIndexAssetResponseSchema: GenMessage<RemoveIndexAssetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 22);

/**
 * An IndexedAsset is an asset that the index is built upon.
 *
 * @generated from message google.cloud.visionai.v1.IndexedAsset
 */
export type IndexedAsset = Message<"google.cloud.visionai.v1.IndexedAsset"> & {
  /**
   * Required. The index that this indexed asset belongs to.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/indexes/{index}`
   *
   * @generated from field: string index = 1;
   */
  index: string;

  /**
   * Required. The resource name of the asset.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string asset = 2;
   */
  asset: string;

  /**
   * Output only. The create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.visionai.v1.IndexedAsset.
 * Use `create(IndexedAssetSchema)` to create a new message.
 */
export const IndexedAssetSchema: GenMessage<IndexedAsset> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 23);

/**
 * Request message for ViewIndexedAssets.
 *
 * @generated from message google.cloud.visionai.v1.ViewIndexedAssetsRequest
 */
export type ViewIndexedAssetsRequest = Message<"google.cloud.visionai.v1.ViewIndexedAssetsRequest"> & {
  /**
   * Required. The index that owns this collection of assets.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/indexes/{index}`
   *
   * @generated from field: string index = 1;
   */
  index: string;

  /**
   * The maximum number of assets to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 assets will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ViewIndexedAssets` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ViewIndexedAssets` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The filter applied to the returned list.
   * Only the following filterings are supported:
   * "asset_id = xxxx", which returns asset with specified id.
   * "asset_id = xxxx, yyyy, zzzz", which returns assets with specified ids.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ViewIndexedAssetsRequest.
 * Use `create(ViewIndexedAssetsRequestSchema)` to create a new message.
 */
export const ViewIndexedAssetsRequestSchema: GenMessage<ViewIndexedAssetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 24);

/**
 * Response message for ViewIndexedAssets.
 *
 * @generated from message google.cloud.visionai.v1.ViewIndexedAssetsResponse
 */
export type ViewIndexedAssetsResponse = Message<"google.cloud.visionai.v1.ViewIndexedAssetsResponse"> & {
  /**
   * The assets from the specified index.
   *
   * @generated from field: repeated google.cloud.visionai.v1.IndexedAsset indexed_assets = 1;
   */
  indexedAssets: IndexedAsset[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ViewIndexedAssetsResponse.
 * Use `create(ViewIndexedAssetsResponseSchema)` to create a new message.
 */
export const ViewIndexedAssetsResponseSchema: GenMessage<ViewIndexedAssetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 25);

/**
 * Request message of CreateCorpus API.
 *
 * @generated from message google.cloud.visionai.v1.CreateCorpusRequest
 */
export type CreateCorpusRequest = Message<"google.cloud.visionai.v1.CreateCorpusRequest"> & {
  /**
   * Required. Form: `projects/{project_number}/locations/{location_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The corpus to be created.
   *
   * @generated from field: google.cloud.visionai.v1.Corpus corpus = 2;
   */
  corpus?: Corpus;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateCorpusRequest.
 * Use `create(CreateCorpusRequestSchema)` to create a new message.
 */
export const CreateCorpusRequestSchema: GenMessage<CreateCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 26);

/**
 * Metadata for CreateCorpus API.
 *
 * @generated from message google.cloud.visionai.v1.CreateCorpusMetadata
 */
export type CreateCorpusMetadata = Message<"google.cloud.visionai.v1.CreateCorpusMetadata"> & {
  /**
   * The create time of the create corpus operation.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * The update time of the create corpus operation.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateCorpusMetadata.
 * Use `create(CreateCorpusMetadataSchema)` to create a new message.
 */
export const CreateCorpusMetadataSchema: GenMessage<CreateCorpusMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 27);

/**
 * The capability and metadata of search capability.
 *
 * @generated from message google.cloud.visionai.v1.SearchCapability
 */
export type SearchCapability = Message<"google.cloud.visionai.v1.SearchCapability"> & {
  /**
   * The search capability to enable.
   *
   * @generated from field: google.cloud.visionai.v1.SearchCapability.Type type = 1;
   */
  type: SearchCapability_Type;
};

/**
 * Describes the message google.cloud.visionai.v1.SearchCapability.
 * Use `create(SearchCapabilitySchema)` to create a new message.
 */
export const SearchCapabilitySchema: GenMessage<SearchCapability> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 28);

/**
 * Capability to perform different search on assets.
 *
 * @generated from enum google.cloud.visionai.v1.SearchCapability.Type
 */
export enum SearchCapability_Type {
  /**
   * Unspecified search capability, should never be used.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Embedding search.
   *
   * @generated from enum value: EMBEDDING_SEARCH = 1;
   */
  EMBEDDING_SEARCH = 1,
}

/**
 * Describes the enum google.cloud.visionai.v1.SearchCapability.Type.
 */
export const SearchCapability_TypeSchema: GenEnum<SearchCapability_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 28, 0);

/**
 * Setting for search capability to enable.
 *
 * @generated from message google.cloud.visionai.v1.SearchCapabilitySetting
 */
export type SearchCapabilitySetting = Message<"google.cloud.visionai.v1.SearchCapabilitySetting"> & {
  /**
   * The metadata of search capability to enable.
   *
   * @generated from field: repeated google.cloud.visionai.v1.SearchCapability search_capabilities = 1;
   */
  searchCapabilities: SearchCapability[];
};

/**
 * Describes the message google.cloud.visionai.v1.SearchCapabilitySetting.
 * Use `create(SearchCapabilitySettingSchema)` to create a new message.
 */
export const SearchCapabilitySettingSchema: GenMessage<SearchCapabilitySetting> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 29);

/**
 * Metadata message for CreateCollectionRequest
 *
 * @generated from message google.cloud.visionai.v1.CreateCollectionMetadata
 */
export type CreateCollectionMetadata = Message<"google.cloud.visionai.v1.CreateCollectionMetadata"> & {
  /**
   * Common metadata of the long-running operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata operation_metadata = 1;
   */
  operationMetadata?: OperationMetadata;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateCollectionMetadata.
 * Use `create(CreateCollectionMetadataSchema)` to create a new message.
 */
export const CreateCollectionMetadataSchema: GenMessage<CreateCollectionMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 30);

/**
 * Request message for CreateCollection.
 *
 * @generated from message google.cloud.visionai.v1.CreateCollectionRequest
 */
export type CreateCollectionRequest = Message<"google.cloud.visionai.v1.CreateCollectionRequest"> & {
  /**
   * Required. The parent resource where this collection will be created.
   * Format: `projects/{project_number}/locations/{location}/corpora/{corpus}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The collection resource to be created.
   *
   * @generated from field: google.cloud.visionai.v1.Collection collection = 2;
   */
  collection?: Collection;

  /**
   * Optional. The ID to use for the collection, which will become the final
   * component of the resource name if user choose to specify. Otherwise,
   * collection id will be generated by system.
   *
   * This value should be up to 55 characters, and valid characters
   * are /[a-z][0-9]-/. The first character must be a letter, the last could be
   * a letter or a number.
   *
   * @generated from field: optional string collection_id = 3;
   */
  collectionId?: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateCollectionRequest.
 * Use `create(CreateCollectionRequestSchema)` to create a new message.
 */
export const CreateCollectionRequestSchema: GenMessage<CreateCollectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 31);

/**
 * Metadata message for DeleteCollectionRequest
 *
 * @generated from message google.cloud.visionai.v1.DeleteCollectionMetadata
 */
export type DeleteCollectionMetadata = Message<"google.cloud.visionai.v1.DeleteCollectionMetadata"> & {
  /**
   * Common metadata of the long-running operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata operation_metadata = 1;
   */
  operationMetadata?: OperationMetadata;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteCollectionMetadata.
 * Use `create(DeleteCollectionMetadataSchema)` to create a new message.
 */
export const DeleteCollectionMetadataSchema: GenMessage<DeleteCollectionMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 32);

/**
 * Request message for DeleteCollectionRequest.
 *
 * @generated from message google.cloud.visionai.v1.DeleteCollectionRequest
 */
export type DeleteCollectionRequest = Message<"google.cloud.visionai.v1.DeleteCollectionRequest"> & {
  /**
   * Required. The name of the collection to delete. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/collections/{collection}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteCollectionRequest.
 * Use `create(DeleteCollectionRequestSchema)` to create a new message.
 */
export const DeleteCollectionRequestSchema: GenMessage<DeleteCollectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 33);

/**
 * Request message for GetCollectionRequest.
 *
 * @generated from message google.cloud.visionai.v1.GetCollectionRequest
 */
export type GetCollectionRequest = Message<"google.cloud.visionai.v1.GetCollectionRequest"> & {
  /**
   * Required. The name of the collection to retrieve. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/collections/{collection}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetCollectionRequest.
 * Use `create(GetCollectionRequestSchema)` to create a new message.
 */
export const GetCollectionRequestSchema: GenMessage<GetCollectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 34);

/**
 * Request message for UpdateCollectionRequest.
 *
 * @generated from message google.cloud.visionai.v1.UpdateCollectionRequest
 */
export type UpdateCollectionRequest = Message<"google.cloud.visionai.v1.UpdateCollectionRequest"> & {
  /**
   * Required. The collection to update.
   *
   * The collection's `name` field is used to identify the collection to be
   * updated. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/collections/{collection}`
   *
   * @generated from field: google.cloud.visionai.v1.Collection collection = 1;
   */
  collection?: Collection;

  /**
   * The list of fields to be updated.
   * - Unset `update_mask` or set `update_mask` to be a single "*" only will
   *   update all updatable fields with the value provided in `collection`.
   * - To update `display_name` value to empty string, set it in the
   * `collection`
   *   to empty string, and set `update_mask` with "display_name". Same applies
   *   to other updatable string fields in the `collection`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateCollectionRequest.
 * Use `create(UpdateCollectionRequestSchema)` to create a new message.
 */
export const UpdateCollectionRequestSchema: GenMessage<UpdateCollectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 35);

/**
 * Request message for ListCollections.
 *
 * @generated from message google.cloud.visionai.v1.ListCollectionsRequest
 */
export type ListCollectionsRequest = Message<"google.cloud.visionai.v1.ListCollectionsRequest"> & {
  /**
   * Required. The parent corpus. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of collections to return. The service may return fewer
   * than this value. If unspecified, at most 50 collections will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListCollectionsRequest` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListCollectionsRequest`
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListCollectionsRequest.
 * Use `create(ListCollectionsRequestSchema)` to create a new message.
 */
export const ListCollectionsRequestSchema: GenMessage<ListCollectionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 36);

/**
 * Response message for ListCollections.
 *
 * @generated from message google.cloud.visionai.v1.ListCollectionsResponse
 */
export type ListCollectionsResponse = Message<"google.cloud.visionai.v1.ListCollectionsResponse"> & {
  /**
   * The collections from the specified corpus.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Collection collections = 1;
   */
  collections: Collection[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListCollectionsResponse.
 * Use `create(ListCollectionsResponseSchema)` to create a new message.
 */
export const ListCollectionsResponseSchema: GenMessage<ListCollectionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 37);

/**
 * Request message for AddCollectionItem.
 *
 * @generated from message google.cloud.visionai.v1.AddCollectionItemRequest
 */
export type AddCollectionItemRequest = Message<"google.cloud.visionai.v1.AddCollectionItemRequest"> & {
  /**
   * Required. The item to be added.
   *
   * @generated from field: google.cloud.visionai.v1.CollectionItem item = 1;
   */
  item?: CollectionItem;
};

/**
 * Describes the message google.cloud.visionai.v1.AddCollectionItemRequest.
 * Use `create(AddCollectionItemRequestSchema)` to create a new message.
 */
export const AddCollectionItemRequestSchema: GenMessage<AddCollectionItemRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 38);

/**
 * Response message for AddCollectionItem.
 *
 * @generated from message google.cloud.visionai.v1.AddCollectionItemResponse
 */
export type AddCollectionItemResponse = Message<"google.cloud.visionai.v1.AddCollectionItemResponse"> & {
  /**
   * The item that has already been added.
   *
   * @generated from field: google.cloud.visionai.v1.CollectionItem item = 1;
   */
  item?: CollectionItem;
};

/**
 * Describes the message google.cloud.visionai.v1.AddCollectionItemResponse.
 * Use `create(AddCollectionItemResponseSchema)` to create a new message.
 */
export const AddCollectionItemResponseSchema: GenMessage<AddCollectionItemResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 39);

/**
 * Request message for RemoveCollectionItem.
 *
 * @generated from message google.cloud.visionai.v1.RemoveCollectionItemRequest
 */
export type RemoveCollectionItemRequest = Message<"google.cloud.visionai.v1.RemoveCollectionItemRequest"> & {
  /**
   * Required. The item to be removed.
   *
   * @generated from field: google.cloud.visionai.v1.CollectionItem item = 1;
   */
  item?: CollectionItem;
};

/**
 * Describes the message google.cloud.visionai.v1.RemoveCollectionItemRequest.
 * Use `create(RemoveCollectionItemRequestSchema)` to create a new message.
 */
export const RemoveCollectionItemRequestSchema: GenMessage<RemoveCollectionItemRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 40);

/**
 * Request message for RemoveCollectionItem.
 *
 * @generated from message google.cloud.visionai.v1.RemoveCollectionItemResponse
 */
export type RemoveCollectionItemResponse = Message<"google.cloud.visionai.v1.RemoveCollectionItemResponse"> & {
  /**
   * The item that has already been removed.
   *
   * @generated from field: google.cloud.visionai.v1.CollectionItem item = 1;
   */
  item?: CollectionItem;
};

/**
 * Describes the message google.cloud.visionai.v1.RemoveCollectionItemResponse.
 * Use `create(RemoveCollectionItemResponseSchema)` to create a new message.
 */
export const RemoveCollectionItemResponseSchema: GenMessage<RemoveCollectionItemResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 41);

/**
 * Request message for ViewCollectionItems.
 *
 * @generated from message google.cloud.visionai.v1.ViewCollectionItemsRequest
 */
export type ViewCollectionItemsRequest = Message<"google.cloud.visionai.v1.ViewCollectionItemsRequest"> & {
  /**
   * Required. The collection to view. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/collections/{collection}`
   *
   * @generated from field: string collection = 1;
   */
  collection: string;

  /**
   * The maximum number of collections to return. The service may return fewer
   * than this value. If unspecified, at most 50 collections will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ViewCollectionItemsRequest` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ViewCollectionItemsRequest` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ViewCollectionItemsRequest.
 * Use `create(ViewCollectionItemsRequestSchema)` to create a new message.
 */
export const ViewCollectionItemsRequestSchema: GenMessage<ViewCollectionItemsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 42);

/**
 * Response message for ViewCollectionItems.
 *
 * @generated from message google.cloud.visionai.v1.ViewCollectionItemsResponse
 */
export type ViewCollectionItemsResponse = Message<"google.cloud.visionai.v1.ViewCollectionItemsResponse"> & {
  /**
   * The items from the specified collection.
   *
   * @generated from field: repeated google.cloud.visionai.v1.CollectionItem items = 1;
   */
  items: CollectionItem[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ViewCollectionItemsResponse.
 * Use `create(ViewCollectionItemsResponseSchema)` to create a new message.
 */
export const ViewCollectionItemsResponseSchema: GenMessage<ViewCollectionItemsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 43);

/**
 * A collection is a resource in a corpus. It serves as a container of
 * references to original resources.
 *
 * @generated from message google.cloud.visionai.v1.Collection
 */
export type Collection = Message<"google.cloud.visionai.v1.Collection"> & {
  /**
   * Output only. Resource name of the collection. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/collections/{collection}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The collection name for displaying.
   * The name can be up to 256 characters long.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Optional. Description of the collection. Can be up to 25000 characters
   * long.
   *
   * @generated from field: string description = 3;
   */
  description: string;
};

/**
 * Describes the message google.cloud.visionai.v1.Collection.
 * Use `create(CollectionSchema)` to create a new message.
 */
export const CollectionSchema: GenMessage<Collection> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 44);

/**
 * A CollectionItem is an item in a collection.
 * Each item is a reference to the original resource in a collection.
 *
 * @generated from message google.cloud.visionai.v1.CollectionItem
 */
export type CollectionItem = Message<"google.cloud.visionai.v1.CollectionItem"> & {
  /**
   * Required. The collection name that this item belongs to. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/collections/{collection}`
   *
   * @generated from field: string collection = 1;
   */
  collection: string;

  /**
   * Required. The type of item.
   *
   * @generated from field: google.cloud.visionai.v1.CollectionItem.Type type = 2;
   */
  type: CollectionItem_Type;

  /**
   * Required. The name of the CollectionItem. Its format depends on the `type`
   * above. For ASSET:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}`
   *
   * @generated from field: string item_resource = 3;
   */
  itemResource: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CollectionItem.
 * Use `create(CollectionItemSchema)` to create a new message.
 */
export const CollectionItemSchema: GenMessage<CollectionItem> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 45);

/**
 * CollectionItem types.
 *
 * @generated from enum google.cloud.visionai.v1.CollectionItem.Type
 */
export enum CollectionItem_Type {
  /**
   * The default type of item should never happen.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Asset type item.
   *
   * @generated from enum value: ASSET = 1;
   */
  ASSET = 1,
}

/**
 * Describes the enum google.cloud.visionai.v1.CollectionItem.Type.
 */
export const CollectionItem_TypeSchema: GenEnum<CollectionItem_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 45, 0);

/**
 * Message for creating an Index.
 *
 * @generated from message google.cloud.visionai.v1.CreateIndexRequest
 */
export type CreateIndexRequest = Message<"google.cloud.visionai.v1.CreateIndexRequest"> & {
  /**
   * Required. Value for the parent. The resource name of the Corpus under which
   * this index is created. Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The ID for the index. This will become the final resource name
   * for the index. If the user does not specify this value, it will be
   * generated by system.
   *
   * This value should be up to 63 characters, and valid characters
   * are /[a-z][0-9]-/. The first character must be a letter, the last could be
   * a letter or a number.
   *
   * @generated from field: string index_id = 2;
   */
  indexId: string;

  /**
   * Required. The index being created.
   *
   * @generated from field: google.cloud.visionai.v1.Index index = 3;
   */
  index?: Index;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateIndexRequest.
 * Use `create(CreateIndexRequestSchema)` to create a new message.
 */
export const CreateIndexRequestSchema: GenMessage<CreateIndexRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 46);

/**
 * Metadata message for CreateIndexRequest
 *
 * @generated from message google.cloud.visionai.v1.CreateIndexMetadata
 */
export type CreateIndexMetadata = Message<"google.cloud.visionai.v1.CreateIndexMetadata"> & {
  /**
   * Common metadata of the long-running operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata operation_metadata = 1;
   */
  operationMetadata?: OperationMetadata;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateIndexMetadata.
 * Use `create(CreateIndexMetadataSchema)` to create a new message.
 */
export const CreateIndexMetadataSchema: GenMessage<CreateIndexMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 47);

/**
 * Request message for UpdateIndex.
 *
 * @generated from message google.cloud.visionai.v1.UpdateIndexRequest
 */
export type UpdateIndexRequest = Message<"google.cloud.visionai.v1.UpdateIndexRequest"> & {
  /**
   * Required. The resource being updated.
   *
   * @generated from field: google.cloud.visionai.v1.Index index = 1;
   */
  index?: Index;

  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Index resource by the update. The fields specified in the update_mask are
   * relative to the resource, not the full request. A field of the resource
   * will be overwritten if it is in the mask. Empty field mask is not allowed.
   * If the mask is "*", it triggers a full update of the index, and also a
   * whole rebuild of index data.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateIndexRequest.
 * Use `create(UpdateIndexRequestSchema)` to create a new message.
 */
export const UpdateIndexRequestSchema: GenMessage<UpdateIndexRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 48);

/**
 * Metadata message for UpdateIndexRequest
 *
 * @generated from message google.cloud.visionai.v1.UpdateIndexMetadata
 */
export type UpdateIndexMetadata = Message<"google.cloud.visionai.v1.UpdateIndexMetadata"> & {
  /**
   * Common metadata of the long-running operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata operation_metadata = 1;
   */
  operationMetadata?: OperationMetadata;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateIndexMetadata.
 * Use `create(UpdateIndexMetadataSchema)` to create a new message.
 */
export const UpdateIndexMetadataSchema: GenMessage<UpdateIndexMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 49);

/**
 * Request message for getting an Index.
 *
 * @generated from message google.cloud.visionai.v1.GetIndexRequest
 */
export type GetIndexRequest = Message<"google.cloud.visionai.v1.GetIndexRequest"> & {
  /**
   * Required. Name of the Index resource.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/indexes/{index}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetIndexRequest.
 * Use `create(GetIndexRequestSchema)` to create a new message.
 */
export const GetIndexRequestSchema: GenMessage<GetIndexRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 50);

/**
 * Request message for listing Indexes.
 *
 * @generated from message google.cloud.visionai.v1.ListIndexesRequest
 */
export type ListIndexesRequest = Message<"google.cloud.visionai.v1.ListIndexesRequest"> & {
  /**
   * Required. The parent corpus that owns this collection of indexes.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of indexes to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 indexes will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListIndexes` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListIndexes` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListIndexesRequest.
 * Use `create(ListIndexesRequestSchema)` to create a new message.
 */
export const ListIndexesRequestSchema: GenMessage<ListIndexesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 51);

/**
 * Response message for ListIndexes.
 *
 * @generated from message google.cloud.visionai.v1.ListIndexesResponse
 */
export type ListIndexesResponse = Message<"google.cloud.visionai.v1.ListIndexesResponse"> & {
  /**
   * The indexes under the specified corpus.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Index indexes = 1;
   */
  indexes: Index[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListIndexesResponse.
 * Use `create(ListIndexesResponseSchema)` to create a new message.
 */
export const ListIndexesResponseSchema: GenMessage<ListIndexesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 52);

/**
 * Request message for DeleteIndex.
 *
 * @generated from message google.cloud.visionai.v1.DeleteIndexRequest
 */
export type DeleteIndexRequest = Message<"google.cloud.visionai.v1.DeleteIndexRequest"> & {
  /**
   * Required. The name of the index to delete.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/indexes/{index}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteIndexRequest.
 * Use `create(DeleteIndexRequestSchema)` to create a new message.
 */
export const DeleteIndexRequestSchema: GenMessage<DeleteIndexRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 53);

/**
 * Metadata message for DeleteIndexRequest
 *
 * @generated from message google.cloud.visionai.v1.DeleteIndexMetadata
 */
export type DeleteIndexMetadata = Message<"google.cloud.visionai.v1.DeleteIndexMetadata"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteIndexMetadata.
 * Use `create(DeleteIndexMetadataSchema)` to create a new message.
 */
export const DeleteIndexMetadataSchema: GenMessage<DeleteIndexMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 54);

/**
 * An Index is a resource in Corpus. It contains an indexed version of the
 * assets and annotations. When deployed to an endpoint, it will allow users to
 * search the Index.
 *
 * @generated from message google.cloud.visionai.v1.Index
 */
export type Index = Message<"google.cloud.visionai.v1.Index"> & {
  /**
   * Specifies how assets are selected for this index. Default to
   * entire_corpus if unspecified. Behavior in UpdateIndex: if update_mask
   * includes one of the asset_filter field paths, the index will be rebuilt
   * with latest assets, including their analyzed data and annotations.
   *
   * @generated from oneof google.cloud.visionai.v1.Index.asset_filter
   */
  assetFilter: {
    /**
     * Include all assets under the corpus.
     *
     * @generated from field: bool entire_corpus = 9;
     */
    value: boolean;
    case: "entireCorpus";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Resource name of the Index resource.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/indexes/{index_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Optional user-specified display name of the index.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Optional. Optional description of the index.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. State of the index.
   *
   * @generated from field: google.cloud.visionai.v1.Index.State state = 4;
   */
  state: Index_State;

  /**
   * Output only. The create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;

  /**
   * Output only. References to the deployed index instance.
   * Index of VIDEO_ON_DEMAND corpus can have at most one deployed index.
   * Index of IMAGE corpus can have multiple deployed indexes.
   *
   * @generated from field: repeated google.cloud.visionai.v1.DeployedIndexReference deployed_indexes = 8;
   */
  deployedIndexes: DeployedIndexReference[];

  /**
   * Output only. This boolean field is only set for projects that have Physical
   * Zone Separation enabled via an Org Policy constraint. It is set to true
   * when the index is a valid zone separated index and false if it isn't.
   *
   * @generated from field: optional bool satisfies_pzs = 11;
   */
  satisfiesPzs?: boolean;

  /**
   * Output only. This boolean field is only set for projects that have Physical
   * Zone Isolation enabled via an Org Policy constraint. It is set to true when
   * the index is a valid zone isolated index and false if it isn't.
   *
   * @generated from field: optional bool satisfies_pzi = 12;
   */
  satisfiesPzi?: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1.Index.
 * Use `create(IndexSchema)` to create a new message.
 */
export const IndexSchema: GenMessage<Index> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 55);

/**
 * Enum representing the different states through which an Index might cycle
 * during its lifetime.
 *
 * @generated from enum google.cloud.visionai.v1.Index.State
 */
export enum Index_State {
  /**
   * The default value. Should not be used.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * State CREATING.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * State CREATED.
   *
   * @generated from enum value: CREATED = 2;
   */
  CREATED = 2,

  /**
   * State UPDATING.
   *
   * @generated from enum value: UPDATING = 3;
   */
  UPDATING = 3,
}

/**
 * Describes the enum google.cloud.visionai.v1.Index.State.
 */
export const Index_StateSchema: GenEnum<Index_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 55, 0);

/**
 * Points to a DeployedIndex.
 *
 * @generated from message google.cloud.visionai.v1.DeployedIndexReference
 */
export type DeployedIndexReference = Message<"google.cloud.visionai.v1.DeployedIndexReference"> & {
  /**
   * Immutable. A resource name of the IndexEndpoint.
   *
   * @generated from field: string index_endpoint = 1;
   */
  indexEndpoint: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeployedIndexReference.
 * Use `create(DeployedIndexReferenceSchema)` to create a new message.
 */
export const DeployedIndexReferenceSchema: GenMessage<DeployedIndexReference> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 56);

/**
 * Corpus is a set of media contents for management.
 * Within a corpus, media shares the same data schema. Search is also restricted
 * within a single corpus.
 *
 * @generated from message google.cloud.visionai.v1.Corpus
 */
export type Corpus = Message<"google.cloud.visionai.v1.Corpus"> & {
  /**
   * Resource name of the corpus.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The corpus name to shown in the UI. The name can be up to 32
   * characters long.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Optional. Description of the corpus. Can be up to 25000 characters long.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Optional. The default TTL value for all assets under the corpus without a
   * asset level user-defined TTL. For STREAM_VIDEO type corpora, this is
   * required and the maximum allowed
   *   default_ttl is 10 years.
   *
   * @generated from field: google.protobuf.Duration default_ttl = 5;
   */
  defaultTtl?: Duration;

  /**
   * Optional. Type of the asset inside corpus.
   *
   * @generated from field: google.cloud.visionai.v1.Corpus.Type type = 7;
   */
  type: Corpus_Type;

  /**
   * Default search capability setting on corpus level.
   *
   * @generated from field: google.cloud.visionai.v1.SearchCapabilitySetting search_capability_setting = 8;
   */
  searchCapabilitySetting?: SearchCapabilitySetting;

  /**
   * Output only. This boolean field is only set for projects that have Physical
   * Zone Separation enabled via an Org Policy constraint. It is set to true
   * when the corpus is a valid zone separated corpus and false if it isn't.
   *
   * @generated from field: optional bool satisfies_pzs = 11;
   */
  satisfiesPzs?: boolean;

  /**
   * Output only. This boolean field is only set for projects that have Physical
   * Zone Isolation enabled via an Org Policy constraint. It is set to true when
   * the corpus is a valid zone isolated corpus and false if it isn't.
   *
   * @generated from field: optional bool satisfies_pzi = 12;
   */
  satisfiesPzi?: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1.Corpus.
 * Use `create(CorpusSchema)` to create a new message.
 */
export const CorpusSchema: GenMessage<Corpus> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 57);

/**
 * Type of the asset inside the corpus.
 *
 * @generated from enum google.cloud.visionai.v1.Corpus.Type
 */
export enum Corpus_Type {
  /**
   * The default type, not supposed to be used. If this default type is used,
   * the corpus will be created as STREAM_VIDEO corpus.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Asset is a live streaming video.
   *
   * @generated from enum value: STREAM_VIDEO = 1;
   */
  STREAM_VIDEO = 1,

  /**
   * Asset is an image.
   *
   * @generated from enum value: IMAGE = 2;
   */
  IMAGE = 2,

  /**
   * Asset is a batch video.
   *
   * @generated from enum value: VIDEO_ON_DEMAND = 3;
   */
  VIDEO_ON_DEMAND = 3,
}

/**
 * Describes the enum google.cloud.visionai.v1.Corpus.Type.
 */
export const Corpus_TypeSchema: GenEnum<Corpus_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 57, 0);

/**
 * Request message for GetCorpus.
 *
 * @generated from message google.cloud.visionai.v1.GetCorpusRequest
 */
export type GetCorpusRequest = Message<"google.cloud.visionai.v1.GetCorpusRequest"> & {
  /**
   * Required. The resource name of the corpus to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetCorpusRequest.
 * Use `create(GetCorpusRequestSchema)` to create a new message.
 */
export const GetCorpusRequestSchema: GenMessage<GetCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 58);

/**
 * Request message for UpdateCorpus.
 *
 * @generated from message google.cloud.visionai.v1.UpdateCorpusRequest
 */
export type UpdateCorpusRequest = Message<"google.cloud.visionai.v1.UpdateCorpusRequest"> & {
  /**
   * Required. The corpus which replaces the resource on the server.
   *
   * @generated from field: google.cloud.visionai.v1.Corpus corpus = 1;
   */
  corpus?: Corpus;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateCorpusRequest.
 * Use `create(UpdateCorpusRequestSchema)` to create a new message.
 */
export const UpdateCorpusRequestSchema: GenMessage<UpdateCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 59);

/**
 * Request message for ListCorpora.
 *
 * @generated from message google.cloud.visionai.v1.ListCorporaRequest
 */
export type ListCorporaRequest = Message<"google.cloud.visionai.v1.ListCorporaRequest"> & {
  /**
   * Required. The resource name of the project from which to list corpora.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. API may return fewer results than requested.
   * If negative, INVALID_ARGUMENT error will be returned.
   * If unspecified or 0, API will pick a default size, which is 10.
   * If the requested page size is larger than the maximum size, API will pick
   * use the maximum size, which is 20.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results for the server to return.
   * Typically obtained via
   * [ListCorporaResponse.next_page_token][google.cloud.visionai.v1.ListCorporaResponse.next_page_token]
   * of the previous
   * [Warehouse.ListCorpora][google.cloud.visionai.v1.Warehouse.ListCorpora]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The filter applied to the returned corpora list.
   * Only the following restrictions are supported:
   * `type=<Corpus.Type>`,
   * `type!=<Corpus.Type>`.
   *
   * @generated from field: string filter = 5;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListCorporaRequest.
 * Use `create(ListCorporaRequestSchema)` to create a new message.
 */
export const ListCorporaRequestSchema: GenMessage<ListCorporaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 60);

/**
 * Response message for ListCorpora.
 *
 * @generated from message google.cloud.visionai.v1.ListCorporaResponse
 */
export type ListCorporaResponse = Message<"google.cloud.visionai.v1.ListCorporaResponse"> & {
  /**
   * The corpora in the project.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Corpus corpora = 1;
   */
  corpora: Corpus[];

  /**
   * A token to retrieve next page of results.
   * Pass to
   * [ListCorporaRequest.page_token][google.cloud.visionai.v1.ListCorporaRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListCorporaResponse.
 * Use `create(ListCorporaResponseSchema)` to create a new message.
 */
export const ListCorporaResponseSchema: GenMessage<ListCorporaResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 61);

/**
 * Request message for DeleteCorpus.
 *
 * @generated from message google.cloud.visionai.v1.DeleteCorpusRequest
 */
export type DeleteCorpusRequest = Message<"google.cloud.visionai.v1.DeleteCorpusRequest"> & {
  /**
   * Required. The resource name of the corpus to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteCorpusRequest.
 * Use `create(DeleteCorpusRequestSchema)` to create a new message.
 */
export const DeleteCorpusRequestSchema: GenMessage<DeleteCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 62);

/**
 * Request message for AnalyzeCorpus.
 *
 * @generated from message google.cloud.visionai.v1.AnalyzeCorpusRequest
 */
export type AnalyzeCorpusRequest = Message<"google.cloud.visionai.v1.AnalyzeCorpusRequest"> & {
  /**
   * Required. The parent corpus resource where the assets will be analyzed.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.AnalyzeCorpusRequest.
 * Use `create(AnalyzeCorpusRequestSchema)` to create a new message.
 */
export const AnalyzeCorpusRequestSchema: GenMessage<AnalyzeCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 63);

/**
 * The metadata message for AnalyzeCorpus LRO.
 *
 * @generated from message google.cloud.visionai.v1.AnalyzeCorpusMetadata
 */
export type AnalyzeCorpusMetadata = Message<"google.cloud.visionai.v1.AnalyzeCorpusMetadata"> & {
  /**
   * The metadata of the operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata metadata = 1;
   */
  metadata?: OperationMetadata;
};

/**
 * Describes the message google.cloud.visionai.v1.AnalyzeCorpusMetadata.
 * Use `create(AnalyzeCorpusMetadataSchema)` to create a new message.
 */
export const AnalyzeCorpusMetadataSchema: GenMessage<AnalyzeCorpusMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 64);

/**
 * The response message for AnalyzeCorpus LRO.
 *
 * @generated from message google.cloud.visionai.v1.AnalyzeCorpusResponse
 */
export type AnalyzeCorpusResponse = Message<"google.cloud.visionai.v1.AnalyzeCorpusResponse"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.AnalyzeCorpusResponse.
 * Use `create(AnalyzeCorpusResponseSchema)` to create a new message.
 */
export const AnalyzeCorpusResponseSchema: GenMessage<AnalyzeCorpusResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 65);

/**
 * Request message for CreateDataSchema.
 *
 * @generated from message google.cloud.visionai.v1.CreateDataSchemaRequest
 */
export type CreateDataSchemaRequest = Message<"google.cloud.visionai.v1.CreateDataSchemaRequest"> & {
  /**
   * Required. The parent resource where this data schema will be created.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The data schema to create.
   *
   * @generated from field: google.cloud.visionai.v1.DataSchema data_schema = 2;
   */
  dataSchema?: DataSchema;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateDataSchemaRequest.
 * Use `create(CreateDataSchemaRequestSchema)` to create a new message.
 */
export const CreateDataSchemaRequestSchema: GenMessage<CreateDataSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 66);

/**
 * Data schema indicates how the user specified annotation is interpreted in the
 * system.
 *
 * @generated from message google.cloud.visionai.v1.DataSchema
 */
export type DataSchema = Message<"google.cloud.visionai.v1.DataSchema"> & {
  /**
   * Resource name of the data schema in the form of:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/dataSchemas/{data_schema}`
   * where {data_schema} part should be the same as the `key` field below.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The key of this data schema. This key should be matching the key
   * of user specified annotation and unique inside corpus. This value can be up
   * to 63 characters, and valid characters are /[a-z][0-9]-/. The first
   * character must be a letter, the last could be a letter or a number.
   *
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * The schema details mapping to the key.
   *
   * @generated from field: google.cloud.visionai.v1.DataSchemaDetails schema_details = 3;
   */
  schemaDetails?: DataSchemaDetails;
};

/**
 * Describes the message google.cloud.visionai.v1.DataSchema.
 * Use `create(DataSchemaSchema)` to create a new message.
 */
export const DataSchemaSchema: GenMessage<DataSchema> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 67);

/**
 * Data schema details indicates the data type and the data struct corresponding
 * to the key of user specified annotation.
 *
 * @generated from message google.cloud.visionai.v1.DataSchemaDetails
 */
export type DataSchemaDetails = Message<"google.cloud.visionai.v1.DataSchemaDetails"> & {
  /**
   * Type of the annotation.
   *
   * @generated from field: optional google.cloud.visionai.v1.DataSchemaDetails.DataType type = 1;
   */
  type?: DataSchemaDetails_DataType;

  /**
   * Config for protobuf any type.
   *
   * @generated from field: google.cloud.visionai.v1.DataSchemaDetails.ProtoAnyConfig proto_any_config = 6;
   */
  protoAnyConfig?: DataSchemaDetails_ProtoAnyConfig;

  /**
   * Config for List data type.
   *
   * @generated from field: google.cloud.visionai.v1.DataSchemaDetails.ListConfig list_config = 8;
   */
  listConfig?: DataSchemaDetails_ListConfig;

  /**
   * Config for CustomizedStruct data type.
   *
   * @generated from field: google.cloud.visionai.v1.DataSchemaDetails.CustomizedStructConfig customized_struct_config = 9;
   */
  customizedStructConfig?: DataSchemaDetails_CustomizedStructConfig;

  /**
   * The granularity associated with this DataSchema.
   *
   * @generated from field: optional google.cloud.visionai.v1.DataSchemaDetails.Granularity granularity = 5;
   */
  granularity?: DataSchemaDetails_Granularity;

  /**
   * The search strategy to be applied on the `key` above.
   *
   * @generated from field: google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy search_strategy = 7;
   */
  searchStrategy?: DataSchemaDetails_SearchStrategy;
};

/**
 * Describes the message google.cloud.visionai.v1.DataSchemaDetails.
 * Use `create(DataSchemaDetailsSchema)` to create a new message.
 */
export const DataSchemaDetailsSchema: GenMessage<DataSchemaDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 68);

/**
 * The configuration for `PROTO_ANY` data type.
 *
 * @generated from message google.cloud.visionai.v1.DataSchemaDetails.ProtoAnyConfig
 */
export type DataSchemaDetails_ProtoAnyConfig = Message<"google.cloud.visionai.v1.DataSchemaDetails.ProtoAnyConfig"> & {
  /**
   * The type URI of the proto message.
   *
   * @generated from field: string type_uri = 1;
   */
  typeUri: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DataSchemaDetails.ProtoAnyConfig.
 * Use `create(DataSchemaDetails_ProtoAnyConfigSchema)` to create a new message.
 */
export const DataSchemaDetails_ProtoAnyConfigSchema: GenMessage<DataSchemaDetails_ProtoAnyConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 68, 0);

/**
 * The configuration for `LIST` data type.
 *
 * @generated from message google.cloud.visionai.v1.DataSchemaDetails.ListConfig
 */
export type DataSchemaDetails_ListConfig = Message<"google.cloud.visionai.v1.DataSchemaDetails.ListConfig"> & {
  /**
   * The value's data schema in the list.
   *
   * @generated from field: google.cloud.visionai.v1.DataSchemaDetails value_schema = 1;
   */
  valueSchema?: DataSchemaDetails;
};

/**
 * Describes the message google.cloud.visionai.v1.DataSchemaDetails.ListConfig.
 * Use `create(DataSchemaDetails_ListConfigSchema)` to create a new message.
 */
export const DataSchemaDetails_ListConfigSchema: GenMessage<DataSchemaDetails_ListConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 68, 1);

/**
 * The configuration for `CUSTOMIZED_STRUCT` data type.
 *
 * @generated from message google.cloud.visionai.v1.DataSchemaDetails.CustomizedStructConfig
 */
export type DataSchemaDetails_CustomizedStructConfig = Message<"google.cloud.visionai.v1.DataSchemaDetails.CustomizedStructConfig"> & {
  /**
   * Direct child elements data schemas.
   *
   * @generated from field: map<string, google.cloud.visionai.v1.DataSchemaDetails> field_schemas = 1;
   */
  fieldSchemas: { [key: string]: DataSchemaDetails };
};

/**
 * Describes the message google.cloud.visionai.v1.DataSchemaDetails.CustomizedStructConfig.
 * Use `create(DataSchemaDetails_CustomizedStructConfigSchema)` to create a new message.
 */
export const DataSchemaDetails_CustomizedStructConfigSchema: GenMessage<DataSchemaDetails_CustomizedStructConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 68, 2);

/**
 * The search strategy for annotations value of the `key`.
 *
 * @generated from message google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy
 */
export type DataSchemaDetails_SearchStrategy = Message<"google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy"> & {
  /**
   * The type of search strategy to be applied on the `key` above.
   * The allowed `search_strategy_type` is different for different data types,
   * which is documented in the DataSchemaDetails.DataType. Specifying
   * unsupported `search_strategy_type` for data types will result in
   * INVALID_ARGUMENT error.
   *
   * @generated from field: optional google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy.SearchStrategyType search_strategy_type = 1;
   */
  searchStrategyType?: DataSchemaDetails_SearchStrategy_SearchStrategyType;

  /**
   * Optional. Configs the path to the confidence score, and the threshold.
   * Only if the score is greater than the threshold, current field will be
   * built into the index. Only applies to leaf nodes using EXACT_SEARCH or
   * SMART_SEARCH.
   *
   * @generated from field: google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy.ConfidenceScoreIndexConfig confidence_score_index_config = 2;
   */
  confidenceScoreIndexConfig?: DataSchemaDetails_SearchStrategy_ConfidenceScoreIndexConfig;
};

/**
 * Describes the message google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy.
 * Use `create(DataSchemaDetails_SearchStrategySchema)` to create a new message.
 */
export const DataSchemaDetails_SearchStrategySchema: GenMessage<DataSchemaDetails_SearchStrategy> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 68, 3);

/**
 * Filter on the confidence score. Only adds to index if the confidence
 * score is higher than the threshold.
 * Example data schema:
 * key: "name-confidence-pair"
 * type: CUSTOMIZED_STRUCT
 * granularity: GRANULARITY_PARTITION_LEVEL
 * customized_struct_config {
 *   field_schemas {
 *     key: "name"
 *     type: STRING
 *     granularity: GRANULARITY_PARTITION_LEVEL
 *     search_strategy {
 *       search_strategy_type: SMART_SEARCH
 *       confidence_score_index_config {
 *         field_path: "name-confidence-pair.score"
 *         threshold: 0.6
 *       }
 *     }
 *   }
 *   field_schemas {
 *     key: "score"
 *     type: FLOAT
 *     granularity: GRANULARITY_PARTITION_LEVEL
 *   }
 * }
 * This means only "name" with score > 0.6 will be indexed.
 *
 * @generated from message google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy.ConfidenceScoreIndexConfig
 */
export type DataSchemaDetails_SearchStrategy_ConfidenceScoreIndexConfig = Message<"google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy.ConfidenceScoreIndexConfig"> & {
  /**
   * Required. The path to the confidence score field. It is a string that
   * concatenates all the data schema keys along the path. See the example
   * above. If the data schema contains LIST, use '_ENTRIES' to concatenate.
   * Example data schema contains a list:
   * "key": "list-name-score",
   * "schemaDetails": {
   *   "type": "LIST",
   *   "granularity": "GRANULARITY_PARTITION_LEVEL",
   *   "listConfig": {
   *     "valueSchema": {
   *       "type": "CUSTOMIZED_STRUCT",
   *       "granularity": "GRANULARITY_PARTITION_LEVEL",
   *       "customizedStructConfig": {
   *         "fieldSchemas": {
   *           "name": {
   *             "type": "STRING",
   *             "granularity": "GRANULARITY_PARTITION_LEVEL",
   *             "searchStrategy": {
   *               "searchStrategyType": "SMART_SEARCH"
   *               "confidence_score_index_config": {
   *                 "field_path": "list-name-score._ENTRIES.score",
   *                 "threshold": "0.9",
   *               }
   *             }
   *           },
   *           "score": {
   *             "type": "FLOAT",
   *             "granularity": "GRANULARITY_PARTITION_LEVEL",
   *           }
   *         }
   *       }
   *     }
   *   }
   * }
   *
   * @generated from field: string field_path = 1;
   */
  fieldPath: string;

  /**
   * Required. The threshold.
   *
   * @generated from field: float threshold = 2;
   */
  threshold: number;
};

/**
 * Describes the message google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy.ConfidenceScoreIndexConfig.
 * Use `create(DataSchemaDetails_SearchStrategy_ConfidenceScoreIndexConfigSchema)` to create a new message.
 */
export const DataSchemaDetails_SearchStrategy_ConfidenceScoreIndexConfigSchema: GenMessage<DataSchemaDetails_SearchStrategy_ConfidenceScoreIndexConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 68, 3, 0);

/**
 * The types of search strategies to be applied on the annotation key.
 *
 * @generated from enum google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy.SearchStrategyType
 */
export enum DataSchemaDetails_SearchStrategy_SearchStrategyType {
  /**
   * Annotatation values of the `key` above will not be searchable.
   *
   * @generated from enum value: NO_SEARCH = 0;
   */
  NO_SEARCH = 0,

  /**
   * When searching with `key`, the value must be exactly as the annotation
   * value that has been ingested.
   *
   * @generated from enum value: EXACT_SEARCH = 1;
   */
  EXACT_SEARCH = 1,

  /**
   * When searching with `key`, Warehouse will perform broad search based on
   * semantic of the annotation value.
   *
   * @generated from enum value: SMART_SEARCH = 2;
   */
  SMART_SEARCH = 2,
}

/**
 * Describes the enum google.cloud.visionai.v1.DataSchemaDetails.SearchStrategy.SearchStrategyType.
 */
export const DataSchemaDetails_SearchStrategy_SearchStrategyTypeSchema: GenEnum<DataSchemaDetails_SearchStrategy_SearchStrategyType> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 68, 3, 0);

/**
 * Data type of the annotation.
 *
 * @generated from enum google.cloud.visionai.v1.DataSchemaDetails.DataType
 */
export enum DataSchemaDetails_DataType {
  /**
   * Unspecified type.
   *
   * @generated from enum value: DATA_TYPE_UNSPECIFIED = 0;
   */
  DATA_TYPE_UNSPECIFIED = 0,

  /**
   * Integer type.
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH.
   *   Supports query by IntRangeArray.
   *
   * @generated from enum value: INTEGER = 1;
   */
  INTEGER = 1,

  /**
   * Float type.
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH.
   *   Supports query by FloatRangeArray.
   *
   * @generated from enum value: FLOAT = 2;
   */
  FLOAT = 2,

  /**
   * String type.
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH,
   * - DataSchema.SearchStrategy.SMART_SEARCH.
   *
   * @generated from enum value: STRING = 3;
   */
  STRING = 3,

  /**
   * Supported formats:
   * %Y-%m-%dT%H:%M:%E*S%E*z (absl::RFC3339_full)
   * %Y-%m-%dT%H:%M:%E*S
   * %Y-%m-%dT%H:%M%E*z
   * %Y-%m-%dT%H:%M
   * %Y-%m-%dT%H%E*z
   * %Y-%m-%dT%H
   * %Y-%m-%d%E*z
   * %Y-%m-%d
   * %Y-%m
   * %Y
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH.
   *   Supports query by DateTimeRangeArray.
   *
   * @generated from enum value: DATETIME = 5;
   */
  DATETIME = 5,

  /**
   * Geo coordinate type.
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH.
   *   Supports query by GeoLocationArray.
   *
   * @generated from enum value: GEO_COORDINATE = 7;
   */
  GEO_COORDINATE = 7,

  /**
   * Type to pass any proto as available in annotations.proto. Only use
   * internally.
   * Available proto types and its corresponding search behavior:
   * - ImageObjectDetectionPredictionResult, allows SMART_SEARCH on
   *   display_names and NO_SEARCH.
   * - ClassificationPredictionResult, allows SMART_SEARCH on display_names
   *   and NO_SEARCH.
   * - ImageSegmentationPredictionResult, allows NO_SEARCH.
   * - VideoActionRecognitionPredictionResult, allows SMART_SEARCH on
   *   display_name and NO_SEARCH.
   * - VideoObjectTrackingPredictionResult, allows SMART_SEARCH on
   *   display_name and NO_SEARCH.
   * - VideoClassificationPredictionResult, allows SMART_SEARCH on
   *   display_name and NO_SEARCH.
   * - OccupancyCountingPredictionResult, allows EXACT_SEARCH on
   *   stats.full_frame_count.count and NO_SEARCH.
   * - ObjectDetectionPredictionResult, allows SMART_SEARCH on
   *   identified_boxes.entity.label_string and NO_SEARCH.
   *
   * @generated from enum value: PROTO_ANY = 8;
   */
  PROTO_ANY = 8,

  /**
   * Boolean type.
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH.
   *
   * @generated from enum value: BOOLEAN = 9;
   */
  BOOLEAN = 9,

  /**
   * List type.
   *  - Each element in the list must be of the exact same data schema;
   *    otherwise, they are invalid arguments.
   *  - List level cannot set search strategy. Leaf node level can do.
   *  - Elements cannot be another list (no list of list).
   *  - Elements can be CUSTOMIZED_STRUCT, and max number of layers is 10.
   *
   * @generated from enum value: LIST = 10;
   */
  LIST = 10,

  /**
   * Struct type.
   * - SearchStrategy:
   *   * Data Schema that's CUSTOMIZED_STRUCT cannot set search strategy.
   *   * Leaf-node elements allow setting search strategy based on element's
   *     SearchStrategy restriction.
   * - Nested layer restrictions:
   *   * Data Schema that's CUSTOMIZED_STRUCT allows its fields to be of
   *     CUSTOMIZED_STRUCT as well, but the overall layers restriction is 10.
   *
   * @generated from enum value: CUSTOMIZED_STRUCT = 6;
   */
  CUSTOMIZED_STRUCT = 6,
}

/**
 * Describes the enum google.cloud.visionai.v1.DataSchemaDetails.DataType.
 */
export const DataSchemaDetails_DataTypeSchema: GenEnum<DataSchemaDetails_DataType> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 68, 0);

/**
 * The granularity of annotations under this DataSchema.
 *
 * @generated from enum google.cloud.visionai.v1.DataSchemaDetails.Granularity
 */
export enum DataSchemaDetails_Granularity {
  /**
   * Unspecified granularity.
   *
   * @generated from enum value: GRANULARITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Asset-level granularity (annotations must not contain partition info).
   *
   * @generated from enum value: GRANULARITY_ASSET_LEVEL = 1;
   */
  ASSET_LEVEL = 1,

  /**
   * Partition-level granularity (annotations must contain partition info).
   *
   * @generated from enum value: GRANULARITY_PARTITION_LEVEL = 2;
   */
  PARTITION_LEVEL = 2,
}

/**
 * Describes the enum google.cloud.visionai.v1.DataSchemaDetails.Granularity.
 */
export const DataSchemaDetails_GranularitySchema: GenEnum<DataSchemaDetails_Granularity> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 68, 1);

/**
 * Request message for UpdateDataSchema.
 *
 * @generated from message google.cloud.visionai.v1.UpdateDataSchemaRequest
 */
export type UpdateDataSchemaRequest = Message<"google.cloud.visionai.v1.UpdateDataSchemaRequest"> & {
  /**
   * Required. The data schema's `name` field is used to identify the data
   * schema to be updated. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/dataSchemas/{data_schema}`
   *
   * @generated from field: google.cloud.visionai.v1.DataSchema data_schema = 1;
   */
  dataSchema?: DataSchema;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateDataSchemaRequest.
 * Use `create(UpdateDataSchemaRequestSchema)` to create a new message.
 */
export const UpdateDataSchemaRequestSchema: GenMessage<UpdateDataSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 69);

/**
 * Request message for GetDataSchema.
 *
 * @generated from message google.cloud.visionai.v1.GetDataSchemaRequest
 */
export type GetDataSchemaRequest = Message<"google.cloud.visionai.v1.GetDataSchemaRequest"> & {
  /**
   * Required. The name of the data schema to retrieve.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/dataSchemas/{data_schema_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetDataSchemaRequest.
 * Use `create(GetDataSchemaRequestSchema)` to create a new message.
 */
export const GetDataSchemaRequestSchema: GenMessage<GetDataSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 70);

/**
 * Request message for DeleteDataSchema.
 *
 * @generated from message google.cloud.visionai.v1.DeleteDataSchemaRequest
 */
export type DeleteDataSchemaRequest = Message<"google.cloud.visionai.v1.DeleteDataSchemaRequest"> & {
  /**
   * Required. The name of the data schema to delete.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/dataSchemas/{data_schema_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteDataSchemaRequest.
 * Use `create(DeleteDataSchemaRequestSchema)` to create a new message.
 */
export const DeleteDataSchemaRequestSchema: GenMessage<DeleteDataSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 71);

/**
 * Request message for ListDataSchemas.
 *
 * @generated from message google.cloud.visionai.v1.ListDataSchemasRequest
 */
export type ListDataSchemasRequest = Message<"google.cloud.visionai.v1.ListDataSchemasRequest"> & {
  /**
   * Required. The parent, which owns this collection of data schemas.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of data schemas to return. The service may return fewer
   * than this value. If unspecified, at most 50 data schemas will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListDataSchemas` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListDataSchemas` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListDataSchemasRequest.
 * Use `create(ListDataSchemasRequestSchema)` to create a new message.
 */
export const ListDataSchemasRequestSchema: GenMessage<ListDataSchemasRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 72);

/**
 * Response message for ListDataSchemas.
 *
 * @generated from message google.cloud.visionai.v1.ListDataSchemasResponse
 */
export type ListDataSchemasResponse = Message<"google.cloud.visionai.v1.ListDataSchemasResponse"> & {
  /**
   * The data schemas from the specified corpus.
   *
   * @generated from field: repeated google.cloud.visionai.v1.DataSchema data_schemas = 1;
   */
  dataSchemas: DataSchema[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListDataSchemasResponse.
 * Use `create(ListDataSchemasResponseSchema)` to create a new message.
 */
export const ListDataSchemasResponseSchema: GenMessage<ListDataSchemasResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 73);

/**
 * Request message for CreateAnnotation.
 *
 * @generated from message google.cloud.visionai.v1.CreateAnnotationRequest
 */
export type CreateAnnotationRequest = Message<"google.cloud.visionai.v1.CreateAnnotationRequest"> & {
  /**
   * Required. The parent resource where this annotation will be created.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The annotation to create.
   *
   * @generated from field: google.cloud.visionai.v1.Annotation annotation = 2;
   */
  annotation?: Annotation;

  /**
   * Optional. The ID to use for the annotation, which will become the final
   * component of the annotation's resource name if user choose to specify.
   * Otherwise, annotation id will be generated by system.
   *
   * This value should be up to 63 characters, and valid characters
   * are /[a-z][0-9]-/. The first character must be a letter, the last could be
   * a letter or a number.
   *
   * @generated from field: optional string annotation_id = 3;
   */
  annotationId?: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateAnnotationRequest.
 * Use `create(CreateAnnotationRequestSchema)` to create a new message.
 */
export const CreateAnnotationRequestSchema: GenMessage<CreateAnnotationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 74);

/**
 * An annotation is a resource in asset. It represents a key-value mapping of
 * content in asset.
 *
 * @generated from message google.cloud.visionai.v1.Annotation
 */
export type Annotation = Message<"google.cloud.visionai.v1.Annotation"> & {
  /**
   * Resource name of the annotation.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}/annotations/{annotation}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * User provided annotation.
   *
   * @generated from field: google.cloud.visionai.v1.UserSpecifiedAnnotation user_specified_annotation = 2;
   */
  userSpecifiedAnnotation?: UserSpecifiedAnnotation;
};

/**
 * Describes the message google.cloud.visionai.v1.Annotation.
 * Use `create(AnnotationSchema)` to create a new message.
 */
export const AnnotationSchema: GenMessage<Annotation> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 75);

/**
 * Annotation provided by users.
 *
 * @generated from message google.cloud.visionai.v1.UserSpecifiedAnnotation
 */
export type UserSpecifiedAnnotation = Message<"google.cloud.visionai.v1.UserSpecifiedAnnotation"> & {
  /**
   * Required. Key of the annotation. The key must be set with type by
   * CreateDataSchema.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Value of the annotation. The value must be able to convert
   * to the type according to the data schema.
   *
   * @generated from field: google.cloud.visionai.v1.AnnotationValue value = 2;
   */
  value?: AnnotationValue;

  /**
   * Partition information in time and space for the sub-asset level annotation.
   *
   * @generated from field: google.cloud.visionai.v1.Partition partition = 3;
   */
  partition?: Partition;
};

/**
 * Describes the message google.cloud.visionai.v1.UserSpecifiedAnnotation.
 * Use `create(UserSpecifiedAnnotationSchema)` to create a new message.
 */
export const UserSpecifiedAnnotationSchema: GenMessage<UserSpecifiedAnnotation> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 76);

/**
 * Location Coordinate Representation
 *
 * @generated from message google.cloud.visionai.v1.GeoCoordinate
 */
export type GeoCoordinate = Message<"google.cloud.visionai.v1.GeoCoordinate"> & {
  /**
   * Latitude Coordinate. Degrees [-90 .. 90]
   *
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * Longitude Coordinate. Degrees [-180 .. 180]
   *
   * @generated from field: double longitude = 2;
   */
  longitude: number;
};

/**
 * Describes the message google.cloud.visionai.v1.GeoCoordinate.
 * Use `create(GeoCoordinateSchema)` to create a new message.
 */
export const GeoCoordinateSchema: GenMessage<GeoCoordinate> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 77);

/**
 * Value of annotation, including all types available in data schema.
 *
 * @generated from message google.cloud.visionai.v1.AnnotationValue
 */
export type AnnotationValue = Message<"google.cloud.visionai.v1.AnnotationValue"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1.AnnotationValue.value
   */
  value: {
    /**
     * Value of int type annotation.
     *
     * @generated from field: int64 int_value = 1;
     */
    value: bigint;
    case: "intValue";
  } | {
    /**
     * Value of float type annotation.
     *
     * @generated from field: float float_value = 2;
     */
    value: number;
    case: "floatValue";
  } | {
    /**
     * Value of string type annotation.
     *
     * @generated from field: string str_value = 3;
     */
    value: string;
    case: "strValue";
  } | {
    /**
     * Value of date time type annotation.
     *
     * @generated from field: string datetime_value = 5;
     */
    value: string;
    case: "datetimeValue";
  } | {
    /**
     * Value of geo coordinate type annotation.
     *
     * @generated from field: google.cloud.visionai.v1.GeoCoordinate geo_coordinate = 7;
     */
    value: GeoCoordinate;
    case: "geoCoordinate";
  } | {
    /**
     * Value of any proto value.
     *
     * @generated from field: google.protobuf.Any proto_any_value = 8;
     */
    value: Any;
    case: "protoAnyValue";
  } | {
    /**
     * Value of boolean type annotation.
     *
     * @generated from field: bool bool_value = 9;
     */
    value: boolean;
    case: "boolValue";
  } | {
    /**
     * Value of customized struct annotation. This field does not have effects.
     * Use customized_struct_value instead for customized struct annotation.
     *
     * @generated from field: google.protobuf.Struct customized_struct_data_value = 10;
     */
    value: JsonObject;
    case: "customizedStructDataValue";
  } | {
    /**
     * Value of list type annotation.
     *
     * @generated from field: google.cloud.visionai.v1.AnnotationList list_value = 11;
     */
    value: AnnotationList;
    case: "listValue";
  } | {
    /**
     * Value of custom struct type annotation.
     *
     * @generated from field: google.cloud.visionai.v1.AnnotationCustomizedStruct customized_struct_value = 6;
     */
    value: AnnotationCustomizedStruct;
    case: "customizedStructValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.visionai.v1.AnnotationValue.
 * Use `create(AnnotationValueSchema)` to create a new message.
 */
export const AnnotationValueSchema: GenMessage<AnnotationValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 78);

/**
 * List representation in annotation.
 *
 * @generated from message google.cloud.visionai.v1.AnnotationList
 */
export type AnnotationList = Message<"google.cloud.visionai.v1.AnnotationList"> & {
  /**
   * The values of `LIST` data type annotation.
   *
   * @generated from field: repeated google.cloud.visionai.v1.AnnotationValue values = 1;
   */
  values: AnnotationValue[];
};

/**
 * Describes the message google.cloud.visionai.v1.AnnotationList.
 * Use `create(AnnotationListSchema)` to create a new message.
 */
export const AnnotationListSchema: GenMessage<AnnotationList> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 79);

/**
 * Customized struct represnation in annotation.
 *
 * @generated from message google.cloud.visionai.v1.AnnotationCustomizedStruct
 */
export type AnnotationCustomizedStruct = Message<"google.cloud.visionai.v1.AnnotationCustomizedStruct"> & {
  /**
   * A map from elements' keys to element's annotation value.
   *
   * @generated from field: map<string, google.cloud.visionai.v1.AnnotationValue> elements = 2;
   */
  elements: { [key: string]: AnnotationValue };
};

/**
 * Describes the message google.cloud.visionai.v1.AnnotationCustomizedStruct.
 * Use `create(AnnotationCustomizedStructSchema)` to create a new message.
 */
export const AnnotationCustomizedStructSchema: GenMessage<AnnotationCustomizedStruct> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 80);

/**
 * Request message for GetAnnotation API.
 *
 * @generated from message google.cloud.visionai.v1.ListAnnotationsRequest
 */
export type ListAnnotationsRequest = Message<"google.cloud.visionai.v1.ListAnnotationsRequest"> & {
  /**
   * The parent, which owns this collection of annotations.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of annotations to return. The service may return fewer
   * than this value. If unspecified, at most 50 annotations will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListAnnotations` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListAnnotations` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The filter applied to the returned list.
   * We only support filtering for the following fields:
   * For corpus of STREAM_VIDEO type:
   * `partition.temporal_partition.start_time`,
   * `partition.temporal_partition.end_time`, and `key`.
   * For corpus of VIDEO_ON_DEMAND type,
   * `partition.relative_temporal_partition.start_offset`,
   * `partition.relative_temporal_partition.end_offset`, and `key`.
   * For corpus of IMAGE type, only `key` is supported.
   * Timestamps are specified in the RFC-3339 format, and only one restriction
   * may be applied per field, joined by conjunctions.
   * Format:
   * "partition.temporal_partition.start_time > "2012-04-21T11:30:00-04:00" AND
   * partition.temporal_partition.end_time < "2012-04-22T11:30:00-04:00" AND
   * key = "example_key""
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListAnnotationsRequest.
 * Use `create(ListAnnotationsRequestSchema)` to create a new message.
 */
export const ListAnnotationsRequestSchema: GenMessage<ListAnnotationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 81);

/**
 * Request message for ListAnnotations API.
 *
 * @generated from message google.cloud.visionai.v1.ListAnnotationsResponse
 */
export type ListAnnotationsResponse = Message<"google.cloud.visionai.v1.ListAnnotationsResponse"> & {
  /**
   * The annotations from the specified asset.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Annotation annotations = 1;
   */
  annotations: Annotation[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListAnnotationsResponse.
 * Use `create(ListAnnotationsResponseSchema)` to create a new message.
 */
export const ListAnnotationsResponseSchema: GenMessage<ListAnnotationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 82);

/**
 * Request message for GetAnnotation API.
 *
 * @generated from message google.cloud.visionai.v1.GetAnnotationRequest
 */
export type GetAnnotationRequest = Message<"google.cloud.visionai.v1.GetAnnotationRequest"> & {
  /**
   * Required. The name of the annotation to retrieve.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}/annotations/{annotation}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetAnnotationRequest.
 * Use `create(GetAnnotationRequestSchema)` to create a new message.
 */
export const GetAnnotationRequestSchema: GenMessage<GetAnnotationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 83);

/**
 * Request message for UpdateAnnotation API.
 *
 * @generated from message google.cloud.visionai.v1.UpdateAnnotationRequest
 */
export type UpdateAnnotationRequest = Message<"google.cloud.visionai.v1.UpdateAnnotationRequest"> & {
  /**
   * Required. The annotation to update.
   * The annotation's `name` field is used to identify the annotation to be
   * updated. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}/annotations/{annotation}`
   *
   * @generated from field: google.cloud.visionai.v1.Annotation annotation = 1;
   */
  annotation?: Annotation;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateAnnotationRequest.
 * Use `create(UpdateAnnotationRequestSchema)` to create a new message.
 */
export const UpdateAnnotationRequestSchema: GenMessage<UpdateAnnotationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 84);

/**
 * Request message for DeleteAnnotation API.
 *
 * @generated from message google.cloud.visionai.v1.DeleteAnnotationRequest
 */
export type DeleteAnnotationRequest = Message<"google.cloud.visionai.v1.DeleteAnnotationRequest"> & {
  /**
   * Required. The name of the annotation to delete.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}/annotations/{annotation}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteAnnotationRequest.
 * Use `create(DeleteAnnotationRequestSchema)` to create a new message.
 */
export const DeleteAnnotationRequestSchema: GenMessage<DeleteAnnotationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 85);

/**
 * The request message for ImportAssets.
 *
 * @generated from message google.cloud.visionai.v1.ImportAssetsRequest
 */
export type ImportAssetsRequest = Message<"google.cloud.visionai.v1.ImportAssetsRequest"> & {
  /**
   * The source.
   *
   * @generated from oneof google.cloud.visionai.v1.ImportAssetsRequest.source
   */
  source: {
    /**
     * The file contains all assets information to be imported.
     * * The file is in JSONL format.
     * * Each line corresponding to one asset.
     * * Each line will be converted into InputImageAsset proto.
     *
     * @generated from field: string assets_gcs_uri = 2;
     */
    value: string;
    case: "assetsGcsUri";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The parent corpus resource where the assets will be imported.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ImportAssetsRequest.
 * Use `create(ImportAssetsRequestSchema)` to create a new message.
 */
export const ImportAssetsRequestSchema: GenMessage<ImportAssetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 86);

/**
 * The metadata message for ImportAssets LRO.
 *
 * @generated from message google.cloud.visionai.v1.ImportAssetsMetadata
 */
export type ImportAssetsMetadata = Message<"google.cloud.visionai.v1.ImportAssetsMetadata"> & {
  /**
   * The metadata of the operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata metadata = 1;
   */
  metadata?: OperationMetadata;

  /**
   * The importing status including partial failures, if the implementation can
   * provide such information during the progress of the ImportAssets.
   *
   * @generated from field: google.cloud.visionai.v1.BatchOperationStatus status = 2;
   */
  status?: BatchOperationStatus;
};

/**
 * Describes the message google.cloud.visionai.v1.ImportAssetsMetadata.
 * Use `create(ImportAssetsMetadataSchema)` to create a new message.
 */
export const ImportAssetsMetadataSchema: GenMessage<ImportAssetsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 87);

/**
 * The batch operation status.
 *
 * @generated from message google.cloud.visionai.v1.BatchOperationStatus
 */
export type BatchOperationStatus = Message<"google.cloud.visionai.v1.BatchOperationStatus"> & {
  /**
   * The count of assets (together with their annotations if any) successfully
   * ingested.
   *
   * @generated from field: int32 success_count = 1;
   */
  successCount: number;

  /**
   * The count of assets failed to ingested; it might be due to the annotation
   * ingestion error.
   *
   * @generated from field: int32 failure_count = 2;
   */
  failureCount: number;
};

/**
 * Describes the message google.cloud.visionai.v1.BatchOperationStatus.
 * Use `create(BatchOperationStatusSchema)` to create a new message.
 */
export const BatchOperationStatusSchema: GenMessage<BatchOperationStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 88);

/**
 * The response message for ImportAssets LRO.
 *
 * @generated from message google.cloud.visionai.v1.ImportAssetsResponse
 */
export type ImportAssetsResponse = Message<"google.cloud.visionai.v1.ImportAssetsResponse"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.ImportAssetsResponse.
 * Use `create(ImportAssetsResponseSchema)` to create a new message.
 */
export const ImportAssetsResponseSchema: GenMessage<ImportAssetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 89);

/**
 * Request message for CreateSearchConfig.
 *
 * @generated from message google.cloud.visionai.v1.CreateSearchConfigRequest
 */
export type CreateSearchConfigRequest = Message<"google.cloud.visionai.v1.CreateSearchConfigRequest"> & {
  /**
   * Required. The parent resource where this search configuration will be
   * created. Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The search config to create.
   *
   * @generated from field: google.cloud.visionai.v1.SearchConfig search_config = 2;
   */
  searchConfig?: SearchConfig;

  /**
   * Required. ID to use for the new search config. Will become the final
   * component of the SearchConfig's resource name. This value should be up to
   * 63 characters, and valid characters are /[a-z][0-9]-_/. The first character
   * must be a letter, the last could be a letter or a number.
   *
   * @generated from field: string search_config_id = 3;
   */
  searchConfigId: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateSearchConfigRequest.
 * Use `create(CreateSearchConfigRequestSchema)` to create a new message.
 */
export const CreateSearchConfigRequestSchema: GenMessage<CreateSearchConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 90);

/**
 * Request message for UpdateSearchConfig.
 *
 * @generated from message google.cloud.visionai.v1.UpdateSearchConfigRequest
 */
export type UpdateSearchConfigRequest = Message<"google.cloud.visionai.v1.UpdateSearchConfigRequest"> & {
  /**
   * Required. The search configuration to update.
   *
   * The search configuration's `name` field is used to identify the resource to
   * be updated. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/searchConfigs/{search_config}`
   *
   * @generated from field: google.cloud.visionai.v1.SearchConfig search_config = 1;
   */
  searchConfig?: SearchConfig;

  /**
   * The list of fields to be updated. If left unset, all field paths will be
   * updated/overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateSearchConfigRequest.
 * Use `create(UpdateSearchConfigRequestSchema)` to create a new message.
 */
export const UpdateSearchConfigRequestSchema: GenMessage<UpdateSearchConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 91);

/**
 * Request message for GetSearchConfig.
 *
 * @generated from message google.cloud.visionai.v1.GetSearchConfigRequest
 */
export type GetSearchConfigRequest = Message<"google.cloud.visionai.v1.GetSearchConfigRequest"> & {
  /**
   * Required. The name of the search configuration to retrieve.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/searchConfigs/{search_config}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetSearchConfigRequest.
 * Use `create(GetSearchConfigRequestSchema)` to create a new message.
 */
export const GetSearchConfigRequestSchema: GenMessage<GetSearchConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 92);

/**
 * Request message for DeleteSearchConfig.
 *
 * @generated from message google.cloud.visionai.v1.DeleteSearchConfigRequest
 */
export type DeleteSearchConfigRequest = Message<"google.cloud.visionai.v1.DeleteSearchConfigRequest"> & {
  /**
   * Required. The name of the search configuration to delete.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/searchConfigs/{search_config}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteSearchConfigRequest.
 * Use `create(DeleteSearchConfigRequestSchema)` to create a new message.
 */
export const DeleteSearchConfigRequestSchema: GenMessage<DeleteSearchConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 93);

/**
 * Request message for ListSearchConfigs.
 *
 * @generated from message google.cloud.visionai.v1.ListSearchConfigsRequest
 */
export type ListSearchConfigsRequest = Message<"google.cloud.visionai.v1.ListSearchConfigsRequest"> & {
  /**
   * Required. The parent, which owns this collection of search configurations.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of search configurations to return. The service may
   * return fewer than this value. If unspecified, a page size of 50 will be
   * used. The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListSearchConfigs` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListSearchConfigs` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListSearchConfigsRequest.
 * Use `create(ListSearchConfigsRequestSchema)` to create a new message.
 */
export const ListSearchConfigsRequestSchema: GenMessage<ListSearchConfigsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 94);

/**
 * Response message for ListSearchConfigs.
 *
 * @generated from message google.cloud.visionai.v1.ListSearchConfigsResponse
 */
export type ListSearchConfigsResponse = Message<"google.cloud.visionai.v1.ListSearchConfigsResponse"> & {
  /**
   * The search configurations from the specified corpus.
   *
   * @generated from field: repeated google.cloud.visionai.v1.SearchConfig search_configs = 1;
   */
  searchConfigs: SearchConfig[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListSearchConfigsResponse.
 * Use `create(ListSearchConfigsResponseSchema)` to create a new message.
 */
export const ListSearchConfigsResponseSchema: GenMessage<ListSearchConfigsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 95);

/**
 * SearchConfig stores different properties that will affect search
 * behaviors and search results.
 *
 * @generated from message google.cloud.visionai.v1.SearchConfig
 */
export type SearchConfig = Message<"google.cloud.visionai.v1.SearchConfig"> & {
  /**
   * Resource name of the search configuration.
   * For CustomSearchCriteria, search_config would be the search
   * operator name. For Facets, search_config would be the facet
   * dimension name.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/searchConfigs/{search_config}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Establishes a FacetDimension and associated specifications.
   *
   * @generated from field: google.cloud.visionai.v1.FacetProperty facet_property = 2;
   */
  facetProperty?: FacetProperty;

  /**
   * Creates a mapping between a custom SearchCriteria and one or more UGA keys.
   *
   * @generated from field: google.cloud.visionai.v1.SearchCriteriaProperty search_criteria_property = 3;
   */
  searchCriteriaProperty?: SearchCriteriaProperty;
};

/**
 * Describes the message google.cloud.visionai.v1.SearchConfig.
 * Use `create(SearchConfigSchema)` to create a new message.
 */
export const SearchConfigSchema: GenMessage<SearchConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 96);

/**
 * Message representing IndexEndpoint resource. Indexes are deployed into it.
 *
 * @generated from message google.cloud.visionai.v1.IndexEndpoint
 */
export type IndexEndpoint = Message<"google.cloud.visionai.v1.IndexEndpoint"> & {
  /**
   * Output only. Resource name of the IndexEndpoint.
   * Format:
   * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Display name of the IndexEndpoint. Can be up to 32 characters
   * long.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Optional. Description of the IndexEndpoint. Can be up to 25000 characters
   * long.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. The Index deployed in this IndexEndpoint.
   *
   * @generated from field: google.cloud.visionai.v1.DeployedIndex deployed_index = 9;
   */
  deployedIndex?: DeployedIndex;

  /**
   * Output only. IndexEndpoint state.
   *
   * @generated from field: google.cloud.visionai.v1.IndexEndpoint.State state = 5;
   */
  state: IndexEndpoint_State;

  /**
   * Optional. The labels applied to a resource must meet the following
   * requirements:
   *
   * * Each resource can have multiple labels, up to a maximum of 64.
   * * Each label must be a key-value pair.
   * * Keys have a minimum length of 1 character and a maximum length of 63
   *   characters and cannot be empty. Values can be empty and have a maximum
   *   length of 63 characters.
   * * Keys and values can contain only lowercase letters, numeric characters,
   *   underscores, and dashes. All characters must use UTF-8 encoding, and
   *   international characters are allowed.
   * * The key portion of a label must be unique. However, you can use the same
   *   key with multiple resources.
   * * Keys must start with a lowercase letter or international character.
   *
   * See [Google Cloud
   * Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
   * for more details.
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };

  /**
   * Output only. Create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 7;
   */
  createTime?: Timestamp;

  /**
   * Output only. Update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 8;
   */
  updateTime?: Timestamp;

  /**
   * Output only. This boolean field is only set for projects that have Physical
   * Zone Separation enabled via an Org Policy constraint. It is set to true
   * when the index endpoint is a valid zone separated index endpoint and false
   * if it isn't.
   *
   * @generated from field: optional bool satisfies_pzs = 10;
   */
  satisfiesPzs?: boolean;

  /**
   * Output only. This boolean field is only set for projects that have Physical
   * Zone Isolation enabled via an Org Policy constraint. It is set to true when
   * the index endpoint is a valid zone isolated index endpoint and false if it
   * isn't.
   *
   * @generated from field: optional bool satisfies_pzi = 11;
   */
  satisfiesPzi?: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1.IndexEndpoint.
 * Use `create(IndexEndpointSchema)` to create a new message.
 */
export const IndexEndpointSchema: GenMessage<IndexEndpoint> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 97);

/**
 * IndexEndpoint stage.
 *
 * @generated from enum google.cloud.visionai.v1.IndexEndpoint.State
 */
export enum IndexEndpoint_State {
  /**
   * The default value. Should not be used.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * State CREATING.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * State CREATED.
   *
   * @generated from enum value: CREATED = 2;
   */
  CREATED = 2,

  /**
   * State UPDATING.
   *
   * @generated from enum value: UPDATING = 3;
   */
  UPDATING = 3,

  /**
   * State FAILED.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,
}

/**
 * Describes the enum google.cloud.visionai.v1.IndexEndpoint.State.
 */
export const IndexEndpoint_StateSchema: GenEnum<IndexEndpoint_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 97, 0);

/**
 * Request message for CreateIndexEndpoint.
 *
 * @generated from message google.cloud.visionai.v1.CreateIndexEndpointRequest
 */
export type CreateIndexEndpointRequest = Message<"google.cloud.visionai.v1.CreateIndexEndpointRequest"> & {
  /**
   * Required. Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The ID to use for the IndexEndpoint, which will become the final
   * component of the IndexEndpoint's resource name if the user specifies it.
   * Otherwise, IndexEndpoint id will be autogenerated.
   *
   * This value should be up to 63 characters, and valid characters
   * are a-z, 0-9 and dash (-). The first character must be a letter, the last
   * must be a letter or a number.
   *
   * @generated from field: string index_endpoint_id = 2;
   */
  indexEndpointId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.visionai.v1.IndexEndpoint index_endpoint = 3;
   */
  indexEndpoint?: IndexEndpoint;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateIndexEndpointRequest.
 * Use `create(CreateIndexEndpointRequestSchema)` to create a new message.
 */
export const CreateIndexEndpointRequestSchema: GenMessage<CreateIndexEndpointRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 98);

/**
 * Metadata message for CreateIndexEndpoint.
 *
 * @generated from message google.cloud.visionai.v1.CreateIndexEndpointMetadata
 */
export type CreateIndexEndpointMetadata = Message<"google.cloud.visionai.v1.CreateIndexEndpointMetadata"> & {
  /**
   * Common metadata of the long-running operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata operation_metadata = 1;
   */
  operationMetadata?: OperationMetadata;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateIndexEndpointMetadata.
 * Use `create(CreateIndexEndpointMetadataSchema)` to create a new message.
 */
export const CreateIndexEndpointMetadataSchema: GenMessage<CreateIndexEndpointMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 99);

/**
 * Request message for GetIndexEndpoint.
 *
 * @generated from message google.cloud.visionai.v1.GetIndexEndpointRequest
 */
export type GetIndexEndpointRequest = Message<"google.cloud.visionai.v1.GetIndexEndpointRequest"> & {
  /**
   * Required. Name of the IndexEndpoint resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetIndexEndpointRequest.
 * Use `create(GetIndexEndpointRequestSchema)` to create a new message.
 */
export const GetIndexEndpointRequestSchema: GenMessage<GetIndexEndpointRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 100);

/**
 * Request message for ListIndexEndpoints.
 *
 * @generated from message google.cloud.visionai.v1.ListIndexEndpointsRequest
 */
export type ListIndexEndpointsRequest = Message<"google.cloud.visionai.v1.ListIndexEndpointsRequest"> & {
  /**
   * Required. Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Requested page size. Server may return fewer items than
   * requested. The service may return fewer than this value. If unspecified, a
   * page size of 50 will be used. The maximum value is 1000; values above 1000
   * will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter applied to the returned list.
   * We only support filtering for the `deployed_image_index.image_index` field.
   * However, to filter by a corpus instead of an image index, simply use
   * `deployed_image_index.corpus`, which will return all endpoints with
   * `deployed_image_index.image_index` inside of the given corpus.
   * A basic filter on image index would look like:
   *   deployed_image_index.image_index =
   *     "projects/123/locations/us-central1/corpora/my_corpus/imageIndexes/my_image_index"
   * A basic filter on corpus would look like:
   *   deployed_image_index.corpus =
   *     "projects/123/locations/us-central1/corpora/my_corpus"
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListIndexEndpointsRequest.
 * Use `create(ListIndexEndpointsRequestSchema)` to create a new message.
 */
export const ListIndexEndpointsRequestSchema: GenMessage<ListIndexEndpointsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 101);

/**
 * Response message for ListIndexEndpoints.
 *
 * @generated from message google.cloud.visionai.v1.ListIndexEndpointsResponse
 */
export type ListIndexEndpointsResponse = Message<"google.cloud.visionai.v1.ListIndexEndpointsResponse"> & {
  /**
   * The list of IndexEndpoints.
   *
   * @generated from field: repeated google.cloud.visionai.v1.IndexEndpoint index_endpoints = 1;
   */
  indexEndpoints: IndexEndpoint[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListIndexEndpointsResponse.
 * Use `create(ListIndexEndpointsResponseSchema)` to create a new message.
 */
export const ListIndexEndpointsResponseSchema: GenMessage<ListIndexEndpointsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 102);

/**
 * Request message for UpdateIndexEndpoint.
 *
 * @generated from message google.cloud.visionai.v1.UpdateIndexEndpointRequest
 */
export type UpdateIndexEndpointRequest = Message<"google.cloud.visionai.v1.UpdateIndexEndpointRequest"> & {
  /**
   * Required. The resource being updated.
   *
   * @generated from field: google.cloud.visionai.v1.IndexEndpoint index_endpoint = 1;
   */
  indexEndpoint?: IndexEndpoint;

  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * IndexEndpoint resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request.
   * A field of the resource will be overwritten if it is in the mask.
   * Empty field mask is not allowed.
   * If the mask is "*", then this is a full replacement of the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateIndexEndpointRequest.
 * Use `create(UpdateIndexEndpointRequestSchema)` to create a new message.
 */
export const UpdateIndexEndpointRequestSchema: GenMessage<UpdateIndexEndpointRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 103);

/**
 * Metadata message for UpdateIndexEndpoint.
 *
 * @generated from message google.cloud.visionai.v1.UpdateIndexEndpointMetadata
 */
export type UpdateIndexEndpointMetadata = Message<"google.cloud.visionai.v1.UpdateIndexEndpointMetadata"> & {
  /**
   * Common metadata of the long-running operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata operation_metadata = 1;
   */
  operationMetadata?: OperationMetadata;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateIndexEndpointMetadata.
 * Use `create(UpdateIndexEndpointMetadataSchema)` to create a new message.
 */
export const UpdateIndexEndpointMetadataSchema: GenMessage<UpdateIndexEndpointMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 104);

/**
 * Request message for DeleteIndexEndpoint.
 *
 * @generated from message google.cloud.visionai.v1.DeleteIndexEndpointRequest
 */
export type DeleteIndexEndpointRequest = Message<"google.cloud.visionai.v1.DeleteIndexEndpointRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteIndexEndpointRequest.
 * Use `create(DeleteIndexEndpointRequestSchema)` to create a new message.
 */
export const DeleteIndexEndpointRequestSchema: GenMessage<DeleteIndexEndpointRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 105);

/**
 * Metadata message for DeleteIndexEndpoint.
 *
 * @generated from message google.cloud.visionai.v1.DeleteIndexEndpointMetadata
 */
export type DeleteIndexEndpointMetadata = Message<"google.cloud.visionai.v1.DeleteIndexEndpointMetadata"> & {
  /**
   * Common metadata of the long-running operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata operation_metadata = 1;
   */
  operationMetadata?: OperationMetadata;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteIndexEndpointMetadata.
 * Use `create(DeleteIndexEndpointMetadataSchema)` to create a new message.
 */
export const DeleteIndexEndpointMetadataSchema: GenMessage<DeleteIndexEndpointMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 106);

/**
 * Request message for DeployIndex.
 *
 * @generated from message google.cloud.visionai.v1.DeployIndexRequest
 */
export type DeployIndexRequest = Message<"google.cloud.visionai.v1.DeployIndexRequest"> & {
  /**
   * Required. IndexEndpoint the index is deployed to.
   * Format:
   * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
   *
   * @generated from field: string index_endpoint = 1;
   */
  indexEndpoint: string;

  /**
   * Required. Index to deploy.
   *
   * @generated from field: google.cloud.visionai.v1.DeployedIndex deployed_index = 3;
   */
  deployedIndex?: DeployedIndex;
};

/**
 * Describes the message google.cloud.visionai.v1.DeployIndexRequest.
 * Use `create(DeployIndexRequestSchema)` to create a new message.
 */
export const DeployIndexRequestSchema: GenMessage<DeployIndexRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 107);

/**
 * DeployIndex response once the operation is done.
 *
 * @generated from message google.cloud.visionai.v1.DeployIndexResponse
 */
export type DeployIndexResponse = Message<"google.cloud.visionai.v1.DeployIndexResponse"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.DeployIndexResponse.
 * Use `create(DeployIndexResponseSchema)` to create a new message.
 */
export const DeployIndexResponseSchema: GenMessage<DeployIndexResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 108);

/**
 * Metadata message for DeployIndex.
 *
 * @generated from message google.cloud.visionai.v1.DeployIndexMetadata
 */
export type DeployIndexMetadata = Message<"google.cloud.visionai.v1.DeployIndexMetadata"> & {
  /**
   * Common metadata of the long-running operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata operation_metadata = 1;
   */
  operationMetadata?: OperationMetadata;

  /**
   * Output only. The index being deployed.
   *
   * @generated from field: string deployed_index = 2;
   */
  deployedIndex: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeployIndexMetadata.
 * Use `create(DeployIndexMetadataSchema)` to create a new message.
 */
export const DeployIndexMetadataSchema: GenMessage<DeployIndexMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 109);

/**
 * Metadata message for UndeployIndex.
 *
 * @generated from message google.cloud.visionai.v1.UndeployIndexMetadata
 */
export type UndeployIndexMetadata = Message<"google.cloud.visionai.v1.UndeployIndexMetadata"> & {
  /**
   * Common metadata of the long-running operation.
   *
   * @generated from field: google.cloud.visionai.v1.OperationMetadata operation_metadata = 1;
   */
  operationMetadata?: OperationMetadata;

  /**
   * Output only. The index being undeployed.
   *
   * @generated from field: string deployed_index = 2;
   */
  deployedIndex: string;
};

/**
 * Describes the message google.cloud.visionai.v1.UndeployIndexMetadata.
 * Use `create(UndeployIndexMetadataSchema)` to create a new message.
 */
export const UndeployIndexMetadataSchema: GenMessage<UndeployIndexMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 110);

/**
 * Request message for UndeployIndexEndpoint.
 *
 * @generated from message google.cloud.visionai.v1.UndeployIndexRequest
 */
export type UndeployIndexRequest = Message<"google.cloud.visionai.v1.UndeployIndexRequest"> & {
  /**
   * Required. Resource name of the IndexEndpoint resource on which the
   * undeployment will act. Format:
   * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
   *
   * @generated from field: string index_endpoint = 1;
   */
  indexEndpoint: string;
};

/**
 * Describes the message google.cloud.visionai.v1.UndeployIndexRequest.
 * Use `create(UndeployIndexRequestSchema)` to create a new message.
 */
export const UndeployIndexRequestSchema: GenMessage<UndeployIndexRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 111);

/**
 * UndeployIndex response once the operation is done.
 *
 * @generated from message google.cloud.visionai.v1.UndeployIndexResponse
 */
export type UndeployIndexResponse = Message<"google.cloud.visionai.v1.UndeployIndexResponse"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.UndeployIndexResponse.
 * Use `create(UndeployIndexResponseSchema)` to create a new message.
 */
export const UndeployIndexResponseSchema: GenMessage<UndeployIndexResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 112);

/**
 * A deployment of an Index.
 *
 * @generated from message google.cloud.visionai.v1.DeployedIndex
 */
export type DeployedIndex = Message<"google.cloud.visionai.v1.DeployedIndex"> & {
  /**
   * Required. Name of the deployed Index.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/indexes/{index_id}`
   *
   * @generated from field: string index = 1;
   */
  index: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeployedIndex.
 * Use `create(DeployedIndexSchema)` to create a new message.
 */
export const DeployedIndexSchema: GenMessage<DeployedIndex> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 113);

/**
 * Central configuration for a facet.
 *
 * @generated from message google.cloud.visionai.v1.FacetProperty
 */
export type FacetProperty = Message<"google.cloud.visionai.v1.FacetProperty"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1.FacetProperty.range_facet_config
   */
  rangeFacetConfig: {
    /**
     * Fixed range facet bucket config.
     *
     * @generated from field: google.cloud.visionai.v1.FacetProperty.FixedRangeBucketSpec fixed_range_bucket_spec = 5;
     */
    value: FacetProperty_FixedRangeBucketSpec;
    case: "fixedRangeBucketSpec";
  } | {
    /**
     * Custom range facet bucket config.
     *
     * @generated from field: google.cloud.visionai.v1.FacetProperty.CustomRangeBucketSpec custom_range_bucket_spec = 6;
     */
    value: FacetProperty_CustomRangeBucketSpec;
    case: "customRangeBucketSpec";
  } | {
    /**
     * Datetime range facet bucket config.
     *
     * @generated from field: google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec datetime_bucket_spec = 7;
     */
    value: FacetProperty_DateTimeBucketSpec;
    case: "datetimeBucketSpec";
  } | { case: undefined; value?: undefined };

  /**
   * Name of the facets, which are the dimensions users want to use to refine
   * search results. `mapped_fields` will match UserSpecifiedDataSchema keys.
   *
   * For example, user can add a bunch of UGAs with the same key, such as
   * player:adam, player:bob, player:charles. When multiple mapped_fields are
   * specified, will merge their value together as final facet value. E.g.
   * home_team: a, home_team:b, away_team:a, away_team:c, when facet_field =
   * [home_team, away_team], facet_value will be [a, b, c].
   *
   * UNLESS this is a 1:1 facet dimension (mapped_fields.size() == 1) AND the
   * mapped_field equals the parent SearchConfig.name, the parent must
   * also contain a SearchCriteriaProperty that maps to the same fields.
   * mapped_fields must not be empty.
   *
   * @generated from field: repeated string mapped_fields = 1;
   */
  mappedFields: string[];

  /**
   * Display name of the facet. To be used by UI for facet rendering.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Maximum number of unique bucket to return for one facet. Bucket number can
   * be large for high-cardinality facet such as "player". We only return top-n
   * most related ones to user. If it's <= 0, the server will decide the
   * appropriate result_size.
   *
   * @generated from field: int64 result_size = 3;
   */
  resultSize: bigint;

  /**
   * Facet bucket type e.g. value, range.
   *
   * @generated from field: google.cloud.visionai.v1.FacetBucketType bucket_type = 4;
   */
  bucketType: FacetBucketType;
};

/**
 * Describes the message google.cloud.visionai.v1.FacetProperty.
 * Use `create(FacetPropertySchema)` to create a new message.
 */
export const FacetPropertySchema: GenMessage<FacetProperty> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 114);

/**
 * If bucket type is FIXED_RANGE, specify how values are bucketized. Use
 * FixedRangeBucketSpec when you want to create multiple buckets with equal
 * granularities. Using integer bucket value as an example, when
 * bucket_start = 0, bucket_granularity = 10, bucket_count = 5, this facet
 * will be aggregated via the following buckets:
 * [-inf, 0), [0, 10), [10, 20), [20, 30), [30, inf).
 * Notably, bucket_count <= 1 is an invalid spec.
 *
 * @generated from message google.cloud.visionai.v1.FacetProperty.FixedRangeBucketSpec
 */
export type FacetProperty_FixedRangeBucketSpec = Message<"google.cloud.visionai.v1.FacetProperty.FixedRangeBucketSpec"> & {
  /**
   * Lower bound of the bucket. NOTE: Only integer type is currently supported
   * for this field.
   *
   * @generated from field: google.cloud.visionai.v1.FacetValue bucket_start = 1;
   */
  bucketStart?: FacetValue;

  /**
   * Bucket granularity. NOTE: Only integer type is currently supported for
   * this field.
   *
   * @generated from field: google.cloud.visionai.v1.FacetValue bucket_granularity = 2;
   */
  bucketGranularity?: FacetValue;

  /**
   * Total number of buckets.
   *
   * @generated from field: int32 bucket_count = 3;
   */
  bucketCount: number;
};

/**
 * Describes the message google.cloud.visionai.v1.FacetProperty.FixedRangeBucketSpec.
 * Use `create(FacetProperty_FixedRangeBucketSpecSchema)` to create a new message.
 */
export const FacetProperty_FixedRangeBucketSpecSchema: GenMessage<FacetProperty_FixedRangeBucketSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 114, 0);

/**
 * If bucket type is CUSTOM_RANGE, specify how values are bucketized. Use
 * integer bucket value as an example, when the endpoints are 0, 10, 100, and
 * 1000, we will generate the following facets:
 * [-inf, 0), [0, 10), [10, 100), [100, 1000), [1000, inf).
 * Notably:
 * - endpoints must be listed in ascending order. Otherwise, the SearchConfig
 *   API will reject the facet config.
 * - < 1 endpoints is an invalid spec.
 *
 * @generated from message google.cloud.visionai.v1.FacetProperty.CustomRangeBucketSpec
 */
export type FacetProperty_CustomRangeBucketSpec = Message<"google.cloud.visionai.v1.FacetProperty.CustomRangeBucketSpec"> & {
  /**
   * Currently, only integer type is supported for this field.
   *
   * @generated from field: repeated google.cloud.visionai.v1.FacetValue endpoints = 1;
   */
  endpoints: FacetValue[];
};

/**
 * Describes the message google.cloud.visionai.v1.FacetProperty.CustomRangeBucketSpec.
 * Use `create(FacetProperty_CustomRangeBucketSpecSchema)` to create a new message.
 */
export const FacetProperty_CustomRangeBucketSpecSchema: GenMessage<FacetProperty_CustomRangeBucketSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 114, 1);

/**
 * If bucket type is DATE, specify how date values are bucketized.
 *
 * @generated from message google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec
 */
export type FacetProperty_DateTimeBucketSpec = Message<"google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec"> & {
  /**
   * Granularity of date type facet.
   *
   * @generated from field: google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec.Granularity granularity = 1;
   */
  granularity: FacetProperty_DateTimeBucketSpec_Granularity;
};

/**
 * Describes the message google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec.
 * Use `create(FacetProperty_DateTimeBucketSpecSchema)` to create a new message.
 */
export const FacetProperty_DateTimeBucketSpecSchema: GenMessage<FacetProperty_DateTimeBucketSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 114, 2);

/**
 * Granularity enum for the datetime bucket.
 *
 * @generated from enum google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec.Granularity
 */
export enum FacetProperty_DateTimeBucketSpec_Granularity {
  /**
   * Unspecified granularity.
   *
   * @generated from enum value: GRANULARITY_UNSPECIFIED = 0;
   */
  GRANULARITY_UNSPECIFIED = 0,

  /**
   * Granularity is year.
   *
   * @generated from enum value: YEAR = 1;
   */
  YEAR = 1,

  /**
   * Granularity is month.
   *
   * @generated from enum value: MONTH = 2;
   */
  MONTH = 2,

  /**
   * Granularity is day.
   *
   * @generated from enum value: DAY = 3;
   */
  DAY = 3,
}

/**
 * Describes the enum google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec.Granularity.
 */
export const FacetProperty_DateTimeBucketSpec_GranularitySchema: GenEnum<FacetProperty_DateTimeBucketSpec_Granularity> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 114, 2, 0);

/**
 * Search resource: SearchHypernym.
 * For example,
 * { hypernym: "vehicle"
 *   hyponyms: ["sedan", "truck"] }
 * This means in SMART_SEARCH mode, searching for "vehicle" will also return
 * results with "sedan" or "truck" as annotations.
 *
 * @generated from message google.cloud.visionai.v1.SearchHypernym
 */
export type SearchHypernym = Message<"google.cloud.visionai.v1.SearchHypernym"> & {
  /**
   * Resource name of the SearchHypernym.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/searchHypernyms/{search_hypernym}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The hypernym.
   *
   * @generated from field: string hypernym = 2;
   */
  hypernym: string;

  /**
   * Optional. Hyponyms that the hypernym is mapped to.
   *
   * @generated from field: repeated string hyponyms = 3;
   */
  hyponyms: string[];
};

/**
 * Describes the message google.cloud.visionai.v1.SearchHypernym.
 * Use `create(SearchHypernymSchema)` to create a new message.
 */
export const SearchHypernymSchema: GenMessage<SearchHypernym> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 115);

/**
 * Request message for creating SearchHypernym.
 *
 * @generated from message google.cloud.visionai.v1.CreateSearchHypernymRequest
 */
export type CreateSearchHypernymRequest = Message<"google.cloud.visionai.v1.CreateSearchHypernymRequest"> & {
  /**
   * Required. The parent resource where this SearchHypernym will be created.
   * Format: `projects/{project_number}/locations/{location}/corpora/{corpus}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The SearchHypernym to create.
   *
   * @generated from field: google.cloud.visionai.v1.SearchHypernym search_hypernym = 2;
   */
  searchHypernym?: SearchHypernym;

  /**
   * Optional. The search hypernym id.
   * If omitted, a random UUID will be generated.
   *
   * @generated from field: optional string search_hypernym_id = 3;
   */
  searchHypernymId?: string;
};

/**
 * Describes the message google.cloud.visionai.v1.CreateSearchHypernymRequest.
 * Use `create(CreateSearchHypernymRequestSchema)` to create a new message.
 */
export const CreateSearchHypernymRequestSchema: GenMessage<CreateSearchHypernymRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 116);

/**
 * Request message for updating SearchHypernym.
 *
 * @generated from message google.cloud.visionai.v1.UpdateSearchHypernymRequest
 */
export type UpdateSearchHypernymRequest = Message<"google.cloud.visionai.v1.UpdateSearchHypernymRequest"> & {
  /**
   * Required. The SearchHypernym to update.
   * The search hypernym's `name` field is used to identify the search hypernym
   * to be updated. Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/searchHypernyms/{search_hypernym}`
   *
   * @generated from field: google.cloud.visionai.v1.SearchHypernym search_hypernym = 1;
   */
  searchHypernym?: SearchHypernym;

  /**
   * The list of fields to be updated. If left unset, all field paths will be
   * updated/overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1.UpdateSearchHypernymRequest.
 * Use `create(UpdateSearchHypernymRequestSchema)` to create a new message.
 */
export const UpdateSearchHypernymRequestSchema: GenMessage<UpdateSearchHypernymRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 117);

/**
 * Request message for getting SearchHypernym.
 *
 * @generated from message google.cloud.visionai.v1.GetSearchHypernymRequest
 */
export type GetSearchHypernymRequest = Message<"google.cloud.visionai.v1.GetSearchHypernymRequest"> & {
  /**
   * Required. The name of the SearchHypernym to retrieve.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/searchHypernyms/{search_hypernym}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.GetSearchHypernymRequest.
 * Use `create(GetSearchHypernymRequestSchema)` to create a new message.
 */
export const GetSearchHypernymRequestSchema: GenMessage<GetSearchHypernymRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 118);

/**
 * Request message for deleting SearchHypernym.
 *
 * @generated from message google.cloud.visionai.v1.DeleteSearchHypernymRequest
 */
export type DeleteSearchHypernymRequest = Message<"google.cloud.visionai.v1.DeleteSearchHypernymRequest"> & {
  /**
   * Required. The name of the SearchHypernym to delete.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/searchHypernyms/{search_hypernym}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteSearchHypernymRequest.
 * Use `create(DeleteSearchHypernymRequestSchema)` to create a new message.
 */
export const DeleteSearchHypernymRequestSchema: GenMessage<DeleteSearchHypernymRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 119);

/**
 * Request message for listing SearchHypernyms.
 *
 * @generated from message google.cloud.visionai.v1.ListSearchHypernymsRequest
 */
export type ListSearchHypernymsRequest = Message<"google.cloud.visionai.v1.ListSearchHypernymsRequest"> & {
  /**
   * Required. The parent, which owns this collection of SearchHypernyms.
   * Format:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of SearchHypernyms returned. The service may
   * return fewer than this value. If unspecified, a page size of 50 will be
   * used. The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `SearchHypernym` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `SearchHypernym` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListSearchHypernymsRequest.
 * Use `create(ListSearchHypernymsRequestSchema)` to create a new message.
 */
export const ListSearchHypernymsRequestSchema: GenMessage<ListSearchHypernymsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 120);

/**
 * Response message for listing SearchHypernyms.
 *
 * @generated from message google.cloud.visionai.v1.ListSearchHypernymsResponse
 */
export type ListSearchHypernymsResponse = Message<"google.cloud.visionai.v1.ListSearchHypernymsResponse"> & {
  /**
   * The SearchHypernyms from the specified corpus.
   *
   * @generated from field: repeated google.cloud.visionai.v1.SearchHypernym search_hypernyms = 1;
   */
  searchHypernyms: SearchHypernym[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ListSearchHypernymsResponse.
 * Use `create(ListSearchHypernymsResponseSchema)` to create a new message.
 */
export const ListSearchHypernymsResponseSchema: GenMessage<ListSearchHypernymsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 121);

/**
 * Central configuration for custom search criteria.
 *
 * @generated from message google.cloud.visionai.v1.SearchCriteriaProperty
 */
export type SearchCriteriaProperty = Message<"google.cloud.visionai.v1.SearchCriteriaProperty"> & {
  /**
   * Each mapped_field corresponds to a UGA key. To understand how this property
   * works, take the following example. In the SearchConfig table, the
   * user adds this entry:
   *   search_config {
   *     name: "person"
   *     search_criteria_property {
   *       mapped_fields: "player"
   *       mapped_fields: "coach"
   *     }
   *   }
   *
   * Now, when a user issues a query like:
   *   criteria {
   *     field: "person"
   *     text_array {
   *       txt_values: "Tom Brady"
   *       txt_values: "Bill Belichick"
   *     }
   *   }
   *
   * MWH search will return search documents where (player=Tom Brady ||
   * coach=Tom Brady || player=Bill Belichick || coach=Bill Belichick).
   *
   * @generated from field: repeated string mapped_fields = 1;
   */
  mappedFields: string[];
};

/**
 * Describes the message google.cloud.visionai.v1.SearchCriteriaProperty.
 * Use `create(SearchCriteriaPropertySchema)` to create a new message.
 */
export const SearchCriteriaPropertySchema: GenMessage<SearchCriteriaProperty> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 122);

/**
 * Definition of a single value with generic type.
 *
 * @generated from message google.cloud.visionai.v1.FacetValue
 */
export type FacetValue = Message<"google.cloud.visionai.v1.FacetValue"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1.FacetValue.value
   */
  value: {
    /**
     * String type value.
     *
     * @generated from field: string string_value = 1;
     */
    value: string;
    case: "stringValue";
  } | {
    /**
     * Integer type value.
     *
     * @generated from field: int64 integer_value = 2;
     */
    value: bigint;
    case: "integerValue";
  } | {
    /**
     * Datetime type value.
     *
     * @generated from field: google.type.DateTime datetime_value = 3;
     */
    value: DateTime;
    case: "datetimeValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.visionai.v1.FacetValue.
 * Use `create(FacetValueSchema)` to create a new message.
 */
export const FacetValueSchema: GenMessage<FacetValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 123);

/**
 * Holds the facet value, selections state, and metadata.
 *
 * @generated from message google.cloud.visionai.v1.FacetBucket
 */
export type FacetBucket = Message<"google.cloud.visionai.v1.FacetBucket"> & {
  /**
   * Bucket associated with a facet. For example, bucket of facet “team”
   * can be "49ers", "patriots", etc; bucket of facet "player" can be "tom
   * brady", "drew brees", etc.
   *
   * @generated from oneof google.cloud.visionai.v1.FacetBucket.bucket_value
   */
  bucketValue: {
    /**
     * Singular value.
     *
     * @generated from field: google.cloud.visionai.v1.FacetValue value = 2;
     */
    value: FacetValue;
    case: "value";
  } | {
    /**
     * Range value.
     *
     * @generated from field: google.cloud.visionai.v1.FacetBucket.Range range = 4;
     */
    value: FacetBucket_Range;
    case: "range";
  } | { case: undefined; value?: undefined };

  /**
   * Whether one facet bucket is selected. This field represents user's facet
   * selection. It is set by frontend in SearchVideosRequest.
   *
   * @generated from field: bool selected = 3;
   */
  selected: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1.FacetBucket.
 * Use `create(FacetBucketSchema)` to create a new message.
 */
export const FacetBucketSchema: GenMessage<FacetBucket> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 124);

/**
 * The range of values [start, end) for which faceting is applied.
 *
 * @generated from message google.cloud.visionai.v1.FacetBucket.Range
 */
export type FacetBucket_Range = Message<"google.cloud.visionai.v1.FacetBucket.Range"> & {
  /**
   * Start of the range. Non-existence indicates some bound (e.g. -inf).
   *
   * @generated from field: google.cloud.visionai.v1.FacetValue start = 1;
   */
  start?: FacetValue;

  /**
   * End of the range. Non-existence indicates some bound (e.g. inf).
   *
   * @generated from field: google.cloud.visionai.v1.FacetValue end = 2;
   */
  end?: FacetValue;
};

/**
 * Describes the message google.cloud.visionai.v1.FacetBucket.Range.
 * Use `create(FacetBucket_RangeSchema)` to create a new message.
 */
export const FacetBucket_RangeSchema: GenMessage<FacetBucket_Range> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 124, 0);

/**
 * A group of facet buckets to be passed back and forth between backend &
 * frontend.
 *
 * @generated from message google.cloud.visionai.v1.FacetGroup
 */
export type FacetGroup = Message<"google.cloud.visionai.v1.FacetGroup"> & {
  /**
   * Unique id of the facet group.
   *
   * @generated from field: string facet_id = 1;
   */
  facetId: string;

  /**
   * Display name of the facet. To be used by UI for facet rendering.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Buckets associated with the facet. E.g. for "Team" facet, the bucket
   * can be 49ers, patriots, etc.
   *
   * @generated from field: repeated google.cloud.visionai.v1.FacetBucket buckets = 3;
   */
  buckets: FacetBucket[];

  /**
   * Facet bucket type.
   *
   * @generated from field: google.cloud.visionai.v1.FacetBucketType bucket_type = 4;
   */
  bucketType: FacetBucketType;

  /**
   * If true, return query matched annotations for this facet group's selection.
   * This option is only applicable for facets based on partition level
   * annotations. It supports the following facet values:
   *  - INTEGER
   *  - STRING (DataSchema.SearchStrategy.EXACT_SEARCH only)
   *
   * @generated from field: bool fetch_matched_annotations = 5;
   */
  fetchMatchedAnnotations: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1.FacetGroup.
 * Use `create(FacetGroupSchema)` to create a new message.
 */
export const FacetGroupSchema: GenMessage<FacetGroup> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 125);

/**
 * Request message for IngestAsset API.
 *
 * @generated from message google.cloud.visionai.v1.IngestAssetRequest
 */
export type IngestAssetRequest = Message<"google.cloud.visionai.v1.IngestAssetRequest"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1.IngestAssetRequest.streaming_request
   */
  streamingRequest: {
    /**
     * Provides information for the data and the asset resource name that the
     * data belongs to. The first `IngestAssetRequest` message must only contain
     * a `Config` message.
     *
     * @generated from field: google.cloud.visionai.v1.IngestAssetRequest.Config config = 1;
     */
    value: IngestAssetRequest_Config;
    case: "config";
  } | {
    /**
     * Data to be ingested.
     *
     * @generated from field: google.cloud.visionai.v1.IngestAssetRequest.TimeIndexedData time_indexed_data = 2;
     */
    value: IngestAssetRequest_TimeIndexedData;
    case: "timeIndexedData";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.visionai.v1.IngestAssetRequest.
 * Use `create(IngestAssetRequestSchema)` to create a new message.
 */
export const IngestAssetRequestSchema: GenMessage<IngestAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 126);

/**
 * Configuration for the data.
 *
 * @generated from message google.cloud.visionai.v1.IngestAssetRequest.Config
 */
export type IngestAssetRequest_Config = Message<"google.cloud.visionai.v1.IngestAssetRequest.Config"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1.IngestAssetRequest.Config.data_type
   */
  dataType: {
    /**
     * Type information for video data.
     *
     * @generated from field: google.cloud.visionai.v1.IngestAssetRequest.Config.VideoType video_type = 2;
     */
    value: IngestAssetRequest_Config_VideoType;
    case: "videoType";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the asset that the ingested data belongs
   * to.
   *
   * @generated from field: string asset = 1;
   */
  asset: string;
};

/**
 * Describes the message google.cloud.visionai.v1.IngestAssetRequest.Config.
 * Use `create(IngestAssetRequest_ConfigSchema)` to create a new message.
 */
export const IngestAssetRequest_ConfigSchema: GenMessage<IngestAssetRequest_Config> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 126, 0);

/**
 * Type information for video data.
 *
 * @generated from message google.cloud.visionai.v1.IngestAssetRequest.Config.VideoType
 */
export type IngestAssetRequest_Config_VideoType = Message<"google.cloud.visionai.v1.IngestAssetRequest.Config.VideoType"> & {
  /**
   * Container format of the video data.
   *
   * @generated from field: google.cloud.visionai.v1.IngestAssetRequest.Config.VideoType.ContainerFormat container_format = 1;
   */
  containerFormat: IngestAssetRequest_Config_VideoType_ContainerFormat;
};

/**
 * Describes the message google.cloud.visionai.v1.IngestAssetRequest.Config.VideoType.
 * Use `create(IngestAssetRequest_Config_VideoTypeSchema)` to create a new message.
 */
export const IngestAssetRequest_Config_VideoTypeSchema: GenMessage<IngestAssetRequest_Config_VideoType> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 126, 0, 0);

/**
 * Container format of the video.
 *
 * @generated from enum google.cloud.visionai.v1.IngestAssetRequest.Config.VideoType.ContainerFormat
 */
export enum IngestAssetRequest_Config_VideoType_ContainerFormat {
  /**
   * The default type, not supposed to be used.
   *
   * @generated from enum value: CONTAINER_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Mp4 container format.
   *
   * @generated from enum value: CONTAINER_FORMAT_MP4 = 1;
   */
  MP4 = 1,
}

/**
 * Describes the enum google.cloud.visionai.v1.IngestAssetRequest.Config.VideoType.ContainerFormat.
 */
export const IngestAssetRequest_Config_VideoType_ContainerFormatSchema: GenEnum<IngestAssetRequest_Config_VideoType_ContainerFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 126, 0, 0, 0);

/**
 * Contains the data and the corresponding time range this data is for.
 *
 * @generated from message google.cloud.visionai.v1.IngestAssetRequest.TimeIndexedData
 */
export type IngestAssetRequest_TimeIndexedData = Message<"google.cloud.visionai.v1.IngestAssetRequest.TimeIndexedData"> & {
  /**
   * Data to be ingested.
   *
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * Time range of the data.
   *
   * @generated from field: google.cloud.visionai.v1.Partition.TemporalPartition temporal_partition = 2;
   */
  temporalPartition?: Partition_TemporalPartition;
};

/**
 * Describes the message google.cloud.visionai.v1.IngestAssetRequest.TimeIndexedData.
 * Use `create(IngestAssetRequest_TimeIndexedDataSchema)` to create a new message.
 */
export const IngestAssetRequest_TimeIndexedDataSchema: GenMessage<IngestAssetRequest_TimeIndexedData> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 126, 1);

/**
 * Response message for IngestAsset API.
 *
 * @generated from message google.cloud.visionai.v1.IngestAssetResponse
 */
export type IngestAssetResponse = Message<"google.cloud.visionai.v1.IngestAssetResponse"> & {
  /**
   * Time range of the data that has been successfully ingested.
   *
   * @generated from field: google.cloud.visionai.v1.Partition.TemporalPartition successfully_ingested_partition = 1;
   */
  successfullyIngestedPartition?: Partition_TemporalPartition;
};

/**
 * Describes the message google.cloud.visionai.v1.IngestAssetResponse.
 * Use `create(IngestAssetResponseSchema)` to create a new message.
 */
export const IngestAssetResponseSchema: GenMessage<IngestAssetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 127);

/**
 * Request message for ClipAsset API.
 *
 * @generated from message google.cloud.visionai.v1.ClipAssetRequest
 */
export type ClipAssetRequest = Message<"google.cloud.visionai.v1.ClipAssetRequest"> & {
  /**
   * Required. The resource name of the asset to request clips for.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The time range to request clips for.
   *
   * @generated from field: google.cloud.visionai.v1.Partition.TemporalPartition temporal_partition = 2;
   */
  temporalPartition?: Partition_TemporalPartition;
};

/**
 * Describes the message google.cloud.visionai.v1.ClipAssetRequest.
 * Use `create(ClipAssetRequestSchema)` to create a new message.
 */
export const ClipAssetRequestSchema: GenMessage<ClipAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 128);

/**
 * Response message for ClipAsset API.
 *
 * @generated from message google.cloud.visionai.v1.ClipAssetResponse
 */
export type ClipAssetResponse = Message<"google.cloud.visionai.v1.ClipAssetResponse"> & {
  /**
   * A list of signed uris to download the video clips that cover the requested
   * time range ordered by time.
   *
   * @generated from field: repeated google.cloud.visionai.v1.ClipAssetResponse.TimeIndexedUri time_indexed_uris = 1;
   */
  timeIndexedUris: ClipAssetResponse_TimeIndexedUri[];
};

/**
 * Describes the message google.cloud.visionai.v1.ClipAssetResponse.
 * Use `create(ClipAssetResponseSchema)` to create a new message.
 */
export const ClipAssetResponseSchema: GenMessage<ClipAssetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 129);

/**
 * Signed uri with corresponding time range.
 *
 * @generated from message google.cloud.visionai.v1.ClipAssetResponse.TimeIndexedUri
 */
export type ClipAssetResponse_TimeIndexedUri = Message<"google.cloud.visionai.v1.ClipAssetResponse.TimeIndexedUri"> & {
  /**
   * Time range of the video that the uri is for.
   *
   * @generated from field: google.cloud.visionai.v1.Partition.TemporalPartition temporal_partition = 1;
   */
  temporalPartition?: Partition_TemporalPartition;

  /**
   * Signed uri to download the video clip.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;
};

/**
 * Describes the message google.cloud.visionai.v1.ClipAssetResponse.TimeIndexedUri.
 * Use `create(ClipAssetResponse_TimeIndexedUriSchema)` to create a new message.
 */
export const ClipAssetResponse_TimeIndexedUriSchema: GenMessage<ClipAssetResponse_TimeIndexedUri> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 129, 0);

/**
 * Request message for GenerateHlsUri API.
 *
 * @generated from message google.cloud.visionai.v1.GenerateHlsUriRequest
 */
export type GenerateHlsUriRequest = Message<"google.cloud.visionai.v1.GenerateHlsUriRequest"> & {
  /**
   * Required. The resource name of the asset to request clips for.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The time range to request clips for. Will be ignored if `get_live_view` is
   * set to True. The total time range requested should be smaller than 24h.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Partition.TemporalPartition temporal_partitions = 2;
   */
  temporalPartitions: Partition_TemporalPartition[];

  /**
   * Option to exclusively show a livestream of the asset with up to 3 minutes
   * of backlog data.
   *
   * @generated from field: bool live_view_enabled = 3;
   */
  liveViewEnabled: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1.GenerateHlsUriRequest.
 * Use `create(GenerateHlsUriRequestSchema)` to create a new message.
 */
export const GenerateHlsUriRequestSchema: GenMessage<GenerateHlsUriRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 130);

/**
 * Response message for GenerateHlsUri API.
 *
 * @generated from message google.cloud.visionai.v1.GenerateHlsUriResponse
 */
export type GenerateHlsUriResponse = Message<"google.cloud.visionai.v1.GenerateHlsUriResponse"> & {
  /**
   * A signed uri to download the HLS manifest corresponding to the requested
   * times.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * A list of temporal partitions of the content returned in the order they
   * appear in the stream.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Partition.TemporalPartition temporal_partitions = 2;
   */
  temporalPartitions: Partition_TemporalPartition[];
};

/**
 * Describes the message google.cloud.visionai.v1.GenerateHlsUriResponse.
 * Use `create(GenerateHlsUriResponseSchema)` to create a new message.
 */
export const GenerateHlsUriResponseSchema: GenMessage<GenerateHlsUriResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 131);

/**
 * Request message for SearchAssets.
 *
 * @generated from message google.cloud.visionai.v1.SearchAssetsRequest
 */
export type SearchAssetsRequest = Message<"google.cloud.visionai.v1.SearchAssetsRequest"> & {
  /**
   * Sorting specification. If this field is not specified, by default:
   * - STREAM_VIDEO: search results are sorted by the start time.
   *
   * @generated from oneof google.cloud.visionai.v1.SearchAssetsRequest.sort_spec
   */
  sortSpec: {
    /**
     * Sort by the value under the data schema key.
     *
     * @generated from field: google.cloud.visionai.v1.SchemaKeySortingStrategy schema_key_sorting_strategy = 9;
     */
    value: SchemaKeySortingStrategy;
    case: "schemaKeySortingStrategy";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The parent corpus to search.
   * Format: `projects/{project_id}/locations/{location_id}/corpora/{corpus_id}'
   *
   * @generated from field: string corpus = 1;
   */
  corpus: string;

  /**
   * The number of results to be returned in this page. If it's 0, the server
   * will decide the appropriate page_size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The continuation token to fetch the next page. If empty, it means it is
   * fetching the first page.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Time ranges that matching video content must fall within. If no ranges are
   * provided, there will be no time restriction. This field is treated just
   * like the criteria below, but defined separately for convenience as it is
   * used frequently. Note that if the end_time is in the future, it will be
   * clamped to the time the request was received.
   *
   * @generated from field: google.cloud.visionai.v1.DateTimeRangeArray content_time_ranges = 5;
   */
  contentTimeRanges?: DateTimeRangeArray;

  /**
   * Criteria applied to search results.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Criteria criteria = 4;
   */
  criteria: Criteria[];

  /**
   * Stores most recent facet selection state. Only facet groups with user's
   * selection will be presented here. Selection state is either selected or
   * unselected. Only selected facet buckets will be used as search criteria.
   *
   * @generated from field: repeated google.cloud.visionai.v1.FacetGroup facet_selections = 6;
   */
  facetSelections: FacetGroup[];

  /**
   * A list of annotation keys to specify the annotations to be retrieved and
   * returned with each search result.
   * Annotation granularity must be GRANULARITY_ASSET_LEVEL and its search
   * strategy must not be NO_SEARCH.
   *
   * @generated from field: repeated string result_annotation_keys = 8;
   */
  resultAnnotationKeys: string[];

  /**
   * Global search query. Allows user to search assets without needing to
   * specify which field the value belongs to.
   *
   * @generated from field: string search_query = 10;
   */
  searchQuery: string;
};

/**
 * Describes the message google.cloud.visionai.v1.SearchAssetsRequest.
 * Use `create(SearchAssetsRequestSchema)` to create a new message.
 */
export const SearchAssetsRequestSchema: GenMessage<SearchAssetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 132);

/**
 * Request message for SearchIndexEndpoint.
 *
 * @generated from message google.cloud.visionai.v1.SearchIndexEndpointRequest
 */
export type SearchIndexEndpointRequest = Message<"google.cloud.visionai.v1.SearchIndexEndpointRequest"> & {
  /**
   * The oneof global search query.
   *
   * @generated from oneof google.cloud.visionai.v1.SearchIndexEndpointRequest.query
   */
  query: {
    /**
     * An image-only query.
     *
     * @generated from field: google.cloud.visionai.v1.ImageQuery image_query = 2;
     */
    value: ImageQuery;
    case: "imageQuery";
  } | {
    /**
     * A text-only query.
     *
     * @generated from field: string text_query = 3;
     */
    value: string;
    case: "textQuery";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The index endpoint to search.
   * Format:
   * `projects/{project_id}/locations/{location_id}/indexEndpoints/{index_endpoint_id}'
   *
   * @generated from field: string index_endpoint = 1;
   */
  indexEndpoint: string;

  /**
   * Criteria applied to search results.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Criteria criteria = 4;
   */
  criteria: Criteria[];

  /**
   * Criteria to exclude from search results.
   * Note that `fetch_matched_annotations` will be ignored.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Criteria exclusion_criteria = 7;
   */
  exclusionCriteria: Criteria[];

  /**
   * Requested page size. API may return fewer results than requested.
   * If negative, INVALID_ARGUMENT error will be returned.
   * If unspecified or 0, API will pick a default size, which is 10.
   * If the requested page size is larger than the maximum size, API will pick
   * the maximum size, which is 100.
   *
   * @generated from field: int32 page_size = 5;
   */
  pageSize: number;

  /**
   * The continuation token to fetch the next page. If empty, it means it is
   * fetching the first page.
   *
   * @generated from field: string page_token = 6;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.SearchIndexEndpointRequest.
 * Use `create(SearchIndexEndpointRequestSchema)` to create a new message.
 */
export const SearchIndexEndpointRequestSchema: GenMessage<SearchIndexEndpointRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 133);

/**
 * Image query for search endpoint request.
 *
 * @generated from message google.cloud.visionai.v1.ImageQuery
 */
export type ImageQuery = Message<"google.cloud.visionai.v1.ImageQuery"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1.ImageQuery.image
   */
  image: {
    /**
     * Input image in raw bytes.
     *
     * @generated from field: bytes input_image = 1;
     */
    value: Uint8Array;
    case: "inputImage";
  } | {
    /**
     * Resource name of the asset. Only supported in IMAGE corpus type.
     * Format:
     * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
     *
     * @generated from field: string asset = 2;
     */
    value: string;
    case: "asset";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.visionai.v1.ImageQuery.
 * Use `create(ImageQuerySchema)` to create a new message.
 */
export const ImageQuerySchema: GenMessage<ImageQuery> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 134);

/**
 * A strategy to specify how to sort by data schema key.
 *
 * @generated from message google.cloud.visionai.v1.SchemaKeySortingStrategy
 */
export type SchemaKeySortingStrategy = Message<"google.cloud.visionai.v1.SchemaKeySortingStrategy"> & {
  /**
   * Options in the front have high priority than those in the back.
   *
   * @generated from field: repeated google.cloud.visionai.v1.SchemaKeySortingStrategy.Option options = 1;
   */
  options: SchemaKeySortingStrategy_Option[];
};

/**
 * Describes the message google.cloud.visionai.v1.SchemaKeySortingStrategy.
 * Use `create(SchemaKeySortingStrategySchema)` to create a new message.
 */
export const SchemaKeySortingStrategySchema: GenMessage<SchemaKeySortingStrategy> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 135);

/**
 * Option for one data schema key.
 *
 * @generated from message google.cloud.visionai.v1.SchemaKeySortingStrategy.Option
 */
export type SchemaKeySortingStrategy_Option = Message<"google.cloud.visionai.v1.SchemaKeySortingStrategy.Option"> & {
  /**
   * The data used to sort.
   *
   * @generated from field: string data_schema_key = 1;
   */
  dataSchemaKey: string;

  /**
   * Whether to sort in decreasing order or increasing order.
   * By default, results are sorted in incresing order.
   *
   * @generated from field: bool sort_decreasing = 2;
   */
  sortDecreasing: boolean;

  /**
   * Aggregate method for the current data schema key.
   *
   * @generated from field: optional google.cloud.visionai.v1.SchemaKeySortingStrategy.Option.AggregateMethod aggregate_method = 3;
   */
  aggregateMethod?: SchemaKeySortingStrategy_Option_AggregateMethod;
};

/**
 * Describes the message google.cloud.visionai.v1.SchemaKeySortingStrategy.Option.
 * Use `create(SchemaKeySortingStrategy_OptionSchema)` to create a new message.
 */
export const SchemaKeySortingStrategy_OptionSchema: GenMessage<SchemaKeySortingStrategy_Option> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 135, 0);

/**
 * When one result has multiple values with the same key, specify
 * which value is used to sort. By default, AGGREGATE_METHOD_LARGEST
 * is used when results are sorted in decreasing order,
 * AGGREGATE_METHOD_SMALLEST is used when results are sorted in
 * incresing order.
 *
 * @generated from enum google.cloud.visionai.v1.SchemaKeySortingStrategy.Option.AggregateMethod
 */
export enum SchemaKeySortingStrategy_Option_AggregateMethod {
  /**
   * The unspecified aggregate method will be overwritten as mentioned
   * above.
   *
   * @generated from enum value: AGGREGATE_METHOD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Take the (lexicographical or numerical) largest value to sort.
   *
   * @generated from enum value: AGGREGATE_METHOD_LARGEST = 1;
   */
  LARGEST = 1,

  /**
   * Take the (lexicographical or numerical) smallest value to sort.
   *
   * @generated from enum value: AGGREGATE_METHOD_SMALLEST = 2;
   */
  SMALLEST = 2,
}

/**
 * Describes the enum google.cloud.visionai.v1.SchemaKeySortingStrategy.Option.AggregateMethod.
 */
export const SchemaKeySortingStrategy_Option_AggregateMethodSchema: GenEnum<SchemaKeySortingStrategy_Option_AggregateMethod> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 135, 0, 0);

/**
 * The metadata for DeleteAsset API that embeds in
 * [metadata][google.longrunning.Operation.metadata] field.
 *
 * @generated from message google.cloud.visionai.v1.DeleteAssetMetadata
 */
export type DeleteAssetMetadata = Message<"google.cloud.visionai.v1.DeleteAssetMetadata"> & {
};

/**
 * Describes the message google.cloud.visionai.v1.DeleteAssetMetadata.
 * Use `create(DeleteAssetMetadataSchema)` to create a new message.
 */
export const DeleteAssetMetadataSchema: GenMessage<DeleteAssetMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 136);

/**
 * Stores the criteria-annotation matching results for each search result item.
 *
 * @generated from message google.cloud.visionai.v1.AnnotationMatchingResult
 */
export type AnnotationMatchingResult = Message<"google.cloud.visionai.v1.AnnotationMatchingResult"> & {
  /**
   * The criteria used for matching. It can be an input search criteria or a
   * criteria converted from a facet selection.
   *
   * @generated from field: google.cloud.visionai.v1.Criteria criteria = 1;
   */
  criteria?: Criteria;

  /**
   * Matched annotations for the criteria.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Annotation matched_annotations = 2;
   */
  matchedAnnotations: Annotation[];

  /**
   * Status of the match result. Possible values:
   * FAILED_PRECONDITION - the criteria is not eligible for match.
   * OK - matching is performed.
   *
   * @generated from field: google.rpc.Status status = 3;
   */
  status?: Status;
};

/**
 * Describes the message google.cloud.visionai.v1.AnnotationMatchingResult.
 * Use `create(AnnotationMatchingResultSchema)` to create a new message.
 */
export const AnnotationMatchingResultSchema: GenMessage<AnnotationMatchingResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 137);

/**
 * Search result contains asset name and corresponding time ranges.
 *
 * @generated from message google.cloud.visionai.v1.SearchResultItem
 */
export type SearchResultItem = Message<"google.cloud.visionai.v1.SearchResultItem"> & {
  /**
   * The resource name of the asset.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string asset = 1;
   */
  asset: string;

  /**
   * The matched asset segments.
   * Deprecated: please use singular `segment` field.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Partition.TemporalPartition segments = 2 [deprecated = true];
   * @deprecated
   */
  segments: Partition_TemporalPartition[];

  /**
   * The matched asset segment.
   *
   * @generated from field: google.cloud.visionai.v1.Partition.TemporalPartition segment = 5;
   */
  segment?: Partition_TemporalPartition;

  /**
   * Available to IMAGE corpus types.
   * Relevance of this `SearchResultItem` to user search query (text query or
   * image query).
   * By default this represents cosine similarity between the query and the
   * retrieved media content. The value is in the range of [-1, 1].
   * Note that search ranking is not only decided by this relevance score,
   * but also other factors such as the match of annotations.
   *
   * @generated from field: double relevance = 6;
   */
  relevance: number;

  /**
   * Search result annotations specified by result_annotation_keys in search
   * request.
   *
   * @generated from field: repeated google.cloud.visionai.v1.Annotation requested_annotations = 3;
   */
  requestedAnnotations: Annotation[];

  /**
   * Criteria or facet-selection based annotation matching results associated to
   * this search result item. Only contains results for criteria or
   * facet_selections with fetch_matched_annotations=true.
   *
   * @generated from field: repeated google.cloud.visionai.v1.AnnotationMatchingResult annotation_matching_results = 4;
   */
  annotationMatchingResults: AnnotationMatchingResult[];
};

/**
 * Describes the message google.cloud.visionai.v1.SearchResultItem.
 * Use `create(SearchResultItemSchema)` to create a new message.
 */
export const SearchResultItemSchema: GenMessage<SearchResultItem> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 138);

/**
 * Response message for SearchAssets.
 *
 * @generated from message google.cloud.visionai.v1.SearchAssetsResponse
 */
export type SearchAssetsResponse = Message<"google.cloud.visionai.v1.SearchAssetsResponse"> & {
  /**
   * Returned search results.
   *
   * @generated from field: repeated google.cloud.visionai.v1.SearchResultItem search_result_items = 1;
   */
  searchResultItems: SearchResultItem[];

  /**
   * The next-page continuation token.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Facet search results of a given query, which contains user's
   * already-selected facet values and updated facet search results.
   *
   * @generated from field: repeated google.cloud.visionai.v1.FacetGroup facet_results = 3;
   */
  facetResults: FacetGroup[];
};

/**
 * Describes the message google.cloud.visionai.v1.SearchAssetsResponse.
 * Use `create(SearchAssetsResponseSchema)` to create a new message.
 */
export const SearchAssetsResponseSchema: GenMessage<SearchAssetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 139);

/**
 * Response message for SearchIndexEndpoint.
 *
 * @generated from message google.cloud.visionai.v1.SearchIndexEndpointResponse
 */
export type SearchIndexEndpointResponse = Message<"google.cloud.visionai.v1.SearchIndexEndpointResponse"> & {
  /**
   * Returned search results.
   *
   * @generated from field: repeated google.cloud.visionai.v1.SearchResultItem search_result_items = 1;
   */
  searchResultItems: SearchResultItem[];

  /**
   * The next-page continuation token.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1.SearchIndexEndpointResponse.
 * Use `create(SearchIndexEndpointResponseSchema)` to create a new message.
 */
export const SearchIndexEndpointResponseSchema: GenMessage<SearchIndexEndpointResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 140);

/**
 * Integer range type.
 *
 * @generated from message google.cloud.visionai.v1.IntRange
 */
export type IntRange = Message<"google.cloud.visionai.v1.IntRange"> & {
  /**
   * Start of the int range.
   *
   * @generated from field: optional int64 start = 1;
   */
  start?: bigint;

  /**
   * End of the int range.
   *
   * @generated from field: optional int64 end = 2;
   */
  end?: bigint;
};

/**
 * Describes the message google.cloud.visionai.v1.IntRange.
 * Use `create(IntRangeSchema)` to create a new message.
 */
export const IntRangeSchema: GenMessage<IntRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 141);

/**
 * Float range type.
 *
 * @generated from message google.cloud.visionai.v1.FloatRange
 */
export type FloatRange = Message<"google.cloud.visionai.v1.FloatRange"> & {
  /**
   * Start of the float range.
   *
   * @generated from field: optional float start = 1;
   */
  start?: number;

  /**
   * End of the float range.
   *
   * @generated from field: optional float end = 2;
   */
  end?: number;
};

/**
 * Describes the message google.cloud.visionai.v1.FloatRange.
 * Use `create(FloatRangeSchema)` to create a new message.
 */
export const FloatRangeSchema: GenMessage<FloatRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 142);

/**
 * A list of string-type values.
 *
 * @generated from message google.cloud.visionai.v1.StringArray
 */
export type StringArray = Message<"google.cloud.visionai.v1.StringArray"> & {
  /**
   * String type values.
   *
   * @generated from field: repeated string txt_values = 1;
   */
  txtValues: string[];
};

/**
 * Describes the message google.cloud.visionai.v1.StringArray.
 * Use `create(StringArraySchema)` to create a new message.
 */
export const StringArraySchema: GenMessage<StringArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 143);

/**
 * A list of integer range values.
 *
 * @generated from message google.cloud.visionai.v1.IntRangeArray
 */
export type IntRangeArray = Message<"google.cloud.visionai.v1.IntRangeArray"> & {
  /**
   * Int range values.
   *
   * @generated from field: repeated google.cloud.visionai.v1.IntRange int_ranges = 1;
   */
  intRanges: IntRange[];
};

/**
 * Describes the message google.cloud.visionai.v1.IntRangeArray.
 * Use `create(IntRangeArraySchema)` to create a new message.
 */
export const IntRangeArraySchema: GenMessage<IntRangeArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 144);

/**
 * A list of float range values.
 *
 * @generated from message google.cloud.visionai.v1.FloatRangeArray
 */
export type FloatRangeArray = Message<"google.cloud.visionai.v1.FloatRangeArray"> & {
  /**
   * Float range values.
   *
   * @generated from field: repeated google.cloud.visionai.v1.FloatRange float_ranges = 1;
   */
  floatRanges: FloatRange[];
};

/**
 * Describes the message google.cloud.visionai.v1.FloatRangeArray.
 * Use `create(FloatRangeArraySchema)` to create a new message.
 */
export const FloatRangeArraySchema: GenMessage<FloatRangeArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 145);

/**
 * Datetime range type.
 *
 * @generated from message google.cloud.visionai.v1.DateTimeRange
 */
export type DateTimeRange = Message<"google.cloud.visionai.v1.DateTimeRange"> & {
  /**
   * Start date time.
   *
   * @generated from field: google.type.DateTime start = 1;
   */
  start?: DateTime;

  /**
   * End data time.
   *
   * @generated from field: google.type.DateTime end = 2;
   */
  end?: DateTime;
};

/**
 * Describes the message google.cloud.visionai.v1.DateTimeRange.
 * Use `create(DateTimeRangeSchema)` to create a new message.
 */
export const DateTimeRangeSchema: GenMessage<DateTimeRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 146);

/**
 * A list of datetime range values.
 *
 * @generated from message google.cloud.visionai.v1.DateTimeRangeArray
 */
export type DateTimeRangeArray = Message<"google.cloud.visionai.v1.DateTimeRangeArray"> & {
  /**
   * Date time ranges.
   *
   * @generated from field: repeated google.cloud.visionai.v1.DateTimeRange date_time_ranges = 1;
   */
  dateTimeRanges: DateTimeRange[];
};

/**
 * Describes the message google.cloud.visionai.v1.DateTimeRangeArray.
 * Use `create(DateTimeRangeArraySchema)` to create a new message.
 */
export const DateTimeRangeArraySchema: GenMessage<DateTimeRangeArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 147);

/**
 * Representation of a circle area.
 *
 * @generated from message google.cloud.visionai.v1.CircleArea
 */
export type CircleArea = Message<"google.cloud.visionai.v1.CircleArea"> & {
  /**
   * Latitude of circle area's center. Degrees [-90 .. 90]
   *
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * Longitude of circle area's center. Degrees [-180 .. 180]
   *
   * @generated from field: double longitude = 2;
   */
  longitude: number;

  /**
   * Radius of the circle area in meters.
   *
   * @generated from field: double radius_meter = 3;
   */
  radiusMeter: number;
};

/**
 * Describes the message google.cloud.visionai.v1.CircleArea.
 * Use `create(CircleAreaSchema)` to create a new message.
 */
export const CircleAreaSchema: GenMessage<CircleArea> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 148);

/**
 * A list of locations.
 *
 * @generated from message google.cloud.visionai.v1.GeoLocationArray
 */
export type GeoLocationArray = Message<"google.cloud.visionai.v1.GeoLocationArray"> & {
  /**
   * A list of circle areas.
   *
   * @generated from field: repeated google.cloud.visionai.v1.CircleArea circle_areas = 1;
   */
  circleAreas: CircleArea[];
};

/**
 * Describes the message google.cloud.visionai.v1.GeoLocationArray.
 * Use `create(GeoLocationArraySchema)` to create a new message.
 */
export const GeoLocationArraySchema: GenMessage<GeoLocationArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 149);

/**
 * @generated from message google.cloud.visionai.v1.BoolValue
 */
export type BoolValue = Message<"google.cloud.visionai.v1.BoolValue"> & {
  /**
   * @generated from field: bool value = 1;
   */
  value: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1.BoolValue.
 * Use `create(BoolValueSchema)` to create a new message.
 */
export const BoolValueSchema: GenMessage<BoolValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 150);

/**
 * Filter criteria applied to current search results.
 *
 * @generated from message google.cloud.visionai.v1.Criteria
 */
export type Criteria = Message<"google.cloud.visionai.v1.Criteria"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1.Criteria.value
   */
  value: {
    /**
     * The text values associated with the field.
     *
     * @generated from field: google.cloud.visionai.v1.StringArray text_array = 2;
     */
    value: StringArray;
    case: "textArray";
  } | {
    /**
     * The integer ranges associated with the field.
     *
     * @generated from field: google.cloud.visionai.v1.IntRangeArray int_range_array = 3;
     */
    value: IntRangeArray;
    case: "intRangeArray";
  } | {
    /**
     * The float ranges associated with the field.
     *
     * @generated from field: google.cloud.visionai.v1.FloatRangeArray float_range_array = 4;
     */
    value: FloatRangeArray;
    case: "floatRangeArray";
  } | {
    /**
     * The datetime ranges associated with the field.
     *
     * @generated from field: google.cloud.visionai.v1.DateTimeRangeArray date_time_range_array = 5;
     */
    value: DateTimeRangeArray;
    case: "dateTimeRangeArray";
  } | {
    /**
     * Geo Location array.
     *
     * @generated from field: google.cloud.visionai.v1.GeoLocationArray geo_location_array = 6;
     */
    value: GeoLocationArray;
    case: "geoLocationArray";
  } | {
    /**
     * A Boolean value.
     *
     * @generated from field: google.cloud.visionai.v1.BoolValue bool_value = 7;
     */
    value: BoolValue;
    case: "boolValue";
  } | { case: undefined; value?: undefined };

  /**
   * The UGA field or ML field to apply filtering criteria.
   *
   * @generated from field: string field = 1;
   */
  field: string;

  /**
   * If true, return query matched annotations for this criteria.
   * This option is only applicable for inclusion criteria, i.e., not exclusion
   * criteria, with partition level annotations.  It supports the following data
   * types:
   *  - INTEGER
   *  - FLOAT
   *  - STRING (DataSchema.SearchStrategy.EXACT_SEARCH only)
   *  - BOOLEAN
   *
   * @generated from field: bool fetch_matched_annotations = 8;
   */
  fetchMatchedAnnotations: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1.Criteria.
 * Use `create(CriteriaSchema)` to create a new message.
 */
export const CriteriaSchema: GenMessage<Criteria> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 151);

/**
 * Partition to specify the partition in time and space for sub-asset level
 * annotation.
 *
 * @generated from message google.cloud.visionai.v1.Partition
 */
export type Partition = Message<"google.cloud.visionai.v1.Partition"> & {
  /**
   * Partition of asset in time.
   *
   * @generated from field: google.cloud.visionai.v1.Partition.TemporalPartition temporal_partition = 1;
   */
  temporalPartition?: Partition_TemporalPartition;

  /**
   * Partition of asset in space.
   *
   * @generated from field: google.cloud.visionai.v1.Partition.SpatialPartition spatial_partition = 2;
   */
  spatialPartition?: Partition_SpatialPartition;

  /**
   * Partition of asset in time.
   *
   * @generated from field: google.cloud.visionai.v1.Partition.RelativeTemporalPartition relative_temporal_partition = 3;
   */
  relativeTemporalPartition?: Partition_RelativeTemporalPartition;
};

/**
 * Describes the message google.cloud.visionai.v1.Partition.
 * Use `create(PartitionSchema)` to create a new message.
 */
export const PartitionSchema: GenMessage<Partition> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 152);

/**
 * Partition of asset in UTC Epoch time. Supported by STREAM_VIDEO corpus
 * type.
 *
 * @generated from message google.cloud.visionai.v1.Partition.TemporalPartition
 */
export type Partition_TemporalPartition = Message<"google.cloud.visionai.v1.Partition.TemporalPartition"> & {
  /**
   * Start time of the partition.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * End time of the partition.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.visionai.v1.Partition.TemporalPartition.
 * Use `create(Partition_TemporalPartitionSchema)` to create a new message.
 */
export const Partition_TemporalPartitionSchema: GenMessage<Partition_TemporalPartition> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 152, 0);

/**
 * Partition of asset in space.
 *
 * @generated from message google.cloud.visionai.v1.Partition.SpatialPartition
 */
export type Partition_SpatialPartition = Message<"google.cloud.visionai.v1.Partition.SpatialPartition"> & {
  /**
   * The minimum x coordinate value.
   *
   * @generated from field: optional int64 x_min = 1;
   */
  xMin?: bigint;

  /**
   * The minimum y coordinate value.
   *
   * @generated from field: optional int64 y_min = 2;
   */
  yMin?: bigint;

  /**
   * The maximum x coordinate value.
   *
   * @generated from field: optional int64 x_max = 3;
   */
  xMax?: bigint;

  /**
   * The maximum y coordinate value.
   *
   * @generated from field: optional int64 y_max = 4;
   */
  yMax?: bigint;
};

/**
 * Describes the message google.cloud.visionai.v1.Partition.SpatialPartition.
 * Use `create(Partition_SpatialPartitionSchema)` to create a new message.
 */
export const Partition_SpatialPartitionSchema: GenMessage<Partition_SpatialPartition> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 152, 1);

/**
 * Partition of asset in relative time. Supported by VIDEO_ON_DEMAND corpus
 * type.
 *
 * @generated from message google.cloud.visionai.v1.Partition.RelativeTemporalPartition
 */
export type Partition_RelativeTemporalPartition = Message<"google.cloud.visionai.v1.Partition.RelativeTemporalPartition"> & {
  /**
   * Start time offset of the partition.
   *
   * @generated from field: google.protobuf.Duration start_offset = 1;
   */
  startOffset?: Duration;

  /**
   * End time offset of the partition.
   *
   * @generated from field: google.protobuf.Duration end_offset = 2;
   */
  endOffset?: Duration;
};

/**
 * Describes the message google.cloud.visionai.v1.Partition.RelativeTemporalPartition.
 * Use `create(Partition_RelativeTemporalPartitionSchema)` to create a new message.
 */
export const Partition_RelativeTemporalPartitionSchema: GenMessage<Partition_RelativeTemporalPartition> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1_warehouse, 152, 2);

/**
 * Different types for a facet bucket.
 *
 * @generated from enum google.cloud.visionai.v1.FacetBucketType
 */
export enum FacetBucketType {
  /**
   * Unspecified type.
   *
   * @generated from enum value: FACET_BUCKET_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Value type.
   *
   * @generated from enum value: FACET_BUCKET_TYPE_VALUE = 1;
   */
  VALUE = 1,

  /**
   * Datetime type.
   *
   * @generated from enum value: FACET_BUCKET_TYPE_DATETIME = 2;
   */
  DATETIME = 2,

  /**
   * Fixed Range type.
   *
   * @generated from enum value: FACET_BUCKET_TYPE_FIXED_RANGE = 3;
   */
  FIXED_RANGE = 3,

  /**
   * Custom Range type.
   *
   * @generated from enum value: FACET_BUCKET_TYPE_CUSTOM_RANGE = 4;
   */
  CUSTOM_RANGE = 4,
}

/**
 * Describes the enum google.cloud.visionai.v1.FacetBucketType.
 */
export const FacetBucketTypeSchema: GenEnum<FacetBucketType> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1_warehouse, 0);

/**
 * Service that manages media content + metadata for streaming.
 *
 * @generated from service google.cloud.visionai.v1.Warehouse
 */
export const Warehouse: GenService<{
  /**
   * Creates an asset inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.CreateAsset
   */
  createAsset: {
    methodKind: "unary";
    input: typeof CreateAssetRequestSchema;
    output: typeof AssetSchema;
  },
  /**
   * Updates an asset inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UpdateAsset
   */
  updateAsset: {
    methodKind: "unary";
    input: typeof UpdateAssetRequestSchema;
    output: typeof AssetSchema;
  },
  /**
   * Reads an asset inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GetAsset
   */
  getAsset: {
    methodKind: "unary";
    input: typeof GetAssetRequestSchema;
    output: typeof AssetSchema;
  },
  /**
   * Lists an list of assets inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ListAssets
   */
  listAssets: {
    methodKind: "unary";
    input: typeof ListAssetsRequestSchema;
    output: typeof ListAssetsResponseSchema;
  },
  /**
   * Deletes asset inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.DeleteAsset
   */
  deleteAsset: {
    methodKind: "unary";
    input: typeof DeleteAssetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Upload asset by specifing the asset Cloud Storage uri.
   * For video warehouse, it requires users who call this API have read access
   * to the cloud storage file. Once it is uploaded, it can be retrieved by
   * GenerateRetrievalUrl API which by default, only can retrieve cloud storage
   * files from the same project of the warehouse. To allow retrieval cloud
   * storage files that are in a separate project, it requires to find the
   * vision ai service account (Go to IAM, check checkbox to show "Include
   * Google-provided role grants", search for "Cloud Vision AI Service Agent")
   * and grant the read access of the cloud storage files to that service
   * account.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UploadAsset
   */
  uploadAsset: {
    methodKind: "unary";
    input: typeof UploadAssetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Generates a signed url for downloading the asset.
   * For video warehouse, please see comment of UploadAsset about how to allow
   * retrieval of cloud storage files in a different project.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GenerateRetrievalUrl
   */
  generateRetrievalUrl: {
    methodKind: "unary";
    input: typeof GenerateRetrievalUrlRequestSchema;
    output: typeof GenerateRetrievalUrlResponseSchema;
  },
  /**
   * Analyze asset to power search capability.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.AnalyzeAsset
   */
  analyzeAsset: {
    methodKind: "unary";
    input: typeof AnalyzeAssetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Index one asset for search.
   * Supported corpus type: Corpus.Type.VIDEO_ON_DEMAND
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.IndexAsset
   */
  indexAsset: {
    methodKind: "unary";
    input: typeof IndexAssetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Remove one asset's index data for search.
   * Supported corpus type: Corpus.Type.VIDEO_ON_DEMAND
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.RemoveIndexAsset
   */
  removeIndexAsset: {
    methodKind: "unary";
    input: typeof RemoveIndexAssetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists assets inside an index.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ViewIndexedAssets
   */
  viewIndexedAssets: {
    methodKind: "unary";
    input: typeof ViewIndexedAssetsRequestSchema;
    output: typeof ViewIndexedAssetsResponseSchema;
  },
  /**
   * Creates an Index under the corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.CreateIndex
   */
  createIndex: {
    methodKind: "unary";
    input: typeof CreateIndexRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates an Index under the corpus.
   * Users can perform a metadata-only update or trigger a full index rebuild
   * with different update_mask values.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UpdateIndex
   */
  updateIndex: {
    methodKind: "unary";
    input: typeof UpdateIndexRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets the details of a single Index under a Corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GetIndex
   */
  getIndex: {
    methodKind: "unary";
    input: typeof GetIndexRequestSchema;
    output: typeof IndexSchema;
  },
  /**
   * List all Indexes in a given Corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ListIndexes
   */
  listIndexes: {
    methodKind: "unary";
    input: typeof ListIndexesRequestSchema;
    output: typeof ListIndexesResponseSchema;
  },
  /**
   * Delete a single Index. In order to delete an index, the caller must
   * make sure that it is not deployed to any index endpoint.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.DeleteIndex
   */
  deleteIndex: {
    methodKind: "unary";
    input: typeof DeleteIndexRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a corpus inside a project.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.CreateCorpus
   */
  createCorpus: {
    methodKind: "unary";
    input: typeof CreateCorpusRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets corpus details inside a project.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GetCorpus
   */
  getCorpus: {
    methodKind: "unary";
    input: typeof GetCorpusRequestSchema;
    output: typeof CorpusSchema;
  },
  /**
   * Updates a corpus in a project.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UpdateCorpus
   */
  updateCorpus: {
    methodKind: "unary";
    input: typeof UpdateCorpusRequestSchema;
    output: typeof CorpusSchema;
  },
  /**
   * Lists all corpora in a project.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ListCorpora
   */
  listCorpora: {
    methodKind: "unary";
    input: typeof ListCorporaRequestSchema;
    output: typeof ListCorporaResponseSchema;
  },
  /**
   * Deletes a corpus only if its empty.
   * Returns empty response.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.DeleteCorpus
   */
  deleteCorpus: {
    methodKind: "unary";
    input: typeof DeleteCorpusRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Analyzes a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.AnalyzeCorpus
   */
  analyzeCorpus: {
    methodKind: "unary";
    input: typeof AnalyzeCorpusRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates data schema inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.CreateDataSchema
   */
  createDataSchema: {
    methodKind: "unary";
    input: typeof CreateDataSchemaRequestSchema;
    output: typeof DataSchemaSchema;
  },
  /**
   * Updates data schema inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UpdateDataSchema
   */
  updateDataSchema: {
    methodKind: "unary";
    input: typeof UpdateDataSchemaRequestSchema;
    output: typeof DataSchemaSchema;
  },
  /**
   * Gets data schema inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GetDataSchema
   */
  getDataSchema: {
    methodKind: "unary";
    input: typeof GetDataSchemaRequestSchema;
    output: typeof DataSchemaSchema;
  },
  /**
   * Deletes data schema inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.DeleteDataSchema
   */
  deleteDataSchema: {
    methodKind: "unary";
    input: typeof DeleteDataSchemaRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists a list of data schemas inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ListDataSchemas
   */
  listDataSchemas: {
    methodKind: "unary";
    input: typeof ListDataSchemasRequestSchema;
    output: typeof ListDataSchemasResponseSchema;
  },
  /**
   * Creates annotation inside asset.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.CreateAnnotation
   */
  createAnnotation: {
    methodKind: "unary";
    input: typeof CreateAnnotationRequestSchema;
    output: typeof AnnotationSchema;
  },
  /**
   * Reads annotation inside asset.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GetAnnotation
   */
  getAnnotation: {
    methodKind: "unary";
    input: typeof GetAnnotationRequestSchema;
    output: typeof AnnotationSchema;
  },
  /**
   * Lists a list of annotations inside asset.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ListAnnotations
   */
  listAnnotations: {
    methodKind: "unary";
    input: typeof ListAnnotationsRequestSchema;
    output: typeof ListAnnotationsResponseSchema;
  },
  /**
   * Updates annotation inside asset.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UpdateAnnotation
   */
  updateAnnotation: {
    methodKind: "unary";
    input: typeof UpdateAnnotationRequestSchema;
    output: typeof AnnotationSchema;
  },
  /**
   * Deletes annotation inside asset.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.DeleteAnnotation
   */
  deleteAnnotation: {
    methodKind: "unary";
    input: typeof DeleteAnnotationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Ingests data for the asset. It is not allowed to ingest a data chunk which
   * is already expired according to TTL.
   * This method is only available via the gRPC API (not HTTP since
   * bi-directional streaming is not supported via HTTP).
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.IngestAsset
   */
  ingestAsset: {
    methodKind: "bidi_streaming";
    input: typeof IngestAssetRequestSchema;
    output: typeof IngestAssetResponseSchema;
  },
  /**
   * Supported by STREAM_VIDEO corpus type.
   * Generates clips for downloading. The api takes in a time range, and
   * generates a clip of the first content available after start_time and
   * before end_time, which may overflow beyond these bounds.
   * Returned clips are truncated if the total size of the clips are larger
   * than 100MB.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ClipAsset
   */
  clipAsset: {
    methodKind: "unary";
    input: typeof ClipAssetRequestSchema;
    output: typeof ClipAssetResponseSchema;
  },
  /**
   * Generates a uri for an HLS manifest. The api takes in a collection of time
   * ranges, and generates a URI for an HLS manifest that covers all the
   * requested time ranges.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GenerateHlsUri
   */
  generateHlsUri: {
    methodKind: "unary";
    input: typeof GenerateHlsUriRequestSchema;
    output: typeof GenerateHlsUriResponseSchema;
  },
  /**
   * Imports assets (images plus annotations) from a meta file on cloud storage.
   * Each row in the meta file is corresponding to an image (specified by a
   * cloud storage uri) and its annotations.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ImportAssets
   */
  importAssets: {
    methodKind: "unary";
    input: typeof ImportAssetsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a search configuration inside a corpus.
   *
   * Please follow the rules below to create a valid CreateSearchConfigRequest.
   * --- General Rules ---
   * 1. Request.search_config_id must not be associated with an existing
   *    SearchConfig.
   * 2. Request must contain at least one non-empty search_criteria_property or
   *    facet_property.
   * 3. mapped_fields must not be empty, and must map to existing UGA keys.
   * 4. All mapped_fields must be of the same type.
   * 5. All mapped_fields must share the same granularity.
   * 6. All mapped_fields must share the same semantic SearchConfig match
   *    options.
   * For property-specific rules, please reference the comments for
   * FacetProperty and SearchCriteriaProperty.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.CreateSearchConfig
   */
  createSearchConfig: {
    methodKind: "unary";
    input: typeof CreateSearchConfigRequestSchema;
    output: typeof SearchConfigSchema;
  },
  /**
   * Updates a search configuration inside a corpus.
   *
   * Please follow the rules below to create a valid UpdateSearchConfigRequest.
   * --- General Rules ---
   * 1. Request.search_configuration.name must already exist.
   * 2. Request must contain at least one non-empty search_criteria_property or
   * facet_property.
   * 3. mapped_fields must not be empty, and must map to existing UGA keys.
   * 4. All mapped_fields must be of the same type.
   * 5. All mapped_fields must share the same granularity.
   * 6. All mapped_fields must share the same semantic SearchConfig match
   *    options.
   * For property-specific rules, please reference the comments for
   * FacetProperty and SearchCriteriaProperty.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UpdateSearchConfig
   */
  updateSearchConfig: {
    methodKind: "unary";
    input: typeof UpdateSearchConfigRequestSchema;
    output: typeof SearchConfigSchema;
  },
  /**
   * Gets a search configuration inside a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GetSearchConfig
   */
  getSearchConfig: {
    methodKind: "unary";
    input: typeof GetSearchConfigRequestSchema;
    output: typeof SearchConfigSchema;
  },
  /**
   * Deletes a search configuration inside a corpus.
   *
   * For a DeleteSearchConfigRequest to be valid,
   * Request.search_configuration.name must already exist.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.DeleteSearchConfig
   */
  deleteSearchConfig: {
    methodKind: "unary";
    input: typeof DeleteSearchConfigRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists all search configurations inside a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ListSearchConfigs
   */
  listSearchConfigs: {
    methodKind: "unary";
    input: typeof ListSearchConfigsRequestSchema;
    output: typeof ListSearchConfigsResponseSchema;
  },
  /**
   * Creates a SearchHypernym inside a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.CreateSearchHypernym
   */
  createSearchHypernym: {
    methodKind: "unary";
    input: typeof CreateSearchHypernymRequestSchema;
    output: typeof SearchHypernymSchema;
  },
  /**
   * Updates a SearchHypernym inside a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UpdateSearchHypernym
   */
  updateSearchHypernym: {
    methodKind: "unary";
    input: typeof UpdateSearchHypernymRequestSchema;
    output: typeof SearchHypernymSchema;
  },
  /**
   * Gets a SearchHypernym inside a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GetSearchHypernym
   */
  getSearchHypernym: {
    methodKind: "unary";
    input: typeof GetSearchHypernymRequestSchema;
    output: typeof SearchHypernymSchema;
  },
  /**
   * Deletes a SearchHypernym inside a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.DeleteSearchHypernym
   */
  deleteSearchHypernym: {
    methodKind: "unary";
    input: typeof DeleteSearchHypernymRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists SearchHypernyms inside a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ListSearchHypernyms
   */
  listSearchHypernyms: {
    methodKind: "unary";
    input: typeof ListSearchHypernymsRequestSchema;
    output: typeof ListSearchHypernymsResponseSchema;
  },
  /**
   * Search media asset.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.SearchAssets
   */
  searchAssets: {
    methodKind: "unary";
    input: typeof SearchAssetsRequestSchema;
    output: typeof SearchAssetsResponseSchema;
  },
  /**
   * Search a deployed index endpoint (IMAGE corpus type only).
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.SearchIndexEndpoint
   */
  searchIndexEndpoint: {
    methodKind: "unary";
    input: typeof SearchIndexEndpointRequestSchema;
    output: typeof SearchIndexEndpointResponseSchema;
  },
  /**
   * Creates an IndexEndpoint.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.CreateIndexEndpoint
   */
  createIndexEndpoint: {
    methodKind: "unary";
    input: typeof CreateIndexEndpointRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets an IndexEndpoint.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GetIndexEndpoint
   */
  getIndexEndpoint: {
    methodKind: "unary";
    input: typeof GetIndexEndpointRequestSchema;
    output: typeof IndexEndpointSchema;
  },
  /**
   * Lists all IndexEndpoints in a project.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ListIndexEndpoints
   */
  listIndexEndpoints: {
    methodKind: "unary";
    input: typeof ListIndexEndpointsRequestSchema;
    output: typeof ListIndexEndpointsResponseSchema;
  },
  /**
   * Updates an IndexEndpoint.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UpdateIndexEndpoint
   */
  updateIndexEndpoint: {
    methodKind: "unary";
    input: typeof UpdateIndexEndpointRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes an IndexEndpoint.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.DeleteIndexEndpoint
   */
  deleteIndexEndpoint: {
    methodKind: "unary";
    input: typeof DeleteIndexEndpointRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deploys an Index to IndexEndpoint.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.DeployIndex
   */
  deployIndex: {
    methodKind: "unary";
    input: typeof DeployIndexRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Undeploys an Index from IndexEndpoint.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UndeployIndex
   */
  undeployIndex: {
    methodKind: "unary";
    input: typeof UndeployIndexRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a collection.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.CreateCollection
   */
  createCollection: {
    methodKind: "unary";
    input: typeof CreateCollectionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a collection.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.DeleteCollection
   */
  deleteCollection: {
    methodKind: "unary";
    input: typeof DeleteCollectionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a collection.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.GetCollection
   */
  getCollection: {
    methodKind: "unary";
    input: typeof GetCollectionRequestSchema;
    output: typeof CollectionSchema;
  },
  /**
   * Updates a collection.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.UpdateCollection
   */
  updateCollection: {
    methodKind: "unary";
    input: typeof UpdateCollectionRequestSchema;
    output: typeof CollectionSchema;
  },
  /**
   * Lists collections inside a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ListCollections
   */
  listCollections: {
    methodKind: "unary";
    input: typeof ListCollectionsRequestSchema;
    output: typeof ListCollectionsResponseSchema;
  },
  /**
   * Adds an item into a Collection.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.AddCollectionItem
   */
  addCollectionItem: {
    methodKind: "unary";
    input: typeof AddCollectionItemRequestSchema;
    output: typeof AddCollectionItemResponseSchema;
  },
  /**
   * Removes an item from a collection.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.RemoveCollectionItem
   */
  removeCollectionItem: {
    methodKind: "unary";
    input: typeof RemoveCollectionItemRequestSchema;
    output: typeof RemoveCollectionItemResponseSchema;
  },
  /**
   * View items inside a collection.
   *
   * @generated from rpc google.cloud.visionai.v1.Warehouse.ViewCollectionItems
   */
  viewCollectionItems: {
    methodKind: "unary";
    input: typeof ViewCollectionItemsRequestSchema;
    output: typeof ViewCollectionItemsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_visionai_v1_warehouse, 0);

