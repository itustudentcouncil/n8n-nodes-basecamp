// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/visionai/v1alpha1/lva.proto (package google.cloud.visionai.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/visionai/v1alpha1/lva.proto.
 */
export const file_google_cloud_visionai_v1alpha1_lva: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvY2xvdWQvdmlzaW9uYWkvdjFhbHBoYTEvbHZhLnByb3RvEh5nb29nbGUuY2xvdWQudmlzaW9uYWkudjFhbHBoYTEiTQoOQXR0cmlidXRlVmFsdWUSCwoBaRgBIAEoA0gAEgsKAWYYAiABKAJIABILCgFiGAMgASgISAASCwoBcxgEIAEoDEgAQgcKBXZhbHVlIvIEChJBbmFseXplckRlZmluaXRpb24SEAoIYW5hbHl6ZXIYASABKAkSEAoIb3BlcmF0b3IYAiABKAkSTgoGaW5wdXRzGAMgAygLMj4uZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxYWxwaGExLkFuYWx5emVyRGVmaW5pdGlvbi5TdHJlYW1JbnB1dBJMCgVhdHRycxgEIAMoCzI9Lmdvb2dsZS5jbG91ZC52aXNpb25haS52MWFscGhhMS5BbmFseXplckRlZmluaXRpb24uQXR0cnNFbnRyeRJWCg1kZWJ1Z19vcHRpb25zGAUgASgLMj8uZ29vZ2xlLmNsb3VkLnZpc2lvbmFpLnYxYWxwaGExLkFuYWx5emVyRGVmaW5pdGlvbi5EZWJ1Z09wdGlvbnMaHAoLU3RyZWFtSW5wdXQSDQoFaW5wdXQYASABKAkaxQEKDERlYnVnT3B0aW9ucxJ4ChVlbnZpcm9ubWVudF92YXJpYWJsZXMYASADKAsyWS5nb29nbGUuY2xvdWQudmlzaW9uYWkudjFhbHBoYTEuQW5hbHl6ZXJEZWZpbml0aW9uLkRlYnVnT3B0aW9ucy5FbnZpcm9ubWVudFZhcmlhYmxlc0VudHJ5GjsKGUVudmlyb25tZW50VmFyaWFibGVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARpcCgpBdHRyc0VudHJ5EgsKA2tleRgBIAEoCRI9CgV2YWx1ZRgCIAEoCzIuLmdvb2dsZS5jbG91ZC52aXNpb25haS52MWFscGhhMS5BdHRyaWJ1dGVWYWx1ZToCOAEiWwoSQW5hbHlzaXNEZWZpbml0aW9uEkUKCWFuYWx5emVycxgBIAMoCzIyLmdvb2dsZS5jbG91ZC52aXNpb25haS52MWFscGhhMS5BbmFseXplckRlZmluaXRpb25C1gEKImNvbS5nb29nbGUuY2xvdWQudmlzaW9uYWkudjFhbHBoYTFCCEx2YVByb3RvUAFaPmNsb3VkLmdvb2dsZS5jb20vZ28vdmlzaW9uYWkvYXBpdjFhbHBoYTEvdmlzaW9uYWlwYjt2aXNpb25haXBiqgIeR29vZ2xlLkNsb3VkLlZpc2lvbkFJLlYxQWxwaGExygIeR29vZ2xlXENsb3VkXFZpc2lvbkFJXFYxYWxwaGEx6gIhR29vZ2xlOjpDbG91ZDo6VmlzaW9uQUk6OlYxYWxwaGExYgZwcm90bzM");

/**
 * Represents an actual value of an operator attribute.
 *
 * @generated from message google.cloud.visionai.v1alpha1.AttributeValue
 */
export type AttributeValue = Message<"google.cloud.visionai.v1alpha1.AttributeValue"> & {
  /**
   * Attribute value.
   *
   * @generated from oneof google.cloud.visionai.v1alpha1.AttributeValue.value
   */
  value: {
    /**
     * int.
     *
     * @generated from field: int64 i = 1;
     */
    value: bigint;
    case: "i";
  } | {
    /**
     * float.
     *
     * @generated from field: float f = 2;
     */
    value: number;
    case: "f";
  } | {
    /**
     * bool.
     *
     * @generated from field: bool b = 3;
     */
    value: boolean;
    case: "b";
  } | {
    /**
     * string.
     *
     * @generated from field: bytes s = 4;
     */
    value: Uint8Array;
    case: "s";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.AttributeValue.
 * Use `create(AttributeValueSchema)` to create a new message.
 */
export const AttributeValueSchema: GenMessage<AttributeValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_lva, 0);

/**
 * Defines an Analyzer.
 *
 * An analyzer processes data from its input streams using the logic defined in
 * the Operator that it represents. Of course, it produces data for the output
 * streams declared in the Operator.
 *
 * @generated from message google.cloud.visionai.v1alpha1.AnalyzerDefinition
 */
export type AnalyzerDefinition = Message<"google.cloud.visionai.v1alpha1.AnalyzerDefinition"> & {
  /**
   * The name of this analyzer.
   *
   * Tentatively [a-z][a-z0-9]*(_[a-z0-9]+)*.
   *
   * @generated from field: string analyzer = 1;
   */
  analyzer: string;

  /**
   * The name of the operator that this analyzer runs.
   *
   * Must match the name of a supported operator.
   *
   * @generated from field: string operator = 2;
   */
  operator: string;

  /**
   * Input streams.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.AnalyzerDefinition.StreamInput inputs = 3;
   */
  inputs: AnalyzerDefinition_StreamInput[];

  /**
   * The attribute values that this analyzer applies to the operator.
   *
   * Supply a mapping between the attribute names and the actual value you wish
   * to apply. If an attribute name is omitted, then it will take a
   * preconfigured default value.
   *
   * @generated from field: map<string, google.cloud.visionai.v1alpha1.AttributeValue> attrs = 4;
   */
  attrs: { [key: string]: AttributeValue };

  /**
   * Debug options.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.AnalyzerDefinition.DebugOptions debug_options = 5;
   */
  debugOptions?: AnalyzerDefinition_DebugOptions;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.AnalyzerDefinition.
 * Use `create(AnalyzerDefinitionSchema)` to create a new message.
 */
export const AnalyzerDefinitionSchema: GenMessage<AnalyzerDefinition> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_lva, 1);

/**
 * The inputs to this analyzer.
 *
 * We accept input name references of the following form:
 * <analyzer-name>:<output-argument-name>
 *
 * Example:
 *
 * Suppose you had an operator named "SomeOp" that has 2 output
 * arguments, the first of which is named "foo" and the second of which is
 * named "bar", and an operator named "MyOp" that accepts 2 inputs.
 *
 * Also suppose that there is an analyzer named "some-analyzer" that is
 * running "SomeOp" and another analyzer named "my-analyzer" running "MyOp".
 *
 * To indicate that "my-analyzer" is to consume "some-analyzer"'s "foo"
 * output as its first input and "some-analyzer"'s "bar" output as its
 * second input, you can set this field to the following:
 * input = ["some-analyzer:foo", "some-analyzer:bar"]
 *
 * @generated from message google.cloud.visionai.v1alpha1.AnalyzerDefinition.StreamInput
 */
export type AnalyzerDefinition_StreamInput = Message<"google.cloud.visionai.v1alpha1.AnalyzerDefinition.StreamInput"> & {
  /**
   * The name of the stream input (as discussed above).
   *
   * @generated from field: string input = 1;
   */
  input: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.AnalyzerDefinition.StreamInput.
 * Use `create(AnalyzerDefinition_StreamInputSchema)` to create a new message.
 */
export const AnalyzerDefinition_StreamInputSchema: GenMessage<AnalyzerDefinition_StreamInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_lva, 1, 0);

/**
 * Options available for debugging purposes only.
 *
 * @generated from message google.cloud.visionai.v1alpha1.AnalyzerDefinition.DebugOptions
 */
export type AnalyzerDefinition_DebugOptions = Message<"google.cloud.visionai.v1alpha1.AnalyzerDefinition.DebugOptions"> & {
  /**
   * Environment variables.
   *
   * @generated from field: map<string, string> environment_variables = 1;
   */
  environmentVariables: { [key: string]: string };
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.AnalyzerDefinition.DebugOptions.
 * Use `create(AnalyzerDefinition_DebugOptionsSchema)` to create a new message.
 */
export const AnalyzerDefinition_DebugOptionsSchema: GenMessage<AnalyzerDefinition_DebugOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_lva, 1, 1);

/**
 * Defines a full analysis.
 *
 * This is a description of the overall live analytics pipeline.
 * You may think of this as an edge list representation of a multigraph.
 *
 * This may be directly authored by a human in protobuf textformat, or it may be
 * generated by a programming API (perhaps Python or JavaScript depending on
 * context).
 *
 * @generated from message google.cloud.visionai.v1alpha1.AnalysisDefinition
 */
export type AnalysisDefinition = Message<"google.cloud.visionai.v1alpha1.AnalysisDefinition"> & {
  /**
   * Analyzer definitions.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.AnalyzerDefinition analyzers = 1;
   */
  analyzers: AnalyzerDefinition[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.AnalysisDefinition.
 * Use `create(AnalysisDefinitionSchema)` to create a new message.
 */
export const AnalysisDefinitionSchema: GenMessage<AnalysisDefinition> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_lva, 2);

