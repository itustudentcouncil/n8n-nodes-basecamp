// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/visionai/v1alpha1/warehouse.proto (package google.cloud.visionai.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Any, Duration, EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { DateTime } from "../../../type/datetime_pb";
import { file_google_type_datetime } from "../../../type/datetime_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/visionai/v1alpha1/warehouse.proto.
 */
export const file_google_cloud_visionai_v1alpha1_warehouse: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_any, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_rpc_status, file_google_type_datetime]);

/**
 * Request message for CreateAssetRequest.
 *
 * @generated from message google.cloud.visionai.v1alpha1.CreateAssetRequest
 */
export type CreateAssetRequest = Message<"google.cloud.visionai.v1alpha1.CreateAssetRequest"> & {
  /**
   * Required. The parent resource where this asset will be created.
   * Format: projects/*\/locations/*\/corpora/*
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The asset to create.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Asset asset = 2;
   */
  asset?: Asset;

  /**
   * Optional. The ID to use for the asset, which will become the final component of
   * the asset's resource name if user choose to specify. Otherwise, asset id
   * will be generated by system.
   *
   * This value should be up to 63 characters, and valid characters
   * are /[a-z][0-9]-/. The first character must be a letter, the last could be
   * a letter or a number.
   *
   * @generated from field: optional string asset_id = 3;
   */
  assetId?: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.CreateAssetRequest.
 * Use `create(CreateAssetRequestSchema)` to create a new message.
 */
export const CreateAssetRequestSchema: GenMessage<CreateAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 0);

/**
 * Request message for GetAsset.
 *
 * @generated from message google.cloud.visionai.v1alpha1.GetAssetRequest
 */
export type GetAssetRequest = Message<"google.cloud.visionai.v1alpha1.GetAssetRequest"> & {
  /**
   * Required. The name of the asset to retrieve.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.GetAssetRequest.
 * Use `create(GetAssetRequestSchema)` to create a new message.
 */
export const GetAssetRequestSchema: GenMessage<GetAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 1);

/**
 * Request message for ListAssets.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ListAssetsRequest
 */
export type ListAssetsRequest = Message<"google.cloud.visionai.v1alpha1.ListAssetsRequest"> & {
  /**
   * Required. The parent, which owns this collection of assets.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of assets to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 assets will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListAssets` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListAssets` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ListAssetsRequest.
 * Use `create(ListAssetsRequestSchema)` to create a new message.
 */
export const ListAssetsRequestSchema: GenMessage<ListAssetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 2);

/**
 * Response message for ListAssets.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ListAssetsResponse
 */
export type ListAssetsResponse = Message<"google.cloud.visionai.v1alpha1.ListAssetsResponse"> & {
  /**
   * The assets from the specified corpus.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.Asset assets = 1;
   */
  assets: Asset[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ListAssetsResponse.
 * Use `create(ListAssetsResponseSchema)` to create a new message.
 */
export const ListAssetsResponseSchema: GenMessage<ListAssetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 3);

/**
 * Response message for UpdateAsset.
 *
 * @generated from message google.cloud.visionai.v1alpha1.UpdateAssetRequest
 */
export type UpdateAssetRequest = Message<"google.cloud.visionai.v1alpha1.UpdateAssetRequest"> & {
  /**
   * Required. The asset to update.
   *
   * The asset's `name` field is used to identify the asset to be updated.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Asset asset = 1;
   */
  asset?: Asset;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.UpdateAssetRequest.
 * Use `create(UpdateAssetRequestSchema)` to create a new message.
 */
export const UpdateAssetRequestSchema: GenMessage<UpdateAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 4);

/**
 * Request message for DeleteAsset.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DeleteAssetRequest
 */
export type DeleteAssetRequest = Message<"google.cloud.visionai.v1alpha1.DeleteAssetRequest"> & {
  /**
   * Required. The name of the asset to delete.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DeleteAssetRequest.
 * Use `create(DeleteAssetRequestSchema)` to create a new message.
 */
export const DeleteAssetRequestSchema: GenMessage<DeleteAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 5);

/**
 * An asset is a resource in corpus. It represents a media object inside corpus,
 * contains metadata and another resource annotation. Different feature could be
 * applied to the asset to generate annotations. User could specified annotation
 * related to the target asset.
 *
 * @generated from message google.cloud.visionai.v1alpha1.Asset
 */
export type Asset = Message<"google.cloud.visionai.v1alpha1.Asset"> & {
  /**
   * Resource name of the asset.
   * Form:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The duration for which all media assets, associated metadata, and search
   * documents can exist. If not set, then it will using the default ttl in the
   * parent corpus resource.
   *
   * @generated from field: google.protobuf.Duration ttl = 2;
   */
  ttl?: Duration;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.Asset.
 * Use `create(AssetSchema)` to create a new message.
 */
export const AssetSchema: GenMessage<Asset> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 6);

/**
 * Request message of CreateCorpus API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.CreateCorpusRequest
 */
export type CreateCorpusRequest = Message<"google.cloud.visionai.v1alpha1.CreateCorpusRequest"> & {
  /**
   * Required. Form: `projects/{project_number}/locations/{location_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The corpus to be created.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Corpus corpus = 2;
   */
  corpus?: Corpus;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.CreateCorpusRequest.
 * Use `create(CreateCorpusRequestSchema)` to create a new message.
 */
export const CreateCorpusRequestSchema: GenMessage<CreateCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 7);

/**
 * Metadata for CreateCorpus API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.CreateCorpusMetadata
 */
export type CreateCorpusMetadata = Message<"google.cloud.visionai.v1alpha1.CreateCorpusMetadata"> & {
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.CreateCorpusMetadata.
 * Use `create(CreateCorpusMetadataSchema)` to create a new message.
 */
export const CreateCorpusMetadataSchema: GenMessage<CreateCorpusMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 8);

/**
 * Corpus is a set of video contents for management. Within a corpus, videos
 * share the same data schema. Search is also restricted within a single corpus.
 *
 * @generated from message google.cloud.visionai.v1alpha1.Corpus
 */
export type Corpus = Message<"google.cloud.visionai.v1alpha1.Corpus"> & {
  /**
   * Resource name of the corpus.
   * Form:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The corpus name to shown in the UI. The name can be up to 32 characters
   * long.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Optional. Description of the corpus. Can be up to 25000 characters long.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Required. The default TTL value for all assets under the corpus without a asset level
   * user-defined TTL with a maximum of 10 years. This is required for all
   * corpora.
   *
   * @generated from field: google.protobuf.Duration default_ttl = 5;
   */
  defaultTtl?: Duration;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.Corpus.
 * Use `create(CorpusSchema)` to create a new message.
 */
export const CorpusSchema: GenMessage<Corpus> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 9);

/**
 * Request message for GetCorpus.
 *
 * @generated from message google.cloud.visionai.v1alpha1.GetCorpusRequest
 */
export type GetCorpusRequest = Message<"google.cloud.visionai.v1alpha1.GetCorpusRequest"> & {
  /**
   * Required. The resource name of the corpus to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.GetCorpusRequest.
 * Use `create(GetCorpusRequestSchema)` to create a new message.
 */
export const GetCorpusRequestSchema: GenMessage<GetCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 10);

/**
 * Request message for UpdateCorpus.
 *
 * @generated from message google.cloud.visionai.v1alpha1.UpdateCorpusRequest
 */
export type UpdateCorpusRequest = Message<"google.cloud.visionai.v1alpha1.UpdateCorpusRequest"> & {
  /**
   * Required. The corpus which replaces the resource on the server.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Corpus corpus = 1;
   */
  corpus?: Corpus;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.UpdateCorpusRequest.
 * Use `create(UpdateCorpusRequestSchema)` to create a new message.
 */
export const UpdateCorpusRequestSchema: GenMessage<UpdateCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 11);

/**
 * Request message for ListCorpora.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ListCorporaRequest
 */
export type ListCorporaRequest = Message<"google.cloud.visionai.v1alpha1.ListCorporaRequest"> & {
  /**
   * Required. The resource name of the project from which to list corpora.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. API may return fewer results than requested.
   * If negative, INVALID_ARGUMENT error will be returned.
   * If unspecified or 0, API will pick a default size, which is 10.
   * If the requested page size is larger than the maximum size, API will pick
   * use the maximum size, which is 20.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results for the server to return.
   * Typically obtained via [ListCorpora.next_page_token][] of the previous
   * [Warehouse.ListCorpora][google.cloud.visionai.v1alpha1.Warehouse.ListCorpora] call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ListCorporaRequest.
 * Use `create(ListCorporaRequestSchema)` to create a new message.
 */
export const ListCorporaRequestSchema: GenMessage<ListCorporaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 12);

/**
 * Response message for ListCorpora.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ListCorporaResponse
 */
export type ListCorporaResponse = Message<"google.cloud.visionai.v1alpha1.ListCorporaResponse"> & {
  /**
   * The corpora in the project.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.Corpus corpora = 1;
   */
  corpora: Corpus[];

  /**
   * A token to retrieve next page of results.
   * Pass to [ListCorporaRequest.page_token][google.cloud.visionai.v1alpha1.ListCorporaRequest.page_token] to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ListCorporaResponse.
 * Use `create(ListCorporaResponseSchema)` to create a new message.
 */
export const ListCorporaResponseSchema: GenMessage<ListCorporaResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 13);

/**
 * Request message for DeleteCorpus.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DeleteCorpusRequest
 */
export type DeleteCorpusRequest = Message<"google.cloud.visionai.v1alpha1.DeleteCorpusRequest"> & {
  /**
   * Required. The resource name of the corpus to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DeleteCorpusRequest.
 * Use `create(DeleteCorpusRequestSchema)` to create a new message.
 */
export const DeleteCorpusRequestSchema: GenMessage<DeleteCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 14);

/**
 * Request message for CreateDataSchema.
 *
 * @generated from message google.cloud.visionai.v1alpha1.CreateDataSchemaRequest
 */
export type CreateDataSchemaRequest = Message<"google.cloud.visionai.v1alpha1.CreateDataSchemaRequest"> & {
  /**
   * Required. The parent resource where this data schema will be created.
   * Format: projects/*\/locations/*\/corpora/*
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The data schema to create.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.DataSchema data_schema = 2;
   */
  dataSchema?: DataSchema;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.CreateDataSchemaRequest.
 * Use `create(CreateDataSchemaRequestSchema)` to create a new message.
 */
export const CreateDataSchemaRequestSchema: GenMessage<CreateDataSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 15);

/**
 * Data schema indicates how the user specified annotation is interpreted in the
 * system.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DataSchema
 */
export type DataSchema = Message<"google.cloud.visionai.v1alpha1.DataSchema"> & {
  /**
   * Resource name of the data schema in the form of:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/dataSchemas/{data_schema}`
   * where {data_schema} part should be the same as the `key` field below.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The key of this data schema. This key should be matching the key of user
   * specified annotation and unique inside corpus. This value can be up to
   * 63 characters, and valid characters are /[a-z][0-9]-/. The first character
   * must be a letter, the last could be a letter or a number.
   *
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * The schema details mapping to the key.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.DataSchemaDetails schema_details = 3;
   */
  schemaDetails?: DataSchemaDetails;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DataSchema.
 * Use `create(DataSchemaSchema)` to create a new message.
 */
export const DataSchemaSchema: GenMessage<DataSchema> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 16);

/**
 * Data schema details indicates the data type and the data struct corresponding
 * to the key of user specified annotation.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DataSchemaDetails
 */
export type DataSchemaDetails = Message<"google.cloud.visionai.v1alpha1.DataSchemaDetails"> & {
  /**
   * Type of the annotation.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.DataSchemaDetails.DataType type = 1;
   */
  type: DataSchemaDetails_DataType;

  /**
   * Config for protobuf any type.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.DataSchemaDetails.ProtoAnyConfig proto_any_config = 6;
   */
  protoAnyConfig?: DataSchemaDetails_ProtoAnyConfig;

  /**
   * The granularity associated with this DataSchema.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.DataSchemaDetails.Granularity granularity = 5;
   */
  granularity: DataSchemaDetails_Granularity;

  /**
   * The search strategy to be applied on the `key` above.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.DataSchemaDetails.SearchStrategy search_strategy = 7;
   */
  searchStrategy?: DataSchemaDetails_SearchStrategy;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DataSchemaDetails.
 * Use `create(DataSchemaDetailsSchema)` to create a new message.
 */
export const DataSchemaDetailsSchema: GenMessage<DataSchemaDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 17);

/**
 * The configuration for `PROTO_ANY` data type.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DataSchemaDetails.ProtoAnyConfig
 */
export type DataSchemaDetails_ProtoAnyConfig = Message<"google.cloud.visionai.v1alpha1.DataSchemaDetails.ProtoAnyConfig"> & {
  /**
   * The type URI of the proto message.
   *
   * @generated from field: string type_uri = 1;
   */
  typeUri: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DataSchemaDetails.ProtoAnyConfig.
 * Use `create(DataSchemaDetails_ProtoAnyConfigSchema)` to create a new message.
 */
export const DataSchemaDetails_ProtoAnyConfigSchema: GenMessage<DataSchemaDetails_ProtoAnyConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 17, 0);

/**
 * The search strategy for annotations value of the `key`.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DataSchemaDetails.SearchStrategy
 */
export type DataSchemaDetails_SearchStrategy = Message<"google.cloud.visionai.v1alpha1.DataSchemaDetails.SearchStrategy"> & {
  /**
   * The type of search strategy to be applied on the `key` above.
   * The allowed `search_strategy_type` is different for different data types,
   * which is documented in the DataSchemaDetails.DataType. Specifying
   * unsupported `search_strategy_type` for data types will result in
   * INVALID_ARGUMENT error.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.DataSchemaDetails.SearchStrategy.SearchStrategyType search_strategy_type = 1;
   */
  searchStrategyType: DataSchemaDetails_SearchStrategy_SearchStrategyType;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DataSchemaDetails.SearchStrategy.
 * Use `create(DataSchemaDetails_SearchStrategySchema)` to create a new message.
 */
export const DataSchemaDetails_SearchStrategySchema: GenMessage<DataSchemaDetails_SearchStrategy> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 17, 1);

/**
 * The types of search strategies to be applied on the annotation key.
 *
 * @generated from enum google.cloud.visionai.v1alpha1.DataSchemaDetails.SearchStrategy.SearchStrategyType
 */
export enum DataSchemaDetails_SearchStrategy_SearchStrategyType {
  /**
   * Annotatation values of the `key` above will not be searchable.
   *
   * @generated from enum value: NO_SEARCH = 0;
   */
  NO_SEARCH = 0,

  /**
   * When searching with `key`, the value must be exactly as the annotation
   * value that has been ingested.
   *
   * @generated from enum value: EXACT_SEARCH = 1;
   */
  EXACT_SEARCH = 1,

  /**
   * When searching with `key`, Warehouse will perform broad search based on
   * semantic of the annotation value.
   *
   * @generated from enum value: SMART_SEARCH = 2;
   */
  SMART_SEARCH = 2,
}

/**
 * Describes the enum google.cloud.visionai.v1alpha1.DataSchemaDetails.SearchStrategy.SearchStrategyType.
 */
export const DataSchemaDetails_SearchStrategy_SearchStrategyTypeSchema: GenEnum<DataSchemaDetails_SearchStrategy_SearchStrategyType> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1alpha1_warehouse, 17, 1, 0);

/**
 * Data type of the annotation.
 *
 * @generated from enum google.cloud.visionai.v1alpha1.DataSchemaDetails.DataType
 */
export enum DataSchemaDetails_DataType {
  /**
   * Unspecified type.
   *
   * @generated from enum value: DATA_TYPE_UNSPECIFIED = 0;
   */
  DATA_TYPE_UNSPECIFIED = 0,

  /**
   * Integer type.
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH.
   *   Supports query by IntRangeArray.
   *
   * @generated from enum value: INTEGER = 1;
   */
  INTEGER = 1,

  /**
   * Float type.
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH.
   *   Supports query by FloatRangeArray.
   *
   * @generated from enum value: FLOAT = 2;
   */
  FLOAT = 2,

  /**
   * String type.
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH,
   * - DataSchema.SearchStrategy.SMART_SEARCH.
   *
   * @generated from enum value: STRING = 3;
   */
  STRING = 3,

  /**
   * Supported formats:
   * %Y-%m-%dT%H:%M:%E*S%E*z (absl::RFC3339_full)
   * %Y-%m-%dT%H:%M:%E*S
   * %Y-%m-%dT%H:%M%E*z
   * %Y-%m-%dT%H:%M
   * %Y-%m-%dT%H%E*z
   * %Y-%m-%dT%H
   * %Y-%m-%d%E*z
   * %Y-%m-%d
   * %Y-%m
   * %Y
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH.
   *   Supports query by DateTimeRangeArray.
   *
   * @generated from enum value: DATETIME = 5;
   */
  DATETIME = 5,

  /**
   * Geo coordinate type.
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH.
   *   Supports query by GeoLocationArray.
   *
   * @generated from enum value: GEO_COORDINATE = 7;
   */
  GEO_COORDINATE = 7,

  /**
   * Type to pass any proto as available in annotations.proto. Only use
   * internally.
   * Available proto types and its corresponding search behavior:
   * - ImageObjectDetectionPredictionResult, allows SMART_SEARCH on
   *   display_names and NO_SEARCH.
   * - ClassificationPredictionResult, allows SMART_SEARCH on display_names
   *   and NO_SEARCH.
   * - ImageSegmentationPredictionResult, allows NO_SEARCH.
   * - VideoActionRecognitionPredictionResult, allows SMART_SEARCH on
   *   display_name and NO_SEARCH.
   * - VideoObjectTrackingPredictionResult, allows SMART_SEARCH on
   *   display_name and NO_SEARCH.
   * - VideoClassificationPredictionResult, allows SMART_SEARCH on
   *   display_name and NO_SEARCH.
   * - OccupancyCountingPredictionResult, allows EXACT_SEARCH on
   *   stats.full_frame_count.count and NO_SEARCH.
   * - ObjectDetectionPredictionResult, allows SMART_SEARCH on
   *   identified_boxes.entity.label_string and NO_SEARCH.
   *
   * @generated from enum value: PROTO_ANY = 8;
   */
  PROTO_ANY = 8,

  /**
   * Boolean type.
   * Allowed search strategies:
   * - DataSchema.SearchStrategy.NO_SEARCH,
   * - DataSchema.SearchStrategy.EXACT_SEARCH.
   *
   * @generated from enum value: BOOLEAN = 9;
   */
  BOOLEAN = 9,
}

/**
 * Describes the enum google.cloud.visionai.v1alpha1.DataSchemaDetails.DataType.
 */
export const DataSchemaDetails_DataTypeSchema: GenEnum<DataSchemaDetails_DataType> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1alpha1_warehouse, 17, 0);

/**
 * The granularity of annotations under this DataSchema.
 *
 * @generated from enum google.cloud.visionai.v1alpha1.DataSchemaDetails.Granularity
 */
export enum DataSchemaDetails_Granularity {
  /**
   * Unspecified granularity.
   *
   * @generated from enum value: GRANULARITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Asset-level granularity (annotations must not contain partition info).
   *
   * @generated from enum value: GRANULARITY_ASSET_LEVEL = 1;
   */
  ASSET_LEVEL = 1,

  /**
   * Partition-level granularity (annotations must contain partition info).
   *
   * @generated from enum value: GRANULARITY_PARTITION_LEVEL = 2;
   */
  PARTITION_LEVEL = 2,
}

/**
 * Describes the enum google.cloud.visionai.v1alpha1.DataSchemaDetails.Granularity.
 */
export const DataSchemaDetails_GranularitySchema: GenEnum<DataSchemaDetails_Granularity> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1alpha1_warehouse, 17, 1);

/**
 * Request message for UpdateDataSchema.
 *
 * @generated from message google.cloud.visionai.v1alpha1.UpdateDataSchemaRequest
 */
export type UpdateDataSchemaRequest = Message<"google.cloud.visionai.v1alpha1.UpdateDataSchemaRequest"> & {
  /**
   * Required. The data schema's `name` field is used to identify the data schema to be
   * updated. Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/dataSchemas/{data_schema}
   *
   * @generated from field: google.cloud.visionai.v1alpha1.DataSchema data_schema = 1;
   */
  dataSchema?: DataSchema;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.UpdateDataSchemaRequest.
 * Use `create(UpdateDataSchemaRequestSchema)` to create a new message.
 */
export const UpdateDataSchemaRequestSchema: GenMessage<UpdateDataSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 18);

/**
 * Request message for GetDataSchema.
 *
 * @generated from message google.cloud.visionai.v1alpha1.GetDataSchemaRequest
 */
export type GetDataSchemaRequest = Message<"google.cloud.visionai.v1alpha1.GetDataSchemaRequest"> & {
  /**
   * Required. The name of the data schema to retrieve.
   * Format:
   * projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/dataSchemas/{data_schema_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.GetDataSchemaRequest.
 * Use `create(GetDataSchemaRequestSchema)` to create a new message.
 */
export const GetDataSchemaRequestSchema: GenMessage<GetDataSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 19);

/**
 * Request message for DeleteDataSchema.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DeleteDataSchemaRequest
 */
export type DeleteDataSchemaRequest = Message<"google.cloud.visionai.v1alpha1.DeleteDataSchemaRequest"> & {
  /**
   * Required. The name of the data schema to delete.
   * Format:
   * projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/dataSchemas/{data_schema_id}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DeleteDataSchemaRequest.
 * Use `create(DeleteDataSchemaRequestSchema)` to create a new message.
 */
export const DeleteDataSchemaRequestSchema: GenMessage<DeleteDataSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 20);

/**
 * Request message for ListDataSchemas.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ListDataSchemasRequest
 */
export type ListDataSchemasRequest = Message<"google.cloud.visionai.v1alpha1.ListDataSchemasRequest"> & {
  /**
   * Required. The parent, which owns this collection of data schemas.
   * Format:
   * projects/{project_number}/locations/{location_id}/corpora/{corpus_id}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of data schemas to return. The service may return fewer
   * than this value. If unspecified, at most 50 data schemas will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListDataSchemas` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListDataSchemas` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ListDataSchemasRequest.
 * Use `create(ListDataSchemasRequestSchema)` to create a new message.
 */
export const ListDataSchemasRequestSchema: GenMessage<ListDataSchemasRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 21);

/**
 * Response message for ListDataSchemas.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ListDataSchemasResponse
 */
export type ListDataSchemasResponse = Message<"google.cloud.visionai.v1alpha1.ListDataSchemasResponse"> & {
  /**
   * The data schemas from the specified corpus.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.DataSchema data_schemas = 1;
   */
  dataSchemas: DataSchema[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ListDataSchemasResponse.
 * Use `create(ListDataSchemasResponseSchema)` to create a new message.
 */
export const ListDataSchemasResponseSchema: GenMessage<ListDataSchemasResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 22);

/**
 * Request message for CreateAnnotation.
 *
 * @generated from message google.cloud.visionai.v1alpha1.CreateAnnotationRequest
 */
export type CreateAnnotationRequest = Message<"google.cloud.visionai.v1alpha1.CreateAnnotationRequest"> & {
  /**
   * Required. The parent resource where this annotation will be created.
   * Format: projects/*\/locations/*\/corpora/*\/assets/*
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The annotation to create.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Annotation annotation = 2;
   */
  annotation?: Annotation;

  /**
   * Optional. The ID to use for the annotation, which will become the final component of
   * the annotation's resource name if user choose to specify. Otherwise,
   * annotation id will be generated by system.
   *
   * This value should be up to 63 characters, and valid characters
   * are /[a-z][0-9]-/. The first character must be a letter, the last could be
   * a letter or a number.
   *
   * @generated from field: optional string annotation_id = 3;
   */
  annotationId?: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.CreateAnnotationRequest.
 * Use `create(CreateAnnotationRequestSchema)` to create a new message.
 */
export const CreateAnnotationRequestSchema: GenMessage<CreateAnnotationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 23);

/**
 * An annotation is a resource in asset. It represents a key-value mapping of
 * content in asset.
 *
 * @generated from message google.cloud.visionai.v1alpha1.Annotation
 */
export type Annotation = Message<"google.cloud.visionai.v1alpha1.Annotation"> & {
  /**
   * Resource name of the annotation.
   * Form:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}/annotations/{annotation}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * User provided annotation.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.UserSpecifiedAnnotation user_specified_annotation = 2;
   */
  userSpecifiedAnnotation?: UserSpecifiedAnnotation;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.Annotation.
 * Use `create(AnnotationSchema)` to create a new message.
 */
export const AnnotationSchema: GenMessage<Annotation> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 24);

/**
 * Annotation provided by users.
 *
 * @generated from message google.cloud.visionai.v1alpha1.UserSpecifiedAnnotation
 */
export type UserSpecifiedAnnotation = Message<"google.cloud.visionai.v1alpha1.UserSpecifiedAnnotation"> & {
  /**
   * Required. Key of the annotation. The key must be set with type by CreateDataSchema.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Value of the annotation. The value must be able to convert
   * to the type according to the data schema.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.AnnotationValue value = 2;
   */
  value?: AnnotationValue;

  /**
   * Partition information in time and space for the sub-asset level annotation.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Partition partition = 3;
   */
  partition?: Partition;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.UserSpecifiedAnnotation.
 * Use `create(UserSpecifiedAnnotationSchema)` to create a new message.
 */
export const UserSpecifiedAnnotationSchema: GenMessage<UserSpecifiedAnnotation> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 25);

/**
 * Location Coordinate Representation
 *
 * @generated from message google.cloud.visionai.v1alpha1.GeoCoordinate
 */
export type GeoCoordinate = Message<"google.cloud.visionai.v1alpha1.GeoCoordinate"> & {
  /**
   * Latitude Coordinate. Degrees [-90 .. 90]
   *
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * Longitude Coordinate. Degrees [-180 .. 180]
   *
   * @generated from field: double longitude = 2;
   */
  longitude: number;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.GeoCoordinate.
 * Use `create(GeoCoordinateSchema)` to create a new message.
 */
export const GeoCoordinateSchema: GenMessage<GeoCoordinate> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 26);

/**
 * Value of annotation, including all types available in data schema.
 *
 * @generated from message google.cloud.visionai.v1alpha1.AnnotationValue
 */
export type AnnotationValue = Message<"google.cloud.visionai.v1alpha1.AnnotationValue"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1alpha1.AnnotationValue.value
   */
  value: {
    /**
     * Value of int type annotation.
     *
     * @generated from field: int64 int_value = 1;
     */
    value: bigint;
    case: "intValue";
  } | {
    /**
     * Value of float type annotation.
     *
     * @generated from field: float float_value = 2;
     */
    value: number;
    case: "floatValue";
  } | {
    /**
     * Value of string type annotation.
     *
     * @generated from field: string str_value = 3;
     */
    value: string;
    case: "strValue";
  } | {
    /**
     * Value of date time type annotation.
     *
     * @generated from field: string datetime_value = 5;
     */
    value: string;
    case: "datetimeValue";
  } | {
    /**
     * Value of geo coordinate type annotation.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.GeoCoordinate geo_coordinate = 7;
     */
    value: GeoCoordinate;
    case: "geoCoordinate";
  } | {
    /**
     * Value of any proto value.
     *
     * @generated from field: google.protobuf.Any proto_any_value = 8;
     */
    value: Any;
    case: "protoAnyValue";
  } | {
    /**
     * Value of boolean type annotation.
     *
     * @generated from field: bool bool_value = 9;
     */
    value: boolean;
    case: "boolValue";
  } | {
    /**
     * Value of customized struct annotation.
     *
     * @generated from field: google.protobuf.Struct customized_struct_data_value = 10;
     */
    value: JsonObject;
    case: "customizedStructDataValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.AnnotationValue.
 * Use `create(AnnotationValueSchema)` to create a new message.
 */
export const AnnotationValueSchema: GenMessage<AnnotationValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 27);

/**
 * Request message for GetAnnotation API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ListAnnotationsRequest
 */
export type ListAnnotationsRequest = Message<"google.cloud.visionai.v1alpha1.ListAnnotationsRequest"> & {
  /**
   * The parent, which owns this collection of annotations.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of annotations to return. The service may return fewer
   * than this value. If unspecified, at most 50 annotations will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListAnnotations` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListAnnotations` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The filter applied to the returned list.
   * We only support filtering for the following fields:
   * `partition.temporal_partition.start_time`,
   * `partition.temporal_partition.end_time`, and `key`.
   * Timestamps are specified in the RFC-3339 format, and only one restriction
   * may be applied per field, joined by conjunctions.
   * Format:
   * "partition.temporal_partition.start_time > "2012-04-21T11:30:00-04:00" AND
   * partition.temporal_partition.end_time < "2012-04-22T11:30:00-04:00" AND
   * key = "example_key""
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ListAnnotationsRequest.
 * Use `create(ListAnnotationsRequestSchema)` to create a new message.
 */
export const ListAnnotationsRequestSchema: GenMessage<ListAnnotationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 28);

/**
 * Request message for ListAnnotations API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ListAnnotationsResponse
 */
export type ListAnnotationsResponse = Message<"google.cloud.visionai.v1alpha1.ListAnnotationsResponse"> & {
  /**
   * The annotations from the specified asset.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.Annotation annotations = 1;
   */
  annotations: Annotation[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ListAnnotationsResponse.
 * Use `create(ListAnnotationsResponseSchema)` to create a new message.
 */
export const ListAnnotationsResponseSchema: GenMessage<ListAnnotationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 29);

/**
 * Request message for GetAnnotation API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.GetAnnotationRequest
 */
export type GetAnnotationRequest = Message<"google.cloud.visionai.v1alpha1.GetAnnotationRequest"> & {
  /**
   * Required. The name of the annotation to retrieve.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}/annotations/{annotation}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.GetAnnotationRequest.
 * Use `create(GetAnnotationRequestSchema)` to create a new message.
 */
export const GetAnnotationRequestSchema: GenMessage<GetAnnotationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 30);

/**
 * Request message for UpdateAnnotation API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.UpdateAnnotationRequest
 */
export type UpdateAnnotationRequest = Message<"google.cloud.visionai.v1alpha1.UpdateAnnotationRequest"> & {
  /**
   * Required. The annotation to update.
   * The annotation's `name` field is used to identify the annotation to be
   * updated. Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}/annotations/{annotation}
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Annotation annotation = 1;
   */
  annotation?: Annotation;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.UpdateAnnotationRequest.
 * Use `create(UpdateAnnotationRequestSchema)` to create a new message.
 */
export const UpdateAnnotationRequestSchema: GenMessage<UpdateAnnotationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 31);

/**
 * Request message for DeleteAnnotation API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DeleteAnnotationRequest
 */
export type DeleteAnnotationRequest = Message<"google.cloud.visionai.v1alpha1.DeleteAnnotationRequest"> & {
  /**
   * Required. The name of the annotation to delete.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/assets/{asset}/annotations/{annotation}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DeleteAnnotationRequest.
 * Use `create(DeleteAnnotationRequestSchema)` to create a new message.
 */
export const DeleteAnnotationRequestSchema: GenMessage<DeleteAnnotationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 32);

/**
 * Request message for CreateSearchConfig.
 *
 * @generated from message google.cloud.visionai.v1alpha1.CreateSearchConfigRequest
 */
export type CreateSearchConfigRequest = Message<"google.cloud.visionai.v1alpha1.CreateSearchConfigRequest"> & {
  /**
   * Required. The parent resource where this search configuration will be created.
   * Format: projects/*\/locations/*\/corpora/*
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The search config to create.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.SearchConfig search_config = 2;
   */
  searchConfig?: SearchConfig;

  /**
   * Required. ID to use for the new search config. Will become the final component of the
   * SearchConfig's resource name. This value should be up to 63 characters, and
   * valid characters are /[a-z][0-9]-_/. The first character must be a letter,
   * the last could be a letter or a number.
   *
   * @generated from field: string search_config_id = 3;
   */
  searchConfigId: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.CreateSearchConfigRequest.
 * Use `create(CreateSearchConfigRequestSchema)` to create a new message.
 */
export const CreateSearchConfigRequestSchema: GenMessage<CreateSearchConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 33);

/**
 * Request message for UpdateSearchConfig.
 *
 * @generated from message google.cloud.visionai.v1alpha1.UpdateSearchConfigRequest
 */
export type UpdateSearchConfigRequest = Message<"google.cloud.visionai.v1alpha1.UpdateSearchConfigRequest"> & {
  /**
   * Required. The search configuration to update.
   *
   * The search configuration's `name` field is used to identify the resource to
   * be updated. Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/searchConfigs/{search_config}
   *
   * @generated from field: google.cloud.visionai.v1alpha1.SearchConfig search_config = 1;
   */
  searchConfig?: SearchConfig;

  /**
   * The list of fields to be updated. If left unset, all field paths will be
   * updated/overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.UpdateSearchConfigRequest.
 * Use `create(UpdateSearchConfigRequestSchema)` to create a new message.
 */
export const UpdateSearchConfigRequestSchema: GenMessage<UpdateSearchConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 34);

/**
 * Request message for GetSearchConfig.
 *
 * @generated from message google.cloud.visionai.v1alpha1.GetSearchConfigRequest
 */
export type GetSearchConfigRequest = Message<"google.cloud.visionai.v1alpha1.GetSearchConfigRequest"> & {
  /**
   * Required. The name of the search configuration to retrieve.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/searchConfigs/{search_config}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.GetSearchConfigRequest.
 * Use `create(GetSearchConfigRequestSchema)` to create a new message.
 */
export const GetSearchConfigRequestSchema: GenMessage<GetSearchConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 35);

/**
 * Request message for DeleteSearchConfig.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DeleteSearchConfigRequest
 */
export type DeleteSearchConfigRequest = Message<"google.cloud.visionai.v1alpha1.DeleteSearchConfigRequest"> & {
  /**
   * Required. The name of the search configuration to delete.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}/searchConfigs/{search_config}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DeleteSearchConfigRequest.
 * Use `create(DeleteSearchConfigRequestSchema)` to create a new message.
 */
export const DeleteSearchConfigRequestSchema: GenMessage<DeleteSearchConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 36);

/**
 * Request message for ListSearchConfigs.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ListSearchConfigsRequest
 */
export type ListSearchConfigsRequest = Message<"google.cloud.visionai.v1alpha1.ListSearchConfigsRequest"> & {
  /**
   * Required. The parent, which owns this collection of search configurations.
   * Format:
   * projects/{project_number}/locations/{location}/corpora/{corpus}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of search configurations to return. The service may
   * return fewer than this value. If unspecified, a page size of 50 will be
   * used. The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListSearchConfigs` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListSearchConfigs` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ListSearchConfigsRequest.
 * Use `create(ListSearchConfigsRequestSchema)` to create a new message.
 */
export const ListSearchConfigsRequestSchema: GenMessage<ListSearchConfigsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 37);

/**
 * Response message for ListSearchConfigs.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ListSearchConfigsResponse
 */
export type ListSearchConfigsResponse = Message<"google.cloud.visionai.v1alpha1.ListSearchConfigsResponse"> & {
  /**
   * The search configurations from the specified corpus.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.SearchConfig search_configs = 1;
   */
  searchConfigs: SearchConfig[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ListSearchConfigsResponse.
 * Use `create(ListSearchConfigsResponseSchema)` to create a new message.
 */
export const ListSearchConfigsResponseSchema: GenMessage<ListSearchConfigsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 38);

/**
 * SearchConfig stores different properties that will affect search
 * behaviors and search results.
 *
 * @generated from message google.cloud.visionai.v1alpha1.SearchConfig
 */
export type SearchConfig = Message<"google.cloud.visionai.v1alpha1.SearchConfig"> & {
  /**
   * Resource name of the search configuration.
   * For CustomSearchCriteria, search_config would be the search
   * operator name. For Facets, search_config would be the facet
   * dimension name.
   * Form:
   * `projects/{project_number}/locations/{location}/corpora/{corpus}/searchConfigs/{search_config}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Establishes a FacetDimension and associated specifications.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.FacetProperty facet_property = 2;
   */
  facetProperty?: FacetProperty;

  /**
   * Creates a mapping between a custom SearchCriteria and one or more UGA keys.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.SearchCriteriaProperty search_criteria_property = 3;
   */
  searchCriteriaProperty?: SearchCriteriaProperty;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.SearchConfig.
 * Use `create(SearchConfigSchema)` to create a new message.
 */
export const SearchConfigSchema: GenMessage<SearchConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 39);

/**
 * Central configuration for a facet.
 *
 * @generated from message google.cloud.visionai.v1alpha1.FacetProperty
 */
export type FacetProperty = Message<"google.cloud.visionai.v1alpha1.FacetProperty"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1alpha1.FacetProperty.range_facet_config
   */
  rangeFacetConfig: {
    /**
     * Fixed range facet bucket config.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.FacetProperty.FixedRangeBucketSpec fixed_range_bucket_spec = 5;
     */
    value: FacetProperty_FixedRangeBucketSpec;
    case: "fixedRangeBucketSpec";
  } | {
    /**
     * Custom range facet bucket config.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.FacetProperty.CustomRangeBucketSpec custom_range_bucket_spec = 6;
     */
    value: FacetProperty_CustomRangeBucketSpec;
    case: "customRangeBucketSpec";
  } | {
    /**
     * Datetime range facet bucket config.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.FacetProperty.DateTimeBucketSpec datetime_bucket_spec = 7;
     */
    value: FacetProperty_DateTimeBucketSpec;
    case: "datetimeBucketSpec";
  } | { case: undefined; value?: undefined };

  /**
   * Name of the facets, which are the dimensions users want to use to refine
   * search results. `mapped_fields` will match UserSpecifiedDataSchema keys.
   *
   * For example, user can add a bunch of UGAs with the same key, such as
   * player:adam, player:bob, player:charles. When multiple mapped_fields are
   * specified, will merge their value together as final facet value. E.g.
   * home_team: a, home_team:b, away_team:a, away_team:c, when facet_field =
   * [home_team, away_team], facet_value will be [a, b, c].
   *
   * UNLESS this is a 1:1 facet dimension (mapped_fields.size() == 1) AND the
   * mapped_field equals the parent SearchConfig.name, the parent must
   * also contain a SearchCriteriaProperty that maps to the same fields.
   * mapped_fields must not be empty.
   *
   * @generated from field: repeated string mapped_fields = 1;
   */
  mappedFields: string[];

  /**
   * Display name of the facet. To be used by UI for facet rendering.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Maximum number of unique bucket to return for one facet. Bucket number can
   * be large for high-cardinality facet such as "player". We only return top-n
   * most related ones to user. If it's <= 0, the server will decide the
   * appropriate result_size.
   *
   * @generated from field: int64 result_size = 3;
   */
  resultSize: bigint;

  /**
   * Facet bucket type e.g. value, range.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.FacetBucketType bucket_type = 4;
   */
  bucketType: FacetBucketType;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.FacetProperty.
 * Use `create(FacetPropertySchema)` to create a new message.
 */
export const FacetPropertySchema: GenMessage<FacetProperty> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 40);

/**
 * If bucket type is FIXED_RANGE, specify how values are bucketized. Use
 * FixedRangeBucketSpec when you want to create multiple buckets with equal
 * granularities. Using integer bucket value as an example, when
 * bucket_start = 0, bucket_granularity = 10, bucket_count = 5, this facet
 * will be aggregated via the following buckets:
 * [-inf, 0), [0, 10), [10, 20), [20, 30), [30, inf).
 * Notably, bucket_count <= 1 is an invalid spec.
 *
 * @generated from message google.cloud.visionai.v1alpha1.FacetProperty.FixedRangeBucketSpec
 */
export type FacetProperty_FixedRangeBucketSpec = Message<"google.cloud.visionai.v1alpha1.FacetProperty.FixedRangeBucketSpec"> & {
  /**
   * Lower bound of the bucket. NOTE: Only integer type is currently supported
   * for this field.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.FacetValue bucket_start = 1;
   */
  bucketStart?: FacetValue;

  /**
   * Bucket granularity. NOTE: Only integer type is currently supported for
   * this field.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.FacetValue bucket_granularity = 2;
   */
  bucketGranularity?: FacetValue;

  /**
   * Total number of buckets.
   *
   * @generated from field: int32 bucket_count = 3;
   */
  bucketCount: number;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.FacetProperty.FixedRangeBucketSpec.
 * Use `create(FacetProperty_FixedRangeBucketSpecSchema)` to create a new message.
 */
export const FacetProperty_FixedRangeBucketSpecSchema: GenMessage<FacetProperty_FixedRangeBucketSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 40, 0);

/**
 * If bucket type is CUSTOM_RANGE, specify how values are bucketized. Use
 * integer bucket value as an example, when the endpoints are 0, 10, 100, and
 * 1000, we will generate the following facets:
 * [-inf, 0), [0, 10), [10, 100), [100, 1000), [1000, inf).
 * Notably:
 * - endpoints must be listed in ascending order. Otherwise, the SearchConfig
 *   API will reject the facet config.
 * - < 1 endpoints is an invalid spec.
 *
 * @generated from message google.cloud.visionai.v1alpha1.FacetProperty.CustomRangeBucketSpec
 */
export type FacetProperty_CustomRangeBucketSpec = Message<"google.cloud.visionai.v1alpha1.FacetProperty.CustomRangeBucketSpec"> & {
  /**
   * Currently, only integer type is supported for this field.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.FacetValue endpoints = 1;
   */
  endpoints: FacetValue[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.FacetProperty.CustomRangeBucketSpec.
 * Use `create(FacetProperty_CustomRangeBucketSpecSchema)` to create a new message.
 */
export const FacetProperty_CustomRangeBucketSpecSchema: GenMessage<FacetProperty_CustomRangeBucketSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 40, 1);

/**
 * If bucket type is DATE, specify how date values are bucketized.
 *
 * @generated from message google.cloud.visionai.v1alpha1.FacetProperty.DateTimeBucketSpec
 */
export type FacetProperty_DateTimeBucketSpec = Message<"google.cloud.visionai.v1alpha1.FacetProperty.DateTimeBucketSpec"> & {
  /**
   * Granularity of date type facet.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.FacetProperty.DateTimeBucketSpec.Granularity granularity = 1;
   */
  granularity: FacetProperty_DateTimeBucketSpec_Granularity;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.FacetProperty.DateTimeBucketSpec.
 * Use `create(FacetProperty_DateTimeBucketSpecSchema)` to create a new message.
 */
export const FacetProperty_DateTimeBucketSpecSchema: GenMessage<FacetProperty_DateTimeBucketSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 40, 2);

/**
 * Granularity enum for the datetime bucket.
 *
 * @generated from enum google.cloud.visionai.v1alpha1.FacetProperty.DateTimeBucketSpec.Granularity
 */
export enum FacetProperty_DateTimeBucketSpec_Granularity {
  /**
   * Unspecified granularity.
   *
   * @generated from enum value: GRANULARITY_UNSPECIFIED = 0;
   */
  GRANULARITY_UNSPECIFIED = 0,

  /**
   * Granularity is year.
   *
   * @generated from enum value: YEAR = 1;
   */
  YEAR = 1,

  /**
   * Granularity is month.
   *
   * @generated from enum value: MONTH = 2;
   */
  MONTH = 2,

  /**
   * Granularity is day.
   *
   * @generated from enum value: DAY = 3;
   */
  DAY = 3,
}

/**
 * Describes the enum google.cloud.visionai.v1alpha1.FacetProperty.DateTimeBucketSpec.Granularity.
 */
export const FacetProperty_DateTimeBucketSpec_GranularitySchema: GenEnum<FacetProperty_DateTimeBucketSpec_Granularity> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1alpha1_warehouse, 40, 2, 0);

/**
 * Central configuration for custom search criteria.
 *
 * @generated from message google.cloud.visionai.v1alpha1.SearchCriteriaProperty
 */
export type SearchCriteriaProperty = Message<"google.cloud.visionai.v1alpha1.SearchCriteriaProperty"> & {
  /**
   * Each mapped_field corresponds to a UGA key. To understand how this property
   * works, take the following example. In the SearchConfig table, the
   * user adds this entry:
   *   search_config {
   *     name: "person"
   *     search_criteria_property {
   *       mapped_fields: "player"
   *       mapped_fields: "coach"
   *     }
   *   }
   *
   * Now, when a user issues a query like:
   *   criteria {
   *     field: "person"
   *     text_array {
   *       txt_values: "Tom Brady"
   *       txt_values: "Bill Belichick"
   *     }
   *   }
   *
   * MWH search will return search documents where (player=Tom Brady ||
   * coach=Tom Brady || player=Bill Belichick || coach=Bill Belichick).
   *
   * @generated from field: repeated string mapped_fields = 1;
   */
  mappedFields: string[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.SearchCriteriaProperty.
 * Use `create(SearchCriteriaPropertySchema)` to create a new message.
 */
export const SearchCriteriaPropertySchema: GenMessage<SearchCriteriaProperty> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 41);

/**
 * Definition of a single value with generic type.
 *
 * @generated from message google.cloud.visionai.v1alpha1.FacetValue
 */
export type FacetValue = Message<"google.cloud.visionai.v1alpha1.FacetValue"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1alpha1.FacetValue.value
   */
  value: {
    /**
     * String type value.
     *
     * @generated from field: string string_value = 1;
     */
    value: string;
    case: "stringValue";
  } | {
    /**
     * Integer type value.
     *
     * @generated from field: int64 integer_value = 2;
     */
    value: bigint;
    case: "integerValue";
  } | {
    /**
     * Datetime type value.
     *
     * @generated from field: google.type.DateTime datetime_value = 3;
     */
    value: DateTime;
    case: "datetimeValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.FacetValue.
 * Use `create(FacetValueSchema)` to create a new message.
 */
export const FacetValueSchema: GenMessage<FacetValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 42);

/**
 * Holds the facet value, selections state, and metadata.
 *
 * @generated from message google.cloud.visionai.v1alpha1.FacetBucket
 */
export type FacetBucket = Message<"google.cloud.visionai.v1alpha1.FacetBucket"> & {
  /**
   * Bucket associated with a facet. For example, bucket of facet “team”
   * can be "49ers", "patriots", etc; bucket of facet "player" can be "tom
   * brady", "drew brees", etc.
   *
   * @generated from oneof google.cloud.visionai.v1alpha1.FacetBucket.bucket_value
   */
  bucketValue: {
    /**
     * Singular value.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.FacetValue value = 2;
     */
    value: FacetValue;
    case: "value";
  } | {
    /**
     * Range value.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.FacetBucket.Range range = 4;
     */
    value: FacetBucket_Range;
    case: "range";
  } | { case: undefined; value?: undefined };

  /**
   * Whether one facet bucket is selected. This field represents user's facet
   * selection. It is set by frontend in SearchVideosRequest.
   *
   * @generated from field: bool selected = 3;
   */
  selected: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.FacetBucket.
 * Use `create(FacetBucketSchema)` to create a new message.
 */
export const FacetBucketSchema: GenMessage<FacetBucket> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 43);

/**
 * The range of values [start, end) for which faceting is applied.
 *
 * @generated from message google.cloud.visionai.v1alpha1.FacetBucket.Range
 */
export type FacetBucket_Range = Message<"google.cloud.visionai.v1alpha1.FacetBucket.Range"> & {
  /**
   * Start of the range. Non-existence indicates some bound (e.g. -inf).
   *
   * @generated from field: google.cloud.visionai.v1alpha1.FacetValue start = 1;
   */
  start?: FacetValue;

  /**
   * End of the range. Non-existence indicates some bound (e.g. inf).
   *
   * @generated from field: google.cloud.visionai.v1alpha1.FacetValue end = 2;
   */
  end?: FacetValue;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.FacetBucket.Range.
 * Use `create(FacetBucket_RangeSchema)` to create a new message.
 */
export const FacetBucket_RangeSchema: GenMessage<FacetBucket_Range> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 43, 0);

/**
 * A group of facet buckets to be passed back and forth between backend &
 * frontend.
 *
 * @generated from message google.cloud.visionai.v1alpha1.FacetGroup
 */
export type FacetGroup = Message<"google.cloud.visionai.v1alpha1.FacetGroup"> & {
  /**
   * Unique id of the facet group.
   *
   * @generated from field: string facet_id = 1;
   */
  facetId: string;

  /**
   * Display name of the facet. To be used by UI for facet rendering.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Buckets associated with the facet. E.g. for "Team" facet, the bucket
   * can be 49ers, patriots, etc.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.FacetBucket buckets = 3;
   */
  buckets: FacetBucket[];

  /**
   * Facet bucket type.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.FacetBucketType bucket_type = 4;
   */
  bucketType: FacetBucketType;

  /**
   * If true, return query matched annotations for this facet group's selection.
   * This option is only applicable for facets based on partition level
   * annotations. It supports the following facet values:
   *  - INTEGER
   *  - STRING (DataSchema.SearchStrategy.EXACT_SEARCH only)
   *
   * @generated from field: bool fetch_matched_annotations = 5;
   */
  fetchMatchedAnnotations: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.FacetGroup.
 * Use `create(FacetGroupSchema)` to create a new message.
 */
export const FacetGroupSchema: GenMessage<FacetGroup> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 44);

/**
 * Request message for IngestAsset API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.IngestAssetRequest
 */
export type IngestAssetRequest = Message<"google.cloud.visionai.v1alpha1.IngestAssetRequest"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1alpha1.IngestAssetRequest.streaming_request
   */
  streamingRequest: {
    /**
     * Provides information for the data and the asset resource name that the
     * data belongs to. The first `IngestAssetRequest` message must only contain
     * a `Config` message.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.IngestAssetRequest.Config config = 1;
     */
    value: IngestAssetRequest_Config;
    case: "config";
  } | {
    /**
     * Data to be ingested.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.IngestAssetRequest.TimeIndexedData time_indexed_data = 2;
     */
    value: IngestAssetRequest_TimeIndexedData;
    case: "timeIndexedData";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.IngestAssetRequest.
 * Use `create(IngestAssetRequestSchema)` to create a new message.
 */
export const IngestAssetRequestSchema: GenMessage<IngestAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 45);

/**
 * Configuration for the data.
 *
 * @generated from message google.cloud.visionai.v1alpha1.IngestAssetRequest.Config
 */
export type IngestAssetRequest_Config = Message<"google.cloud.visionai.v1alpha1.IngestAssetRequest.Config"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1alpha1.IngestAssetRequest.Config.data_type
   */
  dataType: {
    /**
     * Type information for video data.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.IngestAssetRequest.Config.VideoType video_type = 2;
     */
    value: IngestAssetRequest_Config_VideoType;
    case: "videoType";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the asset that the ingested data belongs to.
   *
   * @generated from field: string asset = 1;
   */
  asset: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.IngestAssetRequest.Config.
 * Use `create(IngestAssetRequest_ConfigSchema)` to create a new message.
 */
export const IngestAssetRequest_ConfigSchema: GenMessage<IngestAssetRequest_Config> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 45, 0);

/**
 * Type information for video data.
 *
 * @generated from message google.cloud.visionai.v1alpha1.IngestAssetRequest.Config.VideoType
 */
export type IngestAssetRequest_Config_VideoType = Message<"google.cloud.visionai.v1alpha1.IngestAssetRequest.Config.VideoType"> & {
  /**
   * Container format of the video data.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.IngestAssetRequest.Config.VideoType.ContainerFormat container_format = 1;
   */
  containerFormat: IngestAssetRequest_Config_VideoType_ContainerFormat;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.IngestAssetRequest.Config.VideoType.
 * Use `create(IngestAssetRequest_Config_VideoTypeSchema)` to create a new message.
 */
export const IngestAssetRequest_Config_VideoTypeSchema: GenMessage<IngestAssetRequest_Config_VideoType> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 45, 0, 0);

/**
 * Container format of the video.
 *
 * @generated from enum google.cloud.visionai.v1alpha1.IngestAssetRequest.Config.VideoType.ContainerFormat
 */
export enum IngestAssetRequest_Config_VideoType_ContainerFormat {
  /**
   * The default type, not supposed to be used.
   *
   * @generated from enum value: CONTAINER_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Mp4 container format.
   *
   * @generated from enum value: CONTAINER_FORMAT_MP4 = 1;
   */
  MP4 = 1,
}

/**
 * Describes the enum google.cloud.visionai.v1alpha1.IngestAssetRequest.Config.VideoType.ContainerFormat.
 */
export const IngestAssetRequest_Config_VideoType_ContainerFormatSchema: GenEnum<IngestAssetRequest_Config_VideoType_ContainerFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1alpha1_warehouse, 45, 0, 0, 0);

/**
 * Contains the data and the corresponding time range this data is for.
 *
 * @generated from message google.cloud.visionai.v1alpha1.IngestAssetRequest.TimeIndexedData
 */
export type IngestAssetRequest_TimeIndexedData = Message<"google.cloud.visionai.v1alpha1.IngestAssetRequest.TimeIndexedData"> & {
  /**
   * Data to be ingested.
   *
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * Time range of the data.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Partition.TemporalPartition temporal_partition = 2;
   */
  temporalPartition?: Partition_TemporalPartition;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.IngestAssetRequest.TimeIndexedData.
 * Use `create(IngestAssetRequest_TimeIndexedDataSchema)` to create a new message.
 */
export const IngestAssetRequest_TimeIndexedDataSchema: GenMessage<IngestAssetRequest_TimeIndexedData> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 45, 1);

/**
 * Response message for IngestAsset API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.IngestAssetResponse
 */
export type IngestAssetResponse = Message<"google.cloud.visionai.v1alpha1.IngestAssetResponse"> & {
  /**
   * Time range of the data that has been successfully ingested.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Partition.TemporalPartition successfully_ingested_partition = 1;
   */
  successfullyIngestedPartition?: Partition_TemporalPartition;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.IngestAssetResponse.
 * Use `create(IngestAssetResponseSchema)` to create a new message.
 */
export const IngestAssetResponseSchema: GenMessage<IngestAssetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 46);

/**
 * Request message for ClipAsset API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ClipAssetRequest
 */
export type ClipAssetRequest = Message<"google.cloud.visionai.v1alpha1.ClipAssetRequest"> & {
  /**
   * Required. The resource name of the asset to request clips for.
   * Form:
   * 'projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}'
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The time range to request clips for.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Partition.TemporalPartition temporal_partition = 2;
   */
  temporalPartition?: Partition_TemporalPartition;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ClipAssetRequest.
 * Use `create(ClipAssetRequestSchema)` to create a new message.
 */
export const ClipAssetRequestSchema: GenMessage<ClipAssetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 47);

/**
 * Response message for ClipAsset API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ClipAssetResponse
 */
export type ClipAssetResponse = Message<"google.cloud.visionai.v1alpha1.ClipAssetResponse"> & {
  /**
   * A list of signed uris to download the video clips that cover the requested
   * time range ordered by time.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.ClipAssetResponse.TimeIndexedUri time_indexed_uris = 1;
   */
  timeIndexedUris: ClipAssetResponse_TimeIndexedUri[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ClipAssetResponse.
 * Use `create(ClipAssetResponseSchema)` to create a new message.
 */
export const ClipAssetResponseSchema: GenMessage<ClipAssetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 48);

/**
 * Signed uri with corresponding time range.
 *
 * @generated from message google.cloud.visionai.v1alpha1.ClipAssetResponse.TimeIndexedUri
 */
export type ClipAssetResponse_TimeIndexedUri = Message<"google.cloud.visionai.v1alpha1.ClipAssetResponse.TimeIndexedUri"> & {
  /**
   * Time range of the video that the uri is for.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Partition.TemporalPartition temporal_partition = 1;
   */
  temporalPartition?: Partition_TemporalPartition;

  /**
   * Signed uri to download the video clip.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.ClipAssetResponse.TimeIndexedUri.
 * Use `create(ClipAssetResponse_TimeIndexedUriSchema)` to create a new message.
 */
export const ClipAssetResponse_TimeIndexedUriSchema: GenMessage<ClipAssetResponse_TimeIndexedUri> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 48, 0);

/**
 * Request message for GenerateHlsUri API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.GenerateHlsUriRequest
 */
export type GenerateHlsUriRequest = Message<"google.cloud.visionai.v1alpha1.GenerateHlsUriRequest"> & {
  /**
   * Required. The resource name of the asset to request clips for.
   * Form:
   * 'projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}'
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The time range to request clips for.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.Partition.TemporalPartition temporal_partitions = 2;
   */
  temporalPartitions: Partition_TemporalPartition[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.GenerateHlsUriRequest.
 * Use `create(GenerateHlsUriRequestSchema)` to create a new message.
 */
export const GenerateHlsUriRequestSchema: GenMessage<GenerateHlsUriRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 49);

/**
 * Response message for GenerateHlsUri API.
 *
 * @generated from message google.cloud.visionai.v1alpha1.GenerateHlsUriResponse
 */
export type GenerateHlsUriResponse = Message<"google.cloud.visionai.v1alpha1.GenerateHlsUriResponse"> & {
  /**
   * A signed uri to download the HLS manifest corresponding to the requested
   * times.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * A list of temporal partitions of the content returned in the order they
   * appear in the stream.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.Partition.TemporalPartition temporal_partitions = 2;
   */
  temporalPartitions: Partition_TemporalPartition[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.GenerateHlsUriResponse.
 * Use `create(GenerateHlsUriResponseSchema)` to create a new message.
 */
export const GenerateHlsUriResponseSchema: GenMessage<GenerateHlsUriResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 50);

/**
 * Request message for SearchAssets.
 *
 * @generated from message google.cloud.visionai.v1alpha1.SearchAssetsRequest
 */
export type SearchAssetsRequest = Message<"google.cloud.visionai.v1alpha1.SearchAssetsRequest"> & {
  /**
   * Required. The parent corpus to search.
   * Form: `projects/{project_id}/locations/{location_id}/corpora/{corpus_id}'
   *
   * @generated from field: string corpus = 1;
   */
  corpus: string;

  /**
   * The number of results to be returned in this page. If it's 0, the server
   * will decide the appropriate page_size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The continuation token to fetch the next page. If empty, it means it is
   * fetching the first page.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Time ranges that matching video content must fall within. If no ranges are
   * provided, there will be no time restriction. This field is treated just
   * like the criteria below, but defined separately for convenience as it is
   * used frequently. Note that if the end_time is in the future, it will be
   * clamped to the time the request was received.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.DateTimeRangeArray content_time_ranges = 5;
   */
  contentTimeRanges?: DateTimeRangeArray;

  /**
   * Criteria applied to search results.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.Criteria criteria = 4;
   */
  criteria: Criteria[];

  /**
   * Stores most recent facet selection state. Only facet groups with user's
   * selection will be presented here. Selection state is either selected or
   * unselected. Only selected facet buckets will be used as search criteria.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.FacetGroup facet_selections = 6;
   */
  facetSelections: FacetGroup[];

  /**
   * A list of annotation keys to specify the annotations to be retrieved and
   * returned with each search result.
   * Annotation granularity must be GRANULARITY_ASSET_LEVEL and its search
   * strategy must not be NO_SEARCH.
   *
   * @generated from field: repeated string result_annotation_keys = 8;
   */
  resultAnnotationKeys: string[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.SearchAssetsRequest.
 * Use `create(SearchAssetsRequestSchema)` to create a new message.
 */
export const SearchAssetsRequestSchema: GenMessage<SearchAssetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 51);

/**
 * The metadata for DeleteAsset API that embeds in
 * [metadata][google.longrunning.Operation.metadata] field.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DeleteAssetMetadata
 */
export type DeleteAssetMetadata = Message<"google.cloud.visionai.v1alpha1.DeleteAssetMetadata"> & {
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DeleteAssetMetadata.
 * Use `create(DeleteAssetMetadataSchema)` to create a new message.
 */
export const DeleteAssetMetadataSchema: GenMessage<DeleteAssetMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 52);

/**
 * Stores the criteria-annotation matching results for each search result item.
 *
 * @generated from message google.cloud.visionai.v1alpha1.AnnotationMatchingResult
 */
export type AnnotationMatchingResult = Message<"google.cloud.visionai.v1alpha1.AnnotationMatchingResult"> & {
  /**
   * The criteria used for matching. It can be an input search criteria or a
   * criteria converted from a facet selection.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Criteria criteria = 1;
   */
  criteria?: Criteria;

  /**
   * Matched annotations for the criteria.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.Annotation matched_annotations = 2;
   */
  matchedAnnotations: Annotation[];

  /**
   * Status of the match result. Possible values:
   * FAILED_PRECONDITION - the criteria is not eligible for match.
   * OK - matching is performed.
   *
   * @generated from field: google.rpc.Status status = 3;
   */
  status?: Status;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.AnnotationMatchingResult.
 * Use `create(AnnotationMatchingResultSchema)` to create a new message.
 */
export const AnnotationMatchingResultSchema: GenMessage<AnnotationMatchingResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 53);

/**
 * Search result contains asset name and corresponding time ranges.
 *
 * @generated from message google.cloud.visionai.v1alpha1.SearchResultItem
 */
export type SearchResultItem = Message<"google.cloud.visionai.v1alpha1.SearchResultItem"> & {
  /**
   * The resource name of the asset.
   * Form:
   * 'projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}'
   *
   * @generated from field: string asset = 1;
   */
  asset: string;

  /**
   * The matched asset segments.
   * Deprecated: please use singular `segment` field.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.Partition.TemporalPartition segments = 2 [deprecated = true];
   * @deprecated
   */
  segments: Partition_TemporalPartition[];

  /**
   * The matched asset segment.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Partition.TemporalPartition segment = 5;
   */
  segment?: Partition_TemporalPartition;

  /**
   * Search result annotations specified by result_annotation_keys in search
   * request.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.Annotation requested_annotations = 3;
   */
  requestedAnnotations: Annotation[];

  /**
   * Criteria or facet-selection based annotation matching results associated to
   * this search result item. Only contains results for criteria or
   * facet_selections with fetch_matched_annotations=true.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.AnnotationMatchingResult annotation_matching_results = 4;
   */
  annotationMatchingResults: AnnotationMatchingResult[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.SearchResultItem.
 * Use `create(SearchResultItemSchema)` to create a new message.
 */
export const SearchResultItemSchema: GenMessage<SearchResultItem> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 54);

/**
 * Response message for SearchAssets.
 *
 * @generated from message google.cloud.visionai.v1alpha1.SearchAssetsResponse
 */
export type SearchAssetsResponse = Message<"google.cloud.visionai.v1alpha1.SearchAssetsResponse"> & {
  /**
   * Returned search results.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.SearchResultItem search_result_items = 1;
   */
  searchResultItems: SearchResultItem[];

  /**
   * The next-page continuation token.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Facet search results of a given query, which contains user's
   * already-selected facet values and updated facet search results.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.FacetGroup facet_results = 3;
   */
  facetResults: FacetGroup[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.SearchAssetsResponse.
 * Use `create(SearchAssetsResponseSchema)` to create a new message.
 */
export const SearchAssetsResponseSchema: GenMessage<SearchAssetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 55);

/**
 * Integer range type.
 *
 * @generated from message google.cloud.visionai.v1alpha1.IntRange
 */
export type IntRange = Message<"google.cloud.visionai.v1alpha1.IntRange"> & {
  /**
   * Start of the int range.
   *
   * @generated from field: optional int64 start = 1;
   */
  start?: bigint;

  /**
   * End of the int range.
   *
   * @generated from field: optional int64 end = 2;
   */
  end?: bigint;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.IntRange.
 * Use `create(IntRangeSchema)` to create a new message.
 */
export const IntRangeSchema: GenMessage<IntRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 56);

/**
 * Float range type.
 *
 * @generated from message google.cloud.visionai.v1alpha1.FloatRange
 */
export type FloatRange = Message<"google.cloud.visionai.v1alpha1.FloatRange"> & {
  /**
   * Start of the float range.
   *
   * @generated from field: optional float start = 1;
   */
  start?: number;

  /**
   * End of the float range.
   *
   * @generated from field: optional float end = 2;
   */
  end?: number;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.FloatRange.
 * Use `create(FloatRangeSchema)` to create a new message.
 */
export const FloatRangeSchema: GenMessage<FloatRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 57);

/**
 * A list of string-type values.
 *
 * @generated from message google.cloud.visionai.v1alpha1.StringArray
 */
export type StringArray = Message<"google.cloud.visionai.v1alpha1.StringArray"> & {
  /**
   * String type values.
   *
   * @generated from field: repeated string txt_values = 1;
   */
  txtValues: string[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.StringArray.
 * Use `create(StringArraySchema)` to create a new message.
 */
export const StringArraySchema: GenMessage<StringArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 58);

/**
 * A list of integer range values.
 *
 * @generated from message google.cloud.visionai.v1alpha1.IntRangeArray
 */
export type IntRangeArray = Message<"google.cloud.visionai.v1alpha1.IntRangeArray"> & {
  /**
   * Int range values.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.IntRange int_ranges = 1;
   */
  intRanges: IntRange[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.IntRangeArray.
 * Use `create(IntRangeArraySchema)` to create a new message.
 */
export const IntRangeArraySchema: GenMessage<IntRangeArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 59);

/**
 * A list of float range values.
 *
 * @generated from message google.cloud.visionai.v1alpha1.FloatRangeArray
 */
export type FloatRangeArray = Message<"google.cloud.visionai.v1alpha1.FloatRangeArray"> & {
  /**
   * Float range values.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.FloatRange float_ranges = 1;
   */
  floatRanges: FloatRange[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.FloatRangeArray.
 * Use `create(FloatRangeArraySchema)` to create a new message.
 */
export const FloatRangeArraySchema: GenMessage<FloatRangeArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 60);

/**
 * Datetime range type.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DateTimeRange
 */
export type DateTimeRange = Message<"google.cloud.visionai.v1alpha1.DateTimeRange"> & {
  /**
   * Start date time.
   *
   * @generated from field: google.type.DateTime start = 1;
   */
  start?: DateTime;

  /**
   * End data time.
   *
   * @generated from field: google.type.DateTime end = 2;
   */
  end?: DateTime;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DateTimeRange.
 * Use `create(DateTimeRangeSchema)` to create a new message.
 */
export const DateTimeRangeSchema: GenMessage<DateTimeRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 61);

/**
 * A list of datetime range values.
 *
 * @generated from message google.cloud.visionai.v1alpha1.DateTimeRangeArray
 */
export type DateTimeRangeArray = Message<"google.cloud.visionai.v1alpha1.DateTimeRangeArray"> & {
  /**
   * Date time ranges.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.DateTimeRange date_time_ranges = 1;
   */
  dateTimeRanges: DateTimeRange[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.DateTimeRangeArray.
 * Use `create(DateTimeRangeArraySchema)` to create a new message.
 */
export const DateTimeRangeArraySchema: GenMessage<DateTimeRangeArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 62);

/**
 * Representation of a circle area.
 *
 * @generated from message google.cloud.visionai.v1alpha1.CircleArea
 */
export type CircleArea = Message<"google.cloud.visionai.v1alpha1.CircleArea"> & {
  /**
   * Latitude of circle area's center. Degrees [-90 .. 90]
   *
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * Longitude of circle area's center. Degrees [-180 .. 180]
   *
   * @generated from field: double longitude = 2;
   */
  longitude: number;

  /**
   * Radius of the circle area in meters.
   *
   * @generated from field: double radius_meter = 3;
   */
  radiusMeter: number;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.CircleArea.
 * Use `create(CircleAreaSchema)` to create a new message.
 */
export const CircleAreaSchema: GenMessage<CircleArea> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 63);

/**
 * A list of locations.
 *
 * @generated from message google.cloud.visionai.v1alpha1.GeoLocationArray
 */
export type GeoLocationArray = Message<"google.cloud.visionai.v1alpha1.GeoLocationArray"> & {
  /**
   * A list of circle areas.
   *
   * @generated from field: repeated google.cloud.visionai.v1alpha1.CircleArea circle_areas = 1;
   */
  circleAreas: CircleArea[];
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.GeoLocationArray.
 * Use `create(GeoLocationArraySchema)` to create a new message.
 */
export const GeoLocationArraySchema: GenMessage<GeoLocationArray> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 64);

/**
 * @generated from message google.cloud.visionai.v1alpha1.BoolValue
 */
export type BoolValue = Message<"google.cloud.visionai.v1alpha1.BoolValue"> & {
  /**
   * @generated from field: bool value = 1;
   */
  value: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.BoolValue.
 * Use `create(BoolValueSchema)` to create a new message.
 */
export const BoolValueSchema: GenMessage<BoolValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 65);

/**
 * Filter criteria applied to current search results.
 *
 * @generated from message google.cloud.visionai.v1alpha1.Criteria
 */
export type Criteria = Message<"google.cloud.visionai.v1alpha1.Criteria"> & {
  /**
   * @generated from oneof google.cloud.visionai.v1alpha1.Criteria.value
   */
  value: {
    /**
     * The text values associated with the field.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.StringArray text_array = 2;
     */
    value: StringArray;
    case: "textArray";
  } | {
    /**
     * The integer ranges associated with the field.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.IntRangeArray int_range_array = 3;
     */
    value: IntRangeArray;
    case: "intRangeArray";
  } | {
    /**
     * The float ranges associated with the field.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.FloatRangeArray float_range_array = 4;
     */
    value: FloatRangeArray;
    case: "floatRangeArray";
  } | {
    /**
     * The datetime ranges associated with the field.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.DateTimeRangeArray date_time_range_array = 5;
     */
    value: DateTimeRangeArray;
    case: "dateTimeRangeArray";
  } | {
    /**
     * Geo Location array.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.GeoLocationArray geo_location_array = 6;
     */
    value: GeoLocationArray;
    case: "geoLocationArray";
  } | {
    /**
     * A Boolean value.
     *
     * @generated from field: google.cloud.visionai.v1alpha1.BoolValue bool_value = 7;
     */
    value: BoolValue;
    case: "boolValue";
  } | { case: undefined; value?: undefined };

  /**
   * The UGA field or ML field to apply filtering criteria.
   *
   * @generated from field: string field = 1;
   */
  field: string;

  /**
   * If true, return query matched annotations for this criteria.
   * This option is only applicable for partition level annotations and supports
   * the following data types:
   *  - INTEGER
   *  - FLOAT
   *  - STRING (DataSchema.SearchStrategy.EXACT_SEARCH only)
   *  - BOOLEAN
   *
   * @generated from field: bool fetch_matched_annotations = 8;
   */
  fetchMatchedAnnotations: boolean;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.Criteria.
 * Use `create(CriteriaSchema)` to create a new message.
 */
export const CriteriaSchema: GenMessage<Criteria> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 66);

/**
 * Partition to specify the partition in time and space for sub-asset level
 * annotation.
 *
 * @generated from message google.cloud.visionai.v1alpha1.Partition
 */
export type Partition = Message<"google.cloud.visionai.v1alpha1.Partition"> & {
  /**
   * Partition of asset in time.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Partition.TemporalPartition temporal_partition = 1;
   */
  temporalPartition?: Partition_TemporalPartition;

  /**
   * Partition of asset in space.
   *
   * @generated from field: google.cloud.visionai.v1alpha1.Partition.SpatialPartition spatial_partition = 2;
   */
  spatialPartition?: Partition_SpatialPartition;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.Partition.
 * Use `create(PartitionSchema)` to create a new message.
 */
export const PartitionSchema: GenMessage<Partition> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 67);

/**
 * Partition of asset in UTC Epoch time.
 *
 * @generated from message google.cloud.visionai.v1alpha1.Partition.TemporalPartition
 */
export type Partition_TemporalPartition = Message<"google.cloud.visionai.v1alpha1.Partition.TemporalPartition"> & {
  /**
   * Start time of the partition.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * End time of the partition.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.Partition.TemporalPartition.
 * Use `create(Partition_TemporalPartitionSchema)` to create a new message.
 */
export const Partition_TemporalPartitionSchema: GenMessage<Partition_TemporalPartition> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 67, 0);

/**
 * Partition of asset in space.
 *
 * @generated from message google.cloud.visionai.v1alpha1.Partition.SpatialPartition
 */
export type Partition_SpatialPartition = Message<"google.cloud.visionai.v1alpha1.Partition.SpatialPartition"> & {
  /**
   * The minimum x coordinate value.
   *
   * @generated from field: optional int64 x_min = 1;
   */
  xMin?: bigint;

  /**
   * The minimum y coordinate value.
   *
   * @generated from field: optional int64 y_min = 2;
   */
  yMin?: bigint;

  /**
   * The maximum x coordinate value.
   *
   * @generated from field: optional int64 x_max = 3;
   */
  xMax?: bigint;

  /**
   * The maximum y coordinate value.
   *
   * @generated from field: optional int64 y_max = 4;
   */
  yMax?: bigint;
};

/**
 * Describes the message google.cloud.visionai.v1alpha1.Partition.SpatialPartition.
 * Use `create(Partition_SpatialPartitionSchema)` to create a new message.
 */
export const Partition_SpatialPartitionSchema: GenMessage<Partition_SpatialPartition> = /*@__PURE__*/
  messageDesc(file_google_cloud_visionai_v1alpha1_warehouse, 67, 1);

/**
 * Different types for a facet bucket.
 *
 * @generated from enum google.cloud.visionai.v1alpha1.FacetBucketType
 */
export enum FacetBucketType {
  /**
   * Unspecified type.
   *
   * @generated from enum value: FACET_BUCKET_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Value type.
   *
   * @generated from enum value: FACET_BUCKET_TYPE_VALUE = 1;
   */
  VALUE = 1,

  /**
   * Datetime type.
   *
   * @generated from enum value: FACET_BUCKET_TYPE_DATETIME = 2;
   */
  DATETIME = 2,

  /**
   * Fixed Range type.
   *
   * @generated from enum value: FACET_BUCKET_TYPE_FIXED_RANGE = 3;
   */
  FIXED_RANGE = 3,

  /**
   * Custom Range type.
   *
   * @generated from enum value: FACET_BUCKET_TYPE_CUSTOM_RANGE = 4;
   */
  CUSTOM_RANGE = 4,
}

/**
 * Describes the enum google.cloud.visionai.v1alpha1.FacetBucketType.
 */
export const FacetBucketTypeSchema: GenEnum<FacetBucketType> = /*@__PURE__*/
  enumDesc(file_google_cloud_visionai_v1alpha1_warehouse, 0);

/**
 * Service that manages media content + metadata for streaming.
 *
 * @generated from service google.cloud.visionai.v1alpha1.Warehouse
 */
export const Warehouse: GenService<{
  /**
   * Creates an asset inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.CreateAsset
   */
  createAsset: {
    methodKind: "unary";
    input: typeof CreateAssetRequestSchema;
    output: typeof AssetSchema;
  },
  /**
   * Updates an asset inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.UpdateAsset
   */
  updateAsset: {
    methodKind: "unary";
    input: typeof UpdateAssetRequestSchema;
    output: typeof AssetSchema;
  },
  /**
   * Reads an asset inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.GetAsset
   */
  getAsset: {
    methodKind: "unary";
    input: typeof GetAssetRequestSchema;
    output: typeof AssetSchema;
  },
  /**
   * Lists an list of assets inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.ListAssets
   */
  listAssets: {
    methodKind: "unary";
    input: typeof ListAssetsRequestSchema;
    output: typeof ListAssetsResponseSchema;
  },
  /**
   * Deletes asset inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.DeleteAsset
   */
  deleteAsset: {
    methodKind: "unary";
    input: typeof DeleteAssetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a corpus inside a project.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.CreateCorpus
   */
  createCorpus: {
    methodKind: "unary";
    input: typeof CreateCorpusRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets corpus details inside a project.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.GetCorpus
   */
  getCorpus: {
    methodKind: "unary";
    input: typeof GetCorpusRequestSchema;
    output: typeof CorpusSchema;
  },
  /**
   * Updates a corpus in a project.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.UpdateCorpus
   */
  updateCorpus: {
    methodKind: "unary";
    input: typeof UpdateCorpusRequestSchema;
    output: typeof CorpusSchema;
  },
  /**
   * Lists all corpora in a project.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.ListCorpora
   */
  listCorpora: {
    methodKind: "unary";
    input: typeof ListCorporaRequestSchema;
    output: typeof ListCorporaResponseSchema;
  },
  /**
   * Deletes a corpus only if its empty.
   * Returns empty response.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.DeleteCorpus
   */
  deleteCorpus: {
    methodKind: "unary";
    input: typeof DeleteCorpusRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Creates data schema inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.CreateDataSchema
   */
  createDataSchema: {
    methodKind: "unary";
    input: typeof CreateDataSchemaRequestSchema;
    output: typeof DataSchemaSchema;
  },
  /**
   * Updates data schema inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.UpdateDataSchema
   */
  updateDataSchema: {
    methodKind: "unary";
    input: typeof UpdateDataSchemaRequestSchema;
    output: typeof DataSchemaSchema;
  },
  /**
   * Gets data schema inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.GetDataSchema
   */
  getDataSchema: {
    methodKind: "unary";
    input: typeof GetDataSchemaRequestSchema;
    output: typeof DataSchemaSchema;
  },
  /**
   * Deletes data schema inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.DeleteDataSchema
   */
  deleteDataSchema: {
    methodKind: "unary";
    input: typeof DeleteDataSchemaRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists a list of data schemas inside corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.ListDataSchemas
   */
  listDataSchemas: {
    methodKind: "unary";
    input: typeof ListDataSchemasRequestSchema;
    output: typeof ListDataSchemasResponseSchema;
  },
  /**
   * Creates annotation inside asset.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.CreateAnnotation
   */
  createAnnotation: {
    methodKind: "unary";
    input: typeof CreateAnnotationRequestSchema;
    output: typeof AnnotationSchema;
  },
  /**
   * Reads annotation inside asset.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.GetAnnotation
   */
  getAnnotation: {
    methodKind: "unary";
    input: typeof GetAnnotationRequestSchema;
    output: typeof AnnotationSchema;
  },
  /**
   * Lists a list of annotations inside asset.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.ListAnnotations
   */
  listAnnotations: {
    methodKind: "unary";
    input: typeof ListAnnotationsRequestSchema;
    output: typeof ListAnnotationsResponseSchema;
  },
  /**
   * Updates annotation inside asset.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.UpdateAnnotation
   */
  updateAnnotation: {
    methodKind: "unary";
    input: typeof UpdateAnnotationRequestSchema;
    output: typeof AnnotationSchema;
  },
  /**
   * Deletes annotation inside asset.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.DeleteAnnotation
   */
  deleteAnnotation: {
    methodKind: "unary";
    input: typeof DeleteAnnotationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Ingests data for the asset. It is not allowed to ingest a data chunk which
   * is already expired according to TTL.
   * This method is only available via the gRPC API (not HTTP since
   * bi-directional streaming is not supported via HTTP).
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.IngestAsset
   */
  ingestAsset: {
    methodKind: "bidi_streaming";
    input: typeof IngestAssetRequestSchema;
    output: typeof IngestAssetResponseSchema;
  },
  /**
   * Generates clips for downloading. The api takes in a time range, and
   * generates a clip of the first content available after start_time and
   * before end_time, which may overflow beyond these bounds.
   * Returned clips are truncated if the total size of the clips are larger
   * than 100MB.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.ClipAsset
   */
  clipAsset: {
    methodKind: "unary";
    input: typeof ClipAssetRequestSchema;
    output: typeof ClipAssetResponseSchema;
  },
  /**
   * Generates a uri for an HLS manifest. The api takes in a collection of time
   * ranges, and generates a URI for an HLS manifest that covers all the
   * requested time ranges.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.GenerateHlsUri
   */
  generateHlsUri: {
    methodKind: "unary";
    input: typeof GenerateHlsUriRequestSchema;
    output: typeof GenerateHlsUriResponseSchema;
  },
  /**
   * Creates a search configuration inside a corpus.
   *
   * Please follow the rules below to create a valid CreateSearchConfigRequest.
   * --- General Rules ---
   * 1. Request.search_config_id must not be associated with an existing
   *    SearchConfig.
   * 2. Request must contain at least one non-empty search_criteria_property or
   *    facet_property.
   * 3. mapped_fields must not be empty, and must map to existing UGA keys.
   * 4. All mapped_fields must be of the same type.
   * 5. All mapped_fields must share the same granularity.
   * 6. All mapped_fields must share the same semantic SearchConfig match
   *    options.
   * For property-specific rules, please reference the comments for
   * FacetProperty and SearchCriteriaProperty.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.CreateSearchConfig
   */
  createSearchConfig: {
    methodKind: "unary";
    input: typeof CreateSearchConfigRequestSchema;
    output: typeof SearchConfigSchema;
  },
  /**
   * Updates a search configuration inside a corpus.
   *
   * Please follow the rules below to create a valid UpdateSearchConfigRequest.
   * --- General Rules ---
   * 1. Request.search_configuration.name must already exist.
   * 2. Request must contain at least one non-empty search_criteria_property or
   * facet_property.
   * 3. mapped_fields must not be empty, and must map to existing UGA keys.
   * 4. All mapped_fields must be of the same type.
   * 5. All mapped_fields must share the same granularity.
   * 6. All mapped_fields must share the same semantic SearchConfig match
   *    options.
   * For property-specific rules, please reference the comments for
   * FacetProperty and SearchCriteriaProperty.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.UpdateSearchConfig
   */
  updateSearchConfig: {
    methodKind: "unary";
    input: typeof UpdateSearchConfigRequestSchema;
    output: typeof SearchConfigSchema;
  },
  /**
   * Gets a search configuration inside a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.GetSearchConfig
   */
  getSearchConfig: {
    methodKind: "unary";
    input: typeof GetSearchConfigRequestSchema;
    output: typeof SearchConfigSchema;
  },
  /**
   * Deletes a search configuration inside a corpus.
   *
   * For a DeleteSearchConfigRequest to be valid,
   * Request.search_configuration.name must already exist.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.DeleteSearchConfig
   */
  deleteSearchConfig: {
    methodKind: "unary";
    input: typeof DeleteSearchConfigRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists all search configurations inside a corpus.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.ListSearchConfigs
   */
  listSearchConfigs: {
    methodKind: "unary";
    input: typeof ListSearchConfigsRequestSchema;
    output: typeof ListSearchConfigsResponseSchema;
  },
  /**
   * Search media asset.
   *
   * @generated from rpc google.cloud.visionai.v1alpha1.Warehouse.SearchAssets
   */
  searchAssets: {
    methodKind: "unary";
    input: typeof SearchAssetsRequestSchema;
    output: typeof SearchAssetsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_visionai_v1alpha1_warehouse, 0);

