// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/identitytoolkit/v2/authentication_service.proto (package google.cloud.identitytoolkit.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { FinalizeMfaPhoneRequestInfo, FinalizeMfaPhoneResponseInfo, StartMfaPhoneRequestInfo, StartMfaPhoneResponseInfo } from "./mfa_info_pb";
import { file_google_cloud_identitytoolkit_v2_mfa_info } from "./mfa_info_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/identitytoolkit/v2/authentication_service.proto.
 */
export const file_google_cloud_identitytoolkit_v2_authentication_service: GenFile = /*@__PURE__*/
  fileDesc("Cjxnb29nbGUvY2xvdWQvaWRlbnRpdHl0b29sa2l0L3YyL2F1dGhlbnRpY2F0aW9uX3NlcnZpY2UucHJvdG8SH2dvb2dsZS5jbG91ZC5pZGVudGl0eXRvb2xraXQudjIiyAEKGEZpbmFsaXplTWZhU2lnbkluUmVxdWVzdBIjChZtZmFfcGVuZGluZ19jcmVkZW50aWFsGAIgASgJQgPgQQISXwoXcGhvbmVfdmVyaWZpY2F0aW9uX2luZm8YAyABKAsyPC5nb29nbGUuY2xvdWQuaWRlbnRpdHl0b29sa2l0LnYyLkZpbmFsaXplTWZhUGhvbmVSZXF1ZXN0SW5mb0gAEhEKCXRlbmFudF9pZBgEIAEoCUITChF2ZXJpZmljYXRpb25faW5mbyK1AQoZRmluYWxpemVNZmFTaWduSW5SZXNwb25zZRIQCghpZF90b2tlbhgBIAEoCRIVCg1yZWZyZXNoX3Rva2VuGAIgASgJElgKD3Bob25lX2F1dGhfaW5mbxgDIAEoCzI9Lmdvb2dsZS5jbG91ZC5pZGVudGl0eXRvb2xraXQudjIuRmluYWxpemVNZmFQaG9uZVJlc3BvbnNlSW5mb0gAQhUKE2F1eGlsaWFyeV9hdXRoX2luZm8i2AEKFVN0YXJ0TWZhU2lnbkluUmVxdWVzdBIjChZtZmFfcGVuZGluZ19jcmVkZW50aWFsGAIgASgJQgPgQQISHgoRbWZhX2Vucm9sbG1lbnRfaWQYAyABKAlCA+BBAhJXChJwaG9uZV9zaWduX2luX2luZm8YBCABKAsyOS5nb29nbGUuY2xvdWQuaWRlbnRpdHl0b29sa2l0LnYyLlN0YXJ0TWZhUGhvbmVSZXF1ZXN0SW5mb0gAEhEKCXRlbmFudF9pZBgFIAEoCUIOCgxzaWduX2luX2luZm8ihAEKFlN0YXJ0TWZhU2lnbkluUmVzcG9uc2USWQoTcGhvbmVfcmVzcG9uc2VfaW5mbxgBIAEoCzI6Lmdvb2dsZS5jbG91ZC5pZGVudGl0eXRvb2xraXQudjIuU3RhcnRNZmFQaG9uZVJlc3BvbnNlSW5mb0gAQg8KDXJlc3BvbnNlX2luZm8y0QMKFUF1dGhlbnRpY2F0aW9uU2VydmljZRK2AQoRRmluYWxpemVNZmFTaWduSW4SOS5nb29nbGUuY2xvdWQuaWRlbnRpdHl0b29sa2l0LnYyLkZpbmFsaXplTWZhU2lnbkluUmVxdWVzdBo6Lmdvb2dsZS5jbG91ZC5pZGVudGl0eXRvb2xraXQudjIuRmluYWxpemVNZmFTaWduSW5SZXNwb25zZSIqgtPkkwIkOgEqIh8vdjIvYWNjb3VudHMvbWZhU2lnbkluOmZpbmFsaXplEqoBCg5TdGFydE1mYVNpZ25JbhI2Lmdvb2dsZS5jbG91ZC5pZGVudGl0eXRvb2xraXQudjIuU3RhcnRNZmFTaWduSW5SZXF1ZXN0GjcuZ29vZ2xlLmNsb3VkLmlkZW50aXR5dG9vbGtpdC52Mi5TdGFydE1mYVNpZ25JblJlc3BvbnNlIieC0+STAiE6ASoiHC92Mi9hY2NvdW50cy9tZmFTaWduSW46c3RhcnQaUspBHmlkZW50aXR5dG9vbGtpdC5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1C3wEKI2NvbS5nb29nbGUuY2xvdWQuaWRlbnRpdHl0b29sa2l0LnYyUAFaTWNsb3VkLmdvb2dsZS5jb20vZ28vaWRlbnRpdHl0b29sa2l0L2FwaXYyL2lkZW50aXR5dG9vbGtpdHBiO2lkZW50aXR5dG9vbGtpdHBiqgIfR29vZ2xlLkNsb3VkLklkZW50aXR5VG9vbGtpdC5WMsoCH0dvb2dsZVxDbG91ZFxJZGVudGl0eVRvb2xraXRcVjLqAiJHb29nbGU6OkNsb3VkOjpJZGVudGl0eVRvb2xraXQ6OlYyYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_cloud_identitytoolkit_v2_mfa_info]);

/**
 * Finalizes sign-in by verifying MFA challenge.
 *
 * @generated from message google.cloud.identitytoolkit.v2.FinalizeMfaSignInRequest
 */
export type FinalizeMfaSignInRequest = Message<"google.cloud.identitytoolkit.v2.FinalizeMfaSignInRequest"> & {
  /**
   * Required. Pending credential from first factor sign-in.
   *
   * @generated from field: string mfa_pending_credential = 2;
   */
  mfaPendingCredential: string;

  /**
   * Proof of completion of the MFA challenge.
   *
   * @generated from oneof google.cloud.identitytoolkit.v2.FinalizeMfaSignInRequest.verification_info
   */
  verificationInfo: {
    /**
     * Proof of completion of the SMS based MFA challenge.
     *
     * @generated from field: google.cloud.identitytoolkit.v2.FinalizeMfaPhoneRequestInfo phone_verification_info = 3;
     */
    value: FinalizeMfaPhoneRequestInfo;
    case: "phoneVerificationInfo";
  } | { case: undefined; value?: undefined };

  /**
   * The ID of the Identity Platform tenant the user is signing in to. If not
   * set, the user will sign in to the default Identity Platform project.
   *
   * @generated from field: string tenant_id = 4;
   */
  tenantId: string;
};

/**
 * Describes the message google.cloud.identitytoolkit.v2.FinalizeMfaSignInRequest.
 * Use `create(FinalizeMfaSignInRequestSchema)` to create a new message.
 */
export const FinalizeMfaSignInRequestSchema: GenMessage<FinalizeMfaSignInRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_identitytoolkit_v2_authentication_service, 0);

/**
 * FinalizeMfaSignIn response.
 *
 * @generated from message google.cloud.identitytoolkit.v2.FinalizeMfaSignInResponse
 */
export type FinalizeMfaSignInResponse = Message<"google.cloud.identitytoolkit.v2.FinalizeMfaSignInResponse"> & {
  /**
   * ID token for the authenticated user.
   *
   * @generated from field: string id_token = 1;
   */
  idToken: string;

  /**
   * Refresh token for the authenticated user.
   *
   * @generated from field: string refresh_token = 2;
   */
  refreshToken: string;

  /**
   * MFA verified sign-in information.
   *
   * @generated from oneof google.cloud.identitytoolkit.v2.FinalizeMfaSignInResponse.auxiliary_auth_info
   */
  auxiliaryAuthInfo: {
    /**
     * Extra phone auth info, including android verification proof.
     *
     * @generated from field: google.cloud.identitytoolkit.v2.FinalizeMfaPhoneResponseInfo phone_auth_info = 3;
     */
    value: FinalizeMfaPhoneResponseInfo;
    case: "phoneAuthInfo";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.identitytoolkit.v2.FinalizeMfaSignInResponse.
 * Use `create(FinalizeMfaSignInResponseSchema)` to create a new message.
 */
export const FinalizeMfaSignInResponseSchema: GenMessage<FinalizeMfaSignInResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_identitytoolkit_v2_authentication_service, 1);

/**
 * Starts multi-factor sign-in by sending the multi-factor auth challenge.
 *
 * @generated from message google.cloud.identitytoolkit.v2.StartMfaSignInRequest
 */
export type StartMfaSignInRequest = Message<"google.cloud.identitytoolkit.v2.StartMfaSignInRequest"> & {
  /**
   * Required. Pending credential from first factor sign-in.
   *
   * @generated from field: string mfa_pending_credential = 2;
   */
  mfaPendingCredential: string;

  /**
   * Required. MFA enrollment id from the user's list of current MFA enrollments.
   *
   * @generated from field: string mfa_enrollment_id = 3;
   */
  mfaEnrollmentId: string;

  /**
   * MFA information by type of 2nd factor.
   *
   * @generated from oneof google.cloud.identitytoolkit.v2.StartMfaSignInRequest.sign_in_info
   */
  signInInfo: {
    /**
     * Verification info to authorize sending an SMS for phone verification.
     *
     * @generated from field: google.cloud.identitytoolkit.v2.StartMfaPhoneRequestInfo phone_sign_in_info = 4;
     */
    value: StartMfaPhoneRequestInfo;
    case: "phoneSignInInfo";
  } | { case: undefined; value?: undefined };

  /**
   * The ID of the Identity Platform tenant the user is signing in to. If not
   * set, the user will sign in to the default Identity Platform project.
   *
   * @generated from field: string tenant_id = 5;
   */
  tenantId: string;
};

/**
 * Describes the message google.cloud.identitytoolkit.v2.StartMfaSignInRequest.
 * Use `create(StartMfaSignInRequestSchema)` to create a new message.
 */
export const StartMfaSignInRequestSchema: GenMessage<StartMfaSignInRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_identitytoolkit_v2_authentication_service, 2);

/**
 * StartMfaSignIn response.
 *
 * @generated from message google.cloud.identitytoolkit.v2.StartMfaSignInResponse
 */
export type StartMfaSignInResponse = Message<"google.cloud.identitytoolkit.v2.StartMfaSignInResponse"> & {
  /**
   * MultiFactor start sign-in response by 2nd factor type.
   *
   * @generated from oneof google.cloud.identitytoolkit.v2.StartMfaSignInResponse.response_info
   */
  responseInfo: {
    /**
     * MultiFactor sign-in session information specific to SMS-type second
     * factors. Along with the one-time code retrieved from the sent SMS, the
     * contents of this session information should be passed to
     * FinalizeMfaSignIn to complete the sign in.
     *
     * @generated from field: google.cloud.identitytoolkit.v2.StartMfaPhoneResponseInfo phone_response_info = 1;
     */
    value: StartMfaPhoneResponseInfo;
    case: "phoneResponseInfo";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.identitytoolkit.v2.StartMfaSignInResponse.
 * Use `create(StartMfaSignInResponseSchema)` to create a new message.
 */
export const StartMfaSignInResponseSchema: GenMessage<StartMfaSignInResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_identitytoolkit_v2_authentication_service, 3);

/**
 * Authentication for Identity Toolkit
 *
 * @generated from service google.cloud.identitytoolkit.v2.AuthenticationService
 */
export const AuthenticationService: GenService<{
  /**
   * Verifies the MFA challenge and performs sign-in
   *
   * @generated from rpc google.cloud.identitytoolkit.v2.AuthenticationService.FinalizeMfaSignIn
   */
  finalizeMfaSignIn: {
    methodKind: "unary";
    input: typeof FinalizeMfaSignInRequestSchema;
    output: typeof FinalizeMfaSignInResponseSchema;
  },
  /**
   * Sends the MFA challenge
   *
   * @generated from rpc google.cloud.identitytoolkit.v2.AuthenticationService.StartMfaSignIn
   */
  startMfaSignIn: {
    methodKind: "unary";
    input: typeof StartMfaSignInRequestSchema;
    output: typeof StartMfaSignInResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_identitytoolkit_v2_authentication_service, 0);

