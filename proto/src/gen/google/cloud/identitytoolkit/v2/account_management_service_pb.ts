// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/identitytoolkit/v2/account_management_service.proto (package google.cloud.identitytoolkit.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { FinalizeMfaPhoneRequestInfo, FinalizeMfaPhoneResponseInfo, StartMfaPhoneRequestInfo, StartMfaPhoneResponseInfo } from "./mfa_info_pb";
import { file_google_cloud_identitytoolkit_v2_mfa_info } from "./mfa_info_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/identitytoolkit/v2/account_management_service.proto.
 */
export const file_google_cloud_identitytoolkit_v2_account_management_service: GenFile = /*@__PURE__*/
  fileDesc("CkBnb29nbGUvY2xvdWQvaWRlbnRpdHl0b29sa2l0L3YyL2FjY291bnRfbWFuYWdlbWVudF9zZXJ2aWNlLnByb3RvEh9nb29nbGUuY2xvdWQuaWRlbnRpdHl0b29sa2l0LnYyItQBChxGaW5hbGl6ZU1mYUVucm9sbG1lbnRSZXF1ZXN0EhUKCGlkX3Rva2VuGAEgASgJQgPgQQISFAoMZGlzcGxheV9uYW1lGAMgASgJEl8KF3Bob25lX3ZlcmlmaWNhdGlvbl9pbmZvGAQgASgLMjwuZ29vZ2xlLmNsb3VkLmlkZW50aXR5dG9vbGtpdC52Mi5GaW5hbGl6ZU1mYVBob25lUmVxdWVzdEluZm9IABIRCgl0ZW5hbnRfaWQYBSABKAlCEwoRdmVyaWZpY2F0aW9uX2luZm8iuQEKHUZpbmFsaXplTWZhRW5yb2xsbWVudFJlc3BvbnNlEhAKCGlkX3Rva2VuGAEgASgJEhUKDXJlZnJlc2hfdG9rZW4YAiABKAkSWAoPcGhvbmVfYXV0aF9pbmZvGAMgASgLMj0uZ29vZ2xlLmNsb3VkLmlkZW50aXR5dG9vbGtpdC52Mi5GaW5hbGl6ZU1mYVBob25lUmVzcG9uc2VJbmZvSABCFQoTYXV4aWxpYXJ5X2F1dGhfaW5mbyK0AQoZU3RhcnRNZmFFbnJvbGxtZW50UmVxdWVzdBIVCghpZF90b2tlbhgBIAEoCUID4EECEloKFXBob25lX2Vucm9sbG1lbnRfaW5mbxgDIAEoCzI5Lmdvb2dsZS5jbG91ZC5pZGVudGl0eXRvb2xraXQudjIuU3RhcnRNZmFQaG9uZVJlcXVlc3RJbmZvSAASEQoJdGVuYW50X2lkGAQgASgJQhEKD2Vucm9sbG1lbnRfaW5mbyKNAQoaU3RhcnRNZmFFbnJvbGxtZW50UmVzcG9uc2USWAoScGhvbmVfc2Vzc2lvbl9pbmZvGAEgASgLMjouZ29vZ2xlLmNsb3VkLmlkZW50aXR5dG9vbGtpdC52Mi5TdGFydE1mYVBob25lUmVzcG9uc2VJbmZvSABCFQoTZW5yb2xsbWVudF9yZXNwb25zZSJeChJXaXRoZHJhd01mYVJlcXVlc3QSFQoIaWRfdG9rZW4YASABKAlCA+BBAhIeChFtZmFfZW5yb2xsbWVudF9pZBgCIAEoCUID4EECEhEKCXRlbmFudF9pZBgDIAEoCSI+ChNXaXRoZHJhd01mYVJlc3BvbnNlEhAKCGlkX3Rva2VuGAEgASgJEhUKDXJlZnJlc2hfdG9rZW4YAiABKAkynwUKGEFjY291bnRNYW5hZ2VtZW50U2VydmljZRLGAQoVRmluYWxpemVNZmFFbnJvbGxtZW50Ej0uZ29vZ2xlLmNsb3VkLmlkZW50aXR5dG9vbGtpdC52Mi5GaW5hbGl6ZU1mYUVucm9sbG1lbnRSZXF1ZXN0Gj4uZ29vZ2xlLmNsb3VkLmlkZW50aXR5dG9vbGtpdC52Mi5GaW5hbGl6ZU1mYUVucm9sbG1lbnRSZXNwb25zZSIugtPkkwIoOgEqIiMvdjIvYWNjb3VudHMvbWZhRW5yb2xsbWVudDpmaW5hbGl6ZRK6AQoSU3RhcnRNZmFFbnJvbGxtZW50EjouZ29vZ2xlLmNsb3VkLmlkZW50aXR5dG9vbGtpdC52Mi5TdGFydE1mYUVucm9sbG1lbnRSZXF1ZXN0GjsuZ29vZ2xlLmNsb3VkLmlkZW50aXR5dG9vbGtpdC52Mi5TdGFydE1mYUVucm9sbG1lbnRSZXNwb25zZSIrgtPkkwIlOgEqIiAvdjIvYWNjb3VudHMvbWZhRW5yb2xsbWVudDpzdGFydBKoAQoLV2l0aGRyYXdNZmESMy5nb29nbGUuY2xvdWQuaWRlbnRpdHl0b29sa2l0LnYyLldpdGhkcmF3TWZhUmVxdWVzdBo0Lmdvb2dsZS5jbG91ZC5pZGVudGl0eXRvb2xraXQudjIuV2l0aGRyYXdNZmFSZXNwb25zZSIugtPkkwIoOgEqIiMvdjIvYWNjb3VudHMvbWZhRW5yb2xsbWVudDp3aXRoZHJhdxpSykEeaWRlbnRpdHl0b29sa2l0Lmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybULfAQojY29tLmdvb2dsZS5jbG91ZC5pZGVudGl0eXRvb2xraXQudjJQAVpNY2xvdWQuZ29vZ2xlLmNvbS9nby9pZGVudGl0eXRvb2xraXQvYXBpdjIvaWRlbnRpdHl0b29sa2l0cGI7aWRlbnRpdHl0b29sa2l0cGKqAh9Hb29nbGUuQ2xvdWQuSWRlbnRpdHlUb29sa2l0LlYyygIfR29vZ2xlXENsb3VkXElkZW50aXR5VG9vbGtpdFxWMuoCIkdvb2dsZTo6Q2xvdWQ6OklkZW50aXR5VG9vbGtpdDo6VjJiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_cloud_identitytoolkit_v2_mfa_info]);

/**
 * Finishes enrolling a second factor for the user.
 *
 * @generated from message google.cloud.identitytoolkit.v2.FinalizeMfaEnrollmentRequest
 */
export type FinalizeMfaEnrollmentRequest = Message<"google.cloud.identitytoolkit.v2.FinalizeMfaEnrollmentRequest"> & {
  /**
   * Required. ID token.
   *
   * @generated from field: string id_token = 1;
   */
  idToken: string;

  /**
   * Display name which is entered  by users to distinguish between different
   * second factors with same type or different type.
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * MFA enrollment information to be verified.
   *
   * @generated from oneof google.cloud.identitytoolkit.v2.FinalizeMfaEnrollmentRequest.verification_info
   */
  verificationInfo: {
    /**
     * Verification info to authorize sending an SMS for phone verification.
     *
     * @generated from field: google.cloud.identitytoolkit.v2.FinalizeMfaPhoneRequestInfo phone_verification_info = 4;
     */
    value: FinalizeMfaPhoneRequestInfo;
    case: "phoneVerificationInfo";
  } | { case: undefined; value?: undefined };

  /**
   * The ID of the Identity Platform tenant that the user enrolling MFA belongs
   * to. If not set, the user belongs to the default Identity Platform project.
   *
   * @generated from field: string tenant_id = 5;
   */
  tenantId: string;
};

/**
 * Describes the message google.cloud.identitytoolkit.v2.FinalizeMfaEnrollmentRequest.
 * Use `create(FinalizeMfaEnrollmentRequestSchema)` to create a new message.
 */
export const FinalizeMfaEnrollmentRequestSchema: GenMessage<FinalizeMfaEnrollmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_identitytoolkit_v2_account_management_service, 0);

/**
 * FinalizeMfaEnrollment response.
 *
 * @generated from message google.cloud.identitytoolkit.v2.FinalizeMfaEnrollmentResponse
 */
export type FinalizeMfaEnrollmentResponse = Message<"google.cloud.identitytoolkit.v2.FinalizeMfaEnrollmentResponse"> & {
  /**
   * ID token updated to reflect MFA enrollment.
   *
   * @generated from field: string id_token = 1;
   */
  idToken: string;

  /**
   * Refresh token updated to reflect MFA enrollment.
   *
   * @generated from field: string refresh_token = 2;
   */
  refreshToken: string;

  /**
   * MFA verified enrollment information.
   *
   * @generated from oneof google.cloud.identitytoolkit.v2.FinalizeMfaEnrollmentResponse.auxiliary_auth_info
   */
  auxiliaryAuthInfo: {
    /**
     * Auxiliary auth info specific to phone auth.
     *
     * @generated from field: google.cloud.identitytoolkit.v2.FinalizeMfaPhoneResponseInfo phone_auth_info = 3;
     */
    value: FinalizeMfaPhoneResponseInfo;
    case: "phoneAuthInfo";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.identitytoolkit.v2.FinalizeMfaEnrollmentResponse.
 * Use `create(FinalizeMfaEnrollmentResponseSchema)` to create a new message.
 */
export const FinalizeMfaEnrollmentResponseSchema: GenMessage<FinalizeMfaEnrollmentResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_identitytoolkit_v2_account_management_service, 1);

/**
 * Sends MFA enrollment verification SMS for a user.
 *
 * @generated from message google.cloud.identitytoolkit.v2.StartMfaEnrollmentRequest
 */
export type StartMfaEnrollmentRequest = Message<"google.cloud.identitytoolkit.v2.StartMfaEnrollmentRequest"> & {
  /**
   * Required. User's ID token.
   *
   * @generated from field: string id_token = 1;
   */
  idToken: string;

  /**
   * MFA information by type of 2nd factor.
   *
   * @generated from oneof google.cloud.identitytoolkit.v2.StartMfaEnrollmentRequest.enrollment_info
   */
  enrollmentInfo: {
    /**
     * Verification info to authorize sending an SMS for phone verification.
     *
     * @generated from field: google.cloud.identitytoolkit.v2.StartMfaPhoneRequestInfo phone_enrollment_info = 3;
     */
    value: StartMfaPhoneRequestInfo;
    case: "phoneEnrollmentInfo";
  } | { case: undefined; value?: undefined };

  /**
   * The ID of the Identity Platform tenant that the user enrolling MFA belongs
   * to. If not set, the user belongs to the default Identity Platform project.
   *
   * @generated from field: string tenant_id = 4;
   */
  tenantId: string;
};

/**
 * Describes the message google.cloud.identitytoolkit.v2.StartMfaEnrollmentRequest.
 * Use `create(StartMfaEnrollmentRequestSchema)` to create a new message.
 */
export const StartMfaEnrollmentRequestSchema: GenMessage<StartMfaEnrollmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_identitytoolkit_v2_account_management_service, 2);

/**
 * StartMfaEnrollment response.
 *
 * @generated from message google.cloud.identitytoolkit.v2.StartMfaEnrollmentResponse
 */
export type StartMfaEnrollmentResponse = Message<"google.cloud.identitytoolkit.v2.StartMfaEnrollmentResponse"> & {
  /**
   * MFA start enrollment response by 2nd factor type.
   *
   * @generated from oneof google.cloud.identitytoolkit.v2.StartMfaEnrollmentResponse.enrollment_response
   */
  enrollmentResponse: {
    /**
     * Verification info to authorize sending an SMS for phone verification.
     *
     * @generated from field: google.cloud.identitytoolkit.v2.StartMfaPhoneResponseInfo phone_session_info = 1;
     */
    value: StartMfaPhoneResponseInfo;
    case: "phoneSessionInfo";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.identitytoolkit.v2.StartMfaEnrollmentResponse.
 * Use `create(StartMfaEnrollmentResponseSchema)` to create a new message.
 */
export const StartMfaEnrollmentResponseSchema: GenMessage<StartMfaEnrollmentResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_identitytoolkit_v2_account_management_service, 3);

/**
 * Withdraws MFA.
 *
 * @generated from message google.cloud.identitytoolkit.v2.WithdrawMfaRequest
 */
export type WithdrawMfaRequest = Message<"google.cloud.identitytoolkit.v2.WithdrawMfaRequest"> & {
  /**
   * Required. User's ID token.
   *
   * @generated from field: string id_token = 1;
   */
  idToken: string;

  /**
   * Required. MFA enrollment id from a current MFA enrollment.
   *
   * @generated from field: string mfa_enrollment_id = 2;
   */
  mfaEnrollmentId: string;

  /**
   * The ID of the Identity Platform tenant that the user unenrolling MFA
   * belongs to. If not set, the user belongs to the default Identity Platform
   * project.
   *
   * @generated from field: string tenant_id = 3;
   */
  tenantId: string;
};

/**
 * Describes the message google.cloud.identitytoolkit.v2.WithdrawMfaRequest.
 * Use `create(WithdrawMfaRequestSchema)` to create a new message.
 */
export const WithdrawMfaRequestSchema: GenMessage<WithdrawMfaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_identitytoolkit_v2_account_management_service, 4);

/**
 * Withdraws MultiFactorAuth response.
 *
 * @generated from message google.cloud.identitytoolkit.v2.WithdrawMfaResponse
 */
export type WithdrawMfaResponse = Message<"google.cloud.identitytoolkit.v2.WithdrawMfaResponse"> & {
  /**
   * ID token updated to reflect removal of the second factor.
   *
   * @generated from field: string id_token = 1;
   */
  idToken: string;

  /**
   * Refresh token updated to reflect removal of the second factor.
   *
   * @generated from field: string refresh_token = 2;
   */
  refreshToken: string;
};

/**
 * Describes the message google.cloud.identitytoolkit.v2.WithdrawMfaResponse.
 * Use `create(WithdrawMfaResponseSchema)` to create a new message.
 */
export const WithdrawMfaResponseSchema: GenMessage<WithdrawMfaResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_identitytoolkit_v2_account_management_service, 5);

/**
 * Account management for Identity Toolkit
 *
 * @generated from service google.cloud.identitytoolkit.v2.AccountManagementService
 */
export const AccountManagementService: GenService<{
  /**
   * Finishes enrolling a second factor for the user.
   *
   * @generated from rpc google.cloud.identitytoolkit.v2.AccountManagementService.FinalizeMfaEnrollment
   */
  finalizeMfaEnrollment: {
    methodKind: "unary";
    input: typeof FinalizeMfaEnrollmentRequestSchema;
    output: typeof FinalizeMfaEnrollmentResponseSchema;
  },
  /**
   * Step one of the MFA enrollment process. In SMS case, this sends an
   * SMS verification code to the user.
   *
   * @generated from rpc google.cloud.identitytoolkit.v2.AccountManagementService.StartMfaEnrollment
   */
  startMfaEnrollment: {
    methodKind: "unary";
    input: typeof StartMfaEnrollmentRequestSchema;
    output: typeof StartMfaEnrollmentResponseSchema;
  },
  /**
   * Revokes one second factor from the enrolled second factors for an account.
   *
   * @generated from rpc google.cloud.identitytoolkit.v2.AccountManagementService.WithdrawMfa
   */
  withdrawMfa: {
    methodKind: "unary";
    input: typeof WithdrawMfaRequestSchema;
    output: typeof WithdrawMfaResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_identitytoolkit_v2_account_management_service, 0);

