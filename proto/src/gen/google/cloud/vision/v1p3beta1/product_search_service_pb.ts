// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/vision/v1p3beta1/product_search_service.proto (package google.cloud.vision.v1p3beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { BoundingPoly } from "./geometry_pb";
import { file_google_cloud_vision_v1p3beta1_geometry } from "./geometry_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/vision/v1p3beta1/product_search_service.proto.
 */
export const file_google_cloud_vision_v1p3beta1_product_search_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_vision_v1p3beta1_geometry, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * A Product contains ReferenceImages.
 *
 * @generated from message google.cloud.vision.v1p3beta1.Product
 */
export type Product = Message<"google.cloud.vision.v1p3beta1.Product"> & {
  /**
   * The resource name of the product.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.
   *
   * This field is ignored when creating a product.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The user-provided name for this Product. Must not be empty. Must be at most
   * 4096 characters long.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * User-provided metadata to be stored with this product. Must be at most 4096
   * characters long.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Immutable. The category for the product identified by the reference image. This should
   * be either "homegoods-v2", "apparel-v2", or "toys-v2". The legacy categories
   * "homegoods", "apparel", and "toys" are still supported, but these should
   * not be used for new products.
   *
   * @generated from field: string product_category = 4;
   */
  productCategory: string;

  /**
   * Key-value pairs that can be attached to a product. At query time,
   * constraints can be specified based on the product_labels.
   *
   * Note that integer values can be provided as strings, e.g. "1199". Only
   * strings with integer values can match a range-based restriction which is
   * to be supported soon.
   *
   * Multiple values can be assigned to the same key. One product may have up to
   * 100 product_labels.
   *
   * @generated from field: repeated google.cloud.vision.v1p3beta1.Product.KeyValue product_labels = 5;
   */
  productLabels: Product_KeyValue[];
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.Product.
 * Use `create(ProductSchema)` to create a new message.
 */
export const ProductSchema: GenMessage<Product> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 0);

/**
 * A product label represented as a key-value pair.
 *
 * @generated from message google.cloud.vision.v1p3beta1.Product.KeyValue
 */
export type Product_KeyValue = Message<"google.cloud.vision.v1p3beta1.Product.KeyValue"> & {
  /**
   * The key of the label attached to the product. Cannot be empty and cannot
   * exceed 128 bytes.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The value of the label attached to the product. Cannot be empty and
   * cannot exceed 128 bytes.
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.Product.KeyValue.
 * Use `create(Product_KeyValueSchema)` to create a new message.
 */
export const Product_KeyValueSchema: GenMessage<Product_KeyValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 0, 0);

/**
 * A ProductSet contains Products. A ProductSet can contain a maximum of 1
 * million reference images. If the limit is exceeded, periodic indexing will
 * fail.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ProductSet
 */
export type ProductSet = Message<"google.cloud.vision.v1p3beta1.ProductSet"> & {
  /**
   * The resource name of the ProductSet.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.
   *
   * This field is ignored when creating a ProductSet.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The user-provided name for this ProductSet. Must not be empty. Must be at
   * most 4096 characters long.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Output only. The time at which this ProductSet was last indexed. Query
   * results will reflect all updates before this time. If this ProductSet has
   * never been indexed, this field is 0.
   *
   * This field is ignored when creating a ProductSet.
   *
   * @generated from field: google.protobuf.Timestamp index_time = 3;
   */
  indexTime?: Timestamp;

  /**
   * Output only. If there was an error with indexing the product set, the field
   * is populated.
   *
   * This field is ignored when creating a ProductSet.
   *
   * @generated from field: google.rpc.Status index_error = 4;
   */
  indexError?: Status;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ProductSet.
 * Use `create(ProductSetSchema)` to create a new message.
 */
export const ProductSetSchema: GenMessage<ProductSet> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 1);

/**
 * A `ReferenceImage` represents a product image and its associated metadata,
 * such as bounding boxes.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ReferenceImage
 */
export type ReferenceImage = Message<"google.cloud.vision.v1p3beta1.ReferenceImage"> & {
  /**
   * The resource name of the reference image.
   *
   * Format is:
   *
   * `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.
   *
   * This field is ignored when creating a reference image.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The Google Cloud Storage URI of the reference image.
   *
   * The URI must start with `gs://`.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * Optional. Bounding polygons around the areas of interest in the reference image.
   * If this field is empty, the system will try to detect regions of
   * interest. At most 10 bounding polygons will be used.
   *
   * The provided shape is converted into a non-rotated rectangle. Once
   * converted, the small edge of the rectangle must be greater than or equal
   * to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5
   * is not).
   *
   * @generated from field: repeated google.cloud.vision.v1p3beta1.BoundingPoly bounding_polys = 3;
   */
  boundingPolys: BoundingPoly[];
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ReferenceImage.
 * Use `create(ReferenceImageSchema)` to create a new message.
 */
export const ReferenceImageSchema: GenMessage<ReferenceImage> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 2);

/**
 * Request message for the `CreateProduct` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.CreateProductRequest
 */
export type CreateProductRequest = Message<"google.cloud.vision.v1p3beta1.CreateProductRequest"> & {
  /**
   * Required. The project in which the Product should be created.
   *
   * Format is
   * `projects/PROJECT_ID/locations/LOC_ID`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The product to create.
   *
   * @generated from field: google.cloud.vision.v1p3beta1.Product product = 2;
   */
  product?: Product;

  /**
   * A user-supplied resource id for this Product. If set, the server will
   * attempt to use this value as the resource id. If it is already in use, an
   * error is returned with code ALREADY_EXISTS. Must be at most 128 characters
   * long. It cannot contain the character `/`.
   *
   * @generated from field: string product_id = 3;
   */
  productId: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.CreateProductRequest.
 * Use `create(CreateProductRequestSchema)` to create a new message.
 */
export const CreateProductRequestSchema: GenMessage<CreateProductRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 3);

/**
 * Request message for the `ListProducts` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ListProductsRequest
 */
export type ListProductsRequest = Message<"google.cloud.vision.v1p3beta1.ListProductsRequest"> & {
  /**
   * Required. The project OR ProductSet from which Products should be listed.
   *
   * Format:
   * `projects/PROJECT_ID/locations/LOC_ID`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return. Default 10, maximum 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ListProductsRequest.
 * Use `create(ListProductsRequestSchema)` to create a new message.
 */
export const ListProductsRequestSchema: GenMessage<ListProductsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 4);

/**
 * Response message for the `ListProducts` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ListProductsResponse
 */
export type ListProductsResponse = Message<"google.cloud.vision.v1p3beta1.ListProductsResponse"> & {
  /**
   * List of products.
   *
   * @generated from field: repeated google.cloud.vision.v1p3beta1.Product products = 1;
   */
  products: Product[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ListProductsResponse.
 * Use `create(ListProductsResponseSchema)` to create a new message.
 */
export const ListProductsResponseSchema: GenMessage<ListProductsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 5);

/**
 * Request message for the `GetProduct` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.GetProductRequest
 */
export type GetProductRequest = Message<"google.cloud.vision.v1p3beta1.GetProductRequest"> & {
  /**
   * Required. Resource name of the Product to get.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.GetProductRequest.
 * Use `create(GetProductRequestSchema)` to create a new message.
 */
export const GetProductRequestSchema: GenMessage<GetProductRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 6);

/**
 * Request message for the `UpdateProduct` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.UpdateProductRequest
 */
export type UpdateProductRequest = Message<"google.cloud.vision.v1p3beta1.UpdateProductRequest"> & {
  /**
   * Required. The Product resource which replaces the one on the server.
   * product.name is immutable.
   *
   * @generated from field: google.cloud.vision.v1p3beta1.Product product = 1;
   */
  product?: Product;

  /**
   * The [FieldMask][google.protobuf.FieldMask] that specifies which fields
   * to update.
   * If update_mask isn't specified, all mutable fields are to be updated.
   * Valid mask paths include `product_labels`, `display_name`, and
   * `description`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.UpdateProductRequest.
 * Use `create(UpdateProductRequestSchema)` to create a new message.
 */
export const UpdateProductRequestSchema: GenMessage<UpdateProductRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 7);

/**
 * Request message for the `DeleteProduct` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.DeleteProductRequest
 */
export type DeleteProductRequest = Message<"google.cloud.vision.v1p3beta1.DeleteProductRequest"> & {
  /**
   * Required. Resource name of product to delete.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.DeleteProductRequest.
 * Use `create(DeleteProductRequestSchema)` to create a new message.
 */
export const DeleteProductRequestSchema: GenMessage<DeleteProductRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 8);

/**
 * Request message for the `CreateProductSet` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.CreateProductSetRequest
 */
export type CreateProductSetRequest = Message<"google.cloud.vision.v1p3beta1.CreateProductSetRequest"> & {
  /**
   * Required. The project in which the ProductSet should be created.
   *
   * Format is `projects/PROJECT_ID/locations/LOC_ID`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ProductSet to create.
   *
   * @generated from field: google.cloud.vision.v1p3beta1.ProductSet product_set = 2;
   */
  productSet?: ProductSet;

  /**
   * A user-supplied resource id for this ProductSet. If set, the server will
   * attempt to use this value as the resource id. If it is already in use, an
   * error is returned with code ALREADY_EXISTS. Must be at most 128 characters
   * long. It cannot contain the character `/`.
   *
   * @generated from field: string product_set_id = 3;
   */
  productSetId: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.CreateProductSetRequest.
 * Use `create(CreateProductSetRequestSchema)` to create a new message.
 */
export const CreateProductSetRequestSchema: GenMessage<CreateProductSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 9);

/**
 * Request message for the `ListProductSets` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ListProductSetsRequest
 */
export type ListProductSetsRequest = Message<"google.cloud.vision.v1p3beta1.ListProductSetsRequest"> & {
  /**
   * Required. The project from which ProductSets should be listed.
   *
   * Format is `projects/PROJECT_ID/locations/LOC_ID`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return. Default 10, maximum 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ListProductSetsRequest.
 * Use `create(ListProductSetsRequestSchema)` to create a new message.
 */
export const ListProductSetsRequestSchema: GenMessage<ListProductSetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 10);

/**
 * Response message for the `ListProductSets` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ListProductSetsResponse
 */
export type ListProductSetsResponse = Message<"google.cloud.vision.v1p3beta1.ListProductSetsResponse"> & {
  /**
   * List of ProductSets.
   *
   * @generated from field: repeated google.cloud.vision.v1p3beta1.ProductSet product_sets = 1;
   */
  productSets: ProductSet[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ListProductSetsResponse.
 * Use `create(ListProductSetsResponseSchema)` to create a new message.
 */
export const ListProductSetsResponseSchema: GenMessage<ListProductSetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 11);

/**
 * Request message for the `GetProductSet` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.GetProductSetRequest
 */
export type GetProductSetRequest = Message<"google.cloud.vision.v1p3beta1.GetProductSetRequest"> & {
  /**
   * Required. Resource name of the ProductSet to get.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.GetProductSetRequest.
 * Use `create(GetProductSetRequestSchema)` to create a new message.
 */
export const GetProductSetRequestSchema: GenMessage<GetProductSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 12);

/**
 * Request message for the `UpdateProductSet` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.UpdateProductSetRequest
 */
export type UpdateProductSetRequest = Message<"google.cloud.vision.v1p3beta1.UpdateProductSetRequest"> & {
  /**
   * Required. The ProductSet resource which replaces the one on the server.
   *
   * @generated from field: google.cloud.vision.v1p3beta1.ProductSet product_set = 1;
   */
  productSet?: ProductSet;

  /**
   * The [FieldMask][google.protobuf.FieldMask] that specifies which fields to
   * update.
   * If update_mask isn't specified, all mutable fields are to be updated.
   * Valid mask path is `display_name`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.UpdateProductSetRequest.
 * Use `create(UpdateProductSetRequestSchema)` to create a new message.
 */
export const UpdateProductSetRequestSchema: GenMessage<UpdateProductSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 13);

/**
 * Request message for the `DeleteProductSet` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.DeleteProductSetRequest
 */
export type DeleteProductSetRequest = Message<"google.cloud.vision.v1p3beta1.DeleteProductSetRequest"> & {
  /**
   * Required. Resource name of the ProductSet to delete.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.DeleteProductSetRequest.
 * Use `create(DeleteProductSetRequestSchema)` to create a new message.
 */
export const DeleteProductSetRequestSchema: GenMessage<DeleteProductSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 14);

/**
 * Request message for the `CreateReferenceImage` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.CreateReferenceImageRequest
 */
export type CreateReferenceImageRequest = Message<"google.cloud.vision.v1p3beta1.CreateReferenceImageRequest"> & {
  /**
   * Required. Resource name of the product in which to create the reference image.
   *
   * Format is
   * `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The reference image to create.
   * If an image ID is specified, it is ignored.
   *
   * @generated from field: google.cloud.vision.v1p3beta1.ReferenceImage reference_image = 2;
   */
  referenceImage?: ReferenceImage;

  /**
   * A user-supplied resource id for the ReferenceImage to be added. If set,
   * the server will attempt to use this value as the resource id. If it is
   * already in use, an error is returned with code ALREADY_EXISTS. Must be at
   * most 128 characters long. It cannot contain the character `/`.
   *
   * @generated from field: string reference_image_id = 3;
   */
  referenceImageId: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.
 * Use `create(CreateReferenceImageRequestSchema)` to create a new message.
 */
export const CreateReferenceImageRequestSchema: GenMessage<CreateReferenceImageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 15);

/**
 * Request message for the `ListReferenceImages` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ListReferenceImagesRequest
 */
export type ListReferenceImagesRequest = Message<"google.cloud.vision.v1p3beta1.ListReferenceImagesRequest"> & {
  /**
   * Required. Resource name of the product containing the reference images.
   *
   * Format is
   * `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return. Default 10, maximum 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results to be returned. This is the value
   * of `nextPageToken` returned in a previous reference image list request.
   *
   * Defaults to the first page if not specified.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.
 * Use `create(ListReferenceImagesRequestSchema)` to create a new message.
 */
export const ListReferenceImagesRequestSchema: GenMessage<ListReferenceImagesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 16);

/**
 * Response message for the `ListReferenceImages` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ListReferenceImagesResponse
 */
export type ListReferenceImagesResponse = Message<"google.cloud.vision.v1p3beta1.ListReferenceImagesResponse"> & {
  /**
   * The list of reference images.
   *
   * @generated from field: repeated google.cloud.vision.v1p3beta1.ReferenceImage reference_images = 1;
   */
  referenceImages: ReferenceImage[];

  /**
   * The maximum number of items to return. Default 10, maximum 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token returned from a previous List request, if any.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.
 * Use `create(ListReferenceImagesResponseSchema)` to create a new message.
 */
export const ListReferenceImagesResponseSchema: GenMessage<ListReferenceImagesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 17);

/**
 * Request message for the `GetReferenceImage` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.GetReferenceImageRequest
 */
export type GetReferenceImageRequest = Message<"google.cloud.vision.v1p3beta1.GetReferenceImageRequest"> & {
  /**
   * Required. The resource name of the ReferenceImage to get.
   *
   * Format is:
   *
   * `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.GetReferenceImageRequest.
 * Use `create(GetReferenceImageRequestSchema)` to create a new message.
 */
export const GetReferenceImageRequestSchema: GenMessage<GetReferenceImageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 18);

/**
 * Request message for the `DeleteReferenceImage` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest
 */
export type DeleteReferenceImageRequest = Message<"google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest"> & {
  /**
   * Required. The resource name of the reference image to delete.
   *
   * Format is:
   *
   * `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.
 * Use `create(DeleteReferenceImageRequestSchema)` to create a new message.
 */
export const DeleteReferenceImageRequestSchema: GenMessage<DeleteReferenceImageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 19);

/**
 * Request message for the `AddProductToProductSet` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.AddProductToProductSetRequest
 */
export type AddProductToProductSetRequest = Message<"google.cloud.vision.v1p3beta1.AddProductToProductSetRequest"> & {
  /**
   * Required. The resource name for the ProductSet to modify.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The resource name for the Product to be added to this ProductSet.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`
   *
   * @generated from field: string product = 2;
   */
  product: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.
 * Use `create(AddProductToProductSetRequestSchema)` to create a new message.
 */
export const AddProductToProductSetRequestSchema: GenMessage<AddProductToProductSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 20);

/**
 * Request message for the `RemoveProductFromProductSet` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest
 */
export type RemoveProductFromProductSetRequest = Message<"google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest"> & {
  /**
   * Required. The resource name for the ProductSet to modify.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The resource name for the Product to be removed from this ProductSet.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`
   *
   * @generated from field: string product = 2;
   */
  product: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.
 * Use `create(RemoveProductFromProductSetRequestSchema)` to create a new message.
 */
export const RemoveProductFromProductSetRequestSchema: GenMessage<RemoveProductFromProductSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 21);

/**
 * Request message for the `ListProductsInProductSet` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest
 */
export type ListProductsInProductSetRequest = Message<"google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest"> & {
  /**
   * Required. The ProductSet resource for which to retrieve Products.
   *
   * Format is:
   * `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The maximum number of items to return. Default 10, maximum 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.
 * Use `create(ListProductsInProductSetRequestSchema)` to create a new message.
 */
export const ListProductsInProductSetRequestSchema: GenMessage<ListProductsInProductSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 22);

/**
 * Response message for the `ListProductsInProductSet` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse
 */
export type ListProductsInProductSetResponse = Message<"google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse"> & {
  /**
   * The list of Products.
   *
   * @generated from field: repeated google.cloud.vision.v1p3beta1.Product products = 1;
   */
  products: Product[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.
 * Use `create(ListProductsInProductSetResponseSchema)` to create a new message.
 */
export const ListProductsInProductSetResponseSchema: GenMessage<ListProductsInProductSetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 23);

/**
 * The Google Cloud Storage location for a csv file which preserves a list of
 * ImportProductSetRequests in each line.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource
 */
export type ImportProductSetsGcsSource = Message<"google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource"> & {
  /**
   * The Google Cloud Storage URI of the input csv file.
   *
   * The URI must start with `gs://`.
   *
   * The format of the input csv file should be one image per line.
   * In each line, there are 6 columns.
   * 1. image_uri
   * 2, image_id
   * 3. product_set_id
   * 4. product_id
   * 5, product_category
   * 6, product_display_name
   * 7, labels
   * 8. bounding_poly
   *
   * Columns 1, 3, 4, and 5 are required, other columns are optional. A new
   * ProductSet/Product with the same id will be created on the fly
   * if the ProductSet/Product specified by product_set_id/product_id does not
   * exist.
   *
   * The image_id field is optional but has to be unique if provided. If it is
   * empty, we will automatically assign an unique id to the image.
   *
   * The product_display_name field is optional. If it is empty, a space (" ")
   * is used as the place holder for the product display_name, which can
   * be updated later through the realtime API.
   *
   * If the Product with product_id already exists, the fields
   * product_display_name, product_category and labels are ignored.
   *
   * If a Product doesn't exist and needs to be created on the fly, the
   * product_display_name field refers to
   * [Product.display_name][google.cloud.vision.v1p3beta1.Product.display_name],
   * the product_category field refers to
   * [Product.product_category][google.cloud.vision.v1p3beta1.Product.product_category],
   * and the labels field refers to [Product.labels][].
   *
   * Labels (optional) should be a line containing a list of comma-separated
   * key-value pairs, with the format
   *     "key_1=value_1,key_2=value_2,...,key_n=value_n".
   *
   * The bounding_poly (optional) field is used to identify one region of
   * interest from the image in the same manner as CreateReferenceImage. If no
   * bounding_poly is specified, the system will try to detect regions of
   * interest automatically.
   *
   * Note that the pipeline will resize the image if the image resolution is too
   * large to process (above 20MP).
   *
   * Also note that at most one bounding_poly is allowed per line. If the image
   * contains multiple regions of interest, the csv should contain one line per
   * region of interest.
   *
   * The bounding_poly column should contain an even number of comma-separated
   * numbers, with the format "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Nonnegative
   * integers should be used for absolute bounding polygons, and float values
   * in [0, 1] should be used for normalized bounding polygons.
   *
   * @generated from field: string csv_file_uri = 1;
   */
  csvFileUri: string;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.
 * Use `create(ImportProductSetsGcsSourceSchema)` to create a new message.
 */
export const ImportProductSetsGcsSourceSchema: GenMessage<ImportProductSetsGcsSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 24);

/**
 * The input content for the `ImportProductSets` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig
 */
export type ImportProductSetsInputConfig = Message<"google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig"> & {
  /**
   * The source of the input.
   *
   * @generated from oneof google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig.source
   */
  source: {
    /**
     * The Google Cloud Storage location for a csv file which preserves a list
     * of ImportProductSetRequests in each line.
     *
     * @generated from field: google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource gcs_source = 1;
     */
    value: ImportProductSetsGcsSource;
    case: "gcsSource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig.
 * Use `create(ImportProductSetsInputConfigSchema)` to create a new message.
 */
export const ImportProductSetsInputConfigSchema: GenMessage<ImportProductSetsInputConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 25);

/**
 * Request message for the `ImportProductSets` method.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ImportProductSetsRequest
 */
export type ImportProductSetsRequest = Message<"google.cloud.vision.v1p3beta1.ImportProductSetsRequest"> & {
  /**
   * Required. The project in which the ProductSets should be imported.
   *
   * Format is `projects/PROJECT_ID/locations/LOC_ID`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The input content for the list of requests.
   *
   * @generated from field: google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig input_config = 2;
   */
  inputConfig?: ImportProductSetsInputConfig;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ImportProductSetsRequest.
 * Use `create(ImportProductSetsRequestSchema)` to create a new message.
 */
export const ImportProductSetsRequestSchema: GenMessage<ImportProductSetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 26);

/**
 * Response message for the `ImportProductSets` method.
 *
 * This message is returned by the
 * [google.longrunning.Operations.GetOperation][google.longrunning.Operations.GetOperation]
 * method in the returned
 * [google.longrunning.Operation.response][google.longrunning.Operation.response]
 * field.
 *
 * @generated from message google.cloud.vision.v1p3beta1.ImportProductSetsResponse
 */
export type ImportProductSetsResponse = Message<"google.cloud.vision.v1p3beta1.ImportProductSetsResponse"> & {
  /**
   * The list of reference_images that are imported successfully.
   *
   * @generated from field: repeated google.cloud.vision.v1p3beta1.ReferenceImage reference_images = 1;
   */
  referenceImages: ReferenceImage[];

  /**
   * The rpc status for each ImportProductSet request, including both successes
   * and errors.
   *
   * The number of statuses here matches the number of lines in the csv file,
   * and statuses[i] stores the success or failure status of processing the i-th
   * line of the csv, starting from line 0.
   *
   * @generated from field: repeated google.rpc.Status statuses = 2;
   */
  statuses: Status[];
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.ImportProductSetsResponse.
 * Use `create(ImportProductSetsResponseSchema)` to create a new message.
 */
export const ImportProductSetsResponseSchema: GenMessage<ImportProductSetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 27);

/**
 * Metadata for the batch operations such as the current state.
 *
 * This is included in the `metadata` field of the `Operation` returned by the
 * `GetOperation` call of the `google::longrunning::Operations` service.
 *
 * @generated from message google.cloud.vision.v1p3beta1.BatchOperationMetadata
 */
export type BatchOperationMetadata = Message<"google.cloud.vision.v1p3beta1.BatchOperationMetadata"> & {
  /**
   * The current state of the batch operation.
   *
   * @generated from field: google.cloud.vision.v1p3beta1.BatchOperationMetadata.State state = 1;
   */
  state: BatchOperationMetadata_State;

  /**
   * The time when the batch request was submitted to the server.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 2;
   */
  submitTime?: Timestamp;

  /**
   * The time when the batch request is finished and
   * [google.longrunning.Operation.done][google.longrunning.Operation.done] is
   * set to true.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.vision.v1p3beta1.BatchOperationMetadata.
 * Use `create(BatchOperationMetadataSchema)` to create a new message.
 */
export const BatchOperationMetadataSchema: GenMessage<BatchOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 28);

/**
 * Enumerates the possible states that the batch request can be in.
 *
 * @generated from enum google.cloud.vision.v1p3beta1.BatchOperationMetadata.State
 */
export enum BatchOperationMetadata_State {
  /**
   * Invalid.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Request is actively being processed.
   *
   * @generated from enum value: PROCESSING = 1;
   */
  PROCESSING = 1,

  /**
   * The request is done and at least one item has been successfully
   * processed.
   *
   * @generated from enum value: SUCCESSFUL = 2;
   */
  SUCCESSFUL = 2,

  /**
   * The request is done and no item has been successfully processed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * The request is done after the longrunning.Operations.CancelOperation has
   * been called by the user.  Any records that were processed before the
   * cancel command are output as specified in the request.
   *
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,
}

/**
 * Describes the enum google.cloud.vision.v1p3beta1.BatchOperationMetadata.State.
 */
export const BatchOperationMetadata_StateSchema: GenEnum<BatchOperationMetadata_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 28, 0);

/**
 * Manages Products and ProductSets of reference images for use in product
 * search. It uses the following resource model:
 *
 * - The API has a collection of [ProductSet][google.cloud.vision.v1p3beta1.ProductSet] resources, named
 * `projects/*\/locations/*\/productSets/*`, which acts as a way to put different
 * products into groups to limit identification.
 *
 * In parallel,
 *
 * - The API has a collection of [Product][google.cloud.vision.v1p3beta1.Product] resources, named
 *   `projects/*\/locations/*\/products/*`
 *
 * - Each [Product][google.cloud.vision.v1p3beta1.Product] has a collection of [ReferenceImage][google.cloud.vision.v1p3beta1.ReferenceImage] resources, named
 *   `projects/*\/locations/*\/products/*\/referenceImages/*`
 *
 * @generated from service google.cloud.vision.v1p3beta1.ProductSearch
 */
export const ProductSearch: GenService<{
  /**
   * Creates and returns a new ProductSet resource.
   *
   * Possible errors:
   *
   * * Returns INVALID_ARGUMENT if display_name is missing, or is longer than
   *   4096 characters.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.CreateProductSet
   */
  createProductSet: {
    methodKind: "unary";
    input: typeof CreateProductSetRequestSchema;
    output: typeof ProductSetSchema;
  },
  /**
   * Lists ProductSets in an unspecified order.
   *
   * Possible errors:
   *
   * * Returns INVALID_ARGUMENT if page_size is greater than 100, or less
   *   than 1.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.ListProductSets
   */
  listProductSets: {
    methodKind: "unary";
    input: typeof ListProductSetsRequestSchema;
    output: typeof ListProductSetsResponseSchema;
  },
  /**
   * Gets information associated with a ProductSet.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND if the ProductSet does not exist.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.GetProductSet
   */
  getProductSet: {
    methodKind: "unary";
    input: typeof GetProductSetRequestSchema;
    output: typeof ProductSetSchema;
  },
  /**
   * Makes changes to a ProductSet resource.
   * Only display_name can be updated currently.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND if the ProductSet does not exist.
   * * Returns INVALID_ARGUMENT if display_name is present in update_mask but
   *   missing from the request or longer than 4096 characters.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.UpdateProductSet
   */
  updateProductSet: {
    methodKind: "unary";
    input: typeof UpdateProductSetRequestSchema;
    output: typeof ProductSetSchema;
  },
  /**
   * Permanently deletes a ProductSet. All Products and ReferenceImages in the
   * ProductSet will be deleted.
   *
   * The actual image files are not deleted from Google Cloud Storage.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND if the ProductSet does not exist.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.DeleteProductSet
   */
  deleteProductSet: {
    methodKind: "unary";
    input: typeof DeleteProductSetRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Creates and returns a new product resource.
   *
   * Possible errors:
   *
   * * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096
   *   characters.
   * * Returns INVALID_ARGUMENT if description is longer than 4096 characters.
   * * Returns INVALID_ARGUMENT if product_category is missing or invalid.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.CreateProduct
   */
  createProduct: {
    methodKind: "unary";
    input: typeof CreateProductRequestSchema;
    output: typeof ProductSchema;
  },
  /**
   * Lists products in an unspecified order.
   *
   * Possible errors:
   *
   * * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.ListProducts
   */
  listProducts: {
    methodKind: "unary";
    input: typeof ListProductsRequestSchema;
    output: typeof ListProductsResponseSchema;
  },
  /**
   * Gets information associated with a Product.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND if the Product does not exist.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.GetProduct
   */
  getProduct: {
    methodKind: "unary";
    input: typeof GetProductRequestSchema;
    output: typeof ProductSchema;
  },
  /**
   * Makes changes to a Product resource.
   * Only display_name, description and labels can be updated right now.
   *
   * If labels are updated, the change will not be reflected in queries until
   * the next index time.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND if the Product does not exist.
   * * Returns INVALID_ARGUMENT if display_name is present in update_mask but is
   *   missing from the request or longer than 4096 characters.
   * * Returns INVALID_ARGUMENT if description is present in update_mask but is
   *   longer than 4096 characters.
   * * Returns INVALID_ARGUMENT if product_category is present in update_mask.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.UpdateProduct
   */
  updateProduct: {
    methodKind: "unary";
    input: typeof UpdateProductRequestSchema;
    output: typeof ProductSchema;
  },
  /**
   * Permanently deletes a product and its reference images.
   *
   * Metadata of the product and all its images will be deleted right away, but
   * search queries against ProductSets containing the product may still work
   * until all related caches are refreshed.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND if the product does not exist.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.DeleteProduct
   */
  deleteProduct: {
    methodKind: "unary";
    input: typeof DeleteProductRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Creates and returns a new ReferenceImage resource.
   *
   * The `bounding_poly` field is optional. If `bounding_poly` is not specified,
   * the system will try to detect regions of interest in the image that are
   * compatible with the product_category on the parent product. If it is
   * specified, detection is ALWAYS skipped. The system converts polygons into
   * non-rotated rectangles.
   *
   * Note that the pipeline will resize the image if the image resolution is too
   * large to process (above 50MP).
   *
   * Possible errors:
   *
   * * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096
   *   characters.
   * * Returns INVALID_ARGUMENT if the product does not exist.
   * * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing
   *   compatible with the parent product's product_category is detected.
   * * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.CreateReferenceImage
   */
  createReferenceImage: {
    methodKind: "unary";
    input: typeof CreateReferenceImageRequestSchema;
    output: typeof ReferenceImageSchema;
  },
  /**
   * Permanently deletes a reference image.
   *
   * The image metadata will be deleted right away, but search queries
   * against ProductSets containing the image may still work until all related
   * caches are refreshed.
   *
   * The actual image files are not deleted from Google Cloud Storage.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND if the reference image does not exist.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.DeleteReferenceImage
   */
  deleteReferenceImage: {
    methodKind: "unary";
    input: typeof DeleteReferenceImageRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists reference images.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND if the parent product does not exist.
   * * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less
   *   than 1.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.ListReferenceImages
   */
  listReferenceImages: {
    methodKind: "unary";
    input: typeof ListReferenceImagesRequestSchema;
    output: typeof ListReferenceImagesResponseSchema;
  },
  /**
   * Gets information associated with a ReferenceImage.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND if the specified image does not exist.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.GetReferenceImage
   */
  getReferenceImage: {
    methodKind: "unary";
    input: typeof GetReferenceImageRequestSchema;
    output: typeof ReferenceImageSchema;
  },
  /**
   * Adds a Product to the specified ProductSet. If the Product is already
   * present, no change is made.
   *
   * One Product can be added to at most 100 ProductSets.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND if the Product or the ProductSet doesn't exist.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.AddProductToProductSet
   */
  addProductToProductSet: {
    methodKind: "unary";
    input: typeof AddProductToProductSetRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Removes a Product from the specified ProductSet.
   *
   * Possible errors:
   *
   * * Returns NOT_FOUND If the Product is not found under the ProductSet.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.RemoveProductFromProductSet
   */
  removeProductFromProductSet: {
    methodKind: "unary";
    input: typeof RemoveProductFromProductSetRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists the Products in a ProductSet, in an unspecified order. If the
   * ProductSet does not exist, the products field of the response will be
   * empty.
   *
   * Possible errors:
   *
   * * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.ListProductsInProductSet
   */
  listProductsInProductSet: {
    methodKind: "unary";
    input: typeof ListProductsInProductSetRequestSchema;
    output: typeof ListProductsInProductSetResponseSchema;
  },
  /**
   * Asynchronous API that imports a list of reference images to specified
   * product sets based on a list of image information.
   *
   * The [google.longrunning.Operation][google.longrunning.Operation] API can be
   * used to keep track of the progress and results of the request.
   * `Operation.metadata` contains `BatchOperationMetadata`. (progress)
   * `Operation.response` contains `ImportProductSetsResponse`. (results)
   *
   * The input source of this method is a csv file on Google Cloud Storage.
   * For the format of the csv file please see
   * [ImportProductSetsGcsSource.csv_file_uri][google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri].
   *
   * @generated from rpc google.cloud.vision.v1p3beta1.ProductSearch.ImportProductSets
   */
  importProductSets: {
    methodKind: "unary";
    input: typeof ImportProductSetsRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_vision_v1p3beta1_product_search_service, 0);

