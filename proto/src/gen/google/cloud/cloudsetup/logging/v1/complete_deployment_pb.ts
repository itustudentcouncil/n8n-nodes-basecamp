// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/cloudsetup/logging/v1/complete_deployment.proto (package google.cloud.cloudsetup.logging.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Status } from "../../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/cloudsetup/logging/v1/complete_deployment.proto.
 */
export const file_google_cloud_cloudsetup_logging_v1_complete_deployment: GenFile = /*@__PURE__*/
  fileDesc("Cjxnb29nbGUvY2xvdWQvY2xvdWRzZXR1cC9sb2dnaW5nL3YxL2NvbXBsZXRlX2RlcGxveW1lbnQucHJvdG8SImdvb2dsZS5jbG91ZC5jbG91ZHNldHVwLmxvZ2dpbmcudjEiugIKF0NvbXBsZXRlRGVwbG95bWVudEV2ZW50Ek0KBXZhbHVlGAEgASgLMjwuZ29vZ2xlLmNsb3VkLmNsb3Vkc2V0dXAubG9nZ2luZy52MS5Db21wbGV0ZURlcGxveW1lbnRSZXN1bHRIABIjCgVlcnJvchgCIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzSAASUAoFc3RhdGUYAyABKA4yQS5nb29nbGUuY2xvdWQuY2xvdWRzZXR1cC5sb2dnaW5nLnYxLkNvbXBsZXRlRGVwbG95bWVudEV2ZW50LlN0YXRlEhQKDHByZXZpZXdfb25seRgEIAEoCCI5CgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEg0KCVNVQ0NFRURFRBABEgoKBkZBSUxFRBACQggKBnJlc3VsdCKbAQoYQ29tcGxldGVEZXBsb3ltZW50UmVzdWx0EjkKCmRlcGxveW1lbnQYASABKAlCJfpBIgogY29uZmlnLmdvb2dsZWFwaXMuY29tL0RlcGxveW1lbnQSMwoHcHJldmlldxgDIAEoCUIi+kEfCh1jb25maWcuZ29vZ2xlYXBpcy5jb20vUHJldmlldxIPCgdtZXNzYWdlGAIgASgJQvgBCiZjb20uZ29vZ2xlLmNsb3VkLmNsb3Vkc2V0dXAubG9nZ2luZy52MUIXQ29tcGxldGVEZXBsb3ltZW50UHJvdG9QAVpAY2xvdWQuZ29vZ2xlLmNvbS9nby9jbG91ZHNldHVwL2xvZ2dpbmcvYXBpdjEvbG9nZ2luZ3BiO2xvZ2dpbmdwYqoCIkdvb2dsZS5DbG91ZC5DbG91ZFNldHVwLkxvZ2dpbmcuVjHKAiJHb29nbGVcQ2xvdWRcQ2xvdWRTZXR1cFxMb2dnaW5nXFYx6gImR29vZ2xlOjpDbG91ZDo6Q2xvdWRTZXR1cDo6TG9nZ2luZzo6VjFiBnByb3RvMw", [file_google_api_resource, file_google_rpc_status]);

/**
 * JSON payload for the Cloud Logging event:
 * `organizations/[organizationId]/logs/cloudsetup.googleapis.com%2Fcomplete_deployment`.
 * This event gets emitted upon completion of a config deployment as part of the
 * Cloud Setup Checklist.
 *
 * The deployment can fail even if it returns a
 * `config.googleapis.com/Deployment`. The state of that message will be
 * `FAILED`. Hence, if there is a `value` present, the `state` can still be,
 * `FAILED`. The message for the error or failure will be on the `error` or the
 * `value` if the Operation results in an error or if the `state` of the
 * Deployment is `FAILED`, respectively.
 *
 * @generated from message google.cloud.cloudsetup.logging.v1.CompleteDeploymentEvent
 */
export type CompleteDeploymentEvent = Message<"google.cloud.cloudsetup.logging.v1.CompleteDeploymentEvent"> & {
  /**
   * @generated from oneof google.cloud.cloudsetup.logging.v1.CompleteDeploymentEvent.result
   */
  result: {
    /**
     * Result of the Deployment recorded upon completion.
     *
     * @generated from field: google.cloud.cloudsetup.logging.v1.CompleteDeploymentResult value = 1;
     */
    value: CompleteDeploymentResult;
    case: "value";
  } | {
    /**
     * Result of the Deployment if the `Operation` results in an error.
     *
     * @generated from field: google.rpc.Status error = 2;
     */
    value: Status;
    case: "error";
  } | { case: undefined; value?: undefined };

  /**
   * The `state` of this deployment completion event.
   *
   * @generated from field: google.cloud.cloudsetup.logging.v1.CompleteDeploymentEvent.State state = 3;
   */
  state: CompleteDeploymentEvent_State;

  /**
   * Flag to indicate if deployment is preview only.
   *
   * @generated from field: bool preview_only = 4;
   */
  previewOnly: boolean;
};

/**
 * Describes the message google.cloud.cloudsetup.logging.v1.CompleteDeploymentEvent.
 * Use `create(CompleteDeploymentEventSchema)` to create a new message.
 */
export const CompleteDeploymentEventSchema: GenMessage<CompleteDeploymentEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_cloudsetup_logging_v1_complete_deployment, 0);

/**
 * State of the completed deployment.
 *
 * @generated from enum google.cloud.cloudsetup.logging.v1.CompleteDeploymentEvent.State
 */
export enum CompleteDeploymentEvent_State {
  /**
   * The zero value. It is applied when `state` is unset. Do not use.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Indicates that a Deployment value was present when the config deployment
   * finished and the State was anything other than FAILED.
   *
   * @generated from enum value: SUCCEEDED = 1;
   */
  SUCCEEDED = 1,

  /**
   * Indicates that the Operation result was an error or the Deployment
   * `state` was FAILED.
   *
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,
}

/**
 * Describes the enum google.cloud.cloudsetup.logging.v1.CompleteDeploymentEvent.State.
 */
export const CompleteDeploymentEvent_StateSchema: GenEnum<CompleteDeploymentEvent_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_cloudsetup_logging_v1_complete_deployment, 0, 0);

/**
 * This message is used when the CompleteDeploymentEvent has a value.
 *
 * @generated from message google.cloud.cloudsetup.logging.v1.CompleteDeploymentResult
 */
export type CompleteDeploymentResult = Message<"google.cloud.cloudsetup.logging.v1.CompleteDeploymentResult"> & {
  /**
   * This is the Deployment that completed.
   * Format is projects/{project}/locations/{location}/deployments/{name}.
   *
   * @generated from field: string deployment = 1;
   */
  deployment: string;

  /**
   * This is the Preview that completed.
   * Format is projects/{project}/locations/{location}/previews/{preview}
   *
   * @generated from field: string preview = 3;
   */
  preview: string;

  /**
   * The message that is returned when a deployment completes. This **can** be
   * an error message if the `Deployment` `state` is `FAILED`.
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message google.cloud.cloudsetup.logging.v1.CompleteDeploymentResult.
 * Use `create(CompleteDeploymentResultSchema)` to create a new message.
 */
export const CompleteDeploymentResultSchema: GenMessage<CompleteDeploymentResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_cloudsetup_logging_v1_complete_deployment, 1);

