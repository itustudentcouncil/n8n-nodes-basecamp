// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/notebooks/v1/runtime.proto (package google.cloud.notebooks.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ContainerImage } from "./environment_pb";
import { file_google_cloud_notebooks_v1_environment } from "./environment_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/notebooks/v1/runtime.proto.
 */
export const file_google_cloud_notebooks_v1_runtime: GenFile = /*@__PURE__*/
  fileDesc("Cidnb29nbGUvY2xvdWQvbm90ZWJvb2tzL3YxL3J1bnRpbWUucHJvdG8SGWdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEirQcKB1J1bnRpbWUSEQoEbmFtZRgBIAEoCUID4EEDEkQKD3ZpcnR1YWxfbWFjaGluZRgCIAEoCzIpLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuVmlydHVhbE1hY2hpbmVIABI8CgVzdGF0ZRgDIAEoDjIoLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUnVudGltZS5TdGF0ZUID4EEDEkkKDGhlYWx0aF9zdGF0ZRgEIAEoDjIuLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUnVudGltZS5IZWFsdGhTdGF0ZUID4EEDEkUKDWFjY2Vzc19jb25maWcYBSABKAsyLi5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlJ1bnRpbWVBY2Nlc3NDb25maWcSSQoPc29mdHdhcmVfY29uZmlnGAYgASgLMjAuZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5SdW50aW1lU29mdHdhcmVDb25maWcSPwoHbWV0cmljcxgHIAEoCzIpLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUnVudGltZU1ldHJpY3NCA+BBAxI0CgtjcmVhdGVfdGltZRgUIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVfdGltZRgVIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAyKUAQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIMCghTVEFSVElORxABEhAKDFBST1ZJU0lPTklORxACEgoKBkFDVElWRRADEgwKCFNUT1BQSU5HEAQSCwoHU1RPUFBFRBAFEgwKCERFTEVUSU5HEAYSDQoJVVBHUkFESU5HEAcSEAoMSU5JVElBTElaSU5HEAgidwoLSGVhbHRoU3RhdGUSHAoYSEVBTFRIX1NUQVRFX1VOU1BFQ0lGSUVEEAASCwoHSEVBTFRIWRABEg0KCVVOSEVBTFRIWRACEhcKE0FHRU5UX05PVF9JTlNUQUxMRUQQAxIVChFBR0VOVF9OT1RfUlVOTklORxAEOmHqQV4KIG5vdGVib29rcy5nb29nbGVhcGlzLmNvbS9SdW50aW1lEjpwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vcnVudGltZXMve3J1bnRpbWV9Qg4KDHJ1bnRpbWVfdHlwZSKlAwoYUnVudGltZUFjY2VsZXJhdG9yQ29uZmlnElEKBHR5cGUYASABKA4yQy5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlJ1bnRpbWVBY2NlbGVyYXRvckNvbmZpZy5BY2NlbGVyYXRvclR5cGUSEgoKY29yZV9jb3VudBgCIAEoAyKhAgoPQWNjZWxlcmF0b3JUeXBlEiAKHEFDQ0VMRVJBVE9SX1RZUEVfVU5TUEVDSUZJRUQQABIYChBOVklESUFfVEVTTEFfSzgwEAEaAggBEhUKEU5WSURJQV9URVNMQV9QMTAwEAISFQoRTlZJRElBX1RFU0xBX1YxMDAQAxITCg9OVklESUFfVEVTTEFfUDQQBBITCg9OVklESUFfVEVTTEFfVDQQBRIVChFOVklESUFfVEVTTEFfQTEwMBAGEgoKBlRQVV9WMhAHEgoKBlRQVV9WMxAIEhcKE05WSURJQV9URVNMQV9UNF9WV1MQCRIZChVOVklESUFfVEVTTEFfUDEwMF9WV1MQChIXChNOVklESUFfVEVTTEFfUDRfVldTEAsiIwoQRW5jcnlwdGlvbkNvbmZpZxIPCgdrbXNfa2V5GAEgASgJIqgDCglMb2NhbERpc2sSGAoLYXV0b19kZWxldGUYASABKAhCA+BBAxIRCgRib290GAIgASgIQgPgQQMSGAoLZGV2aWNlX25hbWUYAyABKAlCA+BBAxJaChFndWVzdF9vc19mZWF0dXJlcxgEIAMoCzI6Lmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuTG9jYWxEaXNrLlJ1bnRpbWVHdWVzdE9zRmVhdHVyZUID4EEDEhIKBWluZGV4GAUgASgFQgPgQQMSVAoRaW5pdGlhbGl6ZV9wYXJhbXMYBiABKAsyNC5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkxvY2FsRGlza0luaXRpYWxpemVQYXJhbXNCA+BBBBIRCglpbnRlcmZhY2UYByABKAkSEQoEa2luZBgIIAEoCUID4EEDEhUKCGxpY2Vuc2VzGAkgAygJQgPgQQMSDAoEbW9kZRgKIAEoCRIOCgZzb3VyY2UYCyABKAkSDAoEdHlwZRgMIAEoCRolChVSdW50aW1lR3Vlc3RPc0ZlYXR1cmUSDAoEdHlwZRgBIAEoCSKqAwoZTG9jYWxEaXNrSW5pdGlhbGl6ZVBhcmFtcxIYCgtkZXNjcmlwdGlvbhgBIAEoCUID4EEBEhYKCWRpc2tfbmFtZRgCIAEoCUID4EEBEhkKDGRpc2tfc2l6ZV9nYhgDIAEoA0ID4EEBElUKCWRpc2tfdHlwZRgEIAEoDjI9Lmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuTG9jYWxEaXNrSW5pdGlhbGl6ZVBhcmFtcy5EaXNrVHlwZUID4EEEElUKBmxhYmVscxgFIAMoCzJALmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuTG9jYWxEaXNrSW5pdGlhbGl6ZVBhcmFtcy5MYWJlbHNFbnRyeUID4EEBGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiYwoIRGlza1R5cGUSGQoVRElTS19UWVBFX1VOU1BFQ0lGSUVEEAASDwoLUERfU1RBTkRBUkQQARIKCgZQRF9TU0QQAhIPCgtQRF9CQUxBTkNFRBADEg4KClBEX0VYVFJFTUUQBCL7AQoTUnVudGltZUFjY2Vzc0NvbmZpZxJVCgthY2Nlc3NfdHlwZRgBIAEoDjJALmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUnVudGltZUFjY2Vzc0NvbmZpZy5SdW50aW1lQWNjZXNzVHlwZRIVCg1ydW50aW1lX293bmVyGAIgASgJEhYKCXByb3h5X3VyaRgDIAEoCUID4EEDIl4KEVJ1bnRpbWVBY2Nlc3NUeXBlEiMKH1JVTlRJTUVfQUNDRVNTX1RZUEVfVU5TUEVDSUZJRUQQABIPCgtTSU5HTEVfVVNFUhABEhMKD1NFUlZJQ0VfQUNDT1VOVBACIuQFChVSdW50aW1lU29mdHdhcmVDb25maWcSIQoZbm90ZWJvb2tfdXBncmFkZV9zY2hlZHVsZRgBIAEoCRIlChhlbmFibGVfaGVhbHRoX21vbml0b3JpbmcYAiABKAhIAIgBARIaCg1pZGxlX3NodXRkb3duGAMgASgISAGIAQESHQoVaWRsZV9zaHV0ZG93bl90aW1lb3V0GAQgASgFEhoKEmluc3RhbGxfZ3B1X2RyaXZlchgFIAEoCBIeChZjdXN0b21fZ3B1X2RyaXZlcl9wYXRoGAYgASgJEhsKE3Bvc3Rfc3RhcnR1cF9zY3JpcHQYByABKAkSPwoHa2VybmVscxgIIAMoCzIpLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuQ29udGFpbmVySW1hZ2VCA+BBARIdCgt1cGdyYWRlYWJsZRgJIAEoCEID4EEDSAKIAQEScAoccG9zdF9zdGFydHVwX3NjcmlwdF9iZWhhdmlvchgKIAEoDjJKLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUnVudGltZVNvZnR3YXJlQ29uZmlnLlBvc3RTdGFydHVwU2NyaXB0QmVoYXZpb3ISHQoQZGlzYWJsZV90ZXJtaW5hbBgLIAEoCEgDiAEBEhkKB3ZlcnNpb24YDCABKAlCA+BBA0gEiAEBIoABChlQb3N0U3RhcnR1cFNjcmlwdEJlaGF2aW9yEiwKKFBPU1RfU1RBUlRVUF9TQ1JJUFRfQkVIQVZJT1JfVU5TUEVDSUZJRUQQABITCg9SVU5fRVZFUllfU1RBUlQQARIgChxET1dOTE9BRF9BTkRfUlVOX0VWRVJZX1NUQVJUEAJCGwoZX2VuYWJsZV9oZWFsdGhfbW9uaXRvcmluZ0IQCg5faWRsZV9zaHV0ZG93bkIOCgxfdXBncmFkZWFibGVCEwoRX2Rpc2FibGVfdGVybWluYWxCCgoIX3ZlcnNpb24ioQEKDlJ1bnRpbWVNZXRyaWNzElkKDnN5c3RlbV9tZXRyaWNzGAEgAygLMjwuZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5SdW50aW1lTWV0cmljcy5TeXN0ZW1NZXRyaWNzRW50cnlCA+BBAxo0ChJTeXN0ZW1NZXRyaWNzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJ1Ch1SdW50aW1lU2hpZWxkZWRJbnN0YW5jZUNvbmZpZxIaChJlbmFibGVfc2VjdXJlX2Jvb3QYASABKAgSEwoLZW5hYmxlX3Z0cG0YAiABKAgSIwobZW5hYmxlX2ludGVncml0eV9tb25pdG9yaW5nGAMgASgIIpcBCg5WaXJ0dWFsTWFjaGluZRIaCg1pbnN0YW5jZV9uYW1lGAEgASgJQgPgQQMSGAoLaW5zdGFuY2VfaWQYAiABKAlCA+BBAxJPChZ2aXJ0dWFsX21hY2hpbmVfY29uZmlnGAMgASgLMi8uZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5WaXJ0dWFsTWFjaGluZUNvbmZpZyLjCQoUVmlydHVhbE1hY2hpbmVDb25maWcSEQoEem9uZRgBIAEoCUID4EEDEhkKDG1hY2hpbmVfdHlwZRgCIAEoCUID4EECEkgKEGNvbnRhaW5lcl9pbWFnZXMYAyADKAsyKS5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkNvbnRhaW5lckltYWdlQgPgQQESPAoJZGF0YV9kaXNrGAQgASgLMiQuZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5Mb2NhbERpc2tCA+BBAhJLChFlbmNyeXB0aW9uX2NvbmZpZxgFIAEoCzIrLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuRW5jcnlwdGlvbkNvbmZpZ0ID4EEBEl8KGHNoaWVsZGVkX2luc3RhbmNlX2NvbmZpZxgGIAEoCzI4Lmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUnVudGltZVNoaWVsZGVkSW5zdGFuY2VDb25maWdCA+BBARJUChJhY2NlbGVyYXRvcl9jb25maWcYByABKAsyMy5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlJ1bnRpbWVBY2NlbGVyYXRvckNvbmZpZ0ID4EEBEhQKB25ldHdvcmsYCCABKAlCA+BBARITCgZzdWJuZXQYCSABKAlCA+BBARIdChBpbnRlcm5hbF9pcF9vbmx5GAogASgIQgPgQQESEQoEdGFncxgNIAMoCUID4EEBEmMKEGd1ZXN0X2F0dHJpYnV0ZXMYDiADKAsyRC5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlZpcnR1YWxNYWNoaW5lQ29uZmlnLkd1ZXN0QXR0cmlidXRlc0VudHJ5QgPgQQMSVAoIbWV0YWRhdGEYDyADKAsyPS5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlZpcnR1YWxNYWNoaW5lQ29uZmlnLk1ldGFkYXRhRW50cnlCA+BBARJQCgZsYWJlbHMYECADKAsyOy5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlZpcnR1YWxNYWNoaW5lQ29uZmlnLkxhYmVsc0VudHJ5QgPgQQESTgoIbmljX3R5cGUYESABKA4yNy5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlZpcnR1YWxNYWNoaW5lQ29uZmlnLk5pY1R5cGVCA+BBARIeChFyZXNlcnZlZF9pcF9yYW5nZRgSIAEoCUID4EEBElIKCmJvb3RfaW1hZ2UYEyABKAsyOS5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlZpcnR1YWxNYWNoaW5lQ29uZmlnLkJvb3RJbWFnZUID4EEBGgsKCUJvb3RJbWFnZRo2ChRHdWVzdEF0dHJpYnV0ZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIj4KB05pY1R5cGUSGAoUVU5TUEVDSUZJRURfTklDX1RZUEUQABIOCgpWSVJUSU9fTkVUEAESCQoFR1ZOSUMQAkLDAQodY29tLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjFCDFJ1bnRpbWVQcm90b1ABWjtjbG91ZC5nb29nbGUuY29tL2dvL25vdGVib29rcy9hcGl2MS9ub3RlYm9va3NwYjtub3RlYm9va3NwYqoCGUdvb2dsZS5DbG91ZC5Ob3RlYm9va3MuVjHKAhlHb29nbGVcQ2xvdWRcTm90ZWJvb2tzXFYx6gIcR29vZ2xlOjpDbG91ZDo6Tm90ZWJvb2tzOjpWMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_notebooks_v1_environment, file_google_protobuf_timestamp]);

/**
 * The definition of a Runtime for a managed notebook instance.
 *
 * @generated from message google.cloud.notebooks.v1.Runtime
 */
export type Runtime = Message<"google.cloud.notebooks.v1.Runtime"> & {
  /**
   * Output only. The resource name of the runtime.
   * Format:
   * `projects/{project}/locations/{location}/runtimes/{runtimeId}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Type of the runtime; currently only supports Compute Engine VM.
   *
   * @generated from oneof google.cloud.notebooks.v1.Runtime.runtime_type
   */
  runtimeType: {
    /**
     * Use a Compute Engine VM image to start the managed notebook instance.
     *
     * @generated from field: google.cloud.notebooks.v1.VirtualMachine virtual_machine = 2;
     */
    value: VirtualMachine;
    case: "virtualMachine";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Runtime state.
   *
   * @generated from field: google.cloud.notebooks.v1.Runtime.State state = 3;
   */
  state: Runtime_State;

  /**
   * Output only. Runtime health_state.
   *
   * @generated from field: google.cloud.notebooks.v1.Runtime.HealthState health_state = 4;
   */
  healthState: Runtime_HealthState;

  /**
   * The config settings for accessing runtime.
   *
   * @generated from field: google.cloud.notebooks.v1.RuntimeAccessConfig access_config = 5;
   */
  accessConfig?: RuntimeAccessConfig;

  /**
   * The config settings for software inside the runtime.
   *
   * @generated from field: google.cloud.notebooks.v1.RuntimeSoftwareConfig software_config = 6;
   */
  softwareConfig?: RuntimeSoftwareConfig;

  /**
   * Output only. Contains Runtime daemon metrics such as Service status and JupyterLab
   * stats.
   *
   * @generated from field: google.cloud.notebooks.v1.RuntimeMetrics metrics = 7;
   */
  metrics?: RuntimeMetrics;

  /**
   * Output only. Runtime creation time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 20;
   */
  createTime?: Timestamp;

  /**
   * Output only. Runtime update time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 21;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.notebooks.v1.Runtime.
 * Use `create(RuntimeSchema)` to create a new message.
 */
export const RuntimeSchema: GenMessage<Runtime> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 0);

/**
 * The definition of the states of this runtime.
 *
 * @generated from enum google.cloud.notebooks.v1.Runtime.State
 */
export enum Runtime_State {
  /**
   * State is not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The compute layer is starting the runtime. It is not ready for use.
   *
   * @generated from enum value: STARTING = 1;
   */
  STARTING = 1,

  /**
   * The compute layer is installing required frameworks and registering the
   * runtime with notebook proxy. It cannot be used.
   *
   * @generated from enum value: PROVISIONING = 2;
   */
  PROVISIONING = 2,

  /**
   * The runtime is currently running. It is ready for use.
   *
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * The control logic is stopping the runtime. It cannot be used.
   *
   * @generated from enum value: STOPPING = 4;
   */
  STOPPING = 4,

  /**
   * The runtime is stopped. It cannot be used.
   *
   * @generated from enum value: STOPPED = 5;
   */
  STOPPED = 5,

  /**
   * The runtime is being deleted. It cannot be used.
   *
   * @generated from enum value: DELETING = 6;
   */
  DELETING = 6,

  /**
   * The runtime is upgrading. It cannot be used.
   *
   * @generated from enum value: UPGRADING = 7;
   */
  UPGRADING = 7,

  /**
   * The runtime is being created and set up. It is not ready for use.
   *
   * @generated from enum value: INITIALIZING = 8;
   */
  INITIALIZING = 8,
}

/**
 * Describes the enum google.cloud.notebooks.v1.Runtime.State.
 */
export const Runtime_StateSchema: GenEnum<Runtime_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_runtime, 0, 0);

/**
 * The runtime substate.
 *
 * @generated from enum google.cloud.notebooks.v1.Runtime.HealthState
 */
export enum Runtime_HealthState {
  /**
   * The runtime substate is unknown.
   *
   * @generated from enum value: HEALTH_STATE_UNSPECIFIED = 0;
   */
  HEALTH_STATE_UNSPECIFIED = 0,

  /**
   * The runtime is known to be in an healthy state
   * (for example, critical daemons are running)
   * Applies to ACTIVE state.
   *
   * @generated from enum value: HEALTHY = 1;
   */
  HEALTHY = 1,

  /**
   * The runtime is known to be in an unhealthy state
   * (for example, critical daemons are not running)
   * Applies to ACTIVE state.
   *
   * @generated from enum value: UNHEALTHY = 2;
   */
  UNHEALTHY = 2,

  /**
   * The runtime has not installed health monitoring agent.
   * Applies to ACTIVE state.
   *
   * @generated from enum value: AGENT_NOT_INSTALLED = 3;
   */
  AGENT_NOT_INSTALLED = 3,

  /**
   * The runtime health monitoring agent is not running.
   * Applies to ACTIVE state.
   *
   * @generated from enum value: AGENT_NOT_RUNNING = 4;
   */
  AGENT_NOT_RUNNING = 4,
}

/**
 * Describes the enum google.cloud.notebooks.v1.Runtime.HealthState.
 */
export const Runtime_HealthStateSchema: GenEnum<Runtime_HealthState> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_runtime, 0, 1);

/**
 * Definition of the types of hardware accelerators that can be used.
 * Definition of the types of hardware accelerators that can be used.
 * See [Compute Engine
 * AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes).
 * Examples:
 *
 * * `nvidia-tesla-k80`
 * * `nvidia-tesla-p100`
 * * `nvidia-tesla-v100`
 * * `nvidia-tesla-p4`
 * * `nvidia-tesla-t4`
 * * `nvidia-tesla-a100`
 *
 * @generated from message google.cloud.notebooks.v1.RuntimeAcceleratorConfig
 */
export type RuntimeAcceleratorConfig = Message<"google.cloud.notebooks.v1.RuntimeAcceleratorConfig"> & {
  /**
   * Accelerator model.
   *
   * @generated from field: google.cloud.notebooks.v1.RuntimeAcceleratorConfig.AcceleratorType type = 1;
   */
  type: RuntimeAcceleratorConfig_AcceleratorType;

  /**
   * Count of cores of this accelerator.
   *
   * @generated from field: int64 core_count = 2;
   */
  coreCount: bigint;
};

/**
 * Describes the message google.cloud.notebooks.v1.RuntimeAcceleratorConfig.
 * Use `create(RuntimeAcceleratorConfigSchema)` to create a new message.
 */
export const RuntimeAcceleratorConfigSchema: GenMessage<RuntimeAcceleratorConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 1);

/**
 * Type of this accelerator.
 *
 * @generated from enum google.cloud.notebooks.v1.RuntimeAcceleratorConfig.AcceleratorType
 */
export enum RuntimeAcceleratorConfig_AcceleratorType {
  /**
   * Accelerator type is not specified.
   *
   * @generated from enum value: ACCELERATOR_TYPE_UNSPECIFIED = 0;
   */
  ACCELERATOR_TYPE_UNSPECIFIED = 0,

  /**
   * Accelerator type is Nvidia Tesla K80.
   *
   * @generated from enum value: NVIDIA_TESLA_K80 = 1 [deprecated = true];
   * @deprecated
   */
  NVIDIA_TESLA_K80 = 1,

  /**
   * Accelerator type is Nvidia Tesla P100.
   *
   * @generated from enum value: NVIDIA_TESLA_P100 = 2;
   */
  NVIDIA_TESLA_P100 = 2,

  /**
   * Accelerator type is Nvidia Tesla V100.
   *
   * @generated from enum value: NVIDIA_TESLA_V100 = 3;
   */
  NVIDIA_TESLA_V100 = 3,

  /**
   * Accelerator type is Nvidia Tesla P4.
   *
   * @generated from enum value: NVIDIA_TESLA_P4 = 4;
   */
  NVIDIA_TESLA_P4 = 4,

  /**
   * Accelerator type is Nvidia Tesla T4.
   *
   * @generated from enum value: NVIDIA_TESLA_T4 = 5;
   */
  NVIDIA_TESLA_T4 = 5,

  /**
   * Accelerator type is Nvidia Tesla A100.
   *
   * @generated from enum value: NVIDIA_TESLA_A100 = 6;
   */
  NVIDIA_TESLA_A100 = 6,

  /**
   * (Coming soon) Accelerator type is TPU V2.
   *
   * @generated from enum value: TPU_V2 = 7;
   */
  TPU_V2 = 7,

  /**
   * (Coming soon) Accelerator type is TPU V3.
   *
   * @generated from enum value: TPU_V3 = 8;
   */
  TPU_V3 = 8,

  /**
   * Accelerator type is NVIDIA Tesla T4 Virtual Workstations.
   *
   * @generated from enum value: NVIDIA_TESLA_T4_VWS = 9;
   */
  NVIDIA_TESLA_T4_VWS = 9,

  /**
   * Accelerator type is NVIDIA Tesla P100 Virtual Workstations.
   *
   * @generated from enum value: NVIDIA_TESLA_P100_VWS = 10;
   */
  NVIDIA_TESLA_P100_VWS = 10,

  /**
   * Accelerator type is NVIDIA Tesla P4 Virtual Workstations.
   *
   * @generated from enum value: NVIDIA_TESLA_P4_VWS = 11;
   */
  NVIDIA_TESLA_P4_VWS = 11,
}

/**
 * Describes the enum google.cloud.notebooks.v1.RuntimeAcceleratorConfig.AcceleratorType.
 */
export const RuntimeAcceleratorConfig_AcceleratorTypeSchema: GenEnum<RuntimeAcceleratorConfig_AcceleratorType> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_runtime, 1, 0);

/**
 * Represents a custom encryption key configuration that can be applied to
 * a resource. This will encrypt all disks in Virtual Machine.
 *
 * @generated from message google.cloud.notebooks.v1.EncryptionConfig
 */
export type EncryptionConfig = Message<"google.cloud.notebooks.v1.EncryptionConfig"> & {
  /**
   * The Cloud KMS resource identifier of the customer-managed encryption key
   * used to protect a resource, such as a disks. It has the following
   * format:
   * `projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}`
   *
   * @generated from field: string kms_key = 1;
   */
  kmsKey: string;
};

/**
 * Describes the message google.cloud.notebooks.v1.EncryptionConfig.
 * Use `create(EncryptionConfigSchema)` to create a new message.
 */
export const EncryptionConfigSchema: GenMessage<EncryptionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 2);

/**
 * A Local attached disk resource.
 *
 * @generated from message google.cloud.notebooks.v1.LocalDisk
 */
export type LocalDisk = Message<"google.cloud.notebooks.v1.LocalDisk"> & {
  /**
   * Optional. Output only. Specifies whether the disk will be auto-deleted when the
   * instance is deleted (but not when the disk is detached from the instance).
   *
   * @generated from field: bool auto_delete = 1;
   */
  autoDelete: boolean;

  /**
   * Optional. Output only. Indicates that this is a boot disk. The virtual machine
   * will use the first partition of the disk for its root filesystem.
   *
   * @generated from field: bool boot = 2;
   */
  boot: boolean;

  /**
   * Optional. Output only. Specifies a unique device name
   * of your choice that is reflected into the
   * `/dev/disk/by-id/google-*` tree of a Linux operating system running within
   * the instance. This name can be used to reference the device for mounting,
   * resizing, and so on, from within the instance.
   *
   * If not specified, the server chooses a default device name to apply to this
   * disk, in the form persistent-disk-x, where x is a number assigned by Google
   * Compute Engine. This field is only applicable for persistent disks.
   *
   * @generated from field: string device_name = 3;
   */
  deviceName: string;

  /**
   * Output only. Indicates a list of features to enable on the guest operating system.
   * Applicable only for bootable images. Read  Enabling guest operating
   * system features to see a list of available options.
   *
   * @generated from field: repeated google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature guest_os_features = 4;
   */
  guestOsFeatures: LocalDisk_RuntimeGuestOsFeature[];

  /**
   * Output only. A zero-based index to this disk, where 0 is reserved for the
   * boot disk. If you have many disks attached to an instance, each disk would
   * have a unique index number.
   *
   * @generated from field: int32 index = 5;
   */
  index: number;

  /**
   * Input only. Specifies the parameters for a new disk that will be created
   * alongside the new instance. Use initialization parameters to create boot
   * disks or local SSDs attached to the new instance.
   *
   * This property is mutually exclusive with the source property; you can only
   * define one or the other, but not both.
   *
   * @generated from field: google.cloud.notebooks.v1.LocalDiskInitializeParams initialize_params = 6;
   */
  initializeParams?: LocalDiskInitializeParams;

  /**
   * Specifies the disk interface to use for attaching this disk, which is
   * either SCSI or NVME. The default is SCSI. Persistent disks must always use
   * SCSI and the request will fail if you attempt to attach a persistent disk
   * in any other format than SCSI. Local SSDs can use either NVME or SCSI. For
   * performance characteristics of SCSI over NVMe, see Local SSD performance.
   * Valid values:
   *
   * * `NVME`
   * * `SCSI`
   *
   * @generated from field: string interface = 7;
   */
  interface: string;

  /**
   * Output only. Type of the resource. Always compute#attachedDisk for attached disks.
   *
   * @generated from field: string kind = 8;
   */
  kind: string;

  /**
   * Output only. Any valid publicly visible licenses.
   *
   * @generated from field: repeated string licenses = 9;
   */
  licenses: string[];

  /**
   * The mode in which to attach this disk, either `READ_WRITE` or `READ_ONLY`.
   * If not specified, the default is to attach the disk in `READ_WRITE` mode.
   * Valid values:
   *
   * * `READ_ONLY`
   * * `READ_WRITE`
   *
   * @generated from field: string mode = 10;
   */
  mode: string;

  /**
   * Specifies a valid partial or full URL to an existing Persistent Disk
   * resource.
   *
   * @generated from field: string source = 11;
   */
  source: string;

  /**
   * Specifies the type of the disk, either `SCRATCH` or `PERSISTENT`. If not
   * specified, the default is `PERSISTENT`.
   * Valid values:
   *
   * * `PERSISTENT`
   * * `SCRATCH`
   *
   * @generated from field: string type = 12;
   */
  type: string;
};

/**
 * Describes the message google.cloud.notebooks.v1.LocalDisk.
 * Use `create(LocalDiskSchema)` to create a new message.
 */
export const LocalDiskSchema: GenMessage<LocalDisk> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 3);

/**
 * Optional. A list of features to enable on the guest operating system.
 * Applicable only for bootable images.
 * Read [Enabling guest operating system
 * features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features)
 * to see a list of available options.
 * Guest OS features for boot disk.
 *
 * @generated from message google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
 */
export type LocalDisk_RuntimeGuestOsFeature = Message<"google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature"> & {
  /**
   * The ID of a supported feature. Read [Enabling guest operating system
   * features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features)
   * to see a list of available options.
   *
   * Valid values:
   *
   * * `FEATURE_TYPE_UNSPECIFIED`
   * * `MULTI_IP_SUBNET`
   * * `SECURE_BOOT`
   * * `UEFI_COMPATIBLE`
   * * `VIRTIO_SCSI_MULTIQUEUE`
   * * `WINDOWS`
   *
   * @generated from field: string type = 1;
   */
  type: string;
};

/**
 * Describes the message google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature.
 * Use `create(LocalDisk_RuntimeGuestOsFeatureSchema)` to create a new message.
 */
export const LocalDisk_RuntimeGuestOsFeatureSchema: GenMessage<LocalDisk_RuntimeGuestOsFeature> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 3, 0);

/**
 * Input only. Specifies the parameters for a new disk that will be created
 * alongside the new instance. Use initialization parameters to create boot
 * disks or local SSDs attached to the new runtime.
 * This property is mutually exclusive with the source property; you can only
 * define one or the other, but not both.
 *
 * @generated from message google.cloud.notebooks.v1.LocalDiskInitializeParams
 */
export type LocalDiskInitializeParams = Message<"google.cloud.notebooks.v1.LocalDiskInitializeParams"> & {
  /**
   * Optional. Provide this property when creating the disk.
   *
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * Optional. Specifies the disk name. If not specified, the default is to use the name
   * of the instance. If the disk with the instance name exists already in the
   * given zone/region, a new name will be automatically generated.
   *
   * @generated from field: string disk_name = 2;
   */
  diskName: string;

  /**
   * Optional. Specifies the size of the disk in base-2 GB. If not specified, the disk
   * will be the same size as the image (usually 10GB). If specified, the size
   * must be equal to or larger than 10GB. Default 100 GB.
   *
   * @generated from field: int64 disk_size_gb = 3;
   */
  diskSizeGb: bigint;

  /**
   * Input only. The type of the boot disk attached to this instance, defaults to
   * standard persistent disk (`PD_STANDARD`).
   *
   * @generated from field: google.cloud.notebooks.v1.LocalDiskInitializeParams.DiskType disk_type = 4;
   */
  diskType: LocalDiskInitializeParams_DiskType;

  /**
   * Optional. Labels to apply to this disk. These can be later modified by the
   * disks.setLabels method. This field is only applicable for persistent disks.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.notebooks.v1.LocalDiskInitializeParams.
 * Use `create(LocalDiskInitializeParamsSchema)` to create a new message.
 */
export const LocalDiskInitializeParamsSchema: GenMessage<LocalDiskInitializeParams> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 4);

/**
 * Possible disk types.
 *
 * @generated from enum google.cloud.notebooks.v1.LocalDiskInitializeParams.DiskType
 */
export enum LocalDiskInitializeParams_DiskType {
  /**
   * Disk type not set.
   *
   * @generated from enum value: DISK_TYPE_UNSPECIFIED = 0;
   */
  DISK_TYPE_UNSPECIFIED = 0,

  /**
   * Standard persistent disk type.
   *
   * @generated from enum value: PD_STANDARD = 1;
   */
  PD_STANDARD = 1,

  /**
   * SSD persistent disk type.
   *
   * @generated from enum value: PD_SSD = 2;
   */
  PD_SSD = 2,

  /**
   * Balanced persistent disk type.
   *
   * @generated from enum value: PD_BALANCED = 3;
   */
  PD_BALANCED = 3,

  /**
   * Extreme persistent disk type.
   *
   * @generated from enum value: PD_EXTREME = 4;
   */
  PD_EXTREME = 4,
}

/**
 * Describes the enum google.cloud.notebooks.v1.LocalDiskInitializeParams.DiskType.
 */
export const LocalDiskInitializeParams_DiskTypeSchema: GenEnum<LocalDiskInitializeParams_DiskType> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_runtime, 4, 0);

/**
 * Specifies the login configuration for Runtime
 *
 * @generated from message google.cloud.notebooks.v1.RuntimeAccessConfig
 */
export type RuntimeAccessConfig = Message<"google.cloud.notebooks.v1.RuntimeAccessConfig"> & {
  /**
   * The type of access mode this instance.
   *
   * @generated from field: google.cloud.notebooks.v1.RuntimeAccessConfig.RuntimeAccessType access_type = 1;
   */
  accessType: RuntimeAccessConfig_RuntimeAccessType;

  /**
   * The owner of this runtime after creation. Format: `alias@example.com`
   * Currently supports one owner only.
   *
   * @generated from field: string runtime_owner = 2;
   */
  runtimeOwner: string;

  /**
   * Output only. The proxy endpoint that is used to access the runtime.
   *
   * @generated from field: string proxy_uri = 3;
   */
  proxyUri: string;
};

/**
 * Describes the message google.cloud.notebooks.v1.RuntimeAccessConfig.
 * Use `create(RuntimeAccessConfigSchema)` to create a new message.
 */
export const RuntimeAccessConfigSchema: GenMessage<RuntimeAccessConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 5);

/**
 * Possible ways to access runtime. Authentication mode.
 * Currently supports: Single User only.
 *
 * @generated from enum google.cloud.notebooks.v1.RuntimeAccessConfig.RuntimeAccessType
 */
export enum RuntimeAccessConfig_RuntimeAccessType {
  /**
   * Unspecified access.
   *
   * @generated from enum value: RUNTIME_ACCESS_TYPE_UNSPECIFIED = 0;
   */
  RUNTIME_ACCESS_TYPE_UNSPECIFIED = 0,

  /**
   * Single user login.
   *
   * @generated from enum value: SINGLE_USER = 1;
   */
  SINGLE_USER = 1,

  /**
   * Service Account mode.
   * In Service Account mode, Runtime creator will specify a SA that exists
   * in the consumer project. Using Runtime Service Account field.
   * Users accessing the Runtime need ActAs (Service Account User) permission.
   *
   * @generated from enum value: SERVICE_ACCOUNT = 2;
   */
  SERVICE_ACCOUNT = 2,
}

/**
 * Describes the enum google.cloud.notebooks.v1.RuntimeAccessConfig.RuntimeAccessType.
 */
export const RuntimeAccessConfig_RuntimeAccessTypeSchema: GenEnum<RuntimeAccessConfig_RuntimeAccessType> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_runtime, 5, 0);

/**
 * Specifies the selection and configuration of software inside the runtime.
 * The properties to set on runtime.
 * Properties keys are specified in `key:value` format, for example:
 *
 * * `idle_shutdown: true`
 * * `idle_shutdown_timeout: 180`
 * * `enable_health_monitoring: true`
 *
 * @generated from message google.cloud.notebooks.v1.RuntimeSoftwareConfig
 */
export type RuntimeSoftwareConfig = Message<"google.cloud.notebooks.v1.RuntimeSoftwareConfig"> & {
  /**
   * Cron expression in UTC timezone, used to schedule instance auto upgrade.
   * Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
   *
   * @generated from field: string notebook_upgrade_schedule = 1;
   */
  notebookUpgradeSchedule: string;

  /**
   * Verifies core internal services are running.
   * Default: True
   *
   * @generated from field: optional bool enable_health_monitoring = 2;
   */
  enableHealthMonitoring?: boolean;

  /**
   * Runtime will automatically shutdown after idle_shutdown_time.
   * Default: True
   *
   * @generated from field: optional bool idle_shutdown = 3;
   */
  idleShutdown?: boolean;

  /**
   * Time in minutes to wait before shutting down runtime. Default: 180 minutes
   *
   * @generated from field: int32 idle_shutdown_timeout = 4;
   */
  idleShutdownTimeout: number;

  /**
   * Install Nvidia Driver automatically.
   * Default: True
   *
   * @generated from field: bool install_gpu_driver = 5;
   */
  installGpuDriver: boolean;

  /**
   * Specify a custom Cloud Storage path where the GPU driver is stored.
   * If not specified, we'll automatically choose from official GPU drivers.
   *
   * @generated from field: string custom_gpu_driver_path = 6;
   */
  customGpuDriverPath: string;

  /**
   * Path to a Bash script that automatically runs after a notebook instance
   * fully boots up. The path must be a URL or
   * Cloud Storage path (`gs://path-to-file/file-name`).
   *
   * @generated from field: string post_startup_script = 7;
   */
  postStartupScript: string;

  /**
   * Optional. Use a list of container images to use as Kernels in the notebook instance.
   *
   * @generated from field: repeated google.cloud.notebooks.v1.ContainerImage kernels = 8;
   */
  kernels: ContainerImage[];

  /**
   * Output only. Bool indicating whether an newer image is available in an image family.
   *
   * @generated from field: optional bool upgradeable = 9;
   */
  upgradeable?: boolean;

  /**
   * Behavior for the post startup script.
   *
   * @generated from field: google.cloud.notebooks.v1.RuntimeSoftwareConfig.PostStartupScriptBehavior post_startup_script_behavior = 10;
   */
  postStartupScriptBehavior: RuntimeSoftwareConfig_PostStartupScriptBehavior;

  /**
   * Bool indicating whether JupyterLab terminal will be available or not.
   * Default: False
   *
   * @generated from field: optional bool disable_terminal = 11;
   */
  disableTerminal?: boolean;

  /**
   * Output only. version of boot image such as M100, from release label of the image.
   *
   * @generated from field: optional string version = 12;
   */
  version?: string;
};

/**
 * Describes the message google.cloud.notebooks.v1.RuntimeSoftwareConfig.
 * Use `create(RuntimeSoftwareConfigSchema)` to create a new message.
 */
export const RuntimeSoftwareConfigSchema: GenMessage<RuntimeSoftwareConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 6);

/**
 * Behavior for the post startup script.
 *
 * @generated from enum google.cloud.notebooks.v1.RuntimeSoftwareConfig.PostStartupScriptBehavior
 */
export enum RuntimeSoftwareConfig_PostStartupScriptBehavior {
  /**
   * Unspecified post startup script behavior. Will run only once at creation.
   *
   * @generated from enum value: POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED = 0;
   */
  POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED = 0,

  /**
   * Runs the post startup script provided during creation at every start.
   *
   * @generated from enum value: RUN_EVERY_START = 1;
   */
  RUN_EVERY_START = 1,

  /**
   * Downloads and runs the provided post startup script at every start.
   *
   * @generated from enum value: DOWNLOAD_AND_RUN_EVERY_START = 2;
   */
  DOWNLOAD_AND_RUN_EVERY_START = 2,
}

/**
 * Describes the enum google.cloud.notebooks.v1.RuntimeSoftwareConfig.PostStartupScriptBehavior.
 */
export const RuntimeSoftwareConfig_PostStartupScriptBehaviorSchema: GenEnum<RuntimeSoftwareConfig_PostStartupScriptBehavior> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_runtime, 6, 0);

/**
 * Contains runtime daemon metrics, such as OS and kernels and sessions stats.
 *
 * @generated from message google.cloud.notebooks.v1.RuntimeMetrics
 */
export type RuntimeMetrics = Message<"google.cloud.notebooks.v1.RuntimeMetrics"> & {
  /**
   * Output only. The system metrics.
   *
   * @generated from field: map<string, string> system_metrics = 1;
   */
  systemMetrics: { [key: string]: string };
};

/**
 * Describes the message google.cloud.notebooks.v1.RuntimeMetrics.
 * Use `create(RuntimeMetricsSchema)` to create a new message.
 */
export const RuntimeMetricsSchema: GenMessage<RuntimeMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 7);

/**
 * A set of Shielded Instance options.
 * Check [Images using supported Shielded VM
 * features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
 * Not all combinations are valid.
 *
 * @generated from message google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
 */
export type RuntimeShieldedInstanceConfig = Message<"google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig"> & {
  /**
   * Defines whether the instance has Secure Boot enabled.
   *
   * Secure Boot helps ensure that the system only runs authentic software by
   * verifying the digital signature of all boot components, and halting the
   * boot process if signature verification fails. Disabled by default.
   *
   * @generated from field: bool enable_secure_boot = 1;
   */
  enableSecureBoot: boolean;

  /**
   * Defines whether the instance has the vTPM enabled. Enabled by default.
   *
   * @generated from field: bool enable_vtpm = 2;
   */
  enableVtpm: boolean;

  /**
   * Defines whether the instance has integrity monitoring enabled.
   *
   * Enables monitoring and attestation of the boot integrity of the instance.
   * The attestation is performed against the integrity policy baseline. This
   * baseline is initially derived from the implicitly trusted boot image when
   * the instance is created. Enabled by default.
   *
   * @generated from field: bool enable_integrity_monitoring = 3;
   */
  enableIntegrityMonitoring: boolean;
};

/**
 * Describes the message google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig.
 * Use `create(RuntimeShieldedInstanceConfigSchema)` to create a new message.
 */
export const RuntimeShieldedInstanceConfigSchema: GenMessage<RuntimeShieldedInstanceConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 8);

/**
 * Runtime using Virtual Machine for computing.
 *
 * @generated from message google.cloud.notebooks.v1.VirtualMachine
 */
export type VirtualMachine = Message<"google.cloud.notebooks.v1.VirtualMachine"> & {
  /**
   * Output only. The user-friendly name of the Managed Compute Engine instance.
   *
   * @generated from field: string instance_name = 1;
   */
  instanceName: string;

  /**
   * Output only. The unique identifier of the Managed Compute Engine instance.
   *
   * @generated from field: string instance_id = 2;
   */
  instanceId: string;

  /**
   * Virtual Machine configuration settings.
   *
   * @generated from field: google.cloud.notebooks.v1.VirtualMachineConfig virtual_machine_config = 3;
   */
  virtualMachineConfig?: VirtualMachineConfig;
};

/**
 * Describes the message google.cloud.notebooks.v1.VirtualMachine.
 * Use `create(VirtualMachineSchema)` to create a new message.
 */
export const VirtualMachineSchema: GenMessage<VirtualMachine> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 9);

/**
 * The config settings for virtual machine.
 *
 * @generated from message google.cloud.notebooks.v1.VirtualMachineConfig
 */
export type VirtualMachineConfig = Message<"google.cloud.notebooks.v1.VirtualMachineConfig"> & {
  /**
   * Output only. The zone where the virtual machine is located.
   * If using regional request, the notebooks service will pick a location
   * in the corresponding runtime region.
   * On a get request, zone will always be present. Example:
   * * `us-central1-b`
   *
   * @generated from field: string zone = 1;
   */
  zone: string;

  /**
   * Required. The Compute Engine machine type used for runtimes.
   * Short name is valid. Examples:
   * * `n1-standard-2`
   * * `e2-standard-8`
   *
   * @generated from field: string machine_type = 2;
   */
  machineType: string;

  /**
   * Optional. Use a list of container images to use as Kernels in the notebook instance.
   *
   * @generated from field: repeated google.cloud.notebooks.v1.ContainerImage container_images = 3;
   */
  containerImages: ContainerImage[];

  /**
   * Required. Data disk option configuration settings.
   *
   * @generated from field: google.cloud.notebooks.v1.LocalDisk data_disk = 4;
   */
  dataDisk?: LocalDisk;

  /**
   * Optional. Encryption settings for virtual machine data disk.
   *
   * @generated from field: google.cloud.notebooks.v1.EncryptionConfig encryption_config = 5;
   */
  encryptionConfig?: EncryptionConfig;

  /**
   * Optional. Shielded VM Instance configuration settings.
   *
   * @generated from field: google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig shielded_instance_config = 6;
   */
  shieldedInstanceConfig?: RuntimeShieldedInstanceConfig;

  /**
   * Optional. The Compute Engine accelerator configuration for this runtime.
   *
   * @generated from field: google.cloud.notebooks.v1.RuntimeAcceleratorConfig accelerator_config = 7;
   */
  acceleratorConfig?: RuntimeAcceleratorConfig;

  /**
   * Optional. The Compute Engine network to be used for machine
   * communications. Cannot be specified with subnetwork. If neither
   * `network` nor `subnet` is specified, the "default" network of
   * the project is used, if it exists.
   *
   * A full URL or partial URI. Examples:
   *
   * * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default`
   * * `projects/[project_id]/global/networks/default`
   *
   * Runtimes are managed resources inside Google Infrastructure.
   * Runtimes support the following network configurations:
   *
   * * Google Managed Network (Network & subnet are empty)
   * * Consumer Project VPC (network & subnet are required). Requires
   * configuring Private Service Access.
   * * Shared VPC (network & subnet are required). Requires configuring Private
   * Service Access.
   *
   * @generated from field: string network = 8;
   */
  network: string;

  /**
   * Optional. The Compute Engine subnetwork to be used for machine
   * communications. Cannot be specified with network.
   *
   * A full URL or partial URI are valid. Examples:
   *
   * * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0`
   * * `projects/[project_id]/regions/us-east1/subnetworks/sub0`
   *
   * @generated from field: string subnet = 9;
   */
  subnet: string;

  /**
   * Optional. If true, runtime will only have internal IP
   * addresses. By default, runtimes are not restricted to internal IP
   * addresses, and will have ephemeral external IP addresses assigned to each
   * vm. This `internal_ip_only` restriction can only be enabled for
   * subnetwork enabled networks, and all dependencies must be
   * configured to be accessible without external IP addresses.
   *
   * @generated from field: bool internal_ip_only = 10;
   */
  internalIpOnly: boolean;

  /**
   * Optional. The Compute Engine tags to add to runtime (see [Tagging
   * instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
   *
   * @generated from field: repeated string tags = 13;
   */
  tags: string[];

  /**
   * Output only. The Compute Engine guest attributes. (see
   * [Project and instance
   * guest
   * attributes](https://cloud.google.com/compute/docs/storing-retrieving-metadata#guest_attributes)).
   *
   * @generated from field: map<string, string> guest_attributes = 14;
   */
  guestAttributes: { [key: string]: string };

  /**
   * Optional. The Compute Engine metadata entries to add to virtual machine. (see
   * [Project and instance
   * metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
   *
   * @generated from field: map<string, string> metadata = 15;
   */
  metadata: { [key: string]: string };

  /**
   * Optional. The labels to associate with this runtime.
   * Label **keys** must contain 1 to 63 characters, and must conform to
   * [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
   * Label **values** may be empty, but, if present, must contain 1 to 63
   * characters, and must conform to [RFC
   * 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be
   * associated with a cluster.
   *
   * @generated from field: map<string, string> labels = 16;
   */
  labels: { [key: string]: string };

  /**
   * Optional. The type of vNIC to be used on this interface. This may be gVNIC or
   * VirtioNet.
   *
   * @generated from field: google.cloud.notebooks.v1.VirtualMachineConfig.NicType nic_type = 17;
   */
  nicType: VirtualMachineConfig_NicType;

  /**
   * Optional. Reserved IP Range name is used for VPC Peering.
   * The subnetwork allocation will use the range *name* if it's assigned.
   *
   * Example: managed-notebooks-range-c
   *
   *     PEERING_RANGE_NAME_3=managed-notebooks-range-c
   *     gcloud compute addresses create $PEERING_RANGE_NAME_3 \
   *       --global \
   *       --prefix-length=24 \
   *       --description="Google Cloud Managed Notebooks Range 24 c" \
   *       --network=$NETWORK \
   *       --addresses=192.168.0.0 \
   *       --purpose=VPC_PEERING
   *
   * Field value will be: `managed-notebooks-range-c`
   *
   * @generated from field: string reserved_ip_range = 18;
   */
  reservedIpRange: string;

  /**
   * Optional. Boot image metadata used for runtime upgradeability.
   *
   * @generated from field: google.cloud.notebooks.v1.VirtualMachineConfig.BootImage boot_image = 19;
   */
  bootImage?: VirtualMachineConfig_BootImage;
};

/**
 * Describes the message google.cloud.notebooks.v1.VirtualMachineConfig.
 * Use `create(VirtualMachineConfigSchema)` to create a new message.
 */
export const VirtualMachineConfigSchema: GenMessage<VirtualMachineConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 10);

/**
 * Definition of the boot image used by the Runtime.
 * Used to facilitate runtime upgradeability.
 *
 * @generated from message google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
 */
export type VirtualMachineConfig_BootImage = Message<"google.cloud.notebooks.v1.VirtualMachineConfig.BootImage"> & {
};

/**
 * Describes the message google.cloud.notebooks.v1.VirtualMachineConfig.BootImage.
 * Use `create(VirtualMachineConfig_BootImageSchema)` to create a new message.
 */
export const VirtualMachineConfig_BootImageSchema: GenMessage<VirtualMachineConfig_BootImage> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_runtime, 10, 0);

/**
 * The type of vNIC driver.
 * Default should be UNSPECIFIED_NIC_TYPE.
 *
 * @generated from enum google.cloud.notebooks.v1.VirtualMachineConfig.NicType
 */
export enum VirtualMachineConfig_NicType {
  /**
   * No type specified.
   *
   * @generated from enum value: UNSPECIFIED_NIC_TYPE = 0;
   */
  UNSPECIFIED_NIC_TYPE = 0,

  /**
   * VIRTIO
   *
   * @generated from enum value: VIRTIO_NET = 1;
   */
  VIRTIO_NET = 1,

  /**
   * GVNIC
   *
   * @generated from enum value: GVNIC = 2;
   */
  GVNIC = 2,
}

/**
 * Describes the enum google.cloud.notebooks.v1.VirtualMachineConfig.NicType.
 */
export const VirtualMachineConfig_NicTypeSchema: GenEnum<VirtualMachineConfig_NicType> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_runtime, 10, 0);

