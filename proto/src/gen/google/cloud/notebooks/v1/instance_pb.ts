// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/notebooks/v1/instance.proto (package google.cloud.notebooks.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ContainerImage, VmImage } from "./environment_pb";
import { file_google_cloud_notebooks_v1_environment } from "./environment_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/notebooks/v1/instance.proto.
 */
export const file_google_cloud_notebooks_v1_instance: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvY2xvdWQvbm90ZWJvb2tzL3YxL2luc3RhbmNlLnByb3RvEhlnb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxIvkBChNSZXNlcnZhdGlvbkFmZmluaXR5EloKGGNvbnN1bWVfcmVzZXJ2YXRpb25fdHlwZRgBIAEoDjIzLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUmVzZXJ2YXRpb25BZmZpbml0eS5UeXBlQgPgQQESEAoDa2V5GAIgASgJQgPgQQESEwoGdmFsdWVzGAMgAygJQgPgQQEiXwoEVHlwZRIUChBUWVBFX1VOU1BFQ0lGSUVEEAASEgoOTk9fUkVTRVJWQVRJT04QARITCg9BTllfUkVTRVJWQVRJT04QAhIYChRTUEVDSUZJQ19SRVNFUlZBVElPThADIq0cCghJbnN0YW5jZRIRCgRuYW1lGAEgASgJQgPgQQMSNgoIdm1faW1hZ2UYAiABKAsyIi5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlZtSW1hZ2VIABJECg9jb250YWluZXJfaW1hZ2UYAyABKAsyKS5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkNvbnRhaW5lckltYWdlSAASGwoTcG9zdF9zdGFydHVwX3NjcmlwdBgEIAEoCRIWCglwcm94eV91cmkYBSABKAlCA+BBAxIcCg9pbnN0YW5jZV9vd25lcnMYBiADKAlCA+BBBBIXCg9zZXJ2aWNlX2FjY291bnQYByABKAkSIwoWc2VydmljZV9hY2NvdW50X3Njb3BlcxgfIAMoCUID4EEBEhkKDG1hY2hpbmVfdHlwZRgIIAEoCUID4EECElEKEmFjY2VsZXJhdG9yX2NvbmZpZxgJIAEoCzI1Lmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuSW5zdGFuY2UuQWNjZWxlcmF0b3JDb25maWcSPQoFc3RhdGUYCiABKA4yKS5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3RhbmNlLlN0YXRlQgPgQQMSGgoSaW5zdGFsbF9ncHVfZHJpdmVyGAsgASgIEh4KFmN1c3RvbV9ncHVfZHJpdmVyX3BhdGgYDCABKAkSSQoOYm9vdF9kaXNrX3R5cGUYDSABKA4yLC5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3RhbmNlLkRpc2tUeXBlQgPgQQQSHgoRYm9vdF9kaXNrX3NpemVfZ2IYDiABKANCA+BBBBJJCg5kYXRhX2Rpc2tfdHlwZRgZIAEoDjIsLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuSW5zdGFuY2UuRGlza1R5cGVCA+BBBBIeChFkYXRhX2Rpc2tfc2l6ZV9nYhgaIAEoA0ID4EEEEiAKE25vX3JlbW92ZV9kYXRhX2Rpc2sYGyABKAhCA+BBBBJQCg9kaXNrX2VuY3J5cHRpb24YDyABKA4yMi5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3RhbmNlLkRpc2tFbmNyeXB0aW9uQgPgQQQSFAoHa21zX2tleRgQIAEoCUID4EEEEjwKBWRpc2tzGBwgAygLMiguZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5JbnN0YW5jZS5EaXNrQgPgQQMSYQoYc2hpZWxkZWRfaW5zdGFuY2VfY29uZmlnGB4gASgLMjouZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5JbnN0YW5jZS5TaGllbGRlZEluc3RhbmNlQ29uZmlnQgPgQQESFAoMbm9fcHVibGljX2lwGBEgASgIEhcKD25vX3Byb3h5X2FjY2VzcxgSIAEoCBIPCgduZXR3b3JrGBMgASgJEg4KBnN1Ym5ldBgUIAEoCRI/CgZsYWJlbHMYFSADKAsyLy5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3RhbmNlLkxhYmVsc0VudHJ5EkMKCG1ldGFkYXRhGBYgAygLMjEuZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5JbnN0YW5jZS5NZXRhZGF0YUVudHJ5EhEKBHRhZ3MYICADKAlCA+BBARJQCg91cGdyYWRlX2hpc3RvcnkYHSADKAsyNy5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3RhbmNlLlVwZ3JhZGVIaXN0b3J5RW50cnkSQgoIbmljX3R5cGUYISABKA4yKy5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3RhbmNlLk5pY1R5cGVCA+BBARJRChRyZXNlcnZhdGlvbl9hZmZpbml0eRgiIAEoCzIuLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUmVzZXJ2YXRpb25BZmZpbml0eUID4EEBEhQKB2NyZWF0b3IYJCABKAlCA+BBAxIbCg5jYW5faXBfZm9yd2FyZBgnIAEoCEID4EEBEjQKC2NyZWF0ZV90aW1lGBcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGBggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDGmoKEUFjY2VsZXJhdG9yQ29uZmlnEkEKBHR5cGUYASABKA4yMy5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3RhbmNlLkFjY2VsZXJhdG9yVHlwZRISCgpjb3JlX2NvdW50GAIgASgDGrYCCgREaXNrEhMKC2F1dG9fZGVsZXRlGAEgASgIEgwKBGJvb3QYAiABKAgSEwoLZGV2aWNlX25hbWUYAyABKAkSFAoMZGlza19zaXplX2diGAQgASgDElIKEWd1ZXN0X29zX2ZlYXR1cmVzGAUgAygLMjcuZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5JbnN0YW5jZS5EaXNrLkd1ZXN0T3NGZWF0dXJlEg0KBWluZGV4GAYgASgDEhEKCWludGVyZmFjZRgHIAEoCRIMCgRraW5kGAggASgJEhAKCGxpY2Vuc2VzGAkgAygJEgwKBG1vZGUYCiABKAkSDgoGc291cmNlGAsgASgJEgwKBHR5cGUYDCABKAkaHgoOR3Vlc3RPc0ZlYXR1cmUSDAoEdHlwZRgBIAEoCRpuChZTaGllbGRlZEluc3RhbmNlQ29uZmlnEhoKEmVuYWJsZV9zZWN1cmVfYm9vdBgBIAEoCBITCgtlbmFibGVfdnRwbRgCIAEoCBIjChtlbmFibGVfaW50ZWdyaXR5X21vbml0b3JpbmcYAyABKAga/AMKE1VwZ3JhZGVIaXN0b3J5RW50cnkSEAoIc25hcHNob3QYASABKAkSEAoIdm1faW1hZ2UYAiABKAkSFwoPY29udGFpbmVyX2ltYWdlGAMgASgJEhEKCWZyYW1ld29yaxgEIAEoCRIPCgd2ZXJzaW9uGAUgASgJEkwKBXN0YXRlGAYgASgOMj0uZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5JbnN0YW5jZS5VcGdyYWRlSGlzdG9yeUVudHJ5LlN0YXRlEi8KC2NyZWF0ZV90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIYCgx0YXJnZXRfaW1hZ2UYCCABKAlCAhgBEk4KBmFjdGlvbhgJIAEoDjI+Lmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuSW5zdGFuY2UuVXBncmFkZUhpc3RvcnlFbnRyeS5BY3Rpb24SFgoOdGFyZ2V0X3ZlcnNpb24YCiABKAkiRgoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABILCgdTVEFSVEVEEAESDQoJU1VDQ0VFREVEEAISCgoGRkFJTEVEEAMiOwoGQWN0aW9uEhYKEkFDVElPTl9VTlNQRUNJRklFRBAAEgsKB1VQR1JBREUQARIMCghST0xMQkFDSxACGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIp0CCg9BY2NlbGVyYXRvclR5cGUSIAocQUNDRUxFUkFUT1JfVFlQRV9VTlNQRUNJRklFRBAAEhQKEE5WSURJQV9URVNMQV9LODAQARIVChFOVklESUFfVEVTTEFfUDEwMBACEhUKEU5WSURJQV9URVNMQV9WMTAwEAMSEwoPTlZJRElBX1RFU0xBX1A0EAQSEwoPTlZJRElBX1RFU0xBX1Q0EAUSFQoRTlZJRElBX1RFU0xBX0ExMDAQCxIXChNOVklESUFfVEVTTEFfVDRfVldTEAgSGQoVTlZJRElBX1RFU0xBX1AxMDBfVldTEAkSFwoTTlZJRElBX1RFU0xBX1A0X1ZXUxAKEgoKBlRQVV9WMhAGEgoKBlRQVV9WMxAHIsMBCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgwKCFNUQVJUSU5HEAESEAoMUFJPVklTSU9OSU5HEAISCgoGQUNUSVZFEAMSDAoIU1RPUFBJTkcQBBILCgdTVE9QUEVEEAUSCwoHREVMRVRFRBAGEg0KCVVQR1JBRElORxAHEhAKDElOSVRJQUxJWklORxAIEg8KC1JFR0lTVEVSSU5HEAkSDgoKU1VTUEVORElORxAKEg0KCVNVU1BFTkRFRBALImMKCERpc2tUeXBlEhkKFURJU0tfVFlQRV9VTlNQRUNJRklFRBAAEg8KC1BEX1NUQU5EQVJEEAESCgoGUERfU1NEEAISDwoLUERfQkFMQU5DRUQQAxIOCgpQRF9FWFRSRU1FEAQiRQoORGlza0VuY3J5cHRpb24SHwobRElTS19FTkNSWVBUSU9OX1VOU1BFQ0lGSUVEEAASCAoER01FSxABEggKBENNRUsQAiI+CgdOaWNUeXBlEhgKFFVOU1BFQ0lGSUVEX05JQ19UWVBFEAASDgoKVklSVElPX05FVBABEgkKBUdWTklDEAI6T+pBTAohbm90ZWJvb2tzLmdvb2dsZWFwaXMuY29tL0luc3RhbmNlEidwcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX1CDQoLZW52aXJvbm1lbnRCxAEKHWNvbS5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxQg1JbnN0YW5jZVByb3RvUAFaO2Nsb3VkLmdvb2dsZS5jb20vZ28vbm90ZWJvb2tzL2FwaXYxL25vdGVib29rc3BiO25vdGVib29rc3BiqgIZR29vZ2xlLkNsb3VkLk5vdGVib29rcy5WMcoCGUdvb2dsZVxDbG91ZFxOb3RlYm9va3NcVjHqAhxHb29nbGU6OkNsb3VkOjpOb3RlYm9va3M6OlYxYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_notebooks_v1_environment, file_google_protobuf_timestamp]);

/**
 * Reservation Affinity for consuming Zonal reservation.
 *
 * @generated from message google.cloud.notebooks.v1.ReservationAffinity
 */
export type ReservationAffinity = Message<"google.cloud.notebooks.v1.ReservationAffinity"> & {
  /**
   * Optional. Type of reservation to consume
   *
   * @generated from field: google.cloud.notebooks.v1.ReservationAffinity.Type consume_reservation_type = 1;
   */
  consumeReservationType: ReservationAffinity_Type;

  /**
   * Optional. Corresponds to the label key of reservation resource.
   *
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * Optional. Corresponds to the label values of reservation resource.
   *
   * @generated from field: repeated string values = 3;
   */
  values: string[];
};

/**
 * Describes the message google.cloud.notebooks.v1.ReservationAffinity.
 * Use `create(ReservationAffinitySchema)` to create a new message.
 */
export const ReservationAffinitySchema: GenMessage<ReservationAffinity> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_instance, 0);

/**
 * Indicates whether to consume capacity from an reservation or not.
 *
 * @generated from enum google.cloud.notebooks.v1.ReservationAffinity.Type
 */
export enum ReservationAffinity_Type {
  /**
   * Default type.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Do not consume from any allocated capacity.
   *
   * @generated from enum value: NO_RESERVATION = 1;
   */
  NO_RESERVATION = 1,

  /**
   * Consume any reservation available.
   *
   * @generated from enum value: ANY_RESERVATION = 2;
   */
  ANY_RESERVATION = 2,

  /**
   * Must consume from a specific reservation. Must specify key value fields
   * for specifying the reservations.
   *
   * @generated from enum value: SPECIFIC_RESERVATION = 3;
   */
  SPECIFIC_RESERVATION = 3,
}

/**
 * Describes the enum google.cloud.notebooks.v1.ReservationAffinity.Type.
 */
export const ReservationAffinity_TypeSchema: GenEnum<ReservationAffinity_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_instance, 0, 0);

/**
 * The definition of a notebook instance.
 *
 * @generated from message google.cloud.notebooks.v1.Instance
 */
export type Instance = Message<"google.cloud.notebooks.v1.Instance"> & {
  /**
   * Output only. The name of this notebook instance. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Type of the environment; can be one of VM image, or container image.
   *
   * @generated from oneof google.cloud.notebooks.v1.Instance.environment
   */
  environment: {
    /**
     * Use a Compute Engine VM image to start the notebook instance.
     *
     * @generated from field: google.cloud.notebooks.v1.VmImage vm_image = 2;
     */
    value: VmImage;
    case: "vmImage";
  } | {
    /**
     * Use a container image to start the notebook instance.
     *
     * @generated from field: google.cloud.notebooks.v1.ContainerImage container_image = 3;
     */
    value: ContainerImage;
    case: "containerImage";
  } | { case: undefined; value?: undefined };

  /**
   * Path to a Bash script that automatically runs after a notebook instance
   * fully boots up. The path must be a URL or
   * Cloud Storage path (`gs://path-to-file/file-name`).
   *
   * @generated from field: string post_startup_script = 4;
   */
  postStartupScript: string;

  /**
   * Output only. The proxy endpoint that is used to access the Jupyter notebook.
   *
   * @generated from field: string proxy_uri = 5;
   */
  proxyUri: string;

  /**
   * Input only. The owner of this instance after creation. Format: `alias@example.com`
   *
   * Currently supports one owner only. If not specified, all of the service
   * account users of your VM instance's service account can use
   * the instance.
   *
   * @generated from field: repeated string instance_owners = 6;
   */
  instanceOwners: string[];

  /**
   * The service account on this instance, giving access to other Google
   * Cloud services.
   * You can use any service account within the same project, but you
   * must have the service account user permission to use the instance.
   *
   * If not specified, the [Compute Engine default service
   * account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account)
   * is used.
   *
   * @generated from field: string service_account = 7;
   */
  serviceAccount: string;

  /**
   * Optional. The URIs of service account scopes to be included in
   * Compute Engine instances.
   *
   * If not specified, the following
   * [scopes](https://cloud.google.com/compute/docs/access/service-accounts#accesscopesiam)
   * are defined:
   *  - https://www.googleapis.com/auth/cloud-platform
   *  - https://www.googleapis.com/auth/userinfo.email
   * If not using default scopes, you need at least:
   *    https://www.googleapis.com/auth/compute
   *
   * @generated from field: repeated string service_account_scopes = 31;
   */
  serviceAccountScopes: string[];

  /**
   * Required. The [Compute Engine machine
   * type](https://cloud.google.com/compute/docs/machine-types) of this
   * instance.
   *
   * @generated from field: string machine_type = 8;
   */
  machineType: string;

  /**
   * The hardware accelerator used on this instance. If you use
   * accelerators, make sure that your configuration has
   * [enough vCPUs and memory to support the `machine_type` you have
   * selected](https://cloud.google.com/compute/docs/gpus/#gpus-list).
   *
   * @generated from field: google.cloud.notebooks.v1.Instance.AcceleratorConfig accelerator_config = 9;
   */
  acceleratorConfig?: Instance_AcceleratorConfig;

  /**
   * Output only. The state of this instance.
   *
   * @generated from field: google.cloud.notebooks.v1.Instance.State state = 10;
   */
  state: Instance_State;

  /**
   * Whether the end user authorizes Google Cloud to install GPU driver
   * on this instance.
   * If this field is empty or set to false, the GPU driver won't be installed.
   * Only applicable to instances with GPUs.
   *
   * @generated from field: bool install_gpu_driver = 11;
   */
  installGpuDriver: boolean;

  /**
   * Specify a custom Cloud Storage path where the GPU driver is stored.
   * If not specified, we'll automatically choose from official GPU drivers.
   *
   * @generated from field: string custom_gpu_driver_path = 12;
   */
  customGpuDriverPath: string;

  /**
   * Input only. The type of the boot disk attached to this instance, defaults to
   * standard persistent disk (`PD_STANDARD`).
   *
   * @generated from field: google.cloud.notebooks.v1.Instance.DiskType boot_disk_type = 13;
   */
  bootDiskType: Instance_DiskType;

  /**
   * Input only. The size of the boot disk in GB attached to this instance, up to a maximum
   * of 64000 GB (64 TB). The minimum recommended value is 100 GB. If not
   * specified, this defaults to 100.
   *
   * @generated from field: int64 boot_disk_size_gb = 14;
   */
  bootDiskSizeGb: bigint;

  /**
   * Input only. The type of the data disk attached to this instance, defaults to
   * standard persistent disk (`PD_STANDARD`).
   *
   * @generated from field: google.cloud.notebooks.v1.Instance.DiskType data_disk_type = 25;
   */
  dataDiskType: Instance_DiskType;

  /**
   * Input only. The size of the data disk in GB attached to this instance, up to a maximum
   * of 64000 GB (64 TB). You can choose the size of the data disk based on how
   * big your notebooks and data are. If not specified, this defaults to 100.
   *
   * @generated from field: int64 data_disk_size_gb = 26;
   */
  dataDiskSizeGb: bigint;

  /**
   * Input only. If true, the data disk will not be auto deleted when deleting the instance.
   *
   * @generated from field: bool no_remove_data_disk = 27;
   */
  noRemoveDataDisk: boolean;

  /**
   * Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.
   *
   * @generated from field: google.cloud.notebooks.v1.Instance.DiskEncryption disk_encryption = 15;
   */
  diskEncryption: Instance_DiskEncryption;

  /**
   * Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption
   * is CMEK.
   * Format:
   * `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
   *
   * Learn more about [using your own encryption keys](/kms/docs/quickstart).
   *
   * @generated from field: string kms_key = 16;
   */
  kmsKey: string;

  /**
   * Output only. Attached disks to notebook instance.
   *
   * @generated from field: repeated google.cloud.notebooks.v1.Instance.Disk disks = 28;
   */
  disks: Instance_Disk[];

  /**
   * Optional. Shielded VM configuration.
   * [Images using supported Shielded VM
   * features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
   *
   * @generated from field: google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig shielded_instance_config = 30;
   */
  shieldedInstanceConfig?: Instance_ShieldedInstanceConfig;

  /**
   * If true, no public IP will be assigned to this instance.
   *
   * @generated from field: bool no_public_ip = 17;
   */
  noPublicIp: boolean;

  /**
   * If true, the notebook instance will not register with the proxy.
   *
   * @generated from field: bool no_proxy_access = 18;
   */
  noProxyAccess: boolean;

  /**
   * The name of the VPC that this instance is in.
   * Format:
   * `projects/{project_id}/global/networks/{network_id}`
   *
   * @generated from field: string network = 19;
   */
  network: string;

  /**
   * The name of the subnet that this instance is in.
   * Format:
   * `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`
   *
   * @generated from field: string subnet = 20;
   */
  subnet: string;

  /**
   * Labels to apply to this instance.
   * These can be later modified by the setLabels method.
   *
   * @generated from field: map<string, string> labels = 21;
   */
  labels: { [key: string]: string };

  /**
   * Custom metadata to apply to this instance.
   *
   * @generated from field: map<string, string> metadata = 22;
   */
  metadata: { [key: string]: string };

  /**
   * Optional. The Compute Engine tags to add to runtime (see [Tagging
   * instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
   *
   * @generated from field: repeated string tags = 32;
   */
  tags: string[];

  /**
   * The upgrade history of this instance.
   *
   * @generated from field: repeated google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry upgrade_history = 29;
   */
  upgradeHistory: Instance_UpgradeHistoryEntry[];

  /**
   * Optional. The type of vNIC to be used on this interface. This may be gVNIC or
   * VirtioNet.
   *
   * @generated from field: google.cloud.notebooks.v1.Instance.NicType nic_type = 33;
   */
  nicType: Instance_NicType;

  /**
   * Optional. The optional reservation affinity. Setting this field will apply
   * the specified [Zonal Compute
   * Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources)
   * to this notebook instance.
   *
   * @generated from field: google.cloud.notebooks.v1.ReservationAffinity reservation_affinity = 34;
   */
  reservationAffinity?: ReservationAffinity;

  /**
   * Output only. Email address of entity that sent original CreateInstance request.
   *
   * @generated from field: string creator = 36;
   */
  creator: string;

  /**
   * Optional. Flag to enable ip forwarding or not, default false/off.
   * https://cloud.google.com/vpc/docs/using-routes#canipforward
   *
   * @generated from field: bool can_ip_forward = 39;
   */
  canIpForward: boolean;

  /**
   * Output only. Instance creation time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 23;
   */
  createTime?: Timestamp;

  /**
   * Output only. Instance update time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 24;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.notebooks.v1.Instance.
 * Use `create(InstanceSchema)` to create a new message.
 */
export const InstanceSchema: GenMessage<Instance> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_instance, 1);

/**
 * Definition of a hardware accelerator. Note that not all combinations
 * of `type` and `core_count` are valid. Check [GPUs on Compute
 * Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to find a
 * valid combination. TPUs are not supported.
 *
 * @generated from message google.cloud.notebooks.v1.Instance.AcceleratorConfig
 */
export type Instance_AcceleratorConfig = Message<"google.cloud.notebooks.v1.Instance.AcceleratorConfig"> & {
  /**
   * Type of this accelerator.
   *
   * @generated from field: google.cloud.notebooks.v1.Instance.AcceleratorType type = 1;
   */
  type: Instance_AcceleratorType;

  /**
   * Count of cores of this accelerator.
   *
   * @generated from field: int64 core_count = 2;
   */
  coreCount: bigint;
};

/**
 * Describes the message google.cloud.notebooks.v1.Instance.AcceleratorConfig.
 * Use `create(Instance_AcceleratorConfigSchema)` to create a new message.
 */
export const Instance_AcceleratorConfigSchema: GenMessage<Instance_AcceleratorConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_instance, 1, 0);

/**
 * An instance-attached disk resource.
 *
 * @generated from message google.cloud.notebooks.v1.Instance.Disk
 */
export type Instance_Disk = Message<"google.cloud.notebooks.v1.Instance.Disk"> & {
  /**
   * Indicates whether the disk will be auto-deleted when the instance is
   * deleted (but not when the disk is detached from the instance).
   *
   * @generated from field: bool auto_delete = 1;
   */
  autoDelete: boolean;

  /**
   * Indicates that this is a boot disk. The virtual machine will use the
   * first partition of the disk for its root filesystem.
   *
   * @generated from field: bool boot = 2;
   */
  boot: boolean;

  /**
   * Indicates a unique device name of your choice that is reflected into the
   * `/dev/disk/by-id/google-*` tree of a Linux operating system running
   * within the instance. This name can be used to reference the device for
   * mounting, resizing, and so on, from within the instance.
   *
   * If not specified, the server chooses a default device name to apply to
   * this disk, in the form persistent-disk-x, where x is a number assigned by
   * Google Compute Engine.This field is only applicable for persistent disks.
   *
   * @generated from field: string device_name = 3;
   */
  deviceName: string;

  /**
   * Indicates the size of the disk in base-2 GB.
   *
   * @generated from field: int64 disk_size_gb = 4;
   */
  diskSizeGb: bigint;

  /**
   * Indicates a list of features to enable on the guest operating system.
   * Applicable only for bootable images. Read  Enabling guest operating
   * system features to see a list of available options.
   *
   * @generated from field: repeated google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature guest_os_features = 5;
   */
  guestOsFeatures: Instance_Disk_GuestOsFeature[];

  /**
   * A zero-based index to this disk, where 0 is reserved for the
   * boot disk. If you have many disks attached to an instance, each disk
   * would have a unique index number.
   *
   * @generated from field: int64 index = 6;
   */
  index: bigint;

  /**
   * Indicates the disk interface to use for attaching this disk, which is
   * either SCSI or NVME. The default is SCSI. Persistent disks must always
   * use SCSI and the request will fail if you attempt to attach a persistent
   * disk in any other format than SCSI. Local SSDs can use either NVME or
   * SCSI. For performance characteristics of SCSI over NVMe, see Local SSD
   * performance.
   * Valid values:
   *
   * * `NVME`
   * * `SCSI`
   *
   * @generated from field: string interface = 7;
   */
  interface: string;

  /**
   * Type of the resource. Always compute#attachedDisk for attached
   * disks.
   *
   * @generated from field: string kind = 8;
   */
  kind: string;

  /**
   * A list of publicly visible licenses. Reserved for Google's use.
   * A License represents billing and aggregate usage data for public
   * and marketplace images.
   *
   * @generated from field: repeated string licenses = 9;
   */
  licenses: string[];

  /**
   * The mode in which to attach this disk, either `READ_WRITE` or
   * `READ_ONLY`. If not specified, the default is to attach the disk in
   * `READ_WRITE` mode. Valid values:
   *
   * * `READ_ONLY`
   * * `READ_WRITE`
   *
   * @generated from field: string mode = 10;
   */
  mode: string;

  /**
   * Indicates a valid partial or full URL to an existing Persistent Disk
   * resource.
   *
   * @generated from field: string source = 11;
   */
  source: string;

  /**
   * Indicates the type of the disk, either `SCRATCH` or `PERSISTENT`.
   * Valid values:
   *
   * * `PERSISTENT`
   * * `SCRATCH`
   *
   * @generated from field: string type = 12;
   */
  type: string;
};

/**
 * Describes the message google.cloud.notebooks.v1.Instance.Disk.
 * Use `create(Instance_DiskSchema)` to create a new message.
 */
export const Instance_DiskSchema: GenMessage<Instance_Disk> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_instance, 1, 1);

/**
 * Guest OS features for boot disk.
 *
 * @generated from message google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
 */
export type Instance_Disk_GuestOsFeature = Message<"google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature"> & {
  /**
   * The ID of a supported feature. Read  Enabling guest operating system
   * features to see a list of available options.
   * Valid values:
   *
   * * `FEATURE_TYPE_UNSPECIFIED`
   * * `MULTI_IP_SUBNET`
   * * `SECURE_BOOT`
   * * `UEFI_COMPATIBLE`
   * * `VIRTIO_SCSI_MULTIQUEUE`
   * * `WINDOWS`
   *
   * @generated from field: string type = 1;
   */
  type: string;
};

/**
 * Describes the message google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature.
 * Use `create(Instance_Disk_GuestOsFeatureSchema)` to create a new message.
 */
export const Instance_Disk_GuestOsFeatureSchema: GenMessage<Instance_Disk_GuestOsFeature> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_instance, 1, 1, 0);

/**
 * A set of Shielded Instance options.
 * Check [Images using supported Shielded VM
 * features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
 * Not all combinations are valid.
 *
 * @generated from message google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
 */
export type Instance_ShieldedInstanceConfig = Message<"google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig"> & {
  /**
   * Defines whether the instance has Secure Boot enabled.
   *
   * Secure Boot helps ensure that the system only runs authentic software by
   * verifying the digital signature of all boot components, and halting the
   * boot process if signature verification fails. Disabled by default.
   *
   * @generated from field: bool enable_secure_boot = 1;
   */
  enableSecureBoot: boolean;

  /**
   * Defines whether the instance has the vTPM enabled. Enabled by default.
   *
   * @generated from field: bool enable_vtpm = 2;
   */
  enableVtpm: boolean;

  /**
   * Defines whether the instance has integrity monitoring enabled.
   *
   * Enables monitoring and attestation of the boot integrity of the instance.
   * The attestation is performed against the integrity policy baseline. This
   * baseline is initially derived from the implicitly trusted boot image when
   * the instance is created. Enabled by default.
   *
   * @generated from field: bool enable_integrity_monitoring = 3;
   */
  enableIntegrityMonitoring: boolean;
};

/**
 * Describes the message google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.
 * Use `create(Instance_ShieldedInstanceConfigSchema)` to create a new message.
 */
export const Instance_ShieldedInstanceConfigSchema: GenMessage<Instance_ShieldedInstanceConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_instance, 1, 2);

/**
 * The entry of VM image upgrade history.
 *
 * @generated from message google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
 */
export type Instance_UpgradeHistoryEntry = Message<"google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry"> & {
  /**
   * The snapshot of the boot disk of this notebook instance before upgrade.
   *
   * @generated from field: string snapshot = 1;
   */
  snapshot: string;

  /**
   * The VM image before this instance upgrade.
   *
   * @generated from field: string vm_image = 2;
   */
  vmImage: string;

  /**
   * The container image before this instance upgrade.
   *
   * @generated from field: string container_image = 3;
   */
  containerImage: string;

  /**
   * The framework of this notebook instance.
   *
   * @generated from field: string framework = 4;
   */
  framework: string;

  /**
   * The version of the notebook instance before this upgrade.
   *
   * @generated from field: string version = 5;
   */
  version: string;

  /**
   * The state of this instance upgrade history entry.
   *
   * @generated from field: google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.State state = 6;
   */
  state: Instance_UpgradeHistoryEntry_State;

  /**
   * The time that this instance upgrade history entry is created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 7;
   */
  createTime?: Timestamp;

  /**
   * Target VM Image. Format: `ainotebooks-vm/project/image-name/name`.
   *
   * @generated from field: string target_image = 8 [deprecated = true];
   * @deprecated
   */
  targetImage: string;

  /**
   * Action. Rolloback or Upgrade.
   *
   * @generated from field: google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.Action action = 9;
   */
  action: Instance_UpgradeHistoryEntry_Action;

  /**
   * Target VM Version, like m63.
   *
   * @generated from field: string target_version = 10;
   */
  targetVersion: string;
};

/**
 * Describes the message google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.
 * Use `create(Instance_UpgradeHistoryEntrySchema)` to create a new message.
 */
export const Instance_UpgradeHistoryEntrySchema: GenMessage<Instance_UpgradeHistoryEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1_instance, 1, 3);

/**
 * The definition of the states of this upgrade history entry.
 *
 * @generated from enum google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.State
 */
export enum Instance_UpgradeHistoryEntry_State {
  /**
   * State is not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The instance upgrade is started.
   *
   * @generated from enum value: STARTED = 1;
   */
  STARTED = 1,

  /**
   * The instance upgrade is succeeded.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The instance upgrade is failed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}

/**
 * Describes the enum google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.State.
 */
export const Instance_UpgradeHistoryEntry_StateSchema: GenEnum<Instance_UpgradeHistoryEntry_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_instance, 1, 3, 0);

/**
 * The definition of operations of this upgrade history entry.
 *
 * @generated from enum google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.Action
 */
export enum Instance_UpgradeHistoryEntry_Action {
  /**
   * Operation is not specified.
   *
   * @generated from enum value: ACTION_UNSPECIFIED = 0;
   */
  ACTION_UNSPECIFIED = 0,

  /**
   * Upgrade.
   *
   * @generated from enum value: UPGRADE = 1;
   */
  UPGRADE = 1,

  /**
   * Rollback.
   *
   * @generated from enum value: ROLLBACK = 2;
   */
  ROLLBACK = 2,
}

/**
 * Describes the enum google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.Action.
 */
export const Instance_UpgradeHistoryEntry_ActionSchema: GenEnum<Instance_UpgradeHistoryEntry_Action> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_instance, 1, 3, 1);

/**
 * Definition of the types of hardware accelerators that can be used on this
 * instance.
 *
 * @generated from enum google.cloud.notebooks.v1.Instance.AcceleratorType
 */
export enum Instance_AcceleratorType {
  /**
   * Accelerator type is not specified.
   *
   * @generated from enum value: ACCELERATOR_TYPE_UNSPECIFIED = 0;
   */
  ACCELERATOR_TYPE_UNSPECIFIED = 0,

  /**
   * Accelerator type is Nvidia Tesla K80.
   *
   * @generated from enum value: NVIDIA_TESLA_K80 = 1;
   */
  NVIDIA_TESLA_K80 = 1,

  /**
   * Accelerator type is Nvidia Tesla P100.
   *
   * @generated from enum value: NVIDIA_TESLA_P100 = 2;
   */
  NVIDIA_TESLA_P100 = 2,

  /**
   * Accelerator type is Nvidia Tesla V100.
   *
   * @generated from enum value: NVIDIA_TESLA_V100 = 3;
   */
  NVIDIA_TESLA_V100 = 3,

  /**
   * Accelerator type is Nvidia Tesla P4.
   *
   * @generated from enum value: NVIDIA_TESLA_P4 = 4;
   */
  NVIDIA_TESLA_P4 = 4,

  /**
   * Accelerator type is Nvidia Tesla T4.
   *
   * @generated from enum value: NVIDIA_TESLA_T4 = 5;
   */
  NVIDIA_TESLA_T4 = 5,

  /**
   * Accelerator type is Nvidia Tesla A100.
   *
   * @generated from enum value: NVIDIA_TESLA_A100 = 11;
   */
  NVIDIA_TESLA_A100 = 11,

  /**
   * Accelerator type is NVIDIA Tesla T4 Virtual Workstations.
   *
   * @generated from enum value: NVIDIA_TESLA_T4_VWS = 8;
   */
  NVIDIA_TESLA_T4_VWS = 8,

  /**
   * Accelerator type is NVIDIA Tesla P100 Virtual Workstations.
   *
   * @generated from enum value: NVIDIA_TESLA_P100_VWS = 9;
   */
  NVIDIA_TESLA_P100_VWS = 9,

  /**
   * Accelerator type is NVIDIA Tesla P4 Virtual Workstations.
   *
   * @generated from enum value: NVIDIA_TESLA_P4_VWS = 10;
   */
  NVIDIA_TESLA_P4_VWS = 10,

  /**
   * (Coming soon) Accelerator type is TPU V2.
   *
   * @generated from enum value: TPU_V2 = 6;
   */
  TPU_V2 = 6,

  /**
   * (Coming soon) Accelerator type is TPU V3.
   *
   * @generated from enum value: TPU_V3 = 7;
   */
  TPU_V3 = 7,
}

/**
 * Describes the enum google.cloud.notebooks.v1.Instance.AcceleratorType.
 */
export const Instance_AcceleratorTypeSchema: GenEnum<Instance_AcceleratorType> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_instance, 1, 0);

/**
 * The definition of the states of this instance.
 *
 * @generated from enum google.cloud.notebooks.v1.Instance.State
 */
export enum Instance_State {
  /**
   * State is not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The control logic is starting the instance.
   *
   * @generated from enum value: STARTING = 1;
   */
  STARTING = 1,

  /**
   * The control logic is installing required frameworks and registering the
   * instance with notebook proxy
   *
   * @generated from enum value: PROVISIONING = 2;
   */
  PROVISIONING = 2,

  /**
   * The instance is running.
   *
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * The control logic is stopping the instance.
   *
   * @generated from enum value: STOPPING = 4;
   */
  STOPPING = 4,

  /**
   * The instance is stopped.
   *
   * @generated from enum value: STOPPED = 5;
   */
  STOPPED = 5,

  /**
   * The instance is deleted.
   *
   * @generated from enum value: DELETED = 6;
   */
  DELETED = 6,

  /**
   * The instance is upgrading.
   *
   * @generated from enum value: UPGRADING = 7;
   */
  UPGRADING = 7,

  /**
   * The instance is being created.
   *
   * @generated from enum value: INITIALIZING = 8;
   */
  INITIALIZING = 8,

  /**
   * The instance is getting registered.
   *
   * @generated from enum value: REGISTERING = 9;
   */
  REGISTERING = 9,

  /**
   * The instance is suspending.
   *
   * @generated from enum value: SUSPENDING = 10;
   */
  SUSPENDING = 10,

  /**
   * The instance is suspended.
   *
   * @generated from enum value: SUSPENDED = 11;
   */
  SUSPENDED = 11,
}

/**
 * Describes the enum google.cloud.notebooks.v1.Instance.State.
 */
export const Instance_StateSchema: GenEnum<Instance_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_instance, 1, 1);

/**
 * Possible disk types for notebook instances.
 *
 * @generated from enum google.cloud.notebooks.v1.Instance.DiskType
 */
export enum Instance_DiskType {
  /**
   * Disk type not set.
   *
   * @generated from enum value: DISK_TYPE_UNSPECIFIED = 0;
   */
  DISK_TYPE_UNSPECIFIED = 0,

  /**
   * Standard persistent disk type.
   *
   * @generated from enum value: PD_STANDARD = 1;
   */
  PD_STANDARD = 1,

  /**
   * SSD persistent disk type.
   *
   * @generated from enum value: PD_SSD = 2;
   */
  PD_SSD = 2,

  /**
   * Balanced persistent disk type.
   *
   * @generated from enum value: PD_BALANCED = 3;
   */
  PD_BALANCED = 3,

  /**
   * Extreme persistent disk type.
   *
   * @generated from enum value: PD_EXTREME = 4;
   */
  PD_EXTREME = 4,
}

/**
 * Describes the enum google.cloud.notebooks.v1.Instance.DiskType.
 */
export const Instance_DiskTypeSchema: GenEnum<Instance_DiskType> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_instance, 1, 2);

/**
 * Definition of the disk encryption options.
 *
 * @generated from enum google.cloud.notebooks.v1.Instance.DiskEncryption
 */
export enum Instance_DiskEncryption {
  /**
   * Disk encryption is not specified.
   *
   * @generated from enum value: DISK_ENCRYPTION_UNSPECIFIED = 0;
   */
  DISK_ENCRYPTION_UNSPECIFIED = 0,

  /**
   * Use Google managed encryption keys to encrypt the boot disk.
   *
   * @generated from enum value: GMEK = 1;
   */
  GMEK = 1,

  /**
   * Use customer managed encryption keys to encrypt the boot disk.
   *
   * @generated from enum value: CMEK = 2;
   */
  CMEK = 2,
}

/**
 * Describes the enum google.cloud.notebooks.v1.Instance.DiskEncryption.
 */
export const Instance_DiskEncryptionSchema: GenEnum<Instance_DiskEncryption> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_instance, 1, 3);

/**
 * The type of vNIC driver.
 * Default should be UNSPECIFIED_NIC_TYPE.
 *
 * @generated from enum google.cloud.notebooks.v1.Instance.NicType
 */
export enum Instance_NicType {
  /**
   * No type specified.
   *
   * @generated from enum value: UNSPECIFIED_NIC_TYPE = 0;
   */
  UNSPECIFIED_NIC_TYPE = 0,

  /**
   * VIRTIO
   *
   * @generated from enum value: VIRTIO_NET = 1;
   */
  VIRTIO_NET = 1,

  /**
   * GVNIC
   *
   * @generated from enum value: GVNIC = 2;
   */
  GVNIC = 2,
}

/**
 * Describes the enum google.cloud.notebooks.v1.Instance.NicType.
 */
export const Instance_NicTypeSchema: GenEnum<Instance_NicType> = /*@__PURE__*/
  enumDesc(file_google_cloud_notebooks_v1_instance, 1, 4);

