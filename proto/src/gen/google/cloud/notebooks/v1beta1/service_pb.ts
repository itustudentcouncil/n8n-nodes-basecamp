// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/notebooks/v1beta1/service.proto (package google.cloud.notebooks.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Environment, EnvironmentSchema } from "./environment_pb";
import { file_google_cloud_notebooks_v1beta1_environment } from "./environment_pb";
import type { Instance, Instance_AcceleratorType, InstanceSchema } from "./instance_pb";
import { file_google_cloud_notebooks_v1beta1_instance } from "./instance_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/notebooks/v1beta1/service.proto.
 */
export const file_google_cloud_notebooks_v1beta1_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_cloud_notebooks_v1beta1_environment, file_google_cloud_notebooks_v1beta1_instance, file_google_longrunning_operations, file_google_protobuf_timestamp]);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.notebooks.v1beta1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.notebooks.v1beta1.OperationMetadata"> & {
  /**
   * The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Identifies whether the user has requested cancellation
   * of the operation. Operations that have successfully been cancelled
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;

  /**
   * API endpoint name of this operation.
   *
   * @generated from field: string endpoint = 8;
   */
  endpoint: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 0);

/**
 * Request for listing notebook instances.
 *
 * @generated from message google.cloud.notebooks.v1beta1.ListInstancesRequest
 */
export type ListInstancesRequest = Message<"google.cloud.notebooks.v1beta1.ListInstancesRequest"> & {
  /**
   * Required. Format:
   * `parent=projects/{project_id}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum return size of the list call.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A previous returned page token that can be used to continue listing
   * from the last result.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.ListInstancesRequest.
 * Use `create(ListInstancesRequestSchema)` to create a new message.
 */
export const ListInstancesRequestSchema: GenMessage<ListInstancesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 1);

/**
 * Response for listing notebook instances.
 *
 * @generated from message google.cloud.notebooks.v1beta1.ListInstancesResponse
 */
export type ListInstancesResponse = Message<"google.cloud.notebooks.v1beta1.ListInstancesResponse"> & {
  /**
   * A list of returned instances.
   *
   * @generated from field: repeated google.cloud.notebooks.v1beta1.Instance instances = 1;
   */
  instances: Instance[];

  /**
   * Page token that can be used to continue listing from the last result in the
   * next list call.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached. For example,
   * `['us-west1-a', 'us-central1-b']`.
   * A ListInstancesResponse will only contain either instances or unreachables,
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.ListInstancesResponse.
 * Use `create(ListInstancesResponseSchema)` to create a new message.
 */
export const ListInstancesResponseSchema: GenMessage<ListInstancesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 2);

/**
 * Request for getting a notebook instance.
 *
 * @generated from message google.cloud.notebooks.v1beta1.GetInstanceRequest
 */
export type GetInstanceRequest = Message<"google.cloud.notebooks.v1beta1.GetInstanceRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.GetInstanceRequest.
 * Use `create(GetInstanceRequestSchema)` to create a new message.
 */
export const GetInstanceRequestSchema: GenMessage<GetInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 3);

/**
 * Request for creating a notebook instance.
 *
 * @generated from message google.cloud.notebooks.v1beta1.CreateInstanceRequest
 */
export type CreateInstanceRequest = Message<"google.cloud.notebooks.v1beta1.CreateInstanceRequest"> & {
  /**
   * Required. Format:
   * `parent=projects/{project_id}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. User-defined unique ID of this instance.
   *
   * @generated from field: string instance_id = 2;
   */
  instanceId: string;

  /**
   * Required. The instance to be created.
   *
   * @generated from field: google.cloud.notebooks.v1beta1.Instance instance = 3;
   */
  instance?: Instance;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.CreateInstanceRequest.
 * Use `create(CreateInstanceRequestSchema)` to create a new message.
 */
export const CreateInstanceRequestSchema: GenMessage<CreateInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 4);

/**
 * Request for registering a notebook instance.
 *
 * @generated from message google.cloud.notebooks.v1beta1.RegisterInstanceRequest
 */
export type RegisterInstanceRequest = Message<"google.cloud.notebooks.v1beta1.RegisterInstanceRequest"> & {
  /**
   * Required. Format:
   * `parent=projects/{project_id}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. User defined unique ID of this instance. The `instance_id` must
   * be 1 to 63 characters long and contain only lowercase letters,
   * numeric characters, and dashes. The first character must be a lowercase
   * letter and the last character cannot be a dash.
   *
   * @generated from field: string instance_id = 2;
   */
  instanceId: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.RegisterInstanceRequest.
 * Use `create(RegisterInstanceRequestSchema)` to create a new message.
 */
export const RegisterInstanceRequestSchema: GenMessage<RegisterInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 5);

/**
 * Request for setting instance accelerator.
 *
 * @generated from message google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
 */
export type SetInstanceAcceleratorRequest = Message<"google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Type of this accelerator.
   *
   * @generated from field: google.cloud.notebooks.v1beta1.Instance.AcceleratorType type = 2;
   */
  type: Instance_AcceleratorType;

  /**
   * Required. Count of cores of this accelerator. Note that not all combinations
   * of `type` and `core_count` are valid. Check [GPUs on
   * Compute Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to
   * find a valid combination. TPUs are not supported.
   *
   * @generated from field: int64 core_count = 3;
   */
  coreCount: bigint;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest.
 * Use `create(SetInstanceAcceleratorRequestSchema)` to create a new message.
 */
export const SetInstanceAcceleratorRequestSchema: GenMessage<SetInstanceAcceleratorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 6);

/**
 * Request for setting instance machine type.
 *
 * @generated from message google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
 */
export type SetInstanceMachineTypeRequest = Message<"google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The [Compute Engine machine
   * type](https://cloud.google.com/compute/docs/machine-types).
   *
   * @generated from field: string machine_type = 2;
   */
  machineType: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest.
 * Use `create(SetInstanceMachineTypeRequestSchema)` to create a new message.
 */
export const SetInstanceMachineTypeRequestSchema: GenMessage<SetInstanceMachineTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 7);

/**
 * Request for setting instance labels.
 *
 * @generated from message google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
 */
export type SetInstanceLabelsRequest = Message<"google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Labels to apply to this instance.
   * These can be later modified by the setLabels method
   *
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest.
 * Use `create(SetInstanceLabelsRequestSchema)` to create a new message.
 */
export const SetInstanceLabelsRequestSchema: GenMessage<SetInstanceLabelsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 8);

/**
 * Request for deleting a notebook instance.
 *
 * @generated from message google.cloud.notebooks.v1beta1.DeleteInstanceRequest
 */
export type DeleteInstanceRequest = Message<"google.cloud.notebooks.v1beta1.DeleteInstanceRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.DeleteInstanceRequest.
 * Use `create(DeleteInstanceRequestSchema)` to create a new message.
 */
export const DeleteInstanceRequestSchema: GenMessage<DeleteInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 9);

/**
 * Request for starting a notebook instance
 *
 * @generated from message google.cloud.notebooks.v1beta1.StartInstanceRequest
 */
export type StartInstanceRequest = Message<"google.cloud.notebooks.v1beta1.StartInstanceRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.StartInstanceRequest.
 * Use `create(StartInstanceRequestSchema)` to create a new message.
 */
export const StartInstanceRequestSchema: GenMessage<StartInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 10);

/**
 * Request for stopping a notebook instance
 *
 * @generated from message google.cloud.notebooks.v1beta1.StopInstanceRequest
 */
export type StopInstanceRequest = Message<"google.cloud.notebooks.v1beta1.StopInstanceRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.StopInstanceRequest.
 * Use `create(StopInstanceRequestSchema)` to create a new message.
 */
export const StopInstanceRequestSchema: GenMessage<StopInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 11);

/**
 * Request for reseting a notebook instance
 *
 * @generated from message google.cloud.notebooks.v1beta1.ResetInstanceRequest
 */
export type ResetInstanceRequest = Message<"google.cloud.notebooks.v1beta1.ResetInstanceRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.ResetInstanceRequest.
 * Use `create(ResetInstanceRequestSchema)` to create a new message.
 */
export const ResetInstanceRequestSchema: GenMessage<ResetInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 12);

/**
 * Request for notebook instances to report information to Notebooks API.
 *
 * @generated from message google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
 */
export type ReportInstanceInfoRequest = Message<"google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The VM hardware token for authenticating the VM.
   * https://cloud.google.com/compute/docs/instances/verifying-instance-identity
   *
   * @generated from field: string vm_id = 2;
   */
  vmId: string;

  /**
   * The metadata reported to Notebooks API. This will be merged to the instance
   * metadata store
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest.
 * Use `create(ReportInstanceInfoRequestSchema)` to create a new message.
 */
export const ReportInstanceInfoRequestSchema: GenMessage<ReportInstanceInfoRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 13);

/**
 * Request for checking if a notebook instance is upgradeable.
 *
 * @generated from message google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
 */
export type IsInstanceUpgradeableRequest = Message<"google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string notebook_instance = 1;
   */
  notebookInstance: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest.
 * Use `create(IsInstanceUpgradeableRequestSchema)` to create a new message.
 */
export const IsInstanceUpgradeableRequestSchema: GenMessage<IsInstanceUpgradeableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 14);

/**
 * Response for checking if a notebook instance is upgradeable.
 *
 * @generated from message google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
 */
export type IsInstanceUpgradeableResponse = Message<"google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse"> & {
  /**
   * If an instance is upgradeable.
   *
   * @generated from field: bool upgradeable = 1;
   */
  upgradeable: boolean;

  /**
   * The version this instance will be upgraded to if calling the upgrade
   * endpoint. This field will only be populated if field upgradeable is true.
   *
   * @generated from field: string upgrade_version = 2;
   */
  upgradeVersion: string;

  /**
   * Additional information about upgrade.
   *
   * @generated from field: string upgrade_info = 3;
   */
  upgradeInfo: string;

  /**
   * The new image self link this instance will be upgraded to if calling the
   * upgrade endpoint. This field will only be populated if field upgradeable
   * is true.
   *
   * @generated from field: string upgrade_image = 4;
   */
  upgradeImage: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse.
 * Use `create(IsInstanceUpgradeableResponseSchema)` to create a new message.
 */
export const IsInstanceUpgradeableResponseSchema: GenMessage<IsInstanceUpgradeableResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 15);

/**
 * Request for upgrading a notebook instance
 *
 * @generated from message google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
 */
export type UpgradeInstanceRequest = Message<"google.cloud.notebooks.v1beta1.UpgradeInstanceRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.UpgradeInstanceRequest.
 * Use `create(UpgradeInstanceRequestSchema)` to create a new message.
 */
export const UpgradeInstanceRequestSchema: GenMessage<UpgradeInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 16);

/**
 * Request for upgrading a notebook instance from within the VM
 *
 * @generated from message google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
 */
export type UpgradeInstanceInternalRequest = Message<"google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The VM hardware token for authenticating the VM.
   * https://cloud.google.com/compute/docs/instances/verifying-instance-identity
   *
   * @generated from field: string vm_id = 2;
   */
  vmId: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest.
 * Use `create(UpgradeInstanceInternalRequestSchema)` to create a new message.
 */
export const UpgradeInstanceInternalRequestSchema: GenMessage<UpgradeInstanceInternalRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 17);

/**
 * Request for listing environments.
 *
 * @generated from message google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
 */
export type ListEnvironmentsRequest = Message<"google.cloud.notebooks.v1beta1.ListEnvironmentsRequest"> & {
  /**
   * Required. Format: `projects/{project_id}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum return size of the list call.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A previous returned page token that can be used to continue listing from
   * the last result.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.ListEnvironmentsRequest.
 * Use `create(ListEnvironmentsRequestSchema)` to create a new message.
 */
export const ListEnvironmentsRequestSchema: GenMessage<ListEnvironmentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 18);

/**
 * Response for listing environments.
 *
 * @generated from message google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
 */
export type ListEnvironmentsResponse = Message<"google.cloud.notebooks.v1beta1.ListEnvironmentsResponse"> & {
  /**
   * A list of returned environments.
   *
   * @generated from field: repeated google.cloud.notebooks.v1beta1.Environment environments = 1;
   */
  environments: Environment[];

  /**
   * A page token that can be used to continue listing from the last result
   * in the next list call.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.ListEnvironmentsResponse.
 * Use `create(ListEnvironmentsResponseSchema)` to create a new message.
 */
export const ListEnvironmentsResponseSchema: GenMessage<ListEnvironmentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 19);

/**
 * Request for getting a notebook environment.
 *
 * @generated from message google.cloud.notebooks.v1beta1.GetEnvironmentRequest
 */
export type GetEnvironmentRequest = Message<"google.cloud.notebooks.v1beta1.GetEnvironmentRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/environments/{environment_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.GetEnvironmentRequest.
 * Use `create(GetEnvironmentRequestSchema)` to create a new message.
 */
export const GetEnvironmentRequestSchema: GenMessage<GetEnvironmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 20);

/**
 * Request for creating a notebook environment.
 *
 * @generated from message google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
 */
export type CreateEnvironmentRequest = Message<"google.cloud.notebooks.v1beta1.CreateEnvironmentRequest"> & {
  /**
   * Required. Format: `projects/{project_id}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. User-defined unique ID of this environment. The `environment_id` must
   * be 1 to 63 characters long and contain only lowercase letters,
   * numeric characters, and dashes. The first character must be a lowercase
   * letter and the last character cannot be a dash.
   *
   * @generated from field: string environment_id = 2;
   */
  environmentId: string;

  /**
   * Required. The environment to be created.
   *
   * @generated from field: google.cloud.notebooks.v1beta1.Environment environment = 3;
   */
  environment?: Environment;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.CreateEnvironmentRequest.
 * Use `create(CreateEnvironmentRequestSchema)` to create a new message.
 */
export const CreateEnvironmentRequestSchema: GenMessage<CreateEnvironmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 21);

/**
 * Request for deleting a notebook environment.
 *
 * @generated from message google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
 */
export type DeleteEnvironmentRequest = Message<"google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest"> & {
  /**
   * Required. Format:
   * `projects/{project_id}/locations/{location}/environments/{environment_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest.
 * Use `create(DeleteEnvironmentRequestSchema)` to create a new message.
 */
export const DeleteEnvironmentRequestSchema: GenMessage<DeleteEnvironmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_notebooks_v1beta1_service, 22);

/**
 * API v1beta1 service for Cloud AI Platform Notebooks.
 *
 * @generated from service google.cloud.notebooks.v1beta1.NotebookService
 */
export const NotebookService: GenService<{
  /**
   * Lists instances in a given project and location.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.ListInstances
   */
  listInstances: {
    methodKind: "unary";
    input: typeof ListInstancesRequestSchema;
    output: typeof ListInstancesResponseSchema;
  },
  /**
   * Gets details of a single Instance.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.GetInstance
   */
  getInstance: {
    methodKind: "unary";
    input: typeof GetInstanceRequestSchema;
    output: typeof InstanceSchema;
  },
  /**
   * Creates a new Instance in a given project and location.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.CreateInstance
   */
  createInstance: {
    methodKind: "unary";
    input: typeof CreateInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Registers an existing legacy notebook instance to the Notebooks API server.
   * Legacy instances are instances created with the legacy Compute Engine
   * calls. They are not manageable by the Notebooks API out of the box. This
   * call makes these instances manageable by the Notebooks API.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.RegisterInstance
   */
  registerInstance: {
    methodKind: "unary";
    input: typeof RegisterInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the guest accelerators of a single Instance.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.SetInstanceAccelerator
   */
  setInstanceAccelerator: {
    methodKind: "unary";
    input: typeof SetInstanceAcceleratorRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the machine type of a single Instance.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.SetInstanceMachineType
   */
  setInstanceMachineType: {
    methodKind: "unary";
    input: typeof SetInstanceMachineTypeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the labels of an Instance.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.SetInstanceLabels
   */
  setInstanceLabels: {
    methodKind: "unary";
    input: typeof SetInstanceLabelsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Instance.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.DeleteInstance
   */
  deleteInstance: {
    methodKind: "unary";
    input: typeof DeleteInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Starts a notebook instance.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.StartInstance
   */
  startInstance: {
    methodKind: "unary";
    input: typeof StartInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Stops a notebook instance.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.StopInstance
   */
  stopInstance: {
    methodKind: "unary";
    input: typeof StopInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Resets a notebook instance.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.ResetInstance
   */
  resetInstance: {
    methodKind: "unary";
    input: typeof ResetInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Allows notebook instances to
   * report their latest instance information to the Notebooks
   * API server. The server will merge the reported information to
   * the instance metadata store. Do not use this method directly.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.ReportInstanceInfo
   */
  reportInstanceInfo: {
    methodKind: "unary";
    input: typeof ReportInstanceInfoRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Check if a notebook instance is upgradable.
   * Deprecated. Please consider using v1.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.IsInstanceUpgradeable
   * @deprecated
   */
  isInstanceUpgradeable: {
    methodKind: "unary";
    input: typeof IsInstanceUpgradeableRequestSchema;
    output: typeof IsInstanceUpgradeableResponseSchema;
  },
  /**
   * Upgrades a notebook instance to the latest version.
   * Deprecated. Please consider using v1.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.UpgradeInstance
   * @deprecated
   */
  upgradeInstance: {
    methodKind: "unary";
    input: typeof UpgradeInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Allows notebook instances to
   * call this endpoint to upgrade themselves. Do not use this method directly.
   * Deprecated. Please consider using v1.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.UpgradeInstanceInternal
   * @deprecated
   */
  upgradeInstanceInternal: {
    methodKind: "unary";
    input: typeof UpgradeInstanceInternalRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists environments in a project.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.ListEnvironments
   */
  listEnvironments: {
    methodKind: "unary";
    input: typeof ListEnvironmentsRequestSchema;
    output: typeof ListEnvironmentsResponseSchema;
  },
  /**
   * Gets details of a single Environment.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.GetEnvironment
   */
  getEnvironment: {
    methodKind: "unary";
    input: typeof GetEnvironmentRequestSchema;
    output: typeof EnvironmentSchema;
  },
  /**
   * Creates a new Environment.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.CreateEnvironment
   */
  createEnvironment: {
    methodKind: "unary";
    input: typeof CreateEnvironmentRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Environment.
   *
   * @generated from rpc google.cloud.notebooks.v1beta1.NotebookService.DeleteEnvironment
   */
  deleteEnvironment: {
    methodKind: "unary";
    input: typeof DeleteEnvironmentRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_notebooks_v1beta1_service, 0);

