// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/gkehub/v1alpha/feature.proto (package google.cloud.gkehub.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { FeatureSpec as FeatureSpec$1 } from "./cloudauditlogging/cloudauditlogging_pb";
import { file_google_cloud_gkehub_v1alpha_cloudauditlogging_cloudauditlogging } from "./cloudauditlogging/cloudauditlogging_pb";
import type { MembershipSpec, MembershipState as MembershipState$2 } from "./configmanagement/configmanagement_pb";
import { file_google_cloud_gkehub_v1alpha_configmanagement_configmanagement } from "./configmanagement/configmanagement_pb";
import type { MembershipState as MembershipState$1 } from "./metering/metering_pb";
import { file_google_cloud_gkehub_v1alpha_metering_metering } from "./metering/metering_pb";
import type { FeatureSpec } from "./multiclusteringress/multiclusteringress_pb";
import { file_google_cloud_gkehub_v1alpha_multiclusteringress_multiclusteringress } from "./multiclusteringress/multiclusteringress_pb";
import type { FeatureState as FeatureState$1, MembershipState } from "./servicemesh/servicemesh_pb";
import { file_google_cloud_gkehub_v1alpha_servicemesh_servicemesh } from "./servicemesh/servicemesh_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/gkehub/v1alpha/feature.proto.
 */
export const file_google_cloud_gkehub_v1alpha_feature: GenFile = /*@__PURE__*/
  fileDesc("Cilnb29nbGUvY2xvdWQvZ2tlaHViL3YxYWxwaGEvZmVhdHVyZS5wcm90bxIbZ29vZ2xlLmNsb3VkLmdrZWh1Yi52MWFscGhhIvcHCgdGZWF0dXJlEhEKBG5hbWUYASABKAlCA+BBAxJACgZsYWJlbHMYAiADKAsyMC5nb29nbGUuY2xvdWQuZ2tlaHViLnYxYWxwaGEuRmVhdHVyZS5MYWJlbHNFbnRyeRJOCg5yZXNvdXJjZV9zdGF0ZRgDIAEoCzIxLmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYS5GZWF0dXJlUmVzb3VyY2VTdGF0ZUID4EEDEkEKBHNwZWMYBCABKAsyLi5nb29nbGUuY2xvdWQuZ2tlaHViLnYxYWxwaGEuQ29tbW9uRmVhdHVyZVNwZWNCA+BBARJYChBtZW1iZXJzaGlwX3NwZWNzGAUgAygLMjkuZ29vZ2xlLmNsb3VkLmdrZWh1Yi52MWFscGhhLkZlYXR1cmUuTWVtYmVyc2hpcFNwZWNzRW50cnlCA+BBARJDCgVzdGF0ZRgGIAEoCzIvLmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYS5Db21tb25GZWF0dXJlU3RhdGVCA+BBAxJaChFtZW1iZXJzaGlwX3N0YXRlcxgHIAMoCzI6Lmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYS5GZWF0dXJlLk1lbWJlcnNoaXBTdGF0ZXNFbnRyeUID4EEDEjQKC2NyZWF0ZV90aW1lGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC2RlbGV0ZV90aW1lGAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaagoUTWVtYmVyc2hpcFNwZWNzRW50cnkSCwoDa2V5GAEgASgJEkEKBXZhbHVlGAIgASgLMjIuZ29vZ2xlLmNsb3VkLmdrZWh1Yi52MWFscGhhLk1lbWJlcnNoaXBGZWF0dXJlU3BlYzoCOAEabAoVTWVtYmVyc2hpcFN0YXRlc0VudHJ5EgsKA2tleRgBIAEoCRJCCgV2YWx1ZRgCIAEoCzIzLmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYS5NZW1iZXJzaGlwRmVhdHVyZVN0YXRlOgI4ATpe6kFbCh1na2VodWIuZ29vZ2xlYXBpcy5jb20vRmVhdHVyZRI6cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2ZlYXR1cmVzL3tmZWF0dXJlfSLLAQoURmVhdHVyZVJlc291cmNlU3RhdGUSRgoFc3RhdGUYASABKA4yNy5nb29nbGUuY2xvdWQuZ2tlaHViLnYxYWxwaGEuRmVhdHVyZVJlc291cmNlU3RhdGUuU3RhdGUiawoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIMCghFTkFCTElORxABEgoKBkFDVElWRRACEg0KCURJU0FCTElORxADEgwKCFVQREFUSU5HEAQSFAoQU0VSVklDRV9VUERBVElORxAFItABCgxGZWF0dXJlU3RhdGUSPAoEY29kZRgBIAEoDjIuLmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYS5GZWF0dXJlU3RhdGUuQ29kZRITCgtkZXNjcmlwdGlvbhgCIAEoCRIvCgt1cGRhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiPAoEQ29kZRIUChBDT0RFX1VOU1BFQ0lGSUVEEAASBgoCT0sQARILCgdXQVJOSU5HEAISCQoFRVJST1IQAyLZAQoRQ29tbW9uRmVhdHVyZVNwZWMSWwoTbXVsdGljbHVzdGVyaW5ncmVzcxhmIAEoCzI8Lmdvb2dsZS5jbG91ZC5na2VodWIubXVsdGljbHVzdGVyaW5ncmVzcy52MWFscGhhLkZlYXR1cmVTcGVjSAASVwoRY2xvdWRhdWRpdGxvZ2dpbmcYbCABKAsyOi5nb29nbGUuY2xvdWQuZ2tlaHViLmNsb3VkYXVkaXRsb2dnaW5nLnYxYWxwaGEuRmVhdHVyZVNwZWNIAEIOCgxmZWF0dXJlX3NwZWMisgEKEkNvbW1vbkZlYXR1cmVTdGF0ZRJMCgtzZXJ2aWNlbWVzaBhkIAEoCzI1Lmdvb2dsZS5jbG91ZC5na2VodWIuc2VydmljZW1lc2gudjFhbHBoYS5GZWF0dXJlU3RhdGVIABI9CgVzdGF0ZRgBIAEoCzIpLmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYS5GZWF0dXJlU3RhdGVCA+BBA0IPCg1mZWF0dXJlX3N0YXRlIoEBChVNZW1iZXJzaGlwRmVhdHVyZVNwZWMSWAoQY29uZmlnbWFuYWdlbWVudBhqIAEoCzI8Lmdvb2dsZS5jbG91ZC5na2VodWIuY29uZmlnbWFuYWdlbWVudC52MWFscGhhLk1lbWJlcnNoaXBTcGVjSABCDgoMZmVhdHVyZV9zcGVjItoCChZNZW1iZXJzaGlwRmVhdHVyZVN0YXRlEk8KC3NlcnZpY2VtZXNoGGQgASgLMjguZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2aWNlbWVzaC52MWFscGhhLk1lbWJlcnNoaXBTdGF0ZUgAEkkKCG1ldGVyaW5nGGggASgLMjUuZ29vZ2xlLmNsb3VkLmdrZWh1Yi5tZXRlcmluZy52MWFscGhhLk1lbWJlcnNoaXBTdGF0ZUgAElkKEGNvbmZpZ21hbmFnZW1lbnQYaiABKAsyPS5nb29nbGUuY2xvdWQuZ2tlaHViLmNvbmZpZ21hbmFnZW1lbnQudjFhbHBoYS5NZW1iZXJzaGlwU3RhdGVIABI4CgVzdGF0ZRgBIAEoCzIpLmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYS5GZWF0dXJlU3RhdGVCDwoNZmVhdHVyZV9zdGF0ZULHAQofY29tLmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYUIMRmVhdHVyZVByb3RvUAFaN2Nsb3VkLmdvb2dsZS5jb20vZ28vZ2tlaHViL2FwaXYxYWxwaGEvZ2tlaHVicGI7Z2tlaHVicGKqAhtHb29nbGUuQ2xvdWQuR2tlSHViLlYxQWxwaGHKAhtHb29nbGVcQ2xvdWRcR2tlSHViXFYxYWxwaGHqAh5Hb29nbGU6OkNsb3VkOjpHa2VIdWI6OlYxYWxwaGFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_gkehub_v1alpha_cloudauditlogging_cloudauditlogging, file_google_cloud_gkehub_v1alpha_configmanagement_configmanagement, file_google_cloud_gkehub_v1alpha_metering_metering, file_google_cloud_gkehub_v1alpha_multiclusteringress_multiclusteringress, file_google_cloud_gkehub_v1alpha_servicemesh_servicemesh, file_google_protobuf_timestamp]);

/**
 * Feature represents the settings and status of any Hub Feature.
 *
 * @generated from message google.cloud.gkehub.v1alpha.Feature
 */
export type Feature = Message<"google.cloud.gkehub.v1alpha.Feature"> & {
  /**
   * Output only. The full, unique name of this Feature resource in the format
   * `projects/*\/locations/*\/features/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * GCP labels for this Feature.
   *
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };

  /**
   * Output only. State of the Feature resource itself.
   *
   * @generated from field: google.cloud.gkehub.v1alpha.FeatureResourceState resource_state = 3;
   */
  resourceState?: FeatureResourceState;

  /**
   * Optional. Hub-wide Feature configuration. If this Feature does not support any
   * Hub-wide configuration, this field may be unused.
   *
   * @generated from field: google.cloud.gkehub.v1alpha.CommonFeatureSpec spec = 4;
   */
  spec?: CommonFeatureSpec;

  /**
   * Optional. Membership-specific configuration for this Feature. If this Feature does
   * not support any per-Membership configuration, this field may be unused.
   *
   * The keys indicate which Membership the configuration is for, in the form:
   *
   *     projects/{p}/locations/{l}/memberships/{m}
   *
   * Where {p} is the project, {l} is a valid location and {m} is a valid
   * Membership in this project at that location. {p} WILL match the Feature's
   * project.
   *
   * {p} will always be returned as the project number, but the project ID is
   * also accepted during input. If the same Membership is specified in the map
   * twice (using the project ID form, and the project number form), exactly
   * ONE of the entries will be saved, with no guarantees as to which. For this
   * reason, it is recommended the same format be used for all entries when
   * mutating a Feature.
   *
   * @generated from field: map<string, google.cloud.gkehub.v1alpha.MembershipFeatureSpec> membership_specs = 5;
   */
  membershipSpecs: { [key: string]: MembershipFeatureSpec };

  /**
   * Output only. The Hub-wide Feature state.
   *
   * @generated from field: google.cloud.gkehub.v1alpha.CommonFeatureState state = 6;
   */
  state?: CommonFeatureState;

  /**
   * Output only. Membership-specific Feature status. If this Feature does
   * report any per-Membership status, this field may be unused.
   *
   * The keys indicate which Membership the state is for, in the form:
   *
   *     projects/{p}/locations/{l}/memberships/{m}
   *
   * Where {p} is the project number, {l} is a valid location and {m} is a valid
   * Membership in this project at that location. {p} MUST match the Feature's
   * project number.
   *
   * @generated from field: map<string, google.cloud.gkehub.v1alpha.MembershipFeatureState> membership_states = 7;
   */
  membershipStates: { [key: string]: MembershipFeatureState };

  /**
   * Output only. When the Feature resource was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 8;
   */
  createTime?: Timestamp;

  /**
   * Output only. When the Feature resource was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 9;
   */
  updateTime?: Timestamp;

  /**
   * Output only. When the Feature resource was deleted.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 10;
   */
  deleteTime?: Timestamp;
};

/**
 * Describes the message google.cloud.gkehub.v1alpha.Feature.
 * Use `create(FeatureSchema)` to create a new message.
 */
export const FeatureSchema: GenMessage<Feature> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1alpha_feature, 0);

/**
 * FeatureResourceState describes the state of a Feature *resource* in the
 * GkeHub API. See `FeatureState` for the "running state" of the Feature in the
 * Hub and across Memberships.
 *
 * @generated from message google.cloud.gkehub.v1alpha.FeatureResourceState
 */
export type FeatureResourceState = Message<"google.cloud.gkehub.v1alpha.FeatureResourceState"> & {
  /**
   * The current state of the Feature resource in the Hub API.
   *
   * @generated from field: google.cloud.gkehub.v1alpha.FeatureResourceState.State state = 1;
   */
  state: FeatureResourceState_State;
};

/**
 * Describes the message google.cloud.gkehub.v1alpha.FeatureResourceState.
 * Use `create(FeatureResourceStateSchema)` to create a new message.
 */
export const FeatureResourceStateSchema: GenMessage<FeatureResourceState> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1alpha_feature, 1);

/**
 * State describes the lifecycle status of a Feature.
 *
 * @generated from enum google.cloud.gkehub.v1alpha.FeatureResourceState.State
 */
export enum FeatureResourceState_State {
  /**
   * State is unknown or not set.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The Feature is being enabled, and the Feature resource is being created.
   * Once complete, the corresponding Feature will be enabled in this Hub.
   *
   * @generated from enum value: ENABLING = 1;
   */
  ENABLING = 1,

  /**
   * The Feature is enabled in this Hub, and the Feature resource is fully
   * available.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The Feature is being disabled in this Hub, and the Feature resource
   * is being deleted.
   *
   * @generated from enum value: DISABLING = 3;
   */
  DISABLING = 3,

  /**
   * The Feature resource is being updated.
   *
   * @generated from enum value: UPDATING = 4;
   */
  UPDATING = 4,

  /**
   * The Feature resource is being updated by the Hub Service.
   *
   * @generated from enum value: SERVICE_UPDATING = 5;
   */
  SERVICE_UPDATING = 5,
}

/**
 * Describes the enum google.cloud.gkehub.v1alpha.FeatureResourceState.State.
 */
export const FeatureResourceState_StateSchema: GenEnum<FeatureResourceState_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_v1alpha_feature, 1, 0);

/**
 * FeatureState describes the high-level state of a Feature. It may be used to
 * describe a Feature's state at the environ-level, or per-membershop, depending
 * on the context.
 *
 * @generated from message google.cloud.gkehub.v1alpha.FeatureState
 */
export type FeatureState = Message<"google.cloud.gkehub.v1alpha.FeatureState"> & {
  /**
   * The high-level, machine-readable status of this Feature.
   *
   * @generated from field: google.cloud.gkehub.v1alpha.FeatureState.Code code = 1;
   */
  code: FeatureState_Code;

  /**
   * A human-readable description of the current status.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The time this status and any related Feature-specific details were updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.gkehub.v1alpha.FeatureState.
 * Use `create(FeatureStateSchema)` to create a new message.
 */
export const FeatureStateSchema: GenMessage<FeatureState> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1alpha_feature, 2);

/**
 * Code represents a machine-readable, high-level status of the Feature.
 *
 * @generated from enum google.cloud.gkehub.v1alpha.FeatureState.Code
 */
export enum FeatureState_Code {
  /**
   * Unknown or not set.
   *
   * @generated from enum value: CODE_UNSPECIFIED = 0;
   */
  CODE_UNSPECIFIED = 0,

  /**
   * The Feature is operating normally.
   *
   * @generated from enum value: OK = 1;
   */
  OK = 1,

  /**
   * The Feature has encountered an issue, and is operating in a degraded
   * state. The Feature may need intervention to return to normal operation.
   * See the description and any associated Feature-specific details for more
   * information.
   *
   * @generated from enum value: WARNING = 2;
   */
  WARNING = 2,

  /**
   * The Feature is not operating or is in a severely degraded state.
   * The Feature may need intervention to return to normal operation.
   * See the description and any associated Feature-specific details for more
   * information.
   *
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,
}

/**
 * Describes the enum google.cloud.gkehub.v1alpha.FeatureState.Code.
 */
export const FeatureState_CodeSchema: GenEnum<FeatureState_Code> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_v1alpha_feature, 2, 0);

/**
 * CommonFeatureSpec contains Hub-wide configuration information
 *
 * @generated from message google.cloud.gkehub.v1alpha.CommonFeatureSpec
 */
export type CommonFeatureSpec = Message<"google.cloud.gkehub.v1alpha.CommonFeatureSpec"> & {
  /**
   * @generated from oneof google.cloud.gkehub.v1alpha.CommonFeatureSpec.feature_spec
   */
  featureSpec: {
    /**
     * Multicluster Ingress-specific spec.
     *
     * @generated from field: google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec multiclusteringress = 102;
     */
    value: FeatureSpec;
    case: "multiclusteringress";
  } | {
    /**
     * Cloud Audit Logging-specific spec.
     *
     * @generated from field: google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec cloudauditlogging = 108;
     */
    value: FeatureSpec$1;
    case: "cloudauditlogging";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.gkehub.v1alpha.CommonFeatureSpec.
 * Use `create(CommonFeatureSpecSchema)` to create a new message.
 */
export const CommonFeatureSpecSchema: GenMessage<CommonFeatureSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1alpha_feature, 3);

/**
 * CommonFeatureState contains Hub-wide Feature status information.
 *
 * @generated from message google.cloud.gkehub.v1alpha.CommonFeatureState
 */
export type CommonFeatureState = Message<"google.cloud.gkehub.v1alpha.CommonFeatureState"> & {
  /**
   * @generated from oneof google.cloud.gkehub.v1alpha.CommonFeatureState.feature_state
   */
  featureState: {
    /**
     * Service Mesh-specific state.
     *
     * @generated from field: google.cloud.gkehub.servicemesh.v1alpha.FeatureState servicemesh = 100;
     */
    value: FeatureState$1;
    case: "servicemesh";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The "running state" of the Feature in this Hub.
   *
   * @generated from field: google.cloud.gkehub.v1alpha.FeatureState state = 1;
   */
  state?: FeatureState;
};

/**
 * Describes the message google.cloud.gkehub.v1alpha.CommonFeatureState.
 * Use `create(CommonFeatureStateSchema)` to create a new message.
 */
export const CommonFeatureStateSchema: GenMessage<CommonFeatureState> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1alpha_feature, 4);

/**
 * MembershipFeatureSpec contains configuration information for a single
 * Membership.
 *
 * @generated from message google.cloud.gkehub.v1alpha.MembershipFeatureSpec
 */
export type MembershipFeatureSpec = Message<"google.cloud.gkehub.v1alpha.MembershipFeatureSpec"> & {
  /**
   * @generated from oneof google.cloud.gkehub.v1alpha.MembershipFeatureSpec.feature_spec
   */
  featureSpec: {
    /**
     * Config Management-specific spec.
     *
     * @generated from field: google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec configmanagement = 106;
     */
    value: MembershipSpec;
    case: "configmanagement";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.gkehub.v1alpha.MembershipFeatureSpec.
 * Use `create(MembershipFeatureSpecSchema)` to create a new message.
 */
export const MembershipFeatureSpecSchema: GenMessage<MembershipFeatureSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1alpha_feature, 5);

/**
 * MembershipFeatureState contains Feature status information for a single
 * Membership.
 *
 * @generated from message google.cloud.gkehub.v1alpha.MembershipFeatureState
 */
export type MembershipFeatureState = Message<"google.cloud.gkehub.v1alpha.MembershipFeatureState"> & {
  /**
   * @generated from oneof google.cloud.gkehub.v1alpha.MembershipFeatureState.feature_state
   */
  featureState: {
    /**
     * Service Mesh-specific state.
     *
     * @generated from field: google.cloud.gkehub.servicemesh.v1alpha.MembershipState servicemesh = 100;
     */
    value: MembershipState;
    case: "servicemesh";
  } | {
    /**
     * Metering-specific spec.
     *
     * @generated from field: google.cloud.gkehub.metering.v1alpha.MembershipState metering = 104;
     */
    value: MembershipState$1;
    case: "metering";
  } | {
    /**
     * Config Management-specific state.
     *
     * @generated from field: google.cloud.gkehub.configmanagement.v1alpha.MembershipState configmanagement = 106;
     */
    value: MembershipState$2;
    case: "configmanagement";
  } | { case: undefined; value?: undefined };

  /**
   * The high-level state of this Feature for a single membership.
   *
   * @generated from field: google.cloud.gkehub.v1alpha.FeatureState state = 1;
   */
  state?: FeatureState;
};

/**
 * Describes the message google.cloud.gkehub.v1alpha.MembershipFeatureState.
 * Use `create(MembershipFeatureStateSchema)` to create a new message.
 */
export const MembershipFeatureStateSchema: GenMessage<MembershipFeatureState> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1alpha_feature, 6);

