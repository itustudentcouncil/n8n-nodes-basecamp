// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/gkehub/servicemesh/v1beta/servicemesh.proto (package google.cloud.gkehub.servicemesh.v1beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/gkehub/servicemesh/v1beta/servicemesh.proto.
 */
export const file_google_cloud_gkehub_servicemesh_v1beta_servicemesh: GenFile = /*@__PURE__*/
  fileDesc("Cjhnb29nbGUvY2xvdWQvZ2tlaHViL3NlcnZpY2VtZXNoL3YxYmV0YS9zZXJ2aWNlbWVzaC5wcm90bxImZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2aWNlbWVzaC52MWJldGEiiwMKDk1lbWJlcnNoaXBTcGVjEmgKDWNvbnRyb2xfcGxhbmUYASABKA4yTS5nb29nbGUuY2xvdWQuZ2tlaHViLnNlcnZpY2VtZXNoLnYxYmV0YS5NZW1iZXJzaGlwU3BlYy5Db250cm9sUGxhbmVNYW5hZ2VtZW50QgIYARJVCgptYW5hZ2VtZW50GAQgASgOMkEuZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2aWNlbWVzaC52MWJldGEuTWVtYmVyc2hpcFNwZWMuTWFuYWdlbWVudCJdChZDb250cm9sUGxhbmVNYW5hZ2VtZW50EigKJENPTlRST0xfUExBTkVfTUFOQUdFTUVOVF9VTlNQRUNJRklFRBAAEg0KCUFVVE9NQVRJQxABEgoKBk1BTlVBTBACIlkKCk1hbmFnZW1lbnQSGgoWTUFOQUdFTUVOVF9VTlNQRUNJRklFRBAAEhgKFE1BTkFHRU1FTlRfQVVUT01BVElDEAESFQoRTUFOQUdFTUVOVF9NQU5VQUwQAiKsEgoPTWVtYmVyc2hpcFN0YXRlEnUKGGNvbnRyb2xfcGxhbmVfbWFuYWdlbWVudBgCIAEoCzJOLmdvb2dsZS5jbG91ZC5na2VodWIuc2VydmljZW1lc2gudjFiZXRhLk1lbWJlcnNoaXBTdGF0ZS5Db250cm9sUGxhbmVNYW5hZ2VtZW50QgPgQQMSbwoVZGF0YV9wbGFuZV9tYW5hZ2VtZW50GAQgASgLMksuZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2aWNlbWVzaC52MWJldGEuTWVtYmVyc2hpcFN0YXRlLkRhdGFQbGFuZU1hbmFnZW1lbnRCA+BBAxJaCgpjb25kaXRpb25zGAggAygLMkEuZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2aWNlbWVzaC52MWJldGEuTWVtYmVyc2hpcFN0YXRlLkNvbmRpdGlvbkID4EEDGpUDChZDb250cm9sUGxhbmVNYW5hZ2VtZW50EkYKB2RldGFpbHMYAiADKAsyNS5nb29nbGUuY2xvdWQuZ2tlaHViLnNlcnZpY2VtZXNoLnYxYmV0YS5TdGF0dXNEZXRhaWxzElUKBXN0YXRlGAMgASgOMkYuZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2aWNlbWVzaC52MWJldGEuTWVtYmVyc2hpcFN0YXRlLkxpZmVjeWNsZVN0YXRlEnoKDmltcGxlbWVudGF0aW9uGAQgASgOMl0uZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2aWNlbWVzaC52MWJldGEuTWVtYmVyc2hpcFN0YXRlLkNvbnRyb2xQbGFuZU1hbmFnZW1lbnQuSW1wbGVtZW50YXRpb25CA+BBAyJgCg5JbXBsZW1lbnRhdGlvbhIeChpJTVBMRU1FTlRBVElPTl9VTlNQRUNJRklFRBAAEgoKBklTVElPRBABEhQKEFRSQUZGSUNfRElSRUNUT1IQAhIMCghVUERBVElORxADGrQBChNEYXRhUGxhbmVNYW5hZ2VtZW50ElUKBXN0YXRlGAEgASgOMkYuZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2aWNlbWVzaC52MWJldGEuTWVtYmVyc2hpcFN0YXRlLkxpZmVjeWNsZVN0YXRlEkYKB2RldGFpbHMYAiADKAsyNS5nb29nbGUuY2xvdWQuZ2tlaHViLnNlcnZpY2VtZXNoLnYxYmV0YS5TdGF0dXNEZXRhaWxzGtwJCglDb25kaXRpb24SVAoEY29kZRgBIAEoDjJGLmdvb2dsZS5jbG91ZC5na2VodWIuc2VydmljZW1lc2gudjFiZXRhLk1lbWJlcnNoaXBTdGF0ZS5Db25kaXRpb24uQ29kZRIaChJkb2N1bWVudGF0aW9uX2xpbmsYAiABKAkSDwoHZGV0YWlscxgDIAEoCRJcCghzZXZlcml0eRgEIAEoDjJKLmdvb2dsZS5jbG91ZC5na2VodWIuc2VydmljZW1lc2gudjFiZXRhLk1lbWJlcnNoaXBTdGF0ZS5Db25kaXRpb24uU2V2ZXJpdHkipQcKBENvZGUSFAoQQ09ERV9VTlNQRUNJRklFRBAAEh4KGk1FU0hfSUFNX1BFUk1JU1NJT05fREVOSUVEEGQSGwoWQ05JX0NPTkZJR19VTlNVUFBPUlRFRBDJARIcChdHS0VfU0FOREJPWF9VTlNVUFBPUlRFRBDKARIzCi5OT0RFUE9PTF9XT1JLTE9BRF9JREVOVElUWV9GRURFUkFUSU9OX1JFUVVJUkVEEMsBEhwKF0NOSV9JTlNUQUxMQVRJT05fRkFJTEVEEMwBEhoKFUNOSV9QT0RfVU5TQ0hFRFVMQUJMRRDNARIoCiNVTlNVUFBPUlRFRF9NVUxUSVBMRV9DT05UUk9MX1BMQU5FUxCtAhIXChJWUENTQ19HQV9TVVBQT1JURUQQrgISIAobQ09ORklHX0FQUExZX0lOVEVSTkFMX0VSUk9SEJEDEhwKF0NPTkZJR19WQUxJREFUSU9OX0VSUk9SEJIDEh4KGUNPTkZJR19WQUxJREFUSU9OX1dBUk5JTkcQkwMSJAofUVVPVEFfRVhDRUVERURfQkFDS0VORF9TRVJWSUNFUxCUAxIhChxRVU9UQV9FWENFRURFRF9IRUFMVEhfQ0hFQ0tTEJUDEh8KGlFVT1RBX0VYQ0VFREVEX0hUVFBfUk9VVEVTEJYDEh4KGVFVT1RBX0VYQ0VFREVEX1RDUF9ST1VURVMQlwMSHgoZUVVPVEFfRVhDRUVERURfVExTX1JPVVRFUxCYAxIkCh9RVU9UQV9FWENFRURFRF9UUkFGRklDX1BPTElDSUVTEJkDEiUKIFFVT1RBX0VYQ0VFREVEX0VORFBPSU5UX1BPTElDSUVTEJoDEhwKF1FVT1RBX0VYQ0VFREVEX0dBVEVXQVlTEJsDEhoKFVFVT1RBX0VYQ0VFREVEX01FU0hFUxCcAxInCiJRVU9UQV9FWENFRURFRF9TRVJWRVJfVExTX1BPTElDSUVTEJ0DEicKIlFVT1RBX0VYQ0VFREVEX0NMSUVOVF9UTFNfUE9MSUNJRVMQngMSJwoiUVVPVEFfRVhDRUVERURfU0VSVklDRV9MQl9QT0xJQ0lFUxCfAxIgChtRVU9UQV9FWENFRURFRF9IVFRQX0ZJTFRFUlMQoAMSHwoaUVVPVEFfRVhDRUVERURfVENQX0ZJTFRFUlMQoQMSKwomUVVPVEFfRVhDRUVERURfTkVUV09SS19FTkRQT0lOVF9HUk9VUFMQogMiRgoIU2V2ZXJpdHkSGAoUU0VWRVJJVFlfVU5TUEVDSUZJRUQQABIJCgVFUlJPUhABEgsKB1dBUk5JTkcQAhIICgRJTkZPEAMipgEKDkxpZmVjeWNsZVN0YXRlEh8KG0xJRkVDWUNMRV9TVEFURV9VTlNQRUNJRklFRBAAEgwKCERJU0FCTEVEEAESFwoTRkFJTEVEX1BSRUNPTkRJVElPThACEhAKDFBST1ZJU0lPTklORxADEgoKBkFDVElWRRAEEgsKB1NUQUxMRUQQBRITCg9ORUVEU19BVFRFTlRJT04QBhIMCghERUdSQURFRBAHIi4KDVN0YXR1c0RldGFpbHMSDAoEY29kZRgBIAEoCRIPCgdkZXRhaWxzGAIgASgJQo0CCipjb20uZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2aWNlbWVzaC52MWJldGFCEFNlcnZpY2VNZXNoUHJvdG9QAVpMY2xvdWQuZ29vZ2xlLmNvbS9nby9na2VodWIvc2VydmljZW1lc2gvYXBpdjFiZXRhL3NlcnZpY2VtZXNocGI7c2VydmljZW1lc2hwYqoCJkdvb2dsZS5DbG91ZC5Ha2VIdWIuU2VydmljZU1lc2guVjFCZXRhygImR29vZ2xlXENsb3VkXEdrZUh1YlxTZXJ2aWNlTWVzaFxWMWJldGHqAipHb29nbGU6OkNsb3VkOjpHa2VIdWI6OlNlcnZpY2VNZXNoOjpWMWJldGFiBnByb3RvMw", [file_google_api_field_behavior]);

/**
 * **Service Mesh**: Spec for a single Membership for the servicemesh feature
 *
 * @generated from message google.cloud.gkehub.servicemesh.v1beta.MembershipSpec
 */
export type MembershipSpec = Message<"google.cloud.gkehub.servicemesh.v1beta.MembershipSpec"> & {
  /**
   * Deprecated: use `management` instead
   * Enables automatic control plane management.
   *
   * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipSpec.ControlPlaneManagement control_plane = 1 [deprecated = true];
   * @deprecated
   */
  controlPlane: MembershipSpec_ControlPlaneManagement;

  /**
   * Enables automatic Service Mesh management.
   *
   * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipSpec.Management management = 4;
   */
  management: MembershipSpec_Management;
};

/**
 * Describes the message google.cloud.gkehub.servicemesh.v1beta.MembershipSpec.
 * Use `create(MembershipSpecSchema)` to create a new message.
 */
export const MembershipSpecSchema: GenMessage<MembershipSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 0);

/**
 * Whether to automatically manage Service Mesh control planes.
 *
 * @generated from enum google.cloud.gkehub.servicemesh.v1beta.MembershipSpec.ControlPlaneManagement
 */
export enum MembershipSpec_ControlPlaneManagement {
  /**
   * Unspecified
   *
   * @generated from enum value: CONTROL_PLANE_MANAGEMENT_UNSPECIFIED = 0;
   */
  CONTROL_PLANE_MANAGEMENT_UNSPECIFIED = 0,

  /**
   * Google should provision a control plane revision and make it available in
   * the cluster. Google will enroll this revision in a release channel and
   * keep it up to date. The control plane revision may be a managed service,
   * or a managed install.
   *
   * @generated from enum value: AUTOMATIC = 1;
   */
  AUTOMATIC = 1,

  /**
   * User will manually configure the control plane (e.g. via CLI, or via the
   * ControlPlaneRevision KRM API)
   *
   * @generated from enum value: MANUAL = 2;
   */
  MANUAL = 2,
}

/**
 * Describes the enum google.cloud.gkehub.servicemesh.v1beta.MembershipSpec.ControlPlaneManagement.
 */
export const MembershipSpec_ControlPlaneManagementSchema: GenEnum<MembershipSpec_ControlPlaneManagement> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 0, 0);

/**
 * Whether to automatically manage Service Mesh.
 *
 * @generated from enum google.cloud.gkehub.servicemesh.v1beta.MembershipSpec.Management
 */
export enum MembershipSpec_Management {
  /**
   * Unspecified
   *
   * @generated from enum value: MANAGEMENT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Google should manage my Service Mesh for the cluster.
   *
   * @generated from enum value: MANAGEMENT_AUTOMATIC = 1;
   */
  AUTOMATIC = 1,

  /**
   * User will manually configure their service mesh components.
   *
   * @generated from enum value: MANAGEMENT_MANUAL = 2;
   */
  MANUAL = 2,
}

/**
 * Describes the enum google.cloud.gkehub.servicemesh.v1beta.MembershipSpec.Management.
 */
export const MembershipSpec_ManagementSchema: GenEnum<MembershipSpec_Management> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 0, 1);

/**
 * **Service Mesh**: State for a single Membership, as analyzed by the Service
 * Mesh Hub Controller.
 *
 * @generated from message google.cloud.gkehub.servicemesh.v1beta.MembershipState
 */
export type MembershipState = Message<"google.cloud.gkehub.servicemesh.v1beta.MembershipState"> & {
  /**
   * Output only. Status of control plane management
   *
   * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipState.ControlPlaneManagement control_plane_management = 2;
   */
  controlPlaneManagement?: MembershipState_ControlPlaneManagement;

  /**
   * Output only. Status of data plane management.
   *
   * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipState.DataPlaneManagement data_plane_management = 4;
   */
  dataPlaneManagement?: MembershipState_DataPlaneManagement;

  /**
   * Output only. List of conditions reported for this membership.
   *
   * @generated from field: repeated google.cloud.gkehub.servicemesh.v1beta.MembershipState.Condition conditions = 8;
   */
  conditions: MembershipState_Condition[];
};

/**
 * Describes the message google.cloud.gkehub.servicemesh.v1beta.MembershipState.
 * Use `create(MembershipStateSchema)` to create a new message.
 */
export const MembershipStateSchema: GenMessage<MembershipState> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 1);

/**
 * Status of control plane management.
 *
 * @generated from message google.cloud.gkehub.servicemesh.v1beta.MembershipState.ControlPlaneManagement
 */
export type MembershipState_ControlPlaneManagement = Message<"google.cloud.gkehub.servicemesh.v1beta.MembershipState.ControlPlaneManagement"> & {
  /**
   * Explanation of state.
   *
   * @generated from field: repeated google.cloud.gkehub.servicemesh.v1beta.StatusDetails details = 2;
   */
  details: StatusDetails[];

  /**
   * LifecycleState of control plane management.
   *
   * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipState.LifecycleState state = 3;
   */
  state: MembershipState_LifecycleState;

  /**
   * Output only. Implementation of managed control plane.
   *
   * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipState.ControlPlaneManagement.Implementation implementation = 4;
   */
  implementation: MembershipState_ControlPlaneManagement_Implementation;
};

/**
 * Describes the message google.cloud.gkehub.servicemesh.v1beta.MembershipState.ControlPlaneManagement.
 * Use `create(MembershipState_ControlPlaneManagementSchema)` to create a new message.
 */
export const MembershipState_ControlPlaneManagementSchema: GenMessage<MembershipState_ControlPlaneManagement> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 1, 0);

/**
 * Implementation of managed control plane.
 *
 * @generated from enum google.cloud.gkehub.servicemesh.v1beta.MembershipState.ControlPlaneManagement.Implementation
 */
export enum MembershipState_ControlPlaneManagement_Implementation {
  /**
   * Unspecified
   *
   * @generated from enum value: IMPLEMENTATION_UNSPECIFIED = 0;
   */
  IMPLEMENTATION_UNSPECIFIED = 0,

  /**
   * A Google build of istiod is used for the managed control plane.
   *
   * @generated from enum value: ISTIOD = 1;
   */
  ISTIOD = 1,

  /**
   * Traffic director is used for the managed control plane.
   *
   * @generated from enum value: TRAFFIC_DIRECTOR = 2;
   */
  TRAFFIC_DIRECTOR = 2,

  /**
   * The control plane implementation is being updated.
   *
   * @generated from enum value: UPDATING = 3;
   */
  UPDATING = 3,
}

/**
 * Describes the enum google.cloud.gkehub.servicemesh.v1beta.MembershipState.ControlPlaneManagement.Implementation.
 */
export const MembershipState_ControlPlaneManagement_ImplementationSchema: GenEnum<MembershipState_ControlPlaneManagement_Implementation> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 1, 0, 0);

/**
 * Status of data plane management. Only reported per-member.
 *
 * @generated from message google.cloud.gkehub.servicemesh.v1beta.MembershipState.DataPlaneManagement
 */
export type MembershipState_DataPlaneManagement = Message<"google.cloud.gkehub.servicemesh.v1beta.MembershipState.DataPlaneManagement"> & {
  /**
   * Lifecycle status of data plane management.
   *
   * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipState.LifecycleState state = 1;
   */
  state: MembershipState_LifecycleState;

  /**
   * Explanation of the status.
   *
   * @generated from field: repeated google.cloud.gkehub.servicemesh.v1beta.StatusDetails details = 2;
   */
  details: StatusDetails[];
};

/**
 * Describes the message google.cloud.gkehub.servicemesh.v1beta.MembershipState.DataPlaneManagement.
 * Use `create(MembershipState_DataPlaneManagementSchema)` to create a new message.
 */
export const MembershipState_DataPlaneManagementSchema: GenMessage<MembershipState_DataPlaneManagement> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 1, 1);

/**
 * Condition being reported.
 *
 * @generated from message google.cloud.gkehub.servicemesh.v1beta.MembershipState.Condition
 */
export type MembershipState_Condition = Message<"google.cloud.gkehub.servicemesh.v1beta.MembershipState.Condition"> & {
  /**
   * Unique identifier of the condition which describes the condition
   * recognizable to the user.
   *
   * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipState.Condition.Code code = 1;
   */
  code: MembershipState_Condition_Code;

  /**
   * Links contains actionable information.
   *
   * @generated from field: string documentation_link = 2;
   */
  documentationLink: string;

  /**
   * A short summary about the issue.
   *
   * @generated from field: string details = 3;
   */
  details: string;

  /**
   * Severity level of the condition.
   *
   * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipState.Condition.Severity severity = 4;
   */
  severity: MembershipState_Condition_Severity;
};

/**
 * Describes the message google.cloud.gkehub.servicemesh.v1beta.MembershipState.Condition.
 * Use `create(MembershipState_ConditionSchema)` to create a new message.
 */
export const MembershipState_ConditionSchema: GenMessage<MembershipState_Condition> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 1, 2);

/**
 * Unique identifier of the condition which describes the condition
 * recognizable to the user.
 *
 * @generated from enum google.cloud.gkehub.servicemesh.v1beta.MembershipState.Condition.Code
 */
export enum MembershipState_Condition_Code {
  /**
   * Default Unspecified code
   *
   * @generated from enum value: CODE_UNSPECIFIED = 0;
   */
  CODE_UNSPECIFIED = 0,

  /**
   * Mesh IAM permission denied error code
   *
   * @generated from enum value: MESH_IAM_PERMISSION_DENIED = 100;
   */
  MESH_IAM_PERMISSION_DENIED = 100,

  /**
   * CNI config unsupported error code
   *
   * @generated from enum value: CNI_CONFIG_UNSUPPORTED = 201;
   */
  CNI_CONFIG_UNSUPPORTED = 201,

  /**
   * GKE sandbox unsupported error code
   *
   * @generated from enum value: GKE_SANDBOX_UNSUPPORTED = 202;
   */
  GKE_SANDBOX_UNSUPPORTED = 202,

  /**
   * Nodepool workload identity federation required error code
   *
   * @generated from enum value: NODEPOOL_WORKLOAD_IDENTITY_FEDERATION_REQUIRED = 203;
   */
  NODEPOOL_WORKLOAD_IDENTITY_FEDERATION_REQUIRED = 203,

  /**
   * CNI installation failed error code
   *
   * @generated from enum value: CNI_INSTALLATION_FAILED = 204;
   */
  CNI_INSTALLATION_FAILED = 204,

  /**
   * CNI pod unschedulable error code
   *
   * @generated from enum value: CNI_POD_UNSCHEDULABLE = 205;
   */
  CNI_POD_UNSCHEDULABLE = 205,

  /**
   * Multiple control planes unsupported error code
   *
   * @generated from enum value: UNSUPPORTED_MULTIPLE_CONTROL_PLANES = 301;
   */
  UNSUPPORTED_MULTIPLE_CONTROL_PLANES = 301,

  /**
   * VPC-SC GA is supported for this control plane.
   *
   * @generated from enum value: VPCSC_GA_SUPPORTED = 302;
   */
  VPCSC_GA_SUPPORTED = 302,

  /**
   * Configuration (Istio/k8s resources) failed to apply due to internal
   * error.
   *
   * @generated from enum value: CONFIG_APPLY_INTERNAL_ERROR = 401;
   */
  CONFIG_APPLY_INTERNAL_ERROR = 401,

  /**
   * Configuration failed to be applied due to being invalid.
   *
   * @generated from enum value: CONFIG_VALIDATION_ERROR = 402;
   */
  CONFIG_VALIDATION_ERROR = 402,

  /**
   * Encountered configuration(s) with possible unintended behavior or
   * invalid configuration. These configs may not have been applied.
   *
   * @generated from enum value: CONFIG_VALIDATION_WARNING = 403;
   */
  CONFIG_VALIDATION_WARNING = 403,

  /**
   * BackendService quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_BACKEND_SERVICES = 404;
   */
  QUOTA_EXCEEDED_BACKEND_SERVICES = 404,

  /**
   * HealthCheck quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_HEALTH_CHECKS = 405;
   */
  QUOTA_EXCEEDED_HEALTH_CHECKS = 405,

  /**
   * HTTPRoute quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_HTTP_ROUTES = 406;
   */
  QUOTA_EXCEEDED_HTTP_ROUTES = 406,

  /**
   * TCPRoute quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_TCP_ROUTES = 407;
   */
  QUOTA_EXCEEDED_TCP_ROUTES = 407,

  /**
   * TLS routes quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_TLS_ROUTES = 408;
   */
  QUOTA_EXCEEDED_TLS_ROUTES = 408,

  /**
   * TrafficPolicy quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_TRAFFIC_POLICIES = 409;
   */
  QUOTA_EXCEEDED_TRAFFIC_POLICIES = 409,

  /**
   * EndpointPolicy quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_ENDPOINT_POLICIES = 410;
   */
  QUOTA_EXCEEDED_ENDPOINT_POLICIES = 410,

  /**
   * Gateway quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_GATEWAYS = 411;
   */
  QUOTA_EXCEEDED_GATEWAYS = 411,

  /**
   * Mesh quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_MESHES = 412;
   */
  QUOTA_EXCEEDED_MESHES = 412,

  /**
   * ServerTLSPolicy quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_SERVER_TLS_POLICIES = 413;
   */
  QUOTA_EXCEEDED_SERVER_TLS_POLICIES = 413,

  /**
   * ClientTLSPolicy quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_CLIENT_TLS_POLICIES = 414;
   */
  QUOTA_EXCEEDED_CLIENT_TLS_POLICIES = 414,

  /**
   * ServiceLBPolicy quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_SERVICE_LB_POLICIES = 415;
   */
  QUOTA_EXCEEDED_SERVICE_LB_POLICIES = 415,

  /**
   * HTTPFilter quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_HTTP_FILTERS = 416;
   */
  QUOTA_EXCEEDED_HTTP_FILTERS = 416,

  /**
   * TCPFilter quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_TCP_FILTERS = 417;
   */
  QUOTA_EXCEEDED_TCP_FILTERS = 417,

  /**
   * NetworkEndpointGroup quota exceeded error code.
   *
   * @generated from enum value: QUOTA_EXCEEDED_NETWORK_ENDPOINT_GROUPS = 418;
   */
  QUOTA_EXCEEDED_NETWORK_ENDPOINT_GROUPS = 418,
}

/**
 * Describes the enum google.cloud.gkehub.servicemesh.v1beta.MembershipState.Condition.Code.
 */
export const MembershipState_Condition_CodeSchema: GenEnum<MembershipState_Condition_Code> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 1, 2, 0);

/**
 * Severity level of the reported condition
 *
 * @generated from enum google.cloud.gkehub.servicemesh.v1beta.MembershipState.Condition.Severity
 */
export enum MembershipState_Condition_Severity {
  /**
   * Unspecified severity
   *
   * @generated from enum value: SEVERITY_UNSPECIFIED = 0;
   */
  SEVERITY_UNSPECIFIED = 0,

  /**
   * Indicates an issue that prevents the mesh from operating correctly
   *
   * @generated from enum value: ERROR = 1;
   */
  ERROR = 1,

  /**
   * Indicates a setting is likely wrong, but the mesh is still able to
   * operate
   *
   * @generated from enum value: WARNING = 2;
   */
  WARNING = 2,

  /**
   * An informational message, not requiring any action
   *
   * @generated from enum value: INFO = 3;
   */
  INFO = 3,
}

/**
 * Describes the enum google.cloud.gkehub.servicemesh.v1beta.MembershipState.Condition.Severity.
 */
export const MembershipState_Condition_SeveritySchema: GenEnum<MembershipState_Condition_Severity> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 1, 2, 1);

/**
 * Lifecycle state of Service Mesh components.
 *
 * @generated from enum google.cloud.gkehub.servicemesh.v1beta.MembershipState.LifecycleState
 */
export enum MembershipState_LifecycleState {
  /**
   * Unspecified
   *
   * @generated from enum value: LIFECYCLE_STATE_UNSPECIFIED = 0;
   */
  LIFECYCLE_STATE_UNSPECIFIED = 0,

  /**
   * DISABLED means that the component is not enabled.
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * FAILED_PRECONDITION means that provisioning cannot proceed because of
   * some characteristic of the member cluster.
   *
   * @generated from enum value: FAILED_PRECONDITION = 2;
   */
  FAILED_PRECONDITION = 2,

  /**
   * PROVISIONING means that provisioning is in progress.
   *
   * @generated from enum value: PROVISIONING = 3;
   */
  PROVISIONING = 3,

  /**
   * ACTIVE means that the component is ready for use.
   *
   * @generated from enum value: ACTIVE = 4;
   */
  ACTIVE = 4,

  /**
   * STALLED means that provisioning could not be done.
   *
   * @generated from enum value: STALLED = 5;
   */
  STALLED = 5,

  /**
   * NEEDS_ATTENTION means that the component is ready, but some user
   * intervention is required. (For example that the user should migrate
   * workloads to a new control plane revision.)
   *
   * @generated from enum value: NEEDS_ATTENTION = 6;
   */
  NEEDS_ATTENTION = 6,

  /**
   * DEGRADED means that the component is ready, but operating in a
   * degraded state.
   *
   * @generated from enum value: DEGRADED = 7;
   */
  DEGRADED = 7,
}

/**
 * Describes the enum google.cloud.gkehub.servicemesh.v1beta.MembershipState.LifecycleState.
 */
export const MembershipState_LifecycleStateSchema: GenEnum<MembershipState_LifecycleState> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 1, 0);

/**
 * Structured and human-readable details for a status.
 *
 * @generated from message google.cloud.gkehub.servicemesh.v1beta.StatusDetails
 */
export type StatusDetails = Message<"google.cloud.gkehub.servicemesh.v1beta.StatusDetails"> & {
  /**
   * A machine-readable code that further describes a broad status.
   *
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   * Human-readable explanation of code.
   *
   * @generated from field: string details = 2;
   */
  details: string;
};

/**
 * Describes the message google.cloud.gkehub.servicemesh.v1beta.StatusDetails.
 * Use `create(StatusDetailsSchema)` to create a new message.
 */
export const StatusDetailsSchema: GenMessage<StatusDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, 2);

