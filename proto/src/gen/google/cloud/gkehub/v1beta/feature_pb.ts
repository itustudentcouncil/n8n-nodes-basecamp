// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/gkehub/v1beta/feature.proto (package google.cloud.gkehub.v1beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { MembershipSpec as MembershipSpec$1, MembershipState } from "../servicemesh/v1beta/servicemesh_pb";
import { file_google_cloud_gkehub_servicemesh_v1beta_servicemesh } from "../servicemesh/v1beta/servicemesh_pb";
import type { MembershipSpec, MembershipState as MembershipState$2 } from "./configmanagement/configmanagement_pb";
import { file_google_cloud_gkehub_v1beta_configmanagement_configmanagement } from "./configmanagement/configmanagement_pb";
import type { MembershipState as MembershipState$1 } from "./metering/metering_pb";
import { file_google_cloud_gkehub_v1beta_metering_metering } from "./metering/metering_pb";
import type { FeatureSpec } from "./multiclusteringress/multiclusteringress_pb";
import { file_google_cloud_gkehub_v1beta_multiclusteringress_multiclusteringress } from "./multiclusteringress/multiclusteringress_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/gkehub/v1beta/feature.proto.
 */
export const file_google_cloud_gkehub_v1beta_feature: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvY2xvdWQvZ2tlaHViL3YxYmV0YS9mZWF0dXJlLnByb3RvEhpnb29nbGUuY2xvdWQuZ2tlaHViLnYxYmV0YSLvBwoHRmVhdHVyZRIRCgRuYW1lGAEgASgJQgPgQQMSPwoGbGFiZWxzGAIgAygLMi8uZ29vZ2xlLmNsb3VkLmdrZWh1Yi52MWJldGEuRmVhdHVyZS5MYWJlbHNFbnRyeRJNCg5yZXNvdXJjZV9zdGF0ZRgDIAEoCzIwLmdvb2dsZS5jbG91ZC5na2VodWIudjFiZXRhLkZlYXR1cmVSZXNvdXJjZVN0YXRlQgPgQQMSQAoEc3BlYxgEIAEoCzItLmdvb2dsZS5jbG91ZC5na2VodWIudjFiZXRhLkNvbW1vbkZlYXR1cmVTcGVjQgPgQQESVwoQbWVtYmVyc2hpcF9zcGVjcxgFIAMoCzI4Lmdvb2dsZS5jbG91ZC5na2VodWIudjFiZXRhLkZlYXR1cmUuTWVtYmVyc2hpcFNwZWNzRW50cnlCA+BBARJCCgVzdGF0ZRgGIAEoCzIuLmdvb2dsZS5jbG91ZC5na2VodWIudjFiZXRhLkNvbW1vbkZlYXR1cmVTdGF0ZUID4EEDElkKEW1lbWJlcnNoaXBfc3RhdGVzGAcgAygLMjkuZ29vZ2xlLmNsb3VkLmdrZWh1Yi52MWJldGEuRmVhdHVyZS5NZW1iZXJzaGlwU3RhdGVzRW50cnlCA+BBAxI0CgtjcmVhdGVfdGltZRgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVfdGltZRgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0CgtkZWxldGVfdGltZRgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGmkKFE1lbWJlcnNoaXBTcGVjc0VudHJ5EgsKA2tleRgBIAEoCRJACgV2YWx1ZRgCIAEoCzIxLmdvb2dsZS5jbG91ZC5na2VodWIudjFiZXRhLk1lbWJlcnNoaXBGZWF0dXJlU3BlYzoCOAEaawoVTWVtYmVyc2hpcFN0YXRlc0VudHJ5EgsKA2tleRgBIAEoCRJBCgV2YWx1ZRgCIAEoCzIyLmdvb2dsZS5jbG91ZC5na2VodWIudjFiZXRhLk1lbWJlcnNoaXBGZWF0dXJlU3RhdGU6AjgBOl7qQVsKHWdrZWh1Yi5nb29nbGVhcGlzLmNvbS9GZWF0dXJlEjpwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vZmVhdHVyZXMve2ZlYXR1cmV9IsoBChRGZWF0dXJlUmVzb3VyY2VTdGF0ZRJFCgVzdGF0ZRgBIAEoDjI2Lmdvb2dsZS5jbG91ZC5na2VodWIudjFiZXRhLkZlYXR1cmVSZXNvdXJjZVN0YXRlLlN0YXRlImsKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASDAoIRU5BQkxJTkcQARIKCgZBQ1RJVkUQAhINCglESVNBQkxJTkcQAxIMCghVUERBVElORxAEEhQKEFNFUlZJQ0VfVVBEQVRJTkcQBSLPAQoMRmVhdHVyZVN0YXRlEjsKBGNvZGUYASABKA4yLS5nb29nbGUuY2xvdWQuZ2tlaHViLnYxYmV0YS5GZWF0dXJlU3RhdGUuQ29kZRITCgtkZXNjcmlwdGlvbhgCIAEoCRIvCgt1cGRhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiPAoEQ29kZRIUChBDT0RFX1VOU1BFQ0lGSUVEEAASBgoCT0sQARILCgdXQVJOSU5HEAISCQoFRVJST1IQAyJ/ChFDb21tb25GZWF0dXJlU3BlYxJaChNtdWx0aWNsdXN0ZXJpbmdyZXNzGGYgASgLMjsuZ29vZ2xlLmNsb3VkLmdrZWh1Yi5tdWx0aWNsdXN0ZXJpbmdyZXNzLnYxYmV0YS5GZWF0dXJlU3BlY0gAQg4KDGZlYXR1cmVfc3BlYyJSChJDb21tb25GZWF0dXJlU3RhdGUSPAoFc3RhdGUYASABKAsyKC5nb29nbGUuY2xvdWQuZ2tlaHViLnYxYmV0YS5GZWF0dXJlU3RhdGVCA+BBAyLIAQoVTWVtYmVyc2hpcEZlYXR1cmVTcGVjElcKEGNvbmZpZ21hbmFnZW1lbnQYaiABKAsyOy5nb29nbGUuY2xvdWQuZ2tlaHViLmNvbmZpZ21hbmFnZW1lbnQudjFiZXRhLk1lbWJlcnNoaXBTcGVjSAASRgoEbWVzaBh0IAEoCzI2Lmdvb2dsZS5jbG91ZC5na2VodWIuc2VydmljZW1lc2gudjFiZXRhLk1lbWJlcnNoaXBTcGVjSABCDgoMZmVhdHVyZV9zcGVjItYCChZNZW1iZXJzaGlwRmVhdHVyZVN0YXRlEk4KC3NlcnZpY2VtZXNoGGQgASgLMjcuZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2aWNlbWVzaC52MWJldGEuTWVtYmVyc2hpcFN0YXRlSAASSAoIbWV0ZXJpbmcYaCABKAsyNC5nb29nbGUuY2xvdWQuZ2tlaHViLm1ldGVyaW5nLnYxYmV0YS5NZW1iZXJzaGlwU3RhdGVIABJYChBjb25maWdtYW5hZ2VtZW50GGogASgLMjwuZ29vZ2xlLmNsb3VkLmdrZWh1Yi5jb25maWdtYW5hZ2VtZW50LnYxYmV0YS5NZW1iZXJzaGlwU3RhdGVIABI3CgVzdGF0ZRgBIAEoCzIoLmdvb2dsZS5jbG91ZC5na2VodWIudjFiZXRhLkZlYXR1cmVTdGF0ZUIPCg1mZWF0dXJlX3N0YXRlQsIBCh5jb20uZ29vZ2xlLmNsb3VkLmdrZWh1Yi52MWJldGFCDEZlYXR1cmVQcm90b1ABWjZjbG91ZC5nb29nbGUuY29tL2dvL2drZWh1Yi9hcGl2MWJldGEvZ2tlaHVicGI7Z2tlaHVicGKqAhpHb29nbGUuQ2xvdWQuR2tlSHViLlYxQmV0YcoCGkdvb2dsZVxDbG91ZFxHa2VIdWJcVjFiZXRh6gIdR29vZ2xlOjpDbG91ZDo6R2tlSHViOjpWMWJldGFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_gkehub_servicemesh_v1beta_servicemesh, file_google_cloud_gkehub_v1beta_configmanagement_configmanagement, file_google_cloud_gkehub_v1beta_metering_metering, file_google_cloud_gkehub_v1beta_multiclusteringress_multiclusteringress, file_google_protobuf_timestamp]);

/**
 * Feature represents the settings and status of any Hub Feature.
 *
 * @generated from message google.cloud.gkehub.v1beta.Feature
 */
export type Feature = Message<"google.cloud.gkehub.v1beta.Feature"> & {
  /**
   * Output only. The full, unique name of this Feature resource in the format
   * `projects/*\/locations/*\/features/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Labels for this Feature.
   *
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };

  /**
   * Output only. State of the Feature resource itself.
   *
   * @generated from field: google.cloud.gkehub.v1beta.FeatureResourceState resource_state = 3;
   */
  resourceState?: FeatureResourceState;

  /**
   * Optional. Hub-wide Feature configuration. If this Feature does not support
   * any Hub-wide configuration, this field may be unused.
   *
   * @generated from field: google.cloud.gkehub.v1beta.CommonFeatureSpec spec = 4;
   */
  spec?: CommonFeatureSpec;

  /**
   * Optional. Membership-specific configuration for this Feature. If this
   * Feature does not support any per-Membership configuration, this field may
   * be unused.
   *
   * The keys indicate which Membership the configuration is for, in the form:
   *
   * `projects/{p}/locations/{l}/memberships/{m}`
   *
   * Where {p} is the project, {l} is a valid location and {m} is a valid
   * Membership in this project at that location. {p} WILL match the Feature's
   * project.
   *
   * {p} will always be returned as the project number, but the project ID is
   * also accepted during input. If the same Membership is specified in the map
   * twice (using the project ID form, and the project number form), exactly
   * ONE of the entries will be saved, with no guarantees as to which. For this
   * reason, it is recommended the same format be used for all entries when
   * mutating a Feature.
   *
   * @generated from field: map<string, google.cloud.gkehub.v1beta.MembershipFeatureSpec> membership_specs = 5;
   */
  membershipSpecs: { [key: string]: MembershipFeatureSpec };

  /**
   * Output only. The Hub-wide Feature state.
   *
   * @generated from field: google.cloud.gkehub.v1beta.CommonFeatureState state = 6;
   */
  state?: CommonFeatureState;

  /**
   * Output only. Membership-specific Feature status. If this Feature does
   * report any per-Membership status, this field may be unused.
   *
   * The keys indicate which Membership the state is for, in the form:
   *
   * `projects/{p}/locations/{l}/memberships/{m}`
   *
   * Where {p} is the project number, {l} is a valid location and {m} is a valid
   * Membership in this project at that location. {p} MUST match the Feature's
   * project number.
   *
   * @generated from field: map<string, google.cloud.gkehub.v1beta.MembershipFeatureState> membership_states = 7;
   */
  membershipStates: { [key: string]: MembershipFeatureState };

  /**
   * Output only. When the Feature resource was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 8;
   */
  createTime?: Timestamp;

  /**
   * Output only. When the Feature resource was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 9;
   */
  updateTime?: Timestamp;

  /**
   * Output only. When the Feature resource was deleted.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 10;
   */
  deleteTime?: Timestamp;
};

/**
 * Describes the message google.cloud.gkehub.v1beta.Feature.
 * Use `create(FeatureSchema)` to create a new message.
 */
export const FeatureSchema: GenMessage<Feature> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta_feature, 0);

/**
 * FeatureResourceState describes the state of a Feature *resource* in the
 * GkeHub API. See `FeatureState` for the "running state" of the Feature in the
 * Hub and across Memberships.
 *
 * @generated from message google.cloud.gkehub.v1beta.FeatureResourceState
 */
export type FeatureResourceState = Message<"google.cloud.gkehub.v1beta.FeatureResourceState"> & {
  /**
   * The current state of the Feature resource in the Hub API.
   *
   * @generated from field: google.cloud.gkehub.v1beta.FeatureResourceState.State state = 1;
   */
  state: FeatureResourceState_State;
};

/**
 * Describes the message google.cloud.gkehub.v1beta.FeatureResourceState.
 * Use `create(FeatureResourceStateSchema)` to create a new message.
 */
export const FeatureResourceStateSchema: GenMessage<FeatureResourceState> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta_feature, 1);

/**
 * State describes the lifecycle status of a Feature.
 *
 * @generated from enum google.cloud.gkehub.v1beta.FeatureResourceState.State
 */
export enum FeatureResourceState_State {
  /**
   * State is unknown or not set.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The Feature is being enabled, and the Feature resource is being created.
   * Once complete, the corresponding Feature will be enabled in this Hub.
   *
   * @generated from enum value: ENABLING = 1;
   */
  ENABLING = 1,

  /**
   * The Feature is enabled in this Hub, and the Feature resource is fully
   * available.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The Feature is being disabled in this Hub, and the Feature resource
   * is being deleted.
   *
   * @generated from enum value: DISABLING = 3;
   */
  DISABLING = 3,

  /**
   * The Feature resource is being updated.
   *
   * @generated from enum value: UPDATING = 4;
   */
  UPDATING = 4,

  /**
   * The Feature resource is being updated by the Hub Service.
   *
   * @generated from enum value: SERVICE_UPDATING = 5;
   */
  SERVICE_UPDATING = 5,
}

/**
 * Describes the enum google.cloud.gkehub.v1beta.FeatureResourceState.State.
 */
export const FeatureResourceState_StateSchema: GenEnum<FeatureResourceState_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_v1beta_feature, 1, 0);

/**
 * FeatureState describes the high-level state of a Feature. It may be used to
 * describe a Feature's state at the environ-level, or per-membershop, depending
 * on the context.
 *
 * @generated from message google.cloud.gkehub.v1beta.FeatureState
 */
export type FeatureState = Message<"google.cloud.gkehub.v1beta.FeatureState"> & {
  /**
   * The high-level, machine-readable status of this Feature.
   *
   * @generated from field: google.cloud.gkehub.v1beta.FeatureState.Code code = 1;
   */
  code: FeatureState_Code;

  /**
   * A human-readable description of the current status.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The time this status and any related Feature-specific details were updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.gkehub.v1beta.FeatureState.
 * Use `create(FeatureStateSchema)` to create a new message.
 */
export const FeatureStateSchema: GenMessage<FeatureState> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta_feature, 2);

/**
 * Code represents a machine-readable, high-level status of the Feature.
 *
 * @generated from enum google.cloud.gkehub.v1beta.FeatureState.Code
 */
export enum FeatureState_Code {
  /**
   * Unknown or not set.
   *
   * @generated from enum value: CODE_UNSPECIFIED = 0;
   */
  CODE_UNSPECIFIED = 0,

  /**
   * The Feature is operating normally.
   *
   * @generated from enum value: OK = 1;
   */
  OK = 1,

  /**
   * The Feature has encountered an issue, and is operating in a degraded
   * state. The Feature may need intervention to return to normal operation.
   * See the description and any associated Feature-specific details for more
   * information.
   *
   * @generated from enum value: WARNING = 2;
   */
  WARNING = 2,

  /**
   * The Feature is not operating or is in a severely degraded state.
   * The Feature may need intervention to return to normal operation.
   * See the description and any associated Feature-specific details for more
   * information.
   *
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,
}

/**
 * Describes the enum google.cloud.gkehub.v1beta.FeatureState.Code.
 */
export const FeatureState_CodeSchema: GenEnum<FeatureState_Code> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_v1beta_feature, 2, 0);

/**
 * CommonFeatureSpec contains Hub-wide configuration information
 *
 * @generated from message google.cloud.gkehub.v1beta.CommonFeatureSpec
 */
export type CommonFeatureSpec = Message<"google.cloud.gkehub.v1beta.CommonFeatureSpec"> & {
  /**
   * @generated from oneof google.cloud.gkehub.v1beta.CommonFeatureSpec.feature_spec
   */
  featureSpec: {
    /**
     * Multicluster Ingress-specific spec.
     *
     * @generated from field: google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec multiclusteringress = 102;
     */
    value: FeatureSpec;
    case: "multiclusteringress";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.gkehub.v1beta.CommonFeatureSpec.
 * Use `create(CommonFeatureSpecSchema)` to create a new message.
 */
export const CommonFeatureSpecSchema: GenMessage<CommonFeatureSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta_feature, 3);

/**
 * CommonFeatureState contains Hub-wide Feature status information.
 *
 * @generated from message google.cloud.gkehub.v1beta.CommonFeatureState
 */
export type CommonFeatureState = Message<"google.cloud.gkehub.v1beta.CommonFeatureState"> & {
  /**
   * Output only. The "running state" of the Feature in this Hub.
   *
   * @generated from field: google.cloud.gkehub.v1beta.FeatureState state = 1;
   */
  state?: FeatureState;
};

/**
 * Describes the message google.cloud.gkehub.v1beta.CommonFeatureState.
 * Use `create(CommonFeatureStateSchema)` to create a new message.
 */
export const CommonFeatureStateSchema: GenMessage<CommonFeatureState> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta_feature, 4);

/**
 * MembershipFeatureSpec contains configuration information for a single
 * Membership.
 * NOTE: Please use snake case in your feature name.
 *
 * @generated from message google.cloud.gkehub.v1beta.MembershipFeatureSpec
 */
export type MembershipFeatureSpec = Message<"google.cloud.gkehub.v1beta.MembershipFeatureSpec"> & {
  /**
   * @generated from oneof google.cloud.gkehub.v1beta.MembershipFeatureSpec.feature_spec
   */
  featureSpec: {
    /**
     * Config Management-specific spec.
     *
     * @generated from field: google.cloud.gkehub.configmanagement.v1beta.MembershipSpec configmanagement = 106;
     */
    value: MembershipSpec;
    case: "configmanagement";
  } | {
    /**
     * Anthos Service Mesh-specific spec
     *
     * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipSpec mesh = 116;
     */
    value: MembershipSpec$1;
    case: "mesh";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.gkehub.v1beta.MembershipFeatureSpec.
 * Use `create(MembershipFeatureSpecSchema)` to create a new message.
 */
export const MembershipFeatureSpecSchema: GenMessage<MembershipFeatureSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta_feature, 5);

/**
 * MembershipFeatureState contains Feature status information for a single
 * Membership.
 *
 * @generated from message google.cloud.gkehub.v1beta.MembershipFeatureState
 */
export type MembershipFeatureState = Message<"google.cloud.gkehub.v1beta.MembershipFeatureState"> & {
  /**
   * @generated from oneof google.cloud.gkehub.v1beta.MembershipFeatureState.feature_state
   */
  featureState: {
    /**
     * Service Mesh-specific state.
     *
     * @generated from field: google.cloud.gkehub.servicemesh.v1beta.MembershipState servicemesh = 100;
     */
    value: MembershipState;
    case: "servicemesh";
  } | {
    /**
     * Metering-specific state.
     *
     * @generated from field: google.cloud.gkehub.metering.v1beta.MembershipState metering = 104;
     */
    value: MembershipState$1;
    case: "metering";
  } | {
    /**
     * Config Management-specific state.
     *
     * @generated from field: google.cloud.gkehub.configmanagement.v1beta.MembershipState configmanagement = 106;
     */
    value: MembershipState$2;
    case: "configmanagement";
  } | { case: undefined; value?: undefined };

  /**
   * The high-level state of this Feature for a single membership.
   *
   * @generated from field: google.cloud.gkehub.v1beta.FeatureState state = 1;
   */
  state?: FeatureState;
};

/**
 * Describes the message google.cloud.gkehub.v1beta.MembershipFeatureState.
 * Use `create(MembershipFeatureStateSchema)` to create a new message.
 */
export const MembershipFeatureStateSchema: GenMessage<MembershipFeatureState> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta_feature, 6);

