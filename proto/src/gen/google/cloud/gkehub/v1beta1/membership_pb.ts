// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/gkehub/v1beta1/membership.proto (package google.cloud.gkehub.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/gkehub/v1beta1/membership.proto.
 */
export const file_google_cloud_gkehub_v1beta1_membership: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * Membership contains information about a member cluster.
 *
 * @generated from message google.cloud.gkehub.v1beta1.Membership
 */
export type Membership = Message<"google.cloud.gkehub.v1beta1.Membership"> & {
  /**
   * Output only. The full, unique name of this Membership resource in the
   * format `projects/*\/locations/*\/memberships/{membership_id}`, set during
   * creation.
   *
   * `membership_id` must be a valid RFC 1123 compliant DNS label:
   *
   *   1. At most 63 characters in length
   *   2. It must consist of lower case alphanumeric characters or `-`
   *   3. It must start and end with an alphanumeric character
   *
   * Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`,
   * with a maximum length of 63 characters.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. GCP labels for this membership.
   *
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Description of this membership, limited to 63 characters.
   * Must match the regex: `[a-zA-Z0-9][a-zA-Z0-9_\-\.\ ]*`
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Type of resource represented by this Membership
   *
   * @generated from oneof google.cloud.gkehub.v1beta1.Membership.type
   */
  type: {
    /**
     * Optional. Endpoint information to reach this member.
     *
     * @generated from field: google.cloud.gkehub.v1beta1.MembershipEndpoint endpoint = 4;
     */
    value: MembershipEndpoint;
    case: "endpoint";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. State of the Membership resource.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.MembershipState state = 5;
   */
  state?: MembershipState;

  /**
   * Optional. How to identify workloads from this Membership.
   * See the documentation on Workload Identity for more details:
   * https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
   *
   * @generated from field: google.cloud.gkehub.v1beta1.Authority authority = 9;
   */
  authority?: Authority;

  /**
   * Output only. When the Membership was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Output only. When the Membership was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 7;
   */
  updateTime?: Timestamp;

  /**
   * Output only. When the Membership was deleted.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 8;
   */
  deleteTime?: Timestamp;

  /**
   * Optional. An externally-generated and managed ID for this Membership. This
   * ID may be modified after creation, but this is not recommended. For GKE
   * clusters, external_id is managed by the Hub API and updates will be
   * ignored.
   *
   * The ID must match the regex: `[a-zA-Z0-9][a-zA-Z0-9_\-\.]*`
   *
   * If this Membership represents a Kubernetes cluster, this value should be
   * set to the UID of the `kube-system` namespace object.
   *
   * @generated from field: string external_id = 10;
   */
  externalId: string;

  /**
   * Output only. For clusters using Connect, the timestamp of the most recent
   * connection established with Google Cloud. This time is updated every
   * several minutes, not continuously. For clusters that do not use GKE
   * Connect, or that have never connected successfully, this field will be
   * unset.
   *
   * @generated from field: google.protobuf.Timestamp last_connection_time = 11;
   */
  lastConnectionTime?: Timestamp;

  /**
   * Output only. Google-generated UUID for this resource. This is unique across
   * all Membership resources. If a Membership resource is deleted and another
   * resource with the same name is created, it gets a different unique_id.
   *
   * @generated from field: string unique_id = 12;
   */
  uniqueId: string;

  /**
   * Optional. The infrastructure type this Membership is running on.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.Membership.InfrastructureType infrastructure_type = 13;
   */
  infrastructureType: Membership_InfrastructureType;

  /**
   * Optional. The monitoring config information for this membership.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.MonitoringConfig monitoring_config = 14;
   */
  monitoringConfig?: MonitoringConfig;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.Membership.
 * Use `create(MembershipSchema)` to create a new message.
 */
export const MembershipSchema: GenMessage<Membership> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 0);

/**
 * Specifies the infrastructure type of a Membership. Infrastructure type is
 * used by Hub to control infrastructure-specific behavior, including pricing.
 *
 * Each GKE distribution (on-GCP, on-Prem, on-X,...) will set this field
 * automatically, but Attached Clusters customers should specify a type
 * during registration.
 *
 * @generated from enum google.cloud.gkehub.v1beta1.Membership.InfrastructureType
 */
export enum Membership_InfrastructureType {
  /**
   * No type was specified. Some Hub functionality may require a type be
   * specified, and will not support Memberships with this value.
   *
   * @generated from enum value: INFRASTRUCTURE_TYPE_UNSPECIFIED = 0;
   */
  INFRASTRUCTURE_TYPE_UNSPECIFIED = 0,

  /**
   * Private infrastructure that is owned or operated by customer. This
   * includes GKE distributions such as GKE-OnPrem and GKE-OnBareMetal.
   *
   * @generated from enum value: ON_PREM = 1;
   */
  ON_PREM = 1,

  /**
   * Public cloud infrastructure.
   *
   * @generated from enum value: MULTI_CLOUD = 2;
   */
  MULTI_CLOUD = 2,
}

/**
 * Describes the enum google.cloud.gkehub.v1beta1.Membership.InfrastructureType.
 */
export const Membership_InfrastructureTypeSchema: GenEnum<Membership_InfrastructureType> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_v1beta1_membership, 0, 0);

/**
 * MembershipEndpoint contains information needed to contact a Kubernetes API,
 * endpoint and any additional Kubernetes metadata.
 *
 * @generated from message google.cloud.gkehub.v1beta1.MembershipEndpoint
 */
export type MembershipEndpoint = Message<"google.cloud.gkehub.v1beta1.MembershipEndpoint"> & {
  /**
   * Cluster information of the registered cluster.
   *
   * @generated from oneof google.cloud.gkehub.v1beta1.MembershipEndpoint.type
   */
  type: {
    /**
     * Optional. Specific information for a GKE-on-GCP cluster.
     *
     * @generated from field: google.cloud.gkehub.v1beta1.GkeCluster gke_cluster = 4;
     */
    value: GkeCluster;
    case: "gkeCluster";
  } | {
    /**
     * Optional. Specific information for a GKE On-Prem cluster. An onprem
     * user-cluster who has no resourceLink is not allowed to use this field, it
     * should have a nil "type" instead.
     *
     * @generated from field: google.cloud.gkehub.v1beta1.OnPremCluster on_prem_cluster = 7;
     */
    value: OnPremCluster;
    case: "onPremCluster";
  } | {
    /**
     * Optional. Specific information for a GKE Multi-Cloud cluster.
     *
     * @generated from field: google.cloud.gkehub.v1beta1.MultiCloudCluster multi_cloud_cluster = 8;
     */
    value: MultiCloudCluster;
    case: "multiCloudCluster";
  } | {
    /**
     * Optional. Specific information for a Google Edge cluster.
     *
     * @generated from field: google.cloud.gkehub.v1beta1.EdgeCluster edge_cluster = 9;
     */
    value: EdgeCluster;
    case: "edgeCluster";
  } | {
    /**
     * Optional. Specific information for a GDC Edge Appliance cluster.
     *
     * @generated from field: google.cloud.gkehub.v1beta1.ApplianceCluster appliance_cluster = 10;
     */
    value: ApplianceCluster;
    case: "applianceCluster";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Useful Kubernetes-specific metadata.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.KubernetesMetadata kubernetes_metadata = 5;
   */
  kubernetesMetadata?: KubernetesMetadata;

  /**
   * Optional. The in-cluster Kubernetes Resources that should be applied for a
   * correctly registered cluster, in the steady state. These resources:
   *
   *   * Ensure that the cluster is exclusively registered to one and only one
   *     Hub Membership.
   *   * Propagate Workload Pool Information available in the Membership
   *     Authority field.
   *   * Ensure proper initial configuration of default Hub Features.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.KubernetesResource kubernetes_resource = 6;
   */
  kubernetesResource?: KubernetesResource;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.MembershipEndpoint.
 * Use `create(MembershipEndpointSchema)` to create a new message.
 */
export const MembershipEndpointSchema: GenMessage<MembershipEndpoint> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 1);

/**
 * KubernetesResource contains the YAML manifests and configuration for
 * Membership Kubernetes resources in the cluster. After CreateMembership or
 * UpdateMembership, these resources should be re-applied in the cluster.
 *
 * @generated from message google.cloud.gkehub.v1beta1.KubernetesResource
 */
export type KubernetesResource = Message<"google.cloud.gkehub.v1beta1.KubernetesResource"> & {
  /**
   * Input only. The YAML representation of the Membership CR. This field is
   * ignored for GKE clusters where Hub can read the CR directly.
   *
   * Callers should provide the CR that is currently present in the cluster
   * during CreateMembership or UpdateMembership, or leave this field empty if
   * none exists. The CR manifest is used to validate the cluster has not been
   * registered with another Membership.
   *
   * @generated from field: string membership_cr_manifest = 1;
   */
  membershipCrManifest: string;

  /**
   * Output only. Additional Kubernetes resources that need to be applied to the
   * cluster after Membership creation, and after every update.
   *
   * This field is only populated in the Membership returned from a successful
   * long-running operation from CreateMembership or UpdateMembership. It is not
   * populated during normal GetMembership or ListMemberships requests. To get
   * the resource manifest after the initial registration, the caller should
   * make a UpdateMembership call with an empty field mask.
   *
   * @generated from field: repeated google.cloud.gkehub.v1beta1.ResourceManifest membership_resources = 2;
   */
  membershipResources: ResourceManifest[];

  /**
   * Output only. The Kubernetes resources for installing the GKE Connect agent
   *
   * This field is only populated in the Membership returned from a successful
   * long-running operation from CreateMembership or UpdateMembership. It is not
   * populated during normal GetMembership or ListMemberships requests. To get
   * the resource manifest after the initial registration, the caller should
   * make a UpdateMembership call with an empty field mask.
   *
   * @generated from field: repeated google.cloud.gkehub.v1beta1.ResourceManifest connect_resources = 3;
   */
  connectResources: ResourceManifest[];

  /**
   * Optional. Options for Kubernetes resource generation.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.ResourceOptions resource_options = 4;
   */
  resourceOptions?: ResourceOptions;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.KubernetesResource.
 * Use `create(KubernetesResourceSchema)` to create a new message.
 */
export const KubernetesResourceSchema: GenMessage<KubernetesResource> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 2);

/**
 * ResourceOptions represent options for Kubernetes resource generation.
 *
 * @generated from message google.cloud.gkehub.v1beta1.ResourceOptions
 */
export type ResourceOptions = Message<"google.cloud.gkehub.v1beta1.ResourceOptions"> & {
  /**
   * Optional. The Connect agent version to use for connect_resources. Defaults
   * to the latest GKE Connect version. The version must be a currently
   * supported version, obsolete versions will be rejected.
   *
   * @generated from field: string connect_version = 1;
   */
  connectVersion: string;

  /**
   * Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for
   * CustomResourceDefinition resources.
   * This option should be set for clusters with Kubernetes apiserver versions
   * <1.16.
   *
   * @generated from field: bool v1beta1_crd = 2;
   */
  v1beta1Crd: boolean;

  /**
   * Optional. Major version of the Kubernetes cluster. This is only used to
   * determine which version to use for the CustomResourceDefinition resources,
   * `apiextensions/v1beta1` or`apiextensions/v1`.
   *
   * @generated from field: string k8s_version = 3;
   */
  k8sVersion: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.ResourceOptions.
 * Use `create(ResourceOptionsSchema)` to create a new message.
 */
export const ResourceOptionsSchema: GenMessage<ResourceOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 3);

/**
 * ResourceManifest represents a single Kubernetes resource to be applied to
 * the cluster.
 *
 * @generated from message google.cloud.gkehub.v1beta1.ResourceManifest
 */
export type ResourceManifest = Message<"google.cloud.gkehub.v1beta1.ResourceManifest"> & {
  /**
   * YAML manifest of the resource.
   *
   * @generated from field: string manifest = 1;
   */
  manifest: string;

  /**
   * Whether the resource provided in the manifest is `cluster_scoped`.
   * If unset, the manifest is assumed to be namespace scoped.
   *
   * This field is used for REST mapping when applying the resource in a
   * cluster.
   *
   * @generated from field: bool cluster_scoped = 2;
   */
  clusterScoped: boolean;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.ResourceManifest.
 * Use `create(ResourceManifestSchema)` to create a new message.
 */
export const ResourceManifestSchema: GenMessage<ResourceManifest> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 4);

/**
 * GkeCluster contains information specific to GKE clusters.
 *
 * @generated from message google.cloud.gkehub.v1beta1.GkeCluster
 */
export type GkeCluster = Message<"google.cloud.gkehub.v1beta1.GkeCluster"> & {
  /**
   * Immutable. Self-link of the GCP resource for the GKE cluster. For example:
   *
   *     //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
   *
   * Zonal clusters are also supported.
   *
   * @generated from field: string resource_link = 1;
   */
  resourceLink: string;

  /**
   * Output only. If cluster_missing is set then it denotes that the GKE cluster
   * no longer exists in the GKE Control Plane.
   *
   * @generated from field: bool cluster_missing = 3;
   */
  clusterMissing: boolean;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.GkeCluster.
 * Use `create(GkeClusterSchema)` to create a new message.
 */
export const GkeClusterSchema: GenMessage<GkeCluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 5);

/**
 * OnPremCluster contains information specific to GKE On-Prem clusters.
 *
 * @generated from message google.cloud.gkehub.v1beta1.OnPremCluster
 */
export type OnPremCluster = Message<"google.cloud.gkehub.v1beta1.OnPremCluster"> & {
  /**
   * Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For
   * example:
   *
   *  //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster
   *  //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
   *
   * @generated from field: string resource_link = 1;
   */
  resourceLink: string;

  /**
   * Output only. If cluster_missing is set then it denotes that
   * API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no
   * longer exists.
   *
   * @generated from field: bool cluster_missing = 2;
   */
  clusterMissing: boolean;

  /**
   * Immutable. Whether the cluster is an admin cluster.
   *
   * @generated from field: bool admin_cluster = 3;
   */
  adminCluster: boolean;

  /**
   * Immutable. The on prem cluster's type.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.OnPremCluster.ClusterType cluster_type = 4;
   */
  clusterType: OnPremCluster_ClusterType;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.OnPremCluster.
 * Use `create(OnPremClusterSchema)` to create a new message.
 */
export const OnPremClusterSchema: GenMessage<OnPremCluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 6);

/**
 * ClusterType describes on prem cluster's type.
 *
 * @generated from enum google.cloud.gkehub.v1beta1.OnPremCluster.ClusterType
 */
export enum OnPremCluster_ClusterType {
  /**
   * The ClusterType is not set.
   *
   * @generated from enum value: CLUSTERTYPE_UNSPECIFIED = 0;
   */
  CLUSTERTYPE_UNSPECIFIED = 0,

  /**
   * The ClusterType is bootstrap cluster.
   *
   * @generated from enum value: BOOTSTRAP = 1;
   */
  BOOTSTRAP = 1,

  /**
   * The ClusterType is baremetal hybrid cluster.
   *
   * @generated from enum value: HYBRID = 2;
   */
  HYBRID = 2,

  /**
   * The ClusterType is baremetal standalone cluster.
   *
   * @generated from enum value: STANDALONE = 3;
   */
  STANDALONE = 3,

  /**
   * The ClusterType is user cluster.
   *
   * @generated from enum value: USER = 4;
   */
  USER = 4,
}

/**
 * Describes the enum google.cloud.gkehub.v1beta1.OnPremCluster.ClusterType.
 */
export const OnPremCluster_ClusterTypeSchema: GenEnum<OnPremCluster_ClusterType> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_v1beta1_membership, 6, 0);

/**
 * MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
 *
 * @generated from message google.cloud.gkehub.v1beta1.MultiCloudCluster
 */
export type MultiCloudCluster = Message<"google.cloud.gkehub.v1beta1.MultiCloudCluster"> & {
  /**
   * Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster.
   * For example:
   *
   *  //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster
   *  //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
   *  //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
   *
   * @generated from field: string resource_link = 1;
   */
  resourceLink: string;

  /**
   * Output only. If cluster_missing is set then it denotes that
   * API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster
   * no longer exists.
   *
   * @generated from field: bool cluster_missing = 2;
   */
  clusterMissing: boolean;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.MultiCloudCluster.
 * Use `create(MultiCloudClusterSchema)` to create a new message.
 */
export const MultiCloudClusterSchema: GenMessage<MultiCloudCluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 7);

/**
 * EdgeCluster contains information specific to Google Edge Clusters.
 *
 * @generated from message google.cloud.gkehub.v1beta1.EdgeCluster
 */
export type EdgeCluster = Message<"google.cloud.gkehub.v1beta1.EdgeCluster"> & {
  /**
   * Immutable. Self-link of the GCP resource for the Edge Cluster. For
   * example:
   *
   * //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
   *
   * @generated from field: string resource_link = 1;
   */
  resourceLink: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.EdgeCluster.
 * Use `create(EdgeClusterSchema)` to create a new message.
 */
export const EdgeClusterSchema: GenMessage<EdgeCluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 8);

/**
 * ApplianceCluster contains information specific to GDC Edge Appliance
 * Clusters.
 *
 * @generated from message google.cloud.gkehub.v1beta1.ApplianceCluster
 */
export type ApplianceCluster = Message<"google.cloud.gkehub.v1beta1.ApplianceCluster"> & {
  /**
   * Immutable. Self-link of the GCP resource for the Appliance Cluster. For
   * example:
   *
   * //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
   *
   * @generated from field: string resource_link = 1;
   */
  resourceLink: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.ApplianceCluster.
 * Use `create(ApplianceClusterSchema)` to create a new message.
 */
export const ApplianceClusterSchema: GenMessage<ApplianceCluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 9);

/**
 * KubernetesMetadata provides informational metadata for Memberships
 * representing Kubernetes clusters.
 *
 * @generated from message google.cloud.gkehub.v1beta1.KubernetesMetadata
 */
export type KubernetesMetadata = Message<"google.cloud.gkehub.v1beta1.KubernetesMetadata"> & {
  /**
   * Output only. Kubernetes API server version string as reported by
   * '/version'.
   *
   * @generated from field: string kubernetes_api_server_version = 1;
   */
  kubernetesApiServerVersion: string;

  /**
   * Output only. Node providerID as reported by the first node in the list of
   * nodes on the Kubernetes endpoint. On Kubernetes platforms that support
   * zero-node clusters (like GKE-on-GCP), the node_count will be zero and the
   * node_provider_id will be empty.
   *
   * @generated from field: string node_provider_id = 2;
   */
  nodeProviderId: string;

  /**
   * Output only. Node count as reported by Kubernetes nodes resources.
   *
   * @generated from field: int32 node_count = 3;
   */
  nodeCount: number;

  /**
   * Output only. vCPU count as reported by Kubernetes nodes resources.
   *
   * @generated from field: int32 vcpu_count = 4;
   */
  vcpuCount: number;

  /**
   * Output only. The total memory capacity as reported by the sum of all
   * Kubernetes nodes resources, defined in MB.
   *
   * @generated from field: int32 memory_mb = 5;
   */
  memoryMb: number;

  /**
   * Output only. The time at which these details were last updated. This
   * update_time is different from the Membership-level update_time since
   * EndpointDetails are updated internally for API consumers.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 100;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.KubernetesMetadata.
 * Use `create(KubernetesMetadataSchema)` to create a new message.
 */
export const KubernetesMetadataSchema: GenMessage<KubernetesMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 10);

/**
 * Authority encodes how Google will recognize identities from this Membership.
 * See the workload identity documentation for more details:
 * https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
 *
 * @generated from message google.cloud.gkehub.v1beta1.Authority
 */
export type Authority = Message<"google.cloud.gkehub.v1beta1.Authority"> & {
  /**
   * Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with
   * `https://` and be a valid URL with length <2000 characters.
   *
   * If set, then Google will allow valid OIDC tokens from this issuer to
   * authenticate within the workload_identity_pool. OIDC discovery will be
   * performed on this URI to validate tokens from the issuer.
   *
   * Clearing `issuer` disables Workload Identity. `issuer` cannot be directly
   * modified; it must be cleared (and Workload Identity disabled) before using
   * a new issuer (and re-enabling Workload Identity).
   *
   * @generated from field: string issuer = 1;
   */
  issuer: string;

  /**
   * Output only. The name of the workload identity pool in which `issuer` will
   * be recognized.
   *
   * There is a single Workload Identity Pool per Hub that is shared
   * between all Memberships that belong to that Hub. For a Hub hosted in
   * {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`,
   * although this is subject to change in newer versions of this API.
   *
   * @generated from field: string workload_identity_pool = 2;
   */
  workloadIdentityPool: string;

  /**
   * Output only. An identity provider that reflects the `issuer` in the
   * workload identity pool.
   *
   * @generated from field: string identity_provider = 3;
   */
  identityProvider: string;

  /**
   * Optional. OIDC verification keys for this Membership in JWKS format (RFC
   * 7517).
   *
   * When this field is set, OIDC discovery will NOT be performed on `issuer`,
   * and instead OIDC tokens will be validated using this field.
   *
   * @generated from field: bytes oidc_jwks = 4;
   */
  oidcJwks: Uint8Array;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.Authority.
 * Use `create(AuthoritySchema)` to create a new message.
 */
export const AuthoritySchema: GenMessage<Authority> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 11);

/**
 * This field informs Fleet-based applications/services/UIs with the necessary
 * information for where each underlying Cluster reports its metrics.
 *
 * @generated from message google.cloud.gkehub.v1beta1.MonitoringConfig
 */
export type MonitoringConfig = Message<"google.cloud.gkehub.v1beta1.MonitoringConfig"> & {
  /**
   * Immutable. Project used to report Metrics
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Immutable. Location used to report Metrics
   *
   * @generated from field: string location = 2;
   */
  location: string;

  /**
   * Immutable. Cluster name used to report metrics.
   * For Anthos on VMWare/Baremetal, it would be in format
   * `memberClusters/cluster_name`; And for Anthos on MultiCloud, it would be in
   * format
   * `{azureClusters, awsClusters}/cluster_name`.
   *
   * @generated from field: string cluster = 3;
   */
  cluster: string;

  /**
   * Kubernetes system metrics, if available, are written to this prefix.
   * This defaults to kubernetes.io for GKE, and kubernetes.io/anthos for Anthos
   * eventually. Noted: Anthos MultiCloud will have kubernetes.io prefix today
   * but will migration to be under kubernetes.io/anthos
   *
   * @generated from field: string kubernetes_metrics_prefix = 4;
   */
  kubernetesMetricsPrefix: string;

  /**
   * Immutable. Cluster hash, this is a unique string generated by google code,
   * which does not contain any PII, which we can use to reference the cluster.
   * This is expected to be created by the monitoring stack and persisted into
   * the Cluster object as well as to GKE-Hub.
   *
   * @generated from field: string cluster_hash = 5;
   */
  clusterHash: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.MonitoringConfig.
 * Use `create(MonitoringConfigSchema)` to create a new message.
 */
export const MonitoringConfigSchema: GenMessage<MonitoringConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 12);

/**
 * State of the Membership resource.
 *
 * @generated from message google.cloud.gkehub.v1beta1.MembershipState
 */
export type MembershipState = Message<"google.cloud.gkehub.v1beta1.MembershipState"> & {
  /**
   * Output only. The current state of the Membership resource.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.MembershipState.Code code = 1;
   */
  code: MembershipState_Code;

  /**
   * This field is never set by the Hub Service.
   *
   * @generated from field: string description = 2 [deprecated = true];
   * @deprecated
   */
  description: string;

  /**
   * This field is never set by the Hub Service.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3 [deprecated = true];
   * @deprecated
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.MembershipState.
 * Use `create(MembershipStateSchema)` to create a new message.
 */
export const MembershipStateSchema: GenMessage<MembershipState> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 13);

/**
 * Code describes the state of a Membership resource.
 *
 * @generated from enum google.cloud.gkehub.v1beta1.MembershipState.Code
 */
export enum MembershipState_Code {
  /**
   * The code is not set.
   *
   * @generated from enum value: CODE_UNSPECIFIED = 0;
   */
  CODE_UNSPECIFIED = 0,

  /**
   * The cluster is being registered.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The cluster is registered.
   *
   * @generated from enum value: READY = 2;
   */
  READY = 2,

  /**
   * The cluster is being unregistered.
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,

  /**
   * The Membership is being updated.
   *
   * @generated from enum value: UPDATING = 4;
   */
  UPDATING = 4,

  /**
   * The Membership is being updated by the Hub Service.
   *
   * @generated from enum value: SERVICE_UPDATING = 5;
   */
  SERVICE_UPDATING = 5,
}

/**
 * Describes the enum google.cloud.gkehub.v1beta1.MembershipState.Code.
 */
export const MembershipState_CodeSchema: GenEnum<MembershipState_Code> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkehub_v1beta1_membership, 13, 0);

/**
 * Request message for `GkeHubMembershipService.ListMemberships` method.
 *
 * @generated from message google.cloud.gkehub.v1beta1.ListMembershipsRequest
 */
export type ListMembershipsRequest = Message<"google.cloud.gkehub.v1beta1.ListMembershipsRequest"> & {
  /**
   * Required. The parent (project and location) where the Memberships will be
   * listed. Specified in the format `projects/*\/locations/*`.
   * `projects/*\/locations/-` list memberships in all the regions.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. When requesting a 'page' of resources, `page_size` specifies
   * number of resources to return. If unspecified or set to 0, all resources
   * will be returned.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. Token returned by previous call to `ListMemberships` which
   * specifies the position in the list from where to continue listing the
   * resources.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Lists Memberships that match the filter expression, following the
   * syntax outlined in https://google.aip.dev/160.
   *
   * Examples:
   *
   *   - Name is `bar` in project `foo-proj` and location `global`:
   *
   *       name = "projects/foo-proj/locations/global/membership/bar"
   *
   *   - Memberships that have a label called `foo`:
   *
   *       labels.foo:*
   *
   *   - Memberships that have a label called `foo` whose value is `bar`:
   *
   *       labels.foo = bar
   *
   *   - Memberships in the CREATING state:
   *
   *       state = CREATING
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. One or more fields to compare and use to sort the output.
   * See https://google.aip.dev/132#ordering.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.ListMembershipsRequest.
 * Use `create(ListMembershipsRequestSchema)` to create a new message.
 */
export const ListMembershipsRequestSchema: GenMessage<ListMembershipsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 14);

/**
 * Response message for the `GkeHubMembershipService.ListMemberships` method.
 *
 * @generated from message google.cloud.gkehub.v1beta1.ListMembershipsResponse
 */
export type ListMembershipsResponse = Message<"google.cloud.gkehub.v1beta1.ListMembershipsResponse"> & {
  /**
   * The list of matching Memberships.
   *
   * @generated from field: repeated google.cloud.gkehub.v1beta1.Membership resources = 1;
   */
  resources: Membership[];

  /**
   * A token to request the next page of resources from the
   * `ListMemberships` method. The value of an empty string means that
   * there are no more resources to return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * List of locations that could not be reached while fetching this list.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.ListMembershipsResponse.
 * Use `create(ListMembershipsResponseSchema)` to create a new message.
 */
export const ListMembershipsResponseSchema: GenMessage<ListMembershipsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 15);

/**
 * Request message for `GkeHubMembershipService.GetMembership` method.
 *
 * @generated from message google.cloud.gkehub.v1beta1.GetMembershipRequest
 */
export type GetMembershipRequest = Message<"google.cloud.gkehub.v1beta1.GetMembershipRequest"> & {
  /**
   * Required. The Membership resource name in the format
   * `projects/*\/locations/*\/memberships/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.GetMembershipRequest.
 * Use `create(GetMembershipRequestSchema)` to create a new message.
 */
export const GetMembershipRequestSchema: GenMessage<GetMembershipRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 16);

/**
 * Request message for the `GkeHubMembershipService.CreateMembership` method.
 *
 * @generated from message google.cloud.gkehub.v1beta1.CreateMembershipRequest
 */
export type CreateMembershipRequest = Message<"google.cloud.gkehub.v1beta1.CreateMembershipRequest"> & {
  /**
   * Required. The parent (project and location) where the Memberships will be
   * created. Specified in the format `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Client chosen ID for the membership. `membership_id` must be a
   * valid RFC 1123 compliant DNS label:
   *
   *   1. At most 63 characters in length
   *   2. It must consist of lower case alphanumeric characters or `-`
   *   3. It must start and end with an alphanumeric character
   *
   * Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`,
   * with a maximum length of 63 characters.
   *
   * @generated from field: string membership_id = 2;
   */
  membershipId: string;

  /**
   * Required. The membership to create.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.Membership resource = 3;
   */
  resource?: Membership;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.CreateMembershipRequest.
 * Use `create(CreateMembershipRequestSchema)` to create a new message.
 */
export const CreateMembershipRequestSchema: GenMessage<CreateMembershipRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 17);

/**
 * Request message for `GkeHubMembershipService.DeleteMembership` method.
 *
 * @generated from message google.cloud.gkehub.v1beta1.DeleteMembershipRequest
 */
export type DeleteMembershipRequest = Message<"google.cloud.gkehub.v1beta1.DeleteMembershipRequest"> & {
  /**
   * Required. The Membership resource name in the format
   * `projects/*\/locations/*\/memberships/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. If set to true, any subresource from this Membership will also be
   * deleted. Otherwise, the request will only work if the Membership has no
   * subresource.
   *
   * @generated from field: bool force = 5;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.DeleteMembershipRequest.
 * Use `create(DeleteMembershipRequestSchema)` to create a new message.
 */
export const DeleteMembershipRequestSchema: GenMessage<DeleteMembershipRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 18);

/**
 * Request message for `GkeHubMembershipService.UpdateMembership` method.
 *
 * @generated from message google.cloud.gkehub.v1beta1.UpdateMembershipRequest
 */
export type UpdateMembershipRequest = Message<"google.cloud.gkehub.v1beta1.UpdateMembershipRequest"> & {
  /**
   * Required. The membership resource name in the format:
   * `projects/[project_id]/locations/global/memberships/[membership_id]`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Mask of fields to update. At least one field path must be
   * specified in this mask.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Required. Only fields specified in update_mask are updated.
   * If you specify a field in the update_mask but don't specify its value here
   * that field will be deleted.
   * If you are updating a map field, set the value of a key to null or empty
   * string to delete the key from the map. It's not possible to update a key's
   * value to the empty string.
   * If you specify the update_mask to be a special path "*", fully replaces all
   * user-modifiable fields to match `resource`.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.Membership resource = 3;
   */
  resource?: Membership;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.UpdateMembershipRequest.
 * Use `create(UpdateMembershipRequestSchema)` to create a new message.
 */
export const UpdateMembershipRequestSchema: GenMessage<UpdateMembershipRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 19);

/**
 * Request message for `GkeHubMembershipService.GenerateConnectManifest`
 * method.
 *
 * @generated from message google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
 */
export type GenerateConnectManifestRequest = Message<"google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest"> & {
  /**
   * Required. The Membership resource name the Agent will associate with, in
   * the format `projects/*\/locations/*\/memberships/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The connect agent to generate manifest for.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.ConnectAgent connect_agent = 2;
   */
  connectAgent?: ConnectAgent;

  /**
   * Optional. The Connect agent version to use. Defaults to the most current
   * version.
   *
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * Optional. If true, generate the resources for upgrade only. Some resources
   * generated only for installation (e.g. secrets) will be excluded.
   *
   * @generated from field: bool is_upgrade = 4;
   */
  isUpgrade: boolean;

  /**
   * Optional. The registry to fetch the connect agent image from. Defaults to
   * gcr.io/gkeconnect.
   *
   * @generated from field: string registry = 5;
   */
  registry: string;

  /**
   * Optional. The image pull secret content for the registry, if not public.
   *
   * @generated from field: bytes image_pull_secret_content = 6;
   */
  imagePullSecretContent: Uint8Array;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest.
 * Use `create(GenerateConnectManifestRequestSchema)` to create a new message.
 */
export const GenerateConnectManifestRequestSchema: GenMessage<GenerateConnectManifestRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 20);

/**
 * GenerateConnectManifestResponse contains manifest information for
 * installing/upgrading a Connect agent.
 *
 * @generated from message google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
 */
export type GenerateConnectManifestResponse = Message<"google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse"> & {
  /**
   * The ordered list of Kubernetes resources that need to be applied to the
   * cluster for GKE Connect agent installation/upgrade.
   *
   * @generated from field: repeated google.cloud.gkehub.v1beta1.ConnectAgentResource manifest = 1;
   */
  manifest: ConnectAgentResource[];
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse.
 * Use `create(GenerateConnectManifestResponseSchema)` to create a new message.
 */
export const GenerateConnectManifestResponseSchema: GenMessage<GenerateConnectManifestResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 21);

/**
 * ConnectAgentResource represents a Kubernetes resource manifest for Connect
 * Agent deployment.
 *
 * @generated from message google.cloud.gkehub.v1beta1.ConnectAgentResource
 */
export type ConnectAgentResource = Message<"google.cloud.gkehub.v1beta1.ConnectAgentResource"> & {
  /**
   * Kubernetes type of the resource.
   *
   * @generated from field: google.cloud.gkehub.v1beta1.TypeMeta type = 1;
   */
  type?: TypeMeta;

  /**
   * YAML manifest of the resource.
   *
   * @generated from field: string manifest = 2;
   */
  manifest: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.ConnectAgentResource.
 * Use `create(ConnectAgentResourceSchema)` to create a new message.
 */
export const ConnectAgentResourceSchema: GenMessage<ConnectAgentResource> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 22);

/**
 * TypeMeta is the type information needed for content unmarshalling of
 * Kubernetes resources in the manifest.
 *
 * @generated from message google.cloud.gkehub.v1beta1.TypeMeta
 */
export type TypeMeta = Message<"google.cloud.gkehub.v1beta1.TypeMeta"> & {
  /**
   * Kind of the resource (e.g. Deployment).
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * APIVersion of the resource (e.g. v1).
   *
   * @generated from field: string api_version = 2;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.TypeMeta.
 * Use `create(TypeMetaSchema)` to create a new message.
 */
export const TypeMetaSchema: GenMessage<TypeMeta> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 23);

/**
 * The information required from end users to use GKE Connect.
 *
 * @generated from message google.cloud.gkehub.v1beta1.ConnectAgent
 */
export type ConnectAgent = Message<"google.cloud.gkehub.v1beta1.ConnectAgent"> & {
  /**
   * Do not set.
   *
   * @generated from field: string name = 1 [deprecated = true];
   * @deprecated
   */
  name: string;

  /**
   * Optional. URI of a proxy if connectivity from the agent to
   * gkeconnect.googleapis.com requires the use of a proxy. Format must be in
   * the form `http(s)://{proxy_address}`, depending on the HTTP/HTTPS protocol
   * supported by the proxy. This will direct the connect agent's outbound
   * traffic through a HTTP(S) proxy.
   *
   * @generated from field: bytes proxy = 2;
   */
  proxy: Uint8Array;

  /**
   * Optional. Namespace for GKE Connect agent resources. Defaults to
   * `gke-connect`.
   *
   * The Connect Agent is authorized automatically when run in the default
   * namespace. Otherwise, explicit authorization must be granted with an
   * additional IAM binding.
   *
   * @generated from field: string namespace = 3;
   */
  namespace: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.ConnectAgent.
 * Use `create(ConnectAgentSchema)` to create a new message.
 */
export const ConnectAgentSchema: GenMessage<ConnectAgent> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 24);

/**
 * The request to validate the existing state of the membership CR in the
 * cluster.
 *
 * @generated from message google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
 */
export type ValidateExclusivityRequest = Message<"google.cloud.gkehub.v1beta1.ValidateExclusivityRequest"> & {
  /**
   * Required. The parent (project and location) where the Memberships will be
   * created. Specified in the format `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The YAML of the membership CR in the cluster. Empty if the
   * membership CR does not exist.
   *
   * @generated from field: string cr_manifest = 2;
   */
  crManifest: string;

  /**
   * Required. The intended membership name under the `parent`. This method only
   * does validation in anticipation of a CreateMembership call with the same
   * name.
   *
   * @generated from field: string intended_membership = 3;
   */
  intendedMembership: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.ValidateExclusivityRequest.
 * Use `create(ValidateExclusivityRequestSchema)` to create a new message.
 */
export const ValidateExclusivityRequestSchema: GenMessage<ValidateExclusivityRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 25);

/**
 * The response of exclusivity artifacts validation result status.
 *
 * @generated from message google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
 */
export type ValidateExclusivityResponse = Message<"google.cloud.gkehub.v1beta1.ValidateExclusivityResponse"> & {
  /**
   * The validation result.
   *
   * * `OK` means that exclusivity is validated, assuming the manifest produced
   *    by GenerateExclusivityManifest is successfully applied.
   * * `ALREADY_EXISTS` means that the Membership CRD is already owned by
   *    another Hub. See `status.message` for more information.
   *
   * @generated from field: google.rpc.Status status = 1;
   */
  status?: Status;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.ValidateExclusivityResponse.
 * Use `create(ValidateExclusivityResponseSchema)` to create a new message.
 */
export const ValidateExclusivityResponseSchema: GenMessage<ValidateExclusivityResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 26);

/**
 * The request to generate the manifests for exclusivity artifacts.
 *
 * @generated from message google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
 */
export type GenerateExclusivityManifestRequest = Message<"google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest"> & {
  /**
   * Required. The Membership resource name in the format
   * `projects/*\/locations/*\/memberships/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The YAML manifest of the membership CRD retrieved by
   * `kubectl get customresourcedefinitions membership`.
   * Leave empty if the resource does not exist.
   *
   * @generated from field: string crd_manifest = 2;
   */
  crdManifest: string;

  /**
   * Optional. The YAML manifest of the membership CR retrieved by
   * `kubectl get memberships membership`.
   * Leave empty if the resource does not exist.
   *
   * @generated from field: string cr_manifest = 3;
   */
  crManifest: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest.
 * Use `create(GenerateExclusivityManifestRequestSchema)` to create a new message.
 */
export const GenerateExclusivityManifestRequestSchema: GenMessage<GenerateExclusivityManifestRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 27);

/**
 * The response of the exclusivity artifacts manifests for the client to apply.
 *
 * @generated from message google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
 */
export type GenerateExclusivityManifestResponse = Message<"google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse"> & {
  /**
   * The YAML manifest of the membership CRD to apply if a newer version of the
   * CRD is available. Empty if no update needs to be applied.
   *
   * @generated from field: string crd_manifest = 1;
   */
  crdManifest: string;

  /**
   * The YAML manifest of the membership CR to apply if a new version of the
   * CR is available. Empty if no update needs to be applied.
   *
   * @generated from field: string cr_manifest = 2;
   */
  crManifest: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse.
 * Use `create(GenerateExclusivityManifestResponseSchema)` to create a new message.
 */
export const GenerateExclusivityManifestResponseSchema: GenMessage<GenerateExclusivityManifestResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 28);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.gkehub.v1beta1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.gkehub.v1beta1.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_detail = 5;
   */
  statusDetail: string;

  /**
   * Output only. Identifies whether the user has requested cancellation
   * of the operation. Operations that have successfully been cancelled
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool cancel_requested = 6;
   */
  cancelRequested: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.gkehub.v1beta1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkehub_v1beta1_membership, 29);

/**
 * The GKE Hub MembershipService handles the registration of many Kubernetes
 * clusters to Google Cloud, represented with the
 * [Membership][google.cloud.gkehub.v1beta1.Membership] resource.
 *
 * GKE Hub is currently available in the global region and all regions in
 * https://cloud.google.com/compute/docs/regions-zones.
 *
 * **Membership management may be non-trivial:** it is recommended to use one
 * of the Google-provided client libraries or tools where possible when working
 * with Membership resources.
 *
 * @generated from service google.cloud.gkehub.v1beta1.GkeHubMembershipService
 */
export const GkeHubMembershipService: GenService<{
  /**
   * Lists Memberships in a given project and location.
   *
   * @generated from rpc google.cloud.gkehub.v1beta1.GkeHubMembershipService.ListMemberships
   */
  listMemberships: {
    methodKind: "unary";
    input: typeof ListMembershipsRequestSchema;
    output: typeof ListMembershipsResponseSchema;
  },
  /**
   * Gets the details of a Membership.
   *
   * @generated from rpc google.cloud.gkehub.v1beta1.GkeHubMembershipService.GetMembership
   */
  getMembership: {
    methodKind: "unary";
    input: typeof GetMembershipRequestSchema;
    output: typeof MembershipSchema;
  },
  /**
   * Creates a new Membership.
   *
   * **This is currently only supported for GKE clusters on Google Cloud**.
   * To register other clusters, follow the instructions at
   * https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster.
   *
   * @generated from rpc google.cloud.gkehub.v1beta1.GkeHubMembershipService.CreateMembership
   */
  createMembership: {
    methodKind: "unary";
    input: typeof CreateMembershipRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Removes a Membership.
   *
   * **This is currently only supported for GKE clusters on Google Cloud**.
   * To unregister other clusters, follow the instructions at
   * https://cloud.google.com/anthos/multicluster-management/connect/unregistering-a-cluster.
   *
   * @generated from rpc google.cloud.gkehub.v1beta1.GkeHubMembershipService.DeleteMembership
   */
  deleteMembership: {
    methodKind: "unary";
    input: typeof DeleteMembershipRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates an existing Membership.
   *
   * @generated from rpc google.cloud.gkehub.v1beta1.GkeHubMembershipService.UpdateMembership
   */
  updateMembership: {
    methodKind: "unary";
    input: typeof UpdateMembershipRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Generates the manifest for deployment of the GKE connect agent.
   *
   * **This method is used internally by Google-provided libraries.**
   * Most clients should not need to call this method directly.
   *
   * @generated from rpc google.cloud.gkehub.v1beta1.GkeHubMembershipService.GenerateConnectManifest
   */
  generateConnectManifest: {
    methodKind: "unary";
    input: typeof GenerateConnectManifestRequestSchema;
    output: typeof GenerateConnectManifestResponseSchema;
  },
  /**
   * ValidateExclusivity validates the state of exclusivity in the cluster.
   * The validation does not depend on an existing Hub membership resource.
   *
   * @generated from rpc google.cloud.gkehub.v1beta1.GkeHubMembershipService.ValidateExclusivity
   */
  validateExclusivity: {
    methodKind: "unary";
    input: typeof ValidateExclusivityRequestSchema;
    output: typeof ValidateExclusivityResponseSchema;
  },
  /**
   * GenerateExclusivityManifest generates the manifests to update the
   * exclusivity artifacts in the cluster if needed.
   *
   * Exclusivity artifacts include the Membership custom resource definition
   * (CRD) and the singleton Membership custom resource (CR). Combined with
   * ValidateExclusivity, exclusivity artifacts guarantee that a Kubernetes
   * cluster is only registered to a single GKE Hub.
   *
   * The Membership CRD is versioned, and may require conversion when the GKE
   * Hub API server begins serving a newer version of the CRD and
   * corresponding CR. The response will be the converted CRD and CR if there
   * are any differences between the versions.
   *
   * @generated from rpc google.cloud.gkehub.v1beta1.GkeHubMembershipService.GenerateExclusivityManifest
   */
  generateExclusivityManifest: {
    methodKind: "unary";
    input: typeof GenerateExclusivityManifestRequestSchema;
    output: typeof GenerateExclusivityManifestResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_gkehub_v1beta1_membership, 0);

