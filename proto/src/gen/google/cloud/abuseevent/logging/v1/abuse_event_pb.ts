// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/abuseevent/logging/v1/abuse_event.proto (package google.cloud.abuseevent.logging.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_info } from "../../../../api/field_info_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/abuseevent/logging/v1/abuse_event.proto.
 */
export const file_google_cloud_abuseevent_logging_v1_abuse_event: GenFile = /*@__PURE__*/
  fileDesc("CjRnb29nbGUvY2xvdWQvYWJ1c2VldmVudC9sb2dnaW5nL3YxL2FidXNlX2V2ZW50LnByb3RvEiJnb29nbGUuY2xvdWQuYWJ1c2VldmVudC5sb2dnaW5nLnYxIrMHCgpBYnVzZUV2ZW50ElQKDmRldGVjdGlvbl90eXBlGAEgASgOMjwuZ29vZ2xlLmNsb3VkLmFidXNlZXZlbnQubG9nZ2luZy52MS5BYnVzZUV2ZW50LkRldGVjdGlvblR5cGUSDgoGcmVhc29uGAIgASgJEkkKBmFjdGlvbhgDIAEoDjI5Lmdvb2dsZS5jbG91ZC5hYnVzZWV2ZW50LmxvZ2dpbmcudjEuQWJ1c2VFdmVudC5BY3Rpb25UeXBlElQKE2NyeXB0b19taW5pbmdfZXZlbnQYBCABKAsyNS5nb29nbGUuY2xvdWQuYWJ1c2VldmVudC5sb2dnaW5nLnYxLkNyeXB0b01pbmluZ0V2ZW50SAASXAoXbGVha2VkX2NyZWRlbnRpYWxfZXZlbnQYBSABKAsyOS5nb29nbGUuY2xvdWQuYWJ1c2VldmVudC5sb2dnaW5nLnYxLkxlYWtlZENyZWRlbnRpYWxFdmVudEgAElgKFWhhcm1mdWxfY29udGVudF9ldmVudBgGIAEoCzI3Lmdvb2dsZS5jbG91ZC5hYnVzZWV2ZW50LmxvZ2dpbmcudjEuSGFybWZ1bENvbnRlbnRFdmVudEgAElUKE3JlaW5zdGF0ZW1lbnRfZXZlbnQYCCABKAsyNi5nb29nbGUuY2xvdWQuYWJ1c2VldmVudC5sb2dnaW5nLnYxLlJlaW5zdGF0ZW1lbnRFdmVudEgAEmAKGWRlY2lzaW9uX2VzY2FsYXRpb25fZXZlbnQYCSABKAsyOy5nb29nbGUuY2xvdWQuYWJ1c2VldmVudC5sb2dnaW5nLnYxLkRlY2lzaW9uRXNjYWxhdGlvbkV2ZW50SAASGAoQcmVtZWRpYXRpb25fbGluaxgHIAEoCSKDAQoNRGV0ZWN0aW9uVHlwZRIeChpERVRFQ1RJT05fVFlQRV9VTlNQRUNJRklFRBAAEhEKDUNSWVBUT19NSU5JTkcQARIWChJMRUFLRURfQ1JFREVOVElBTFMQAhIMCghQSElTSElORxADEgsKB01BTFdBUkUQBBIMCghOT19BQlVTRRAFIn8KCkFjdGlvblR5cGUSGwoXQUNUSU9OX1RZUEVfVU5TUEVDSUZJRUQQABIKCgZOT1RJRlkQARIWChJQUk9KRUNUX1NVU1BFTlNJT04QAhINCglSRUlOU1RBVEUQAxIICgRXQVJOEAQSFwoTUkVTT1VSQ0VfU1VTUEVOU0lPThAFQgwKCmV2ZW50X3R5cGUivwEKEUNyeXB0b01pbmluZ0V2ZW50EhMKC3ZtX3Jlc291cmNlGAEgAygJEj4KGmRldGVjdGVkX21pbmluZ19zdGFydF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI8ChhkZXRlY3RlZF9taW5pbmdfZW5kX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhcKBXZtX2lwGAQgAygJQgjijM/XCAIIBCL4AQoVTGVha2VkQ3JlZGVudGlhbEV2ZW50EmIKGnNlcnZpY2VfYWNjb3VudF9jcmVkZW50aWFsGAEgASgLMjwuZ29vZ2xlLmNsb3VkLmFidXNlZXZlbnQubG9nZ2luZy52MS5TZXJ2aWNlQWNjb3VudENyZWRlbnRpYWxIABJSChJhcGlfa2V5X2NyZWRlbnRpYWwYAiABKAsyNC5nb29nbGUuY2xvdWQuYWJ1c2VldmVudC5sb2dnaW5nLnYxLkFwaUtleUNyZWRlbnRpYWxIABIUCgxkZXRlY3RlZF91cmkYAyABKAlCEQoPY3JlZGVudGlhbF90eXBlIkMKGFNlcnZpY2VBY2NvdW50Q3JlZGVudGlhbBIXCg9zZXJ2aWNlX2FjY291bnQYASABKAkSDgoGa2V5X2lkGAIgASgJIiMKEEFwaUtleUNyZWRlbnRpYWwSDwoHYXBpX2tleRgBIAEoCSIiChNIYXJtZnVsQ29udGVudEV2ZW50EgsKA3VyaRgBIAMoCSIUChJSZWluc3RhdGVtZW50RXZlbnQiGQoXRGVjaXNpb25Fc2NhbGF0aW9uRXZlbnRCpQEKJmNvbS5nb29nbGUuY2xvdWQuYWJ1c2VldmVudC5sb2dnaW5nLnYxQg9BYnVzZUV2ZW50UHJvdG9QAVpAY2xvdWQuZ29vZ2xlLmNvbS9nby9hYnVzZWV2ZW50L2xvZ2dpbmcvYXBpdjEvbG9nZ2luZ3BiO2xvZ2dpbmdwYvgBAaoCIkdvb2dsZS5DbG91ZC5BYnVzZUV2ZW50LkxvZ2dpbmcuVjFiBnByb3RvMw", [file_google_api_field_info, file_google_protobuf_timestamp]);

/**
 * Logged event discussing an abuse finding on the monitored resource.
 *
 * @generated from message google.cloud.abuseevent.logging.v1.AbuseEvent
 */
export type AbuseEvent = Message<"google.cloud.abuseevent.logging.v1.AbuseEvent"> & {
  /**
   * REQUIRED Correlates to the abuse finding causing the notification.
   *
   * @generated from field: google.cloud.abuseevent.logging.v1.AbuseEvent.DetectionType detection_type = 1;
   */
  detectionType: AbuseEvent_DetectionType;

  /**
   * REQUIRED Explains the meaning of the detection_type.
   *
   * @generated from field: string reason = 2;
   */
  reason: string;

  /**
   * REQUIRED Correlates to the action taken on the monitored resource.
   *
   * @generated from field: google.cloud.abuseevent.logging.v1.AbuseEvent.ActionType action = 3;
   */
  action: AbuseEvent_ActionType;

  /**
   * REQUIRED Contains addiional metadata about the detected abuse event.
   *
   * @generated from oneof google.cloud.abuseevent.logging.v1.AbuseEvent.event_type
   */
  eventType: {
    /**
     * Information about a cryptocurrency mining event observed on the monitored
     * resource.
     *
     * @generated from field: google.cloud.abuseevent.logging.v1.CryptoMiningEvent crypto_mining_event = 4;
     */
    value: CryptoMiningEvent;
    case: "cryptoMiningEvent";
  } | {
    /**
     * Information about the leaked client credentials observed on the monitored
     * resource.
     *
     * @generated from field: google.cloud.abuseevent.logging.v1.LeakedCredentialEvent leaked_credential_event = 5;
     */
    value: LeakedCredentialEvent;
    case: "leakedCredentialEvent";
  } | {
    /**
     * Information about the phishing/malware URI(s) associated with the
     * monitored resource.
     *
     * @generated from field: google.cloud.abuseevent.logging.v1.HarmfulContentEvent harmful_content_event = 6;
     */
    value: HarmfulContentEvent;
    case: "harmfulContentEvent";
  } | {
    /**
     * Information about the reinstatement issued on the monitored resource.
     *
     * @generated from field: google.cloud.abuseevent.logging.v1.ReinstatementEvent reinstatement_event = 8;
     */
    value: ReinstatementEvent;
    case: "reinstatementEvent";
  } | {
    /**
     * Information about the escalation of enforcement action on the monitored
     * resource.
     *
     * @generated from field: google.cloud.abuseevent.logging.v1.DecisionEscalationEvent decision_escalation_event = 9;
     */
    value: DecisionEscalationEvent;
    case: "decisionEscalationEvent";
  } | { case: undefined; value?: undefined };

  /**
   * Contains the umbrella link for remediation after an abuse notification.
   *
   * @generated from field: string remediation_link = 7;
   */
  remediationLink: string;
};

/**
 * Describes the message google.cloud.abuseevent.logging.v1.AbuseEvent.
 * Use `create(AbuseEventSchema)` to create a new message.
 */
export const AbuseEventSchema: GenMessage<AbuseEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_abuseevent_logging_v1_abuse_event, 0);

/**
 * Indicates the type of abuse detected on the monitored resource.
 *
 * @generated from enum google.cloud.abuseevent.logging.v1.AbuseEvent.DetectionType
 */
export enum AbuseEvent_DetectionType {
  /**
   * Default/unspecified abuse detection type.
   *
   * @generated from enum value: DETECTION_TYPE_UNSPECIFIED = 0;
   */
  DETECTION_TYPE_UNSPECIFIED = 0,

  /**
   * The monitored resource is used to mine cryptocurrencies.
   *
   * @generated from enum value: CRYPTO_MINING = 1;
   */
  CRYPTO_MINING = 1,

  /**
   * The monitored resource's credentials have accidentally been leaked on the
   * internet.
   *
   * @generated from enum value: LEAKED_CREDENTIALS = 2;
   */
  LEAKED_CREDENTIALS = 2,

  /**
   * The monitored resource is used for phishing attacks.
   *
   * @generated from enum value: PHISHING = 3;
   */
  PHISHING = 3,

  /**
   * The monitored resource is associated with content that is infected or
   * infects users with malicious software.
   *
   * @generated from enum value: MALWARE = 4;
   */
  MALWARE = 4,

  /**
   * No abuse is detected on the monitored resource, but its abuse state may
   * have been updated.
   *
   * @generated from enum value: NO_ABUSE = 5;
   */
  NO_ABUSE = 5,
}

/**
 * Describes the enum google.cloud.abuseevent.logging.v1.AbuseEvent.DetectionType.
 */
export const AbuseEvent_DetectionTypeSchema: GenEnum<AbuseEvent_DetectionType> = /*@__PURE__*/
  enumDesc(file_google_cloud_abuseevent_logging_v1_abuse_event, 0, 0);

/**
 * Indicates any action taken on the monitored resource due to abuse
 * detection.
 *
 * @generated from enum google.cloud.abuseevent.logging.v1.AbuseEvent.ActionType
 */
export enum AbuseEvent_ActionType {
  /**
   * The monitored resource state is unspecified.
   *
   * @generated from enum value: ACTION_TYPE_UNSPECIFIED = 0;
   */
  ACTION_TYPE_UNSPECIFIED = 0,

  /**
   * The owner of the monitored resource needs to be notified about a finding.
   *
   * @generated from enum value: NOTIFY = 1;
   */
  NOTIFY = 1,

  /**
   * The associated cloud project has been suspended.
   *
   * @generated from enum value: PROJECT_SUSPENSION = 2;
   */
  PROJECT_SUSPENSION = 2,

  /**
   * The monitored resource has been reinstated.
   *
   * @generated from enum value: REINSTATE = 3;
   */
  REINSTATE = 3,

  /**
   * The owner of the monitored resource needs to be warned about abusive
   * behavior. This notification could lead to future enforcements if remedial
   * actions are not taken. This action should not be confused with NOTIFY.
   *
   * @generated from enum value: WARN = 4;
   */
  WARN = 4,

  /**
   * The resource (eg: VM) has been suspended.
   *
   * @generated from enum value: RESOURCE_SUSPENSION = 5;
   */
  RESOURCE_SUSPENSION = 5,
}

/**
 * Describes the enum google.cloud.abuseevent.logging.v1.AbuseEvent.ActionType.
 */
export const AbuseEvent_ActionTypeSchema: GenEnum<AbuseEvent_ActionType> = /*@__PURE__*/
  enumDesc(file_google_cloud_abuseevent_logging_v1_abuse_event, 0, 1);

/**
 * Information about a cryptocurrency mining event observed on the monitored
 * resource.
 *
 * @generated from message google.cloud.abuseevent.logging.v1.CryptoMiningEvent
 */
export type CryptoMiningEvent = Message<"google.cloud.abuseevent.logging.v1.CryptoMiningEvent"> & {
  /**
   * VM and zone in which cryptocurrency mining occurred.
   * Format: projects/{project}/zones/{zone}/instances/{instance}
   *
   * @generated from field: repeated string vm_resource = 1;
   */
  vmResource: string[];

  /**
   * Detected start time of the cryptocurrency mining.
   *
   * @generated from field: google.protobuf.Timestamp detected_mining_start_time = 2;
   */
  detectedMiningStartTime?: Timestamp;

  /**
   * Detected end time of the cryptocurrency mining.
   *
   * @generated from field: google.protobuf.Timestamp detected_mining_end_time = 3;
   */
  detectedMiningEndTime?: Timestamp;

  /**
   * The IP address(es) of the VM associated with the cryptocurrency mining.
   * This field may be empty if this information is not available.
   *
   * @generated from field: repeated string vm_ip = 4;
   */
  vmIp: string[];
};

/**
 * Describes the message google.cloud.abuseevent.logging.v1.CryptoMiningEvent.
 * Use `create(CryptoMiningEventSchema)` to create a new message.
 */
export const CryptoMiningEventSchema: GenMessage<CryptoMiningEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_abuseevent_logging_v1_abuse_event, 1);

/**
 * Information about the leaked client credentials observed on the monitored
 * resource.
 *
 * @generated from message google.cloud.abuseevent.logging.v1.LeakedCredentialEvent
 */
export type LeakedCredentialEvent = Message<"google.cloud.abuseevent.logging.v1.LeakedCredentialEvent"> & {
  /**
   * Indicates the type of credential leaked.
   *
   * @generated from oneof google.cloud.abuseevent.logging.v1.LeakedCredentialEvent.credential_type
   */
  credentialType: {
    /**
     * Information about leaked service accounts.
     *
     * @generated from field: google.cloud.abuseevent.logging.v1.ServiceAccountCredential service_account_credential = 1;
     */
    value: ServiceAccountCredential;
    case: "serviceAccountCredential";
  } | {
    /**
     * Information about leaked API keys.
     *
     * @generated from field: google.cloud.abuseevent.logging.v1.ApiKeyCredential api_key_credential = 2;
     */
    value: ApiKeyCredential;
    case: "apiKeyCredential";
  } | { case: undefined; value?: undefined };

  /**
   * URI where the client credentials were found.
   *
   * @generated from field: string detected_uri = 3;
   */
  detectedUri: string;
};

/**
 * Describes the message google.cloud.abuseevent.logging.v1.LeakedCredentialEvent.
 * Use `create(LeakedCredentialEventSchema)` to create a new message.
 */
export const LeakedCredentialEventSchema: GenMessage<LeakedCredentialEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_abuseevent_logging_v1_abuse_event, 2);

/**
 * Information about leaked service accounts.
 *
 * @generated from message google.cloud.abuseevent.logging.v1.ServiceAccountCredential
 */
export type ServiceAccountCredential = Message<"google.cloud.abuseevent.logging.v1.ServiceAccountCredential"> & {
  /**
   * Service account whose credentials were leaked.
   *
   * @generated from field: string service_account = 1;
   */
  serviceAccount: string;

  /**
   * Private Key ID for any leaked keys.
   *
   * @generated from field: string key_id = 2;
   */
  keyId: string;
};

/**
 * Describes the message google.cloud.abuseevent.logging.v1.ServiceAccountCredential.
 * Use `create(ServiceAccountCredentialSchema)` to create a new message.
 */
export const ServiceAccountCredentialSchema: GenMessage<ServiceAccountCredential> = /*@__PURE__*/
  messageDesc(file_google_cloud_abuseevent_logging_v1_abuse_event, 3);

/**
 * Information about leaked API keys.
 *
 * @generated from message google.cloud.abuseevent.logging.v1.ApiKeyCredential
 */
export type ApiKeyCredential = Message<"google.cloud.abuseevent.logging.v1.ApiKeyCredential"> & {
  /**
   * API key that was leaked.
   *
   * @generated from field: string api_key = 1;
   */
  apiKey: string;
};

/**
 * Describes the message google.cloud.abuseevent.logging.v1.ApiKeyCredential.
 * Use `create(ApiKeyCredentialSchema)` to create a new message.
 */
export const ApiKeyCredentialSchema: GenMessage<ApiKeyCredential> = /*@__PURE__*/
  messageDesc(file_google_cloud_abuseevent_logging_v1_abuse_event, 4);

/**
 * Information about the phishing/malware URIs associated with the monitored
 * resource.
 *
 * @generated from message google.cloud.abuseevent.logging.v1.HarmfulContentEvent
 */
export type HarmfulContentEvent = Message<"google.cloud.abuseevent.logging.v1.HarmfulContentEvent"> & {
  /**
   * URIs associated with the phishing/malware finding.
   *
   * @generated from field: repeated string uri = 1;
   */
  uri: string[];
};

/**
 * Describes the message google.cloud.abuseevent.logging.v1.HarmfulContentEvent.
 * Use `create(HarmfulContentEventSchema)` to create a new message.
 */
export const HarmfulContentEventSchema: GenMessage<HarmfulContentEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_abuseevent_logging_v1_abuse_event, 5);

/**
 * Information about the reinstatement issued on the monitored resource.
 *
 * @generated from message google.cloud.abuseevent.logging.v1.ReinstatementEvent
 */
export type ReinstatementEvent = Message<"google.cloud.abuseevent.logging.v1.ReinstatementEvent"> & {
};

/**
 * Describes the message google.cloud.abuseevent.logging.v1.ReinstatementEvent.
 * Use `create(ReinstatementEventSchema)` to create a new message.
 */
export const ReinstatementEventSchema: GenMessage<ReinstatementEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_abuseevent_logging_v1_abuse_event, 6);

/**
 * Information about the escalation of enforcement action on the monitored
 * resource. Eg: Used for repeat offenders.
 *
 * @generated from message google.cloud.abuseevent.logging.v1.DecisionEscalationEvent
 */
export type DecisionEscalationEvent = Message<"google.cloud.abuseevent.logging.v1.DecisionEscalationEvent"> & {
};

/**
 * Describes the message google.cloud.abuseevent.logging.v1.DecisionEscalationEvent.
 * Use `create(DecisionEscalationEventSchema)` to create a new message.
 */
export const DecisionEscalationEventSchema: GenMessage<DecisionEscalationEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_abuseevent_logging_v1_abuse_event, 7);

