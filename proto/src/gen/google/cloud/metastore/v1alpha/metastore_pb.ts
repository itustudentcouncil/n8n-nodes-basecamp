// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/metastore/v1alpha/metastore.proto (package google.cloud.metastore.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { DayOfWeek } from "../../../type/dayofweek_pb";
import { file_google_type_dayofweek } from "../../../type/dayofweek_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/metastore/v1alpha/metastore.proto.
 */
export const file_google_cloud_metastore_v1alpha_metastore: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers, file_google_type_dayofweek]);

/**
 * A managed metastore service that serves metadata queries.
 *
 * @generated from message google.cloud.metastore.v1alpha.Service
 */
export type Service = Message<"google.cloud.metastore.v1alpha.Service"> & {
  /**
   * Configuration properties specific to the underlying metastore service
   * technology (the software that serves metastore queries).
   *
   * @generated from oneof google.cloud.metastore.v1alpha.Service.metastore_config
   */
  metastoreConfig: {
    /**
     * Configuration information specific to running Hive metastore
     * software as the metastore service.
     *
     * @generated from field: google.cloud.metastore.v1alpha.HiveMetastoreConfig hive_metastore_config = 5;
     */
    value: HiveMetastoreConfig;
    case: "hiveMetastoreConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Immutable. The relative resource name of the metastore service, in the
   * following format:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time when the metastore service was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the metastore service was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * User-defined labels for the metastore service.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Immutable. The relative resource name of the VPC network on which the
   * instance can be accessed. It is specified in the following form:
   *
   * `projects/{project_number}/global/networks/{network_id}`.
   *
   * @generated from field: string network = 7;
   */
  network: string;

  /**
   * Output only. The URI of the endpoint used to access the metastore service.
   *
   * @generated from field: string endpoint_uri = 8;
   */
  endpointUri: string;

  /**
   * The TCP port at which the metastore service is reached. Default: 9083.
   *
   * @generated from field: int32 port = 9;
   */
  port: number;

  /**
   * Output only. The current state of the metastore service.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Service.State state = 10;
   */
  state: Service_State;

  /**
   * Output only. Additional information about the current state of the
   * metastore service, if available.
   *
   * @generated from field: string state_message = 11;
   */
  stateMessage: string;

  /**
   * Output only. A Cloud Storage URI (starting with `gs://`) that specifies
   * where artifacts related to the metastore service are stored.
   *
   * @generated from field: string artifact_gcs_uri = 12;
   */
  artifactGcsUri: string;

  /**
   * The tier of the service.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Service.Tier tier = 13;
   */
  tier: Service_Tier;

  /**
   * The setting that defines how metastore metadata should be integrated with
   * external services and systems.
   *
   * @generated from field: google.cloud.metastore.v1alpha.MetadataIntegration metadata_integration = 14;
   */
  metadataIntegration?: MetadataIntegration;

  /**
   * The one hour maintenance window of the metastore service. This specifies
   * when the service can be restarted for maintenance purposes in UTC time.
   * Maintenance window is not needed for services with the SPANNER
   * database type.
   *
   * @generated from field: google.cloud.metastore.v1alpha.MaintenanceWindow maintenance_window = 15;
   */
  maintenanceWindow?: MaintenanceWindow;

  /**
   * Output only. The globally unique resource identifier of the metastore
   * service.
   *
   * @generated from field: string uid = 16;
   */
  uid: string;

  /**
   * Output only. The metadata management activities of the metastore service.
   *
   * @generated from field: google.cloud.metastore.v1alpha.MetadataManagementActivity metadata_management_activity = 17;
   */
  metadataManagementActivity?: MetadataManagementActivity;

  /**
   * Immutable. The release channel of the service.
   * If unspecified, defaults to `STABLE`.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Service.ReleaseChannel release_channel = 19;
   */
  releaseChannel: Service_ReleaseChannel;

  /**
   * Immutable. Information used to configure the Dataproc Metastore service to
   * encrypt customer data at rest. Cannot be updated.
   *
   * @generated from field: google.cloud.metastore.v1alpha.EncryptionConfig encryption_config = 20;
   */
  encryptionConfig?: EncryptionConfig;

  /**
   * The configuration specifying the network settings for the
   * Dataproc Metastore service.
   *
   * @generated from field: google.cloud.metastore.v1alpha.NetworkConfig network_config = 21;
   */
  networkConfig?: NetworkConfig;

  /**
   * Immutable. The database type that the Metastore service stores its data.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Service.DatabaseType database_type = 22;
   */
  databaseType: Service_DatabaseType;

  /**
   * The configuration specifying telemetry settings for the Dataproc Metastore
   * service. If unspecified defaults to `JSON`.
   *
   * @generated from field: google.cloud.metastore.v1alpha.TelemetryConfig telemetry_config = 23;
   */
  telemetryConfig?: TelemetryConfig;

  /**
   * Scaling configuration of the metastore service.
   *
   * @generated from field: google.cloud.metastore.v1alpha.ScalingConfig scaling_config = 24;
   */
  scalingConfig?: ScalingConfig;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.Service.
 * Use `create(ServiceSchema)` to create a new message.
 */
export const ServiceSchema: GenMessage<Service> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 0);

/**
 * The current state of the metastore service.
 *
 * @generated from enum google.cloud.metastore.v1alpha.Service.State
 */
export enum Service_State {
  /**
   * The state of the metastore service is unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The metastore service is in the process of being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The metastore service is running and ready to serve queries.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The metastore service is entering suspension. Its query-serving
   * availability may cease unexpectedly.
   *
   * @generated from enum value: SUSPENDING = 3;
   */
  SUSPENDING = 3,

  /**
   * The metastore service is suspended and unable to serve queries.
   *
   * @generated from enum value: SUSPENDED = 4;
   */
  SUSPENDED = 4,

  /**
   * The metastore service is being updated. It remains usable but cannot
   * accept additional update requests or be deleted at this time.
   *
   * @generated from enum value: UPDATING = 5;
   */
  UPDATING = 5,

  /**
   * The metastore service is undergoing deletion. It cannot be used.
   *
   * @generated from enum value: DELETING = 6;
   */
  DELETING = 6,

  /**
   * The metastore service has encountered an error and cannot be used. The
   * metastore service should be deleted.
   *
   * @generated from enum value: ERROR = 7;
   */
  ERROR = 7,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.Service.State.
 */
export const Service_StateSchema: GenEnum<Service_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 0, 0);

/**
 * Available service tiers.
 *
 * @generated from enum google.cloud.metastore.v1alpha.Service.Tier
 */
export enum Service_Tier {
  /**
   * The tier is not set.
   *
   * @generated from enum value: TIER_UNSPECIFIED = 0;
   */
  TIER_UNSPECIFIED = 0,

  /**
   * The developer tier provides limited scalability and no fault tolerance.
   * Good for low-cost proof-of-concept.
   *
   * @generated from enum value: DEVELOPER = 1;
   */
  DEVELOPER = 1,

  /**
   * The enterprise tier provides multi-zone high availability, and sufficient
   * scalability for enterprise-level Dataproc Metastore workloads.
   *
   * @generated from enum value: ENTERPRISE = 3;
   */
  ENTERPRISE = 3,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.Service.Tier.
 */
export const Service_TierSchema: GenEnum<Service_Tier> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 0, 1);

/**
 * Release channels bundle features of varying levels of stability. Newer
 * features may be introduced initially into less stable release channels and
 * can be automatically promoted into more stable release channels.
 *
 * @generated from enum google.cloud.metastore.v1alpha.Service.ReleaseChannel
 */
export enum Service_ReleaseChannel {
  /**
   * Release channel is not specified.
   *
   * @generated from enum value: RELEASE_CHANNEL_UNSPECIFIED = 0;
   */
  RELEASE_CHANNEL_UNSPECIFIED = 0,

  /**
   * The `CANARY` release channel contains the newest features, which may be
   * unstable and subject to unresolved issues with no known workarounds.
   * Services using the `CANARY` release channel are not subject to any SLAs.
   *
   * @generated from enum value: CANARY = 1;
   */
  CANARY = 1,

  /**
   * The `STABLE` release channel contains features that are considered stable
   * and have been validated for production use.
   *
   * @generated from enum value: STABLE = 2;
   */
  STABLE = 2,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.Service.ReleaseChannel.
 */
export const Service_ReleaseChannelSchema: GenEnum<Service_ReleaseChannel> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 0, 2);

/**
 * The backend database type for the metastore service.
 *
 * @generated from enum google.cloud.metastore.v1alpha.Service.DatabaseType
 */
export enum Service_DatabaseType {
  /**
   * The DATABASE_TYPE is not set.
   *
   * @generated from enum value: DATABASE_TYPE_UNSPECIFIED = 0;
   */
  DATABASE_TYPE_UNSPECIFIED = 0,

  /**
   * MySQL is used to persist the metastore data.
   *
   * @generated from enum value: MYSQL = 1;
   */
  MYSQL = 1,

  /**
   * Spanner is used to persist the metastore data.
   *
   * @generated from enum value: SPANNER = 2;
   */
  SPANNER = 2,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.Service.DatabaseType.
 */
export const Service_DatabaseTypeSchema: GenEnum<Service_DatabaseType> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 0, 3);

/**
 * Specifies how metastore metadata should be integrated with external services.
 *
 * @generated from message google.cloud.metastore.v1alpha.MetadataIntegration
 */
export type MetadataIntegration = Message<"google.cloud.metastore.v1alpha.MetadataIntegration"> & {
  /**
   * The integration config for the Data Catalog service.
   *
   * @generated from field: google.cloud.metastore.v1alpha.DataCatalogConfig data_catalog_config = 1;
   */
  dataCatalogConfig?: DataCatalogConfig;

  /**
   * The integration config for the Dataplex service.
   *
   * @generated from field: google.cloud.metastore.v1alpha.DataplexConfig dataplex_config = 2;
   */
  dataplexConfig?: DataplexConfig;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.MetadataIntegration.
 * Use `create(MetadataIntegrationSchema)` to create a new message.
 */
export const MetadataIntegrationSchema: GenMessage<MetadataIntegration> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 1);

/**
 * Specifies how metastore metadata should be integrated with the Data Catalog
 * service.
 *
 * @generated from message google.cloud.metastore.v1alpha.DataCatalogConfig
 */
export type DataCatalogConfig = Message<"google.cloud.metastore.v1alpha.DataCatalogConfig"> & {
  /**
   * Defines whether the metastore metadata should be synced to Data Catalog.
   * The default value is to disable syncing metastore metadata to Data Catalog.
   *
   * @generated from field: bool enabled = 2;
   */
  enabled: boolean;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.DataCatalogConfig.
 * Use `create(DataCatalogConfigSchema)` to create a new message.
 */
export const DataCatalogConfigSchema: GenMessage<DataCatalogConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 2);

/**
 * Specifies how metastore metadata should be integrated with the Dataplex
 * service.
 *
 * @generated from message google.cloud.metastore.v1alpha.DataplexConfig
 */
export type DataplexConfig = Message<"google.cloud.metastore.v1alpha.DataplexConfig"> & {
  /**
   * A reference to the Lake resources that this metastore service is attached
   * to. The key is the lake resource name. Example:
   * `projects/{project_number}/locations/{location_id}/lakes/{lake_id}`.
   *
   * @generated from field: map<string, google.cloud.metastore.v1alpha.Lake> lake_resources = 1;
   */
  lakeResources: { [key: string]: Lake };
};

/**
 * Describes the message google.cloud.metastore.v1alpha.DataplexConfig.
 * Use `create(DataplexConfigSchema)` to create a new message.
 */
export const DataplexConfigSchema: GenMessage<DataplexConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 3);

/**
 * Represents a Lake resource
 *
 * @generated from message google.cloud.metastore.v1alpha.Lake
 */
export type Lake = Message<"google.cloud.metastore.v1alpha.Lake"> & {
  /**
   * The Lake resource name.
   * Example:
   * `projects/{project_number}/locations/{location_id}/lakes/{lake_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.Lake.
 * Use `create(LakeSchema)` to create a new message.
 */
export const LakeSchema: GenMessage<Lake> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 4);

/**
 * Maintenance window. This specifies when Dataproc Metastore
 * may perform system maintenance operation to the service.
 *
 * @generated from message google.cloud.metastore.v1alpha.MaintenanceWindow
 */
export type MaintenanceWindow = Message<"google.cloud.metastore.v1alpha.MaintenanceWindow"> & {
  /**
   * The hour of day (0-23) when the window starts.
   *
   * @generated from field: google.protobuf.Int32Value hour_of_day = 1;
   */
  hourOfDay?: number;

  /**
   * The day of week, when the window starts.
   *
   * @generated from field: google.type.DayOfWeek day_of_week = 2;
   */
  dayOfWeek: DayOfWeek;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.MaintenanceWindow.
 * Use `create(MaintenanceWindowSchema)` to create a new message.
 */
export const MaintenanceWindowSchema: GenMessage<MaintenanceWindow> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 5);

/**
 * Specifies configuration information specific to running Hive metastore
 * software as the metastore service.
 *
 * @generated from message google.cloud.metastore.v1alpha.HiveMetastoreConfig
 */
export type HiveMetastoreConfig = Message<"google.cloud.metastore.v1alpha.HiveMetastoreConfig"> & {
  /**
   * Immutable. The Hive metastore schema version.
   *
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * A mapping of Hive metastore configuration key-value pairs to apply to the
   * Hive metastore (configured in `hive-site.xml`). The mappings
   * override system defaults (some keys cannot be overridden). These
   * overrides are also applied to auxiliary versions and can be further
   * customized in the auxiliary version's `AuxiliaryVersionConfig`.
   *
   * @generated from field: map<string, string> config_overrides = 2;
   */
  configOverrides: { [key: string]: string };

  /**
   * Information used to configure the Hive metastore service as a service
   * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
   * method and specify this field's path
   * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
   * while omitting this field from the request's `service`.
   *
   * @generated from field: google.cloud.metastore.v1alpha.KerberosConfig kerberos_config = 3;
   */
  kerberosConfig?: KerberosConfig;

  /**
   * The protocol to use for the metastore service endpoint. If unspecified,
   * defaults to `THRIFT`.
   *
   * @generated from field: google.cloud.metastore.v1alpha.HiveMetastoreConfig.EndpointProtocol endpoint_protocol = 4;
   */
  endpointProtocol: HiveMetastoreConfig_EndpointProtocol;

  /**
   * A mapping of Hive metastore version to the auxiliary version
   * configuration. When specified, a secondary Hive metastore service is
   * created along with the primary service. All auxiliary versions must be less
   * than the service's primary version. The key is the auxiliary service name
   * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
   * means that the first character must be a lowercase letter, and all the
   * following characters must be hyphens, lowercase letters, or digits, except
   * the last character, which cannot be a hyphen.
   *
   * @generated from field: map<string, google.cloud.metastore.v1alpha.AuxiliaryVersionConfig> auxiliary_versions = 5;
   */
  auxiliaryVersions: { [key: string]: AuxiliaryVersionConfig };
};

/**
 * Describes the message google.cloud.metastore.v1alpha.HiveMetastoreConfig.
 * Use `create(HiveMetastoreConfigSchema)` to create a new message.
 */
export const HiveMetastoreConfigSchema: GenMessage<HiveMetastoreConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 6);

/**
 * Protocols available for serving the metastore service endpoint.
 *
 * @generated from enum google.cloud.metastore.v1alpha.HiveMetastoreConfig.EndpointProtocol
 */
export enum HiveMetastoreConfig_EndpointProtocol {
  /**
   * The protocol is not set.
   *
   * @generated from enum value: ENDPOINT_PROTOCOL_UNSPECIFIED = 0;
   */
  ENDPOINT_PROTOCOL_UNSPECIFIED = 0,

  /**
   * Use the legacy Apache Thrift protocol for the metastore service endpoint.
   *
   * @generated from enum value: THRIFT = 1;
   */
  THRIFT = 1,

  /**
   * Use the modernized gRPC protocol for the metastore service endpoint.
   *
   * @generated from enum value: GRPC = 2;
   */
  GRPC = 2,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.HiveMetastoreConfig.EndpointProtocol.
 */
export const HiveMetastoreConfig_EndpointProtocolSchema: GenEnum<HiveMetastoreConfig_EndpointProtocol> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 6, 0);

/**
 * Configuration information for a Kerberos principal.
 *
 * @generated from message google.cloud.metastore.v1alpha.KerberosConfig
 */
export type KerberosConfig = Message<"google.cloud.metastore.v1alpha.KerberosConfig"> & {
  /**
   * A Kerberos keytab file that can be used to authenticate a service principal
   * with a Kerberos Key Distribution Center (KDC).
   *
   * @generated from field: google.cloud.metastore.v1alpha.Secret keytab = 1;
   */
  keytab?: Secret;

  /**
   * A Kerberos principal that exists in the both the keytab the KDC
   * to authenticate as. A typical principal is of the form
   * `primary/instance@REALM`, but there is no exact format.
   *
   * @generated from field: string principal = 2;
   */
  principal: string;

  /**
   * A Cloud Storage URI that specifies the path to a
   * krb5.conf file. It is of the form `gs://{bucket_name}/path/to/krb5.conf`,
   * although the file does not need to be named krb5.conf explicitly.
   *
   * @generated from field: string krb5_config_gcs_uri = 3;
   */
  krb5ConfigGcsUri: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.KerberosConfig.
 * Use `create(KerberosConfigSchema)` to create a new message.
 */
export const KerberosConfigSchema: GenMessage<KerberosConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 7);

/**
 * A securely stored value.
 *
 * @generated from message google.cloud.metastore.v1alpha.Secret
 */
export type Secret = Message<"google.cloud.metastore.v1alpha.Secret"> & {
  /**
   * @generated from oneof google.cloud.metastore.v1alpha.Secret.value
   */
  value: {
    /**
     * The relative resource name of a Secret Manager secret version, in the
     * following form:
     *
     * `projects/{project_number}/secrets/{secret_id}/versions/{version_id}`.
     *
     * @generated from field: string cloud_secret = 2;
     */
    value: string;
    case: "cloudSecret";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.metastore.v1alpha.Secret.
 * Use `create(SecretSchema)` to create a new message.
 */
export const SecretSchema: GenMessage<Secret> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 8);

/**
 * Encryption settings for the service.
 *
 * @generated from message google.cloud.metastore.v1alpha.EncryptionConfig
 */
export type EncryptionConfig = Message<"google.cloud.metastore.v1alpha.EncryptionConfig"> & {
  /**
   * The fully qualified customer provided Cloud KMS key name to use for
   * customer data encryption, in the following form:
   *
   * `projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}`.
   *
   * @generated from field: string kms_key = 1;
   */
  kmsKey: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.EncryptionConfig.
 * Use `create(EncryptionConfigSchema)` to create a new message.
 */
export const EncryptionConfigSchema: GenMessage<EncryptionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 9);

/**
 * Configuration information for the auxiliary service versions.
 *
 * @generated from message google.cloud.metastore.v1alpha.AuxiliaryVersionConfig
 */
export type AuxiliaryVersionConfig = Message<"google.cloud.metastore.v1alpha.AuxiliaryVersionConfig"> & {
  /**
   * The Hive metastore version of the auxiliary service. It must be less
   * than the primary Hive metastore service's version.
   *
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * A mapping of Hive metastore configuration key-value pairs to apply to the
   * auxiliary Hive metastore (configured in `hive-site.xml`) in addition to
   * the primary version's overrides. If keys are present in both the auxiliary
   * version's overrides and the primary version's overrides, the value from
   * the auxiliary version's overrides takes precedence.
   *
   * @generated from field: map<string, string> config_overrides = 2;
   */
  configOverrides: { [key: string]: string };

  /**
   * Output only. The network configuration contains the endpoint URI(s) of the
   * auxiliary Hive metastore service.
   *
   * @generated from field: google.cloud.metastore.v1alpha.NetworkConfig network_config = 3;
   */
  networkConfig?: NetworkConfig;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.AuxiliaryVersionConfig.
 * Use `create(AuxiliaryVersionConfigSchema)` to create a new message.
 */
export const AuxiliaryVersionConfigSchema: GenMessage<AuxiliaryVersionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 10);

/**
 * Network configuration for the Dataproc Metastore service.
 *
 * Next available ID: 4
 *
 * @generated from message google.cloud.metastore.v1alpha.NetworkConfig
 */
export type NetworkConfig = Message<"google.cloud.metastore.v1alpha.NetworkConfig"> & {
  /**
   * Immutable. The consumer-side network configuration for the Dataproc
   * Metastore instance.
   *
   * @generated from field: repeated google.cloud.metastore.v1alpha.NetworkConfig.Consumer consumers = 1;
   */
  consumers: NetworkConfig_Consumer[];

  /**
   * Enables custom routes to be imported and exported for the Dataproc
   * Metastore service's peered VPC network.
   *
   * @generated from field: bool custom_routes_enabled = 2;
   */
  customRoutesEnabled: boolean;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.NetworkConfig.
 * Use `create(NetworkConfigSchema)` to create a new message.
 */
export const NetworkConfigSchema: GenMessage<NetworkConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 11);

/**
 * Contains information of the customer's network configurations.
 *
 * Next available ID: 5
 *
 * @generated from message google.cloud.metastore.v1alpha.NetworkConfig.Consumer
 */
export type NetworkConfig_Consumer = Message<"google.cloud.metastore.v1alpha.NetworkConfig.Consumer"> & {
  /**
   * @generated from oneof google.cloud.metastore.v1alpha.NetworkConfig.Consumer.vpc_resource
   */
  vpcResource: {
    /**
     * Immutable. The subnetwork of the customer project from which an IP
     * address is reserved and used as the Dataproc Metastore service's
     * endpoint. It is accessible to hosts in the subnet and to all
     * hosts in a subnet in the same region and same network. There must
     * be at least one IP address available in the subnet's primary range. The
     * subnet is specified in the following form:
     *
     * `projects/{project_number}/regions/{region_id}/subnetworks/{subnetwork_id}`
     *
     * @generated from field: string subnetwork = 1;
     */
    value: string;
    case: "subnetwork";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The URI of the endpoint used to access the metastore
   * service.
   *
   * @generated from field: string endpoint_uri = 3;
   */
  endpointUri: string;

  /**
   * Output only. The location of the endpoint URI. Format:
   * `projects/{project}/locations/{location}`.
   *
   * @generated from field: string endpoint_location = 4;
   */
  endpointLocation: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.NetworkConfig.Consumer.
 * Use `create(NetworkConfig_ConsumerSchema)` to create a new message.
 */
export const NetworkConfig_ConsumerSchema: GenMessage<NetworkConfig_Consumer> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 11, 0);

/**
 * Telemetry Configuration for the Dataproc Metastore service.
 *
 * @generated from message google.cloud.metastore.v1alpha.TelemetryConfig
 */
export type TelemetryConfig = Message<"google.cloud.metastore.v1alpha.TelemetryConfig"> & {
  /**
   * The output format of the Dataproc Metastore service's logs.
   *
   * @generated from field: google.cloud.metastore.v1alpha.TelemetryConfig.LogFormat log_format = 1;
   */
  logFormat: TelemetryConfig_LogFormat;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.TelemetryConfig.
 * Use `create(TelemetryConfigSchema)` to create a new message.
 */
export const TelemetryConfigSchema: GenMessage<TelemetryConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 12);

/**
 * @generated from enum google.cloud.metastore.v1alpha.TelemetryConfig.LogFormat
 */
export enum TelemetryConfig_LogFormat {
  /**
   * The LOG_FORMAT is not set.
   *
   * @generated from enum value: LOG_FORMAT_UNSPECIFIED = 0;
   */
  LOG_FORMAT_UNSPECIFIED = 0,

  /**
   * Logging output uses the legacy `textPayload` format.
   *
   * @generated from enum value: LEGACY = 1;
   */
  LEGACY = 1,

  /**
   * Logging output uses the `jsonPayload` format.
   *
   * @generated from enum value: JSON = 2;
   */
  JSON = 2,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.TelemetryConfig.LogFormat.
 */
export const TelemetryConfig_LogFormatSchema: GenEnum<TelemetryConfig_LogFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 12, 0);

/**
 * The metadata management activities of the metastore service.
 *
 * @generated from message google.cloud.metastore.v1alpha.MetadataManagementActivity
 */
export type MetadataManagementActivity = Message<"google.cloud.metastore.v1alpha.MetadataManagementActivity"> & {
  /**
   * Output only. The latest metadata exports of the metastore service.
   *
   * @generated from field: repeated google.cloud.metastore.v1alpha.MetadataExport metadata_exports = 1;
   */
  metadataExports: MetadataExport[];

  /**
   * Output only. The latest restores of the metastore service.
   *
   * @generated from field: repeated google.cloud.metastore.v1alpha.Restore restores = 2;
   */
  restores: Restore[];
};

/**
 * Describes the message google.cloud.metastore.v1alpha.MetadataManagementActivity.
 * Use `create(MetadataManagementActivitySchema)` to create a new message.
 */
export const MetadataManagementActivitySchema: GenMessage<MetadataManagementActivity> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 13);

/**
 * A metastore resource that imports metadata.
 *
 * @generated from message google.cloud.metastore.v1alpha.MetadataImport
 */
export type MetadataImport = Message<"google.cloud.metastore.v1alpha.MetadataImport"> & {
  /**
   * The metadata to be imported.
   *
   * @generated from oneof google.cloud.metastore.v1alpha.MetadataImport.metadata
   */
  metadata: {
    /**
     * Immutable. A database dump from a pre-existing metastore's database.
     *
     * @generated from field: google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump database_dump = 6;
     */
    value: MetadataImport_DatabaseDump;
    case: "databaseDump";
  } | { case: undefined; value?: undefined };

  /**
   * Immutable. The relative resource name of the metadata import, of the form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The description of the metadata import.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Output only. The time when the metadata import was started.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the metadata import was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The time when the metadata import finished.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 7;
   */
  endTime?: Timestamp;

  /**
   * Output only. The current state of the metadata import.
   *
   * @generated from field: google.cloud.metastore.v1alpha.MetadataImport.State state = 5;
   */
  state: MetadataImport_State;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.MetadataImport.
 * Use `create(MetadataImportSchema)` to create a new message.
 */
export const MetadataImportSchema: GenMessage<MetadataImport> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 14);

/**
 * A specification of the location of and metadata about a database dump from
 * a relational database management system.
 *
 * @generated from message google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump
 */
export type MetadataImport_DatabaseDump = Message<"google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump"> & {
  /**
   * The type of the database.
   *
   * @generated from field: google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.DatabaseType database_type = 1 [deprecated = true];
   * @deprecated
   */
  databaseType: MetadataImport_DatabaseDump_DatabaseType;

  /**
   * A Cloud Storage object or folder URI that specifies the source from which
   * to import metadata. It must begin with `gs://`.
   *
   * @generated from field: string gcs_uri = 2;
   */
  gcsUri: string;

  /**
   * The name of the source database.
   *
   * @generated from field: string source_database = 3 [deprecated = true];
   * @deprecated
   */
  sourceDatabase: string;

  /**
   * Optional. The type of the database dump. If unspecified, defaults to
   * `MYSQL`.
   *
   * @generated from field: google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type type = 4;
   */
  type: DatabaseDumpSpec_Type;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.
 * Use `create(MetadataImport_DatabaseDumpSchema)` to create a new message.
 */
export const MetadataImport_DatabaseDumpSchema: GenMessage<MetadataImport_DatabaseDump> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 14, 0);

/**
 * The type of the database.
 *
 * @generated from enum google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.DatabaseType
 */
export enum MetadataImport_DatabaseDump_DatabaseType {
  /**
   * The type of the source database is unknown.
   *
   * @generated from enum value: DATABASE_TYPE_UNSPECIFIED = 0;
   */
  DATABASE_TYPE_UNSPECIFIED = 0,

  /**
   * The type of the source database is MySQL.
   *
   * @generated from enum value: MYSQL = 1;
   */
  MYSQL = 1,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.MetadataImport.DatabaseDump.DatabaseType.
 */
export const MetadataImport_DatabaseDump_DatabaseTypeSchema: GenEnum<MetadataImport_DatabaseDump_DatabaseType> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 14, 0, 0);

/**
 * The current state of the metadata import.
 *
 * @generated from enum google.cloud.metastore.v1alpha.MetadataImport.State
 */
export enum MetadataImport_State {
  /**
   * The state of the metadata import is unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The metadata import is running.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The metadata import completed successfully.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The metadata import is being updated.
   *
   * @generated from enum value: UPDATING = 3;
   */
  UPDATING = 3,

  /**
   * The metadata import failed, and attempted metadata changes were rolled
   * back.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.MetadataImport.State.
 */
export const MetadataImport_StateSchema: GenEnum<MetadataImport_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 14, 0);

/**
 * The details of a metadata export operation.
 *
 * @generated from message google.cloud.metastore.v1alpha.MetadataExport
 */
export type MetadataExport = Message<"google.cloud.metastore.v1alpha.MetadataExport"> & {
  /**
   * @generated from oneof google.cloud.metastore.v1alpha.MetadataExport.destination
   */
  destination: {
    /**
     * Output only. A Cloud Storage URI of a folder that metadata are exported
     * to, in the form of
     * `gs://<bucket_name>/<path_inside_bucket>/<export_folder>`, where
     * `<export_folder>` is automatically generated.
     *
     * @generated from field: string destination_gcs_uri = 4;
     */
    value: string;
    case: "destinationGcsUri";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The time when the export started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * Output only. The time when the export ended.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. The current state of the export.
   *
   * @generated from field: google.cloud.metastore.v1alpha.MetadataExport.State state = 3;
   */
  state: MetadataExport_State;

  /**
   * Output only. The type of the database dump.
   *
   * @generated from field: google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type database_dump_type = 5;
   */
  databaseDumpType: DatabaseDumpSpec_Type;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.MetadataExport.
 * Use `create(MetadataExportSchema)` to create a new message.
 */
export const MetadataExportSchema: GenMessage<MetadataExport> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 15);

/**
 * The current state of the metadata export.
 *
 * @generated from enum google.cloud.metastore.v1alpha.MetadataExport.State
 */
export enum MetadataExport_State {
  /**
   * The state of the metadata export is unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The metadata export is running.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The metadata export completed successfully.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The metadata export failed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * The metadata export is cancelled.
   *
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.MetadataExport.State.
 */
export const MetadataExport_StateSchema: GenEnum<MetadataExport_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 15, 0);

/**
 * The details of a backup resource.
 *
 * @generated from message google.cloud.metastore.v1alpha.Backup
 */
export type Backup = Message<"google.cloud.metastore.v1alpha.Backup"> & {
  /**
   * Immutable. The relative resource name of the backup, in the following form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time when the backup was started.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the backup finished creating.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  /**
   * Output only. The current state of the backup.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Backup.State state = 4;
   */
  state: Backup_State;

  /**
   * Output only. The revision of the service at the time of backup.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Service service_revision = 5;
   */
  serviceRevision?: Service;

  /**
   * The description of the backup.
   *
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * Output only. Services that are restoring from the backup.
   *
   * @generated from field: repeated string restoring_services = 7;
   */
  restoringServices: string[];
};

/**
 * Describes the message google.cloud.metastore.v1alpha.Backup.
 * Use `create(BackupSchema)` to create a new message.
 */
export const BackupSchema: GenMessage<Backup> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 16);

/**
 * The current state of the backup.
 *
 * @generated from enum google.cloud.metastore.v1alpha.Backup.State
 */
export enum Backup_State {
  /**
   * The state of the backup is unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The backup is being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The backup is being deleted.
   *
   * @generated from enum value: DELETING = 2;
   */
  DELETING = 2,

  /**
   * The backup is active and ready to use.
   *
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * The backup failed.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * The backup is being restored.
   *
   * @generated from enum value: RESTORING = 5;
   */
  RESTORING = 5,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.Backup.State.
 */
export const Backup_StateSchema: GenEnum<Backup_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 16, 0);

/**
 * The details of a metadata restore operation.
 *
 * @generated from message google.cloud.metastore.v1alpha.Restore
 */
export type Restore = Message<"google.cloud.metastore.v1alpha.Restore"> & {
  /**
   * Output only. The time when the restore started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * Output only. The time when the restore ended.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. The current state of the restore.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Restore.State state = 3;
   */
  state: Restore_State;

  /**
   * Output only. The relative resource name of the metastore service backup to
   * restore from, in the following form:
   *
   * `projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}`.
   *
   * @generated from field: string backup = 4;
   */
  backup: string;

  /**
   * Output only. The type of restore.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Restore.RestoreType type = 5;
   */
  type: Restore_RestoreType;

  /**
   * Output only. The restore details containing the revision of the service to
   * be restored to, in format of JSON.
   *
   * @generated from field: string details = 6;
   */
  details: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.Restore.
 * Use `create(RestoreSchema)` to create a new message.
 */
export const RestoreSchema: GenMessage<Restore> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 17);

/**
 * The current state of the restore.
 *
 * @generated from enum google.cloud.metastore.v1alpha.Restore.State
 */
export enum Restore_State {
  /**
   * The state of the metadata restore is unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The metadata restore is running.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The metadata restore completed successfully.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The metadata restore failed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * The metadata restore is cancelled.
   *
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.Restore.State.
 */
export const Restore_StateSchema: GenEnum<Restore_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 17, 0);

/**
 * The type of restore. If unspecified, defaults to `METADATA_ONLY`.
 *
 * @generated from enum google.cloud.metastore.v1alpha.Restore.RestoreType
 */
export enum Restore_RestoreType {
  /**
   * The restore type is unknown.
   *
   * @generated from enum value: RESTORE_TYPE_UNSPECIFIED = 0;
   */
  RESTORE_TYPE_UNSPECIFIED = 0,

  /**
   * The service's metadata and configuration are restored.
   *
   * @generated from enum value: FULL = 1;
   */
  FULL = 1,

  /**
   * Only the service's metadata is restored.
   *
   * @generated from enum value: METADATA_ONLY = 2;
   */
  METADATA_ONLY = 2,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.Restore.RestoreType.
 */
export const Restore_RestoreTypeSchema: GenEnum<Restore_RestoreType> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 17, 1);

/**
 * Represents the scaling configuration of a metastore service.
 *
 * @generated from message google.cloud.metastore.v1alpha.ScalingConfig
 */
export type ScalingConfig = Message<"google.cloud.metastore.v1alpha.ScalingConfig"> & {
  /**
   * Represents either a predetermined instance size or a numeric
   * scaling factor.
   *
   * @generated from oneof google.cloud.metastore.v1alpha.ScalingConfig.scaling_model
   */
  scalingModel: {
    /**
     * An enum of readable instance sizes, with each instance size mapping to a
     * float value (e.g. InstanceSize.EXTRA_SMALL = scaling_factor(0.1))
     *
     * @generated from field: google.cloud.metastore.v1alpha.ScalingConfig.InstanceSize instance_size = 1;
     */
    value: ScalingConfig_InstanceSize;
    case: "instanceSize";
  } | {
    /**
     * Scaling factor, increments of 0.1 for values less than 1.0, and
     * increments of 1.0 for values greater than 1.0.
     *
     * @generated from field: float scaling_factor = 2;
     */
    value: number;
    case: "scalingFactor";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.metastore.v1alpha.ScalingConfig.
 * Use `create(ScalingConfigSchema)` to create a new message.
 */
export const ScalingConfigSchema: GenMessage<ScalingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 18);

/**
 * Metastore instance sizes.
 *
 * @generated from enum google.cloud.metastore.v1alpha.ScalingConfig.InstanceSize
 */
export enum ScalingConfig_InstanceSize {
  /**
   * Unspecified instance size
   *
   * @generated from enum value: INSTANCE_SIZE_UNSPECIFIED = 0;
   */
  INSTANCE_SIZE_UNSPECIFIED = 0,

  /**
   * Extra small instance size, maps to a scaling factor of 0.1.
   *
   * @generated from enum value: EXTRA_SMALL = 1;
   */
  EXTRA_SMALL = 1,

  /**
   * Small instance size, maps to a scaling factor of 0.5.
   *
   * @generated from enum value: SMALL = 2;
   */
  SMALL = 2,

  /**
   * Medium instance size, maps to a scaling factor of 1.0.
   *
   * @generated from enum value: MEDIUM = 3;
   */
  MEDIUM = 3,

  /**
   * Large instance size, maps to a scaling factor of 3.0.
   *
   * @generated from enum value: LARGE = 4;
   */
  LARGE = 4,

  /**
   * Extra large instance size, maps to a scaling factor of 6.0.
   *
   * @generated from enum value: EXTRA_LARGE = 5;
   */
  EXTRA_LARGE = 5,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.ScalingConfig.InstanceSize.
 */
export const ScalingConfig_InstanceSizeSchema: GenEnum<ScalingConfig_InstanceSize> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 18, 0);

/**
 * Request message for
 * [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices].
 *
 * @generated from message google.cloud.metastore.v1alpha.ListServicesRequest
 */
export type ListServicesRequest = Message<"google.cloud.metastore.v1alpha.ListServicesRequest"> & {
  /**
   * Required. The relative resource name of the location of metastore services
   * to list, in the following form:
   *
   * `projects/{project_number}/locations/{location_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of services to return. The response may
   * contain less than the maximum number. If unspecified, no more than 500
   * services are returned. The maximum value is 1000; values above 1000 are
   * changed to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous
   * [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices]
   * call. Provide this token to retrieve the subsequent page.
   *
   * To retrieve the first page, supply an empty page token.
   *
   * When paginating, other parameters provided to
   * [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter to apply to list results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Specify the ordering of results as described in [Sorting
   * Order](https://cloud.google.com/apis/design/design_patterns#sorting_order).
   * If not specified, the results will be sorted in the default order.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.ListServicesRequest.
 * Use `create(ListServicesRequestSchema)` to create a new message.
 */
export const ListServicesRequestSchema: GenMessage<ListServicesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 19);

/**
 * Response message for
 * [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices].
 *
 * @generated from message google.cloud.metastore.v1alpha.ListServicesResponse
 */
export type ListServicesResponse = Message<"google.cloud.metastore.v1alpha.ListServicesResponse"> & {
  /**
   * The services in the specified location.
   *
   * @generated from field: repeated google.cloud.metastore.v1alpha.Service services = 1;
   */
  services: Service[];

  /**
   * A token that can be sent as `page_token` to retrieve the next page. If this
   * field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.metastore.v1alpha.ListServicesResponse.
 * Use `create(ListServicesResponseSchema)` to create a new message.
 */
export const ListServicesResponseSchema: GenMessage<ListServicesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 20);

/**
 * Request message for
 * [DataprocMetastore.GetService][google.cloud.metastore.v1alpha.DataprocMetastore.GetService].
 *
 * @generated from message google.cloud.metastore.v1alpha.GetServiceRequest
 */
export type GetServiceRequest = Message<"google.cloud.metastore.v1alpha.GetServiceRequest"> & {
  /**
   * Required. The relative resource name of the metastore service to retrieve,
   * in the following form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.GetServiceRequest.
 * Use `create(GetServiceRequestSchema)` to create a new message.
 */
export const GetServiceRequestSchema: GenMessage<GetServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 21);

/**
 * Request message for
 * [DataprocMetastore.CreateService][google.cloud.metastore.v1alpha.DataprocMetastore.CreateService].
 *
 * @generated from message google.cloud.metastore.v1alpha.CreateServiceRequest
 */
export type CreateServiceRequest = Message<"google.cloud.metastore.v1alpha.CreateServiceRequest"> & {
  /**
   * Required. The relative resource name of the location in which to create a
   * metastore service, in the following form:
   *
   * `projects/{project_number}/locations/{location_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID of the metastore service, which is used as the final
   * component of the metastore service's name.
   *
   * This value must be between 2 and 63 characters long inclusive, begin with a
   * letter, end with a letter or number, and consist of alpha-numeric
   * ASCII characters or hyphens.
   *
   * @generated from field: string service_id = 2;
   */
  serviceId: string;

  /**
   * Required. The Metastore service to create. The `name` field is
   * ignored. The ID of the created metastore service must be provided in
   * the request's `service_id` field.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Service service = 3;
   */
  service?: Service;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.CreateServiceRequest.
 * Use `create(CreateServiceRequestSchema)` to create a new message.
 */
export const CreateServiceRequestSchema: GenMessage<CreateServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 22);

/**
 * Request message for
 * [DataprocMetastore.UpdateService][google.cloud.metastore.v1alpha.DataprocMetastore.UpdateService].
 *
 * @generated from message google.cloud.metastore.v1alpha.UpdateServiceRequest
 */
export type UpdateServiceRequest = Message<"google.cloud.metastore.v1alpha.UpdateServiceRequest"> & {
  /**
   * Required. A field mask used to specify the fields to be overwritten in the
   * metastore service resource by the update.
   * Fields specified in the `update_mask` are relative to the resource (not
   * to the full request). A field is overwritten if it is in the mask.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The metastore service to update. The server only merges fields
   * in the service if they are specified in `update_mask`.
   *
   * The metastore service's `name` field is used to identify the metastore
   * service to be updated.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Service service = 2;
   */
  service?: Service;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.UpdateServiceRequest.
 * Use `create(UpdateServiceRequestSchema)` to create a new message.
 */
export const UpdateServiceRequestSchema: GenMessage<UpdateServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 23);

/**
 * Request message for
 * [DataprocMetastore.DeleteService][google.cloud.metastore.v1alpha.DataprocMetastore.DeleteService].
 *
 * @generated from message google.cloud.metastore.v1alpha.DeleteServiceRequest
 */
export type DeleteServiceRequest = Message<"google.cloud.metastore.v1alpha.DeleteServiceRequest"> & {
  /**
   * Required. The relative resource name of the metastore service to delete, in
   * the following form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.DeleteServiceRequest.
 * Use `create(DeleteServiceRequestSchema)` to create a new message.
 */
export const DeleteServiceRequestSchema: GenMessage<DeleteServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 24);

/**
 * Request message for
 * [DataprocMetastore.ListMetadataImports][google.cloud.metastore.v1alpha.DataprocMetastore.ListMetadataImports].
 *
 * @generated from message google.cloud.metastore.v1alpha.ListMetadataImportsRequest
 */
export type ListMetadataImportsRequest = Message<"google.cloud.metastore.v1alpha.ListMetadataImportsRequest"> & {
  /**
   * Required. The relative resource name of the service whose metadata imports
   * to list, in the following form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of imports to return. The response may contain
   * less than the maximum number. If unspecified, no more than 500 imports are
   * returned. The maximum value is 1000; values above 1000 are changed to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous
   * [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices]
   * call. Provide this token to retrieve the subsequent page.
   *
   * To retrieve the first page, supply an empty page token.
   *
   * When paginating, other parameters provided to
   * [DataprocMetastore.ListServices][google.cloud.metastore.v1alpha.DataprocMetastore.ListServices]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter to apply to list results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Specify the ordering of results as described in [Sorting
   * Order](https://cloud.google.com/apis/design/design_patterns#sorting_order).
   * If not specified, the results will be sorted in the default order.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.ListMetadataImportsRequest.
 * Use `create(ListMetadataImportsRequestSchema)` to create a new message.
 */
export const ListMetadataImportsRequestSchema: GenMessage<ListMetadataImportsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 25);

/**
 * Response message for
 * [DataprocMetastore.ListMetadataImports][google.cloud.metastore.v1alpha.DataprocMetastore.ListMetadataImports].
 *
 * @generated from message google.cloud.metastore.v1alpha.ListMetadataImportsResponse
 */
export type ListMetadataImportsResponse = Message<"google.cloud.metastore.v1alpha.ListMetadataImportsResponse"> & {
  /**
   * The imports in the specified service.
   *
   * @generated from field: repeated google.cloud.metastore.v1alpha.MetadataImport metadata_imports = 1;
   */
  metadataImports: MetadataImport[];

  /**
   * A token that can be sent as `page_token` to retrieve the next page. If this
   * field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.metastore.v1alpha.ListMetadataImportsResponse.
 * Use `create(ListMetadataImportsResponseSchema)` to create a new message.
 */
export const ListMetadataImportsResponseSchema: GenMessage<ListMetadataImportsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 26);

/**
 * Request message for
 * [DataprocMetastore.GetMetadataImport][google.cloud.metastore.v1alpha.DataprocMetastore.GetMetadataImport].
 *
 * @generated from message google.cloud.metastore.v1alpha.GetMetadataImportRequest
 */
export type GetMetadataImportRequest = Message<"google.cloud.metastore.v1alpha.GetMetadataImportRequest"> & {
  /**
   * Required. The relative resource name of the metadata import to retrieve, in
   * the following form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{import_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.GetMetadataImportRequest.
 * Use `create(GetMetadataImportRequestSchema)` to create a new message.
 */
export const GetMetadataImportRequestSchema: GenMessage<GetMetadataImportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 27);

/**
 * Request message for
 * [DataprocMetastore.CreateMetadataImport][google.cloud.metastore.v1alpha.DataprocMetastore.CreateMetadataImport].
 *
 * @generated from message google.cloud.metastore.v1alpha.CreateMetadataImportRequest
 */
export type CreateMetadataImportRequest = Message<"google.cloud.metastore.v1alpha.CreateMetadataImportRequest"> & {
  /**
   * Required. The relative resource name of the service in which to create a
   * metastore import, in the following form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID of the metadata import, which is used as the final
   * component of the metadata import's name.
   *
   * This value must be between 1 and 64 characters long, begin with a letter,
   * end with a letter or number, and consist of alpha-numeric ASCII characters
   * or hyphens.
   *
   * @generated from field: string metadata_import_id = 2;
   */
  metadataImportId: string;

  /**
   * Required. The metadata import to create. The `name` field is ignored. The
   * ID of the created metadata import must be provided in the request's
   * `metadata_import_id` field.
   *
   * @generated from field: google.cloud.metastore.v1alpha.MetadataImport metadata_import = 3;
   */
  metadataImport?: MetadataImport;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.CreateMetadataImportRequest.
 * Use `create(CreateMetadataImportRequestSchema)` to create a new message.
 */
export const CreateMetadataImportRequestSchema: GenMessage<CreateMetadataImportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 28);

/**
 * Request message for
 * [DataprocMetastore.UpdateMetadataImport][google.cloud.metastore.v1alpha.DataprocMetastore.UpdateMetadataImport].
 *
 * @generated from message google.cloud.metastore.v1alpha.UpdateMetadataImportRequest
 */
export type UpdateMetadataImportRequest = Message<"google.cloud.metastore.v1alpha.UpdateMetadataImportRequest"> & {
  /**
   * Required. A field mask used to specify the fields to be overwritten in the
   * metadata import resource by the update.
   * Fields specified in the `update_mask` are relative to the resource (not
   * to the full request). A field is overwritten if it is in the mask.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The metadata import to update. The server only merges fields
   * in the import if they are specified in `update_mask`.
   *
   * The metadata import's `name` field is used to identify the metastore
   * import to be updated.
   *
   * @generated from field: google.cloud.metastore.v1alpha.MetadataImport metadata_import = 2;
   */
  metadataImport?: MetadataImport;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.UpdateMetadataImportRequest.
 * Use `create(UpdateMetadataImportRequestSchema)` to create a new message.
 */
export const UpdateMetadataImportRequestSchema: GenMessage<UpdateMetadataImportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 29);

/**
 * Request message for
 * [DataprocMetastore.ListBackups][google.cloud.metastore.v1alpha.DataprocMetastore.ListBackups].
 *
 * @generated from message google.cloud.metastore.v1alpha.ListBackupsRequest
 */
export type ListBackupsRequest = Message<"google.cloud.metastore.v1alpha.ListBackupsRequest"> & {
  /**
   * Required. The relative resource name of the service whose backups to
   * list, in the following form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}/backups`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of backups to return. The response may contain
   * less than the maximum number. If unspecified, no more than 500 backups are
   * returned. The maximum value is 1000; values above 1000 are changed to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous
   * [DataprocMetastore.ListBackups][google.cloud.metastore.v1alpha.DataprocMetastore.ListBackups]
   * call. Provide this token to retrieve the subsequent page.
   *
   * To retrieve the first page, supply an empty page token.
   *
   * When paginating, other parameters provided to
   * [DataprocMetastore.ListBackups][google.cloud.metastore.v1alpha.DataprocMetastore.ListBackups]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter to apply to list results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Specify the ordering of results as described in [Sorting
   * Order](https://cloud.google.com/apis/design/design_patterns#sorting_order).
   * If not specified, the results will be sorted in the default order.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.ListBackupsRequest.
 * Use `create(ListBackupsRequestSchema)` to create a new message.
 */
export const ListBackupsRequestSchema: GenMessage<ListBackupsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 30);

/**
 * Response message for
 * [DataprocMetastore.ListBackups][google.cloud.metastore.v1alpha.DataprocMetastore.ListBackups].
 *
 * @generated from message google.cloud.metastore.v1alpha.ListBackupsResponse
 */
export type ListBackupsResponse = Message<"google.cloud.metastore.v1alpha.ListBackupsResponse"> & {
  /**
   * The backups of the specified service.
   *
   * @generated from field: repeated google.cloud.metastore.v1alpha.Backup backups = 1;
   */
  backups: Backup[];

  /**
   * A token that can be sent as `page_token` to retrieve the next page. If this
   * field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.metastore.v1alpha.ListBackupsResponse.
 * Use `create(ListBackupsResponseSchema)` to create a new message.
 */
export const ListBackupsResponseSchema: GenMessage<ListBackupsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 31);

/**
 * Request message for
 * [DataprocMetastore.GetBackup][google.cloud.metastore.v1alpha.DataprocMetastore.GetBackup].
 *
 * @generated from message google.cloud.metastore.v1alpha.GetBackupRequest
 */
export type GetBackupRequest = Message<"google.cloud.metastore.v1alpha.GetBackupRequest"> & {
  /**
   * Required. The relative resource name of the backup to retrieve, in the
   * following form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.GetBackupRequest.
 * Use `create(GetBackupRequestSchema)` to create a new message.
 */
export const GetBackupRequestSchema: GenMessage<GetBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 32);

/**
 * Request message for
 * [DataprocMetastore.CreateBackup][google.cloud.metastore.v1alpha.DataprocMetastore.CreateBackup].
 *
 * @generated from message google.cloud.metastore.v1alpha.CreateBackupRequest
 */
export type CreateBackupRequest = Message<"google.cloud.metastore.v1alpha.CreateBackupRequest"> & {
  /**
   * Required. The relative resource name of the service in which to create a
   * backup of the following form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID of the backup, which is used as the final component of the
   * backup's name.
   *
   * This value must be between 1 and 64 characters long, begin with a letter,
   * end with a letter or number, and consist of alpha-numeric ASCII characters
   * or hyphens.
   *
   * @generated from field: string backup_id = 2;
   */
  backupId: string;

  /**
   * Required. The backup to create. The `name` field is ignored. The ID of the
   * created backup must be provided in the request's `backup_id` field.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Backup backup = 3;
   */
  backup?: Backup;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.CreateBackupRequest.
 * Use `create(CreateBackupRequestSchema)` to create a new message.
 */
export const CreateBackupRequestSchema: GenMessage<CreateBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 33);

/**
 * Request message for
 * [DataprocMetastore.DeleteBackup][google.cloud.metastore.v1alpha.DataprocMetastore.DeleteBackup].
 *
 * @generated from message google.cloud.metastore.v1alpha.DeleteBackupRequest
 */
export type DeleteBackupRequest = Message<"google.cloud.metastore.v1alpha.DeleteBackupRequest"> & {
  /**
   * Required. The relative resource name of the backup to delete, in the
   * following form:
   *
   * `projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.DeleteBackupRequest.
 * Use `create(DeleteBackupRequestSchema)` to create a new message.
 */
export const DeleteBackupRequestSchema: GenMessage<DeleteBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 34);

/**
 * Request message for
 * [DataprocMetastore.ExportMetadata][google.cloud.metastore.v1alpha.DataprocMetastore.ExportMetadata].
 *
 * @generated from message google.cloud.metastore.v1alpha.ExportMetadataRequest
 */
export type ExportMetadataRequest = Message<"google.cloud.metastore.v1alpha.ExportMetadataRequest"> & {
  /**
   * Required. Destination that metadata is exported to.
   *
   * @generated from oneof google.cloud.metastore.v1alpha.ExportMetadataRequest.destination
   */
  destination: {
    /**
     * A Cloud Storage URI of a folder, in the format
     * `gs://<bucket_name>/<path_inside_bucket>`. A sub-folder
     * `<export_folder>` containing exported files will be created below it.
     *
     * @generated from field: string destination_gcs_folder = 2;
     */
    value: string;
    case: "destinationGcsFolder";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The relative resource name of the metastore service to run
   * export, in the following form:
   *
   * `projects/{project_id}/locations/{location_id}/services/{service_id}`.
   *
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format).
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;

  /**
   * Optional. The type of the database dump. If unspecified, defaults to
   * `MYSQL`.
   *
   * @generated from field: google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type database_dump_type = 4;
   */
  databaseDumpType: DatabaseDumpSpec_Type;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.ExportMetadataRequest.
 * Use `create(ExportMetadataRequestSchema)` to create a new message.
 */
export const ExportMetadataRequestSchema: GenMessage<ExportMetadataRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 35);

/**
 * Request message for [DataprocMetastore.Restore][].
 *
 * @generated from message google.cloud.metastore.v1alpha.RestoreServiceRequest
 */
export type RestoreServiceRequest = Message<"google.cloud.metastore.v1alpha.RestoreServiceRequest"> & {
  /**
   * Required. The relative resource name of the metastore service to run
   * restore, in the following form:
   *
   * `projects/{project_id}/locations/{location_id}/services/{service_id}`.
   *
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * Required. The relative resource name of the metastore service backup to
   * restore from, in the following form:
   *
   * `projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}`.
   *
   * @generated from field: string backup = 2;
   */
  backup: string;

  /**
   * Optional. The type of restore. If unspecified, defaults to `METADATA_ONLY`.
   *
   * @generated from field: google.cloud.metastore.v1alpha.Restore.RestoreType restore_type = 3;
   */
  restoreType: Restore_RestoreType;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format).
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.RestoreServiceRequest.
 * Use `create(RestoreServiceRequestSchema)` to create a new message.
 */
export const RestoreServiceRequestSchema: GenMessage<RestoreServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 36);

/**
 * Represents the metadata of a long-running operation.
 *
 * @generated from message google.cloud.metastore.v1alpha.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.metastore.v1alpha.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. Identifies whether the caller has requested cancellation
   * of the operation. Operations that have successfully been cancelled
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 37);

/**
 * Metadata about the service in a location.
 *
 * @generated from message google.cloud.metastore.v1alpha.LocationMetadata
 */
export type LocationMetadata = Message<"google.cloud.metastore.v1alpha.LocationMetadata"> & {
  /**
   * The versions of Hive Metastore that can be used when creating a new
   * metastore service in this location. The server guarantees that exactly one
   * `HiveMetastoreVersion` in the list will set `is_default`.
   *
   * @generated from field: repeated google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion supported_hive_metastore_versions = 1;
   */
  supportedHiveMetastoreVersions: LocationMetadata_HiveMetastoreVersion[];
};

/**
 * Describes the message google.cloud.metastore.v1alpha.LocationMetadata.
 * Use `create(LocationMetadataSchema)` to create a new message.
 */
export const LocationMetadataSchema: GenMessage<LocationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 38);

/**
 * A specification of a supported version of the Hive Metastore software.
 *
 * @generated from message google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion
 */
export type LocationMetadata_HiveMetastoreVersion = Message<"google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion"> & {
  /**
   * The semantic version of the Hive Metastore software.
   *
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * Whether `version` will be chosen by the server if a metastore service is
   * created with a `HiveMetastoreConfig` that omits the `version`.
   *
   * @generated from field: bool is_default = 2;
   */
  isDefault: boolean;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.LocationMetadata.HiveMetastoreVersion.
 * Use `create(LocationMetadata_HiveMetastoreVersionSchema)` to create a new message.
 */
export const LocationMetadata_HiveMetastoreVersionSchema: GenMessage<LocationMetadata_HiveMetastoreVersion> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 38, 0);

/**
 * The specification of database dump to import from or export to.
 *
 * @generated from message google.cloud.metastore.v1alpha.DatabaseDumpSpec
 */
export type DatabaseDumpSpec = Message<"google.cloud.metastore.v1alpha.DatabaseDumpSpec"> & {
};

/**
 * Describes the message google.cloud.metastore.v1alpha.DatabaseDumpSpec.
 * Use `create(DatabaseDumpSpecSchema)` to create a new message.
 */
export const DatabaseDumpSpecSchema: GenMessage<DatabaseDumpSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 39);

/**
 * The type of the database dump.
 *
 * @generated from enum google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type
 */
export enum DatabaseDumpSpec_Type {
  /**
   * The type of the database dump is unknown.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Database dump is a MySQL dump file.
   *
   * @generated from enum value: MYSQL = 1;
   */
  MYSQL = 1,

  /**
   * Database dump contains Avro files.
   *
   * @generated from enum value: AVRO = 2;
   */
  AVRO = 2,
}

/**
 * Describes the enum google.cloud.metastore.v1alpha.DatabaseDumpSpec.Type.
 */
export const DatabaseDumpSpec_TypeSchema: GenEnum<DatabaseDumpSpec_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1alpha_metastore, 39, 0);

/**
 * Request message for
 * [DataprocMetastore.RemoveIamPolicy][google.cloud.metastore.v1alpha.DataprocMetastore.RemoveIamPolicy].
 *
 * @generated from message google.cloud.metastore.v1alpha.RemoveIamPolicyRequest
 */
export type RemoveIamPolicyRequest = Message<"google.cloud.metastore.v1alpha.RemoveIamPolicyRequest"> & {
  /**
   * Required. The relative resource name of the dataplane resource to remove
   * IAM policy, in the following form:
   *
   * `projects/{project_id}/locations/{location_id}/services/{service_id}/databases/{database_id}`
   * or
   * `projects/{project_id}/locations/{location_id}/services/{service_id}/databases/{database_id}/tables/{table_id}`.
   *
   * @generated from field: string resource = 1;
   */
  resource: string;

  /**
   * Optional. Removes IAM policy attached to database or table asynchronously
   * when it is set. The default is false.
   *
   * @generated from field: bool asynchronous = 2;
   */
  asynchronous: boolean;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.RemoveIamPolicyRequest.
 * Use `create(RemoveIamPolicyRequestSchema)` to create a new message.
 */
export const RemoveIamPolicyRequestSchema: GenMessage<RemoveIamPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 40);

/**
 * Response message for
 * [DataprocMetastore.RemoveIamPolicy][google.cloud.metastore.v1alpha.DataprocMetastore.RemoveIamPolicy].
 *
 * @generated from message google.cloud.metastore.v1alpha.RemoveIamPolicyResponse
 */
export type RemoveIamPolicyResponse = Message<"google.cloud.metastore.v1alpha.RemoveIamPolicyResponse"> & {
  /**
   * True if the policy is successfully removed.
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.RemoveIamPolicyResponse.
 * Use `create(RemoveIamPolicyResponseSchema)` to create a new message.
 */
export const RemoveIamPolicyResponseSchema: GenMessage<RemoveIamPolicyResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 41);

/**
 * Request message for
 * [DataprocMetastore.QueryMetadata][google.cloud.metastore.v1alpha.DataprocMetastore.QueryMetadata].
 *
 * @generated from message google.cloud.metastore.v1alpha.QueryMetadataRequest
 */
export type QueryMetadataRequest = Message<"google.cloud.metastore.v1alpha.QueryMetadataRequest"> & {
  /**
   * Required. The relative resource name of the metastore service to query
   * metadata, in the following format:
   *
   * `projects/{project_id}/locations/{location_id}/services/{service_id}`.
   *
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * Required. A read-only SQL query to execute against the metadata database.
   * The query cannot change or mutate the data.
   *
   * @generated from field: string query = 2;
   */
  query: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.QueryMetadataRequest.
 * Use `create(QueryMetadataRequestSchema)` to create a new message.
 */
export const QueryMetadataRequestSchema: GenMessage<QueryMetadataRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 42);

/**
 * Response message for
 * [DataprocMetastore.QueryMetadata][google.cloud.metastore.v1alpha.DataprocMetastore.QueryMetadata].
 *
 * @generated from message google.cloud.metastore.v1alpha.QueryMetadataResponse
 */
export type QueryMetadataResponse = Message<"google.cloud.metastore.v1alpha.QueryMetadataResponse"> & {
  /**
   * The manifest URI  is link to a JSON instance in Cloud Storage.
   * This instance manifests immediately along with QueryMetadataResponse. The
   * content of the URI is not retriable until the long-running operation query
   * against the metadata finishes.
   *
   * @generated from field: string result_manifest_uri = 1;
   */
  resultManifestUri: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.QueryMetadataResponse.
 * Use `create(QueryMetadataResponseSchema)` to create a new message.
 */
export const QueryMetadataResponseSchema: GenMessage<QueryMetadataResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 43);

/**
 * Error details in public error message for
 * [DataprocMetastore.QueryMetadata][google.cloud.metastore.v1alpha.DataprocMetastore.QueryMetadata].
 *
 * @generated from message google.cloud.metastore.v1alpha.ErrorDetails
 */
export type ErrorDetails = Message<"google.cloud.metastore.v1alpha.ErrorDetails"> & {
  /**
   * Additional structured details about this error.
   *
   * Keys define the failure items.
   * Value describes the exception or details of the item.
   *
   * @generated from field: map<string, string> details = 1;
   */
  details: { [key: string]: string };
};

/**
 * Describes the message google.cloud.metastore.v1alpha.ErrorDetails.
 * Use `create(ErrorDetailsSchema)` to create a new message.
 */
export const ErrorDetailsSchema: GenMessage<ErrorDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 44);

/**
 * Request message for
 * [DataprocMetastore.MoveTableToDatabase][google.cloud.metastore.v1alpha.DataprocMetastore.MoveTableToDatabase].
 *
 * @generated from message google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest
 */
export type MoveTableToDatabaseRequest = Message<"google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest"> & {
  /**
   * Required. The relative resource name of the metastore service to mutate
   * metadata, in the following format:
   *
   * `projects/{project_id}/locations/{location_id}/services/{service_id}`.
   *
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * Required. The name of the table to be moved.
   *
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * Required. The name of the database where the table resides.
   *
   * @generated from field: string db_name = 3;
   */
  dbName: string;

  /**
   * Required. The name of the database where the table should be moved.
   *
   * @generated from field: string destination_db_name = 4;
   */
  destinationDbName: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.MoveTableToDatabaseRequest.
 * Use `create(MoveTableToDatabaseRequestSchema)` to create a new message.
 */
export const MoveTableToDatabaseRequestSchema: GenMessage<MoveTableToDatabaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 45);

/**
 * Response message for
 * [DataprocMetastore.MoveTableToDatabase][google.cloud.metastore.v1alpha.DataprocMetastore.MoveTableToDatabase].
 *
 * @generated from message google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse
 */
export type MoveTableToDatabaseResponse = Message<"google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse"> & {
};

/**
 * Describes the message google.cloud.metastore.v1alpha.MoveTableToDatabaseResponse.
 * Use `create(MoveTableToDatabaseResponseSchema)` to create a new message.
 */
export const MoveTableToDatabaseResponseSchema: GenMessage<MoveTableToDatabaseResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 46);

/**
 * Request message for
 * [DataprocMetastore.AlterMetadataResourceLocation][google.cloud.metastore.v1alpha.DataprocMetastore.AlterMetadataResourceLocation].
 *
 * @generated from message google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest
 */
export type AlterMetadataResourceLocationRequest = Message<"google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest"> & {
  /**
   * Required. The relative resource name of the metastore service to mutate
   * metadata, in the following format:
   *
   * `projects/{project_id}/locations/{location_id}/services/{service_id}`.
   *
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * Required. The relative metadata resource name in the following format.
   *
   * `databases/{database_id}`
   * or
   * `databases/{database_id}/tables/{table_id}`
   * or
   * `databases/{database_id}/tables/{table_id}/partitions/{partition_id}`
   *
   * @generated from field: string resource_name = 2;
   */
  resourceName: string;

  /**
   * Required. The new location URI for the metadata resource.
   *
   * @generated from field: string location_uri = 3;
   */
  locationUri: string;
};

/**
 * Describes the message google.cloud.metastore.v1alpha.AlterMetadataResourceLocationRequest.
 * Use `create(AlterMetadataResourceLocationRequestSchema)` to create a new message.
 */
export const AlterMetadataResourceLocationRequestSchema: GenMessage<AlterMetadataResourceLocationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 47);

/**
 * Response message for
 * [DataprocMetastore.AlterMetadataResourceLocation][google.cloud.metastore.v1alpha.DataprocMetastore.AlterMetadataResourceLocation].
 *
 * @generated from message google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse
 */
export type AlterMetadataResourceLocationResponse = Message<"google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse"> & {
};

/**
 * Describes the message google.cloud.metastore.v1alpha.AlterMetadataResourceLocationResponse.
 * Use `create(AlterMetadataResourceLocationResponseSchema)` to create a new message.
 */
export const AlterMetadataResourceLocationResponseSchema: GenMessage<AlterMetadataResourceLocationResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1alpha_metastore, 48);

/**
 * Configures and manages metastore services.
 * Metastore services are fully managed, highly available, autoscaled,
 * autohealing, OSS-native deployments of technical metadata management
 * software. Each metastore service exposes a network endpoint through which
 * metadata queries are served. Metadata queries can originate from a variety
 * of sources, including Apache Hive, Apache Presto, and Apache Spark.
 *
 * The Dataproc Metastore API defines the following resource model:
 *
 * * The service works with a collection of Google Cloud projects, named:
 * `/projects/*`
 * * Each project has a collection of available locations, named: `/locations/*`
 *   (a location must refer to a Google Cloud `region`)
 * * Each location has a collection of services, named: `/services/*`
 * * Dataproc Metastore services are resources with names of the form:
 *
 *   `/projects/{project_number}/locations/{location_id}/services/{service_id}`.
 *
 * @generated from service google.cloud.metastore.v1alpha.DataprocMetastore
 */
export const DataprocMetastore: GenService<{
  /**
   * Lists services in a project and location.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.ListServices
   */
  listServices: {
    methodKind: "unary";
    input: typeof ListServicesRequestSchema;
    output: typeof ListServicesResponseSchema;
  },
  /**
   * Gets the details of a single service.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.GetService
   */
  getService: {
    methodKind: "unary";
    input: typeof GetServiceRequestSchema;
    output: typeof ServiceSchema;
  },
  /**
   * Creates a metastore service in a project and location.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.CreateService
   */
  createService: {
    methodKind: "unary";
    input: typeof CreateServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single service.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.UpdateService
   */
  updateService: {
    methodKind: "unary";
    input: typeof UpdateServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single service.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.DeleteService
   */
  deleteService: {
    methodKind: "unary";
    input: typeof DeleteServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists imports in a service.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.ListMetadataImports
   */
  listMetadataImports: {
    methodKind: "unary";
    input: typeof ListMetadataImportsRequestSchema;
    output: typeof ListMetadataImportsResponseSchema;
  },
  /**
   * Gets details of a single import.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.GetMetadataImport
   */
  getMetadataImport: {
    methodKind: "unary";
    input: typeof GetMetadataImportRequestSchema;
    output: typeof MetadataImportSchema;
  },
  /**
   * Creates a new MetadataImport in a given project and location.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.CreateMetadataImport
   */
  createMetadataImport: {
    methodKind: "unary";
    input: typeof CreateMetadataImportRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a single import.
   * Only the description field of MetadataImport is supported to be updated.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.UpdateMetadataImport
   */
  updateMetadataImport: {
    methodKind: "unary";
    input: typeof UpdateMetadataImportRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Exports metadata from a service.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.ExportMetadata
   */
  exportMetadata: {
    methodKind: "unary";
    input: typeof ExportMetadataRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Restores a service from a backup.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.RestoreService
   */
  restoreService: {
    methodKind: "unary";
    input: typeof RestoreServiceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists backups in a service.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.ListBackups
   */
  listBackups: {
    methodKind: "unary";
    input: typeof ListBackupsRequestSchema;
    output: typeof ListBackupsResponseSchema;
  },
  /**
   * Gets details of a single backup.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.GetBackup
   */
  getBackup: {
    methodKind: "unary";
    input: typeof GetBackupRequestSchema;
    output: typeof BackupSchema;
  },
  /**
   * Creates a new backup in a given project and location.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.CreateBackup
   */
  createBackup: {
    methodKind: "unary";
    input: typeof CreateBackupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single backup.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.DeleteBackup
   */
  deleteBackup: {
    methodKind: "unary";
    input: typeof DeleteBackupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Removes the attached IAM policies for a resource
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.RemoveIamPolicy
   */
  removeIamPolicy: {
    methodKind: "unary";
    input: typeof RemoveIamPolicyRequestSchema;
    output: typeof RemoveIamPolicyResponseSchema;
  },
  /**
   * Query DPMS metadata.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.QueryMetadata
   */
  queryMetadata: {
    methodKind: "unary";
    input: typeof QueryMetadataRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Move a table to another database.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.MoveTableToDatabase
   */
  moveTableToDatabase: {
    methodKind: "unary";
    input: typeof MoveTableToDatabaseRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Alter metadata resource location. The metadata resource can be a database,
   * table, or partition. This functionality only updates the parent directory
   * for the respective metadata resource and does not transfer any existing
   * data to the new location.
   *
   * @generated from rpc google.cloud.metastore.v1alpha.DataprocMetastore.AlterMetadataResourceLocation
   */
  alterMetadataResourceLocation: {
    methodKind: "unary";
    input: typeof AlterMetadataResourceLocationRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_metastore_v1alpha_metastore, 0);

