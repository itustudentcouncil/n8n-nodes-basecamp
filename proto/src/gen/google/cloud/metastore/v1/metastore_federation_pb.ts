// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/metastore/v1/metastore_federation.proto (package google.cloud.metastore.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import { file_google_cloud_metastore_v1_metastore } from "./metastore_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/metastore/v1/metastore_federation.proto.
 */
export const file_google_cloud_metastore_v1_metastore_federation: GenFile = /*@__PURE__*/
  fileDesc("CjRnb29nbGUvY2xvdWQvbWV0YXN0b3JlL3YxL21ldGFzdG9yZV9mZWRlcmF0aW9uLnByb3RvEhlnb29nbGUuY2xvdWQubWV0YXN0b3JlLnYxIqsGCgpGZWRlcmF0aW9uEhEKBG5hbWUYASABKAlCA+BBBRI0CgtjcmVhdGVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxJBCgZsYWJlbHMYBCADKAsyMS5nb29nbGUuY2xvdWQubWV0YXN0b3JlLnYxLkZlZGVyYXRpb24uTGFiZWxzRW50cnkSFAoHdmVyc2lvbhgFIAEoCUID4EEFElgKEmJhY2tlbmRfbWV0YXN0b3JlcxgGIAMoCzI8Lmdvb2dsZS5jbG91ZC5tZXRhc3RvcmUudjEuRmVkZXJhdGlvbi5CYWNrZW5kTWV0YXN0b3Jlc0VudHJ5EhkKDGVuZHBvaW50X3VyaRgHIAEoCUID4EEDEj8KBXN0YXRlGAggASgOMisuZ29vZ2xlLmNsb3VkLm1ldGFzdG9yZS52MS5GZWRlcmF0aW9uLlN0YXRlQgPgQQMSGgoNc3RhdGVfbWVzc2FnZRgJIAEoCUID4EEDEhAKA3VpZBgKIAEoCUID4EEDGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaZQoWQmFja2VuZE1ldGFzdG9yZXNFbnRyeRILCgNrZXkYASABKAUSOgoFdmFsdWUYAiABKAsyKy5nb29nbGUuY2xvdWQubWV0YXN0b3JlLnYxLkJhY2tlbmRNZXRhc3RvcmU6AjgBIl8KBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASDAoIQ1JFQVRJTkcQARIKCgZBQ1RJVkUQAhIMCghVUERBVElORxADEgwKCERFTEVUSU5HEAQSCQoFRVJST1IQBTpq6kFnCiNtZXRhc3RvcmUuZ29vZ2xlYXBpcy5jb20vRmVkZXJhdGlvbhJAcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2ZlZGVyYXRpb25zL3tmZWRlcmF0aW9ufSLKAQoQQmFja2VuZE1ldGFzdG9yZRIMCgRuYW1lGAEgASgJElEKDm1ldGFzdG9yZV90eXBlGAIgASgOMjkuZ29vZ2xlLmNsb3VkLm1ldGFzdG9yZS52MS5CYWNrZW5kTWV0YXN0b3JlLk1ldGFzdG9yZVR5cGUiVQoNTWV0YXN0b3JlVHlwZRIeChpNRVRBU1RPUkVfVFlQRV9VTlNQRUNJRklFRBAAEgwKCEJJR1FVRVJZEAISFgoSREFUQVBST0NfTUVUQVNUT1JFEAMisgEKFkxpc3RGZWRlcmF0aW9uc1JlcXVlc3QSOwoGcGFyZW50GAEgASgJQivgQQL6QSUSI21ldGFzdG9yZS5nb29nbGVhcGlzLmNvbS9GZWRlcmF0aW9uEhYKCXBhZ2Vfc2l6ZRgCIAEoBUID4EEBEhcKCnBhZ2VfdG9rZW4YAyABKAlCA+BBARITCgZmaWx0ZXIYBCABKAlCA+BBARIVCghvcmRlcl9ieRgFIAEoCUID4EEBIoMBChdMaXN0RmVkZXJhdGlvbnNSZXNwb25zZRI6CgtmZWRlcmF0aW9ucxgBIAMoCzIlLmdvb2dsZS5jbG91ZC5tZXRhc3RvcmUudjEuRmVkZXJhdGlvbhIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSEwoLdW5yZWFjaGFibGUYAyADKAkiUQoUR2V0RmVkZXJhdGlvblJlcXVlc3QSOQoEbmFtZRgBIAEoCUIr4EEC+kElCiNtZXRhc3RvcmUuZ29vZ2xlYXBpcy5jb20vRmVkZXJhdGlvbiLLAQoXQ3JlYXRlRmVkZXJhdGlvblJlcXVlc3QSOwoGcGFyZW50GAEgASgJQivgQQL6QSUSI21ldGFzdG9yZS5nb29nbGVhcGlzLmNvbS9GZWRlcmF0aW9uEhoKDWZlZGVyYXRpb25faWQYAiABKAlCA+BBAhI+CgpmZWRlcmF0aW9uGAMgASgLMiUuZ29vZ2xlLmNsb3VkLm1ldGFzdG9yZS52MS5GZWRlcmF0aW9uQgPgQQISFwoKcmVxdWVzdF9pZBgEIAEoCUID4EEBIqgBChdVcGRhdGVGZWRlcmF0aW9uUmVxdWVzdBI0Cgt1cGRhdGVfbWFzaxgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BBAhI+CgpmZWRlcmF0aW9uGAIgASgLMiUuZ29vZ2xlLmNsb3VkLm1ldGFzdG9yZS52MS5GZWRlcmF0aW9uQgPgQQISFwoKcmVxdWVzdF9pZBgDIAEoCUID4EEBIm0KF0RlbGV0ZUZlZGVyYXRpb25SZXF1ZXN0EjkKBG5hbWUYASABKAlCK+BBAvpBJQojbWV0YXN0b3JlLmdvb2dsZWFwaXMuY29tL0ZlZGVyYXRpb24SFwoKcmVxdWVzdF9pZBgCIAEoCUID4EEBMtwJChtEYXRhcHJvY01ldGFzdG9yZUZlZGVyYXRpb24SugEKD0xpc3RGZWRlcmF0aW9ucxIxLmdvb2dsZS5jbG91ZC5tZXRhc3RvcmUudjEuTGlzdEZlZGVyYXRpb25zUmVxdWVzdBoyLmdvb2dsZS5jbG91ZC5tZXRhc3RvcmUudjEuTGlzdEZlZGVyYXRpb25zUmVzcG9uc2UiQNpBBnBhcmVudILT5JMCMRIvL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vZmVkZXJhdGlvbnMSpwEKDUdldEZlZGVyYXRpb24SLy5nb29nbGUuY2xvdWQubWV0YXN0b3JlLnYxLkdldEZlZGVyYXRpb25SZXF1ZXN0GiUuZ29vZ2xlLmNsb3VkLm1ldGFzdG9yZS52MS5GZWRlcmF0aW9uIj7aQQRuYW1lgtPkkwIxEi8vdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9mZWRlcmF0aW9ucy8qfRKJAgoQQ3JlYXRlRmVkZXJhdGlvbhIyLmdvb2dsZS5jbG91ZC5tZXRhc3RvcmUudjEuQ3JlYXRlRmVkZXJhdGlvblJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIqEBykE5CgpGZWRlcmF0aW9uEitnb29nbGUuY2xvdWQubWV0YXN0b3JlLnYxLk9wZXJhdGlvbk1ldGFkYXRh2kEfcGFyZW50LGZlZGVyYXRpb24sZmVkZXJhdGlvbl9pZILT5JMCPToKZmVkZXJhdGlvbiIvL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vZmVkZXJhdGlvbnMSiwIKEFVwZGF0ZUZlZGVyYXRpb24SMi5nb29nbGUuY2xvdWQubWV0YXN0b3JlLnYxLlVwZGF0ZUZlZGVyYXRpb25SZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKjAcpBOQoKRmVkZXJhdGlvbhIrZ29vZ2xlLmNsb3VkLm1ldGFzdG9yZS52MS5PcGVyYXRpb25NZXRhZGF0YdpBFmZlZGVyYXRpb24sdXBkYXRlX21hc2uC0+STAkg6CmZlZGVyYXRpb24yOi92MS97ZmVkZXJhdGlvbi5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZmVkZXJhdGlvbnMvKn0S7QEKEERlbGV0ZUZlZGVyYXRpb24SMi5nb29nbGUuY2xvdWQubWV0YXN0b3JlLnYxLkRlbGV0ZUZlZGVyYXRpb25SZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKFAcpBRAoVZ29vZ2xlLnByb3RvYnVmLkVtcHR5Eitnb29nbGUuY2xvdWQubWV0YXN0b3JlLnYxLk9wZXJhdGlvbk1ldGFkYXRh2kEEbmFtZYLT5JMCMSovL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZmVkZXJhdGlvbnMvKn0aTMpBGG1ldGFzdG9yZS5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CeAodY29tLmdvb2dsZS5jbG91ZC5tZXRhc3RvcmUudjFCGE1ldGFzdG9yZUZlZGVyYXRpb25Qcm90b1ABWjtjbG91ZC5nb29nbGUuY29tL2dvL21ldGFzdG9yZS9hcGl2MS9tZXRhc3RvcmVwYjttZXRhc3RvcmVwYmIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_metastore_v1_metastore, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Represents a federation of multiple backend metastores.
 *
 * @generated from message google.cloud.metastore.v1.Federation
 */
export type Federation = Message<"google.cloud.metastore.v1.Federation"> & {
  /**
   * Immutable. The relative resource name of the federation, of the
   * form:
   * projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time when the metastore federation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the metastore federation was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * User-defined labels for the metastore federation.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Immutable. The Apache Hive metastore version of the federation. All backend
   * metastore versions must be compatible with the federation version.
   *
   * @generated from field: string version = 5;
   */
  version: string;

  /**
   * A map from `BackendMetastore` rank to `BackendMetastore`s from which the
   * federation service serves metadata at query time. The map key represents
   * the order in which `BackendMetastore`s should be evaluated to resolve
   * database names at query time and should be greater than or equal to zero. A
   * `BackendMetastore` with a lower number will be evaluated before a
   * `BackendMetastore` with a higher number.
   *
   * @generated from field: map<int32, google.cloud.metastore.v1.BackendMetastore> backend_metastores = 6;
   */
  backendMetastores: { [key: number]: BackendMetastore };

  /**
   * Output only. The federation endpoint.
   *
   * @generated from field: string endpoint_uri = 7;
   */
  endpointUri: string;

  /**
   * Output only. The current state of the federation.
   *
   * @generated from field: google.cloud.metastore.v1.Federation.State state = 8;
   */
  state: Federation_State;

  /**
   * Output only. Additional information about the current state of the
   * metastore federation, if available.
   *
   * @generated from field: string state_message = 9;
   */
  stateMessage: string;

  /**
   * Output only. The globally unique resource identifier of the metastore
   * federation.
   *
   * @generated from field: string uid = 10;
   */
  uid: string;
};

/**
 * Describes the message google.cloud.metastore.v1.Federation.
 * Use `create(FederationSchema)` to create a new message.
 */
export const FederationSchema: GenMessage<Federation> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1_metastore_federation, 0);

/**
 * The current state of the federation.
 *
 * @generated from enum google.cloud.metastore.v1.Federation.State
 */
export enum Federation_State {
  /**
   * The state of the metastore federation is unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The metastore federation is in the process of being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The metastore federation is running and ready to serve queries.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The metastore federation is being updated. It remains usable but cannot
   * accept additional update requests or be deleted at this time.
   *
   * @generated from enum value: UPDATING = 3;
   */
  UPDATING = 3,

  /**
   * The metastore federation is undergoing deletion. It cannot be used.
   *
   * @generated from enum value: DELETING = 4;
   */
  DELETING = 4,

  /**
   * The metastore federation has encountered an error and cannot be used. The
   * metastore federation should be deleted.
   *
   * @generated from enum value: ERROR = 5;
   */
  ERROR = 5,
}

/**
 * Describes the enum google.cloud.metastore.v1.Federation.State.
 */
export const Federation_StateSchema: GenEnum<Federation_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1_metastore_federation, 0, 0);

/**
 * Represents a backend metastore for the federation.
 *
 * @generated from message google.cloud.metastore.v1.BackendMetastore
 */
export type BackendMetastore = Message<"google.cloud.metastore.v1.BackendMetastore"> & {
  /**
   * The relative resource name of the metastore that is being federated.
   * The formats of the relative resource names for the currently supported
   * metastores are listed below:
   *
   * * BigQuery
   *     * `projects/{project_id}`
   * * Dataproc Metastore
   *     * `projects/{project_id}/locations/{location}/services/{service_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The type of the backend metastore.
   *
   * @generated from field: google.cloud.metastore.v1.BackendMetastore.MetastoreType metastore_type = 2;
   */
  metastoreType: BackendMetastore_MetastoreType;
};

/**
 * Describes the message google.cloud.metastore.v1.BackendMetastore.
 * Use `create(BackendMetastoreSchema)` to create a new message.
 */
export const BackendMetastoreSchema: GenMessage<BackendMetastore> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1_metastore_federation, 1);

/**
 * The type of the backend metastore.
 *
 * @generated from enum google.cloud.metastore.v1.BackendMetastore.MetastoreType
 */
export enum BackendMetastore_MetastoreType {
  /**
   * The metastore type is not set.
   *
   * @generated from enum value: METASTORE_TYPE_UNSPECIFIED = 0;
   */
  METASTORE_TYPE_UNSPECIFIED = 0,

  /**
   * The backend metastore is BigQuery.
   *
   * @generated from enum value: BIGQUERY = 2;
   */
  BIGQUERY = 2,

  /**
   * The backend metastore is Dataproc Metastore.
   *
   * @generated from enum value: DATAPROC_METASTORE = 3;
   */
  DATAPROC_METASTORE = 3,
}

/**
 * Describes the enum google.cloud.metastore.v1.BackendMetastore.MetastoreType.
 */
export const BackendMetastore_MetastoreTypeSchema: GenEnum<BackendMetastore_MetastoreType> = /*@__PURE__*/
  enumDesc(file_google_cloud_metastore_v1_metastore_federation, 1, 0);

/**
 * Request message for ListFederations.
 *
 * @generated from message google.cloud.metastore.v1.ListFederationsRequest
 */
export type ListFederationsRequest = Message<"google.cloud.metastore.v1.ListFederationsRequest"> & {
  /**
   * Required. The relative resource name of the location of metastore
   * federations to list, in the following form:
   * `projects/{project_number}/locations/{location_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of federations to return. The response may
   * contain less than the maximum number. If unspecified, no more than 500
   * services are returned. The maximum value is 1000; values above 1000 are
   * changed to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous ListFederationServices
   * call. Provide this token to retrieve the subsequent page.
   *
   * To retrieve the first page, supply an empty page token.
   *
   * When paginating, other parameters provided to
   * ListFederationServices must match the call that provided the
   * page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter to apply to list results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Specify the ordering of results as described in [Sorting
   * Order](https://cloud.google.com/apis/design/design_patterns#sorting_order).
   * If not specified, the results will be sorted in the default order.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.metastore.v1.ListFederationsRequest.
 * Use `create(ListFederationsRequestSchema)` to create a new message.
 */
export const ListFederationsRequestSchema: GenMessage<ListFederationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1_metastore_federation, 2);

/**
 * Response message for ListFederations
 *
 * @generated from message google.cloud.metastore.v1.ListFederationsResponse
 */
export type ListFederationsResponse = Message<"google.cloud.metastore.v1.ListFederationsResponse"> & {
  /**
   * The services in the specified location.
   *
   * @generated from field: repeated google.cloud.metastore.v1.Federation federations = 1;
   */
  federations: Federation[];

  /**
   * A token that can be sent as `page_token` to retrieve the next page. If this
   * field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.metastore.v1.ListFederationsResponse.
 * Use `create(ListFederationsResponseSchema)` to create a new message.
 */
export const ListFederationsResponseSchema: GenMessage<ListFederationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1_metastore_federation, 3);

/**
 * Request message for GetFederation.
 *
 * @generated from message google.cloud.metastore.v1.GetFederationRequest
 */
export type GetFederationRequest = Message<"google.cloud.metastore.v1.GetFederationRequest"> & {
  /**
   * Required. The relative resource name of the metastore federation to
   * retrieve, in the following form:
   *
   * `projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.metastore.v1.GetFederationRequest.
 * Use `create(GetFederationRequestSchema)` to create a new message.
 */
export const GetFederationRequestSchema: GenMessage<GetFederationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1_metastore_federation, 4);

/**
 * Request message for CreateFederation.
 *
 * @generated from message google.cloud.metastore.v1.CreateFederationRequest
 */
export type CreateFederationRequest = Message<"google.cloud.metastore.v1.CreateFederationRequest"> & {
  /**
   * Required. The relative resource name of the location in which to create a
   * federation service, in the following form:
   *
   * `projects/{project_number}/locations/{location_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID of the metastore federation, which is used as the final
   * component of the metastore federation's name.
   *
   * This value must be between 2 and 63 characters long inclusive, begin with a
   * letter, end with a letter or number, and consist of alpha-numeric
   * ASCII characters or hyphens.
   *
   * @generated from field: string federation_id = 2;
   */
  federationId: string;

  /**
   * Required. The Metastore Federation to create. The `name` field is
   * ignored. The ID of the created metastore federation must be
   * provided in the request's `federation_id` field.
   *
   * @generated from field: google.cloud.metastore.v1.Federation federation = 3;
   */
  federation?: Federation;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1.CreateFederationRequest.
 * Use `create(CreateFederationRequestSchema)` to create a new message.
 */
export const CreateFederationRequestSchema: GenMessage<CreateFederationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1_metastore_federation, 5);

/**
 * Request message for UpdateFederation.
 *
 * @generated from message google.cloud.metastore.v1.UpdateFederationRequest
 */
export type UpdateFederationRequest = Message<"google.cloud.metastore.v1.UpdateFederationRequest"> & {
  /**
   * Required. A field mask used to specify the fields to be overwritten in the
   * metastore federation resource by the update.
   * Fields specified in the `update_mask` are relative to the resource (not
   * to the full request). A field is overwritten if it is in the mask.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The metastore federation to update. The server only merges fields
   * in the service if they are specified in `update_mask`.
   *
   * The metastore federation's `name` field is used to identify the
   * metastore service to be updated.
   *
   * @generated from field: google.cloud.metastore.v1.Federation federation = 2;
   */
  federation?: Federation;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1.UpdateFederationRequest.
 * Use `create(UpdateFederationRequestSchema)` to create a new message.
 */
export const UpdateFederationRequestSchema: GenMessage<UpdateFederationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1_metastore_federation, 6);

/**
 * Request message for DeleteFederation.
 *
 * @generated from message google.cloud.metastore.v1.DeleteFederationRequest
 */
export type DeleteFederationRequest = Message<"google.cloud.metastore.v1.DeleteFederationRequest"> & {
  /**
   * Required. The relative resource name of the metastore federation to delete,
   * in the following form:
   *
   * `projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID. Specify a unique request ID to allow the server to
   * ignore the request if it has completed. The server will ignore subsequent
   * requests that provide a duplicate request ID for at least 60 minutes after
   * the first request.
   *
   * For example, if an initial request times out, followed by another request
   * with the same request ID, the server ignores the second request to prevent
   * the creation of duplicate commitments.
   *
   * The request ID must be a valid
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
   * A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.metastore.v1.DeleteFederationRequest.
 * Use `create(DeleteFederationRequestSchema)` to create a new message.
 */
export const DeleteFederationRequestSchema: GenMessage<DeleteFederationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_metastore_v1_metastore_federation, 7);

/**
 * Configures and manages metastore federation services.
 * Dataproc Metastore Federation Service allows federating a collection of
 * backend metastores like BigQuery, Dataplex Lakes, and other Dataproc
 * Metastores. The Federation Service exposes a gRPC URL through which metadata
 * from the backend metastores are served at query time.
 *
 * The Dataproc Metastore Federation API defines the following resource model:
 * * The service works with a collection of Google Cloud projects.
 * * Each project has a collection of available locations.
 * * Each location has a collection of federations.
 * * Dataproc Metastore Federations are resources with names of the
 * form:
 * `projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
 *
 * @generated from service google.cloud.metastore.v1.DataprocMetastoreFederation
 */
export const DataprocMetastoreFederation: GenService<{
  /**
   * Lists federations in a project and location.
   *
   * @generated from rpc google.cloud.metastore.v1.DataprocMetastoreFederation.ListFederations
   */
  listFederations: {
    methodKind: "unary";
    input: typeof ListFederationsRequestSchema;
    output: typeof ListFederationsResponseSchema;
  },
  /**
   * Gets the details of a single federation.
   *
   * @generated from rpc google.cloud.metastore.v1.DataprocMetastoreFederation.GetFederation
   */
  getFederation: {
    methodKind: "unary";
    input: typeof GetFederationRequestSchema;
    output: typeof FederationSchema;
  },
  /**
   * Creates a metastore federation in a project and location.
   *
   * @generated from rpc google.cloud.metastore.v1.DataprocMetastoreFederation.CreateFederation
   */
  createFederation: {
    methodKind: "unary";
    input: typeof CreateFederationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the fields of a federation.
   *
   * @generated from rpc google.cloud.metastore.v1.DataprocMetastoreFederation.UpdateFederation
   */
  updateFederation: {
    methodKind: "unary";
    input: typeof UpdateFederationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single federation.
   *
   * @generated from rpc google.cloud.metastore.v1.DataprocMetastoreFederation.DeleteFederation
   */
  deleteFederation: {
    methodKind: "unary";
    input: typeof DeleteFederationRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_metastore_v1_metastore_federation, 0);

