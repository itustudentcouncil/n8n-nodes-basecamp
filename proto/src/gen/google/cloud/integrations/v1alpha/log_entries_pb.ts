// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/integrations/v1alpha/log_entries.proto (package google.cloud.integrations.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { CloudLoggingDetails } from "./cloud_logging_details_pb";
import { file_google_cloud_integrations_v1alpha_cloud_logging_details } from "./cloud_logging_details_pb";
import type { EventParameter } from "./event_parameter_pb";
import { file_google_cloud_integrations_v1alpha_event_parameter } from "./event_parameter_pb";
import type { IntegrationState } from "./integration_state_pb";
import { file_google_cloud_integrations_v1alpha_integration_state } from "./integration_state_pb";
import type { TaskConfig } from "./task_config_pb";
import { file_google_cloud_integrations_v1alpha_task_config } from "./task_config_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/integrations/v1alpha/log_entries.proto.
 */
export const file_google_cloud_integrations_v1alpha_log_entries: GenFile = /*@__PURE__*/
  fileDesc("CjNnb29nbGUvY2xvdWQvaW50ZWdyYXRpb25zL3YxYWxwaGEvbG9nX2VudHJpZXMucHJvdG8SIWdvb2dsZS5jbG91ZC5pbnRlZ3JhdGlvbnMudjFhbHBoYSKFCgoNRXhlY3V0aW9uSW5mbxITCgtpbnRlZ3JhdGlvbhgCIAEoCRISCgpwcm9qZWN0X2lkGAQgASgJEhIKCnRyaWdnZXJfaWQYBSABKAkSWwoOcmVxdWVzdF9wYXJhbXMYBiADKAsyQy5nb29nbGUuY2xvdWQuaW50ZWdyYXRpb25zLnYxYWxwaGEuRXhlY3V0aW9uSW5mby5SZXF1ZXN0UGFyYW1zRW50cnkSXQoPcmVzcG9uc2VfcGFyYW1zGAcgAygLMkQuZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhLkV4ZWN1dGlvbkluZm8uUmVzcG9uc2VQYXJhbXNFbnRyeRI+CgZlcnJvcnMYCiADKAsyLi5nb29nbGUuY2xvdWQuaW50ZWdyYXRpb25zLnYxYWxwaGEuRXJyb3JEZXRhaWwSQwoMdGFza19jb25maWdzGA0gAygLMi0uZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhLlRhc2tDb25maWcSIgoaaW50ZWdyYXRpb25fdmVyc2lvbl9udW1iZXIYDiABKAkSFAoMZXhlY3V0aW9uX2lkGA8gASgJElsKGWludGVncmF0aW9uX3ZlcnNpb25fc3RhdGUYECABKA4yMy5nb29nbGUuY2xvdWQuaW50ZWdyYXRpb25zLnYxYWxwaGEuSW50ZWdyYXRpb25TdGF0ZUID4EEDEiMKG2VuYWJsZV9kYXRhYmFzZV9wZXJzaXN0ZW5jZRgRIAEoCBJVChVjbG91ZF9sb2dnaW5nX2RldGFpbHMYEiABKAsyNi5nb29nbGUuY2xvdWQuaW50ZWdyYXRpb25zLnYxYWxwaGEuQ2xvdWRMb2dnaW5nRGV0YWlscxJlCh1pbnRlZ3JhdGlvbl9leGVjdXRpb25fZGV0YWlscxgTIAEoCzI+Lmdvb2dsZS5jbG91ZC5pbnRlZ3JhdGlvbnMudjFhbHBoYS5JbnRlZ3JhdGlvbkV4ZWN1dGlvbkRldGFpbHMSSAoOZXhlY3V0aW9uX3R5cGUYFCABKA4yMC5nb29nbGUuY2xvdWQuaW50ZWdyYXRpb25zLnYxYWxwaGEuRXhlY3V0aW9uVHlwZRJaChBleGVjdXRpb25fbWV0aG9kGBUgASgOMkAuZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhLkV4ZWN1dGlvbkluZm8uRXhlY3V0aW9uTWV0aG9kEiMKG2ludGVncmF0aW9uX3NuYXBzaG90X251bWJlchgWIAEoAxpnChJSZXF1ZXN0UGFyYW1zRW50cnkSCwoDa2V5GAEgASgJEkAKBXZhbHVlGAIgASgLMjEuZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhLkV2ZW50UGFyYW1ldGVyOgI4ARpoChNSZXNwb25zZVBhcmFtc0VudHJ5EgsKA2tleRgBIAEoCRJACgV2YWx1ZRgCIAEoCzIxLmdvb2dsZS5jbG91ZC5pbnRlZ3JhdGlvbnMudjFhbHBoYS5FdmVudFBhcmFtZXRlcjoCOAEiXgoPRXhlY3V0aW9uTWV0aG9kEiAKHEVYRUNVVElPTl9NRVRIT0RfVU5TUEVDSUZJRUQQABIICgRQT1NUEAESDAoIU0NIRURVTEUQAhIRCg1QT1NUX1RPX1FVRVVFEAMi6wQKG0ludGVncmF0aW9uRXhlY3V0aW9uRGV0YWlscxKCAQobaW50ZWdyYXRpb25fZXhlY3V0aW9uX3N0YXRlGAEgASgOMlguZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhLkludGVncmF0aW9uRXhlY3V0aW9uRGV0YWlscy5JbnRlZ3JhdGlvbkV4ZWN1dGlvblN0YXRlQgPgQQMSZwoeaW50ZWdyYXRpb25fZXhlY3V0aW9uX3NuYXBzaG90GAIgAygLMj8uZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhLkludGVncmF0aW9uRXhlY3V0aW9uU25hcHNob3QSUAoXZXhlY3V0aW9uX2F0dGVtcHRfc3RhdHMYAyADKAsyLy5nb29nbGUuY2xvdWQuaW50ZWdyYXRpb25zLnYxYWxwaGEuQXR0ZW1wdFN0YXRzEjcKE25leHRfZXhlY3V0aW9uX3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEh8KF2V4ZWN1dGlvbl9yZXRyaWVzX2NvdW50GAUgASgFIrEBChlJbnRlZ3JhdGlvbkV4ZWN1dGlvblN0YXRlEisKJ0lOVEVHUkFUSU9OX0VYRUNVVElPTl9TVEFURV9VTlNQRUNJRklFRBAAEgsKB09OX0hPTEQQARIOCgpJTl9QUk9DRVNTEAISDQoJU1VDQ0VFREVEEAMSCgoGRkFJTEVEEAQSDQoJQ0FOQ0VMTEVEEAUSEQoNUkVUUllfT05fSE9MRBAGEg0KCVNVU1BFTkRFRBAHIokHChxJbnRlZ3JhdGlvbkV4ZWN1dGlvblNuYXBzaG90Eh4KFmNoZWNrcG9pbnRfdGFza19udW1iZXIYASABKAkSMQoNc25hcHNob3RfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASlQEKJ2ludGVncmF0aW9uX2V4ZWN1dGlvbl9zbmFwc2hvdF9tZXRhZGF0YRgDIAEoCzJkLmdvb2dsZS5jbG91ZC5pbnRlZ3JhdGlvbnMudjFhbHBoYS5JbnRlZ3JhdGlvbkV4ZWN1dGlvblNuYXBzaG90LkludGVncmF0aW9uRXhlY3V0aW9uU25hcHNob3RNZXRhZGF0YRJXChZ0YXNrX2V4ZWN1dGlvbl9kZXRhaWxzGAQgAygLMjcuZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhLlRhc2tFeGVjdXRpb25EZXRhaWxzEk0KEWNvbmRpdGlvbl9yZXN1bHRzGAUgAygLMjIuZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhLkNvbmRpdGlvblJlc3VsdBJuChBleGVjdXRpb25fcGFyYW1zGAYgAygLMlQuZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhLkludGVncmF0aW9uRXhlY3V0aW9uU25hcHNob3QuRXhlY3V0aW9uUGFyYW1zRW50cnka+gEKJEludGVncmF0aW9uRXhlY3V0aW9uU25hcHNob3RNZXRhZGF0YRITCgt0YXNrX251bWJlchgBIAEoCRIMCgR0YXNrGAIgASgJEikKIWludGVncmF0aW9uX2V4ZWN1dGlvbl9hdHRlbXB0X251bRgDIAEoBRIYChB0YXNrX2F0dGVtcHRfbnVtGAQgASgFEhIKCnRhc2tfbGFiZWwYBSABKAkSHQoVYW5jZXN0b3JfdGFza19udW1iZXJzGAYgAygJEiIKGmFuY2VzdG9yX2l0ZXJhdGlvbl9udW1iZXJzGAcgAygJEhMKC2ludGVncmF0aW9uGAggASgJGmkKFEV4ZWN1dGlvblBhcmFtc0VudHJ5EgsKA2tleRgBIAEoCRJACgV2YWx1ZRgCIAEoCzIxLmdvb2dsZS5jbG91ZC5pbnRlZ3JhdGlvbnMudjFhbHBoYS5FdmVudFBhcmFtZXRlcjoCOAEi5wMKFFRhc2tFeGVjdXRpb25EZXRhaWxzEhMKC3Rhc2tfbnVtYmVyGAEgASgJEmgKFHRhc2tfZXhlY3V0aW9uX3N0YXRlGAIgASgOMkouZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhLlRhc2tFeGVjdXRpb25EZXRhaWxzLlRhc2tFeGVjdXRpb25TdGF0ZRJLChJ0YXNrX2F0dGVtcHRfc3RhdHMYAyADKAsyLy5nb29nbGUuY2xvdWQuaW50ZWdyYXRpb25zLnYxYWxwaGEuQXR0ZW1wdFN0YXRzIoICChJUYXNrRXhlY3V0aW9uU3RhdGUSJAogVEFTS19FWEVDVVRJT05fU1RBVEVfVU5TUEVDSUZJRUQQABIVChFQRU5ESU5HX0VYRUNVVElPThABEg4KCklOX1BST0NFU1MQAhILCgdTVUNDRUVEEAMSCgoGRkFJTEVEEAQSCQoFRkFUQUwQBRIRCg1SRVRSWV9PTl9IT0xEEAYSCwoHU0tJUFBFRBAHEg0KCUNBTkNFTExFRBAIEhQKEFBFTkRJTkdfUk9MTEJBQ0sQCRIXChNST0xMQkFDS19JTl9QUk9DRVNTEAoSDgoKUk9MTEVEQkFDSxALEg0KCVNVU1BFTkRFRBAMImwKDEF0dGVtcHRTdGF0cxIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiOQoLRXJyb3JEZXRhaWwSFQoNZXJyb3JfbWVzc2FnZRgBIAEoCRITCgt0YXNrX251bWJlchgCIAEoBSJYCg9Db25kaXRpb25SZXN1bHQSGwoTY3VycmVudF90YXNrX251bWJlchgBIAEoCRIYChBuZXh0X3Rhc2tfbnVtYmVyGAIgASgJEg4KBnJlc3VsdBgDIAEoCCpXCg1FeGVjdXRpb25UeXBlEh4KGkVYRUNVVElPTl9UWVBFX1VOU1BFQ0lGSUVEEAASFwoTSU5URUdSQVRJT05fVkVSU0lPThABEg0KCVRFU1RfQ0FTRRACQqkBCiVjb20uZ29vZ2xlLmNsb3VkLmludGVncmF0aW9ucy52MWFscGhhQg9Mb2dFbnRyaWVzUHJvdG9QAVpJY2xvdWQuZ29vZ2xlLmNvbS9nby9pbnRlZ3JhdGlvbnMvYXBpdjFhbHBoYS9pbnRlZ3JhdGlvbnNwYjtpbnRlZ3JhdGlvbnNwYqoCIUdvb2dsZS5DbG91ZC5JbnRlZ3JhdGlvbnMuVjFBbHBoYWIGcHJvdG8z", [file_google_api_field_behavior, file_google_cloud_integrations_v1alpha_cloud_logging_details, file_google_cloud_integrations_v1alpha_event_parameter, file_google_cloud_integrations_v1alpha_integration_state, file_google_cloud_integrations_v1alpha_task_config, file_google_protobuf_timestamp]);

/**
 * Log entry to log execution info for the monitored resource
 * `integrations.googleapis.com/IntegrationVersion`.
 *
 * @generated from message google.cloud.integrations.v1alpha.ExecutionInfo
 */
export type ExecutionInfo = Message<"google.cloud.integrations.v1alpha.ExecutionInfo"> & {
  /**
   * Name of the integration.
   *
   * @generated from field: string integration = 2;
   */
  integration: string;

  /**
   * The customer's project number.
   *
   * @generated from field: string project_id = 4;
   */
  projectId: string;

  /**
   * The trigger id of the integration trigger config. If both trigger_id
   * and client_id is present, the integration is executed from the start tasks
   * provided by the matching trigger config otherwise it is executed from the
   * default start tasks.
   *
   * @generated from field: string trigger_id = 5;
   */
  triggerId: string;

  /**
   * Execution parameters come in as part of the request.
   *
   * @generated from field: map<string, google.cloud.integrations.v1alpha.EventParameter> request_params = 6;
   */
  requestParams: { [key: string]: EventParameter };

  /**
   * Execution parameters come out as part of the response.
   *
   * @generated from field: map<string, google.cloud.integrations.v1alpha.EventParameter> response_params = 7;
   */
  responseParams: { [key: string]: EventParameter };

  /**
   * Errors, warnings, and informationals associated with the workflow/task.
   * The order in which the errors were added by the workflow/task is
   * maintained.
   *
   * @generated from field: repeated google.cloud.integrations.v1alpha.ErrorDetail errors = 10;
   */
  errors: ErrorDetail[];

  /**
   * The configuration details for a task.
   *
   * @generated from field: repeated google.cloud.integrations.v1alpha.TaskConfig task_configs = 13;
   */
  taskConfigs: TaskConfig[];

  /**
   * Pointer to the active version it is executing.
   *
   * @generated from field: string integration_version_number = 14;
   */
  integrationVersionNumber: string;

  /**
   * Auto-generated primary key.
   *
   * @generated from field: string execution_id = 15;
   */
  executionId: string;

  /**
   * Output only. State of the integration version
   *
   * @generated from field: google.cloud.integrations.v1alpha.IntegrationState integration_version_state = 16;
   */
  integrationVersionState: IntegrationState;

  /**
   * Database persistence policy for execution info
   *
   * @generated from field: bool enable_database_persistence = 17;
   */
  enableDatabasePersistence: boolean;

  /**
   * Cloud Logging details for execution info
   *
   * @generated from field: google.cloud.integrations.v1alpha.CloudLoggingDetails cloud_logging_details = 18;
   */
  cloudLoggingDetails?: CloudLoggingDetails;

  /**
   * The details about this integration execution.
   *
   * @generated from field: google.cloud.integrations.v1alpha.IntegrationExecutionDetails integration_execution_details = 19;
   */
  integrationExecutionDetails?: IntegrationExecutionDetails;

  /**
   * Specifies whether this execution info corresponds to actual integration or
   * test case.
   *
   * @generated from field: google.cloud.integrations.v1alpha.ExecutionType execution_type = 20;
   */
  executionType: ExecutionType;

  /**
   * The ways user posts this event.
   *
   * @generated from field: google.cloud.integrations.v1alpha.ExecutionInfo.ExecutionMethod execution_method = 21;
   */
  executionMethod: ExecutionInfo_ExecutionMethod;

  /**
   * An increasing sequence that is set when a new snapshot (Integration
   * Version) is created.
   *
   * @generated from field: int64 integration_snapshot_number = 22;
   */
  integrationSnapshotNumber: bigint;
};

/**
 * Describes the message google.cloud.integrations.v1alpha.ExecutionInfo.
 * Use `create(ExecutionInfoSchema)` to create a new message.
 */
export const ExecutionInfoSchema: GenMessage<ExecutionInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_integrations_v1alpha_log_entries, 0);

/**
 * ExecutionMethod Enum
 *
 * @generated from enum google.cloud.integrations.v1alpha.ExecutionInfo.ExecutionMethod
 */
export enum ExecutionInfo_ExecutionMethod {
  /**
   * Default value.
   *
   * @generated from enum value: EXECUTION_METHOD_UNSPECIFIED = 0;
   */
  EXECUTION_METHOD_UNSPECIFIED = 0,

  /**
   * Sync post.
   *
   * @generated from enum value: POST = 1;
   */
  POST = 1,

  /**
   * Async post with schedule time.
   *
   * @generated from enum value: SCHEDULE = 2;
   */
  SCHEDULE = 2,

  /**
   * Async post.
   *
   * @generated from enum value: POST_TO_QUEUE = 3;
   */
  POST_TO_QUEUE = 3,
}

/**
 * Describes the enum google.cloud.integrations.v1alpha.ExecutionInfo.ExecutionMethod.
 */
export const ExecutionInfo_ExecutionMethodSchema: GenEnum<ExecutionInfo_ExecutionMethod> = /*@__PURE__*/
  enumDesc(file_google_cloud_integrations_v1alpha_log_entries, 0, 0);

/**
 * Contains the details of the execution info: this includes the tasks execution
 * details plus the integration execution statistics.
 *
 * @generated from message google.cloud.integrations.v1alpha.IntegrationExecutionDetails
 */
export type IntegrationExecutionDetails = Message<"google.cloud.integrations.v1alpha.IntegrationExecutionDetails"> & {
  /**
   * Output only. The execution state of this Integration.
   *
   * @generated from field: google.cloud.integrations.v1alpha.IntegrationExecutionDetails.IntegrationExecutionState integration_execution_state = 1;
   */
  integrationExecutionState: IntegrationExecutionDetails_IntegrationExecutionState;

  /**
   * Execution snapshot.
   *
   * @generated from field: repeated google.cloud.integrations.v1alpha.IntegrationExecutionSnapshot integration_execution_snapshot = 2;
   */
  integrationExecutionSnapshot: IntegrationExecutionSnapshot[];

  /**
   * Status for the current execution attempt.
   *
   * @generated from field: repeated google.cloud.integrations.v1alpha.AttemptStats execution_attempt_stats = 3;
   */
  executionAttemptStats: AttemptStats[];

  /**
   * Next scheduled execution time in case the execution status was
   * RETRY_ON_HOLD.
   *
   * @generated from field: google.protobuf.Timestamp next_execution_time = 4;
   */
  nextExecutionTime?: Timestamp;

  /**
   * Indicates the number of times the execution has restarted from the
   * beginning.
   *
   * @generated from field: int32 execution_retries_count = 5;
   */
  executionRetriesCount: number;
};

/**
 * Describes the message google.cloud.integrations.v1alpha.IntegrationExecutionDetails.
 * Use `create(IntegrationExecutionDetailsSchema)` to create a new message.
 */
export const IntegrationExecutionDetailsSchema: GenMessage<IntegrationExecutionDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_integrations_v1alpha_log_entries, 1);

/**
 * Enum ExecutionState.
 *
 * @generated from enum google.cloud.integrations.v1alpha.IntegrationExecutionDetails.IntegrationExecutionState
 */
export enum IntegrationExecutionDetails_IntegrationExecutionState {
  /**
   * Default value.
   *
   * @generated from enum value: INTEGRATION_EXECUTION_STATE_UNSPECIFIED = 0;
   */
  INTEGRATION_EXECUTION_STATE_UNSPECIFIED = 0,

  /**
   * Integration is received and waiting for the execution. This happens when
   * firing the Integration via "postToQueue" or "schedule".
   *
   * @generated from enum value: ON_HOLD = 1;
   */
  ON_HOLD = 1,

  /**
   * Integration is under processing.
   *
   * @generated from enum value: IN_PROCESS = 2;
   */
  IN_PROCESS = 2,

  /**
   * Integration execution successfully finished. There's no more change after
   * this state.
   *
   * @generated from enum value: SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * Integration execution failed. There's no more change after this state.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * Integration execution canceled by user. There's no more change after this
   * state.
   *
   * @generated from enum value: CANCELLED = 5;
   */
  CANCELLED = 5,

  /**
   * Integration execution failed and waiting for retry.
   *
   * @generated from enum value: RETRY_ON_HOLD = 6;
   */
  RETRY_ON_HOLD = 6,

  /**
   * Integration execution suspended and waiting for manual intervention.
   *
   * @generated from enum value: SUSPENDED = 7;
   */
  SUSPENDED = 7,
}

/**
 * Describes the enum google.cloud.integrations.v1alpha.IntegrationExecutionDetails.IntegrationExecutionState.
 */
export const IntegrationExecutionDetails_IntegrationExecutionStateSchema: GenEnum<IntegrationExecutionDetails_IntegrationExecutionState> = /*@__PURE__*/
  enumDesc(file_google_cloud_integrations_v1alpha_log_entries, 1, 0);

/**
 * Contains the snapshot of the integration execution for a given checkpoint.
 *
 * @generated from message google.cloud.integrations.v1alpha.IntegrationExecutionSnapshot
 */
export type IntegrationExecutionSnapshot = Message<"google.cloud.integrations.v1alpha.IntegrationExecutionSnapshot"> & {
  /**
   * Indicates "right after which checkpoint task's execution" this snapshot
   * is taken.
   *
   * @generated from field: string checkpoint_task_number = 1;
   */
  checkpointTaskNumber: string;

  /**
   * Indicates when this snapshot is taken.
   *
   * @generated from field: google.protobuf.Timestamp snapshot_time = 2;
   */
  snapshotTime?: Timestamp;

  /**
   * Snapshot metadata.
   *
   * @generated from field: google.cloud.integrations.v1alpha.IntegrationExecutionSnapshot.IntegrationExecutionSnapshotMetadata integration_execution_snapshot_metadata = 3;
   */
  integrationExecutionSnapshotMetadata?: IntegrationExecutionSnapshot_IntegrationExecutionSnapshotMetadata;

  /**
   * All of the task execution details at the given point of time.
   *
   * @generated from field: repeated google.cloud.integrations.v1alpha.TaskExecutionDetails task_execution_details = 4;
   */
  taskExecutionDetails: TaskExecutionDetails[];

  /**
   * All of the computed conditions that been calculated.
   *
   * @generated from field: repeated google.cloud.integrations.v1alpha.ConditionResult condition_results = 5;
   */
  conditionResults: ConditionResult[];

  /**
   * The parameters in Event object.
   *
   * @generated from field: map<string, google.cloud.integrations.v1alpha.EventParameter> execution_params = 6;
   */
  executionParams: { [key: string]: EventParameter };
};

/**
 * Describes the message google.cloud.integrations.v1alpha.IntegrationExecutionSnapshot.
 * Use `create(IntegrationExecutionSnapshotSchema)` to create a new message.
 */
export const IntegrationExecutionSnapshotSchema: GenMessage<IntegrationExecutionSnapshot> = /*@__PURE__*/
  messageDesc(file_google_cloud_integrations_v1alpha_log_entries, 2);

/**
 * Metadata for the integration/task retry.
 *
 * @generated from message google.cloud.integrations.v1alpha.IntegrationExecutionSnapshot.IntegrationExecutionSnapshotMetadata
 */
export type IntegrationExecutionSnapshot_IntegrationExecutionSnapshotMetadata = Message<"google.cloud.integrations.v1alpha.IntegrationExecutionSnapshot.IntegrationExecutionSnapshotMetadata"> & {
  /**
   * The task number associated with this snapshot. Could be empty.
   *
   * @generated from field: string task_number = 1;
   */
  taskNumber: string;

  /**
   * the task name associated with this snapshot. Could be empty.
   *
   * @generated from field: string task = 2;
   */
  task: string;

  /**
   * the integration execution attempt number this snapshot belongs to.
   *
   * @generated from field: int32 integration_execution_attempt_num = 3;
   */
  integrationExecutionAttemptNum: number;

  /**
   * the task attempt number this snapshot belongs to. Could be empty.
   *
   * @generated from field: int32 task_attempt_num = 4;
   */
  taskAttemptNum: number;

  /**
   * the task label associated with this snapshot. Could be empty.
   *
   * @generated from field: string task_label = 5;
   */
  taskLabel: string;

  /**
   * Ancestor task number for the task(it will only be non-empty if the task
   * is under 'private workflow')
   *
   * @generated from field: repeated string ancestor_task_numbers = 6;
   */
  ancestorTaskNumbers: string[];

  /**
   * Ancestor iteration number for the task(it will only be non-empty if the
   * task is under 'private workflow')
   *
   * @generated from field: repeated string ancestor_iteration_numbers = 7;
   */
  ancestorIterationNumbers: string[];

  /**
   * The direct integration which the event execution snapshots belongs to
   *
   * @generated from field: string integration = 8;
   */
  integration: string;
};

/**
 * Describes the message google.cloud.integrations.v1alpha.IntegrationExecutionSnapshot.IntegrationExecutionSnapshotMetadata.
 * Use `create(IntegrationExecutionSnapshot_IntegrationExecutionSnapshotMetadataSchema)` to create a new message.
 */
export const IntegrationExecutionSnapshot_IntegrationExecutionSnapshotMetadataSchema: GenMessage<IntegrationExecutionSnapshot_IntegrationExecutionSnapshotMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_integrations_v1alpha_log_entries, 2, 0);

/**
 * Contains the details of the execution of this task.
 *
 * @generated from message google.cloud.integrations.v1alpha.TaskExecutionDetails
 */
export type TaskExecutionDetails = Message<"google.cloud.integrations.v1alpha.TaskExecutionDetails"> & {
  /**
   * Pointer to the task config it used for execution.
   *
   * @generated from field: string task_number = 1;
   */
  taskNumber: string;

  /**
   * The execution state of this task.
   *
   * @generated from field: google.cloud.integrations.v1alpha.TaskExecutionDetails.TaskExecutionState task_execution_state = 2;
   */
  taskExecutionState: TaskExecutionDetails_TaskExecutionState;

  /**
   * Status for the current task execution attempt.
   *
   * @generated from field: repeated google.cloud.integrations.v1alpha.AttemptStats task_attempt_stats = 3;
   */
  taskAttemptStats: AttemptStats[];
};

/**
 * Describes the message google.cloud.integrations.v1alpha.TaskExecutionDetails.
 * Use `create(TaskExecutionDetailsSchema)` to create a new message.
 */
export const TaskExecutionDetailsSchema: GenMessage<TaskExecutionDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_integrations_v1alpha_log_entries, 3);

/**
 * Enum TaskExecutionState.
 *
 * @generated from enum google.cloud.integrations.v1alpha.TaskExecutionDetails.TaskExecutionState
 */
export enum TaskExecutionDetails_TaskExecutionState {
  /**
   * Default value.
   *
   * @generated from enum value: TASK_EXECUTION_STATE_UNSPECIFIED = 0;
   */
  TASK_EXECUTION_STATE_UNSPECIFIED = 0,

  /**
   * Task is waiting for its precondition tasks to finish to start the
   * execution.
   *
   * @generated from enum value: PENDING_EXECUTION = 1;
   */
  PENDING_EXECUTION = 1,

  /**
   * Task is under processing.
   *
   * @generated from enum value: IN_PROCESS = 2;
   */
  IN_PROCESS = 2,

  /**
   * Task execution successfully finished. There's no more change after
   * this state.
   *
   * @generated from enum value: SUCCEED = 3;
   */
  SUCCEED = 3,

  /**
   * Task execution failed. There's no more change after this state.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * Task execution failed and cause the whole integration execution to fail
   * immediately. There's no more change after this state.
   *
   * @generated from enum value: FATAL = 5;
   */
  FATAL = 5,

  /**
   * Task execution failed and waiting for retry.
   *
   * @generated from enum value: RETRY_ON_HOLD = 6;
   */
  RETRY_ON_HOLD = 6,

  /**
   * Task execution skipped. This happens when its precondition wasn't met,
   * or the integration execution been canceled before reach to the task.
   * There's no more changes after this state.
   *
   * @generated from enum value: SKIPPED = 7;
   */
  SKIPPED = 7,

  /**
   * Task execution canceled when in progress. This happens when integration
   * execution been canceled or any other task fall in fatal state.
   *
   * @generated from enum value: CANCELLED = 8;
   */
  CANCELLED = 8,

  /**
   * Task is waiting for its dependency tasks' rollback to finish to start
   * its rollback.
   *
   * @generated from enum value: PENDING_ROLLBACK = 9;
   */
  PENDING_ROLLBACK = 9,

  /**
   * Task is rolling back.
   *
   * @generated from enum value: ROLLBACK_IN_PROCESS = 10;
   */
  ROLLBACK_IN_PROCESS = 10,

  /**
   * Task is rolled back. This is the state we will set regardless of
   * rollback succeeding or failing.
   *
   * @generated from enum value: ROLLEDBACK = 11;
   */
  ROLLEDBACK = 11,

  /**
   * Task is a SuspensionTask which has executed once, creating a pending
   * suspension.
   *
   * @generated from enum value: SUSPENDED = 12;
   */
  SUSPENDED = 12,
}

/**
 * Describes the enum google.cloud.integrations.v1alpha.TaskExecutionDetails.TaskExecutionState.
 */
export const TaskExecutionDetails_TaskExecutionStateSchema: GenEnum<TaskExecutionDetails_TaskExecutionState> = /*@__PURE__*/
  enumDesc(file_google_cloud_integrations_v1alpha_log_entries, 3, 0);

/**
 * Status for the execution attempt.
 *
 * @generated from message google.cloud.integrations.v1alpha.AttemptStats
 */
export type AttemptStats = Message<"google.cloud.integrations.v1alpha.AttemptStats"> & {
  /**
   * The start time of the integration execution for current attempt. This could
   * be in the future if it's been scheduled.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The end time of the integration execution for current attempt.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.integrations.v1alpha.AttemptStats.
 * Use `create(AttemptStatsSchema)` to create a new message.
 */
export const AttemptStatsSchema: GenMessage<AttemptStats> = /*@__PURE__*/
  messageDesc(file_google_cloud_integrations_v1alpha_log_entries, 4);

/**
 * An error, warning, or information message associated with an integration.
 *
 * @generated from message google.cloud.integrations.v1alpha.ErrorDetail
 */
export type ErrorDetail = Message<"google.cloud.integrations.v1alpha.ErrorDetail"> & {
  /**
   * The full text of the error message, including any parameters that were
   * thrown along with the exception.
   *
   * @generated from field: string error_message = 1;
   */
  errorMessage: string;

  /**
   * The task try-number, in which, the error occurred.  If zero, the error
   * happened at the integration level.
   *
   * @generated from field: int32 task_number = 2;
   */
  taskNumber: number;
};

/**
 * Describes the message google.cloud.integrations.v1alpha.ErrorDetail.
 * Use `create(ErrorDetailSchema)` to create a new message.
 */
export const ErrorDetailSchema: GenMessage<ErrorDetail> = /*@__PURE__*/
  messageDesc(file_google_cloud_integrations_v1alpha_log_entries, 5);

/**
 * Contains the combined condition calculation results.
 *
 * @generated from message google.cloud.integrations.v1alpha.ConditionResult
 */
export type ConditionResult = Message<"google.cloud.integrations.v1alpha.ConditionResult"> & {
  /**
   * the current task number.
   *
   * @generated from field: string current_task_number = 1;
   */
  currentTaskNumber: string;

  /**
   * the next task number.
   *
   * @generated from field: string next_task_number = 2;
   */
  nextTaskNumber: string;

  /**
   * the result comes out after evaluate the combined condition. True if there's
   * no combined condition specified.
   *
   * @generated from field: bool result = 3;
   */
  result: boolean;
};

/**
 * Describes the message google.cloud.integrations.v1alpha.ConditionResult.
 * Use `create(ConditionResultSchema)` to create a new message.
 */
export const ConditionResultSchema: GenMessage<ConditionResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_integrations_v1alpha_log_entries, 6);

/**
 * Specifies whether this execution info corresponds to actual integration or
 * test case.
 *
 * @generated from enum google.cloud.integrations.v1alpha.ExecutionType
 */
export enum ExecutionType {
  /**
   * Unspecified value.
   *
   * @generated from enum value: EXECUTION_TYPE_UNSPECIFIED = 0;
   */
  EXECUTION_TYPE_UNSPECIFIED = 0,

  /**
   * Execution corresponds to run of an integration version.
   *
   * @generated from enum value: INTEGRATION_VERSION = 1;
   */
  INTEGRATION_VERSION = 1,

  /**
   * Execution corresponds to run of a functional test case.
   *
   * @generated from enum value: TEST_CASE = 2;
   */
  TEST_CASE = 2,
}

/**
 * Describes the enum google.cloud.integrations.v1alpha.ExecutionType.
 */
export const ExecutionTypeSchema: GenEnum<ExecutionType> = /*@__PURE__*/
  enumDesc(file_google_cloud_integrations_v1alpha_log_entries, 0);

