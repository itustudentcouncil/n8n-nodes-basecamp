// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/speech/v1p1beta1/resource.proto (package google.cloud.speech.v1p1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/speech/v1p1beta1/resource.proto.
 */
export const file_google_cloud_speech_v1p1beta1_resource: GenFile = /*@__PURE__*/
  fileDesc("Cixnb29nbGUvY2xvdWQvc3BlZWNoL3YxcDFiZXRhMS9yZXNvdXJjZS5wcm90bxIdZ29vZ2xlLmNsb3VkLnNwZWVjaC52MXAxYmV0YTEigwIKC0N1c3RvbUNsYXNzEgwKBG5hbWUYASABKAkSFwoPY3VzdG9tX2NsYXNzX2lkGAIgASgJEkMKBWl0ZW1zGAMgAygLMjQuZ29vZ2xlLmNsb3VkLnNwZWVjaC52MXAxYmV0YTEuQ3VzdG9tQ2xhc3MuQ2xhc3NJdGVtGhoKCUNsYXNzSXRlbRINCgV2YWx1ZRgBIAEoCTps6kFpCiFzcGVlY2guZ29vZ2xlYXBpcy5jb20vQ3VzdG9tQ2xhc3MSRHByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9jdXN0b21DbGFzc2VzL3tjdXN0b21fY2xhc3N9IvkBCglQaHJhc2VTZXQSDAoEbmFtZRgBIAEoCRJACgdwaHJhc2VzGAIgAygLMi8uZ29vZ2xlLmNsb3VkLnNwZWVjaC52MXAxYmV0YTEuUGhyYXNlU2V0LlBocmFzZRINCgVib29zdBgEIAEoAhomCgZQaHJhc2USDQoFdmFsdWUYASABKAkSDQoFYm9vc3QYAiABKAI6ZepBYgofc3BlZWNoLmdvb2dsZWFwaXMuY29tL1BocmFzZVNldBI/cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3BocmFzZVNldHMve3BocmFzZV9zZXR9ItICChBTcGVlY2hBZGFwdGF0aW9uEj0KC3BocmFzZV9zZXRzGAEgAygLMiguZ29vZ2xlLmNsb3VkLnNwZWVjaC52MXAxYmV0YTEuUGhyYXNlU2V0EkMKFXBocmFzZV9zZXRfcmVmZXJlbmNlcxgCIAMoCUIk+kEhCh9zcGVlY2guZ29vZ2xlYXBpcy5jb20vUGhyYXNlU2V0EkIKDmN1c3RvbV9jbGFzc2VzGAMgAygLMiouZ29vZ2xlLmNsb3VkLnNwZWVjaC52MXAxYmV0YTEuQ3VzdG9tQ2xhc3MSUQoMYWJuZl9ncmFtbWFyGAQgASgLMjsuZ29vZ2xlLmNsb3VkLnNwZWVjaC52MXAxYmV0YTEuU3BlZWNoQWRhcHRhdGlvbi5BQk5GR3JhbW1hchojCgtBQk5GR3JhbW1hchIUCgxhYm5mX3N0cmluZ3MYASADKAkiqgEKF1RyYW5zY3JpcHROb3JtYWxpemF0aW9uEk0KB2VudHJpZXMYASADKAsyPC5nb29nbGUuY2xvdWQuc3BlZWNoLnYxcDFiZXRhMS5UcmFuc2NyaXB0Tm9ybWFsaXphdGlvbi5FbnRyeRpACgVFbnRyeRIOCgZzZWFyY2gYASABKAkSDwoHcmVwbGFjZRgCIAEoCRIWCg5jYXNlX3NlbnNpdGl2ZRgDIAEoCEJ+CiFjb20uZ29vZ2xlLmNsb3VkLnNwZWVjaC52MXAxYmV0YTFCE1NwZWVjaFJlc291cmNlUHJvdG9QAVo5Y2xvdWQuZ29vZ2xlLmNvbS9nby9zcGVlY2gvYXBpdjFwMWJldGExL3NwZWVjaHBiO3NwZWVjaHBi+AEBogIDR0NTYgZwcm90bzM", [file_google_api_resource]);

/**
 * A set of words or phrases that represents a common concept likely to appear
 * in your audio, for example a list of passenger ship names. CustomClass items
 * can be substituted into placeholders that you set in PhraseSet phrases.
 *
 * @generated from message google.cloud.speech.v1p1beta1.CustomClass
 */
export type CustomClass = Message<"google.cloud.speech.v1p1beta1.CustomClass"> & {
  /**
   * The resource name of the custom class.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If this custom class is a resource, the custom_class_id is the resource id
   * of the CustomClass. Case sensitive.
   *
   * @generated from field: string custom_class_id = 2;
   */
  customClassId: string;

  /**
   * A collection of class items.
   *
   * @generated from field: repeated google.cloud.speech.v1p1beta1.CustomClass.ClassItem items = 3;
   */
  items: CustomClass_ClassItem[];
};

/**
 * Describes the message google.cloud.speech.v1p1beta1.CustomClass.
 * Use `create(CustomClassSchema)` to create a new message.
 */
export const CustomClassSchema: GenMessage<CustomClass> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v1p1beta1_resource, 0);

/**
 * An item of the class.
 *
 * @generated from message google.cloud.speech.v1p1beta1.CustomClass.ClassItem
 */
export type CustomClass_ClassItem = Message<"google.cloud.speech.v1p1beta1.CustomClass.ClassItem"> & {
  /**
   * The class item's value.
   *
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message google.cloud.speech.v1p1beta1.CustomClass.ClassItem.
 * Use `create(CustomClass_ClassItemSchema)` to create a new message.
 */
export const CustomClass_ClassItemSchema: GenMessage<CustomClass_ClassItem> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v1p1beta1_resource, 0, 0);

/**
 * Provides "hints" to the speech recognizer to favor specific words and phrases
 * in the results.
 *
 * @generated from message google.cloud.speech.v1p1beta1.PhraseSet
 */
export type PhraseSet = Message<"google.cloud.speech.v1p1beta1.PhraseSet"> & {
  /**
   * The resource name of the phrase set.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A list of word and phrases.
   *
   * @generated from field: repeated google.cloud.speech.v1p1beta1.PhraseSet.Phrase phrases = 2;
   */
  phrases: PhraseSet_Phrase[];

  /**
   * Hint Boost. Positive value will increase the probability that a specific
   * phrase will be recognized over other similar sounding phrases. The higher
   * the boost, the higher the chance of false positive recognition as well.
   * Negative boost values would correspond to anti-biasing. Anti-biasing is not
   * enabled, so negative boost will simply be ignored. Though `boost` can
   * accept a wide range of positive values, most use cases are best served with
   * values between 0 (exclusive) and 20. We recommend using a binary search
   * approach to finding the optimal value for your use case as well as adding
   * phrases both with and without boost to your requests.
   *
   * @generated from field: float boost = 4;
   */
  boost: number;
};

/**
 * Describes the message google.cloud.speech.v1p1beta1.PhraseSet.
 * Use `create(PhraseSetSchema)` to create a new message.
 */
export const PhraseSetSchema: GenMessage<PhraseSet> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v1p1beta1_resource, 1);

/**
 * A phrases containing words and phrase "hints" so that
 * the speech recognition is more likely to recognize them. This can be used
 * to improve the accuracy for specific words and phrases, for example, if
 * specific commands are typically spoken by the user. This can also be used
 * to add additional words to the vocabulary of the recognizer. See
 * [usage limits](https://cloud.google.com/speech-to-text/quotas#content).
 *
 * List items can also include pre-built or custom classes containing groups
 * of words that represent common concepts that occur in natural language. For
 * example, rather than providing a phrase hint for every month of the
 * year (e.g. "i was born in january", "i was born in febuary", ...), use the
 * pre-built `$MONTH` class improves the likelihood of correctly transcribing
 * audio that includes months (e.g. "i was born in $month").
 * To refer to pre-built classes, use the class' symbol prepended with `$`
 * e.g. `$MONTH`. To refer to custom classes that were defined inline in the
 * request, set the class's `custom_class_id` to a string unique to all class
 * resources and inline classes. Then use the class' id wrapped in $`{...}`
 * e.g. "${my-months}". To refer to custom classes resources, use the class'
 * id wrapped in `${}` (e.g. `${my-months}`).
 *
 * Speech-to-Text supports three locations: `global`, `us` (US North America),
 * and `eu` (Europe). If you are calling the `speech.googleapis.com`
 * endpoint, use the `global` location. To specify a region, use a
 * [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)
 * with matching `us` or `eu` location value.
 *
 * @generated from message google.cloud.speech.v1p1beta1.PhraseSet.Phrase
 */
export type PhraseSet_Phrase = Message<"google.cloud.speech.v1p1beta1.PhraseSet.Phrase"> & {
  /**
   * The phrase itself.
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * Hint Boost. Overrides the boost set at the phrase set level.
   * Positive value will increase the probability that a specific phrase will
   * be recognized over other similar sounding phrases. The higher the boost,
   * the higher the chance of false positive recognition as well. Negative
   * boost will simply be ignored. Though `boost` can accept a wide range of
   * positive values, most use cases are best served
   * with values between 0 and 20. We recommend using a binary search approach
   * to finding the optimal value for your use case as well as adding
   * phrases both with and without boost to your requests.
   *
   * @generated from field: float boost = 2;
   */
  boost: number;
};

/**
 * Describes the message google.cloud.speech.v1p1beta1.PhraseSet.Phrase.
 * Use `create(PhraseSet_PhraseSchema)` to create a new message.
 */
export const PhraseSet_PhraseSchema: GenMessage<PhraseSet_Phrase> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v1p1beta1_resource, 1, 0);

/**
 * Speech adaptation configuration.
 *
 * @generated from message google.cloud.speech.v1p1beta1.SpeechAdaptation
 */
export type SpeechAdaptation = Message<"google.cloud.speech.v1p1beta1.SpeechAdaptation"> & {
  /**
   * A collection of phrase sets. To specify the hints inline, leave the
   * phrase set's `name` blank and fill in the rest of its fields. Any
   * phrase set can use any custom class.
   *
   * @generated from field: repeated google.cloud.speech.v1p1beta1.PhraseSet phrase_sets = 1;
   */
  phraseSets: PhraseSet[];

  /**
   * A collection of phrase set resource names to use.
   *
   * @generated from field: repeated string phrase_set_references = 2;
   */
  phraseSetReferences: string[];

  /**
   * A collection of custom classes. To specify the classes inline, leave the
   * class' `name` blank and fill in the rest of its fields, giving it a unique
   * `custom_class_id`. Refer to the inline defined class in phrase hints by its
   * `custom_class_id`.
   *
   * @generated from field: repeated google.cloud.speech.v1p1beta1.CustomClass custom_classes = 3;
   */
  customClasses: CustomClass[];

  /**
   * Augmented Backus-Naur form (ABNF) is a standardized grammar notation
   * comprised by a set of derivation rules.
   * See specifications: https://www.w3.org/TR/speech-grammar
   *
   * @generated from field: google.cloud.speech.v1p1beta1.SpeechAdaptation.ABNFGrammar abnf_grammar = 4;
   */
  abnfGrammar?: SpeechAdaptation_ABNFGrammar;
};

/**
 * Describes the message google.cloud.speech.v1p1beta1.SpeechAdaptation.
 * Use `create(SpeechAdaptationSchema)` to create a new message.
 */
export const SpeechAdaptationSchema: GenMessage<SpeechAdaptation> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v1p1beta1_resource, 2);

/**
 * @generated from message google.cloud.speech.v1p1beta1.SpeechAdaptation.ABNFGrammar
 */
export type SpeechAdaptation_ABNFGrammar = Message<"google.cloud.speech.v1p1beta1.SpeechAdaptation.ABNFGrammar"> & {
  /**
   * All declarations and rules of an ABNF grammar broken up into multiple
   * strings that will end up concatenated.
   *
   * @generated from field: repeated string abnf_strings = 1;
   */
  abnfStrings: string[];
};

/**
 * Describes the message google.cloud.speech.v1p1beta1.SpeechAdaptation.ABNFGrammar.
 * Use `create(SpeechAdaptation_ABNFGrammarSchema)` to create a new message.
 */
export const SpeechAdaptation_ABNFGrammarSchema: GenMessage<SpeechAdaptation_ABNFGrammar> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v1p1beta1_resource, 2, 0);

/**
 * Transcription normalization configuration. Use transcription normalization
 * to automatically replace parts of the transcript with phrases of your
 * choosing. For StreamingRecognize, this normalization only applies to stable
 * partial transcripts (stability > 0.8) and final transcripts.
 *
 * @generated from message google.cloud.speech.v1p1beta1.TranscriptNormalization
 */
export type TranscriptNormalization = Message<"google.cloud.speech.v1p1beta1.TranscriptNormalization"> & {
  /**
   * A list of replacement entries. We will perform replacement with one entry
   * at a time. For example, the second entry in ["cat" => "dog", "mountain cat"
   * => "mountain dog"] will never be applied because we will always process the
   * first entry before it. At most 100 entries.
   *
   * @generated from field: repeated google.cloud.speech.v1p1beta1.TranscriptNormalization.Entry entries = 1;
   */
  entries: TranscriptNormalization_Entry[];
};

/**
 * Describes the message google.cloud.speech.v1p1beta1.TranscriptNormalization.
 * Use `create(TranscriptNormalizationSchema)` to create a new message.
 */
export const TranscriptNormalizationSchema: GenMessage<TranscriptNormalization> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v1p1beta1_resource, 3);

/**
 * A single replacement configuration.
 *
 * @generated from message google.cloud.speech.v1p1beta1.TranscriptNormalization.Entry
 */
export type TranscriptNormalization_Entry = Message<"google.cloud.speech.v1p1beta1.TranscriptNormalization.Entry"> & {
  /**
   * What to replace. Max length is 100 characters.
   *
   * @generated from field: string search = 1;
   */
  search: string;

  /**
   * What to replace with. Max length is 100 characters.
   *
   * @generated from field: string replace = 2;
   */
  replace: string;

  /**
   * Whether the search is case sensitive.
   *
   * @generated from field: bool case_sensitive = 3;
   */
  caseSensitive: boolean;
};

/**
 * Describes the message google.cloud.speech.v1p1beta1.TranscriptNormalization.Entry.
 * Use `create(TranscriptNormalization_EntrySchema)` to create a new message.
 */
export const TranscriptNormalization_EntrySchema: GenMessage<TranscriptNormalization_Entry> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v1p1beta1_resource, 3, 0);

