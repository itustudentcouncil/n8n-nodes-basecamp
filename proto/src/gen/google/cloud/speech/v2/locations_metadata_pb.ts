// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/speech/v2/locations_metadata.proto (package google.cloud.speech.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/speech/v2/locations_metadata.proto.
 */
export const file_google_cloud_speech_v2_locations_metadata: GenFile = /*@__PURE__*/
  fileDesc("Ci9nb29nbGUvY2xvdWQvc3BlZWNoL3YyL2xvY2F0aW9uc19tZXRhZGF0YS5wcm90bxIWZ29vZ2xlLmNsb3VkLnNwZWVjaC52MiI2CgxNb2RlbEZlYXR1cmUSDwoHZmVhdHVyZRgBIAEoCRIVCg1yZWxlYXNlX3N0YXRlGAIgASgJIkwKDU1vZGVsRmVhdHVyZXMSOwoNbW9kZWxfZmVhdHVyZRgBIAMoCzIkLmdvb2dsZS5jbG91ZC5zcGVlY2gudjIuTW9kZWxGZWF0dXJlIr4BCg1Nb2RlbE1ldGFkYXRhElAKDm1vZGVsX2ZlYXR1cmVzGAEgAygLMjguZ29vZ2xlLmNsb3VkLnNwZWVjaC52Mi5Nb2RlbE1ldGFkYXRhLk1vZGVsRmVhdHVyZXNFbnRyeRpbChJNb2RlbEZlYXR1cmVzRW50cnkSCwoDa2V5GAEgASgJEjQKBXZhbHVlGAIgASgLMiUuZ29vZ2xlLmNsb3VkLnNwZWVjaC52Mi5Nb2RlbEZlYXR1cmVzOgI4ASKuAQoQTGFuZ3VhZ2VNZXRhZGF0YRJECgZtb2RlbHMYASADKAsyNC5nb29nbGUuY2xvdWQuc3BlZWNoLnYyLkxhbmd1YWdlTWV0YWRhdGEuTW9kZWxzRW50cnkaVAoLTW9kZWxzRW50cnkSCwoDa2V5GAEgASgJEjQKBXZhbHVlGAIgASgLMiUuZ29vZ2xlLmNsb3VkLnNwZWVjaC52Mi5Nb2RlbE1ldGFkYXRhOgI4ASLIAQoOQWNjZXNzTWV0YWRhdGESTgoPY29uc3RyYWludF90eXBlGAEgASgOMjUuZ29vZ2xlLmNsb3VkLnNwZWVjaC52Mi5BY2Nlc3NNZXRhZGF0YS5Db25zdHJhaW50VHlwZSJmCg5Db25zdHJhaW50VHlwZRIfChtDT05TVFJBSU5UX1RZUEVfVU5TUEVDSUZJRUQQABIzCi9SRVNPVVJDRV9MT0NBVElPTlNfT1JHX1BPTElDWV9DUkVBVEVfQ09OU1RSQUlOVBABIpEBChFMb2NhdGlvbnNNZXRhZGF0YRI7CglsYW5ndWFnZXMYASABKAsyKC5nb29nbGUuY2xvdWQuc3BlZWNoLnYyLkxhbmd1YWdlTWV0YWRhdGESPwoPYWNjZXNzX21ldGFkYXRhGAIgASgLMiYuZ29vZ2xlLmNsb3VkLnNwZWVjaC52Mi5BY2Nlc3NNZXRhZGF0YUJqChpjb20uZ29vZ2xlLmNsb3VkLnNwZWVjaC52MkIWTG9jYXRpb25zTWV0YWRhdGFQcm90b1ABWjJjbG91ZC5nb29nbGUuY29tL2dvL3NwZWVjaC9hcGl2Mi9zcGVlY2hwYjtzcGVlY2hwYmIGcHJvdG8z");

/**
 * Representes a singular feature of a model. If the feature is `recognizer`,
 * the release_state of the feature represents the release_state of the model
 *
 * @generated from message google.cloud.speech.v2.ModelFeature
 */
export type ModelFeature = Message<"google.cloud.speech.v2.ModelFeature"> & {
  /**
   * The name of the feature (Note: the feature can be `recognizer`)
   *
   * @generated from field: string feature = 1;
   */
  feature: string;

  /**
   * The release state of the feature
   *
   * @generated from field: string release_state = 2;
   */
  releaseState: string;
};

/**
 * Describes the message google.cloud.speech.v2.ModelFeature.
 * Use `create(ModelFeatureSchema)` to create a new message.
 */
export const ModelFeatureSchema: GenMessage<ModelFeature> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v2_locations_metadata, 0);

/**
 * Represents the collection of features belonging to a model
 *
 * @generated from message google.cloud.speech.v2.ModelFeatures
 */
export type ModelFeatures = Message<"google.cloud.speech.v2.ModelFeatures"> & {
  /**
   * Repeated field that contains all features of the model
   *
   * @generated from field: repeated google.cloud.speech.v2.ModelFeature model_feature = 1;
   */
  modelFeature: ModelFeature[];
};

/**
 * Describes the message google.cloud.speech.v2.ModelFeatures.
 * Use `create(ModelFeaturesSchema)` to create a new message.
 */
export const ModelFeaturesSchema: GenMessage<ModelFeatures> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v2_locations_metadata, 1);

/**
 * The metadata about the models in a given region for a specific locale.
 * Currently this is just the features of the model
 *
 * @generated from message google.cloud.speech.v2.ModelMetadata
 */
export type ModelMetadata = Message<"google.cloud.speech.v2.ModelMetadata"> & {
  /**
   * Map of the model name -> features of that model
   *
   * @generated from field: map<string, google.cloud.speech.v2.ModelFeatures> model_features = 1;
   */
  modelFeatures: { [key: string]: ModelFeatures };
};

/**
 * Describes the message google.cloud.speech.v2.ModelMetadata.
 * Use `create(ModelMetadataSchema)` to create a new message.
 */
export const ModelMetadataSchema: GenMessage<ModelMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v2_locations_metadata, 2);

/**
 * The metadata about locales available in a given region. Currently this is
 * just the models that are available for each locale
 *
 * @generated from message google.cloud.speech.v2.LanguageMetadata
 */
export type LanguageMetadata = Message<"google.cloud.speech.v2.LanguageMetadata"> & {
  /**
   * Map of locale (language code) -> models
   *
   * @generated from field: map<string, google.cloud.speech.v2.ModelMetadata> models = 1;
   */
  models: { [key: string]: ModelMetadata };
};

/**
 * Describes the message google.cloud.speech.v2.LanguageMetadata.
 * Use `create(LanguageMetadataSchema)` to create a new message.
 */
export const LanguageMetadataSchema: GenMessage<LanguageMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v2_locations_metadata, 3);

/**
 * The access metadata for a particular region. This can be applied if the org
 * policy for the given project disallows a particular region.
 *
 * @generated from message google.cloud.speech.v2.AccessMetadata
 */
export type AccessMetadata = Message<"google.cloud.speech.v2.AccessMetadata"> & {
  /**
   * Describes the different types of constraints that are applied.
   *
   * @generated from field: google.cloud.speech.v2.AccessMetadata.ConstraintType constraint_type = 1;
   */
  constraintType: AccessMetadata_ConstraintType;
};

/**
 * Describes the message google.cloud.speech.v2.AccessMetadata.
 * Use `create(AccessMetadataSchema)` to create a new message.
 */
export const AccessMetadataSchema: GenMessage<AccessMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v2_locations_metadata, 4);

/**
 * Describes the different types of constraints that can be applied on a
 * region.
 *
 * @generated from enum google.cloud.speech.v2.AccessMetadata.ConstraintType
 */
export enum AccessMetadata_ConstraintType {
  /**
   * Unspecified constraint applied.
   *
   * @generated from enum value: CONSTRAINT_TYPE_UNSPECIFIED = 0;
   */
  CONSTRAINT_TYPE_UNSPECIFIED = 0,

  /**
   * The project's org policy disallows the given region.
   *
   * @generated from enum value: RESOURCE_LOCATIONS_ORG_POLICY_CREATE_CONSTRAINT = 1;
   */
  RESOURCE_LOCATIONS_ORG_POLICY_CREATE_CONSTRAINT = 1,
}

/**
 * Describes the enum google.cloud.speech.v2.AccessMetadata.ConstraintType.
 */
export const AccessMetadata_ConstraintTypeSchema: GenEnum<AccessMetadata_ConstraintType> = /*@__PURE__*/
  enumDesc(file_google_cloud_speech_v2_locations_metadata, 4, 0);

/**
 * Main metadata for the Locations API for STT V2. Currently this is just the
 * metadata about locales, models, and features
 *
 * @generated from message google.cloud.speech.v2.LocationsMetadata
 */
export type LocationsMetadata = Message<"google.cloud.speech.v2.LocationsMetadata"> & {
  /**
   * Information about available locales, models, and features represented in
   * the hierarchical structure of locales -> models -> features
   *
   * @generated from field: google.cloud.speech.v2.LanguageMetadata languages = 1;
   */
  languages?: LanguageMetadata;

  /**
   * Information about access metadata for the region and given project.
   *
   * @generated from field: google.cloud.speech.v2.AccessMetadata access_metadata = 2;
   */
  accessMetadata?: AccessMetadata;
};

/**
 * Describes the message google.cloud.speech.v2.LocationsMetadata.
 * Use `create(LocationsMetadataSchema)` to create a new message.
 */
export const LocationsMetadataSchema: GenMessage<LocationsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_speech_v2_locations_metadata, 5);

