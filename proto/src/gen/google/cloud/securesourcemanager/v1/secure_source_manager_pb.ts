// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/securesourcemanager/v1/secure_source_manager.proto (package google.cloud.securesourcemanager.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/securesourcemanager/v1/secure_source_manager.proto.
 */
export const file_google_cloud_securesourcemanager_v1_secure_source_manager: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_timestamp]);

/**
 * A resource that represents a Secure Source Manager instance.
 *
 * @generated from message google.cloud.securesourcemanager.v1.Instance
 */
export type Instance = Message<"google.cloud.securesourcemanager.v1.Instance"> & {
  /**
   * Optional. A unique identifier for an instance. The name should be of the
   * format:
   * `projects/{project_number}/locations/{location_id}/instances/{instance_id}`
   *
   * `project_number`: Maps to a unique int64 id assigned to each project.
   *
   * `location_id`: Refers to the region where the instance will be deployed.
   * Since Secure Source Manager is a regional service, it must be one of the
   * valid GCP regions.
   *
   * `instance_id`: User provided name for the instance, must be unique for a
   * project_number and location_id combination.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. Update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels as key value pairs.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Private settings for private instance.
   *
   * @generated from field: google.cloud.securesourcemanager.v1.Instance.PrivateConfig private_config = 13;
   */
  privateConfig?: Instance_PrivateConfig;

  /**
   * Output only. Current state of the instance.
   *
   * @generated from field: google.cloud.securesourcemanager.v1.Instance.State state = 5;
   */
  state: Instance_State;

  /**
   * Output only. An optional field providing information about the current
   * instance state.
   *
   * @generated from field: google.cloud.securesourcemanager.v1.Instance.StateNote state_note = 10;
   */
  stateNote: Instance_StateNote;

  /**
   * Optional. Immutable. Customer-managed encryption key name, in the format
   * projects/*\/locations/*\/keyRings/*\/cryptoKeys/*.
   *
   * @generated from field: string kms_key = 11;
   */
  kmsKey: string;

  /**
   * Output only. A list of hostnames for this instance.
   *
   * @generated from field: google.cloud.securesourcemanager.v1.Instance.HostConfig host_config = 9;
   */
  hostConfig?: Instance_HostConfig;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.Instance.
 * Use `create(InstanceSchema)` to create a new message.
 */
export const InstanceSchema: GenMessage<Instance> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 0);

/**
 * HostConfig has different instance endpoints.
 *
 * @generated from message google.cloud.securesourcemanager.v1.Instance.HostConfig
 */
export type Instance_HostConfig = Message<"google.cloud.securesourcemanager.v1.Instance.HostConfig"> & {
  /**
   * Output only. HTML hostname.
   *
   * @generated from field: string html = 1;
   */
  html: string;

  /**
   * Output only. API hostname. This is the hostname to use for **Host: Data
   * Plane** endpoints.
   *
   * @generated from field: string api = 2;
   */
  api: string;

  /**
   * Output only. Git HTTP hostname.
   *
   * @generated from field: string git_http = 3;
   */
  gitHttp: string;

  /**
   * Output only. Git SSH hostname.
   *
   * @generated from field: string git_ssh = 4;
   */
  gitSsh: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.Instance.HostConfig.
 * Use `create(Instance_HostConfigSchema)` to create a new message.
 */
export const Instance_HostConfigSchema: GenMessage<Instance_HostConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 0, 0);

/**
 * PrivateConfig includes settings for private instance.
 *
 * @generated from message google.cloud.securesourcemanager.v1.Instance.PrivateConfig
 */
export type Instance_PrivateConfig = Message<"google.cloud.securesourcemanager.v1.Instance.PrivateConfig"> & {
  /**
   * Required. Immutable. Indicate if it's private instance.
   *
   * @generated from field: bool is_private = 1;
   */
  isPrivate: boolean;

  /**
   * Required. Immutable. CA pool resource, resource must in the format of
   * `projects/{project}/locations/{location}/caPools/{ca_pool}`.
   *
   * @generated from field: string ca_pool = 2;
   */
  caPool: string;

  /**
   * Output only. Service Attachment for HTTP, resource is in the format of
   * `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
   *
   * @generated from field: string http_service_attachment = 3;
   */
  httpServiceAttachment: string;

  /**
   * Output only. Service Attachment for SSH, resource is in the format of
   * `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
   *
   * @generated from field: string ssh_service_attachment = 4;
   */
  sshServiceAttachment: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.Instance.PrivateConfig.
 * Use `create(Instance_PrivateConfigSchema)` to create a new message.
 */
export const Instance_PrivateConfigSchema: GenMessage<Instance_PrivateConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 0, 1);

/**
 * Secure Source Manager instance state.
 *
 * @generated from enum google.cloud.securesourcemanager.v1.Instance.State
 */
export enum Instance_State {
  /**
   * Not set. This should only be the case for incoming requests.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Instance is being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * Instance is ready.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * Instance is being deleted.
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,

  /**
   * Instance is paused.
   *
   * @generated from enum value: PAUSED = 4;
   */
  PAUSED = 4,

  /**
   * Instance is unknown, we are not sure if it's functioning.
   *
   * @generated from enum value: UNKNOWN = 6;
   */
  UNKNOWN = 6,
}

/**
 * Describes the enum google.cloud.securesourcemanager.v1.Instance.State.
 */
export const Instance_StateSchema: GenEnum<Instance_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 0, 0);

/**
 * Provides information about the current instance state.
 *
 * @generated from enum google.cloud.securesourcemanager.v1.Instance.StateNote
 */
export enum Instance_StateNote {
  /**
   * STATE_NOTE_UNSPECIFIED as the first value of State.
   *
   * @generated from enum value: STATE_NOTE_UNSPECIFIED = 0;
   */
  STATE_NOTE_UNSPECIFIED = 0,

  /**
   * CMEK access is unavailable.
   *
   * @generated from enum value: PAUSED_CMEK_UNAVAILABLE = 1;
   */
  PAUSED_CMEK_UNAVAILABLE = 1,

  /**
   * INSTANCE_RESUMING indicates that the instance was previously paused
   * and is under the process of being brought back.
   *
   * @generated from enum value: INSTANCE_RESUMING = 2 [deprecated = true];
   * @deprecated
   */
  INSTANCE_RESUMING = 2,
}

/**
 * Describes the enum google.cloud.securesourcemanager.v1.Instance.StateNote.
 */
export const Instance_StateNoteSchema: GenEnum<Instance_StateNote> = /*@__PURE__*/
  enumDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 0, 1);

/**
 * Metadata of a Secure Source Manager repository.
 *
 * @generated from message google.cloud.securesourcemanager.v1.Repository
 */
export type Repository = Message<"google.cloud.securesourcemanager.v1.Repository"> & {
  /**
   * Optional. A unique identifier for a repository. The name should be of the
   * format:
   * `projects/{project}/locations/{location_id}/repositories/{repository_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Description of the repository, which cannot exceed 500
   * characters.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Optional. The name of the instance in which the repository is hosted,
   * formatted as
   * `projects/{project_number}/locations/{location_id}/instances/{instance_id}`
   * For data plane CreateRepository requests, this field is output only.
   * For control plane CreateRepository requests, this field is used as input.
   *
   * @generated from field: string instance = 3;
   */
  instance: string;

  /**
   * Output only. Unique identifier of the repository.
   *
   * @generated from field: string uid = 4;
   */
  uid: string;

  /**
   * Output only. Create timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. Update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;

  /**
   * Optional. This checksum is computed by the server based on the value of
   * other fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 8;
   */
  etag: string;

  /**
   * Output only. URIs for the repository.
   *
   * @generated from field: google.cloud.securesourcemanager.v1.Repository.URIs uris = 9;
   */
  uris?: Repository_URIs;

  /**
   * Input only. Initial configurations for the repository.
   *
   * @generated from field: google.cloud.securesourcemanager.v1.Repository.InitialConfig initial_config = 10;
   */
  initialConfig?: Repository_InitialConfig;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.Repository.
 * Use `create(RepositorySchema)` to create a new message.
 */
export const RepositorySchema: GenMessage<Repository> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 1);

/**
 * URIs for the repository.
 *
 * @generated from message google.cloud.securesourcemanager.v1.Repository.URIs
 */
export type Repository_URIs = Message<"google.cloud.securesourcemanager.v1.Repository.URIs"> & {
  /**
   * Output only. HTML is the URI for user to view the repository in a
   * browser.
   *
   * @generated from field: string html = 1;
   */
  html: string;

  /**
   * Output only. git_https is the git HTTPS URI for git operations.
   *
   * @generated from field: string git_https = 2;
   */
  gitHttps: string;

  /**
   * Output only. API is the URI for API access.
   *
   * @generated from field: string api = 3;
   */
  api: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.Repository.URIs.
 * Use `create(Repository_URIsSchema)` to create a new message.
 */
export const Repository_URIsSchema: GenMessage<Repository_URIs> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 1, 0);

/**
 * Repository initialization configuration.
 *
 * @generated from message google.cloud.securesourcemanager.v1.Repository.InitialConfig
 */
export type Repository_InitialConfig = Message<"google.cloud.securesourcemanager.v1.Repository.InitialConfig"> & {
  /**
   * Default branch name of the repository.
   *
   * @generated from field: string default_branch = 1;
   */
  defaultBranch: string;

  /**
   * List of gitignore template names user can choose from.
   * Valid values: actionscript, ada, agda, android,
   * anjuta, ansible, appcelerator-titanium, app-engine, archives,
   * arch-linux-packages, atmel-studio, autotools, backup, bazaar, bazel,
   * bitrix, bricx-cc, c, cake-php, calabash, cf-wheels, chef-cookbook,
   * clojure, cloud9, c-make, code-igniter, code-kit, code-sniffer,
   * common-lisp, composer, concrete5, coq, cordova, cpp, craft-cms, cuda,
   * cvs, d, dart, dart-editor, delphi, diff, dm, dreamweaver, dropbox,
   * drupal, drupal-7, eagle, eclipse, eiffel-studio, elisp, elixir, elm,
   * emacs, ensime, epi-server, erlang, esp-idf, espresso, exercism,
   * expression-engine, ext-js, fancy, finale, flex-builder, force-dot-com,
   * fortran, fuel-php, gcov, git-book, gnome-shell-extension, go, godot, gpg,
   * gradle, grails, gwt, haskell, hugo, iar-ewarm, idris, igor-pro, images,
   * infor-cms, java, jboss, jboss-4, jboss-6, jdeveloper, jekyll,
   * jenkins-home, jenv, jet-brains, jigsaw, joomla, julia, jupyter-notebooks,
   * kate, kdevelop4, kentico, ki-cad, kohana, kotlin, lab-view, laravel,
   * lazarus, leiningen, lemon-stand, libre-office, lilypond, linux, lithium,
   * logtalk, lua, lyx, mac-os, magento, magento-1, magento-2, matlab, maven,
   * mercurial, mercury, metals, meta-programming-system, meteor,
   * microsoft-office, model-sim, momentics, mono-develop, nanoc, net-beans,
   * nikola, nim, ninja, node, notepad-pp, nwjs, objective--c, ocaml, octave,
   * opa, open-cart, openssl, oracle-forms, otto, packer, patch, perl, perl6,
   * phalcon, phoenix, pimcore, play-framework, plone, prestashop, processing,
   * psoc-creator, puppet, pure-script, putty, python, qooxdoo, qt, r, racket,
   * rails, raku, red, redcar, redis, rhodes-rhomobile, ros, ruby, rust, sam,
   * sass, sbt, scala, scheme, scons, scrivener, sdcc, seam-gen, sketch-up,
   * slick-edit, smalltalk, snap, splunk, stata, stella, sublime-text,
   * sugar-crm, svn, swift, symfony, symphony-cms, synopsys-vcs, tags,
   * terraform, tex, text-mate, textpattern, think-php, tortoise-git,
   * turbo-gears-2, typo3, umbraco, unity, unreal-engine, vagrant, vim,
   * virtual-env, virtuoso, visual-studio, visual-studio-code, vue, vvvv, waf,
   * web-methods, windows, word-press, xcode, xilinx, xilinx-ise, xojo,
   * yeoman, yii, zend-framework, zephir.
   *
   * @generated from field: repeated string gitignores = 2;
   */
  gitignores: string[];

  /**
   * License template name user can choose from.
   * Valid values: license-0bsd, license-389-exception, aal, abstyles,
   * adobe-2006, adobe-glyph, adsl, afl-1-1, afl-1-2, afl-2-0, afl-2-1,
   * afl-3-0, afmparse, agpl-1-0, agpl-1-0-only, agpl-1-0-or-later,
   * agpl-3-0-only, agpl-3-0-or-later, aladdin, amdplpa, aml, ampas, antlr-pd,
   * antlr-pd-fallback, apache-1-0, apache-1-1, apache-2-0, apafml, apl-1-0,
   * apsl-1-0, apsl-1-1, apsl-1-2, apsl-2-0, artistic-1-0, artistic-1-0-cl8,
   * artistic-1-0-perl, artistic-2-0, autoconf-exception-2-0,
   * autoconf-exception-3-0, bahyph, barr, beerware, bison-exception-2-2,
   * bittorrent-1-0, bittorrent-1-1, blessing, blueoak-1-0-0,
   * bootloader-exception, borceux, bsd-1-clause, bsd-2-clause,
   * bsd-2-clause-freebsd, bsd-2-clause-netbsd, bsd-2-clause-patent,
   * bsd-2-clause-views, bsd-3-clause, bsd-3-clause-attribution,
   * bsd-3-clause-clear, bsd-3-clause-lbnl, bsd-3-clause-modification,
   * bsd-3-clause-no-nuclear-license, bsd-3-clause-no-nuclear-license-2014,
   * bsd-3-clause-no-nuclear-warranty, bsd-3-clause-open-mpi, bsd-4-clause,
   * bsd-4-clause-shortened, bsd-4-clause-uc, bsd-protection, bsd-source-code,
   * bsl-1-0, busl-1-1, cal-1-0, cal-1-0-combined-work-exception, caldera,
   * catosl-1-1, cc0-1-0, cc-by-1-0, cc-by-2-0, cc-by-3-0, cc-by-3-0-at,
   * cc-by-3-0-us, cc-by-4-0, cc-by-nc-1-0, cc-by-nc-2-0, cc-by-nc-3-0,
   * cc-by-nc-4-0, cc-by-nc-nd-1-0, cc-by-nc-nd-2-0, cc-by-nc-nd-3-0,
   * cc-by-nc-nd-3-0-igo, cc-by-nc-nd-4-0, cc-by-nc-sa-1-0, cc-by-nc-sa-2-0,
   * cc-by-nc-sa-3-0, cc-by-nc-sa-4-0, cc-by-nd-1-0, cc-by-nd-2-0,
   * cc-by-nd-3-0, cc-by-nd-4-0, cc-by-sa-1-0, cc-by-sa-2-0, cc-by-sa-2-0-uk,
   * cc-by-sa-2-1-jp, cc-by-sa-3-0, cc-by-sa-3-0-at, cc-by-sa-4-0, cc-pddc,
   * cddl-1-0, cddl-1-1, cdla-permissive-1-0, cdla-sharing-1-0, cecill-1-0,
   * cecill-1-1, cecill-2-0, cecill-2-1, cecill-b, cecill-c, cern-ohl-1-1,
   * cern-ohl-1-2, cern-ohl-p-2-0, cern-ohl-s-2-0, cern-ohl-w-2-0, clartistic,
   * classpath-exception-2-0, clisp-exception-2-0, cnri-jython, cnri-python,
   * cnri-python-gpl-compatible, condor-1-1, copyleft-next-0-3-0,
   * copyleft-next-0-3-1, cpal-1-0, cpl-1-0, cpol-1-02, crossword,
   * crystal-stacker, cua-opl-1-0, cube, c-uda-1-0, curl, d-fsl-1-0, diffmark,
   * digirule-foss-exception, doc, dotseqn, drl-1-0, dsdp, dvipdfm, ecl-1-0,
   * ecl-2-0, ecos-exception-2-0, efl-1-0, efl-2-0, egenix, entessa, epics,
   * epl-1-0, epl-2-0, erlpl-1-1, etalab-2-0, eu-datagrid, eupl-1-0, eupl-1-1,
   * eupl-1-2, eurosym, fair, fawkes-runtime-exception, fltk-exception,
   * font-exception-2-0, frameworx-1-0, freebsd-doc, freeimage,
   * freertos-exception-2-0, fsfap, fsful, fsfullr, ftl, gcc-exception-2-0,
   * gcc-exception-3-1, gd, gfdl-1-1-invariants-only,
   * gfdl-1-1-invariants-or-later, gfdl-1-1-no-invariants-only,
   * gfdl-1-1-no-invariants-or-later, gfdl-1-1-only, gfdl-1-1-or-later,
   * gfdl-1-2-invariants-only, gfdl-1-2-invariants-or-later,
   * gfdl-1-2-no-invariants-only, gfdl-1-2-no-invariants-or-later,
   * gfdl-1-2-only, gfdl-1-2-or-later, gfdl-1-3-invariants-only,
   * gfdl-1-3-invariants-or-later, gfdl-1-3-no-invariants-only,
   * gfdl-1-3-no-invariants-or-later, gfdl-1-3-only, gfdl-1-3-or-later,
   * giftware, gl2ps, glide, glulxe, glwtpl, gnu-javamail-exception, gnuplot,
   * gpl-1-0-only, gpl-1-0-or-later, gpl-2-0-only, gpl-2-0-or-later,
   * gpl-3-0-linking-exception, gpl-3-0-linking-source-exception,
   * gpl-3-0-only, gpl-3-0-or-later, gpl-cc-1-0, gsoap-1-3b, haskell-report,
   * hippocratic-2-1, hpnd, hpnd-sell-variant, htmltidy,
   * i2p-gpl-java-exception, ibm-pibs, icu, ijg, image-magick, imatix, imlib2,
   * info-zip, intel, intel-acpi, interbase-1-0, ipa, ipl-1-0, isc,
   * jasper-2-0, jpnic, json, lal-1-2, lal-1-3, latex2e, leptonica,
   * lgpl-2-0-only, lgpl-2-0-or-later, lgpl-2-1-only, lgpl-2-1-or-later,
   * lgpl-3-0-linking-exception, lgpl-3-0-only, lgpl-3-0-or-later, lgpllr,
   * libpng, libpng-2-0, libselinux-1-0, libtiff, libtool-exception,
   * liliq-p-1-1, liliq-r-1-1, liliq-rplus-1-1, linux-openib,
   * linux-syscall-note, llvm-exception, lpl-1-0, lpl-1-02, lppl-1-0,
   * lppl-1-1, lppl-1-2, lppl-1-3a, lppl-1-3c, lzma-exception, make-index,
   * mif-exception, miros, mit, mit-0, mit-advertising, mit-cmu, mit-enna,
   * mit-feh, mit-modern-variant, mitnfa, mit-open-group, motosoto, mpich2,
   * mpl-1-0, mpl-1-1, mpl-2-0, mpl-2-0-no-copyleft-exception, ms-pl, ms-rl,
   * mtll, mulanpsl-1-0, mulanpsl-2-0, multics, mup, naist-2003, nasa-1-3,
   * naumen, nbpl-1-0, ncgl-uk-2-0, ncsa, netcdf, net-snmp, newsletr, ngpl,
   * nist-pd, nist-pd-fallback, nlod-1-0, nlpl, nokia, nokia-qt-exception-1-1,
   * nosl, noweb, npl-1-0, npl-1-1, nposl-3-0, nrl, ntp, ntp-0,
   * ocaml-lgpl-linking-exception, occt-exception-1-0, occt-pl, oclc-2-0,
   * odbl-1-0, odc-by-1-0, ofl-1-0, ofl-1-0-no-rfn, ofl-1-0-rfn, ofl-1-1,
   * ofl-1-1-no-rfn, ofl-1-1-rfn, ogc-1-0, ogdl-taiwan-1-0, ogl-canada-2-0,
   * ogl-uk-1-0, ogl-uk-2-0, ogl-uk-3-0, ogtsl, oldap-1-1, oldap-1-2,
   * oldap-1-3, oldap-1-4, oldap-2-0, oldap-2-0-1, oldap-2-1, oldap-2-2,
   * oldap-2-2-1, oldap-2-2-2, oldap-2-3, oldap-2-4, oldap-2-7, oml,
   * openjdk-assembly-exception-1-0, openssl, openvpn-openssl-exception,
   * opl-1-0, oset-pl-2-1, osl-1-0, osl-1-1, osl-2-0, osl-2-1, osl-3-0,
   * o-uda-1-0, parity-6-0-0, parity-7-0-0, pddl-1-0, php-3-0, php-3-01,
   * plexus, polyform-noncommercial-1-0-0, polyform-small-business-1-0-0,
   * postgresql, psf-2-0, psfrag, ps-or-pdf-font-exception-20170817, psutils,
   * python-2-0, qhull, qpl-1-0, qt-gpl-exception-1-0, qt-lgpl-exception-1-1,
   * qwt-exception-1-0, rdisc, rhecos-1-1, rpl-1-1, rpsl-1-0, rsa-md, rscpl,
   * ruby, saxpath, sax-pd, scea, sendmail, sendmail-8-23, sgi-b-1-0,
   * sgi-b-1-1, sgi-b-2-0, shl-0-51, shl-2-0, shl-2-1, simpl-2-0, sissl,
   * sissl-1-2, sleepycat, smlnj, smppl, snia, spencer-86, spencer-94,
   * spencer-99, spl-1-0, ssh-openssh, ssh-short, sspl-1-0, sugarcrm-1-1-3,
   * swift-exception, swl, tapr-ohl-1-0, tcl, tcp-wrappers, tmate, torque-1-1,
   * tosl, tu-berlin-1-0, tu-berlin-2-0, u-boot-exception-2-0, ucl-1-0,
   * unicode-dfs-2015, unicode-dfs-2016, unicode-tou,
   * universal-foss-exception-1-0, unlicense, upl-1-0, vim, vostrom, vsl-1-0,
   * w3c, w3c-19980720, w3c-20150513, watcom-1-0, wsuipa, wtfpl,
   * wxwindows-exception-3-1, x11, xerox, xfree86-1-1, xinetd, xnet, xpp,
   * xskat, ypl-1-0, ypl-1-1, zed, zend-2-0, zimbra-1-3, zimbra-1-4, zlib,
   * zlib-acknowledgement, zpl-1-1, zpl-2-0, zpl-2-1.
   *
   * @generated from field: string license = 3;
   */
  license: string;

  /**
   * README template name.
   * Valid template name(s) are: default.
   *
   * @generated from field: string readme = 4;
   */
  readme: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.Repository.InitialConfig.
 * Use `create(Repository_InitialConfigSchema)` to create a new message.
 */
export const Repository_InitialConfigSchema: GenMessage<Repository_InitialConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 1, 1);

/**
 * ListInstancesRequest is the request to list instances.
 *
 * @generated from message google.cloud.securesourcemanager.v1.ListInstancesRequest
 */
export type ListInstancesRequest = Message<"google.cloud.securesourcemanager.v1.ListInstancesRequest"> & {
  /**
   * Required. Parent value for ListInstancesRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter for filtering results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.ListInstancesRequest.
 * Use `create(ListInstancesRequestSchema)` to create a new message.
 */
export const ListInstancesRequestSchema: GenMessage<ListInstancesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 2);

/**
 * @generated from message google.cloud.securesourcemanager.v1.ListInstancesResponse
 */
export type ListInstancesResponse = Message<"google.cloud.securesourcemanager.v1.ListInstancesResponse"> & {
  /**
   * The list of instances.
   *
   * @generated from field: repeated google.cloud.securesourcemanager.v1.Instance instances = 1;
   */
  instances: Instance[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.ListInstancesResponse.
 * Use `create(ListInstancesResponseSchema)` to create a new message.
 */
export const ListInstancesResponseSchema: GenMessage<ListInstancesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 3);

/**
 * GetInstanceRequest is the request for getting an instance.
 *
 * @generated from message google.cloud.securesourcemanager.v1.GetInstanceRequest
 */
export type GetInstanceRequest = Message<"google.cloud.securesourcemanager.v1.GetInstanceRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.GetInstanceRequest.
 * Use `create(GetInstanceRequestSchema)` to create a new message.
 */
export const GetInstanceRequestSchema: GenMessage<GetInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 4);

/**
 * CreateInstanceRequest is the request for creating an instance.
 *
 * @generated from message google.cloud.securesourcemanager.v1.CreateInstanceRequest
 */
export type CreateInstanceRequest = Message<"google.cloud.securesourcemanager.v1.CreateInstanceRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. ID of the instance to be created.
   *
   * @generated from field: string instance_id = 2;
   */
  instanceId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.securesourcemanager.v1.Instance instance = 3;
   */
  instance?: Instance;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.CreateInstanceRequest.
 * Use `create(CreateInstanceRequestSchema)` to create a new message.
 */
export const CreateInstanceRequestSchema: GenMessage<CreateInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 5);

/**
 * DeleteInstanceRequest is the request for deleting an instance.
 *
 * @generated from message google.cloud.securesourcemanager.v1.DeleteInstanceRequest
 */
export type DeleteInstanceRequest = Message<"google.cloud.securesourcemanager.v1.DeleteInstanceRequest"> & {
  /**
   * Required. Name of the resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.DeleteInstanceRequest.
 * Use `create(DeleteInstanceRequestSchema)` to create a new message.
 */
export const DeleteInstanceRequestSchema: GenMessage<DeleteInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 6);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.securesourcemanager.v1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.securesourcemanager.v1.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. Identifies whether the user has requested cancellation
   * of the operation. Operations that have successfully been cancelled
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 7);

/**
 * ListRepositoriesRequest is request to list repositories.
 *
 * @generated from message google.cloud.securesourcemanager.v1.ListRepositoriesRequest
 */
export type ListRepositoriesRequest = Message<"google.cloud.securesourcemanager.v1.ListRepositoriesRequest"> & {
  /**
   * Required. Parent value for ListRepositoriesRequest.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Requested page size. Server may return fewer items than
   * requested. If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filter results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.ListRepositoriesRequest.
 * Use `create(ListRepositoriesRequestSchema)` to create a new message.
 */
export const ListRepositoriesRequestSchema: GenMessage<ListRepositoriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 8);

/**
 * @generated from message google.cloud.securesourcemanager.v1.ListRepositoriesResponse
 */
export type ListRepositoriesResponse = Message<"google.cloud.securesourcemanager.v1.ListRepositoriesResponse"> & {
  /**
   * The list of repositories.
   *
   * @generated from field: repeated google.cloud.securesourcemanager.v1.Repository repositories = 1;
   */
  repositories: Repository[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.ListRepositoriesResponse.
 * Use `create(ListRepositoriesResponseSchema)` to create a new message.
 */
export const ListRepositoriesResponseSchema: GenMessage<ListRepositoriesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 9);

/**
 * GetRepositoryRequest is the request for getting a repository.
 *
 * @generated from message google.cloud.securesourcemanager.v1.GetRepositoryRequest
 */
export type GetRepositoryRequest = Message<"google.cloud.securesourcemanager.v1.GetRepositoryRequest"> & {
  /**
   * Required. Name of the repository to retrieve.
   * The format is
   * `projects/{project_number}/locations/{location_id}/repositories/{repository_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.GetRepositoryRequest.
 * Use `create(GetRepositoryRequestSchema)` to create a new message.
 */
export const GetRepositoryRequestSchema: GenMessage<GetRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 10);

/**
 * CreateRepositoryRequest is the request for creating a repository.
 *
 * @generated from message google.cloud.securesourcemanager.v1.CreateRepositoryRequest
 */
export type CreateRepositoryRequest = Message<"google.cloud.securesourcemanager.v1.CreateRepositoryRequest"> & {
  /**
   * Required. The project in which to create the repository. Values are of the
   * form `projects/{project_number}/locations/{location_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.securesourcemanager.v1.Repository repository = 2;
   */
  repository?: Repository;

  /**
   * Required. The ID to use for the repository, which will become the final
   * component of the repository's resource name. This value should be 4-63
   * characters, and valid characters are /[a-z][0-9]-/.
   *
   * @generated from field: string repository_id = 3;
   */
  repositoryId: string;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.CreateRepositoryRequest.
 * Use `create(CreateRepositoryRequestSchema)` to create a new message.
 */
export const CreateRepositoryRequestSchema: GenMessage<CreateRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 11);

/**
 * DeleteRepositoryRequest is the request to delete a repository.
 *
 * @generated from message google.cloud.securesourcemanager.v1.DeleteRepositoryRequest
 */
export type DeleteRepositoryRequest = Message<"google.cloud.securesourcemanager.v1.DeleteRepositoryRequest"> & {
  /**
   * Required. Name of the repository to delete.
   * The format is
   * projects/{project_number}/locations/{location_id}/repositories/{repository_id}.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. If set to true, and the repository is not found, the request will
   * succeed but no action will be taken on the server.
   *
   * @generated from field: bool allow_missing = 2;
   */
  allowMissing: boolean;
};

/**
 * Describes the message google.cloud.securesourcemanager.v1.DeleteRepositoryRequest.
 * Use `create(DeleteRepositoryRequestSchema)` to create a new message.
 */
export const DeleteRepositoryRequestSchema: GenMessage<DeleteRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 12);

/**
 * Secure Source Manager API
 *
 * Access Secure Source Manager instances, resources, and repositories.
 *
 * This API is split across two servers: the Control Plane and the Data Plane.
 *
 * Data Plane endpoints are hosted directly by your Secure Source Manager
 * instance, so you must connect to your instance's API hostname to access
 * them. The API hostname looks like the following:
 *
 *    https://[instance-id]-[project-number]-api.[location].sourcemanager.dev
 *
 * For example,
 *
 *    https://my-instance-702770452863-api.us-central1.sourcemanager.dev
 *
 * Data Plane endpoints are denoted with **Host: Data Plane**.
 *
 * All other endpoints are found in the normal Cloud API location, namely,
 * `securcesourcemanager.googleapis.com`.
 *
 * @generated from service google.cloud.securesourcemanager.v1.SecureSourceManager
 */
export const SecureSourceManager: GenService<{
  /**
   * Lists Instances in a given project and location.
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.ListInstances
   */
  listInstances: {
    methodKind: "unary";
    input: typeof ListInstancesRequestSchema;
    output: typeof ListInstancesResponseSchema;
  },
  /**
   * Gets details of a single instance.
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.GetInstance
   */
  getInstance: {
    methodKind: "unary";
    input: typeof GetInstanceRequestSchema;
    output: typeof InstanceSchema;
  },
  /**
   * Creates a new instance in a given project and location.
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.CreateInstance
   */
  createInstance: {
    methodKind: "unary";
    input: typeof CreateInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single instance.
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.DeleteInstance
   */
  deleteInstance: {
    methodKind: "unary";
    input: typeof DeleteInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Repositories in a given project and location.
   *
   * **Host: Data Plane**
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.ListRepositories
   */
  listRepositories: {
    methodKind: "unary";
    input: typeof ListRepositoriesRequestSchema;
    output: typeof ListRepositoriesResponseSchema;
  },
  /**
   * Gets metadata of a repository.
   *
   * **Host: Data Plane**
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.GetRepository
   */
  getRepository: {
    methodKind: "unary";
    input: typeof GetRepositoryRequestSchema;
    output: typeof RepositorySchema;
  },
  /**
   * Creates a new repository in a given project and location.
   *
   * **Host: Data Plane**
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.CreateRepository
   */
  createRepository: {
    methodKind: "unary";
    input: typeof CreateRepositoryRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a Repository.
   *
   * **Host: Data Plane**
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.DeleteRepository
   */
  deleteRepository: {
    methodKind: "unary";
    input: typeof DeleteRepositoryRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Get IAM policy for a repository.
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.GetIamPolicyRepo
   */
  getIamPolicyRepo: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Set IAM policy on a repository.
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.SetIamPolicyRepo
   */
  setIamPolicyRepo: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Test IAM permissions on a repository.
   * IAM permission checks are not required on this method.
   *
   * @generated from rpc google.cloud.securesourcemanager.v1.SecureSourceManager.TestIamPermissionsRepo
   */
  testIamPermissionsRepo: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_securesourcemanager_v1_secure_source_manager, 0);

