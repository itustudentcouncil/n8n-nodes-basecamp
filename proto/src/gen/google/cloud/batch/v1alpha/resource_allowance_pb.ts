// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/batch/v1alpha/resource_allowance.proto (package google.cloud.batch.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_field_info } from "../../../api/field_info_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Notification } from "./notification_pb";
import { file_google_cloud_batch_v1alpha_notification } from "./notification_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Interval } from "../../../type/interval_pb";
import { file_google_type_interval } from "../../../type/interval_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/batch/v1alpha/resource_allowance.proto.
 */
export const file_google_cloud_batch_v1alpha_resource_allowance: GenFile = /*@__PURE__*/
  fileDesc("CjNnb29nbGUvY2xvdWQvYmF0Y2gvdjFhbHBoYS9yZXNvdXJjZV9hbGxvd2FuY2UucHJvdG8SGmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhhItAEChFSZXNvdXJjZUFsbG93YW5jZRJWChh1c2FnZV9yZXNvdXJjZV9hbGxvd2FuY2UYBCABKAsyMi5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5Vc2FnZVJlc291cmNlQWxsb3dhbmNlSAASEQoEbmFtZRgBIAEoCUID4EEIEhgKA3VpZBgCIAEoCUIL4EED4ozP1wgCCAESNAoLY3JlYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSTgoGbGFiZWxzGAUgAygLMjkuZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuUmVzb3VyY2VBbGxvd2FuY2UuTGFiZWxzRW50cnlCA+BBARJECg1ub3RpZmljYXRpb25zGAYgAygLMiguZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuTm90aWZpY2F0aW9uQgPgQQEaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ATqkAepBoAEKJmJhdGNoLmdvb2dsZWFwaXMuY29tL1Jlc291cmNlQWxsb3dhbmNlEk9wcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vcmVzb3VyY2VBbGxvd2FuY2VzL3tyZXNvdXJjZV9hbGxvd2FuY2V9KhJyZXNvdXJjZUFsbG93YW5jZXMyEXJlc291cmNlQWxsb3dhbmNlQhQKEnJlc291cmNlX2FsbG93YW5jZSKyAQoWVXNhZ2VSZXNvdXJjZUFsbG93YW5jZRJJCgRzcGVjGAEgASgLMjYuZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuVXNhZ2VSZXNvdXJjZUFsbG93YW5jZVNwZWNCA+BBAhJNCgZzdGF0dXMYAiABKAsyOC5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5Vc2FnZVJlc291cmNlQWxsb3dhbmNlU3RhdHVzQgPgQQMihgIKGlVzYWdlUmVzb3VyY2VBbGxvd2FuY2VTcGVjEhEKBHR5cGUYASABKAlCA+BBAhJQCgVsaW1pdBgCIAEoCzI8Lmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhhLlVzYWdlUmVzb3VyY2VBbGxvd2FuY2VTcGVjLkxpbWl0QgPgQQIaggEKBUxpbWl0EkoKD2NhbGVuZGFyX3BlcmlvZBgBIAEoDjIqLmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhhLkNhbGVuZGFyUGVyaW9kQgPgQQFIABIXCgVsaW1pdBgCIAEoAUID4EECSAGIAQFCCgoIZHVyYXRpb25CCAoGX2xpbWl0Iu4GChxVc2FnZVJlc291cmNlQWxsb3dhbmNlU3RhdHVzEkYKBXN0YXRlGAEgASgOMjIuZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuUmVzb3VyY2VBbGxvd2FuY2VTdGF0ZUID4EEDEl8KDGxpbWl0X3N0YXR1cxgCIAEoCzJELmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhhLlVzYWdlUmVzb3VyY2VBbGxvd2FuY2VTdGF0dXMuTGltaXRTdGF0dXNCA+BBAxJfCgZyZXBvcnQYAyABKAsySi5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5Vc2FnZVJlc291cmNlQWxsb3dhbmNlU3RhdHVzLkNvbnN1bXB0aW9uUmVwb3J0QgPgQQMakwEKC0xpbWl0U3RhdHVzEjgKFGNvbnN1bXB0aW9uX2ludGVydmFsGAEgASgLMhUuZ29vZ2xlLnR5cGUuSW50ZXJ2YWxCA+BBAxIXCgVsaW1pdBgCIAEoAUID4EEDSACIAQESGgoIY29uc3VtZWQYAyABKAFCA+BBA0gBiAEBQggKBl9saW1pdEILCglfY29uc3VtZWQadgoRUGVyaW9kQ29uc3VtcHRpb24SOAoUY29uc3VtcHRpb25faW50ZXJ2YWwYASABKAsyFS5nb29nbGUudHlwZS5JbnRlcnZhbEID4EEDEhoKCGNvbnN1bWVkGAIgASgBQgPgQQNIAIgBAUILCglfY29uc3VtZWQatQIKEUNvbnN1bXB0aW9uUmVwb3J0EpEBChpsYXRlc3RfcGVyaW9kX2NvbnN1bXB0aW9ucxgBIAMoCzJoLmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhhLlVzYWdlUmVzb3VyY2VBbGxvd2FuY2VTdGF0dXMuQ29uc3VtcHRpb25SZXBvcnQuTGF0ZXN0UGVyaW9kQ29uc3VtcHRpb25zRW50cnlCA+BBAxqLAQodTGF0ZXN0UGVyaW9kQ29uc3VtcHRpb25zRW50cnkSCwoDa2V5GAEgASgJElkKBXZhbHVlGAIgASgLMkouZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuVXNhZ2VSZXNvdXJjZUFsbG93YW5jZVN0YXR1cy5QZXJpb2RDb25zdW1wdGlvbjoCOAEqZgoOQ2FsZW5kYXJQZXJpb2QSHwobQ0FMRU5EQVJfUEVSSU9EX1VOU1BFQ0lGSUVEEAASCQoFTU9OVEgQARILCgdRVUFSVEVSEAISCAoEWUVBUhADEggKBFdFRUsQBBIHCgNEQVkQBSqCAQoWUmVzb3VyY2VBbGxvd2FuY2VTdGF0ZRIoCiRSRVNPVVJDRV9BTExPV0FOQ0VfU1RBVEVfVU5TUEVDSUZJRUQQABIdChlSRVNPVVJDRV9BTExPV0FOQ0VfQUNUSVZFEAESHwobUkVTT1VSQ0VfQUxMT1dBTkNFX0RFUExFVEVEEAJC0AEKHmNvbS5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYUIWUmVzb3VyY2VBbGxvd2FuY2VQcm90b1ABWjRjbG91ZC5nb29nbGUuY29tL2dvL2JhdGNoL2FwaXYxYWxwaGEvYmF0Y2hwYjtiYXRjaHBiogIDR0NCqgIaR29vZ2xlLkNsb3VkLkJhdGNoLlYxQWxwaGHKAhpHb29nbGVcQ2xvdWRcQmF0Y2hcVjFhbHBoYeoCHUdvb2dsZTo6Q2xvdWQ6OkJhdGNoOjpWMWFscGhhYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_field_info, file_google_api_resource, file_google_cloud_batch_v1alpha_notification, file_google_protobuf_timestamp, file_google_type_interval]);

/**
 * The Resource Allowance description for Cloud Batch.
 * Only one Resource Allowance is supported now under a specific location and
 * project.
 *
 * @generated from message google.cloud.batch.v1alpha.ResourceAllowance
 */
export type ResourceAllowance = Message<"google.cloud.batch.v1alpha.ResourceAllowance"> & {
  /**
   * ResourceAllowance detail.
   *
   * @generated from oneof google.cloud.batch.v1alpha.ResourceAllowance.resource_allowance
   */
  resourceAllowance: {
    /**
     * The detail of usage resource allowance.
     *
     * @generated from field: google.cloud.batch.v1alpha.UsageResourceAllowance usage_resource_allowance = 4;
     */
    value: UsageResourceAllowance;
    case: "usageResourceAllowance";
  } | { case: undefined; value?: undefined };

  /**
   * Identifier. ResourceAllowance name.
   * For example:
   * "projects/123456/locations/us-central1/resourceAllowances/resource-allowance-1".
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. A system generated unique ID (in UUID4 format) for the
   * ResourceAllowance.
   *
   * @generated from field: string uid = 2;
   */
  uid: string;

  /**
   * Output only. Time when the ResourceAllowance was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Optional. Labels are attributes that can be set and used by both the
   * user and by Batch. Labels must meet the following constraints:
   *
   * * Keys and values can contain only lowercase letters, numeric characters,
   * underscores, and dashes.
   * * All characters must use UTF-8 encoding, and international characters are
   * allowed.
   * * Keys must start with a lowercase letter or international character.
   * * Each resource is limited to a maximum of 64 labels.
   *
   * Both keys and values are additionally constrained to be <= 128 bytes.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Notification configurations.
   *
   * @generated from field: repeated google.cloud.batch.v1alpha.Notification notifications = 6;
   */
  notifications: Notification[];
};

/**
 * Describes the message google.cloud.batch.v1alpha.ResourceAllowance.
 * Use `create(ResourceAllowanceSchema)` to create a new message.
 */
export const ResourceAllowanceSchema: GenMessage<ResourceAllowance> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1alpha_resource_allowance, 0);

/**
 * UsageResourceAllowance describes the detail of usage resource allowance.
 *
 * @generated from message google.cloud.batch.v1alpha.UsageResourceAllowance
 */
export type UsageResourceAllowance = Message<"google.cloud.batch.v1alpha.UsageResourceAllowance"> & {
  /**
   * Required. Spec of a usage ResourceAllowance.
   *
   * @generated from field: google.cloud.batch.v1alpha.UsageResourceAllowanceSpec spec = 1;
   */
  spec?: UsageResourceAllowanceSpec;

  /**
   * Output only. Status of a usage ResourceAllowance.
   *
   * @generated from field: google.cloud.batch.v1alpha.UsageResourceAllowanceStatus status = 2;
   */
  status?: UsageResourceAllowanceStatus;
};

/**
 * Describes the message google.cloud.batch.v1alpha.UsageResourceAllowance.
 * Use `create(UsageResourceAllowanceSchema)` to create a new message.
 */
export const UsageResourceAllowanceSchema: GenMessage<UsageResourceAllowance> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1alpha_resource_allowance, 1);

/**
 * Spec of a usage ResourceAllowance.
 *
 * @generated from message google.cloud.batch.v1alpha.UsageResourceAllowanceSpec
 */
export type UsageResourceAllowanceSpec = Message<"google.cloud.batch.v1alpha.UsageResourceAllowanceSpec"> & {
  /**
   * Required. Spec type is unique for each usage ResourceAllowance.
   * Batch now only supports type as "cpu-core-hours" for CPU usage consumption
   * tracking.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Required. Threshold of a UsageResourceAllowance limiting how many resources
   * can be consumed for each type.
   *
   * @generated from field: google.cloud.batch.v1alpha.UsageResourceAllowanceSpec.Limit limit = 2;
   */
  limit?: UsageResourceAllowanceSpec_Limit;
};

/**
 * Describes the message google.cloud.batch.v1alpha.UsageResourceAllowanceSpec.
 * Use `create(UsageResourceAllowanceSpecSchema)` to create a new message.
 */
export const UsageResourceAllowanceSpecSchema: GenMessage<UsageResourceAllowanceSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1alpha_resource_allowance, 2);

/**
 * UsageResourceAllowance limitation.
 *
 * @generated from message google.cloud.batch.v1alpha.UsageResourceAllowanceSpec.Limit
 */
export type UsageResourceAllowanceSpec_Limit = Message<"google.cloud.batch.v1alpha.UsageResourceAllowanceSpec.Limit"> & {
  /**
   * @generated from oneof google.cloud.batch.v1alpha.UsageResourceAllowanceSpec.Limit.duration
   */
  duration: {
    /**
     * Optional. A CalendarPeriod represents the abstract concept of a time
     * period that has a canonical start.
     *
     * @generated from field: google.cloud.batch.v1alpha.CalendarPeriod calendar_period = 1;
     */
    value: CalendarPeriod;
    case: "calendarPeriod";
  } | { case: undefined; value?: undefined };

  /**
   * Required. Limit value of a UsageResourceAllowance within its one
   * duration.
   *
   * Limit cannot be a negative value. Default is 0.
   * For example, you can set `limit` as 10000.0 with duration of the current
   * month by setting `calendar_period` field as monthly. That means in your
   * current month, 10000.0 is the core hour limitation that your resources
   * are allowed to consume.
   *
   * @generated from field: optional double limit = 2;
   */
  limit?: number;
};

/**
 * Describes the message google.cloud.batch.v1alpha.UsageResourceAllowanceSpec.Limit.
 * Use `create(UsageResourceAllowanceSpec_LimitSchema)` to create a new message.
 */
export const UsageResourceAllowanceSpec_LimitSchema: GenMessage<UsageResourceAllowanceSpec_Limit> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1alpha_resource_allowance, 2, 0);

/**
 * Status of a usage ResourceAllowance.
 *
 * @generated from message google.cloud.batch.v1alpha.UsageResourceAllowanceStatus
 */
export type UsageResourceAllowanceStatus = Message<"google.cloud.batch.v1alpha.UsageResourceAllowanceStatus"> & {
  /**
   * Output only. ResourceAllowance state.
   *
   * @generated from field: google.cloud.batch.v1alpha.ResourceAllowanceState state = 1;
   */
  state: ResourceAllowanceState;

  /**
   * Output only. ResourceAllowance consumption status for usage resources.
   *
   * @generated from field: google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.LimitStatus limit_status = 2;
   */
  limitStatus?: UsageResourceAllowanceStatus_LimitStatus;

  /**
   * Output only. The report of ResourceAllowance consumptions in a time period.
   *
   * @generated from field: google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.ConsumptionReport report = 3;
   */
  report?: UsageResourceAllowanceStatus_ConsumptionReport;
};

/**
 * Describes the message google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.
 * Use `create(UsageResourceAllowanceStatusSchema)` to create a new message.
 */
export const UsageResourceAllowanceStatusSchema: GenMessage<UsageResourceAllowanceStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1alpha_resource_allowance, 3);

/**
 * UsageResourceAllowanceStatus detail about usage consumption.
 *
 * @generated from message google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.LimitStatus
 */
export type UsageResourceAllowanceStatus_LimitStatus = Message<"google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.LimitStatus"> & {
  /**
   * Output only. The consumption interval.
   *
   * @generated from field: google.type.Interval consumption_interval = 1;
   */
  consumptionInterval?: Interval;

  /**
   * Output only. Limit value of a UsageResourceAllowance within its one
   * duration.
   *
   * @generated from field: optional double limit = 2;
   */
  limit?: number;

  /**
   * Output only. Accumulated consumption during `consumption_interval`.
   *
   * @generated from field: optional double consumed = 3;
   */
  consumed?: number;
};

/**
 * Describes the message google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.LimitStatus.
 * Use `create(UsageResourceAllowanceStatus_LimitStatusSchema)` to create a new message.
 */
export const UsageResourceAllowanceStatus_LimitStatusSchema: GenMessage<UsageResourceAllowanceStatus_LimitStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1alpha_resource_allowance, 3, 0);

/**
 * @generated from message google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.PeriodConsumption
 */
export type UsageResourceAllowanceStatus_PeriodConsumption = Message<"google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.PeriodConsumption"> & {
  /**
   * Output only. The consumption interval.
   *
   * @generated from field: google.type.Interval consumption_interval = 1;
   */
  consumptionInterval?: Interval;

  /**
   * Output only. Accumulated consumption during `consumption_interval`.
   *
   * @generated from field: optional double consumed = 2;
   */
  consumed?: number;
};

/**
 * Describes the message google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.PeriodConsumption.
 * Use `create(UsageResourceAllowanceStatus_PeriodConsumptionSchema)` to create a new message.
 */
export const UsageResourceAllowanceStatus_PeriodConsumptionSchema: GenMessage<UsageResourceAllowanceStatus_PeriodConsumption> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1alpha_resource_allowance, 3, 1);

/**
 * ConsumptionReport is the report of ResourceAllowance consumptions in a time
 * period.
 *
 * @generated from message google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.ConsumptionReport
 */
export type UsageResourceAllowanceStatus_ConsumptionReport = Message<"google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.ConsumptionReport"> & {
  /**
   * Output only. ResourceAllowance consumptions in the latest calendar
   * period. Key is the calendar period in string format. Batch currently
   * supports HOUR, DAY, MONTH and YEAR.
   *
   * @generated from field: map<string, google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.PeriodConsumption> latest_period_consumptions = 1;
   */
  latestPeriodConsumptions: { [key: string]: UsageResourceAllowanceStatus_PeriodConsumption };
};

/**
 * Describes the message google.cloud.batch.v1alpha.UsageResourceAllowanceStatus.ConsumptionReport.
 * Use `create(UsageResourceAllowanceStatus_ConsumptionReportSchema)` to create a new message.
 */
export const UsageResourceAllowanceStatus_ConsumptionReportSchema: GenMessage<UsageResourceAllowanceStatus_ConsumptionReport> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1alpha_resource_allowance, 3, 2);

/**
 * A `CalendarPeriod` represents the abstract concept of a time period that
 * has a canonical start. All calendar times begin at 12 AM US and Canadian
 * Pacific Time (UTC-8).
 *
 * @generated from enum google.cloud.batch.v1alpha.CalendarPeriod
 */
export enum CalendarPeriod {
  /**
   * Unspecified.
   *
   * @generated from enum value: CALENDAR_PERIOD_UNSPECIFIED = 0;
   */
  CALENDAR_PERIOD_UNSPECIFIED = 0,

  /**
   * The month starts on the first date of the month and resets at the beginning
   * of each month.
   *
   * @generated from enum value: MONTH = 1;
   */
  MONTH = 1,

  /**
   * The quarter starts on dates January 1, April 1, July 1, and October 1 of
   * each year and resets at the beginning of the next quarter.
   *
   * @generated from enum value: QUARTER = 2;
   */
  QUARTER = 2,

  /**
   * The year starts on January 1 and resets at the beginning of the next year.
   *
   * @generated from enum value: YEAR = 3;
   */
  YEAR = 3,

  /**
   * The week period starts and resets every Monday.
   *
   * @generated from enum value: WEEK = 4;
   */
  WEEK = 4,

  /**
   * The day starts at 12:00am.
   *
   * @generated from enum value: DAY = 5;
   */
  DAY = 5,
}

/**
 * Describes the enum google.cloud.batch.v1alpha.CalendarPeriod.
 */
export const CalendarPeriodSchema: GenEnum<CalendarPeriod> = /*@__PURE__*/
  enumDesc(file_google_cloud_batch_v1alpha_resource_allowance, 0);

/**
 * ResourceAllowance valid state.
 *
 * @generated from enum google.cloud.batch.v1alpha.ResourceAllowanceState
 */
export enum ResourceAllowanceState {
  /**
   * Unspecified.
   *
   * @generated from enum value: RESOURCE_ALLOWANCE_STATE_UNSPECIFIED = 0;
   */
  RESOURCE_ALLOWANCE_STATE_UNSPECIFIED = 0,

  /**
   * ResourceAllowance is active and in use.
   *
   * @generated from enum value: RESOURCE_ALLOWANCE_ACTIVE = 1;
   */
  RESOURCE_ALLOWANCE_ACTIVE = 1,

  /**
   * ResourceAllowance limit is reached.
   *
   * @generated from enum value: RESOURCE_ALLOWANCE_DEPLETED = 2;
   */
  RESOURCE_ALLOWANCE_DEPLETED = 2,
}

/**
 * Describes the enum google.cloud.batch.v1alpha.ResourceAllowanceState.
 */
export const ResourceAllowanceStateSchema: GenEnum<ResourceAllowanceState> = /*@__PURE__*/
  enumDesc(file_google_cloud_batch_v1alpha_resource_allowance, 1);

