// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/batch/v1/volume.proto (package google.cloud.batch.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/batch/v1/volume.proto.
 */
export const file_google_cloud_batch_v1_volume: GenFile = /*@__PURE__*/
  fileDesc("CiJnb29nbGUvY2xvdWQvYmF0Y2gvdjEvdm9sdW1lLnByb3RvEhVnb29nbGUuY2xvdWQuYmF0Y2gudjEiqgEKBlZvbHVtZRIpCgNuZnMYASABKAsyGi5nb29nbGUuY2xvdWQuYmF0Y2gudjEuTkZTSAASKQoDZ2NzGAMgASgLMhouZ29vZ2xlLmNsb3VkLmJhdGNoLnYxLkdDU0gAEhUKC2RldmljZV9uYW1lGAYgASgJSAASEgoKbW91bnRfcGF0aBgEIAEoCRIVCg1tb3VudF9vcHRpb25zGAUgAygJQggKBnNvdXJjZSIqCgNORlMSDgoGc2VydmVyGAEgASgJEhMKC3JlbW90ZV9wYXRoGAIgASgJIhoKA0dDUxITCgtyZW1vdGVfcGF0aBgBIAEoCUKsAQoZY29tLmdvb2dsZS5jbG91ZC5iYXRjaC52MUILVm9sdW1lUHJvdG9QAVovY2xvdWQuZ29vZ2xlLmNvbS9nby9iYXRjaC9hcGl2MS9iYXRjaHBiO2JhdGNocGKiAgNHQ0KqAhVHb29nbGUuQ2xvdWQuQmF0Y2guVjHKAhVHb29nbGVcQ2xvdWRcQmF0Y2hcVjHqAhhHb29nbGU6OkNsb3VkOjpCYXRjaDo6VjFiBnByb3RvMw");

/**
 * Volume describes a volume and parameters for it to be mounted to a VM.
 *
 * @generated from message google.cloud.batch.v1.Volume
 */
export type Volume = Message<"google.cloud.batch.v1.Volume"> & {
  /**
   * The source for the volume.
   *
   * @generated from oneof google.cloud.batch.v1.Volume.source
   */
  source: {
    /**
     * A Network File System (NFS) volume. For example, a
     * Filestore file share.
     *
     * @generated from field: google.cloud.batch.v1.NFS nfs = 1;
     */
    value: NFS;
    case: "nfs";
  } | {
    /**
     * A Google Cloud Storage (GCS) volume.
     *
     * @generated from field: google.cloud.batch.v1.GCS gcs = 3;
     */
    value: GCS;
    case: "gcs";
  } | {
    /**
     * Device name of an attached disk volume, which should align with a
     * device_name specified by
     * job.allocation_policy.instances[0].policy.disks[i].device_name or
     * defined by the given instance template in
     * job.allocation_policy.instances[0].instance_template.
     *
     * @generated from field: string device_name = 6;
     */
    value: string;
    case: "deviceName";
  } | { case: undefined; value?: undefined };

  /**
   * The mount path for the volume, e.g. /mnt/disks/share.
   *
   * @generated from field: string mount_path = 4;
   */
  mountPath: string;

  /**
   * Mount options vary based on the type of storage volume:
   *
   * * For a Cloud Storage bucket, all the mount options provided
   * by
   *   the [`gcsfuse` tool](https://cloud.google.com/storage/docs/gcsfuse-cli)
   *   are supported.
   * * For an existing persistent disk, all mount options provided by the
   *   [`mount` command](https://man7.org/linux/man-pages/man8/mount.8.html)
   *   except writing are supported. This is due to restrictions of
   *   [multi-writer
   *   mode](https://cloud.google.com/compute/docs/disks/sharing-disks-between-vms).
   * * For any other disk or a Network File System (NFS), all the
   *   mount options provided by the `mount` command are supported.
   *
   * @generated from field: repeated string mount_options = 5;
   */
  mountOptions: string[];
};

/**
 * Describes the message google.cloud.batch.v1.Volume.
 * Use `create(VolumeSchema)` to create a new message.
 */
export const VolumeSchema: GenMessage<Volume> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1_volume, 0);

/**
 * Represents an NFS volume.
 *
 * @generated from message google.cloud.batch.v1.NFS
 */
export type NFS = Message<"google.cloud.batch.v1.NFS"> & {
  /**
   * The IP address of the NFS.
   *
   * @generated from field: string server = 1;
   */
  server: string;

  /**
   * Remote source path exported from the NFS, e.g., "/share".
   *
   * @generated from field: string remote_path = 2;
   */
  remotePath: string;
};

/**
 * Describes the message google.cloud.batch.v1.NFS.
 * Use `create(NFSSchema)` to create a new message.
 */
export const NFSSchema: GenMessage<NFS> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1_volume, 1);

/**
 * Represents a Google Cloud Storage volume.
 *
 * @generated from message google.cloud.batch.v1.GCS
 */
export type GCS = Message<"google.cloud.batch.v1.GCS"> & {
  /**
   * Remote path, either a bucket name or a subdirectory of a bucket, e.g.:
   * bucket_name, bucket_name/subdirectory/
   *
   * @generated from field: string remote_path = 1;
   */
  remotePath: string;
};

/**
 * Describes the message google.cloud.batch.v1.GCS.
 * Use `create(GCSSchema)` to create a new message.
 */
export const GCSSchema: GenMessage<GCS> = /*@__PURE__*/
  messageDesc(file_google_cloud_batch_v1_volume, 2);

