// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/servicedirectory/v1beta1/lookup_service.proto (package google.cloud.servicedirectory.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Service } from "./service_pb";
import { file_google_cloud_servicedirectory_v1beta1_service } from "./service_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/servicedirectory/v1beta1/lookup_service.proto.
 */
export const file_google_cloud_servicedirectory_v1beta1_lookup_service: GenFile = /*@__PURE__*/
  fileDesc("Cjpnb29nbGUvY2xvdWQvc2VydmljZWRpcmVjdG9yeS92MWJldGExL2xvb2t1cF9zZXJ2aWNlLnByb3RvEiVnb29nbGUuY2xvdWQuc2VydmljZWRpcmVjdG9yeS52MWJldGExIpABChVSZXNvbHZlU2VydmljZVJlcXVlc3QSPQoEbmFtZRgBIAEoCUIv4EEC+kEpCidzZXJ2aWNlZGlyZWN0b3J5Lmdvb2dsZWFwaXMuY29tL1NlcnZpY2USGgoNbWF4X2VuZHBvaW50cxgCIAEoBUID4EEBEhwKD2VuZHBvaW50X2ZpbHRlchgDIAEoCUID4EEBIlkKFlJlc29sdmVTZXJ2aWNlUmVzcG9uc2USPwoHc2VydmljZRgBIAEoCzIuLmdvb2dsZS5jbG91ZC5zZXJ2aWNlZGlyZWN0b3J5LnYxYmV0YTEuU2VydmljZTLHAgoNTG9va3VwU2VydmljZRLgAQoOUmVzb2x2ZVNlcnZpY2USPC5nb29nbGUuY2xvdWQuc2VydmljZWRpcmVjdG9yeS52MWJldGExLlJlc29sdmVTZXJ2aWNlUmVxdWVzdBo9Lmdvb2dsZS5jbG91ZC5zZXJ2aWNlZGlyZWN0b3J5LnYxYmV0YTEuUmVzb2x2ZVNlcnZpY2VSZXNwb25zZSJRgtPkkwJLOgEqIkYvdjFiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL25hbWVzcGFjZXMvKi9zZXJ2aWNlcy8qfTpyZXNvbHZlGlPKQR9zZXJ2aWNlZGlyZWN0b3J5Lmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybUKWAgopY29tLmdvb2dsZS5jbG91ZC5zZXJ2aWNlZGlyZWN0b3J5LnYxYmV0YTFCEkxvb2t1cFNlcnZpY2VQcm90b1ABWlVjbG91ZC5nb29nbGUuY29tL2dvL3NlcnZpY2VkaXJlY3RvcnkvYXBpdjFiZXRhMS9zZXJ2aWNlZGlyZWN0b3J5cGI7c2VydmljZWRpcmVjdG9yeXBi+AEBqgIlR29vZ2xlLkNsb3VkLlNlcnZpY2VEaXJlY3RvcnkuVjFCZXRhMcoCJUdvb2dsZVxDbG91ZFxTZXJ2aWNlRGlyZWN0b3J5XFYxYmV0YTHqAihHb29nbGU6OkNsb3VkOjpTZXJ2aWNlRGlyZWN0b3J5OjpWMWJldGExYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_servicedirectory_v1beta1_service]);

/**
 * The request message for
 * [LookupService.ResolveService][google.cloud.servicedirectory.v1beta1.LookupService.ResolveService].
 * Looks up a service by its name, returns the service and its endpoints.
 *
 * @generated from message google.cloud.servicedirectory.v1beta1.ResolveServiceRequest
 */
export type ResolveServiceRequest = Message<"google.cloud.servicedirectory.v1beta1.ResolveServiceRequest"> & {
  /**
   * Required. The name of the service to resolve.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The maximum number of endpoints to return. Defaults to 25.
   * Maximum is 100. If a value less than one is specified, the Default is used.
   * If a value greater than the Maximum is specified, the Maximum is used.
   *
   * @generated from field: int32 max_endpoints = 2;
   */
  maxEndpoints: number;

  /**
   * Optional. The filter applied to the endpoints of the resolved service.
   *
   * General `filter` string syntax:
   * `<field> <operator> <value> (<logical connector>)`
   *
   * *   `<field>` can be `name`, `address`, `port`, or `metadata.<key>` for
   *     map field
   * *   `<operator>` can be `<`, `>`, `<=`, `>=`, `!=`, `=`, `:`. Of which `:`
   *     means `HAS`, and is roughly the same as `=`
   * *   `<value>` must be the same data type as field
   * *   `<logical connector>` can be `AND`, `OR`, `NOT`
   *
   * Examples of valid filters:
   *
   * *   `metadata.owner` returns endpoints that have a annotation with the key
   *     `owner`, this is the same as `metadata:owner`
   * *   `metadata.protocol=gRPC` returns endpoints that have key/value
   *     `protocol=gRPC`
   * *   `address=192.108.1.105` returns endpoints that have this address
   * *   `port>8080` returns endpoints that have port number larger than 8080
   * *
   * `name>projects/my-project/locations/us-east1/namespaces/my-namespace/services/my-service/endpoints/endpoint-c`
   *     returns endpoints that have name that is alphabetically later than the
   *     string, so "endpoint-e" is returned but "endpoint-a" is not
   * *
   * `name=projects/my-project/locations/us-central1/namespaces/my-namespace/services/my-service/endpoints/ep-1`
   *      returns the endpoint that has an endpoint_id equal to `ep-1`
   * *   `metadata.owner!=sd AND metadata.foo=bar` returns endpoints that have
   *     `owner` in annotation key but value is not `sd` AND have key/value
   *      `foo=bar`
   * *   `doesnotexist.foo=bar` returns an empty list. Note that endpoint
   *     doesn't have a field called "doesnotexist". Since the filter does not
   *     match any endpoint, it returns no results
   *
   * For more information about filtering, see
   * [API Filtering](https://aip.dev/160).
   *
   * @generated from field: string endpoint_filter = 3;
   */
  endpointFilter: string;
};

/**
 * Describes the message google.cloud.servicedirectory.v1beta1.ResolveServiceRequest.
 * Use `create(ResolveServiceRequestSchema)` to create a new message.
 */
export const ResolveServiceRequestSchema: GenMessage<ResolveServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicedirectory_v1beta1_lookup_service, 0);

/**
 * The response message for
 * [LookupService.ResolveService][google.cloud.servicedirectory.v1beta1.LookupService.ResolveService].
 *
 * @generated from message google.cloud.servicedirectory.v1beta1.ResolveServiceResponse
 */
export type ResolveServiceResponse = Message<"google.cloud.servicedirectory.v1beta1.ResolveServiceResponse"> & {
  /**
   * @generated from field: google.cloud.servicedirectory.v1beta1.Service service = 1;
   */
  service?: Service;
};

/**
 * Describes the message google.cloud.servicedirectory.v1beta1.ResolveServiceResponse.
 * Use `create(ResolveServiceResponseSchema)` to create a new message.
 */
export const ResolveServiceResponseSchema: GenMessage<ResolveServiceResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicedirectory_v1beta1_lookup_service, 1);

/**
 * Service Directory API for looking up service data at runtime.
 *
 * @generated from service google.cloud.servicedirectory.v1beta1.LookupService
 */
export const LookupService: GenService<{
  /**
   * Returns a [service][google.cloud.servicedirectory.v1beta1.Service] and its
   * associated endpoints.
   * Resolving a service is not considered an active developer method.
   *
   * @generated from rpc google.cloud.servicedirectory.v1beta1.LookupService.ResolveService
   */
  resolveService: {
    methodKind: "unary";
    input: typeof ResolveServiceRequestSchema;
    output: typeof ResolveServiceResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_servicedirectory_v1beta1_lookup_service, 0);

