// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/kms/v1/autokey.proto (package google.cloud.kms.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/kms/v1/autokey.proto.
 */
export const file_google_cloud_kms_v1_autokey: GenFile = /*@__PURE__*/
  fileDesc("CiFnb29nbGUvY2xvdWQva21zL3YxL2F1dG9rZXkucHJvdG8SE2dvb2dsZS5jbG91ZC5rbXMudjEiqAEKFkNyZWF0ZUtleUhhbmRsZVJlcXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhIaCg1rZXlfaGFuZGxlX2lkGAIgASgJQgPgQQESNwoKa2V5X2hhbmRsZRgDIAEoCzIeLmdvb2dsZS5jbG91ZC5rbXMudjEuS2V5SGFuZGxlQgPgQQIiTgoTR2V0S2V5SGFuZGxlUmVxdWVzdBI3CgRuYW1lGAEgASgJQingQQL6QSMKIWNsb3Vka21zLmdvb2dsZWFwaXMuY29tL0tleUhhbmRsZSL/AQoJS2V5SGFuZGxlEhEKBG5hbWUYASABKAlCA+BBCBI6CgdrbXNfa2V5GAMgASgJQingQQP6QSMKIWNsb3Vka21zLmdvb2dsZWFwaXMuY29tL0NyeXB0b0tleRIjChZyZXNvdXJjZV90eXBlX3NlbGVjdG9yGAQgASgJQgPgQQI6fupBewohY2xvdWRrbXMuZ29vZ2xlYXBpcy5jb20vS2V5SGFuZGxlEj9wcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0va2V5SGFuZGxlcy97a2V5X2hhbmRsZX0qCmtleUhhbmRsZXMyCWtleUhhbmRsZSIZChdDcmVhdGVLZXlIYW5kbGVNZXRhZGF0YSKYAQoVTGlzdEtleUhhbmRsZXNSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjCiFsb2NhdGlvbnMuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBEhMKBmZpbHRlchgEIAEoCUID4EEBImYKFkxpc3RLZXlIYW5kbGVzUmVzcG9uc2USMwoLa2V5X2hhbmRsZXMYASADKAsyHi5nb29nbGUuY2xvdWQua21zLnYxLktleUhhbmRsZRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkytAUKB0F1dG9rZXkS6wEKD0NyZWF0ZUtleUhhbmRsZRIrLmdvb2dsZS5jbG91ZC5rbXMudjEuQ3JlYXRlS2V5SGFuZGxlUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iiwHKQSQKCUtleUhhbmRsZRIXQ3JlYXRlS2V5SGFuZGxlTWV0YWRhdGHaQR9wYXJlbnQsa2V5X2hhbmRsZSxrZXlfaGFuZGxlX2lkgtPkkwI8OgprZXlfaGFuZGxlIi4vdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9rZXlIYW5kbGVzEpcBCgxHZXRLZXlIYW5kbGUSKC5nb29nbGUuY2xvdWQua21zLnYxLkdldEtleUhhbmRsZVJlcXVlc3QaHi5nb29nbGUuY2xvdWQua21zLnYxLktleUhhbmRsZSI92kEEbmFtZYLT5JMCMBIuL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyova2V5SGFuZGxlcy8qfRKqAQoOTGlzdEtleUhhbmRsZXMSKi5nb29nbGUuY2xvdWQua21zLnYxLkxpc3RLZXlIYW5kbGVzUmVxdWVzdBorLmdvb2dsZS5jbG91ZC5rbXMudjEuTGlzdEtleUhhbmRsZXNSZXNwb25zZSI/2kEGcGFyZW50gtPkkwIwEi4vdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9rZXlIYW5kbGVzGnTKQRdjbG91ZGttcy5nb29nbGVhcGlzLmNvbdJBV2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZGttc0JUChdjb20uZ29vZ2xlLmNsb3VkLmttcy52MUIMQXV0b2tleVByb3RvUAFaKWNsb3VkLmdvb2dsZS5jb20vZ28va21zL2FwaXYxL2ttc3BiO2ttc3BiYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations]);

/**
 * Request message for
 * [Autokey.CreateKeyHandle][google.cloud.kms.v1.Autokey.CreateKeyHandle].
 *
 * @generated from message google.cloud.kms.v1.CreateKeyHandleRequest
 */
export type CreateKeyHandleRequest = Message<"google.cloud.kms.v1.CreateKeyHandleRequest"> & {
  /**
   * Required. Name of the resource project and location to create the
   * [KeyHandle][google.cloud.kms.v1.KeyHandle] in, e.g.
   * `projects/{PROJECT_ID}/locations/{LOCATION}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Id of the [KeyHandle][google.cloud.kms.v1.KeyHandle]. Must be
   * unique to the resource project and location. If not provided by the caller,
   * a new UUID is used.
   *
   * @generated from field: string key_handle_id = 2;
   */
  keyHandleId: string;

  /**
   * Required. [KeyHandle][google.cloud.kms.v1.KeyHandle] to create.
   *
   * @generated from field: google.cloud.kms.v1.KeyHandle key_handle = 3;
   */
  keyHandle?: KeyHandle;
};

/**
 * Describes the message google.cloud.kms.v1.CreateKeyHandleRequest.
 * Use `create(CreateKeyHandleRequestSchema)` to create a new message.
 */
export const CreateKeyHandleRequestSchema: GenMessage<CreateKeyHandleRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_autokey, 0);

/**
 * Request message for [GetKeyHandle][google.cloud.kms.v1.Autokey.GetKeyHandle].
 *
 * @generated from message google.cloud.kms.v1.GetKeyHandleRequest
 */
export type GetKeyHandleRequest = Message<"google.cloud.kms.v1.GetKeyHandleRequest"> & {
  /**
   * Required. Name of the [KeyHandle][google.cloud.kms.v1.KeyHandle] resource,
   * e.g.
   * `projects/{PROJECT_ID}/locations/{LOCATION}/keyHandles/{KEY_HANDLE_ID}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.kms.v1.GetKeyHandleRequest.
 * Use `create(GetKeyHandleRequestSchema)` to create a new message.
 */
export const GetKeyHandleRequestSchema: GenMessage<GetKeyHandleRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_autokey, 1);

/**
 * Resource-oriented representation of a request to Cloud KMS Autokey and the
 * resulting provisioning of a [CryptoKey][google.cloud.kms.v1.CryptoKey].
 *
 * @generated from message google.cloud.kms.v1.KeyHandle
 */
export type KeyHandle = Message<"google.cloud.kms.v1.KeyHandle"> & {
  /**
   * Identifier. Name of the [KeyHandle][google.cloud.kms.v1.KeyHandle]
   * resource, e.g.
   * `projects/{PROJECT_ID}/locations/{LOCATION}/keyHandles/{KEY_HANDLE_ID}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Name of a [CryptoKey][google.cloud.kms.v1.CryptoKey] that has
   * been provisioned for Customer Managed Encryption Key (CMEK) use in the
   * [KeyHandle][google.cloud.kms.v1.KeyHandle] project and location for the
   * requested resource type. The [CryptoKey][google.cloud.kms.v1.CryptoKey]
   * project will reflect the value configured in the
   * [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] on the resource
   * project's ancestor folder at the time of the
   * [KeyHandle][google.cloud.kms.v1.KeyHandle] creation. If more than one
   * ancestor folder has a configured
   * [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig], the nearest of these
   * configurations is used.
   *
   * @generated from field: string kms_key = 3;
   */
  kmsKey: string;

  /**
   * Required. Indicates the resource type that the resulting
   * [CryptoKey][google.cloud.kms.v1.CryptoKey] is meant to protect, e.g.
   * `{SERVICE}.googleapis.com/{TYPE}`. See documentation for supported resource
   * types.
   *
   * @generated from field: string resource_type_selector = 4;
   */
  resourceTypeSelector: string;
};

/**
 * Describes the message google.cloud.kms.v1.KeyHandle.
 * Use `create(KeyHandleSchema)` to create a new message.
 */
export const KeyHandleSchema: GenMessage<KeyHandle> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_autokey, 2);

/**
 * Metadata message for
 * [CreateKeyHandle][google.cloud.kms.v1.Autokey.CreateKeyHandle] long-running
 * operation response.
 *
 * @generated from message google.cloud.kms.v1.CreateKeyHandleMetadata
 */
export type CreateKeyHandleMetadata = Message<"google.cloud.kms.v1.CreateKeyHandleMetadata"> & {
};

/**
 * Describes the message google.cloud.kms.v1.CreateKeyHandleMetadata.
 * Use `create(CreateKeyHandleMetadataSchema)` to create a new message.
 */
export const CreateKeyHandleMetadataSchema: GenMessage<CreateKeyHandleMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_autokey, 3);

/**
 * Request message for
 * [Autokey.ListKeyHandles][google.cloud.kms.v1.Autokey.ListKeyHandles].
 *
 * @generated from message google.cloud.kms.v1.ListKeyHandlesRequest
 */
export type ListKeyHandlesRequest = Message<"google.cloud.kms.v1.ListKeyHandlesRequest"> & {
  /**
   * Required. Name of the resource project and location from which to list
   * [KeyHandles][google.cloud.kms.v1.KeyHandle], e.g.
   * `projects/{PROJECT_ID}/locations/{LOCATION}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Optional limit on the number of
   * [KeyHandles][google.cloud.kms.v1.KeyHandle] to include in the response. The
   * service may return fewer than this value. Further
   * [KeyHandles][google.cloud.kms.v1.KeyHandle] can subsequently be obtained by
   * including the
   * [ListKeyHandlesResponse.next_page_token][google.cloud.kms.v1.ListKeyHandlesResponse.next_page_token]
   * in a subsequent request.  If unspecified, at most
   * 100 [KeyHandles][google.cloud.kms.v1.KeyHandle] will be returned.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. Optional pagination token, returned earlier via
   * [ListKeyHandlesResponse.next_page_token][google.cloud.kms.v1.ListKeyHandlesResponse.next_page_token].
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filter to apply when listing
   * [KeyHandles][google.cloud.kms.v1.KeyHandle], e.g.
   * `resource_type_selector="{SERVICE}.googleapis.com/{TYPE}"`.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.kms.v1.ListKeyHandlesRequest.
 * Use `create(ListKeyHandlesRequestSchema)` to create a new message.
 */
export const ListKeyHandlesRequestSchema: GenMessage<ListKeyHandlesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_autokey, 4);

/**
 * Response message for
 * [Autokey.ListKeyHandles][google.cloud.kms.v1.Autokey.ListKeyHandles].
 *
 * @generated from message google.cloud.kms.v1.ListKeyHandlesResponse
 */
export type ListKeyHandlesResponse = Message<"google.cloud.kms.v1.ListKeyHandlesResponse"> & {
  /**
   * Resulting [KeyHandles][google.cloud.kms.v1.KeyHandle].
   *
   * @generated from field: repeated google.cloud.kms.v1.KeyHandle key_handles = 1;
   */
  keyHandles: KeyHandle[];

  /**
   * A token to retrieve next page of results. Pass this value in
   * [ListKeyHandlesRequest.page_token][google.cloud.kms.v1.ListKeyHandlesRequest.page_token]
   * to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.kms.v1.ListKeyHandlesResponse.
 * Use `create(ListKeyHandlesResponseSchema)` to create a new message.
 */
export const ListKeyHandlesResponseSchema: GenMessage<ListKeyHandlesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_autokey, 5);

/**
 * Provides interfaces for using [Cloud KMS
 * Autokey](https://cloud.google.com/kms/help/autokey) to provision new
 * [CryptoKeys][google.cloud.kms.v1.CryptoKey], ready for Customer Managed
 * Encryption Key (CMEK) use, on-demand. To support certain client tooling, this
 * feature is modeled around a [KeyHandle][google.cloud.kms.v1.KeyHandle]
 * resource: creating a [KeyHandle][google.cloud.kms.v1.KeyHandle] in a resource
 * project and given location triggers Cloud KMS Autokey to provision a
 * [CryptoKey][google.cloud.kms.v1.CryptoKey] in the configured key project and
 * the same location.
 *
 * Prior to use in a given resource project,
 * [UpdateAutokeyConfig][google.cloud.kms.v1.AutokeyAdmin.UpdateAutokeyConfig]
 * should have been called on an ancestor folder, setting the key project where
 * Cloud KMS Autokey should create new
 * [CryptoKeys][google.cloud.kms.v1.CryptoKey]. See documentation for additional
 * prerequisites. To check what key project, if any, is currently configured on
 * a resource project's ancestor folder, see
 * [ShowEffectiveAutokeyConfig][google.cloud.kms.v1.AutokeyAdmin.ShowEffectiveAutokeyConfig].
 *
 * @generated from service google.cloud.kms.v1.Autokey
 */
export const Autokey: GenService<{
  /**
   * Creates a new [KeyHandle][google.cloud.kms.v1.KeyHandle], triggering the
   * provisioning of a new [CryptoKey][google.cloud.kms.v1.CryptoKey] for CMEK
   * use with the given resource type in the configured key project and the same
   * location. [GetOperation][Operations.GetOperation] should be used to resolve
   * the resulting long-running operation and get the resulting
   * [KeyHandle][google.cloud.kms.v1.KeyHandle] and
   * [CryptoKey][google.cloud.kms.v1.CryptoKey].
   *
   * @generated from rpc google.cloud.kms.v1.Autokey.CreateKeyHandle
   */
  createKeyHandle: {
    methodKind: "unary";
    input: typeof CreateKeyHandleRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Returns the [KeyHandle][google.cloud.kms.v1.KeyHandle].
   *
   * @generated from rpc google.cloud.kms.v1.Autokey.GetKeyHandle
   */
  getKeyHandle: {
    methodKind: "unary";
    input: typeof GetKeyHandleRequestSchema;
    output: typeof KeyHandleSchema;
  },
  /**
   * Lists [KeyHandles][google.cloud.kms.v1.KeyHandle].
   *
   * @generated from rpc google.cloud.kms.v1.Autokey.ListKeyHandles
   */
  listKeyHandles: {
    methodKind: "unary";
    input: typeof ListKeyHandlesRequestSchema;
    output: typeof ListKeyHandlesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_kms_v1_autokey, 0);

