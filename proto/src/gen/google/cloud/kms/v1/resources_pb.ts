// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/kms/v1/resources.proto (package google.cloud.kms.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/kms/v1/resources.proto.
 */
export const file_google_cloud_kms_v1_resources: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * A [KeyRing][google.cloud.kms.v1.KeyRing] is a toplevel logical grouping of
 * [CryptoKeys][google.cloud.kms.v1.CryptoKey].
 *
 * @generated from message google.cloud.kms.v1.KeyRing
 */
export type KeyRing = Message<"google.cloud.kms.v1.KeyRing"> & {
  /**
   * Output only. The resource name for the
   * [KeyRing][google.cloud.kms.v1.KeyRing] in the format
   * `projects/*\/locations/*\/keyRings/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time at which this [KeyRing][google.cloud.kms.v1.KeyRing]
   * was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message google.cloud.kms.v1.KeyRing.
 * Use `create(KeyRingSchema)` to create a new message.
 */
export const KeyRingSchema: GenMessage<KeyRing> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 0);

/**
 * A [CryptoKey][google.cloud.kms.v1.CryptoKey] represents a logical key that
 * can be used for cryptographic operations.
 *
 * A [CryptoKey][google.cloud.kms.v1.CryptoKey] is made up of zero or more
 * [versions][google.cloud.kms.v1.CryptoKeyVersion], which represent the actual
 * key material used in cryptographic operations.
 *
 * @generated from message google.cloud.kms.v1.CryptoKey
 */
export type CryptoKey = Message<"google.cloud.kms.v1.CryptoKey"> & {
  /**
   * Output only. The resource name for this
   * [CryptoKey][google.cloud.kms.v1.CryptoKey] in the format
   * `projects/*\/locations/*\/keyRings/*\/cryptoKeys/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. A copy of the "primary"
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] that will be used
   * by [Encrypt][google.cloud.kms.v1.KeyManagementService.Encrypt] when this
   * [CryptoKey][google.cloud.kms.v1.CryptoKey] is given in
   * [EncryptRequest.name][google.cloud.kms.v1.EncryptRequest.name].
   *
   * The [CryptoKey][google.cloud.kms.v1.CryptoKey]'s primary version can be
   * updated via
   * [UpdateCryptoKeyPrimaryVersion][google.cloud.kms.v1.KeyManagementService.UpdateCryptoKeyPrimaryVersion].
   *
   * Keys with [purpose][google.cloud.kms.v1.CryptoKey.purpose]
   * [ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT]
   * may have a primary. For other keys, this field will be omitted.
   *
   * @generated from field: google.cloud.kms.v1.CryptoKeyVersion primary = 2;
   */
  primary?: CryptoKeyVersion;

  /**
   * Immutable. The immutable purpose of this
   * [CryptoKey][google.cloud.kms.v1.CryptoKey].
   *
   * @generated from field: google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose purpose = 3;
   */
  purpose: CryptoKey_CryptoKeyPurpose;

  /**
   * Output only. The time at which this
   * [CryptoKey][google.cloud.kms.v1.CryptoKey] was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * At [next_rotation_time][google.cloud.kms.v1.CryptoKey.next_rotation_time],
   * the Key Management Service will automatically:
   *
   * 1. Create a new version of this [CryptoKey][google.cloud.kms.v1.CryptoKey].
   * 2. Mark the new version as primary.
   *
   * Key rotations performed manually via
   * [CreateCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.CreateCryptoKeyVersion]
   * and
   * [UpdateCryptoKeyPrimaryVersion][google.cloud.kms.v1.KeyManagementService.UpdateCryptoKeyPrimaryVersion]
   * do not affect
   * [next_rotation_time][google.cloud.kms.v1.CryptoKey.next_rotation_time].
   *
   * Keys with [purpose][google.cloud.kms.v1.CryptoKey.purpose]
   * [ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT]
   * support automatic rotation. For other keys, this field must be omitted.
   *
   * @generated from field: google.protobuf.Timestamp next_rotation_time = 7;
   */
  nextRotationTime?: Timestamp;

  /**
   * Controls the rate of automatic rotation.
   *
   * @generated from oneof google.cloud.kms.v1.CryptoKey.rotation_schedule
   */
  rotationSchedule: {
    /**
     * [next_rotation_time][google.cloud.kms.v1.CryptoKey.next_rotation_time]
     * will be advanced by this period when the service automatically rotates a
     * key. Must be at least 24 hours and at most 876,000 hours.
     *
     * If [rotation_period][google.cloud.kms.v1.CryptoKey.rotation_period] is
     * set,
     * [next_rotation_time][google.cloud.kms.v1.CryptoKey.next_rotation_time]
     * must also be set.
     *
     * Keys with [purpose][google.cloud.kms.v1.CryptoKey.purpose]
     * [ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT]
     * support automatic rotation. For other keys, this field must be omitted.
     *
     * @generated from field: google.protobuf.Duration rotation_period = 8;
     */
    value: Duration;
    case: "rotationPeriod";
  } | { case: undefined; value?: undefined };

  /**
   * A template describing settings for new
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] instances. The
   * properties of new [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]
   * instances created by either
   * [CreateCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.CreateCryptoKeyVersion]
   * or auto-rotation are controlled by this template.
   *
   * @generated from field: google.cloud.kms.v1.CryptoKeyVersionTemplate version_template = 11;
   */
  versionTemplate?: CryptoKeyVersionTemplate;

  /**
   * Labels with user-defined metadata. For more information, see
   * [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).
   *
   * @generated from field: map<string, string> labels = 10;
   */
  labels: { [key: string]: string };

  /**
   * Immutable. Whether this key may contain imported versions only.
   *
   * @generated from field: bool import_only = 13;
   */
  importOnly: boolean;

  /**
   * Immutable. The period of time that versions of this key spend in the
   * [DESTROY_SCHEDULED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROY_SCHEDULED]
   * state before transitioning to
   * [DESTROYED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROYED].
   * If not specified at creation time, the default duration is 30 days.
   *
   * @generated from field: google.protobuf.Duration destroy_scheduled_duration = 14;
   */
  destroyScheduledDuration?: Duration;

  /**
   * Immutable. The resource name of the backend environment where the key
   * material for all [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion]
   * associated with this [CryptoKey][google.cloud.kms.v1.CryptoKey] reside and
   * where all related cryptographic operations are performed. Only applicable
   * if [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] have a
   * [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of
   * [EXTERNAL_VPC][CryptoKeyVersion.ProtectionLevel.EXTERNAL_VPC], with the
   * resource name in the format `projects/*\/locations/*\/ekmConnections/*`.
   * Note, this list is non-exhaustive and may apply to additional
   * [ProtectionLevels][google.cloud.kms.v1.ProtectionLevel] in the future.
   *
   * @generated from field: string crypto_key_backend = 15;
   */
  cryptoKeyBackend: string;

  /**
   * Optional. The policy used for Key Access Justifications Policy Enforcement.
   * If this field is present and this key is enrolled in Key Access
   * Justifications Policy Enforcement, the policy will be evaluated in encrypt,
   * decrypt, and sign operations, and the operation will fail if rejected by
   * the policy. The policy is defined by specifying zero or more allowed
   * justification codes.
   * https://cloud.google.com/assured-workloads/key-access-justifications/docs/justification-codes
   * By default, this field is absent, and all justification codes are allowed.
   *
   * @generated from field: google.cloud.kms.v1.KeyAccessJustificationsPolicy key_access_justifications_policy = 17;
   */
  keyAccessJustificationsPolicy?: KeyAccessJustificationsPolicy;
};

/**
 * Describes the message google.cloud.kms.v1.CryptoKey.
 * Use `create(CryptoKeySchema)` to create a new message.
 */
export const CryptoKeySchema: GenMessage<CryptoKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 1);

/**
 * [CryptoKeyPurpose][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose]
 * describes the cryptographic capabilities of a
 * [CryptoKey][google.cloud.kms.v1.CryptoKey]. A given key can only be used
 * for the operations allowed by its purpose. For more information, see [Key
 * purposes](https://cloud.google.com/kms/docs/algorithms#key_purposes).
 *
 * @generated from enum google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose
 */
export enum CryptoKey_CryptoKeyPurpose {
  /**
   * Not specified.
   *
   * @generated from enum value: CRYPTO_KEY_PURPOSE_UNSPECIFIED = 0;
   */
  CRYPTO_KEY_PURPOSE_UNSPECIFIED = 0,

  /**
   * [CryptoKeys][google.cloud.kms.v1.CryptoKey] with this purpose may be used
   * with [Encrypt][google.cloud.kms.v1.KeyManagementService.Encrypt] and
   * [Decrypt][google.cloud.kms.v1.KeyManagementService.Decrypt].
   *
   * @generated from enum value: ENCRYPT_DECRYPT = 1;
   */
  ENCRYPT_DECRYPT = 1,

  /**
   * [CryptoKeys][google.cloud.kms.v1.CryptoKey] with this purpose may be used
   * with
   * [AsymmetricSign][google.cloud.kms.v1.KeyManagementService.AsymmetricSign]
   * and
   * [GetPublicKey][google.cloud.kms.v1.KeyManagementService.GetPublicKey].
   *
   * @generated from enum value: ASYMMETRIC_SIGN = 5;
   */
  ASYMMETRIC_SIGN = 5,

  /**
   * [CryptoKeys][google.cloud.kms.v1.CryptoKey] with this purpose may be used
   * with
   * [AsymmetricDecrypt][google.cloud.kms.v1.KeyManagementService.AsymmetricDecrypt]
   * and
   * [GetPublicKey][google.cloud.kms.v1.KeyManagementService.GetPublicKey].
   *
   * @generated from enum value: ASYMMETRIC_DECRYPT = 6;
   */
  ASYMMETRIC_DECRYPT = 6,

  /**
   * [CryptoKeys][google.cloud.kms.v1.CryptoKey] with this purpose may be used
   * with [RawEncrypt][google.cloud.kms.v1.KeyManagementService.RawEncrypt]
   * and [RawDecrypt][google.cloud.kms.v1.KeyManagementService.RawDecrypt].
   * This purpose is meant to be used for interoperable symmetric
   * encryption and does not support automatic CryptoKey rotation.
   *
   * @generated from enum value: RAW_ENCRYPT_DECRYPT = 7;
   */
  RAW_ENCRYPT_DECRYPT = 7,

  /**
   * [CryptoKeys][google.cloud.kms.v1.CryptoKey] with this purpose may be used
   * with [MacSign][google.cloud.kms.v1.KeyManagementService.MacSign].
   *
   * @generated from enum value: MAC = 9;
   */
  MAC = 9,
}

/**
 * Describes the enum google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.
 */
export const CryptoKey_CryptoKeyPurposeSchema: GenEnum<CryptoKey_CryptoKeyPurpose> = /*@__PURE__*/
  enumDesc(file_google_cloud_kms_v1_resources, 1, 0);

/**
 * A [CryptoKeyVersionTemplate][google.cloud.kms.v1.CryptoKeyVersionTemplate]
 * specifies the properties to use when creating a new
 * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion], either manually
 * with
 * [CreateCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.CreateCryptoKeyVersion]
 * or automatically as a result of auto-rotation.
 *
 * @generated from message google.cloud.kms.v1.CryptoKeyVersionTemplate
 */
export type CryptoKeyVersionTemplate = Message<"google.cloud.kms.v1.CryptoKeyVersionTemplate"> & {
  /**
   * [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] to use when creating
   * a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] based on this
   * template. Immutable. Defaults to
   * [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE].
   *
   * @generated from field: google.cloud.kms.v1.ProtectionLevel protection_level = 1;
   */
  protectionLevel: ProtectionLevel;

  /**
   * Required.
   * [Algorithm][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm]
   * to use when creating a
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] based on this
   * template.
   *
   * For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both
   * this field is omitted and
   * [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose] is
   * [ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT].
   *
   * @generated from field: google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm algorithm = 3;
   */
  algorithm: CryptoKeyVersion_CryptoKeyVersionAlgorithm;
};

/**
 * Describes the message google.cloud.kms.v1.CryptoKeyVersionTemplate.
 * Use `create(CryptoKeyVersionTemplateSchema)` to create a new message.
 */
export const CryptoKeyVersionTemplateSchema: GenMessage<CryptoKeyVersionTemplate> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 2);

/**
 * Contains an HSM-generated attestation about a key operation. For more
 * information, see [Verifying attestations]
 * (https://cloud.google.com/kms/docs/attest-key).
 *
 * @generated from message google.cloud.kms.v1.KeyOperationAttestation
 */
export type KeyOperationAttestation = Message<"google.cloud.kms.v1.KeyOperationAttestation"> & {
  /**
   * Output only. The format of the attestation data.
   *
   * @generated from field: google.cloud.kms.v1.KeyOperationAttestation.AttestationFormat format = 4;
   */
  format: KeyOperationAttestation_AttestationFormat;

  /**
   * Output only. The attestation data provided by the HSM when the key
   * operation was performed.
   *
   * @generated from field: bytes content = 5;
   */
  content: Uint8Array;

  /**
   * Output only. The certificate chains needed to validate the attestation
   *
   * @generated from field: google.cloud.kms.v1.KeyOperationAttestation.CertificateChains cert_chains = 6;
   */
  certChains?: KeyOperationAttestation_CertificateChains;
};

/**
 * Describes the message google.cloud.kms.v1.KeyOperationAttestation.
 * Use `create(KeyOperationAttestationSchema)` to create a new message.
 */
export const KeyOperationAttestationSchema: GenMessage<KeyOperationAttestation> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 3);

/**
 * Certificate chains needed to verify the attestation.
 * Certificates in chains are PEM-encoded and are ordered based on
 * https://tools.ietf.org/html/rfc5246#section-7.4.2.
 *
 * @generated from message google.cloud.kms.v1.KeyOperationAttestation.CertificateChains
 */
export type KeyOperationAttestation_CertificateChains = Message<"google.cloud.kms.v1.KeyOperationAttestation.CertificateChains"> & {
  /**
   * Cavium certificate chain corresponding to the attestation.
   *
   * @generated from field: repeated string cavium_certs = 1;
   */
  caviumCerts: string[];

  /**
   * Google card certificate chain corresponding to the attestation.
   *
   * @generated from field: repeated string google_card_certs = 2;
   */
  googleCardCerts: string[];

  /**
   * Google partition certificate chain corresponding to the attestation.
   *
   * @generated from field: repeated string google_partition_certs = 3;
   */
  googlePartitionCerts: string[];
};

/**
 * Describes the message google.cloud.kms.v1.KeyOperationAttestation.CertificateChains.
 * Use `create(KeyOperationAttestation_CertificateChainsSchema)` to create a new message.
 */
export const KeyOperationAttestation_CertificateChainsSchema: GenMessage<KeyOperationAttestation_CertificateChains> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 3, 0);

/**
 * Attestation formats provided by the HSM.
 *
 * @generated from enum google.cloud.kms.v1.KeyOperationAttestation.AttestationFormat
 */
export enum KeyOperationAttestation_AttestationFormat {
  /**
   * Not specified.
   *
   * @generated from enum value: ATTESTATION_FORMAT_UNSPECIFIED = 0;
   */
  ATTESTATION_FORMAT_UNSPECIFIED = 0,

  /**
   * Cavium HSM attestation compressed with gzip. Note that this format is
   * defined by Cavium and subject to change at any time.
   *
   * See
   * https://www.marvell.com/products/security-solutions/nitrox-hs-adapters/software-key-attestation.html.
   *
   * @generated from enum value: CAVIUM_V1_COMPRESSED = 3;
   */
  CAVIUM_V1_COMPRESSED = 3,

  /**
   * Cavium HSM attestation V2 compressed with gzip. This is a new format
   * introduced in Cavium's version 3.2-08.
   *
   * @generated from enum value: CAVIUM_V2_COMPRESSED = 4;
   */
  CAVIUM_V2_COMPRESSED = 4,
}

/**
 * Describes the enum google.cloud.kms.v1.KeyOperationAttestation.AttestationFormat.
 */
export const KeyOperationAttestation_AttestationFormatSchema: GenEnum<KeyOperationAttestation_AttestationFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_kms_v1_resources, 3, 0);

/**
 * A [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] represents an
 * individual cryptographic key, and the associated key material.
 *
 * An
 * [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED]
 * version can be used for cryptographic operations.
 *
 * For security reasons, the raw cryptographic key material represented by a
 * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] can never be viewed
 * or exported. It can only be used to encrypt, decrypt, or sign data when an
 * authorized user or application invokes Cloud KMS.
 *
 * @generated from message google.cloud.kms.v1.CryptoKeyVersion
 */
export type CryptoKeyVersion = Message<"google.cloud.kms.v1.CryptoKeyVersion"> & {
  /**
   * Output only. The resource name for this
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] in the format
   * `projects/*\/locations/*\/keyRings/*\/cryptoKeys/*\/cryptoKeyVersions/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The current state of the
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion].
   *
   * @generated from field: google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState state = 3;
   */
  state: CryptoKeyVersion_CryptoKeyVersionState;

  /**
   * Output only. The [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel]
   * describing how crypto operations are performed with this
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion].
   *
   * @generated from field: google.cloud.kms.v1.ProtectionLevel protection_level = 7;
   */
  protectionLevel: ProtectionLevel;

  /**
   * Output only. The
   * [CryptoKeyVersionAlgorithm][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm]
   * that this [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]
   * supports.
   *
   * @generated from field: google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm algorithm = 10;
   */
  algorithm: CryptoKeyVersion_CryptoKeyVersionAlgorithm;

  /**
   * Output only. Statement that was generated and signed by the HSM at key
   * creation time. Use this statement to verify attributes of the key as stored
   * on the HSM, independently of Google. Only provided for key versions with
   * [protection_level][google.cloud.kms.v1.CryptoKeyVersion.protection_level]
   * [HSM][google.cloud.kms.v1.ProtectionLevel.HSM].
   *
   * @generated from field: google.cloud.kms.v1.KeyOperationAttestation attestation = 8;
   */
  attestation?: KeyOperationAttestation;

  /**
   * Output only. The time at which this
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time this
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]'s key material was
   * generated.
   *
   * @generated from field: google.protobuf.Timestamp generate_time = 11;
   */
  generateTime?: Timestamp;

  /**
   * Output only. The time this
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]'s key material is
   * scheduled for destruction. Only present if
   * [state][google.cloud.kms.v1.CryptoKeyVersion.state] is
   * [DESTROY_SCHEDULED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROY_SCHEDULED].
   *
   * @generated from field: google.protobuf.Timestamp destroy_time = 5;
   */
  destroyTime?: Timestamp;

  /**
   * Output only. The time this CryptoKeyVersion's key material was
   * destroyed. Only present if
   * [state][google.cloud.kms.v1.CryptoKeyVersion.state] is
   * [DESTROYED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROYED].
   *
   * @generated from field: google.protobuf.Timestamp destroy_event_time = 6;
   */
  destroyEventTime?: Timestamp;

  /**
   * Output only. The name of the [ImportJob][google.cloud.kms.v1.ImportJob]
   * used in the most recent import of this
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]. Only present if
   * the underlying key material was imported.
   *
   * @generated from field: string import_job = 14;
   */
  importJob: string;

  /**
   * Output only. The time at which this
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]'s key material was
   * most recently imported.
   *
   * @generated from field: google.protobuf.Timestamp import_time = 15;
   */
  importTime?: Timestamp;

  /**
   * Output only. The root cause of the most recent import failure. Only present
   * if [state][google.cloud.kms.v1.CryptoKeyVersion.state] is
   * [IMPORT_FAILED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.IMPORT_FAILED].
   *
   * @generated from field: string import_failure_reason = 16;
   */
  importFailureReason: string;

  /**
   * Output only. The root cause of the most recent generation failure. Only
   * present if [state][google.cloud.kms.v1.CryptoKeyVersion.state] is
   * [GENERATION_FAILED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.GENERATION_FAILED].
   *
   * @generated from field: string generation_failure_reason = 19;
   */
  generationFailureReason: string;

  /**
   * Output only. The root cause of the most recent external destruction
   * failure. Only present if
   * [state][google.cloud.kms.v1.CryptoKeyVersion.state] is
   * [EXTERNAL_DESTRUCTION_FAILED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.EXTERNAL_DESTRUCTION_FAILED].
   *
   * @generated from field: string external_destruction_failure_reason = 20;
   */
  externalDestructionFailureReason: string;

  /**
   * ExternalProtectionLevelOptions stores a group of additional fields for
   * configuring a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] that
   * are specific to the
   * [EXTERNAL][google.cloud.kms.v1.ProtectionLevel.EXTERNAL] protection level
   * and [EXTERNAL_VPC][google.cloud.kms.v1.ProtectionLevel.EXTERNAL_VPC]
   * protection levels.
   *
   * @generated from field: google.cloud.kms.v1.ExternalProtectionLevelOptions external_protection_level_options = 17;
   */
  externalProtectionLevelOptions?: ExternalProtectionLevelOptions;

  /**
   * Output only. Whether or not this key version is eligible for reimport, by
   * being specified as a target in
   * [ImportCryptoKeyVersionRequest.crypto_key_version][google.cloud.kms.v1.ImportCryptoKeyVersionRequest.crypto_key_version].
   *
   * @generated from field: bool reimport_eligible = 18;
   */
  reimportEligible: boolean;
};

/**
 * Describes the message google.cloud.kms.v1.CryptoKeyVersion.
 * Use `create(CryptoKeyVersionSchema)` to create a new message.
 */
export const CryptoKeyVersionSchema: GenMessage<CryptoKeyVersion> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 4);

/**
 * The algorithm of the
 * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion], indicating what
 * parameters must be used for each cryptographic operation.
 *
 * The
 * [GOOGLE_SYMMETRIC_ENCRYPTION][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm.GOOGLE_SYMMETRIC_ENCRYPTION]
 * algorithm is usable with
 * [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]
 * [ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT].
 *
 * Algorithms beginning with `RSA_SIGN_` are usable with
 * [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]
 * [ASYMMETRIC_SIGN][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_SIGN].
 *
 * The fields in the name after `RSA_SIGN_` correspond to the following
 * parameters: padding algorithm, modulus bit length, and digest algorithm.
 *
 * For PSS, the salt length used is equal to the length of digest
 * algorithm. For example,
 * [RSA_SIGN_PSS_2048_SHA256][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_2048_SHA256]
 * will use PSS with a salt length of 256 bits or 32 bytes.
 *
 * Algorithms beginning with `RSA_DECRYPT_` are usable with
 * [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]
 * [ASYMMETRIC_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_DECRYPT].
 *
 * The fields in the name after `RSA_DECRYPT_` correspond to the following
 * parameters: padding algorithm, modulus bit length, and digest algorithm.
 *
 * Algorithms beginning with `EC_SIGN_` are usable with
 * [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]
 * [ASYMMETRIC_SIGN][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_SIGN].
 *
 * The fields in the name after `EC_SIGN_` correspond to the following
 * parameters: elliptic curve, digest algorithm.
 *
 * Algorithms beginning with `HMAC_` are usable with
 * [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]
 * [MAC][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.MAC].
 *
 * The suffix following `HMAC_` corresponds to the hash algorithm being used
 * (eg. SHA256).
 *
 * For more information, see [Key purposes and algorithms]
 * (https://cloud.google.com/kms/docs/algorithms).
 *
 * @generated from enum google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm
 */
export enum CryptoKeyVersion_CryptoKeyVersionAlgorithm {
  /**
   * Not specified.
   *
   * @generated from enum value: CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED = 0;
   */
  CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED = 0,

  /**
   * Creates symmetric encryption keys.
   *
   * @generated from enum value: GOOGLE_SYMMETRIC_ENCRYPTION = 1;
   */
  GOOGLE_SYMMETRIC_ENCRYPTION = 1,

  /**
   * AES-GCM (Galois Counter Mode) using 128-bit keys.
   *
   * @generated from enum value: AES_128_GCM = 41;
   */
  AES_128_GCM = 41,

  /**
   * AES-GCM (Galois Counter Mode) using 256-bit keys.
   *
   * @generated from enum value: AES_256_GCM = 19;
   */
  AES_256_GCM = 19,

  /**
   * AES-CBC (Cipher Block Chaining Mode) using 128-bit keys.
   *
   * @generated from enum value: AES_128_CBC = 42;
   */
  AES_128_CBC = 42,

  /**
   * AES-CBC (Cipher Block Chaining Mode) using 256-bit keys.
   *
   * @generated from enum value: AES_256_CBC = 43;
   */
  AES_256_CBC = 43,

  /**
   * AES-CTR (Counter Mode) using 128-bit keys.
   *
   * @generated from enum value: AES_128_CTR = 44;
   */
  AES_128_CTR = 44,

  /**
   * AES-CTR (Counter Mode) using 256-bit keys.
   *
   * @generated from enum value: AES_256_CTR = 45;
   */
  AES_256_CTR = 45,

  /**
   * RSASSA-PSS 2048 bit key with a SHA256 digest.
   *
   * @generated from enum value: RSA_SIGN_PSS_2048_SHA256 = 2;
   */
  RSA_SIGN_PSS_2048_SHA256 = 2,

  /**
   * RSASSA-PSS 3072 bit key with a SHA256 digest.
   *
   * @generated from enum value: RSA_SIGN_PSS_3072_SHA256 = 3;
   */
  RSA_SIGN_PSS_3072_SHA256 = 3,

  /**
   * RSASSA-PSS 4096 bit key with a SHA256 digest.
   *
   * @generated from enum value: RSA_SIGN_PSS_4096_SHA256 = 4;
   */
  RSA_SIGN_PSS_4096_SHA256 = 4,

  /**
   * RSASSA-PSS 4096 bit key with a SHA512 digest.
   *
   * @generated from enum value: RSA_SIGN_PSS_4096_SHA512 = 15;
   */
  RSA_SIGN_PSS_4096_SHA512 = 15,

  /**
   * RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.
   *
   * @generated from enum value: RSA_SIGN_PKCS1_2048_SHA256 = 5;
   */
  RSA_SIGN_PKCS1_2048_SHA256 = 5,

  /**
   * RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.
   *
   * @generated from enum value: RSA_SIGN_PKCS1_3072_SHA256 = 6;
   */
  RSA_SIGN_PKCS1_3072_SHA256 = 6,

  /**
   * RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.
   *
   * @generated from enum value: RSA_SIGN_PKCS1_4096_SHA256 = 7;
   */
  RSA_SIGN_PKCS1_4096_SHA256 = 7,

  /**
   * RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.
   *
   * @generated from enum value: RSA_SIGN_PKCS1_4096_SHA512 = 16;
   */
  RSA_SIGN_PKCS1_4096_SHA512 = 16,

  /**
   * RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key.
   *
   * @generated from enum value: RSA_SIGN_RAW_PKCS1_2048 = 28;
   */
  RSA_SIGN_RAW_PKCS1_2048 = 28,

  /**
   * RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key.
   *
   * @generated from enum value: RSA_SIGN_RAW_PKCS1_3072 = 29;
   */
  RSA_SIGN_RAW_PKCS1_3072 = 29,

  /**
   * RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key.
   *
   * @generated from enum value: RSA_SIGN_RAW_PKCS1_4096 = 30;
   */
  RSA_SIGN_RAW_PKCS1_4096 = 30,

  /**
   * RSAES-OAEP 2048 bit key with a SHA256 digest.
   *
   * @generated from enum value: RSA_DECRYPT_OAEP_2048_SHA256 = 8;
   */
  RSA_DECRYPT_OAEP_2048_SHA256 = 8,

  /**
   * RSAES-OAEP 3072 bit key with a SHA256 digest.
   *
   * @generated from enum value: RSA_DECRYPT_OAEP_3072_SHA256 = 9;
   */
  RSA_DECRYPT_OAEP_3072_SHA256 = 9,

  /**
   * RSAES-OAEP 4096 bit key with a SHA256 digest.
   *
   * @generated from enum value: RSA_DECRYPT_OAEP_4096_SHA256 = 10;
   */
  RSA_DECRYPT_OAEP_4096_SHA256 = 10,

  /**
   * RSAES-OAEP 4096 bit key with a SHA512 digest.
   *
   * @generated from enum value: RSA_DECRYPT_OAEP_4096_SHA512 = 17;
   */
  RSA_DECRYPT_OAEP_4096_SHA512 = 17,

  /**
   * RSAES-OAEP 2048 bit key with a SHA1 digest.
   *
   * @generated from enum value: RSA_DECRYPT_OAEP_2048_SHA1 = 37;
   */
  RSA_DECRYPT_OAEP_2048_SHA1 = 37,

  /**
   * RSAES-OAEP 3072 bit key with a SHA1 digest.
   *
   * @generated from enum value: RSA_DECRYPT_OAEP_3072_SHA1 = 38;
   */
  RSA_DECRYPT_OAEP_3072_SHA1 = 38,

  /**
   * RSAES-OAEP 4096 bit key with a SHA1 digest.
   *
   * @generated from enum value: RSA_DECRYPT_OAEP_4096_SHA1 = 39;
   */
  RSA_DECRYPT_OAEP_4096_SHA1 = 39,

  /**
   * ECDSA on the NIST P-256 curve with a SHA256 digest.
   * Other hash functions can also be used:
   * https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
   *
   * @generated from enum value: EC_SIGN_P256_SHA256 = 12;
   */
  EC_SIGN_P256_SHA256 = 12,

  /**
   * ECDSA on the NIST P-384 curve with a SHA384 digest.
   * Other hash functions can also be used:
   * https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
   *
   * @generated from enum value: EC_SIGN_P384_SHA384 = 13;
   */
  EC_SIGN_P384_SHA384 = 13,

  /**
   * ECDSA on the non-NIST secp256k1 curve. This curve is only supported for
   * HSM protection level.
   * Other hash functions can also be used:
   * https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
   *
   * @generated from enum value: EC_SIGN_SECP256K1_SHA256 = 31;
   */
  EC_SIGN_SECP256K1_SHA256 = 31,

  /**
   * EdDSA on the Curve25519 in pure mode (taking data as input).
   *
   * @generated from enum value: EC_SIGN_ED25519 = 40;
   */
  EC_SIGN_ED25519 = 40,

  /**
   * HMAC-SHA256 signing with a 256 bit key.
   *
   * @generated from enum value: HMAC_SHA256 = 32;
   */
  HMAC_SHA256 = 32,

  /**
   * HMAC-SHA1 signing with a 160 bit key.
   *
   * @generated from enum value: HMAC_SHA1 = 33;
   */
  HMAC_SHA1 = 33,

  /**
   * HMAC-SHA384 signing with a 384 bit key.
   *
   * @generated from enum value: HMAC_SHA384 = 34;
   */
  HMAC_SHA384 = 34,

  /**
   * HMAC-SHA512 signing with a 512 bit key.
   *
   * @generated from enum value: HMAC_SHA512 = 35;
   */
  HMAC_SHA512 = 35,

  /**
   * HMAC-SHA224 signing with a 224 bit key.
   *
   * @generated from enum value: HMAC_SHA224 = 36;
   */
  HMAC_SHA224 = 36,

  /**
   * Algorithm representing symmetric encryption by an external key manager.
   *
   * @generated from enum value: EXTERNAL_SYMMETRIC_ENCRYPTION = 18;
   */
  EXTERNAL_SYMMETRIC_ENCRYPTION = 18,
}

/**
 * Describes the enum google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm.
 */
export const CryptoKeyVersion_CryptoKeyVersionAlgorithmSchema: GenEnum<CryptoKeyVersion_CryptoKeyVersionAlgorithm> = /*@__PURE__*/
  enumDesc(file_google_cloud_kms_v1_resources, 4, 0);

/**
 * The state of a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion],
 * indicating if it can be used.
 *
 * @generated from enum google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState
 */
export enum CryptoKeyVersion_CryptoKeyVersionState {
  /**
   * Not specified.
   *
   * @generated from enum value: CRYPTO_KEY_VERSION_STATE_UNSPECIFIED = 0;
   */
  CRYPTO_KEY_VERSION_STATE_UNSPECIFIED = 0,

  /**
   * This version is still being generated. It may not be used, enabled,
   * disabled, or destroyed yet. Cloud KMS will automatically mark this
   * version
   * [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED]
   * as soon as the version is ready.
   *
   * @generated from enum value: PENDING_GENERATION = 5;
   */
  PENDING_GENERATION = 5,

  /**
   * This version may be used for cryptographic operations.
   *
   * @generated from enum value: ENABLED = 1;
   */
  ENABLED = 1,

  /**
   * This version may not be used, but the key material is still available,
   * and the version can be placed back into the
   * [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED]
   * state.
   *
   * @generated from enum value: DISABLED = 2;
   */
  DISABLED = 2,

  /**
   * This version is destroyed, and the key material is no longer stored.
   * This version may only become
   * [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED]
   * again if this version is
   * [reimport_eligible][google.cloud.kms.v1.CryptoKeyVersion.reimport_eligible]
   * and the original key material is reimported with a call to
   * [KeyManagementService.ImportCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.ImportCryptoKeyVersion].
   *
   * @generated from enum value: DESTROYED = 3;
   */
  DESTROYED = 3,

  /**
   * This version is scheduled for destruction, and will be destroyed soon.
   * Call
   * [RestoreCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.RestoreCryptoKeyVersion]
   * to put it back into the
   * [DISABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DISABLED]
   * state.
   *
   * @generated from enum value: DESTROY_SCHEDULED = 4;
   */
  DESTROY_SCHEDULED = 4,

  /**
   * This version is still being imported. It may not be used, enabled,
   * disabled, or destroyed yet. Cloud KMS will automatically mark this
   * version
   * [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED]
   * as soon as the version is ready.
   *
   * @generated from enum value: PENDING_IMPORT = 6;
   */
  PENDING_IMPORT = 6,

  /**
   * This version was not imported successfully. It may not be used, enabled,
   * disabled, or destroyed. The submitted key material has been discarded.
   * Additional details can be found in
   * [CryptoKeyVersion.import_failure_reason][google.cloud.kms.v1.CryptoKeyVersion.import_failure_reason].
   *
   * @generated from enum value: IMPORT_FAILED = 7;
   */
  IMPORT_FAILED = 7,

  /**
   * This version was not generated successfully. It may not be used, enabled,
   * disabled, or destroyed. Additional details can be found in
   * [CryptoKeyVersion.generation_failure_reason][google.cloud.kms.v1.CryptoKeyVersion.generation_failure_reason].
   *
   * @generated from enum value: GENERATION_FAILED = 8;
   */
  GENERATION_FAILED = 8,

  /**
   * This version was destroyed, and it may not be used or enabled again.
   * Cloud KMS is waiting for the corresponding key material residing in an
   * external key manager to be destroyed.
   *
   * @generated from enum value: PENDING_EXTERNAL_DESTRUCTION = 9;
   */
  PENDING_EXTERNAL_DESTRUCTION = 9,

  /**
   * This version was destroyed, and it may not be used or enabled again.
   * However, Cloud KMS could not confirm that the corresponding key material
   * residing in an external key manager was destroyed. Additional details can
   * be found in
   * [CryptoKeyVersion.external_destruction_failure_reason][google.cloud.kms.v1.CryptoKeyVersion.external_destruction_failure_reason].
   *
   * @generated from enum value: EXTERNAL_DESTRUCTION_FAILED = 10;
   */
  EXTERNAL_DESTRUCTION_FAILED = 10,
}

/**
 * Describes the enum google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.
 */
export const CryptoKeyVersion_CryptoKeyVersionStateSchema: GenEnum<CryptoKeyVersion_CryptoKeyVersionState> = /*@__PURE__*/
  enumDesc(file_google_cloud_kms_v1_resources, 4, 1);

/**
 * A view for [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]s.
 * Controls the level of detail returned for
 * [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] in
 * [KeyManagementService.ListCryptoKeyVersions][google.cloud.kms.v1.KeyManagementService.ListCryptoKeyVersions]
 * and
 * [KeyManagementService.ListCryptoKeys][google.cloud.kms.v1.KeyManagementService.ListCryptoKeys].
 *
 * @generated from enum google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView
 */
export enum CryptoKeyVersion_CryptoKeyVersionView {
  /**
   * Default view for each
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]. Does not
   * include the
   * [attestation][google.cloud.kms.v1.CryptoKeyVersion.attestation] field.
   *
   * @generated from enum value: CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED = 0;
   */
  CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED = 0,

  /**
   * Provides all fields in each
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion], including the
   * [attestation][google.cloud.kms.v1.CryptoKeyVersion.attestation].
   *
   * @generated from enum value: FULL = 1;
   */
  FULL = 1,
}

/**
 * Describes the enum google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView.
 */
export const CryptoKeyVersion_CryptoKeyVersionViewSchema: GenEnum<CryptoKeyVersion_CryptoKeyVersionView> = /*@__PURE__*/
  enumDesc(file_google_cloud_kms_v1_resources, 4, 2);

/**
 * The public keys for a given
 * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]. Obtained via
 * [GetPublicKey][google.cloud.kms.v1.KeyManagementService.GetPublicKey].
 *
 * @generated from message google.cloud.kms.v1.PublicKey
 */
export type PublicKey = Message<"google.cloud.kms.v1.PublicKey"> & {
  /**
   * The public key, encoded in PEM format. For more information, see the
   * [RFC 7468](https://tools.ietf.org/html/rfc7468) sections for
   * [General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and
   * [Textual Encoding of Subject Public Key Info]
   * (https://tools.ietf.org/html/rfc7468#section-13).
   *
   * @generated from field: string pem = 1;
   */
  pem: string;

  /**
   * The
   * [Algorithm][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm]
   * associated with this key.
   *
   * @generated from field: google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm algorithm = 2;
   */
  algorithm: CryptoKeyVersion_CryptoKeyVersionAlgorithm;

  /**
   * Integrity verification field. A CRC32C checksum of the returned
   * [PublicKey.pem][google.cloud.kms.v1.PublicKey.pem]. An integrity check of
   * [PublicKey.pem][google.cloud.kms.v1.PublicKey.pem] can be performed by
   * computing the CRC32C checksum of
   * [PublicKey.pem][google.cloud.kms.v1.PublicKey.pem] and comparing your
   * results to this field. Discard the response in case of non-matching
   * checksum values, and perform a limited number of retries. A persistent
   * mismatch may indicate an issue in your computation of the CRC32C checksum.
   * Note: This field is defined as int64 for reasons of compatibility across
   * different languages. However, it is a non-negative integer, which will
   * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
   * that support this type.
   *
   * NOTE: This field is in Beta.
   *
   * @generated from field: google.protobuf.Int64Value pem_crc32c = 3;
   */
  pemCrc32c?: bigint;

  /**
   * The [name][google.cloud.kms.v1.CryptoKeyVersion.name] of the
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] public key.
   * Provided here for verification.
   *
   * NOTE: This field is in Beta.
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * The [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of the
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] public key.
   *
   * @generated from field: google.cloud.kms.v1.ProtectionLevel protection_level = 5;
   */
  protectionLevel: ProtectionLevel;
};

/**
 * Describes the message google.cloud.kms.v1.PublicKey.
 * Use `create(PublicKeySchema)` to create a new message.
 */
export const PublicKeySchema: GenMessage<PublicKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 5);

/**
 * An [ImportJob][google.cloud.kms.v1.ImportJob] can be used to create
 * [CryptoKeys][google.cloud.kms.v1.CryptoKey] and
 * [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] using pre-existing
 * key material, generated outside of Cloud KMS.
 *
 * When an [ImportJob][google.cloud.kms.v1.ImportJob] is created, Cloud KMS will
 * generate a "wrapping key", which is a public/private key pair. You use the
 * wrapping key to encrypt (also known as wrap) the pre-existing key material to
 * protect it during the import process. The nature of the wrapping key depends
 * on the choice of
 * [import_method][google.cloud.kms.v1.ImportJob.import_method]. When the
 * wrapping key generation is complete, the
 * [state][google.cloud.kms.v1.ImportJob.state] will be set to
 * [ACTIVE][google.cloud.kms.v1.ImportJob.ImportJobState.ACTIVE] and the
 * [public_key][google.cloud.kms.v1.ImportJob.public_key] can be fetched. The
 * fetched public key can then be used to wrap your pre-existing key material.
 *
 * Once the key material is wrapped, it can be imported into a new
 * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] in an existing
 * [CryptoKey][google.cloud.kms.v1.CryptoKey] by calling
 * [ImportCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.ImportCryptoKeyVersion].
 * Multiple [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] can be
 * imported with a single [ImportJob][google.cloud.kms.v1.ImportJob]. Cloud KMS
 * uses the private key portion of the wrapping key to unwrap the key material.
 * Only Cloud KMS has access to the private key.
 *
 * An [ImportJob][google.cloud.kms.v1.ImportJob] expires 3 days after it is
 * created. Once expired, Cloud KMS will no longer be able to import or unwrap
 * any key material that was wrapped with the
 * [ImportJob][google.cloud.kms.v1.ImportJob]'s public key.
 *
 * For more information, see
 * [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).
 *
 * @generated from message google.cloud.kms.v1.ImportJob
 */
export type ImportJob = Message<"google.cloud.kms.v1.ImportJob"> & {
  /**
   * Output only. The resource name for this
   * [ImportJob][google.cloud.kms.v1.ImportJob] in the format
   * `projects/*\/locations/*\/keyRings/*\/importJobs/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Immutable. The wrapping method to be used for incoming key
   * material.
   *
   * @generated from field: google.cloud.kms.v1.ImportJob.ImportMethod import_method = 2;
   */
  importMethod: ImportJob_ImportMethod;

  /**
   * Required. Immutable. The protection level of the
   * [ImportJob][google.cloud.kms.v1.ImportJob]. This must match the
   * [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level]
   * of the [version_template][google.cloud.kms.v1.CryptoKey.version_template]
   * on the [CryptoKey][google.cloud.kms.v1.CryptoKey] you attempt to import
   * into.
   *
   * @generated from field: google.cloud.kms.v1.ProtectionLevel protection_level = 9;
   */
  protectionLevel: ProtectionLevel;

  /**
   * Output only. The time at which this
   * [ImportJob][google.cloud.kms.v1.ImportJob] was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time this [ImportJob][google.cloud.kms.v1.ImportJob]'s key
   * material was generated.
   *
   * @generated from field: google.protobuf.Timestamp generate_time = 4;
   */
  generateTime?: Timestamp;

  /**
   * Output only. The time at which this
   * [ImportJob][google.cloud.kms.v1.ImportJob] is scheduled for expiration and
   * can no longer be used to import key material.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 5;
   */
  expireTime?: Timestamp;

  /**
   * Output only. The time this [ImportJob][google.cloud.kms.v1.ImportJob]
   * expired. Only present if [state][google.cloud.kms.v1.ImportJob.state] is
   * [EXPIRED][google.cloud.kms.v1.ImportJob.ImportJobState.EXPIRED].
   *
   * @generated from field: google.protobuf.Timestamp expire_event_time = 10;
   */
  expireEventTime?: Timestamp;

  /**
   * Output only. The current state of the
   * [ImportJob][google.cloud.kms.v1.ImportJob], indicating if it can be used.
   *
   * @generated from field: google.cloud.kms.v1.ImportJob.ImportJobState state = 6;
   */
  state: ImportJob_ImportJobState;

  /**
   * Output only. The public key with which to wrap key material prior to
   * import. Only returned if [state][google.cloud.kms.v1.ImportJob.state] is
   * [ACTIVE][google.cloud.kms.v1.ImportJob.ImportJobState.ACTIVE].
   *
   * @generated from field: google.cloud.kms.v1.ImportJob.WrappingPublicKey public_key = 7;
   */
  publicKey?: ImportJob_WrappingPublicKey;

  /**
   * Output only. Statement that was generated and signed by the key creator
   * (for example, an HSM) at key creation time. Use this statement to verify
   * attributes of the key as stored on the HSM, independently of Google.
   * Only present if the chosen
   * [ImportMethod][google.cloud.kms.v1.ImportJob.ImportMethod] is one with a
   * protection level of [HSM][google.cloud.kms.v1.ProtectionLevel.HSM].
   *
   * @generated from field: google.cloud.kms.v1.KeyOperationAttestation attestation = 8;
   */
  attestation?: KeyOperationAttestation;
};

/**
 * Describes the message google.cloud.kms.v1.ImportJob.
 * Use `create(ImportJobSchema)` to create a new message.
 */
export const ImportJobSchema: GenMessage<ImportJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 6);

/**
 * The public key component of the wrapping key. For details of the type of
 * key this public key corresponds to, see the
 * [ImportMethod][google.cloud.kms.v1.ImportJob.ImportMethod].
 *
 * @generated from message google.cloud.kms.v1.ImportJob.WrappingPublicKey
 */
export type ImportJob_WrappingPublicKey = Message<"google.cloud.kms.v1.ImportJob.WrappingPublicKey"> & {
  /**
   * The public key, encoded in PEM format. For more information, see the [RFC
   * 7468](https://tools.ietf.org/html/rfc7468) sections for [General
   * Considerations](https://tools.ietf.org/html/rfc7468#section-2) and
   * [Textual Encoding of Subject Public Key Info]
   * (https://tools.ietf.org/html/rfc7468#section-13).
   *
   * @generated from field: string pem = 1;
   */
  pem: string;
};

/**
 * Describes the message google.cloud.kms.v1.ImportJob.WrappingPublicKey.
 * Use `create(ImportJob_WrappingPublicKeySchema)` to create a new message.
 */
export const ImportJob_WrappingPublicKeySchema: GenMessage<ImportJob_WrappingPublicKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 6, 0);

/**
 * [ImportMethod][google.cloud.kms.v1.ImportJob.ImportMethod] describes the
 * key wrapping method chosen for this
 * [ImportJob][google.cloud.kms.v1.ImportJob].
 *
 * @generated from enum google.cloud.kms.v1.ImportJob.ImportMethod
 */
export enum ImportJob_ImportMethod {
  /**
   * Not specified.
   *
   * @generated from enum value: IMPORT_METHOD_UNSPECIFIED = 0;
   */
  IMPORT_METHOD_UNSPECIFIED = 0,

  /**
   * This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
   * scheme defined in the PKCS #11 standard. In summary, this involves
   * wrapping the raw key with an ephemeral AES key, and wrapping the
   * ephemeral AES key with a 3072 bit RSA key. For more details, see
   * [RSA AES key wrap
   * mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
   *
   * @generated from enum value: RSA_OAEP_3072_SHA1_AES_256 = 1;
   */
  RSA_OAEP_3072_SHA1_AES_256 = 1,

  /**
   * This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
   * scheme defined in the PKCS #11 standard. In summary, this involves
   * wrapping the raw key with an ephemeral AES key, and wrapping the
   * ephemeral AES key with a 4096 bit RSA key. For more details, see
   * [RSA AES key wrap
   * mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
   *
   * @generated from enum value: RSA_OAEP_4096_SHA1_AES_256 = 2;
   */
  RSA_OAEP_4096_SHA1_AES_256 = 2,

  /**
   * This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
   * scheme defined in the PKCS #11 standard. In summary, this involves
   * wrapping the raw key with an ephemeral AES key, and wrapping the
   * ephemeral AES key with a 3072 bit RSA key. For more details, see
   * [RSA AES key wrap
   * mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
   *
   * @generated from enum value: RSA_OAEP_3072_SHA256_AES_256 = 3;
   */
  RSA_OAEP_3072_SHA256_AES_256 = 3,

  /**
   * This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
   * scheme defined in the PKCS #11 standard. In summary, this involves
   * wrapping the raw key with an ephemeral AES key, and wrapping the
   * ephemeral AES key with a 4096 bit RSA key. For more details, see
   * [RSA AES key wrap
   * mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
   *
   * @generated from enum value: RSA_OAEP_4096_SHA256_AES_256 = 4;
   */
  RSA_OAEP_4096_SHA256_AES_256 = 4,

  /**
   * This ImportMethod represents RSAES-OAEP with a 3072 bit RSA key. The
   * key material to be imported is wrapped directly with the RSA key. Due
   * to technical limitations of RSA wrapping, this method cannot be used to
   * wrap RSA keys for import.
   *
   * @generated from enum value: RSA_OAEP_3072_SHA256 = 5;
   */
  RSA_OAEP_3072_SHA256 = 5,

  /**
   * This ImportMethod represents RSAES-OAEP with a 4096 bit RSA key. The
   * key material to be imported is wrapped directly with the RSA key. Due
   * to technical limitations of RSA wrapping, this method cannot be used to
   * wrap RSA keys for import.
   *
   * @generated from enum value: RSA_OAEP_4096_SHA256 = 6;
   */
  RSA_OAEP_4096_SHA256 = 6,
}

/**
 * Describes the enum google.cloud.kms.v1.ImportJob.ImportMethod.
 */
export const ImportJob_ImportMethodSchema: GenEnum<ImportJob_ImportMethod> = /*@__PURE__*/
  enumDesc(file_google_cloud_kms_v1_resources, 6, 0);

/**
 * The state of the [ImportJob][google.cloud.kms.v1.ImportJob], indicating if
 * it can be used.
 *
 * @generated from enum google.cloud.kms.v1.ImportJob.ImportJobState
 */
export enum ImportJob_ImportJobState {
  /**
   * Not specified.
   *
   * @generated from enum value: IMPORT_JOB_STATE_UNSPECIFIED = 0;
   */
  IMPORT_JOB_STATE_UNSPECIFIED = 0,

  /**
   * The wrapping key for this job is still being generated. It may not be
   * used. Cloud KMS will automatically mark this job as
   * [ACTIVE][google.cloud.kms.v1.ImportJob.ImportJobState.ACTIVE] as soon as
   * the wrapping key is generated.
   *
   * @generated from enum value: PENDING_GENERATION = 1;
   */
  PENDING_GENERATION = 1,

  /**
   * This job may be used in
   * [CreateCryptoKey][google.cloud.kms.v1.KeyManagementService.CreateCryptoKey]
   * and
   * [CreateCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.CreateCryptoKeyVersion]
   * requests.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * This job can no longer be used and may not leave this state once entered.
   *
   * @generated from enum value: EXPIRED = 3;
   */
  EXPIRED = 3,
}

/**
 * Describes the enum google.cloud.kms.v1.ImportJob.ImportJobState.
 */
export const ImportJob_ImportJobStateSchema: GenEnum<ImportJob_ImportJobState> = /*@__PURE__*/
  enumDesc(file_google_cloud_kms_v1_resources, 6, 1);

/**
 * ExternalProtectionLevelOptions stores a group of additional fields for
 * configuring a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] that
 * are specific to the [EXTERNAL][google.cloud.kms.v1.ProtectionLevel.EXTERNAL]
 * protection level and
 * [EXTERNAL_VPC][google.cloud.kms.v1.ProtectionLevel.EXTERNAL_VPC] protection
 * levels.
 *
 * @generated from message google.cloud.kms.v1.ExternalProtectionLevelOptions
 */
export type ExternalProtectionLevelOptions = Message<"google.cloud.kms.v1.ExternalProtectionLevelOptions"> & {
  /**
   * The URI for an external resource that this
   * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] represents.
   *
   * @generated from field: string external_key_uri = 1;
   */
  externalKeyUri: string;

  /**
   * The path to the external key material on the EKM when using
   * [EkmConnection][google.cloud.kms.v1.EkmConnection] e.g., "v0/my/key". Set
   * this field instead of external_key_uri when using an
   * [EkmConnection][google.cloud.kms.v1.EkmConnection].
   *
   * @generated from field: string ekm_connection_key_path = 2;
   */
  ekmConnectionKeyPath: string;
};

/**
 * Describes the message google.cloud.kms.v1.ExternalProtectionLevelOptions.
 * Use `create(ExternalProtectionLevelOptionsSchema)` to create a new message.
 */
export const ExternalProtectionLevelOptionsSchema: GenMessage<ExternalProtectionLevelOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 7);

/**
 * A
 * [KeyAccessJustificationsPolicy][google.cloud.kms.v1.KeyAccessJustificationsPolicy]
 * specifies zero or more allowed
 * [AccessReason][google.cloud.kms.v1.AccessReason] values for encrypt, decrypt,
 * and sign operations on a [CryptoKey][google.cloud.kms.v1.CryptoKey].
 *
 * @generated from message google.cloud.kms.v1.KeyAccessJustificationsPolicy
 */
export type KeyAccessJustificationsPolicy = Message<"google.cloud.kms.v1.KeyAccessJustificationsPolicy"> & {
  /**
   * The list of allowed reasons for access to a
   * [CryptoKey][google.cloud.kms.v1.CryptoKey]. Zero allowed access reasons
   * means all encrypt, decrypt, and sign operations for the
   * [CryptoKey][google.cloud.kms.v1.CryptoKey] associated with this policy will
   * fail.
   *
   * @generated from field: repeated google.cloud.kms.v1.AccessReason allowed_access_reasons = 1;
   */
  allowedAccessReasons: AccessReason[];
};

/**
 * Describes the message google.cloud.kms.v1.KeyAccessJustificationsPolicy.
 * Use `create(KeyAccessJustificationsPolicySchema)` to create a new message.
 */
export const KeyAccessJustificationsPolicySchema: GenMessage<KeyAccessJustificationsPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_kms_v1_resources, 8);

/**
 * [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] specifies how
 * cryptographic operations are performed. For more information, see [Protection
 * levels] (https://cloud.google.com/kms/docs/algorithms#protection_levels).
 *
 * @generated from enum google.cloud.kms.v1.ProtectionLevel
 */
export enum ProtectionLevel {
  /**
   * Not specified.
   *
   * @generated from enum value: PROTECTION_LEVEL_UNSPECIFIED = 0;
   */
  PROTECTION_LEVEL_UNSPECIFIED = 0,

  /**
   * Crypto operations are performed in software.
   *
   * @generated from enum value: SOFTWARE = 1;
   */
  SOFTWARE = 1,

  /**
   * Crypto operations are performed in a Hardware Security Module.
   *
   * @generated from enum value: HSM = 2;
   */
  HSM = 2,

  /**
   * Crypto operations are performed by an external key manager.
   *
   * @generated from enum value: EXTERNAL = 3;
   */
  EXTERNAL = 3,

  /**
   * Crypto operations are performed in an EKM-over-VPC backend.
   *
   * @generated from enum value: EXTERNAL_VPC = 4;
   */
  EXTERNAL_VPC = 4,
}

/**
 * Describes the enum google.cloud.kms.v1.ProtectionLevel.
 */
export const ProtectionLevelSchema: GenEnum<ProtectionLevel> = /*@__PURE__*/
  enumDesc(file_google_cloud_kms_v1_resources, 0);

/**
 * Describes the reason for a data access. Please refer to
 * https://cloud.google.com/assured-workloads/key-access-justifications/docs/justification-codes
 * for the detailed semantic meaning of justification reason codes.
 *
 * @generated from enum google.cloud.kms.v1.AccessReason
 */
export enum AccessReason {
  /**
   * Unspecified access reason.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Customer-initiated support.
   *
   * @generated from enum value: CUSTOMER_INITIATED_SUPPORT = 1;
   */
  CUSTOMER_INITIATED_SUPPORT = 1,

  /**
   * Google-initiated access for system management and troubleshooting.
   *
   * @generated from enum value: GOOGLE_INITIATED_SERVICE = 2;
   */
  GOOGLE_INITIATED_SERVICE = 2,

  /**
   * Google-initiated access in response to a legal request or legal process.
   *
   * @generated from enum value: THIRD_PARTY_DATA_REQUEST = 3;
   */
  THIRD_PARTY_DATA_REQUEST = 3,

  /**
   * Google-initiated access for security, fraud, abuse, or compliance purposes.
   *
   * @generated from enum value: GOOGLE_INITIATED_REVIEW = 4;
   */
  GOOGLE_INITIATED_REVIEW = 4,

  /**
   * Customer uses their account to perform any access to their own data which
   * their IAM policy authorizes.
   *
   * @generated from enum value: CUSTOMER_INITIATED_ACCESS = 5;
   */
  CUSTOMER_INITIATED_ACCESS = 5,

  /**
   * Google systems access customer data to help optimize the structure of the
   * data or quality for future uses by the customer.
   *
   * @generated from enum value: GOOGLE_INITIATED_SYSTEM_OPERATION = 6;
   */
  GOOGLE_INITIATED_SYSTEM_OPERATION = 6,

  /**
   * No reason is expected for this key request.
   *
   * @generated from enum value: REASON_NOT_EXPECTED = 7;
   */
  REASON_NOT_EXPECTED = 7,

  /**
   * Customer uses their account to perform any access to their own data which
   * their IAM policy authorizes, and one of the following is true:
   *
   * * A Google administrator has reset the root-access account associated with
   *   the user's organization within the past 7 days.
   * * A Google-initiated emergency access operation has interacted with a
   *   resource in the same project or folder as the currently accessed resource
   *   within the past 7 days.
   *
   * @generated from enum value: MODIFIED_CUSTOMER_INITIATED_ACCESS = 8;
   */
  MODIFIED_CUSTOMER_INITIATED_ACCESS = 8,

  /**
   * Google systems access customer data to help optimize the structure of the
   * data or quality for future uses by the customer, and one of the following
   * is true:
   *
   * * A Google administrator has reset the root-access account associated with
   *   the user's organization within the past 7 days.
   * * A Google-initiated emergency access operation has interacted with a
   *   resource in the same project or folder as the currently accessed resource
   *   within the past 7 days.
   *
   * @generated from enum value: MODIFIED_GOOGLE_INITIATED_SYSTEM_OPERATION = 9;
   */
  MODIFIED_GOOGLE_INITIATED_SYSTEM_OPERATION = 9,

  /**
   * Google-initiated access to maintain system reliability.
   *
   * @generated from enum value: GOOGLE_RESPONSE_TO_PRODUCTION_ALERT = 10;
   */
  GOOGLE_RESPONSE_TO_PRODUCTION_ALERT = 10,

  /**
   * One of the following operations is being executed while simultaneously
   * encountering an internal technical issue which prevented a more precise
   * justification code from being generated:
   *
   * * Your account has been used to perform any access to your own data which
   *   your IAM policy authorizes.
   * * An automated Google system operates on encrypted customer data which your
   *   IAM policy authorizes.
   * * Customer-initiated Google support access.
   * * Google-initiated support access to protect system reliability.
   *
   * @generated from enum value: CUSTOMER_AUTHORIZED_WORKFLOW_SERVICING = 11;
   */
  CUSTOMER_AUTHORIZED_WORKFLOW_SERVICING = 11,
}

/**
 * Describes the enum google.cloud.kms.v1.AccessReason.
 */
export const AccessReasonSchema: GenEnum<AccessReason> = /*@__PURE__*/
  enumDesc(file_google_cloud_kms_v1_resources, 1);

