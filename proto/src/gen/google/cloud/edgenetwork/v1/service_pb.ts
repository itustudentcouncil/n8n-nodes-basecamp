// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/edgenetwork/v1/service.proto (package google.cloud.edgenetwork.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Interconnect, InterconnectAttachment, InterconnectAttachmentSchema, InterconnectDiagnostics, InterconnectSchema, Network, NetworkSchema, Router, RouterSchema, RouterStatus, Subnet, SubnetSchema, SubnetStatus, Zone, ZoneSchema } from "./resources_pb";
import { file_google_cloud_edgenetwork_v1_resources } from "./resources_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/edgenetwork/v1/service.proto.
 */
export const file_google_cloud_edgenetwork_v1_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_edgenetwork_v1_resources, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Deprecated: not implemented.
 * Message for requesting list of Zones
 *
 * @generated from message google.cloud.edgenetwork.v1.ListZonesRequest
 * @deprecated
 */
export type ListZonesRequest = Message<"google.cloud.edgenetwork.v1.ListZonesRequest"> & {
  /**
   * Required. Parent value for ListZonesRequest
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListZonesRequest.
 * Use `create(ListZonesRequestSchema)` to create a new message.
 * @deprecated
 */
export const ListZonesRequestSchema: GenMessage<ListZonesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 0);

/**
 * Deprecated: not implemented.
 * Message for response to listing Zones
 *
 * @generated from message google.cloud.edgenetwork.v1.ListZonesResponse
 * @deprecated
 */
export type ListZonesResponse = Message<"google.cloud.edgenetwork.v1.ListZonesResponse"> & {
  /**
   * The list of Zone
   *
   * @generated from field: repeated google.cloud.edgenetwork.v1.Zone zones = 1;
   */
  zones: Zone[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListZonesResponse.
 * Use `create(ListZonesResponseSchema)` to create a new message.
 * @deprecated
 */
export const ListZonesResponseSchema: GenMessage<ListZonesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 1);

/**
 * Deprecated: not implemented.
 * Message for getting a Zone
 *
 * @generated from message google.cloud.edgenetwork.v1.GetZoneRequest
 * @deprecated
 */
export type GetZoneRequest = Message<"google.cloud.edgenetwork.v1.GetZoneRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.GetZoneRequest.
 * Use `create(GetZoneRequestSchema)` to create a new message.
 * @deprecated
 */
export const GetZoneRequestSchema: GenMessage<GetZoneRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 2);

/**
 * Message for requesting list of Networks
 *
 * @generated from message google.cloud.edgenetwork.v1.ListNetworksRequest
 */
export type ListNetworksRequest = Message<"google.cloud.edgenetwork.v1.ListNetworksRequest"> & {
  /**
   * Required. Parent value for ListNetworksRequest
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListNetworksRequest.
 * Use `create(ListNetworksRequestSchema)` to create a new message.
 */
export const ListNetworksRequestSchema: GenMessage<ListNetworksRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 3);

/**
 * Message for response to listing Networks
 *
 * @generated from message google.cloud.edgenetwork.v1.ListNetworksResponse
 */
export type ListNetworksResponse = Message<"google.cloud.edgenetwork.v1.ListNetworksResponse"> & {
  /**
   * The list of Network
   *
   * @generated from field: repeated google.cloud.edgenetwork.v1.Network networks = 1;
   */
  networks: Network[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListNetworksResponse.
 * Use `create(ListNetworksResponseSchema)` to create a new message.
 */
export const ListNetworksResponseSchema: GenMessage<ListNetworksResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 4);

/**
 * Message for getting a Network
 *
 * @generated from message google.cloud.edgenetwork.v1.GetNetworkRequest
 */
export type GetNetworkRequest = Message<"google.cloud.edgenetwork.v1.GetNetworkRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.GetNetworkRequest.
 * Use `create(GetNetworkRequestSchema)` to create a new message.
 */
export const GetNetworkRequestSchema: GenMessage<GetNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 5);

/**
 * Message for creating a Network
 *
 * @generated from message google.cloud.edgenetwork.v1.CreateNetworkRequest
 */
export type CreateNetworkRequest = Message<"google.cloud.edgenetwork.v1.CreateNetworkRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object
   * If auto-generating Id server-side, remove this field and
   * network_id from the method_signature of Create RPC
   *
   * @generated from field: string network_id = 2;
   */
  networkId: string;

  /**
   * Required. The resource being created
   *
   * @generated from field: google.cloud.edgenetwork.v1.Network network = 3;
   */
  network?: Network;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.CreateNetworkRequest.
 * Use `create(CreateNetworkRequestSchema)` to create a new message.
 */
export const CreateNetworkRequestSchema: GenMessage<CreateNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 6);

/**
 * Message for deleting a Network
 *
 * @generated from message google.cloud.edgenetwork.v1.DeleteNetworkRequest
 */
export type DeleteNetworkRequest = Message<"google.cloud.edgenetwork.v1.DeleteNetworkRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DeleteNetworkRequest.
 * Use `create(DeleteNetworkRequestSchema)` to create a new message.
 */
export const DeleteNetworkRequestSchema: GenMessage<DeleteNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 7);

/**
 * Message for requesting list of Subnets
 *
 * @generated from message google.cloud.edgenetwork.v1.ListSubnetsRequest
 */
export type ListSubnetsRequest = Message<"google.cloud.edgenetwork.v1.ListSubnetsRequest"> & {
  /**
   * Required. Parent value for ListSubnetsRequest
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListSubnetsRequest.
 * Use `create(ListSubnetsRequestSchema)` to create a new message.
 */
export const ListSubnetsRequestSchema: GenMessage<ListSubnetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 8);

/**
 * Message for response to listing Subnets
 *
 * @generated from message google.cloud.edgenetwork.v1.ListSubnetsResponse
 */
export type ListSubnetsResponse = Message<"google.cloud.edgenetwork.v1.ListSubnetsResponse"> & {
  /**
   * The list of Subnet
   *
   * @generated from field: repeated google.cloud.edgenetwork.v1.Subnet subnets = 1;
   */
  subnets: Subnet[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListSubnetsResponse.
 * Use `create(ListSubnetsResponseSchema)` to create a new message.
 */
export const ListSubnetsResponseSchema: GenMessage<ListSubnetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 9);

/**
 * Message for getting a Subnet
 *
 * @generated from message google.cloud.edgenetwork.v1.GetSubnetRequest
 */
export type GetSubnetRequest = Message<"google.cloud.edgenetwork.v1.GetSubnetRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.GetSubnetRequest.
 * Use `create(GetSubnetRequestSchema)` to create a new message.
 */
export const GetSubnetRequestSchema: GenMessage<GetSubnetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 10);

/**
 * Message for creating a Subnet
 *
 * @generated from message google.cloud.edgenetwork.v1.CreateSubnetRequest
 */
export type CreateSubnetRequest = Message<"google.cloud.edgenetwork.v1.CreateSubnetRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object
   * If auto-generating Id server-side, remove this field and
   * subnet_id from the method_signature of Create RPC
   *
   * @generated from field: string subnet_id = 2;
   */
  subnetId: string;

  /**
   * Required. The resource being created
   *
   * @generated from field: google.cloud.edgenetwork.v1.Subnet subnet = 3;
   */
  subnet?: Subnet;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.CreateSubnetRequest.
 * Use `create(CreateSubnetRequestSchema)` to create a new message.
 */
export const CreateSubnetRequestSchema: GenMessage<CreateSubnetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 11);

/**
 * Message for updating a Subnet
 *
 * @generated from message google.cloud.edgenetwork.v1.UpdateSubnetRequest
 */
export type UpdateSubnetRequest = Message<"google.cloud.edgenetwork.v1.UpdateSubnetRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Subnet resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The resource being updated
   *
   * @generated from field: google.cloud.edgenetwork.v1.Subnet subnet = 2;
   */
  subnet?: Subnet;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.UpdateSubnetRequest.
 * Use `create(UpdateSubnetRequestSchema)` to create a new message.
 */
export const UpdateSubnetRequestSchema: GenMessage<UpdateSubnetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 12);

/**
 * Message for deleting a Subnet
 *
 * @generated from message google.cloud.edgenetwork.v1.DeleteSubnetRequest
 */
export type DeleteSubnetRequest = Message<"google.cloud.edgenetwork.v1.DeleteSubnetRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DeleteSubnetRequest.
 * Use `create(DeleteSubnetRequestSchema)` to create a new message.
 */
export const DeleteSubnetRequestSchema: GenMessage<DeleteSubnetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 13);

/**
 * Message for requesting list of Interconnects
 *
 * @generated from message google.cloud.edgenetwork.v1.ListInterconnectsRequest
 */
export type ListInterconnectsRequest = Message<"google.cloud.edgenetwork.v1.ListInterconnectsRequest"> & {
  /**
   * Required. Parent value for ListInterconnectsRequest
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListInterconnectsRequest.
 * Use `create(ListInterconnectsRequestSchema)` to create a new message.
 */
export const ListInterconnectsRequestSchema: GenMessage<ListInterconnectsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 14);

/**
 * Message for response to listing Interconnects
 *
 * @generated from message google.cloud.edgenetwork.v1.ListInterconnectsResponse
 */
export type ListInterconnectsResponse = Message<"google.cloud.edgenetwork.v1.ListInterconnectsResponse"> & {
  /**
   * The list of Interconnect
   *
   * @generated from field: repeated google.cloud.edgenetwork.v1.Interconnect interconnects = 1;
   */
  interconnects: Interconnect[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListInterconnectsResponse.
 * Use `create(ListInterconnectsResponseSchema)` to create a new message.
 */
export const ListInterconnectsResponseSchema: GenMessage<ListInterconnectsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 15);

/**
 * Message for getting a Interconnect
 *
 * @generated from message google.cloud.edgenetwork.v1.GetInterconnectRequest
 */
export type GetInterconnectRequest = Message<"google.cloud.edgenetwork.v1.GetInterconnectRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.GetInterconnectRequest.
 * Use `create(GetInterconnectRequestSchema)` to create a new message.
 */
export const GetInterconnectRequestSchema: GenMessage<GetInterconnectRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 16);

/**
 * Message for requesting list of InterconnectAttachments
 *
 * @generated from message google.cloud.edgenetwork.v1.ListInterconnectAttachmentsRequest
 */
export type ListInterconnectAttachmentsRequest = Message<"google.cloud.edgenetwork.v1.ListInterconnectAttachmentsRequest"> & {
  /**
   * Required. Parent value for ListInterconnectAttachmentsRequest
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListInterconnectAttachmentsRequest.
 * Use `create(ListInterconnectAttachmentsRequestSchema)` to create a new message.
 */
export const ListInterconnectAttachmentsRequestSchema: GenMessage<ListInterconnectAttachmentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 17);

/**
 * Message for response to listing InterconnectAttachments
 *
 * @generated from message google.cloud.edgenetwork.v1.ListInterconnectAttachmentsResponse
 */
export type ListInterconnectAttachmentsResponse = Message<"google.cloud.edgenetwork.v1.ListInterconnectAttachmentsResponse"> & {
  /**
   * The list of InterconnectAttachment
   *
   * @generated from field: repeated google.cloud.edgenetwork.v1.InterconnectAttachment interconnect_attachments = 1;
   */
  interconnectAttachments: InterconnectAttachment[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListInterconnectAttachmentsResponse.
 * Use `create(ListInterconnectAttachmentsResponseSchema)` to create a new message.
 */
export const ListInterconnectAttachmentsResponseSchema: GenMessage<ListInterconnectAttachmentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 18);

/**
 * Message for getting a InterconnectAttachment
 *
 * @generated from message google.cloud.edgenetwork.v1.GetInterconnectAttachmentRequest
 */
export type GetInterconnectAttachmentRequest = Message<"google.cloud.edgenetwork.v1.GetInterconnectAttachmentRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.GetInterconnectAttachmentRequest.
 * Use `create(GetInterconnectAttachmentRequestSchema)` to create a new message.
 */
export const GetInterconnectAttachmentRequestSchema: GenMessage<GetInterconnectAttachmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 19);

/**
 * Message for creating a InterconnectAttachment
 *
 * @generated from message google.cloud.edgenetwork.v1.CreateInterconnectAttachmentRequest
 */
export type CreateInterconnectAttachmentRequest = Message<"google.cloud.edgenetwork.v1.CreateInterconnectAttachmentRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object
   * If auto-generating Id server-side, remove this field and
   * interconnect_attachment_id from the method_signature of Create RPC
   *
   * @generated from field: string interconnect_attachment_id = 2;
   */
  interconnectAttachmentId: string;

  /**
   * Required. The resource being created
   *
   * @generated from field: google.cloud.edgenetwork.v1.InterconnectAttachment interconnect_attachment = 3;
   */
  interconnectAttachment?: InterconnectAttachment;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.CreateInterconnectAttachmentRequest.
 * Use `create(CreateInterconnectAttachmentRequestSchema)` to create a new message.
 */
export const CreateInterconnectAttachmentRequestSchema: GenMessage<CreateInterconnectAttachmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 20);

/**
 * Message for deleting a InterconnectAttachment
 *
 * @generated from message google.cloud.edgenetwork.v1.DeleteInterconnectAttachmentRequest
 */
export type DeleteInterconnectAttachmentRequest = Message<"google.cloud.edgenetwork.v1.DeleteInterconnectAttachmentRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DeleteInterconnectAttachmentRequest.
 * Use `create(DeleteInterconnectAttachmentRequestSchema)` to create a new message.
 */
export const DeleteInterconnectAttachmentRequestSchema: GenMessage<DeleteInterconnectAttachmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 21);

/**
 * Message for requesting list of Routers
 *
 * @generated from message google.cloud.edgenetwork.v1.ListRoutersRequest
 */
export type ListRoutersRequest = Message<"google.cloud.edgenetwork.v1.ListRoutersRequest"> & {
  /**
   * Required. Parent value for ListRoutersRequest
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListRoutersRequest.
 * Use `create(ListRoutersRequestSchema)` to create a new message.
 */
export const ListRoutersRequestSchema: GenMessage<ListRoutersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 22);

/**
 * Message for response to listing Routers
 *
 * @generated from message google.cloud.edgenetwork.v1.ListRoutersResponse
 */
export type ListRoutersResponse = Message<"google.cloud.edgenetwork.v1.ListRoutersResponse"> & {
  /**
   * The list of Router
   *
   * @generated from field: repeated google.cloud.edgenetwork.v1.Router routers = 1;
   */
  routers: Router[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.edgenetwork.v1.ListRoutersResponse.
 * Use `create(ListRoutersResponseSchema)` to create a new message.
 */
export const ListRoutersResponseSchema: GenMessage<ListRoutersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 23);

/**
 * Message for getting a Router
 *
 * @generated from message google.cloud.edgenetwork.v1.GetRouterRequest
 */
export type GetRouterRequest = Message<"google.cloud.edgenetwork.v1.GetRouterRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.GetRouterRequest.
 * Use `create(GetRouterRequestSchema)` to create a new message.
 */
export const GetRouterRequestSchema: GenMessage<GetRouterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 24);

/**
 * Message for creating a Router
 *
 * @generated from message google.cloud.edgenetwork.v1.CreateRouterRequest
 */
export type CreateRouterRequest = Message<"google.cloud.edgenetwork.v1.CreateRouterRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting object
   * If auto-generating Id server-side, remove this field and
   * router_id from the method_signature of Create RPC
   *
   * @generated from field: string router_id = 2;
   */
  routerId: string;

  /**
   * Required. The resource being created
   *
   * @generated from field: google.cloud.edgenetwork.v1.Router router = 3;
   */
  router?: Router;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.CreateRouterRequest.
 * Use `create(CreateRouterRequestSchema)` to create a new message.
 */
export const CreateRouterRequestSchema: GenMessage<CreateRouterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 25);

/**
 * Message for updating a Router
 *
 * @generated from message google.cloud.edgenetwork.v1.UpdateRouterRequest
 */
export type UpdateRouterRequest = Message<"google.cloud.edgenetwork.v1.UpdateRouterRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Router resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The resource being updated
   *
   * @generated from field: google.cloud.edgenetwork.v1.Router router = 2;
   */
  router?: Router;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.UpdateRouterRequest.
 * Use `create(UpdateRouterRequestSchema)` to create a new message.
 */
export const UpdateRouterRequestSchema: GenMessage<UpdateRouterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 26);

/**
 * Message for deleting a Router
 *
 * @generated from message google.cloud.edgenetwork.v1.DeleteRouterRequest
 */
export type DeleteRouterRequest = Message<"google.cloud.edgenetwork.v1.DeleteRouterRequest"> & {
  /**
   * Required. Name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DeleteRouterRequest.
 * Use `create(DeleteRouterRequestSchema)` to create a new message.
 */
export const DeleteRouterRequestSchema: GenMessage<DeleteRouterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 27);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.edgenetwork.v1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.edgenetwork.v1.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. Identifies whether the user has requested cancellation
   * of the operation. Operations that have been cancelled successfully
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 28);

/**
 * Message for requesting the diagnostics of a network within a specific zone.
 *
 * @generated from message google.cloud.edgenetwork.v1.DiagnoseNetworkRequest
 */
export type DiagnoseNetworkRequest = Message<"google.cloud.edgenetwork.v1.DiagnoseNetworkRequest"> & {
  /**
   * Required. The name of the network resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DiagnoseNetworkRequest.
 * Use `create(DiagnoseNetworkRequestSchema)` to create a new message.
 */
export const DiagnoseNetworkRequestSchema: GenMessage<DiagnoseNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 29);

/**
 * DiagnoseNetworkResponse contains the current status for a specific network.
 *
 * @generated from message google.cloud.edgenetwork.v1.DiagnoseNetworkResponse
 */
export type DiagnoseNetworkResponse = Message<"google.cloud.edgenetwork.v1.DiagnoseNetworkResponse"> & {
  /**
   * The time when the network status was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 1;
   */
  updateTime?: Timestamp;

  /**
   * The network status of a specific network.
   *
   * @generated from field: google.cloud.edgenetwork.v1.DiagnoseNetworkResponse.NetworkStatus result = 2;
   */
  result?: DiagnoseNetworkResponse_NetworkStatus;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DiagnoseNetworkResponse.
 * Use `create(DiagnoseNetworkResponseSchema)` to create a new message.
 */
export const DiagnoseNetworkResponseSchema: GenMessage<DiagnoseNetworkResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 30);

/**
 * NetworkStatus has a list of status for the subnets under the current
 * network.
 *
 * @generated from message google.cloud.edgenetwork.v1.DiagnoseNetworkResponse.NetworkStatus
 */
export type DiagnoseNetworkResponse_NetworkStatus = Message<"google.cloud.edgenetwork.v1.DiagnoseNetworkResponse.NetworkStatus"> & {
  /**
   * A list of status for the subnets under the current network.
   *
   * @generated from field: repeated google.cloud.edgenetwork.v1.SubnetStatus subnet_status = 1;
   */
  subnetStatus: SubnetStatus[];

  /**
   * The MACsec status of internal links.
   *
   * @generated from field: google.cloud.edgenetwork.v1.DiagnoseNetworkResponse.NetworkStatus.MacsecStatus macsec_status_internal_links = 2;
   */
  macsecStatusInternalLinks: DiagnoseNetworkResponse_NetworkStatus_MacsecStatus;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DiagnoseNetworkResponse.NetworkStatus.
 * Use `create(DiagnoseNetworkResponse_NetworkStatusSchema)` to create a new message.
 */
export const DiagnoseNetworkResponse_NetworkStatusSchema: GenMessage<DiagnoseNetworkResponse_NetworkStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 30, 0);

/**
 * Denotes the status of MACsec sessions for the links of a zone.
 *
 * @generated from enum google.cloud.edgenetwork.v1.DiagnoseNetworkResponse.NetworkStatus.MacsecStatus
 */
export enum DiagnoseNetworkResponse_NetworkStatus_MacsecStatus {
  /**
   * MACsec status not specified, likely due to missing metrics.
   *
   * @generated from enum value: MACSEC_STATUS_UNSPECIFIED = 0;
   */
  MACSEC_STATUS_UNSPECIFIED = 0,

  /**
   * All relevant links have at least one MACsec session up.
   *
   * @generated from enum value: SECURE = 1;
   */
  SECURE = 1,

  /**
   * At least one relevant link does not have any MACsec sessions up.
   *
   * @generated from enum value: UNSECURE = 2;
   */
  UNSECURE = 2,
}

/**
 * Describes the enum google.cloud.edgenetwork.v1.DiagnoseNetworkResponse.NetworkStatus.MacsecStatus.
 */
export const DiagnoseNetworkResponse_NetworkStatus_MacsecStatusSchema: GenEnum<DiagnoseNetworkResponse_NetworkStatus_MacsecStatus> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgenetwork_v1_service, 30, 0, 0);

/**
 * Message for requesting the diagnostics of an interconnect within a specific
 * zone.
 *
 * @generated from message google.cloud.edgenetwork.v1.DiagnoseInterconnectRequest
 */
export type DiagnoseInterconnectRequest = Message<"google.cloud.edgenetwork.v1.DiagnoseInterconnectRequest"> & {
  /**
   * Required. The name of the interconnect resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DiagnoseInterconnectRequest.
 * Use `create(DiagnoseInterconnectRequestSchema)` to create a new message.
 */
export const DiagnoseInterconnectRequestSchema: GenMessage<DiagnoseInterconnectRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 31);

/**
 * DiagnoseInterconnectResponse contains the current diagnostics for a
 * specific interconnect.
 *
 * @generated from message google.cloud.edgenetwork.v1.DiagnoseInterconnectResponse
 */
export type DiagnoseInterconnectResponse = Message<"google.cloud.edgenetwork.v1.DiagnoseInterconnectResponse"> & {
  /**
   * The time when the interconnect diagnostics was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 1;
   */
  updateTime?: Timestamp;

  /**
   * The network status of a specific interconnect.
   *
   * @generated from field: google.cloud.edgenetwork.v1.InterconnectDiagnostics result = 2;
   */
  result?: InterconnectDiagnostics;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DiagnoseInterconnectResponse.
 * Use `create(DiagnoseInterconnectResponseSchema)` to create a new message.
 */
export const DiagnoseInterconnectResponseSchema: GenMessage<DiagnoseInterconnectResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 32);

/**
 * Message for requesting diagnositcs of a router within a specific zone.
 *
 * @generated from message google.cloud.edgenetwork.v1.DiagnoseRouterRequest
 */
export type DiagnoseRouterRequest = Message<"google.cloud.edgenetwork.v1.DiagnoseRouterRequest"> & {
  /**
   * Required. The name of the router resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DiagnoseRouterRequest.
 * Use `create(DiagnoseRouterRequestSchema)` to create a new message.
 */
export const DiagnoseRouterRequestSchema: GenMessage<DiagnoseRouterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 33);

/**
 * DiagnoseRouterResponse contains the current status for a specific router.
 *
 * @generated from message google.cloud.edgenetwork.v1.DiagnoseRouterResponse
 */
export type DiagnoseRouterResponse = Message<"google.cloud.edgenetwork.v1.DiagnoseRouterResponse"> & {
  /**
   * The time when the router status was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 1;
   */
  updateTime?: Timestamp;

  /**
   * The network status of a specific router.
   *
   * @generated from field: google.cloud.edgenetwork.v1.RouterStatus result = 2;
   */
  result?: RouterStatus;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.DiagnoseRouterResponse.
 * Use `create(DiagnoseRouterResponseSchema)` to create a new message.
 */
export const DiagnoseRouterResponseSchema: GenMessage<DiagnoseRouterResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 34);

/**
 * Message for initializing a specified zone
 *
 * @generated from message google.cloud.edgenetwork.v1.InitializeZoneRequest
 */
export type InitializeZoneRequest = Message<"google.cloud.edgenetwork.v1.InitializeZoneRequest"> & {
  /**
   * Required. The name of the zone resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgenetwork.v1.InitializeZoneRequest.
 * Use `create(InitializeZoneRequestSchema)` to create a new message.
 */
export const InitializeZoneRequestSchema: GenMessage<InitializeZoneRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 35);

/**
 * The response of initializing a zone
 *
 * @generated from message google.cloud.edgenetwork.v1.InitializeZoneResponse
 */
export type InitializeZoneResponse = Message<"google.cloud.edgenetwork.v1.InitializeZoneResponse"> & {
};

/**
 * Describes the message google.cloud.edgenetwork.v1.InitializeZoneResponse.
 * Use `create(InitializeZoneResponseSchema)` to create a new message.
 */
export const InitializeZoneResponseSchema: GenMessage<InitializeZoneResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgenetwork_v1_service, 36);

/**
 * EdgeNetwork API provides managed, highly available cloud dynamic network
 * configuration service to the GEC customer to enable edge application and
 * network function solutions. This allows the customers to easily define and
 * configure the network setup and property to meet the workload requirement.
 *
 * @generated from service google.cloud.edgenetwork.v1.EdgeNetwork
 */
export const EdgeNetwork: GenService<{
  /**
   * InitializeZone will initialize resources for a zone in a project.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.InitializeZone
   */
  initializeZone: {
    methodKind: "unary";
    input: typeof InitializeZoneRequestSchema;
    output: typeof InitializeZoneResponseSchema;
  },
  /**
   * Deprecated: not implemented.
   * Lists Zones in a given project and location.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.ListZones
   * @deprecated
   */
  listZones: {
    methodKind: "unary";
    input: typeof ListZonesRequestSchema;
    output: typeof ListZonesResponseSchema;
  },
  /**
   * Deprecated: not implemented.
   * Gets details of a single Zone.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.GetZone
   * @deprecated
   */
  getZone: {
    methodKind: "unary";
    input: typeof GetZoneRequestSchema;
    output: typeof ZoneSchema;
  },
  /**
   * Lists Networks in a given project and location.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.ListNetworks
   */
  listNetworks: {
    methodKind: "unary";
    input: typeof ListNetworksRequestSchema;
    output: typeof ListNetworksResponseSchema;
  },
  /**
   * Gets details of a single Network.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.GetNetwork
   */
  getNetwork: {
    methodKind: "unary";
    input: typeof GetNetworkRequestSchema;
    output: typeof NetworkSchema;
  },
  /**
   * Get the diagnostics of a single network resource.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.DiagnoseNetwork
   */
  diagnoseNetwork: {
    methodKind: "unary";
    input: typeof DiagnoseNetworkRequestSchema;
    output: typeof DiagnoseNetworkResponseSchema;
  },
  /**
   * Creates a new Network in a given project and location.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.CreateNetwork
   */
  createNetwork: {
    methodKind: "unary";
    input: typeof CreateNetworkRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Network.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.DeleteNetwork
   */
  deleteNetwork: {
    methodKind: "unary";
    input: typeof DeleteNetworkRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Subnets in a given project and location.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.ListSubnets
   */
  listSubnets: {
    methodKind: "unary";
    input: typeof ListSubnetsRequestSchema;
    output: typeof ListSubnetsResponseSchema;
  },
  /**
   * Gets details of a single Subnet.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.GetSubnet
   */
  getSubnet: {
    methodKind: "unary";
    input: typeof GetSubnetRequestSchema;
    output: typeof SubnetSchema;
  },
  /**
   * Creates a new Subnet in a given project and location.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.CreateSubnet
   */
  createSubnet: {
    methodKind: "unary";
    input: typeof CreateSubnetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Subnet.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.UpdateSubnet
   */
  updateSubnet: {
    methodKind: "unary";
    input: typeof UpdateSubnetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Subnet.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.DeleteSubnet
   */
  deleteSubnet: {
    methodKind: "unary";
    input: typeof DeleteSubnetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Interconnects in a given project and location.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.ListInterconnects
   */
  listInterconnects: {
    methodKind: "unary";
    input: typeof ListInterconnectsRequestSchema;
    output: typeof ListInterconnectsResponseSchema;
  },
  /**
   * Gets details of a single Interconnect.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.GetInterconnect
   */
  getInterconnect: {
    methodKind: "unary";
    input: typeof GetInterconnectRequestSchema;
    output: typeof InterconnectSchema;
  },
  /**
   * Get the diagnostics of a single interconnect resource.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.DiagnoseInterconnect
   */
  diagnoseInterconnect: {
    methodKind: "unary";
    input: typeof DiagnoseInterconnectRequestSchema;
    output: typeof DiagnoseInterconnectResponseSchema;
  },
  /**
   * Lists InterconnectAttachments in a given project and location.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.ListInterconnectAttachments
   */
  listInterconnectAttachments: {
    methodKind: "unary";
    input: typeof ListInterconnectAttachmentsRequestSchema;
    output: typeof ListInterconnectAttachmentsResponseSchema;
  },
  /**
   * Gets details of a single InterconnectAttachment.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.GetInterconnectAttachment
   */
  getInterconnectAttachment: {
    methodKind: "unary";
    input: typeof GetInterconnectAttachmentRequestSchema;
    output: typeof InterconnectAttachmentSchema;
  },
  /**
   * Creates a new InterconnectAttachment in a given project and location.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.CreateInterconnectAttachment
   */
  createInterconnectAttachment: {
    methodKind: "unary";
    input: typeof CreateInterconnectAttachmentRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single InterconnectAttachment.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.DeleteInterconnectAttachment
   */
  deleteInterconnectAttachment: {
    methodKind: "unary";
    input: typeof DeleteInterconnectAttachmentRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Routers in a given project and location.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.ListRouters
   */
  listRouters: {
    methodKind: "unary";
    input: typeof ListRoutersRequestSchema;
    output: typeof ListRoutersResponseSchema;
  },
  /**
   * Gets details of a single Router.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.GetRouter
   */
  getRouter: {
    methodKind: "unary";
    input: typeof GetRouterRequestSchema;
    output: typeof RouterSchema;
  },
  /**
   * Get the diagnostics of a single router resource.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.DiagnoseRouter
   */
  diagnoseRouter: {
    methodKind: "unary";
    input: typeof DiagnoseRouterRequestSchema;
    output: typeof DiagnoseRouterResponseSchema;
  },
  /**
   * Creates a new Router in a given project and location.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.CreateRouter
   */
  createRouter: {
    methodKind: "unary";
    input: typeof CreateRouterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Router.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.UpdateRouter
   */
  updateRouter: {
    methodKind: "unary";
    input: typeof UpdateRouterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Router.
   *
   * @generated from rpc google.cloud.edgenetwork.v1.EdgeNetwork.DeleteRouter
   */
  deleteRouter: {
    methodKind: "unary";
    input: typeof DeleteRouterRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_edgenetwork_v1_service, 0);

