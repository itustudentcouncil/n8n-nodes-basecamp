// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/automl/v1/data_items.proto (package google.cloud.automl.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { BoundingPoly } from "./geometry_pb";
import { file_google_cloud_automl_v1_geometry } from "./geometry_pb";
import type { DocumentInputConfig } from "./io_pb";
import { file_google_cloud_automl_v1_io } from "./io_pb";
import type { TextSegment } from "./text_segment_pb";
import { file_google_cloud_automl_v1_text_segment } from "./text_segment_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/automl/v1/data_items.proto.
 */
export const file_google_cloud_automl_v1_data_items: GenFile = /*@__PURE__*/
  fileDesc("Cidnb29nbGUvY2xvdWQvYXV0b21sL3YxL2RhdGFfaXRlbXMucHJvdG8SFmdvb2dsZS5jbG91ZC5hdXRvbWwudjEiPQoFSW1hZ2USFQoLaW1hZ2VfYnl0ZXMYASABKAxIABIVCg10aHVtYm5haWxfdXJpGAQgASgJQgYKBGRhdGEiRgoLVGV4dFNuaXBwZXQSDwoHY29udGVudBgBIAEoCRIRCgltaW1lX3R5cGUYAiABKAkSEwoLY29udGVudF91cmkYBCABKAki6gEKEkRvY3VtZW50RGltZW5zaW9ucxJOCgR1bml0GAEgASgOMkAuZ29vZ2xlLmNsb3VkLmF1dG9tbC52MS5Eb2N1bWVudERpbWVuc2lvbnMuRG9jdW1lbnREaW1lbnNpb25Vbml0Eg0KBXdpZHRoGAIgASgCEg4KBmhlaWdodBgDIAEoAiJlChVEb2N1bWVudERpbWVuc2lvblVuaXQSJwojRE9DVU1FTlRfRElNRU5TSU9OX1VOSVRfVU5TUEVDSUZJRUQQABIICgRJTkNIEAESDgoKQ0VOVElNRVRFUhACEgkKBVBPSU5UEAMi1gUKCERvY3VtZW50EkEKDGlucHV0X2NvbmZpZxgBIAEoCzIrLmdvb2dsZS5jbG91ZC5hdXRvbWwudjEuRG9jdW1lbnRJbnB1dENvbmZpZxI6Cg1kb2N1bWVudF90ZXh0GAIgASgLMiMuZ29vZ2xlLmNsb3VkLmF1dG9tbC52MS5UZXh0U25pcHBldBI3CgZsYXlvdXQYAyADKAsyJy5nb29nbGUuY2xvdWQuYXV0b21sLnYxLkRvY3VtZW50LkxheW91dBJHChNkb2N1bWVudF9kaW1lbnNpb25zGAQgASgLMiouZ29vZ2xlLmNsb3VkLmF1dG9tbC52MS5Eb2N1bWVudERpbWVuc2lvbnMSEgoKcGFnZV9jb3VudBgFIAEoBRq0AwoGTGF5b3V0EjkKDHRleHRfc2VnbWVudBgBIAEoCzIjLmdvb2dsZS5jbG91ZC5hdXRvbWwudjEuVGV4dFNlZ21lbnQSEwoLcGFnZV9udW1iZXIYAiABKAUSOwoNYm91bmRpbmdfcG9seRgDIAEoCzIkLmdvb2dsZS5jbG91ZC5hdXRvbWwudjEuQm91bmRpbmdQb2x5ElIKEXRleHRfc2VnbWVudF90eXBlGAQgASgOMjcuZ29vZ2xlLmNsb3VkLmF1dG9tbC52MS5Eb2N1bWVudC5MYXlvdXQuVGV4dFNlZ21lbnRUeXBlIsgBCg9UZXh0U2VnbWVudFR5cGUSIQodVEVYVF9TRUdNRU5UX1RZUEVfVU5TUEVDSUZJRUQQABIJCgVUT0tFThABEg0KCVBBUkFHUkFQSBACEg4KCkZPUk1fRklFTEQQAxITCg9GT1JNX0ZJRUxEX05BTUUQBBIXChNGT1JNX0ZJRUxEX0NPTlRFTlRTEAUSCQoFVEFCTEUQBhIQCgxUQUJMRV9IRUFERVIQBxINCglUQUJMRV9ST1cQCBIOCgpUQUJMRV9DRUxMEAkivgEKDkV4YW1wbGVQYXlsb2FkEi4KBWltYWdlGAEgASgLMh0uZ29vZ2xlLmNsb3VkLmF1dG9tbC52MS5JbWFnZUgAEjsKDHRleHRfc25pcHBldBgCIAEoCzIjLmdvb2dsZS5jbG91ZC5hdXRvbWwudjEuVGV4dFNuaXBwZXRIABI0Cghkb2N1bWVudBgEIAEoCzIgLmdvb2dsZS5jbG91ZC5hdXRvbWwudjEuRG9jdW1lbnRIAEIJCgdwYXlsb2FkQqABChpjb20uZ29vZ2xlLmNsb3VkLmF1dG9tbC52MVABWjJjbG91ZC5nb29nbGUuY29tL2dvL2F1dG9tbC9hcGl2MS9hdXRvbWxwYjthdXRvbWxwYqoCFkdvb2dsZS5DbG91ZC5BdXRvTUwuVjHKAhZHb29nbGVcQ2xvdWRcQXV0b01sXFYx6gIZR29vZ2xlOjpDbG91ZDo6QXV0b01MOjpWMWIGcHJvdG8z", [file_google_cloud_automl_v1_geometry, file_google_cloud_automl_v1_io, file_google_cloud_automl_v1_text_segment]);

/**
 * A representation of an image.
 * Only images up to 30MB in size are supported.
 *
 * @generated from message google.cloud.automl.v1.Image
 */
export type Image = Message<"google.cloud.automl.v1.Image"> & {
  /**
   * Input only. The data representing the image.
   * For Predict calls [image_bytes][google.cloud.automl.v1.Image.image_bytes] must be set .
   *
   * @generated from oneof google.cloud.automl.v1.Image.data
   */
  data: {
    /**
     * Image content represented as a stream of bytes.
     * Note: As with all `bytes` fields, protobuffers use a pure binary
     * representation, whereas JSON representations use base64.
     *
     * @generated from field: bytes image_bytes = 1;
     */
    value: Uint8Array;
    case: "imageBytes";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. HTTP URI to the thumbnail image.
   *
   * @generated from field: string thumbnail_uri = 4;
   */
  thumbnailUri: string;
};

/**
 * Describes the message google.cloud.automl.v1.Image.
 * Use `create(ImageSchema)` to create a new message.
 */
export const ImageSchema: GenMessage<Image> = /*@__PURE__*/
  messageDesc(file_google_cloud_automl_v1_data_items, 0);

/**
 * A representation of a text snippet.
 *
 * @generated from message google.cloud.automl.v1.TextSnippet
 */
export type TextSnippet = Message<"google.cloud.automl.v1.TextSnippet"> & {
  /**
   * Required. The content of the text snippet as a string. Up to 250000
   * characters long.
   *
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * Optional. The format of [content][google.cloud.automl.v1.TextSnippet.content]. Currently the only two allowed
   * values are "text/html" and "text/plain". If left blank, the format is
   * automatically determined from the type of the uploaded [content][google.cloud.automl.v1.TextSnippet.content].
   *
   * @generated from field: string mime_type = 2;
   */
  mimeType: string;

  /**
   * Output only. HTTP URI where you can download the content.
   *
   * @generated from field: string content_uri = 4;
   */
  contentUri: string;
};

/**
 * Describes the message google.cloud.automl.v1.TextSnippet.
 * Use `create(TextSnippetSchema)` to create a new message.
 */
export const TextSnippetSchema: GenMessage<TextSnippet> = /*@__PURE__*/
  messageDesc(file_google_cloud_automl_v1_data_items, 1);

/**
 * Message that describes dimension of a document.
 *
 * @generated from message google.cloud.automl.v1.DocumentDimensions
 */
export type DocumentDimensions = Message<"google.cloud.automl.v1.DocumentDimensions"> & {
  /**
   * Unit of the dimension.
   *
   * @generated from field: google.cloud.automl.v1.DocumentDimensions.DocumentDimensionUnit unit = 1;
   */
  unit: DocumentDimensions_DocumentDimensionUnit;

  /**
   * Width value of the document, works together with the unit.
   *
   * @generated from field: float width = 2;
   */
  width: number;

  /**
   * Height value of the document, works together with the unit.
   *
   * @generated from field: float height = 3;
   */
  height: number;
};

/**
 * Describes the message google.cloud.automl.v1.DocumentDimensions.
 * Use `create(DocumentDimensionsSchema)` to create a new message.
 */
export const DocumentDimensionsSchema: GenMessage<DocumentDimensions> = /*@__PURE__*/
  messageDesc(file_google_cloud_automl_v1_data_items, 2);

/**
 * Unit of the document dimension.
 *
 * @generated from enum google.cloud.automl.v1.DocumentDimensions.DocumentDimensionUnit
 */
export enum DocumentDimensions_DocumentDimensionUnit {
  /**
   * Should not be used.
   *
   * @generated from enum value: DOCUMENT_DIMENSION_UNIT_UNSPECIFIED = 0;
   */
  DOCUMENT_DIMENSION_UNIT_UNSPECIFIED = 0,

  /**
   * Document dimension is measured in inches.
   *
   * @generated from enum value: INCH = 1;
   */
  INCH = 1,

  /**
   * Document dimension is measured in centimeters.
   *
   * @generated from enum value: CENTIMETER = 2;
   */
  CENTIMETER = 2,

  /**
   * Document dimension is measured in points. 72 points = 1 inch.
   *
   * @generated from enum value: POINT = 3;
   */
  POINT = 3,
}

/**
 * Describes the enum google.cloud.automl.v1.DocumentDimensions.DocumentDimensionUnit.
 */
export const DocumentDimensions_DocumentDimensionUnitSchema: GenEnum<DocumentDimensions_DocumentDimensionUnit> = /*@__PURE__*/
  enumDesc(file_google_cloud_automl_v1_data_items, 2, 0);

/**
 * A structured text document e.g. a PDF.
 *
 * @generated from message google.cloud.automl.v1.Document
 */
export type Document = Message<"google.cloud.automl.v1.Document"> & {
  /**
   * An input config specifying the content of the document.
   *
   * @generated from field: google.cloud.automl.v1.DocumentInputConfig input_config = 1;
   */
  inputConfig?: DocumentInputConfig;

  /**
   * The plain text version of this document.
   *
   * @generated from field: google.cloud.automl.v1.TextSnippet document_text = 2;
   */
  documentText?: TextSnippet;

  /**
   * Describes the layout of the document.
   * Sorted by [page_number][].
   *
   * @generated from field: repeated google.cloud.automl.v1.Document.Layout layout = 3;
   */
  layout: Document_Layout[];

  /**
   * The dimensions of the page in the document.
   *
   * @generated from field: google.cloud.automl.v1.DocumentDimensions document_dimensions = 4;
   */
  documentDimensions?: DocumentDimensions;

  /**
   * Number of pages in the document.
   *
   * @generated from field: int32 page_count = 5;
   */
  pageCount: number;
};

/**
 * Describes the message google.cloud.automl.v1.Document.
 * Use `create(DocumentSchema)` to create a new message.
 */
export const DocumentSchema: GenMessage<Document> = /*@__PURE__*/
  messageDesc(file_google_cloud_automl_v1_data_items, 3);

/**
 * Describes the layout information of a [text_segment][google.cloud.automl.v1.Document.Layout.text_segment] in the document.
 *
 * @generated from message google.cloud.automl.v1.Document.Layout
 */
export type Document_Layout = Message<"google.cloud.automl.v1.Document.Layout"> & {
  /**
   * Text Segment that represents a segment in
   * [document_text][google.cloud.automl.v1p1beta.Document.document_text].
   *
   * @generated from field: google.cloud.automl.v1.TextSegment text_segment = 1;
   */
  textSegment?: TextSegment;

  /**
   * Page number of the [text_segment][google.cloud.automl.v1.Document.Layout.text_segment] in the original document, starts
   * from 1.
   *
   * @generated from field: int32 page_number = 2;
   */
  pageNumber: number;

  /**
   * The position of the [text_segment][google.cloud.automl.v1.Document.Layout.text_segment] in the page.
   * Contains exactly 4
   * [normalized_vertices][google.cloud.automl.v1p1beta.BoundingPoly.normalized_vertices]
   * and they are connected by edges in the order provided, which will
   * represent a rectangle parallel to the frame. The
   * [NormalizedVertex-s][google.cloud.automl.v1p1beta.NormalizedVertex] are
   * relative to the page.
   * Coordinates are based on top-left as point (0,0).
   *
   * @generated from field: google.cloud.automl.v1.BoundingPoly bounding_poly = 3;
   */
  boundingPoly?: BoundingPoly;

  /**
   * The type of the [text_segment][google.cloud.automl.v1.Document.Layout.text_segment] in document.
   *
   * @generated from field: google.cloud.automl.v1.Document.Layout.TextSegmentType text_segment_type = 4;
   */
  textSegmentType: Document_Layout_TextSegmentType;
};

/**
 * Describes the message google.cloud.automl.v1.Document.Layout.
 * Use `create(Document_LayoutSchema)` to create a new message.
 */
export const Document_LayoutSchema: GenMessage<Document_Layout> = /*@__PURE__*/
  messageDesc(file_google_cloud_automl_v1_data_items, 3, 0);

/**
 * The type of TextSegment in the context of the original document.
 *
 * @generated from enum google.cloud.automl.v1.Document.Layout.TextSegmentType
 */
export enum Document_Layout_TextSegmentType {
  /**
   * Should not be used.
   *
   * @generated from enum value: TEXT_SEGMENT_TYPE_UNSPECIFIED = 0;
   */
  TEXT_SEGMENT_TYPE_UNSPECIFIED = 0,

  /**
   * The text segment is a token. e.g. word.
   *
   * @generated from enum value: TOKEN = 1;
   */
  TOKEN = 1,

  /**
   * The text segment is a paragraph.
   *
   * @generated from enum value: PARAGRAPH = 2;
   */
  PARAGRAPH = 2,

  /**
   * The text segment is a form field.
   *
   * @generated from enum value: FORM_FIELD = 3;
   */
  FORM_FIELD = 3,

  /**
   * The text segment is the name part of a form field. It will be treated
   * as child of another FORM_FIELD TextSegment if its span is subspan of
   * another TextSegment with type FORM_FIELD.
   *
   * @generated from enum value: FORM_FIELD_NAME = 4;
   */
  FORM_FIELD_NAME = 4,

  /**
   * The text segment is the text content part of a form field. It will be
   * treated as child of another FORM_FIELD TextSegment if its span is
   * subspan of another TextSegment with type FORM_FIELD.
   *
   * @generated from enum value: FORM_FIELD_CONTENTS = 5;
   */
  FORM_FIELD_CONTENTS = 5,

  /**
   * The text segment is a whole table, including headers, and all rows.
   *
   * @generated from enum value: TABLE = 6;
   */
  TABLE = 6,

  /**
   * The text segment is a table's headers. It will be treated as child of
   * another TABLE TextSegment if its span is subspan of another TextSegment
   * with type TABLE.
   *
   * @generated from enum value: TABLE_HEADER = 7;
   */
  TABLE_HEADER = 7,

  /**
   * The text segment is a row in table. It will be treated as child of
   * another TABLE TextSegment if its span is subspan of another TextSegment
   * with type TABLE.
   *
   * @generated from enum value: TABLE_ROW = 8;
   */
  TABLE_ROW = 8,

  /**
   * The text segment is a cell in table. It will be treated as child of
   * another TABLE_ROW TextSegment if its span is subspan of another
   * TextSegment with type TABLE_ROW.
   *
   * @generated from enum value: TABLE_CELL = 9;
   */
  TABLE_CELL = 9,
}

/**
 * Describes the enum google.cloud.automl.v1.Document.Layout.TextSegmentType.
 */
export const Document_Layout_TextSegmentTypeSchema: GenEnum<Document_Layout_TextSegmentType> = /*@__PURE__*/
  enumDesc(file_google_cloud_automl_v1_data_items, 3, 0, 0);

/**
 * Example data used for training or prediction.
 *
 * @generated from message google.cloud.automl.v1.ExamplePayload
 */
export type ExamplePayload = Message<"google.cloud.automl.v1.ExamplePayload"> & {
  /**
   * Required. The example data.
   *
   * @generated from oneof google.cloud.automl.v1.ExamplePayload.payload
   */
  payload: {
    /**
     * Example image.
     *
     * @generated from field: google.cloud.automl.v1.Image image = 1;
     */
    value: Image;
    case: "image";
  } | {
    /**
     * Example text.
     *
     * @generated from field: google.cloud.automl.v1.TextSnippet text_snippet = 2;
     */
    value: TextSnippet;
    case: "textSnippet";
  } | {
    /**
     * Example document.
     *
     * @generated from field: google.cloud.automl.v1.Document document = 4;
     */
    value: Document;
    case: "document";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.automl.v1.ExamplePayload.
 * Use `create(ExamplePayloadSchema)` to create a new message.
 */
export const ExamplePayloadSchema: GenMessage<ExamplePayload> = /*@__PURE__*/
  messageDesc(file_google_cloud_automl_v1_data_items, 4);

