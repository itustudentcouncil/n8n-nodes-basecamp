// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/automl/v1beta1/data_types.proto (package google.cloud.automl.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/automl/v1beta1/data_types.proto.
 */
export const file_google_cloud_automl_v1beta1_data_types: GenFile = /*@__PURE__*/
  fileDesc("Cixnb29nbGUvY2xvdWQvYXV0b21sL3YxYmV0YTEvZGF0YV90eXBlcy5wcm90bxIbZ29vZ2xlLmNsb3VkLmF1dG9tbC52MWJldGExIvwBCghEYXRhVHlwZRJCChFsaXN0X2VsZW1lbnRfdHlwZRgCIAEoCzIlLmdvb2dsZS5jbG91ZC5hdXRvbWwudjFiZXRhMS5EYXRhVHlwZUgAEj4KC3N0cnVjdF90eXBlGAMgASgLMicuZ29vZ2xlLmNsb3VkLmF1dG9tbC52MWJldGExLlN0cnVjdFR5cGVIABIVCgt0aW1lX2Zvcm1hdBgFIAEoCUgAEjgKCXR5cGVfY29kZRgBIAEoDjIlLmdvb2dsZS5jbG91ZC5hdXRvbWwudjFiZXRhMS5UeXBlQ29kZRIQCghudWxsYWJsZRgEIAEoCEIJCgdkZXRhaWxzIqcBCgpTdHJ1Y3RUeXBlEkMKBmZpZWxkcxgBIAMoCzIzLmdvb2dsZS5jbG91ZC5hdXRvbWwudjFiZXRhMS5TdHJ1Y3RUeXBlLkZpZWxkc0VudHJ5GlQKC0ZpZWxkc0VudHJ5EgsKA2tleRgBIAEoCRI0CgV2YWx1ZRgCIAEoCzIlLmdvb2dsZS5jbG91ZC5hdXRvbWwudjFiZXRhMS5EYXRhVHlwZToCOAEqcgoIVHlwZUNvZGUSGQoVVFlQRV9DT0RFX1VOU1BFQ0lGSUVEEAASCwoHRkxPQVQ2NBADEg0KCVRJTUVTVEFNUBAEEgoKBlNUUklORxAGEgkKBUFSUkFZEAgSCgoGU1RSVUNUEAkSDAoIQ0FURUdPUlkQCkKbAQofY29tLmdvb2dsZS5jbG91ZC5hdXRvbWwudjFiZXRhMVABWjdjbG91ZC5nb29nbGUuY29tL2dvL2F1dG9tbC9hcGl2MWJldGExL2F1dG9tbHBiO2F1dG9tbHBiygIbR29vZ2xlXENsb3VkXEF1dG9NbFxWMWJldGEx6gIeR29vZ2xlOjpDbG91ZDo6QXV0b01MOjpWMWJldGExYgZwcm90bzM");

/**
 * Indicated the type of data that can be stored in a structured data entity
 * (e.g. a table).
 *
 * @generated from message google.cloud.automl.v1beta1.DataType
 */
export type DataType = Message<"google.cloud.automl.v1beta1.DataType"> & {
  /**
   * Details of DataType-s that need additional specification.
   *
   * @generated from oneof google.cloud.automl.v1beta1.DataType.details
   */
  details: {
    /**
     * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [ARRAY][google.cloud.automl.v1beta1.TypeCode.ARRAY],
     * then `list_element_type` is the type of the elements.
     *
     * @generated from field: google.cloud.automl.v1beta1.DataType list_element_type = 2;
     */
    value: DataType;
    case: "listElementType";
  } | {
    /**
     * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [STRUCT][google.cloud.automl.v1beta1.TypeCode.STRUCT], then `struct_type`
     * provides type information for the struct's fields.
     *
     * @generated from field: google.cloud.automl.v1beta1.StructType struct_type = 3;
     */
    value: StructType;
    case: "structType";
  } | {
    /**
     * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [TIMESTAMP][google.cloud.automl.v1beta1.TypeCode.TIMESTAMP]
     * then `time_format` provides the format in which that time field is
     * expressed. The time_format must either be one of:
     * * `UNIX_SECONDS`
     * * `UNIX_MILLISECONDS`
     * * `UNIX_MICROSECONDS`
     * * `UNIX_NANOSECONDS`
     * (for respectively number of seconds, milliseconds, microseconds and
     * nanoseconds since start of the Unix epoch);
     * or be written in `strftime` syntax. If time_format is not set, then the
     * default format as described on the type_code is used.
     *
     * @generated from field: string time_format = 5;
     */
    value: string;
    case: "timeFormat";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The [TypeCode][google.cloud.automl.v1beta1.TypeCode] for this type.
   *
   * @generated from field: google.cloud.automl.v1beta1.TypeCode type_code = 1;
   */
  typeCode: TypeCode;

  /**
   * If true, this DataType can also be `NULL`. In .CSV files `NULL` value is
   * expressed as an empty string.
   *
   * @generated from field: bool nullable = 4;
   */
  nullable: boolean;
};

/**
 * Describes the message google.cloud.automl.v1beta1.DataType.
 * Use `create(DataTypeSchema)` to create a new message.
 */
export const DataTypeSchema: GenMessage<DataType> = /*@__PURE__*/
  messageDesc(file_google_cloud_automl_v1beta1_data_types, 0);

/**
 * `StructType` defines the DataType-s of a [STRUCT][google.cloud.automl.v1beta1.TypeCode.STRUCT] type.
 *
 * @generated from message google.cloud.automl.v1beta1.StructType
 */
export type StructType = Message<"google.cloud.automl.v1beta1.StructType"> & {
  /**
   * Unordered map of struct field names to their data types.
   * Fields cannot be added or removed via Update. Their names and
   * data types are still mutable.
   *
   * @generated from field: map<string, google.cloud.automl.v1beta1.DataType> fields = 1;
   */
  fields: { [key: string]: DataType };
};

/**
 * Describes the message google.cloud.automl.v1beta1.StructType.
 * Use `create(StructTypeSchema)` to create a new message.
 */
export const StructTypeSchema: GenMessage<StructType> = /*@__PURE__*/
  messageDesc(file_google_cloud_automl_v1beta1_data_types, 1);

/**
 * `TypeCode` is used as a part of
 * [DataType][google.cloud.automl.v1beta1.DataType].
 *
 * @generated from enum google.cloud.automl.v1beta1.TypeCode
 */
export enum TypeCode {
  /**
   * Not specified. Should not be used.
   *
   * @generated from enum value: TYPE_CODE_UNSPECIFIED = 0;
   */
  TYPE_CODE_UNSPECIFIED = 0,

  /**
   * Encoded as `number`, or the strings `"NaN"`, `"Infinity"`, or
   * `"-Infinity"`.
   *
   * @generated from enum value: FLOAT64 = 3;
   */
  FLOAT64 = 3,

  /**
   * Must be between 0AD and 9999AD. Encoded as `string` according to
   * [time_format][google.cloud.automl.v1beta1.DataType.time_format], or, if
   * that format is not set, then in RFC 3339 `date-time` format, where
   * `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z).
   *
   * @generated from enum value: TIMESTAMP = 4;
   */
  TIMESTAMP = 4,

  /**
   * Encoded as `string`.
   *
   * @generated from enum value: STRING = 6;
   */
  STRING = 6,

  /**
   * Encoded as `list`, where the list elements are represented according to
   *
   * [list_element_type][google.cloud.automl.v1beta1.DataType.list_element_type].
   *
   * @generated from enum value: ARRAY = 8;
   */
  ARRAY = 8,

  /**
   * Encoded as `struct`, where field values are represented according to
   * [struct_type][google.cloud.automl.v1beta1.DataType.struct_type].
   *
   * @generated from enum value: STRUCT = 9;
   */
  STRUCT = 9,

  /**
   * Values of this type are not further understood by AutoML,
   * e.g. AutoML is unable to tell the order of values (as it could with
   * FLOAT64), or is unable to say if one value contains another (as it
   * could with STRING).
   * Encoded as `string` (bytes should be base64-encoded, as described in RFC
   * 4648, section 4).
   *
   * @generated from enum value: CATEGORY = 10;
   */
  CATEGORY = 10,
}

/**
 * Describes the enum google.cloud.automl.v1beta1.TypeCode.
 */
export const TypeCodeSchema: GenEnum<TypeCode> = /*@__PURE__*/
  enumDesc(file_google_cloud_automl_v1beta1_data_types, 0);

