// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/automl/v1beta1/text_sentiment.proto (package google.cloud.automl.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { ClassificationEvaluationMetrics_ConfusionMatrix } from "./classification_pb";
import { file_google_cloud_automl_v1beta1_classification } from "./classification_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/automl/v1beta1/text_sentiment.proto.
 */
export const file_google_cloud_automl_v1beta1_text_sentiment: GenFile = /*@__PURE__*/
  fileDesc("CjBnb29nbGUvY2xvdWQvYXV0b21sL3YxYmV0YTEvdGV4dF9zZW50aW1lbnQucHJvdG8SG2dvb2dsZS5jbG91ZC5hdXRvbWwudjFiZXRhMSIsChdUZXh0U2VudGltZW50QW5ub3RhdGlvbhIRCglzZW50aW1lbnQYASABKAUixQIKHlRleHRTZW50aW1lbnRFdmFsdWF0aW9uTWV0cmljcxIRCglwcmVjaXNpb24YASABKAISDgoGcmVjYWxsGAIgASgCEhAKCGYxX3Njb3JlGAMgASgCEhsKE21lYW5fYWJzb2x1dGVfZXJyb3IYBCABKAISGgoSbWVhbl9zcXVhcmVkX2Vycm9yGAUgASgCEhQKDGxpbmVhcl9rYXBwYRgGIAEoAhIXCg9xdWFkcmF0aWNfa2FwcGEYByABKAISZgoQY29uZnVzaW9uX21hdHJpeBgIIAEoCzJMLmdvb2dsZS5jbG91ZC5hdXRvbWwudjFiZXRhMS5DbGFzc2lmaWNhdGlvbkV2YWx1YXRpb25NZXRyaWNzLkNvbmZ1c2lvbk1hdHJpeBIeChJhbm5vdGF0aW9uX3NwZWNfaWQYCSADKAlCAhgBQq0BCh9jb20uZ29vZ2xlLmNsb3VkLmF1dG9tbC52MWJldGExQhJUZXh0U2VudGltZW50UHJvdG9aN2Nsb3VkLmdvb2dsZS5jb20vZ28vYXV0b21sL2FwaXYxYmV0YTEvYXV0b21scGI7YXV0b21scGLKAhtHb29nbGVcQ2xvdWRcQXV0b01sXFYxYmV0YTHqAh5Hb29nbGU6OkNsb3VkOjpBdXRvTUw6OlYxYmV0YTFiBnByb3RvMw", [file_google_cloud_automl_v1beta1_classification]);

/**
 * Contains annotation details specific to text sentiment.
 *
 * @generated from message google.cloud.automl.v1beta1.TextSentimentAnnotation
 */
export type TextSentimentAnnotation = Message<"google.cloud.automl.v1beta1.TextSentimentAnnotation"> & {
  /**
   * Output only. The sentiment with the semantic, as given to the
   * [AutoMl.ImportData][google.cloud.automl.v1beta1.AutoMl.ImportData] when populating the dataset from which the model used
   * for the prediction had been trained.
   * The sentiment values are between 0 and
   * Dataset.text_sentiment_dataset_metadata.sentiment_max (inclusive),
   * with higher value meaning more positive sentiment. They are completely
   * relative, i.e. 0 means least positive sentiment and sentiment_max means
   * the most positive from the sentiments present in the train data. Therefore
   *  e.g. if train data had only negative sentiment, then sentiment_max, would
   * be still negative (although least negative).
   * The sentiment shouldn't be confused with "score" or "magnitude"
   * from the previous Natural Language Sentiment Analysis API.
   *
   * @generated from field: int32 sentiment = 1;
   */
  sentiment: number;
};

/**
 * Describes the message google.cloud.automl.v1beta1.TextSentimentAnnotation.
 * Use `create(TextSentimentAnnotationSchema)` to create a new message.
 */
export const TextSentimentAnnotationSchema: GenMessage<TextSentimentAnnotation> = /*@__PURE__*/
  messageDesc(file_google_cloud_automl_v1beta1_text_sentiment, 0);

/**
 * Model evaluation metrics for text sentiment problems.
 *
 * @generated from message google.cloud.automl.v1beta1.TextSentimentEvaluationMetrics
 */
export type TextSentimentEvaluationMetrics = Message<"google.cloud.automl.v1beta1.TextSentimentEvaluationMetrics"> & {
  /**
   * Output only. Precision.
   *
   * @generated from field: float precision = 1;
   */
  precision: number;

  /**
   * Output only. Recall.
   *
   * @generated from field: float recall = 2;
   */
  recall: number;

  /**
   * Output only. The harmonic mean of recall and precision.
   *
   * @generated from field: float f1_score = 3;
   */
  f1Score: number;

  /**
   * Output only. Mean absolute error. Only set for the overall model
   * evaluation, not for evaluation of a single annotation spec.
   *
   * @generated from field: float mean_absolute_error = 4;
   */
  meanAbsoluteError: number;

  /**
   * Output only. Mean squared error. Only set for the overall model
   * evaluation, not for evaluation of a single annotation spec.
   *
   * @generated from field: float mean_squared_error = 5;
   */
  meanSquaredError: number;

  /**
   * Output only. Linear weighted kappa. Only set for the overall model
   * evaluation, not for evaluation of a single annotation spec.
   *
   * @generated from field: float linear_kappa = 6;
   */
  linearKappa: number;

  /**
   * Output only. Quadratic weighted kappa. Only set for the overall model
   * evaluation, not for evaluation of a single annotation spec.
   *
   * @generated from field: float quadratic_kappa = 7;
   */
  quadraticKappa: number;

  /**
   * Output only. Confusion matrix of the evaluation.
   * Only set for the overall model evaluation, not for evaluation of a single
   * annotation spec.
   *
   * @generated from field: google.cloud.automl.v1beta1.ClassificationEvaluationMetrics.ConfusionMatrix confusion_matrix = 8;
   */
  confusionMatrix?: ClassificationEvaluationMetrics_ConfusionMatrix;

  /**
   * Output only. The annotation spec ids used for this evaluation.
   * Deprecated .
   *
   * @generated from field: repeated string annotation_spec_id = 9 [deprecated = true];
   * @deprecated
   */
  annotationSpecId: string[];
};

/**
 * Describes the message google.cloud.automl.v1beta1.TextSentimentEvaluationMetrics.
 * Use `create(TextSentimentEvaluationMetricsSchema)` to create a new message.
 */
export const TextSentimentEvaluationMetricsSchema: GenMessage<TextSentimentEvaluationMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_automl_v1beta1_text_sentiment, 1);

