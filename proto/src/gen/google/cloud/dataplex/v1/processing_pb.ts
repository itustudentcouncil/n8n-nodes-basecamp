// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dataplex/v1/processing.proto (package google.cloud.dataplex.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dataplex/v1/processing.proto.
 */
export const file_google_cloud_dataplex_v1_processing: GenFile = /*@__PURE__*/
  fileDesc("Cilnb29nbGUvY2xvdWQvZGF0YXBsZXgvdjEvcHJvY2Vzc2luZy5wcm90bxIYZ29vZ2xlLmNsb3VkLmRhdGFwbGV4LnYxIr0BCgdUcmlnZ2VyEj8KCW9uX2RlbWFuZBhkIAEoCzIqLmdvb2dsZS5jbG91ZC5kYXRhcGxleC52MS5UcmlnZ2VyLk9uRGVtYW5kSAASPgoIc2NoZWR1bGUYZSABKAsyKi5nb29nbGUuY2xvdWQuZGF0YXBsZXgudjEuVHJpZ2dlci5TY2hlZHVsZUgAGgoKCE9uRGVtYW5kGh0KCFNjaGVkdWxlEhEKBGNyb24YASABKAlCA+BBAkIGCgRtb2RlImkKCkRhdGFTb3VyY2USOAoGZW50aXR5GGQgASgJQibgQQX6QSAKHmRhdGFwbGV4Lmdvb2dsZWFwaXMuY29tL0VudGl0eUgAEhcKCHJlc291cmNlGGUgASgJQgPgQQVIAEIICgZzb3VyY2UirwEKC1NjYW5uZWREYXRhElMKEWluY3JlbWVudGFsX2ZpZWxkGAEgASgLMjYuZ29vZ2xlLmNsb3VkLmRhdGFwbGV4LnYxLlNjYW5uZWREYXRhLkluY3JlbWVudGFsRmllbGRIABo9ChBJbmNyZW1lbnRhbEZpZWxkEg0KBWZpZWxkGAEgASgJEg0KBXN0YXJ0GAIgASgJEgsKA2VuZBgDIAEoCUIMCgpkYXRhX3JhbmdlQmsKHGNvbS5nb29nbGUuY2xvdWQuZGF0YXBsZXgudjFCD1Byb2Nlc3NpbmdQcm90b1ABWjhjbG91ZC5nb29nbGUuY29tL2dvL2RhdGFwbGV4L2FwaXYxL2RhdGFwbGV4cGI7ZGF0YXBsZXhwYmIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource]);

/**
 * DataScan scheduling and trigger settings.
 *
 * @generated from message google.cloud.dataplex.v1.Trigger
 */
export type Trigger = Message<"google.cloud.dataplex.v1.Trigger"> & {
  /**
   * DataScan scheduling and trigger settings.
   *
   * If not specified, the default is `onDemand`.
   *
   * @generated from oneof google.cloud.dataplex.v1.Trigger.mode
   */
  mode: {
    /**
     * The scan runs once via `RunDataScan` API.
     *
     * @generated from field: google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;
     */
    value: Trigger_OnDemand;
    case: "onDemand";
  } | {
    /**
     * The scan is scheduled to run periodically.
     *
     * @generated from field: google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;
     */
    value: Trigger_Schedule;
    case: "schedule";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dataplex.v1.Trigger.
 * Use `create(TriggerSchema)` to create a new message.
 */
export const TriggerSchema: GenMessage<Trigger> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataplex_v1_processing, 0);

/**
 * The scan runs once via `RunDataScan` API.
 *
 * @generated from message google.cloud.dataplex.v1.Trigger.OnDemand
 */
export type Trigger_OnDemand = Message<"google.cloud.dataplex.v1.Trigger.OnDemand"> & {
};

/**
 * Describes the message google.cloud.dataplex.v1.Trigger.OnDemand.
 * Use `create(Trigger_OnDemandSchema)` to create a new message.
 */
export const Trigger_OnDemandSchema: GenMessage<Trigger_OnDemand> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataplex_v1_processing, 0, 0);

/**
 * The scan is scheduled to run periodically.
 *
 * @generated from message google.cloud.dataplex.v1.Trigger.Schedule
 */
export type Trigger_Schedule = Message<"google.cloud.dataplex.v1.Trigger.Schedule"> & {
  /**
   * Required. [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running
   * scans periodically.
   *
   * To explicitly set a timezone in the cron tab, apply a prefix in the
   * cron tab: **"CRON_TZ=${IANA_TIME_ZONE}"** or **"TZ=${IANA_TIME_ZONE}"**.
   * The **${IANA_TIME_ZONE}** may only be a valid string from IANA time zone
   * database
   * ([wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
   * For example, `CRON_TZ=America/New_York 1 * * * *`, or
   * `TZ=America/New_York 1 * * * *`.
   *
   * This field is required for Schedule scans.
   *
   * @generated from field: string cron = 1;
   */
  cron: string;
};

/**
 * Describes the message google.cloud.dataplex.v1.Trigger.Schedule.
 * Use `create(Trigger_ScheduleSchema)` to create a new message.
 */
export const Trigger_ScheduleSchema: GenMessage<Trigger_Schedule> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataplex_v1_processing, 0, 1);

/**
 * The data source for DataScan.
 *
 * @generated from message google.cloud.dataplex.v1.DataSource
 */
export type DataSource = Message<"google.cloud.dataplex.v1.DataSource"> & {
  /**
   * The source is required and immutable. Once it is set, it cannot be change
   * to others.
   *
   * @generated from oneof google.cloud.dataplex.v1.DataSource.source
   */
  source: {
    /**
     * Immutable. The Dataplex entity that represents the data source (e.g.
     * BigQuery table) for DataScan, of the form:
     * `projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}`.
     *
     * @generated from field: string entity = 100;
     */
    value: string;
    case: "entity";
  } | {
    /**
     * Immutable. The service-qualified full resource name of the cloud resource
     * for a DataScan job to scan against. The field could be: BigQuery table of
     * type "TABLE" for DataProfileScan/DataQualityScan Format:
     * //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID
     *
     * @generated from field: string resource = 101;
     */
    value: string;
    case: "resource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dataplex.v1.DataSource.
 * Use `create(DataSourceSchema)` to create a new message.
 */
export const DataSourceSchema: GenMessage<DataSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataplex_v1_processing, 1);

/**
 * The data scanned during processing (e.g. in incremental DataScan)
 *
 * @generated from message google.cloud.dataplex.v1.ScannedData
 */
export type ScannedData = Message<"google.cloud.dataplex.v1.ScannedData"> & {
  /**
   * The range of scanned data
   *
   * @generated from oneof google.cloud.dataplex.v1.ScannedData.data_range
   */
  dataRange: {
    /**
     * The range denoted by values of an incremental field
     *
     * @generated from field: google.cloud.dataplex.v1.ScannedData.IncrementalField incremental_field = 1;
     */
    value: ScannedData_IncrementalField;
    case: "incrementalField";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dataplex.v1.ScannedData.
 * Use `create(ScannedDataSchema)` to create a new message.
 */
export const ScannedDataSchema: GenMessage<ScannedData> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataplex_v1_processing, 2);

/**
 * A data range denoted by a pair of start/end values of a field.
 *
 * @generated from message google.cloud.dataplex.v1.ScannedData.IncrementalField
 */
export type ScannedData_IncrementalField = Message<"google.cloud.dataplex.v1.ScannedData.IncrementalField"> & {
  /**
   * The field that contains values which monotonically increases over time
   * (e.g. a timestamp column).
   *
   * @generated from field: string field = 1;
   */
  field: string;

  /**
   * Value that marks the start of the range.
   *
   * @generated from field: string start = 2;
   */
  start: string;

  /**
   * Value that marks the end of the range.
   *
   * @generated from field: string end = 3;
   */
  end: string;
};

/**
 * Describes the message google.cloud.dataplex.v1.ScannedData.IncrementalField.
 * Use `create(ScannedData_IncrementalFieldSchema)` to create a new message.
 */
export const ScannedData_IncrementalFieldSchema: GenMessage<ScannedData_IncrementalField> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataplex_v1_processing, 2, 0);

