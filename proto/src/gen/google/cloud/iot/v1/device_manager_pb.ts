// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/iot/v1/device_manager.proto (package google.cloud.iot.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Device, DeviceConfig, DeviceConfigSchema, DeviceRegistry, DeviceRegistrySchema, DeviceSchema, DeviceState, GatewayType } from "./resources_pb";
import { file_google_cloud_iot_v1_resources } from "./resources_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/iot/v1/device_manager.proto.
 */
export const file_google_cloud_iot_v1_device_manager: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_iot_v1_resources, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Request for `CreateDeviceRegistry`.
 *
 * @generated from message google.cloud.iot.v1.CreateDeviceRegistryRequest
 */
export type CreateDeviceRegistryRequest = Message<"google.cloud.iot.v1.CreateDeviceRegistryRequest"> & {
  /**
   * Required. The project and cloud region where this device registry must be created.
   * For example, `projects/example-project/locations/us-central1`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The device registry. The field `name` must be empty. The server will
   * generate that field from the device registry `id` provided and the
   * `parent` field.
   *
   * @generated from field: google.cloud.iot.v1.DeviceRegistry device_registry = 2;
   */
  deviceRegistry?: DeviceRegistry;
};

/**
 * Describes the message google.cloud.iot.v1.CreateDeviceRegistryRequest.
 * Use `create(CreateDeviceRegistryRequestSchema)` to create a new message.
 */
export const CreateDeviceRegistryRequestSchema: GenMessage<CreateDeviceRegistryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 0);

/**
 * Request for `GetDeviceRegistry`.
 *
 * @generated from message google.cloud.iot.v1.GetDeviceRegistryRequest
 */
export type GetDeviceRegistryRequest = Message<"google.cloud.iot.v1.GetDeviceRegistryRequest"> & {
  /**
   * Required. The name of the device registry. For example,
   * `projects/example-project/locations/us-central1/registries/my-registry`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.iot.v1.GetDeviceRegistryRequest.
 * Use `create(GetDeviceRegistryRequestSchema)` to create a new message.
 */
export const GetDeviceRegistryRequestSchema: GenMessage<GetDeviceRegistryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 1);

/**
 * Request for `DeleteDeviceRegistry`.
 *
 * @generated from message google.cloud.iot.v1.DeleteDeviceRegistryRequest
 */
export type DeleteDeviceRegistryRequest = Message<"google.cloud.iot.v1.DeleteDeviceRegistryRequest"> & {
  /**
   * Required. The name of the device registry. For example,
   * `projects/example-project/locations/us-central1/registries/my-registry`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.iot.v1.DeleteDeviceRegistryRequest.
 * Use `create(DeleteDeviceRegistryRequestSchema)` to create a new message.
 */
export const DeleteDeviceRegistryRequestSchema: GenMessage<DeleteDeviceRegistryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 2);

/**
 * Request for `UpdateDeviceRegistry`.
 *
 * @generated from message google.cloud.iot.v1.UpdateDeviceRegistryRequest
 */
export type UpdateDeviceRegistryRequest = Message<"google.cloud.iot.v1.UpdateDeviceRegistryRequest"> & {
  /**
   * Required. The new values for the device registry. The `id` field must be empty, and
   * the `name` field must indicate the path of the resource. For example,
   * `projects/example-project/locations/us-central1/registries/my-registry`.
   *
   * @generated from field: google.cloud.iot.v1.DeviceRegistry device_registry = 1;
   */
  deviceRegistry?: DeviceRegistry;

  /**
   * Required. Only updates the `device_registry` fields indicated by this mask.
   * The field mask must not be empty, and it must not contain fields that
   * are immutable or only set by the server.
   * Mutable top-level fields: `event_notification_config`, `http_config`,
   * `mqtt_config`, and `state_notification_config`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.iot.v1.UpdateDeviceRegistryRequest.
 * Use `create(UpdateDeviceRegistryRequestSchema)` to create a new message.
 */
export const UpdateDeviceRegistryRequestSchema: GenMessage<UpdateDeviceRegistryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 3);

/**
 * Request for `ListDeviceRegistries`.
 *
 * @generated from message google.cloud.iot.v1.ListDeviceRegistriesRequest
 */
export type ListDeviceRegistriesRequest = Message<"google.cloud.iot.v1.ListDeviceRegistriesRequest"> & {
  /**
   * Required. The project and cloud region path. For example,
   * `projects/example-project/locations/us-central1`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of registries to return in the response. If this value
   * is zero, the service will select a default size. A call may return fewer
   * objects than requested. A non-empty `next_page_token` in the response
   * indicates that more data is available.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The value returned by the last `ListDeviceRegistriesResponse`; indicates
   * that this is a continuation of a prior `ListDeviceRegistries` call and
   * the system should return the next page of data.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.iot.v1.ListDeviceRegistriesRequest.
 * Use `create(ListDeviceRegistriesRequestSchema)` to create a new message.
 */
export const ListDeviceRegistriesRequestSchema: GenMessage<ListDeviceRegistriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 4);

/**
 * Response for `ListDeviceRegistries`.
 *
 * @generated from message google.cloud.iot.v1.ListDeviceRegistriesResponse
 */
export type ListDeviceRegistriesResponse = Message<"google.cloud.iot.v1.ListDeviceRegistriesResponse"> & {
  /**
   * The registries that matched the query.
   *
   * @generated from field: repeated google.cloud.iot.v1.DeviceRegistry device_registries = 1;
   */
  deviceRegistries: DeviceRegistry[];

  /**
   * If not empty, indicates that there may be more registries that match the
   * request; this value should be passed in a new
   * `ListDeviceRegistriesRequest`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.iot.v1.ListDeviceRegistriesResponse.
 * Use `create(ListDeviceRegistriesResponseSchema)` to create a new message.
 */
export const ListDeviceRegistriesResponseSchema: GenMessage<ListDeviceRegistriesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 5);

/**
 * Request for `CreateDevice`.
 *
 * @generated from message google.cloud.iot.v1.CreateDeviceRequest
 */
export type CreateDeviceRequest = Message<"google.cloud.iot.v1.CreateDeviceRequest"> & {
  /**
   * Required. The name of the device registry where this device should be created.
   * For example,
   * `projects/example-project/locations/us-central1/registries/my-registry`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The device registration details. The field `name` must be empty. The server
   * generates `name` from the device registry `id` and the
   * `parent` field.
   *
   * @generated from field: google.cloud.iot.v1.Device device = 2;
   */
  device?: Device;
};

/**
 * Describes the message google.cloud.iot.v1.CreateDeviceRequest.
 * Use `create(CreateDeviceRequestSchema)` to create a new message.
 */
export const CreateDeviceRequestSchema: GenMessage<CreateDeviceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 6);

/**
 * Request for `GetDevice`.
 *
 * @generated from message google.cloud.iot.v1.GetDeviceRequest
 */
export type GetDeviceRequest = Message<"google.cloud.iot.v1.GetDeviceRequest"> & {
  /**
   * Required. The name of the device. For example,
   * `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
   * `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The fields of the `Device` resource to be returned in the response. If the
   * field mask is unset or empty, all fields are returned. Fields have to be
   * provided in snake_case format, for example: `last_heartbeat_time`.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 2;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message google.cloud.iot.v1.GetDeviceRequest.
 * Use `create(GetDeviceRequestSchema)` to create a new message.
 */
export const GetDeviceRequestSchema: GenMessage<GetDeviceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 7);

/**
 * Request for `UpdateDevice`.
 *
 * @generated from message google.cloud.iot.v1.UpdateDeviceRequest
 */
export type UpdateDeviceRequest = Message<"google.cloud.iot.v1.UpdateDeviceRequest"> & {
  /**
   * Required. The new values for the device. The `id` and `num_id` fields must
   * be empty, and the field `name` must specify the name path. For example,
   * `projects/p0/locations/us-central1/registries/registry0/devices/device0`or
   * `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
   *
   * @generated from field: google.cloud.iot.v1.Device device = 2;
   */
  device?: Device;

  /**
   * Required. Only updates the `device` fields indicated by this mask.
   * The field mask must not be empty, and it must not contain fields that
   * are immutable or only set by the server.
   * Mutable top-level fields: `credentials`, `blocked`, and `metadata`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.iot.v1.UpdateDeviceRequest.
 * Use `create(UpdateDeviceRequestSchema)` to create a new message.
 */
export const UpdateDeviceRequestSchema: GenMessage<UpdateDeviceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 8);

/**
 * Request for `DeleteDevice`.
 *
 * @generated from message google.cloud.iot.v1.DeleteDeviceRequest
 */
export type DeleteDeviceRequest = Message<"google.cloud.iot.v1.DeleteDeviceRequest"> & {
  /**
   * Required. The name of the device. For example,
   * `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
   * `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.iot.v1.DeleteDeviceRequest.
 * Use `create(DeleteDeviceRequestSchema)` to create a new message.
 */
export const DeleteDeviceRequestSchema: GenMessage<DeleteDeviceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 9);

/**
 * Request for `ListDevices`.
 *
 * @generated from message google.cloud.iot.v1.ListDevicesRequest
 */
export type ListDevicesRequest = Message<"google.cloud.iot.v1.ListDevicesRequest"> & {
  /**
   * Required. The device registry path. Required. For example,
   * `projects/my-project/locations/us-central1/registries/my-registry`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * A list of device numeric IDs. If empty, this field is ignored. Maximum
   * IDs: 10,000.
   *
   * @generated from field: repeated uint64 device_num_ids = 2;
   */
  deviceNumIds: bigint[];

  /**
   * A list of device string IDs. For example, `['device0', 'device12']`.
   * If empty, this field is ignored. Maximum IDs: 10,000
   *
   * @generated from field: repeated string device_ids = 3;
   */
  deviceIds: string[];

  /**
   * The fields of the `Device` resource to be returned in the response. The
   * fields `id` and `num_id` are always returned, along with any
   * other fields specified in snake_case format, for example:
   * `last_heartbeat_time`.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 4;
   */
  fieldMask?: FieldMask;

  /**
   * Options related to gateways.
   *
   * @generated from field: google.cloud.iot.v1.GatewayListOptions gateway_list_options = 6;
   */
  gatewayListOptions?: GatewayListOptions;

  /**
   * The maximum number of devices to return in the response. If this value
   * is zero, the service will select a default size. A call may return fewer
   * objects than requested. A non-empty `next_page_token` in the response
   * indicates that more data is available.
   *
   * @generated from field: int32 page_size = 100;
   */
  pageSize: number;

  /**
   * The value returned by the last `ListDevicesResponse`; indicates
   * that this is a continuation of a prior `ListDevices` call and
   * the system should return the next page of data.
   *
   * @generated from field: string page_token = 101;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.iot.v1.ListDevicesRequest.
 * Use `create(ListDevicesRequestSchema)` to create a new message.
 */
export const ListDevicesRequestSchema: GenMessage<ListDevicesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 10);

/**
 * Options for limiting the list based on gateway type and associations.
 *
 * @generated from message google.cloud.iot.v1.GatewayListOptions
 */
export type GatewayListOptions = Message<"google.cloud.iot.v1.GatewayListOptions"> & {
  /**
   * If not set, all devices and gateways are returned. If set, the list is
   * filtered based on gateway type and associations.
   *
   * @generated from oneof google.cloud.iot.v1.GatewayListOptions.filter
   */
  filter: {
    /**
     * If `GATEWAY` is specified, only gateways are returned. If `NON_GATEWAY`
     * is specified, only non-gateway devices are returned. If
     * `GATEWAY_TYPE_UNSPECIFIED` is specified, all devices are returned.
     *
     * @generated from field: google.cloud.iot.v1.GatewayType gateway_type = 1;
     */
    value: GatewayType;
    case: "gatewayType";
  } | {
    /**
     * If set, only devices associated with the specified gateway are returned.
     * The gateway ID can be numeric (`num_id`) or the user-defined string
     * (`id`). For example, if `123` is specified, only devices bound to the
     * gateway with `num_id` 123 are returned.
     *
     * @generated from field: string associations_gateway_id = 2;
     */
    value: string;
    case: "associationsGatewayId";
  } | {
    /**
     * If set, returns only the gateways with which the specified device is
     * associated. The device ID can be numeric (`num_id`) or the user-defined
     * string (`id`). For example, if `456` is specified, returns only the
     * gateways to which the device with `num_id` 456 is bound.
     *
     * @generated from field: string associations_device_id = 3;
     */
    value: string;
    case: "associationsDeviceId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.iot.v1.GatewayListOptions.
 * Use `create(GatewayListOptionsSchema)` to create a new message.
 */
export const GatewayListOptionsSchema: GenMessage<GatewayListOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 11);

/**
 * Response for `ListDevices`.
 *
 * @generated from message google.cloud.iot.v1.ListDevicesResponse
 */
export type ListDevicesResponse = Message<"google.cloud.iot.v1.ListDevicesResponse"> & {
  /**
   * The devices that match the request.
   *
   * @generated from field: repeated google.cloud.iot.v1.Device devices = 1;
   */
  devices: Device[];

  /**
   * If not empty, indicates that there may be more devices that match the
   * request; this value should be passed in a new `ListDevicesRequest`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.iot.v1.ListDevicesResponse.
 * Use `create(ListDevicesResponseSchema)` to create a new message.
 */
export const ListDevicesResponseSchema: GenMessage<ListDevicesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 12);

/**
 * Request for `ModifyCloudToDeviceConfig`.
 *
 * @generated from message google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest
 */
export type ModifyCloudToDeviceConfigRequest = Message<"google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest"> & {
  /**
   * Required. The name of the device. For example,
   * `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
   * `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The version number to update. If this value is zero, it will not check the
   * version number of the server and will always update the current version;
   * otherwise, this update will fail if the version number found on the server
   * does not match this version number. This is used to support multiple
   * simultaneous updates without losing data.
   *
   * @generated from field: int64 version_to_update = 2;
   */
  versionToUpdate: bigint;

  /**
   * Required. The configuration data for the device.
   *
   * @generated from field: bytes binary_data = 3;
   */
  binaryData: Uint8Array;
};

/**
 * Describes the message google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.
 * Use `create(ModifyCloudToDeviceConfigRequestSchema)` to create a new message.
 */
export const ModifyCloudToDeviceConfigRequestSchema: GenMessage<ModifyCloudToDeviceConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 13);

/**
 * Request for `ListDeviceConfigVersions`.
 *
 * @generated from message google.cloud.iot.v1.ListDeviceConfigVersionsRequest
 */
export type ListDeviceConfigVersionsRequest = Message<"google.cloud.iot.v1.ListDeviceConfigVersionsRequest"> & {
  /**
   * Required. The name of the device. For example,
   * `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
   * `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The number of versions to list. Versions are listed in decreasing order of
   * the version number. The maximum number of versions retained is 10. If this
   * value is zero, it will return all the versions available.
   *
   * @generated from field: int32 num_versions = 2;
   */
  numVersions: number;
};

/**
 * Describes the message google.cloud.iot.v1.ListDeviceConfigVersionsRequest.
 * Use `create(ListDeviceConfigVersionsRequestSchema)` to create a new message.
 */
export const ListDeviceConfigVersionsRequestSchema: GenMessage<ListDeviceConfigVersionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 14);

/**
 * Response for `ListDeviceConfigVersions`.
 *
 * @generated from message google.cloud.iot.v1.ListDeviceConfigVersionsResponse
 */
export type ListDeviceConfigVersionsResponse = Message<"google.cloud.iot.v1.ListDeviceConfigVersionsResponse"> & {
  /**
   * The device configuration for the last few versions. Versions are listed
   * in decreasing order, starting from the most recent one.
   *
   * @generated from field: repeated google.cloud.iot.v1.DeviceConfig device_configs = 1;
   */
  deviceConfigs: DeviceConfig[];
};

/**
 * Describes the message google.cloud.iot.v1.ListDeviceConfigVersionsResponse.
 * Use `create(ListDeviceConfigVersionsResponseSchema)` to create a new message.
 */
export const ListDeviceConfigVersionsResponseSchema: GenMessage<ListDeviceConfigVersionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 15);

/**
 * Request for `ListDeviceStates`.
 *
 * @generated from message google.cloud.iot.v1.ListDeviceStatesRequest
 */
export type ListDeviceStatesRequest = Message<"google.cloud.iot.v1.ListDeviceStatesRequest"> & {
  /**
   * Required. The name of the device. For example,
   * `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
   * `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The number of states to list. States are listed in descending order of
   * update time. The maximum number of states retained is 10. If this
   * value is zero, it will return all the states available.
   *
   * @generated from field: int32 num_states = 2;
   */
  numStates: number;
};

/**
 * Describes the message google.cloud.iot.v1.ListDeviceStatesRequest.
 * Use `create(ListDeviceStatesRequestSchema)` to create a new message.
 */
export const ListDeviceStatesRequestSchema: GenMessage<ListDeviceStatesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 16);

/**
 * Response for `ListDeviceStates`.
 *
 * @generated from message google.cloud.iot.v1.ListDeviceStatesResponse
 */
export type ListDeviceStatesResponse = Message<"google.cloud.iot.v1.ListDeviceStatesResponse"> & {
  /**
   * The last few device states. States are listed in descending order of server
   * update time, starting from the most recent one.
   *
   * @generated from field: repeated google.cloud.iot.v1.DeviceState device_states = 1;
   */
  deviceStates: DeviceState[];
};

/**
 * Describes the message google.cloud.iot.v1.ListDeviceStatesResponse.
 * Use `create(ListDeviceStatesResponseSchema)` to create a new message.
 */
export const ListDeviceStatesResponseSchema: GenMessage<ListDeviceStatesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 17);

/**
 * Request for `SendCommandToDevice`.
 *
 * @generated from message google.cloud.iot.v1.SendCommandToDeviceRequest
 */
export type SendCommandToDeviceRequest = Message<"google.cloud.iot.v1.SendCommandToDeviceRequest"> & {
  /**
   * Required. The name of the device. For example,
   * `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
   * `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The command data to send to the device.
   *
   * @generated from field: bytes binary_data = 2;
   */
  binaryData: Uint8Array;

  /**
   * Optional subfolder for the command. If empty, the command will be delivered
   * to the /devices/{device-id}/commands topic, otherwise it will be delivered
   * to the /devices/{device-id}/commands/{subfolder} topic. Multi-level
   * subfolders are allowed. This field must not have more than 256 characters,
   * and must not contain any MQTT wildcards ("+" or "#") or null characters.
   *
   * @generated from field: string subfolder = 3;
   */
  subfolder: string;
};

/**
 * Describes the message google.cloud.iot.v1.SendCommandToDeviceRequest.
 * Use `create(SendCommandToDeviceRequestSchema)` to create a new message.
 */
export const SendCommandToDeviceRequestSchema: GenMessage<SendCommandToDeviceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 18);

/**
 * Response for `SendCommandToDevice`.
 *
 * @generated from message google.cloud.iot.v1.SendCommandToDeviceResponse
 */
export type SendCommandToDeviceResponse = Message<"google.cloud.iot.v1.SendCommandToDeviceResponse"> & {
};

/**
 * Describes the message google.cloud.iot.v1.SendCommandToDeviceResponse.
 * Use `create(SendCommandToDeviceResponseSchema)` to create a new message.
 */
export const SendCommandToDeviceResponseSchema: GenMessage<SendCommandToDeviceResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 19);

/**
 * Request for `BindDeviceToGateway`.
 *
 * @generated from message google.cloud.iot.v1.BindDeviceToGatewayRequest
 */
export type BindDeviceToGatewayRequest = Message<"google.cloud.iot.v1.BindDeviceToGatewayRequest"> & {
  /**
   * Required. The name of the registry. For example,
   * `projects/example-project/locations/us-central1/registries/my-registry`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The value of `gateway_id` can be either the device numeric ID or the
   * user-defined device identifier.
   *
   * @generated from field: string gateway_id = 2;
   */
  gatewayId: string;

  /**
   * Required. The device to associate with the specified gateway. The value of
   * `device_id` can be either the device numeric ID or the user-defined device
   * identifier.
   *
   * @generated from field: string device_id = 3;
   */
  deviceId: string;
};

/**
 * Describes the message google.cloud.iot.v1.BindDeviceToGatewayRequest.
 * Use `create(BindDeviceToGatewayRequestSchema)` to create a new message.
 */
export const BindDeviceToGatewayRequestSchema: GenMessage<BindDeviceToGatewayRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 20);

/**
 * Response for `BindDeviceToGateway`.
 *
 * @generated from message google.cloud.iot.v1.BindDeviceToGatewayResponse
 */
export type BindDeviceToGatewayResponse = Message<"google.cloud.iot.v1.BindDeviceToGatewayResponse"> & {
};

/**
 * Describes the message google.cloud.iot.v1.BindDeviceToGatewayResponse.
 * Use `create(BindDeviceToGatewayResponseSchema)` to create a new message.
 */
export const BindDeviceToGatewayResponseSchema: GenMessage<BindDeviceToGatewayResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 21);

/**
 * Request for `UnbindDeviceFromGateway`.
 *
 * @generated from message google.cloud.iot.v1.UnbindDeviceFromGatewayRequest
 */
export type UnbindDeviceFromGatewayRequest = Message<"google.cloud.iot.v1.UnbindDeviceFromGatewayRequest"> & {
  /**
   * Required. The name of the registry. For example,
   * `projects/example-project/locations/us-central1/registries/my-registry`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The value of `gateway_id` can be either the device numeric ID or the
   * user-defined device identifier.
   *
   * @generated from field: string gateway_id = 2;
   */
  gatewayId: string;

  /**
   * Required. The device to disassociate from the specified gateway. The value of
   * `device_id` can be either the device numeric ID or the user-defined device
   * identifier.
   *
   * @generated from field: string device_id = 3;
   */
  deviceId: string;
};

/**
 * Describes the message google.cloud.iot.v1.UnbindDeviceFromGatewayRequest.
 * Use `create(UnbindDeviceFromGatewayRequestSchema)` to create a new message.
 */
export const UnbindDeviceFromGatewayRequestSchema: GenMessage<UnbindDeviceFromGatewayRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 22);

/**
 * Response for `UnbindDeviceFromGateway`.
 *
 * @generated from message google.cloud.iot.v1.UnbindDeviceFromGatewayResponse
 */
export type UnbindDeviceFromGatewayResponse = Message<"google.cloud.iot.v1.UnbindDeviceFromGatewayResponse"> & {
};

/**
 * Describes the message google.cloud.iot.v1.UnbindDeviceFromGatewayResponse.
 * Use `create(UnbindDeviceFromGatewayResponseSchema)` to create a new message.
 */
export const UnbindDeviceFromGatewayResponseSchema: GenMessage<UnbindDeviceFromGatewayResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_iot_v1_device_manager, 23);

/**
 * Internet of Things (IoT) service. Securely connect and manage IoT devices.
 *
 * @generated from service google.cloud.iot.v1.DeviceManager
 */
export const DeviceManager: GenService<{
  /**
   * Creates a device registry that contains devices.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.CreateDeviceRegistry
   */
  createDeviceRegistry: {
    methodKind: "unary";
    input: typeof CreateDeviceRegistryRequestSchema;
    output: typeof DeviceRegistrySchema;
  },
  /**
   * Gets a device registry configuration.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.GetDeviceRegistry
   */
  getDeviceRegistry: {
    methodKind: "unary";
    input: typeof GetDeviceRegistryRequestSchema;
    output: typeof DeviceRegistrySchema;
  },
  /**
   * Updates a device registry configuration.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.UpdateDeviceRegistry
   */
  updateDeviceRegistry: {
    methodKind: "unary";
    input: typeof UpdateDeviceRegistryRequestSchema;
    output: typeof DeviceRegistrySchema;
  },
  /**
   * Deletes a device registry configuration.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.DeleteDeviceRegistry
   */
  deleteDeviceRegistry: {
    methodKind: "unary";
    input: typeof DeleteDeviceRegistryRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists device registries.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.ListDeviceRegistries
   */
  listDeviceRegistries: {
    methodKind: "unary";
    input: typeof ListDeviceRegistriesRequestSchema;
    output: typeof ListDeviceRegistriesResponseSchema;
  },
  /**
   * Creates a device in a device registry.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.CreateDevice
   */
  createDevice: {
    methodKind: "unary";
    input: typeof CreateDeviceRequestSchema;
    output: typeof DeviceSchema;
  },
  /**
   * Gets details about a device.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.GetDevice
   */
  getDevice: {
    methodKind: "unary";
    input: typeof GetDeviceRequestSchema;
    output: typeof DeviceSchema;
  },
  /**
   * Updates a device.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.UpdateDevice
   */
  updateDevice: {
    methodKind: "unary";
    input: typeof UpdateDeviceRequestSchema;
    output: typeof DeviceSchema;
  },
  /**
   * Deletes a device.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.DeleteDevice
   */
  deleteDevice: {
    methodKind: "unary";
    input: typeof DeleteDeviceRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * List devices in a device registry.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.ListDevices
   */
  listDevices: {
    methodKind: "unary";
    input: typeof ListDevicesRequestSchema;
    output: typeof ListDevicesResponseSchema;
  },
  /**
   * Modifies the configuration for the device, which is eventually sent from
   * the Cloud IoT Core servers. Returns the modified configuration version and
   * its metadata.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.ModifyCloudToDeviceConfig
   */
  modifyCloudToDeviceConfig: {
    methodKind: "unary";
    input: typeof ModifyCloudToDeviceConfigRequestSchema;
    output: typeof DeviceConfigSchema;
  },
  /**
   * Lists the last few versions of the device configuration in descending
   * order (i.e.: newest first).
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.ListDeviceConfigVersions
   */
  listDeviceConfigVersions: {
    methodKind: "unary";
    input: typeof ListDeviceConfigVersionsRequestSchema;
    output: typeof ListDeviceConfigVersionsResponseSchema;
  },
  /**
   * Lists the last few versions of the device state in descending order (i.e.:
   * newest first).
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.ListDeviceStates
   */
  listDeviceStates: {
    methodKind: "unary";
    input: typeof ListDeviceStatesRequestSchema;
    output: typeof ListDeviceStatesResponseSchema;
  },
  /**
   * Sets the access control policy on the specified resource. Replaces any
   * existing policy.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Gets the access control policy for a resource.
   * Returns an empty policy if the resource exists and does not have a policy
   * set.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Returns permissions that a caller has on the specified resource.
   * If the resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
  /**
   * Sends a command to the specified device. In order for a device to be able
   * to receive commands, it must:
   * 1) be connected to Cloud IoT Core using the MQTT protocol, and
   * 2) be subscribed to the group of MQTT topics specified by
   *    /devices/{device-id}/commands/#. This subscription will receive commands
   *    at the top-level topic /devices/{device-id}/commands as well as commands
   *    for subfolders, like /devices/{device-id}/commands/subfolder.
   *    Note that subscribing to specific subfolders is not supported.
   * If the command could not be delivered to the device, this method will
   * return an error; in particular, if the device is not subscribed, this
   * method will return FAILED_PRECONDITION. Otherwise, this method will
   * return OK. If the subscription is QoS 1, at least once delivery will be
   * guaranteed; for QoS 0, no acknowledgment will be expected from the device.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.SendCommandToDevice
   */
  sendCommandToDevice: {
    methodKind: "unary";
    input: typeof SendCommandToDeviceRequestSchema;
    output: typeof SendCommandToDeviceResponseSchema;
  },
  /**
   * Associates the device with the gateway.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.BindDeviceToGateway
   */
  bindDeviceToGateway: {
    methodKind: "unary";
    input: typeof BindDeviceToGatewayRequestSchema;
    output: typeof BindDeviceToGatewayResponseSchema;
  },
  /**
   * Deletes the association between the device and the gateway.
   *
   * @generated from rpc google.cloud.iot.v1.DeviceManager.UnbindDeviceFromGateway
   */
  unbindDeviceFromGateway: {
    methodKind: "unary";
    input: typeof UnbindDeviceFromGatewayRequestSchema;
    output: typeof UnbindDeviceFromGatewayResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_iot_v1_device_manager, 0);

