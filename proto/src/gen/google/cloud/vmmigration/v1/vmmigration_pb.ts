// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/vmmigration/v1/vmmigration.proto (package google.cloud.vmmigration.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Duration, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Help_Link, LocalizedMessage } from "../../../rpc/error_details_pb";
import { file_google_rpc_error_details } from "../../../rpc/error_details_pb";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/vmmigration/v1/vmmigration.proto.
 */
export const file_google_cloud_vmmigration_v1_vmmigration: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_rpc_error_details, file_google_rpc_status]);

/**
 * ReplicationCycle contains information about the current replication cycle
 * status.
 *
 * @generated from message google.cloud.vmmigration.v1.ReplicationCycle
 */
export type ReplicationCycle = Message<"google.cloud.vmmigration.v1.ReplicationCycle"> & {
  /**
   * The identifier of the ReplicationCycle.
   *
   * @generated from field: string name = 13;
   */
  name: string;

  /**
   * The cycle's ordinal number.
   *
   * @generated from field: int32 cycle_number = 10;
   */
  cycleNumber: number;

  /**
   * The time the replication cycle has started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time the replication cycle has ended.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 6;
   */
  endTime?: Timestamp;

  /**
   * The accumulated duration the replication cycle was paused.
   *
   * @generated from field: google.protobuf.Duration total_pause_duration = 7;
   */
  totalPauseDuration?: Duration;

  /**
   * The current progress in percentage of this cycle.
   * Was replaced by 'steps' field, which breaks down the cycle progression more
   * accurately.
   *
   * @generated from field: int32 progress_percent = 5 [deprecated = true];
   * @deprecated
   */
  progressPercent: number;

  /**
   * The cycle's steps list representing its progress.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.CycleStep steps = 9;
   */
  steps: CycleStep[];

  /**
   * State of the ReplicationCycle.
   *
   * @generated from field: google.cloud.vmmigration.v1.ReplicationCycle.State state = 11;
   */
  state: ReplicationCycle_State;

  /**
   * Provides details on the state of the cycle in case of an error.
   *
   * @generated from field: google.rpc.Status error = 12;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ReplicationCycle.
 * Use `create(ReplicationCycleSchema)` to create a new message.
 */
export const ReplicationCycleSchema: GenMessage<ReplicationCycle> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 0);

/**
 * Possible states of a replication cycle.
 *
 * @generated from enum google.cloud.vmmigration.v1.ReplicationCycle.State
 */
export enum ReplicationCycle_State {
  /**
   * The state is unknown. This is used for API compatibility only and is not
   * used by the system.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The replication cycle is running.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The replication cycle is paused.
   *
   * @generated from enum value: PAUSED = 2;
   */
  PAUSED = 2,

  /**
   * The replication cycle finished with errors.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * The replication cycle finished successfully.
   *
   * @generated from enum value: SUCCEEDED = 4;
   */
  SUCCEEDED = 4,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.ReplicationCycle.State.
 */
export const ReplicationCycle_StateSchema: GenEnum<ReplicationCycle_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 0, 0);

/**
 * CycleStep holds information about a step progress.
 *
 * @generated from message google.cloud.vmmigration.v1.CycleStep
 */
export type CycleStep = Message<"google.cloud.vmmigration.v1.CycleStep"> & {
  /**
   * @generated from oneof google.cloud.vmmigration.v1.CycleStep.step
   */
  step: {
    /**
     * Initializing replication step.
     *
     * @generated from field: google.cloud.vmmigration.v1.InitializingReplicationStep initializing_replication = 3;
     */
    value: InitializingReplicationStep;
    case: "initializingReplication";
  } | {
    /**
     * Replicating step.
     *
     * @generated from field: google.cloud.vmmigration.v1.ReplicatingStep replicating = 4;
     */
    value: ReplicatingStep;
    case: "replicating";
  } | {
    /**
     * Post processing step.
     *
     * @generated from field: google.cloud.vmmigration.v1.PostProcessingStep post_processing = 5;
     */
    value: PostProcessingStep;
    case: "postProcessing";
  } | { case: undefined; value?: undefined };

  /**
   * The time the cycle step has started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time the cycle step has ended.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CycleStep.
 * Use `create(CycleStepSchema)` to create a new message.
 */
export const CycleStepSchema: GenMessage<CycleStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 1);

/**
 * InitializingReplicationStep contains specific step details.
 *
 * @generated from message google.cloud.vmmigration.v1.InitializingReplicationStep
 */
export type InitializingReplicationStep = Message<"google.cloud.vmmigration.v1.InitializingReplicationStep"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.InitializingReplicationStep.
 * Use `create(InitializingReplicationStepSchema)` to create a new message.
 */
export const InitializingReplicationStepSchema: GenMessage<InitializingReplicationStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 2);

/**
 * ReplicatingStep contains specific step details.
 *
 * @generated from message google.cloud.vmmigration.v1.ReplicatingStep
 */
export type ReplicatingStep = Message<"google.cloud.vmmigration.v1.ReplicatingStep"> & {
  /**
   * Total bytes to be handled in the step.
   *
   * @generated from field: int64 total_bytes = 1;
   */
  totalBytes: bigint;

  /**
   * Replicated bytes in the step.
   *
   * @generated from field: int64 replicated_bytes = 2;
   */
  replicatedBytes: bigint;

  /**
   * The source disks replication rate for the last 2 minutes in bytes per
   * second.
   *
   * @generated from field: int64 last_two_minutes_average_bytes_per_second = 3;
   */
  lastTwoMinutesAverageBytesPerSecond: bigint;

  /**
   * The source disks replication rate for the last 30 minutes in bytes per
   * second.
   *
   * @generated from field: int64 last_thirty_minutes_average_bytes_per_second = 4;
   */
  lastThirtyMinutesAverageBytesPerSecond: bigint;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ReplicatingStep.
 * Use `create(ReplicatingStepSchema)` to create a new message.
 */
export const ReplicatingStepSchema: GenMessage<ReplicatingStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 3);

/**
 * PostProcessingStep contains specific step details.
 *
 * @generated from message google.cloud.vmmigration.v1.PostProcessingStep
 */
export type PostProcessingStep = Message<"google.cloud.vmmigration.v1.PostProcessingStep"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.PostProcessingStep.
 * Use `create(PostProcessingStepSchema)` to create a new message.
 */
export const PostProcessingStepSchema: GenMessage<PostProcessingStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 4);

/**
 * ReplicationSync contain information about the last replica sync to the cloud.
 *
 * @generated from message google.cloud.vmmigration.v1.ReplicationSync
 */
export type ReplicationSync = Message<"google.cloud.vmmigration.v1.ReplicationSync"> & {
  /**
   * The most updated snapshot created time in the source that finished
   * replication.
   *
   * @generated from field: google.protobuf.Timestamp last_sync_time = 1;
   */
  lastSyncTime?: Timestamp;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ReplicationSync.
 * Use `create(ReplicationSyncSchema)` to create a new message.
 */
export const ReplicationSyncSchema: GenMessage<ReplicationSync> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 5);

/**
 * MigratingVm describes the VM that will be migrated from a Source environment
 * and its replication state.
 *
 * @generated from message google.cloud.vmmigration.v1.MigratingVm
 */
export type MigratingVm = Message<"google.cloud.vmmigration.v1.MigratingVm"> & {
  /**
   * The default configuration of the target VM that will be created in Google
   * Cloud as a result of the migration.
   *
   * @generated from oneof google.cloud.vmmigration.v1.MigratingVm.target_vm_defaults
   */
  targetVmDefaults: {
    /**
     * Details of the target VM in Compute Engine.
     *
     * @generated from field: google.cloud.vmmigration.v1.ComputeEngineTargetDefaults compute_engine_target_defaults = 26;
     */
    value: ComputeEngineTargetDefaults;
    case: "computeEngineTargetDefaults";
  } | { case: undefined; value?: undefined };

  /**
   * Details about the source VM.
   *
   * @generated from oneof google.cloud.vmmigration.v1.MigratingVm.source_vm_details
   */
  sourceVmDetails: {
    /**
     * Output only. Details of the VM from an AWS source.
     *
     * @generated from field: google.cloud.vmmigration.v1.AwsSourceVmDetails aws_source_vm_details = 29;
     */
    value: AwsSourceVmDetails;
    case: "awsSourceVmDetails";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The identifier of the MigratingVm.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The unique ID of the VM in the source.
   * The VM's name in vSphere can be changed, so this is not the VM's name but
   * rather its moRef id. This id is of the form vm-<num>.
   *
   * @generated from field: string source_vm_id = 2;
   */
  sourceVmId: string;

  /**
   * The display name attached to the MigratingVm by the user.
   *
   * @generated from field: string display_name = 18;
   */
  displayName: string;

  /**
   * The description attached to the migrating VM by the user.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The replication schedule policy.
   *
   * @generated from field: google.cloud.vmmigration.v1.SchedulePolicy policy = 8;
   */
  policy?: SchedulePolicy;

  /**
   * Output only. The time the migrating VM was created (this refers to this
   * resource and not to the time it was installed in the source).
   *
   * @generated from field: google.protobuf.Timestamp create_time = 9;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last time the migrating VM resource was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 10;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The most updated snapshot created time in the source that
   * finished replication.
   *
   * @generated from field: google.cloud.vmmigration.v1.ReplicationSync last_sync = 11;
   */
  lastSync?: ReplicationSync;

  /**
   * Output only. State of the MigratingVm.
   *
   * @generated from field: google.cloud.vmmigration.v1.MigratingVm.State state = 23;
   */
  state: MigratingVm_State;

  /**
   * Output only. The last time the migrating VM state was updated.
   *
   * @generated from field: google.protobuf.Timestamp state_time = 22;
   */
  stateTime?: Timestamp;

  /**
   * Output only. The percentage progress of the current running replication
   * cycle.
   *
   * @generated from field: google.cloud.vmmigration.v1.ReplicationCycle current_sync_info = 13;
   */
  currentSyncInfo?: ReplicationCycle;

  /**
   * Output only. The group this migrating vm is included in, if any. The group
   * is represented by the full path of the appropriate
   * [Group][google.cloud.vmmigration.v1.Group] resource.
   *
   * @generated from field: string group = 15;
   */
  group: string;

  /**
   * The labels of the migrating VM.
   *
   * @generated from field: map<string, string> labels = 16;
   */
  labels: { [key: string]: string };

  /**
   * Output only. The recent [clone jobs][google.cloud.vmmigration.v1.CloneJob]
   * performed on the migrating VM. This field holds the vm's last completed
   * clone job and the vm's running clone job, if one exists.
   * Note: To have this field populated you need to explicitly request it via
   * the "view" parameter of the Get/List request.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.CloneJob recent_clone_jobs = 17;
   */
  recentCloneJobs: CloneJob[];

  /**
   * Output only. Provides details on the state of the Migrating VM in case of
   * an error in replication.
   *
   * @generated from field: google.rpc.Status error = 19;
   */
  error?: Status;

  /**
   * Output only. The recent cutover jobs performed on the migrating VM.
   * This field holds the vm's last completed cutover job and the vm's
   * running cutover job, if one exists.
   * Note: To have this field populated you need to explicitly request it via
   * the "view" parameter of the Get/List request.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.CutoverJob recent_cutover_jobs = 20;
   */
  recentCutoverJobs: CutoverJob[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.MigratingVm.
 * Use `create(MigratingVmSchema)` to create a new message.
 */
export const MigratingVmSchema: GenMessage<MigratingVm> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 6);

/**
 * The possible values of the state/health of source VM.
 *
 * @generated from enum google.cloud.vmmigration.v1.MigratingVm.State
 */
export enum MigratingVm_State {
  /**
   * The state was not sampled by the health checks yet.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The VM in the source is being verified.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The source VM was verified, and it's ready to start replication.
   *
   * @generated from enum value: READY = 2;
   */
  READY = 2,

  /**
   * Migration is going through the first sync cycle.
   *
   * @generated from enum value: FIRST_SYNC = 3;
   */
  FIRST_SYNC = 3,

  /**
   * The replication is active, and it's running or scheduled to run.
   *
   * @generated from enum value: ACTIVE = 4;
   */
  ACTIVE = 4,

  /**
   * The source VM is being turned off, and a final replication is currently
   * running.
   *
   * @generated from enum value: CUTTING_OVER = 7;
   */
  CUTTING_OVER = 7,

  /**
   * The source VM was stopped and replicated. The replication is currently
   * paused.
   *
   * @generated from enum value: CUTOVER = 8;
   */
  CUTOVER = 8,

  /**
   * A cutover job is active and replication cycle is running the final sync.
   *
   * @generated from enum value: FINAL_SYNC = 9;
   */
  FINAL_SYNC = 9,

  /**
   * The replication was paused by the user and no cycles are scheduled to
   * run.
   *
   * @generated from enum value: PAUSED = 10;
   */
  PAUSED = 10,

  /**
   * The migrating VM is being finalized and migration resources are being
   * removed.
   *
   * @generated from enum value: FINALIZING = 11;
   */
  FINALIZING = 11,

  /**
   * The replication process is done. The migrating VM is finalized and no
   * longer consumes billable resources.
   *
   * @generated from enum value: FINALIZED = 12;
   */
  FINALIZED = 12,

  /**
   * The replication process encountered an unrecoverable error and was
   * aborted.
   *
   * @generated from enum value: ERROR = 13;
   */
  ERROR = 13,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.MigratingVm.State.
 */
export const MigratingVm_StateSchema: GenEnum<MigratingVm_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 6, 0);

/**
 * CloneJob describes the process of creating a clone of a
 * [MigratingVM][google.cloud.vmmigration.v1.MigratingVm] to the
 * requested target based on the latest successful uploaded snapshots.
 * While the migration cycles of a MigratingVm take place, it is possible to
 * verify the uploaded VM can be started in the cloud, by creating a clone. The
 * clone can be created without any downtime, and it is created using the latest
 * snapshots which are already in the cloud. The cloneJob is only responsible
 * for its work, not its products, which means once it is finished, it will
 * never touch the instance it created. It will only delete it in case of the
 * CloneJob being cancelled or upon failure to clone.
 *
 * @generated from message google.cloud.vmmigration.v1.CloneJob
 */
export type CloneJob = Message<"google.cloud.vmmigration.v1.CloneJob"> & {
  /**
   * Details of the VM to create as the target of this clone job.
   *
   * @generated from oneof google.cloud.vmmigration.v1.CloneJob.target_vm_details
   */
  targetVmDetails: {
    /**
     * Output only. Details of the target VM in Compute Engine.
     *
     * @generated from field: google.cloud.vmmigration.v1.ComputeEngineTargetDetails compute_engine_target_details = 20;
     */
    value: ComputeEngineTargetDetails;
    case: "computeEngineTargetDetails";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The time the clone job was created (as an API call, not when
   * it was actually created in the target).
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the clone job was ended.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 22;
   */
  endTime?: Timestamp;

  /**
   * Output only. The name of the clone.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Output only. State of the clone job.
   *
   * @generated from field: google.cloud.vmmigration.v1.CloneJob.State state = 12;
   */
  state: CloneJob_State;

  /**
   * Output only. The time the state was last updated.
   *
   * @generated from field: google.protobuf.Timestamp state_time = 14;
   */
  stateTime?: Timestamp;

  /**
   * Output only. Provides details for the errors that led to the Clone Job's
   * state.
   *
   * @generated from field: google.rpc.Status error = 17;
   */
  error?: Status;

  /**
   * Output only. The clone steps list representing its progress.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.CloneStep steps = 23;
   */
  steps: CloneStep[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.CloneJob.
 * Use `create(CloneJobSchema)` to create a new message.
 */
export const CloneJobSchema: GenMessage<CloneJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 7);

/**
 * Possible states of the clone job.
 *
 * @generated from enum google.cloud.vmmigration.v1.CloneJob.State
 */
export enum CloneJob_State {
  /**
   * The state is unknown. This is used for API compatibility only and is not
   * used by the system.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The clone job has not yet started.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The clone job is active and running.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The clone job finished with errors.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * The clone job finished successfully.
   *
   * @generated from enum value: SUCCEEDED = 4;
   */
  SUCCEEDED = 4,

  /**
   * The clone job was cancelled.
   *
   * @generated from enum value: CANCELLED = 5;
   */
  CANCELLED = 5,

  /**
   * The clone job is being cancelled.
   *
   * @generated from enum value: CANCELLING = 6;
   */
  CANCELLING = 6,

  /**
   * OS adaptation is running as part of the clone job to generate license.
   *
   * @generated from enum value: ADAPTING_OS = 7;
   */
  ADAPTING_OS = 7,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.CloneJob.State.
 */
export const CloneJob_StateSchema: GenEnum<CloneJob_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 7, 0);

/**
 * CloneStep holds information about the clone step progress.
 *
 * @generated from message google.cloud.vmmigration.v1.CloneStep
 */
export type CloneStep = Message<"google.cloud.vmmigration.v1.CloneStep"> & {
  /**
   * @generated from oneof google.cloud.vmmigration.v1.CloneStep.step
   */
  step: {
    /**
     * Adapting OS step.
     *
     * @generated from field: google.cloud.vmmigration.v1.AdaptingOSStep adapting_os = 3;
     */
    value: AdaptingOSStep;
    case: "adaptingOs";
  } | {
    /**
     * Preparing VM disks step.
     *
     * @generated from field: google.cloud.vmmigration.v1.PreparingVMDisksStep preparing_vm_disks = 4;
     */
    value: PreparingVMDisksStep;
    case: "preparingVmDisks";
  } | {
    /**
     * Instantiating migrated VM step.
     *
     * @generated from field: google.cloud.vmmigration.v1.InstantiatingMigratedVMStep instantiating_migrated_vm = 5;
     */
    value: InstantiatingMigratedVMStep;
    case: "instantiatingMigratedVm";
  } | { case: undefined; value?: undefined };

  /**
   * The time the step has started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time the step has ended.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CloneStep.
 * Use `create(CloneStepSchema)` to create a new message.
 */
export const CloneStepSchema: GenMessage<CloneStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 8);

/**
 * AdaptingOSStep contains specific step details.
 *
 * @generated from message google.cloud.vmmigration.v1.AdaptingOSStep
 */
export type AdaptingOSStep = Message<"google.cloud.vmmigration.v1.AdaptingOSStep"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.AdaptingOSStep.
 * Use `create(AdaptingOSStepSchema)` to create a new message.
 */
export const AdaptingOSStepSchema: GenMessage<AdaptingOSStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 9);

/**
 * PreparingVMDisksStep contains specific step details.
 *
 * @generated from message google.cloud.vmmigration.v1.PreparingVMDisksStep
 */
export type PreparingVMDisksStep = Message<"google.cloud.vmmigration.v1.PreparingVMDisksStep"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.PreparingVMDisksStep.
 * Use `create(PreparingVMDisksStepSchema)` to create a new message.
 */
export const PreparingVMDisksStepSchema: GenMessage<PreparingVMDisksStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 10);

/**
 * InstantiatingMigratedVMStep contains specific step details.
 *
 * @generated from message google.cloud.vmmigration.v1.InstantiatingMigratedVMStep
 */
export type InstantiatingMigratedVMStep = Message<"google.cloud.vmmigration.v1.InstantiatingMigratedVMStep"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.InstantiatingMigratedVMStep.
 * Use `create(InstantiatingMigratedVMStepSchema)` to create a new message.
 */
export const InstantiatingMigratedVMStepSchema: GenMessage<InstantiatingMigratedVMStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 11);

/**
 * CutoverJob message describes a cutover of a migrating VM. The CutoverJob is
 * the operation of shutting down the VM, creating a snapshot and
 * clonning the VM using the replicated snapshot.
 *
 * @generated from message google.cloud.vmmigration.v1.CutoverJob
 */
export type CutoverJob = Message<"google.cloud.vmmigration.v1.CutoverJob"> & {
  /**
   * Details of the VM to create as the target of this cutover job.
   *
   * @generated from oneof google.cloud.vmmigration.v1.CutoverJob.target_vm_details
   */
  targetVmDetails: {
    /**
     * Output only. Details of the target VM in Compute Engine.
     *
     * @generated from field: google.cloud.vmmigration.v1.ComputeEngineTargetDetails compute_engine_target_details = 14;
     */
    value: ComputeEngineTargetDetails;
    case: "computeEngineTargetDetails";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The time the cutover job was created (as an API call, not when
   * it was actually created in the target).
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the cutover job had finished.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 16;
   */
  endTime?: Timestamp;

  /**
   * Output only. The name of the cutover job.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Output only. State of the cutover job.
   *
   * @generated from field: google.cloud.vmmigration.v1.CutoverJob.State state = 5;
   */
  state: CutoverJob_State;

  /**
   * Output only. The time the state was last updated.
   *
   * @generated from field: google.protobuf.Timestamp state_time = 6;
   */
  stateTime?: Timestamp;

  /**
   * Output only. The current progress in percentage of the cutover job.
   *
   * @generated from field: int32 progress_percent = 13;
   */
  progressPercent: number;

  /**
   * Output only. Provides details for the errors that led to the Cutover Job's
   * state.
   *
   * @generated from field: google.rpc.Status error = 9;
   */
  error?: Status;

  /**
   * Output only. A message providing possible extra details about the current
   * state.
   *
   * @generated from field: string state_message = 10;
   */
  stateMessage: string;

  /**
   * Output only. The cutover steps list representing its progress.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.CutoverStep steps = 17;
   */
  steps: CutoverStep[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.CutoverJob.
 * Use `create(CutoverJobSchema)` to create a new message.
 */
export const CutoverJobSchema: GenMessage<CutoverJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 12);

/**
 * Possible states of the cutover job.
 *
 * @generated from enum google.cloud.vmmigration.v1.CutoverJob.State
 */
export enum CutoverJob_State {
  /**
   * The state is unknown. This is used for API compatibility only and is not
   * used by the system.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The cutover job has not yet started.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The cutover job finished with errors.
   *
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,

  /**
   * The cutover job finished successfully.
   *
   * @generated from enum value: SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * The cutover job was cancelled.
   *
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,

  /**
   * The cutover job is being cancelled.
   *
   * @generated from enum value: CANCELLING = 5;
   */
  CANCELLING = 5,

  /**
   * The cutover job is active and running.
   *
   * @generated from enum value: ACTIVE = 6;
   */
  ACTIVE = 6,

  /**
   * OS adaptation is running as part of the cutover job to generate license.
   *
   * @generated from enum value: ADAPTING_OS = 7;
   */
  ADAPTING_OS = 7,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.CutoverJob.State.
 */
export const CutoverJob_StateSchema: GenEnum<CutoverJob_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 12, 0);

/**
 * CutoverStep holds information about the cutover step progress.
 *
 * @generated from message google.cloud.vmmigration.v1.CutoverStep
 */
export type CutoverStep = Message<"google.cloud.vmmigration.v1.CutoverStep"> & {
  /**
   * @generated from oneof google.cloud.vmmigration.v1.CutoverStep.step
   */
  step: {
    /**
     * A replication cycle prior cutover step.
     *
     * @generated from field: google.cloud.vmmigration.v1.ReplicationCycle previous_replication_cycle = 3;
     */
    value: ReplicationCycle;
    case: "previousReplicationCycle";
  } | {
    /**
     * Shutting down VM step.
     *
     * @generated from field: google.cloud.vmmigration.v1.ShuttingDownSourceVMStep shutting_down_source_vm = 4;
     */
    value: ShuttingDownSourceVMStep;
    case: "shuttingDownSourceVm";
  } | {
    /**
     * Final sync step.
     *
     * @generated from field: google.cloud.vmmigration.v1.ReplicationCycle final_sync = 5;
     */
    value: ReplicationCycle;
    case: "finalSync";
  } | {
    /**
     * Preparing VM disks step.
     *
     * @generated from field: google.cloud.vmmigration.v1.PreparingVMDisksStep preparing_vm_disks = 6;
     */
    value: PreparingVMDisksStep;
    case: "preparingVmDisks";
  } | {
    /**
     * Instantiating migrated VM step.
     *
     * @generated from field: google.cloud.vmmigration.v1.InstantiatingMigratedVMStep instantiating_migrated_vm = 7;
     */
    value: InstantiatingMigratedVMStep;
    case: "instantiatingMigratedVm";
  } | { case: undefined; value?: undefined };

  /**
   * The time the step has started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time the step has ended.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CutoverStep.
 * Use `create(CutoverStepSchema)` to create a new message.
 */
export const CutoverStepSchema: GenMessage<CutoverStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 13);

/**
 * ShuttingDownSourceVMStep contains specific step details.
 *
 * @generated from message google.cloud.vmmigration.v1.ShuttingDownSourceVMStep
 */
export type ShuttingDownSourceVMStep = Message<"google.cloud.vmmigration.v1.ShuttingDownSourceVMStep"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.ShuttingDownSourceVMStep.
 * Use `create(ShuttingDownSourceVMStepSchema)` to create a new message.
 */
export const ShuttingDownSourceVMStepSchema: GenMessage<ShuttingDownSourceVMStep> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 14);

/**
 * Request message for 'CreateCloneJob' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CreateCloneJobRequest
 */
export type CreateCloneJobRequest = Message<"google.cloud.vmmigration.v1.CreateCloneJobRequest"> & {
  /**
   * Required. The Clone's parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The clone job identifier.
   *
   * @generated from field: string clone_job_id = 2;
   */
  cloneJobId: string;

  /**
   * Required. The clone request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.CloneJob clone_job = 3;
   */
  cloneJob?: CloneJob;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CreateCloneJobRequest.
 * Use `create(CreateCloneJobRequestSchema)` to create a new message.
 */
export const CreateCloneJobRequestSchema: GenMessage<CreateCloneJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 15);

/**
 * Request message for 'CancelCloneJob' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CancelCloneJobRequest
 */
export type CancelCloneJobRequest = Message<"google.cloud.vmmigration.v1.CancelCloneJobRequest"> & {
  /**
   * Required. The clone job id
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CancelCloneJobRequest.
 * Use `create(CancelCloneJobRequestSchema)` to create a new message.
 */
export const CancelCloneJobRequestSchema: GenMessage<CancelCloneJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 16);

/**
 * Response message for 'CancelCloneJob' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CancelCloneJobResponse
 */
export type CancelCloneJobResponse = Message<"google.cloud.vmmigration.v1.CancelCloneJobResponse"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.CancelCloneJobResponse.
 * Use `create(CancelCloneJobResponseSchema)` to create a new message.
 */
export const CancelCloneJobResponseSchema: GenMessage<CancelCloneJobResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 17);

/**
 * Request message for 'ListCloneJobsRequest' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListCloneJobsRequest
 */
export type ListCloneJobsRequest = Message<"google.cloud.vmmigration.v1.ListCloneJobsRequest"> & {
  /**
   * Required. The parent, which owns this collection of source VMs.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of clone jobs to return. The service may
   * return fewer than this value. If unspecified, at most 500 clone jobs will
   * be returned. The maximum value is 1000; values above 1000 will be coerced
   * to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Required. A page token, received from a previous `ListCloneJobs` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListCloneJobs` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter request.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. the order by fields for the result.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListCloneJobsRequest.
 * Use `create(ListCloneJobsRequestSchema)` to create a new message.
 */
export const ListCloneJobsRequestSchema: GenMessage<ListCloneJobsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 18);

/**
 * Response message for 'ListCloneJobs' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListCloneJobsResponse
 */
export type ListCloneJobsResponse = Message<"google.cloud.vmmigration.v1.ListCloneJobsResponse"> & {
  /**
   * Output only. The list of clone jobs response.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.CloneJob clone_jobs = 1;
   */
  cloneJobs: CloneJob[];

  /**
   * Output only. A token, which can be sent as `page_token` to retrieve the
   * next page. If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListCloneJobsResponse.
 * Use `create(ListCloneJobsResponseSchema)` to create a new message.
 */
export const ListCloneJobsResponseSchema: GenMessage<ListCloneJobsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 19);

/**
 * Request message for 'GetCloneJob' request.
 *
 * @generated from message google.cloud.vmmigration.v1.GetCloneJobRequest
 */
export type GetCloneJobRequest = Message<"google.cloud.vmmigration.v1.GetCloneJobRequest"> & {
  /**
   * Required. The name of the CloneJob.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.GetCloneJobRequest.
 * Use `create(GetCloneJobRequestSchema)` to create a new message.
 */
export const GetCloneJobRequestSchema: GenMessage<GetCloneJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 20);

/**
 * Source message describes a specific vm migration Source resource. It contains
 * the source environment information.
 *
 * @generated from message google.cloud.vmmigration.v1.Source
 */
export type Source = Message<"google.cloud.vmmigration.v1.Source"> & {
  /**
   * @generated from oneof google.cloud.vmmigration.v1.Source.source_details
   */
  sourceDetails: {
    /**
     * Vmware type source details.
     *
     * @generated from field: google.cloud.vmmigration.v1.VmwareSourceDetails vmware = 10;
     */
    value: VmwareSourceDetails;
    case: "vmware";
  } | {
    /**
     * AWS type source details.
     *
     * @generated from field: google.cloud.vmmigration.v1.AwsSourceDetails aws = 12;
     */
    value: AwsSourceDetails;
    case: "aws";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The Source name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The create time timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update time timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * The labels of the source.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * User-provided description of the source.
   *
   * @generated from field: string description = 6;
   */
  description: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.Source.
 * Use `create(SourceSchema)` to create a new message.
 */
export const SourceSchema: GenMessage<Source> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 21);

/**
 * VmwareSourceDetails message describes a specific source details for the
 * vmware source type.
 *
 * @generated from message google.cloud.vmmigration.v1.VmwareSourceDetails
 */
export type VmwareSourceDetails = Message<"google.cloud.vmmigration.v1.VmwareSourceDetails"> & {
  /**
   * The credentials username.
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * Input only. The credentials password. This is write only and can not be
   * read in a GET operation.
   *
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * The ip address of the vcenter this Source represents.
   *
   * @generated from field: string vcenter_ip = 3;
   */
  vcenterIp: string;

  /**
   * The thumbprint representing the certificate for the vcenter.
   *
   * @generated from field: string thumbprint = 4;
   */
  thumbprint: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.VmwareSourceDetails.
 * Use `create(VmwareSourceDetailsSchema)` to create a new message.
 */
export const VmwareSourceDetailsSchema: GenMessage<VmwareSourceDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 22);

/**
 * AwsSourceDetails message describes a specific source details for the
 * AWS source type.
 *
 * @generated from message google.cloud.vmmigration.v1.AwsSourceDetails
 */
export type AwsSourceDetails = Message<"google.cloud.vmmigration.v1.AwsSourceDetails"> & {
  /**
   * @generated from oneof google.cloud.vmmigration.v1.AwsSourceDetails.credentials_type
   */
  credentialsType: {
    /**
     * AWS Credentials using access key id and secret.
     *
     * @generated from field: google.cloud.vmmigration.v1.AwsSourceDetails.AccessKeyCredentials access_key_creds = 11;
     */
    value: AwsSourceDetails_AccessKeyCredentials;
    case: "accessKeyCreds";
  } | { case: undefined; value?: undefined };

  /**
   * Immutable. The AWS region that the source VMs will be migrated from.
   *
   * @generated from field: string aws_region = 3;
   */
  awsRegion: string;

  /**
   * Output only. State of the source as determined by the health check.
   *
   * @generated from field: google.cloud.vmmigration.v1.AwsSourceDetails.State state = 4;
   */
  state: AwsSourceDetails_State;

  /**
   * Output only. Provides details on the state of the Source in case of an
   * error.
   *
   * @generated from field: google.rpc.Status error = 5;
   */
  error?: Status;

  /**
   * AWS resource tags to limit the scope of the source inventory.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.AwsSourceDetails.Tag inventory_tag_list = 10;
   */
  inventoryTagList: AwsSourceDetails_Tag[];

  /**
   * AWS security group names to limit the scope of the source
   * inventory.
   *
   * @generated from field: repeated string inventory_security_group_names = 7;
   */
  inventorySecurityGroupNames: string[];

  /**
   * User specified tags to add to every M2VM generated resource in AWS.
   * These tags will be set in addition to the default tags that are set as part
   * of the migration process. The tags must not begin with the reserved prefix
   * `m2vm`.
   *
   * @generated from field: map<string, string> migration_resources_user_tags = 8;
   */
  migrationResourcesUserTags: { [key: string]: string };

  /**
   * Output only. The source's public IP. All communication initiated by this
   * source will originate from this IP.
   *
   * @generated from field: string public_ip = 9;
   */
  publicIp: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.AwsSourceDetails.
 * Use `create(AwsSourceDetailsSchema)` to create a new message.
 */
export const AwsSourceDetailsSchema: GenMessage<AwsSourceDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 23);

/**
 * Message describing AWS Credentials using access key id and secret.
 *
 * @generated from message google.cloud.vmmigration.v1.AwsSourceDetails.AccessKeyCredentials
 */
export type AwsSourceDetails_AccessKeyCredentials = Message<"google.cloud.vmmigration.v1.AwsSourceDetails.AccessKeyCredentials"> & {
  /**
   * AWS access key ID.
   *
   * @generated from field: string access_key_id = 1;
   */
  accessKeyId: string;

  /**
   * Input only. AWS secret access key.
   *
   * @generated from field: string secret_access_key = 2;
   */
  secretAccessKey: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.AwsSourceDetails.AccessKeyCredentials.
 * Use `create(AwsSourceDetails_AccessKeyCredentialsSchema)` to create a new message.
 */
export const AwsSourceDetails_AccessKeyCredentialsSchema: GenMessage<AwsSourceDetails_AccessKeyCredentials> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 23, 0);

/**
 * Tag is an AWS tag representation.
 *
 * @generated from message google.cloud.vmmigration.v1.AwsSourceDetails.Tag
 */
export type AwsSourceDetails_Tag = Message<"google.cloud.vmmigration.v1.AwsSourceDetails.Tag"> & {
  /**
   * Key of tag.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Value of tag.
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.AwsSourceDetails.Tag.
 * Use `create(AwsSourceDetails_TagSchema)` to create a new message.
 */
export const AwsSourceDetails_TagSchema: GenMessage<AwsSourceDetails_Tag> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 23, 1);

/**
 * The possible values of the state.
 *
 * @generated from enum google.cloud.vmmigration.v1.AwsSourceDetails.State
 */
export enum AwsSourceDetails_State {
  /**
   * The state is unknown. This is used for API compatibility only and is not
   * used by the system.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The state was not sampled by the health checks yet.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The source is available but might not be usable yet due to invalid
   * credentials or another reason.
   * The error message will contain further details.
   *
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,

  /**
   * The source exists and its credentials were verified.
   *
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.AwsSourceDetails.State.
 */
export const AwsSourceDetails_StateSchema: GenEnum<AwsSourceDetails_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 23, 0);

/**
 * DatacenterConnector message describes a connector between the Source and
 * Google Cloud, which is installed on a vmware datacenter (an OVA vm installed
 * by the user) to connect the Datacenter to Google Cloud and support vm
 * migration data transfer.
 *
 * @generated from message google.cloud.vmmigration.v1.DatacenterConnector
 */
export type DatacenterConnector = Message<"google.cloud.vmmigration.v1.DatacenterConnector"> & {
  /**
   * Output only. The time the connector was created (as an API call, not when
   * it was actually installed).
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last time the connector was updated with an API call.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 2;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The connector's name.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Immutable. A unique key for this connector. This key is internal to the OVA
   * connector and is supplied with its creation during the registration process
   * and can not be modified.
   *
   * @generated from field: string registration_id = 12;
   */
  registrationId: string;

  /**
   * The service account to use in the connector when communicating with the
   * cloud.
   *
   * @generated from field: string service_account = 5;
   */
  serviceAccount: string;

  /**
   * The version running in the DatacenterConnector. This is supplied by the OVA
   * connector during the registration process and can not be modified.
   *
   * @generated from field: string version = 6;
   */
  version: string;

  /**
   * Output only. The communication channel between the datacenter connector and
   * Google Cloud.
   *
   * @generated from field: string bucket = 10;
   */
  bucket: string;

  /**
   * Output only. State of the DatacenterConnector, as determined by the health
   * checks.
   *
   * @generated from field: google.cloud.vmmigration.v1.DatacenterConnector.State state = 7;
   */
  state: DatacenterConnector_State;

  /**
   * Output only. The time the state was last set.
   *
   * @generated from field: google.protobuf.Timestamp state_time = 8;
   */
  stateTime?: Timestamp;

  /**
   * Output only. Provides details on the state of the Datacenter Connector in
   * case of an error.
   *
   * @generated from field: google.rpc.Status error = 11;
   */
  error?: Status;

  /**
   * Output only. Appliance OVA version.
   * This is the OVA which is manually installed by the user and contains the
   * infrastructure for the automatically updatable components on the appliance.
   *
   * @generated from field: string appliance_infrastructure_version = 13;
   */
  applianceInfrastructureVersion: string;

  /**
   * Output only. Appliance last installed update bundle version.
   * This is the version of the automatically updatable components on the
   * appliance.
   *
   * @generated from field: string appliance_software_version = 14;
   */
  applianceSoftwareVersion: string;

  /**
   * Output only. The available versions for updating this appliance.
   *
   * @generated from field: google.cloud.vmmigration.v1.AvailableUpdates available_versions = 15;
   */
  availableVersions?: AvailableUpdates;

  /**
   * Output only. The status of the current / last upgradeAppliance operation.
   *
   * @generated from field: google.cloud.vmmigration.v1.UpgradeStatus upgrade_status = 16;
   */
  upgradeStatus?: UpgradeStatus;
};

/**
 * Describes the message google.cloud.vmmigration.v1.DatacenterConnector.
 * Use `create(DatacenterConnectorSchema)` to create a new message.
 */
export const DatacenterConnectorSchema: GenMessage<DatacenterConnector> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 24);

/**
 * The possible values of the state.
 *
 * @generated from enum google.cloud.vmmigration.v1.DatacenterConnector.State
 */
export enum DatacenterConnector_State {
  /**
   * The state is unknown. This is used for API compatibility only and is not
   * used by the system.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The state was not sampled by the health checks yet.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The source was sampled by health checks and is not available.
   *
   * @generated from enum value: OFFLINE = 2;
   */
  OFFLINE = 2,

  /**
   * The source is available but might not be usable yet due to unvalidated
   * credentials or another reason. The credentials referred to are the ones
   * to the Source. The error message will contain further details.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * The source exists and its credentials were verified.
   *
   * @generated from enum value: ACTIVE = 4;
   */
  ACTIVE = 4,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.DatacenterConnector.State.
 */
export const DatacenterConnector_StateSchema: GenEnum<DatacenterConnector_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 24, 0);

/**
 * UpgradeStatus contains information about upgradeAppliance operation.
 *
 * @generated from message google.cloud.vmmigration.v1.UpgradeStatus
 */
export type UpgradeStatus = Message<"google.cloud.vmmigration.v1.UpgradeStatus"> & {
  /**
   * The version to upgrade to.
   *
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * The state of the upgradeAppliance operation.
   *
   * @generated from field: google.cloud.vmmigration.v1.UpgradeStatus.State state = 2;
   */
  state: UpgradeStatus_State;

  /**
   * Provides details on the state of the upgrade operation in case of an error.
   *
   * @generated from field: google.rpc.Status error = 3;
   */
  error?: Status;

  /**
   * The time the operation was started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;

  /**
   * The version from which we upgraded.
   *
   * @generated from field: string previous_version = 5;
   */
  previousVersion: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.UpgradeStatus.
 * Use `create(UpgradeStatusSchema)` to create a new message.
 */
export const UpgradeStatusSchema: GenMessage<UpgradeStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 25);

/**
 * The possible values of the state.
 *
 * @generated from enum google.cloud.vmmigration.v1.UpgradeStatus.State
 */
export enum UpgradeStatus_State {
  /**
   * The state was not sampled by the health checks yet.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The upgrade has started.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The upgrade failed.
   *
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,

  /**
   * The upgrade finished successfully.
   *
   * @generated from enum value: SUCCEEDED = 3;
   */
  SUCCEEDED = 3,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.UpgradeStatus.State.
 */
export const UpgradeStatus_StateSchema: GenEnum<UpgradeStatus_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 25, 0);

/**
 * Holds informatiom about the available versions for upgrade.
 *
 * @generated from message google.cloud.vmmigration.v1.AvailableUpdates
 */
export type AvailableUpdates = Message<"google.cloud.vmmigration.v1.AvailableUpdates"> & {
  /**
   * The newest deployable version of the appliance.
   * The current appliance can't be updated into this version, and the owner
   * must manually deploy this OVA to a new appliance.
   *
   * @generated from field: google.cloud.vmmigration.v1.ApplianceVersion new_deployable_appliance = 1;
   */
  newDeployableAppliance?: ApplianceVersion;

  /**
   * The latest version for in place update.
   * The current appliance can be updated to this version using the API or m4c
   * CLI.
   *
   * @generated from field: google.cloud.vmmigration.v1.ApplianceVersion in_place_update = 2;
   */
  inPlaceUpdate?: ApplianceVersion;
};

/**
 * Describes the message google.cloud.vmmigration.v1.AvailableUpdates.
 * Use `create(AvailableUpdatesSchema)` to create a new message.
 */
export const AvailableUpdatesSchema: GenMessage<AvailableUpdates> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 26);

/**
 * Describes an appliance version.
 *
 * @generated from message google.cloud.vmmigration.v1.ApplianceVersion
 */
export type ApplianceVersion = Message<"google.cloud.vmmigration.v1.ApplianceVersion"> & {
  /**
   * The appliance version.
   *
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * A link for downloading the version.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * Determine whether it's critical to upgrade the appliance to this version.
   *
   * @generated from field: bool critical = 3;
   */
  critical: boolean;

  /**
   * Link to a page that contains the version release notes.
   *
   * @generated from field: string release_notes_uri = 4;
   */
  releaseNotesUri: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ApplianceVersion.
 * Use `create(ApplianceVersionSchema)` to create a new message.
 */
export const ApplianceVersionSchema: GenMessage<ApplianceVersion> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 27);

/**
 * Request message for 'ListSources' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListSourcesRequest
 */
export type ListSourcesRequest = Message<"google.cloud.vmmigration.v1.ListSourcesRequest"> & {
  /**
   * Required. The parent, which owns this collection of sources.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of sources to return. The service may return
   * fewer than this value. If unspecified, at most 500 sources will be
   * returned. The maximum value is 1000; values above 1000 will be coerced to
   * 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Required. A page token, received from a previous `ListSources` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListSources` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter request.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. the order by fields for the result.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListSourcesRequest.
 * Use `create(ListSourcesRequestSchema)` to create a new message.
 */
export const ListSourcesRequestSchema: GenMessage<ListSourcesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 28);

/**
 * Response message for 'ListSources' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListSourcesResponse
 */
export type ListSourcesResponse = Message<"google.cloud.vmmigration.v1.ListSourcesResponse"> & {
  /**
   * Output only. The list of sources response.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.Source sources = 1;
   */
  sources: Source[];

  /**
   * Output only. A token, which can be sent as `page_token` to retrieve the
   * next page. If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListSourcesResponse.
 * Use `create(ListSourcesResponseSchema)` to create a new message.
 */
export const ListSourcesResponseSchema: GenMessage<ListSourcesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 29);

/**
 * Request message for 'GetSource' request.
 *
 * @generated from message google.cloud.vmmigration.v1.GetSourceRequest
 */
export type GetSourceRequest = Message<"google.cloud.vmmigration.v1.GetSourceRequest"> & {
  /**
   * Required. The Source name.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.GetSourceRequest.
 * Use `create(GetSourceRequestSchema)` to create a new message.
 */
export const GetSourceRequestSchema: GenMessage<GetSourceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 30);

/**
 * Request message for 'CreateSource' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CreateSourceRequest
 */
export type CreateSourceRequest = Message<"google.cloud.vmmigration.v1.CreateSourceRequest"> & {
  /**
   * Required. The Source's parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The source identifier.
   *
   * @generated from field: string source_id = 2;
   */
  sourceId: string;

  /**
   * Required. The create request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.Source source = 3;
   */
  source?: Source;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CreateSourceRequest.
 * Use `create(CreateSourceRequestSchema)` to create a new message.
 */
export const CreateSourceRequestSchema: GenMessage<CreateSourceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 31);

/**
 * Update message for 'UpdateSources' request.
 *
 * @generated from message google.cloud.vmmigration.v1.UpdateSourceRequest
 */
export type UpdateSourceRequest = Message<"google.cloud.vmmigration.v1.UpdateSourceRequest"> & {
  /**
   * Field mask is used to specify the fields to be overwritten in the
   * Source resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The update request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.Source source = 2;
   */
  source?: Source;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.UpdateSourceRequest.
 * Use `create(UpdateSourceRequestSchema)` to create a new message.
 */
export const UpdateSourceRequestSchema: GenMessage<UpdateSourceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 32);

/**
 * Request message for 'DeleteSource' request.
 *
 * @generated from message google.cloud.vmmigration.v1.DeleteSourceRequest
 */
export type DeleteSourceRequest = Message<"google.cloud.vmmigration.v1.DeleteSourceRequest"> & {
  /**
   * Required. The Source name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.DeleteSourceRequest.
 * Use `create(DeleteSourceRequestSchema)` to create a new message.
 */
export const DeleteSourceRequestSchema: GenMessage<DeleteSourceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 33);

/**
 * Request message for
 * [fetchInventory][google.cloud.vmmigration.v1.VmMigration.FetchInventory].
 *
 * @generated from message google.cloud.vmmigration.v1.FetchInventoryRequest
 */
export type FetchInventoryRequest = Message<"google.cloud.vmmigration.v1.FetchInventoryRequest"> & {
  /**
   * Required. The name of the Source.
   *
   * @generated from field: string source = 1;
   */
  source: string;

  /**
   * If this flag is set to true, the source will be queried instead of using
   * cached results. Using this flag will make the call slower.
   *
   * @generated from field: bool force_refresh = 2;
   */
  forceRefresh: boolean;
};

/**
 * Describes the message google.cloud.vmmigration.v1.FetchInventoryRequest.
 * Use `create(FetchInventoryRequestSchema)` to create a new message.
 */
export const FetchInventoryRequestSchema: GenMessage<FetchInventoryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 34);

/**
 * VmwareVmDetails describes a VM in vCenter.
 *
 * @generated from message google.cloud.vmmigration.v1.VmwareVmDetails
 */
export type VmwareVmDetails = Message<"google.cloud.vmmigration.v1.VmwareVmDetails"> & {
  /**
   * The VM's id in the source (note that this is not the MigratingVm's id).
   * This is the moref id of the VM.
   *
   * @generated from field: string vm_id = 1;
   */
  vmId: string;

  /**
   * The id of the vCenter's datacenter this VM is contained in.
   *
   * @generated from field: string datacenter_id = 2;
   */
  datacenterId: string;

  /**
   * The descriptive name of the vCenter's datacenter this VM is contained in.
   *
   * @generated from field: string datacenter_description = 3;
   */
  datacenterDescription: string;

  /**
   * The unique identifier of the VM in vCenter.
   *
   * @generated from field: string uuid = 4;
   */
  uuid: string;

  /**
   * The display name of the VM. Note that this is not necessarily unique.
   *
   * @generated from field: string display_name = 5;
   */
  displayName: string;

  /**
   * The power state of the VM at the moment list was taken.
   *
   * @generated from field: google.cloud.vmmigration.v1.VmwareVmDetails.PowerState power_state = 6;
   */
  powerState: VmwareVmDetails_PowerState;

  /**
   * The number of cpus in the VM.
   *
   * @generated from field: int32 cpu_count = 7;
   */
  cpuCount: number;

  /**
   * The size of the memory of the VM in MB.
   *
   * @generated from field: int32 memory_mb = 8;
   */
  memoryMb: number;

  /**
   * The number of disks the VM has.
   *
   * @generated from field: int32 disk_count = 9;
   */
  diskCount: number;

  /**
   * The total size of the storage allocated to the VM in MB.
   *
   * @generated from field: int64 committed_storage_mb = 12;
   */
  committedStorageMb: bigint;

  /**
   * The VM's OS. See for example
   * https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html
   * for types of strings this might hold.
   *
   * @generated from field: string guest_description = 11;
   */
  guestDescription: string;

  /**
   * Output only. The VM Boot Option.
   *
   * @generated from field: google.cloud.vmmigration.v1.VmwareVmDetails.BootOption boot_option = 13;
   */
  bootOption: VmwareVmDetails_BootOption;
};

/**
 * Describes the message google.cloud.vmmigration.v1.VmwareVmDetails.
 * Use `create(VmwareVmDetailsSchema)` to create a new message.
 */
export const VmwareVmDetailsSchema: GenMessage<VmwareVmDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 35);

/**
 * Possible values for the power state of the VM.
 *
 * @generated from enum google.cloud.vmmigration.v1.VmwareVmDetails.PowerState
 */
export enum VmwareVmDetails_PowerState {
  /**
   * Power state is not specified.
   *
   * @generated from enum value: POWER_STATE_UNSPECIFIED = 0;
   */
  POWER_STATE_UNSPECIFIED = 0,

  /**
   * The VM is turned ON.
   *
   * @generated from enum value: ON = 1;
   */
  ON = 1,

  /**
   * The VM is turned OFF.
   *
   * @generated from enum value: OFF = 2;
   */
  OFF = 2,

  /**
   * The VM is suspended. This is similar to hibernation or sleep mode.
   *
   * @generated from enum value: SUSPENDED = 3;
   */
  SUSPENDED = 3,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.VmwareVmDetails.PowerState.
 */
export const VmwareVmDetails_PowerStateSchema: GenEnum<VmwareVmDetails_PowerState> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 35, 0);

/**
 * Possible values for vm boot option.
 *
 * @generated from enum google.cloud.vmmigration.v1.VmwareVmDetails.BootOption
 */
export enum VmwareVmDetails_BootOption {
  /**
   * The boot option is unknown.
   *
   * @generated from enum value: BOOT_OPTION_UNSPECIFIED = 0;
   */
  BOOT_OPTION_UNSPECIFIED = 0,

  /**
   * The boot option is EFI.
   *
   * @generated from enum value: EFI = 1;
   */
  EFI = 1,

  /**
   * The boot option is BIOS.
   *
   * @generated from enum value: BIOS = 2;
   */
  BIOS = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.VmwareVmDetails.BootOption.
 */
export const VmwareVmDetails_BootOptionSchema: GenEnum<VmwareVmDetails_BootOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 35, 1);

/**
 * AwsVmDetails describes a VM in AWS.
 *
 * @generated from message google.cloud.vmmigration.v1.AwsVmDetails
 */
export type AwsVmDetails = Message<"google.cloud.vmmigration.v1.AwsVmDetails"> & {
  /**
   * The VM ID in AWS.
   *
   * @generated from field: string vm_id = 1;
   */
  vmId: string;

  /**
   * The display name of the VM. Note that this value is not necessarily unique.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * The id of the AWS's source this VM is connected to.
   *
   * @generated from field: string source_id = 3;
   */
  sourceId: string;

  /**
   * The descriptive name of the AWS's source this VM is connected to.
   *
   * @generated from field: string source_description = 4;
   */
  sourceDescription: string;

  /**
   * Output only. The power state of the VM at the moment list was taken.
   *
   * @generated from field: google.cloud.vmmigration.v1.AwsVmDetails.PowerState power_state = 5;
   */
  powerState: AwsVmDetails_PowerState;

  /**
   * The number of cpus the VM has.
   *
   * @generated from field: int32 cpu_count = 6;
   */
  cpuCount: number;

  /**
   * The memory size of the VM in MB.
   *
   * @generated from field: int32 memory_mb = 7;
   */
  memoryMb: number;

  /**
   * The number of disks the VM has.
   *
   * @generated from field: int32 disk_count = 8;
   */
  diskCount: number;

  /**
   * The total size of the storage allocated to the VM in MB.
   *
   * @generated from field: int64 committed_storage_mb = 9;
   */
  committedStorageMb: bigint;

  /**
   * The VM's OS.
   *
   * @generated from field: string os_description = 10;
   */
  osDescription: string;

  /**
   * The VM Boot Option.
   *
   * @generated from field: google.cloud.vmmigration.v1.AwsVmDetails.BootOption boot_option = 11;
   */
  bootOption: AwsVmDetails_BootOption;

  /**
   * The instance type of the VM.
   *
   * @generated from field: string instance_type = 12;
   */
  instanceType: string;

  /**
   * The VPC ID the VM belongs to.
   *
   * @generated from field: string vpc_id = 13;
   */
  vpcId: string;

  /**
   * The security groups the VM belongs to.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.AwsSecurityGroup security_groups = 14;
   */
  securityGroups: AwsSecurityGroup[];

  /**
   * The tags of the VM.
   *
   * @generated from field: map<string, string> tags = 15;
   */
  tags: { [key: string]: string };

  /**
   * The AWS zone of the VM.
   *
   * @generated from field: string zone = 16;
   */
  zone: string;

  /**
   * The virtualization type.
   *
   * @generated from field: google.cloud.vmmigration.v1.AwsVmDetails.VmVirtualizationType virtualization_type = 17;
   */
  virtualizationType: AwsVmDetails_VmVirtualizationType;

  /**
   * The CPU architecture.
   *
   * @generated from field: google.cloud.vmmigration.v1.AwsVmDetails.VmArchitecture architecture = 18;
   */
  architecture: AwsVmDetails_VmArchitecture;
};

/**
 * Describes the message google.cloud.vmmigration.v1.AwsVmDetails.
 * Use `create(AwsVmDetailsSchema)` to create a new message.
 */
export const AwsVmDetailsSchema: GenMessage<AwsVmDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 36);

/**
 * Possible values for the power state of the VM.
 *
 * @generated from enum google.cloud.vmmigration.v1.AwsVmDetails.PowerState
 */
export enum AwsVmDetails_PowerState {
  /**
   * Power state is not specified.
   *
   * @generated from enum value: POWER_STATE_UNSPECIFIED = 0;
   */
  POWER_STATE_UNSPECIFIED = 0,

  /**
   * The VM is turned on.
   *
   * @generated from enum value: ON = 1;
   */
  ON = 1,

  /**
   * The VM is turned off.
   *
   * @generated from enum value: OFF = 2;
   */
  OFF = 2,

  /**
   * The VM is suspended. This is similar to hibernation or sleep
   * mode.
   *
   * @generated from enum value: SUSPENDED = 3;
   */
  SUSPENDED = 3,

  /**
   * The VM is starting.
   *
   * @generated from enum value: PENDING = 4;
   */
  PENDING = 4,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.AwsVmDetails.PowerState.
 */
export const AwsVmDetails_PowerStateSchema: GenEnum<AwsVmDetails_PowerState> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 36, 0);

/**
 * The possible values for the vm boot option.
 *
 * @generated from enum google.cloud.vmmigration.v1.AwsVmDetails.BootOption
 */
export enum AwsVmDetails_BootOption {
  /**
   * The boot option is unknown.
   *
   * @generated from enum value: BOOT_OPTION_UNSPECIFIED = 0;
   */
  BOOT_OPTION_UNSPECIFIED = 0,

  /**
   * The boot option is UEFI.
   *
   * @generated from enum value: EFI = 1;
   */
  EFI = 1,

  /**
   * The boot option is LEGACY-BIOS.
   *
   * @generated from enum value: BIOS = 2;
   */
  BIOS = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.AwsVmDetails.BootOption.
 */
export const AwsVmDetails_BootOptionSchema: GenEnum<AwsVmDetails_BootOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 36, 1);

/**
 * Possible values for the virtualization types of the VM.
 *
 * @generated from enum google.cloud.vmmigration.v1.AwsVmDetails.VmVirtualizationType
 */
export enum AwsVmDetails_VmVirtualizationType {
  /**
   * The virtualization type is unknown.
   *
   * @generated from enum value: VM_VIRTUALIZATION_TYPE_UNSPECIFIED = 0;
   */
  VM_VIRTUALIZATION_TYPE_UNSPECIFIED = 0,

  /**
   * The virtualziation type is HVM.
   *
   * @generated from enum value: HVM = 1;
   */
  HVM = 1,

  /**
   * The virtualziation type is PARAVIRTUAL.
   *
   * @generated from enum value: PARAVIRTUAL = 2;
   */
  PARAVIRTUAL = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.AwsVmDetails.VmVirtualizationType.
 */
export const AwsVmDetails_VmVirtualizationTypeSchema: GenEnum<AwsVmDetails_VmVirtualizationType> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 36, 2);

/**
 * Possible values for the architectures of the VM.
 *
 * @generated from enum google.cloud.vmmigration.v1.AwsVmDetails.VmArchitecture
 */
export enum AwsVmDetails_VmArchitecture {
  /**
   * The architecture is unknown.
   *
   * @generated from enum value: VM_ARCHITECTURE_UNSPECIFIED = 0;
   */
  VM_ARCHITECTURE_UNSPECIFIED = 0,

  /**
   * The architecture is I386.
   *
   * @generated from enum value: I386 = 1;
   */
  I386 = 1,

  /**
   * The architecture is X86_64.
   *
   * @generated from enum value: X86_64 = 2;
   */
  X86_64 = 2,

  /**
   * The architecture is ARM64.
   *
   * @generated from enum value: ARM64 = 3;
   */
  ARM64 = 3,

  /**
   * The architecture is X86_64_MAC.
   *
   * @generated from enum value: X86_64_MAC = 4;
   */
  X86_64_MAC = 4,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.AwsVmDetails.VmArchitecture.
 */
export const AwsVmDetails_VmArchitectureSchema: GenEnum<AwsVmDetails_VmArchitecture> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 36, 3);

/**
 * AwsSecurityGroup describes a security group of an AWS VM.
 *
 * @generated from message google.cloud.vmmigration.v1.AwsSecurityGroup
 */
export type AwsSecurityGroup = Message<"google.cloud.vmmigration.v1.AwsSecurityGroup"> & {
  /**
   * The AWS security group id.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The AWS security group name.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.AwsSecurityGroup.
 * Use `create(AwsSecurityGroupSchema)` to create a new message.
 */
export const AwsSecurityGroupSchema: GenMessage<AwsSecurityGroup> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 37);

/**
 * VmwareVmsDetails describes VMs in vCenter.
 *
 * @generated from message google.cloud.vmmigration.v1.VmwareVmsDetails
 */
export type VmwareVmsDetails = Message<"google.cloud.vmmigration.v1.VmwareVmsDetails"> & {
  /**
   * The details of the vmware VMs.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.VmwareVmDetails details = 1;
   */
  details: VmwareVmDetails[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.VmwareVmsDetails.
 * Use `create(VmwareVmsDetailsSchema)` to create a new message.
 */
export const VmwareVmsDetailsSchema: GenMessage<VmwareVmsDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 38);

/**
 * AWSVmsDetails describes VMs in AWS.
 *
 * @generated from message google.cloud.vmmigration.v1.AwsVmsDetails
 */
export type AwsVmsDetails = Message<"google.cloud.vmmigration.v1.AwsVmsDetails"> & {
  /**
   * The details of the AWS VMs.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.AwsVmDetails details = 1;
   */
  details: AwsVmDetails[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.AwsVmsDetails.
 * Use `create(AwsVmsDetailsSchema)` to create a new message.
 */
export const AwsVmsDetailsSchema: GenMessage<AwsVmsDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 39);

/**
 * Response message for
 * [fetchInventory][google.cloud.vmmigration.v1.VmMigration.FetchInventory].
 *
 * @generated from message google.cloud.vmmigration.v1.FetchInventoryResponse
 */
export type FetchInventoryResponse = Message<"google.cloud.vmmigration.v1.FetchInventoryResponse"> & {
  /**
   * @generated from oneof google.cloud.vmmigration.v1.FetchInventoryResponse.SourceVms
   */
  SourceVms: {
    /**
     * The description of the VMs in a Source of type Vmware.
     *
     * @generated from field: google.cloud.vmmigration.v1.VmwareVmsDetails vmware_vms = 1;
     */
    value: VmwareVmsDetails;
    case: "vmwareVms";
  } | {
    /**
     * The description of the VMs in a Source of type AWS.
     *
     * @generated from field: google.cloud.vmmigration.v1.AwsVmsDetails aws_vms = 3;
     */
    value: AwsVmsDetails;
    case: "awsVms";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The timestamp when the source was last queried (if the result
   * is from the cache).
   *
   * @generated from field: google.protobuf.Timestamp update_time = 2;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.vmmigration.v1.FetchInventoryResponse.
 * Use `create(FetchInventoryResponseSchema)` to create a new message.
 */
export const FetchInventoryResponseSchema: GenMessage<FetchInventoryResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 40);

/**
 * Utilization report details the utilization (CPU, memory, etc.) of selected
 * source VMs.
 *
 * @generated from message google.cloud.vmmigration.v1.UtilizationReport
 */
export type UtilizationReport = Message<"google.cloud.vmmigration.v1.UtilizationReport"> & {
  /**
   * Output only. The report unique name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The report display name, as assigned by the user.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Output only. Current state of the report.
   *
   * @generated from field: google.cloud.vmmigration.v1.UtilizationReport.State state = 3;
   */
  state: UtilizationReport_State;

  /**
   * Output only. The time the state was last set.
   *
   * @generated from field: google.protobuf.Timestamp state_time = 4;
   */
  stateTime?: Timestamp;

  /**
   * Output only. Provides details on the state of the report in case of an
   * error.
   *
   * @generated from field: google.rpc.Status error = 5;
   */
  error?: Status;

  /**
   * Output only. The time the report was created (this refers to the time of
   * the request, not the time the report creation completed).
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Time frame of the report.
   *
   * @generated from field: google.cloud.vmmigration.v1.UtilizationReport.TimeFrame time_frame = 7;
   */
  timeFrame: UtilizationReport_TimeFrame;

  /**
   * Output only. The point in time when the time frame ends. Notice that the
   * time frame is counted backwards. For instance if the "frame_end_time" value
   * is 2021/01/20 and the time frame is WEEK then the report covers the week
   * between 2021/01/20 and 2021/01/14.
   *
   * @generated from field: google.protobuf.Timestamp frame_end_time = 8;
   */
  frameEndTime?: Timestamp;

  /**
   * Output only. Total number of VMs included in the report.
   *
   * @generated from field: int32 vm_count = 9;
   */
  vmCount: number;

  /**
   * List of utilization information per VM.
   * When sent as part of the request, the "vm_id" field is used in order to
   * specify which VMs to include in the report. In that case all other fields
   * are ignored.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.VmUtilizationInfo vms = 10;
   */
  vms: VmUtilizationInfo[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.UtilizationReport.
 * Use `create(UtilizationReportSchema)` to create a new message.
 */
export const UtilizationReportSchema: GenMessage<UtilizationReport> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 41);

/**
 * Utilization report state.
 *
 * @generated from enum google.cloud.vmmigration.v1.UtilizationReport.State
 */
export enum UtilizationReport_State {
  /**
   * The state is unknown. This value is not in use.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The report is in the making.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * Report creation completed successfully.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * Report creation failed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.UtilizationReport.State.
 */
export const UtilizationReport_StateSchema: GenEnum<UtilizationReport_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 41, 0);

/**
 * Report time frame options.
 *
 * @generated from enum google.cloud.vmmigration.v1.UtilizationReport.TimeFrame
 */
export enum UtilizationReport_TimeFrame {
  /**
   * The time frame was not specified and will default to WEEK.
   *
   * @generated from enum value: TIME_FRAME_UNSPECIFIED = 0;
   */
  TIME_FRAME_UNSPECIFIED = 0,

  /**
   * One week.
   *
   * @generated from enum value: WEEK = 1;
   */
  WEEK = 1,

  /**
   * One month.
   *
   * @generated from enum value: MONTH = 2;
   */
  MONTH = 2,

  /**
   * One year.
   *
   * @generated from enum value: YEAR = 3;
   */
  YEAR = 3,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.UtilizationReport.TimeFrame.
 */
export const UtilizationReport_TimeFrameSchema: GenEnum<UtilizationReport_TimeFrame> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 41, 1);

/**
 * Utilization information of a single VM.
 *
 * @generated from message google.cloud.vmmigration.v1.VmUtilizationInfo
 */
export type VmUtilizationInfo = Message<"google.cloud.vmmigration.v1.VmUtilizationInfo"> & {
  /**
   * @generated from oneof google.cloud.vmmigration.v1.VmUtilizationInfo.VmDetails
   */
  VmDetails: {
    /**
     * The description of the VM in a Source of type Vmware.
     *
     * @generated from field: google.cloud.vmmigration.v1.VmwareVmDetails vmware_vm_details = 1;
     */
    value: VmwareVmDetails;
    case: "vmwareVmDetails";
  } | { case: undefined; value?: undefined };

  /**
   * The VM's ID in the source.
   *
   * @generated from field: string vm_id = 3;
   */
  vmId: string;

  /**
   * Utilization metrics for this VM.
   *
   * @generated from field: google.cloud.vmmigration.v1.VmUtilizationMetrics utilization = 2;
   */
  utilization?: VmUtilizationMetrics;
};

/**
 * Describes the message google.cloud.vmmigration.v1.VmUtilizationInfo.
 * Use `create(VmUtilizationInfoSchema)` to create a new message.
 */
export const VmUtilizationInfoSchema: GenMessage<VmUtilizationInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 42);

/**
 * Utilization metrics values for a single VM.
 *
 * @generated from message google.cloud.vmmigration.v1.VmUtilizationMetrics
 */
export type VmUtilizationMetrics = Message<"google.cloud.vmmigration.v1.VmUtilizationMetrics"> & {
  /**
   * Max CPU usage, percent.
   *
   * @generated from field: int32 cpu_max_percent = 9;
   */
  cpuMaxPercent: number;

  /**
   * Average CPU usage, percent.
   *
   * @generated from field: int32 cpu_average_percent = 10;
   */
  cpuAveragePercent: number;

  /**
   * Max memory usage, percent.
   *
   * @generated from field: int32 memory_max_percent = 11;
   */
  memoryMaxPercent: number;

  /**
   * Average memory usage, percent.
   *
   * @generated from field: int32 memory_average_percent = 12;
   */
  memoryAveragePercent: number;

  /**
   * Max disk IO rate, in kilobytes per second.
   *
   * @generated from field: int64 disk_io_rate_max_kbps = 13;
   */
  diskIoRateMaxKbps: bigint;

  /**
   * Average disk IO rate, in kilobytes per second.
   *
   * @generated from field: int64 disk_io_rate_average_kbps = 14;
   */
  diskIoRateAverageKbps: bigint;

  /**
   * Max network throughput (combined transmit-rates and receive-rates), in
   * kilobytes per second.
   *
   * @generated from field: int64 network_throughput_max_kbps = 15;
   */
  networkThroughputMaxKbps: bigint;

  /**
   * Average network throughput (combined transmit-rates and receive-rates), in
   * kilobytes per second.
   *
   * @generated from field: int64 network_throughput_average_kbps = 16;
   */
  networkThroughputAverageKbps: bigint;
};

/**
 * Describes the message google.cloud.vmmigration.v1.VmUtilizationMetrics.
 * Use `create(VmUtilizationMetricsSchema)` to create a new message.
 */
export const VmUtilizationMetricsSchema: GenMessage<VmUtilizationMetrics> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 43);

/**
 * Request message for 'ListUtilizationReports' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListUtilizationReportsRequest
 */
export type ListUtilizationReportsRequest = Message<"google.cloud.vmmigration.v1.ListUtilizationReportsRequest"> & {
  /**
   * Required. The Utilization Reports parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The level of details of each report.
   * Defaults to BASIC.
   *
   * @generated from field: google.cloud.vmmigration.v1.UtilizationReportView view = 2;
   */
  view: UtilizationReportView;

  /**
   * Optional. The maximum number of reports to return. The service may return
   * fewer than this value. If unspecified, at most 500 reports will be
   * returned. The maximum value is 1000; values above 1000 will be coerced to
   * 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Required. A page token, received from a previous `ListUtilizationReports`
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListUtilizationReports`
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Optional. The filter request.
   *
   * @generated from field: string filter = 5;
   */
  filter: string;

  /**
   * Optional. the order by fields for the result.
   *
   * @generated from field: string order_by = 6;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListUtilizationReportsRequest.
 * Use `create(ListUtilizationReportsRequestSchema)` to create a new message.
 */
export const ListUtilizationReportsRequestSchema: GenMessage<ListUtilizationReportsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 44);

/**
 * Response message for 'ListUtilizationReports' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListUtilizationReportsResponse
 */
export type ListUtilizationReportsResponse = Message<"google.cloud.vmmigration.v1.ListUtilizationReportsResponse"> & {
  /**
   * Output only. The list of reports.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.UtilizationReport utilization_reports = 1;
   */
  utilizationReports: UtilizationReport[];

  /**
   * Output only. A token, which can be sent as `page_token` to retrieve the
   * next page. If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListUtilizationReportsResponse.
 * Use `create(ListUtilizationReportsResponseSchema)` to create a new message.
 */
export const ListUtilizationReportsResponseSchema: GenMessage<ListUtilizationReportsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 45);

/**
 * Request message for 'GetUtilizationReport' request.
 *
 * @generated from message google.cloud.vmmigration.v1.GetUtilizationReportRequest
 */
export type GetUtilizationReportRequest = Message<"google.cloud.vmmigration.v1.GetUtilizationReportRequest"> & {
  /**
   * Required. The Utilization Report name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The level of details of the report.
   * Defaults to FULL
   *
   * @generated from field: google.cloud.vmmigration.v1.UtilizationReportView view = 2;
   */
  view: UtilizationReportView;
};

/**
 * Describes the message google.cloud.vmmigration.v1.GetUtilizationReportRequest.
 * Use `create(GetUtilizationReportRequestSchema)` to create a new message.
 */
export const GetUtilizationReportRequestSchema: GenMessage<GetUtilizationReportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 46);

/**
 * Request message for 'CreateUtilizationReport' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CreateUtilizationReportRequest
 */
export type CreateUtilizationReportRequest = Message<"google.cloud.vmmigration.v1.CreateUtilizationReportRequest"> & {
  /**
   * Required. The Utilization Report's parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The report to create.
   *
   * @generated from field: google.cloud.vmmigration.v1.UtilizationReport utilization_report = 2;
   */
  utilizationReport?: UtilizationReport;

  /**
   * Required. The ID to use for the report, which will become the final
   * component of the reports's resource name.
   *
   * This value maximum length is 63 characters, and valid characters
   * are /[a-z][0-9]-/. It must start with an english letter and must not
   * end with a hyphen.
   *
   * @generated from field: string utilization_report_id = 3;
   */
  utilizationReportId: string;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CreateUtilizationReportRequest.
 * Use `create(CreateUtilizationReportRequestSchema)` to create a new message.
 */
export const CreateUtilizationReportRequestSchema: GenMessage<CreateUtilizationReportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 47);

/**
 * Request message for 'DeleteUtilizationReport' request.
 *
 * @generated from message google.cloud.vmmigration.v1.DeleteUtilizationReportRequest
 */
export type DeleteUtilizationReportRequest = Message<"google.cloud.vmmigration.v1.DeleteUtilizationReportRequest"> & {
  /**
   * Required. The Utilization Report name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.DeleteUtilizationReportRequest.
 * Use `create(DeleteUtilizationReportRequestSchema)` to create a new message.
 */
export const DeleteUtilizationReportRequestSchema: GenMessage<DeleteUtilizationReportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 48);

/**
 * Response message for 'ListDatacenterConnectors' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListDatacenterConnectorsResponse
 */
export type ListDatacenterConnectorsResponse = Message<"google.cloud.vmmigration.v1.ListDatacenterConnectorsResponse"> & {
  /**
   * Output only. The list of sources response.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.DatacenterConnector datacenter_connectors = 1;
   */
  datacenterConnectors: DatacenterConnector[];

  /**
   * Output only. A token, which can be sent as `page_token` to retrieve the
   * next page. If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListDatacenterConnectorsResponse.
 * Use `create(ListDatacenterConnectorsResponseSchema)` to create a new message.
 */
export const ListDatacenterConnectorsResponseSchema: GenMessage<ListDatacenterConnectorsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 49);

/**
 * Request message for 'GetDatacenterConnector' request.
 *
 * @generated from message google.cloud.vmmigration.v1.GetDatacenterConnectorRequest
 */
export type GetDatacenterConnectorRequest = Message<"google.cloud.vmmigration.v1.GetDatacenterConnectorRequest"> & {
  /**
   * Required. The name of the DatacenterConnector.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.GetDatacenterConnectorRequest.
 * Use `create(GetDatacenterConnectorRequestSchema)` to create a new message.
 */
export const GetDatacenterConnectorRequestSchema: GenMessage<GetDatacenterConnectorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 50);

/**
 * Request message for 'CreateDatacenterConnector' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CreateDatacenterConnectorRequest
 */
export type CreateDatacenterConnectorRequest = Message<"google.cloud.vmmigration.v1.CreateDatacenterConnectorRequest"> & {
  /**
   * Required. The DatacenterConnector's parent.
   * Required. The Source in where the new DatacenterConnector will be created.
   * For example:
   * `projects/my-project/locations/us-central1/sources/my-source`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The datacenterConnector identifier.
   *
   * @generated from field: string datacenter_connector_id = 2;
   */
  datacenterConnectorId: string;

  /**
   * Required. The create request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.DatacenterConnector datacenter_connector = 3;
   */
  datacenterConnector?: DatacenterConnector;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CreateDatacenterConnectorRequest.
 * Use `create(CreateDatacenterConnectorRequestSchema)` to create a new message.
 */
export const CreateDatacenterConnectorRequestSchema: GenMessage<CreateDatacenterConnectorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 51);

/**
 * Request message for 'DeleteDatacenterConnector' request.
 *
 * @generated from message google.cloud.vmmigration.v1.DeleteDatacenterConnectorRequest
 */
export type DeleteDatacenterConnectorRequest = Message<"google.cloud.vmmigration.v1.DeleteDatacenterConnectorRequest"> & {
  /**
   * Required. The DatacenterConnector name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.DeleteDatacenterConnectorRequest.
 * Use `create(DeleteDatacenterConnectorRequestSchema)` to create a new message.
 */
export const DeleteDatacenterConnectorRequestSchema: GenMessage<DeleteDatacenterConnectorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 52);

/**
 * Request message for 'UpgradeAppliance' request.
 *
 * @generated from message google.cloud.vmmigration.v1.UpgradeApplianceRequest
 */
export type UpgradeApplianceRequest = Message<"google.cloud.vmmigration.v1.UpgradeApplianceRequest"> & {
  /**
   * Required. The DatacenterConnector name.
   *
   * @generated from field: string datacenter_connector = 1;
   */
  datacenterConnector: string;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.UpgradeApplianceRequest.
 * Use `create(UpgradeApplianceRequestSchema)` to create a new message.
 */
export const UpgradeApplianceRequestSchema: GenMessage<UpgradeApplianceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 53);

/**
 * Response message for 'UpgradeAppliance' request.
 *
 * @generated from message google.cloud.vmmigration.v1.UpgradeApplianceResponse
 */
export type UpgradeApplianceResponse = Message<"google.cloud.vmmigration.v1.UpgradeApplianceResponse"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.UpgradeApplianceResponse.
 * Use `create(UpgradeApplianceResponseSchema)` to create a new message.
 */
export const UpgradeApplianceResponseSchema: GenMessage<UpgradeApplianceResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 54);

/**
 * Request message for 'ListDatacenterConnectors' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListDatacenterConnectorsRequest
 */
export type ListDatacenterConnectorsRequest = Message<"google.cloud.vmmigration.v1.ListDatacenterConnectorsRequest"> & {
  /**
   * Required. The parent, which owns this collection of connectors.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of connectors to return. The service may
   * return fewer than this value. If unspecified, at most 500 sources will be
   * returned. The maximum value is 1000; values above 1000 will be coerced to
   * 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Required. A page token, received from a previous `ListDatacenterConnectors`
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListDatacenterConnectors` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter request.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. the order by fields for the result.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListDatacenterConnectorsRequest.
 * Use `create(ListDatacenterConnectorsRequestSchema)` to create a new message.
 */
export const ListDatacenterConnectorsRequestSchema: GenMessage<ListDatacenterConnectorsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 55);

/**
 * ComputeEngineTargetDefaults is a collection of details for creating a VM in a
 * target Compute Engine project.
 *
 * @generated from message google.cloud.vmmigration.v1.ComputeEngineTargetDefaults
 */
export type ComputeEngineTargetDefaults = Message<"google.cloud.vmmigration.v1.ComputeEngineTargetDefaults"> & {
  /**
   * The name of the VM to create.
   *
   * @generated from field: string vm_name = 1;
   */
  vmName: string;

  /**
   * The full path of the resource of type TargetProject which represents the
   * Compute Engine project in which to create this VM.
   *
   * @generated from field: string target_project = 2;
   */
  targetProject: string;

  /**
   * The zone in which to create the VM.
   *
   * @generated from field: string zone = 3;
   */
  zone: string;

  /**
   * The machine type series to create the VM with.
   *
   * @generated from field: string machine_type_series = 4;
   */
  machineTypeSeries: string;

  /**
   * The machine type to create the VM with.
   *
   * @generated from field: string machine_type = 5;
   */
  machineType: string;

  /**
   * A map of network tags to associate with the VM.
   *
   * @generated from field: repeated string network_tags = 6;
   */
  networkTags: string[];

  /**
   * List of NICs connected to this VM.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.NetworkInterface network_interfaces = 7;
   */
  networkInterfaces: NetworkInterface[];

  /**
   * The service account to associate the VM with.
   *
   * @generated from field: string service_account = 8;
   */
  serviceAccount: string;

  /**
   * The disk type to use in the VM.
   *
   * @generated from field: google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 9;
   */
  diskType: ComputeEngineDiskType;

  /**
   * A map of labels to associate with the VM.
   *
   * @generated from field: map<string, string> labels = 10;
   */
  labels: { [key: string]: string };

  /**
   * The license type to use in OS adaptation.
   *
   * @generated from field: google.cloud.vmmigration.v1.ComputeEngineLicenseType license_type = 11;
   */
  licenseType: ComputeEngineLicenseType;

  /**
   * Output only. The OS license returned from the adaptation module report.
   *
   * @generated from field: google.cloud.vmmigration.v1.AppliedLicense applied_license = 12;
   */
  appliedLicense?: AppliedLicense;

  /**
   * Compute instance scheduling information (if empty default is used).
   *
   * @generated from field: google.cloud.vmmigration.v1.ComputeScheduling compute_scheduling = 13;
   */
  computeScheduling?: ComputeScheduling;

  /**
   * Defines whether the instance has Secure Boot enabled.
   * This can be set to true only if the vm boot option is EFI.
   *
   * @generated from field: bool secure_boot = 14;
   */
  secureBoot: boolean;

  /**
   * Output only. The VM Boot Option, as set in the source vm.
   *
   * @generated from field: google.cloud.vmmigration.v1.ComputeEngineBootOption boot_option = 15;
   */
  bootOption: ComputeEngineBootOption;

  /**
   * The metadata key/value pairs to assign to the VM.
   *
   * @generated from field: map<string, string> metadata = 16;
   */
  metadata: { [key: string]: string };

  /**
   * Additional licenses to assign to the VM.
   *
   * @generated from field: repeated string additional_licenses = 17;
   */
  additionalLicenses: string[];

  /**
   * The hostname to assign to the VM.
   *
   * @generated from field: string hostname = 18;
   */
  hostname: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ComputeEngineTargetDefaults.
 * Use `create(ComputeEngineTargetDefaultsSchema)` to create a new message.
 */
export const ComputeEngineTargetDefaultsSchema: GenMessage<ComputeEngineTargetDefaults> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 56);

/**
 * ComputeEngineTargetDetails is a collection of details for creating a VM in a
 * target Compute Engine project.
 *
 * @generated from message google.cloud.vmmigration.v1.ComputeEngineTargetDetails
 */
export type ComputeEngineTargetDetails = Message<"google.cloud.vmmigration.v1.ComputeEngineTargetDetails"> & {
  /**
   * The name of the VM to create.
   *
   * @generated from field: string vm_name = 1;
   */
  vmName: string;

  /**
   * The Google Cloud target project ID or project name.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * The zone in which to create the VM.
   *
   * @generated from field: string zone = 3;
   */
  zone: string;

  /**
   * The machine type series to create the VM with.
   *
   * @generated from field: string machine_type_series = 4;
   */
  machineTypeSeries: string;

  /**
   * The machine type to create the VM with.
   *
   * @generated from field: string machine_type = 5;
   */
  machineType: string;

  /**
   * A map of network tags to associate with the VM.
   *
   * @generated from field: repeated string network_tags = 6;
   */
  networkTags: string[];

  /**
   * List of NICs connected to this VM.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.NetworkInterface network_interfaces = 7;
   */
  networkInterfaces: NetworkInterface[];

  /**
   * The service account to associate the VM with.
   *
   * @generated from field: string service_account = 8;
   */
  serviceAccount: string;

  /**
   * The disk type to use in the VM.
   *
   * @generated from field: google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 9;
   */
  diskType: ComputeEngineDiskType;

  /**
   * A map of labels to associate with the VM.
   *
   * @generated from field: map<string, string> labels = 10;
   */
  labels: { [key: string]: string };

  /**
   * The license type to use in OS adaptation.
   *
   * @generated from field: google.cloud.vmmigration.v1.ComputeEngineLicenseType license_type = 11;
   */
  licenseType: ComputeEngineLicenseType;

  /**
   * The OS license returned from the adaptation module report.
   *
   * @generated from field: google.cloud.vmmigration.v1.AppliedLicense applied_license = 12;
   */
  appliedLicense?: AppliedLicense;

  /**
   * Compute instance scheduling information (if empty default is used).
   *
   * @generated from field: google.cloud.vmmigration.v1.ComputeScheduling compute_scheduling = 13;
   */
  computeScheduling?: ComputeScheduling;

  /**
   * Defines whether the instance has Secure Boot enabled.
   * This can be set to true only if the vm boot option is EFI.
   *
   * @generated from field: bool secure_boot = 14;
   */
  secureBoot: boolean;

  /**
   * The VM Boot Option, as set in the source vm.
   *
   * @generated from field: google.cloud.vmmigration.v1.ComputeEngineBootOption boot_option = 15;
   */
  bootOption: ComputeEngineBootOption;

  /**
   * The metadata key/value pairs to assign to the VM.
   *
   * @generated from field: map<string, string> metadata = 16;
   */
  metadata: { [key: string]: string };

  /**
   * Additional licenses to assign to the VM.
   *
   * @generated from field: repeated string additional_licenses = 17;
   */
  additionalLicenses: string[];

  /**
   * The hostname to assign to the VM.
   *
   * @generated from field: string hostname = 18;
   */
  hostname: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ComputeEngineTargetDetails.
 * Use `create(ComputeEngineTargetDetailsSchema)` to create a new message.
 */
export const ComputeEngineTargetDetailsSchema: GenMessage<ComputeEngineTargetDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 57);

/**
 * NetworkInterface represents a NIC of a VM.
 *
 * @generated from message google.cloud.vmmigration.v1.NetworkInterface
 */
export type NetworkInterface = Message<"google.cloud.vmmigration.v1.NetworkInterface"> & {
  /**
   * The network to connect the NIC to.
   *
   * @generated from field: string network = 1;
   */
  network: string;

  /**
   * The subnetwork to connect the NIC to.
   *
   * @generated from field: string subnetwork = 2;
   */
  subnetwork: string;

  /**
   * The internal IP to define in the NIC.
   * The formats accepted are: `ephemeral` \ ipv4 address \ a named address
   * resource full path.
   *
   * @generated from field: string internal_ip = 3;
   */
  internalIp: string;

  /**
   * The external IP to define in the NIC.
   *
   * @generated from field: string external_ip = 4;
   */
  externalIp: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.NetworkInterface.
 * Use `create(NetworkInterfaceSchema)` to create a new message.
 */
export const NetworkInterfaceSchema: GenMessage<NetworkInterface> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 58);

/**
 * AppliedLicense holds the license data returned by adaptation module report.
 *
 * @generated from message google.cloud.vmmigration.v1.AppliedLicense
 */
export type AppliedLicense = Message<"google.cloud.vmmigration.v1.AppliedLicense"> & {
  /**
   * The license type that was used in OS adaptation.
   *
   * @generated from field: google.cloud.vmmigration.v1.AppliedLicense.Type type = 1;
   */
  type: AppliedLicense_Type;

  /**
   * The OS license returned from the adaptation module's report.
   *
   * @generated from field: string os_license = 2;
   */
  osLicense: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.AppliedLicense.
 * Use `create(AppliedLicenseSchema)` to create a new message.
 */
export const AppliedLicenseSchema: GenMessage<AppliedLicense> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 59);

/**
 * License types used in OS adaptation.
 *
 * @generated from enum google.cloud.vmmigration.v1.AppliedLicense.Type
 */
export enum AppliedLicense_Type {
  /**
   * Unspecified license for the OS.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * No license available for the OS.
   *
   * @generated from enum value: NONE = 1;
   */
  NONE = 1,

  /**
   * The license type is Pay As You Go license type.
   *
   * @generated from enum value: PAYG = 2;
   */
  PAYG = 2,

  /**
   * The license type is Bring Your Own License type.
   *
   * @generated from enum value: BYOL = 3;
   */
  BYOL = 3,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.AppliedLicense.Type.
 */
export const AppliedLicense_TypeSchema: GenEnum<AppliedLicense_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 59, 0);

/**
 * Node Affinity: the configuration of desired nodes onto which this Instance
 * could be scheduled. Based on
 * https://cloud.google.com/compute/docs/reference/rest/v1/instances/setScheduling
 *
 * @generated from message google.cloud.vmmigration.v1.SchedulingNodeAffinity
 */
export type SchedulingNodeAffinity = Message<"google.cloud.vmmigration.v1.SchedulingNodeAffinity"> & {
  /**
   * The label key of Node resource to reference.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The operator to use for the node resources specified in the `values`
   * parameter.
   *
   * @generated from field: google.cloud.vmmigration.v1.SchedulingNodeAffinity.Operator operator = 2;
   */
  operator: SchedulingNodeAffinity_Operator;

  /**
   * Corresponds to the label values of Node resource.
   *
   * @generated from field: repeated string values = 3;
   */
  values: string[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.SchedulingNodeAffinity.
 * Use `create(SchedulingNodeAffinitySchema)` to create a new message.
 */
export const SchedulingNodeAffinitySchema: GenMessage<SchedulingNodeAffinity> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 60);

/**
 * Possible types of node selection operators. Valid operators are IN for
 * affinity and NOT_IN for anti-affinity.
 *
 * @generated from enum google.cloud.vmmigration.v1.SchedulingNodeAffinity.Operator
 */
export enum SchedulingNodeAffinity_Operator {
  /**
   * An unknown, unexpected behavior.
   *
   * @generated from enum value: OPERATOR_UNSPECIFIED = 0;
   */
  OPERATOR_UNSPECIFIED = 0,

  /**
   * The node resource group should be in these resources affinity.
   *
   * @generated from enum value: IN = 1;
   */
  IN = 1,

  /**
   * The node resource group should not be in these resources affinity.
   *
   * @generated from enum value: NOT_IN = 2;
   */
  NOT_IN = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.SchedulingNodeAffinity.Operator.
 */
export const SchedulingNodeAffinity_OperatorSchema: GenEnum<SchedulingNodeAffinity_Operator> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 60, 0);

/**
 * Scheduling information for VM on maintenance/restart behaviour and
 * node allocation in sole tenant nodes.
 *
 * @generated from message google.cloud.vmmigration.v1.ComputeScheduling
 */
export type ComputeScheduling = Message<"google.cloud.vmmigration.v1.ComputeScheduling"> & {
  /**
   * How the instance should behave when the host machine undergoes
   * maintenance that may temporarily impact instance performance.
   *
   * @generated from field: google.cloud.vmmigration.v1.ComputeScheduling.OnHostMaintenance on_host_maintenance = 1;
   */
  onHostMaintenance: ComputeScheduling_OnHostMaintenance;

  /**
   * Whether the Instance should be automatically restarted whenever it is
   * terminated by Compute Engine (not terminated by user).
   * This configuration is identical to `automaticRestart` field in Compute
   * Engine create instance under scheduling.
   * It was changed to an enum (instead of a boolean) to match the default
   * value in Compute Engine which is automatic restart.
   *
   * @generated from field: google.cloud.vmmigration.v1.ComputeScheduling.RestartType restart_type = 5;
   */
  restartType: ComputeScheduling_RestartType;

  /**
   * A set of node affinity and anti-affinity configurations for sole tenant
   * nodes.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.SchedulingNodeAffinity node_affinities = 3;
   */
  nodeAffinities: SchedulingNodeAffinity[];

  /**
   * The minimum number of virtual CPUs this instance will consume when
   * running on a sole-tenant node. Ignored if no node_affinites are
   * configured.
   *
   * @generated from field: int32 min_node_cpus = 4;
   */
  minNodeCpus: number;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ComputeScheduling.
 * Use `create(ComputeSchedulingSchema)` to create a new message.
 */
export const ComputeSchedulingSchema: GenMessage<ComputeScheduling> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 61);

/**
 * @generated from enum google.cloud.vmmigration.v1.ComputeScheduling.OnHostMaintenance
 */
export enum ComputeScheduling_OnHostMaintenance {
  /**
   * An unknown, unexpected behavior.
   *
   * @generated from enum value: ON_HOST_MAINTENANCE_UNSPECIFIED = 0;
   */
  ON_HOST_MAINTENANCE_UNSPECIFIED = 0,

  /**
   * Terminate the instance when the host machine undergoes maintenance.
   *
   * @generated from enum value: TERMINATE = 1;
   */
  TERMINATE = 1,

  /**
   * Migrate the instance when the host machine undergoes maintenance.
   *
   * @generated from enum value: MIGRATE = 2;
   */
  MIGRATE = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.ComputeScheduling.OnHostMaintenance.
 */
export const ComputeScheduling_OnHostMaintenanceSchema: GenEnum<ComputeScheduling_OnHostMaintenance> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 61, 0);

/**
 * Defines whether the Instance should be automatically restarted whenever
 * it is terminated by Compute Engine (not terminated by user).
 *
 * @generated from enum google.cloud.vmmigration.v1.ComputeScheduling.RestartType
 */
export enum ComputeScheduling_RestartType {
  /**
   * Unspecified behavior. This will use the default.
   *
   * @generated from enum value: RESTART_TYPE_UNSPECIFIED = 0;
   */
  RESTART_TYPE_UNSPECIFIED = 0,

  /**
   * The Instance should be automatically restarted whenever it is
   * terminated by Compute Engine.
   *
   * @generated from enum value: AUTOMATIC_RESTART = 1;
   */
  AUTOMATIC_RESTART = 1,

  /**
   * The Instance isn't automatically restarted whenever it is
   * terminated by Compute Engine.
   *
   * @generated from enum value: NO_AUTOMATIC_RESTART = 2;
   */
  NO_AUTOMATIC_RESTART = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.ComputeScheduling.RestartType.
 */
export const ComputeScheduling_RestartTypeSchema: GenEnum<ComputeScheduling_RestartType> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 61, 1);

/**
 * A policy for scheduling replications.
 *
 * @generated from message google.cloud.vmmigration.v1.SchedulePolicy
 */
export type SchedulePolicy = Message<"google.cloud.vmmigration.v1.SchedulePolicy"> & {
  /**
   * The idle duration between replication stages.
   *
   * @generated from field: google.protobuf.Duration idle_duration = 1;
   */
  idleDuration?: Duration;

  /**
   * A flag to indicate whether to skip OS adaptation during the replication
   * sync. OS adaptation is a process where the VM's operating system undergoes
   * changes and adaptations to fully function on Compute Engine.
   *
   * @generated from field: bool skip_os_adaptation = 2;
   */
  skipOsAdaptation: boolean;
};

/**
 * Describes the message google.cloud.vmmigration.v1.SchedulePolicy.
 * Use `create(SchedulePolicySchema)` to create a new message.
 */
export const SchedulePolicySchema: GenMessage<SchedulePolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 62);

/**
 * Request message for 'CreateMigratingVm' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CreateMigratingVmRequest
 */
export type CreateMigratingVmRequest = Message<"google.cloud.vmmigration.v1.CreateMigratingVmRequest"> & {
  /**
   * Required. The MigratingVm's parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The migratingVm identifier.
   *
   * @generated from field: string migrating_vm_id = 2;
   */
  migratingVmId: string;

  /**
   * Required. The create request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.MigratingVm migrating_vm = 3;
   */
  migratingVm?: MigratingVm;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CreateMigratingVmRequest.
 * Use `create(CreateMigratingVmRequestSchema)` to create a new message.
 */
export const CreateMigratingVmRequestSchema: GenMessage<CreateMigratingVmRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 63);

/**
 * Request message for 'LisMigratingVmsRequest' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListMigratingVmsRequest
 */
export type ListMigratingVmsRequest = Message<"google.cloud.vmmigration.v1.ListMigratingVmsRequest"> & {
  /**
   * Required. The parent, which owns this collection of MigratingVms.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of migrating VMs to return. The service may
   * return fewer than this value. If unspecified, at most 500 migrating VMs
   * will be returned. The maximum value is 1000; values above 1000 will be
   * coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Required. A page token, received from a previous `ListMigratingVms` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListMigratingVms`
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter request.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. the order by fields for the result.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;

  /**
   * Optional. The level of details of each migrating VM.
   *
   * @generated from field: google.cloud.vmmigration.v1.MigratingVmView view = 6;
   */
  view: MigratingVmView;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListMigratingVmsRequest.
 * Use `create(ListMigratingVmsRequestSchema)` to create a new message.
 */
export const ListMigratingVmsRequestSchema: GenMessage<ListMigratingVmsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 64);

/**
 * Response message for 'ListMigratingVms' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListMigratingVmsResponse
 */
export type ListMigratingVmsResponse = Message<"google.cloud.vmmigration.v1.ListMigratingVmsResponse"> & {
  /**
   * Output only. The list of Migrating VMs response.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.MigratingVm migrating_vms = 1;
   */
  migratingVms: MigratingVm[];

  /**
   * Output only. A token, which can be sent as `page_token` to retrieve the
   * next page. If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListMigratingVmsResponse.
 * Use `create(ListMigratingVmsResponseSchema)` to create a new message.
 */
export const ListMigratingVmsResponseSchema: GenMessage<ListMigratingVmsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 65);

/**
 * Request message for 'GetMigratingVm' request.
 *
 * @generated from message google.cloud.vmmigration.v1.GetMigratingVmRequest
 */
export type GetMigratingVmRequest = Message<"google.cloud.vmmigration.v1.GetMigratingVmRequest"> & {
  /**
   * Required. The name of the MigratingVm.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The level of details of the migrating VM.
   *
   * @generated from field: google.cloud.vmmigration.v1.MigratingVmView view = 2;
   */
  view: MigratingVmView;
};

/**
 * Describes the message google.cloud.vmmigration.v1.GetMigratingVmRequest.
 * Use `create(GetMigratingVmRequestSchema)` to create a new message.
 */
export const GetMigratingVmRequestSchema: GenMessage<GetMigratingVmRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 66);

/**
 * Request message for 'UpdateMigratingVm' request.
 *
 * @generated from message google.cloud.vmmigration.v1.UpdateMigratingVmRequest
 */
export type UpdateMigratingVmRequest = Message<"google.cloud.vmmigration.v1.UpdateMigratingVmRequest"> & {
  /**
   * Field mask is used to specify the fields to be overwritten in the
   * MigratingVm resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The update request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.MigratingVm migrating_vm = 2;
   */
  migratingVm?: MigratingVm;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.UpdateMigratingVmRequest.
 * Use `create(UpdateMigratingVmRequestSchema)` to create a new message.
 */
export const UpdateMigratingVmRequestSchema: GenMessage<UpdateMigratingVmRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 67);

/**
 * Request message for 'DeleteMigratingVm' request.
 *
 * @generated from message google.cloud.vmmigration.v1.DeleteMigratingVmRequest
 */
export type DeleteMigratingVmRequest = Message<"google.cloud.vmmigration.v1.DeleteMigratingVmRequest"> & {
  /**
   * Required. The name of the MigratingVm.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.DeleteMigratingVmRequest.
 * Use `create(DeleteMigratingVmRequestSchema)` to create a new message.
 */
export const DeleteMigratingVmRequestSchema: GenMessage<DeleteMigratingVmRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 68);

/**
 * Request message for 'StartMigrationRequest' request.
 *
 * @generated from message google.cloud.vmmigration.v1.StartMigrationRequest
 */
export type StartMigrationRequest = Message<"google.cloud.vmmigration.v1.StartMigrationRequest"> & {
  /**
   * Required. The name of the MigratingVm.
   *
   * @generated from field: string migrating_vm = 1;
   */
  migratingVm: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.StartMigrationRequest.
 * Use `create(StartMigrationRequestSchema)` to create a new message.
 */
export const StartMigrationRequestSchema: GenMessage<StartMigrationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 69);

/**
 * Response message for 'StartMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.StartMigrationResponse
 */
export type StartMigrationResponse = Message<"google.cloud.vmmigration.v1.StartMigrationResponse"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.StartMigrationResponse.
 * Use `create(StartMigrationResponseSchema)` to create a new message.
 */
export const StartMigrationResponseSchema: GenMessage<StartMigrationResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 70);

/**
 * Request message for 'PauseMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.PauseMigrationRequest
 */
export type PauseMigrationRequest = Message<"google.cloud.vmmigration.v1.PauseMigrationRequest"> & {
  /**
   * Required. The name of the MigratingVm.
   *
   * @generated from field: string migrating_vm = 1;
   */
  migratingVm: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.PauseMigrationRequest.
 * Use `create(PauseMigrationRequestSchema)` to create a new message.
 */
export const PauseMigrationRequestSchema: GenMessage<PauseMigrationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 71);

/**
 * Response message for 'PauseMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.PauseMigrationResponse
 */
export type PauseMigrationResponse = Message<"google.cloud.vmmigration.v1.PauseMigrationResponse"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.PauseMigrationResponse.
 * Use `create(PauseMigrationResponseSchema)` to create a new message.
 */
export const PauseMigrationResponseSchema: GenMessage<PauseMigrationResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 72);

/**
 * Request message for 'ResumeMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ResumeMigrationRequest
 */
export type ResumeMigrationRequest = Message<"google.cloud.vmmigration.v1.ResumeMigrationRequest"> & {
  /**
   * Required. The name of the MigratingVm.
   *
   * @generated from field: string migrating_vm = 1;
   */
  migratingVm: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ResumeMigrationRequest.
 * Use `create(ResumeMigrationRequestSchema)` to create a new message.
 */
export const ResumeMigrationRequestSchema: GenMessage<ResumeMigrationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 73);

/**
 * Response message for 'ResumeMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ResumeMigrationResponse
 */
export type ResumeMigrationResponse = Message<"google.cloud.vmmigration.v1.ResumeMigrationResponse"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.ResumeMigrationResponse.
 * Use `create(ResumeMigrationResponseSchema)` to create a new message.
 */
export const ResumeMigrationResponseSchema: GenMessage<ResumeMigrationResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 74);

/**
 * Request message for 'FinalizeMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.FinalizeMigrationRequest
 */
export type FinalizeMigrationRequest = Message<"google.cloud.vmmigration.v1.FinalizeMigrationRequest"> & {
  /**
   * Required. The name of the MigratingVm.
   *
   * @generated from field: string migrating_vm = 1;
   */
  migratingVm: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.FinalizeMigrationRequest.
 * Use `create(FinalizeMigrationRequestSchema)` to create a new message.
 */
export const FinalizeMigrationRequestSchema: GenMessage<FinalizeMigrationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 75);

/**
 * Response message for 'FinalizeMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.FinalizeMigrationResponse
 */
export type FinalizeMigrationResponse = Message<"google.cloud.vmmigration.v1.FinalizeMigrationResponse"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.FinalizeMigrationResponse.
 * Use `create(FinalizeMigrationResponseSchema)` to create a new message.
 */
export const FinalizeMigrationResponseSchema: GenMessage<FinalizeMigrationResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 76);

/**
 * TargetProject message represents a target Compute Engine project for a
 * migration or a clone.
 *
 * @generated from message google.cloud.vmmigration.v1.TargetProject
 */
export type TargetProject = Message<"google.cloud.vmmigration.v1.TargetProject"> & {
  /**
   * Output only. The name of the target project.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The target project ID (number) or project name.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * The target project's description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. The time this target project resource was created (not related
   * to when the Compute Engine project it points to was created).
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last time the target project resource was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.vmmigration.v1.TargetProject.
 * Use `create(TargetProjectSchema)` to create a new message.
 */
export const TargetProjectSchema: GenMessage<TargetProject> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 77);

/**
 * Request message for 'GetTargetProject' call.
 *
 * @generated from message google.cloud.vmmigration.v1.GetTargetProjectRequest
 */
export type GetTargetProjectRequest = Message<"google.cloud.vmmigration.v1.GetTargetProjectRequest"> & {
  /**
   * Required. The TargetProject name.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.GetTargetProjectRequest.
 * Use `create(GetTargetProjectRequestSchema)` to create a new message.
 */
export const GetTargetProjectRequestSchema: GenMessage<GetTargetProjectRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 78);

/**
 * Request message for 'ListTargetProjects' call.
 *
 * @generated from message google.cloud.vmmigration.v1.ListTargetProjectsRequest
 */
export type ListTargetProjectsRequest = Message<"google.cloud.vmmigration.v1.ListTargetProjectsRequest"> & {
  /**
   * Required. The parent, which owns this collection of targets.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of targets to return. The service may return
   * fewer than this value. If unspecified, at most 500 targets will be
   * returned. The maximum value is 1000; values above 1000 will be coerced to
   * 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Required. A page token, received from a previous `ListTargets` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListTargets` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter request.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. the order by fields for the result.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListTargetProjectsRequest.
 * Use `create(ListTargetProjectsRequestSchema)` to create a new message.
 */
export const ListTargetProjectsRequestSchema: GenMessage<ListTargetProjectsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 79);

/**
 * Response message for 'ListTargetProjects' call.
 *
 * @generated from message google.cloud.vmmigration.v1.ListTargetProjectsResponse
 */
export type ListTargetProjectsResponse = Message<"google.cloud.vmmigration.v1.ListTargetProjectsResponse"> & {
  /**
   * Output only. The list of target response.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.TargetProject target_projects = 1;
   */
  targetProjects: TargetProject[];

  /**
   * Output only. A token, which can be sent as `page_token` to retrieve the
   * next page. If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListTargetProjectsResponse.
 * Use `create(ListTargetProjectsResponseSchema)` to create a new message.
 */
export const ListTargetProjectsResponseSchema: GenMessage<ListTargetProjectsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 80);

/**
 * Request message for 'CreateTargetProject' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CreateTargetProjectRequest
 */
export type CreateTargetProjectRequest = Message<"google.cloud.vmmigration.v1.CreateTargetProjectRequest"> & {
  /**
   * Required. The TargetProject's parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The target_project identifier.
   *
   * @generated from field: string target_project_id = 2;
   */
  targetProjectId: string;

  /**
   * Required. The create request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.TargetProject target_project = 3;
   */
  targetProject?: TargetProject;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CreateTargetProjectRequest.
 * Use `create(CreateTargetProjectRequestSchema)` to create a new message.
 */
export const CreateTargetProjectRequestSchema: GenMessage<CreateTargetProjectRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 81);

/**
 * Update message for 'UpdateTargetProject' request.
 *
 * @generated from message google.cloud.vmmigration.v1.UpdateTargetProjectRequest
 */
export type UpdateTargetProjectRequest = Message<"google.cloud.vmmigration.v1.UpdateTargetProjectRequest"> & {
  /**
   * Field mask is used to specify the fields to be overwritten in the
   * TargetProject resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The update request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.TargetProject target_project = 2;
   */
  targetProject?: TargetProject;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.UpdateTargetProjectRequest.
 * Use `create(UpdateTargetProjectRequestSchema)` to create a new message.
 */
export const UpdateTargetProjectRequestSchema: GenMessage<UpdateTargetProjectRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 82);

/**
 * Request message for 'DeleteTargetProject' request.
 *
 * @generated from message google.cloud.vmmigration.v1.DeleteTargetProjectRequest
 */
export type DeleteTargetProjectRequest = Message<"google.cloud.vmmigration.v1.DeleteTargetProjectRequest"> & {
  /**
   * Required. The TargetProject name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.DeleteTargetProjectRequest.
 * Use `create(DeleteTargetProjectRequestSchema)` to create a new message.
 */
export const DeleteTargetProjectRequestSchema: GenMessage<DeleteTargetProjectRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 83);

/**
 * Describes message for 'Group' resource. The Group is a collections of several
 * MigratingVms.
 *
 * @generated from message google.cloud.vmmigration.v1.Group
 */
export type Group = Message<"google.cloud.vmmigration.v1.Group"> & {
  /**
   * Output only. The Group name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The create time timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The update time timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * User-provided description of the group.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * Display name is a user defined name for this group which can be updated.
   *
   * @generated from field: string display_name = 5;
   */
  displayName: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.Group.
 * Use `create(GroupSchema)` to create a new message.
 */
export const GroupSchema: GenMessage<Group> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 84);

/**
 * Request message for 'ListGroups' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListGroupsRequest
 */
export type ListGroupsRequest = Message<"google.cloud.vmmigration.v1.ListGroupsRequest"> & {
  /**
   * Required. The parent, which owns this collection of groups.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of groups to return. The service may return
   * fewer than this value. If unspecified, at most 500 groups will be
   * returned. The maximum value is 1000; values above 1000 will be coerced to
   * 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Required. A page token, received from a previous `ListGroups` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListGroups` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter request.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. the order by fields for the result.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListGroupsRequest.
 * Use `create(ListGroupsRequestSchema)` to create a new message.
 */
export const ListGroupsRequestSchema: GenMessage<ListGroupsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 85);

/**
 * Response message for 'ListGroups' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListGroupsResponse
 */
export type ListGroupsResponse = Message<"google.cloud.vmmigration.v1.ListGroupsResponse"> & {
  /**
   * Output only. The list of groups response.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.Group groups = 1;
   */
  groups: Group[];

  /**
   * Output only. A token, which can be sent as `page_token` to retrieve the
   * next page. If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListGroupsResponse.
 * Use `create(ListGroupsResponseSchema)` to create a new message.
 */
export const ListGroupsResponseSchema: GenMessage<ListGroupsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 86);

/**
 * Request message for 'GetGroup' request.
 *
 * @generated from message google.cloud.vmmigration.v1.GetGroupRequest
 */
export type GetGroupRequest = Message<"google.cloud.vmmigration.v1.GetGroupRequest"> & {
  /**
   * Required. The group name.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.GetGroupRequest.
 * Use `create(GetGroupRequestSchema)` to create a new message.
 */
export const GetGroupRequestSchema: GenMessage<GetGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 87);

/**
 * Request message for 'CreateGroup' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CreateGroupRequest
 */
export type CreateGroupRequest = Message<"google.cloud.vmmigration.v1.CreateGroupRequest"> & {
  /**
   * Required. The Group's parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The group identifier.
   *
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  /**
   * Required. The create request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.Group group = 3;
   */
  group?: Group;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CreateGroupRequest.
 * Use `create(CreateGroupRequestSchema)` to create a new message.
 */
export const CreateGroupRequestSchema: GenMessage<CreateGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 88);

/**
 * Update message for 'UpdateGroups' request.
 *
 * @generated from message google.cloud.vmmigration.v1.UpdateGroupRequest
 */
export type UpdateGroupRequest = Message<"google.cloud.vmmigration.v1.UpdateGroupRequest"> & {
  /**
   * Field mask is used to specify the fields to be overwritten in the
   * Group resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The update request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.Group group = 2;
   */
  group?: Group;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.UpdateGroupRequest.
 * Use `create(UpdateGroupRequestSchema)` to create a new message.
 */
export const UpdateGroupRequestSchema: GenMessage<UpdateGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 89);

/**
 * Request message for 'DeleteGroup' request.
 *
 * @generated from message google.cloud.vmmigration.v1.DeleteGroupRequest
 */
export type DeleteGroupRequest = Message<"google.cloud.vmmigration.v1.DeleteGroupRequest"> & {
  /**
   * Required. The Group name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.DeleteGroupRequest.
 * Use `create(DeleteGroupRequestSchema)` to create a new message.
 */
export const DeleteGroupRequestSchema: GenMessage<DeleteGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 90);

/**
 * Request message for 'AddGroupMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.AddGroupMigrationRequest
 */
export type AddGroupMigrationRequest = Message<"google.cloud.vmmigration.v1.AddGroupMigrationRequest"> & {
  /**
   * Required. The full path name of the Group to add to.
   *
   * @generated from field: string group = 1;
   */
  group: string;

  /**
   * The full path name of the MigratingVm to add.
   *
   * @generated from field: string migrating_vm = 2;
   */
  migratingVm: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.AddGroupMigrationRequest.
 * Use `create(AddGroupMigrationRequestSchema)` to create a new message.
 */
export const AddGroupMigrationRequestSchema: GenMessage<AddGroupMigrationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 91);

/**
 * Response message for 'AddGroupMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.AddGroupMigrationResponse
 */
export type AddGroupMigrationResponse = Message<"google.cloud.vmmigration.v1.AddGroupMigrationResponse"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.AddGroupMigrationResponse.
 * Use `create(AddGroupMigrationResponseSchema)` to create a new message.
 */
export const AddGroupMigrationResponseSchema: GenMessage<AddGroupMigrationResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 92);

/**
 * Request message for 'RemoveMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.RemoveGroupMigrationRequest
 */
export type RemoveGroupMigrationRequest = Message<"google.cloud.vmmigration.v1.RemoveGroupMigrationRequest"> & {
  /**
   * Required. The name of the Group.
   *
   * @generated from field: string group = 1;
   */
  group: string;

  /**
   * The MigratingVm to remove.
   *
   * @generated from field: string migrating_vm = 2;
   */
  migratingVm: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.RemoveGroupMigrationRequest.
 * Use `create(RemoveGroupMigrationRequestSchema)` to create a new message.
 */
export const RemoveGroupMigrationRequestSchema: GenMessage<RemoveGroupMigrationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 93);

/**
 * Response message for 'RemoveMigration' request.
 *
 * @generated from message google.cloud.vmmigration.v1.RemoveGroupMigrationResponse
 */
export type RemoveGroupMigrationResponse = Message<"google.cloud.vmmigration.v1.RemoveGroupMigrationResponse"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.RemoveGroupMigrationResponse.
 * Use `create(RemoveGroupMigrationResponseSchema)` to create a new message.
 */
export const RemoveGroupMigrationResponseSchema: GenMessage<RemoveGroupMigrationResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 94);

/**
 * Request message for 'CreateCutoverJob' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CreateCutoverJobRequest
 */
export type CreateCutoverJobRequest = Message<"google.cloud.vmmigration.v1.CreateCutoverJobRequest"> & {
  /**
   * Required. The Cutover's parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The cutover job identifier.
   *
   * @generated from field: string cutover_job_id = 2;
   */
  cutoverJobId: string;

  /**
   * Required. The cutover request body.
   *
   * @generated from field: google.cloud.vmmigration.v1.CutoverJob cutover_job = 3;
   */
  cutoverJob?: CutoverJob;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server will guarantee
   * that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CreateCutoverJobRequest.
 * Use `create(CreateCutoverJobRequestSchema)` to create a new message.
 */
export const CreateCutoverJobRequestSchema: GenMessage<CreateCutoverJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 95);

/**
 * Request message for 'CancelCutoverJob' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CancelCutoverJobRequest
 */
export type CancelCutoverJobRequest = Message<"google.cloud.vmmigration.v1.CancelCutoverJobRequest"> & {
  /**
   * Required. The cutover job id
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.CancelCutoverJobRequest.
 * Use `create(CancelCutoverJobRequestSchema)` to create a new message.
 */
export const CancelCutoverJobRequestSchema: GenMessage<CancelCutoverJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 96);

/**
 * Response message for 'CancelCutoverJob' request.
 *
 * @generated from message google.cloud.vmmigration.v1.CancelCutoverJobResponse
 */
export type CancelCutoverJobResponse = Message<"google.cloud.vmmigration.v1.CancelCutoverJobResponse"> & {
};

/**
 * Describes the message google.cloud.vmmigration.v1.CancelCutoverJobResponse.
 * Use `create(CancelCutoverJobResponseSchema)` to create a new message.
 */
export const CancelCutoverJobResponseSchema: GenMessage<CancelCutoverJobResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 97);

/**
 * Request message for 'ListCutoverJobsRequest' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListCutoverJobsRequest
 */
export type ListCutoverJobsRequest = Message<"google.cloud.vmmigration.v1.ListCutoverJobsRequest"> & {
  /**
   * Required. The parent, which owns this collection of migrating VMs.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of cutover jobs to return. The service may
   * return fewer than this value. If unspecified, at most 500 cutover jobs will
   * be returned. The maximum value is 1000; values above 1000 will be coerced
   * to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Required. A page token, received from a previous `ListCutoverJobs` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListCutoverJobs` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter request.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. the order by fields for the result.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListCutoverJobsRequest.
 * Use `create(ListCutoverJobsRequestSchema)` to create a new message.
 */
export const ListCutoverJobsRequestSchema: GenMessage<ListCutoverJobsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 98);

/**
 * Response message for 'ListCutoverJobs' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListCutoverJobsResponse
 */
export type ListCutoverJobsResponse = Message<"google.cloud.vmmigration.v1.ListCutoverJobsResponse"> & {
  /**
   * Output only. The list of cutover jobs response.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.CutoverJob cutover_jobs = 1;
   */
  cutoverJobs: CutoverJob[];

  /**
   * Output only. A token, which can be sent as `page_token` to retrieve the
   * next page. If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListCutoverJobsResponse.
 * Use `create(ListCutoverJobsResponseSchema)` to create a new message.
 */
export const ListCutoverJobsResponseSchema: GenMessage<ListCutoverJobsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 99);

/**
 * Request message for 'GetCutoverJob' request.
 *
 * @generated from message google.cloud.vmmigration.v1.GetCutoverJobRequest
 */
export type GetCutoverJobRequest = Message<"google.cloud.vmmigration.v1.GetCutoverJobRequest"> & {
  /**
   * Required. The name of the CutoverJob.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.GetCutoverJobRequest.
 * Use `create(GetCutoverJobRequestSchema)` to create a new message.
 */
export const GetCutoverJobRequestSchema: GenMessage<GetCutoverJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 100);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.vmmigration.v1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.vmmigration.v1.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. Identifies whether the user has requested cancellation
   * of the operation. Operations that have successfully been cancelled
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 101);

/**
 * Represents migration resource error information that can be used with
 * google.rpc.Status message. MigrationError is used to present the user with
 * error information in migration operations.
 *
 * @generated from message google.cloud.vmmigration.v1.MigrationError
 */
export type MigrationError = Message<"google.cloud.vmmigration.v1.MigrationError"> & {
  /**
   * Output only. The error code.
   *
   * @generated from field: google.cloud.vmmigration.v1.MigrationError.ErrorCode code = 1;
   */
  code: MigrationError_ErrorCode;

  /**
   * Output only. The localized error message.
   *
   * @generated from field: google.rpc.LocalizedMessage error_message = 2;
   */
  errorMessage?: LocalizedMessage;

  /**
   * Output only. Suggested action for solving the error.
   *
   * @generated from field: google.rpc.LocalizedMessage action_item = 3;
   */
  actionItem?: LocalizedMessage;

  /**
   * Output only. URL(s) pointing to additional information on handling the
   * current error.
   *
   * @generated from field: repeated google.rpc.Help.Link help_links = 4;
   */
  helpLinks: Help_Link[];

  /**
   * Output only. The time the error occurred.
   *
   * @generated from field: google.protobuf.Timestamp error_time = 5;
   */
  errorTime?: Timestamp;
};

/**
 * Describes the message google.cloud.vmmigration.v1.MigrationError.
 * Use `create(MigrationErrorSchema)` to create a new message.
 */
export const MigrationErrorSchema: GenMessage<MigrationError> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 102);

/**
 * Represents resource error codes.
 *
 * @generated from enum google.cloud.vmmigration.v1.MigrationError.ErrorCode
 */
export enum MigrationError_ErrorCode {
  /**
   * Default value. This value is not used.
   *
   * @generated from enum value: ERROR_CODE_UNSPECIFIED = 0;
   */
  ERROR_CODE_UNSPECIFIED = 0,

  /**
   * Migrate for Compute encountered an unknown error.
   *
   * @generated from enum value: UNKNOWN_ERROR = 1;
   */
  UNKNOWN_ERROR = 1,

  /**
   * Migrate for Compute encountered an error while validating replication
   * source health.
   *
   * @generated from enum value: SOURCE_VALIDATION_ERROR = 2;
   */
  SOURCE_VALIDATION_ERROR = 2,

  /**
   * Migrate for Compute encountered an error during source data operation.
   *
   * @generated from enum value: SOURCE_REPLICATION_ERROR = 3;
   */
  SOURCE_REPLICATION_ERROR = 3,

  /**
   * Migrate for Compute encountered an error during target data operation.
   *
   * @generated from enum value: TARGET_REPLICATION_ERROR = 4;
   */
  TARGET_REPLICATION_ERROR = 4,

  /**
   * Migrate for Compute encountered an error during OS adaptation.
   *
   * @generated from enum value: OS_ADAPTATION_ERROR = 5;
   */
  OS_ADAPTATION_ERROR = 5,

  /**
   * Migrate for Compute encountered an error in clone operation.
   *
   * @generated from enum value: CLONE_ERROR = 6;
   */
  CLONE_ERROR = 6,

  /**
   * Migrate for Compute encountered an error in cutover operation.
   *
   * @generated from enum value: CUTOVER_ERROR = 7;
   */
  CUTOVER_ERROR = 7,

  /**
   * Migrate for Compute encountered an error during utilization report
   * creation.
   *
   * @generated from enum value: UTILIZATION_REPORT_ERROR = 8;
   */
  UTILIZATION_REPORT_ERROR = 8,

  /**
   * Migrate for Compute encountered an error during appliance upgrade.
   *
   * @generated from enum value: APPLIANCE_UPGRADE_ERROR = 9;
   */
  APPLIANCE_UPGRADE_ERROR = 9,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.MigrationError.ErrorCode.
 */
export const MigrationError_ErrorCodeSchema: GenEnum<MigrationError_ErrorCode> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 102, 0);

/**
 * Represent the source AWS VM details.
 *
 * @generated from message google.cloud.vmmigration.v1.AwsSourceVmDetails
 */
export type AwsSourceVmDetails = Message<"google.cloud.vmmigration.v1.AwsSourceVmDetails"> & {
  /**
   * The firmware type of the source VM.
   *
   * @generated from field: google.cloud.vmmigration.v1.AwsSourceVmDetails.Firmware firmware = 1;
   */
  firmware: AwsSourceVmDetails_Firmware;

  /**
   * The total size of the disks being migrated in bytes.
   *
   * @generated from field: int64 committed_storage_bytes = 2;
   */
  committedStorageBytes: bigint;
};

/**
 * Describes the message google.cloud.vmmigration.v1.AwsSourceVmDetails.
 * Use `create(AwsSourceVmDetailsSchema)` to create a new message.
 */
export const AwsSourceVmDetailsSchema: GenMessage<AwsSourceVmDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 103);

/**
 * Possible values for AWS VM firmware.
 *
 * @generated from enum google.cloud.vmmigration.v1.AwsSourceVmDetails.Firmware
 */
export enum AwsSourceVmDetails_Firmware {
  /**
   * The firmware is unknown.
   *
   * @generated from enum value: FIRMWARE_UNSPECIFIED = 0;
   */
  FIRMWARE_UNSPECIFIED = 0,

  /**
   * The firmware is EFI.
   *
   * @generated from enum value: EFI = 1;
   */
  EFI = 1,

  /**
   * The firmware is BIOS.
   *
   * @generated from enum value: BIOS = 2;
   */
  BIOS = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.AwsSourceVmDetails.Firmware.
 */
export const AwsSourceVmDetails_FirmwareSchema: GenEnum<AwsSourceVmDetails_Firmware> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 103, 0);

/**
 * Request message for 'LisReplicationCyclesRequest' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListReplicationCyclesRequest
 */
export type ListReplicationCyclesRequest = Message<"google.cloud.vmmigration.v1.ListReplicationCyclesRequest"> & {
  /**
   * Required. The parent, which owns this collection of ReplicationCycles.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of replication cycles to return. The service
   * may return fewer than this value. If unspecified, at most 100 migrating VMs
   * will be returned. The maximum value is 100; values above 100 will be
   * coerced to 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Required. A page token, received from a previous `ListReplicationCycles`
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListReplicationCycles`
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. The filter request.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. the order by fields for the result.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListReplicationCyclesRequest.
 * Use `create(ListReplicationCyclesRequestSchema)` to create a new message.
 */
export const ListReplicationCyclesRequestSchema: GenMessage<ListReplicationCyclesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 104);

/**
 * Response message for 'ListReplicationCycles' request.
 *
 * @generated from message google.cloud.vmmigration.v1.ListReplicationCyclesResponse
 */
export type ListReplicationCyclesResponse = Message<"google.cloud.vmmigration.v1.ListReplicationCyclesResponse"> & {
  /**
   * Output only. The list of replication cycles response.
   *
   * @generated from field: repeated google.cloud.vmmigration.v1.ReplicationCycle replication_cycles = 1;
   */
  replicationCycles: ReplicationCycle[];

  /**
   * Output only. A token, which can be sent as `page_token` to retrieve the
   * next page. If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmmigration.v1.ListReplicationCyclesResponse.
 * Use `create(ListReplicationCyclesResponseSchema)` to create a new message.
 */
export const ListReplicationCyclesResponseSchema: GenMessage<ListReplicationCyclesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 105);

/**
 * Request message for 'GetReplicationCycle' request.
 *
 * @generated from message google.cloud.vmmigration.v1.GetReplicationCycleRequest
 */
export type GetReplicationCycleRequest = Message<"google.cloud.vmmigration.v1.GetReplicationCycleRequest"> & {
  /**
   * Required. The name of the ReplicationCycle.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmmigration.v1.GetReplicationCycleRequest.
 * Use `create(GetReplicationCycleRequestSchema)` to create a new message.
 */
export const GetReplicationCycleRequestSchema: GenMessage<GetReplicationCycleRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmmigration_v1_vmmigration, 106);

/**
 * Controls the level of details of a Utilization Report.
 *
 * @generated from enum google.cloud.vmmigration.v1.UtilizationReportView
 */
export enum UtilizationReportView {
  /**
   * The default / unset value.
   * The API will default to FULL on single report request and BASIC for
   * multiple reports request.
   *
   * @generated from enum value: UTILIZATION_REPORT_VIEW_UNSPECIFIED = 0;
   */
  UTILIZATION_REPORT_VIEW_UNSPECIFIED = 0,

  /**
   * Get the report metadata, without the list of VMs and their utilization
   * info.
   *
   * @generated from enum value: BASIC = 1;
   */
  BASIC = 1,

  /**
   * Include everything.
   *
   * @generated from enum value: FULL = 2;
   */
  FULL = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.UtilizationReportView.
 */
export const UtilizationReportViewSchema: GenEnum<UtilizationReportView> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 0);

/**
 * Controls the level of details of a Migrating VM.
 *
 * @generated from enum google.cloud.vmmigration.v1.MigratingVmView
 */
export enum MigratingVmView {
  /**
   * View is unspecified. The API will fallback to the default value.
   *
   * @generated from enum value: MIGRATING_VM_VIEW_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Get the migrating VM basic details.
   * The basic details do not include the recent clone jobs and recent cutover
   * jobs lists.
   *
   * @generated from enum value: MIGRATING_VM_VIEW_BASIC = 1;
   */
  BASIC = 1,

  /**
   * Include everything.
   *
   * @generated from enum value: MIGRATING_VM_VIEW_FULL = 2;
   */
  FULL = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.MigratingVmView.
 */
export const MigratingVmViewSchema: GenEnum<MigratingVmView> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 1);

/**
 * Types of disks supported for Compute Engine VM.
 *
 * @generated from enum google.cloud.vmmigration.v1.ComputeEngineDiskType
 */
export enum ComputeEngineDiskType {
  /**
   * An unspecified disk type. Will be used as STANDARD.
   *
   * @generated from enum value: COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * A Standard disk type.
   *
   * @generated from enum value: COMPUTE_ENGINE_DISK_TYPE_STANDARD = 1;
   */
  STANDARD = 1,

  /**
   * SSD hard disk type.
   *
   * @generated from enum value: COMPUTE_ENGINE_DISK_TYPE_SSD = 2;
   */
  SSD = 2,

  /**
   * An alternative to SSD persistent disks that balance performance and
   * cost.
   *
   * @generated from enum value: COMPUTE_ENGINE_DISK_TYPE_BALANCED = 3;
   */
  BALANCED = 3,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.ComputeEngineDiskType.
 */
export const ComputeEngineDiskTypeSchema: GenEnum<ComputeEngineDiskType> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 2);

/**
 * Types of licenses used in OS adaptation.
 *
 * @generated from enum google.cloud.vmmigration.v1.ComputeEngineLicenseType
 */
export enum ComputeEngineLicenseType {
  /**
   * The license type is the default for the OS.
   *
   * @generated from enum value: COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * The license type is Pay As You Go license type.
   *
   * @generated from enum value: COMPUTE_ENGINE_LICENSE_TYPE_PAYG = 1;
   */
  PAYG = 1,

  /**
   * The license type is Bring Your Own License type.
   *
   * @generated from enum value: COMPUTE_ENGINE_LICENSE_TYPE_BYOL = 2;
   */
  BYOL = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.ComputeEngineLicenseType.
 */
export const ComputeEngineLicenseTypeSchema: GenEnum<ComputeEngineLicenseType> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 3);

/**
 * Possible values for vm boot option.
 *
 * @generated from enum google.cloud.vmmigration.v1.ComputeEngineBootOption
 */
export enum ComputeEngineBootOption {
  /**
   * The boot option is unknown.
   *
   * @generated from enum value: COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The boot option is EFI.
   *
   * @generated from enum value: COMPUTE_ENGINE_BOOT_OPTION_EFI = 1;
   */
  EFI = 1,

  /**
   * The boot option is BIOS.
   *
   * @generated from enum value: COMPUTE_ENGINE_BOOT_OPTION_BIOS = 2;
   */
  BIOS = 2,
}

/**
 * Describes the enum google.cloud.vmmigration.v1.ComputeEngineBootOption.
 */
export const ComputeEngineBootOptionSchema: GenEnum<ComputeEngineBootOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_vmmigration_v1_vmmigration, 4);

/**
 * VM Migration Service
 *
 * @generated from service google.cloud.vmmigration.v1.VmMigration
 */
export const VmMigration: GenService<{
  /**
   * Lists Sources in a given project and location.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.ListSources
   */
  listSources: {
    methodKind: "unary";
    input: typeof ListSourcesRequestSchema;
    output: typeof ListSourcesResponseSchema;
  },
  /**
   * Gets details of a single Source.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.GetSource
   */
  getSource: {
    methodKind: "unary";
    input: typeof GetSourceRequestSchema;
    output: typeof SourceSchema;
  },
  /**
   * Creates a new Source in a given project and location.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.CreateSource
   */
  createSource: {
    methodKind: "unary";
    input: typeof CreateSourceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Source.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.UpdateSource
   */
  updateSource: {
    methodKind: "unary";
    input: typeof UpdateSourceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Source.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.DeleteSource
   */
  deleteSource: {
    methodKind: "unary";
    input: typeof DeleteSourceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * List remote source's inventory of VMs.
   * The remote source is the onprem vCenter (remote in the sense it's not in
   * Compute Engine). The inventory describes the list of existing VMs in that
   * source. Note that this operation lists the VMs on the remote source, as
   * opposed to listing the MigratingVms resources in the vmmigration service.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.FetchInventory
   */
  fetchInventory: {
    methodKind: "unary";
    input: typeof FetchInventoryRequestSchema;
    output: typeof FetchInventoryResponseSchema;
  },
  /**
   * Lists Utilization Reports of the given Source.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.ListUtilizationReports
   */
  listUtilizationReports: {
    methodKind: "unary";
    input: typeof ListUtilizationReportsRequestSchema;
    output: typeof ListUtilizationReportsResponseSchema;
  },
  /**
   * Gets a single Utilization Report.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.GetUtilizationReport
   */
  getUtilizationReport: {
    methodKind: "unary";
    input: typeof GetUtilizationReportRequestSchema;
    output: typeof UtilizationReportSchema;
  },
  /**
   * Creates a new UtilizationReport.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.CreateUtilizationReport
   */
  createUtilizationReport: {
    methodKind: "unary";
    input: typeof CreateUtilizationReportRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Utilization Report.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.DeleteUtilizationReport
   */
  deleteUtilizationReport: {
    methodKind: "unary";
    input: typeof DeleteUtilizationReportRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists DatacenterConnectors in a given Source.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.ListDatacenterConnectors
   */
  listDatacenterConnectors: {
    methodKind: "unary";
    input: typeof ListDatacenterConnectorsRequestSchema;
    output: typeof ListDatacenterConnectorsResponseSchema;
  },
  /**
   * Gets details of a single DatacenterConnector.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.GetDatacenterConnector
   */
  getDatacenterConnector: {
    methodKind: "unary";
    input: typeof GetDatacenterConnectorRequestSchema;
    output: typeof DatacenterConnectorSchema;
  },
  /**
   * Creates a new DatacenterConnector in a given Source.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.CreateDatacenterConnector
   */
  createDatacenterConnector: {
    methodKind: "unary";
    input: typeof CreateDatacenterConnectorRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single DatacenterConnector.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.DeleteDatacenterConnector
   */
  deleteDatacenterConnector: {
    methodKind: "unary";
    input: typeof DeleteDatacenterConnectorRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Upgrades the appliance relate to this DatacenterConnector to the in-place
   * updateable version.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.UpgradeAppliance
   */
  upgradeAppliance: {
    methodKind: "unary";
    input: typeof UpgradeApplianceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a new MigratingVm in a given Source.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.CreateMigratingVm
   */
  createMigratingVm: {
    methodKind: "unary";
    input: typeof CreateMigratingVmRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists MigratingVms in a given Source.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.ListMigratingVms
   */
  listMigratingVms: {
    methodKind: "unary";
    input: typeof ListMigratingVmsRequestSchema;
    output: typeof ListMigratingVmsResponseSchema;
  },
  /**
   * Gets details of a single MigratingVm.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.GetMigratingVm
   */
  getMigratingVm: {
    methodKind: "unary";
    input: typeof GetMigratingVmRequestSchema;
    output: typeof MigratingVmSchema;
  },
  /**
   * Updates the parameters of a single MigratingVm.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.UpdateMigratingVm
   */
  updateMigratingVm: {
    methodKind: "unary";
    input: typeof UpdateMigratingVmRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single MigratingVm.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.DeleteMigratingVm
   */
  deleteMigratingVm: {
    methodKind: "unary";
    input: typeof DeleteMigratingVmRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Starts migration for a VM. Starts the process of uploading
   * data and creating snapshots, in replication cycles scheduled by the policy.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.StartMigration
   */
  startMigration: {
    methodKind: "unary";
    input: typeof StartMigrationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Resumes a migration for a VM. When called on a paused migration, will start
   * the process of uploading data and creating snapshots; when called on a
   * completed cut-over migration, will update the migration to active state and
   * start the process of uploading data and creating snapshots.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.ResumeMigration
   */
  resumeMigration: {
    methodKind: "unary";
    input: typeof ResumeMigrationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Pauses a migration for a VM. If cycle tasks are running they will be
   * cancelled, preserving source task data. Further replication cycles will not
   * be triggered while the VM is paused.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.PauseMigration
   */
  pauseMigration: {
    methodKind: "unary";
    input: typeof PauseMigrationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Marks a migration as completed, deleting migration resources that are no
   * longer being used. Only applicable after cutover is done.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.FinalizeMigration
   */
  finalizeMigration: {
    methodKind: "unary";
    input: typeof FinalizeMigrationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Initiates a Clone of a specific migrating VM.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.CreateCloneJob
   */
  createCloneJob: {
    methodKind: "unary";
    input: typeof CreateCloneJobRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Initiates the cancellation of a running clone job.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.CancelCloneJob
   */
  cancelCloneJob: {
    methodKind: "unary";
    input: typeof CancelCloneJobRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists CloneJobs of a given migrating VM.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.ListCloneJobs
   */
  listCloneJobs: {
    methodKind: "unary";
    input: typeof ListCloneJobsRequestSchema;
    output: typeof ListCloneJobsResponseSchema;
  },
  /**
   * Gets details of a single CloneJob.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.GetCloneJob
   */
  getCloneJob: {
    methodKind: "unary";
    input: typeof GetCloneJobRequestSchema;
    output: typeof CloneJobSchema;
  },
  /**
   * Initiates a Cutover of a specific migrating VM.
   * The returned LRO is completed when the cutover job resource is created
   * and the job is initiated.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.CreateCutoverJob
   */
  createCutoverJob: {
    methodKind: "unary";
    input: typeof CreateCutoverJobRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Initiates the cancellation of a running cutover job.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.CancelCutoverJob
   */
  cancelCutoverJob: {
    methodKind: "unary";
    input: typeof CancelCutoverJobRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists CutoverJobs of a given migrating VM.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.ListCutoverJobs
   */
  listCutoverJobs: {
    methodKind: "unary";
    input: typeof ListCutoverJobsRequestSchema;
    output: typeof ListCutoverJobsResponseSchema;
  },
  /**
   * Gets details of a single CutoverJob.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.GetCutoverJob
   */
  getCutoverJob: {
    methodKind: "unary";
    input: typeof GetCutoverJobRequestSchema;
    output: typeof CutoverJobSchema;
  },
  /**
   * Lists Groups in a given project and location.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.ListGroups
   */
  listGroups: {
    methodKind: "unary";
    input: typeof ListGroupsRequestSchema;
    output: typeof ListGroupsResponseSchema;
  },
  /**
   * Gets details of a single Group.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.GetGroup
   */
  getGroup: {
    methodKind: "unary";
    input: typeof GetGroupRequestSchema;
    output: typeof GroupSchema;
  },
  /**
   * Creates a new Group in a given project and location.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.CreateGroup
   */
  createGroup: {
    methodKind: "unary";
    input: typeof CreateGroupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Group.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.UpdateGroup
   */
  updateGroup: {
    methodKind: "unary";
    input: typeof UpdateGroupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Group.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.DeleteGroup
   */
  deleteGroup: {
    methodKind: "unary";
    input: typeof DeleteGroupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Adds a MigratingVm to a Group.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.AddGroupMigration
   */
  addGroupMigration: {
    methodKind: "unary";
    input: typeof AddGroupMigrationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Removes a MigratingVm from a Group.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.RemoveGroupMigration
   */
  removeGroupMigration: {
    methodKind: "unary";
    input: typeof RemoveGroupMigrationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists TargetProjects in a given project.
   *
   * NOTE: TargetProject is a global resource; hence the only supported value
   * for location is `global`.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.ListTargetProjects
   */
  listTargetProjects: {
    methodKind: "unary";
    input: typeof ListTargetProjectsRequestSchema;
    output: typeof ListTargetProjectsResponseSchema;
  },
  /**
   * Gets details of a single TargetProject.
   *
   * NOTE: TargetProject is a global resource; hence the only supported value
   * for location is `global`.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.GetTargetProject
   */
  getTargetProject: {
    methodKind: "unary";
    input: typeof GetTargetProjectRequestSchema;
    output: typeof TargetProjectSchema;
  },
  /**
   * Creates a new TargetProject in a given project.
   *
   * NOTE: TargetProject is a global resource; hence the only supported value
   * for location is `global`.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.CreateTargetProject
   */
  createTargetProject: {
    methodKind: "unary";
    input: typeof CreateTargetProjectRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single TargetProject.
   *
   * NOTE: TargetProject is a global resource; hence the only supported value
   * for location is `global`.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.UpdateTargetProject
   */
  updateTargetProject: {
    methodKind: "unary";
    input: typeof UpdateTargetProjectRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single TargetProject.
   *
   * NOTE: TargetProject is a global resource; hence the only supported value
   * for location is `global`.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.DeleteTargetProject
   */
  deleteTargetProject: {
    methodKind: "unary";
    input: typeof DeleteTargetProjectRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists ReplicationCycles in a given MigratingVM.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.ListReplicationCycles
   */
  listReplicationCycles: {
    methodKind: "unary";
    input: typeof ListReplicationCyclesRequestSchema;
    output: typeof ListReplicationCyclesResponseSchema;
  },
  /**
   * Gets details of a single ReplicationCycle.
   *
   * @generated from rpc google.cloud.vmmigration.v1.VmMigration.GetReplicationCycle
   */
  getReplicationCycle: {
    methodKind: "unary";
    input: typeof GetReplicationCycleRequestSchema;
    output: typeof ReplicationCycleSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_vmmigration_v1_vmmigration, 0);

