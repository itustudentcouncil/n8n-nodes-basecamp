// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/policysimulator/v1/simulator.proto (package google.cloud.policysimulator.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { AccessState, AccessTuple, ExplainedPolicy } from "./explanations_pb";
import { file_google_cloud_policysimulator_v1_explanations } from "./explanations_pb";
import type { Policy } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Date } from "../../../type/date_pb";
import { file_google_type_date } from "../../../type/date_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/policysimulator/v1/simulator.proto.
 */
export const file_google_cloud_policysimulator_v1_simulator: GenFile = /*@__PURE__*/
  fileDesc("Ci9nb29nbGUvY2xvdWQvcG9saWN5c2ltdWxhdG9yL3YxL3NpbXVsYXRvci5wcm90bxIfZ29vZ2xlLmNsb3VkLnBvbGljeXNpbXVsYXRvci52MSLvBQoGUmVwbGF5EhEKBG5hbWUYASABKAlCA+BBAxJBCgVzdGF0ZRgCIAEoDjItLmdvb2dsZS5jbG91ZC5wb2xpY3lzaW11bGF0b3IudjEuUmVwbGF5LlN0YXRlQgPgQQMSQgoGY29uZmlnGAMgASgLMi0uZ29vZ2xlLmNsb3VkLnBvbGljeXNpbXVsYXRvci52MS5SZXBsYXlDb25maWdCA+BBAhJUCg9yZXN1bHRzX3N1bW1hcnkYBSABKAsyNi5nb29nbGUuY2xvdWQucG9saWN5c2ltdWxhdG9yLnYxLlJlcGxheS5SZXN1bHRzU3VtbWFyeUID4EEDGrsBCg5SZXN1bHRzU3VtbWFyeRIRCglsb2dfY291bnQYASABKAUSFwoPdW5jaGFuZ2VkX2NvdW50GAIgASgFEhgKEGRpZmZlcmVuY2VfY291bnQYAyABKAUSEwoLZXJyb3JfY291bnQYBCABKAUSJgoLb2xkZXN0X2RhdGUYBSABKAsyES5nb29nbGUudHlwZS5EYXRlEiYKC25ld2VzdF9kYXRlGAYgASgLMhEuZ29vZ2xlLnR5cGUuRGF0ZSJTCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgsKB1BFTkRJTkcQARILCgdSVU5OSU5HEAISDQoJU1VDQ0VFREVEEAMSCgoGRkFJTEVEEAQ64QHqQd0BCiVwb2xpY3lzaW11bGF0b3IuZ29vZ2xlYXBpcy5jb20vUmVwbGF5Ejhwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vcmVwbGF5cy97cmVwbGF5fRI2Zm9sZGVycy97Zm9sZGVyfS9sb2NhdGlvbnMve2xvY2F0aW9ufS9yZXBsYXlzL3tyZXBsYXl9EkJvcmdhbml6YXRpb25zL3tvcmdhbml6YXRpb259L2xvY2F0aW9ucy97bG9jYXRpb259L3JlcGxheXMve3JlcGxheX0i5QQKDFJlcGxheVJlc3VsdBI7CgRkaWZmGAUgASgLMisuZ29vZ2xlLmNsb3VkLnBvbGljeXNpbXVsYXRvci52MS5SZXBsYXlEaWZmSAASIwoFZXJyb3IYBiABKAsyEi5nb29nbGUucnBjLlN0YXR1c0gAEgwKBG5hbWUYASABKAkSOgoGcGFyZW50GAIgASgJQir6QScKJXBvbGljeXNpbXVsYXRvci5nb29nbGVhcGlzLmNvbS9SZXBsYXkSQgoMYWNjZXNzX3R1cGxlGAMgASgLMiwuZ29vZ2xlLmNsb3VkLnBvbGljeXNpbXVsYXRvci52MS5BY2Nlc3NUdXBsZRIpCg5sYXN0X3NlZW5fZGF0ZRgEIAEoCzIRLmdvb2dsZS50eXBlLkRhdGU6rwLqQasCCitwb2xpY3lzaW11bGF0b3IuZ29vZ2xlYXBpcy5jb20vUmVwbGF5UmVzdWx0ElBwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vcmVwbGF5cy97cmVwbGF5fS9yZXN1bHRzL3tyZXBsYXlfcmVzdWx0fRJOZm9sZGVycy97Zm9sZGVyfS9sb2NhdGlvbnMve2xvY2F0aW9ufS9yZXBsYXlzL3tyZXBsYXl9L3Jlc3VsdHMve3JlcGxheV9yZXN1bHR9Elpvcmdhbml6YXRpb25zL3tvcmdhbml6YXRpb259L2xvY2F0aW9ucy97bG9jYXRpb259L3JlcGxheXMve3JlcGxheX0vcmVzdWx0cy97cmVwbGF5X3Jlc3VsdH1CCAoGcmVzdWx0ImgKE0NyZWF0ZVJlcGxheVJlcXVlc3QSEwoGcGFyZW50GAEgASgJQgPgQQISPAoGcmVwbGF5GAIgASgLMicuZ29vZ2xlLmNsb3VkLnBvbGljeXNpbXVsYXRvci52MS5SZXBsYXlCA+BBAiJJChdSZXBsYXlPcGVyYXRpb25NZXRhZGF0YRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJPChBHZXRSZXBsYXlSZXF1ZXN0EjsKBG5hbWUYASABKAlCLeBBAvpBJwolcG9saWN5c2ltdWxhdG9yLmdvb2dsZWFwaXMuY29tL1JlcGxheSKAAQoYTGlzdFJlcGxheVJlc3VsdHNSZXF1ZXN0Ej0KBnBhcmVudBgBIAEoCUIt4EEC+kEnCiVwb2xpY3lzaW11bGF0b3IuZ29vZ2xlYXBpcy5jb20vUmVwbGF5EhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJInsKGUxpc3RSZXBsYXlSZXN1bHRzUmVzcG9uc2USRQoOcmVwbGF5X3Jlc3VsdHMYASADKAsyLS5nb29nbGUuY2xvdWQucG9saWN5c2ltdWxhdG9yLnYxLlJlcGxheVJlc3VsdBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiwAIKDFJlcGxheUNvbmZpZxJYCg5wb2xpY3lfb3ZlcmxheRgBIAMoCzJALmdvb2dsZS5jbG91ZC5wb2xpY3lzaW11bGF0b3IudjEuUmVwbGF5Q29uZmlnLlBvbGljeU92ZXJsYXlFbnRyeRJLCgpsb2dfc291cmNlGAIgASgOMjcuZ29vZ2xlLmNsb3VkLnBvbGljeXNpbXVsYXRvci52MS5SZXBsYXlDb25maWcuTG9nU291cmNlGksKElBvbGljeU92ZXJsYXlFbnRyeRILCgNrZXkYASABKAkSJAoFdmFsdWUYAiABKAsyFS5nb29nbGUuaWFtLnYxLlBvbGljeToCOAEiPAoJTG9nU291cmNlEhoKFkxPR19TT1VSQ0VfVU5TUEVDSUZJRUQQABITCg9SRUNFTlRfQUNDRVNTRVMQASJTCgpSZXBsYXlEaWZmEkUKC2FjY2Vzc19kaWZmGAIgASgLMjAuZ29vZ2xlLmNsb3VkLnBvbGljeXNpbXVsYXRvci52MS5BY2Nlc3NTdGF0ZURpZmYiqgMKD0FjY2Vzc1N0YXRlRGlmZhJCCghiYXNlbGluZRgBIAEoCzIwLmdvb2dsZS5jbG91ZC5wb2xpY3lzaW11bGF0b3IudjEuRXhwbGFpbmVkQWNjZXNzEkMKCXNpbXVsYXRlZBgCIAEoCzIwLmdvb2dsZS5jbG91ZC5wb2xpY3lzaW11bGF0b3IudjEuRXhwbGFpbmVkQWNjZXNzElgKDWFjY2Vzc19jaGFuZ2UYAyABKA4yQS5nb29nbGUuY2xvdWQucG9saWN5c2ltdWxhdG9yLnYxLkFjY2Vzc1N0YXRlRGlmZi5BY2Nlc3NDaGFuZ2VUeXBlIrMBChBBY2Nlc3NDaGFuZ2VUeXBlEiIKHkFDQ0VTU19DSEFOR0VfVFlQRV9VTlNQRUNJRklFRBAAEg0KCU5PX0NIQU5HRRABEhIKDlVOS05PV05fQ0hBTkdFEAISEgoOQUNDRVNTX1JFVk9LRUQQAxIRCg1BQ0NFU1NfR0FJTkVEEAQSGAoUQUNDRVNTX01BWUJFX1JFVk9LRUQQBRIXChNBQ0NFU1NfTUFZQkVfR0FJTkVEEAYivQEKD0V4cGxhaW5lZEFjY2VzcxJCCgxhY2Nlc3Nfc3RhdGUYASABKA4yLC5nb29nbGUuY2xvdWQucG9saWN5c2ltdWxhdG9yLnYxLkFjY2Vzc1N0YXRlEkIKCHBvbGljaWVzGAIgAygLMjAuZ29vZ2xlLmNsb3VkLnBvbGljeXNpbXVsYXRvci52MS5FeHBsYWluZWRQb2xpY3kSIgoGZXJyb3JzGAMgAygLMhIuZ29vZ2xlLnJwYy5TdGF0dXMygQgKCVNpbXVsYXRvchKHAgoJR2V0UmVwbGF5EjEuZ29vZ2xlLmNsb3VkLnBvbGljeXNpbXVsYXRvci52MS5HZXRSZXBsYXlSZXF1ZXN0GicuZ29vZ2xlLmNsb3VkLnBvbGljeXNpbXVsYXRvci52MS5SZXBsYXkinQHaQQRuYW1lgtPkkwKPAVosEiovdjEve25hbWU9Zm9sZGVycy8qL2xvY2F0aW9ucy8qL3JlcGxheXMvKn1aMhIwL3YxL3tuYW1lPW9yZ2FuaXphdGlvbnMvKi9sb2NhdGlvbnMvKi9yZXBsYXlzLyp9EisvdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9yZXBsYXlzLyp9EsgCCgxDcmVhdGVSZXBsYXkSNC5nb29nbGUuY2xvdWQucG9saWN5c2ltdWxhdG9yLnYxLkNyZWF0ZVJlcGxheVJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIuIBykEhCgZSZXBsYXkSF1JlcGxheU9wZXJhdGlvbk1ldGFkYXRh2kENcGFyZW50LHJlcGxheYLT5JMCpwE6BnJlcGxheVo0OgZyZXBsYXkiKi92MS97cGFyZW50PWZvbGRlcnMvKi9sb2NhdGlvbnMvKn0vcmVwbGF5c1o6OgZyZXBsYXkiMC92MS97cGFyZW50PW9yZ2FuaXphdGlvbnMvKi9sb2NhdGlvbnMvKn0vcmVwbGF5cyIrL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vcmVwbGF5cxLKAgoRTGlzdFJlcGxheVJlc3VsdHMSOS5nb29nbGUuY2xvdWQucG9saWN5c2ltdWxhdG9yLnYxLkxpc3RSZXBsYXlSZXN1bHRzUmVxdWVzdBo6Lmdvb2dsZS5jbG91ZC5wb2xpY3lzaW11bGF0b3IudjEuTGlzdFJlcGxheVJlc3VsdHNSZXNwb25zZSK9AdpBBnBhcmVudILT5JMCrQFaNhI0L3YxL3twYXJlbnQ9Zm9sZGVycy8qL2xvY2F0aW9ucy8qL3JlcGxheXMvKn0vcmVzdWx0c1o8EjovdjEve3BhcmVudD1vcmdhbml6YXRpb25zLyovbG9jYXRpb25zLyovcmVwbGF5cy8qfS9yZXN1bHRzEjUvdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3JlcGxheXMvKn0vcmVzdWx0cxpSykEecG9saWN5c2ltdWxhdG9yLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybULyAQojY29tLmdvb2dsZS5jbG91ZC5wb2xpY3lzaW11bGF0b3IudjFCDlNpbXVsYXRvclByb3RvUAFaTWNsb3VkLmdvb2dsZS5jb20vZ28vcG9saWN5c2ltdWxhdG9yL2FwaXYxL3BvbGljeXNpbXVsYXRvcnBiO3BvbGljeXNpbXVsYXRvcnBi+AEBqgIfR29vZ2xlLkNsb3VkLlBvbGljeVNpbXVsYXRvci5WMcoCH0dvb2dsZVxDbG91ZFxQb2xpY3lTaW11bGF0b3JcVjHqAiJHb29nbGU6OkNsb3VkOjpQb2xpY3lTaW11bGF0b3I6OlYxYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_policysimulator_v1_explanations, file_google_iam_v1_policy, file_google_longrunning_operations, file_google_protobuf_timestamp, file_google_rpc_status, file_google_type_date]);

/**
 * A resource describing a `Replay`, or simulation.
 *
 * @generated from message google.cloud.policysimulator.v1.Replay
 */
export type Replay = Message<"google.cloud.policysimulator.v1.Replay"> & {
  /**
   * Output only. The resource name of the `Replay`, which has the following
   * format:
   *
   * `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`,
   * where `{resource-id}` is the ID of the project, folder, or organization
   * that owns the Replay.
   *
   * Example:
   * `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The current state of the `Replay`.
   *
   * @generated from field: google.cloud.policysimulator.v1.Replay.State state = 2;
   */
  state: Replay_State;

  /**
   * Required. The configuration used for the `Replay`.
   *
   * @generated from field: google.cloud.policysimulator.v1.ReplayConfig config = 3;
   */
  config?: ReplayConfig;

  /**
   * Output only. Summary statistics about the replayed log entries.
   *
   * @generated from field: google.cloud.policysimulator.v1.Replay.ResultsSummary results_summary = 5;
   */
  resultsSummary?: Replay_ResultsSummary;
};

/**
 * Describes the message google.cloud.policysimulator.v1.Replay.
 * Use `create(ReplaySchema)` to create a new message.
 */
export const ReplaySchema: GenMessage<Replay> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 0);

/**
 * Summary statistics about the replayed log entries.
 *
 * @generated from message google.cloud.policysimulator.v1.Replay.ResultsSummary
 */
export type Replay_ResultsSummary = Message<"google.cloud.policysimulator.v1.Replay.ResultsSummary"> & {
  /**
   * The total number of log entries replayed.
   *
   * @generated from field: int32 log_count = 1;
   */
  logCount: number;

  /**
   * The number of replayed log entries with no difference between
   * baseline and simulated policies.
   *
   * @generated from field: int32 unchanged_count = 2;
   */
  unchangedCount: number;

  /**
   * The number of replayed log entries with a difference between baseline and
   * simulated policies.
   *
   * @generated from field: int32 difference_count = 3;
   */
  differenceCount: number;

  /**
   * The number of log entries that could not be replayed.
   *
   * @generated from field: int32 error_count = 4;
   */
  errorCount: number;

  /**
   * The date of the oldest log entry replayed.
   *
   * @generated from field: google.type.Date oldest_date = 5;
   */
  oldestDate?: Date;

  /**
   * The date of the newest log entry replayed.
   *
   * @generated from field: google.type.Date newest_date = 6;
   */
  newestDate?: Date;
};

/**
 * Describes the message google.cloud.policysimulator.v1.Replay.ResultsSummary.
 * Use `create(Replay_ResultsSummarySchema)` to create a new message.
 */
export const Replay_ResultsSummarySchema: GenMessage<Replay_ResultsSummary> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 0, 0);

/**
 * The current state of the [Replay][google.cloud.policysimulator.v1.Replay].
 *
 * @generated from enum google.cloud.policysimulator.v1.Replay.State
 */
export enum Replay_State {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The `Replay` has not started yet.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The `Replay` is currently running.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The `Replay` has successfully completed.
   *
   * @generated from enum value: SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * The `Replay` has finished with an error.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,
}

/**
 * Describes the enum google.cloud.policysimulator.v1.Replay.State.
 */
export const Replay_StateSchema: GenEnum<Replay_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_policysimulator_v1_simulator, 0, 0);

/**
 * The result of replaying a single access tuple against a simulated state.
 *
 * @generated from message google.cloud.policysimulator.v1.ReplayResult
 */
export type ReplayResult = Message<"google.cloud.policysimulator.v1.ReplayResult"> & {
  /**
   * The result of replaying the access tuple.
   *
   * @generated from oneof google.cloud.policysimulator.v1.ReplayResult.result
   */
  result: {
    /**
     * The difference between the principal's access under the current
     * (baseline) policies and the principal's access under the proposed
     * (simulated) policies.
     *
     * This field is only included for access tuples that were successfully
     * replayed and had different results under the current policies and the
     * proposed policies.
     *
     * @generated from field: google.cloud.policysimulator.v1.ReplayDiff diff = 5;
     */
    value: ReplayDiff;
    case: "diff";
  } | {
    /**
     * The error that caused the access tuple replay to fail.
     *
     * This field is only included for access tuples that were not replayed
     * successfully.
     *
     * @generated from field: google.rpc.Status error = 6;
     */
    value: Status;
    case: "error";
  } | { case: undefined; value?: undefined };

  /**
   * The resource name of the `ReplayResult`, in the following format:
   *
   * `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`,
   * where `{resource-id}` is the ID of the project, folder, or organization
   * that owns the [Replay][google.cloud.policysimulator.v1.Replay].
   *
   * Example:
   * `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The [Replay][google.cloud.policysimulator.v1.Replay] that the access tuple
   * was included in.
   *
   * @generated from field: string parent = 2;
   */
  parent: string;

  /**
   * The access tuple that was replayed. This field includes information about
   * the principal, resource, and permission that were involved in the access
   * attempt.
   *
   * @generated from field: google.cloud.policysimulator.v1.AccessTuple access_tuple = 3;
   */
  accessTuple?: AccessTuple;

  /**
   * The latest date this access tuple was seen in the logs.
   *
   * @generated from field: google.type.Date last_seen_date = 4;
   */
  lastSeenDate?: Date;
};

/**
 * Describes the message google.cloud.policysimulator.v1.ReplayResult.
 * Use `create(ReplayResultSchema)` to create a new message.
 */
export const ReplayResultSchema: GenMessage<ReplayResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 1);

/**
 * Request message for
 * [Simulator.CreateReplay][google.cloud.policysimulator.v1.Simulator.CreateReplay].
 *
 * @generated from message google.cloud.policysimulator.v1.CreateReplayRequest
 */
export type CreateReplayRequest = Message<"google.cloud.policysimulator.v1.CreateReplayRequest"> & {
  /**
   * Required. The parent resource where this
   * [Replay][google.cloud.policysimulator.v1.Replay] will be created. This
   * resource must be a project, folder, or organization with a location.
   *
   * Example: `projects/my-example-project/locations/global`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The [Replay][google.cloud.policysimulator.v1.Replay] to create.
   * Set `Replay.ReplayConfig` to configure the replay.
   *
   * @generated from field: google.cloud.policysimulator.v1.Replay replay = 2;
   */
  replay?: Replay;
};

/**
 * Describes the message google.cloud.policysimulator.v1.CreateReplayRequest.
 * Use `create(CreateReplayRequestSchema)` to create a new message.
 */
export const CreateReplayRequestSchema: GenMessage<CreateReplayRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 2);

/**
 * Metadata about a Replay operation.
 *
 * @generated from message google.cloud.policysimulator.v1.ReplayOperationMetadata
 */
export type ReplayOperationMetadata = Message<"google.cloud.policysimulator.v1.ReplayOperationMetadata"> & {
  /**
   * Time when the request was received.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message google.cloud.policysimulator.v1.ReplayOperationMetadata.
 * Use `create(ReplayOperationMetadataSchema)` to create a new message.
 */
export const ReplayOperationMetadataSchema: GenMessage<ReplayOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 3);

/**
 * Request message for
 * [Simulator.GetReplay][google.cloud.policysimulator.v1.Simulator.GetReplay].
 *
 * @generated from message google.cloud.policysimulator.v1.GetReplayRequest
 */
export type GetReplayRequest = Message<"google.cloud.policysimulator.v1.GetReplayRequest"> & {
  /**
   * Required. The name of the [Replay][google.cloud.policysimulator.v1.Replay]
   * to retrieve, in the following format:
   *
   * `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`,
   * where `{resource-id}` is the ID of the project, folder, or organization
   * that owns the `Replay`.
   *
   * Example:
   * `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.policysimulator.v1.GetReplayRequest.
 * Use `create(GetReplayRequestSchema)` to create a new message.
 */
export const GetReplayRequestSchema: GenMessage<GetReplayRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 4);

/**
 * Request message for
 * [Simulator.ListReplayResults][google.cloud.policysimulator.v1.Simulator.ListReplayResults].
 *
 * @generated from message google.cloud.policysimulator.v1.ListReplayResultsRequest
 */
export type ListReplayResultsRequest = Message<"google.cloud.policysimulator.v1.ListReplayResultsRequest"> & {
  /**
   * Required. The [Replay][google.cloud.policysimulator.v1.Replay] whose
   * results are listed, in the following format:
   *
   * `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`
   *
   * Example:
   * `projects/my-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of
   * [ReplayResult][google.cloud.policysimulator.v1.ReplayResult] objects to
   * return. Defaults to 5000.
   *
   * The maximum value is 5000; values above 5000 are rounded down to 5000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [Simulator.ListReplayResults][google.cloud.policysimulator.v1.Simulator.ListReplayResults]
   * call. Provide this token to retrieve the next page of results.
   *
   * When paginating, all other parameters provided to
   * [Simulator.ListReplayResults[] must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.policysimulator.v1.ListReplayResultsRequest.
 * Use `create(ListReplayResultsRequestSchema)` to create a new message.
 */
export const ListReplayResultsRequestSchema: GenMessage<ListReplayResultsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 5);

/**
 * Response message for
 * [Simulator.ListReplayResults][google.cloud.policysimulator.v1.Simulator.ListReplayResults].
 *
 * @generated from message google.cloud.policysimulator.v1.ListReplayResultsResponse
 */
export type ListReplayResultsResponse = Message<"google.cloud.policysimulator.v1.ListReplayResultsResponse"> & {
  /**
   * The results of running a [Replay][google.cloud.policysimulator.v1.Replay].
   *
   * @generated from field: repeated google.cloud.policysimulator.v1.ReplayResult replay_results = 1;
   */
  replayResults: ReplayResult[];

  /**
   * A token that you can use to retrieve the next page of
   * [ReplayResult][google.cloud.policysimulator.v1.ReplayResult] objects. If
   * this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.policysimulator.v1.ListReplayResultsResponse.
 * Use `create(ListReplayResultsResponseSchema)` to create a new message.
 */
export const ListReplayResultsResponseSchema: GenMessage<ListReplayResultsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 6);

/**
 * The configuration used for a
 * [Replay][google.cloud.policysimulator.v1.Replay].
 *
 * @generated from message google.cloud.policysimulator.v1.ReplayConfig
 */
export type ReplayConfig = Message<"google.cloud.policysimulator.v1.ReplayConfig"> & {
  /**
   * A mapping of the resources that you want to simulate policies for and the
   * policies that you want to simulate.
   *
   * Keys are the full resource names for the resources. For example,
   * `//cloudresourcemanager.googleapis.com/projects/my-project`.
   * For examples of full resource names for Google Cloud services, see
   * https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
   *
   * Values are [Policy][google.iam.v1.Policy] objects representing the policies
   * that you want to simulate.
   *
   * Replays automatically take into account any IAM policies inherited through
   * the resource hierarchy, and any policies set on descendant resources. You
   * do not need to include these policies in the policy overlay.
   *
   * @generated from field: map<string, google.iam.v1.Policy> policy_overlay = 1;
   */
  policyOverlay: { [key: string]: Policy };

  /**
   * The logs to use as input for the
   * [Replay][google.cloud.policysimulator.v1.Replay].
   *
   * @generated from field: google.cloud.policysimulator.v1.ReplayConfig.LogSource log_source = 2;
   */
  logSource: ReplayConfig_LogSource;
};

/**
 * Describes the message google.cloud.policysimulator.v1.ReplayConfig.
 * Use `create(ReplayConfigSchema)` to create a new message.
 */
export const ReplayConfigSchema: GenMessage<ReplayConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 7);

/**
 * The source of the logs to use for a
 * [Replay][google.cloud.policysimulator.v1.Replay].
 *
 * @generated from enum google.cloud.policysimulator.v1.ReplayConfig.LogSource
 */
export enum ReplayConfig_LogSource {
  /**
   * An unspecified log source.
   * If the log source is unspecified, the
   * [Replay][google.cloud.policysimulator.v1.Replay] defaults to using
   * `RECENT_ACCESSES`.
   *
   * @generated from enum value: LOG_SOURCE_UNSPECIFIED = 0;
   */
  LOG_SOURCE_UNSPECIFIED = 0,

  /**
   * All access logs from the last 90 days. These logs may not include logs
   * from the most recent 7 days.
   *
   * @generated from enum value: RECENT_ACCESSES = 1;
   */
  RECENT_ACCESSES = 1,
}

/**
 * Describes the enum google.cloud.policysimulator.v1.ReplayConfig.LogSource.
 */
export const ReplayConfig_LogSourceSchema: GenEnum<ReplayConfig_LogSource> = /*@__PURE__*/
  enumDesc(file_google_cloud_policysimulator_v1_simulator, 7, 0);

/**
 * The difference between the results of evaluating an access tuple under
 * the current (baseline) policies and under the proposed (simulated) policies.
 * This difference explains how a principal's access could change if the
 * proposed policies were applied.
 *
 * @generated from message google.cloud.policysimulator.v1.ReplayDiff
 */
export type ReplayDiff = Message<"google.cloud.policysimulator.v1.ReplayDiff"> & {
  /**
   * A summary and comparison of the principal's access under the current
   * (baseline) policies and the proposed (simulated) policies for a single
   * access tuple.
   *
   * The evaluation of the principal's access is reported in the
   * [AccessState][google.cloud.policysimulator.v1.AccessState] field.
   *
   * @generated from field: google.cloud.policysimulator.v1.AccessStateDiff access_diff = 2;
   */
  accessDiff?: AccessStateDiff;
};

/**
 * Describes the message google.cloud.policysimulator.v1.ReplayDiff.
 * Use `create(ReplayDiffSchema)` to create a new message.
 */
export const ReplayDiffSchema: GenMessage<ReplayDiff> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 8);

/**
 * A summary and comparison of the principal's access under the current
 * (baseline) policies and the proposed (simulated) policies for a single
 * access tuple.
 *
 * @generated from message google.cloud.policysimulator.v1.AccessStateDiff
 */
export type AccessStateDiff = Message<"google.cloud.policysimulator.v1.AccessStateDiff"> & {
  /**
   * The results of evaluating the access tuple under the current (baseline)
   * policies.
   *
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] couldn't
   * be fully evaluated, this field explains why.
   *
   * @generated from field: google.cloud.policysimulator.v1.ExplainedAccess baseline = 1;
   */
  baseline?: ExplainedAccess;

  /**
   * The results of evaluating the access tuple under the proposed (simulated)
   * policies.
   *
   * If the AccessState couldn't be fully evaluated, this field explains why.
   *
   * @generated from field: google.cloud.policysimulator.v1.ExplainedAccess simulated = 2;
   */
  simulated?: ExplainedAccess;

  /**
   * How the principal's access, specified in the AccessState field, changed
   * between the current (baseline) policies and proposed (simulated) policies.
   *
   * @generated from field: google.cloud.policysimulator.v1.AccessStateDiff.AccessChangeType access_change = 3;
   */
  accessChange: AccessStateDiff_AccessChangeType;
};

/**
 * Describes the message google.cloud.policysimulator.v1.AccessStateDiff.
 * Use `create(AccessStateDiffSchema)` to create a new message.
 */
export const AccessStateDiffSchema: GenMessage<AccessStateDiff> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 9);

/**
 * How the principal's access, specified in the AccessState field, changed
 * between the current (baseline) policies and proposed (simulated) policies.
 *
 * @generated from enum google.cloud.policysimulator.v1.AccessStateDiff.AccessChangeType
 */
export enum AccessStateDiff_AccessChangeType {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: ACCESS_CHANGE_TYPE_UNSPECIFIED = 0;
   */
  ACCESS_CHANGE_TYPE_UNSPECIFIED = 0,

  /**
   * The principal's access did not change.
   * This includes the case where both baseline and simulated are UNKNOWN,
   * but the unknown information is equivalent.
   *
   * @generated from enum value: NO_CHANGE = 1;
   */
  NO_CHANGE = 1,

  /**
   * The principal's access under both the current policies and the proposed
   * policies is `UNKNOWN`, but the unknown information differs between them.
   *
   * @generated from enum value: UNKNOWN_CHANGE = 2;
   */
  UNKNOWN_CHANGE = 2,

  /**
   * The principal had access under the current policies (`GRANTED`), but will
   * no longer have access after the proposed changes (`NOT_GRANTED`).
   *
   * @generated from enum value: ACCESS_REVOKED = 3;
   */
  ACCESS_REVOKED = 3,

  /**
   * The principal did not have access under the current policies
   * (`NOT_GRANTED`), but will have access after the proposed changes
   * (`GRANTED`).
   *
   * @generated from enum value: ACCESS_GAINED = 4;
   */
  ACCESS_GAINED = 4,

  /**
   * This result can occur for the following reasons:
   *
   * * The principal had access under the current policies (`GRANTED`), but
   *   their access after the proposed changes is `UNKNOWN`.
   *
   * * The principal's access under the current policies is `UNKNOWN`, but
   * they
   *   will not have access after the proposed changes (`NOT_GRANTED`).
   *
   * @generated from enum value: ACCESS_MAYBE_REVOKED = 5;
   */
  ACCESS_MAYBE_REVOKED = 5,

  /**
   * This result can occur for the following reasons:
   *
   * * The principal did not have access under the current policies
   *   (`NOT_GRANTED`), but their access after the proposed changes is
   *   `UNKNOWN`.
   *
   * * The principal's access under the current policies is `UNKNOWN`, but
   * they will have access after the proposed changes (`GRANTED`).
   *
   * @generated from enum value: ACCESS_MAYBE_GAINED = 6;
   */
  ACCESS_MAYBE_GAINED = 6,
}

/**
 * Describes the enum google.cloud.policysimulator.v1.AccessStateDiff.AccessChangeType.
 */
export const AccessStateDiff_AccessChangeTypeSchema: GenEnum<AccessStateDiff_AccessChangeType> = /*@__PURE__*/
  enumDesc(file_google_cloud_policysimulator_v1_simulator, 9, 0);

/**
 * Details about how a set of policies, listed in
 * [ExplainedPolicy][google.cloud.policysimulator.v1.ExplainedPolicy], resulted
 * in a certain [AccessState][google.cloud.policysimulator.v1.AccessState] when
 * replaying an access tuple.
 *
 * @generated from message google.cloud.policysimulator.v1.ExplainedAccess
 */
export type ExplainedAccess = Message<"google.cloud.policysimulator.v1.ExplainedAccess"> & {
  /**
   * Whether the principal in the access tuple has permission to access the
   * resource in the access tuple under the given policies.
   *
   * @generated from field: google.cloud.policysimulator.v1.AccessState access_state = 1;
   */
  accessState: AccessState;

  /**
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains the policies that led to that result.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   *
   * @generated from field: repeated google.cloud.policysimulator.v1.ExplainedPolicy policies = 2;
   */
  policies: ExplainedPolicy[];

  /**
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains a list of errors explaining why the result
   * is `UNKNOWN`.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   *
   * @generated from field: repeated google.rpc.Status errors = 3;
   */
  errors: Status[];
};

/**
 * Describes the message google.cloud.policysimulator.v1.ExplainedAccess.
 * Use `create(ExplainedAccessSchema)` to create a new message.
 */
export const ExplainedAccessSchema: GenMessage<ExplainedAccess> = /*@__PURE__*/
  messageDesc(file_google_cloud_policysimulator_v1_simulator, 10);

/**
 * Policy Simulator API service.
 *
 * Policy Simulator is a collection of endpoints for creating, running, and
 * viewing a [Replay][google.cloud.policysimulator.v1.Replay]. A
 * [Replay][google.cloud.policysimulator.v1.Replay] is a type of simulation that
 * lets you see how your principals' access to resources might change if you
 * changed your IAM policy.
 *
 * During a [Replay][google.cloud.policysimulator.v1.Replay], Policy Simulator
 * re-evaluates, or replays, past access attempts under both the current policy
 * and  your proposed policy, and compares those results to determine how your
 * principals' access might change under the proposed policy.
 *
 * @generated from service google.cloud.policysimulator.v1.Simulator
 */
export const Simulator: GenService<{
  /**
   * Gets the specified [Replay][google.cloud.policysimulator.v1.Replay]. Each
   * `Replay` is available for at least 7 days.
   *
   * @generated from rpc google.cloud.policysimulator.v1.Simulator.GetReplay
   */
  getReplay: {
    methodKind: "unary";
    input: typeof GetReplayRequestSchema;
    output: typeof ReplaySchema;
  },
  /**
   * Creates and starts a [Replay][google.cloud.policysimulator.v1.Replay] using
   * the given [ReplayConfig][google.cloud.policysimulator.v1.ReplayConfig].
   *
   * @generated from rpc google.cloud.policysimulator.v1.Simulator.CreateReplay
   */
  createReplay: {
    methodKind: "unary";
    input: typeof CreateReplayRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists the results of running a
   * [Replay][google.cloud.policysimulator.v1.Replay].
   *
   * @generated from rpc google.cloud.policysimulator.v1.Simulator.ListReplayResults
   */
  listReplayResults: {
    methodKind: "unary";
    input: typeof ListReplayResultsRequestSchema;
    output: typeof ListReplayResultsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_policysimulator_v1_simulator, 0);

