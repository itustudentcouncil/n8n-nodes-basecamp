// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/domains/v1alpha2/domains.proto (package google.cloud.domains.v1alpha2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Money } from "../../../type/money_pb";
import { file_google_type_money } from "../../../type/money_pb";
import type { PostalAddress } from "../../../type/postal_address_pb";
import { file_google_type_postal_address } from "../../../type/postal_address_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/domains/v1alpha2/domains.proto.
 */
export const file_google_cloud_domains_v1alpha2_domains: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_type_money, file_google_type_postal_address]);

/**
 * The `Registration` resource facilitates managing and configuring domain name
 * registrations.
 *
 * There are several ways to create a new `Registration` resource:
 *
 * To create a new `Registration` resource, find a suitable domain name by
 * calling the `SearchDomains` method with a query to see available domain name
 * options. After choosing a name, call `RetrieveRegisterParameters` to
 * ensure availability and obtain information like pricing, which is needed to
 * build a call to `RegisterDomain`.
 *
 * Another way to create a new `Registration` is to transfer an existing
 * domain from another registrar. First, go to the current registrar to unlock
 * the domain for transfer and retrieve the domain's transfer authorization
 * code. Then call `RetrieveTransferParameters` to confirm that the domain is
 * unlocked and to get values needed to build a call to `TransferDomain`.
 *
 * @generated from message google.cloud.domains.v1alpha2.Registration
 */
export type Registration = Message<"google.cloud.domains.v1alpha2.Registration"> & {
  /**
   * Output only. Name of the `Registration` resource, in the format
   * `projects/*\/locations/*\/registrations/<domain_name>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Immutable. The domain name. Unicode domain names must be expressed in Punycode format.
   *
   * @generated from field: string domain_name = 2;
   */
  domainName: string;

  /**
   * Output only. The creation timestamp of the `Registration` resource.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. The expiration timestamp of the `Registration`.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 6;
   */
  expireTime?: Timestamp;

  /**
   * Output only. The state of the `Registration`
   *
   * @generated from field: google.cloud.domains.v1alpha2.Registration.State state = 7;
   */
  state: Registration_State;

  /**
   * Output only. The set of issues with the `Registration` that require attention.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.Registration.Issue issues = 8;
   */
  issues: Registration_Issue[];

  /**
   * Set of labels associated with the `Registration`.
   *
   * @generated from field: map<string, string> labels = 9;
   */
  labels: { [key: string]: string };

  /**
   * Settings for management of the `Registration`, including renewal, billing,
   * and transfer. You cannot update these with the `UpdateRegistration`
   * method. To update these settings, use the `ConfigureManagementSettings`
   * method.
   *
   * @generated from field: google.cloud.domains.v1alpha2.ManagementSettings management_settings = 10;
   */
  managementSettings?: ManagementSettings;

  /**
   * Settings controlling the DNS configuration of the `Registration`. You
   * cannot update these with the `UpdateRegistration` method. To update these
   * settings, use the `ConfigureDnsSettings` method.
   *
   * @generated from field: google.cloud.domains.v1alpha2.DnsSettings dns_settings = 11;
   */
  dnsSettings?: DnsSettings;

  /**
   * Required. Settings for contact information linked to the `Registration`. You cannot
   * update these with the `UpdateRegistration` method. To update these
   * settings, use the `ConfigureContactSettings` method.
   *
   * @generated from field: google.cloud.domains.v1alpha2.ContactSettings contact_settings = 12;
   */
  contactSettings?: ContactSettings;

  /**
   * Output only. Pending contact settings for the `Registration`. Updates to the
   * `contact_settings` field that change its `registrant_contact` or `privacy`
   * fields require email confirmation by the `registrant_contact`
   * before taking effect. This field is set only if there are pending updates
   * to the `contact_settings` that have not been confirmed. To confirm the
   * changes, the `registrant_contact` must follow the instructions in the
   * email they receive.
   *
   * @generated from field: google.cloud.domains.v1alpha2.ContactSettings pending_contact_settings = 13;
   */
  pendingContactSettings?: ContactSettings;

  /**
   * Output only. Set of options for the `contact_settings.privacy` field that this
   * `Registration` supports.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.ContactPrivacy supported_privacy = 14;
   */
  supportedPrivacy: ContactPrivacy[];
};

/**
 * Describes the message google.cloud.domains.v1alpha2.Registration.
 * Use `create(RegistrationSchema)` to create a new message.
 */
export const RegistrationSchema: GenMessage<Registration> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 0);

/**
 * Possible states of a `Registration`.
 *
 * @generated from enum google.cloud.domains.v1alpha2.Registration.State
 */
export enum Registration_State {
  /**
   * The state is undefined.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The domain is being registered.
   *
   * @generated from enum value: REGISTRATION_PENDING = 1;
   */
  REGISTRATION_PENDING = 1,

  /**
   * The domain registration failed. You can delete resources in this state
   * to allow registration to be retried.
   *
   * @generated from enum value: REGISTRATION_FAILED = 2;
   */
  REGISTRATION_FAILED = 2,

  /**
   * The domain is being transferred from another registrar to Cloud Domains.
   *
   * @generated from enum value: TRANSFER_PENDING = 3;
   */
  TRANSFER_PENDING = 3,

  /**
   * The attempt to transfer the domain from another registrar to
   * Cloud Domains failed. You can delete resources in this state and retry
   * the transfer.
   *
   * @generated from enum value: TRANSFER_FAILED = 4;
   */
  TRANSFER_FAILED = 4,

  /**
   * The domain is registered and operational. The domain renews automatically
   * as long as it remains in this state.
   *
   * @generated from enum value: ACTIVE = 6;
   */
  ACTIVE = 6,

  /**
   * The domain is suspended and inoperative. For more details, see the
   * `issues` field.
   *
   * @generated from enum value: SUSPENDED = 7;
   */
  SUSPENDED = 7,

  /**
   * The domain is no longer managed with Cloud Domains. It may have been
   * transferred to another registrar or exported for management in
   * [Google Domains](https://domains.google/). You can no longer update it
   * with this API, and information shown about it may be stale. Domains in
   * this state are not automatically renewed by Cloud Domains.
   *
   * @generated from enum value: EXPORTED = 8;
   */
  EXPORTED = 8,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.Registration.State.
 */
export const Registration_StateSchema: GenEnum<Registration_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 0, 0);

/**
 * Possible issues with a `Registration` that require attention.
 *
 * @generated from enum google.cloud.domains.v1alpha2.Registration.Issue
 */
export enum Registration_Issue {
  /**
   * The issue is undefined.
   *
   * @generated from enum value: ISSUE_UNSPECIFIED = 0;
   */
  ISSUE_UNSPECIFIED = 0,

  /**
   * Contact the Cloud Support team to resolve a problem with this domain.
   *
   * @generated from enum value: CONTACT_SUPPORT = 1;
   */
  CONTACT_SUPPORT = 1,

  /**
   * [ICANN](https://icann.org/) requires verification of the email address
   * in the `Registration`'s `contact_settings.registrant_contact` field. To
   * verify the email address, follow the
   * instructions in the email the `registrant_contact` receives following
   * registration. If you do not complete email verification within
   * 15 days of registration, the domain is suspended. To resend the
   * verification email, call ConfigureContactSettings and provide the current
   * `registrant_contact.email`.
   *
   * @generated from enum value: UNVERIFIED_EMAIL = 2;
   */
  UNVERIFIED_EMAIL = 2,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.Registration.Issue.
 */
export const Registration_IssueSchema: GenEnum<Registration_Issue> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 0, 1);

/**
 * Defines renewal, billing, and transfer settings for a `Registration`.
 *
 * @generated from message google.cloud.domains.v1alpha2.ManagementSettings
 */
export type ManagementSettings = Message<"google.cloud.domains.v1alpha2.ManagementSettings"> & {
  /**
   * Output only. The renewal method for this `Registration`.
   *
   * @generated from field: google.cloud.domains.v1alpha2.ManagementSettings.RenewalMethod renewal_method = 3;
   */
  renewalMethod: ManagementSettings_RenewalMethod;

  /**
   * Controls whether the domain can be transferred to another registrar.
   *
   * @generated from field: google.cloud.domains.v1alpha2.TransferLockState transfer_lock_state = 4;
   */
  transferLockState: TransferLockState;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.ManagementSettings.
 * Use `create(ManagementSettingsSchema)` to create a new message.
 */
export const ManagementSettingsSchema: GenMessage<ManagementSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 1);

/**
 * Defines how the `Registration` is renewed.
 *
 * @generated from enum google.cloud.domains.v1alpha2.ManagementSettings.RenewalMethod
 */
export enum ManagementSettings_RenewalMethod {
  /**
   * The renewal method is undefined.
   *
   * @generated from enum value: RENEWAL_METHOD_UNSPECIFIED = 0;
   */
  RENEWAL_METHOD_UNSPECIFIED = 0,

  /**
   * The domain is automatically renewed each year .
   *
   * To disable automatic renewals, delete the resource by calling
   * `DeleteRegistration` or export it by calling `ExportRegistration`.
   *
   * @generated from enum value: AUTOMATIC_RENEWAL = 1;
   */
  AUTOMATIC_RENEWAL = 1,

  /**
   * The domain must be explicitly renewed each year before its
   * `expire_time`. This option is only available when the `Registration`
   * is in state `EXPORTED`.
   *
   * To manage the domain's current billing and
   * renewal settings, go to [Google Domains](https://domains.google/).
   *
   * @generated from enum value: MANUAL_RENEWAL = 2;
   */
  MANUAL_RENEWAL = 2,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.ManagementSettings.RenewalMethod.
 */
export const ManagementSettings_RenewalMethodSchema: GenEnum<ManagementSettings_RenewalMethod> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 1, 0);

/**
 * Defines the DNS configuration of a `Registration`, including name servers,
 * DNSSEC, and glue records.
 *
 * @generated from message google.cloud.domains.v1alpha2.DnsSettings
 */
export type DnsSettings = Message<"google.cloud.domains.v1alpha2.DnsSettings"> & {
  /**
   * The DNS provider of the registration.
   *
   * @generated from oneof google.cloud.domains.v1alpha2.DnsSettings.dns_provider
   */
  dnsProvider: {
    /**
     * An arbitrary DNS provider identified by its name servers.
     *
     * @generated from field: google.cloud.domains.v1alpha2.DnsSettings.CustomDns custom_dns = 1;
     */
    value: DnsSettings_CustomDns;
    case: "customDns";
  } | {
    /**
     * The free DNS zone provided by
     * [Google Domains](https://domains.google/).
     *
     * @generated from field: google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns google_domains_dns = 2;
     */
    value: DnsSettings_GoogleDomainsDns;
    case: "googleDomainsDns";
  } | { case: undefined; value?: undefined };

  /**
   * The list of glue records for this `Registration`. Commonly empty.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.DnsSettings.GlueRecord glue_records = 4;
   */
  glueRecords: DnsSettings_GlueRecord[];
};

/**
 * Describes the message google.cloud.domains.v1alpha2.DnsSettings.
 * Use `create(DnsSettingsSchema)` to create a new message.
 */
export const DnsSettingsSchema: GenMessage<DnsSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 2);

/**
 * Configuration for an arbitrary DNS provider.
 *
 * @generated from message google.cloud.domains.v1alpha2.DnsSettings.CustomDns
 */
export type DnsSettings_CustomDns = Message<"google.cloud.domains.v1alpha2.DnsSettings.CustomDns"> & {
  /**
   * Required. A list of name servers that store the DNS zone for this domain. Each name
   * server is a domain name, with Unicode domain names expressed in
   * Punycode format.
   *
   * @generated from field: repeated string name_servers = 1;
   */
  nameServers: string[];

  /**
   * The list of DS records for this domain, which are used to enable DNSSEC.
   * The domain's DNS provider can provide the values to set here. If this
   * field is empty, DNSSEC is disabled.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.DnsSettings.DsRecord ds_records = 2;
   */
  dsRecords: DnsSettings_DsRecord[];
};

/**
 * Describes the message google.cloud.domains.v1alpha2.DnsSettings.CustomDns.
 * Use `create(DnsSettings_CustomDnsSchema)` to create a new message.
 */
export const DnsSettings_CustomDnsSchema: GenMessage<DnsSettings_CustomDns> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 2, 0);

/**
 * Configuration for using the free DNS zone provided by Google Domains as a
 * `Registration`'s `dns_provider`. You cannot configure the DNS zone itself
 * using the API. To configure the DNS zone, go to
 * [Google Domains](https://domains.google/).
 *
 * @generated from message google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
 */
export type DnsSettings_GoogleDomainsDns = Message<"google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns"> & {
  /**
   * Output only. A list of name servers that store the DNS zone for this domain. Each name
   * server is a domain name, with Unicode domain names expressed in
   * Punycode format. This field is automatically populated with the name
   * servers assigned to the Google Domains DNS zone.
   *
   * @generated from field: repeated string name_servers = 1;
   */
  nameServers: string[];

  /**
   * Required. The state of DS records for this domain. Used to enable or disable
   * automatic DNSSEC.
   *
   * @generated from field: google.cloud.domains.v1alpha2.DnsSettings.DsState ds_state = 2;
   */
  dsState: DnsSettings_DsState;

  /**
   * Output only. The list of DS records published for this domain. The list is
   * automatically populated when `ds_state` is `DS_RECORDS_PUBLISHED`,
   * otherwise it remains empty.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.DnsSettings.DsRecord ds_records = 3;
   */
  dsRecords: DnsSettings_DsRecord[];
};

/**
 * Describes the message google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.
 * Use `create(DnsSettings_GoogleDomainsDnsSchema)` to create a new message.
 */
export const DnsSettings_GoogleDomainsDnsSchema: GenMessage<DnsSettings_GoogleDomainsDns> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 2, 1);

/**
 * Defines a Delegation Signer (DS) record, which is needed to enable DNSSEC
 * for a domain. It contains a digest (hash) of a DNSKEY record that must be
 * present in the domain's DNS zone.
 *
 * @generated from message google.cloud.domains.v1alpha2.DnsSettings.DsRecord
 */
export type DnsSettings_DsRecord = Message<"google.cloud.domains.v1alpha2.DnsSettings.DsRecord"> & {
  /**
   * The key tag of the record. Must be set in range 0 -- 65535.
   *
   * @generated from field: int32 key_tag = 1;
   */
  keyTag: number;

  /**
   * The algorithm used to generate the referenced DNSKEY.
   *
   * @generated from field: google.cloud.domains.v1alpha2.DnsSettings.DsRecord.Algorithm algorithm = 2;
   */
  algorithm: DnsSettings_DsRecord_Algorithm;

  /**
   * The hash function used to generate the digest of the referenced DNSKEY.
   *
   * @generated from field: google.cloud.domains.v1alpha2.DnsSettings.DsRecord.DigestType digest_type = 3;
   */
  digestType: DnsSettings_DsRecord_DigestType;

  /**
   * The digest generated from the referenced DNSKEY.
   *
   * @generated from field: string digest = 4;
   */
  digest: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.DnsSettings.DsRecord.
 * Use `create(DnsSettings_DsRecordSchema)` to create a new message.
 */
export const DnsSettings_DsRecordSchema: GenMessage<DnsSettings_DsRecord> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 2, 2);

/**
 * List of algorithms used to create a DNSKEY. Certain
 * algorithms are not supported for particular domains.
 *
 * @generated from enum google.cloud.domains.v1alpha2.DnsSettings.DsRecord.Algorithm
 */
export enum DnsSettings_DsRecord_Algorithm {
  /**
   * The algorithm is unspecified.
   *
   * @generated from enum value: ALGORITHM_UNSPECIFIED = 0;
   */
  ALGORITHM_UNSPECIFIED = 0,

  /**
   * RSA/MD5. Cannot be used for new deployments.
   *
   * @generated from enum value: RSAMD5 = 1;
   */
  RSAMD5 = 1,

  /**
   * Diffie-Hellman. Cannot be used for new deployments.
   *
   * @generated from enum value: DH = 2;
   */
  DH = 2,

  /**
   * DSA/SHA1. Not recommended for new deployments.
   *
   * @generated from enum value: DSA = 3;
   */
  DSA = 3,

  /**
   * ECC. Not recommended for new deployments.
   *
   * @generated from enum value: ECC = 4;
   */
  ECC = 4,

  /**
   * RSA/SHA-1. Not recommended for new deployments.
   *
   * @generated from enum value: RSASHA1 = 5;
   */
  RSASHA1 = 5,

  /**
   * DSA-NSEC3-SHA1. Not recommended for new deployments.
   *
   * @generated from enum value: DSANSEC3SHA1 = 6;
   */
  DSANSEC3SHA1 = 6,

  /**
   * RSA/SHA1-NSEC3-SHA1. Not recommended for new deployments.
   *
   * @generated from enum value: RSASHA1NSEC3SHA1 = 7;
   */
  RSASHA1NSEC3SHA1 = 7,

  /**
   * RSA/SHA-256.
   *
   * @generated from enum value: RSASHA256 = 8;
   */
  RSASHA256 = 8,

  /**
   * RSA/SHA-512.
   *
   * @generated from enum value: RSASHA512 = 10;
   */
  RSASHA512 = 10,

  /**
   * GOST R 34.10-2001.
   *
   * @generated from enum value: ECCGOST = 12;
   */
  ECCGOST = 12,

  /**
   * ECDSA Curve P-256 with SHA-256.
   *
   * @generated from enum value: ECDSAP256SHA256 = 13;
   */
  ECDSAP256SHA256 = 13,

  /**
   * ECDSA Curve P-384 with SHA-384.
   *
   * @generated from enum value: ECDSAP384SHA384 = 14;
   */
  ECDSAP384SHA384 = 14,

  /**
   * Ed25519.
   *
   * @generated from enum value: ED25519 = 15;
   */
  ED25519 = 15,

  /**
   * Ed448.
   *
   * @generated from enum value: ED448 = 16;
   */
  ED448 = 16,

  /**
   * Reserved for Indirect Keys. Cannot be used for new deployments.
   *
   * @generated from enum value: INDIRECT = 252;
   */
  INDIRECT = 252,

  /**
   * Private algorithm. Cannot be used for new deployments.
   *
   * @generated from enum value: PRIVATEDNS = 253;
   */
  PRIVATEDNS = 253,

  /**
   * Private algorithm OID. Cannot be used for new deployments.
   *
   * @generated from enum value: PRIVATEOID = 254;
   */
  PRIVATEOID = 254,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.DnsSettings.DsRecord.Algorithm.
 */
export const DnsSettings_DsRecord_AlgorithmSchema: GenEnum<DnsSettings_DsRecord_Algorithm> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 2, 2, 0);

/**
 * List of hash functions that may have been used to generate a digest of a
 * DNSKEY.
 *
 * @generated from enum google.cloud.domains.v1alpha2.DnsSettings.DsRecord.DigestType
 */
export enum DnsSettings_DsRecord_DigestType {
  /**
   * The DigestType is unspecified.
   *
   * @generated from enum value: DIGEST_TYPE_UNSPECIFIED = 0;
   */
  DIGEST_TYPE_UNSPECIFIED = 0,

  /**
   * SHA-1. Not recommended for new deployments.
   *
   * @generated from enum value: SHA1 = 1;
   */
  SHA1 = 1,

  /**
   * SHA-256.
   *
   * @generated from enum value: SHA256 = 2;
   */
  SHA256 = 2,

  /**
   * GOST R 34.11-94.
   *
   * @generated from enum value: GOST3411 = 3;
   */
  GOST3411 = 3,

  /**
   * SHA-384.
   *
   * @generated from enum value: SHA384 = 4;
   */
  SHA384 = 4,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.DnsSettings.DsRecord.DigestType.
 */
export const DnsSettings_DsRecord_DigestTypeSchema: GenEnum<DnsSettings_DsRecord_DigestType> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 2, 2, 1);

/**
 * Defines a host on your domain that is a DNS name server for your domain
 * and/or other domains. Glue records are a way of making the IP address of a
 * name server known, even when it serves DNS queries for its parent domain.
 * For example, when `ns.example.com` is a name server for `example.com`, the
 * host `ns.example.com` must have a glue record to break the circular DNS
 * reference.
 *
 * @generated from message google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
 */
export type DnsSettings_GlueRecord = Message<"google.cloud.domains.v1alpha2.DnsSettings.GlueRecord"> & {
  /**
   * Required. Domain name of the host in Punycode format.
   *
   * @generated from field: string host_name = 1;
   */
  hostName: string;

  /**
   * List of IPv4 addresses corresponding to this host in the standard decimal
   * format (e.g. `198.51.100.1`). At least one of `ipv4_address` and
   * `ipv6_address` must be set.
   *
   * @generated from field: repeated string ipv4_addresses = 2;
   */
  ipv4Addresses: string[];

  /**
   * List of IPv6 addresses corresponding to this host in the standard
   * hexadecimal format (e.g. `2001:db8::`). At least one of
   * `ipv4_address` and `ipv6_address` must be set.
   *
   * @generated from field: repeated string ipv6_addresses = 3;
   */
  ipv6Addresses: string[];
};

/**
 * Describes the message google.cloud.domains.v1alpha2.DnsSettings.GlueRecord.
 * Use `create(DnsSettings_GlueRecordSchema)` to create a new message.
 */
export const DnsSettings_GlueRecordSchema: GenMessage<DnsSettings_GlueRecord> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 2, 3);

/**
 * The publication state of DS records for a `Registration`.
 *
 * @generated from enum google.cloud.domains.v1alpha2.DnsSettings.DsState
 */
export enum DnsSettings_DsState {
  /**
   * DS state is unspecified.
   *
   * @generated from enum value: DS_STATE_UNSPECIFIED = 0;
   */
  DS_STATE_UNSPECIFIED = 0,

  /**
   * DNSSEC is disabled for this domain. No DS records for this domain are
   * published in the parent DNS zone.
   *
   * @generated from enum value: DS_RECORDS_UNPUBLISHED = 1;
   */
  DS_RECORDS_UNPUBLISHED = 1,

  /**
   * DNSSEC is enabled for this domain. Appropriate DS records for this domain
   * are published in the parent DNS zone. This option is valid only if the
   * DNS zone referenced in the `Registration`'s `dns_provider` field is
   * already DNSSEC-signed.
   *
   * @generated from enum value: DS_RECORDS_PUBLISHED = 2;
   */
  DS_RECORDS_PUBLISHED = 2,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.DnsSettings.DsState.
 */
export const DnsSettings_DsStateSchema: GenEnum<DnsSettings_DsState> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 2, 0);

/**
 * Defines the contact information associated with a `Registration`.
 *
 * [ICANN](https://icann.org/) requires all domain names to have associated
 * contact information. The `registrant_contact` is considered the
 * domain's legal owner, and often the other contacts are identical.
 *
 * @generated from message google.cloud.domains.v1alpha2.ContactSettings
 */
export type ContactSettings = Message<"google.cloud.domains.v1alpha2.ContactSettings"> & {
  /**
   * Required. Privacy setting for the contacts associated with the `Registration`.
   *
   * @generated from field: google.cloud.domains.v1alpha2.ContactPrivacy privacy = 1;
   */
  privacy: ContactPrivacy;

  /**
   * Required. The registrant contact for the `Registration`.
   *
   * *Caution: Anyone with access to this email address, phone number,
   * and/or postal address can take control of the domain.*
   *
   * *Warning: For new `Registration`s, the registrant receives an email
   * confirmation that they must complete within 15 days to avoid domain
   * suspension.*
   *
   * @generated from field: google.cloud.domains.v1alpha2.ContactSettings.Contact registrant_contact = 2;
   */
  registrantContact?: ContactSettings_Contact;

  /**
   * Required. The administrative contact for the `Registration`.
   *
   * @generated from field: google.cloud.domains.v1alpha2.ContactSettings.Contact admin_contact = 3;
   */
  adminContact?: ContactSettings_Contact;

  /**
   * Required. The technical contact for the `Registration`.
   *
   * @generated from field: google.cloud.domains.v1alpha2.ContactSettings.Contact technical_contact = 4;
   */
  technicalContact?: ContactSettings_Contact;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.ContactSettings.
 * Use `create(ContactSettingsSchema)` to create a new message.
 */
export const ContactSettingsSchema: GenMessage<ContactSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 3);

/**
 * Details required for a contact associated with a `Registration`.
 *
 * @generated from message google.cloud.domains.v1alpha2.ContactSettings.Contact
 */
export type ContactSettings_Contact = Message<"google.cloud.domains.v1alpha2.ContactSettings.Contact"> & {
  /**
   * Required. Postal address of the contact.
   *
   * @generated from field: google.type.PostalAddress postal_address = 1;
   */
  postalAddress?: PostalAddress;

  /**
   * Required. Email address of the contact.
   *
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * Required. Phone number of the contact in international format. For example,
   * `"+1-800-555-0123"`.
   *
   * @generated from field: string phone_number = 3;
   */
  phoneNumber: string;

  /**
   * Fax number of the contact in international format. For example,
   * `"+1-800-555-0123"`.
   *
   * @generated from field: string fax_number = 4;
   */
  faxNumber: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.ContactSettings.Contact.
 * Use `create(ContactSettings_ContactSchema)` to create a new message.
 */
export const ContactSettings_ContactSchema: GenMessage<ContactSettings_Contact> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 3, 0);

/**
 * Request for the `SearchDomains` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.SearchDomainsRequest
 */
export type SearchDomainsRequest = Message<"google.cloud.domains.v1alpha2.SearchDomainsRequest"> & {
  /**
   * Required. String used to search for available domain names.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * Required. The location. Must be in the format `projects/*\/locations/*`.
   *
   * @generated from field: string location = 2;
   */
  location: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.SearchDomainsRequest.
 * Use `create(SearchDomainsRequestSchema)` to create a new message.
 */
export const SearchDomainsRequestSchema: GenMessage<SearchDomainsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 4);

/**
 * Response for the `SearchDomains` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.SearchDomainsResponse
 */
export type SearchDomainsResponse = Message<"google.cloud.domains.v1alpha2.SearchDomainsResponse"> & {
  /**
   * Results of the domain name search.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.RegisterParameters register_parameters = 1;
   */
  registerParameters: RegisterParameters[];
};

/**
 * Describes the message google.cloud.domains.v1alpha2.SearchDomainsResponse.
 * Use `create(SearchDomainsResponseSchema)` to create a new message.
 */
export const SearchDomainsResponseSchema: GenMessage<SearchDomainsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 5);

/**
 * Request for the `RetrieveRegisterParameters` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
 */
export type RetrieveRegisterParametersRequest = Message<"google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest"> & {
  /**
   * Required. The domain name. Unicode domain names must be expressed in Punycode format.
   *
   * @generated from field: string domain_name = 1;
   */
  domainName: string;

  /**
   * Required. The location. Must be in the format `projects/*\/locations/*`.
   *
   * @generated from field: string location = 2;
   */
  location: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest.
 * Use `create(RetrieveRegisterParametersRequestSchema)` to create a new message.
 */
export const RetrieveRegisterParametersRequestSchema: GenMessage<RetrieveRegisterParametersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 6);

/**
 * Response for the `RetrieveRegisterParameters` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
 */
export type RetrieveRegisterParametersResponse = Message<"google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse"> & {
  /**
   * Parameters to use when calling the `RegisterDomain` method.
   *
   * @generated from field: google.cloud.domains.v1alpha2.RegisterParameters register_parameters = 1;
   */
  registerParameters?: RegisterParameters;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse.
 * Use `create(RetrieveRegisterParametersResponseSchema)` to create a new message.
 */
export const RetrieveRegisterParametersResponseSchema: GenMessage<RetrieveRegisterParametersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 7);

/**
 * Request for the `RegisterDomain` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.RegisterDomainRequest
 */
export type RegisterDomainRequest = Message<"google.cloud.domains.v1alpha2.RegisterDomainRequest"> & {
  /**
   * Required. The parent resource of the `Registration`. Must be in the
   * format `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The complete `Registration` resource to be created.
   *
   * @generated from field: google.cloud.domains.v1alpha2.Registration registration = 2;
   */
  registration?: Registration;

  /**
   * The list of domain notices that you acknowledge. Call
   * `RetrieveRegisterParameters` to see the notices that need acknowledgement.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.DomainNotice domain_notices = 3;
   */
  domainNotices: DomainNotice[];

  /**
   * The list of contact notices that the caller acknowledges. The notices
   * needed here depend on the values specified in
   * `registration.contact_settings`.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.ContactNotice contact_notices = 4;
   */
  contactNotices: ContactNotice[];

  /**
   * Required. Yearly price to register or renew the domain.
   * The value that should be put here can be obtained from
   * RetrieveRegisterParameters or SearchDomains calls.
   *
   * @generated from field: google.type.Money yearly_price = 5;
   */
  yearlyPrice?: Money;

  /**
   * When true, only validation is performed, without actually registering
   * the domain. Follows:
   * https://cloud.google.com/apis/design/design_patterns#request_validation
   *
   * @generated from field: bool validate_only = 6;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.RegisterDomainRequest.
 * Use `create(RegisterDomainRequestSchema)` to create a new message.
 */
export const RegisterDomainRequestSchema: GenMessage<RegisterDomainRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 8);

/**
 * Request for the `RetrieveTransferParameters` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
 */
export type RetrieveTransferParametersRequest = Message<"google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest"> & {
  /**
   * Required. The domain name. Unicode domain names must be expressed in Punycode format.
   *
   * @generated from field: string domain_name = 1;
   */
  domainName: string;

  /**
   * Required. The location. Must be in the format `projects/*\/locations/*`.
   *
   * @generated from field: string location = 2;
   */
  location: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest.
 * Use `create(RetrieveTransferParametersRequestSchema)` to create a new message.
 */
export const RetrieveTransferParametersRequestSchema: GenMessage<RetrieveTransferParametersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 9);

/**
 * Response for the `RetrieveTransferParameters` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
 */
export type RetrieveTransferParametersResponse = Message<"google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse"> & {
  /**
   * Parameters to use when calling the `TransferDomain` method.
   *
   * @generated from field: google.cloud.domains.v1alpha2.TransferParameters transfer_parameters = 1;
   */
  transferParameters?: TransferParameters;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse.
 * Use `create(RetrieveTransferParametersResponseSchema)` to create a new message.
 */
export const RetrieveTransferParametersResponseSchema: GenMessage<RetrieveTransferParametersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 10);

/**
 * Request for the `TransferDomain` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.TransferDomainRequest
 */
export type TransferDomainRequest = Message<"google.cloud.domains.v1alpha2.TransferDomainRequest"> & {
  /**
   * Required. The parent resource of the `Registration`. Must be in the
   * format `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The complete `Registration` resource to be created.
   *
   * You can leave `registration.dns_settings` unset to import the
   * domain's current DNS configuration from its current registrar. Use this
   * option only if you are sure that the domain's current DNS service
   * does not cease upon transfer, as is often the case for DNS services
   * provided for free by the registrar.
   *
   * @generated from field: google.cloud.domains.v1alpha2.Registration registration = 2;
   */
  registration?: Registration;

  /**
   * The list of contact notices that you acknowledge. The notices
   * needed here depend on the values specified in
   * `registration.contact_settings`.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.ContactNotice contact_notices = 3;
   */
  contactNotices: ContactNotice[];

  /**
   * Required. Acknowledgement of the price to transfer or renew the domain for one year.
   * Call `RetrieveTransferParameters` to obtain the price, which you must
   * acknowledge.
   *
   * @generated from field: google.type.Money yearly_price = 4;
   */
  yearlyPrice?: Money;

  /**
   * The domain's transfer authorization code. You can obtain this from the
   * domain's current registrar.
   *
   * @generated from field: google.cloud.domains.v1alpha2.AuthorizationCode authorization_code = 5;
   */
  authorizationCode?: AuthorizationCode;

  /**
   * Validate the request without actually transferring the domain.
   *
   * @generated from field: bool validate_only = 6;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.TransferDomainRequest.
 * Use `create(TransferDomainRequestSchema)` to create a new message.
 */
export const TransferDomainRequestSchema: GenMessage<TransferDomainRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 11);

/**
 * Request for the `ListRegistrations` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.ListRegistrationsRequest
 */
export type ListRegistrationsRequest = Message<"google.cloud.domains.v1alpha2.ListRegistrationsRequest"> & {
  /**
   * Required. The project and location from which to list `Registration`s, specified in
   * the format `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum number of results to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * When set to the `next_page_token` from a prior response, provides the next
   * page of results.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter expression to restrict the `Registration`s returned.
   *
   * The expression must specify the field name, a comparison operator, and the
   * value that you want to use for filtering. The value must be a string, a
   * number, a boolean, or an enum value. The comparison operator should be one
   * of =, !=, >, <, >=, <=, or : for prefix or wildcard matches.
   *
   * For example, to filter to a specific domain name, use an expression like
   * `domainName="example.com"`. You can also check for the existence of a
   * field; for example, to find domains using custom DNS settings, use an
   * expression like `dnsSettings.customDns:*`.
   *
   * You can also create compound filters by combining expressions with the
   * `AND` and `OR` operators. For example, to find domains that are suspended
   * or have specific issues flagged, use an expression like
   * `(state=SUSPENDED) OR (issue:*)`.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.ListRegistrationsRequest.
 * Use `create(ListRegistrationsRequestSchema)` to create a new message.
 */
export const ListRegistrationsRequestSchema: GenMessage<ListRegistrationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 12);

/**
 * Response for the `ListRegistrations` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.ListRegistrationsResponse
 */
export type ListRegistrationsResponse = Message<"google.cloud.domains.v1alpha2.ListRegistrationsResponse"> & {
  /**
   * A list of `Registration`s.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.Registration registrations = 1;
   */
  registrations: Registration[];

  /**
   * When present, there are more results to retrieve. Set `page_token` to this
   * value on a subsequent call to get the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.ListRegistrationsResponse.
 * Use `create(ListRegistrationsResponseSchema)` to create a new message.
 */
export const ListRegistrationsResponseSchema: GenMessage<ListRegistrationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 13);

/**
 * Request for the `GetRegistration` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.GetRegistrationRequest
 */
export type GetRegistrationRequest = Message<"google.cloud.domains.v1alpha2.GetRegistrationRequest"> & {
  /**
   * Required. The name of the `Registration` to get, in the format
   * `projects/*\/locations/*\/registrations/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.GetRegistrationRequest.
 * Use `create(GetRegistrationRequestSchema)` to create a new message.
 */
export const GetRegistrationRequestSchema: GenMessage<GetRegistrationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 14);

/**
 * Request for the `UpdateRegistration` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.UpdateRegistrationRequest
 */
export type UpdateRegistrationRequest = Message<"google.cloud.domains.v1alpha2.UpdateRegistrationRequest"> & {
  /**
   * Fields of the `Registration` to update.
   *
   * @generated from field: google.cloud.domains.v1alpha2.Registration registration = 1;
   */
  registration?: Registration;

  /**
   * Required. The field mask describing which fields to update as a comma-separated list.
   * For example, if only the labels are being updated, the `update_mask` is
   * `"labels"`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.UpdateRegistrationRequest.
 * Use `create(UpdateRegistrationRequestSchema)` to create a new message.
 */
export const UpdateRegistrationRequestSchema: GenMessage<UpdateRegistrationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 15);

/**
 * Request for the `ConfigureManagementSettings` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
 */
export type ConfigureManagementSettingsRequest = Message<"google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest"> & {
  /**
   * Required. The name of the `Registration` whose management settings are being updated,
   * in the format `projects/*\/locations/*\/registrations/*`.
   *
   * @generated from field: string registration = 1;
   */
  registration: string;

  /**
   * Fields of the `ManagementSettings` to update.
   *
   * @generated from field: google.cloud.domains.v1alpha2.ManagementSettings management_settings = 2;
   */
  managementSettings?: ManagementSettings;

  /**
   * Required. The field mask describing which fields to update as a comma-separated list.
   * For example, if only the transfer lock is being updated, the `update_mask`
   * is `"transfer_lock_state"`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest.
 * Use `create(ConfigureManagementSettingsRequestSchema)` to create a new message.
 */
export const ConfigureManagementSettingsRequestSchema: GenMessage<ConfigureManagementSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 16);

/**
 * Request for the `ConfigureDnsSettings` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
 */
export type ConfigureDnsSettingsRequest = Message<"google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest"> & {
  /**
   * Required. The name of the `Registration` whose DNS settings are being updated,
   * in the format `projects/*\/locations/*\/registrations/*`.
   *
   * @generated from field: string registration = 1;
   */
  registration: string;

  /**
   * Fields of the `DnsSettings` to update.
   *
   * @generated from field: google.cloud.domains.v1alpha2.DnsSettings dns_settings = 2;
   */
  dnsSettings?: DnsSettings;

  /**
   * Required. The field mask describing which fields to update as a comma-separated list.
   * For example, if only the name servers are being updated for an existing
   * Custom DNS configuration, the `update_mask` is
   * `"custom_dns.name_servers"`.
   *
   * When changing the DNS provider from one type to another, pass the new
   * provider's field name as part of the field mask. For example, when changing
   * from a Google Domains DNS configuration to a Custom DNS configuration, the
   * `update_mask` is `"custom_dns"`. //
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;

  /**
   * Validate the request without actually updating the DNS settings.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest.
 * Use `create(ConfigureDnsSettingsRequestSchema)` to create a new message.
 */
export const ConfigureDnsSettingsRequestSchema: GenMessage<ConfigureDnsSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 17);

/**
 * Request for the `ConfigureContactSettings` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
 */
export type ConfigureContactSettingsRequest = Message<"google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest"> & {
  /**
   * Required. The name of the `Registration` whose contact settings are being updated,
   * in the format `projects/*\/locations/*\/registrations/*`.
   *
   * @generated from field: string registration = 1;
   */
  registration: string;

  /**
   * Fields of the `ContactSettings` to update.
   *
   * @generated from field: google.cloud.domains.v1alpha2.ContactSettings contact_settings = 2;
   */
  contactSettings?: ContactSettings;

  /**
   * Required. The field mask describing which fields to update as a comma-separated list.
   * For example, if only the registrant contact is being updated, the
   * `update_mask` is `"registrant_contact"`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;

  /**
   * The list of contact notices that the caller acknowledges. The notices
   * needed here depend on the values specified in `contact_settings`.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.ContactNotice contact_notices = 4;
   */
  contactNotices: ContactNotice[];

  /**
   * Validate the request without actually updating the contact settings.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest.
 * Use `create(ConfigureContactSettingsRequestSchema)` to create a new message.
 */
export const ConfigureContactSettingsRequestSchema: GenMessage<ConfigureContactSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 18);

/**
 * Request for the `ExportRegistration` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.ExportRegistrationRequest
 */
export type ExportRegistrationRequest = Message<"google.cloud.domains.v1alpha2.ExportRegistrationRequest"> & {
  /**
   * Required. The name of the `Registration` to export,
   * in the format `projects/*\/locations/*\/registrations/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.ExportRegistrationRequest.
 * Use `create(ExportRegistrationRequestSchema)` to create a new message.
 */
export const ExportRegistrationRequestSchema: GenMessage<ExportRegistrationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 19);

/**
 * Request for the `DeleteRegistration` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.DeleteRegistrationRequest
 */
export type DeleteRegistrationRequest = Message<"google.cloud.domains.v1alpha2.DeleteRegistrationRequest"> & {
  /**
   * Required. The name of the `Registration` to delete,
   * in the format `projects/*\/locations/*\/registrations/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.DeleteRegistrationRequest.
 * Use `create(DeleteRegistrationRequestSchema)` to create a new message.
 */
export const DeleteRegistrationRequestSchema: GenMessage<DeleteRegistrationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 20);

/**
 * Request for the `RetrieveAuthorizationCode` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
 */
export type RetrieveAuthorizationCodeRequest = Message<"google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest"> & {
  /**
   * Required. The name of the `Registration` whose authorization code is being retrieved,
   * in the format `projects/*\/locations/*\/registrations/*`.
   *
   * @generated from field: string registration = 1;
   */
  registration: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest.
 * Use `create(RetrieveAuthorizationCodeRequestSchema)` to create a new message.
 */
export const RetrieveAuthorizationCodeRequestSchema: GenMessage<RetrieveAuthorizationCodeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 21);

/**
 * Request for the `ResetAuthorizationCode` method.
 *
 * @generated from message google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
 */
export type ResetAuthorizationCodeRequest = Message<"google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest"> & {
  /**
   * Required. The name of the `Registration` whose authorization code is being reset,
   * in the format `projects/*\/locations/*\/registrations/*`.
   *
   * @generated from field: string registration = 1;
   */
  registration: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest.
 * Use `create(ResetAuthorizationCodeRequestSchema)` to create a new message.
 */
export const ResetAuthorizationCodeRequestSchema: GenMessage<ResetAuthorizationCodeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 22);

/**
 * Parameters required to register a new domain.
 *
 * @generated from message google.cloud.domains.v1alpha2.RegisterParameters
 */
export type RegisterParameters = Message<"google.cloud.domains.v1alpha2.RegisterParameters"> & {
  /**
   * The domain name. Unicode domain names are expressed in Punycode format.
   *
   * @generated from field: string domain_name = 1;
   */
  domainName: string;

  /**
   * Indicates whether the domain is available for registration. This value is
   * accurate when obtained by calling `RetrieveRegisterParameters`, but is
   * approximate when obtained by calling `SearchDomains`.
   *
   * @generated from field: google.cloud.domains.v1alpha2.RegisterParameters.Availability availability = 2;
   */
  availability: RegisterParameters_Availability;

  /**
   * Contact privacy options that the domain supports.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.ContactPrivacy supported_privacy = 3;
   */
  supportedPrivacy: ContactPrivacy[];

  /**
   * Notices about special properties of the domain.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.DomainNotice domain_notices = 4;
   */
  domainNotices: DomainNotice[];

  /**
   * Price to register or renew the domain for one year.
   *
   * @generated from field: google.type.Money yearly_price = 5;
   */
  yearlyPrice?: Money;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.RegisterParameters.
 * Use `create(RegisterParametersSchema)` to create a new message.
 */
export const RegisterParametersSchema: GenMessage<RegisterParameters> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 23);

/**
 * Possible availability states of a domain name.
 *
 * @generated from enum google.cloud.domains.v1alpha2.RegisterParameters.Availability
 */
export enum RegisterParameters_Availability {
  /**
   * The availability is unspecified.
   *
   * @generated from enum value: AVAILABILITY_UNSPECIFIED = 0;
   */
  AVAILABILITY_UNSPECIFIED = 0,

  /**
   * The domain is available for registration.
   *
   * @generated from enum value: AVAILABLE = 1;
   */
  AVAILABLE = 1,

  /**
   * The domain is not available for registration. Generally this means it is
   * already registered to another party.
   *
   * @generated from enum value: UNAVAILABLE = 2;
   */
  UNAVAILABLE = 2,

  /**
   * The domain is not currently supported by Cloud Domains, but may
   * be available elsewhere.
   *
   * @generated from enum value: UNSUPPORTED = 3;
   */
  UNSUPPORTED = 3,

  /**
   * Cloud Domains is unable to determine domain availability, generally
   * due to system maintenance at the domain name registry.
   *
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.RegisterParameters.Availability.
 */
export const RegisterParameters_AvailabilitySchema: GenEnum<RegisterParameters_Availability> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 23, 0);

/**
 * Parameters required to transfer a domain from another registrar.
 *
 * @generated from message google.cloud.domains.v1alpha2.TransferParameters
 */
export type TransferParameters = Message<"google.cloud.domains.v1alpha2.TransferParameters"> & {
  /**
   * The domain name. Unicode domain names are expressed in Punycode format.
   *
   * @generated from field: string domain_name = 1;
   */
  domainName: string;

  /**
   * The registrar that currently manages the domain.
   *
   * @generated from field: string current_registrar = 2;
   */
  currentRegistrar: string;

  /**
   * The name servers that currently store the configuration of the domain.
   *
   * @generated from field: repeated string name_servers = 3;
   */
  nameServers: string[];

  /**
   * Indicates whether the domain is protected by a transfer lock. For a
   * transfer to succeed, this must show `UNLOCKED`. To unlock a domain,
   * go to its current registrar.
   *
   * @generated from field: google.cloud.domains.v1alpha2.TransferLockState transfer_lock_state = 4;
   */
  transferLockState: TransferLockState;

  /**
   * Contact privacy options that the domain supports.
   *
   * @generated from field: repeated google.cloud.domains.v1alpha2.ContactPrivacy supported_privacy = 5;
   */
  supportedPrivacy: ContactPrivacy[];

  /**
   * Price to transfer or renew the domain for one year.
   *
   * @generated from field: google.type.Money yearly_price = 6;
   */
  yearlyPrice?: Money;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.TransferParameters.
 * Use `create(TransferParametersSchema)` to create a new message.
 */
export const TransferParametersSchema: GenMessage<TransferParameters> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 24);

/**
 * Defines an authorization code.
 *
 * @generated from message google.cloud.domains.v1alpha2.AuthorizationCode
 */
export type AuthorizationCode = Message<"google.cloud.domains.v1alpha2.AuthorizationCode"> & {
  /**
   * The Authorization Code in ASCII. It can be used to transfer the domain
   * to or from another registrar.
   *
   * @generated from field: string code = 1;
   */
  code: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.AuthorizationCode.
 * Use `create(AuthorizationCodeSchema)` to create a new message.
 */
export const AuthorizationCodeSchema: GenMessage<AuthorizationCode> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 25);

/**
 * Represents the metadata of the long-running operation. Output only.
 *
 * @generated from message google.cloud.domains.v1alpha2.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.domains.v1alpha2.OperationMetadata"> & {
  /**
   * The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Human-readable status of the operation, if any.
   *
   * @generated from field: string status_detail = 5;
   */
  statusDetail: string;

  /**
   * API version used to start the operation.
   *
   * @generated from field: string api_version = 6;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.domains.v1alpha2.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_domains_v1alpha2_domains, 26);

/**
 * Defines a set of possible contact privacy settings for a `Registration`.
 *
 * [ICANN](https://icann.org/) maintains the WHOIS database, a publicly
 * accessible mapping from domain name to contact information, and requires that
 * each domain name have an entry. Choose from these options to control how much
 * information in your `ContactSettings` is published.
 *
 * @generated from enum google.cloud.domains.v1alpha2.ContactPrivacy
 */
export enum ContactPrivacy {
  /**
   * The contact privacy settings are undefined.
   *
   * @generated from enum value: CONTACT_PRIVACY_UNSPECIFIED = 0;
   */
  CONTACT_PRIVACY_UNSPECIFIED = 0,

  /**
   * All the data from `ContactSettings` is publicly available. When setting
   * this option, you must also provide a
   * `PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the
   * request.
   *
   * @generated from enum value: PUBLIC_CONTACT_DATA = 1;
   */
  PUBLIC_CONTACT_DATA = 1,

  /**
   * None of the data from `ContactSettings` is publicly available. Instead,
   * proxy contact data is published for your domain. Email sent to the proxy
   * email address is forwarded to the registrant's email address. Cloud Domains
   * provides this privacy proxy service at no additional cost.
   *
   * @generated from enum value: PRIVATE_CONTACT_DATA = 2;
   */
  PRIVATE_CONTACT_DATA = 2,

  /**
   * Some data from `ContactSettings` is publicly available. The actual
   * information redacted depends on the domain. For details, see [the
   * registration privacy
   * article](https://support.google.com/domains/answer/3251242).
   *
   * @generated from enum value: REDACTED_CONTACT_DATA = 3;
   */
  REDACTED_CONTACT_DATA = 3,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.ContactPrivacy.
 */
export const ContactPrivacySchema: GenEnum<ContactPrivacy> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 0);

/**
 * Notices about special properties of certain domains.
 *
 * @generated from enum google.cloud.domains.v1alpha2.DomainNotice
 */
export enum DomainNotice {
  /**
   * The notice is undefined.
   *
   * @generated from enum value: DOMAIN_NOTICE_UNSPECIFIED = 0;
   */
  DOMAIN_NOTICE_UNSPECIFIED = 0,

  /**
   * Indicates that the domain is preloaded on the HTTP Strict Transport
   * Security list in browsers. Serving a website on such domain requires
   * an SSL certificate. For details, see
   * [how to get an SSL
   * certificate](https://support.google.com/domains/answer/7638036).
   *
   * @generated from enum value: HSTS_PRELOADED = 1;
   */
  HSTS_PRELOADED = 1,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.DomainNotice.
 */
export const DomainNoticeSchema: GenEnum<DomainNotice> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 1);

/**
 * Notices related to contact information.
 *
 * @generated from enum google.cloud.domains.v1alpha2.ContactNotice
 */
export enum ContactNotice {
  /**
   * The notice is undefined.
   *
   * @generated from enum value: CONTACT_NOTICE_UNSPECIFIED = 0;
   */
  CONTACT_NOTICE_UNSPECIFIED = 0,

  /**
   * Required when setting the `privacy` field of `ContactSettings` to
   * `PUBLIC_CONTACT_DATA`, which exposes contact data publicly.
   *
   * @generated from enum value: PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT = 1;
   */
  PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT = 1,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.ContactNotice.
 */
export const ContactNoticeSchema: GenEnum<ContactNotice> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 2);

/**
 * Possible states of a `Registration`'s transfer lock.
 *
 * @generated from enum google.cloud.domains.v1alpha2.TransferLockState
 */
export enum TransferLockState {
  /**
   * The state is unspecified.
   *
   * @generated from enum value: TRANSFER_LOCK_STATE_UNSPECIFIED = 0;
   */
  TRANSFER_LOCK_STATE_UNSPECIFIED = 0,

  /**
   * The domain is unlocked and can be transferred to another registrar.
   *
   * @generated from enum value: UNLOCKED = 1;
   */
  UNLOCKED = 1,

  /**
   * The domain is locked and cannot be transferred to another registrar.
   *
   * @generated from enum value: LOCKED = 2;
   */
  LOCKED = 2,
}

/**
 * Describes the enum google.cloud.domains.v1alpha2.TransferLockState.
 */
export const TransferLockStateSchema: GenEnum<TransferLockState> = /*@__PURE__*/
  enumDesc(file_google_cloud_domains_v1alpha2_domains, 3);

/**
 * The Cloud Domains API enables management and configuration of domain names.
 *
 * @generated from service google.cloud.domains.v1alpha2.Domains
 */
export const Domains: GenService<{
  /**
   * Searches for available domain names similar to the provided query.
   *
   * Availability results from this method are approximate; call
   * `RetrieveRegisterParameters` on a domain before registering to confirm
   * availability.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.SearchDomains
   */
  searchDomains: {
    methodKind: "unary";
    input: typeof SearchDomainsRequestSchema;
    output: typeof SearchDomainsResponseSchema;
  },
  /**
   * Gets parameters needed to register a new domain name, including price and
   * up-to-date availability. Use the returned values to call `RegisterDomain`.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.RetrieveRegisterParameters
   */
  retrieveRegisterParameters: {
    methodKind: "unary";
    input: typeof RetrieveRegisterParametersRequestSchema;
    output: typeof RetrieveRegisterParametersResponseSchema;
  },
  /**
   * Registers a new domain name and creates a corresponding `Registration`
   * resource.
   *
   * Call `RetrieveRegisterParameters` first to check availability of the domain
   * name and determine parameters like price that are needed to build a call to
   * this method.
   *
   * A successful call creates a `Registration` resource in state
   * `REGISTRATION_PENDING`, which resolves to `ACTIVE` within 1-2
   * minutes, indicating that the domain was successfully registered. If the
   * resource ends up in state `REGISTRATION_FAILED`, it indicates that the
   * domain was not registered successfully, and you can safely delete the
   * resource and retry registration.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.RegisterDomain
   */
  registerDomain: {
    methodKind: "unary";
    input: typeof RegisterDomainRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets parameters needed to transfer a domain name from another registrar to
   * Cloud Domains. For domains managed by Google Domains, transferring to Cloud
   * Domains is not supported.
   *
   *
   * Use the returned values to call `TransferDomain`.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.RetrieveTransferParameters
   */
  retrieveTransferParameters: {
    methodKind: "unary";
    input: typeof RetrieveTransferParametersRequestSchema;
    output: typeof RetrieveTransferParametersResponseSchema;
  },
  /**
   * Transfers a domain name from another registrar to Cloud Domains.  For
   * domains managed by Google Domains, transferring to Cloud Domains is not
   * supported.
   *
   *
   * Before calling this method, go to the domain's current registrar to unlock
   * the domain for transfer and retrieve the domain's transfer authorization
   * code. Then call `RetrieveTransferParameters` to confirm that the domain is
   * unlocked and to get values needed to build a call to this method.
   *
   * A successful call creates a `Registration` resource in state
   * `TRANSFER_PENDING`. It can take several days to complete the transfer
   * process. The registrant can often speed up this process by approving the
   * transfer through the current registrar, either by clicking a link in an
   * email from the registrar or by visiting the registrar's website.
   *
   * A few minutes after transfer approval, the resource transitions to state
   * `ACTIVE`, indicating that the transfer was successful. If the transfer is
   * rejected or the request expires without being approved, the resource can
   * end up in state `TRANSFER_FAILED`. If transfer fails, you can safely delete
   * the resource and retry the transfer.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.TransferDomain
   */
  transferDomain: {
    methodKind: "unary";
    input: typeof TransferDomainRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists the `Registration` resources in a project.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.ListRegistrations
   */
  listRegistrations: {
    methodKind: "unary";
    input: typeof ListRegistrationsRequestSchema;
    output: typeof ListRegistrationsResponseSchema;
  },
  /**
   * Gets the details of a `Registration` resource.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.GetRegistration
   */
  getRegistration: {
    methodKind: "unary";
    input: typeof GetRegistrationRequestSchema;
    output: typeof RegistrationSchema;
  },
  /**
   * Updates select fields of a `Registration` resource, notably `labels`. To
   * update other fields, use the appropriate custom update method:
   *
   * * To update management settings, see `ConfigureManagementSettings`
   * * To update DNS configuration, see `ConfigureDnsSettings`
   * * To update contact information, see `ConfigureContactSettings`
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.UpdateRegistration
   */
  updateRegistration: {
    methodKind: "unary";
    input: typeof UpdateRegistrationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a `Registration`'s management settings.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.ConfigureManagementSettings
   */
  configureManagementSettings: {
    methodKind: "unary";
    input: typeof ConfigureManagementSettingsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a `Registration`'s DNS settings.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.ConfigureDnsSettings
   */
  configureDnsSettings: {
    methodKind: "unary";
    input: typeof ConfigureDnsSettingsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a `Registration`'s contact settings. Some changes require
   * confirmation by the domain's registrant contact .
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.ConfigureContactSettings
   */
  configureContactSettings: {
    methodKind: "unary";
    input: typeof ConfigureContactSettingsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Exports a `Registration` resource, such that it is no longer managed by
   * Cloud Domains.
   *
   * When an active domain is successfully exported, you can continue to use the
   * domain in [Google Domains](https://domains.google/) until it expires. The
   * calling user becomes the domain's sole owner in Google Domains, and
   * permissions for the domain are subsequently managed there. The domain does
   * not renew automatically unless the new owner sets up billing in Google
   * Domains.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.ExportRegistration
   */
  exportRegistration: {
    methodKind: "unary";
    input: typeof ExportRegistrationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a `Registration` resource.
   *
   * This method works on any `Registration` resource using [Subscription or
   * Commitment billing](/domains/pricing#billing-models), provided that the
   * resource was created at least 1 day in the past.
   *
   * For `Registration` resources using
   * [Monthly billing](/domains/pricing#billing-models), this method works if:
   *
   * * `state` is `EXPORTED` with `expire_time` in the past
   * * `state` is `REGISTRATION_FAILED`
   * * `state` is `TRANSFER_FAILED`
   *
   * When an active registration is successfully deleted, you can continue to
   * use the domain in [Google Domains](https://domains.google/) until it
   * expires. The calling user becomes the domain's sole owner in Google
   * Domains, and permissions for the domain are subsequently managed there. The
   * domain does not renew automatically unless the new owner sets up billing in
   * Google Domains.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.DeleteRegistration
   */
  deleteRegistration: {
    methodKind: "unary";
    input: typeof DeleteRegistrationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets the authorization code of the `Registration` for the purpose of
   * transferring the domain to another registrar.
   *
   * You can call this method only after 60 days have elapsed since the initial
   * domain registration.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.RetrieveAuthorizationCode
   */
  retrieveAuthorizationCode: {
    methodKind: "unary";
    input: typeof RetrieveAuthorizationCodeRequestSchema;
    output: typeof AuthorizationCodeSchema;
  },
  /**
   * Resets the authorization code of the `Registration` to a new random string.
   *
   * You can call this method only after 60 days have elapsed since the initial
   * domain registration.
   *
   * @generated from rpc google.cloud.domains.v1alpha2.Domains.ResetAuthorizationCode
   */
  resetAuthorizationCode: {
    methodKind: "unary";
    input: typeof ResetAuthorizationCodeRequestSchema;
    output: typeof AuthorizationCodeSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_domains_v1alpha2_domains, 0);

