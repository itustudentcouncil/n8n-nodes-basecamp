// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/logging/error_log.proto (package google.cloud.discoveryengine.logging, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/logging/error_log.proto.
 */
export const file_google_cloud_discoveryengine_logging_error_log: GenFile = /*@__PURE__*/
  fileDesc("CjRnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL2xvZ2dpbmcvZXJyb3JfbG9nLnByb3RvEiRnb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLmxvZ2dpbmciIQoOU2VydmljZUNvbnRleHQSDwoHc2VydmljZRgBIAEoCSIyChJIdHRwUmVxdWVzdENvbnRleHQSHAoUcmVzcG9uc2Vfc3RhdHVzX2NvZGUYASABKAUiJwoOU291cmNlTG9jYXRpb24SFQoNZnVuY3Rpb25fbmFtZRgBIAEoCSKtAQoMRXJyb3JDb250ZXh0Ek4KDGh0dHBfcmVxdWVzdBgBIAEoCzI4Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUubG9nZ2luZy5IdHRwUmVxdWVzdENvbnRleHQSTQoPcmVwb3J0X2xvY2F0aW9uGAIgASgLMjQuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS5sb2dnaW5nLlNvdXJjZUxvY2F0aW9uIogBChJJbXBvcnRFcnJvckNvbnRleHQSEQoJb3BlcmF0aW9uGAEgASgJEhAKCGdjc19wYXRoGAIgASgJEhMKC2xpbmVfbnVtYmVyGAMgASgJEhIKCGRvY3VtZW50GAQgASgJSAASFAoKdXNlcl9ldmVudBgFIAEoCUgAQg4KDGxpbmVfY29udGVudCKKAwoIRXJyb3JMb2cSTQoPc2VydmljZV9jb250ZXh0GAEgASgLMjQuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS5sb2dnaW5nLlNlcnZpY2VDb250ZXh0EkMKB2NvbnRleHQYAiABKAsyMi5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLmxvZ2dpbmcuRXJyb3JDb250ZXh0Eg8KB21lc3NhZ2UYAyABKAkSIgoGc3RhdHVzGAQgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMSMAoPcmVxdWVzdF9wYXlsb2FkGAUgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIxChByZXNwb25zZV9wYXlsb2FkGAYgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBJQCg5pbXBvcnRfcGF5bG9hZBgHIAEoCzI4Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUubG9nZ2luZy5JbXBvcnRFcnJvckNvbnRleHRChgIKKGNvbS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLmxvZ2dpbmdCDUVycm9yTG9nUHJvdG9QAVo/Y2xvdWQuZ29vZ2xlLmNvbS9nby9kaXNjb3ZlcnllbmdpbmUvbG9nZ2luZy9sb2dnaW5ncGI7bG9nZ2luZ3BiogIPRElTQ09WRVJZRU5HSU5FqgIkR29vZ2xlLkNsb3VkLkRpc2NvdmVyeUVuZ2luZS5Mb2dnaW5nygIkR29vZ2xlXENsb3VkXERpc2NvdmVyeUVuZ2luZVxMb2dnaW5n6gInR29vZ2xlOjpDbG91ZDo6RGlzY292ZXJ5RW5naW5lOjpMb2dnaW5nYgZwcm90bzM", [file_google_protobuf_struct, file_google_rpc_status]);

/**
 * Describes a running service that sends errors.
 *
 * @generated from message google.cloud.discoveryengine.logging.ServiceContext
 */
export type ServiceContext = Message<"google.cloud.discoveryengine.logging.ServiceContext"> & {
  /**
   * An identifier of the service—for example, `discoveryengine.googleapis.com`.
   *
   * @generated from field: string service = 1;
   */
  service: string;
};

/**
 * Describes the message google.cloud.discoveryengine.logging.ServiceContext.
 * Use `create(ServiceContextSchema)` to create a new message.
 */
export const ServiceContextSchema: GenMessage<ServiceContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_logging_error_log, 0);

/**
 * HTTP request data that is related to a reported error.
 *
 * @generated from message google.cloud.discoveryengine.logging.HttpRequestContext
 */
export type HttpRequestContext = Message<"google.cloud.discoveryengine.logging.HttpRequestContext"> & {
  /**
   * The HTTP response status code for the request.
   *
   * @generated from field: int32 response_status_code = 1;
   */
  responseStatusCode: number;
};

/**
 * Describes the message google.cloud.discoveryengine.logging.HttpRequestContext.
 * Use `create(HttpRequestContextSchema)` to create a new message.
 */
export const HttpRequestContextSchema: GenMessage<HttpRequestContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_logging_error_log, 1);

/**
 * Indicates a location in the source code of the service for which
 * errors are reported.
 *
 * @generated from message google.cloud.discoveryengine.logging.SourceLocation
 */
export type SourceLocation = Message<"google.cloud.discoveryengine.logging.SourceLocation"> & {
  /**
   * Human-readable name of a function or method—for example,
   * `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend`.
   *
   * @generated from field: string function_name = 1;
   */
  functionName: string;
};

/**
 * Describes the message google.cloud.discoveryengine.logging.SourceLocation.
 * Use `create(SourceLocationSchema)` to create a new message.
 */
export const SourceLocationSchema: GenMessage<SourceLocation> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_logging_error_log, 2);

/**
 * A description of the context in which an error occurred.
 *
 * @generated from message google.cloud.discoveryengine.logging.ErrorContext
 */
export type ErrorContext = Message<"google.cloud.discoveryengine.logging.ErrorContext"> & {
  /**
   * The HTTP request which was processed when the error was triggered.
   *
   * @generated from field: google.cloud.discoveryengine.logging.HttpRequestContext http_request = 1;
   */
  httpRequest?: HttpRequestContext;

  /**
   * The location in the source code where the decision was made to
   * report the error, usually the place where it was logged.
   *
   * @generated from field: google.cloud.discoveryengine.logging.SourceLocation report_location = 2;
   */
  reportLocation?: SourceLocation;
};

/**
 * Describes the message google.cloud.discoveryengine.logging.ErrorContext.
 * Use `create(ErrorContextSchema)` to create a new message.
 */
export const ErrorContextSchema: GenMessage<ErrorContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_logging_error_log, 3);

/**
 * The error payload that is populated on LRO import APIs, including the
 * following:
 *
 * * `google.cloud.discoveryengine.v1alpha.DocumentService.ImportDocuments`
 * * `google.cloud.discoveryengine.v1alpha.UserEventService.ImportUserEvents`
 *
 * @generated from message google.cloud.discoveryengine.logging.ImportErrorContext
 */
export type ImportErrorContext = Message<"google.cloud.discoveryengine.logging.ImportErrorContext"> & {
  /**
   * The operation resource name of the LRO.
   *
   * @generated from field: string operation = 1;
   */
  operation: string;

  /**
   * Google Cloud Storage file path of the import source.
   * Can be set for batch operation error.
   *
   * @generated from field: string gcs_path = 2;
   */
  gcsPath: string;

  /**
   * Line number of the content in file.
   * Should be empty for permission or batch operation error.
   *
   * @generated from field: string line_number = 3;
   */
  lineNumber: string;

  /**
   * Detailed content which caused the error.
   * Should be empty for permission or batch operation error.
   *
   * @generated from oneof google.cloud.discoveryengine.logging.ImportErrorContext.line_content
   */
  lineContent: {
    /**
     * The detailed content which caused the error on importing a document.
     *
     * @generated from field: string document = 4;
     */
    value: string;
    case: "document";
  } | {
    /**
     * The detailed content which caused the error on importing a user event.
     *
     * @generated from field: string user_event = 5;
     */
    value: string;
    case: "userEvent";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.discoveryengine.logging.ImportErrorContext.
 * Use `create(ImportErrorContextSchema)` to create a new message.
 */
export const ImportErrorContextSchema: GenMessage<ImportErrorContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_logging_error_log, 4);

/**
 * An error log which is reported to the Error Reporting system.
 *
 * @generated from message google.cloud.discoveryengine.logging.ErrorLog
 */
export type ErrorLog = Message<"google.cloud.discoveryengine.logging.ErrorLog"> & {
  /**
   * The service context in which this error has occurred.
   *
   * @generated from field: google.cloud.discoveryengine.logging.ServiceContext service_context = 1;
   */
  serviceContext?: ServiceContext;

  /**
   * A description of the context in which the error occurred.
   *
   * @generated from field: google.cloud.discoveryengine.logging.ErrorContext context = 2;
   */
  context?: ErrorContext;

  /**
   * A message describing the error.
   *
   * @generated from field: string message = 3;
   */
  message: string;

  /**
   * The RPC status associated with the error log.
   *
   * @generated from field: google.rpc.Status status = 4;
   */
  status?: Status;

  /**
   * The API request payload, represented as a protocol buffer.
   *
   * Most API request types are supported—for example:
   *
   * * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.DocumentService.CreateDocumentRequest`
   * * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEventRequest`
   *
   * @generated from field: google.protobuf.Struct request_payload = 5;
   */
  requestPayload?: JsonObject;

  /**
   * The API response payload, represented as a protocol buffer.
   *
   * This is used to log some "soft errors", where the response is valid but we
   * consider there are some quality issues like unjoined events.
   *
   * The following API responses are supported, and no PII is included:
   *
   * * `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend`
   * * `google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEvent`
   * * `google.cloud.discoveryengine.v1alpha.UserEventService.CollectUserEvent`
   *
   * @generated from field: google.protobuf.Struct response_payload = 6;
   */
  responsePayload?: JsonObject;

  /**
   * The error payload that is populated on LRO import APIs.
   *
   * @generated from field: google.cloud.discoveryengine.logging.ImportErrorContext import_payload = 7;
   */
  importPayload?: ImportErrorContext;
};

/**
 * Describes the message google.cloud.discoveryengine.logging.ErrorLog.
 * Use `create(ErrorLogSchema)` to create a new message.
 */
export const ErrorLogSchema: GenMessage<ErrorLog> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_logging_error_log, 5);

