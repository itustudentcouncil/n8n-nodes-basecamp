// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1alpha/chunk_service.proto (package google.cloud.discoveryengine.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Chunk, ChunkSchema } from "./chunk_pb";
import { file_google_cloud_discoveryengine_v1alpha_chunk } from "./chunk_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1alpha/chunk_service.proto.
 */
export const file_google_cloud_discoveryengine_v1alpha_chunk_service: GenFile = /*@__PURE__*/
  fileDesc("Cjhnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYWxwaGEvY2h1bmtfc2VydmljZS5wcm90bxIkZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhIk0KD0dldENodW5rUmVxdWVzdBI6CgRuYW1lGAEgASgJQizgQQL6QSYKJGRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbS9DaHVuayJ7ChFMaXN0Q2h1bmtzUmVxdWVzdBI/CgZwYXJlbnQYASABKAlCL+BBAvpBKQonZGlzY292ZXJ5ZW5naW5lLmdvb2dsZWFwaXMuY29tL0RvY3VtZW50EhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJImoKEkxpc3RDaHVua3NSZXNwb25zZRI7CgZjaHVua3MYASADKAsyKy5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuQ2h1bmsSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJMu0FCgxDaHVua1NlcnZpY2USuQIKCEdldENodW5rEjUuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkdldENodW5rUmVxdWVzdBorLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5DaHVuayLIAdpBBG5hbWWC0+STAroBWmMSYS92MWFscGhhL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovY29sbGVjdGlvbnMvKi9kYXRhU3RvcmVzLyovYnJhbmNoZXMvKi9kb2N1bWVudHMvKi9jaHVua3MvKn0SUy92MWFscGhhL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZGF0YVN0b3Jlcy8qL2JyYW5jaGVzLyovZG9jdW1lbnRzLyovY2h1bmtzLyp9EswCCgpMaXN0Q2h1bmtzEjcuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkxpc3RDaHVua3NSZXF1ZXN0GjguZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkxpc3RDaHVua3NSZXNwb25zZSLKAdpBBnBhcmVudILT5JMCugFaYxJhL3YxYWxwaGEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NvbGxlY3Rpb25zLyovZGF0YVN0b3Jlcy8qL2JyYW5jaGVzLyovZG9jdW1lbnRzLyp9L2NodW5rcxJTL3YxYWxwaGEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2RhdGFTdG9yZXMvKi9icmFuY2hlcy8qL2RvY3VtZW50cy8qfS9jaHVua3MaUspBHmRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CnQIKKGNvbS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGFCEUNodW5rU2VydmljZVByb3RvUAFaUmNsb3VkLmdvb2dsZS5jb20vZ28vZGlzY292ZXJ5ZW5naW5lL2FwaXYxYWxwaGEvZGlzY292ZXJ5ZW5naW5lcGI7ZGlzY292ZXJ5ZW5naW5lcGKiAg9ESVNDT1ZFUllFTkdJTkWqAiRHb29nbGUuQ2xvdWQuRGlzY292ZXJ5RW5naW5lLlYxQWxwaGHKAiRHb29nbGVcQ2xvdWRcRGlzY292ZXJ5RW5naW5lXFYxYWxwaGHqAidHb29nbGU6OkNsb3VkOjpEaXNjb3ZlcnlFbmdpbmU6OlYxYWxwaGFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_discoveryengine_v1alpha_chunk]);

/**
 * Request message for
 * [ChunkService.GetChunk][google.cloud.discoveryengine.v1alpha.ChunkService.GetChunk]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.GetChunkRequest
 */
export type GetChunkRequest = Message<"google.cloud.discoveryengine.v1alpha.GetChunkRequest"> & {
  /**
   * Required. Full resource name of
   * [Chunk][google.cloud.discoveryengine.v1alpha.Chunk], such as
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}/chunks/{chunk}`.
   *
   * If the caller does not have permission to access the
   * [Chunk][google.cloud.discoveryengine.v1alpha.Chunk], regardless of whether
   * or not it exists, a `PERMISSION_DENIED` error is returned.
   *
   * If the requested [Chunk][google.cloud.discoveryengine.v1alpha.Chunk] does
   * not exist, a `NOT_FOUND` error is returned.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.GetChunkRequest.
 * Use `create(GetChunkRequestSchema)` to create a new message.
 */
export const GetChunkRequestSchema: GenMessage<GetChunkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_chunk_service, 0);

/**
 * Request message for
 * [ChunkService.ListChunks][google.cloud.discoveryengine.v1alpha.ChunkService.ListChunks]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ListChunksRequest
 */
export type ListChunksRequest = Message<"google.cloud.discoveryengine.v1alpha.ListChunksRequest"> & {
  /**
   * Required. The parent document resource name, such as
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
   *
   * If the caller does not have permission to list
   * [Chunk][google.cloud.discoveryengine.v1alpha.Chunk]s under this document,
   * regardless of whether or not this document exists, a `PERMISSION_DENIED`
   * error is returned.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum number of [Chunk][google.cloud.discoveryengine.v1alpha.Chunk]s to
   * return. If unspecified, defaults to 100. The maximum allowed value is 1000.
   * Values above 1000 will be coerced to 1000.
   *
   * If this field is negative, an `INVALID_ARGUMENT` error is returned.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token
   * [ListChunksResponse.next_page_token][google.cloud.discoveryengine.v1alpha.ListChunksResponse.next_page_token],
   * received from a previous
   * [ChunkService.ListChunks][google.cloud.discoveryengine.v1alpha.ChunkService.ListChunks]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [ChunkService.ListChunks][google.cloud.discoveryengine.v1alpha.ChunkService.ListChunks]
   * must match the call that provided the page token. Otherwise, an
   * `INVALID_ARGUMENT` error is returned.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ListChunksRequest.
 * Use `create(ListChunksRequestSchema)` to create a new message.
 */
export const ListChunksRequestSchema: GenMessage<ListChunksRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_chunk_service, 1);

/**
 * Response message for
 * [ChunkService.ListChunks][google.cloud.discoveryengine.v1alpha.ChunkService.ListChunks]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ListChunksResponse
 */
export type ListChunksResponse = Message<"google.cloud.discoveryengine.v1alpha.ListChunksResponse"> & {
  /**
   * The [Chunk][google.cloud.discoveryengine.v1alpha.Chunk]s.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1alpha.Chunk chunks = 1;
   */
  chunks: Chunk[];

  /**
   * A token that can be sent as
   * [ListChunksRequest.page_token][google.cloud.discoveryengine.v1alpha.ListChunksRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ListChunksResponse.
 * Use `create(ListChunksResponseSchema)` to create a new message.
 */
export const ListChunksResponseSchema: GenMessage<ListChunksResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_chunk_service, 2);

/**
 * Service for displaying processed
 * [Chunk][google.cloud.discoveryengine.v1alpha.Chunk] information of the
 * customer's unstructured data.
 *
 * @generated from service google.cloud.discoveryengine.v1alpha.ChunkService
 */
export const ChunkService: GenService<{
  /**
   * Gets a [Document][google.cloud.discoveryengine.v1alpha.Document].
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.ChunkService.GetChunk
   */
  getChunk: {
    methodKind: "unary";
    input: typeof GetChunkRequestSchema;
    output: typeof ChunkSchema;
  },
  /**
   * Gets a list of [Chunk][google.cloud.discoveryengine.v1alpha.Chunk]s.
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.ChunkService.ListChunks
   */
  listChunks: {
    methodKind: "unary";
    input: typeof ListChunksRequestSchema;
    output: typeof ListChunksResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_discoveryengine_v1alpha_chunk_service, 0);

