// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1alpha/serving_config.proto (package google.cloud.discoveryengine.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { CustomFineTuningSpec, EmbeddingConfig, GuidedSearchSpec, SolutionType } from "./common_pb";
import { file_google_cloud_discoveryengine_v1alpha_common } from "./common_pb";
import type { SearchRequest_ContentSearchSpec } from "./search_service_pb";
import { file_google_cloud_discoveryengine_v1alpha_search_service } from "./search_service_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1alpha/serving_config.proto.
 */
export const file_google_cloud_discoveryengine_v1alpha_serving_config: GenFile = /*@__PURE__*/
  fileDesc("Cjlnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYWxwaGEvc2VydmluZ19jb25maWcucHJvdG8SJGdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYSLGDQoNU2VydmluZ0NvbmZpZxJXCgxtZWRpYV9jb25maWcYByABKAsyPy5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuU2VydmluZ0NvbmZpZy5NZWRpYUNvbmZpZ0gAElsKDmdlbmVyaWNfY29uZmlnGAogASgLMkEuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlNlcnZpbmdDb25maWcuR2VuZXJpY0NvbmZpZ0gAEhEKBG5hbWUYASABKAlCA+BBBRIZCgxkaXNwbGF5X25hbWUYAiABKAlCA+BBAhJRCg1zb2x1dGlvbl90eXBlGAMgASgOMjIuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlNvbHV0aW9uVHlwZUIG4EEC4EEFEhAKCG1vZGVsX2lkGAQgASgJEhcKD2RpdmVyc2l0eV9sZXZlbBgFIAEoCRJPChBlbWJlZGRpbmdfY29uZmlnGBQgASgLMjUuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkVtYmVkZGluZ0NvbmZpZxIaChJyYW5raW5nX2V4cHJlc3Npb24YFSABKAkSUgoSZ3VpZGVkX3NlYXJjaF9zcGVjGBYgASgLMjYuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkd1aWRlZFNlYXJjaFNwZWMSWwoXY3VzdG9tX2ZpbmVfdHVuaW5nX3NwZWMYGCABKAsyOi5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuQ3VzdG9tRmluZVR1bmluZ1NwZWMSNAoLY3JlYXRlX3RpbWUYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSGgoSZmlsdGVyX2NvbnRyb2xfaWRzGAsgAygJEhkKEWJvb3N0X2NvbnRyb2xfaWRzGAwgAygJEhwKFHJlZGlyZWN0X2NvbnRyb2xfaWRzGA4gAygJEhwKFHN5bm9ueW1zX2NvbnRyb2xfaWRzGA8gAygJEiMKG29uZXdheV9zeW5vbnltc19jb250cm9sX2lkcxgQIAMoCRIeChZkaXNzb2NpYXRlX2NvbnRyb2xfaWRzGBEgAygJEh8KF3JlcGxhY2VtZW50X2NvbnRyb2xfaWRzGBIgAygJEhoKEmlnbm9yZV9jb250cm9sX2lkcxgTIAMoCRrIAQoLTWVkaWFDb25maWcSLgokY29udGVudF93YXRjaGVkX3BlcmNlbnRhZ2VfdGhyZXNob2xkGAIgASgCSAASKwohY29udGVudF93YXRjaGVkX3NlY29uZHNfdGhyZXNob2xkGAUgASgCSAASGwoTZGVtb3Rpb25fZXZlbnRfdHlwZRgBIAEoCRIlCh1jb250ZW50X2ZyZXNobmVzc19jdXRvZmZfZGF5cxgEIAEoBUIYChZkZW1vdGVfY29udGVudF93YXRjaGVkGnMKDUdlbmVyaWNDb25maWcSYgoTY29udGVudF9zZWFyY2hfc3BlYxgBIAEoCzJFLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5TZWFyY2hSZXF1ZXN0LkNvbnRlbnRTZWFyY2hTcGVjOoAD6kH8AgosZGlzY292ZXJ5ZW5naW5lLmdvb2dsZWFwaXMuY29tL1NlcnZpbmdDb25maWcSX3Byb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9kYXRhU3RvcmVzL3tkYXRhX3N0b3JlfS9zZXJ2aW5nQ29uZmlncy97c2VydmluZ19jb25maWd9Enhwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb259L2RhdGFTdG9yZXMve2RhdGFfc3RvcmV9L3NlcnZpbmdDb25maWdzL3tzZXJ2aW5nX2NvbmZpZ30ScXByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbn0vZW5naW5lcy97ZW5naW5lfS9zZXJ2aW5nQ29uZmlncy97c2VydmluZ19jb25maWd9QhEKD3ZlcnRpY2FsX2NvbmZpZ0KeAgooY29tLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYUISU2VydmluZ0NvbmZpZ1Byb3RvUAFaUmNsb3VkLmdvb2dsZS5jb20vZ28vZGlzY292ZXJ5ZW5naW5lL2FwaXYxYWxwaGEvZGlzY292ZXJ5ZW5naW5lcGI7ZGlzY292ZXJ5ZW5naW5lcGKiAg9ESVNDT1ZFUllFTkdJTkWqAiRHb29nbGUuQ2xvdWQuRGlzY292ZXJ5RW5naW5lLlYxQWxwaGHKAiRHb29nbGVcQ2xvdWRcRGlzY292ZXJ5RW5naW5lXFYxYWxwaGHqAidHb29nbGU6OkNsb3VkOjpEaXNjb3ZlcnlFbmdpbmU6OlYxYWxwaGFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_discoveryengine_v1alpha_common, file_google_cloud_discoveryengine_v1alpha_search_service, file_google_protobuf_timestamp]);

/**
 * Configures metadata that is used to generate serving time results (e.g.
 * search results or recommendation predictions).
 * The ServingConfig is passed in the search and predict request and generates
 * results.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ServingConfig
 */
export type ServingConfig = Message<"google.cloud.discoveryengine.v1alpha.ServingConfig"> & {
  /**
   * Industry vertical specific config.
   *
   * @generated from oneof google.cloud.discoveryengine.v1alpha.ServingConfig.vertical_config
   */
  verticalConfig: {
    /**
     * The MediaConfig of the serving configuration.
     *
     * @generated from field: google.cloud.discoveryengine.v1alpha.ServingConfig.MediaConfig media_config = 7;
     */
    value: ServingConfig_MediaConfig;
    case: "mediaConfig";
  } | {
    /**
     * The GenericConfig of the serving configuration.
     *
     * @generated from field: google.cloud.discoveryengine.v1alpha.ServingConfig.GenericConfig generic_config = 10;
     */
    value: ServingConfig_GenericConfig;
    case: "genericConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Immutable. Fully qualified name
   * `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The human readable serving config display name. Used in Discovery
   * UI.
   *
   * This field must be a UTF-8 encoded string with a length limit of 128
   * characters. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Required. Immutable. Specifies the solution type that a serving config can
   * be associated with.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.SolutionType solution_type = 3;
   */
  solutionType: SolutionType;

  /**
   * The id of the model to use at serving time.
   * Currently only RecommendationModels are supported.
   * Can be changed but only to a compatible model (e.g.
   * others-you-may-like CTR to others-you-may-like CVR).
   *
   * Required when
   * [SolutionType][google.cloud.discoveryengine.v1alpha.SolutionType] is
   * [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
   *
   * @generated from field: string model_id = 4;
   */
  modelId: string;

  /**
   * How much diversity to use in recommendation model results e.g.
   * `medium-diversity` or `high-diversity`. Currently supported values:
   *
   * * `no-diversity`
   * * `low-diversity`
   * * `medium-diversity`
   * * `high-diversity`
   * * `auto-diversity`
   *
   * If not specified, we choose default based on recommendation model
   * type. Default value: `no-diversity`.
   *
   * Can only be set if
   * [SolutionType][google.cloud.discoveryengine.v1alpha.SolutionType] is
   * [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
   *
   * @generated from field: string diversity_level = 5;
   */
  diversityLevel: string;

  /**
   * Bring your own embedding config. The config is used for search semantic
   * retrieval. The retrieval is based on the dot product of
   * [SearchRequest.EmbeddingSpec.EmbeddingVector.vector][google.cloud.discoveryengine.v1alpha.SearchRequest.EmbeddingSpec.EmbeddingVector.vector]
   * and the document embeddings that are provided by this EmbeddingConfig. If
   * [SearchRequest.EmbeddingSpec.EmbeddingVector.vector][google.cloud.discoveryengine.v1alpha.SearchRequest.EmbeddingSpec.EmbeddingVector.vector]
   * is provided, it overrides this
   * [ServingConfig.embedding_config][google.cloud.discoveryengine.v1alpha.ServingConfig.embedding_config].
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.EmbeddingConfig embedding_config = 20;
   */
  embeddingConfig?: EmbeddingConfig;

  /**
   * The ranking expression controls the customized ranking on retrieval
   * documents. To leverage this, document embedding is required. The ranking
   * expression setting in ServingConfig applies to all search requests served
   * by the serving config. However, if
   * [SearchRequest.ranking_expression][google.cloud.discoveryengine.v1alpha.SearchRequest.ranking_expression]
   * is specified, it overrides the ServingConfig ranking expression.
   *
   * The ranking expression is a single function or multiple functions that are
   * joined by "+".
   *
   *   * ranking_expression = function, { " + ", function };
   *
   * Supported functions:
   *
   *   * double * relevance_score
   *   * double * dotProduct(embedding_field_path)
   *
   * Function variables:
   *
   *   * `relevance_score`: pre-defined keywords, used for measure relevance
   *   between query and document.
   *   * `embedding_field_path`: the document embedding field
   *   used with query embedding vector.
   *   * `dotProduct`: embedding function between embedding_field_path and query
   *   embedding vector.
   *
   *  Example ranking expression:
   *
   *    If document has an embedding field doc_embedding, the ranking expression
   *    could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.
   *
   * @generated from field: string ranking_expression = 21;
   */
  rankingExpression: string;

  /**
   * Guided search configs.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.GuidedSearchSpec guided_search_spec = 22;
   */
  guidedSearchSpec?: GuidedSearchSpec;

  /**
   * Custom fine tuning configs.
   * If
   * [SearchRequest.custom_fine_tuning_spec][google.cloud.discoveryengine.v1alpha.SearchRequest.custom_fine_tuning_spec]
   * is set, it has higher priority than the configs set here.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.CustomFineTuningSpec custom_fine_tuning_spec = 24;
   */
  customFineTuningSpec?: CustomFineTuningSpec;

  /**
   * Output only. ServingConfig created timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 8;
   */
  createTime?: Timestamp;

  /**
   * Output only. ServingConfig updated timestamp.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 9;
   */
  updateTime?: Timestamp;

  /**
   * Filter controls to use in serving path.
   * All triggered filter controls will be applied.
   * Filter controls must be in the same data store as the serving config.
   * Maximum of 20 filter controls.
   *
   * @generated from field: repeated string filter_control_ids = 11;
   */
  filterControlIds: string[];

  /**
   * Boost controls to use in serving path.
   * All triggered boost controls will be applied.
   * Boost controls must be in the same data store as the serving config.
   * Maximum of 20 boost controls.
   *
   * @generated from field: repeated string boost_control_ids = 12;
   */
  boostControlIds: string[];

  /**
   * IDs of the redirect controls. Only the first triggered redirect
   * action is applied, even if multiple apply. Maximum number of
   * specifications is 100.
   *
   * Can only be set if
   * [SolutionType][google.cloud.discoveryengine.v1alpha.SolutionType] is
   * [SOLUTION_TYPE_SEARCH][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_SEARCH].
   *
   * @generated from field: repeated string redirect_control_ids = 14;
   */
  redirectControlIds: string[];

  /**
   * Condition synonyms specifications. If multiple synonyms conditions
   * match, all matching synonyms controls in the list will execute.
   * Maximum number of specifications is 100.
   *
   * Can only be set if
   * [SolutionType][google.cloud.discoveryengine.v1alpha.SolutionType] is
   * [SOLUTION_TYPE_SEARCH][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_SEARCH].
   *
   * @generated from field: repeated string synonyms_control_ids = 15;
   */
  synonymsControlIds: string[];

  /**
   * Condition oneway synonyms specifications. If multiple oneway synonyms
   * conditions match, all matching oneway synonyms controls in the list
   * will execute. Maximum number of specifications is 100.
   *
   * Can only be set if
   * [SolutionType][google.cloud.discoveryengine.v1alpha.SolutionType] is
   * [SOLUTION_TYPE_SEARCH][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_SEARCH].
   *
   * @generated from field: repeated string oneway_synonyms_control_ids = 16;
   */
  onewaySynonymsControlIds: string[];

  /**
   * Condition do not associate specifications. If multiple do not
   * associate conditions match, all matching do not associate controls in
   * the list will execute.
   * Order does not matter.
   * Maximum number of specifications is 100.
   *
   * Can only be set if
   * [SolutionType][google.cloud.discoveryengine.v1alpha.SolutionType] is
   * [SOLUTION_TYPE_SEARCH][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_SEARCH].
   *
   * @generated from field: repeated string dissociate_control_ids = 17;
   */
  dissociateControlIds: string[];

  /**
   * Condition replacement specifications.
   * Applied according to the order in the list.
   * A previously replaced term can not be re-replaced.
   * Maximum number of specifications is 100.
   *
   * Can only be set if
   * [SolutionType][google.cloud.discoveryengine.v1alpha.SolutionType] is
   * [SOLUTION_TYPE_SEARCH][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_SEARCH].
   *
   * @generated from field: repeated string replacement_control_ids = 18;
   */
  replacementControlIds: string[];

  /**
   * Condition ignore specifications. If multiple ignore
   * conditions match, all matching ignore controls in the list will
   * execute.
   * Order does not matter.
   * Maximum number of specifications is 100.
   *
   * @generated from field: repeated string ignore_control_ids = 19;
   */
  ignoreControlIds: string[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ServingConfig.
 * Use `create(ServingConfigSchema)` to create a new message.
 */
export const ServingConfigSchema: GenMessage<ServingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_serving_config, 0);

/**
 * Specifies the configurations needed for Media Discovery. Currently we
 * support:
 *
 * * `demote_content_watched`: Threshold for watched content demotion.
 * Customers can specify if using watched content demotion or use viewed
 * detail page. Using the content watched demotion, customers need to specify
 * the watched minutes or percentage exceeds the threshold, the content will
 * be demoted in the recommendation result.
 * * `promote_fresh_content`: cutoff days for fresh content promotion.
 * Customers can specify if using content freshness promotion. If the content
 * was published within the cutoff days, the content will be promoted in the
 * recommendation result.
 * Can only be set if
 * [SolutionType][google.cloud.discoveryengine.v1alpha.SolutionType] is
 * [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ServingConfig.MediaConfig
 */
export type ServingConfig_MediaConfig = Message<"google.cloud.discoveryengine.v1alpha.ServingConfig.MediaConfig"> & {
  /**
   * Specify the threshold for demoting watched content, the threshold can be
   * either percentage or minutes value.
   * This must be set for `media-complete` event type.
   *
   * @generated from oneof google.cloud.discoveryengine.v1alpha.ServingConfig.MediaConfig.demote_content_watched
   */
  demoteContentWatched: {
    /**
     * Specifies the content watched percentage threshold for demotion.
     * Threshold value must be between [0, 1.0] inclusive.
     *
     * @generated from field: float content_watched_percentage_threshold = 2;
     */
    value: number;
    case: "contentWatchedPercentageThreshold";
  } | {
    /**
     * Specifies the content watched minutes threshold for demotion.
     *
     * @generated from field: float content_watched_seconds_threshold = 5;
     */
    value: number;
    case: "contentWatchedSecondsThreshold";
  } | { case: undefined; value?: undefined };

  /**
   * Specifies the event type used for demoting recommendation result.
   * Currently supported values:
   *
   * * `view-item`: Item viewed.
   * * `media-play`: Start/resume watching a video, playing a song, etc.
   * * `media-complete`: Finished or stopped midway through a video, song,
   * etc.
   *
   * If unset, watch history demotion will not be applied. Content freshness
   * demotion will still be applied.
   *
   * @generated from field: string demotion_event_type = 1;
   */
  demotionEventType: string;

  /**
   * Specifies the content freshness used for recommendation result.
   * Contents will be demoted if contents were published for more than content
   * freshness cutoff days.
   *
   * @generated from field: int32 content_freshness_cutoff_days = 4;
   */
  contentFreshnessCutoffDays: number;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ServingConfig.MediaConfig.
 * Use `create(ServingConfig_MediaConfigSchema)` to create a new message.
 */
export const ServingConfig_MediaConfigSchema: GenMessage<ServingConfig_MediaConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_serving_config, 0, 0);

/**
 * Specifies the configurations needed for Generic Discovery.Currently we
 * support:
 *
 * * `content_search_spec`: configuration for generic content search.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ServingConfig.GenericConfig
 */
export type ServingConfig_GenericConfig = Message<"google.cloud.discoveryengine.v1alpha.ServingConfig.GenericConfig"> & {
  /**
   * Specifies the expected behavior of content search.
   * Only valid for content-search enabled data store.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.SearchRequest.ContentSearchSpec content_search_spec = 1;
   */
  contentSearchSpec?: SearchRequest_ContentSearchSpec;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ServingConfig.GenericConfig.
 * Use `create(ServingConfig_GenericConfigSchema)` to create a new message.
 */
export const ServingConfig_GenericConfigSchema: GenMessage<ServingConfig_GenericConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_serving_config, 0, 1);

