// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1alpha/engine.proto (package google.cloud.discoveryengine.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { IndustryVertical, SearchAddOn, SearchTier, SolutionType } from "./common_pb";
import { file_google_cloud_discoveryengine_v1alpha_common } from "./common_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1alpha/engine.proto.
 */
export const file_google_cloud_discoveryengine_v1alpha_engine: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYWxwaGEvZW5naW5lLnByb3RvEiRnb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEi9BUKBkVuZ2luZRJtChhzaW1pbGFyX2RvY3VtZW50c19jb25maWcYCSABKAsySS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuRW5naW5lLlNpbWlsYXJEb2N1bWVudHNFbmdpbmVDb25maWdIABJbChJjaGF0X2VuZ2luZV9jb25maWcYCyABKAsyPS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuRW5naW5lLkNoYXRFbmdpbmVDb25maWdIABJfChRzZWFyY2hfZW5naW5lX2NvbmZpZxgNIAEoCzI/Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5FbmdpbmUuU2VhcmNoRW5naW5lQ29uZmlnSAASegoibWVkaWFfcmVjb21tZW5kYXRpb25fZW5naW5lX2NvbmZpZxgOIAEoCzJMLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5FbmdpbmUuTWVkaWFSZWNvbW1lbmRhdGlvbkVuZ2luZUNvbmZpZ0gAEmsKF3JlY29tbWVuZGF0aW9uX21ldGFkYXRhGAogASgLMkMuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkVuZ2luZS5SZWNvbW1lbmRhdGlvbk1ldGFkYXRhQgPgQQNIARJkChRjaGF0X2VuZ2luZV9tZXRhZGF0YRgMIAEoCzI/Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5FbmdpbmUuQ2hhdEVuZ2luZU1ldGFkYXRhQgPgQQNIARIRCgRuYW1lGAEgASgJQgPgQQUSGQoMZGlzcGxheV9uYW1lGAIgASgJQgPgQQISNAoLY3JlYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSFgoOZGF0YV9zdG9yZV9pZHMYBSADKAkSTgoNc29sdXRpb25fdHlwZRgGIAEoDjIyLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5Tb2x1dGlvblR5cGVCA+BBAhJRChFpbmR1c3RyeV92ZXJ0aWNhbBgQIAEoDjI2Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5JbmR1c3RyeVZlcnRpY2FsElAKDWNvbW1vbl9jb25maWcYDyABKAsyOS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuRW5naW5lLkNvbW1vbkNvbmZpZxqmAQoSU2VhcmNoRW5naW5lQ29uZmlnEkUKC3NlYXJjaF90aWVyGAEgASgOMjAuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlNlYXJjaFRpZXISSQoOc2VhcmNoX2FkZF9vbnMYAiADKA4yMS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuU2VhcmNoQWRkT24aHgocU2ltaWxhckRvY3VtZW50c0VuZ2luZUNvbmZpZxqGBAofTWVkaWFSZWNvbW1lbmRhdGlvbkVuZ2luZUNvbmZpZxIRCgR0eXBlGAEgASgJQgPgQQISHgoWb3B0aW1pemF0aW9uX29iamVjdGl2ZRgCIAEoCRKPAQodb3B0aW1pemF0aW9uX29iamVjdGl2ZV9jb25maWcYAyABKAsyaC5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuRW5naW5lLk1lZGlhUmVjb21tZW5kYXRpb25FbmdpbmVDb25maWcuT3B0aW1pemF0aW9uT2JqZWN0aXZlQ29uZmlnEnIKDnRyYWluaW5nX3N0YXRlGAQgASgOMlouZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkVuZ2luZS5NZWRpYVJlY29tbWVuZGF0aW9uRW5naW5lQ29uZmlnLlRyYWluaW5nU3RhdGUaXwobT3B0aW1pemF0aW9uT2JqZWN0aXZlQ29uZmlnEhkKDHRhcmdldF9maWVsZBgBIAEoCUID4EECEiUKGHRhcmdldF9maWVsZF92YWx1ZV9mbG9hdBgCIAEoAkID4EECIkkKDVRyYWluaW5nU3RhdGUSHgoaVFJBSU5JTkdfU1RBVEVfVU5TUEVDSUZJRUQQABIKCgZQQVVTRUQQARIMCghUUkFJTklORxACGpgCChBDaGF0RW5naW5lQ29uZmlnEnAKFWFnZW50X2NyZWF0aW9uX2NvbmZpZxgBIAEoCzJRLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5FbmdpbmUuQ2hhdEVuZ2luZUNvbmZpZy5BZ2VudENyZWF0aW9uQ29uZmlnEiAKGGRpYWxvZ2Zsb3dfYWdlbnRfdG9fbGluaxgCIAEoCRpwChNBZ2VudENyZWF0aW9uQ29uZmlnEhAKCGJ1c2luZXNzGAEgASgJEh0KFWRlZmF1bHRfbGFuZ3VhZ2VfY29kZRgCIAEoCRIWCgl0aW1lX3pvbmUYAyABKAlCA+BBAhIQCghsb2NhdGlvbhgEIAEoCRokCgxDb21tb25Db25maWcSFAoMY29tcGFueV9uYW1lGAEgASgJGuADChZSZWNvbW1lbmRhdGlvbk1ldGFkYXRhEmwKDXNlcnZpbmdfc3RhdGUYASABKA4yUC5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuRW5naW5lLlJlY29tbWVuZGF0aW9uTWV0YWRhdGEuU2VydmluZ1N0YXRlQgPgQQMSZgoKZGF0YV9zdGF0ZRgCIAEoDjJNLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5FbmdpbmUuUmVjb21tZW5kYXRpb25NZXRhZGF0YS5EYXRhU3RhdGVCA+BBAxI3Cg5sYXN0X3R1bmVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxIdChB0dW5pbmdfb3BlcmF0aW9uGAQgASgJQgPgQQMiUgoMU2VydmluZ1N0YXRlEh0KGVNFUlZJTkdfU1RBVEVfVU5TUEVDSUZJRUQQABIMCghJTkFDVElWRRABEgoKBkFDVElWRRACEgkKBVRVTkVEEAMiRAoJRGF0YVN0YXRlEhoKFkRBVEFfU1RBVEVfVU5TUEVDSUZJRUQQABILCgdEQVRBX09LEAESDgoKREFUQV9FUlJPUhACGi4KEkNoYXRFbmdpbmVNZXRhZGF0YRIYChBkaWFsb2dmbG93X2FnZW50GAEgASgJOn3qQXoKJWRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbS9FbmdpbmUSUXByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbn0vZW5naW5lcy97ZW5naW5lfUIPCg1lbmdpbmVfY29uZmlnQhEKD2VuZ2luZV9tZXRhZGF0YUKXAgooY29tLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYUILRW5naW5lUHJvdG9QAVpSY2xvdWQuZ29vZ2xlLmNvbS9nby9kaXNjb3ZlcnllbmdpbmUvYXBpdjFhbHBoYS9kaXNjb3ZlcnllbmdpbmVwYjtkaXNjb3ZlcnllbmdpbmVwYqICD0RJU0NPVkVSWUVOR0lORaoCJEdvb2dsZS5DbG91ZC5EaXNjb3ZlcnlFbmdpbmUuVjFBbHBoYcoCJEdvb2dsZVxDbG91ZFxEaXNjb3ZlcnlFbmdpbmVcVjFhbHBoYeoCJ0dvb2dsZTo6Q2xvdWQ6OkRpc2NvdmVyeUVuZ2luZTo6VjFhbHBoYWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_discoveryengine_v1alpha_common, file_google_protobuf_timestamp]);

/**
 * Metadata that describes the training and serving parameters of an
 * [Engine][google.cloud.discoveryengine.v1alpha.Engine].
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Engine
 */
export type Engine = Message<"google.cloud.discoveryengine.v1alpha.Engine"> & {
  /**
   * Additional config specs that defines the behavior of the engine.
   *
   * @generated from oneof google.cloud.discoveryengine.v1alpha.Engine.engine_config
   */
  engineConfig: {
    /**
     * Additional config specs for a `similar-items` engine.
     *
     * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.SimilarDocumentsEngineConfig similar_documents_config = 9;
     */
    value: Engine_SimilarDocumentsEngineConfig;
    case: "similarDocumentsConfig";
  } | {
    /**
     * Configurations for the Chat Engine. Only applicable if
     * [solution_type][google.cloud.discoveryengine.v1alpha.Engine.solution_type]
     * is
     * [SOLUTION_TYPE_CHAT][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_CHAT].
     *
     * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.ChatEngineConfig chat_engine_config = 11;
     */
    value: Engine_ChatEngineConfig;
    case: "chatEngineConfig";
  } | {
    /**
     * Configurations for the Search Engine. Only applicable if
     * [solution_type][google.cloud.discoveryengine.v1alpha.Engine.solution_type]
     * is
     * [SOLUTION_TYPE_SEARCH][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_SEARCH].
     *
     * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.SearchEngineConfig search_engine_config = 13;
     */
    value: Engine_SearchEngineConfig;
    case: "searchEngineConfig";
  } | {
    /**
     * Configurations for the Media Engine. Only applicable on the data
     * stores with
     * [solution_type][google.cloud.discoveryengine.v1alpha.Engine.solution_type]
     * [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_RECOMMENDATION]
     * and
     * [IndustryVertical.MEDIA][google.cloud.discoveryengine.v1alpha.IndustryVertical.MEDIA]
     * vertical.
     *
     * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig media_recommendation_engine_config = 14;
     */
    value: Engine_MediaRecommendationEngineConfig;
    case: "mediaRecommendationEngineConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Engine metadata to monitor the status of the engine.
   *
   * @generated from oneof google.cloud.discoveryengine.v1alpha.Engine.engine_metadata
   */
  engineMetadata: {
    /**
     * Output only. Additional information of a recommendation engine. Only
     * applicable if
     * [solution_type][google.cloud.discoveryengine.v1alpha.Engine.solution_type]
     * is
     * [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
     *
     * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.RecommendationMetadata recommendation_metadata = 10;
     */
    value: Engine_RecommendationMetadata;
    case: "recommendationMetadata";
  } | {
    /**
     * Output only. Additional information of the Chat Engine. Only applicable
     * if
     * [solution_type][google.cloud.discoveryengine.v1alpha.Engine.solution_type]
     * is
     * [SOLUTION_TYPE_CHAT][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_CHAT].
     *
     * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.ChatEngineMetadata chat_engine_metadata = 12;
     */
    value: Engine_ChatEngineMetadata;
    case: "chatEngineMetadata";
  } | { case: undefined; value?: undefined };

  /**
   * Immutable. The fully qualified resource name of the engine.
   *
   * This field must be a UTF-8 encoded string with a length limit of 1024
   * characters.
   *
   * Format:
   * `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}`
   * engine should be 1-63 characters, and valid characters are
   * /[a-z0-9][a-z0-9-_]*\/. Otherwise, an INVALID_ARGUMENT error is returned.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The display name of the engine. Should be human readable. UTF-8
   * encoded string with limit of 1024 characters.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Output only. Timestamp the Recommendation Engine was created at.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. Timestamp the Recommendation Engine was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * The data stores associated with this engine.
   *
   * For
   * [SOLUTION_TYPE_SEARCH][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_SEARCH]
   * and
   * [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_RECOMMENDATION]
   * type of engines, they can only associate with at most one data store.
   *
   * If
   * [solution_type][google.cloud.discoveryengine.v1alpha.Engine.solution_type]
   * is
   * [SOLUTION_TYPE_CHAT][google.cloud.discoveryengine.v1alpha.SolutionType.SOLUTION_TYPE_CHAT],
   * multiple [DataStore][google.cloud.discoveryengine.v1alpha.DataStore]s in
   * the same [Collection][google.cloud.discoveryengine.v1alpha.Collection] can
   * be associated here.
   *
   * Note that when used in
   * [CreateEngineRequest][google.cloud.discoveryengine.v1alpha.CreateEngineRequest],
   * one DataStore id must be provided as the system will use it for necessary
   * initializations.
   *
   * @generated from field: repeated string data_store_ids = 5;
   */
  dataStoreIds: string[];

  /**
   * Required. The solutions of the engine.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.SolutionType solution_type = 6;
   */
  solutionType: SolutionType;

  /**
   * The industry vertical that the engine registers.
   * The restriction of the Engine industry vertical is based on
   * [DataStore][google.cloud.discoveryengine.v1alpha.DataStore]: If
   * unspecified, default to `GENERIC`. Vertical on Engine has to match vertical
   * of the DataStore linked to the engine.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.IndustryVertical industry_vertical = 16;
   */
  industryVertical: IndustryVertical;

  /**
   * Common config spec that specifies the metadata of the engine.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.CommonConfig common_config = 15;
   */
  commonConfig?: Engine_CommonConfig;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Engine.
 * Use `create(EngineSchema)` to create a new message.
 */
export const EngineSchema: GenMessage<Engine> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0);

/**
 * Configurations for a Search Engine.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Engine.SearchEngineConfig
 */
export type Engine_SearchEngineConfig = Message<"google.cloud.discoveryengine.v1alpha.Engine.SearchEngineConfig"> & {
  /**
   * The search feature tier of this engine.
   *
   * Different tiers might have different
   * pricing. To learn more, check the pricing documentation.
   *
   * Defaults to
   * [SearchTier.SEARCH_TIER_STANDARD][google.cloud.discoveryengine.v1alpha.SearchTier.SEARCH_TIER_STANDARD]
   * if not specified.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.SearchTier search_tier = 1;
   */
  searchTier: SearchTier;

  /**
   * The add-on that this search engine enables.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1alpha.SearchAddOn search_add_ons = 2;
   */
  searchAddOns: SearchAddOn[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Engine.SearchEngineConfig.
 * Use `create(Engine_SearchEngineConfigSchema)` to create a new message.
 */
export const Engine_SearchEngineConfigSchema: GenMessage<Engine_SearchEngineConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 0);

/**
 * Additional config specs for a `similar-items` engine.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Engine.SimilarDocumentsEngineConfig
 */
export type Engine_SimilarDocumentsEngineConfig = Message<"google.cloud.discoveryengine.v1alpha.Engine.SimilarDocumentsEngineConfig"> & {
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Engine.SimilarDocumentsEngineConfig.
 * Use `create(Engine_SimilarDocumentsEngineConfigSchema)` to create a new message.
 */
export const Engine_SimilarDocumentsEngineConfigSchema: GenMessage<Engine_SimilarDocumentsEngineConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 1);

/**
 * Additional config specs for a Media Recommendation engine.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig
 */
export type Engine_MediaRecommendationEngineConfig = Message<"google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig"> & {
  /**
   * Required. The type of engine. e.g., `recommended-for-you`.
   *
   * This field together with
   * [optimization_objective][Engine.optimization_objective] describe engine
   * metadata to use to control engine training and serving.
   *
   * Currently supported values: `recommended-for-you`, `others-you-may-like`,
   * `more-like-this`, `most-popular-items`.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * The optimization objective. e.g., `cvr`.
   *
   * This field together with
   * [optimization_objective][google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig.type]
   * describe engine metadata to use to control engine training and serving.
   *
   * Currently supported
   * values: `ctr`, `cvr`.
   *
   *  If not specified, we choose default based on engine type.
   * Default depends on type of recommendation:
   *
   * `recommended-for-you` => `ctr`
   *
   * `others-you-may-like` => `ctr`
   *
   * @generated from field: string optimization_objective = 2;
   */
  optimizationObjective: string;

  /**
   * Name and value of the custom threshold for cvr optimization_objective.
   * For target_field `watch-time`, target_field_value must be an integer
   * value indicating the media progress time in seconds between (0, 86400]
   * (excludes 0, includes 86400) (e.g., 90).
   * For target_field `watch-percentage`, the target_field_value must be a
   * valid float value between (0, 1.0] (excludes 0, includes 1.0) (e.g.,
   * 0.5).
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig.OptimizationObjectiveConfig optimization_objective_config = 3;
   */
  optimizationObjectiveConfig?: Engine_MediaRecommendationEngineConfig_OptimizationObjectiveConfig;

  /**
   * The training state that the engine is in (e.g.
   * `TRAINING` or `PAUSED`).
   *
   * Since part of the cost of running the service
   * is frequency of training - this can be used to determine when to train
   * engine in order to control cost. If not specified: the default value for
   * `CreateEngine` method is `TRAINING`. The default value for
   * `UpdateEngine` method is to keep the state the same as before.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig.TrainingState training_state = 4;
   */
  trainingState: Engine_MediaRecommendationEngineConfig_TrainingState;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig.
 * Use `create(Engine_MediaRecommendationEngineConfigSchema)` to create a new message.
 */
export const Engine_MediaRecommendationEngineConfigSchema: GenMessage<Engine_MediaRecommendationEngineConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 2);

/**
 * Custom threshold for `cvr` optimization_objective.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig.OptimizationObjectiveConfig
 */
export type Engine_MediaRecommendationEngineConfig_OptimizationObjectiveConfig = Message<"google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig.OptimizationObjectiveConfig"> & {
  /**
   * Required. The name of the field to target. Currently supported
   * values: `watch-percentage`, `watch-time`.
   *
   * @generated from field: string target_field = 1;
   */
  targetField: string;

  /**
   * Required. The threshold to be applied to the target (e.g., 0.5).
   *
   * @generated from field: float target_field_value_float = 2;
   */
  targetFieldValueFloat: number;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig.OptimizationObjectiveConfig.
 * Use `create(Engine_MediaRecommendationEngineConfig_OptimizationObjectiveConfigSchema)` to create a new message.
 */
export const Engine_MediaRecommendationEngineConfig_OptimizationObjectiveConfigSchema: GenMessage<Engine_MediaRecommendationEngineConfig_OptimizationObjectiveConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 2, 0);

/**
 * The training state of the engine.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig.TrainingState
 */
export enum Engine_MediaRecommendationEngineConfig_TrainingState {
  /**
   * Unspecified training state.
   *
   * @generated from enum value: TRAINING_STATE_UNSPECIFIED = 0;
   */
  TRAINING_STATE_UNSPECIFIED = 0,

  /**
   * The engine training is paused.
   *
   * @generated from enum value: PAUSED = 1;
   */
  PAUSED = 1,

  /**
   * The engine is training.
   *
   * @generated from enum value: TRAINING = 2;
   */
  TRAINING = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.Engine.MediaRecommendationEngineConfig.TrainingState.
 */
export const Engine_MediaRecommendationEngineConfig_TrainingStateSchema: GenEnum<Engine_MediaRecommendationEngineConfig_TrainingState> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 2, 0);

/**
 * Configurations for a Chat Engine.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Engine.ChatEngineConfig
 */
export type Engine_ChatEngineConfig = Message<"google.cloud.discoveryengine.v1alpha.Engine.ChatEngineConfig"> & {
  /**
   * The configurationt generate the Dialogflow agent that is associated to
   * this Engine.
   *
   * Note that these configurations are one-time consumed by
   * and passed to Dialogflow service. It means they cannot be retrieved using
   * [EngineService.GetEngine][google.cloud.discoveryengine.v1alpha.EngineService.GetEngine]
   * or
   * [EngineService.ListEngines][google.cloud.discoveryengine.v1alpha.EngineService.ListEngines]
   * API after engine creation.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.ChatEngineConfig.AgentCreationConfig agent_creation_config = 1;
   */
  agentCreationConfig?: Engine_ChatEngineConfig_AgentCreationConfig;

  /**
   * The resource name of an exist Dialogflow agent to link to this Chat
   * Engine. Customers can either provide `agent_creation_config` to create
   * agent or provide an agent name that links the agent with the Chat engine.
   *
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>`.
   *
   * Note that the `dialogflow_agent_to_link` are one-time consumed by and
   * passed to Dialogflow service. It means they cannot be retrieved using
   * [EngineService.GetEngine][google.cloud.discoveryengine.v1alpha.EngineService.GetEngine]
   * or
   * [EngineService.ListEngines][google.cloud.discoveryengine.v1alpha.EngineService.ListEngines]
   * API after engine creation. Use
   * [ChatEngineMetadata.dialogflow_agent][google.cloud.discoveryengine.v1alpha.Engine.ChatEngineMetadata.dialogflow_agent]
   * for actual agent association after Engine is created.
   *
   * @generated from field: string dialogflow_agent_to_link = 2;
   */
  dialogflowAgentToLink: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Engine.ChatEngineConfig.
 * Use `create(Engine_ChatEngineConfigSchema)` to create a new message.
 */
export const Engine_ChatEngineConfigSchema: GenMessage<Engine_ChatEngineConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 3);

/**
 * Configurations for generating a Dialogflow agent.
 *
 * Note that these configurations are one-time consumed by
 * and passed to Dialogflow service. It means they cannot be retrieved using
 * [EngineService.GetEngine][google.cloud.discoveryengine.v1alpha.EngineService.GetEngine]
 * or
 * [EngineService.ListEngines][google.cloud.discoveryengine.v1alpha.EngineService.ListEngines]
 * API after engine creation.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Engine.ChatEngineConfig.AgentCreationConfig
 */
export type Engine_ChatEngineConfig_AgentCreationConfig = Message<"google.cloud.discoveryengine.v1alpha.Engine.ChatEngineConfig.AgentCreationConfig"> & {
  /**
   * Name of the company, organization or other entity that the agent
   * represents. Used for knowledge connector LLM prompt and for knowledge
   * search.
   *
   * @generated from field: string business = 1;
   */
  business: string;

  /**
   * Required. The default language of the agent as a language tag.
   * See [Language
   * Support](https://cloud.google.com/dialogflow/docs/reference/language)
   * for a list of the currently supported language codes.
   *
   * @generated from field: string default_language_code = 2;
   */
  defaultLanguageCode: string;

  /**
   * Required. The time zone of the agent from the [time zone
   * database](https://www.iana.org/time-zones), e.g., America/New_York,
   * Europe/Paris.
   *
   * @generated from field: string time_zone = 3;
   */
  timeZone: string;

  /**
   * Agent location for Agent creation, supported values: global/us/eu.
   * If not provided, us Engine will create Agent using us-central-1 by
   * default; eu Engine will create Agent using eu-west-1 by default.
   *
   * @generated from field: string location = 4;
   */
  location: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Engine.ChatEngineConfig.AgentCreationConfig.
 * Use `create(Engine_ChatEngineConfig_AgentCreationConfigSchema)` to create a new message.
 */
export const Engine_ChatEngineConfig_AgentCreationConfigSchema: GenMessage<Engine_ChatEngineConfig_AgentCreationConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 3, 0);

/**
 * Common configurations for an Engine.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Engine.CommonConfig
 */
export type Engine_CommonConfig = Message<"google.cloud.discoveryengine.v1alpha.Engine.CommonConfig"> & {
  /**
   * The name of the company, business or entity that is associated with the
   * engine. Setting this may help improve LLM related features.
   *
   * @generated from field: string company_name = 1;
   */
  companyName: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Engine.CommonConfig.
 * Use `create(Engine_CommonConfigSchema)` to create a new message.
 */
export const Engine_CommonConfigSchema: GenMessage<Engine_CommonConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 4);

/**
 * Additional information of a recommendation engine.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Engine.RecommendationMetadata
 */
export type Engine_RecommendationMetadata = Message<"google.cloud.discoveryengine.v1alpha.Engine.RecommendationMetadata"> & {
  /**
   * Output only. The serving state of the engine: `ACTIVE`, `NOT_ACTIVE`.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.RecommendationMetadata.ServingState serving_state = 1;
   */
  servingState: Engine_RecommendationMetadata_ServingState;

  /**
   * Output only. The state of data requirements for this engine: `DATA_OK`
   * and `DATA_ERROR`.
   *
   * Engine cannot be trained if the data is in
   * `DATA_ERROR` state. Engine can have `DATA_ERROR` state even
   * if serving state is `ACTIVE`: engines were trained successfully before,
   * but cannot be refreshed because the underlying engine no longer has
   * sufficient data for training.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.Engine.RecommendationMetadata.DataState data_state = 2;
   */
  dataState: Engine_RecommendationMetadata_DataState;

  /**
   * Output only. The timestamp when the latest successful tune finished. Only
   * applicable on Media Recommendation engines.
   *
   * @generated from field: google.protobuf.Timestamp last_tune_time = 3;
   */
  lastTuneTime?: Timestamp;

  /**
   * Output only. The latest tune operation id associated with the engine.
   * Only applicable on Media Recommendation engines.
   *
   * If present, this operation id can be used to determine if there is an
   * ongoing tune for this engine. To check the operation status, send the
   * GetOperation request with this operation id in the engine resource
   * format. If no tuning has happened for this engine, the string is empty.
   *
   * @generated from field: string tuning_operation = 4;
   */
  tuningOperation: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Engine.RecommendationMetadata.
 * Use `create(Engine_RecommendationMetadataSchema)` to create a new message.
 */
export const Engine_RecommendationMetadataSchema: GenMessage<Engine_RecommendationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 5);

/**
 * The serving state of the recommendation engine.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.Engine.RecommendationMetadata.ServingState
 */
export enum Engine_RecommendationMetadata_ServingState {
  /**
   * Unspecified serving state.
   *
   * @generated from enum value: SERVING_STATE_UNSPECIFIED = 0;
   */
  SERVING_STATE_UNSPECIFIED = 0,

  /**
   * The engine is not serving.
   *
   * @generated from enum value: INACTIVE = 1;
   */
  INACTIVE = 1,

  /**
   * The engine is serving and can be queried.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The engine is trained on tuned hyperparameters and can be
   * queried.
   *
   * @generated from enum value: TUNED = 3;
   */
  TUNED = 3,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.Engine.RecommendationMetadata.ServingState.
 */
export const Engine_RecommendationMetadata_ServingStateSchema: GenEnum<Engine_RecommendationMetadata_ServingState> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 5, 0);

/**
 * Describes whether this engine have sufficient training data
 * to be continuously trained.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.Engine.RecommendationMetadata.DataState
 */
export enum Engine_RecommendationMetadata_DataState {
  /**
   * Unspecified default value, should never be explicitly set.
   *
   * @generated from enum value: DATA_STATE_UNSPECIFIED = 0;
   */
  DATA_STATE_UNSPECIFIED = 0,

  /**
   * The engine has sufficient training data.
   *
   * @generated from enum value: DATA_OK = 1;
   */
  DATA_OK = 1,

  /**
   * The engine does not have sufficient training data. Error
   * messages can be queried via Stackdriver.
   *
   * @generated from enum value: DATA_ERROR = 2;
   */
  DATA_ERROR = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.Engine.RecommendationMetadata.DataState.
 */
export const Engine_RecommendationMetadata_DataStateSchema: GenEnum<Engine_RecommendationMetadata_DataState> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 5, 1);

/**
 * Additional information of a Chat Engine.
 * Fields in this message are output only.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Engine.ChatEngineMetadata
 */
export type Engine_ChatEngineMetadata = Message<"google.cloud.discoveryengine.v1alpha.Engine.ChatEngineMetadata"> & {
  /**
   * The resource name of a Dialogflow agent, that this Chat Engine refers
   * to.
   *
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>`.
   *
   * @generated from field: string dialogflow_agent = 1;
   */
  dialogflowAgent: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Engine.ChatEngineMetadata.
 * Use `create(Engine_ChatEngineMetadataSchema)` to create a new message.
 */
export const Engine_ChatEngineMetadataSchema: GenMessage<Engine_ChatEngineMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_engine, 0, 6);

