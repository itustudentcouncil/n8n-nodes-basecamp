// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1alpha/schema.proto (package google.cloud.discoveryengine.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1alpha/schema.proto.
 */
export const file_google_cloud_discoveryengine_v1alpha_schema: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYWxwaGEvc2NoZW1hLnByb3RvEiRnb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEiqAMKBlNjaGVtYRIwCg1zdHJ1Y3Rfc2NoZW1hGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdEgAEhUKC2pzb25fc2NoZW1hGAMgASgJSAASEQoEbmFtZRgBIAEoCUID4EEFEk0KDWZpZWxkX2NvbmZpZ3MYBCADKAsyMS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuRmllbGRDb25maWdCA+BBAzroAepB5AEKJWRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbS9TY2hlbWESUHByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9kYXRhU3RvcmVzL3tkYXRhX3N0b3JlfS9zY2hlbWFzL3tzY2hlbWF9Emlwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb259L2RhdGFTdG9yZXMve2RhdGFfc3RvcmV9L3NjaGVtYXMve3NjaGVtYX1CCAoGc2NoZW1hIq0OCgtGaWVsZENvbmZpZxIXCgpmaWVsZF9wYXRoGAEgASgJQgPgQQISVAoKZmllbGRfdHlwZRgCIAEoDjI7Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5GaWVsZENvbmZpZy5GaWVsZFR5cGVCA+BBAxJbChBpbmRleGFibGVfb3B0aW9uGAMgASgOMkEuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkZpZWxkQ29uZmlnLkluZGV4YWJsZU9wdGlvbhJqChhkeW5hbWljX2ZhY2V0YWJsZV9vcHRpb24YBCABKA4ySC5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuRmllbGRDb25maWcuRHluYW1pY0ZhY2V0YWJsZU9wdGlvbhJdChFzZWFyY2hhYmxlX29wdGlvbhgFIAEoDjJCLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5GaWVsZENvbmZpZy5TZWFyY2hhYmxlT3B0aW9uEl8KEnJldHJpZXZhYmxlX29wdGlvbhgGIAEoDjJDLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5GaWVsZENvbmZpZy5SZXRyaWV2YWJsZU9wdGlvbhJfChJjb21wbGV0YWJsZV9vcHRpb24YCCABKA4yQy5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuRmllbGRDb25maWcuQ29tcGxldGFibGVPcHRpb24SYgoWcmVjc19maWx0ZXJhYmxlX29wdGlvbhgJIAEoDjJCLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5GaWVsZENvbmZpZy5GaWx0ZXJhYmxlT3B0aW9uEh4KEWtleV9wcm9wZXJ0eV90eXBlGAcgASgJQgPgQQMSeQohYWR2YW5jZWRfc2l0ZV9zZWFyY2hfZGF0YV9zb3VyY2VzGAogAygOMk4uZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkZpZWxkQ29uZmlnLkFkdmFuY2VkU2l0ZVNlYXJjaERhdGFTb3VyY2USGAoQc2NoZW1hX29yZ19wYXRocxgLIAMoCSKEAQoJRmllbGRUeXBlEhoKFkZJRUxEX1RZUEVfVU5TUEVDSUZJRUQQABIKCgZPQkpFQ1QQARIKCgZTVFJJTkcQAhIKCgZOVU1CRVIQAxILCgdJTlRFR0VSEAQSCwoHQk9PTEVBThAFEg8KC0dFT0xPQ0FUSU9OEAYSDAoIREFURVRJTUUQByJiCg9JbmRleGFibGVPcHRpb24SIAocSU5ERVhBQkxFX09QVElPTl9VTlNQRUNJRklFRBAAEhUKEUlOREVYQUJMRV9FTkFCTEVEEAESFgoSSU5ERVhBQkxFX0RJU0FCTEVEEAIigQEKFkR5bmFtaWNGYWNldGFibGVPcHRpb24SKAokRFlOQU1JQ19GQUNFVEFCTEVfT1BUSU9OX1VOU1BFQ0lGSUVEEAASHQoZRFlOQU1JQ19GQUNFVEFCTEVfRU5BQkxFRBABEh4KGkRZTkFNSUNfRkFDRVRBQkxFX0RJU0FCTEVEEAIiZgoQU2VhcmNoYWJsZU9wdGlvbhIhCh1TRUFSQ0hBQkxFX09QVElPTl9VTlNQRUNJRklFRBAAEhYKElNFQVJDSEFCTEVfRU5BQkxFRBABEhcKE1NFQVJDSEFCTEVfRElTQUJMRUQQAiJqChFSZXRyaWV2YWJsZU9wdGlvbhIiCh5SRVRSSUVWQUJMRV9PUFRJT05fVU5TUEVDSUZJRUQQABIXChNSRVRSSUVWQUJMRV9FTkFCTEVEEAESGAoUUkVUUklFVkFCTEVfRElTQUJMRUQQAiJqChFDb21wbGV0YWJsZU9wdGlvbhIiCh5DT01QTEVUQUJMRV9PUFRJT05fVU5TUEVDSUZJRUQQABIXChNDT01QTEVUQUJMRV9FTkFCTEVEEAESGAoUQ09NUExFVEFCTEVfRElTQUJMRUQQAiJmChBGaWx0ZXJhYmxlT3B0aW9uEiEKHUZJTFRFUkFCTEVfT1BUSU9OX1VOU1BFQ0lGSUVEEAASFgoSRklMVEVSQUJMRV9FTkFCTEVEEAESFwoTRklMVEVSQUJMRV9ESVNBQkxFRBACIpQBChxBZHZhbmNlZFNpdGVTZWFyY2hEYXRhU291cmNlEjAKLEFEVkFOQ0VEX1NJVEVfU0VBUkNIX0RBVEFfU09VUkNFX1VOU1BFQ0lGSUVEEAASDAoITUVUQVRBR1MQARILCgdQQUdFTUFQEAISFwoTVVJJX1BBVFRFUk5fTUFQUElORxADEg4KClNDSEVNQV9PUkcQBEKXAgooY29tLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYUILU2NoZW1hUHJvdG9QAVpSY2xvdWQuZ29vZ2xlLmNvbS9nby9kaXNjb3ZlcnllbmdpbmUvYXBpdjFhbHBoYS9kaXNjb3ZlcnllbmdpbmVwYjtkaXNjb3ZlcnllbmdpbmVwYqICD0RJU0NPVkVSWUVOR0lORaoCJEdvb2dsZS5DbG91ZC5EaXNjb3ZlcnlFbmdpbmUuVjFBbHBoYcoCJEdvb2dsZVxDbG91ZFxEaXNjb3ZlcnlFbmdpbmVcVjFhbHBoYeoCJ0dvb2dsZTo6Q2xvdWQ6OkRpc2NvdmVyeUVuZ2luZTo6VjFhbHBoYWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_struct]);

/**
 * Defines the structure and layout of a type of document data.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Schema
 */
export type Schema = Message<"google.cloud.discoveryengine.v1alpha.Schema"> & {
  /**
   * Schema representation. One of
   * [struct_schema][google.cloud.discoveryengine.v1alpha.Schema.struct_schema]
   * or [json_schema][google.cloud.discoveryengine.v1alpha.Schema.json_schema]
   * should be provided otherwise an `INVALID_ARGUMENT` error is thrown.
   *
   * @generated from oneof google.cloud.discoveryengine.v1alpha.Schema.schema
   */
  schema: {
    /**
     * The structured representation of the schema.
     *
     * @generated from field: google.protobuf.Struct struct_schema = 2;
     */
    value: JsonObject;
    case: "structSchema";
  } | {
    /**
     * The JSON representation of the schema.
     *
     * @generated from field: string json_schema = 3;
     */
    value: string;
    case: "jsonSchema";
  } | { case: undefined; value?: undefined };

  /**
   * Immutable. The full resource name of the schema, in the format of
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
   *
   * This field must be a UTF-8 encoded string with a length limit of 1024
   * characters.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Configurations for fields of the schema.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1alpha.FieldConfig field_configs = 4;
   */
  fieldConfigs: FieldConfig[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Schema.
 * Use `create(SchemaSchema)` to create a new message.
 */
export const SchemaSchema: GenMessage<Schema> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_schema, 0);

/**
 * Configurations for fields of a schema. For example, configuring a field is
 * indexable, or searchable.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.FieldConfig
 */
export type FieldConfig = Message<"google.cloud.discoveryengine.v1alpha.FieldConfig"> & {
  /**
   * Required. Field path of the schema field.
   * For example: `title`, `description`, `release_info.release_year`.
   *
   * @generated from field: string field_path = 1;
   */
  fieldPath: string;

  /**
   * Output only. Raw type of the field.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.FieldConfig.FieldType field_type = 2;
   */
  fieldType: FieldConfig_FieldType;

  /**
   * If
   * [indexable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.indexable_option]
   * is
   * [INDEXABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.IndexableOption.INDEXABLE_ENABLED],
   * field values are indexed so that it can be filtered or faceted in
   * [SearchService.Search][google.cloud.discoveryengine.v1alpha.SearchService.Search].
   *
   * If
   * [indexable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.indexable_option]
   * is unset, the server behavior defaults to
   * [INDEXABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.IndexableOption.INDEXABLE_DISABLED]
   * for fields that support setting indexable options. For those fields that do
   * not support setting indexable options, such as `object` and `boolean` and
   * key properties, the server will skip
   * [indexable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.indexable_option]
   * setting, and setting
   * [indexable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.indexable_option]
   * for those fields will throw `INVALID_ARGUMENT` error.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.FieldConfig.IndexableOption indexable_option = 3;
   */
  indexableOption: FieldConfig_IndexableOption;

  /**
   * If
   * [dynamic_facetable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.dynamic_facetable_option]
   * is
   * [DYNAMIC_FACETABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.DynamicFacetableOption.DYNAMIC_FACETABLE_ENABLED],
   * field values are available for dynamic facet. Could only be
   * [DYNAMIC_FACETABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.DynamicFacetableOption.DYNAMIC_FACETABLE_DISABLED]
   * if
   * [FieldConfig.indexable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.indexable_option]
   * is
   * [INDEXABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.IndexableOption.INDEXABLE_DISABLED].
   * Otherwise, an `INVALID_ARGUMENT` error will be returned.
   *
   * If
   * [dynamic_facetable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.dynamic_facetable_option]
   * is unset, the server behavior defaults to
   * [DYNAMIC_FACETABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.DynamicFacetableOption.DYNAMIC_FACETABLE_DISABLED]
   * for fields that support setting dynamic facetable options. For those fields
   * that do not support setting dynamic facetable options, such as `object` and
   * `boolean`, the server will skip dynamic facetable option setting, and
   * setting
   * [dynamic_facetable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.dynamic_facetable_option]
   * for those fields will throw `INVALID_ARGUMENT` error.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.FieldConfig.DynamicFacetableOption dynamic_facetable_option = 4;
   */
  dynamicFacetableOption: FieldConfig_DynamicFacetableOption;

  /**
   * If
   * [searchable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.searchable_option]
   * is
   * [SEARCHABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.SearchableOption.SEARCHABLE_ENABLED],
   * field values are searchable by text queries in
   * [SearchService.Search][google.cloud.discoveryengine.v1alpha.SearchService.Search].
   *
   * If
   * [SEARCHABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.SearchableOption.SEARCHABLE_ENABLED]
   * but field type is numerical, field values will not be searchable by text
   * queries in
   * [SearchService.Search][google.cloud.discoveryengine.v1alpha.SearchService.Search],
   * as there are no text values associated to numerical fields.
   *
   * If
   * [searchable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.searchable_option]
   * is unset, the server behavior defaults to
   * [SEARCHABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.SearchableOption.SEARCHABLE_DISABLED]
   * for fields that support setting searchable options. Only `string` fields
   * that have no key property mapping support setting
   * [searchable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.searchable_option].
   *
   * For those fields that do not support setting searchable options, the server
   * will skip searchable option setting, and setting
   * [searchable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.searchable_option]
   * for those fields will throw `INVALID_ARGUMENT` error.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.FieldConfig.SearchableOption searchable_option = 5;
   */
  searchableOption: FieldConfig_SearchableOption;

  /**
   * If
   * [retrievable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.retrievable_option]
   * is
   * [RETRIEVABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.RetrievableOption.RETRIEVABLE_ENABLED],
   * field values are included in the search results.
   *
   * If
   * [retrievable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.retrievable_option]
   * is unset, the server behavior defaults to
   * [RETRIEVABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.RetrievableOption.RETRIEVABLE_DISABLED]
   * for fields that support setting retrievable options. For those fields
   * that do not support setting retrievable options, such as `object` and
   * `boolean`, the server will skip retrievable option setting, and setting
   * [retrievable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.retrievable_option]
   * for those fields will throw `INVALID_ARGUMENT` error.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.FieldConfig.RetrievableOption retrievable_option = 6;
   */
  retrievableOption: FieldConfig_RetrievableOption;

  /**
   * If
   * [completable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.completable_option]
   * is
   * [COMPLETABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.CompletableOption.COMPLETABLE_ENABLED],
   * field values are directly used and returned as suggestions for Autocomplete
   * in
   * [CompletionService.CompleteQuery][google.cloud.discoveryengine.v1alpha.CompletionService.CompleteQuery].
   *
   * If
   * [completable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.completable_option]
   * is unset, the server behavior defaults to
   * [COMPLETABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.CompletableOption.COMPLETABLE_DISABLED]
   * for fields that support setting completable options, which are just
   * `string` fields. For those fields that do not support setting completable
   * options, the server will skip completable option setting, and setting
   * [completable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.completable_option]
   * for those fields will throw `INVALID_ARGUMENT` error.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.FieldConfig.CompletableOption completable_option = 8;
   */
  completableOption: FieldConfig_CompletableOption;

  /**
   * If
   * [recs_filterable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.recs_filterable_option]
   * is
   * [FILTERABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.FilterableOption.FILTERABLE_ENABLED],
   * field values are filterable by filter expression in
   * [RecommendationService.Recommend][google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend].
   *
   * If
   * [FILTERABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.FilterableOption.FILTERABLE_ENABLED]
   * but the field type is numerical, field values are not filterable by text
   * queries in
   * [RecommendationService.Recommend][google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend].
   * Only textual fields are supported.
   *
   * If
   * [recs_filterable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.recs_filterable_option]
   * is unset, the default setting is
   * [FILTERABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.FilterableOption.FILTERABLE_DISABLED]
   * for fields that support setting filterable options.
   *
   * When a field set to [FILTERABLE_DISABLED] is filtered, a warning is
   * generated and an empty result is returned.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.FieldConfig.FilterableOption recs_filterable_option = 9;
   */
  recsFilterableOption: FieldConfig_FilterableOption;

  /**
   * Output only. Type of the key property that this field is mapped to. Empty
   * string if this is not annotated as mapped to a key property.
   *
   * Example types are `title`, `description`. Full list is defined
   * by `keyPropertyMapping` in the schema field annotation.
   *
   * If the schema field has a `KeyPropertyMapping` annotation,
   * `indexable_option` and `searchable_option` of this field cannot be
   * modified.
   *
   * @generated from field: string key_property_type = 7;
   */
  keyPropertyType: string;

  /**
   * If this field is set, only the corresponding source will be indexed for
   * this field. Otherwise, the values from different sources are merged.
   *
   * Assuming a page with `<author, a>` in meta tag, and `<author, b>` in page
   * map:
   *  if this enum is set to METATAGS, we will only index `<author, a>`;
   *  if this enum is not set, we will merge them and index `<author, [a, b]>`.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1alpha.FieldConfig.AdvancedSiteSearchDataSource advanced_site_search_data_sources = 10;
   */
  advancedSiteSearchDataSources: FieldConfig_AdvancedSiteSearchDataSource[];

  /**
   * Field paths for indexing custom attribute from schema.org data. More
   * details of schema.org and its defined types can be found at
   * [schema.org](https://schema.org).
   *
   * It is only used on advanced site search schema.
   *
   * Currently only support full path from root. The full path to a field is
   * constructed by concatenating field names, starting from `_root`, with
   * a period `.` as the delimiter. Examples:
   *
   * * Publish date of the root: _root.datePublished
   * * Publish date of the reviews: _root.review.datePublished
   *
   * @generated from field: repeated string schema_org_paths = 11;
   */
  schemaOrgPaths: string[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.FieldConfig.
 * Use `create(FieldConfigSchema)` to create a new message.
 */
export const FieldConfigSchema: GenMessage<FieldConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_schema, 1);

/**
 * Field value type in the Schema.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.FieldConfig.FieldType
 */
export enum FieldConfig_FieldType {
  /**
   * Field type is unspecified.
   *
   * @generated from enum value: FIELD_TYPE_UNSPECIFIED = 0;
   */
  FIELD_TYPE_UNSPECIFIED = 0,

  /**
   * Field value type is Object.
   *
   * @generated from enum value: OBJECT = 1;
   */
  OBJECT = 1,

  /**
   * Field value type is String.
   *
   * @generated from enum value: STRING = 2;
   */
  STRING = 2,

  /**
   * Field value type is Number.
   *
   * @generated from enum value: NUMBER = 3;
   */
  NUMBER = 3,

  /**
   * Field value type is Integer.
   *
   * @generated from enum value: INTEGER = 4;
   */
  INTEGER = 4,

  /**
   * Field value type is Boolean.
   *
   * @generated from enum value: BOOLEAN = 5;
   */
  BOOLEAN = 5,

  /**
   * Field value type is Geolocation. Geolocation is expressed as an object
   * with the following keys:
   *
   * * `id`: a string representing the location id
   * * `longitude`: a number representing the longitude coordinate of the
   * location
   * * `latitude`: a number repesenting the latitude coordinate of the
   * location
   * * `address`: a string representing the full address of the location
   *
   * `latitude` and `longitude` must always be provided together. At least one
   * of a) `address` or b) `latitude`-`longitude` pair must be provided.
   *
   * @generated from enum value: GEOLOCATION = 6;
   */
  GEOLOCATION = 6,

  /**
   * Field value type is Datetime. Datetime can be expressed as either:
   *
   * * a number representing milliseconds-since-the-epoch
   * * a string representing milliseconds-since-the-epoch. e.g.
   * `"1420070400001"`
   * * a string representing the [ISO
   * 8601](https://en.wikipedia.org/wiki/ISO_8601) date or date and time. e.g.
   * `"2015-01-01"` or `"2015-01-01T12:10:30Z"`
   *
   * @generated from enum value: DATETIME = 7;
   */
  DATETIME = 7,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.FieldConfig.FieldType.
 */
export const FieldConfig_FieldTypeSchema: GenEnum<FieldConfig_FieldType> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_schema, 1, 0);

/**
 * The setting of Indexable options in schema.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.FieldConfig.IndexableOption
 */
export enum FieldConfig_IndexableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: INDEXABLE_OPTION_UNSPECIFIED = 0;
   */
  INDEXABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Indexable option enabled for a schema field.
   *
   * @generated from enum value: INDEXABLE_ENABLED = 1;
   */
  INDEXABLE_ENABLED = 1,

  /**
   * Indexable option disabled for a schema field.
   *
   * @generated from enum value: INDEXABLE_DISABLED = 2;
   */
  INDEXABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.FieldConfig.IndexableOption.
 */
export const FieldConfig_IndexableOptionSchema: GenEnum<FieldConfig_IndexableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_schema, 1, 1);

/**
 * The status of the dynamic facetable option of a schema field.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.FieldConfig.DynamicFacetableOption
 */
export enum FieldConfig_DynamicFacetableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: DYNAMIC_FACETABLE_OPTION_UNSPECIFIED = 0;
   */
  DYNAMIC_FACETABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Dynamic facetable option enabled for a schema field.
   *
   * @generated from enum value: DYNAMIC_FACETABLE_ENABLED = 1;
   */
  DYNAMIC_FACETABLE_ENABLED = 1,

  /**
   * Dynamic facetable option disabled for a schema field.
   *
   * @generated from enum value: DYNAMIC_FACETABLE_DISABLED = 2;
   */
  DYNAMIC_FACETABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.FieldConfig.DynamicFacetableOption.
 */
export const FieldConfig_DynamicFacetableOptionSchema: GenEnum<FieldConfig_DynamicFacetableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_schema, 1, 2);

/**
 * The setting of Searchable options in schema.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.FieldConfig.SearchableOption
 */
export enum FieldConfig_SearchableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: SEARCHABLE_OPTION_UNSPECIFIED = 0;
   */
  SEARCHABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Searchable option enabled for a schema field.
   *
   * @generated from enum value: SEARCHABLE_ENABLED = 1;
   */
  SEARCHABLE_ENABLED = 1,

  /**
   * Searchable option disabled for a schema field.
   *
   * @generated from enum value: SEARCHABLE_DISABLED = 2;
   */
  SEARCHABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.FieldConfig.SearchableOption.
 */
export const FieldConfig_SearchableOptionSchema: GenEnum<FieldConfig_SearchableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_schema, 1, 3);

/**
 * The setting of Retrievable options in schema.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.FieldConfig.RetrievableOption
 */
export enum FieldConfig_RetrievableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: RETRIEVABLE_OPTION_UNSPECIFIED = 0;
   */
  RETRIEVABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Retrievable option enabled for a schema field.
   *
   * @generated from enum value: RETRIEVABLE_ENABLED = 1;
   */
  RETRIEVABLE_ENABLED = 1,

  /**
   * Retrievable option disabled for a schema field.
   *
   * @generated from enum value: RETRIEVABLE_DISABLED = 2;
   */
  RETRIEVABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.FieldConfig.RetrievableOption.
 */
export const FieldConfig_RetrievableOptionSchema: GenEnum<FieldConfig_RetrievableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_schema, 1, 4);

/**
 * The setting of Completable options in schema.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.FieldConfig.CompletableOption
 */
export enum FieldConfig_CompletableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: COMPLETABLE_OPTION_UNSPECIFIED = 0;
   */
  COMPLETABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Completable option enabled for a schema field.
   *
   * @generated from enum value: COMPLETABLE_ENABLED = 1;
   */
  COMPLETABLE_ENABLED = 1,

  /**
   * Completable option disabled for a schema field.
   *
   * @generated from enum value: COMPLETABLE_DISABLED = 2;
   */
  COMPLETABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.FieldConfig.CompletableOption.
 */
export const FieldConfig_CompletableOptionSchema: GenEnum<FieldConfig_CompletableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_schema, 1, 5);

/**
 * Sets the filterable option for schema fields.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.FieldConfig.FilterableOption
 */
export enum FieldConfig_FilterableOption {
  /**
   * Value used when unset.
   *
   * @generated from enum value: FILTERABLE_OPTION_UNSPECIFIED = 0;
   */
  FILTERABLE_OPTION_UNSPECIFIED = 0,

  /**
   * Filterable option enabled for a schema field.
   *
   * @generated from enum value: FILTERABLE_ENABLED = 1;
   */
  FILTERABLE_ENABLED = 1,

  /**
   * Filterable option disabled for a schema field.
   *
   * @generated from enum value: FILTERABLE_DISABLED = 2;
   */
  FILTERABLE_DISABLED = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.FieldConfig.FilterableOption.
 */
export const FieldConfig_FilterableOptionSchema: GenEnum<FieldConfig_FilterableOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_schema, 1, 6);

/**
 * Optional source of the advanced site search field.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.FieldConfig.AdvancedSiteSearchDataSource
 */
export enum FieldConfig_AdvancedSiteSearchDataSource {
  /**
   * Value used when unset.
   *
   * @generated from enum value: ADVANCED_SITE_SEARCH_DATA_SOURCE_UNSPECIFIED = 0;
   */
  ADVANCED_SITE_SEARCH_DATA_SOURCE_UNSPECIFIED = 0,

  /**
   * Retrieve value from meta tag.
   *
   * @generated from enum value: METATAGS = 1;
   */
  METATAGS = 1,

  /**
   * Retrieve value from page map.
   *
   * @generated from enum value: PAGEMAP = 2;
   */
  PAGEMAP = 2,

  /**
   * Retrieve value from the attributes set by
   * [SiteSearchEngineService.SetUriPatternDocumentData][google.cloud.discoveryengine.v1alpha.SiteSearchEngineService.SetUriPatternDocumentData]
   * API.
   *
   * @generated from enum value: URI_PATTERN_MAPPING = 3;
   */
  URI_PATTERN_MAPPING = 3,

  /**
   * Retrieve value from schema.org data.
   *
   * @generated from enum value: SCHEMA_ORG = 4;
   */
  SCHEMA_ORG = 4,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.FieldConfig.AdvancedSiteSearchDataSource.
 */
export const FieldConfig_AdvancedSiteSearchDataSourceSchema: GenEnum<FieldConfig_AdvancedSiteSearchDataSource> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_schema, 1, 7);

