// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1alpha/sample_query_set_service.proto (package google.cloud.discoveryengine.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { SampleQuerySet, SampleQuerySetSchema } from "./sample_query_set_pb";
import { file_google_cloud_discoveryengine_v1alpha_sample_query_set } from "./sample_query_set_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1alpha/sample_query_set_service.proto.
 */
export const file_google_cloud_discoveryengine_v1alpha_sample_query_set_service: GenFile = /*@__PURE__*/
  fileDesc("CkNnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYWxwaGEvc2FtcGxlX3F1ZXJ5X3NldF9zZXJ2aWNlLnByb3RvEiRnb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEiXwoYR2V0U2FtcGxlUXVlcnlTZXRSZXF1ZXN0EkMKBG5hbWUYASABKAlCNeBBAvpBLwotZGlzY292ZXJ5ZW5naW5lLmdvb2dsZWFwaXMuY29tL1NhbXBsZVF1ZXJ5U2V0IoQBChpMaXN0U2FtcGxlUXVlcnlTZXRzUmVxdWVzdBI/CgZwYXJlbnQYASABKAlCL+BBAvpBKQonZGlzY292ZXJ5ZW5naW5lLmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uEhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJIocBChtMaXN0U2FtcGxlUXVlcnlTZXRzUmVzcG9uc2USTwoRc2FtcGxlX3F1ZXJ5X3NldHMYASADKAsyNC5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuU2FtcGxlUXVlcnlTZXQSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJItUBChtDcmVhdGVTYW1wbGVRdWVyeVNldFJlcXVlc3QSPwoGcGFyZW50GAEgASgJQi/gQQL6QSkKJ2Rpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhJTChBzYW1wbGVfcXVlcnlfc2V0GAIgASgLMjQuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlNhbXBsZVF1ZXJ5U2V0QgPgQQISIAoTc2FtcGxlX3F1ZXJ5X3NldF9pZBgDIAEoCUID4EECIqMBChtVcGRhdGVTYW1wbGVRdWVyeVNldFJlcXVlc3QSUwoQc2FtcGxlX3F1ZXJ5X3NldBgBIAEoCzI0Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5TYW1wbGVRdWVyeVNldEID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJiChtEZWxldGVTYW1wbGVRdWVyeVNldFJlcXVlc3QSQwoEbmFtZRgBIAEoCUI14EEC+kEvCi1kaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb20vU2FtcGxlUXVlcnlTZXQykQoKFVNhbXBsZVF1ZXJ5U2V0U2VydmljZRLSAQoRR2V0U2FtcGxlUXVlcnlTZXQSPi5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuR2V0U2FtcGxlUXVlcnlTZXRSZXF1ZXN0GjQuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlNhbXBsZVF1ZXJ5U2V0IkfaQQRuYW1lgtPkkwI6EjgvdjFhbHBoYS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3NhbXBsZVF1ZXJ5U2V0cy8qfRLlAQoTTGlzdFNhbXBsZVF1ZXJ5U2V0cxJALmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5MaXN0U2FtcGxlUXVlcnlTZXRzUmVxdWVzdBpBLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5MaXN0U2FtcGxlUXVlcnlTZXRzUmVzcG9uc2UiSdpBBnBhcmVudILT5JMCOhI4L3YxYWxwaGEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9zYW1wbGVRdWVyeVNldHMSkgIKFENyZWF0ZVNhbXBsZVF1ZXJ5U2V0EkEuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkNyZWF0ZVNhbXBsZVF1ZXJ5U2V0UmVxdWVzdBo0Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5TYW1wbGVRdWVyeVNldCKAAdpBK3BhcmVudCxzYW1wbGVfcXVlcnlfc2V0LHNhbXBsZV9xdWVyeV9zZXRfaWSC0+STAkw6EHNhbXBsZV9xdWVyeV9zZXQiOC92MWFscGhhL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vc2FtcGxlUXVlcnlTZXRzEpQCChRVcGRhdGVTYW1wbGVRdWVyeVNldBJBLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5VcGRhdGVTYW1wbGVRdWVyeVNldFJlcXVlc3QaNC5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuU2FtcGxlUXVlcnlTZXQiggHaQRxzYW1wbGVfcXVlcnlfc2V0LHVwZGF0ZV9tYXNrgtPkkwJdOhBzYW1wbGVfcXVlcnlfc2V0MkkvdjFhbHBoYS97c2FtcGxlX3F1ZXJ5X3NldC5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovc2FtcGxlUXVlcnlTZXRzLyp9EroBChREZWxldGVTYW1wbGVRdWVyeVNldBJBLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5EZWxldGVTYW1wbGVRdWVyeVNldFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiR9pBBG5hbWWC0+STAjoqOC92MWFscGhhL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovc2FtcGxlUXVlcnlTZXRzLyp9GlLKQR5kaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb23SQS5odHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtQqYCCihjb20uZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhQhpTYW1wbGVRdWVyeVNldFNlcnZpY2VQcm90b1ABWlJjbG91ZC5nb29nbGUuY29tL2dvL2Rpc2NvdmVyeWVuZ2luZS9hcGl2MWFscGhhL2Rpc2NvdmVyeWVuZ2luZXBiO2Rpc2NvdmVyeWVuZ2luZXBiogIPRElTQ09WRVJZRU5HSU5FqgIkR29vZ2xlLkNsb3VkLkRpc2NvdmVyeUVuZ2luZS5WMUFscGhhygIkR29vZ2xlXENsb3VkXERpc2NvdmVyeUVuZ2luZVxWMWFscGhh6gInR29vZ2xlOjpDbG91ZDo6RGlzY292ZXJ5RW5naW5lOjpWMWFscGhhYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_discoveryengine_v1alpha_sample_query_set, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Request message for
 * [SampleQuerySetService.GetSampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySetService.GetSampleQuerySet]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.GetSampleQuerySetRequest
 */
export type GetSampleQuerySetRequest = Message<"google.cloud.discoveryengine.v1alpha.GetSampleQuerySetRequest"> & {
  /**
   * Required. Full resource name of
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet], such
   * as
   * `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`.
   *
   * If the caller does not have permission to access the
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet],
   * regardless of whether or not it exists, a PERMISSION_DENIED error is
   * returned.
   *
   * If the requested
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet] does
   * not exist, a NOT_FOUND error is returned.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.GetSampleQuerySetRequest.
 * Use `create(GetSampleQuerySetRequestSchema)` to create a new message.
 */
export const GetSampleQuerySetRequestSchema: GenMessage<GetSampleQuerySetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_sample_query_set_service, 0);

/**
 * Request message for
 * [SampleQuerySetService.ListSampleQuerySets][google.cloud.discoveryengine.v1alpha.SampleQuerySetService.ListSampleQuerySets]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ListSampleQuerySetsRequest
 */
export type ListSampleQuerySetsRequest = Message<"google.cloud.discoveryengine.v1alpha.ListSampleQuerySetsRequest"> & {
  /**
   * Required. The parent location resource name, such as
   * `projects/{project}/locations/{location}`.
   *
   * If the caller does not have permission to list
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet]s
   * under this location, regardless of whether or not this location exists, a
   * `PERMISSION_DENIED` error is returned.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum number of
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet]s to
   * return. If unspecified, defaults to 100. The maximum allowed value is 1000.
   * Values above 1000 will be coerced to 1000.
   *
   * If this field is negative, an `INVALID_ARGUMENT` error is returned.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token
   * [ListSampleQuerySetsResponse.next_page_token][google.cloud.discoveryengine.v1alpha.ListSampleQuerySetsResponse.next_page_token],
   * received from a previous
   * [SampleQuerySetService.ListSampleQuerySets][google.cloud.discoveryengine.v1alpha.SampleQuerySetService.ListSampleQuerySets]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [SampleQuerySetService.ListSampleQuerySets][google.cloud.discoveryengine.v1alpha.SampleQuerySetService.ListSampleQuerySets]
   * must match the call that provided the page token. Otherwise, an
   * `INVALID_ARGUMENT` error is returned.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ListSampleQuerySetsRequest.
 * Use `create(ListSampleQuerySetsRequestSchema)` to create a new message.
 */
export const ListSampleQuerySetsRequestSchema: GenMessage<ListSampleQuerySetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_sample_query_set_service, 1);

/**
 * Response message for
 * [SampleQuerySetService.ListSampleQuerySets][google.cloud.discoveryengine.v1alpha.SampleQuerySetService.ListSampleQuerySets]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ListSampleQuerySetsResponse
 */
export type ListSampleQuerySetsResponse = Message<"google.cloud.discoveryengine.v1alpha.ListSampleQuerySetsResponse"> & {
  /**
   * The [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet]s.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1alpha.SampleQuerySet sample_query_sets = 1;
   */
  sampleQuerySets: SampleQuerySet[];

  /**
   * A token that can be sent as
   * [ListSampleQuerySetsRequest.page_token][google.cloud.discoveryengine.v1alpha.ListSampleQuerySetsRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ListSampleQuerySetsResponse.
 * Use `create(ListSampleQuerySetsResponseSchema)` to create a new message.
 */
export const ListSampleQuerySetsResponseSchema: GenMessage<ListSampleQuerySetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_sample_query_set_service, 2);

/**
 * Request message for
 * [SampleQuerySetService.CreateSampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySetService.CreateSampleQuerySet]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.CreateSampleQuerySetRequest
 */
export type CreateSampleQuerySetRequest = Message<"google.cloud.discoveryengine.v1alpha.CreateSampleQuerySetRequest"> & {
  /**
   * Required. The parent resource name, such as
   * `projects/{project}/locations/{location}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet] to
   * create.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.SampleQuerySet sample_query_set = 2;
   */
  sampleQuerySet?: SampleQuerySet;

  /**
   * Required. The ID to use for the
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet],
   * which will become the final component of the
   * [SampleQuerySet.name][google.cloud.discoveryengine.v1alpha.SampleQuerySet.name].
   *
   * If the caller does not have permission to create the
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet],
   * regardless of whether or not it exists, a `PERMISSION_DENIED` error is
   * returned.
   *
   * This field must be unique among all
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet]s with
   * the same
   * [parent][google.cloud.discoveryengine.v1alpha.CreateSampleQuerySetRequest.parent].
   * Otherwise, an `ALREADY_EXISTS` error is returned.
   *
   * This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034)
   * standard with a length limit of 63 characters. Otherwise, an
   * `INVALID_ARGUMENT` error is returned.
   *
   * @generated from field: string sample_query_set_id = 3;
   */
  sampleQuerySetId: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.CreateSampleQuerySetRequest.
 * Use `create(CreateSampleQuerySetRequestSchema)` to create a new message.
 */
export const CreateSampleQuerySetRequestSchema: GenMessage<CreateSampleQuerySetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_sample_query_set_service, 3);

/**
 * Request message for
 * [SampleQuerySetService.UpdateSampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySetService.UpdateSampleQuerySet]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.UpdateSampleQuerySetRequest
 */
export type UpdateSampleQuerySetRequest = Message<"google.cloud.discoveryengine.v1alpha.UpdateSampleQuerySetRequest"> & {
  /**
   * Required. The sample query set to update.
   *
   * If the caller does not have permission to update the
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet],
   * regardless of whether or not it exists, a `PERMISSION_DENIED` error is
   * returned.
   *
   * If the
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet] to
   * update does not exist a `NOT_FOUND` error is returned.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.SampleQuerySet sample_query_set = 1;
   */
  sampleQuerySet?: SampleQuerySet;

  /**
   * Indicates which fields in the provided imported 'sample query set' to
   * update. If not set, will by default update all fields.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.UpdateSampleQuerySetRequest.
 * Use `create(UpdateSampleQuerySetRequestSchema)` to create a new message.
 */
export const UpdateSampleQuerySetRequestSchema: GenMessage<UpdateSampleQuerySetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_sample_query_set_service, 4);

/**
 * Request message for
 * [SampleQuerySetService.DeleteSampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySetService.DeleteSampleQuerySet]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.DeleteSampleQuerySetRequest
 */
export type DeleteSampleQuerySetRequest = Message<"google.cloud.discoveryengine.v1alpha.DeleteSampleQuerySetRequest"> & {
  /**
   * Required. Full resource name of
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet], such
   * as
   * `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`.
   *
   * If the caller does not have permission to delete the
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet],
   * regardless of whether or not it exists, a `PERMISSION_DENIED` error is
   * returned.
   *
   * If the
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet] to
   * delete does not exist, a `NOT_FOUND` error is returned.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.DeleteSampleQuerySetRequest.
 * Use `create(DeleteSampleQuerySetRequestSchema)` to create a new message.
 */
export const DeleteSampleQuerySetRequestSchema: GenMessage<DeleteSampleQuerySetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_sample_query_set_service, 5);

/**
 * Service for managing
 * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet]s,
 *
 * @generated from service google.cloud.discoveryengine.v1alpha.SampleQuerySetService
 */
export const SampleQuerySetService: GenService<{
  /**
   * Gets a
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet].
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.SampleQuerySetService.GetSampleQuerySet
   */
  getSampleQuerySet: {
    methodKind: "unary";
    input: typeof GetSampleQuerySetRequestSchema;
    output: typeof SampleQuerySetSchema;
  },
  /**
   * Gets a list of
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet]s.
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.SampleQuerySetService.ListSampleQuerySets
   */
  listSampleQuerySets: {
    methodKind: "unary";
    input: typeof ListSampleQuerySetsRequestSchema;
    output: typeof ListSampleQuerySetsResponseSchema;
  },
  /**
   * Creates a
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet]
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.SampleQuerySetService.CreateSampleQuerySet
   */
  createSampleQuerySet: {
    methodKind: "unary";
    input: typeof CreateSampleQuerySetRequestSchema;
    output: typeof SampleQuerySetSchema;
  },
  /**
   * Updates a
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet].
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.SampleQuerySetService.UpdateSampleQuerySet
   */
  updateSampleQuerySet: {
    methodKind: "unary";
    input: typeof UpdateSampleQuerySetRequestSchema;
    output: typeof SampleQuerySetSchema;
  },
  /**
   * Deletes a
   * [SampleQuerySet][google.cloud.discoveryengine.v1alpha.SampleQuerySet].
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.SampleQuerySetService.DeleteSampleQuerySet
   */
  deleteSampleQuerySet: {
    methodKind: "unary";
    input: typeof DeleteSampleQuerySetRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_discoveryengine_v1alpha_sample_query_set_service, 0);

