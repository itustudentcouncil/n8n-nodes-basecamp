// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1alpha/project_service.proto (package google.cloud.discoveryengine.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ProjectSchema } from "./project_pb";
import { file_google_cloud_discoveryengine_v1alpha_project } from "./project_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1alpha/project_service.proto.
 */
export const file_google_cloud_discoveryengine_v1alpha_project_service: GenFile = /*@__PURE__*/
  fileDesc("Cjpnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYWxwaGEvcHJvamVjdF9zZXJ2aWNlLnByb3RvEiRnb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEiUQoRR2V0UHJvamVjdFJlcXVlc3QSPAoEbmFtZRgBIAEoCUIu4EEC+kEoCiZkaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb20vUHJvamVjdCKgAQoXUHJvdmlzaW9uUHJvamVjdFJlcXVlc3QSPAoEbmFtZRgBIAEoCUIu4EEC+kEoCiZkaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb20vUHJvamVjdBIiChVhY2NlcHRfZGF0YV91c2VfdGVybXMYAiABKAhCA+BBAhIjChZkYXRhX3VzZV90ZXJtc192ZXJzaW9uGAMgASgJQgPgQQIiGgoYUHJvdmlzaW9uUHJvamVjdE1ldGFkYXRhIuICChpSZXBvcnRDb25zZW50Q2hhbmdlUmVxdWVzdBJ4ChVjb25zZW50X2NoYW5nZV9hY3Rpb24YASABKA4yVC5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuUmVwb3J0Q29uc2VudENoYW5nZVJlcXVlc3QuQ29uc2VudENoYW5nZUFjdGlvbkID4EECEj8KB3Byb2plY3QYAiABKAlCLuBBAvpBKAomZGlzY292ZXJ5ZW5naW5lLmdvb2dsZWFwaXMuY29tL1Byb2plY3QSHAoPc2VydmljZV90ZXJtX2lkGAMgASgJQgPgQQISIQoUc2VydmljZV90ZXJtX3ZlcnNpb24YBCABKAlCA+BBAiJIChNDb25zZW50Q2hhbmdlQWN0aW9uEiUKIUNPTlNFTlRfQ0hBTkdFX0FDVElPTl9VTlNQRUNJRklFRBAAEgoKBkFDQ0VQVBABMq8GCg5Qcm9qZWN0U2VydmljZRKfAQoKR2V0UHJvamVjdBI3Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5HZXRQcm9qZWN0UmVxdWVzdBotLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5Qcm9qZWN0IinaQQRuYW1lgtPkkwIcEhovdjFhbHBoYS97bmFtZT1wcm9qZWN0cy8qfRKZAgoQUHJvdmlzaW9uUHJvamVjdBI9Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5Qcm92aXNpb25Qcm9qZWN0UmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24ipgHKQW0KLGdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5Qcm9qZWN0Ej1nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuUHJvdmlzaW9uUHJvamVjdE1ldGFkYXRh2kEEbmFtZYLT5JMCKToBKiIkL3YxYWxwaGEve25hbWU9cHJvamVjdHMvKn06cHJvdmlzaW9uEooCChNSZXBvcnRDb25zZW50Q2hhbmdlEkAuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlJlcG9ydENvbnNlbnRDaGFuZ2VSZXF1ZXN0Gi0uZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlByb2plY3QigQHaQUJjb25zZW50X2NoYW5nZV9hY3Rpb24scHJvamVjdCxzZXJ2aWNlX3Rlcm1faWQsc2VydmljZV90ZXJtX3ZlcnNpb26C0+STAjY6ASoiMS92MWFscGhhL3twcm9qZWN0PXByb2plY3RzLyp9OnJlcG9ydENvbnNlbnRDaGFuZ2UaUspBHmRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CnwIKKGNvbS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGFCE1Byb2plY3RTZXJ2aWNlUHJvdG9QAVpSY2xvdWQuZ29vZ2xlLmNvbS9nby9kaXNjb3ZlcnllbmdpbmUvYXBpdjFhbHBoYS9kaXNjb3ZlcnllbmdpbmVwYjtkaXNjb3ZlcnllbmdpbmVwYqICD0RJU0NPVkVSWUVOR0lORaoCJEdvb2dsZS5DbG91ZC5EaXNjb3ZlcnlFbmdpbmUuVjFBbHBoYcoCJEdvb2dsZVxDbG91ZFxEaXNjb3ZlcnlFbmdpbmVcVjFhbHBoYeoCJ0dvb2dsZTo6Q2xvdWQ6OkRpc2NvdmVyeUVuZ2luZTo6VjFhbHBoYWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_discoveryengine_v1alpha_project, file_google_longrunning_operations]);

/**
 * Request message for
 * [ProjectService.GetProject][google.cloud.discoveryengine.v1alpha.ProjectService.GetProject]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.GetProjectRequest
 */
export type GetProjectRequest = Message<"google.cloud.discoveryengine.v1alpha.GetProjectRequest"> & {
  /**
   * Required. Full resource name of a
   * [Project][google.cloud.discoveryengine.v1alpha.Project], such as
   * `projects/{project_id_or_number}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.GetProjectRequest.
 * Use `create(GetProjectRequestSchema)` to create a new message.
 */
export const GetProjectRequestSchema: GenMessage<GetProjectRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_project_service, 0);

/**
 * Request for
 * [ProjectService.ProvisionProject][google.cloud.discoveryengine.v1alpha.ProjectService.ProvisionProject]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ProvisionProjectRequest
 */
export type ProvisionProjectRequest = Message<"google.cloud.discoveryengine.v1alpha.ProvisionProjectRequest"> & {
  /**
   * Required. Full resource name of a
   * [Project][google.cloud.discoveryengine.v1alpha.Project], such as
   * `projects/{project_id_or_number}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Set to `true` to specify that caller has read and would like to
   * give consent to the [Terms for data
   * use](https://cloud.google.com/retail/data-use-terms).
   *
   * @generated from field: bool accept_data_use_terms = 2;
   */
  acceptDataUseTerms: boolean;

  /**
   * Required. The version of the [Terms for data
   * use](https://cloud.google.com/retail/data-use-terms) that caller has read
   * and would like to give consent to.
   *
   * Acceptable version is `2022-11-23`, and this may change over time.
   *
   * @generated from field: string data_use_terms_version = 3;
   */
  dataUseTermsVersion: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ProvisionProjectRequest.
 * Use `create(ProvisionProjectRequestSchema)` to create a new message.
 */
export const ProvisionProjectRequestSchema: GenMessage<ProvisionProjectRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_project_service, 1);

/**
 * Metadata associated with a project provision operation.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ProvisionProjectMetadata
 */
export type ProvisionProjectMetadata = Message<"google.cloud.discoveryengine.v1alpha.ProvisionProjectMetadata"> & {
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ProvisionProjectMetadata.
 * Use `create(ProvisionProjectMetadataSchema)` to create a new message.
 */
export const ProvisionProjectMetadataSchema: GenMessage<ProvisionProjectMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_project_service, 2);

/**
 * Request for ReportConsentChange method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ReportConsentChangeRequest
 */
export type ReportConsentChangeRequest = Message<"google.cloud.discoveryengine.v1alpha.ReportConsentChangeRequest"> & {
  /**
   * Required. Whether customer decides to accept or decline service term.
   *
   * At this moment, only accept action is supported.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.ReportConsentChangeRequest.ConsentChangeAction consent_change_action = 1;
   */
  consentChangeAction: ReportConsentChangeRequest_ConsentChangeAction;

  /**
   * Required. Full resource name of a
   * [Project][google.cloud.discoveryengine.v1alpha.Project], such as
   * `projects/{project_id_or_number}`.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Required. The unique identifier of the terms of service to update.
   * Available term ids:
   *
   * * `GA_DATA_USE_TERMS`: [Terms for data
   * use](https://cloud.google.com/retail/data-use-terms). When using this
   * service term id, the acceptable
   * [service_term_version][google.cloud.discoveryengine.v1alpha.ReportConsentChangeRequest.service_term_version]
   * to provide is `2022-11-23`.
   *
   * @generated from field: string service_term_id = 3;
   */
  serviceTermId: string;

  /**
   * Required. The version string of the terms of service to update.
   *
   * @generated from field: string service_term_version = 4;
   */
  serviceTermVersion: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ReportConsentChangeRequest.
 * Use `create(ReportConsentChangeRequestSchema)` to create a new message.
 */
export const ReportConsentChangeRequestSchema: GenMessage<ReportConsentChangeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_project_service, 3);

/**
 * Type of consent acknowledgement (accept / reject).
 *
 * At this moment, only `ACCEPT` action is supported.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.ReportConsentChangeRequest.ConsentChangeAction
 */
export enum ReportConsentChangeRequest_ConsentChangeAction {
  /**
   * Invalid action, user must specify accept/decline
   *
   * @generated from enum value: CONSENT_CHANGE_ACTION_UNSPECIFIED = 0;
   */
  CONSENT_CHANGE_ACTION_UNSPECIFIED = 0,

  /**
   * User accepts service terms.
   *
   * @generated from enum value: ACCEPT = 1;
   */
  ACCEPT = 1,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.ReportConsentChangeRequest.ConsentChangeAction.
 */
export const ReportConsentChangeRequest_ConsentChangeActionSchema: GenEnum<ReportConsentChangeRequest_ConsentChangeAction> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_project_service, 3, 0);

/**
 * Service for operations on the
 * [Project][google.cloud.discoveryengine.v1alpha.Project].
 *
 * @generated from service google.cloud.discoveryengine.v1alpha.ProjectService
 */
export const ProjectService: GenService<{
  /**
   * Gets a [Project][google.cloud.discoveryengine.v1alpha.Project].
   * Returns NOT_FOUND when the project is not yet created.
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.ProjectService.GetProject
   */
  getProject: {
    methodKind: "unary";
    input: typeof GetProjectRequestSchema;
    output: typeof ProjectSchema;
  },
  /**
   * Provisions the project resource. During the
   * process, related systems will get prepared and initialized.
   *
   * Caller must read the [Terms for data
   * use](https://cloud.google.com/retail/data-use-terms), and optionally
   * specify in request to provide consent to that service terms.
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.ProjectService.ProvisionProject
   */
  provisionProject: {
    methodKind: "unary";
    input: typeof ProvisionProjectRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates service terms for this project.
   *
   * This method can be used to retroactively accept the latest terms.
   *
   * Terms available for update:
   *
   * * [Terms for data use](https://cloud.google.com/retail/data-use-terms)
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.ProjectService.ReportConsentChange
   */
  reportConsentChange: {
    methodKind: "unary";
    input: typeof ReportConsentChangeRequestSchema;
    output: typeof ProjectSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_discoveryengine_v1alpha_project_service, 0);

