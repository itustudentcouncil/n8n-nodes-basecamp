// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1alpha/recommendation_service.proto (package google.cloud.discoveryengine.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Document } from "./document_pb";
import { file_google_cloud_discoveryengine_v1alpha_document } from "./document_pb";
import type { UserEvent } from "./user_event_pb";
import { file_google_cloud_discoveryengine_v1alpha_user_event } from "./user_event_pb";
import type { Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1alpha/recommendation_service.proto.
 */
export const file_google_cloud_discoveryengine_v1alpha_recommendation_service: GenFile = /*@__PURE__*/
  fileDesc("CkFnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYWxwaGEvcmVjb21tZW5kYXRpb25fc2VydmljZS5wcm90bxIkZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhIo8EChBSZWNvbW1lbmRSZXF1ZXN0EkwKDnNlcnZpbmdfY29uZmlnGAEgASgJQjTgQQL6QS4KLGRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbS9TZXJ2aW5nQ29uZmlnEkgKCnVzZXJfZXZlbnQYAiABKAsyLy5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuVXNlckV2ZW50QgPgQQISEQoJcGFnZV9zaXplGAMgASgFEg4KBmZpbHRlchgEIAEoCRIVCg12YWxpZGF0ZV9vbmx5GAUgASgIElIKBnBhcmFtcxgGIAMoCzJCLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5SZWNvbW1lbmRSZXF1ZXN0LlBhcmFtc0VudHJ5ElsKC3VzZXJfbGFiZWxzGAggAygLMkYuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlJlY29tbWVuZFJlcXVlc3QuVXNlckxhYmVsc0VudHJ5GkUKC1BhcmFtc0VudHJ5EgsKA2tleRgBIAEoCRIlCgV2YWx1ZRgCIAEoCzIWLmdvb2dsZS5wcm90b2J1Zi5WYWx1ZToCOAEaMQoPVXNlckxhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi1wMKEVJlY29tbWVuZFJlc3BvbnNlEl0KB3Jlc3VsdHMYASADKAsyTC5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuUmVjb21tZW5kUmVzcG9uc2UuUmVjb21tZW5kYXRpb25SZXN1bHQSGQoRYXR0cmlidXRpb25fdG9rZW4YAiABKAkSEwoLbWlzc2luZ19pZHMYAyADKAkSFQoNdmFsaWRhdGVfb25seRgEIAEoCBqbAgoUUmVjb21tZW5kYXRpb25SZXN1bHQSCgoCaWQYASABKAkSQAoIZG9jdW1lbnQYAiABKAsyLi5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuRG9jdW1lbnQSbAoIbWV0YWRhdGEYAyADKAsyWi5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuUmVjb21tZW5kUmVzcG9uc2UuUmVjb21tZW5kYXRpb25SZXN1bHQuTWV0YWRhdGFFbnRyeRpHCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRIlCgV2YWx1ZRgCIAEoCzIWLmdvb2dsZS5wcm90b2J1Zi5WYWx1ZToCOAEyqAQKFVJlY29tbWVuZGF0aW9uU2VydmljZRK6AwoJUmVjb21tZW5kEjYuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlJlY29tbWVuZFJlcXVlc3QaNy5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuUmVjb21tZW5kUmVzcG9uc2UiuwKC0+STArQCOgEqWms6ASoiZi92MWFscGhhL3tzZXJ2aW5nX2NvbmZpZz1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NvbGxlY3Rpb25zLyovZGF0YVN0b3Jlcy8qL3NlcnZpbmdDb25maWdzLyp9OnJlY29tbWVuZFpoOgEqImMvdjFhbHBoYS97c2VydmluZ19jb25maWc9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jb2xsZWN0aW9ucy8qL2VuZ2luZXMvKi9zZXJ2aW5nQ29uZmlncy8qfTpyZWNvbW1lbmQiWC92MWFscGhhL3tzZXJ2aW5nX2NvbmZpZz1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2RhdGFTdG9yZXMvKi9zZXJ2aW5nQ29uZmlncy8qfTpyZWNvbW1lbmQaUspBHmRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CpgIKKGNvbS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGFCGlJlY29tbWVuZGF0aW9uU2VydmljZVByb3RvUAFaUmNsb3VkLmdvb2dsZS5jb20vZ28vZGlzY292ZXJ5ZW5naW5lL2FwaXYxYWxwaGEvZGlzY292ZXJ5ZW5naW5lcGI7ZGlzY292ZXJ5ZW5naW5lcGKiAg9ESVNDT1ZFUllFTkdJTkWqAiRHb29nbGUuQ2xvdWQuRGlzY292ZXJ5RW5naW5lLlYxQWxwaGHKAiRHb29nbGVcQ2xvdWRcRGlzY292ZXJ5RW5naW5lXFYxYWxwaGHqAidHb29nbGU6OkNsb3VkOjpEaXNjb3ZlcnlFbmdpbmU6OlYxYWxwaGFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_discoveryengine_v1alpha_document, file_google_cloud_discoveryengine_v1alpha_user_event, file_google_protobuf_struct]);

/**
 * Request message for Recommend method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.RecommendRequest
 */
export type RecommendRequest = Message<"google.cloud.discoveryengine.v1alpha.RecommendRequest"> & {
  /**
   * Required. Full resource name of a
   * [ServingConfig][google.cloud.discoveryengine.v1alpha.ServingConfig]:
   * `projects/*\/locations/global/collections/*\/engines/*\/servingConfigs/*`, or
   * `projects/*\/locations/global/collections/*\/dataStores/*\/servingConfigs/*`
   *
   * One default serving config is created along with your recommendation engine
   * creation. The engine ID is used as the ID of the default serving
   * config. For example, for Engine
   * `projects/*\/locations/global/collections/*\/engines/my-engine`, you can use
   * `projects/*\/locations/global/collections/*\/engines/my-engine/servingConfigs/my-engine`
   * for your
   * [RecommendationService.Recommend][google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend]
   * requests.
   *
   * @generated from field: string serving_config = 1;
   */
  servingConfig: string;

  /**
   * Required. Context about the user, what they are looking at and what action
   * they took to trigger the Recommend request. Note that this user event
   * detail won't be ingested to userEvent logs. Thus, a separate userEvent
   * write request is required for event logging.
   *
   * Don't set
   * [UserEvent.user_pseudo_id][google.cloud.discoveryengine.v1alpha.UserEvent.user_pseudo_id]
   * or
   * [UserEvent.user_info.user_id][google.cloud.discoveryengine.v1alpha.UserInfo.user_id]
   * to the same fixed ID for different users. If you are trying to receive
   * non-personalized recommendations (not recommended; this can negatively
   * impact model performance), instead set
   * [UserEvent.user_pseudo_id][google.cloud.discoveryengine.v1alpha.UserEvent.user_pseudo_id]
   * to a random unique ID and leave
   * [UserEvent.user_info.user_id][google.cloud.discoveryengine.v1alpha.UserInfo.user_id]
   * unset.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.UserEvent user_event = 2;
   */
  userEvent?: UserEvent;

  /**
   * Maximum number of results to return. Set this property
   * to the number of recommendation results needed. If zero, the service
   * chooses a reasonable default. The maximum allowed value is 100. Values
   * above 100 are set to 100.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Filter for restricting recommendation results with a length limit of 5,000
   * characters. Currently, only filter expressions on the `filter_tags`
   * attribute is supported.
   *
   *
   * Examples:
   *
   *  * `(filter_tags: ANY("Red", "Blue") OR filter_tags: ANY("Hot", "Cold"))`
   *  * `(filter_tags: ANY("Red", "Blue")) AND NOT (filter_tags: ANY("Green"))`
   *
   * If `attributeFilteringSyntax` is set to true under the `params` field, then
   * attribute-based expressions are expected instead of the above described
   * tag-based syntax. Examples:
   *
   *  * (launguage: ANY("en", "es")) AND NOT (categories: ANY("Movie"))
   *  * (available: true) AND
   *    (launguage: ANY("en", "es")) OR (categories: ANY("Movie"))
   *
   * If your filter blocks all results, the API returns generic
   * (unfiltered) popular Documents. If you only want results strictly matching
   * the filters, set `strictFiltering` to `true` in
   * [RecommendRequest.params][google.cloud.discoveryengine.v1alpha.RecommendRequest.params]
   * to receive empty results instead.
   *
   * Note that the API never returns
   * [Document][google.cloud.discoveryengine.v1alpha.Document]s with
   * `storageStatus` as `EXPIRED` or `DELETED` regardless of filter choices.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Use validate only mode for this recommendation query. If set to `true`, a
   * fake model is used that returns arbitrary Document IDs.
   * Note that the validate only mode should only be used for testing the API,
   * or if the model is not ready.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;

  /**
   * Additional domain specific parameters for the recommendations.
   *
   * Allowed values:
   *
   * * `returnDocument`: Boolean. If set to `true`, the associated Document
   *    object is returned in
   *    [RecommendResponse.RecommendationResult.document][google.cloud.discoveryengine.v1alpha.RecommendResponse.RecommendationResult.document].
   * * `returnScore`: Boolean. If set to true, the recommendation score
   *    corresponding to each returned Document is set in
   *    [RecommendResponse.RecommendationResult.metadata][google.cloud.discoveryengine.v1alpha.RecommendResponse.RecommendationResult.metadata].
   *    The given score indicates the probability of a Document conversion given
   *    the user's context and history.
   * * `strictFiltering`: Boolean. True by default. If set to `false`, the
   * service
   *    returns generic (unfiltered) popular Documents instead of empty if
   *    your filter blocks all recommendation results.
   * * `diversityLevel`: String. Default empty. If set to be non-empty, then
   *    it needs to be one of:
   *     *  `no-diversity`
   *     *  `low-diversity`
   *     *  `medium-diversity`
   *     *  `high-diversity`
   *     *  `auto-diversity`
   *    This gives request-level control and adjusts recommendation results
   *    based on Document category.
   * * `attributeFilteringSyntax`: Boolean. False by default. If set to true,
   *    the `filter` field is interpreted according to the new,
   *    attribute-based syntax.
   *
   * @generated from field: map<string, google.protobuf.Value> params = 6;
   */
  params: { [key: string]: Value };

  /**
   * The user labels applied to a resource must meet the following requirements:
   *
   * * Each resource can have multiple labels, up to a maximum of 64.
   * * Each label must be a key-value pair.
   * * Keys have a minimum length of 1 character and a maximum length of 63
   *   characters and cannot be empty. Values can be empty and have a maximum
   *   length of 63 characters.
   * * Keys and values can contain only lowercase letters, numeric characters,
   *   underscores, and dashes. All characters must use UTF-8 encoding, and
   *   international characters are allowed.
   * * The key portion of a label must be unique. However, you can use the same
   *   key with multiple resources.
   * * Keys must start with a lowercase letter or international character.
   *
   * See [Requirements for
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
   * for more details.
   *
   * @generated from field: map<string, string> user_labels = 8;
   */
  userLabels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.RecommendRequest.
 * Use `create(RecommendRequestSchema)` to create a new message.
 */
export const RecommendRequestSchema: GenMessage<RecommendRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_recommendation_service, 0);

/**
 * Response message for Recommend method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.RecommendResponse
 */
export type RecommendResponse = Message<"google.cloud.discoveryengine.v1alpha.RecommendResponse"> & {
  /**
   * A list of recommended Documents. The order represents the ranking (from the
   * most relevant Document to the least).
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1alpha.RecommendResponse.RecommendationResult results = 1;
   */
  results: RecommendResponse_RecommendationResult[];

  /**
   * A unique attribution token. This should be included in the
   * [UserEvent][google.cloud.discoveryengine.v1alpha.UserEvent] logs resulting
   * from this recommendation, which enables accurate attribution of
   * recommendation model performance.
   *
   * @generated from field: string attribution_token = 2;
   */
  attributionToken: string;

  /**
   * IDs of documents in the request that were missing from the default Branch
   * associated with the requested ServingConfig.
   *
   * @generated from field: repeated string missing_ids = 3;
   */
  missingIds: string[];

  /**
   * True if
   * [RecommendRequest.validate_only][google.cloud.discoveryengine.v1alpha.RecommendRequest.validate_only]
   * was set.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.RecommendResponse.
 * Use `create(RecommendResponseSchema)` to create a new message.
 */
export const RecommendResponseSchema: GenMessage<RecommendResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_recommendation_service, 1);

/**
 * RecommendationResult represents a generic recommendation result with
 * associated metadata.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.RecommendResponse.RecommendationResult
 */
export type RecommendResponse_RecommendationResult = Message<"google.cloud.discoveryengine.v1alpha.RecommendResponse.RecommendationResult"> & {
  /**
   * Resource ID of the recommended Document.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Set if `returnDocument` is set to true in
   * [RecommendRequest.params][google.cloud.discoveryengine.v1alpha.RecommendRequest.params].
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.Document document = 2;
   */
  document?: Document;

  /**
   * Additional Document metadata or annotations.
   *
   * Possible values:
   *
   * * `score`: Recommendation score in double value. Is set if
   *   `returnScore` is set to true in
   *   [RecommendRequest.params][google.cloud.discoveryengine.v1alpha.RecommendRequest.params].
   *
   * @generated from field: map<string, google.protobuf.Value> metadata = 3;
   */
  metadata: { [key: string]: Value };
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.RecommendResponse.RecommendationResult.
 * Use `create(RecommendResponse_RecommendationResultSchema)` to create a new message.
 */
export const RecommendResponse_RecommendationResultSchema: GenMessage<RecommendResponse_RecommendationResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_recommendation_service, 1, 0);

/**
 * Service for making recommendations.
 *
 * @generated from service google.cloud.discoveryengine.v1alpha.RecommendationService
 */
export const RecommendationService: GenService<{
  /**
   * Makes a recommendation, which requires a contextual user event.
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend
   */
  recommend: {
    methodKind: "unary";
    input: typeof RecommendRequestSchema;
    output: typeof RecommendResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_discoveryengine_v1alpha_recommendation_service, 0);

