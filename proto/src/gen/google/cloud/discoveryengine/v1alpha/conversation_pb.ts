// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1alpha/conversation.proto (package google.cloud.discoveryengine.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { SearchResponse_Summary } from "./search_service_pb";
import { file_google_cloud_discoveryengine_v1alpha_search_service } from "./search_service_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1alpha/conversation.proto.
 */
export const file_google_cloud_discoveryengine_v1alpha_conversation: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYWxwaGEvY29udmVyc2F0aW9uLnByb3RvEiRnb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEi8AUKDENvbnZlcnNhdGlvbhIRCgRuYW1lGAEgASgJQgPgQQUSRwoFc3RhdGUYAiABKA4yOC5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuQ29udmVyc2F0aW9uLlN0YXRlEhYKDnVzZXJfcHNldWRvX2lkGAMgASgJEksKCG1lc3NhZ2VzGAQgAygLMjkuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkNvbnZlcnNhdGlvbk1lc3NhZ2USMwoKc3RhcnRfdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxIxCghlbmRfdGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAyI+CgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEg8KC0lOX1BST0dSRVNTEAESDQoJQ09NUExFVEVEEAI69gLqQfICCitkaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb20vQ29udmVyc2F0aW9uElxwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vZGF0YVN0b3Jlcy97ZGF0YV9zdG9yZX0vY29udmVyc2F0aW9ucy97Y29udmVyc2F0aW9ufRJ1cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9ufS9kYXRhU3RvcmVzL3tkYXRhX3N0b3JlfS9jb252ZXJzYXRpb25zL3tjb252ZXJzYXRpb259Em5wcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb259L2VuZ2luZXMve2VuZ2luZX0vY29udmVyc2F0aW9ucy97Y29udmVyc2F0aW9ufSKHAgoFUmVwbHkSEQoFcmVwbHkYASABKAlCAhgBEk0KCnJlZmVyZW5jZXMYAiADKAsyNS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuUmVwbHkuUmVmZXJlbmNlQgIYARJNCgdzdW1tYXJ5GAMgASgLMjwuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlNlYXJjaFJlc3BvbnNlLlN1bW1hcnkaTQoJUmVmZXJlbmNlEgsKA3VyaRgBIAEoCRITCgthbmNob3JfdGV4dBgCIAEoCRINCgVzdGFydBgDIAEoBRILCgNlbmQYBCABKAU6AhgBIkkKE0NvbnZlcnNhdGlvbkNvbnRleHQSGQoRY29udGV4dF9kb2N1bWVudHMYASADKAkSFwoPYWN0aXZlX2RvY3VtZW50GAIgASgJImYKCVRleHRJbnB1dBINCgVpbnB1dBgBIAEoCRJKCgdjb250ZXh0GAIgASgLMjkuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLkNvbnZlcnNhdGlvbkNvbnRleHQi2wEKE0NvbnZlcnNhdGlvbk1lc3NhZ2USRQoKdXNlcl9pbnB1dBgBIAEoCzIvLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5UZXh0SW5wdXRIABI8CgVyZXBseRgCIAEoCzIrLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFhbHBoYS5SZXBseUgAEjQKC2NyZWF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDQgkKB21lc3NhZ2VCnQIKKGNvbS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGFCEUNvbnZlcnNhdGlvblByb3RvUAFaUmNsb3VkLmdvb2dsZS5jb20vZ28vZGlzY292ZXJ5ZW5naW5lL2FwaXYxYWxwaGEvZGlzY292ZXJ5ZW5naW5lcGI7ZGlzY292ZXJ5ZW5naW5lcGKiAg9ESVNDT1ZFUllFTkdJTkWqAiRHb29nbGUuQ2xvdWQuRGlzY292ZXJ5RW5naW5lLlYxQWxwaGHKAiRHb29nbGVcQ2xvdWRcRGlzY292ZXJ5RW5naW5lXFYxYWxwaGHqAidHb29nbGU6OkNsb3VkOjpEaXNjb3ZlcnlFbmdpbmU6OlYxYWxwaGFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_discoveryengine_v1alpha_search_service, file_google_protobuf_timestamp]);

/**
 * External conversation proto definition.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Conversation
 */
export type Conversation = Message<"google.cloud.discoveryengine.v1alpha.Conversation"> & {
  /**
   * Immutable. Fully qualified name
   * `projects/{project}/locations/global/collections/{collection}/dataStore/*\/conversations/*`
   * or
   * `projects/{project}/locations/global/collections/{collection}/engines/*\/conversations/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The state of the Conversation.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.Conversation.State state = 2;
   */
  state: Conversation_State;

  /**
   * A unique identifier for tracking users.
   *
   * @generated from field: string user_pseudo_id = 3;
   */
  userPseudoId: string;

  /**
   * Conversation messages.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1alpha.ConversationMessage messages = 4;
   */
  messages: ConversationMessage[];

  /**
   * Output only. The time the conversation started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 5;
   */
  startTime?: Timestamp;

  /**
   * Output only. The time the conversation finished.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 6;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Conversation.
 * Use `create(ConversationSchema)` to create a new message.
 */
export const ConversationSchema: GenMessage<Conversation> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_conversation, 0);

/**
 * Enumeration of the state of the conversation.
 *
 * @generated from enum google.cloud.discoveryengine.v1alpha.Conversation.State
 */
export enum Conversation_State {
  /**
   * Unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Conversation is currently open.
   *
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * Conversation has been completed.
   *
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1alpha.Conversation.State.
 */
export const Conversation_StateSchema: GenEnum<Conversation_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1alpha_conversation, 0, 0);

/**
 * Defines a reply message to user.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Reply
 */
export type Reply = Message<"google.cloud.discoveryengine.v1alpha.Reply"> & {
  /**
   * DEPRECATED: use `summary` instead.
   * Text reply.
   *
   * @generated from field: string reply = 1 [deprecated = true];
   * @deprecated
   */
  reply: string;

  /**
   * References in the reply.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1alpha.Reply.Reference references = 2 [deprecated = true];
   * @deprecated
   */
  references: Reply_Reference[];

  /**
   * Summary based on search results.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.SearchResponse.Summary summary = 3;
   */
  summary?: SearchResponse_Summary;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Reply.
 * Use `create(ReplySchema)` to create a new message.
 */
export const ReplySchema: GenMessage<Reply> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_conversation, 1);

/**
 * Defines reference in reply.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.Reply.Reference
 * @deprecated
 */
export type Reply_Reference = Message<"google.cloud.discoveryengine.v1alpha.Reply.Reference"> & {
  /**
   * URI link reference.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Anchor text.
   *
   * @generated from field: string anchor_text = 2;
   */
  anchorText: string;

  /**
   * Anchor text start index.
   *
   * @generated from field: int32 start = 3;
   */
  start: number;

  /**
   * Anchor text end index.
   *
   * @generated from field: int32 end = 4;
   */
  end: number;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.Reply.Reference.
 * Use `create(Reply_ReferenceSchema)` to create a new message.
 * @deprecated
 */
export const Reply_ReferenceSchema: GenMessage<Reply_Reference> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_conversation, 1, 0);

/**
 * Defines context of the conversation
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ConversationContext
 */
export type ConversationContext = Message<"google.cloud.discoveryengine.v1alpha.ConversationContext"> & {
  /**
   * The current list of documents the user is seeing.
   * It contains the document resource references.
   *
   * @generated from field: repeated string context_documents = 1;
   */
  contextDocuments: string[];

  /**
   * The current active document the user opened.
   * It contains the document resource reference.
   *
   * @generated from field: string active_document = 2;
   */
  activeDocument: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ConversationContext.
 * Use `create(ConversationContextSchema)` to create a new message.
 */
export const ConversationContextSchema: GenMessage<ConversationContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_conversation, 2);

/**
 * Defines text input.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.TextInput
 */
export type TextInput = Message<"google.cloud.discoveryengine.v1alpha.TextInput"> & {
  /**
   * Text input.
   *
   * @generated from field: string input = 1;
   */
  input: string;

  /**
   * Conversation context of the input.
   *
   * @generated from field: google.cloud.discoveryengine.v1alpha.ConversationContext context = 2;
   */
  context?: ConversationContext;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.TextInput.
 * Use `create(TextInputSchema)` to create a new message.
 */
export const TextInputSchema: GenMessage<TextInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_conversation, 3);

/**
 * Defines a conversation message.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.ConversationMessage
 */
export type ConversationMessage = Message<"google.cloud.discoveryengine.v1alpha.ConversationMessage"> & {
  /**
   * @generated from oneof google.cloud.discoveryengine.v1alpha.ConversationMessage.message
   */
  message: {
    /**
     * User text input.
     *
     * @generated from field: google.cloud.discoveryengine.v1alpha.TextInput user_input = 1;
     */
    value: TextInput;
    case: "userInput";
  } | {
    /**
     * Search reply.
     *
     * @generated from field: google.cloud.discoveryengine.v1alpha.Reply reply = 2;
     */
    value: Reply;
    case: "reply";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Message creation timestamp.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.ConversationMessage.
 * Use `create(ConversationMessageSchema)` to create a new message.
 */
export const ConversationMessageSchema: GenMessage<ConversationMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_conversation, 4);

