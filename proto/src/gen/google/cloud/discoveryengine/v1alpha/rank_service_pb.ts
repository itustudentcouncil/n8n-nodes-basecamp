// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1alpha/rank_service.proto (package google.cloud.discoveryengine.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1alpha/rank_service.proto.
 */
export const file_google_cloud_discoveryengine_v1alpha_rank_service: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYWxwaGEvcmFua19zZXJ2aWNlLnByb3RvEiRnb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEiSgoNUmFua2luZ1JlY29yZBIKCgJpZBgBIAEoCRINCgV0aXRsZRgCIAEoCRIPCgdjb250ZW50GAMgASgJEg0KBXNjb3JlGAQgASgCIokDCgtSYW5rUmVxdWVzdBJMCg5yYW5raW5nX2NvbmZpZxgBIAEoCUI04EEC+kEuCixkaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb20vUmFua2luZ0NvbmZpZxINCgVtb2RlbBgCIAEoCRINCgV0b3BfbhgDIAEoBRINCgVxdWVyeRgEIAEoCRJJCgdyZWNvcmRzGAUgAygLMjMuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlJhbmtpbmdSZWNvcmRCA+BBAhIpCiFpZ25vcmVfcmVjb3JkX2RldGFpbHNfaW5fcmVzcG9uc2UYBiABKAgSVgoLdXNlcl9sYWJlbHMYByADKAsyQS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYWxwaGEuUmFua1JlcXVlc3QuVXNlckxhYmVsc0VudHJ5GjEKD1VzZXJMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIlQKDFJhbmtSZXNwb25zZRJECgdyZWNvcmRzGAUgAygLMjMuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlJhbmtpbmdSZWNvcmQypAIKC1JhbmtTZXJ2aWNlEsABCgRSYW5rEjEuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlJhbmtSZXF1ZXN0GjIuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhLlJhbmtSZXNwb25zZSJRgtPkkwJLOgEqIkYvdjFhbHBoYS97cmFua2luZ19jb25maWc9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9yYW5raW5nQ29uZmlncy8qfTpyYW5rGlLKQR5kaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb23SQS5odHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtQpwCCihjb20uZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWFscGhhQhBSYW5rU2VydmljZVByb3RvUAFaUmNsb3VkLmdvb2dsZS5jb20vZ28vZGlzY292ZXJ5ZW5naW5lL2FwaXYxYWxwaGEvZGlzY292ZXJ5ZW5naW5lcGI7ZGlzY292ZXJ5ZW5naW5lcGKiAg9ESVNDT1ZFUllFTkdJTkWqAiRHb29nbGUuQ2xvdWQuRGlzY292ZXJ5RW5naW5lLlYxQWxwaGHKAiRHb29nbGVcQ2xvdWRcRGlzY292ZXJ5RW5naW5lXFYxYWxwaGHqAidHb29nbGU6OkNsb3VkOjpEaXNjb3ZlcnlFbmdpbmU6OlYxYWxwaGFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource]);

/**
 * Record message for
 * [RankService.Rank][google.cloud.discoveryengine.v1alpha.RankService.Rank]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.RankingRecord
 */
export type RankingRecord = Message<"google.cloud.discoveryengine.v1alpha.RankingRecord"> & {
  /**
   * The unique ID to represent the record.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The title of the record. Empty by default.
   * At least one of
   * [title][google.cloud.discoveryengine.v1alpha.RankingRecord.title] or
   * [content][google.cloud.discoveryengine.v1alpha.RankingRecord.content]
   * should be set otherwise an INVALID_ARGUMENT error is thrown.
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * The content of the record. Empty by default.
   * At least one of
   * [title][google.cloud.discoveryengine.v1alpha.RankingRecord.title] or
   * [content][google.cloud.discoveryengine.v1alpha.RankingRecord.content]
   * should be set otherwise an INVALID_ARGUMENT error is thrown.
   *
   * @generated from field: string content = 3;
   */
  content: string;

  /**
   * The score of this record based on the given query and selected model.
   *
   * @generated from field: float score = 4;
   */
  score: number;
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.RankingRecord.
 * Use `create(RankingRecordSchema)` to create a new message.
 */
export const RankingRecordSchema: GenMessage<RankingRecord> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_rank_service, 0);

/**
 * Request message for
 * [RankService.Rank][google.cloud.discoveryengine.v1alpha.RankService.Rank]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.RankRequest
 */
export type RankRequest = Message<"google.cloud.discoveryengine.v1alpha.RankRequest"> & {
  /**
   * Required. The resource name of the rank service config, such as
   * `projects/{project_num}/locations/{location_id}/rankingConfigs/default_ranking_config`.
   *
   * @generated from field: string ranking_config = 1;
   */
  rankingConfig: string;

  /**
   * The identifier of the model to use. It is one of:
   *
   * * `semantic-ranker-512@latest`: Semantic ranking model with maxiumn input
   * token size 512.
   *
   * It is set to `semantic-ranker-512@latest` by default if unspecified.
   *
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * The number of results to return. If this is unset or no bigger than zero,
   * returns all results.
   *
   * @generated from field: int32 top_n = 3;
   */
  topN: number;

  /**
   * The query to use.
   *
   * @generated from field: string query = 4;
   */
  query: string;

  /**
   * Required. A list of records to rank. At most 200 records to rank.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1alpha.RankingRecord records = 5;
   */
  records: RankingRecord[];

  /**
   * If true, the response will contain only record ID and score. By default, it
   * is false, the response will contain record details.
   *
   * @generated from field: bool ignore_record_details_in_response = 6;
   */
  ignoreRecordDetailsInResponse: boolean;

  /**
   * The user labels applied to a resource must meet the following requirements:
   *
   * * Each resource can have multiple labels, up to a maximum of 64.
   * * Each label must be a key-value pair.
   * * Keys have a minimum length of 1 character and a maximum length of 63
   *   characters and cannot be empty. Values can be empty and have a maximum
   *   length of 63 characters.
   * * Keys and values can contain only lowercase letters, numeric characters,
   *   underscores, and dashes. All characters must use UTF-8 encoding, and
   *   international characters are allowed.
   * * The key portion of a label must be unique. However, you can use the same
   *   key with multiple resources.
   * * Keys must start with a lowercase letter or international character.
   *
   * See [Google Cloud
   * Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
   * for more details.
   *
   * @generated from field: map<string, string> user_labels = 7;
   */
  userLabels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.RankRequest.
 * Use `create(RankRequestSchema)` to create a new message.
 */
export const RankRequestSchema: GenMessage<RankRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_rank_service, 1);

/**
 * Response message for
 * [RankService.Rank][google.cloud.discoveryengine.v1alpha.RankService.Rank]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1alpha.RankResponse
 */
export type RankResponse = Message<"google.cloud.discoveryengine.v1alpha.RankResponse"> & {
  /**
   * A list of records sorted by descending score.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1alpha.RankingRecord records = 5;
   */
  records: RankingRecord[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1alpha.RankResponse.
 * Use `create(RankResponseSchema)` to create a new message.
 */
export const RankResponseSchema: GenMessage<RankResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1alpha_rank_service, 2);

/**
 * Service for ranking text records.
 *
 * @generated from service google.cloud.discoveryengine.v1alpha.RankService
 */
export const RankService: GenService<{
  /**
   * Ranks a list of text records based on the given input query.
   *
   * @generated from rpc google.cloud.discoveryengine.v1alpha.RankService.Rank
   */
  rank: {
    methodKind: "unary";
    input: typeof RankRequestSchema;
    output: typeof RankResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_discoveryengine_v1alpha_rank_service, 0);

