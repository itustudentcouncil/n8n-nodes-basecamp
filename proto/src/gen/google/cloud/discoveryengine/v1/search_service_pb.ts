// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1/search_service.proto (package google.cloud.discoveryengine.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Chunk } from "./chunk_pb";
import { file_google_cloud_discoveryengine_v1_chunk } from "./chunk_pb";
import type { Interval, UserInfo } from "./common_pb";
import { file_google_cloud_discoveryengine_v1_common } from "./common_pb";
import type { Document } from "./document_pb";
import { file_google_cloud_discoveryengine_v1_document } from "./document_pb";
import type { Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1/search_service.proto.
 */
export const file_google_cloud_discoveryengine_v1_search_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_discoveryengine_v1_chunk, file_google_cloud_discoveryengine_v1_common, file_google_cloud_discoveryengine_v1_document, file_google_protobuf_struct]);

/**
 * Request message for
 * [SearchService.Search][google.cloud.discoveryengine.v1.SearchService.Search]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest
 */
export type SearchRequest = Message<"google.cloud.discoveryengine.v1.SearchRequest"> & {
  /**
   * Required. The resource name of the Search serving config, such as
   * `projects/*\/locations/global/collections/default_collection/engines/*\/servingConfigs/default_serving_config`,
   * or
   * `projects/*\/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
   * This field is used to identify the serving configuration name, set
   * of models used to make the search.
   *
   * @generated from field: string serving_config = 1;
   */
  servingConfig: string;

  /**
   * The branch resource name, such as
   * `projects/*\/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`.
   *
   * Use `default_branch` as the branch ID or leave this field empty, to search
   * documents under the default branch.
   *
   * @generated from field: string branch = 2;
   */
  branch: string;

  /**
   * Raw search query.
   *
   * @generated from field: string query = 3;
   */
  query: string;

  /**
   * Raw image query.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.ImageQuery image_query = 19;
   */
  imageQuery?: SearchRequest_ImageQuery;

  /**
   * Maximum number of [Document][google.cloud.discoveryengine.v1.Document]s to
   * return. The maximum allowed value depends on the data type. Values above
   * the maximum value are coerced to the maximum value.
   *
   * * Websites with basic indexing: Default `10`, Maximum `25`.
   * * Websites with advanced indexing: Default `25`, Maximum `50`.
   * * Other: Default `50`, Maximum `100`.
   *
   * If this field is negative, an  `INVALID_ARGUMENT` is returned.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * A page token received from a previous
   * [SearchService.Search][google.cloud.discoveryengine.v1.SearchService.Search]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [SearchService.Search][google.cloud.discoveryengine.v1.SearchService.Search]
   * must match the call that provided the page token. Otherwise, an
   *  `INVALID_ARGUMENT`  error is returned.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;

  /**
   * A 0-indexed integer that specifies the current offset (that is, starting
   * result location, amongst the
   * [Document][google.cloud.discoveryengine.v1.Document]s deemed by the API as
   * relevant) in search results. This field is only considered if
   * [page_token][google.cloud.discoveryengine.v1.SearchRequest.page_token] is
   * unset.
   *
   * If this field is negative, an  `INVALID_ARGUMENT`  is returned.
   *
   * @generated from field: int32 offset = 6;
   */
  offset: number;

  /**
   * Specs defining dataStores to filter on in a search call and configurations
   * for those dataStores. This is only considered for engines with multiple
   * dataStores use case. For single dataStore within an engine, they should
   * use the specs at the top level.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchRequest.DataStoreSpec data_store_specs = 32;
   */
  dataStoreSpecs: SearchRequest_DataStoreSpec[];

  /**
   * The filter syntax consists of an expression language for constructing a
   * predicate from one or more fields of the documents being filtered. Filter
   * expression is case-sensitive.
   *
   * If this field is unrecognizable, an  `INVALID_ARGUMENT`  is returned.
   *
   * Filtering in Vertex AI Search is done by mapping the LHS filter key to a
   * key property defined in the Vertex AI Search backend -- this mapping is
   * defined by the customer in their schema. For example a media customer might
   * have a field 'name' in their schema. In this case the filter would look
   * like this: filter --> name:'ANY("king kong")'
   *
   * For more information about filtering including syntax and filter
   * operators, see
   * [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
   *
   * @generated from field: string filter = 7;
   */
  filter: string;

  /**
   * The default filter that is applied when a user performs a search without
   * checking any filters on the search page.
   *
   * The filter applied to every search request when quality improvement such as
   * query expansion is needed. In the case a query does not have a sufficient
   * amount of results this filter will be used to determine whether or not to
   * enable the query expansion flow. The original filter will still be used for
   * the query expanded search.
   * This field is strongly recommended to achieve high search quality.
   *
   * For more information about filter syntax, see
   * [SearchRequest.filter][google.cloud.discoveryengine.v1.SearchRequest.filter].
   *
   * @generated from field: string canonical_filter = 29;
   */
  canonicalFilter: string;

  /**
   * The order in which documents are returned. Documents can be ordered by
   * a field in an [Document][google.cloud.discoveryengine.v1.Document] object.
   * Leave it unset if ordered by relevance. `order_by` expression is
   * case-sensitive.
   *
   * For more information on ordering the website search results, see
   * [Order web search
   * results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results).
   * For more information on ordering the healthcare search results, see
   * [Order healthcare search
   * results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results).
   * If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
   *
   * @generated from field: string order_by = 8;
   */
  orderBy: string;

  /**
   * Information about the end user.
   * Highly recommended for analytics.
   * [UserInfo.user_agent][google.cloud.discoveryengine.v1.UserInfo.user_agent]
   * is used to deduce `device_type` for analytics.
   *
   * @generated from field: google.cloud.discoveryengine.v1.UserInfo user_info = 21;
   */
  userInfo?: UserInfo;

  /**
   * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
   * information, see [Standard
   * fields](https://cloud.google.com/apis/design/standard_fields). This field
   * helps to better interpret the query. If a value isn't specified, the query
   * language code is automatically detected, which may not be accurate.
   *
   * @generated from field: string language_code = 35;
   */
  languageCode: string;

  /**
   * Facet specifications for faceted search. If empty, no facets are returned.
   *
   * A maximum of 100 values are allowed. Otherwise, an  `INVALID_ARGUMENT`
   * error is returned.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchRequest.FacetSpec facet_specs = 9;
   */
  facetSpecs: SearchRequest_FacetSpec[];

  /**
   * Boost specification to boost certain documents.
   * For more information on boosting, see
   * [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.BoostSpec boost_spec = 10;
   */
  boostSpec?: SearchRequest_BoostSpec;

  /**
   * Additional search parameters.
   *
   * For public website search only, supported values are:
   *
   * * `user_country_code`: string. Default empty. If set to non-empty, results
   *    are restricted or boosted based on the location provided.
   *    For example, `user_country_code: "au"`
   *
   *    For available codes see [Country
   *    Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes)
   *
   * * `search_type`: double. Default empty. Enables non-webpage searching
   *    depending on the value. The only valid non-default value is 1,
   *    which enables image searching.
   *    For example, `search_type: 1`
   *
   * @generated from field: map<string, google.protobuf.Value> params = 11;
   */
  params: { [key: string]: Value };

  /**
   * The query expansion specification that specifies the conditions under which
   * query expansion occurs.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec query_expansion_spec = 13;
   */
  queryExpansionSpec?: SearchRequest_QueryExpansionSpec;

  /**
   * The spell correction specification that specifies the mode under
   * which spell correction takes effect.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec spell_correction_spec = 14;
   */
  spellCorrectionSpec?: SearchRequest_SpellCorrectionSpec;

  /**
   * A unique identifier for tracking visitors. For example, this could be
   * implemented with an HTTP cookie, which should be able to uniquely identify
   * a visitor on a single device. This unique identifier should not change if
   * the visitor logs in or out of the website.
   *
   * This field should NOT have a fixed value such as `unknown_visitor`.
   *
   * This should be the same identifier as
   * [UserEvent.user_pseudo_id][google.cloud.discoveryengine.v1.UserEvent.user_pseudo_id]
   * and
   * [CompleteQueryRequest.user_pseudo_id][google.cloud.discoveryengine.v1.CompleteQueryRequest.user_pseudo_id]
   *
   * The field must be a UTF-8 encoded string with a length limit of 128
   * characters. Otherwise, an  `INVALID_ARGUMENT`  error is returned.
   *
   * @generated from field: string user_pseudo_id = 15;
   */
  userPseudoId: string;

  /**
   * A specification for configuring the behavior of content search.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec content_search_spec = 24;
   */
  contentSearchSpec?: SearchRequest_ContentSearchSpec;

  /**
   * Whether to turn on safe search. This is only supported for
   * website search.
   *
   * @generated from field: bool safe_search = 20;
   */
  safeSearch: boolean;

  /**
   * The user labels applied to a resource must meet the following requirements:
   *
   * * Each resource can have multiple labels, up to a maximum of 64.
   * * Each label must be a key-value pair.
   * * Keys have a minimum length of 1 character and a maximum length of 63
   *   characters and cannot be empty. Values can be empty and have a maximum
   *   length of 63 characters.
   * * Keys and values can contain only lowercase letters, numeric characters,
   *   underscores, and dashes. All characters must use UTF-8 encoding, and
   *   international characters are allowed.
   * * The key portion of a label must be unique. However, you can use the same
   *   key with multiple resources.
   * * Keys must start with a lowercase letter or international character.
   *
   * See [Google Cloud
   * Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
   * for more details.
   *
   * @generated from field: map<string, string> user_labels = 22;
   */
  userLabels: { [key: string]: string };

  /**
   * Search as you type configuration. Only supported for the
   * [IndustryVertical.MEDIA][google.cloud.discoveryengine.v1.IndustryVertical.MEDIA]
   * vertical.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.SearchAsYouTypeSpec search_as_you_type_spec = 31;
   */
  searchAsYouTypeSpec?: SearchRequest_SearchAsYouTypeSpec;

  /**
   * The session resource name. Optional.
   *
   * Session allows users to do multi-turn /search API calls or coordination
   * between /search API calls and /answer API calls.
   *
   * Example #1 (multi-turn /search API calls):
   *   1. Call /search API with the auto-session mode (see below).
   *   2. Call /search API with the session ID generated in the first call.
   *      Here, the previous search query gets considered in query
   *      standing. I.e., if the first query is "How did Alphabet do in 2022?"
   *      and the current query is "How about 2023?", the current query will
   *      be interpreted as "How did Alphabet do in 2023?".
   *
   * Example #2 (coordination between /search API calls and /answer API calls):
   *   1. Call /search API with the auto-session mode (see below).
   *   2. Call /answer API with the session ID generated in the first call.
   *      Here, the answer generation happens in the context of the search
   *      results from the first search call.
   *
   * Auto-session mode: when `projects/.../sessions/-` is used, a new session
   * gets automatically created. Otherwise, users can use the create-session API
   * to create a session manually.
   *
   * Multi-turn Search feature is currently at private GA stage. Please use
   * v1alpha or v1beta version instead before we launch this feature to public
   * GA. Or ask for allowlisting through Google Support team.
   *
   * @generated from field: string session = 41;
   */
  session: string;

  /**
   * Session specification.
   *
   * Can be used only when `session` is set.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.SessionSpec session_spec = 42;
   */
  sessionSpec?: SearchRequest_SessionSpec;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.
 * Use `create(SearchRequestSchema)` to create a new message.
 */
export const SearchRequestSchema: GenMessage<SearchRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0);

/**
 * Specifies the image query input.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.ImageQuery
 */
export type SearchRequest_ImageQuery = Message<"google.cloud.discoveryengine.v1.SearchRequest.ImageQuery"> & {
  /**
   * @generated from oneof google.cloud.discoveryengine.v1.SearchRequest.ImageQuery.image
   */
  image: {
    /**
     * Base64 encoded image bytes. Supported image formats: JPEG, PNG, and
     * BMP.
     *
     * @generated from field: string image_bytes = 1;
     */
    value: string;
    case: "imageBytes";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.ImageQuery.
 * Use `create(SearchRequest_ImageQuerySchema)` to create a new message.
 */
export const SearchRequest_ImageQuerySchema: GenMessage<SearchRequest_ImageQuery> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 0);

/**
 * A struct to define data stores to filter on in a search call and
 * configurations for those data stores. Otherwise, an `INVALID_ARGUMENT`
 * error is returned.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.DataStoreSpec
 */
export type SearchRequest_DataStoreSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.DataStoreSpec"> & {
  /**
   * Required. Full resource name of
   * [DataStore][google.cloud.discoveryengine.v1.DataStore], such as
   * `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
   *
   * @generated from field: string data_store = 1;
   */
  dataStore: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.DataStoreSpec.
 * Use `create(SearchRequest_DataStoreSpecSchema)` to create a new message.
 */
export const SearchRequest_DataStoreSpecSchema: GenMessage<SearchRequest_DataStoreSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 1);

/**
 * A facet specification to perform faceted search.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.FacetSpec
 */
export type SearchRequest_FacetSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.FacetSpec"> & {
  /**
   * Required. The facet key specification.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.FacetSpec.FacetKey facet_key = 1;
   */
  facetKey?: SearchRequest_FacetSpec_FacetKey;

  /**
   * Maximum facet values that are returned for this facet. If
   * unspecified, defaults to 20. The maximum allowed value is 300. Values
   * above 300 are coerced to 300.
   * For aggregation in healthcare search, when the [FacetKey.key] is
   * "healthcare_aggregation_key", the limit will be overridden to
   * 10,000 internally, regardless of the value set here.
   *
   * If this field is negative, an  `INVALID_ARGUMENT`  is returned.
   *
   * @generated from field: int32 limit = 2;
   */
  limit: number;

  /**
   * List of keys to exclude when faceting.
   *
   *
   * By default,
   * [FacetKey.key][google.cloud.discoveryengine.v1.SearchRequest.FacetSpec.FacetKey.key]
   * is not excluded from the filter unless it is listed in this field.
   *
   * Listing a facet key in this field allows its values to appear as facet
   * results, even when they are filtered out of search results. Using this
   * field does not affect what search results are returned.
   *
   * For example, suppose there are 100 documents with the color facet "Red"
   * and 200 documents with the color facet "Blue". A query containing the
   * filter "color:ANY("Red")" and having "color" as
   * [FacetKey.key][google.cloud.discoveryengine.v1.SearchRequest.FacetSpec.FacetKey.key]
   * would by default return only "Red" documents in the search results, and
   * also return "Red" with count 100 as the only color facet. Although there
   * are also blue documents available, "Blue" would not be shown as an
   * available facet value.
   *
   * If "color" is listed in "excludedFilterKeys", then the query returns the
   * facet values "Red" with count 100 and "Blue" with count 200, because the
   * "color" key is now excluded from the filter. Because this field doesn't
   * affect search results, the search results are still correctly filtered to
   * return only "Red" documents.
   *
   * A maximum of 100 values are allowed. Otherwise, an  `INVALID_ARGUMENT`
   * error is returned.
   *
   * @generated from field: repeated string excluded_filter_keys = 3;
   */
  excludedFilterKeys: string[];

  /**
   * Enables dynamic position for this facet. If set to true, the position of
   * this facet among all facets in the response is determined automatically.
   * If dynamic facets are enabled, it is ordered together.
   * If set to false, the position of this facet in the
   * response is the same as in the request, and it is ranked before
   * the facets with dynamic position enable and all dynamic facets.
   *
   * For example, you may always want to have rating facet returned in
   * the response, but it's not necessarily to always display the rating facet
   * at the top. In that case, you can set enable_dynamic_position to true so
   * that the position of rating facet in response is determined
   * automatically.
   *
   * Another example, assuming you have the following facets in the request:
   *
   * * "rating", enable_dynamic_position = true
   *
   * * "price", enable_dynamic_position = false
   *
   * * "brands", enable_dynamic_position = false
   *
   * And also you have a dynamic facets enabled, which generates a facet
   * `gender`. Then the final order of the facets in the response can be
   * ("price", "brands", "rating", "gender") or ("price", "brands", "gender",
   * "rating") depends on how API orders "gender" and "rating" facets.
   * However, notice that "price" and "brands" are always
   * ranked at first and second position because their enable_dynamic_position
   * is false.
   *
   * @generated from field: bool enable_dynamic_position = 4;
   */
  enableDynamicPosition: boolean;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.FacetSpec.
 * Use `create(SearchRequest_FacetSpecSchema)` to create a new message.
 */
export const SearchRequest_FacetSpecSchema: GenMessage<SearchRequest_FacetSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 2);

/**
 * Specifies how a facet is computed.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.FacetSpec.FacetKey
 */
export type SearchRequest_FacetSpec_FacetKey = Message<"google.cloud.discoveryengine.v1.SearchRequest.FacetSpec.FacetKey"> & {
  /**
   * Required. Supported textual and numerical facet keys in
   * [Document][google.cloud.discoveryengine.v1.Document] object, over which
   * the facet values are computed. Facet key is case-sensitive.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Set only if values should be bucketed into intervals. Must be set
   * for facets with numerical values. Must not be set for facet with text
   * values. Maximum number of intervals is 30.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.Interval intervals = 2;
   */
  intervals: Interval[];

  /**
   * Only get facet for the given restricted values. Only supported on
   * textual fields. For example, suppose "category" has three values
   * "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set
   * "restricted_values" to "Action > 2022", the "category" facet only
   * contains "Action > 2022". Only supported on textual fields. Maximum
   * is 10.
   *
   * @generated from field: repeated string restricted_values = 3;
   */
  restrictedValues: string[];

  /**
   * Only get facet values that start with the given string prefix. For
   * example, suppose "category" has three values "Action > 2022",
   * "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to "Action", the
   * "category" facet only contains "Action > 2022" and "Action > 2021".
   * Only supported on textual fields. Maximum is 10.
   *
   * @generated from field: repeated string prefixes = 4;
   */
  prefixes: string[];

  /**
   * Only get facet values that contain the given strings. For example,
   * suppose "category" has three values "Action > 2022",
   * "Action > 2021" and "Sci-Fi > 2022". If set "contains" to "2022", the
   * "category" facet only contains "Action > 2022" and "Sci-Fi > 2022".
   * Only supported on textual fields. Maximum is 10.
   *
   * @generated from field: repeated string contains = 5;
   */
  contains: string[];

  /**
   * True to make facet keys case insensitive when getting faceting
   * values with prefixes or contains; false otherwise.
   *
   * @generated from field: bool case_insensitive = 6;
   */
  caseInsensitive: boolean;

  /**
   * The order in which documents are returned.
   *
   * Allowed values are:
   *
   * * "count desc", which means order by
   * [SearchResponse.Facet.values.count][google.cloud.discoveryengine.v1.SearchResponse.Facet.FacetValue.count]
   * descending.
   *
   * * "value desc", which means order by
   * [SearchResponse.Facet.values.value][google.cloud.discoveryengine.v1.SearchResponse.Facet.FacetValue.value]
   * descending.
   *   Only applies to textual facets.
   *
   * If not set, textual values are sorted in [natural
   * order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical
   * intervals are sorted in the order given by
   * [FacetSpec.FacetKey.intervals][google.cloud.discoveryengine.v1.SearchRequest.FacetSpec.FacetKey.intervals].
   *
   * @generated from field: string order_by = 7;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.FacetSpec.FacetKey.
 * Use `create(SearchRequest_FacetSpec_FacetKeySchema)` to create a new message.
 */
export const SearchRequest_FacetSpec_FacetKeySchema: GenMessage<SearchRequest_FacetSpec_FacetKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 2, 0);

/**
 * Boost specification to boost certain documents.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.BoostSpec
 */
export type SearchRequest_BoostSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.BoostSpec"> & {
  /**
   * Condition boost specifications. If a document matches multiple conditions
   * in the specifictions, boost scores from these specifications are all
   * applied and combined in a non-linear way. Maximum number of
   * specifications is 20.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchRequest.BoostSpec.ConditionBoostSpec condition_boost_specs = 1;
   */
  conditionBoostSpecs: SearchRequest_BoostSpec_ConditionBoostSpec[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.BoostSpec.
 * Use `create(SearchRequest_BoostSpecSchema)` to create a new message.
 */
export const SearchRequest_BoostSpecSchema: GenMessage<SearchRequest_BoostSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 3);

/**
 * Boost applies to documents which match a condition.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.BoostSpec.ConditionBoostSpec
 */
export type SearchRequest_BoostSpec_ConditionBoostSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.BoostSpec.ConditionBoostSpec"> & {
  /**
   * An expression which specifies a boost condition. The syntax and
   * supported fields are the same as a filter expression. See
   * [SearchRequest.filter][google.cloud.discoveryengine.v1.SearchRequest.filter]
   * for detail syntax and limitations.
   *
   * Examples:
   *
   * * To boost documents with document ID "doc_1" or "doc_2", and
   * color "Red" or "Blue":
   * `(document_id: ANY("doc_1", "doc_2")) AND (color: ANY("Red", "Blue"))`
   *
   * @generated from field: string condition = 1;
   */
  condition: string;

  /**
   * Strength of the condition boost, which should be in [-1, 1]. Negative
   * boost means demotion. Default is 0.0.
   *
   * Setting to 1.0 gives the document a big promotion. However, it does
   * not necessarily mean that the boosted document will be the top result
   * at all times, nor that other documents will be excluded. Results
   * could still be shown even when none of them matches the condition.
   * And results that are significantly more relevant to the search query
   * can still trump your heavily favored but irrelevant documents.
   *
   * Setting to -1.0 gives the document a big demotion. However, results
   * that are deeply relevant might still be shown. The document will have
   * an upstream battle to get a fairly high ranking, but it is not
   * blocked out completely.
   *
   * Setting to 0.0 means no boost applied. The boosting condition is
   * ignored. Only one of the (condition, boost) combination or the
   * boost_control_spec below are set. If both are set then the global boost
   * is ignored and the more fine-grained boost_control_spec is applied.
   *
   * @generated from field: float boost = 2;
   */
  boost: number;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.BoostSpec.ConditionBoostSpec.
 * Use `create(SearchRequest_BoostSpec_ConditionBoostSpecSchema)` to create a new message.
 */
export const SearchRequest_BoostSpec_ConditionBoostSpecSchema: GenMessage<SearchRequest_BoostSpec_ConditionBoostSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 3, 0);

/**
 * Specification to determine under which conditions query expansion should
 * occur.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
 */
export type SearchRequest_QueryExpansionSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec"> & {
  /**
   * The condition under which query expansion should occur. Default to
   * [Condition.DISABLED][google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.Condition.DISABLED].
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.Condition condition = 1;
   */
  condition: SearchRequest_QueryExpansionSpec_Condition;

  /**
   * Whether to pin unexpanded results. If this field is set to true,
   * unexpanded products are always at the top of the search results, followed
   * by the expanded results.
   *
   * @generated from field: bool pin_unexpanded_results = 2;
   */
  pinUnexpandedResults: boolean;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.
 * Use `create(SearchRequest_QueryExpansionSpecSchema)` to create a new message.
 */
export const SearchRequest_QueryExpansionSpecSchema: GenMessage<SearchRequest_QueryExpansionSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 4);

/**
 * Enum describing under which condition query expansion should occur.
 *
 * @generated from enum google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.Condition
 */
export enum SearchRequest_QueryExpansionSpec_Condition {
  /**
   * Unspecified query expansion condition. In this case, server behavior
   * defaults to
   * [Condition.DISABLED][google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.Condition.DISABLED].
   *
   * @generated from enum value: CONDITION_UNSPECIFIED = 0;
   */
  CONDITION_UNSPECIFIED = 0,

  /**
   * Disabled query expansion. Only the exact search query is used, even if
   * [SearchResponse.total_size][google.cloud.discoveryengine.v1.SearchResponse.total_size]
   * is zero.
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * Automatic query expansion built by the Search API.
   *
   * @generated from enum value: AUTO = 2;
   */
  AUTO = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.Condition.
 */
export const SearchRequest_QueryExpansionSpec_ConditionSchema: GenEnum<SearchRequest_QueryExpansionSpec_Condition> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 4, 0);

/**
 * The specification for query spell correction.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
 */
export type SearchRequest_SpellCorrectionSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec"> & {
  /**
   * The mode under which spell correction
   * replaces the original search query. Defaults to
   * [Mode.AUTO][google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.Mode.AUTO].
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.Mode mode = 1;
   */
  mode: SearchRequest_SpellCorrectionSpec_Mode;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.
 * Use `create(SearchRequest_SpellCorrectionSpecSchema)` to create a new message.
 */
export const SearchRequest_SpellCorrectionSpecSchema: GenMessage<SearchRequest_SpellCorrectionSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 5);

/**
 * Enum describing under which mode spell correction should occur.
 *
 * @generated from enum google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.Mode
 */
export enum SearchRequest_SpellCorrectionSpec_Mode {
  /**
   * Unspecified spell correction mode. In this case, server behavior
   * defaults to
   * [Mode.AUTO][google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.Mode.AUTO].
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * Search API tries to find a spelling suggestion. If a suggestion is
   * found, it is put in the
   * [SearchResponse.corrected_query][google.cloud.discoveryengine.v1.SearchResponse.corrected_query].
   * The spelling suggestion won't be used as the search query.
   *
   * @generated from enum value: SUGGESTION_ONLY = 1;
   */
  SUGGESTION_ONLY = 1,

  /**
   * Automatic spell correction built by the Search API. Search will
   * be based on the corrected query if found.
   *
   * @generated from enum value: AUTO = 2;
   */
  AUTO = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.Mode.
 */
export const SearchRequest_SpellCorrectionSpec_ModeSchema: GenEnum<SearchRequest_SpellCorrectionSpec_Mode> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 5, 0);

/**
 * A specification for configuring the behavior of content search.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
 */
export type SearchRequest_ContentSearchSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec"> & {
  /**
   * If `snippetSpec` is not specified, snippets are not included in the
   * search response.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec snippet_spec = 1;
   */
  snippetSpec?: SearchRequest_ContentSearchSpec_SnippetSpec;

  /**
   * If `summarySpec` is not specified, summaries are not included in the
   * search response.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec summary_spec = 2;
   */
  summarySpec?: SearchRequest_ContentSearchSpec_SummarySpec;

  /**
   * If there is no extractive_content_spec provided, there will be no
   * extractive answer in the search response.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ExtractiveContentSpec extractive_content_spec = 3;
   */
  extractiveContentSpec?: SearchRequest_ContentSearchSpec_ExtractiveContentSpec;

  /**
   * Specifies the search result mode. If unspecified, the
   * search result mode defaults to `DOCUMENTS`.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SearchResultMode search_result_mode = 4;
   */
  searchResultMode: SearchRequest_ContentSearchSpec_SearchResultMode;

  /**
   * Specifies the chunk spec to be returned from the search response.
   * Only available if the
   * [SearchRequest.ContentSearchSpec.search_result_mode][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.search_result_mode]
   * is set to
   * [CHUNKS][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SearchResultMode.CHUNKS]
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ChunkSpec chunk_spec = 5;
   */
  chunkSpec?: SearchRequest_ContentSearchSpec_ChunkSpec;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.
 * Use `create(SearchRequest_ContentSearchSpecSchema)` to create a new message.
 */
export const SearchRequest_ContentSearchSpecSchema: GenMessage<SearchRequest_ContentSearchSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 6);

/**
 * A specification for configuring snippets in a search response.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
 */
export type SearchRequest_ContentSearchSpec_SnippetSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec"> & {
  /**
   * [DEPRECATED] This field is deprecated. To control snippet return, use
   * `return_snippet` field. For backwards compatibility, we will return
   * snippet if max_snippet_count > 0.
   *
   * @generated from field: int32 max_snippet_count = 1 [deprecated = true];
   * @deprecated
   */
  maxSnippetCount: number;

  /**
   * [DEPRECATED] This field is deprecated and will have no affect on the
   * snippet.
   *
   * @generated from field: bool reference_only = 2 [deprecated = true];
   * @deprecated
   */
  referenceOnly: boolean;

  /**
   * If `true`, then return snippet. If no snippet can be generated, we
   * return "No snippet is available for this page." A `snippet_status` with
   * `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.
   *
   * @generated from field: bool return_snippet = 3;
   */
  returnSnippet: boolean;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec.
 * Use `create(SearchRequest_ContentSearchSpec_SnippetSpecSchema)` to create a new message.
 */
export const SearchRequest_ContentSearchSpec_SnippetSpecSchema: GenMessage<SearchRequest_ContentSearchSpec_SnippetSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 6, 0);

/**
 * A specification for configuring a summary returned in a search
 * response.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec
 */
export type SearchRequest_ContentSearchSpec_SummarySpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec"> & {
  /**
   * The number of top results to generate the summary from. If the number
   * of results returned is less than `summaryResultCount`, the summary is
   * generated from all of the results.
   *
   * At most 10 results for documents mode, or 50 for chunks mode, can be
   * used to generate a summary. The chunks mode is used when
   * [SearchRequest.ContentSearchSpec.search_result_mode][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.search_result_mode]
   * is set to
   * [CHUNKS][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SearchResultMode.CHUNKS].
   *
   * @generated from field: int32 summary_result_count = 1;
   */
  summaryResultCount: number;

  /**
   * Specifies whether to include citations in the summary. The default
   * value is `false`.
   *
   * When this field is set to `true`, summaries include in-line citation
   * numbers.
   *
   * Example summary including citations:
   *
   * BigQuery is Google Cloud's fully managed and completely serverless
   * enterprise data warehouse [1]. BigQuery supports all data types, works
   * across clouds, and has built-in machine learning and business
   * intelligence, all within a unified platform [2, 3].
   *
   * The citation numbers refer to the returned search results and are
   * 1-indexed. For example, [1] means that the sentence is attributed to
   * the first search result. [2, 3] means that the sentence is attributed
   * to both the second and third search results.
   *
   * @generated from field: bool include_citations = 2;
   */
  includeCitations: boolean;

  /**
   * Specifies whether to filter out adversarial queries. The default value
   * is `false`.
   *
   * Google employs search-query classification to detect adversarial
   * queries. No summary is returned if the search query is classified as an
   * adversarial query. For example, a user might ask a question regarding
   * negative comments about the company or submit a query designed to
   * generate unsafe, policy-violating output. If this field is set to
   * `true`, we skip generating summaries for adversarial queries and return
   * fallback messages instead.
   *
   * @generated from field: bool ignore_adversarial_query = 3;
   */
  ignoreAdversarialQuery: boolean;

  /**
   * Specifies whether to filter out queries that are not summary-seeking.
   * The default value is `false`.
   *
   * Google employs search-query classification to detect summary-seeking
   * queries. No summary is returned if the search query is classified as a
   * non-summary seeking query. For example, `why is the sky blue` and `Who
   * is the best soccer player in the world?` are summary-seeking queries,
   * but `SFO airport` and `world cup 2026` are not. They are most likely
   * navigational queries. If this field is set to `true`, we skip
   * generating summaries for non-summary seeking queries and return
   * fallback messages instead.
   *
   * @generated from field: bool ignore_non_summary_seeking_query = 4;
   */
  ignoreNonSummarySeekingQuery: boolean;

  /**
   * Specifies whether to filter out queries that have low relevance. The
   * default value is `false`.
   *
   * If this field is set to `false`, all search results are used regardless
   * of relevance to generate answers. If set to `true`, only queries with
   * high relevance search results will generate answers.
   *
   * @generated from field: bool ignore_low_relevant_content = 9;
   */
  ignoreLowRelevantContent: boolean;

  /**
   * If specified, the spec will be used to modify the prompt provided to
   * the LLM.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.ModelPromptSpec model_prompt_spec = 5;
   */
  modelPromptSpec?: SearchRequest_ContentSearchSpec_SummarySpec_ModelPromptSpec;

  /**
   * Language code for Summary. Use language tags defined by
   * [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).
   * Note: This is an experimental feature.
   *
   * @generated from field: string language_code = 6;
   */
  languageCode: string;

  /**
   * If specified, the spec will be used to modify the model specification
   * provided to the LLM.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.ModelSpec model_spec = 7;
   */
  modelSpec?: SearchRequest_ContentSearchSpec_SummarySpec_ModelSpec;

  /**
   * If true, answer will be generated from most relevant chunks from top
   * search results. This feature will improve summary quality.
   * Note that with this feature enabled, not all top search results
   * will be referenced and included in the reference list, so the citation
   * source index only points to the search results listed in the reference
   * list.
   *
   * @generated from field: bool use_semantic_chunks = 8;
   */
  useSemanticChunks: boolean;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.
 * Use `create(SearchRequest_ContentSearchSpec_SummarySpecSchema)` to create a new message.
 */
export const SearchRequest_ContentSearchSpec_SummarySpecSchema: GenMessage<SearchRequest_ContentSearchSpec_SummarySpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 6, 1);

/**
 * Specification of the prompt to use with the model.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.ModelPromptSpec
 */
export type SearchRequest_ContentSearchSpec_SummarySpec_ModelPromptSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.ModelPromptSpec"> & {
  /**
   * Text at the beginning of the prompt that instructs the assistant.
   * Examples are available in the user guide.
   *
   * @generated from field: string preamble = 1;
   */
  preamble: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.ModelPromptSpec.
 * Use `create(SearchRequest_ContentSearchSpec_SummarySpec_ModelPromptSpecSchema)` to create a new message.
 */
export const SearchRequest_ContentSearchSpec_SummarySpec_ModelPromptSpecSchema: GenMessage<SearchRequest_ContentSearchSpec_SummarySpec_ModelPromptSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 6, 1, 0);

/**
 * Specification of the model.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.ModelSpec
 */
export type SearchRequest_ContentSearchSpec_SummarySpec_ModelSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.ModelSpec"> & {
  /**
   * The model version used to generate the summary.
   *
   * Supported values are:
   *
   * * `stable`: string. Default value when no value is specified. Uses a
   *    generally available, fine-tuned model. For more information, see
   *    [Answer generation model versions and
   *    lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
   * * `preview`: string. (Public preview) Uses a preview model. For more
   *    information, see
   *    [Answer generation model versions and
   *    lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
   *
   * @generated from field: string version = 1;
   */
  version: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.ModelSpec.
 * Use `create(SearchRequest_ContentSearchSpec_SummarySpec_ModelSpecSchema)` to create a new message.
 */
export const SearchRequest_ContentSearchSpec_SummarySpec_ModelSpecSchema: GenMessage<SearchRequest_ContentSearchSpec_SummarySpec_ModelSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 6, 1, 1);

/**
 * A specification for configuring the extractive content in a search
 * response.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
 */
export type SearchRequest_ContentSearchSpec_ExtractiveContentSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ExtractiveContentSpec"> & {
  /**
   * The maximum number of extractive answers returned in each search
   * result.
   *
   * An extractive answer is a verbatim answer extracted from the original
   * document, which provides a precise and contextually relevant answer to
   * the search query.
   *
   * If the number of matching answers is less than the
   * `max_extractive_answer_count`, return all of the answers. Otherwise,
   * return the `max_extractive_answer_count`.
   *
   * At most five answers are returned for each
   * [SearchResult][google.cloud.discoveryengine.v1.SearchResponse.SearchResult].
   *
   * @generated from field: int32 max_extractive_answer_count = 1;
   */
  maxExtractiveAnswerCount: number;

  /**
   * The max number of extractive segments returned in each search result.
   * Only applied if the
   * [DataStore][google.cloud.discoveryengine.v1.DataStore] is set to
   * [DataStore.ContentConfig.CONTENT_REQUIRED][google.cloud.discoveryengine.v1.DataStore.ContentConfig.CONTENT_REQUIRED]
   * or
   * [DataStore.solution_types][google.cloud.discoveryengine.v1.DataStore.solution_types]
   * is
   * [SOLUTION_TYPE_CHAT][google.cloud.discoveryengine.v1.SolutionType.SOLUTION_TYPE_CHAT].
   *
   * An extractive segment is a text segment extracted from the original
   * document that is relevant to the search query, and, in general, more
   * verbose than an extractive answer. The segment could then be used as
   * input for LLMs to generate summaries and answers.
   *
   * If the number of matching segments is less than
   * `max_extractive_segment_count`, return all of the segments. Otherwise,
   * return the `max_extractive_segment_count`.
   *
   * @generated from field: int32 max_extractive_segment_count = 2;
   */
  maxExtractiveSegmentCount: number;

  /**
   * Specifies whether to return the confidence score from the extractive
   * segments in each search result. This feature is available only for new
   * or allowlisted data stores. To allowlist your data store,
   * contact your Customer Engineer. The default value is `false`.
   *
   * @generated from field: bool return_extractive_segment_score = 3;
   */
  returnExtractiveSegmentScore: boolean;

  /**
   * Specifies whether to also include the adjacent from each selected
   * segments.
   * Return at most `num_previous_segments` segments before each selected
   * segments.
   *
   * @generated from field: int32 num_previous_segments = 4;
   */
  numPreviousSegments: number;

  /**
   * Return at most `num_next_segments` segments after each selected
   * segments.
   *
   * @generated from field: int32 num_next_segments = 5;
   */
  numNextSegments: number;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ExtractiveContentSpec.
 * Use `create(SearchRequest_ContentSearchSpec_ExtractiveContentSpecSchema)` to create a new message.
 */
export const SearchRequest_ContentSearchSpec_ExtractiveContentSpecSchema: GenMessage<SearchRequest_ContentSearchSpec_ExtractiveContentSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 6, 2);

/**
 * Specifies the chunk spec to be returned from the search response.
 * Only available if the
 * [SearchRequest.ContentSearchSpec.search_result_mode][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.search_result_mode]
 * is set to
 * [CHUNKS][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SearchResultMode.CHUNKS]
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ChunkSpec
 */
export type SearchRequest_ContentSearchSpec_ChunkSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ChunkSpec"> & {
  /**
   * The number of previous chunks to be returned of the current chunk. The
   * maximum allowed value is 3.
   * If not specified, no previous chunks will be returned.
   *
   * @generated from field: int32 num_previous_chunks = 1;
   */
  numPreviousChunks: number;

  /**
   * The number of next chunks to be returned of the current chunk. The
   * maximum allowed value is 3.
   * If not specified, no next chunks will be returned.
   *
   * @generated from field: int32 num_next_chunks = 2;
   */
  numNextChunks: number;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ChunkSpec.
 * Use `create(SearchRequest_ContentSearchSpec_ChunkSpecSchema)` to create a new message.
 */
export const SearchRequest_ContentSearchSpec_ChunkSpecSchema: GenMessage<SearchRequest_ContentSearchSpec_ChunkSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 6, 3);

/**
 * Specifies the search result mode. If unspecified, the
 * search result mode defaults to `DOCUMENTS`.
 *
 * @generated from enum google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SearchResultMode
 */
export enum SearchRequest_ContentSearchSpec_SearchResultMode {
  /**
   * Default value.
   *
   * @generated from enum value: SEARCH_RESULT_MODE_UNSPECIFIED = 0;
   */
  SEARCH_RESULT_MODE_UNSPECIFIED = 0,

  /**
   * Returns documents in the search result.
   *
   * @generated from enum value: DOCUMENTS = 1;
   */
  DOCUMENTS = 1,

  /**
   * Returns chunks in the search result. Only available if the
   * [DataStore.DocumentProcessingConfig.chunking_config][] is specified.
   *
   * @generated from enum value: CHUNKS = 2;
   */
  CHUNKS = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SearchResultMode.
 */
export const SearchRequest_ContentSearchSpec_SearchResultModeSchema: GenEnum<SearchRequest_ContentSearchSpec_SearchResultMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 6, 0);

/**
 * Specification for search as you type in search requests.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.SearchAsYouTypeSpec
 */
export type SearchRequest_SearchAsYouTypeSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.SearchAsYouTypeSpec"> & {
  /**
   * The condition under which search as you type should occur.
   * Default to
   * [Condition.DISABLED][google.cloud.discoveryengine.v1.SearchRequest.SearchAsYouTypeSpec.Condition.DISABLED].
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchRequest.SearchAsYouTypeSpec.Condition condition = 1;
   */
  condition: SearchRequest_SearchAsYouTypeSpec_Condition;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.SearchAsYouTypeSpec.
 * Use `create(SearchRequest_SearchAsYouTypeSpecSchema)` to create a new message.
 */
export const SearchRequest_SearchAsYouTypeSpecSchema: GenMessage<SearchRequest_SearchAsYouTypeSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 7);

/**
 * Enum describing under which condition search as you type should occur.
 *
 * @generated from enum google.cloud.discoveryengine.v1.SearchRequest.SearchAsYouTypeSpec.Condition
 */
export enum SearchRequest_SearchAsYouTypeSpec_Condition {
  /**
   * Server behavior defaults to
   * [Condition.DISABLED][google.cloud.discoveryengine.v1.SearchRequest.SearchAsYouTypeSpec.Condition.DISABLED].
   *
   * @generated from enum value: CONDITION_UNSPECIFIED = 0;
   */
  CONDITION_UNSPECIFIED = 0,

  /**
   * Disables Search As You Type.
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * Enables Search As You Type.
   *
   * @generated from enum value: ENABLED = 2;
   */
  ENABLED = 2,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1.SearchRequest.SearchAsYouTypeSpec.Condition.
 */
export const SearchRequest_SearchAsYouTypeSpec_ConditionSchema: GenEnum<SearchRequest_SearchAsYouTypeSpec_Condition> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 7, 0);

/**
 * Session specification.
 *
 * Multi-turn Search feature is currently at private GA stage. Please use
 * v1alpha or v1beta version instead before we launch this feature to public
 * GA. Or ask for allowlisting through Google Support team.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchRequest.SessionSpec
 */
export type SearchRequest_SessionSpec = Message<"google.cloud.discoveryengine.v1.SearchRequest.SessionSpec"> & {
  /**
   * If set, the search result gets stored to the "turn" specified by this
   * query ID.
   *
   * Example: Let's say the session looks like this:
   *   session {
   *     name: ".../sessions/xxx"
   *     turns {
   *       query { text: "What is foo?" query_id: ".../questions/yyy" }
   *       answer: "Foo is ..."
   *     }
   *     turns {
   *       query { text: "How about bar then?" query_id: ".../questions/zzz" }
   *     }
   *   }
   *
   * The user can call /search API with a request like this:
   *
   *    session: ".../sessions/xxx"
   *    session_spec { query_id: ".../questions/zzz" }
   *
   * Then, the API stores the search result, associated with the last turn.
   * The stored search result can be used by a subsequent /answer API call
   * (with the session ID and the query ID specified). Also, it is possible
   * to call /search and /answer in parallel with the same session ID & query
   * ID.
   *
   * @generated from field: string query_id = 1;
   */
  queryId: string;

  /**
   * The number of top search results to persist. The persisted search results
   * can be used for the subsequent /answer api call.
   *
   * This field is simliar to the `summary_result_count` field in
   * [SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count].
   *
   * At most 10 results for documents mode, or 50 for chunks mode.
   *
   * @generated from field: optional int32 search_result_persistence_count = 2;
   */
  searchResultPersistenceCount?: number;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchRequest.SessionSpec.
 * Use `create(SearchRequest_SessionSpecSchema)` to create a new message.
 */
export const SearchRequest_SessionSpecSchema: GenMessage<SearchRequest_SessionSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 0, 8);

/**
 * Response message for
 * [SearchService.Search][google.cloud.discoveryengine.v1.SearchService.Search]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse
 */
export type SearchResponse = Message<"google.cloud.discoveryengine.v1.SearchResponse"> & {
  /**
   * A list of matched documents. The order represents the ranking.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchResponse.SearchResult results = 1;
   */
  results: SearchResponse_SearchResult[];

  /**
   * Results of facets requested by user.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchResponse.Facet facets = 2;
   */
  facets: SearchResponse_Facet[];

  /**
   * The estimated total count of matched items irrespective of pagination. The
   * count of [results][google.cloud.discoveryengine.v1.SearchResponse.results]
   * returned by pagination may be less than the
   * [total_size][google.cloud.discoveryengine.v1.SearchResponse.total_size]
   * that matches.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;

  /**
   * A unique search token. This should be included in the
   * [UserEvent][google.cloud.discoveryengine.v1.UserEvent] logs resulting from
   * this search, which enables accurate attribution of search model
   * performance. This also helps to identify a request during the customer
   * support scenarios.
   *
   * @generated from field: string attribution_token = 4;
   */
  attributionToken: string;

  /**
   * The URI of a customer-defined redirect page. If redirect action is
   * triggered, no search is performed, and only
   * [redirect_uri][google.cloud.discoveryengine.v1.SearchResponse.redirect_uri]
   * and
   * [attribution_token][google.cloud.discoveryengine.v1.SearchResponse.attribution_token]
   * are set in the response.
   *
   * @generated from field: string redirect_uri = 12;
   */
  redirectUri: string;

  /**
   * A token that can be sent as
   * [SearchRequest.page_token][google.cloud.discoveryengine.v1.SearchRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 5;
   */
  nextPageToken: string;

  /**
   * Contains the spell corrected query, if found. If the spell correction type
   * is AUTOMATIC, then the search results are based on corrected_query.
   * Otherwise the original query is used for search.
   *
   * @generated from field: string corrected_query = 7;
   */
  correctedQuery: string;

  /**
   * A summary as part of the search results.
   * This field is only returned if
   * [SearchRequest.ContentSearchSpec.summary_spec][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.summary_spec]
   * is set.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchResponse.Summary summary = 9;
   */
  summary?: SearchResponse_Summary;

  /**
   * Query expansion information for the returned results.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchResponse.QueryExpansionInfo query_expansion_info = 14;
   */
  queryExpansionInfo?: SearchResponse_QueryExpansionInfo;

  /**
   * Session information.
   *
   * Only set if
   * [SearchRequest.session][google.cloud.discoveryengine.v1.SearchRequest.session]
   * is provided. See its description for more details.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchResponse.SessionInfo session_info = 19;
   */
  sessionInfo?: SearchResponse_SessionInfo;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.
 * Use `create(SearchResponseSchema)` to create a new message.
 */
export const SearchResponseSchema: GenMessage<SearchResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1);

/**
 * Represents the search results.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.SearchResult
 */
export type SearchResponse_SearchResult = Message<"google.cloud.discoveryengine.v1.SearchResponse.SearchResult"> & {
  /**
   * [Document.id][google.cloud.discoveryengine.v1.Document.id] of the
   * searched [Document][google.cloud.discoveryengine.v1.Document].
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The document data snippet in the search response. Only fields that are
   * marked as `retrievable` are populated.
   *
   * @generated from field: google.cloud.discoveryengine.v1.Document document = 2;
   */
  document?: Document;

  /**
   * The chunk data in the search response if the
   * [SearchRequest.ContentSearchSpec.search_result_mode][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.search_result_mode]
   * is set to
   * [CHUNKS][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SearchResultMode.CHUNKS].
   *
   * @generated from field: google.cloud.discoveryengine.v1.Chunk chunk = 18;
   */
  chunk?: Chunk;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.SearchResult.
 * Use `create(SearchResponse_SearchResultSchema)` to create a new message.
 */
export const SearchResponse_SearchResultSchema: GenMessage<SearchResponse_SearchResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 0);

/**
 * A facet result.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.Facet
 */
export type SearchResponse_Facet = Message<"google.cloud.discoveryengine.v1.SearchResponse.Facet"> & {
  /**
   * The key for this facet. For example, `"colors"` or `"price"`. It matches
   * [SearchRequest.FacetSpec.FacetKey.key][google.cloud.discoveryengine.v1.SearchRequest.FacetSpec.FacetKey.key].
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The facet values for this field.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchResponse.Facet.FacetValue values = 2;
   */
  values: SearchResponse_Facet_FacetValue[];

  /**
   * Whether the facet is dynamically generated.
   *
   * @generated from field: bool dynamic_facet = 3;
   */
  dynamicFacet: boolean;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.Facet.
 * Use `create(SearchResponse_FacetSchema)` to create a new message.
 */
export const SearchResponse_FacetSchema: GenMessage<SearchResponse_Facet> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 1);

/**
 * A facet value which contains value names and their count.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.Facet.FacetValue
 */
export type SearchResponse_Facet_FacetValue = Message<"google.cloud.discoveryengine.v1.SearchResponse.Facet.FacetValue"> & {
  /**
   * A facet value which contains values.
   *
   * @generated from oneof google.cloud.discoveryengine.v1.SearchResponse.Facet.FacetValue.facet_value
   */
  facetValue: {
    /**
     * Text value of a facet, such as "Black" for facet "colors".
     *
     * @generated from field: string value = 1;
     */
    value: string;
    case: "value";
  } | {
    /**
     * Interval value for a facet, such as [10, 20) for facet "price". It
     * matches
     * [SearchRequest.FacetSpec.FacetKey.intervals][google.cloud.discoveryengine.v1.SearchRequest.FacetSpec.FacetKey.intervals].
     *
     * @generated from field: google.cloud.discoveryengine.v1.Interval interval = 2;
     */
    value: Interval;
    case: "interval";
  } | { case: undefined; value?: undefined };

  /**
   * Number of items that have this facet value.
   *
   * @generated from field: int64 count = 3;
   */
  count: bigint;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.Facet.FacetValue.
 * Use `create(SearchResponse_Facet_FacetValueSchema)` to create a new message.
 */
export const SearchResponse_Facet_FacetValueSchema: GenMessage<SearchResponse_Facet_FacetValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 1, 0);

/**
 * Summary of the top N search results specified by the summary spec.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.Summary
 */
export type SearchResponse_Summary = Message<"google.cloud.discoveryengine.v1.SearchResponse.Summary"> & {
  /**
   * The summary content.
   *
   * @generated from field: string summary_text = 1;
   */
  summaryText: string;

  /**
   * Additional summary-skipped reasons. This provides the reason for ignored
   * cases. If nothing is skipped, this field is not set.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchResponse.Summary.SummarySkippedReason summary_skipped_reasons = 2;
   */
  summarySkippedReasons: SearchResponse_Summary_SummarySkippedReason[];

  /**
   * A collection of Safety Attribute categories and their associated
   * confidence scores.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchResponse.Summary.SafetyAttributes safety_attributes = 3;
   */
  safetyAttributes?: SearchResponse_Summary_SafetyAttributes;

  /**
   * Summary with metadata information.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchResponse.Summary.SummaryWithMetadata summary_with_metadata = 4;
   */
  summaryWithMetadata?: SearchResponse_Summary_SummaryWithMetadata;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.Summary.
 * Use `create(SearchResponse_SummarySchema)` to create a new message.
 */
export const SearchResponse_SummarySchema: GenMessage<SearchResponse_Summary> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 2);

/**
 * Safety Attribute categories and their associated confidence scores.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.Summary.SafetyAttributes
 */
export type SearchResponse_Summary_SafetyAttributes = Message<"google.cloud.discoveryengine.v1.SearchResponse.Summary.SafetyAttributes"> & {
  /**
   * The display names of Safety Attribute categories associated with the
   * generated content. Order matches the Scores.
   *
   * @generated from field: repeated string categories = 1;
   */
  categories: string[];

  /**
   * The confidence scores of the each category, higher
   * value means higher confidence. Order matches the Categories.
   *
   * @generated from field: repeated float scores = 2;
   */
  scores: number[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.Summary.SafetyAttributes.
 * Use `create(SearchResponse_Summary_SafetyAttributesSchema)` to create a new message.
 */
export const SearchResponse_Summary_SafetyAttributesSchema: GenMessage<SearchResponse_Summary_SafetyAttributes> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 2, 0);

/**
 * Citation metadata.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.Summary.CitationMetadata
 */
export type SearchResponse_Summary_CitationMetadata = Message<"google.cloud.discoveryengine.v1.SearchResponse.Summary.CitationMetadata"> & {
  /**
   * Citations for segments.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchResponse.Summary.Citation citations = 1;
   */
  citations: SearchResponse_Summary_Citation[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.Summary.CitationMetadata.
 * Use `create(SearchResponse_Summary_CitationMetadataSchema)` to create a new message.
 */
export const SearchResponse_Summary_CitationMetadataSchema: GenMessage<SearchResponse_Summary_CitationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 2, 1);

/**
 * Citation info for a segment.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.Summary.Citation
 */
export type SearchResponse_Summary_Citation = Message<"google.cloud.discoveryengine.v1.SearchResponse.Summary.Citation"> & {
  /**
   * Index indicates the start of the segment, measured in bytes/unicode.
   *
   * @generated from field: int64 start_index = 1;
   */
  startIndex: bigint;

  /**
   * End of the attributed segment, exclusive.
   *
   * @generated from field: int64 end_index = 2;
   */
  endIndex: bigint;

  /**
   * Citation sources for the attributed segment.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchResponse.Summary.CitationSource sources = 3;
   */
  sources: SearchResponse_Summary_CitationSource[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.Summary.Citation.
 * Use `create(SearchResponse_Summary_CitationSchema)` to create a new message.
 */
export const SearchResponse_Summary_CitationSchema: GenMessage<SearchResponse_Summary_Citation> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 2, 2);

/**
 * Citation source.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.Summary.CitationSource
 */
export type SearchResponse_Summary_CitationSource = Message<"google.cloud.discoveryengine.v1.SearchResponse.Summary.CitationSource"> & {
  /**
   * Document reference index from SummaryWithMetadata.references.
   * It is 0-indexed and the value will be zero if the reference_index is
   * not set explicitly.
   *
   * @generated from field: int64 reference_index = 4;
   */
  referenceIndex: bigint;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.Summary.CitationSource.
 * Use `create(SearchResponse_Summary_CitationSourceSchema)` to create a new message.
 */
export const SearchResponse_Summary_CitationSourceSchema: GenMessage<SearchResponse_Summary_CitationSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 2, 3);

/**
 * Document reference.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.Summary.Reference
 */
export type SearchResponse_Summary_Reference = Message<"google.cloud.discoveryengine.v1.SearchResponse.Summary.Reference"> & {
  /**
   * Title of the document.
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * Required.
   * [Document.name][google.cloud.discoveryengine.v1.Document.name] of the
   * document. Full resource name of the referenced document, in the format
   * `projects/*\/locations/*\/collections/*\/dataStores/*\/branches/*\/documents/*`.
   *
   * @generated from field: string document = 2;
   */
  document: string;

  /**
   * Cloud Storage or HTTP uri for the document.
   *
   * @generated from field: string uri = 3;
   */
  uri: string;

  /**
   * List of cited chunk contents derived from document content.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchResponse.Summary.Reference.ChunkContent chunk_contents = 4;
   */
  chunkContents: SearchResponse_Summary_Reference_ChunkContent[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.Summary.Reference.
 * Use `create(SearchResponse_Summary_ReferenceSchema)` to create a new message.
 */
export const SearchResponse_Summary_ReferenceSchema: GenMessage<SearchResponse_Summary_Reference> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 2, 4);

/**
 * Chunk content.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.Summary.Reference.ChunkContent
 */
export type SearchResponse_Summary_Reference_ChunkContent = Message<"google.cloud.discoveryengine.v1.SearchResponse.Summary.Reference.ChunkContent"> & {
  /**
   * Chunk textual content.
   *
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * Page identifier.
   *
   * @generated from field: string page_identifier = 2;
   */
  pageIdentifier: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.Summary.Reference.ChunkContent.
 * Use `create(SearchResponse_Summary_Reference_ChunkContentSchema)` to create a new message.
 */
export const SearchResponse_Summary_Reference_ChunkContentSchema: GenMessage<SearchResponse_Summary_Reference_ChunkContent> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 2, 4, 0);

/**
 * Summary with metadata information.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.Summary.SummaryWithMetadata
 */
export type SearchResponse_Summary_SummaryWithMetadata = Message<"google.cloud.discoveryengine.v1.SearchResponse.Summary.SummaryWithMetadata"> & {
  /**
   * Summary text with no citation information.
   *
   * @generated from field: string summary = 1;
   */
  summary: string;

  /**
   * Citation metadata for given summary.
   *
   * @generated from field: google.cloud.discoveryengine.v1.SearchResponse.Summary.CitationMetadata citation_metadata = 2;
   */
  citationMetadata?: SearchResponse_Summary_CitationMetadata;

  /**
   * Document References.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1.SearchResponse.Summary.Reference references = 3;
   */
  references: SearchResponse_Summary_Reference[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.Summary.SummaryWithMetadata.
 * Use `create(SearchResponse_Summary_SummaryWithMetadataSchema)` to create a new message.
 */
export const SearchResponse_Summary_SummaryWithMetadataSchema: GenMessage<SearchResponse_Summary_SummaryWithMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 2, 5);

/**
 * An Enum for summary-skipped reasons.
 *
 * @generated from enum google.cloud.discoveryengine.v1.SearchResponse.Summary.SummarySkippedReason
 */
export enum SearchResponse_Summary_SummarySkippedReason {
  /**
   * Default value. The summary skipped reason is not specified.
   *
   * @generated from enum value: SUMMARY_SKIPPED_REASON_UNSPECIFIED = 0;
   */
  SUMMARY_SKIPPED_REASON_UNSPECIFIED = 0,

  /**
   * The adversarial query ignored case.
   *
   * Only used when
   * [SummarySpec.ignore_adversarial_query][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.ignore_adversarial_query]
   * is set to `true`.
   *
   * @generated from enum value: ADVERSARIAL_QUERY_IGNORED = 1;
   */
  ADVERSARIAL_QUERY_IGNORED = 1,

  /**
   * The non-summary seeking query ignored case.
   *
   * Only used when
   * [SummarySpec.ignore_non_summary_seeking_query][google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SummarySpec.ignore_non_summary_seeking_query]
   * is set to `true`.
   *
   * @generated from enum value: NON_SUMMARY_SEEKING_QUERY_IGNORED = 2;
   */
  NON_SUMMARY_SEEKING_QUERY_IGNORED = 2,

  /**
   * The out-of-domain query ignored case.
   *
   * Google skips the summary if there are no high-relevance search results.
   * For example, the data store contains facts about company A but the
   * user query is asking questions about company B.
   *
   * @generated from enum value: OUT_OF_DOMAIN_QUERY_IGNORED = 3;
   */
  OUT_OF_DOMAIN_QUERY_IGNORED = 3,

  /**
   * The potential policy violation case.
   *
   * Google skips the summary if there is a potential policy violation
   * detected. This includes content that may be violent or toxic.
   *
   * @generated from enum value: POTENTIAL_POLICY_VIOLATION = 4;
   */
  POTENTIAL_POLICY_VIOLATION = 4,

  /**
   * The LLM addon not enabled case.
   *
   * Google skips the summary if the LLM addon is not enabled.
   *
   * @generated from enum value: LLM_ADDON_NOT_ENABLED = 5;
   */
  LLM_ADDON_NOT_ENABLED = 5,

  /**
   * The no relevant content case.
   *
   * Google skips the summary if there is no relevant content in the
   * retrieved search results.
   *
   * @generated from enum value: NO_RELEVANT_CONTENT = 6;
   */
  NO_RELEVANT_CONTENT = 6,

  /**
   * The jail-breaking query ignored case.
   *
   * For example, "Reply in the tone of a competing company's CEO".
   * Only used when
   * [SearchRequest.ContentSearchSpec.SummarySpec.ignore_jail_breaking_query]
   * is set to `true`.
   *
   * @generated from enum value: JAIL_BREAKING_QUERY_IGNORED = 7;
   */
  JAIL_BREAKING_QUERY_IGNORED = 7,

  /**
   * The customer policy violation case.
   *
   * Google skips the summary if there is a customer policy violation
   * detected. The policy is defined by the customer.
   *
   * @generated from enum value: CUSTOMER_POLICY_VIOLATION = 8;
   */
  CUSTOMER_POLICY_VIOLATION = 8,
}

/**
 * Describes the enum google.cloud.discoveryengine.v1.SearchResponse.Summary.SummarySkippedReason.
 */
export const SearchResponse_Summary_SummarySkippedReasonSchema: GenEnum<SearchResponse_Summary_SummarySkippedReason> = /*@__PURE__*/
  enumDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 2, 0);

/**
 * Information describing query expansion including whether expansion has
 * occurred.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.QueryExpansionInfo
 */
export type SearchResponse_QueryExpansionInfo = Message<"google.cloud.discoveryengine.v1.SearchResponse.QueryExpansionInfo"> & {
  /**
   * Bool describing whether query expansion has occurred.
   *
   * @generated from field: bool expanded_query = 1;
   */
  expandedQuery: boolean;

  /**
   * Number of pinned results. This field will only be set when expansion
   * happens and
   * [SearchRequest.QueryExpansionSpec.pin_unexpanded_results][google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.pin_unexpanded_results]
   * is set to true.
   *
   * @generated from field: int64 pinned_result_count = 2;
   */
  pinnedResultCount: bigint;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.QueryExpansionInfo.
 * Use `create(SearchResponse_QueryExpansionInfoSchema)` to create a new message.
 */
export const SearchResponse_QueryExpansionInfoSchema: GenMessage<SearchResponse_QueryExpansionInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 3);

/**
 * Information about the session.
 *
 * @generated from message google.cloud.discoveryengine.v1.SearchResponse.SessionInfo
 */
export type SearchResponse_SessionInfo = Message<"google.cloud.discoveryengine.v1.SearchResponse.SessionInfo"> & {
  /**
   * Name of the session.
   * If the auto-session mode is used (when
   * [SearchRequest.session][google.cloud.discoveryengine.v1.SearchRequest.session]
   * ends with "-"), this field holds the newly generated session name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Query ID that corresponds to this search API call.
   * One session can have multiple turns, each with a unique query ID.
   *
   * By specifying the session name and this query ID in the Answer API call,
   * the answer generation happens in the context of the search results from
   * this search call.
   *
   * @generated from field: string query_id = 2;
   */
  queryId: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.SearchResponse.SessionInfo.
 * Use `create(SearchResponse_SessionInfoSchema)` to create a new message.
 */
export const SearchResponse_SessionInfoSchema: GenMessage<SearchResponse_SessionInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_search_service, 1, 4);

/**
 * Service for search.
 *
 * @generated from service google.cloud.discoveryengine.v1.SearchService
 */
export const SearchService: GenService<{
  /**
   * Performs a search.
   *
   * @generated from rpc google.cloud.discoveryengine.v1.SearchService.Search
   */
  search: {
    methodKind: "unary";
    input: typeof SearchRequestSchema;
    output: typeof SearchResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_discoveryengine_v1_search_service, 0);

