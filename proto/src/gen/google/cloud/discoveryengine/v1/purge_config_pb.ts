// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1/purge_config.proto (package google.cloud.discoveryengine.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { GcsSource } from "./import_config_pb";
import { file_google_cloud_discoveryengine_v1_import_config } from "./import_config_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1/purge_config.proto.
 */
export const file_google_cloud_discoveryengine_v1_purge_config: GenFile = /*@__PURE__*/
  fileDesc("CjJnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxL3B1cmdlX2NvbmZpZy5wcm90bxIfZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MSJ+ChZQdXJnZVVzZXJFdmVudHNSZXF1ZXN0EkAKBnBhcmVudBgBIAEoCUIw4EEC+kEqCihkaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb20vRGF0YVN0b3JlEhMKBmZpbHRlchgCIAEoCUID4EECEg0KBWZvcmNlGAMgASgIIi4KF1B1cmdlVXNlckV2ZW50c1Jlc3BvbnNlEhMKC3B1cmdlX2NvdW50GAEgASgDIqkBChdQdXJnZVVzZXJFdmVudHNNZXRhZGF0YRIvCgtjcmVhdGVfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLdXBkYXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhUKDXN1Y2Nlc3NfY291bnQYAyABKAMSFQoNZmFpbHVyZV9jb3VudBgEIAEoAyI3ChBQdXJnZUVycm9yQ29uZmlnEhQKCmdjc19wcmVmaXgYASABKAlIAEINCgtkZXN0aW5hdGlvbiLBAwoVUHVyZ2VEb2N1bWVudHNSZXF1ZXN0EkAKCmdjc19zb3VyY2UYBSABKAsyKi5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxLkdjc1NvdXJjZUgAElwKDWlubGluZV9zb3VyY2UYBiABKAsyQy5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxLlB1cmdlRG9jdW1lbnRzUmVxdWVzdC5JbmxpbmVTb3VyY2VIABI9CgZwYXJlbnQYASABKAlCLeBBAvpBJwolZGlzY292ZXJ5ZW5naW5lLmdvb2dsZWFwaXMuY29tL0JyYW5jaBITCgZmaWx0ZXIYAiABKAlCA+BBAhJHCgxlcnJvcl9jb25maWcYByABKAsyMS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxLlB1cmdlRXJyb3JDb25maWcSDQoFZm9yY2UYAyABKAgaUgoMSW5saW5lU291cmNlEkIKCWRvY3VtZW50cxgBIAMoCUIv4EEC+kEpCidkaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb20vRG9jdW1lbnRCCAoGc291cmNlInEKFlB1cmdlRG9jdW1lbnRzUmVzcG9uc2USEwoLcHVyZ2VfY291bnQYASABKAMSQgoMcHVyZ2Vfc2FtcGxlGAIgAygJQiz6QSkKJ2Rpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbS9Eb2N1bWVudCK/AQoWUHVyZ2VEb2N1bWVudHNNZXRhZGF0YRIvCgtjcmVhdGVfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLdXBkYXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhUKDXN1Y2Nlc3NfY291bnQYAyABKAMSFQoNZmFpbHVyZV9jb3VudBgEIAEoAxIVCg1pZ25vcmVkX2NvdW50GAUgASgDImkKJVB1cmdlU3VnZ2VzdGlvbkRlbnlMaXN0RW50cmllc1JlcXVlc3QSQAoGcGFyZW50GAEgASgJQjDgQQL6QSoKKGRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbS9EYXRhU3RvcmUiaAomUHVyZ2VTdWdnZXN0aW9uRGVueUxpc3RFbnRyaWVzUmVzcG9uc2USEwoLcHVyZ2VfY291bnQYASABKAMSKQoNZXJyb3Jfc2FtcGxlcxgCIAMoCzISLmdvb2dsZS5ycGMuU3RhdHVzIooBCiZQdXJnZVN1Z2dlc3Rpb25EZW55TGlzdEVudHJpZXNNZXRhZGF0YRIvCgtjcmVhdGVfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLdXBkYXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wImUKIVB1cmdlQ29tcGxldGlvblN1Z2dlc3Rpb25zUmVxdWVzdBJACgZwYXJlbnQYASABKAlCMOBBAvpBKgooZGlzY292ZXJ5ZW5naW5lLmdvb2dsZWFwaXMuY29tL0RhdGFTdG9yZSJoCiJQdXJnZUNvbXBsZXRpb25TdWdnZXN0aW9uc1Jlc3BvbnNlEhcKD3B1cmdlX3N1Y2NlZWRlZBgBIAEoCBIpCg1lcnJvcl9zYW1wbGVzGAIgAygLMhIuZ29vZ2xlLnJwYy5TdGF0dXMihgEKIlB1cmdlQ29tcGxldGlvblN1Z2dlc3Rpb25zTWV0YWRhdGESLwoLY3JlYXRlX3RpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC3VwZGF0ZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEKDAgojY29tLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFCEFB1cmdlQ29uZmlnUHJvdG9QAVpNY2xvdWQuZ29vZ2xlLmNvbS9nby9kaXNjb3ZlcnllbmdpbmUvYXBpdjEvZGlzY292ZXJ5ZW5naW5lcGI7ZGlzY292ZXJ5ZW5naW5lcGKiAg9ESVNDT1ZFUllFTkdJTkWqAh9Hb29nbGUuQ2xvdWQuRGlzY292ZXJ5RW5naW5lLlYxygIfR29vZ2xlXENsb3VkXERpc2NvdmVyeUVuZ2luZVxWMeoCIkdvb2dsZTo6Q2xvdWQ6OkRpc2NvdmVyeUVuZ2luZTo6VjFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_discoveryengine_v1_import_config, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * Request message for PurgeUserEvents method.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeUserEventsRequest
 */
export type PurgeUserEventsRequest = Message<"google.cloud.discoveryengine.v1.PurgeUserEventsRequest"> & {
  /**
   * Required. The resource name of the catalog under which the events are
   * created. The format is
   * `projects/{project}/locations/global/collections/{collection}/dataStores/{dataStore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The filter string to specify the events to be deleted with a
   * length limit of 5,000 characters. The eligible fields for filtering are:
   *
   * * `eventType`: Double quoted
   * [UserEvent.event_type][google.cloud.discoveryengine.v1.UserEvent.event_type]
   * string.
   * * `eventTime`: in ISO 8601 "zulu" format.
   * * `userPseudoId`: Double quoted string. Specifying this will delete all
   *   events associated with a visitor.
   * * `userId`: Double quoted string. Specifying this will delete all events
   *   associated with a user.
   *
   * Examples:
   *
   * * Deleting all events in a time range:
   *   `eventTime > "2012-04-23T18:25:43.511Z"
   *   eventTime < "2012-04-23T18:30:43.511Z"`
   * * Deleting specific eventType:
   *   `eventType = "search"`
   * * Deleting all events for a specific visitor:
   *   `userPseudoId = "visitor1024"`
   * * Deleting all events inside a DataStore:
   *   `*`
   *
   * The filtering fields are assumed to have an implicit AND.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The `force` field is currently not supported. Purge user event requests
   * will permanently delete all purgeable events. Once the development is
   * complete:
   * If `force` is set to false, the method will return the expected
   * purge count without deleting any user events. This field will default to
   * false if not included in the request.
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeUserEventsRequest.
 * Use `create(PurgeUserEventsRequestSchema)` to create a new message.
 */
export const PurgeUserEventsRequestSchema: GenMessage<PurgeUserEventsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 0);

/**
 * Response of the PurgeUserEventsRequest. If the long running operation is
 * successfully done, then this message is returned by the
 * google.longrunning.Operations.response field.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeUserEventsResponse
 */
export type PurgeUserEventsResponse = Message<"google.cloud.discoveryengine.v1.PurgeUserEventsResponse"> & {
  /**
   * The total count of events purged as a result of the operation.
   *
   * @generated from field: int64 purge_count = 1;
   */
  purgeCount: bigint;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeUserEventsResponse.
 * Use `create(PurgeUserEventsResponseSchema)` to create a new message.
 */
export const PurgeUserEventsResponseSchema: GenMessage<PurgeUserEventsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 1);

/**
 * Metadata related to the progress of the PurgeUserEvents operation.
 * This will be returned by the google.longrunning.Operation.metadata field.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeUserEventsMetadata
 */
export type PurgeUserEventsMetadata = Message<"google.cloud.discoveryengine.v1.PurgeUserEventsMetadata"> & {
  /**
   * Operation create time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Operation last update time. If the operation is done, this is also the
   * finish time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 2;
   */
  updateTime?: Timestamp;

  /**
   * Count of entries that were deleted successfully.
   *
   * @generated from field: int64 success_count = 3;
   */
  successCount: bigint;

  /**
   * Count of entries that encountered errors while processing.
   *
   * @generated from field: int64 failure_count = 4;
   */
  failureCount: bigint;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeUserEventsMetadata.
 * Use `create(PurgeUserEventsMetadataSchema)` to create a new message.
 */
export const PurgeUserEventsMetadataSchema: GenMessage<PurgeUserEventsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 2);

/**
 * Configuration of destination for Purge related errors.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeErrorConfig
 */
export type PurgeErrorConfig = Message<"google.cloud.discoveryengine.v1.PurgeErrorConfig"> & {
  /**
   * Required. Errors destination.
   *
   * @generated from oneof google.cloud.discoveryengine.v1.PurgeErrorConfig.destination
   */
  destination: {
    /**
     * Cloud Storage prefix for purge errors. This must be an empty,
     * existing Cloud Storage directory. Purge errors are written to
     * sharded files in this directory, one per line, as a JSON-encoded
     * `google.rpc.Status` message.
     *
     * @generated from field: string gcs_prefix = 1;
     */
    value: string;
    case: "gcsPrefix";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeErrorConfig.
 * Use `create(PurgeErrorConfigSchema)` to create a new message.
 */
export const PurgeErrorConfigSchema: GenMessage<PurgeErrorConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 3);

/**
 * Request message for
 * [DocumentService.PurgeDocuments][google.cloud.discoveryengine.v1.DocumentService.PurgeDocuments]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeDocumentsRequest
 */
export type PurgeDocumentsRequest = Message<"google.cloud.discoveryengine.v1.PurgeDocumentsRequest"> & {
  /**
   * The desired input source for the purging documents based on document IDs.
   *
   * @generated from oneof google.cloud.discoveryengine.v1.PurgeDocumentsRequest.source
   */
  source: {
    /**
     * Cloud Storage location for the input content.
     * Supported `data_schema`:
     * * `document_id`: One valid
     * [Document.id][google.cloud.discoveryengine.v1.Document.id] per line.
     *
     * @generated from field: google.cloud.discoveryengine.v1.GcsSource gcs_source = 5;
     */
    value: GcsSource;
    case: "gcsSource";
  } | {
    /**
     * Inline source for the input content for purge.
     *
     * @generated from field: google.cloud.discoveryengine.v1.PurgeDocumentsRequest.InlineSource inline_source = 6;
     */
    value: PurgeDocumentsRequest_InlineSource;
    case: "inlineSource";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The parent resource name, such as
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Filter matching documents to purge. Only currently supported
   * value is
   * `*` (all items).
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The desired location of errors incurred during the purge.
   *
   * @generated from field: google.cloud.discoveryengine.v1.PurgeErrorConfig error_config = 7;
   */
  errorConfig?: PurgeErrorConfig;

  /**
   * Actually performs the purge. If `force` is set to false, return the
   * expected purge count without deleting any documents.
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeDocumentsRequest.
 * Use `create(PurgeDocumentsRequestSchema)` to create a new message.
 */
export const PurgeDocumentsRequestSchema: GenMessage<PurgeDocumentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 4);

/**
 * The inline source for the input config for
 * [DocumentService.PurgeDocuments][google.cloud.discoveryengine.v1.DocumentService.PurgeDocuments]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeDocumentsRequest.InlineSource
 */
export type PurgeDocumentsRequest_InlineSource = Message<"google.cloud.discoveryengine.v1.PurgeDocumentsRequest.InlineSource"> & {
  /**
   * Required. A list of full resource name of documents to purge. In the
   * format
   * `projects/*\/locations/*\/collections/*\/dataStores/*\/branches/*\/documents/*`.
   * Recommended max of 100 items.
   *
   * @generated from field: repeated string documents = 1;
   */
  documents: string[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeDocumentsRequest.InlineSource.
 * Use `create(PurgeDocumentsRequest_InlineSourceSchema)` to create a new message.
 */
export const PurgeDocumentsRequest_InlineSourceSchema: GenMessage<PurgeDocumentsRequest_InlineSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 4, 0);

/**
 * Response message for
 * [DocumentService.PurgeDocuments][google.cloud.discoveryengine.v1.DocumentService.PurgeDocuments]
 * method. If the long running operation is successfully done, then this message
 * is returned by the google.longrunning.Operations.response field.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeDocumentsResponse
 */
export type PurgeDocumentsResponse = Message<"google.cloud.discoveryengine.v1.PurgeDocumentsResponse"> & {
  /**
   * The total count of documents purged as a result of the operation.
   *
   * @generated from field: int64 purge_count = 1;
   */
  purgeCount: bigint;

  /**
   * A sample of document names that will be deleted. Only populated if `force`
   * is set to false. A max of 100 names will be returned and the names are
   * chosen at random.
   *
   * @generated from field: repeated string purge_sample = 2;
   */
  purgeSample: string[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeDocumentsResponse.
 * Use `create(PurgeDocumentsResponseSchema)` to create a new message.
 */
export const PurgeDocumentsResponseSchema: GenMessage<PurgeDocumentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 5);

/**
 * Metadata related to the progress of the PurgeDocuments operation.
 * This will be returned by the google.longrunning.Operation.metadata field.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
 */
export type PurgeDocumentsMetadata = Message<"google.cloud.discoveryengine.v1.PurgeDocumentsMetadata"> & {
  /**
   * Operation create time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Operation last update time. If the operation is done, this is also the
   * finish time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 2;
   */
  updateTime?: Timestamp;

  /**
   * Count of entries that were deleted successfully.
   *
   * @generated from field: int64 success_count = 3;
   */
  successCount: bigint;

  /**
   * Count of entries that encountered errors while processing.
   *
   * @generated from field: int64 failure_count = 4;
   */
  failureCount: bigint;

  /**
   * Count of entries that were ignored as entries were not found.
   *
   * @generated from field: int64 ignored_count = 5;
   */
  ignoredCount: bigint;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeDocumentsMetadata.
 * Use `create(PurgeDocumentsMetadataSchema)` to create a new message.
 */
export const PurgeDocumentsMetadataSchema: GenMessage<PurgeDocumentsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 6);

/**
 * Request message for
 * [CompletionService.PurgeSuggestionDenyListEntries][google.cloud.discoveryengine.v1.CompletionService.PurgeSuggestionDenyListEntries]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeSuggestionDenyListEntriesRequest
 */
export type PurgeSuggestionDenyListEntriesRequest = Message<"google.cloud.discoveryengine.v1.PurgeSuggestionDenyListEntriesRequest"> & {
  /**
   * Required. The parent data store resource name for which to import denylist
   * entries. Follows pattern projects/*\/locations/*\/collections/*\/dataStores/*.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeSuggestionDenyListEntriesRequest.
 * Use `create(PurgeSuggestionDenyListEntriesRequestSchema)` to create a new message.
 */
export const PurgeSuggestionDenyListEntriesRequestSchema: GenMessage<PurgeSuggestionDenyListEntriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 7);

/**
 * Response message for
 * [CompletionService.PurgeSuggestionDenyListEntries][google.cloud.discoveryengine.v1.CompletionService.PurgeSuggestionDenyListEntries]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeSuggestionDenyListEntriesResponse
 */
export type PurgeSuggestionDenyListEntriesResponse = Message<"google.cloud.discoveryengine.v1.PurgeSuggestionDenyListEntriesResponse"> & {
  /**
   * Number of suggestion deny list entries purged.
   *
   * @generated from field: int64 purge_count = 1;
   */
  purgeCount: bigint;

  /**
   * A sample of errors encountered while processing the request.
   *
   * @generated from field: repeated google.rpc.Status error_samples = 2;
   */
  errorSamples: Status[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeSuggestionDenyListEntriesResponse.
 * Use `create(PurgeSuggestionDenyListEntriesResponseSchema)` to create a new message.
 */
export const PurgeSuggestionDenyListEntriesResponseSchema: GenMessage<PurgeSuggestionDenyListEntriesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 8);

/**
 * Metadata related to the progress of the PurgeSuggestionDenyListEntries
 * operation. This is returned by the google.longrunning.Operation.metadata
 * field.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeSuggestionDenyListEntriesMetadata
 */
export type PurgeSuggestionDenyListEntriesMetadata = Message<"google.cloud.discoveryengine.v1.PurgeSuggestionDenyListEntriesMetadata"> & {
  /**
   * Operation create time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Operation last update time. If the operation is done, this is also the
   * finish time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 2;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeSuggestionDenyListEntriesMetadata.
 * Use `create(PurgeSuggestionDenyListEntriesMetadataSchema)` to create a new message.
 */
export const PurgeSuggestionDenyListEntriesMetadataSchema: GenMessage<PurgeSuggestionDenyListEntriesMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 9);

/**
 * Request message for
 * [CompletionService.PurgeCompletionSuggestions][google.cloud.discoveryengine.v1.CompletionService.PurgeCompletionSuggestions]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeCompletionSuggestionsRequest
 */
export type PurgeCompletionSuggestionsRequest = Message<"google.cloud.discoveryengine.v1.PurgeCompletionSuggestionsRequest"> & {
  /**
   * Required. The parent data store resource name for which to purge completion
   * suggestions. Follows pattern
   * projects/*\/locations/*\/collections/*\/dataStores/*.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeCompletionSuggestionsRequest.
 * Use `create(PurgeCompletionSuggestionsRequestSchema)` to create a new message.
 */
export const PurgeCompletionSuggestionsRequestSchema: GenMessage<PurgeCompletionSuggestionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 10);

/**
 * Response message for
 * [CompletionService.PurgeCompletionSuggestions][google.cloud.discoveryengine.v1.CompletionService.PurgeCompletionSuggestions]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeCompletionSuggestionsResponse
 */
export type PurgeCompletionSuggestionsResponse = Message<"google.cloud.discoveryengine.v1.PurgeCompletionSuggestionsResponse"> & {
  /**
   * Whether the completion suggestions were successfully purged.
   *
   * @generated from field: bool purge_succeeded = 1;
   */
  purgeSucceeded: boolean;

  /**
   * A sample of errors encountered while processing the request.
   *
   * @generated from field: repeated google.rpc.Status error_samples = 2;
   */
  errorSamples: Status[];
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeCompletionSuggestionsResponse.
 * Use `create(PurgeCompletionSuggestionsResponseSchema)` to create a new message.
 */
export const PurgeCompletionSuggestionsResponseSchema: GenMessage<PurgeCompletionSuggestionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 11);

/**
 * Metadata related to the progress of the PurgeCompletionSuggestions
 * operation. This is returned by the google.longrunning.Operation.metadata
 * field.
 *
 * @generated from message google.cloud.discoveryengine.v1.PurgeCompletionSuggestionsMetadata
 */
export type PurgeCompletionSuggestionsMetadata = Message<"google.cloud.discoveryengine.v1.PurgeCompletionSuggestionsMetadata"> & {
  /**
   * Operation create time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Operation last update time. If the operation is done, this is also the
   * finish time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 2;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.discoveryengine.v1.PurgeCompletionSuggestionsMetadata.
 * Use `create(PurgeCompletionSuggestionsMetadataSchema)` to create a new message.
 */
export const PurgeCompletionSuggestionsMetadataSchema: GenMessage<PurgeCompletionSuggestionsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1_purge_config, 12);

