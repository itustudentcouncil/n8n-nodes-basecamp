// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1beta/user_event_service.proto (package google.cloud.discoveryengine.v1beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { HttpBodySchema } from "../../../api/httpbody_pb";
import { file_google_api_httpbody } from "../../../api/httpbody_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ImportUserEventsRequestSchema } from "./import_config_pb";
import { file_google_cloud_discoveryengine_v1beta_import_config } from "./import_config_pb";
import type { PurgeUserEventsRequestSchema } from "./purge_config_pb";
import { file_google_cloud_discoveryengine_v1beta_purge_config } from "./purge_config_pb";
import type { UserEvent, UserEventSchema } from "./user_event_pb";
import { file_google_cloud_discoveryengine_v1beta_user_event } from "./user_event_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1beta/user_event_service.proto.
 */
export const file_google_cloud_discoveryengine_v1beta_user_event_service: GenFile = /*@__PURE__*/
  fileDesc("Cjxnb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYmV0YS91c2VyX2V2ZW50X3NlcnZpY2UucHJvdG8SI2dvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFiZXRhIssBChVXcml0ZVVzZXJFdmVudFJlcXVlc3QSQAoGcGFyZW50GAEgASgJQjDgQQL6QSoKKGRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbS9EYXRhU3RvcmUSTAoKdXNlcl9ldmVudBgCIAEoCzIuLmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFiZXRhLlVzZXJFdmVudEID4EECSACIAQESEwoLd3JpdGVfYXN5bmMYAyABKAhCDQoLX3VzZXJfZXZlbnQiqAEKF0NvbGxlY3RVc2VyRXZlbnRSZXF1ZXN0EkAKBnBhcmVudBgBIAEoCUIw4EEC+kEqCihkaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb20vRGF0YVN0b3JlEhcKCnVzZXJfZXZlbnQYAiABKAlCA+BBAhIQCgN1cmkYAyABKAlIAIgBARIQCgNldHMYBCABKANIAYgBAUIGCgRfdXJpQgYKBF9ldHMy/AwKEFVzZXJFdmVudFNlcnZpY2UShAMKDldyaXRlVXNlckV2ZW50EjouZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuV3JpdGVVc2VyRXZlbnRSZXF1ZXN0Gi4uZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuVXNlckV2ZW50IoUCgtPkkwL+AToKdXNlcl9ldmVudFphOgp1c2VyX2V2ZW50IlMvdjFiZXRhL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jb2xsZWN0aW9ucy8qL2RhdGFTdG9yZXMvKn0vdXNlckV2ZW50czp3cml0ZVpGOgp1c2VyX2V2ZW50IjgvdjFiZXRhL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vdXNlckV2ZW50czp3cml0ZSJFL3YxYmV0YS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovZGF0YVN0b3Jlcy8qfS91c2VyRXZlbnRzOndyaXRlEtACChBDb2xsZWN0VXNlckV2ZW50EjwuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuQ29sbGVjdFVzZXJFdmVudFJlcXVlc3QaFC5nb29nbGUuYXBpLkh0dHBCb2R5IucBgtPkkwLgAVpXElUvdjFiZXRhL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jb2xsZWN0aW9ucy8qL2RhdGFTdG9yZXMvKn0vdXNlckV2ZW50czpjb2xsZWN0WjwSOi92MWJldGEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS91c2VyRXZlbnRzOmNvbGxlY3QSRy92MWJldGEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2RhdGFTdG9yZXMvKn0vdXNlckV2ZW50czpjb2xsZWN0EpgDCg9QdXJnZVVzZXJFdmVudHMSOy5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYmV0YS5QdXJnZVVzZXJFdmVudHNSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKoAspBego7Z29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuUHVyZ2VVc2VyRXZlbnRzUmVzcG9uc2USO2dvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFiZXRhLlB1cmdlVXNlckV2ZW50c01ldGFkYXRhgtPkkwKkAToBKlpYOgEqIlMvdjFiZXRhL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jb2xsZWN0aW9ucy8qL2RhdGFTdG9yZXMvKn0vdXNlckV2ZW50czpwdXJnZSJFL3YxYmV0YS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovZGF0YVN0b3Jlcy8qfS91c2VyRXZlbnRzOnB1cmdlEp4DChBJbXBvcnRVc2VyRXZlbnRzEjwuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuSW1wb3J0VXNlckV2ZW50c1JlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIqwCykF8Cjxnb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYmV0YS5JbXBvcnRVc2VyRXZlbnRzUmVzcG9uc2USPGdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFiZXRhLkltcG9ydFVzZXJFdmVudHNNZXRhZGF0YYLT5JMCpgE6ASpaWToBKiJUL3YxYmV0YS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovY29sbGVjdGlvbnMvKi9kYXRhU3RvcmVzLyp9L3VzZXJFdmVudHM6aW1wb3J0IkYvdjFiZXRhL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9kYXRhU3RvcmVzLyp9L3VzZXJFdmVudHM6aW1wb3J0GlLKQR5kaXNjb3ZlcnllbmdpbmUuZ29vZ2xlYXBpcy5jb23SQS5odHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtQpwCCidjb20uZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGFCFVVzZXJFdmVudFNlcnZpY2VQcm90b1ABWlFjbG91ZC5nb29nbGUuY29tL2dvL2Rpc2NvdmVyeWVuZ2luZS9hcGl2MWJldGEvZGlzY292ZXJ5ZW5naW5lcGI7ZGlzY292ZXJ5ZW5naW5lcGKiAg9ESVNDT1ZFUllFTkdJTkWqAiNHb29nbGUuQ2xvdWQuRGlzY292ZXJ5RW5naW5lLlYxQmV0YcoCI0dvb2dsZVxDbG91ZFxEaXNjb3ZlcnlFbmdpbmVcVjFiZXRh6gImR29vZ2xlOjpDbG91ZDo6RGlzY292ZXJ5RW5naW5lOjpWMWJldGFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_httpbody, file_google_api_resource, file_google_cloud_discoveryengine_v1beta_import_config, file_google_cloud_discoveryengine_v1beta_purge_config, file_google_cloud_discoveryengine_v1beta_user_event, file_google_longrunning_operations]);

/**
 * Request message for WriteUserEvent method.
 *
 * @generated from message google.cloud.discoveryengine.v1beta.WriteUserEventRequest
 */
export type WriteUserEventRequest = Message<"google.cloud.discoveryengine.v1beta.WriteUserEventRequest"> & {
  /**
   * Required. The parent resource name.
   * If the write user event action is applied in
   * [DataStore][google.cloud.discoveryengine.v1beta.DataStore] level, the
   * format is:
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
   * If the write user event action is applied in [Location][] level, for
   * example, the event with
   * [Document][google.cloud.discoveryengine.v1beta.Document] across multiple
   * [DataStore][google.cloud.discoveryengine.v1beta.DataStore], the format is:
   * `projects/{project}/locations/{location}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. User event to write.
   *
   * @generated from field: optional google.cloud.discoveryengine.v1beta.UserEvent user_event = 2;
   */
  userEvent?: UserEvent;

  /**
   * If set to true, the user event is written asynchronously after
   * validation, and the API responds without waiting for the write.
   *
   * @generated from field: bool write_async = 3;
   */
  writeAsync: boolean;
};

/**
 * Describes the message google.cloud.discoveryengine.v1beta.WriteUserEventRequest.
 * Use `create(WriteUserEventRequestSchema)` to create a new message.
 */
export const WriteUserEventRequestSchema: GenMessage<WriteUserEventRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1beta_user_event_service, 0);

/**
 * Request message for CollectUserEvent method.
 *
 * @generated from message google.cloud.discoveryengine.v1beta.CollectUserEventRequest
 */
export type CollectUserEventRequest = Message<"google.cloud.discoveryengine.v1beta.CollectUserEventRequest"> & {
  /**
   * Required. The parent DataStore resource name, such as
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. URL encoded UserEvent proto with a length limit of 2,000,000
   * characters.
   *
   * @generated from field: string user_event = 2;
   */
  userEvent: string;

  /**
   * The URL including cgi-parameters but excluding the hash fragment with a
   * length limit of 5,000 characters. This is often more useful than the
   * referer URL, because many browsers only send the domain for third-party
   * requests.
   *
   * @generated from field: optional string uri = 3;
   */
  uri?: string;

  /**
   * The event timestamp in milliseconds. This prevents browser caching of
   * otherwise identical get requests. The name is abbreviated to reduce the
   * payload bytes.
   *
   * @generated from field: optional int64 ets = 4;
   */
  ets?: bigint;
};

/**
 * Describes the message google.cloud.discoveryengine.v1beta.CollectUserEventRequest.
 * Use `create(CollectUserEventRequestSchema)` to create a new message.
 */
export const CollectUserEventRequestSchema: GenMessage<CollectUserEventRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1beta_user_event_service, 1);

/**
 * Service for ingesting end user actions on a website to Discovery Engine API.
 *
 * @generated from service google.cloud.discoveryengine.v1beta.UserEventService
 */
export const UserEventService: GenService<{
  /**
   * Writes a single user event.
   *
   * @generated from rpc google.cloud.discoveryengine.v1beta.UserEventService.WriteUserEvent
   */
  writeUserEvent: {
    methodKind: "unary";
    input: typeof WriteUserEventRequestSchema;
    output: typeof UserEventSchema;
  },
  /**
   * Writes a single user event from the browser. This uses a GET request to
   * due to browser restriction of POST-ing to a third-party domain.
   *
   * This method is used only by the Discovery Engine API JavaScript pixel and
   * Google Tag Manager. Users should not call this method directly.
   *
   * @generated from rpc google.cloud.discoveryengine.v1beta.UserEventService.CollectUserEvent
   */
  collectUserEvent: {
    methodKind: "unary";
    input: typeof CollectUserEventRequestSchema;
    output: typeof HttpBodySchema;
  },
  /**
   * Deletes permanently all user events specified by the filter provided.
   * Depending on the number of events specified by the filter, this operation
   * could take hours or days to complete. To test a filter, use the list
   * command first.
   *
   * @generated from rpc google.cloud.discoveryengine.v1beta.UserEventService.PurgeUserEvents
   */
  purgeUserEvents: {
    methodKind: "unary";
    input: typeof PurgeUserEventsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Bulk import of user events. Request processing might be
   * synchronous. Events that already exist are skipped.
   * Use this method for backfilling historical user events.
   *
   * Operation.response is of type ImportResponse. Note that it is
   * possible for a subset of the items to be successfully inserted.
   * Operation.metadata is of type ImportMetadata.
   *
   * @generated from rpc google.cloud.discoveryengine.v1beta.UserEventService.ImportUserEvents
   */
  importUserEvents: {
    methodKind: "unary";
    input: typeof ImportUserEventsRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_discoveryengine_v1beta_user_event_service, 0);

