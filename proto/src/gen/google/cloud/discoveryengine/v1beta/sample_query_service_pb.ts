// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/discoveryengine/v1beta/sample_query_service.proto (package google.cloud.discoveryengine.v1beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ImportSampleQueriesRequestSchema } from "./import_config_pb";
import { file_google_cloud_discoveryengine_v1beta_import_config } from "./import_config_pb";
import type { SampleQuery, SampleQuerySchema } from "./sample_query_pb";
import { file_google_cloud_discoveryengine_v1beta_sample_query } from "./sample_query_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/discoveryengine/v1beta/sample_query_service.proto.
 */
export const file_google_cloud_discoveryengine_v1beta_sample_query_service: GenFile = /*@__PURE__*/
  fileDesc("Cj5nb29nbGUvY2xvdWQvZGlzY292ZXJ5ZW5naW5lL3YxYmV0YS9zYW1wbGVfcXVlcnlfc2VydmljZS5wcm90bxIjZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEiWQoVR2V0U2FtcGxlUXVlcnlSZXF1ZXN0EkAKBG5hbWUYASABKAlCMuBBAvpBLAoqZGlzY292ZXJ5ZW5naW5lLmdvb2dsZWFwaXMuY29tL1NhbXBsZVF1ZXJ5IogBChhMaXN0U2FtcGxlUXVlcmllc1JlcXVlc3QSRQoGcGFyZW50GAEgASgJQjXgQQL6QS8KLWRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbS9TYW1wbGVRdWVyeVNldBIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSJ+ChlMaXN0U2FtcGxlUXVlcmllc1Jlc3BvbnNlEkgKDnNhbXBsZV9xdWVyaWVzGAEgAygLMjAuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuU2FtcGxlUXVlcnkSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIswBChhDcmVhdGVTYW1wbGVRdWVyeVJlcXVlc3QSRQoGcGFyZW50GAEgASgJQjXgQQL6QS8KLWRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbS9TYW1wbGVRdWVyeVNldBJLCgxzYW1wbGVfcXVlcnkYAiABKAsyMC5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYmV0YS5TYW1wbGVRdWVyeUID4EECEhwKD3NhbXBsZV9xdWVyeV9pZBgDIAEoCUID4EECIpgBChhVcGRhdGVTYW1wbGVRdWVyeVJlcXVlc3QSSwoMc2FtcGxlX3F1ZXJ5GAEgASgLMjAuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuU2FtcGxlUXVlcnlCA+BBAhIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2siXAoYRGVsZXRlU2FtcGxlUXVlcnlSZXF1ZXN0EkAKBG5hbWUYASABKAlCMuBBAvpBLAoqZGlzY292ZXJ5ZW5naW5lLmdvb2dsZWFwaXMuY29tL1NhbXBsZVF1ZXJ5MusMChJTYW1wbGVRdWVyeVNlcnZpY2US1gEKDkdldFNhbXBsZVF1ZXJ5EjouZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuR2V0U2FtcGxlUXVlcnlSZXF1ZXN0GjAuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuU2FtcGxlUXVlcnkiVtpBBG5hbWWC0+STAkkSRy92MWJldGEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9zYW1wbGVRdWVyeVNldHMvKi9zYW1wbGVRdWVyaWVzLyp9EuwBChFMaXN0U2FtcGxlUXVlcmllcxI9Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFiZXRhLkxpc3RTYW1wbGVRdWVyaWVzUmVxdWVzdBo+Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFiZXRhLkxpc3RTYW1wbGVRdWVyaWVzUmVzcG9uc2UiWNpBBnBhcmVudILT5JMCSRJHL3YxYmV0YS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovc2FtcGxlUXVlcnlTZXRzLyp9L3NhbXBsZVF1ZXJpZXMSigIKEUNyZWF0ZVNhbXBsZVF1ZXJ5Ej0uZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuQ3JlYXRlU2FtcGxlUXVlcnlSZXF1ZXN0GjAuZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuU2FtcGxlUXVlcnkigwHaQSNwYXJlbnQsc2FtcGxlX3F1ZXJ5LHNhbXBsZV9xdWVyeV9pZILT5JMCVzoMc2FtcGxlX3F1ZXJ5IkcvdjFiZXRhL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9zYW1wbGVRdWVyeVNldHMvKn0vc2FtcGxlUXVlcmllcxKMAgoRVXBkYXRlU2FtcGxlUXVlcnkSPS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYmV0YS5VcGRhdGVTYW1wbGVRdWVyeVJlcXVlc3QaMC5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYmV0YS5TYW1wbGVRdWVyeSKFAdpBGHNhbXBsZV9xdWVyeSx1cGRhdGVfbWFza4LT5JMCZDoMc2FtcGxlX3F1ZXJ5MlQvdjFiZXRhL3tzYW1wbGVfcXVlcnkubmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3NhbXBsZVF1ZXJ5U2V0cy8qL3NhbXBsZVF1ZXJpZXMvKn0SwgEKEURlbGV0ZVNhbXBsZVF1ZXJ5Ej0uZ29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuRGVsZXRlU2FtcGxlUXVlcnlSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IlbaQQRuYW1lgtPkkwJJKkcvdjFiZXRhL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovc2FtcGxlUXVlcnlTZXRzLyovc2FtcGxlUXVlcmllcy8qfRLXAgoTSW1wb3J0U2FtcGxlUXVlcmllcxI/Lmdvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFiZXRhLkltcG9ydFNhbXBsZVF1ZXJpZXNSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiLfAcpBggEKP2dvb2dsZS5jbG91ZC5kaXNjb3ZlcnllbmdpbmUudjFiZXRhLkltcG9ydFNhbXBsZVF1ZXJpZXNSZXNwb25zZRI/Z29vZ2xlLmNsb3VkLmRpc2NvdmVyeWVuZ2luZS52MWJldGEuSW1wb3J0U2FtcGxlUXVlcmllc01ldGFkYXRhgtPkkwJTOgEqIk4vdjFiZXRhL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9zYW1wbGVRdWVyeVNldHMvKn0vc2FtcGxlUXVlcmllczppbXBvcnQaUspBHmRpc2NvdmVyeWVuZ2luZS5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CngIKJ2NvbS5nb29nbGUuY2xvdWQuZGlzY292ZXJ5ZW5naW5lLnYxYmV0YUIXU2FtcGxlUXVlcnlTZXJ2aWNlUHJvdG9QAVpRY2xvdWQuZ29vZ2xlLmNvbS9nby9kaXNjb3ZlcnllbmdpbmUvYXBpdjFiZXRhL2Rpc2NvdmVyeWVuZ2luZXBiO2Rpc2NvdmVyeWVuZ2luZXBiogIPRElTQ09WRVJZRU5HSU5FqgIjR29vZ2xlLkNsb3VkLkRpc2NvdmVyeUVuZ2luZS5WMUJldGHKAiNHb29nbGVcQ2xvdWRcRGlzY292ZXJ5RW5naW5lXFYxYmV0YeoCJkdvb2dsZTo6Q2xvdWQ6OkRpc2NvdmVyeUVuZ2luZTo6VjFiZXRhYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_discoveryengine_v1beta_import_config, file_google_cloud_discoveryengine_v1beta_sample_query, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Request message for
 * [SampleQueryService.GetSampleQuery][google.cloud.discoveryengine.v1beta.SampleQueryService.GetSampleQuery]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1beta.GetSampleQueryRequest
 */
export type GetSampleQueryRequest = Message<"google.cloud.discoveryengine.v1beta.GetSampleQueryRequest"> & {
  /**
   * Required. Full resource name of
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery], such as
   * `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`.
   *
   * If the caller does not have permission to access the
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery], regardless
   * of whether or not it exists, a PERMISSION_DENIED error is returned.
   *
   * If the requested
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery] does not
   * exist, a NOT_FOUND error is returned.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1beta.GetSampleQueryRequest.
 * Use `create(GetSampleQueryRequestSchema)` to create a new message.
 */
export const GetSampleQueryRequestSchema: GenMessage<GetSampleQueryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1beta_sample_query_service, 0);

/**
 * Request message for
 * [SampleQueryService.ListSampleQueries][google.cloud.discoveryengine.v1beta.SampleQueryService.ListSampleQueries]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1beta.ListSampleQueriesRequest
 */
export type ListSampleQueriesRequest = Message<"google.cloud.discoveryengine.v1beta.ListSampleQueriesRequest"> & {
  /**
   * Required. The parent sample query set resource name, such as
   * `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`.
   *
   * If the caller does not have permission to list
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s under this
   * sample query set, regardless of whether or not this sample query set
   * exists, a `PERMISSION_DENIED` error is returned.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum number of
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s to return.
   * If unspecified, defaults to 100. The maximum allowed value is 1000. Values
   * above 1000 will be coerced to 1000.
   *
   * If this field is negative, an `INVALID_ARGUMENT` error is returned.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token
   * [ListSampleQueriesResponse.next_page_token][google.cloud.discoveryengine.v1beta.ListSampleQueriesResponse.next_page_token],
   * received from a previous
   * [SampleQueryService.ListSampleQueries][google.cloud.discoveryengine.v1beta.SampleQueryService.ListSampleQueries]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [SampleQueryService.ListSampleQueries][google.cloud.discoveryengine.v1beta.SampleQueryService.ListSampleQueries]
   * must match the call that provided the page token. Otherwise, an
   * `INVALID_ARGUMENT` error is returned.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1beta.ListSampleQueriesRequest.
 * Use `create(ListSampleQueriesRequestSchema)` to create a new message.
 */
export const ListSampleQueriesRequestSchema: GenMessage<ListSampleQueriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1beta_sample_query_service, 1);

/**
 * Response message for
 * [SampleQueryService.ListSampleQueries][google.cloud.discoveryengine.v1beta.SampleQueryService.ListSampleQueries]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1beta.ListSampleQueriesResponse
 */
export type ListSampleQueriesResponse = Message<"google.cloud.discoveryengine.v1beta.ListSampleQueriesResponse"> & {
  /**
   * The [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s.
   *
   * @generated from field: repeated google.cloud.discoveryengine.v1beta.SampleQuery sample_queries = 1;
   */
  sampleQueries: SampleQuery[];

  /**
   * A token that can be sent as
   * [ListSampleQueriesRequest.page_token][google.cloud.discoveryengine.v1beta.ListSampleQueriesRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1beta.ListSampleQueriesResponse.
 * Use `create(ListSampleQueriesResponseSchema)` to create a new message.
 */
export const ListSampleQueriesResponseSchema: GenMessage<ListSampleQueriesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1beta_sample_query_service, 2);

/**
 * Request message for
 * [SampleQueryService.CreateSampleQuery][google.cloud.discoveryengine.v1beta.SampleQueryService.CreateSampleQuery]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1beta.CreateSampleQueryRequest
 */
export type CreateSampleQueryRequest = Message<"google.cloud.discoveryengine.v1beta.CreateSampleQueryRequest"> & {
  /**
   * Required. The parent resource name, such as
   * `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery] to create.
   *
   * @generated from field: google.cloud.discoveryengine.v1beta.SampleQuery sample_query = 2;
   */
  sampleQuery?: SampleQuery;

  /**
   * Required. The ID to use for the
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery], which will
   * become the final component of the
   * [SampleQuery.name][google.cloud.discoveryengine.v1beta.SampleQuery.name].
   *
   * If the caller does not have permission to create the
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery], regardless
   * of whether or not it exists, a `PERMISSION_DENIED` error is returned.
   *
   * This field must be unique among all
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s with the
   * same
   * [parent][google.cloud.discoveryengine.v1beta.CreateSampleQueryRequest.parent].
   * Otherwise, an `ALREADY_EXISTS` error is returned.
   *
   * This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034)
   * standard with a length limit of 63 characters. Otherwise, an
   * `INVALID_ARGUMENT` error is returned.
   *
   * @generated from field: string sample_query_id = 3;
   */
  sampleQueryId: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1beta.CreateSampleQueryRequest.
 * Use `create(CreateSampleQueryRequestSchema)` to create a new message.
 */
export const CreateSampleQueryRequestSchema: GenMessage<CreateSampleQueryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1beta_sample_query_service, 3);

/**
 * Request message for
 * [SampleQueryService.UpdateSampleQuery][google.cloud.discoveryengine.v1beta.SampleQueryService.UpdateSampleQuery]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1beta.UpdateSampleQueryRequest
 */
export type UpdateSampleQueryRequest = Message<"google.cloud.discoveryengine.v1beta.UpdateSampleQueryRequest"> & {
  /**
   * Required. The simple query to update.
   *
   * If the caller does not have permission to update the
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery], regardless
   * of whether or not it exists, a `PERMISSION_DENIED` error is returned.
   *
   * If the [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery] to
   * update does not exist a `NOT_FOUND` error is returned.
   *
   * @generated from field: google.cloud.discoveryengine.v1beta.SampleQuery sample_query = 1;
   */
  sampleQuery?: SampleQuery;

  /**
   * Indicates which fields in the provided imported 'simple query' to update.
   * If not set, will by default update all fields.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.discoveryengine.v1beta.UpdateSampleQueryRequest.
 * Use `create(UpdateSampleQueryRequestSchema)` to create a new message.
 */
export const UpdateSampleQueryRequestSchema: GenMessage<UpdateSampleQueryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1beta_sample_query_service, 4);

/**
 * Request message for
 * [SampleQueryService.DeleteSampleQuery][google.cloud.discoveryengine.v1beta.SampleQueryService.DeleteSampleQuery]
 * method.
 *
 * @generated from message google.cloud.discoveryengine.v1beta.DeleteSampleQueryRequest
 */
export type DeleteSampleQueryRequest = Message<"google.cloud.discoveryengine.v1beta.DeleteSampleQueryRequest"> & {
  /**
   * Required. Full resource name of
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery], such as
   * `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`.
   *
   * If the caller does not have permission to delete the
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery], regardless
   * of whether or not it exists, a `PERMISSION_DENIED` error is returned.
   *
   * If the [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery] to
   * delete does not exist, a `NOT_FOUND` error is returned.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.discoveryengine.v1beta.DeleteSampleQueryRequest.
 * Use `create(DeleteSampleQueryRequestSchema)` to create a new message.
 */
export const DeleteSampleQueryRequestSchema: GenMessage<DeleteSampleQueryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_discoveryengine_v1beta_sample_query_service, 5);

/**
 * Service for managing
 * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s,
 *
 * @generated from service google.cloud.discoveryengine.v1beta.SampleQueryService
 */
export const SampleQueryService: GenService<{
  /**
   * Gets a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
   *
   * @generated from rpc google.cloud.discoveryengine.v1beta.SampleQueryService.GetSampleQuery
   */
  getSampleQuery: {
    methodKind: "unary";
    input: typeof GetSampleQueryRequestSchema;
    output: typeof SampleQuerySchema;
  },
  /**
   * Gets a list of
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s.
   *
   * @generated from rpc google.cloud.discoveryengine.v1beta.SampleQueryService.ListSampleQueries
   */
  listSampleQueries: {
    methodKind: "unary";
    input: typeof ListSampleQueriesRequestSchema;
    output: typeof ListSampleQueriesResponseSchema;
  },
  /**
   * Creates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]
   *
   * @generated from rpc google.cloud.discoveryengine.v1beta.SampleQueryService.CreateSampleQuery
   */
  createSampleQuery: {
    methodKind: "unary";
    input: typeof CreateSampleQueryRequestSchema;
    output: typeof SampleQuerySchema;
  },
  /**
   * Updates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
   *
   * @generated from rpc google.cloud.discoveryengine.v1beta.SampleQueryService.UpdateSampleQuery
   */
  updateSampleQuery: {
    methodKind: "unary";
    input: typeof UpdateSampleQueryRequestSchema;
    output: typeof SampleQuerySchema;
  },
  /**
   * Deletes a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
   *
   * @generated from rpc google.cloud.discoveryengine.v1beta.SampleQueryService.DeleteSampleQuery
   */
  deleteSampleQuery: {
    methodKind: "unary";
    input: typeof DeleteSampleQueryRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Bulk import of multiple
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s. Sample
   * queries that already exist may be deleted.
   *
   * Note: It is possible for a subset of the
   * [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s to be
   * successfully imported.
   *
   * @generated from rpc google.cloud.discoveryengine.v1beta.SampleQueryService.ImportSampleQueries
   */
  importSampleQueries: {
    methodKind: "unary";
    input: typeof ImportSampleQueriesRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_discoveryengine_v1beta_sample_query_service, 0);

