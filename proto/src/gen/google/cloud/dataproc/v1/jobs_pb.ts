// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dataproc/v1/jobs.proto (package google.cloud.dataproc.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dataproc/v1/jobs.proto.
 */
export const file_google_cloud_dataproc_v1_jobs: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * The runtime logging config of the job.
 *
 * @generated from message google.cloud.dataproc.v1.LoggingConfig
 */
export type LoggingConfig = Message<"google.cloud.dataproc.v1.LoggingConfig"> & {
  /**
   * The per-package log levels for the driver. This can include
   * "root" package name to configure rootLogger.
   * Examples:
   * - 'com.google = FATAL'
   * - 'root = INFO'
   * - 'org.apache = DEBUG'
   *
   * @generated from field: map<string, google.cloud.dataproc.v1.LoggingConfig.Level> driver_log_levels = 2;
   */
  driverLogLevels: { [key: string]: LoggingConfig_Level };
};

/**
 * Describes the message google.cloud.dataproc.v1.LoggingConfig.
 * Use `create(LoggingConfigSchema)` to create a new message.
 */
export const LoggingConfigSchema: GenMessage<LoggingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 0);

/**
 * The Log4j level for job execution. When running an
 * [Apache Hive](https://hive.apache.org/) job, Cloud
 * Dataproc configures the Hive client to an equivalent verbosity level.
 *
 * @generated from enum google.cloud.dataproc.v1.LoggingConfig.Level
 */
export enum LoggingConfig_Level {
  /**
   * Level is unspecified. Use default level for log4j.
   *
   * @generated from enum value: LEVEL_UNSPECIFIED = 0;
   */
  LEVEL_UNSPECIFIED = 0,

  /**
   * Use ALL level for log4j.
   *
   * @generated from enum value: ALL = 1;
   */
  ALL = 1,

  /**
   * Use TRACE level for log4j.
   *
   * @generated from enum value: TRACE = 2;
   */
  TRACE = 2,

  /**
   * Use DEBUG level for log4j.
   *
   * @generated from enum value: DEBUG = 3;
   */
  DEBUG = 3,

  /**
   * Use INFO level for log4j.
   *
   * @generated from enum value: INFO = 4;
   */
  INFO = 4,

  /**
   * Use WARN level for log4j.
   *
   * @generated from enum value: WARN = 5;
   */
  WARN = 5,

  /**
   * Use ERROR level for log4j.
   *
   * @generated from enum value: ERROR = 6;
   */
  ERROR = 6,

  /**
   * Use FATAL level for log4j.
   *
   * @generated from enum value: FATAL = 7;
   */
  FATAL = 7,

  /**
   * Turn off log4j.
   *
   * @generated from enum value: OFF = 8;
   */
  OFF = 8,
}

/**
 * Describes the enum google.cloud.dataproc.v1.LoggingConfig.Level.
 */
export const LoggingConfig_LevelSchema: GenEnum<LoggingConfig_Level> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_v1_jobs, 0, 0);

/**
 * A Dataproc job for running
 * [Apache Hadoop
 * MapReduce](https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html)
 * jobs on [Apache Hadoop
 * YARN](https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
 *
 * @generated from message google.cloud.dataproc.v1.HadoopJob
 */
export type HadoopJob = Message<"google.cloud.dataproc.v1.HadoopJob"> & {
  /**
   * Required. Indicates the location of the driver's main class. Specify
   * either the jar file that contains the main class or the main class name.
   * To specify both, add the jar file to `jar_file_uris`, and then specify
   * the main class name in this property.
   *
   * @generated from oneof google.cloud.dataproc.v1.HadoopJob.driver
   */
  driver: {
    /**
     * The HCFS URI of the jar file containing the main class.
     * Examples:
     *     'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar'
     *     'hdfs:/tmp/test-samples/custom-wordcount.jar'
     *     'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
     *
     * @generated from field: string main_jar_file_uri = 1;
     */
    value: string;
    case: "mainJarFileUri";
  } | {
    /**
     * The name of the driver's main class. The jar file containing the class
     * must be in the default CLASSPATH or specified in `jar_file_uris`.
     *
     * @generated from field: string main_class = 2;
     */
    value: string;
    case: "mainClass";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. The arguments to pass to the driver. Do not
   * include arguments, such as `-libjars` or `-Dfoo=bar`, that can be set as
   * job properties, since a collision might occur that causes an incorrect job
   * submission.
   *
   * @generated from field: repeated string args = 3;
   */
  args: string[];

  /**
   * Optional. Jar file URIs to add to the CLASSPATHs of the
   * Hadoop driver and tasks.
   *
   * @generated from field: repeated string jar_file_uris = 4;
   */
  jarFileUris: string[];

  /**
   * Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied
   * to the working directory of Hadoop drivers and distributed tasks. Useful
   * for naively parallel tasks.
   *
   * @generated from field: repeated string file_uris = 5;
   */
  fileUris: string[];

  /**
   * Optional. HCFS URIs of archives to be extracted in the working directory of
   * Hadoop drivers and tasks. Supported file types:
   * .jar, .tar, .tar.gz, .tgz, or .zip.
   *
   * @generated from field: repeated string archive_uris = 6;
   */
  archiveUris: string[];

  /**
   * Optional. A mapping of property names to values, used to configure Hadoop.
   * Properties that conflict with values set by the Dataproc API might be
   * overwritten. Can include properties set in `/etc/hadoop/conf/*-site` and
   * classes in user code.
   *
   * @generated from field: map<string, string> properties = 7;
   */
  properties: { [key: string]: string };

  /**
   * Optional. The runtime log config for job execution.
   *
   * @generated from field: google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
   */
  loggingConfig?: LoggingConfig;
};

/**
 * Describes the message google.cloud.dataproc.v1.HadoopJob.
 * Use `create(HadoopJobSchema)` to create a new message.
 */
export const HadoopJobSchema: GenMessage<HadoopJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 1);

/**
 * A Dataproc job for running [Apache Spark](https://spark.apache.org/)
 * applications on YARN.
 *
 * @generated from message google.cloud.dataproc.v1.SparkJob
 */
export type SparkJob = Message<"google.cloud.dataproc.v1.SparkJob"> & {
  /**
   * Required. The specification of the main method to call to drive the job.
   * Specify either the jar file that contains the main class or the main class
   * name. To pass both a main jar and a main class in that jar, add the jar to
   * [jarFileUris][google.cloud.dataproc.v1.SparkJob.jar_file_uris], and then
   * specify the main class name in
   * [mainClass][google.cloud.dataproc.v1.SparkJob.main_class].
   *
   * @generated from oneof google.cloud.dataproc.v1.SparkJob.driver
   */
  driver: {
    /**
     * The HCFS URI of the jar file that contains the main class.
     *
     * @generated from field: string main_jar_file_uri = 1;
     */
    value: string;
    case: "mainJarFileUri";
  } | {
    /**
     * The name of the driver's main class. The jar file that contains the class
     * must be in the default CLASSPATH or specified in
     * SparkJob.jar_file_uris.
     *
     * @generated from field: string main_class = 2;
     */
    value: string;
    case: "mainClass";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. The arguments to pass to the driver. Do not include arguments,
   * such as `--conf`, that can be set as job properties, since a collision may
   * occur that causes an incorrect job submission.
   *
   * @generated from field: repeated string args = 3;
   */
  args: string[];

  /**
   * Optional. HCFS URIs of jar files to add to the CLASSPATHs of the
   * Spark driver and tasks.
   *
   * @generated from field: repeated string jar_file_uris = 4;
   */
  jarFileUris: string[];

  /**
   * Optional. HCFS URIs of files to be placed in the working directory of
   * each executor. Useful for naively parallel tasks.
   *
   * @generated from field: repeated string file_uris = 5;
   */
  fileUris: string[];

  /**
   * Optional. HCFS URIs of archives to be extracted into the working directory
   * of each executor. Supported file types:
   * .jar, .tar, .tar.gz, .tgz, and .zip.
   *
   * @generated from field: repeated string archive_uris = 6;
   */
  archiveUris: string[];

  /**
   * Optional. A mapping of property names to values, used to configure Spark.
   * Properties that conflict with values set by the Dataproc API might be
   * overwritten. Can include properties set in
   * /etc/spark/conf/spark-defaults.conf and classes in user code.
   *
   * @generated from field: map<string, string> properties = 7;
   */
  properties: { [key: string]: string };

  /**
   * Optional. The runtime log config for job execution.
   *
   * @generated from field: google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
   */
  loggingConfig?: LoggingConfig;
};

/**
 * Describes the message google.cloud.dataproc.v1.SparkJob.
 * Use `create(SparkJobSchema)` to create a new message.
 */
export const SparkJobSchema: GenMessage<SparkJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 2);

/**
 * A Dataproc job for running
 * [Apache
 * PySpark](https://spark.apache.org/docs/0.9.0/python-programming-guide.html)
 * applications on YARN.
 *
 * @generated from message google.cloud.dataproc.v1.PySparkJob
 */
export type PySparkJob = Message<"google.cloud.dataproc.v1.PySparkJob"> & {
  /**
   * Required. The HCFS URI of the main Python file to use as the driver. Must
   * be a .py file.
   *
   * @generated from field: string main_python_file_uri = 1;
   */
  mainPythonFileUri: string;

  /**
   * Optional. The arguments to pass to the driver.  Do not include arguments,
   * such as `--conf`, that can be set as job properties, since a collision may
   * occur that causes an incorrect job submission.
   *
   * @generated from field: repeated string args = 2;
   */
  args: string[];

  /**
   * Optional. HCFS file URIs of Python files to pass to the PySpark
   * framework. Supported file types: .py, .egg, and .zip.
   *
   * @generated from field: repeated string python_file_uris = 3;
   */
  pythonFileUris: string[];

  /**
   * Optional. HCFS URIs of jar files to add to the CLASSPATHs of the
   * Python driver and tasks.
   *
   * @generated from field: repeated string jar_file_uris = 4;
   */
  jarFileUris: string[];

  /**
   * Optional. HCFS URIs of files to be placed in the working directory of
   * each executor. Useful for naively parallel tasks.
   *
   * @generated from field: repeated string file_uris = 5;
   */
  fileUris: string[];

  /**
   * Optional. HCFS URIs of archives to be extracted into the working directory
   * of each executor. Supported file types:
   * .jar, .tar, .tar.gz, .tgz, and .zip.
   *
   * @generated from field: repeated string archive_uris = 6;
   */
  archiveUris: string[];

  /**
   * Optional. A mapping of property names to values, used to configure PySpark.
   * Properties that conflict with values set by the Dataproc API might be
   * overwritten. Can include properties set in
   * /etc/spark/conf/spark-defaults.conf and classes in user code.
   *
   * @generated from field: map<string, string> properties = 7;
   */
  properties: { [key: string]: string };

  /**
   * Optional. The runtime log config for job execution.
   *
   * @generated from field: google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
   */
  loggingConfig?: LoggingConfig;
};

/**
 * Describes the message google.cloud.dataproc.v1.PySparkJob.
 * Use `create(PySparkJobSchema)` to create a new message.
 */
export const PySparkJobSchema: GenMessage<PySparkJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 3);

/**
 * A list of queries to run on a cluster.
 *
 * @generated from message google.cloud.dataproc.v1.QueryList
 */
export type QueryList = Message<"google.cloud.dataproc.v1.QueryList"> & {
  /**
   * Required. The queries to execute. You do not need to end a query expression
   * with a semicolon. Multiple queries can be specified in one
   * string by separating each with a semicolon. Here is an example of a
   * Dataproc API snippet that uses a QueryList to specify a HiveJob:
   *
   *     "hiveJob": {
   *       "queryList": {
   *         "queries": [
   *           "query1",
   *           "query2",
   *           "query3;query4",
   *         ]
   *       }
   *     }
   *
   * @generated from field: repeated string queries = 1;
   */
  queries: string[];
};

/**
 * Describes the message google.cloud.dataproc.v1.QueryList.
 * Use `create(QueryListSchema)` to create a new message.
 */
export const QueryListSchema: GenMessage<QueryList> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 4);

/**
 * A Dataproc job for running [Apache Hive](https://hive.apache.org/)
 * queries on YARN.
 *
 * @generated from message google.cloud.dataproc.v1.HiveJob
 */
export type HiveJob = Message<"google.cloud.dataproc.v1.HiveJob"> & {
  /**
   * Required. The sequence of Hive queries to execute, specified as either
   * an HCFS file URI or a list of queries.
   *
   * @generated from oneof google.cloud.dataproc.v1.HiveJob.queries
   */
  queries: {
    /**
     * The HCFS URI of the script that contains Hive queries.
     *
     * @generated from field: string query_file_uri = 1;
     */
    value: string;
    case: "queryFileUri";
  } | {
    /**
     * A list of queries.
     *
     * @generated from field: google.cloud.dataproc.v1.QueryList query_list = 2;
     */
    value: QueryList;
    case: "queryList";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. Whether to continue executing queries if a query fails.
   * The default value is `false`. Setting to `true` can be useful when
   * executing independent parallel queries.
   *
   * @generated from field: bool continue_on_failure = 3;
   */
  continueOnFailure: boolean;

  /**
   * Optional. Mapping of query variable names to values (equivalent to the
   * Hive command: `SET name="value";`).
   *
   * @generated from field: map<string, string> script_variables = 4;
   */
  scriptVariables: { [key: string]: string };

  /**
   * Optional. A mapping of property names and values, used to configure Hive.
   * Properties that conflict with values set by the Dataproc API might be
   * overwritten. Can include properties set in `/etc/hadoop/conf/*-site.xml`,
   * /etc/hive/conf/hive-site.xml, and classes in user code.
   *
   * @generated from field: map<string, string> properties = 5;
   */
  properties: { [key: string]: string };

  /**
   * Optional. HCFS URIs of jar files to add to the CLASSPATH of the
   * Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes
   * and UDFs.
   *
   * @generated from field: repeated string jar_file_uris = 6;
   */
  jarFileUris: string[];
};

/**
 * Describes the message google.cloud.dataproc.v1.HiveJob.
 * Use `create(HiveJobSchema)` to create a new message.
 */
export const HiveJobSchema: GenMessage<HiveJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 5);

/**
 * A Dataproc job for running [Apache Spark
 * SQL](https://spark.apache.org/sql/) queries.
 *
 * @generated from message google.cloud.dataproc.v1.SparkSqlJob
 */
export type SparkSqlJob = Message<"google.cloud.dataproc.v1.SparkSqlJob"> & {
  /**
   * Required. The sequence of Spark SQL queries to execute, specified as
   * either an HCFS file URI or as a list of queries.
   *
   * @generated from oneof google.cloud.dataproc.v1.SparkSqlJob.queries
   */
  queries: {
    /**
     * The HCFS URI of the script that contains SQL queries.
     *
     * @generated from field: string query_file_uri = 1;
     */
    value: string;
    case: "queryFileUri";
  } | {
    /**
     * A list of queries.
     *
     * @generated from field: google.cloud.dataproc.v1.QueryList query_list = 2;
     */
    value: QueryList;
    case: "queryList";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. Mapping of query variable names to values (equivalent to the
   * Spark SQL command: SET `name="value";`).
   *
   * @generated from field: map<string, string> script_variables = 3;
   */
  scriptVariables: { [key: string]: string };

  /**
   * Optional. A mapping of property names to values, used to configure
   * Spark SQL's SparkConf. Properties that conflict with values set by the
   * Dataproc API might be overwritten.
   *
   * @generated from field: map<string, string> properties = 4;
   */
  properties: { [key: string]: string };

  /**
   * Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
   *
   * @generated from field: repeated string jar_file_uris = 56;
   */
  jarFileUris: string[];

  /**
   * Optional. The runtime log config for job execution.
   *
   * @generated from field: google.cloud.dataproc.v1.LoggingConfig logging_config = 6;
   */
  loggingConfig?: LoggingConfig;
};

/**
 * Describes the message google.cloud.dataproc.v1.SparkSqlJob.
 * Use `create(SparkSqlJobSchema)` to create a new message.
 */
export const SparkSqlJobSchema: GenMessage<SparkSqlJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 6);

/**
 * A Dataproc job for running [Apache Pig](https://pig.apache.org/)
 * queries on YARN.
 *
 * @generated from message google.cloud.dataproc.v1.PigJob
 */
export type PigJob = Message<"google.cloud.dataproc.v1.PigJob"> & {
  /**
   * Required. The sequence of Pig queries to execute, specified as an HCFS
   * file URI or a list of queries.
   *
   * @generated from oneof google.cloud.dataproc.v1.PigJob.queries
   */
  queries: {
    /**
     * The HCFS URI of the script that contains the Pig queries.
     *
     * @generated from field: string query_file_uri = 1;
     */
    value: string;
    case: "queryFileUri";
  } | {
    /**
     * A list of queries.
     *
     * @generated from field: google.cloud.dataproc.v1.QueryList query_list = 2;
     */
    value: QueryList;
    case: "queryList";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. Whether to continue executing queries if a query fails.
   * The default value is `false`. Setting to `true` can be useful when
   * executing independent parallel queries.
   *
   * @generated from field: bool continue_on_failure = 3;
   */
  continueOnFailure: boolean;

  /**
   * Optional. Mapping of query variable names to values (equivalent to the Pig
   * command: `name=[value]`).
   *
   * @generated from field: map<string, string> script_variables = 4;
   */
  scriptVariables: { [key: string]: string };

  /**
   * Optional. A mapping of property names to values, used to configure Pig.
   * Properties that conflict with values set by the Dataproc API might be
   * overwritten. Can include properties set in `/etc/hadoop/conf/*-site.xml`,
   * /etc/pig/conf/pig.properties, and classes in user code.
   *
   * @generated from field: map<string, string> properties = 5;
   */
  properties: { [key: string]: string };

  /**
   * Optional. HCFS URIs of jar files to add to the CLASSPATH of
   * the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
   *
   * @generated from field: repeated string jar_file_uris = 6;
   */
  jarFileUris: string[];

  /**
   * Optional. The runtime log config for job execution.
   *
   * @generated from field: google.cloud.dataproc.v1.LoggingConfig logging_config = 7;
   */
  loggingConfig?: LoggingConfig;
};

/**
 * Describes the message google.cloud.dataproc.v1.PigJob.
 * Use `create(PigJobSchema)` to create a new message.
 */
export const PigJobSchema: GenMessage<PigJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 7);

/**
 * A Dataproc job for running
 * [Apache SparkR](https://spark.apache.org/docs/latest/sparkr.html)
 * applications on YARN.
 *
 * @generated from message google.cloud.dataproc.v1.SparkRJob
 */
export type SparkRJob = Message<"google.cloud.dataproc.v1.SparkRJob"> & {
  /**
   * Required. The HCFS URI of the main R file to use as the driver.
   * Must be a .R file.
   *
   * @generated from field: string main_r_file_uri = 1;
   */
  mainRFileUri: string;

  /**
   * Optional. The arguments to pass to the driver.  Do not include arguments,
   * such as `--conf`, that can be set as job properties, since a collision may
   * occur that causes an incorrect job submission.
   *
   * @generated from field: repeated string args = 2;
   */
  args: string[];

  /**
   * Optional. HCFS URIs of files to be placed in the working directory of
   * each executor. Useful for naively parallel tasks.
   *
   * @generated from field: repeated string file_uris = 3;
   */
  fileUris: string[];

  /**
   * Optional. HCFS URIs of archives to be extracted into the working directory
   * of each executor. Supported file types:
   * .jar, .tar, .tar.gz, .tgz, and .zip.
   *
   * @generated from field: repeated string archive_uris = 4;
   */
  archiveUris: string[];

  /**
   * Optional. A mapping of property names to values, used to configure SparkR.
   * Properties that conflict with values set by the Dataproc API might be
   * overwritten. Can include properties set in
   * /etc/spark/conf/spark-defaults.conf and classes in user code.
   *
   * @generated from field: map<string, string> properties = 5;
   */
  properties: { [key: string]: string };

  /**
   * Optional. The runtime log config for job execution.
   *
   * @generated from field: google.cloud.dataproc.v1.LoggingConfig logging_config = 6;
   */
  loggingConfig?: LoggingConfig;
};

/**
 * Describes the message google.cloud.dataproc.v1.SparkRJob.
 * Use `create(SparkRJobSchema)` to create a new message.
 */
export const SparkRJobSchema: GenMessage<SparkRJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 8);

/**
 * A Dataproc job for running [Presto](https://prestosql.io/) queries.
 * **IMPORTANT**: The [Dataproc Presto Optional
 * Component](https://cloud.google.com/dataproc/docs/concepts/components/presto)
 * must be enabled when the cluster is created to submit a Presto job to the
 * cluster.
 *
 * @generated from message google.cloud.dataproc.v1.PrestoJob
 */
export type PrestoJob = Message<"google.cloud.dataproc.v1.PrestoJob"> & {
  /**
   * Required. The sequence of Presto queries to execute, specified as
   * either an HCFS file URI or as a list of queries.
   *
   * @generated from oneof google.cloud.dataproc.v1.PrestoJob.queries
   */
  queries: {
    /**
     * The HCFS URI of the script that contains SQL queries.
     *
     * @generated from field: string query_file_uri = 1;
     */
    value: string;
    case: "queryFileUri";
  } | {
    /**
     * A list of queries.
     *
     * @generated from field: google.cloud.dataproc.v1.QueryList query_list = 2;
     */
    value: QueryList;
    case: "queryList";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. Whether to continue executing queries if a query fails.
   * The default value is `false`. Setting to `true` can be useful when
   * executing independent parallel queries.
   *
   * @generated from field: bool continue_on_failure = 3;
   */
  continueOnFailure: boolean;

  /**
   * Optional. The format in which query output will be displayed. See the
   * Presto documentation for supported output formats
   *
   * @generated from field: string output_format = 4;
   */
  outputFormat: string;

  /**
   * Optional. Presto client tags to attach to this query
   *
   * @generated from field: repeated string client_tags = 5;
   */
  clientTags: string[];

  /**
   * Optional. A mapping of property names to values. Used to set Presto
   * [session properties](https://prestodb.io/docs/current/sql/set-session.html)
   * Equivalent to using the --session flag in the Presto CLI
   *
   * @generated from field: map<string, string> properties = 6;
   */
  properties: { [key: string]: string };

  /**
   * Optional. The runtime log config for job execution.
   *
   * @generated from field: google.cloud.dataproc.v1.LoggingConfig logging_config = 7;
   */
  loggingConfig?: LoggingConfig;
};

/**
 * Describes the message google.cloud.dataproc.v1.PrestoJob.
 * Use `create(PrestoJobSchema)` to create a new message.
 */
export const PrestoJobSchema: GenMessage<PrestoJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 9);

/**
 * A Dataproc job for running [Trino](https://trino.io/) queries.
 * **IMPORTANT**: The [Dataproc Trino Optional
 * Component](https://cloud.google.com/dataproc/docs/concepts/components/trino)
 * must be enabled when the cluster is created to submit a Trino job to the
 * cluster.
 *
 * @generated from message google.cloud.dataproc.v1.TrinoJob
 */
export type TrinoJob = Message<"google.cloud.dataproc.v1.TrinoJob"> & {
  /**
   * Required. The sequence of Trino queries to execute, specified as
   * either an HCFS file URI or as a list of queries.
   *
   * @generated from oneof google.cloud.dataproc.v1.TrinoJob.queries
   */
  queries: {
    /**
     * The HCFS URI of the script that contains SQL queries.
     *
     * @generated from field: string query_file_uri = 1;
     */
    value: string;
    case: "queryFileUri";
  } | {
    /**
     * A list of queries.
     *
     * @generated from field: google.cloud.dataproc.v1.QueryList query_list = 2;
     */
    value: QueryList;
    case: "queryList";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. Whether to continue executing queries if a query fails.
   * The default value is `false`. Setting to `true` can be useful when
   * executing independent parallel queries.
   *
   * @generated from field: bool continue_on_failure = 3;
   */
  continueOnFailure: boolean;

  /**
   * Optional. The format in which query output will be displayed. See the
   * Trino documentation for supported output formats
   *
   * @generated from field: string output_format = 4;
   */
  outputFormat: string;

  /**
   * Optional. Trino client tags to attach to this query
   *
   * @generated from field: repeated string client_tags = 5;
   */
  clientTags: string[];

  /**
   * Optional. A mapping of property names to values. Used to set Trino
   * [session properties](https://trino.io/docs/current/sql/set-session.html)
   * Equivalent to using the --session flag in the Trino CLI
   *
   * @generated from field: map<string, string> properties = 6;
   */
  properties: { [key: string]: string };

  /**
   * Optional. The runtime log config for job execution.
   *
   * @generated from field: google.cloud.dataproc.v1.LoggingConfig logging_config = 7;
   */
  loggingConfig?: LoggingConfig;
};

/**
 * Describes the message google.cloud.dataproc.v1.TrinoJob.
 * Use `create(TrinoJobSchema)` to create a new message.
 */
export const TrinoJobSchema: GenMessage<TrinoJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 10);

/**
 * A Dataproc job for running Apache Flink applications on YARN.
 *
 * @generated from message google.cloud.dataproc.v1.FlinkJob
 */
export type FlinkJob = Message<"google.cloud.dataproc.v1.FlinkJob"> & {
  /**
   * Required. The specification of the main method to call to drive the job.
   * Specify either the jar file that contains the main class or the main class
   * name. To pass both a main jar and a main class in the jar, add the jar to
   * [jarFileUris][google.cloud.dataproc.v1.FlinkJob.jar_file_uris], and then
   * specify the main class name in
   * [mainClass][google.cloud.dataproc.v1.FlinkJob.main_class].
   *
   * @generated from oneof google.cloud.dataproc.v1.FlinkJob.driver
   */
  driver: {
    /**
     * The HCFS URI of the jar file that contains the main class.
     *
     * @generated from field: string main_jar_file_uri = 1;
     */
    value: string;
    case: "mainJarFileUri";
  } | {
    /**
     * The name of the driver's main class. The jar file that contains the class
     * must be in the default CLASSPATH or specified in
     * [jarFileUris][google.cloud.dataproc.v1.FlinkJob.jar_file_uris].
     *
     * @generated from field: string main_class = 2;
     */
    value: string;
    case: "mainClass";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. The arguments to pass to the driver. Do not include arguments,
   * such as `--conf`, that can be set as job properties, since a collision
   * might occur that causes an incorrect job submission.
   *
   * @generated from field: repeated string args = 3;
   */
  args: string[];

  /**
   * Optional. HCFS URIs of jar files to add to the CLASSPATHs of the
   * Flink driver and tasks.
   *
   * @generated from field: repeated string jar_file_uris = 4;
   */
  jarFileUris: string[];

  /**
   * Optional. HCFS URI of the savepoint, which contains the last saved progress
   * for starting the current job.
   *
   * @generated from field: string savepoint_uri = 9;
   */
  savepointUri: string;

  /**
   * Optional. A mapping of property names to values, used to configure Flink.
   * Properties that conflict with values set by the Dataproc API might be
   * overwritten. Can include properties set in
   * `/etc/flink/conf/flink-defaults.conf` and classes in user code.
   *
   * @generated from field: map<string, string> properties = 7;
   */
  properties: { [key: string]: string };

  /**
   * Optional. The runtime log config for job execution.
   *
   * @generated from field: google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
   */
  loggingConfig?: LoggingConfig;
};

/**
 * Describes the message google.cloud.dataproc.v1.FlinkJob.
 * Use `create(FlinkJobSchema)` to create a new message.
 */
export const FlinkJobSchema: GenMessage<FlinkJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 11);

/**
 * Dataproc job config.
 *
 * @generated from message google.cloud.dataproc.v1.JobPlacement
 */
export type JobPlacement = Message<"google.cloud.dataproc.v1.JobPlacement"> & {
  /**
   * Required. The name of the cluster where the job will be submitted.
   *
   * @generated from field: string cluster_name = 1;
   */
  clusterName: string;

  /**
   * Output only. A cluster UUID generated by the Dataproc service when
   * the job is submitted.
   *
   * @generated from field: string cluster_uuid = 2;
   */
  clusterUuid: string;

  /**
   * Optional. Cluster labels to identify a cluster where the job will be
   * submitted.
   *
   * @generated from field: map<string, string> cluster_labels = 3;
   */
  clusterLabels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.dataproc.v1.JobPlacement.
 * Use `create(JobPlacementSchema)` to create a new message.
 */
export const JobPlacementSchema: GenMessage<JobPlacement> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 12);

/**
 * Dataproc job status.
 *
 * @generated from message google.cloud.dataproc.v1.JobStatus
 */
export type JobStatus = Message<"google.cloud.dataproc.v1.JobStatus"> & {
  /**
   * Output only. A state message specifying the overall job state.
   *
   * @generated from field: google.cloud.dataproc.v1.JobStatus.State state = 1;
   */
  state: JobStatus_State;

  /**
   * Optional. Output only. Job state details, such as an error
   * description if the state is `ERROR`.
   *
   * @generated from field: string details = 2;
   */
  details: string;

  /**
   * Output only. The time when this state was entered.
   *
   * @generated from field: google.protobuf.Timestamp state_start_time = 6;
   */
  stateStartTime?: Timestamp;

  /**
   * Output only. Additional state information, which includes
   * status reported by the agent.
   *
   * @generated from field: google.cloud.dataproc.v1.JobStatus.Substate substate = 7;
   */
  substate: JobStatus_Substate;
};

/**
 * Describes the message google.cloud.dataproc.v1.JobStatus.
 * Use `create(JobStatusSchema)` to create a new message.
 */
export const JobStatusSchema: GenMessage<JobStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 13);

/**
 * The job state.
 *
 * @generated from enum google.cloud.dataproc.v1.JobStatus.State
 */
export enum JobStatus_State {
  /**
   * The job state is unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The job is pending; it has been submitted, but is not yet running.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * Job has been received by the service and completed initial setup;
   * it will soon be submitted to the cluster.
   *
   * @generated from enum value: SETUP_DONE = 8;
   */
  SETUP_DONE = 8,

  /**
   * The job is running on the cluster.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * A CancelJob request has been received, but is pending.
   *
   * @generated from enum value: CANCEL_PENDING = 3;
   */
  CANCEL_PENDING = 3,

  /**
   * Transient in-flight resources have been canceled, and the request to
   * cancel the running job has been issued to the cluster.
   *
   * @generated from enum value: CANCEL_STARTED = 7;
   */
  CANCEL_STARTED = 7,

  /**
   * The job cancellation was successful.
   *
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,

  /**
   * The job has completed successfully.
   *
   * @generated from enum value: DONE = 5;
   */
  DONE = 5,

  /**
   * The job has completed, but encountered an error.
   *
   * @generated from enum value: ERROR = 6;
   */
  ERROR = 6,

  /**
   * Job attempt has failed. The detail field contains failure details for
   * this attempt.
   *
   * Applies to restartable jobs only.
   *
   * @generated from enum value: ATTEMPT_FAILURE = 9;
   */
  ATTEMPT_FAILURE = 9,
}

/**
 * Describes the enum google.cloud.dataproc.v1.JobStatus.State.
 */
export const JobStatus_StateSchema: GenEnum<JobStatus_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_v1_jobs, 13, 0);

/**
 * The job substate.
 *
 * @generated from enum google.cloud.dataproc.v1.JobStatus.Substate
 */
export enum JobStatus_Substate {
  /**
   * The job substate is unknown.
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The Job is submitted to the agent.
   *
   * Applies to RUNNING state.
   *
   * @generated from enum value: SUBMITTED = 1;
   */
  SUBMITTED = 1,

  /**
   * The Job has been received and is awaiting execution (it might be waiting
   * for a condition to be met). See the "details" field for the reason for
   * the delay.
   *
   * Applies to RUNNING state.
   *
   * @generated from enum value: QUEUED = 2;
   */
  QUEUED = 2,

  /**
   * The agent-reported status is out of date, which can be caused by a
   * loss of communication between the agent and Dataproc. If the
   * agent does not send a timely update, the job will fail.
   *
   * Applies to RUNNING state.
   *
   * @generated from enum value: STALE_STATUS = 3;
   */
  STALE_STATUS = 3,
}

/**
 * Describes the enum google.cloud.dataproc.v1.JobStatus.Substate.
 */
export const JobStatus_SubstateSchema: GenEnum<JobStatus_Substate> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_v1_jobs, 13, 1);

/**
 * Encapsulates the full scoping used to reference a job.
 *
 * @generated from message google.cloud.dataproc.v1.JobReference
 */
export type JobReference = Message<"google.cloud.dataproc.v1.JobReference"> & {
  /**
   * Optional. The ID of the Google Cloud Platform project that the job belongs
   * to. If specified, must match the request project ID.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Optional. The job ID, which must be unique within the project.
   *
   * The ID must contain only letters (a-z, A-Z), numbers (0-9),
   * underscores (_), or hyphens (-). The maximum length is 100 characters.
   *
   * If not specified by the caller, the job ID will be provided by the server.
   *
   * @generated from field: string job_id = 2;
   */
  jobId: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.JobReference.
 * Use `create(JobReferenceSchema)` to create a new message.
 */
export const JobReferenceSchema: GenMessage<JobReference> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 14);

/**
 * A YARN application created by a job. Application information is a subset of
 * <code>org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto</code>.
 *
 * **Beta Feature**: This report is available for testing purposes only. It may
 * be changed before final release.
 *
 * @generated from message google.cloud.dataproc.v1.YarnApplication
 */
export type YarnApplication = Message<"google.cloud.dataproc.v1.YarnApplication"> & {
  /**
   * Required. The application name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The application state.
   *
   * @generated from field: google.cloud.dataproc.v1.YarnApplication.State state = 2;
   */
  state: YarnApplication_State;

  /**
   * Required. The numerical progress of the application, from 1 to 100.
   *
   * @generated from field: float progress = 3;
   */
  progress: number;

  /**
   * Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or
   * TimelineServer that provides application-specific information. The URL uses
   * the internal hostname, and requires a proxy server for resolution and,
   * possibly, access.
   *
   * @generated from field: string tracking_url = 4;
   */
  trackingUrl: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.YarnApplication.
 * Use `create(YarnApplicationSchema)` to create a new message.
 */
export const YarnApplicationSchema: GenMessage<YarnApplication> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 15);

/**
 * The application state, corresponding to
 * <code>YarnProtos.YarnApplicationStateProto</code>.
 *
 * @generated from enum google.cloud.dataproc.v1.YarnApplication.State
 */
export enum YarnApplication_State {
  /**
   * Status is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Status is NEW.
   *
   * @generated from enum value: NEW = 1;
   */
  NEW = 1,

  /**
   * Status is NEW_SAVING.
   *
   * @generated from enum value: NEW_SAVING = 2;
   */
  NEW_SAVING = 2,

  /**
   * Status is SUBMITTED.
   *
   * @generated from enum value: SUBMITTED = 3;
   */
  SUBMITTED = 3,

  /**
   * Status is ACCEPTED.
   *
   * @generated from enum value: ACCEPTED = 4;
   */
  ACCEPTED = 4,

  /**
   * Status is RUNNING.
   *
   * @generated from enum value: RUNNING = 5;
   */
  RUNNING = 5,

  /**
   * Status is FINISHED.
   *
   * @generated from enum value: FINISHED = 6;
   */
  FINISHED = 6,

  /**
   * Status is FAILED.
   *
   * @generated from enum value: FAILED = 7;
   */
  FAILED = 7,

  /**
   * Status is KILLED.
   *
   * @generated from enum value: KILLED = 8;
   */
  KILLED = 8,
}

/**
 * Describes the enum google.cloud.dataproc.v1.YarnApplication.State.
 */
export const YarnApplication_StateSchema: GenEnum<YarnApplication_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_v1_jobs, 15, 0);

/**
 * A Dataproc job resource.
 *
 * @generated from message google.cloud.dataproc.v1.Job
 */
export type Job = Message<"google.cloud.dataproc.v1.Job"> & {
  /**
   * Optional. The fully qualified reference to the job, which can be used to
   * obtain the equivalent REST path of the job resource. If this property
   * is not specified when a job is created, the server generates a
   * <code>job_id</code>.
   *
   * @generated from field: google.cloud.dataproc.v1.JobReference reference = 1;
   */
  reference?: JobReference;

  /**
   * Required. Job information, including how, when, and where to
   * run the job.
   *
   * @generated from field: google.cloud.dataproc.v1.JobPlacement placement = 2;
   */
  placement?: JobPlacement;

  /**
   * Required. The application/framework-specific portion of the job.
   *
   * @generated from oneof google.cloud.dataproc.v1.Job.type_job
   */
  typeJob: {
    /**
     * Optional. Job is a Hadoop job.
     *
     * @generated from field: google.cloud.dataproc.v1.HadoopJob hadoop_job = 3;
     */
    value: HadoopJob;
    case: "hadoopJob";
  } | {
    /**
     * Optional. Job is a Spark job.
     *
     * @generated from field: google.cloud.dataproc.v1.SparkJob spark_job = 4;
     */
    value: SparkJob;
    case: "sparkJob";
  } | {
    /**
     * Optional. Job is a PySpark job.
     *
     * @generated from field: google.cloud.dataproc.v1.PySparkJob pyspark_job = 5;
     */
    value: PySparkJob;
    case: "pysparkJob";
  } | {
    /**
     * Optional. Job is a Hive job.
     *
     * @generated from field: google.cloud.dataproc.v1.HiveJob hive_job = 6;
     */
    value: HiveJob;
    case: "hiveJob";
  } | {
    /**
     * Optional. Job is a Pig job.
     *
     * @generated from field: google.cloud.dataproc.v1.PigJob pig_job = 7;
     */
    value: PigJob;
    case: "pigJob";
  } | {
    /**
     * Optional. Job is a SparkR job.
     *
     * @generated from field: google.cloud.dataproc.v1.SparkRJob spark_r_job = 21;
     */
    value: SparkRJob;
    case: "sparkRJob";
  } | {
    /**
     * Optional. Job is a SparkSql job.
     *
     * @generated from field: google.cloud.dataproc.v1.SparkSqlJob spark_sql_job = 12;
     */
    value: SparkSqlJob;
    case: "sparkSqlJob";
  } | {
    /**
     * Optional. Job is a Presto job.
     *
     * @generated from field: google.cloud.dataproc.v1.PrestoJob presto_job = 23;
     */
    value: PrestoJob;
    case: "prestoJob";
  } | {
    /**
     * Optional. Job is a Trino job.
     *
     * @generated from field: google.cloud.dataproc.v1.TrinoJob trino_job = 28;
     */
    value: TrinoJob;
    case: "trinoJob";
  } | {
    /**
     * Optional. Job is a Flink job.
     *
     * @generated from field: google.cloud.dataproc.v1.FlinkJob flink_job = 29;
     */
    value: FlinkJob;
    case: "flinkJob";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The job status. Additional application-specific
   * status information might be contained in the <code>type_job</code>
   * and <code>yarn_applications</code> fields.
   *
   * @generated from field: google.cloud.dataproc.v1.JobStatus status = 8;
   */
  status?: JobStatus;

  /**
   * Output only. The previous job status.
   *
   * @generated from field: repeated google.cloud.dataproc.v1.JobStatus status_history = 13;
   */
  statusHistory: JobStatus[];

  /**
   * Output only. The collection of YARN applications spun up by this job.
   *
   * **Beta** Feature: This report is available for testing purposes only. It
   * might be changed before final release.
   *
   * @generated from field: repeated google.cloud.dataproc.v1.YarnApplication yarn_applications = 9;
   */
  yarnApplications: YarnApplication[];

  /**
   * Output only. A URI pointing to the location of the stdout of the job's
   * driver program.
   *
   * @generated from field: string driver_output_resource_uri = 17;
   */
  driverOutputResourceUri: string;

  /**
   * Output only. If present, the location of miscellaneous control files
   * which can be used as part of job setup and handling. If not present,
   * control files might be placed in the same location as `driver_output_uri`.
   *
   * @generated from field: string driver_control_files_uri = 15;
   */
  driverControlFilesUri: string;

  /**
   * Optional. The labels to associate with this job.
   * Label **keys** must contain 1 to 63 characters, and must conform to
   * [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
   * Label **values** can be empty, but, if present, must contain 1 to 63
   * characters, and must conform to [RFC
   * 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be
   * associated with a job.
   *
   * @generated from field: map<string, string> labels = 18;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Job scheduling configuration.
   *
   * @generated from field: google.cloud.dataproc.v1.JobScheduling scheduling = 20;
   */
  scheduling?: JobScheduling;

  /**
   * Output only. A UUID that uniquely identifies a job within the project
   * over time. This is in contrast to a user-settable reference.job_id that
   * might be reused over time.
   *
   * @generated from field: string job_uuid = 22;
   */
  jobUuid: string;

  /**
   * Output only. Indicates whether the job is completed. If the value is
   * `false`, the job is still in progress. If `true`, the job is completed, and
   * `status.state` field will indicate if it was successful, failed,
   * or cancelled.
   *
   * @generated from field: bool done = 24;
   */
  done: boolean;

  /**
   * Optional. Driver scheduling configuration.
   *
   * @generated from field: google.cloud.dataproc.v1.DriverSchedulingConfig driver_scheduling_config = 27;
   */
  driverSchedulingConfig?: DriverSchedulingConfig;
};

/**
 * Describes the message google.cloud.dataproc.v1.Job.
 * Use `create(JobSchema)` to create a new message.
 */
export const JobSchema: GenMessage<Job> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 16);

/**
 * Driver scheduling configuration.
 *
 * @generated from message google.cloud.dataproc.v1.DriverSchedulingConfig
 */
export type DriverSchedulingConfig = Message<"google.cloud.dataproc.v1.DriverSchedulingConfig"> & {
  /**
   * Required. The amount of memory in MB the driver is requesting.
   *
   * @generated from field: int32 memory_mb = 1;
   */
  memoryMb: number;

  /**
   * Required. The number of vCPUs the driver is requesting.
   *
   * @generated from field: int32 vcores = 2;
   */
  vcores: number;
};

/**
 * Describes the message google.cloud.dataproc.v1.DriverSchedulingConfig.
 * Use `create(DriverSchedulingConfigSchema)` to create a new message.
 */
export const DriverSchedulingConfigSchema: GenMessage<DriverSchedulingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 17);

/**
 * Job scheduling options.
 *
 * @generated from message google.cloud.dataproc.v1.JobScheduling
 */
export type JobScheduling = Message<"google.cloud.dataproc.v1.JobScheduling"> & {
  /**
   * Optional. Maximum number of times per hour a driver can be restarted as
   * a result of driver exiting with non-zero code before job is
   * reported failed.
   *
   * A job might be reported as thrashing if the driver exits with a non-zero
   * code four times within a 10-minute window.
   *
   * Maximum value is 10.
   *
   * **Note:** This restartable job option is not supported in Dataproc
   * [workflow templates]
   * (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
   *
   * @generated from field: int32 max_failures_per_hour = 1;
   */
  maxFailuresPerHour: number;

  /**
   * Optional. Maximum total number of times a driver can be restarted as a
   * result of the driver exiting with a non-zero code. After the maximum number
   * is reached, the job will be reported as failed.
   *
   * Maximum value is 240.
   *
   * **Note:** Currently, this restartable job option is
   * not supported in Dataproc
   * [workflow
   * templates](https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
   *
   * @generated from field: int32 max_failures_total = 2;
   */
  maxFailuresTotal: number;
};

/**
 * Describes the message google.cloud.dataproc.v1.JobScheduling.
 * Use `create(JobSchedulingSchema)` to create a new message.
 */
export const JobSchedulingSchema: GenMessage<JobScheduling> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 18);

/**
 * A request to submit a job.
 *
 * @generated from message google.cloud.dataproc.v1.SubmitJobRequest
 */
export type SubmitJobRequest = Message<"google.cloud.dataproc.v1.SubmitJobRequest"> & {
  /**
   * Required. The ID of the Google Cloud Platform project that the job
   * belongs to.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. The Dataproc region in which to handle the request.
   *
   * @generated from field: string region = 3;
   */
  region: string;

  /**
   * Required. The job resource.
   *
   * @generated from field: google.cloud.dataproc.v1.Job job = 2;
   */
  job?: Job;

  /**
   * Optional. A unique id used to identify the request. If the server
   * receives two
   * [SubmitJobRequest](https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.SubmitJobRequest)s
   * with the same id, then the second request will be ignored and the
   * first [Job][google.cloud.dataproc.v1.Job] created and stored in the backend
   * is returned.
   *
   * It is recommended to always set this value to a
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
   *
   * The id must contain only letters (a-z, A-Z), numbers (0-9),
   * underscores (_), and hyphens (-). The maximum length is 40 characters.
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.SubmitJobRequest.
 * Use `create(SubmitJobRequestSchema)` to create a new message.
 */
export const SubmitJobRequestSchema: GenMessage<SubmitJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 19);

/**
 * Job Operation metadata.
 *
 * @generated from message google.cloud.dataproc.v1.JobMetadata
 */
export type JobMetadata = Message<"google.cloud.dataproc.v1.JobMetadata"> & {
  /**
   * Output only. The job id.
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * Output only. Most recent job status.
   *
   * @generated from field: google.cloud.dataproc.v1.JobStatus status = 2;
   */
  status?: JobStatus;

  /**
   * Output only. Operation type.
   *
   * @generated from field: string operation_type = 3;
   */
  operationType: string;

  /**
   * Output only. Job submission time.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message google.cloud.dataproc.v1.JobMetadata.
 * Use `create(JobMetadataSchema)` to create a new message.
 */
export const JobMetadataSchema: GenMessage<JobMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 20);

/**
 * A request to get the resource representation for a job in a project.
 *
 * @generated from message google.cloud.dataproc.v1.GetJobRequest
 */
export type GetJobRequest = Message<"google.cloud.dataproc.v1.GetJobRequest"> & {
  /**
   * Required. The ID of the Google Cloud Platform project that the job
   * belongs to.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. The Dataproc region in which to handle the request.
   *
   * @generated from field: string region = 3;
   */
  region: string;

  /**
   * Required. The job ID.
   *
   * @generated from field: string job_id = 2;
   */
  jobId: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.GetJobRequest.
 * Use `create(GetJobRequestSchema)` to create a new message.
 */
export const GetJobRequestSchema: GenMessage<GetJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 21);

/**
 * A request to list jobs in a project.
 *
 * @generated from message google.cloud.dataproc.v1.ListJobsRequest
 */
export type ListJobsRequest = Message<"google.cloud.dataproc.v1.ListJobsRequest"> & {
  /**
   * Required. The ID of the Google Cloud Platform project that the job
   * belongs to.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. The Dataproc region in which to handle the request.
   *
   * @generated from field: string region = 6;
   */
  region: string;

  /**
   * Optional. The number of results to return in each response.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The page token, returned by a previous call, to request the
   * next page of results.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. If set, the returned jobs list includes only jobs that were
   * submitted to the named cluster.
   *
   * @generated from field: string cluster_name = 4;
   */
  clusterName: string;

  /**
   * Optional. Specifies enumerated categories of jobs to list.
   * (default = match ALL jobs).
   *
   * If `filter` is provided, `jobStateMatcher` will be ignored.
   *
   * @generated from field: google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher job_state_matcher = 5;
   */
  jobStateMatcher: ListJobsRequest_JobStateMatcher;

  /**
   * Optional. A filter constraining the jobs to list. Filters are
   * case-sensitive and have the following syntax:
   *
   * [field = value] AND [field [= value]] ...
   *
   * where **field** is `status.state` or `labels.[KEY]`, and `[KEY]` is a label
   * key. **value** can be `*` to match all values.
   * `status.state` can be either `ACTIVE` or `NON_ACTIVE`.
   * Only the logical `AND` operator is supported; space-separated items are
   * treated as having an implicit `AND` operator.
   *
   * Example filter:
   *
   * status.state = ACTIVE AND labels.env = staging AND labels.starred = *
   *
   * @generated from field: string filter = 7;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.ListJobsRequest.
 * Use `create(ListJobsRequestSchema)` to create a new message.
 */
export const ListJobsRequestSchema: GenMessage<ListJobsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 22);

/**
 * A matcher that specifies categories of job states.
 *
 * @generated from enum google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher
 */
export enum ListJobsRequest_JobStateMatcher {
  /**
   * Match all jobs, regardless of state.
   *
   * @generated from enum value: ALL = 0;
   */
  ALL = 0,

  /**
   * Only match jobs in non-terminal states: PENDING, RUNNING, or
   * CANCEL_PENDING.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * Only match jobs in terminal states: CANCELLED, DONE, or ERROR.
   *
   * @generated from enum value: NON_ACTIVE = 2;
   */
  NON_ACTIVE = 2,
}

/**
 * Describes the enum google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher.
 */
export const ListJobsRequest_JobStateMatcherSchema: GenEnum<ListJobsRequest_JobStateMatcher> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_v1_jobs, 22, 0);

/**
 * A request to update a job.
 *
 * @generated from message google.cloud.dataproc.v1.UpdateJobRequest
 */
export type UpdateJobRequest = Message<"google.cloud.dataproc.v1.UpdateJobRequest"> & {
  /**
   * Required. The ID of the Google Cloud Platform project that the job
   * belongs to.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. The Dataproc region in which to handle the request.
   *
   * @generated from field: string region = 2;
   */
  region: string;

  /**
   * Required. The job ID.
   *
   * @generated from field: string job_id = 3;
   */
  jobId: string;

  /**
   * Required. The changes to the job.
   *
   * @generated from field: google.cloud.dataproc.v1.Job job = 4;
   */
  job?: Job;

  /**
   * Required. Specifies the path, relative to <code>Job</code>, of
   * the field to update. For example, to update the labels of a Job the
   * <code>update_mask</code> parameter would be specified as
   * <code>labels</code>, and the `PATCH` request body would specify the new
   * value. <strong>Note:</strong> Currently, <code>labels</code> is the only
   * field that can be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 5;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dataproc.v1.UpdateJobRequest.
 * Use `create(UpdateJobRequestSchema)` to create a new message.
 */
export const UpdateJobRequestSchema: GenMessage<UpdateJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 23);

/**
 * A list of jobs in a project.
 *
 * @generated from message google.cloud.dataproc.v1.ListJobsResponse
 */
export type ListJobsResponse = Message<"google.cloud.dataproc.v1.ListJobsResponse"> & {
  /**
   * Output only. Jobs list.
   *
   * @generated from field: repeated google.cloud.dataproc.v1.Job jobs = 1;
   */
  jobs: Job[];

  /**
   * Optional. This token is included in the response if there are more results
   * to fetch. To fetch additional results, provide this value as the
   * `page_token` in a subsequent <code>ListJobsRequest</code>.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. List of jobs with
   * [kms_key][google.cloud.dataproc.v1.EncryptionConfig.kms_key]-encrypted
   * parameters that could not be decrypted. A response to a `jobs.get` request
   * may indicate the reason for the decryption failure for a specific job.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.dataproc.v1.ListJobsResponse.
 * Use `create(ListJobsResponseSchema)` to create a new message.
 */
export const ListJobsResponseSchema: GenMessage<ListJobsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 24);

/**
 * A request to cancel a job.
 *
 * @generated from message google.cloud.dataproc.v1.CancelJobRequest
 */
export type CancelJobRequest = Message<"google.cloud.dataproc.v1.CancelJobRequest"> & {
  /**
   * Required. The ID of the Google Cloud Platform project that the job
   * belongs to.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. The Dataproc region in which to handle the request.
   *
   * @generated from field: string region = 3;
   */
  region: string;

  /**
   * Required. The job ID.
   *
   * @generated from field: string job_id = 2;
   */
  jobId: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.CancelJobRequest.
 * Use `create(CancelJobRequestSchema)` to create a new message.
 */
export const CancelJobRequestSchema: GenMessage<CancelJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 25);

/**
 * A request to delete a job.
 *
 * @generated from message google.cloud.dataproc.v1.DeleteJobRequest
 */
export type DeleteJobRequest = Message<"google.cloud.dataproc.v1.DeleteJobRequest"> & {
  /**
   * Required. The ID of the Google Cloud Platform project that the job
   * belongs to.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. The Dataproc region in which to handle the request.
   *
   * @generated from field: string region = 3;
   */
  region: string;

  /**
   * Required. The job ID.
   *
   * @generated from field: string job_id = 2;
   */
  jobId: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.DeleteJobRequest.
 * Use `create(DeleteJobRequestSchema)` to create a new message.
 */
export const DeleteJobRequestSchema: GenMessage<DeleteJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_jobs, 26);

/**
 * The JobController provides methods to manage jobs.
 *
 * @generated from service google.cloud.dataproc.v1.JobController
 */
export const JobController: GenService<{
  /**
   * Submits a job to a cluster.
   *
   * @generated from rpc google.cloud.dataproc.v1.JobController.SubmitJob
   */
  submitJob: {
    methodKind: "unary";
    input: typeof SubmitJobRequestSchema;
    output: typeof JobSchema;
  },
  /**
   * Submits job to a cluster.
   *
   * @generated from rpc google.cloud.dataproc.v1.JobController.SubmitJobAsOperation
   */
  submitJobAsOperation: {
    methodKind: "unary";
    input: typeof SubmitJobRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets the resource representation for a job in a project.
   *
   * @generated from rpc google.cloud.dataproc.v1.JobController.GetJob
   */
  getJob: {
    methodKind: "unary";
    input: typeof GetJobRequestSchema;
    output: typeof JobSchema;
  },
  /**
   * Lists regions/{region}/jobs in a project.
   *
   * @generated from rpc google.cloud.dataproc.v1.JobController.ListJobs
   */
  listJobs: {
    methodKind: "unary";
    input: typeof ListJobsRequestSchema;
    output: typeof ListJobsResponseSchema;
  },
  /**
   * Updates a job in a project.
   *
   * @generated from rpc google.cloud.dataproc.v1.JobController.UpdateJob
   */
  updateJob: {
    methodKind: "unary";
    input: typeof UpdateJobRequestSchema;
    output: typeof JobSchema;
  },
  /**
   * Starts a job cancellation request. To access the job resource
   * after cancellation, call
   * [regions/{region}/jobs.list](https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/list)
   * or
   * [regions/{region}/jobs.get](https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/get).
   *
   * @generated from rpc google.cloud.dataproc.v1.JobController.CancelJob
   */
  cancelJob: {
    methodKind: "unary";
    input: typeof CancelJobRequestSchema;
    output: typeof JobSchema;
  },
  /**
   * Deletes the job from the project. If the job is active, the delete fails,
   * and the response returns `FAILED_PRECONDITION`.
   *
   * @generated from rpc google.cloud.dataproc.v1.JobController.DeleteJob
   */
  deleteJob: {
    methodKind: "unary";
    input: typeof DeleteJobRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dataproc_v1_jobs, 0);

