// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dataproc/v1/sessions.proto (package google.cloud.dataproc.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EnvironmentConfig, RuntimeConfig, RuntimeInfo } from "./shared_pb";
import { file_google_cloud_dataproc_v1_shared } from "./shared_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dataproc/v1/sessions.proto.
 */
export const file_google_cloud_dataproc_v1_sessions: GenFile = /*@__PURE__*/
  fileDesc("Cidnb29nbGUvY2xvdWQvZGF0YXByb2MvdjEvc2Vzc2lvbnMucHJvdG8SGGdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MSK6AQoUQ3JlYXRlU2Vzc2lvblJlcXVlc3QSNwoGcGFyZW50GAEgASgJQifgQQL6QSESH2RhdGFwcm9jLmdvb2dsZWFwaXMuY29tL1Nlc3Npb24SNwoHc2Vzc2lvbhgCIAEoCzIhLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5TZXNzaW9uQgPgQQISFwoKc2Vzc2lvbl9pZBgDIAEoCUID4EECEhcKCnJlcXVlc3RfaWQYBCABKAlCA+BBASJKChFHZXRTZXNzaW9uUmVxdWVzdBI1CgRuYW1lGAEgASgJQifgQQL6QSEKH2RhdGFwcm9jLmdvb2dsZWFwaXMuY29tL1Nlc3Npb24ilAEKE0xpc3RTZXNzaW9uc1JlcXVlc3QSNwoGcGFyZW50GAEgASgJQifgQQL6QSESH2RhdGFwcm9jLmdvb2dsZWFwaXMuY29tL1Nlc3Npb24SFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBEhMKBmZpbHRlchgEIAEoCUID4EEBImkKFExpc3RTZXNzaW9uc1Jlc3BvbnNlEjgKCHNlc3Npb25zGAEgAygLMiEuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLlNlc3Npb25CA+BBAxIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiaQoXVGVybWluYXRlU2Vzc2lvblJlcXVlc3QSNQoEbmFtZRgBIAEoCUIn4EEC+kEhCh9kYXRhcHJvYy5nb29nbGVhcGlzLmNvbS9TZXNzaW9uEhcKCnJlcXVlc3RfaWQYAiABKAlCA+BBASJmChREZWxldGVTZXNzaW9uUmVxdWVzdBI1CgRuYW1lGAEgASgJQifgQQL6QSEKH2RhdGFwcm9jLmdvb2dsZWFwaXMuY29tL1Nlc3Npb24SFwoKcmVxdWVzdF9pZBgCIAEoCUID4EEBIqcKCgdTZXNzaW9uEhEKBG5hbWUYASABKAlCA+BBAhIRCgR1dWlkGAIgASgJQgPgQQMSNAoLY3JlYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSRwoPanVweXRlcl9zZXNzaW9uGAQgASgLMicuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkp1cHl0ZXJDb25maWdCA+BBAUgAElIKFXNwYXJrX2Nvbm5lY3Rfc2Vzc2lvbhgRIAEoCzIsLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5TcGFya0Nvbm5lY3RDb25maWdCA+BBAUgAEkAKDHJ1bnRpbWVfaW5mbxgGIAEoCzIlLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5SdW50aW1lSW5mb0ID4EEDEjsKBXN0YXRlGAcgASgOMicuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLlNlc3Npb24uU3RhdGVCA+BBAxIaCg1zdGF0ZV9tZXNzYWdlGAggASgJQgPgQQMSMwoKc3RhdGVfdGltZRgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxIUCgdjcmVhdG9yGAogASgJQgPgQQMSQgoGbGFiZWxzGAsgAygLMi0uZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLlNlc3Npb24uTGFiZWxzRW50cnlCA+BBARJECg5ydW50aW1lX2NvbmZpZxgMIAEoCzInLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5SdW50aW1lQ29uZmlnQgPgQQESTAoSZW52aXJvbm1lbnRfY29uZmlnGA0gASgLMisuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkVudmlyb25tZW50Q29uZmlnQgPgQQESEQoEdXNlchgOIAEoCUID4EEBElEKDXN0YXRlX2hpc3RvcnkYDyADKAsyNS5nb29nbGUuY2xvdWQuZGF0YXByb2MudjEuU2Vzc2lvbi5TZXNzaW9uU3RhdGVIaXN0b3J5QgPgQQMSSQoQc2Vzc2lvbl90ZW1wbGF0ZRgQIAEoCUIv4EEB+kEpCidkYXRhcHJvYy5nb29nbGVhcGlzLmNvbS9TZXNzaW9uVGVtcGxhdGUaqQEKE1Nlc3Npb25TdGF0ZUhpc3RvcnkSOwoFc3RhdGUYASABKA4yJy5nb29nbGUuY2xvdWQuZGF0YXByb2MudjEuU2Vzc2lvbi5TdGF0ZUID4EEDEhoKDXN0YXRlX21lc3NhZ2UYAiABKAlCA+BBAxI5ChBzdGF0ZV9zdGFydF90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiZQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIMCghDUkVBVElORxABEgoKBkFDVElWRRACEg8KC1RFUk1JTkFUSU5HEAMSDgoKVEVSTUlOQVRFRBAEEgoKBkZBSUxFRBAFOmDqQV0KH2RhdGFwcm9jLmdvb2dsZWFwaXMuY29tL1Nlc3Npb24SOnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9zZXNzaW9ucy97c2Vzc2lvbn1CEAoOc2Vzc2lvbl9jb25maWciqAEKDUp1cHl0ZXJDb25maWcSQwoGa2VybmVsGAEgASgOMi4uZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkp1cHl0ZXJDb25maWcuS2VybmVsQgPgQQESGQoMZGlzcGxheV9uYW1lGAIgASgJQgPgQQEiNwoGS2VybmVsEhYKEktFUk5FTF9VTlNQRUNJRklFRBAAEgoKBlBZVEhPThABEgkKBVNDQUxBEAIiFAoSU3BhcmtDb25uZWN0Q29uZmlnMvUIChFTZXNzaW9uQ29udHJvbGxlchL5AQoNQ3JlYXRlU2Vzc2lvbhIuLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5DcmVhdGVTZXNzaW9uUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24imAHKQTwKB1Nlc3Npb24SMWdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5TZXNzaW9uT3BlcmF0aW9uTWV0YWRhdGHaQRlwYXJlbnQsc2Vzc2lvbixzZXNzaW9uX2lkgtPkkwI3OgdzZXNzaW9uIiwvdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9zZXNzaW9ucxKZAQoKR2V0U2Vzc2lvbhIrLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5HZXRTZXNzaW9uUmVxdWVzdBohLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5TZXNzaW9uIjvaQQRuYW1lgtPkkwIuEiwvdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9zZXNzaW9ucy8qfRKsAQoMTGlzdFNlc3Npb25zEi0uZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkxpc3RTZXNzaW9uc1JlcXVlc3QaLi5nb29nbGUuY2xvdWQuZGF0YXByb2MudjEuTGlzdFNlc3Npb25zUmVzcG9uc2UiPdpBBnBhcmVudILT5JMCLhIsL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vc2Vzc2lvbnMS7gEKEFRlcm1pbmF0ZVNlc3Npb24SMS5nb29nbGUuY2xvdWQuZGF0YXByb2MudjEuVGVybWluYXRlU2Vzc2lvblJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIocBykE8CgdTZXNzaW9uEjFnb29nbGUuY2xvdWQuZGF0YXByb2MudjEuU2Vzc2lvbk9wZXJhdGlvbk1ldGFkYXRh2kEEbmFtZYLT5JMCOzoBKiI2L3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovc2Vzc2lvbnMvKn06dGVybWluYXRlEtoBCg1EZWxldGVTZXNzaW9uEi4uZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkRlbGV0ZVNlc3Npb25SZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJ6ykE8CgdTZXNzaW9uEjFnb29nbGUuY2xvdWQuZGF0YXByb2MudjEuU2Vzc2lvbk9wZXJhdGlvbk1ldGFkYXRh2kEEbmFtZYLT5JMCLiosL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovc2Vzc2lvbnMvKn0aS8pBF2RhdGFwcm9jLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybUJsChxjb20uZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxQg1TZXNzaW9uc1Byb3RvUAFaO2Nsb3VkLmdvb2dsZS5jb20vZ28vZGF0YXByb2MvdjIvYXBpdjEvZGF0YXByb2NwYjtkYXRhcHJvY3BiYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dataproc_v1_shared, file_google_longrunning_operations, file_google_protobuf_timestamp]);

/**
 * A request to create a session.
 *
 * @generated from message google.cloud.dataproc.v1.CreateSessionRequest
 */
export type CreateSessionRequest = Message<"google.cloud.dataproc.v1.CreateSessionRequest"> & {
  /**
   * Required. The parent resource where this session will be created.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The interactive session to create.
   *
   * @generated from field: google.cloud.dataproc.v1.Session session = 2;
   */
  session?: Session;

  /**
   * Required. The ID to use for the session, which becomes the final component
   * of the session's resource name.
   *
   * This value must be 4-63 characters. Valid characters
   * are /[a-z][0-9]-/.
   *
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * Optional. A unique ID used to identify the request. If the service
   * receives two
   * [CreateSessionRequests](https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateSessionRequest)s
   * with the same ID, the second request is ignored, and the
   * first [Session][google.cloud.dataproc.v1.Session] is created and stored in
   * the backend.
   *
   * Recommendation: Set this value to a
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
   *
   * The value must contain only letters (a-z, A-Z), numbers (0-9),
   * underscores (_), and hyphens (-). The maximum length is 40 characters.
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.CreateSessionRequest.
 * Use `create(CreateSessionRequestSchema)` to create a new message.
 */
export const CreateSessionRequestSchema: GenMessage<CreateSessionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_sessions, 0);

/**
 * A request to get the resource representation for a session.
 *
 * @generated from message google.cloud.dataproc.v1.GetSessionRequest
 */
export type GetSessionRequest = Message<"google.cloud.dataproc.v1.GetSessionRequest"> & {
  /**
   * Required. The name of the session to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.GetSessionRequest.
 * Use `create(GetSessionRequestSchema)` to create a new message.
 */
export const GetSessionRequestSchema: GenMessage<GetSessionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_sessions, 1);

/**
 * A request to list sessions in a project.
 *
 * @generated from message google.cloud.dataproc.v1.ListSessionsRequest
 */
export type ListSessionsRequest = Message<"google.cloud.dataproc.v1.ListSessionsRequest"> & {
  /**
   * Required. The parent, which owns this collection of sessions.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of sessions to return in each response.
   * The service may return fewer than this value.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token received from a previous `ListSessions` call.
   * Provide this token to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. A filter for the sessions to return in the response.
   *
   * A filter is a logical expression constraining the values of various fields
   * in each session resource. Filters are case sensitive, and may contain
   * multiple clauses combined with logical operators (AND, OR).
   * Supported fields are `session_id`, `session_uuid`, `state`, `create_time`,
   * and `labels`.
   *
   * Example: `state = ACTIVE and create_time < "2023-01-01T00:00:00Z"`
   * is a filter for sessions in an ACTIVE state that were created before
   * 2023-01-01. `state = ACTIVE and labels.environment=production` is a filter
   * for sessions in an ACTIVE state that have a production environment label.
   *
   * See https://google.aip.dev/assets/misc/ebnf-filtering.txt for a detailed
   * description of the filter syntax and a list of supported comparators.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema: GenMessage<ListSessionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_sessions, 2);

/**
 * A list of interactive sessions.
 *
 * @generated from message google.cloud.dataproc.v1.ListSessionsResponse
 */
export type ListSessionsResponse = Message<"google.cloud.dataproc.v1.ListSessionsResponse"> & {
  /**
   * Output only. The sessions from the specified collection.
   *
   * @generated from field: repeated google.cloud.dataproc.v1.Session sessions = 1;
   */
  sessions: Session[];

  /**
   * A token, which can be sent as `page_token`, to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema: GenMessage<ListSessionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_sessions, 3);

/**
 * A request to terminate an interactive session.
 *
 * @generated from message google.cloud.dataproc.v1.TerminateSessionRequest
 */
export type TerminateSessionRequest = Message<"google.cloud.dataproc.v1.TerminateSessionRequest"> & {
  /**
   * Required. The name of the session resource to terminate.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A unique ID used to identify the request. If the service
   * receives two
   * [TerminateSessionRequest](https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.TerminateSessionRequest)s
   * with the same ID, the second request is ignored.
   *
   * Recommendation: Set this value to a
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
   *
   * The value must contain only letters (a-z, A-Z), numbers (0-9),
   * underscores (_), and hyphens (-). The maximum length is 40 characters.
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.TerminateSessionRequest.
 * Use `create(TerminateSessionRequestSchema)` to create a new message.
 */
export const TerminateSessionRequestSchema: GenMessage<TerminateSessionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_sessions, 4);

/**
 * A request to delete a session.
 *
 * @generated from message google.cloud.dataproc.v1.DeleteSessionRequest
 */
export type DeleteSessionRequest = Message<"google.cloud.dataproc.v1.DeleteSessionRequest"> & {
  /**
   * Required. The name of the session resource to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A unique ID used to identify the request. If the service
   * receives two
   * [DeleteSessionRequest](https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.DeleteSessionRequest)s
   * with the same ID, the second request is ignored.
   *
   * Recommendation: Set this value to a
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
   *
   * The value must contain only letters (a-z, A-Z), numbers (0-9),
   * underscores (_), and hyphens (-). The maximum length is 40 characters.
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.DeleteSessionRequest.
 * Use `create(DeleteSessionRequestSchema)` to create a new message.
 */
export const DeleteSessionRequestSchema: GenMessage<DeleteSessionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_sessions, 5);

/**
 * A representation of a session.
 *
 * @generated from message google.cloud.dataproc.v1.Session
 */
export type Session = Message<"google.cloud.dataproc.v1.Session"> & {
  /**
   * Required. The resource name of the session.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. A session UUID (Unique Universal Identifier). The service
   * generates this value when it creates the session.
   *
   * @generated from field: string uuid = 2;
   */
  uuid: string;

  /**
   * Output only. The time when the session was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * The session configuration.
   *
   * @generated from oneof google.cloud.dataproc.v1.Session.session_config
   */
  sessionConfig: {
    /**
     * Optional. Jupyter session config.
     *
     * @generated from field: google.cloud.dataproc.v1.JupyterConfig jupyter_session = 4;
     */
    value: JupyterConfig;
    case: "jupyterSession";
  } | {
    /**
     * Optional. Spark Connect session config.
     *
     * @generated from field: google.cloud.dataproc.v1.SparkConnectConfig spark_connect_session = 17;
     */
    value: SparkConnectConfig;
    case: "sparkConnectSession";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Runtime information about session execution.
   *
   * @generated from field: google.cloud.dataproc.v1.RuntimeInfo runtime_info = 6;
   */
  runtimeInfo?: RuntimeInfo;

  /**
   * Output only. A state of the session.
   *
   * @generated from field: google.cloud.dataproc.v1.Session.State state = 7;
   */
  state: Session_State;

  /**
   * Output only. Session state details, such as the failure
   * description if the state is `FAILED`.
   *
   * @generated from field: string state_message = 8;
   */
  stateMessage: string;

  /**
   * Output only. The time when the session entered the current state.
   *
   * @generated from field: google.protobuf.Timestamp state_time = 9;
   */
  stateTime?: Timestamp;

  /**
   * Output only. The email address of the user who created the session.
   *
   * @generated from field: string creator = 10;
   */
  creator: string;

  /**
   * Optional. The labels to associate with the session.
   * Label **keys** must contain 1 to 63 characters, and must conform to
   * [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
   * Label **values** may be empty, but, if present, must contain 1 to 63
   * characters, and must conform to [RFC
   * 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be
   * associated with a session.
   *
   * @generated from field: map<string, string> labels = 11;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Runtime configuration for the session execution.
   *
   * @generated from field: google.cloud.dataproc.v1.RuntimeConfig runtime_config = 12;
   */
  runtimeConfig?: RuntimeConfig;

  /**
   * Optional. Environment configuration for the session execution.
   *
   * @generated from field: google.cloud.dataproc.v1.EnvironmentConfig environment_config = 13;
   */
  environmentConfig?: EnvironmentConfig;

  /**
   * Optional. The email address of the user who owns the session.
   *
   * @generated from field: string user = 14;
   */
  user: string;

  /**
   * Output only. Historical state information for the session.
   *
   * @generated from field: repeated google.cloud.dataproc.v1.Session.SessionStateHistory state_history = 15;
   */
  stateHistory: Session_SessionStateHistory[];

  /**
   * Optional. The session template used by the session.
   *
   * Only resource names, including project ID and location, are valid.
   *
   * Example:
   * * `https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id]`
   * * `projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id]`
   *
   * The template must be in the same project and Dataproc region as the
   * session.
   *
   * @generated from field: string session_template = 16;
   */
  sessionTemplate: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema: GenMessage<Session> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_sessions, 6);

/**
 * Historical state information.
 *
 * @generated from message google.cloud.dataproc.v1.Session.SessionStateHistory
 */
export type Session_SessionStateHistory = Message<"google.cloud.dataproc.v1.Session.SessionStateHistory"> & {
  /**
   * Output only. The state of the session at this point in the session
   * history.
   *
   * @generated from field: google.cloud.dataproc.v1.Session.State state = 1;
   */
  state: Session_State;

  /**
   * Output only. Details about the state at this point in the session
   * history.
   *
   * @generated from field: string state_message = 2;
   */
  stateMessage: string;

  /**
   * Output only. The time when the session entered the historical state.
   *
   * @generated from field: google.protobuf.Timestamp state_start_time = 3;
   */
  stateStartTime?: Timestamp;
};

/**
 * Describes the message google.cloud.dataproc.v1.Session.SessionStateHistory.
 * Use `create(Session_SessionStateHistorySchema)` to create a new message.
 */
export const Session_SessionStateHistorySchema: GenMessage<Session_SessionStateHistory> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_sessions, 6, 0);

/**
 * The session state.
 *
 * @generated from enum google.cloud.dataproc.v1.Session.State
 */
export enum Session_State {
  /**
   * The session state is unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The session is created prior to running.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The session is running.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The session is terminating.
   *
   * @generated from enum value: TERMINATING = 3;
   */
  TERMINATING = 3,

  /**
   * The session is terminated successfully.
   *
   * @generated from enum value: TERMINATED = 4;
   */
  TERMINATED = 4,

  /**
   * The session is no longer running due to an error.
   *
   * @generated from enum value: FAILED = 5;
   */
  FAILED = 5,
}

/**
 * Describes the enum google.cloud.dataproc.v1.Session.State.
 */
export const Session_StateSchema: GenEnum<Session_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_v1_sessions, 6, 0);

/**
 * Jupyter configuration for an interactive session.
 *
 * @generated from message google.cloud.dataproc.v1.JupyterConfig
 */
export type JupyterConfig = Message<"google.cloud.dataproc.v1.JupyterConfig"> & {
  /**
   * Optional. Kernel
   *
   * @generated from field: google.cloud.dataproc.v1.JupyterConfig.Kernel kernel = 1;
   */
  kernel: JupyterConfig_Kernel;

  /**
   * Optional. Display name, shown in the Jupyter kernelspec card.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;
};

/**
 * Describes the message google.cloud.dataproc.v1.JupyterConfig.
 * Use `create(JupyterConfigSchema)` to create a new message.
 */
export const JupyterConfigSchema: GenMessage<JupyterConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_sessions, 7);

/**
 * Jupyter kernel types.
 *
 * @generated from enum google.cloud.dataproc.v1.JupyterConfig.Kernel
 */
export enum JupyterConfig_Kernel {
  /**
   * The kernel is unknown.
   *
   * @generated from enum value: KERNEL_UNSPECIFIED = 0;
   */
  KERNEL_UNSPECIFIED = 0,

  /**
   * Python kernel.
   *
   * @generated from enum value: PYTHON = 1;
   */
  PYTHON = 1,

  /**
   * Scala kernel.
   *
   * @generated from enum value: SCALA = 2;
   */
  SCALA = 2,
}

/**
 * Describes the enum google.cloud.dataproc.v1.JupyterConfig.Kernel.
 */
export const JupyterConfig_KernelSchema: GenEnum<JupyterConfig_Kernel> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_v1_sessions, 7, 0);

/**
 * Spark Connect configuration for an interactive session.
 *
 * @generated from message google.cloud.dataproc.v1.SparkConnectConfig
 */
export type SparkConnectConfig = Message<"google.cloud.dataproc.v1.SparkConnectConfig"> & {
};

/**
 * Describes the message google.cloud.dataproc.v1.SparkConnectConfig.
 * Use `create(SparkConnectConfigSchema)` to create a new message.
 */
export const SparkConnectConfigSchema: GenMessage<SparkConnectConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_v1_sessions, 8);

/**
 * The `SessionController` provides methods to manage interactive sessions.
 *
 * @generated from service google.cloud.dataproc.v1.SessionController
 */
export const SessionController: GenService<{
  /**
   * Create an interactive session asynchronously.
   *
   * @generated from rpc google.cloud.dataproc.v1.SessionController.CreateSession
   */
  createSession: {
    methodKind: "unary";
    input: typeof CreateSessionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets the resource representation for an interactive session.
   *
   * @generated from rpc google.cloud.dataproc.v1.SessionController.GetSession
   */
  getSession: {
    methodKind: "unary";
    input: typeof GetSessionRequestSchema;
    output: typeof SessionSchema;
  },
  /**
   * Lists interactive sessions.
   *
   * @generated from rpc google.cloud.dataproc.v1.SessionController.ListSessions
   */
  listSessions: {
    methodKind: "unary";
    input: typeof ListSessionsRequestSchema;
    output: typeof ListSessionsResponseSchema;
  },
  /**
   * Terminates the interactive session.
   *
   * @generated from rpc google.cloud.dataproc.v1.SessionController.TerminateSession
   */
  terminateSession: {
    methodKind: "unary";
    input: typeof TerminateSessionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes the interactive session resource. If the session is not in terminal
   * state, it is terminated, and then deleted.
   *
   * @generated from rpc google.cloud.dataproc.v1.SessionController.DeleteSession
   */
  deleteSession: {
    methodKind: "unary";
    input: typeof DeleteSessionRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dataproc_v1_sessions, 0);

