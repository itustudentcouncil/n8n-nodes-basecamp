// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dataproc/logging/autoscaler_log.proto (package google.cloud.dataproc.logging, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dataproc/logging/autoscaler_log.proto.
 */
export const file_google_cloud_dataproc_logging_autoscaler_log: GenFile = /*@__PURE__*/
  fileDesc("CjJnb29nbGUvY2xvdWQvZGF0YXByb2MvbG9nZ2luZy9hdXRvc2NhbGVyX2xvZy5wcm90bxIdZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLmxvZ2dpbmciSwoLQ2x1c3RlclNpemUSHAoUcHJpbWFyeV93b3JrZXJfY291bnQYASABKAUSHgoWc2Vjb25kYXJ5X3dvcmtlcl9jb3VudBgCIAEoBSKhAQoNQXV0b3NjYWxlckxvZxI/CgZzdGF0dXMYASABKAsyLy5nb29nbGUuY2xvdWQuZGF0YXByb2MubG9nZ2luZy5BdXRvc2NhbGVyU3RhdHVzEk8KDnJlY29tbWVuZGF0aW9uGAIgASgLMjcuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLmxvZ2dpbmcuQXV0b3NjYWxlclJlY29tbWVuZGF0aW9uIpYBChBBdXRvc2NhbGVyU3RhdHVzEj0KBXN0YXRlGAEgASgOMi4uZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLmxvZ2dpbmcuQXV0b3NjYWxlclN0YXRlEg8KB2RldGFpbHMYAiABKAkSIwobdXBkYXRlX2NsdXN0ZXJfb3BlcmF0aW9uX2lkGAMgASgJEg0KBWVycm9yGAQgASgJIv8HChhBdXRvc2NhbGVyUmVjb21tZW5kYXRpb24STgoGaW5wdXRzGAEgASgLMj4uZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLmxvZ2dpbmcuQXV0b3NjYWxlclJlY29tbWVuZGF0aW9uLklucHV0cxJQCgdvdXRwdXRzGAIgASgLMj8uZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLmxvZ2dpbmcuQXV0b3NjYWxlclJlY29tbWVuZGF0aW9uLk91dHB1dHMahAMKBklucHV0cxJrCg9jbHVzdGVyX21ldHJpY3MYASADKAsyUi5nb29nbGUuY2xvdWQuZGF0YXByb2MubG9nZ2luZy5BdXRvc2NhbGVyUmVjb21tZW5kYXRpb24uSW5wdXRzLkNsdXN0ZXJNZXRyaWNzRW50cnkSSAoUY3VycmVudF9jbHVzdGVyX3NpemUYAiABKAsyKi5nb29nbGUuY2xvdWQuZGF0YXByb2MubG9nZ2luZy5DbHVzdGVyU2l6ZRJFChFtaW5fd29ya2VyX2NvdW50cxgDIAEoCzIqLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy5sb2dnaW5nLkNsdXN0ZXJTaXplEkUKEW1heF93b3JrZXJfY291bnRzGAQgASgLMiouZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLmxvZ2dpbmcuQ2x1c3RlclNpemUaNQoTQ2x1c3Rlck1ldHJpY3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGrkDCgdPdXRwdXRzEkQKCGRlY2lzaW9uGAEgASgOMjIuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLmxvZ2dpbmcuU2NhbGluZ0RlY2lzaW9uVHlwZRJMChhyZWNvbW1lbmRlZF9jbHVzdGVyX3NpemUYAiABKAsyKi5nb29nbGUuY2xvdWQuZGF0YXByb2MubG9nZ2luZy5DbHVzdGVyU2l6ZRJACh1ncmFjZWZ1bF9kZWNvbW1pc3Npb25fdGltZW91dBgDIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhJOChNjb25zdHJhaW50c19yZWFjaGVkGAQgAygOMjEuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLmxvZ2dpbmcuQ29uc3RyYWluaW5nRmFjdG9yEikKIWFkZGl0aW9uYWxfcmVjb21tZW5kYXRpb25fZGV0YWlscxgFIAMoCRIZChFyZWNvbW1lbmRhdGlvbl9pZBgGIAEoCRJCCg9kZWNpc2lvbl9tZXRyaWMYByABKA4yKS5nb29nbGUuY2xvdWQuZGF0YXByb2MubG9nZ2luZy5NZXRyaWNUeXBlKosBCg9BdXRvc2NhbGVyU3RhdGUSIAocQVVUT1NDQUxFUl9TVEFURV9VTlNQRUNJRklFRBAAEgwKCENPT0xET1dOEAESEAoMUkVDT01NRU5ESU5HEAYSCwoHU0NBTElORxACEgsKB1NUT1BQRUQQAxIKCgZGQUlMRUQQBBIQCgxJTklUSUFMSVpJTkcQBSqSAQoTU2NhbGluZ0RlY2lzaW9uVHlwZRIlCiFTQ0FMSU5HX0RFQ0lTSU9OX1RZUEVfVU5TUEVDSUZJRUQQABIMCghTQ0FMRV9VUBABEg4KClNDQUxFX0RPV04QAhIMCghOT19TQ0FMRRADEgkKBU1JWEVEEAQSCgoGQ0FOQ0VMEAUSEQoNRE9fTk9UX0NBTkNFTBAGKtwBChJDb25zdHJhaW5pbmdGYWN0b3ISIwofQ09OU1RSQUlOSU5HX0ZBQ1RPUl9VTlNQRUNJRklFRBAAEicKI1NDQUxJTkdfQ0FQUEVEX0RVRV9UT19MQUNLX09GX1FVT1RBEAESIAocUkVBQ0hFRF9NQVhJTVVNX0NMVVNURVJfU0laRRACEiAKHFJFQUNIRURfTUlOSU1VTV9DTFVTVEVSX1NJWkUQAxI0CjBTRUNPTkRBUllfU0NBTEVET1dOX1NJTkdMRV9SRVFVRVNUX0xJTUlUX1JFQUNIRUQQBCpfCgpNZXRyaWNUeXBlEhsKF01FVFJJQ19UWVBFX1VOU1BFQ0lGSUVEEAASDwoLWUFSTl9NRU1PUlkQARIOCgpZQVJOX0NPUkVTEAISEwoPU1BBUktfRVhFQ1VUT1JTEANCfwohY29tLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy5sb2dnaW5nUAFaOGNsb3VkLmdvb2dsZS5jb20vZ28vZGF0YXByb2MvbG9nZ2luZy9sb2dnaW5ncGI7bG9nZ2luZ3BiqgIdR29vZ2xlLkNsb3VkLkRhdGFwcm9jLkxvZ2dpbmdiBnByb3RvMw", [file_google_protobuf_duration]);

/**
 * The short version of cluster configuration for Cloud Logging.
 *
 * @generated from message google.cloud.dataproc.logging.ClusterSize
 */
export type ClusterSize = Message<"google.cloud.dataproc.logging.ClusterSize"> & {
  /**
   * The number of primary workers in the cluster.
   *
   * @generated from field: int32 primary_worker_count = 1;
   */
  primaryWorkerCount: number;

  /**
   * The number of secondary workers in the cluster.
   *
   * @generated from field: int32 secondary_worker_count = 2;
   */
  secondaryWorkerCount: number;
};

/**
 * Describes the message google.cloud.dataproc.logging.ClusterSize.
 * Use `create(ClusterSizeSchema)` to create a new message.
 */
export const ClusterSizeSchema: GenMessage<ClusterSize> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_logging_autoscaler_log, 0);

/**
 * The main proto that will be converted to JSON format and then written to
 * Logging.
 *
 * @generated from message google.cloud.dataproc.logging.AutoscalerLog
 */
export type AutoscalerLog = Message<"google.cloud.dataproc.logging.AutoscalerLog"> & {
  /**
   * The current Autoscaler status.
   *
   * @generated from field: google.cloud.dataproc.logging.AutoscalerStatus status = 1;
   */
  status?: AutoscalerStatus;

  /**
   * Optional. The autoscaling recommendation including its inputs, outputs,
   * scaling decision, and detailed explanation.
   *
   * @generated from field: google.cloud.dataproc.logging.AutoscalerRecommendation recommendation = 2;
   */
  recommendation?: AutoscalerRecommendation;
};

/**
 * Describes the message google.cloud.dataproc.logging.AutoscalerLog.
 * Use `create(AutoscalerLogSchema)` to create a new message.
 */
export const AutoscalerLogSchema: GenMessage<AutoscalerLog> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_logging_autoscaler_log, 1);

/**
 * The Autoscaler's status, including its state and other details.
 *
 * @generated from message google.cloud.dataproc.logging.AutoscalerStatus
 */
export type AutoscalerStatus = Message<"google.cloud.dataproc.logging.AutoscalerStatus"> & {
  /**
   * The high-level Autoscaler state.
   *
   * @generated from field: google.cloud.dataproc.logging.AutoscalerState state = 1;
   */
  state: AutoscalerState;

  /**
   * The detailed description of Autoscaler status.
   *
   * @generated from field: string details = 2;
   */
  details: string;

  /**
   * The cluster update operation ID.
   *
   * @generated from field: string update_cluster_operation_id = 3;
   */
  updateClusterOperationId: string;

  /**
   * Error message from an Autoscaler exception, if any.
   *
   * @generated from field: string error = 4;
   */
  error: string;
};

/**
 * Describes the message google.cloud.dataproc.logging.AutoscalerStatus.
 * Use `create(AutoscalerStatusSchema)` to create a new message.
 */
export const AutoscalerStatusSchema: GenMessage<AutoscalerStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_logging_autoscaler_log, 2);

/**
 * The inputs, outputs, and detailed explanation of the Autoscaling
 * recommendation.
 *
 * @generated from message google.cloud.dataproc.logging.AutoscalerRecommendation
 */
export type AutoscalerRecommendation = Message<"google.cloud.dataproc.logging.AutoscalerRecommendation"> & {
  /**
   * The autoscaling algorithm inputs.
   *
   * @generated from field: google.cloud.dataproc.logging.AutoscalerRecommendation.Inputs inputs = 1;
   */
  inputs?: AutoscalerRecommendation_Inputs;

  /**
   * The algorithm outputs for the recommended cluster size.
   *
   * @generated from field: google.cloud.dataproc.logging.AutoscalerRecommendation.Outputs outputs = 2;
   */
  outputs?: AutoscalerRecommendation_Outputs;
};

/**
 * Describes the message google.cloud.dataproc.logging.AutoscalerRecommendation.
 * Use `create(AutoscalerRecommendationSchema)` to create a new message.
 */
export const AutoscalerRecommendationSchema: GenMessage<AutoscalerRecommendation> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_logging_autoscaler_log, 3);

/**
 * The input values for the Autoscaling recommendation algorithm.
 *
 * @generated from message google.cloud.dataproc.logging.AutoscalerRecommendation.Inputs
 */
export type AutoscalerRecommendation_Inputs = Message<"google.cloud.dataproc.logging.AutoscalerRecommendation.Inputs"> & {
  /**
   * The metrics collected by the Dataproc agent running on the cluster.
   * For example, {"avg-yarn-pending-memory": "1040 MB"}
   *
   * @generated from field: map<string, string> cluster_metrics = 1;
   */
  clusterMetrics: { [key: string]: string };

  /**
   * The cluster configuration before updating the cluster.
   *
   * @generated from field: google.cloud.dataproc.logging.ClusterSize current_cluster_size = 2;
   */
  currentClusterSize?: ClusterSize;

  /**
   * The minimum worker counts for each instance group.
   *
   * @generated from field: google.cloud.dataproc.logging.ClusterSize min_worker_counts = 3;
   */
  minWorkerCounts?: ClusterSize;

  /**
   * The maximum worker counts for each instance group.
   *
   * @generated from field: google.cloud.dataproc.logging.ClusterSize max_worker_counts = 4;
   */
  maxWorkerCounts?: ClusterSize;
};

/**
 * Describes the message google.cloud.dataproc.logging.AutoscalerRecommendation.Inputs.
 * Use `create(AutoscalerRecommendation_InputsSchema)` to create a new message.
 */
export const AutoscalerRecommendation_InputsSchema: GenMessage<AutoscalerRecommendation_Inputs> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_logging_autoscaler_log, 3, 0);

/**
 * Autoscaler recommendations.
 *
 * @generated from message google.cloud.dataproc.logging.AutoscalerRecommendation.Outputs
 */
export type AutoscalerRecommendation_Outputs = Message<"google.cloud.dataproc.logging.AutoscalerRecommendation.Outputs"> & {
  /**
   * The high-level autoscaling decision, such as SCALE_UP, SCALE_DOWN,
   * NO_OP.
   *
   * @generated from field: google.cloud.dataproc.logging.ScalingDecisionType decision = 1;
   */
  decision: ScalingDecisionType;

  /**
   * The recommended cluster size.
   *
   * @generated from field: google.cloud.dataproc.logging.ClusterSize recommended_cluster_size = 2;
   */
  recommendedClusterSize?: ClusterSize;

  /**
   * The graceful decommission timeout for downscaling operations.
   *
   * @generated from field: google.protobuf.Duration graceful_decommission_timeout = 3;
   */
  gracefulDecommissionTimeout?: Duration;

  /**
   * Reasons why the Autoscaler didn't add or remove more workers.
   *
   * @generated from field: repeated google.cloud.dataproc.logging.ConstrainingFactor constraints_reached = 4;
   */
  constraintsReached: ConstrainingFactor[];

  /**
   * Less significant recommendations that are not included in the
   * `AutoscalerStatus.details` message.
   *
   * @generated from field: repeated string additional_recommendation_details = 5;
   */
  additionalRecommendationDetails: string[];

  /**
   * A unique id for this recommendation that should be included when opening
   * a support ticket.
   *
   * @generated from field: string recommendation_id = 6;
   */
  recommendationId: string;

  /**
   * The metric source deciding the autoscaling recommendation.
   *
   * @generated from field: google.cloud.dataproc.logging.MetricType decision_metric = 7;
   */
  decisionMetric: MetricType;
};

/**
 * Describes the message google.cloud.dataproc.logging.AutoscalerRecommendation.Outputs.
 * Use `create(AutoscalerRecommendation_OutputsSchema)` to create a new message.
 */
export const AutoscalerRecommendation_OutputsSchema: GenMessage<AutoscalerRecommendation_Outputs> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataproc_logging_autoscaler_log, 3, 1);

/**
 * The Autoscaler state.
 *
 * @generated from enum google.cloud.dataproc.logging.AutoscalerState
 */
export enum AutoscalerState {
  /**
   * @generated from enum value: AUTOSCALER_STATE_UNSPECIFIED = 0;
   */
  AUTOSCALER_STATE_UNSPECIFIED = 0,

  /**
   * The Autoscaler is sleeping and waiting for the next update.
   *
   * @generated from enum value: COOLDOWN = 1;
   */
  COOLDOWN = 1,

  /**
   * The Autoscaler is in the process of calculating its recommendation on
   * whether to scale the cluster, and if so, how to autoscale.
   *
   * @generated from enum value: RECOMMENDING = 6;
   */
  RECOMMENDING = 6,

  /**
   * The Autoscaler is scaling the cluster.
   *
   * @generated from enum value: SCALING = 2;
   */
  SCALING = 2,

  /**
   * The Autoscaler has stopped.
   *
   * @generated from enum value: STOPPED = 3;
   */
  STOPPED = 3,

  /**
   * The Autoscaler has failed.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * The Autoscaler is initializing.
   *
   * @generated from enum value: INITIALIZING = 5;
   */
  INITIALIZING = 5,
}

/**
 * Describes the enum google.cloud.dataproc.logging.AutoscalerState.
 */
export const AutoscalerStateSchema: GenEnum<AutoscalerState> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_logging_autoscaler_log, 0);

/**
 * The Autoscaling decision type.
 *
 * @generated from enum google.cloud.dataproc.logging.ScalingDecisionType
 */
export enum ScalingDecisionType {
  /**
   * @generated from enum value: SCALING_DECISION_TYPE_UNSPECIFIED = 0;
   */
  SCALING_DECISION_TYPE_UNSPECIFIED = 0,

  /**
   * Increase the number of primary and/or secondary workers.
   *
   * @generated from enum value: SCALE_UP = 1;
   */
  SCALE_UP = 1,

  /**
   * Decrease the number of primary and/or secondary workers.
   *
   * @generated from enum value: SCALE_DOWN = 2;
   */
  SCALE_DOWN = 2,

  /**
   * Not changing the number of primary or secondary workers.
   *
   * @generated from enum value: NO_SCALE = 3;
   */
  NO_SCALE = 3,

  /**
   * Scale the primary and secondary worker groups in different directions.
   *
   * @generated from enum value: MIXED = 4;
   */
  MIXED = 4,

  /**
   * Cancel the ongoing scale down operation.
   *
   * @generated from enum value: CANCEL = 5;
   */
  CANCEL = 5,

  /**
   * Do not cancel the ongoing scale down operation.
   *
   * @generated from enum value: DO_NOT_CANCEL = 6;
   */
  DO_NOT_CANCEL = 6,
}

/**
 * Describes the enum google.cloud.dataproc.logging.ScalingDecisionType.
 */
export const ScalingDecisionTypeSchema: GenEnum<ScalingDecisionType> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_logging_autoscaler_log, 1);

/**
 * @generated from enum google.cloud.dataproc.logging.ConstrainingFactor
 */
export enum ConstrainingFactor {
  /**
   * @generated from enum value: CONSTRAINING_FACTOR_UNSPECIFIED = 0;
   */
  CONSTRAINING_FACTOR_UNSPECIFIED = 0,

  /**
   * The project does not have sufficient regional, global, and or preemptible
   * quota to allocate a new VM.
   *
   * @generated from enum value: SCALING_CAPPED_DUE_TO_LACK_OF_QUOTA = 1;
   */
  SCALING_CAPPED_DUE_TO_LACK_OF_QUOTA = 1,

  /**
   * All worker groups have reached maximum size. This message will not be
   * issued if one group reached maximum size, but workers were able to be
   * allocated to another group.
   *
   * @generated from enum value: REACHED_MAXIMUM_CLUSTER_SIZE = 2;
   */
  REACHED_MAXIMUM_CLUSTER_SIZE = 2,

  /**
   * All worker groups have reached minimum size. This message will not be
   * issued if workers were able to be removed from another group that had not
   * reached minimum size.
   *
   * @generated from enum value: REACHED_MINIMUM_CLUSTER_SIZE = 3;
   */
  REACHED_MINIMUM_CLUSTER_SIZE = 3,

  /**
   * The secondary worker group cannot be scaled down by more than 1k nodes in a
   * single update request.
   *
   * @generated from enum value: SECONDARY_SCALEDOWN_SINGLE_REQUEST_LIMIT_REACHED = 4;
   */
  SECONDARY_SCALEDOWN_SINGLE_REQUEST_LIMIT_REACHED = 4,
}

/**
 * Describes the enum google.cloud.dataproc.logging.ConstrainingFactor.
 */
export const ConstrainingFactorSchema: GenEnum<ConstrainingFactor> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_logging_autoscaler_log, 2);

/**
 * The kind of metric input to the Autoscaling algorithm.
 *
 * @generated from enum google.cloud.dataproc.logging.MetricType
 */
export enum MetricType {
  /**
   * Default.
   *
   * @generated from enum value: METRIC_TYPE_UNSPECIFIED = 0;
   */
  METRIC_TYPE_UNSPECIFIED = 0,

  /**
   * The yarn memory metric.
   *
   * @generated from enum value: YARN_MEMORY = 1;
   */
  YARN_MEMORY = 1,

  /**
   * The yarn cores or vCPUs metric.
   *
   * @generated from enum value: YARN_CORES = 2;
   */
  YARN_CORES = 2,

  /**
   * The number of executors in Spark serverless.
   *
   * @generated from enum value: SPARK_EXECUTORS = 3;
   */
  SPARK_EXECUTORS = 3,
}

/**
 * Describes the enum google.cloud.dataproc.logging.MetricType.
 */
export const MetricTypeSchema: GenEnum<MetricType> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataproc_logging_autoscaler_log, 3);

