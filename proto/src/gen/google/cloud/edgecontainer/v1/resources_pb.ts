// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/edgecontainer/v1/resources.proto (package google.cloud.edgecontainer.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/edgecontainer/v1/resources.proto.
 */
export const file_google_cloud_edgecontainer_v1_resources: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * A Google Distributed Cloud Edge Kubernetes cluster.
 *
 * @generated from message google.cloud.edgecontainer.v1.Cluster
 */
export type Cluster = Message<"google.cloud.edgecontainer.v1.Cluster"> & {
  /**
   * Required. The resource name of the cluster.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time when the cluster was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the cluster was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Labels associated with this resource.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Required. Fleet configuration.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Fleet fleet = 11;
   */
  fleet?: Fleet;

  /**
   * Required. Cluster-wide networking configuration.
   *
   * @generated from field: google.cloud.edgecontainer.v1.ClusterNetworking networking = 7;
   */
  networking?: ClusterNetworking;

  /**
   * Required. Immutable. RBAC policy that will be applied and managed by GEC.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Authorization authorization = 9;
   */
  authorization?: Authorization;

  /**
   * Optional. The default maximum number of pods per node used if a maximum
   * value is not specified explicitly for a node pool in this cluster. If
   * unspecified, the Kubernetes default value will be used.
   *
   * @generated from field: int32 default_max_pods_per_node = 8;
   */
  defaultMaxPodsPerNode: number;

  /**
   * Output only. The IP address of the Kubernetes API server.
   *
   * @generated from field: string endpoint = 6;
   */
  endpoint: string;

  /**
   * Output only. The port number of the Kubernetes API server.
   *
   * @generated from field: int32 port = 19;
   */
  port: number;

  /**
   * Output only. The PEM-encoded public certificate of the cluster's CA.
   *
   * @generated from field: string cluster_ca_certificate = 10;
   */
  clusterCaCertificate: string;

  /**
   * Optional. Cluster-wide maintenance policy configuration.
   *
   * @generated from field: google.cloud.edgecontainer.v1.MaintenancePolicy maintenance_policy = 12;
   */
  maintenancePolicy?: MaintenancePolicy;

  /**
   * Output only. The control plane release version
   *
   * @generated from field: string control_plane_version = 13;
   */
  controlPlaneVersion: string;

  /**
   * Output only. The lowest release version among all worker nodes. This field
   * can be empty if the cluster does not have any worker nodes.
   *
   * @generated from field: string node_version = 14;
   */
  nodeVersion: string;

  /**
   * Optional. The configuration of the cluster control plane.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.ControlPlane control_plane = 15;
   */
  controlPlane?: Cluster_ControlPlane;

  /**
   * Optional. The configuration of the system add-ons.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.SystemAddonsConfig system_addons_config = 16;
   */
  systemAddonsConfig?: Cluster_SystemAddonsConfig;

  /**
   * Optional. IPv4 address pools for cluster data plane external load
   * balancing.
   *
   * @generated from field: repeated string external_load_balancer_ipv4_address_pools = 17;
   */
  externalLoadBalancerIpv4AddressPools: string[];

  /**
   * Optional. Remote control plane disk encryption options. This field is only
   * used when enabling CMEK support.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.ControlPlaneEncryption control_plane_encryption = 18;
   */
  controlPlaneEncryption?: Cluster_ControlPlaneEncryption;

  /**
   * Output only. The current status of the cluster.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.Status status = 20;
   */
  status: Cluster_Status;

  /**
   * Output only. All the maintenance events scheduled for the cluster,
   * including the ones ongoing, planned for the future and done in the past (up
   * to 90 days).
   *
   * @generated from field: repeated google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent maintenance_events = 21;
   */
  maintenanceEvents: Cluster_MaintenanceEvent[];

  /**
   * Optional. The target cluster version. For example: "1.5.0".
   *
   * @generated from field: string target_version = 22;
   */
  targetVersion: string;

  /**
   * Optional. The release channel a cluster is subscribed to.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.ReleaseChannel release_channel = 23;
   */
  releaseChannel: Cluster_ReleaseChannel;

  /**
   * Optional. Configuration of the cluster survivability, e.g., for the case
   * when network connectivity is lost. Note: This only applies to local control
   * plane clusters.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.SurvivabilityConfig survivability_config = 24;
   */
  survivabilityConfig?: Cluster_SurvivabilityConfig;

  /**
   * Optional. IPv6 address pools for cluster data plane external load
   * balancing.
   *
   * @generated from field: repeated string external_load_balancer_ipv6_address_pools = 25;
   */
  externalLoadBalancerIpv6AddressPools: string[];
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Cluster.
 * Use `create(ClusterSchema)` to create a new message.
 */
export const ClusterSchema: GenMessage<Cluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 0);

/**
 * Configuration of the cluster control plane.
 *
 * @generated from message google.cloud.edgecontainer.v1.Cluster.ControlPlane
 */
export type Cluster_ControlPlane = Message<"google.cloud.edgecontainer.v1.Cluster.ControlPlane"> & {
  /**
   * @generated from oneof google.cloud.edgecontainer.v1.Cluster.ControlPlane.config
   */
  config: {
    /**
     * Remote control plane configuration.
     *
     * @generated from field: google.cloud.edgecontainer.v1.Cluster.ControlPlane.Remote remote = 1;
     */
    value: Cluster_ControlPlane_Remote;
    case: "remote";
  } | {
    /**
     * Local control plane configuration.
     *
     * Warning: Local control plane clusters must be created in their own
     * project. Local control plane clusters cannot coexist in the same
     * project with any other type of clusters, including non-GDCE clusters.
     * Mixing local control plane GDCE clusters with any other type of
     * clusters in the same project can result in data loss.
     *
     * @generated from field: google.cloud.edgecontainer.v1.Cluster.ControlPlane.Local local = 2;
     */
    value: Cluster_ControlPlane_Local;
    case: "local";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Cluster.ControlPlane.
 * Use `create(Cluster_ControlPlaneSchema)` to create a new message.
 */
export const Cluster_ControlPlaneSchema: GenMessage<Cluster_ControlPlane> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 0, 0);

/**
 * Configuration specific to clusters with a control plane hosted remotely.
 *
 * @generated from message google.cloud.edgecontainer.v1.Cluster.ControlPlane.Remote
 */
export type Cluster_ControlPlane_Remote = Message<"google.cloud.edgecontainer.v1.Cluster.ControlPlane.Remote"> & {
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Cluster.ControlPlane.Remote.
 * Use `create(Cluster_ControlPlane_RemoteSchema)` to create a new message.
 */
export const Cluster_ControlPlane_RemoteSchema: GenMessage<Cluster_ControlPlane_Remote> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 0, 0, 0);

/**
 * Configuration specific to clusters with a control plane hosted locally.
 *
 * Warning: Local control plane clusters must be created in their own
 * project. Local control plane clusters cannot coexist in the same
 * project with any other type of clusters, including non-GDCE clusters.
 * Mixing local control plane GDCE clusters with any other type of
 * clusters in the same project can result in data loss.
 *
 * @generated from message google.cloud.edgecontainer.v1.Cluster.ControlPlane.Local
 */
export type Cluster_ControlPlane_Local = Message<"google.cloud.edgecontainer.v1.Cluster.ControlPlane.Local"> & {
  /**
   * Name of the Google Distributed Cloud Edge zones where this node pool
   * will be created. For example: `us-central1-edge-customer-a`.
   *
   * @generated from field: string node_location = 1;
   */
  nodeLocation: string;

  /**
   * The number of nodes to serve as replicas of the Control Plane.
   *
   * @generated from field: int32 node_count = 2;
   */
  nodeCount: number;

  /**
   * Only machines matching this filter will be allowed to host control
   * plane nodes. The filtering language accepts strings like "name=<name>",
   * and is documented here: [AIP-160](https://google.aip.dev/160).
   *
   * @generated from field: string machine_filter = 3;
   */
  machineFilter: string;

  /**
   * Policy configuration about how user applications are deployed.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.ControlPlane.SharedDeploymentPolicy shared_deployment_policy = 4;
   */
  sharedDeploymentPolicy: Cluster_ControlPlane_SharedDeploymentPolicy;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Cluster.ControlPlane.Local.
 * Use `create(Cluster_ControlPlane_LocalSchema)` to create a new message.
 */
export const Cluster_ControlPlane_LocalSchema: GenMessage<Cluster_ControlPlane_Local> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 0, 0, 1);

/**
 * Represents the policy configuration about how user applications are
 * deployed.
 *
 * @generated from enum google.cloud.edgecontainer.v1.Cluster.ControlPlane.SharedDeploymentPolicy
 */
export enum Cluster_ControlPlane_SharedDeploymentPolicy {
  /**
   * Unspecified.
   *
   * @generated from enum value: SHARED_DEPLOYMENT_POLICY_UNSPECIFIED = 0;
   */
  SHARED_DEPLOYMENT_POLICY_UNSPECIFIED = 0,

  /**
   * User applications can be deployed both on control plane and worker
   * nodes.
   *
   * @generated from enum value: ALLOWED = 1;
   */
  ALLOWED = 1,

  /**
   * User applications can not be deployed on control plane nodes and can
   * only be deployed on worker nodes.
   *
   * @generated from enum value: DISALLOWED = 2;
   */
  DISALLOWED = 2,
}

/**
 * Describes the enum google.cloud.edgecontainer.v1.Cluster.ControlPlane.SharedDeploymentPolicy.
 */
export const Cluster_ControlPlane_SharedDeploymentPolicySchema: GenEnum<Cluster_ControlPlane_SharedDeploymentPolicy> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgecontainer_v1_resources, 0, 0, 0);

/**
 * Config that customers are allowed to define for GDCE system add-ons.
 *
 * @generated from message google.cloud.edgecontainer.v1.Cluster.SystemAddonsConfig
 */
export type Cluster_SystemAddonsConfig = Message<"google.cloud.edgecontainer.v1.Cluster.SystemAddonsConfig"> & {
  /**
   * Optional. Config for Ingress.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.SystemAddonsConfig.Ingress ingress = 1;
   */
  ingress?: Cluster_SystemAddonsConfig_Ingress;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Cluster.SystemAddonsConfig.
 * Use `create(Cluster_SystemAddonsConfigSchema)` to create a new message.
 */
export const Cluster_SystemAddonsConfigSchema: GenMessage<Cluster_SystemAddonsConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 0, 1);

/**
 * Config for the Ingress add-on which allows customers to create an Ingress
 * object to manage external access to the servers in a cluster. The add-on
 * consists of istiod and istio-ingress.
 *
 * @generated from message google.cloud.edgecontainer.v1.Cluster.SystemAddonsConfig.Ingress
 */
export type Cluster_SystemAddonsConfig_Ingress = Message<"google.cloud.edgecontainer.v1.Cluster.SystemAddonsConfig.Ingress"> & {
  /**
   * Optional. Whether Ingress is disabled.
   *
   * @generated from field: bool disabled = 1;
   */
  disabled: boolean;

  /**
   * Optional. Ingress VIP.
   *
   * @generated from field: string ipv4_vip = 2;
   */
  ipv4Vip: string;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Cluster.SystemAddonsConfig.Ingress.
 * Use `create(Cluster_SystemAddonsConfig_IngressSchema)` to create a new message.
 */
export const Cluster_SystemAddonsConfig_IngressSchema: GenMessage<Cluster_SystemAddonsConfig_Ingress> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 0, 1, 0);

/**
 * Configuration for Customer-managed KMS key support for remote control plane
 * cluster disk encryption.
 *
 * @generated from message google.cloud.edgecontainer.v1.Cluster.ControlPlaneEncryption
 */
export type Cluster_ControlPlaneEncryption = Message<"google.cloud.edgecontainer.v1.Cluster.ControlPlaneEncryption"> & {
  /**
   * Immutable. The Cloud KMS CryptoKey e.g.
   * projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
   * to use for protecting control plane disks. If not specified, a
   * Google-managed key will be used instead.
   *
   * @generated from field: string kms_key = 1;
   */
  kmsKey: string;

  /**
   * Output only. The Cloud KMS CryptoKeyVersion currently in use for
   * protecting control plane disks. Only applicable if kms_key is set.
   *
   * @generated from field: string kms_key_active_version = 2;
   */
  kmsKeyActiveVersion: string;

  /**
   * Output only. Availability of the Cloud KMS CryptoKey. If not
   * `KEY_AVAILABLE`, then nodes may go offline as they cannot access their
   * local data. This can be caused by a lack of permissions to use the key,
   * or if the key is disabled or deleted.
   *
   * @generated from field: google.cloud.edgecontainer.v1.KmsKeyState kms_key_state = 3;
   */
  kmsKeyState: KmsKeyState;

  /**
   * Output only. Error status returned by Cloud KMS when using this key. This
   * field may be populated only if `kms_key_state` is not
   * `KMS_KEY_STATE_KEY_AVAILABLE`. If populated, this field contains the
   * error status reported by Cloud KMS.
   *
   * @generated from field: google.rpc.Status kms_status = 4;
   */
  kmsStatus?: Status;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Cluster.ControlPlaneEncryption.
 * Use `create(Cluster_ControlPlaneEncryptionSchema)` to create a new message.
 */
export const Cluster_ControlPlaneEncryptionSchema: GenMessage<Cluster_ControlPlaneEncryption> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 0, 2);

/**
 * A Maintenance Event is an operation that could cause temporary disruptions
 * to the cluster workloads, including Google-driven or user-initiated cluster
 * upgrades, user-initiated cluster configuration changes that require
 * restarting nodes, etc.
 *
 * @generated from message google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent
 */
export type Cluster_MaintenanceEvent = Message<"google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent"> & {
  /**
   * Output only. UUID of the maintenance event.
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Output only. The target version of the cluster.
   *
   * @generated from field: string target_version = 2;
   */
  targetVersion: string;

  /**
   * Output only. The operation for running the maintenance event. Specified
   * in the format projects/*\/locations/*\/operations/*. If the maintenance
   * event is split into multiple operations (e.g. due to maintenance
   * windows), the latest one is recorded.
   *
   * @generated from field: string operation = 3;
   */
  operation: string;

  /**
   * Output only. The type of the maintenance event.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent.Type type = 4;
   */
  type: Cluster_MaintenanceEvent_Type;

  /**
   * Output only. The schedule of the maintenance event.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent.Schedule schedule = 5;
   */
  schedule: Cluster_MaintenanceEvent_Schedule;

  /**
   * Output only. The state of the maintenance event.
   *
   * @generated from field: google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent.State state = 6;
   */
  state: Cluster_MaintenanceEvent_State;

  /**
   * Output only. The time when the maintenance event request was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 7;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the maintenance event started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 8;
   */
  startTime?: Timestamp;

  /**
   * Output only. The time when the maintenance event ended, either
   * successfully or not. If the maintenance event is split into multiple
   * maintenance windows, end_time is only updated when the whole flow ends.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 9;
   */
  endTime?: Timestamp;

  /**
   * Output only. The time when the maintenance event message was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 10;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent.
 * Use `create(Cluster_MaintenanceEventSchema)` to create a new message.
 */
export const Cluster_MaintenanceEventSchema: GenMessage<Cluster_MaintenanceEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 0, 3);

/**
 * Indicates the maintenance event type.
 *
 * @generated from enum google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent.Type
 */
export enum Cluster_MaintenanceEvent_Type {
  /**
   * Unspecified.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Upgrade initiated by users.
   *
   * @generated from enum value: USER_INITIATED_UPGRADE = 1;
   */
  USER_INITIATED_UPGRADE = 1,

  /**
   * Upgrade driven by Google.
   *
   * @generated from enum value: GOOGLE_DRIVEN_UPGRADE = 2;
   */
  GOOGLE_DRIVEN_UPGRADE = 2,
}

/**
 * Describes the enum google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent.Type.
 */
export const Cluster_MaintenanceEvent_TypeSchema: GenEnum<Cluster_MaintenanceEvent_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgecontainer_v1_resources, 0, 3, 0);

/**
 * Indicates when the maintenance event should be performed.
 *
 * @generated from enum google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent.Schedule
 */
export enum Cluster_MaintenanceEvent_Schedule {
  /**
   * Unspecified.
   *
   * @generated from enum value: SCHEDULE_UNSPECIFIED = 0;
   */
  SCHEDULE_UNSPECIFIED = 0,

  /**
   * Immediately after receiving the request.
   *
   * @generated from enum value: IMMEDIATELY = 1;
   */
  IMMEDIATELY = 1,
}

/**
 * Describes the enum google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent.Schedule.
 */
export const Cluster_MaintenanceEvent_ScheduleSchema: GenEnum<Cluster_MaintenanceEvent_Schedule> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgecontainer_v1_resources, 0, 3, 1);

/**
 * Indicates the maintenance event state.
 *
 * @generated from enum google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent.State
 */
export enum Cluster_MaintenanceEvent_State {
  /**
   * Unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The maintenance event is ongoing. The cluster might be unusable.
   *
   * @generated from enum value: RECONCILING = 1;
   */
  RECONCILING = 1,

  /**
   * The maintenance event succeeded.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The maintenance event failed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}

/**
 * Describes the enum google.cloud.edgecontainer.v1.Cluster.MaintenanceEvent.State.
 */
export const Cluster_MaintenanceEvent_StateSchema: GenEnum<Cluster_MaintenanceEvent_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgecontainer_v1_resources, 0, 3, 2);

/**
 * Configuration of the cluster survivability, e.g., for the case when network
 * connectivity is lost.
 *
 * @generated from message google.cloud.edgecontainer.v1.Cluster.SurvivabilityConfig
 */
export type Cluster_SurvivabilityConfig = Message<"google.cloud.edgecontainer.v1.Cluster.SurvivabilityConfig"> & {
  /**
   * Optional. Time period that allows the cluster nodes to be rebooted and
   * become functional without network connectivity to Google. The default 0
   * means not allowed. The maximum is 7 days.
   *
   * @generated from field: google.protobuf.Duration offline_reboot_ttl = 1;
   */
  offlineRebootTtl?: Duration;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Cluster.SurvivabilityConfig.
 * Use `create(Cluster_SurvivabilityConfigSchema)` to create a new message.
 */
export const Cluster_SurvivabilityConfigSchema: GenMessage<Cluster_SurvivabilityConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 0, 4);

/**
 * Indicates the status of the cluster.
 *
 * @generated from enum google.cloud.edgecontainer.v1.Cluster.Status
 */
export enum Cluster_Status {
  /**
   * Status unknown.
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * The cluster is being created.
   *
   * @generated from enum value: PROVISIONING = 1;
   */
  PROVISIONING = 1,

  /**
   * The cluster is created and fully usable.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The cluster is being deleted.
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,

  /**
   * The status indicates that some errors occurred while reconciling/deleting
   * the cluster.
   *
   * @generated from enum value: ERROR = 4;
   */
  ERROR = 4,

  /**
   * The cluster is undergoing some work such as version upgrades, etc.
   *
   * @generated from enum value: RECONCILING = 5;
   */
  RECONCILING = 5,
}

/**
 * Describes the enum google.cloud.edgecontainer.v1.Cluster.Status.
 */
export const Cluster_StatusSchema: GenEnum<Cluster_Status> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgecontainer_v1_resources, 0, 0);

/**
 * The release channel a cluster is subscribed to.
 *
 * @generated from enum google.cloud.edgecontainer.v1.Cluster.ReleaseChannel
 */
export enum Cluster_ReleaseChannel {
  /**
   * Unspecified release channel. This will default to the REGULAR channel.
   *
   * @generated from enum value: RELEASE_CHANNEL_UNSPECIFIED = 0;
   */
  RELEASE_CHANNEL_UNSPECIFIED = 0,

  /**
   * No release channel.
   *
   * @generated from enum value: NONE = 1;
   */
  NONE = 1,

  /**
   * Regular release channel.
   *
   * @generated from enum value: REGULAR = 2;
   */
  REGULAR = 2,
}

/**
 * Describes the enum google.cloud.edgecontainer.v1.Cluster.ReleaseChannel.
 */
export const Cluster_ReleaseChannelSchema: GenEnum<Cluster_ReleaseChannel> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgecontainer_v1_resources, 0, 1);

/**
 * Cluster-wide networking configuration.
 *
 * @generated from message google.cloud.edgecontainer.v1.ClusterNetworking
 */
export type ClusterNetworking = Message<"google.cloud.edgecontainer.v1.ClusterNetworking"> & {
  /**
   * Required. All pods in the cluster are assigned an RFC1918 IPv4 address from
   * these blocks. Only a single block is supported. This field cannot be
   * changed after creation.
   *
   * @generated from field: repeated string cluster_ipv4_cidr_blocks = 1;
   */
  clusterIpv4CidrBlocks: string[];

  /**
   * Required. All services in the cluster are assigned an RFC1918 IPv4 address
   * from these blocks. Only a single block is supported. This field cannot be
   * changed after creation.
   *
   * @generated from field: repeated string services_ipv4_cidr_blocks = 2;
   */
  servicesIpv4CidrBlocks: string[];
};

/**
 * Describes the message google.cloud.edgecontainer.v1.ClusterNetworking.
 * Use `create(ClusterNetworkingSchema)` to create a new message.
 */
export const ClusterNetworkingSchema: GenMessage<ClusterNetworking> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 1);

/**
 * Fleet related configuration.
 *
 * Fleets are a Google Cloud concept for logically organizing clusters,
 * letting you use and manage multi-cluster capabilities and apply
 * consistent policies across your systems.
 *
 * @generated from message google.cloud.edgecontainer.v1.Fleet
 */
export type Fleet = Message<"google.cloud.edgecontainer.v1.Fleet"> & {
  /**
   * Required. The name of the Fleet host project where this cluster will be
   * registered.
   *
   * Project names are formatted as
   * `projects/<project-number>`.
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Output only. The name of the managed Hub Membership resource associated to
   * this cluster.
   *
   * Membership names are formatted as
   * `projects/<project-number>/locations/global/membership/<cluster-id>`.
   *
   * @generated from field: string membership = 2;
   */
  membership: string;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Fleet.
 * Use `create(FleetSchema)` to create a new message.
 */
export const FleetSchema: GenMessage<Fleet> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 2);

/**
 * A user principal for an RBAC policy.
 *
 * @generated from message google.cloud.edgecontainer.v1.ClusterUser
 */
export type ClusterUser = Message<"google.cloud.edgecontainer.v1.ClusterUser"> & {
  /**
   * Required. An active Google username.
   *
   * @generated from field: string username = 1;
   */
  username: string;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.ClusterUser.
 * Use `create(ClusterUserSchema)` to create a new message.
 */
export const ClusterUserSchema: GenMessage<ClusterUser> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 3);

/**
 * RBAC policy that will be applied and managed by GEC.
 *
 * @generated from message google.cloud.edgecontainer.v1.Authorization
 */
export type Authorization = Message<"google.cloud.edgecontainer.v1.Authorization"> & {
  /**
   * Required. User that will be granted the cluster-admin role on the cluster,
   * providing full access to the cluster. Currently, this is a singular field,
   * but will be expanded to allow multiple admins in the future.
   *
   * @generated from field: google.cloud.edgecontainer.v1.ClusterUser admin_users = 1;
   */
  adminUsers?: ClusterUser;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Authorization.
 * Use `create(AuthorizationSchema)` to create a new message.
 */
export const AuthorizationSchema: GenMessage<Authorization> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 4);

/**
 * A set of Kubernetes nodes in a cluster with common configuration and
 * specification.
 *
 * @generated from message google.cloud.edgecontainer.v1.NodePool
 */
export type NodePool = Message<"google.cloud.edgecontainer.v1.NodePool"> & {
  /**
   * Required. The resource name of the node pool.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time when the node pool was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the node pool was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Labels associated with this resource.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Name of the Google Distributed Cloud Edge zone where this node pool will be
   * created. For example: `us-central1-edge-customer-a`.
   *
   * @generated from field: string node_location = 8;
   */
  nodeLocation: string;

  /**
   * Required. The number of nodes in the pool.
   *
   * @generated from field: int32 node_count = 6;
   */
  nodeCount: number;

  /**
   * Only machines matching this filter will be allowed to join the node pool.
   * The filtering language accepts strings like "name=<name>", and is
   * documented in more detail in [AIP-160](https://google.aip.dev/160).
   *
   * @generated from field: string machine_filter = 7;
   */
  machineFilter: string;

  /**
   * Optional. Local disk encryption options. This field is only used when
   * enabling CMEK support.
   *
   * @generated from field: google.cloud.edgecontainer.v1.NodePool.LocalDiskEncryption local_disk_encryption = 9;
   */
  localDiskEncryption?: NodePool_LocalDiskEncryption;

  /**
   * Output only. The lowest release version among all worker nodes.
   *
   * @generated from field: string node_version = 10;
   */
  nodeVersion: string;

  /**
   * Optional. Configuration for each node in the NodePool
   *
   * @generated from field: google.cloud.edgecontainer.v1.NodePool.NodeConfig node_config = 11;
   */
  nodeConfig?: NodePool_NodeConfig;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.NodePool.
 * Use `create(NodePoolSchema)` to create a new message.
 */
export const NodePoolSchema: GenMessage<NodePool> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 5);

/**
 * Configuration for CMEK support for edge machine local disk encryption.
 *
 * @generated from message google.cloud.edgecontainer.v1.NodePool.LocalDiskEncryption
 */
export type NodePool_LocalDiskEncryption = Message<"google.cloud.edgecontainer.v1.NodePool.LocalDiskEncryption"> & {
  /**
   * Immutable. The Cloud KMS CryptoKey e.g.
   * projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
   * to use for protecting node local disks. If not specified, a
   * Google-managed key will be used instead.
   *
   * @generated from field: string kms_key = 1;
   */
  kmsKey: string;

  /**
   * Output only. The Cloud KMS CryptoKeyVersion currently in use for
   * protecting node local disks. Only applicable if kms_key is set.
   *
   * @generated from field: string kms_key_active_version = 2;
   */
  kmsKeyActiveVersion: string;

  /**
   * Output only. Availability of the Cloud KMS CryptoKey. If not
   * `KEY_AVAILABLE`, then nodes may go offline as they cannot access their
   * local data. This can be caused by a lack of permissions to use the key,
   * or if the key is disabled or deleted.
   *
   * @generated from field: google.cloud.edgecontainer.v1.KmsKeyState kms_key_state = 3;
   */
  kmsKeyState: KmsKeyState;

  /**
   * Output only. Error status returned by Cloud KMS when using this key. This
   * field may be populated only if `kms_key_state` is not
   * `KMS_KEY_STATE_KEY_AVAILABLE`. If populated, this field contains the
   * error status reported by Cloud KMS.
   *
   * @generated from field: google.rpc.Status kms_status = 4;
   */
  kmsStatus?: Status;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.NodePool.LocalDiskEncryption.
 * Use `create(NodePool_LocalDiskEncryptionSchema)` to create a new message.
 */
export const NodePool_LocalDiskEncryptionSchema: GenMessage<NodePool_LocalDiskEncryption> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 5, 0);

/**
 * Configuration for each node in the NodePool
 *
 * @generated from message google.cloud.edgecontainer.v1.NodePool.NodeConfig
 */
export type NodePool_NodeConfig = Message<"google.cloud.edgecontainer.v1.NodePool.NodeConfig"> & {
  /**
   * Optional. The Kubernetes node labels
   *
   * @generated from field: map<string, string> labels = 1;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.edgecontainer.v1.NodePool.NodeConfig.
 * Use `create(NodePool_NodeConfigSchema)` to create a new message.
 */
export const NodePool_NodeConfigSchema: GenMessage<NodePool_NodeConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 5, 1);

/**
 * A Google Distributed Cloud Edge machine capable of acting as a Kubernetes
 * node.
 *
 * @generated from message google.cloud.edgecontainer.v1.Machine
 */
export type Machine = Message<"google.cloud.edgecontainer.v1.Machine"> & {
  /**
   * Required. The resource name of the machine.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time when the node pool was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the node pool was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Labels associated with this resource.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Canonical resource name of the node that this machine is responsible for
   * hosting e.g.
   * projects/{project}/locations/{location}/clusters/{cluster_id}/nodePools/{pool_id}/{node},
   * Or empty if the machine is not assigned to assume the role of a node.
   *
   * For control plane nodes hosted on edge machines, this will return
   * the following format:
   *   "projects/{project}/locations/{location}/clusters/{cluster_id}/controlPlaneNodes/{node}".
   *
   * @generated from field: string hosted_node = 5;
   */
  hostedNode: string;

  /**
   * The Google Distributed Cloud Edge zone of this machine.
   *
   * @generated from field: string zone = 6;
   */
  zone: string;

  /**
   * Output only. The software version of the machine.
   *
   * @generated from field: string version = 7;
   */
  version: string;

  /**
   * Output only. Whether the machine is disabled. If disabled, the machine is
   * unable to enter service.
   *
   * @generated from field: bool disabled = 8;
   */
  disabled: boolean;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Machine.
 * Use `create(MachineSchema)` to create a new message.
 */
export const MachineSchema: GenMessage<Machine> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 6);

/**
 * A VPN connection .
 *
 * @generated from message google.cloud.edgecontainer.v1.VpnConnection
 */
export type VpnConnection = Message<"google.cloud.edgecontainer.v1.VpnConnection"> & {
  /**
   * Required. The resource name of VPN connection
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time when the VPN connection was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time when the VPN connection was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Labels associated with this resource.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * NAT gateway IP, or WAN IP address. If a customer has multiple NAT IPs, the
   * customer needs to configure NAT such that only one external IP maps to the
   * GMEC Anthos cluster. This is empty if NAT is not used.
   *
   * @generated from field: string nat_gateway_ip = 5;
   */
  natGatewayIp: string;

  /**
   * Dynamic routing mode of the VPC network, `regional` or `global`.
   *
   * @generated from field: google.cloud.edgecontainer.v1.VpnConnection.BgpRoutingMode bgp_routing_mode = 6 [deprecated = true];
   * @deprecated
   */
  bgpRoutingMode: VpnConnection_BgpRoutingMode;

  /**
   * The canonical Cluster name to connect to. It is in the form of
   * projects/{project}/locations/{location}/clusters/{cluster}.
   *
   * @generated from field: string cluster = 7;
   */
  cluster: string;

  /**
   * The network ID of VPC to connect to.
   *
   * @generated from field: string vpc = 8;
   */
  vpc: string;

  /**
   * Optional. Project detail of the VPC network. Required if VPC is in a
   * different project than the cluster project.
   *
   * @generated from field: google.cloud.edgecontainer.v1.VpnConnection.VpcProject vpc_project = 11;
   */
  vpcProject?: VpnConnection_VpcProject;

  /**
   * Whether this VPN connection has HA enabled on cluster side. If enabled,
   * when creating VPN connection we will attempt to use 2 ANG floating IPs.
   *
   * @generated from field: bool enable_high_availability = 9;
   */
  enableHighAvailability: boolean;

  /**
   * Optional. The VPN connection Cloud Router name.
   *
   * @generated from field: string router = 12;
   */
  router: string;

  /**
   * Output only. The created connection details.
   *
   * @generated from field: google.cloud.edgecontainer.v1.VpnConnection.Details details = 10;
   */
  details?: VpnConnection_Details;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.VpnConnection.
 * Use `create(VpnConnectionSchema)` to create a new message.
 */
export const VpnConnectionSchema: GenMessage<VpnConnection> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 7);

/**
 * Project detail of the VPC network.
 *
 * @generated from message google.cloud.edgecontainer.v1.VpnConnection.VpcProject
 */
export type VpnConnection_VpcProject = Message<"google.cloud.edgecontainer.v1.VpnConnection.VpcProject"> & {
  /**
   * The project of the VPC to connect to. If not specified, it is the same as
   * the cluster project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Optional. The service account in the VPC project configured by user. It
   * is used to create/delete Cloud Router and Cloud HA VPNs for VPN
   * connection. If this SA is changed during/after a VPN connection is
   * created, you need to remove the Cloud Router and Cloud VPN resources in
   * |project_id|. It is in the form of
   * service-{project_number}@gcp-sa-edgecontainer.iam.gserviceaccount.com.
   *
   * @generated from field: string service_account = 2 [deprecated = true];
   * @deprecated
   */
  serviceAccount: string;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.VpnConnection.VpcProject.
 * Use `create(VpnConnection_VpcProjectSchema)` to create a new message.
 */
export const VpnConnection_VpcProjectSchema: GenMessage<VpnConnection_VpcProject> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 7, 0);

/**
 * The created connection details.
 *
 * @generated from message google.cloud.edgecontainer.v1.VpnConnection.Details
 */
export type VpnConnection_Details = Message<"google.cloud.edgecontainer.v1.VpnConnection.Details"> & {
  /**
   * The state of this connection.
   *
   * @generated from field: google.cloud.edgecontainer.v1.VpnConnection.Details.State state = 1;
   */
  state: VpnConnection_Details_State;

  /**
   * The error message. This is only populated when state=ERROR.
   *
   * @generated from field: string error = 2;
   */
  error: string;

  /**
   * The Cloud Router info.
   *
   * @generated from field: google.cloud.edgecontainer.v1.VpnConnection.Details.CloudRouter cloud_router = 3;
   */
  cloudRouter?: VpnConnection_Details_CloudRouter;

  /**
   * Each connection has multiple Cloud VPN gateways.
   *
   * @generated from field: repeated google.cloud.edgecontainer.v1.VpnConnection.Details.CloudVpn cloud_vpns = 4;
   */
  cloudVpns: VpnConnection_Details_CloudVpn[];
};

/**
 * Describes the message google.cloud.edgecontainer.v1.VpnConnection.Details.
 * Use `create(VpnConnection_DetailsSchema)` to create a new message.
 */
export const VpnConnection_DetailsSchema: GenMessage<VpnConnection_Details> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 7, 1);

/**
 * The Cloud Router info.
 *
 * @generated from message google.cloud.edgecontainer.v1.VpnConnection.Details.CloudRouter
 */
export type VpnConnection_Details_CloudRouter = Message<"google.cloud.edgecontainer.v1.VpnConnection.Details.CloudRouter"> & {
  /**
   * The associated Cloud Router name.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.VpnConnection.Details.CloudRouter.
 * Use `create(VpnConnection_Details_CloudRouterSchema)` to create a new message.
 */
export const VpnConnection_Details_CloudRouterSchema: GenMessage<VpnConnection_Details_CloudRouter> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 7, 1, 0);

/**
 * The Cloud VPN info.
 *
 * @generated from message google.cloud.edgecontainer.v1.VpnConnection.Details.CloudVpn
 */
export type VpnConnection_Details_CloudVpn = Message<"google.cloud.edgecontainer.v1.VpnConnection.Details.CloudVpn"> & {
  /**
   * The created Cloud VPN gateway name.
   *
   * @generated from field: string gateway = 1;
   */
  gateway: string;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.VpnConnection.Details.CloudVpn.
 * Use `create(VpnConnection_Details_CloudVpnSchema)` to create a new message.
 */
export const VpnConnection_Details_CloudVpnSchema: GenMessage<VpnConnection_Details_CloudVpn> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 7, 1, 1);

/**
 * The current connection state.
 *
 * @generated from enum google.cloud.edgecontainer.v1.VpnConnection.Details.State
 */
export enum VpnConnection_Details_State {
  /**
   * Unknown.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Connected.
   *
   * @generated from enum value: STATE_CONNECTED = 1;
   */
  CONNECTED = 1,

  /**
   * Still connecting.
   *
   * @generated from enum value: STATE_CONNECTING = 2;
   */
  CONNECTING = 2,

  /**
   * Error occurred.
   *
   * @generated from enum value: STATE_ERROR = 3;
   */
  ERROR = 3,
}

/**
 * Describes the enum google.cloud.edgecontainer.v1.VpnConnection.Details.State.
 */
export const VpnConnection_Details_StateSchema: GenEnum<VpnConnection_Details_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgecontainer_v1_resources, 7, 1, 0);

/**
 * Routing mode.
 *
 * @generated from enum google.cloud.edgecontainer.v1.VpnConnection.BgpRoutingMode
 */
export enum VpnConnection_BgpRoutingMode {
  /**
   * Unknown.
   *
   * @generated from enum value: BGP_ROUTING_MODE_UNSPECIFIED = 0;
   */
  BGP_ROUTING_MODE_UNSPECIFIED = 0,

  /**
   * Regional mode.
   *
   * @generated from enum value: REGIONAL = 1;
   */
  REGIONAL = 1,

  /**
   * Global mode.
   *
   * @generated from enum value: GLOBAL = 2;
   */
  GLOBAL = 2,
}

/**
 * Describes the enum google.cloud.edgecontainer.v1.VpnConnection.BgpRoutingMode.
 */
export const VpnConnection_BgpRoutingModeSchema: GenEnum<VpnConnection_BgpRoutingMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgecontainer_v1_resources, 7, 0);

/**
 * Metadata for a given
 * [google.cloud.location.Location][google.cloud.location.Location].
 *
 * @generated from message google.cloud.edgecontainer.v1.LocationMetadata
 */
export type LocationMetadata = Message<"google.cloud.edgecontainer.v1.LocationMetadata"> & {
  /**
   * The set of available Google Distributed Cloud Edge zones in the location.
   * The map is keyed by the lowercase ID of each zone.
   *
   * @generated from field: map<string, google.cloud.edgecontainer.v1.ZoneMetadata> available_zones = 1;
   */
  availableZones: { [key: string]: ZoneMetadata };
};

/**
 * Describes the message google.cloud.edgecontainer.v1.LocationMetadata.
 * Use `create(LocationMetadataSchema)` to create a new message.
 */
export const LocationMetadataSchema: GenMessage<LocationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 8);

/**
 * A Google Distributed Cloud Edge zone where edge machines are located.
 *
 * @generated from message google.cloud.edgecontainer.v1.ZoneMetadata
 */
export type ZoneMetadata = Message<"google.cloud.edgecontainer.v1.ZoneMetadata"> & {
  /**
   * Quota for resources in this zone.
   *
   * @generated from field: repeated google.cloud.edgecontainer.v1.Quota quota = 1;
   */
  quota: Quota[];

  /**
   * The map keyed by rack name and has value of RackType.
   *
   * @generated from field: map<string, google.cloud.edgecontainer.v1.ZoneMetadata.RackType> rack_types = 2;
   */
  rackTypes: { [key: string]: ZoneMetadata_RackType };
};

/**
 * Describes the message google.cloud.edgecontainer.v1.ZoneMetadata.
 * Use `create(ZoneMetadataSchema)` to create a new message.
 */
export const ZoneMetadataSchema: GenMessage<ZoneMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 9);

/**
 * Type of the rack.
 *
 * @generated from enum google.cloud.edgecontainer.v1.ZoneMetadata.RackType
 */
export enum ZoneMetadata_RackType {
  /**
   * Unspecified rack type, single rack also belongs to this type.
   *
   * @generated from enum value: RACK_TYPE_UNSPECIFIED = 0;
   */
  RACK_TYPE_UNSPECIFIED = 0,

  /**
   * Base rack type, a pair of two modified Config-1 racks containing
   * Aggregation switches.
   *
   * @generated from enum value: BASE = 1;
   */
  BASE = 1,

  /**
   * Expansion rack type, also known as standalone racks,
   * added by customers on demand.
   *
   * @generated from enum value: EXPANSION = 2;
   */
  EXPANSION = 2,
}

/**
 * Describes the enum google.cloud.edgecontainer.v1.ZoneMetadata.RackType.
 */
export const ZoneMetadata_RackTypeSchema: GenEnum<ZoneMetadata_RackType> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgecontainer_v1_resources, 9, 0);

/**
 * Represents quota for Edge Container resources.
 *
 * @generated from message google.cloud.edgecontainer.v1.Quota
 */
export type Quota = Message<"google.cloud.edgecontainer.v1.Quota"> & {
  /**
   * Name of the quota metric.
   *
   * @generated from field: string metric = 1;
   */
  metric: string;

  /**
   * Quota limit for this metric.
   *
   * @generated from field: double limit = 2;
   */
  limit: number;

  /**
   * Current usage of this metric.
   *
   * @generated from field: double usage = 3;
   */
  usage: number;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Quota.
 * Use `create(QuotaSchema)` to create a new message.
 */
export const QuotaSchema: GenMessage<Quota> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 10);

/**
 * Maintenance policy configuration.
 *
 * @generated from message google.cloud.edgecontainer.v1.MaintenancePolicy
 */
export type MaintenancePolicy = Message<"google.cloud.edgecontainer.v1.MaintenancePolicy"> & {
  /**
   * Specifies the maintenance window in which maintenance may be performed.
   *
   * @generated from field: google.cloud.edgecontainer.v1.MaintenanceWindow window = 1;
   */
  window?: MaintenanceWindow;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.MaintenancePolicy.
 * Use `create(MaintenancePolicySchema)` to create a new message.
 */
export const MaintenancePolicySchema: GenMessage<MaintenancePolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 11);

/**
 * Maintenance window configuration
 *
 * @generated from message google.cloud.edgecontainer.v1.MaintenanceWindow
 */
export type MaintenanceWindow = Message<"google.cloud.edgecontainer.v1.MaintenanceWindow"> & {
  /**
   * Configuration of a recurring maintenance window.
   *
   * @generated from field: google.cloud.edgecontainer.v1.RecurringTimeWindow recurring_window = 1;
   */
  recurringWindow?: RecurringTimeWindow;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.MaintenanceWindow.
 * Use `create(MaintenanceWindowSchema)` to create a new message.
 */
export const MaintenanceWindowSchema: GenMessage<MaintenanceWindow> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 12);

/**
 * Represents an arbitrary window of time that recurs.
 *
 * @generated from message google.cloud.edgecontainer.v1.RecurringTimeWindow
 */
export type RecurringTimeWindow = Message<"google.cloud.edgecontainer.v1.RecurringTimeWindow"> & {
  /**
   * The window of the first recurrence.
   *
   * @generated from field: google.cloud.edgecontainer.v1.TimeWindow window = 1;
   */
  window?: TimeWindow;

  /**
   * An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
   * this window recurs. They go on for the span of time between the start and
   * end time.
   *
   * @generated from field: string recurrence = 2;
   */
  recurrence: string;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.RecurringTimeWindow.
 * Use `create(RecurringTimeWindowSchema)` to create a new message.
 */
export const RecurringTimeWindowSchema: GenMessage<RecurringTimeWindow> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 13);

/**
 * Represents an arbitrary window of time.
 *
 * @generated from message google.cloud.edgecontainer.v1.TimeWindow
 */
export type TimeWindow = Message<"google.cloud.edgecontainer.v1.TimeWindow"> & {
  /**
   * The time that the window first starts.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time that the window ends. The end time must take place after the
   * start time.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.TimeWindow.
 * Use `create(TimeWindowSchema)` to create a new message.
 */
export const TimeWindowSchema: GenMessage<TimeWindow> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 14);

/**
 * Server configuration for supported versions and release channels.
 *
 * @generated from message google.cloud.edgecontainer.v1.ServerConfig
 */
export type ServerConfig = Message<"google.cloud.edgecontainer.v1.ServerConfig"> & {
  /**
   * Output only. Mapping from release channel to channel config.
   *
   * @generated from field: map<string, google.cloud.edgecontainer.v1.ChannelConfig> channels = 1;
   */
  channels: { [key: string]: ChannelConfig };

  /**
   * Output only. Supported versions, e.g.: ["1.4.0", "1.5.0"].
   *
   * @generated from field: repeated google.cloud.edgecontainer.v1.Version versions = 2;
   */
  versions: Version[];

  /**
   * Output only. Default version, e.g.: "1.4.0".
   *
   * @generated from field: string default_version = 3;
   */
  defaultVersion: string;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.ServerConfig.
 * Use `create(ServerConfigSchema)` to create a new message.
 */
export const ServerConfigSchema: GenMessage<ServerConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 15);

/**
 * Configuration for a release channel.
 *
 * @generated from message google.cloud.edgecontainer.v1.ChannelConfig
 */
export type ChannelConfig = Message<"google.cloud.edgecontainer.v1.ChannelConfig"> & {
  /**
   * Output only. Default version for this release channel, e.g.: "1.4.0".
   *
   * @generated from field: string default_version = 1;
   */
  defaultVersion: string;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.ChannelConfig.
 * Use `create(ChannelConfigSchema)` to create a new message.
 */
export const ChannelConfigSchema: GenMessage<ChannelConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 16);

/**
 * Version of a cluster.
 *
 * @generated from message google.cloud.edgecontainer.v1.Version
 */
export type Version = Message<"google.cloud.edgecontainer.v1.Version"> & {
  /**
   * Output only. Name of the version, e.g.: "1.4.0".
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.edgecontainer.v1.Version.
 * Use `create(VersionSchema)` to create a new message.
 */
export const VersionSchema: GenMessage<Version> = /*@__PURE__*/
  messageDesc(file_google_cloud_edgecontainer_v1_resources, 17);

/**
 * Represents the accessibility state of a customer-managed KMS key used for
 * CMEK integration.
 *
 * @generated from enum google.cloud.edgecontainer.v1.KmsKeyState
 */
export enum KmsKeyState {
  /**
   * Unspecified.
   *
   * @generated from enum value: KMS_KEY_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The key is available for use, and dependent resources should be accessible.
   *
   * @generated from enum value: KMS_KEY_STATE_KEY_AVAILABLE = 1;
   */
  KEY_AVAILABLE = 1,

  /**
   * The key is unavailable for an unspecified reason. Dependent resources may
   * be inaccessible.
   *
   * @generated from enum value: KMS_KEY_STATE_KEY_UNAVAILABLE = 2;
   */
  KEY_UNAVAILABLE = 2,
}

/**
 * Describes the enum google.cloud.edgecontainer.v1.KmsKeyState.
 */
export const KmsKeyStateSchema: GenEnum<KmsKeyState> = /*@__PURE__*/
  enumDesc(file_google_cloud_edgecontainer_v1_resources, 0);

