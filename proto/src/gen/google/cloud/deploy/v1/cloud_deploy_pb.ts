// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/deploy/v1/cloud_deploy.proto (package google.cloud.deploy.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Duration, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Date } from "../../../type/date_pb";
import { file_google_type_date } from "../../../type/date_pb";
import type { DayOfWeek } from "../../../type/dayofweek_pb";
import { file_google_type_dayofweek } from "../../../type/dayofweek_pb";
import type { TimeOfDay } from "../../../type/timeofday_pb";
import { file_google_type_timeofday } from "../../../type/timeofday_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/deploy/v1/cloud_deploy.proto.
 */
export const file_google_cloud_deploy_v1_cloud_deploy: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_type_date, file_google_type_dayofweek, file_google_type_timeofday]);

/**
 * A `DeliveryPipeline` resource in the Cloud Deploy API.
 *
 * A `DeliveryPipeline` defines a pipeline through which a Skaffold
 * configuration can progress.
 *
 * @generated from message google.cloud.deploy.v1.DeliveryPipeline
 */
export type DeliveryPipeline = Message<"google.cloud.deploy.v1.DeliveryPipeline"> & {
  /**
   * Optional. Name of the `DeliveryPipeline`. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}`.
   * The `deliveryPipeline` component must match
   * `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Unique identifier of the `DeliveryPipeline`.
   *
   * @generated from field: string uid = 2;
   */
  uid: string;

  /**
   * Description of the `DeliveryPipeline`. Max length is 255 characters.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * User annotations. These attributes can only be set and used by the
   * user, and not by Cloud Deploy.
   *
   * @generated from field: map<string, string> annotations = 4;
   */
  annotations: { [key: string]: string };

  /**
   * Labels are attributes that can be set and used by both the
   * user and by Cloud Deploy. Labels must meet the following constraints:
   *
   * * Keys and values can contain only lowercase letters, numeric characters,
   * underscores, and dashes.
   * * All characters must use UTF-8 encoding, and international characters are
   * allowed.
   * * Keys must start with a lowercase letter or international character.
   * * Each resource is limited to a maximum of 64 labels.
   *
   * Both keys and values are additionally constrained to be <= 128 bytes.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * Output only. Time at which the pipeline was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Output only. Most recent time at which the pipeline was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 7;
   */
  updateTime?: Timestamp;

  /**
   * The ordering configuration of the `DeliveryPipeline`.
   *
   * @generated from oneof google.cloud.deploy.v1.DeliveryPipeline.pipeline
   */
  pipeline: {
    /**
     * SerialPipeline defines a sequential set of stages for a
     * `DeliveryPipeline`.
     *
     * @generated from field: google.cloud.deploy.v1.SerialPipeline serial_pipeline = 8;
     */
    value: SerialPipeline;
    case: "serialPipeline";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Information around the state of the Delivery Pipeline.
   *
   * @generated from field: google.cloud.deploy.v1.PipelineCondition condition = 11;
   */
  condition?: PipelineCondition;

  /**
   * This checksum is computed by the server based on the value of other
   * fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 10;
   */
  etag: string;

  /**
   * When suspended, no new releases or rollouts can be created,
   * but in-progress ones will complete.
   *
   * @generated from field: bool suspended = 12;
   */
  suspended: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.DeliveryPipeline.
 * Use `create(DeliveryPipelineSchema)` to create a new message.
 */
export const DeliveryPipelineSchema: GenMessage<DeliveryPipeline> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 0);

/**
 * SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.
 *
 * @generated from message google.cloud.deploy.v1.SerialPipeline
 */
export type SerialPipeline = Message<"google.cloud.deploy.v1.SerialPipeline"> & {
  /**
   * Each stage specifies configuration for a `Target`. The ordering
   * of this list defines the promotion flow.
   *
   * @generated from field: repeated google.cloud.deploy.v1.Stage stages = 1;
   */
  stages: Stage[];
};

/**
 * Describes the message google.cloud.deploy.v1.SerialPipeline.
 * Use `create(SerialPipelineSchema)` to create a new message.
 */
export const SerialPipelineSchema: GenMessage<SerialPipeline> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 1);

/**
 * Stage specifies a location to which to deploy.
 *
 * @generated from message google.cloud.deploy.v1.Stage
 */
export type Stage = Message<"google.cloud.deploy.v1.Stage"> & {
  /**
   * The target_id to which this stage points. This field refers exclusively to
   * the last segment of a target name. For example, this field would just be
   * `my-target` (rather than
   * `projects/project/locations/location/targets/my-target`). The location of
   * the `Target` is inferred to be the same as the location of the
   * `DeliveryPipeline` that contains this `Stage`.
   *
   * @generated from field: string target_id = 1;
   */
  targetId: string;

  /**
   * Skaffold profiles to use when rendering the manifest for this stage's
   * `Target`.
   *
   * @generated from field: repeated string profiles = 2;
   */
  profiles: string[];

  /**
   * Optional. The strategy to use for a `Rollout` to this stage.
   *
   * @generated from field: google.cloud.deploy.v1.Strategy strategy = 5;
   */
  strategy?: Strategy;

  /**
   * Optional. The deploy parameters to use for the target in this stage.
   *
   * @generated from field: repeated google.cloud.deploy.v1.DeployParameters deploy_parameters = 6;
   */
  deployParameters: DeployParameters[];
};

/**
 * Describes the message google.cloud.deploy.v1.Stage.
 * Use `create(StageSchema)` to create a new message.
 */
export const StageSchema: GenMessage<Stage> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 2);

/**
 * DeployParameters contains deploy parameters information.
 *
 * @generated from message google.cloud.deploy.v1.DeployParameters
 */
export type DeployParameters = Message<"google.cloud.deploy.v1.DeployParameters"> & {
  /**
   * Required. Values are deploy parameters in key-value pairs.
   *
   * @generated from field: map<string, string> values = 1;
   */
  values: { [key: string]: string };

  /**
   * Optional. Deploy parameters are applied to targets with match labels.
   * If unspecified, deploy parameters are applied to all targets (including
   * child targets of a multi-target).
   *
   * @generated from field: map<string, string> match_target_labels = 2;
   */
  matchTargetLabels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.deploy.v1.DeployParameters.
 * Use `create(DeployParametersSchema)` to create a new message.
 */
export const DeployParametersSchema: GenMessage<DeployParameters> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 3);

/**
 * Strategy contains deployment strategy information.
 *
 * @generated from message google.cloud.deploy.v1.Strategy
 */
export type Strategy = Message<"google.cloud.deploy.v1.Strategy"> & {
  /**
   * Deployment strategy details.
   *
   * @generated from oneof google.cloud.deploy.v1.Strategy.deployment_strategy
   */
  deploymentStrategy: {
    /**
     * Standard deployment strategy executes a single deploy and allows
     * verifying the deployment.
     *
     * @generated from field: google.cloud.deploy.v1.Standard standard = 1;
     */
    value: Standard;
    case: "standard";
  } | {
    /**
     * Canary deployment strategy provides progressive percentage based
     * deployments to a Target.
     *
     * @generated from field: google.cloud.deploy.v1.Canary canary = 2;
     */
    value: Canary;
    case: "canary";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.Strategy.
 * Use `create(StrategySchema)` to create a new message.
 */
export const StrategySchema: GenMessage<Strategy> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 4);

/**
 * Predeploy contains the predeploy job configuration information.
 *
 * @generated from message google.cloud.deploy.v1.Predeploy
 */
export type Predeploy = Message<"google.cloud.deploy.v1.Predeploy"> & {
  /**
   * Optional. A sequence of Skaffold custom actions to invoke during execution
   * of the predeploy job.
   *
   * @generated from field: repeated string actions = 1;
   */
  actions: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.Predeploy.
 * Use `create(PredeploySchema)` to create a new message.
 */
export const PredeploySchema: GenMessage<Predeploy> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 5);

/**
 * Postdeploy contains the postdeploy job configuration information.
 *
 * @generated from message google.cloud.deploy.v1.Postdeploy
 */
export type Postdeploy = Message<"google.cloud.deploy.v1.Postdeploy"> & {
  /**
   * Optional. A sequence of Skaffold custom actions to invoke during execution
   * of the postdeploy job.
   *
   * @generated from field: repeated string actions = 1;
   */
  actions: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.Postdeploy.
 * Use `create(PostdeploySchema)` to create a new message.
 */
export const PostdeploySchema: GenMessage<Postdeploy> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 6);

/**
 * Standard represents the standard deployment strategy.
 *
 * @generated from message google.cloud.deploy.v1.Standard
 */
export type Standard = Message<"google.cloud.deploy.v1.Standard"> & {
  /**
   * Whether to verify a deployment.
   *
   * @generated from field: bool verify = 1;
   */
  verify: boolean;

  /**
   * Optional. Configuration for the predeploy job. If this is not configured,
   * predeploy job will not be present.
   *
   * @generated from field: google.cloud.deploy.v1.Predeploy predeploy = 2;
   */
  predeploy?: Predeploy;

  /**
   * Optional. Configuration for the postdeploy job. If this is not configured,
   * postdeploy job will not be present.
   *
   * @generated from field: google.cloud.deploy.v1.Postdeploy postdeploy = 3;
   */
  postdeploy?: Postdeploy;
};

/**
 * Describes the message google.cloud.deploy.v1.Standard.
 * Use `create(StandardSchema)` to create a new message.
 */
export const StandardSchema: GenMessage<Standard> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 7);

/**
 * Canary represents the canary deployment strategy.
 *
 * @generated from message google.cloud.deploy.v1.Canary
 */
export type Canary = Message<"google.cloud.deploy.v1.Canary"> & {
  /**
   * Optional. Runtime specific configurations for the deployment strategy. The
   * runtime configuration is used to determine how Cloud Deploy will split
   * traffic to enable a progressive deployment.
   *
   * @generated from field: google.cloud.deploy.v1.RuntimeConfig runtime_config = 1;
   */
  runtimeConfig?: RuntimeConfig;

  /**
   * The mode to use for the canary deployment strategy.
   *
   * @generated from oneof google.cloud.deploy.v1.Canary.mode
   */
  mode: {
    /**
     * Configures the progressive based deployment for a Target.
     *
     * @generated from field: google.cloud.deploy.v1.CanaryDeployment canary_deployment = 2;
     */
    value: CanaryDeployment;
    case: "canaryDeployment";
  } | {
    /**
     * Configures the progressive based deployment for a Target, but allows
     * customizing at the phase level where a phase represents each of the
     * percentage deployments.
     *
     * @generated from field: google.cloud.deploy.v1.CustomCanaryDeployment custom_canary_deployment = 3;
     */
    value: CustomCanaryDeployment;
    case: "customCanaryDeployment";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.Canary.
 * Use `create(CanarySchema)` to create a new message.
 */
export const CanarySchema: GenMessage<Canary> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 8);

/**
 * CanaryDeployment represents the canary deployment configuration
 *
 * @generated from message google.cloud.deploy.v1.CanaryDeployment
 */
export type CanaryDeployment = Message<"google.cloud.deploy.v1.CanaryDeployment"> & {
  /**
   * Required. The percentage based deployments that will occur as a part of a
   * `Rollout`. List is expected in ascending order and each integer n is
   * 0 <= n < 100.
   * If the GatewayServiceMesh is configured for Kubernetes, then the range for
   * n is 0 <= n <= 100.
   *
   * @generated from field: repeated int32 percentages = 1;
   */
  percentages: number[];

  /**
   * Whether to run verify tests after each percentage deployment.
   *
   * @generated from field: bool verify = 2;
   */
  verify: boolean;

  /**
   * Optional. Configuration for the predeploy job of the first phase. If this
   * is not configured, there will be no predeploy job for this phase.
   *
   * @generated from field: google.cloud.deploy.v1.Predeploy predeploy = 3;
   */
  predeploy?: Predeploy;

  /**
   * Optional. Configuration for the postdeploy job of the last phase. If this
   * is not configured, there will be no postdeploy job for this phase.
   *
   * @generated from field: google.cloud.deploy.v1.Postdeploy postdeploy = 4;
   */
  postdeploy?: Postdeploy;
};

/**
 * Describes the message google.cloud.deploy.v1.CanaryDeployment.
 * Use `create(CanaryDeploymentSchema)` to create a new message.
 */
export const CanaryDeploymentSchema: GenMessage<CanaryDeployment> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 9);

/**
 * CustomCanaryDeployment represents the custom canary deployment
 * configuration.
 *
 * @generated from message google.cloud.deploy.v1.CustomCanaryDeployment
 */
export type CustomCanaryDeployment = Message<"google.cloud.deploy.v1.CustomCanaryDeployment"> & {
  /**
   * Required. Configuration for each phase in the canary deployment in the
   * order executed.
   *
   * @generated from field: repeated google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig phase_configs = 1;
   */
  phaseConfigs: CustomCanaryDeployment_PhaseConfig[];
};

/**
 * Describes the message google.cloud.deploy.v1.CustomCanaryDeployment.
 * Use `create(CustomCanaryDeploymentSchema)` to create a new message.
 */
export const CustomCanaryDeploymentSchema: GenMessage<CustomCanaryDeployment> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 10);

/**
 * PhaseConfig represents the configuration for a phase in the custom
 * canary deployment.
 *
 * @generated from message google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
 */
export type CustomCanaryDeployment_PhaseConfig = Message<"google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig"> & {
  /**
   * Required. The ID to assign to the `Rollout` phase.
   * This value must consist of lower-case letters, numbers, and hyphens,
   * start with a letter and end with a letter or a number, and have a max
   * length of 63 characters. In other words, it must match the following
   * regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
   *
   * @generated from field: string phase_id = 1;
   */
  phaseId: string;

  /**
   * Required. Percentage deployment for the phase.
   *
   * @generated from field: int32 percentage = 2;
   */
  percentage: number;

  /**
   * Skaffold profiles to use when rendering the manifest for this phase.
   * These are in addition to the profiles list specified in the
   * `DeliveryPipeline` stage.
   *
   * @generated from field: repeated string profiles = 3;
   */
  profiles: string[];

  /**
   * Whether to run verify tests after the deployment.
   *
   * @generated from field: bool verify = 4;
   */
  verify: boolean;

  /**
   * Optional. Configuration for the predeploy job of this phase. If this is
   * not configured, there will be no predeploy job for this phase.
   *
   * @generated from field: google.cloud.deploy.v1.Predeploy predeploy = 5;
   */
  predeploy?: Predeploy;

  /**
   * Optional. Configuration for the postdeploy job of this phase. If this is
   * not configured, there will be no postdeploy job for this phase.
   *
   * @generated from field: google.cloud.deploy.v1.Postdeploy postdeploy = 6;
   */
  postdeploy?: Postdeploy;
};

/**
 * Describes the message google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.
 * Use `create(CustomCanaryDeployment_PhaseConfigSchema)` to create a new message.
 */
export const CustomCanaryDeployment_PhaseConfigSchema: GenMessage<CustomCanaryDeployment_PhaseConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 10, 0);

/**
 * KubernetesConfig contains the Kubernetes runtime configuration.
 *
 * @generated from message google.cloud.deploy.v1.KubernetesConfig
 */
export type KubernetesConfig = Message<"google.cloud.deploy.v1.KubernetesConfig"> & {
  /**
   * The service definition configuration.
   *
   * @generated from oneof google.cloud.deploy.v1.KubernetesConfig.service_definition
   */
  serviceDefinition: {
    /**
     * Kubernetes Gateway API service mesh configuration.
     *
     * @generated from field: google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh gateway_service_mesh = 1;
     */
    value: KubernetesConfig_GatewayServiceMesh;
    case: "gatewayServiceMesh";
  } | {
    /**
     * Kubernetes Service networking configuration.
     *
     * @generated from field: google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking service_networking = 2;
     */
    value: KubernetesConfig_ServiceNetworking;
    case: "serviceNetworking";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.KubernetesConfig.
 * Use `create(KubernetesConfigSchema)` to create a new message.
 */
export const KubernetesConfigSchema: GenMessage<KubernetesConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 11);

/**
 * Information about the Kubernetes Gateway API service mesh configuration.
 *
 * @generated from message google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
 */
export type KubernetesConfig_GatewayServiceMesh = Message<"google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh"> & {
  /**
   * Required. Name of the Gateway API HTTPRoute.
   *
   * @generated from field: string http_route = 1;
   */
  httpRoute: string;

  /**
   * Required. Name of the Kubernetes Service.
   *
   * @generated from field: string service = 2;
   */
  service: string;

  /**
   * Required. Name of the Kubernetes Deployment whose traffic is managed by
   * the specified HTTPRoute and Service.
   *
   * @generated from field: string deployment = 3;
   */
  deployment: string;

  /**
   * Optional. The time to wait for route updates to propagate. The maximum
   * configurable time is 3 hours, in seconds format. If unspecified, there is
   * no wait time.
   *
   * @generated from field: google.protobuf.Duration route_update_wait_time = 4;
   */
  routeUpdateWaitTime?: Duration;

  /**
   * Optional. The amount of time to migrate traffic back from the canary
   * Service to the original Service during the stable phase deployment. If
   * specified, must be between 15s and 3600s. If unspecified, there is no
   * cutback time.
   *
   * @generated from field: google.protobuf.Duration stable_cutback_duration = 5;
   */
  stableCutbackDuration?: Duration;

  /**
   * Optional. The label to use when selecting Pods for the Deployment and
   * Service resources. This label must already be present in both resources.
   *
   * @generated from field: string pod_selector_label = 6;
   */
  podSelectorLabel: string;
};

/**
 * Describes the message google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh.
 * Use `create(KubernetesConfig_GatewayServiceMeshSchema)` to create a new message.
 */
export const KubernetesConfig_GatewayServiceMeshSchema: GenMessage<KubernetesConfig_GatewayServiceMesh> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 11, 0);

/**
 * Information about the Kubernetes Service networking configuration.
 *
 * @generated from message google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
 */
export type KubernetesConfig_ServiceNetworking = Message<"google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking"> & {
  /**
   * Required. Name of the Kubernetes Service.
   *
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * Required. Name of the Kubernetes Deployment whose traffic is managed by
   * the specified Service.
   *
   * @generated from field: string deployment = 2;
   */
  deployment: string;

  /**
   * Optional. Whether to disable Pod overprovisioning. If Pod
   * overprovisioning is disabled then Cloud Deploy will limit the number of
   * total Pods used for the deployment strategy to the number of Pods the
   * Deployment has on the cluster.
   *
   * @generated from field: bool disable_pod_overprovisioning = 3;
   */
  disablePodOverprovisioning: boolean;

  /**
   * Optional. The label to use when selecting Pods for the Deployment
   * resource. This label must already be present in the Deployment.
   *
   * @generated from field: string pod_selector_label = 4;
   */
  podSelectorLabel: string;
};

/**
 * Describes the message google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking.
 * Use `create(KubernetesConfig_ServiceNetworkingSchema)` to create a new message.
 */
export const KubernetesConfig_ServiceNetworkingSchema: GenMessage<KubernetesConfig_ServiceNetworking> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 11, 1);

/**
 * CloudRunConfig contains the Cloud Run runtime configuration.
 *
 * @generated from message google.cloud.deploy.v1.CloudRunConfig
 */
export type CloudRunConfig = Message<"google.cloud.deploy.v1.CloudRunConfig"> & {
  /**
   * Whether Cloud Deploy should update the traffic stanza in a Cloud Run
   * Service on the user's behalf to facilitate traffic splitting. This is
   * required to be true for CanaryDeployments, but optional for
   * CustomCanaryDeployments.
   *
   * @generated from field: bool automatic_traffic_control = 1;
   */
  automaticTrafficControl: boolean;

  /**
   * Optional. A list of tags that are added to the canary revision while the
   * canary phase is in progress.
   *
   * @generated from field: repeated string canary_revision_tags = 2;
   */
  canaryRevisionTags: string[];

  /**
   * Optional. A list of tags that are added to the prior revision while the
   * canary phase is in progress.
   *
   * @generated from field: repeated string prior_revision_tags = 3;
   */
  priorRevisionTags: string[];

  /**
   * Optional. A list of tags that are added to the final stable revision when
   * the stable phase is applied.
   *
   * @generated from field: repeated string stable_revision_tags = 4;
   */
  stableRevisionTags: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.CloudRunConfig.
 * Use `create(CloudRunConfigSchema)` to create a new message.
 */
export const CloudRunConfigSchema: GenMessage<CloudRunConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 12);

/**
 * RuntimeConfig contains the runtime specific configurations for a deployment
 * strategy.
 *
 * @generated from message google.cloud.deploy.v1.RuntimeConfig
 */
export type RuntimeConfig = Message<"google.cloud.deploy.v1.RuntimeConfig"> & {
  /**
   * The runtime configuration details.
   *
   * @generated from oneof google.cloud.deploy.v1.RuntimeConfig.runtime_config
   */
  runtimeConfig: {
    /**
     * Kubernetes runtime configuration.
     *
     * @generated from field: google.cloud.deploy.v1.KubernetesConfig kubernetes = 1;
     */
    value: KubernetesConfig;
    case: "kubernetes";
  } | {
    /**
     * Cloud Run runtime configuration.
     *
     * @generated from field: google.cloud.deploy.v1.CloudRunConfig cloud_run = 2;
     */
    value: CloudRunConfig;
    case: "cloudRun";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.RuntimeConfig.
 * Use `create(RuntimeConfigSchema)` to create a new message.
 */
export const RuntimeConfigSchema: GenMessage<RuntimeConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 13);

/**
 * PipelineReadyCondition contains information around the status of the
 * Pipeline.
 *
 * @generated from message google.cloud.deploy.v1.PipelineReadyCondition
 */
export type PipelineReadyCondition = Message<"google.cloud.deploy.v1.PipelineReadyCondition"> & {
  /**
   * True if the Pipeline is in a valid state. Otherwise at least one condition
   * in `PipelineCondition` is in an invalid state. Iterate over those
   * conditions and see which condition(s) has status = false to find out what
   * is wrong with the Pipeline.
   *
   * @generated from field: bool status = 3;
   */
  status: boolean;

  /**
   * Last time the condition was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.deploy.v1.PipelineReadyCondition.
 * Use `create(PipelineReadyConditionSchema)` to create a new message.
 */
export const PipelineReadyConditionSchema: GenMessage<PipelineReadyCondition> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 14);

/**
 * `TargetsPresentCondition` contains information on any Targets referenced in
 * the Delivery Pipeline that do not actually exist.
 *
 * @generated from message google.cloud.deploy.v1.TargetsPresentCondition
 */
export type TargetsPresentCondition = Message<"google.cloud.deploy.v1.TargetsPresentCondition"> & {
  /**
   * True if there aren't any missing Targets.
   *
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * The list of Target names that do not exist. For example,
   * `projects/{project_id}/locations/{location_name}/targets/{target_name}`.
   *
   * @generated from field: repeated string missing_targets = 2;
   */
  missingTargets: string[];

  /**
   * Last time the condition was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.deploy.v1.TargetsPresentCondition.
 * Use `create(TargetsPresentConditionSchema)` to create a new message.
 */
export const TargetsPresentConditionSchema: GenMessage<TargetsPresentCondition> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 15);

/**
 * TargetsTypeCondition contains information on whether the Targets defined in
 * the Delivery Pipeline are of the same type.
 *
 * @generated from message google.cloud.deploy.v1.TargetsTypeCondition
 */
export type TargetsTypeCondition = Message<"google.cloud.deploy.v1.TargetsTypeCondition"> & {
  /**
   * True if the targets are all a comparable type. For example this is true if
   * all targets are GKE clusters. This is false if some targets are Cloud Run
   * targets and others are GKE clusters.
   *
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * Human readable error message.
   *
   * @generated from field: string error_details = 2;
   */
  errorDetails: string;
};

/**
 * Describes the message google.cloud.deploy.v1.TargetsTypeCondition.
 * Use `create(TargetsTypeConditionSchema)` to create a new message.
 */
export const TargetsTypeConditionSchema: GenMessage<TargetsTypeCondition> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 16);

/**
 * PipelineCondition contains all conditions relevant to a Delivery Pipeline.
 *
 * @generated from message google.cloud.deploy.v1.PipelineCondition
 */
export type PipelineCondition = Message<"google.cloud.deploy.v1.PipelineCondition"> & {
  /**
   * Details around the Pipeline's overall status.
   *
   * @generated from field: google.cloud.deploy.v1.PipelineReadyCondition pipeline_ready_condition = 1;
   */
  pipelineReadyCondition?: PipelineReadyCondition;

  /**
   * Details around targets enumerated in the pipeline.
   *
   * @generated from field: google.cloud.deploy.v1.TargetsPresentCondition targets_present_condition = 3;
   */
  targetsPresentCondition?: TargetsPresentCondition;

  /**
   * Details on the whether the targets enumerated in the pipeline are of the
   * same type.
   *
   * @generated from field: google.cloud.deploy.v1.TargetsTypeCondition targets_type_condition = 4;
   */
  targetsTypeCondition?: TargetsTypeCondition;
};

/**
 * Describes the message google.cloud.deploy.v1.PipelineCondition.
 * Use `create(PipelineConditionSchema)` to create a new message.
 */
export const PipelineConditionSchema: GenMessage<PipelineCondition> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 17);

/**
 * The request object for `ListDeliveryPipelines`.
 *
 * @generated from message google.cloud.deploy.v1.ListDeliveryPipelinesRequest
 */
export type ListDeliveryPipelinesRequest = Message<"google.cloud.deploy.v1.ListDeliveryPipelinesRequest"> & {
  /**
   * Required. The parent, which owns this collection of pipelines. Format must
   * be `projects/{project_id}/locations/{location_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of pipelines to return. The service may return
   * fewer than this value. If unspecified, at most 50 pipelines will
   * be returned. The maximum value is 1000; values above 1000 will be set
   * to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListDeliveryPipelines` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter pipelines to be returned. See https://google.aip.dev/160 for more
   * details.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Field to sort by. See https://google.aip.dev/132#ordering for more details.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.deploy.v1.ListDeliveryPipelinesRequest.
 * Use `create(ListDeliveryPipelinesRequestSchema)` to create a new message.
 */
export const ListDeliveryPipelinesRequestSchema: GenMessage<ListDeliveryPipelinesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 18);

/**
 * The response object from `ListDeliveryPipelines`.
 *
 * @generated from message google.cloud.deploy.v1.ListDeliveryPipelinesResponse
 */
export type ListDeliveryPipelinesResponse = Message<"google.cloud.deploy.v1.ListDeliveryPipelinesResponse"> & {
  /**
   * The `DeliveryPipeline` objects.
   *
   * @generated from field: repeated google.cloud.deploy.v1.DeliveryPipeline delivery_pipelines = 1;
   */
  deliveryPipelines: DeliveryPipeline[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.ListDeliveryPipelinesResponse.
 * Use `create(ListDeliveryPipelinesResponseSchema)` to create a new message.
 */
export const ListDeliveryPipelinesResponseSchema: GenMessage<ListDeliveryPipelinesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 19);

/**
 * The request object for `GetDeliveryPipeline`
 *
 * @generated from message google.cloud.deploy.v1.GetDeliveryPipelineRequest
 */
export type GetDeliveryPipelineRequest = Message<"google.cloud.deploy.v1.GetDeliveryPipelineRequest"> & {
  /**
   * Required. Name of the `DeliveryPipeline`. Format must be
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GetDeliveryPipelineRequest.
 * Use `create(GetDeliveryPipelineRequestSchema)` to create a new message.
 */
export const GetDeliveryPipelineRequestSchema: GenMessage<GetDeliveryPipelineRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 20);

/**
 * The request object for `CreateDeliveryPipeline`.
 *
 * @generated from message google.cloud.deploy.v1.CreateDeliveryPipelineRequest
 */
export type CreateDeliveryPipelineRequest = Message<"google.cloud.deploy.v1.CreateDeliveryPipelineRequest"> & {
  /**
   * Required. The parent collection in which the `DeliveryPipeline` must be
   * created. The format is `projects/{project_id}/locations/{location_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. ID of the `DeliveryPipeline`.
   *
   * @generated from field: string delivery_pipeline_id = 2;
   */
  deliveryPipelineId: string;

  /**
   * Required. The `DeliveryPipeline` to create.
   *
   * @generated from field: google.cloud.deploy.v1.DeliveryPipeline delivery_pipeline = 3;
   */
  deliveryPipeline?: DeliveryPipeline;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.CreateDeliveryPipelineRequest.
 * Use `create(CreateDeliveryPipelineRequestSchema)` to create a new message.
 */
export const CreateDeliveryPipelineRequestSchema: GenMessage<CreateDeliveryPipelineRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 21);

/**
 * The request object for `UpdateDeliveryPipeline`.
 *
 * @generated from message google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
 */
export type UpdateDeliveryPipelineRequest = Message<"google.cloud.deploy.v1.UpdateDeliveryPipelineRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten by the
   * update in the `DeliveryPipeline` resource. The fields specified in the
   * update_mask are relative to the resource, not the full request. A field
   * will be overwritten if it's in the mask. If the user doesn't provide a mask
   * then all fields are overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The `DeliveryPipeline` to update.
   *
   * @generated from field: google.cloud.deploy.v1.DeliveryPipeline delivery_pipeline = 2;
   */
  deliveryPipeline?: DeliveryPipeline;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;

  /**
   * Optional. If set to true, updating a `DeliveryPipeline` that does not exist
   * will result in the creation of a new `DeliveryPipeline`.
   *
   * @generated from field: bool allow_missing = 4;
   */
  allowMissing: boolean;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.UpdateDeliveryPipelineRequest.
 * Use `create(UpdateDeliveryPipelineRequestSchema)` to create a new message.
 */
export const UpdateDeliveryPipelineRequestSchema: GenMessage<UpdateDeliveryPipelineRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 22);

/**
 * The request object for `DeleteDeliveryPipeline`.
 *
 * @generated from message google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
 */
export type DeleteDeliveryPipelineRequest = Message<"google.cloud.deploy.v1.DeleteDeliveryPipelineRequest"> & {
  /**
   * Required. The name of the `DeliveryPipeline` to delete. The format is
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Optional. If set to true, then deleting an already deleted or non-existing
   * `DeliveryPipeline` will succeed.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;

  /**
   * Optional. If set, validate the request and preview the review, but do not
   * actually post it.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;

  /**
   * Optional. If set to true, all child resources under this pipeline will also
   * be deleted. Otherwise, the request will only work if the pipeline has no
   * child resources.
   *
   * @generated from field: bool force = 6;
   */
  force: boolean;

  /**
   * Optional. This checksum is computed by the server based on the value of
   * other fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 5;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.deploy.v1.DeleteDeliveryPipelineRequest.
 * Use `create(DeleteDeliveryPipelineRequestSchema)` to create a new message.
 */
export const DeleteDeliveryPipelineRequestSchema: GenMessage<DeleteDeliveryPipelineRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 23);

/**
 * Configs for the Rollback rollout.
 *
 * @generated from message google.cloud.deploy.v1.RollbackTargetConfig
 */
export type RollbackTargetConfig = Message<"google.cloud.deploy.v1.RollbackTargetConfig"> & {
  /**
   * Optional. The rollback `Rollout` to create.
   *
   * @generated from field: google.cloud.deploy.v1.Rollout rollout = 1;
   */
  rollout?: Rollout;

  /**
   * Optional. The starting phase ID for the `Rollout`. If unspecified, the
   * `Rollout` will start in the stable phase.
   *
   * @generated from field: string starting_phase_id = 2;
   */
  startingPhaseId: string;
};

/**
 * Describes the message google.cloud.deploy.v1.RollbackTargetConfig.
 * Use `create(RollbackTargetConfigSchema)` to create a new message.
 */
export const RollbackTargetConfigSchema: GenMessage<RollbackTargetConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 24);

/**
 * The request object for `RollbackTarget`.
 *
 * @generated from message google.cloud.deploy.v1.RollbackTargetRequest
 */
export type RollbackTargetRequest = Message<"google.cloud.deploy.v1.RollbackTargetRequest"> & {
  /**
   * Required. The `DeliveryPipeline` for which the rollback `Rollout` must be
   * created. The format is
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. ID of the `Target` that is being rolled back.
   *
   * @generated from field: string target_id = 2;
   */
  targetId: string;

  /**
   * Required. ID of the rollback `Rollout` to create.
   *
   * @generated from field: string rollout_id = 3;
   */
  rolloutId: string;

  /**
   * Optional. ID of the `Release` to roll back to. If this isn't specified, the
   * previous successful `Rollout` to the specified target will be used to
   * determine the `Release`.
   *
   * @generated from field: string release_id = 4;
   */
  releaseId: string;

  /**
   * Optional. If provided, this must be the latest `Rollout` that is on the
   * `Target`.
   *
   * @generated from field: string rollout_to_roll_back = 5;
   */
  rolloutToRollBack: string;

  /**
   * Optional. Configs for the rollback `Rollout`.
   *
   * @generated from field: google.cloud.deploy.v1.RollbackTargetConfig rollback_config = 6;
   */
  rollbackConfig?: RollbackTargetConfig;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with a `RollbackTargetResponse`.
   *
   * @generated from field: bool validate_only = 7;
   */
  validateOnly: boolean;

  /**
   * Optional. Deploy policies to override. Format is
   * `projects/{project}/locations/{location}/deployPolicies/{deploy_policy}`.
   *
   * @generated from field: repeated string override_deploy_policy = 9;
   */
  overrideDeployPolicy: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.RollbackTargetRequest.
 * Use `create(RollbackTargetRequestSchema)` to create a new message.
 */
export const RollbackTargetRequestSchema: GenMessage<RollbackTargetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 25);

/**
 * The response object from `RollbackTarget`.
 *
 * @generated from message google.cloud.deploy.v1.RollbackTargetResponse
 */
export type RollbackTargetResponse = Message<"google.cloud.deploy.v1.RollbackTargetResponse"> & {
  /**
   * The config of the rollback `Rollout` created or will be created.
   *
   * @generated from field: google.cloud.deploy.v1.RollbackTargetConfig rollback_config = 1;
   */
  rollbackConfig?: RollbackTargetConfig;
};

/**
 * Describes the message google.cloud.deploy.v1.RollbackTargetResponse.
 * Use `create(RollbackTargetResponseSchema)` to create a new message.
 */
export const RollbackTargetResponseSchema: GenMessage<RollbackTargetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 26);

/**
 * A `Target` resource in the Cloud Deploy API.
 *
 * A `Target` defines a location to which a Skaffold configuration
 * can be deployed.
 *
 * @generated from message google.cloud.deploy.v1.Target
 */
export type Target = Message<"google.cloud.deploy.v1.Target"> & {
  /**
   * Optional. Name of the `Target`. Format is
   * `projects/{project}/locations/{location}/targets/{target}`.
   * The `target` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Resource id of the `Target`.
   *
   * @generated from field: string target_id = 2;
   */
  targetId: string;

  /**
   * Output only. Unique identifier of the `Target`.
   *
   * @generated from field: string uid = 3;
   */
  uid: string;

  /**
   * Optional. Description of the `Target`. Max length is 255 characters.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * Optional. User annotations. These attributes can only be set and used by
   * the user, and not by Cloud Deploy. See
   * https://google.aip.dev/128#annotations for more details such as format and
   * size limitations.
   *
   * @generated from field: map<string, string> annotations = 5;
   */
  annotations: { [key: string]: string };

  /**
   * Optional. Labels are attributes that can be set and used by both the
   * user and by Cloud Deploy. Labels must meet the following constraints:
   *
   * * Keys and values can contain only lowercase letters, numeric characters,
   * underscores, and dashes.
   * * All characters must use UTF-8 encoding, and international characters are
   * allowed.
   * * Keys must start with a lowercase letter or international character.
   * * Each resource is limited to a maximum of 64 labels.
   *
   * Both keys and values are additionally constrained to be <= 128 bytes.
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Whether or not the `Target` requires approval.
   *
   * @generated from field: bool require_approval = 13;
   */
  requireApproval: boolean;

  /**
   * Output only. Time at which the `Target` was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 8;
   */
  createTime?: Timestamp;

  /**
   * Output only. Most recent time at which the `Target` was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 9;
   */
  updateTime?: Timestamp;

  /**
   * Destination to which the Skaffold configuration is applied during a
   * rollout.
   *
   * @generated from oneof google.cloud.deploy.v1.Target.deployment_target
   */
  deploymentTarget: {
    /**
     * Optional. Information specifying a GKE Cluster.
     *
     * @generated from field: google.cloud.deploy.v1.GkeCluster gke = 15;
     */
    value: GkeCluster;
    case: "gke";
  } | {
    /**
     * Optional. Information specifying an Anthos Cluster.
     *
     * @generated from field: google.cloud.deploy.v1.AnthosCluster anthos_cluster = 17;
     */
    value: AnthosCluster;
    case: "anthosCluster";
  } | {
    /**
     * Optional. Information specifying a Cloud Run deployment target.
     *
     * @generated from field: google.cloud.deploy.v1.CloudRunLocation run = 18;
     */
    value: CloudRunLocation;
    case: "run";
  } | {
    /**
     * Optional. Information specifying a multiTarget.
     *
     * @generated from field: google.cloud.deploy.v1.MultiTarget multi_target = 19;
     */
    value: MultiTarget;
    case: "multiTarget";
  } | {
    /**
     * Optional. Information specifying a Custom Target.
     *
     * @generated from field: google.cloud.deploy.v1.CustomTarget custom_target = 21;
     */
    value: CustomTarget;
    case: "customTarget";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. This checksum is computed by the server based on the value of
   * other fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 12;
   */
  etag: string;

  /**
   * Configurations for all execution that relates to this `Target`.
   * Each `ExecutionEnvironmentUsage` value may only be used in a single
   * configuration; using the same value multiple times is an error.
   * When one or more configurations are specified, they must include the
   * `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values.
   * When no configurations are specified, execution will use the default
   * specified in `DefaultPool`.
   *
   * @generated from field: repeated google.cloud.deploy.v1.ExecutionConfig execution_configs = 16;
   */
  executionConfigs: ExecutionConfig[];

  /**
   * Optional. The deploy parameters to use for this target.
   *
   * @generated from field: map<string, string> deploy_parameters = 20;
   */
  deployParameters: { [key: string]: string };
};

/**
 * Describes the message google.cloud.deploy.v1.Target.
 * Use `create(TargetSchema)` to create a new message.
 */
export const TargetSchema: GenMessage<Target> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 27);

/**
 * Configuration of the environment to use when calling Skaffold.
 *
 * @generated from message google.cloud.deploy.v1.ExecutionConfig
 */
export type ExecutionConfig = Message<"google.cloud.deploy.v1.ExecutionConfig"> & {
  /**
   * Required. Usages when this configuration should be applied.
   *
   * @generated from field: repeated google.cloud.deploy.v1.ExecutionConfig.ExecutionEnvironmentUsage usages = 1;
   */
  usages: ExecutionConfig_ExecutionEnvironmentUsage[];

  /**
   * Details of the environment.
   *
   * @generated from oneof google.cloud.deploy.v1.ExecutionConfig.execution_environment
   */
  executionEnvironment: {
    /**
     * Optional. Use default Cloud Build pool.
     *
     * @generated from field: google.cloud.deploy.v1.DefaultPool default_pool = 2;
     */
    value: DefaultPool;
    case: "defaultPool";
  } | {
    /**
     * Optional. Use private Cloud Build pool.
     *
     * @generated from field: google.cloud.deploy.v1.PrivatePool private_pool = 3;
     */
    value: PrivatePool;
    case: "privatePool";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. The resource name of the `WorkerPool`, with the format
   * `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
   * If this optional field is unspecified, the default Cloud Build pool will be
   * used.
   *
   * @generated from field: string worker_pool = 4;
   */
  workerPool: string;

  /**
   * Optional. Google service account to use for execution. If unspecified,
   * the project execution service account
   * (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) is used.
   *
   * @generated from field: string service_account = 5;
   */
  serviceAccount: string;

  /**
   * Optional. Cloud Storage location in which to store execution outputs. This
   * can either be a bucket ("gs://my-bucket") or a path within a bucket
   * ("gs://my-bucket/my-dir").
   * If unspecified, a default bucket located in the same region will be used.
   *
   * @generated from field: string artifact_storage = 6;
   */
  artifactStorage: string;

  /**
   * Optional. Execution timeout for a Cloud Build Execution. This must be
   * between 10m and 24h in seconds format. If unspecified, a default timeout of
   * 1h is used.
   *
   * @generated from field: google.protobuf.Duration execution_timeout = 7;
   */
  executionTimeout?: Duration;

  /**
   * Optional. If true, additional logging will be enabled when running builds
   * in this execution environment.
   *
   * @generated from field: bool verbose = 8;
   */
  verbose: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.ExecutionConfig.
 * Use `create(ExecutionConfigSchema)` to create a new message.
 */
export const ExecutionConfigSchema: GenMessage<ExecutionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 28);

/**
 * Possible usages of this configuration.
 *
 * @generated from enum google.cloud.deploy.v1.ExecutionConfig.ExecutionEnvironmentUsage
 */
export enum ExecutionConfig_ExecutionEnvironmentUsage {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED = 0;
   */
  EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED = 0,

  /**
   * Use for rendering.
   *
   * @generated from enum value: RENDER = 1;
   */
  RENDER = 1,

  /**
   * Use for deploying and deployment hooks.
   *
   * @generated from enum value: DEPLOY = 2;
   */
  DEPLOY = 2,

  /**
   * Use for deployment verification.
   *
   * @generated from enum value: VERIFY = 3;
   */
  VERIFY = 3,

  /**
   * Use for predeploy job execution.
   *
   * @generated from enum value: PREDEPLOY = 4;
   */
  PREDEPLOY = 4,

  /**
   * Use for postdeploy job execution.
   *
   * @generated from enum value: POSTDEPLOY = 5;
   */
  POSTDEPLOY = 5,
}

/**
 * Describes the enum google.cloud.deploy.v1.ExecutionConfig.ExecutionEnvironmentUsage.
 */
export const ExecutionConfig_ExecutionEnvironmentUsageSchema: GenEnum<ExecutionConfig_ExecutionEnvironmentUsage> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 28, 0);

/**
 * Execution using the default Cloud Build pool.
 *
 * @generated from message google.cloud.deploy.v1.DefaultPool
 */
export type DefaultPool = Message<"google.cloud.deploy.v1.DefaultPool"> & {
  /**
   * Optional. Google service account to use for execution. If unspecified,
   * the project execution service account
   * (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) will be used.
   *
   * @generated from field: string service_account = 1;
   */
  serviceAccount: string;

  /**
   * Optional. Cloud Storage location where execution outputs should be stored.
   * This can either be a bucket ("gs://my-bucket") or a path within a bucket
   * ("gs://my-bucket/my-dir").
   * If unspecified, a default bucket located in the same region will be used.
   *
   * @generated from field: string artifact_storage = 2;
   */
  artifactStorage: string;
};

/**
 * Describes the message google.cloud.deploy.v1.DefaultPool.
 * Use `create(DefaultPoolSchema)` to create a new message.
 */
export const DefaultPoolSchema: GenMessage<DefaultPool> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 29);

/**
 * Execution using a private Cloud Build pool.
 *
 * @generated from message google.cloud.deploy.v1.PrivatePool
 */
export type PrivatePool = Message<"google.cloud.deploy.v1.PrivatePool"> & {
  /**
   * Required. Resource name of the Cloud Build worker pool to use. The format
   * is `projects/{project}/locations/{location}/workerPools/{pool}`.
   *
   * @generated from field: string worker_pool = 1;
   */
  workerPool: string;

  /**
   * Optional. Google service account to use for execution. If unspecified,
   * the project execution service account
   * (<PROJECT_NUMBER>-compute@developer.gserviceaccount.com) will be used.
   *
   * @generated from field: string service_account = 2;
   */
  serviceAccount: string;

  /**
   * Optional. Cloud Storage location where execution outputs should be stored.
   * This can either be a bucket ("gs://my-bucket") or a path within a bucket
   * ("gs://my-bucket/my-dir").
   * If unspecified, a default bucket located in the same region will be used.
   *
   * @generated from field: string artifact_storage = 3;
   */
  artifactStorage: string;
};

/**
 * Describes the message google.cloud.deploy.v1.PrivatePool.
 * Use `create(PrivatePoolSchema)` to create a new message.
 */
export const PrivatePoolSchema: GenMessage<PrivatePool> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 30);

/**
 * Information specifying a GKE Cluster.
 *
 * @generated from message google.cloud.deploy.v1.GkeCluster
 */
export type GkeCluster = Message<"google.cloud.deploy.v1.GkeCluster"> & {
  /**
   * Optional. Information specifying a GKE Cluster. Format is
   * `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`.
   *
   * @generated from field: string cluster = 1;
   */
  cluster: string;

  /**
   * Optional. If true, `cluster` is accessed using the private IP address of
   * the control plane endpoint. Otherwise, the default IP address of the
   * control plane endpoint is used. The default IP address is the private IP
   * address for clusters with private control-plane endpoints and the public IP
   * address otherwise.
   *
   * Only specify this option when `cluster` is a [private GKE
   * cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).
   *
   * @generated from field: bool internal_ip = 2;
   */
  internalIp: boolean;

  /**
   * Optional. If set, used to configure a
   * [proxy](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#proxy)
   * to the Kubernetes server.
   *
   * @generated from field: string proxy_url = 3;
   */
  proxyUrl: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GkeCluster.
 * Use `create(GkeClusterSchema)` to create a new message.
 */
export const GkeClusterSchema: GenMessage<GkeCluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 31);

/**
 * Information specifying an Anthos Cluster.
 *
 * @generated from message google.cloud.deploy.v1.AnthosCluster
 */
export type AnthosCluster = Message<"google.cloud.deploy.v1.AnthosCluster"> & {
  /**
   * Optional. Membership of the GKE Hub-registered cluster to which to apply
   * the Skaffold configuration. Format is
   * `projects/{project}/locations/{location}/memberships/{membership_name}`.
   *
   * @generated from field: string membership = 1;
   */
  membership: string;
};

/**
 * Describes the message google.cloud.deploy.v1.AnthosCluster.
 * Use `create(AnthosClusterSchema)` to create a new message.
 */
export const AnthosClusterSchema: GenMessage<AnthosCluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 32);

/**
 * Information specifying where to deploy a Cloud Run Service.
 *
 * @generated from message google.cloud.deploy.v1.CloudRunLocation
 */
export type CloudRunLocation = Message<"google.cloud.deploy.v1.CloudRunLocation"> & {
  /**
   * Required. The location for the Cloud Run Service. Format must be
   * `projects/{project}/locations/{location}`.
   *
   * @generated from field: string location = 1;
   */
  location: string;
};

/**
 * Describes the message google.cloud.deploy.v1.CloudRunLocation.
 * Use `create(CloudRunLocationSchema)` to create a new message.
 */
export const CloudRunLocationSchema: GenMessage<CloudRunLocation> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 33);

/**
 * Information specifying a multiTarget.
 *
 * @generated from message google.cloud.deploy.v1.MultiTarget
 */
export type MultiTarget = Message<"google.cloud.deploy.v1.MultiTarget"> & {
  /**
   * Required. The target_ids of this multiTarget.
   *
   * @generated from field: repeated string target_ids = 1;
   */
  targetIds: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.MultiTarget.
 * Use `create(MultiTargetSchema)` to create a new message.
 */
export const MultiTargetSchema: GenMessage<MultiTarget> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 34);

/**
 * Information specifying a Custom Target.
 *
 * @generated from message google.cloud.deploy.v1.CustomTarget
 */
export type CustomTarget = Message<"google.cloud.deploy.v1.CustomTarget"> & {
  /**
   * Required. The name of the CustomTargetType. Format must be
   * `projects/{project}/locations/{location}/customTargetTypes/{custom_target_type}`.
   *
   * @generated from field: string custom_target_type = 1;
   */
  customTargetType: string;
};

/**
 * Describes the message google.cloud.deploy.v1.CustomTarget.
 * Use `create(CustomTargetSchema)` to create a new message.
 */
export const CustomTargetSchema: GenMessage<CustomTarget> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 35);

/**
 * The request object for `ListTargets`.
 *
 * @generated from message google.cloud.deploy.v1.ListTargetsRequest
 */
export type ListTargetsRequest = Message<"google.cloud.deploy.v1.ListTargetsRequest"> & {
  /**
   * Required. The parent, which owns this collection of targets. Format must be
   * `projects/{project_id}/locations/{location_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of `Target` objects to return. The service may
   * return fewer than this value. If unspecified, at most 50 `Target` objects
   * will be returned. The maximum value is 1000; values above 1000 will be set
   * to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous `ListTargets` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filter targets to be returned. See https://google.aip.dev/160 for
   * more details.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   * more details.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.deploy.v1.ListTargetsRequest.
 * Use `create(ListTargetsRequestSchema)` to create a new message.
 */
export const ListTargetsRequestSchema: GenMessage<ListTargetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 36);

/**
 * The response object from `ListTargets`.
 *
 * @generated from message google.cloud.deploy.v1.ListTargetsResponse
 */
export type ListTargetsResponse = Message<"google.cloud.deploy.v1.ListTargetsResponse"> & {
  /**
   * The `Target` objects.
   *
   * @generated from field: repeated google.cloud.deploy.v1.Target targets = 1;
   */
  targets: Target[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.ListTargetsResponse.
 * Use `create(ListTargetsResponseSchema)` to create a new message.
 */
export const ListTargetsResponseSchema: GenMessage<ListTargetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 37);

/**
 * The request object for `GetTarget`.
 *
 * @generated from message google.cloud.deploy.v1.GetTargetRequest
 */
export type GetTargetRequest = Message<"google.cloud.deploy.v1.GetTargetRequest"> & {
  /**
   * Required. Name of the `Target`. Format must be
   * `projects/{project_id}/locations/{location_name}/targets/{target_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GetTargetRequest.
 * Use `create(GetTargetRequestSchema)` to create a new message.
 */
export const GetTargetRequestSchema: GenMessage<GetTargetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 38);

/**
 * The request object for `CreateTarget`.
 *
 * @generated from message google.cloud.deploy.v1.CreateTargetRequest
 */
export type CreateTargetRequest = Message<"google.cloud.deploy.v1.CreateTargetRequest"> & {
  /**
   * Required. The parent collection in which the `Target` must be created.
   * The format is
   * `projects/{project_id}/locations/{location_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. ID of the `Target`.
   *
   * @generated from field: string target_id = 2;
   */
  targetId: string;

  /**
   * Required. The `Target` to create.
   *
   * @generated from field: google.cloud.deploy.v1.Target target = 3;
   */
  target?: Target;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.CreateTargetRequest.
 * Use `create(CreateTargetRequestSchema)` to create a new message.
 */
export const CreateTargetRequestSchema: GenMessage<CreateTargetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 39);

/**
 * The request object for `UpdateTarget`.
 *
 * @generated from message google.cloud.deploy.v1.UpdateTargetRequest
 */
export type UpdateTargetRequest = Message<"google.cloud.deploy.v1.UpdateTargetRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten by the
   * update in the `Target` resource. The fields specified in the update_mask
   * are relative to the resource, not the full request. A field will be
   * overwritten if it's in the mask. If the user doesn't provide a mask then
   * all fields are overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The `Target` to update.
   *
   * @generated from field: google.cloud.deploy.v1.Target target = 2;
   */
  target?: Target;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;

  /**
   * Optional. If set to true, updating a `Target` that does not exist will
   * result in the creation of a new `Target`.
   *
   * @generated from field: bool allow_missing = 4;
   */
  allowMissing: boolean;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.UpdateTargetRequest.
 * Use `create(UpdateTargetRequestSchema)` to create a new message.
 */
export const UpdateTargetRequestSchema: GenMessage<UpdateTargetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 40);

/**
 * The request object for `DeleteTarget`.
 *
 * @generated from message google.cloud.deploy.v1.DeleteTargetRequest
 */
export type DeleteTargetRequest = Message<"google.cloud.deploy.v1.DeleteTargetRequest"> & {
  /**
   * Required. The name of the `Target` to delete. The format is
   * `projects/{project_id}/locations/{location_name}/targets/{target_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Optional. If set to true, then deleting an already deleted or non-existing
   * `Target` will succeed.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;

  /**
   * Optional. If set, validate the request and preview the review, but do not
   * actually post it.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;

  /**
   * Optional. This checksum is computed by the server based on the value of
   * other fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 5;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.deploy.v1.DeleteTargetRequest.
 * Use `create(DeleteTargetRequestSchema)` to create a new message.
 */
export const DeleteTargetRequestSchema: GenMessage<DeleteTargetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 41);

/**
 * A `CustomTargetType` resource in the Cloud Deploy API.
 *
 * A `CustomTargetType` defines a type of custom target that can be referenced
 * in a `Target` in order to facilitate deploying to other systems besides the
 * supported runtimes.
 *
 * @generated from message google.cloud.deploy.v1.CustomTargetType
 */
export type CustomTargetType = Message<"google.cloud.deploy.v1.CustomTargetType"> & {
  /**
   * Optional. Name of the `CustomTargetType`. Format is
   * `projects/{project}/locations/{location}/customTargetTypes/{customTargetType}`.
   * The `customTargetType` component must match
   * `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Resource id of the `CustomTargetType`.
   *
   * @generated from field: string custom_target_type_id = 2;
   */
  customTargetTypeId: string;

  /**
   * Output only. Unique identifier of the `CustomTargetType`.
   *
   * @generated from field: string uid = 3;
   */
  uid: string;

  /**
   * Optional. Description of the `CustomTargetType`. Max length is 255
   * characters.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * Optional. User annotations. These attributes can only be set and used by
   * the user, and not by Cloud Deploy. See
   * https://google.aip.dev/128#annotations for more details such as format and
   * size limitations.
   *
   * @generated from field: map<string, string> annotations = 5;
   */
  annotations: { [key: string]: string };

  /**
   * Optional. Labels are attributes that can be set and used by both the
   * user and by Cloud Deploy. Labels must meet the following constraints:
   *
   * * Keys and values can contain only lowercase letters, numeric characters,
   * underscores, and dashes.
   * * All characters must use UTF-8 encoding, and international characters are
   * allowed.
   * * Keys must start with a lowercase letter or international character.
   * * Each resource is limited to a maximum of 64 labels.
   *
   * Both keys and values are additionally constrained to be <= 128 bytes.
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };

  /**
   * Output only. Time at which the `CustomTargetType` was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 7;
   */
  createTime?: Timestamp;

  /**
   * Output only. Most recent time at which the `CustomTargetType` was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 8;
   */
  updateTime?: Timestamp;

  /**
   * Optional. This checksum is computed by the server based on the value of
   * other fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 9;
   */
  etag: string;

  /**
   * Defines the `CustomTargetType` renderer and deployer.
   *
   * @generated from oneof google.cloud.deploy.v1.CustomTargetType.definition
   */
  definition: {
    /**
     * Configures render and deploy for the `CustomTargetType` using Skaffold
     * custom actions.
     *
     * @generated from field: google.cloud.deploy.v1.CustomTargetSkaffoldActions custom_actions = 10;
     */
    value: CustomTargetSkaffoldActions;
    case: "customActions";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.CustomTargetType.
 * Use `create(CustomTargetTypeSchema)` to create a new message.
 */
export const CustomTargetTypeSchema: GenMessage<CustomTargetType> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 42);

/**
 * CustomTargetSkaffoldActions represents the `CustomTargetType` configuration
 * using Skaffold custom actions.
 *
 * @generated from message google.cloud.deploy.v1.CustomTargetSkaffoldActions
 */
export type CustomTargetSkaffoldActions = Message<"google.cloud.deploy.v1.CustomTargetSkaffoldActions"> & {
  /**
   * Optional. The Skaffold custom action responsible for render operations. If
   * not provided then Cloud Deploy will perform the render operations via
   * `skaffold render`.
   *
   * @generated from field: string render_action = 1;
   */
  renderAction: string;

  /**
   * Required. The Skaffold custom action responsible for deploy operations.
   *
   * @generated from field: string deploy_action = 2;
   */
  deployAction: string;

  /**
   * Optional. List of Skaffold modules Cloud Deploy will include in the
   * Skaffold Config as required before performing diagnose.
   *
   * @generated from field: repeated google.cloud.deploy.v1.SkaffoldModules include_skaffold_modules = 3;
   */
  includeSkaffoldModules: SkaffoldModules[];
};

/**
 * Describes the message google.cloud.deploy.v1.CustomTargetSkaffoldActions.
 * Use `create(CustomTargetSkaffoldActionsSchema)` to create a new message.
 */
export const CustomTargetSkaffoldActionsSchema: GenMessage<CustomTargetSkaffoldActions> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 43);

/**
 * Skaffold Config modules and their remote source.
 *
 * @generated from message google.cloud.deploy.v1.SkaffoldModules
 */
export type SkaffoldModules = Message<"google.cloud.deploy.v1.SkaffoldModules"> & {
  /**
   * Optional. The Skaffold Config modules to use from the specified source.
   *
   * @generated from field: repeated string configs = 1;
   */
  configs: string[];

  /**
   * The source that contains the Skaffold Config modules.
   *
   * @generated from oneof google.cloud.deploy.v1.SkaffoldModules.source
   */
  source: {
    /**
     * Remote git repository containing the Skaffold Config modules.
     *
     * @generated from field: google.cloud.deploy.v1.SkaffoldModules.SkaffoldGitSource git = 2;
     */
    value: SkaffoldModules_SkaffoldGitSource;
    case: "git";
  } | {
    /**
     * Cloud Storage bucket containing the Skaffold Config modules.
     *
     * @generated from field: google.cloud.deploy.v1.SkaffoldModules.SkaffoldGCSSource google_cloud_storage = 3;
     */
    value: SkaffoldModules_SkaffoldGCSSource;
    case: "googleCloudStorage";
  } | {
    /**
     * Cloud Build V2 repository containing the Skaffold Config modules.
     *
     * @generated from field: google.cloud.deploy.v1.SkaffoldModules.SkaffoldGCBRepoSource google_cloud_build_repo = 4;
     */
    value: SkaffoldModules_SkaffoldGCBRepoSource;
    case: "googleCloudBuildRepo";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.SkaffoldModules.
 * Use `create(SkaffoldModulesSchema)` to create a new message.
 */
export const SkaffoldModulesSchema: GenMessage<SkaffoldModules> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 44);

/**
 * Git repository containing Skaffold Config modules.
 *
 * @generated from message google.cloud.deploy.v1.SkaffoldModules.SkaffoldGitSource
 */
export type SkaffoldModules_SkaffoldGitSource = Message<"google.cloud.deploy.v1.SkaffoldModules.SkaffoldGitSource"> & {
  /**
   * Required. Git repository the package should be cloned from.
   *
   * @generated from field: string repo = 1;
   */
  repo: string;

  /**
   * Optional. Relative path from the repository root to the Skaffold file.
   *
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * Optional. Git branch or tag to use when cloning the repository.
   *
   * @generated from field: string ref = 3;
   */
  ref: string;
};

/**
 * Describes the message google.cloud.deploy.v1.SkaffoldModules.SkaffoldGitSource.
 * Use `create(SkaffoldModules_SkaffoldGitSourceSchema)` to create a new message.
 */
export const SkaffoldModules_SkaffoldGitSourceSchema: GenMessage<SkaffoldModules_SkaffoldGitSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 44, 0);

/**
 * Cloud Storage bucket containing Skaffold Config modules.
 *
 * @generated from message google.cloud.deploy.v1.SkaffoldModules.SkaffoldGCSSource
 */
export type SkaffoldModules_SkaffoldGCSSource = Message<"google.cloud.deploy.v1.SkaffoldModules.SkaffoldGCSSource"> & {
  /**
   * Required. Cloud Storage source paths to copy recursively. For example,
   * providing "gs://my-bucket/dir/configs/*" will result in Skaffold copying
   * all files within the "dir/configs" directory in the bucket "my-bucket".
   *
   * @generated from field: string source = 1;
   */
  source: string;

  /**
   * Optional. Relative path from the source to the Skaffold file.
   *
   * @generated from field: string path = 2;
   */
  path: string;
};

/**
 * Describes the message google.cloud.deploy.v1.SkaffoldModules.SkaffoldGCSSource.
 * Use `create(SkaffoldModules_SkaffoldGCSSourceSchema)` to create a new message.
 */
export const SkaffoldModules_SkaffoldGCSSourceSchema: GenMessage<SkaffoldModules_SkaffoldGCSSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 44, 1);

/**
 * Cloud Build V2 Repository containing Skaffold Configs.
 *
 * @generated from message google.cloud.deploy.v1.SkaffoldModules.SkaffoldGCBRepoSource
 */
export type SkaffoldModules_SkaffoldGCBRepoSource = Message<"google.cloud.deploy.v1.SkaffoldModules.SkaffoldGCBRepoSource"> & {
  /**
   * Required. Name of the Cloud Build V2 Repository.
   * Format is
   * projects/{project}/locations/{location}/connections/{connection}/repositories/{repository}.
   *
   * @generated from field: string repository = 1;
   */
  repository: string;

  /**
   * Optional. Relative path from the repository root to the Skaffold Config
   * file.
   *
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * Optional. Branch or tag to use when cloning the repository.
   *
   * @generated from field: string ref = 3;
   */
  ref: string;
};

/**
 * Describes the message google.cloud.deploy.v1.SkaffoldModules.SkaffoldGCBRepoSource.
 * Use `create(SkaffoldModules_SkaffoldGCBRepoSourceSchema)` to create a new message.
 */
export const SkaffoldModules_SkaffoldGCBRepoSourceSchema: GenMessage<SkaffoldModules_SkaffoldGCBRepoSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 44, 2);

/**
 * The request object for `ListCustomTargetTypes`.
 *
 * @generated from message google.cloud.deploy.v1.ListCustomTargetTypesRequest
 */
export type ListCustomTargetTypesRequest = Message<"google.cloud.deploy.v1.ListCustomTargetTypesRequest"> & {
  /**
   * Required. The parent that owns this collection of custom target types.
   * Format must be `projects/{project_id}/locations/{location_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of `CustomTargetType` objects to return. The
   * service may return fewer than this value. If unspecified, at most 50
   * `CustomTargetType` objects will be returned. The maximum value is 1000;
   * values above 1000 will be set to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous `ListCustomTargetTypes`
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filter custom target types to be returned. See
   * https://google.aip.dev/160 for more details.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   * more details.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.deploy.v1.ListCustomTargetTypesRequest.
 * Use `create(ListCustomTargetTypesRequestSchema)` to create a new message.
 */
export const ListCustomTargetTypesRequestSchema: GenMessage<ListCustomTargetTypesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 45);

/**
 * The response object from `ListCustomTargetTypes.`
 *
 * @generated from message google.cloud.deploy.v1.ListCustomTargetTypesResponse
 */
export type ListCustomTargetTypesResponse = Message<"google.cloud.deploy.v1.ListCustomTargetTypesResponse"> & {
  /**
   * The `CustomTargetType` objects.
   *
   * @generated from field: repeated google.cloud.deploy.v1.CustomTargetType custom_target_types = 1;
   */
  customTargetTypes: CustomTargetType[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.ListCustomTargetTypesResponse.
 * Use `create(ListCustomTargetTypesResponseSchema)` to create a new message.
 */
export const ListCustomTargetTypesResponseSchema: GenMessage<ListCustomTargetTypesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 46);

/**
 * The request object for `GetCustomTargetType`.
 *
 * @generated from message google.cloud.deploy.v1.GetCustomTargetTypeRequest
 */
export type GetCustomTargetTypeRequest = Message<"google.cloud.deploy.v1.GetCustomTargetTypeRequest"> & {
  /**
   * Required. Name of the `CustomTargetType`. Format must be
   * `projects/{project_id}/locations/{location_name}/customTargetTypes/{custom_target_type}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GetCustomTargetTypeRequest.
 * Use `create(GetCustomTargetTypeRequestSchema)` to create a new message.
 */
export const GetCustomTargetTypeRequestSchema: GenMessage<GetCustomTargetTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 47);

/**
 * The request object for `CreateCustomTargetType`.
 *
 * @generated from message google.cloud.deploy.v1.CreateCustomTargetTypeRequest
 */
export type CreateCustomTargetTypeRequest = Message<"google.cloud.deploy.v1.CreateCustomTargetTypeRequest"> & {
  /**
   * Required. The parent collection in which the `CustomTargetType` must be
   * created. The format is `projects/{project_id}/locations/{location_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. ID of the `CustomTargetType`.
   *
   * @generated from field: string custom_target_type_id = 2;
   */
  customTargetTypeId: string;

  /**
   * Required. The `CustomTargetType` to create.
   *
   * @generated from field: google.cloud.deploy.v1.CustomTargetType custom_target_type = 3;
   */
  customTargetType?: CustomTargetType;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.CreateCustomTargetTypeRequest.
 * Use `create(CreateCustomTargetTypeRequestSchema)` to create a new message.
 */
export const CreateCustomTargetTypeRequestSchema: GenMessage<CreateCustomTargetTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 48);

/**
 * The request object for `UpdateCustomTargetType`.
 *
 * @generated from message google.cloud.deploy.v1.UpdateCustomTargetTypeRequest
 */
export type UpdateCustomTargetTypeRequest = Message<"google.cloud.deploy.v1.UpdateCustomTargetTypeRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten by the
   * update in the `CustomTargetType` resource. The fields specified in the
   * update_mask are relative to the resource, not the full request. A field
   * will be overwritten if it's in the mask. If the user doesn't provide a mask
   * then all fields are overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The `CustomTargetType` to update.
   *
   * @generated from field: google.cloud.deploy.v1.CustomTargetType custom_target_type = 2;
   */
  customTargetType?: CustomTargetType;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;

  /**
   * Optional. If set to true, updating a `CustomTargetType` that does not exist
   * will result in the creation of a new `CustomTargetType`.
   *
   * @generated from field: bool allow_missing = 4;
   */
  allowMissing: boolean;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.UpdateCustomTargetTypeRequest.
 * Use `create(UpdateCustomTargetTypeRequestSchema)` to create a new message.
 */
export const UpdateCustomTargetTypeRequestSchema: GenMessage<UpdateCustomTargetTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 49);

/**
 * The request object for `DeleteCustomTargetType`.
 *
 * @generated from message google.cloud.deploy.v1.DeleteCustomTargetTypeRequest
 */
export type DeleteCustomTargetTypeRequest = Message<"google.cloud.deploy.v1.DeleteCustomTargetTypeRequest"> & {
  /**
   * Required. The name of the `CustomTargetType` to delete. Format must be
   * `projects/{project_id}/locations/{location_name}/customTargetTypes/{custom_target_type}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Optional. If set to true, then deleting an already deleted or non-existing
   * `CustomTargetType` will succeed.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;

  /**
   * Optional. If set to true, the request is validated but no actual change is
   * made.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;

  /**
   * Optional. This checksum is computed by the server based on the value of
   * other fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 5;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.deploy.v1.DeleteCustomTargetTypeRequest.
 * Use `create(DeleteCustomTargetTypeRequestSchema)` to create a new message.
 */
export const DeleteCustomTargetTypeRequestSchema: GenMessage<DeleteCustomTargetTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 50);

/**
 * A `DeployPolicy` resource in the Cloud Deploy API.
 *
 * A `DeployPolicy` inhibits manual or automation-driven actions within a
 * Delivery Pipeline or Target.
 *
 * @generated from message google.cloud.deploy.v1.DeployPolicy
 */
export type DeployPolicy = Message<"google.cloud.deploy.v1.DeployPolicy"> & {
  /**
   * Output only. Name of the `DeployPolicy`. Format is
   * `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
   * The `deployPolicy` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Unique identifier of the `DeployPolicy`.
   *
   * @generated from field: string uid = 2;
   */
  uid: string;

  /**
   * Description of the `DeployPolicy`. Max length is 255 characters.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * User annotations. These attributes can only be set and used by the
   * user, and not by Cloud Deploy. Annotations must meet the following
   * constraints:
   *
   * * Annotations are key/value pairs.
   * * Valid annotation keys have two segments: an optional prefix and name,
   * separated by a slash (`/`).
   * * The name segment is required and must be 63 characters or less,
   * beginning and ending with an alphanumeric character (`[a-z0-9A-Z]`) with
   * dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.
   * * The prefix is optional. If specified, the prefix must be a DNS subdomain:
   * a series of DNS labels separated by dots(`.`), not longer than 253
   * characters in total, followed by a slash (`/`).
   *
   * See
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set
   * for more details.
   *
   * @generated from field: map<string, string> annotations = 4;
   */
  annotations: { [key: string]: string };

  /**
   * Labels are attributes that can be set and used by both the
   * user and by Cloud Deploy. Labels must meet the following constraints:
   *
   * * Keys and values can contain only lowercase letters, numeric characters,
   * underscores, and dashes.
   * * All characters must use UTF-8 encoding, and international characters are
   * allowed.
   * * Keys must start with a lowercase letter or international character.
   * * Each resource is limited to a maximum of 64 labels.
   *
   * Both keys and values are additionally constrained to be <= 128 bytes.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * Output only. Time at which the deploy policy was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Output only. Most recent time at which the deploy policy was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 7;
   */
  updateTime?: Timestamp;

  /**
   * When suspended, the policy will not prevent actions from occurring, even
   * if the action violates the policy.
   *
   * @generated from field: bool suspended = 8;
   */
  suspended: boolean;

  /**
   * Required. Selected resources to which the policy will be applied. At least
   * one selector is required. If one selector matches the resource the policy
   * applies. For example, if there are two selectors and the action being
   * attempted matches one of them, the policy will apply to that action.
   *
   * @generated from field: repeated google.cloud.deploy.v1.DeployPolicyResourceSelector selectors = 12;
   */
  selectors: DeployPolicyResourceSelector[];

  /**
   * Required. Rules to apply. At least one rule must be present.
   *
   * @generated from field: repeated google.cloud.deploy.v1.PolicyRule rules = 10;
   */
  rules: PolicyRule[];

  /**
   * The weak etag of the `Automation` resource.
   * This checksum is computed by the server based on the value of other
   * fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 11;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.deploy.v1.DeployPolicy.
 * Use `create(DeployPolicySchema)` to create a new message.
 */
export const DeployPolicySchema: GenMessage<DeployPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 51);

/**
 * What invoked the action. Filters enforcing the policy depending on what
 * invoked the action.
 *
 * @generated from enum google.cloud.deploy.v1.DeployPolicy.Invoker
 */
export enum DeployPolicy_Invoker {
  /**
   * Unspecified.
   *
   * @generated from enum value: INVOKER_UNSPECIFIED = 0;
   */
  INVOKER_UNSPECIFIED = 0,

  /**
   * The action is user-driven. For example, creating a rollout manually via a
   * gcloud create command.
   *
   * @generated from enum value: USER = 1;
   */
  USER = 1,

  /**
   * Automated action by Cloud Deploy.
   *
   * @generated from enum value: DEPLOY_AUTOMATION = 2;
   */
  DEPLOY_AUTOMATION = 2,
}

/**
 * Describes the enum google.cloud.deploy.v1.DeployPolicy.Invoker.
 */
export const DeployPolicy_InvokerSchema: GenEnum<DeployPolicy_Invoker> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 51, 0);

/**
 * Contains information on the resources to select for a deploy policy.
 * Attributes provided must all match the resource in order for policy
 * restrictions to apply. For example, if delivery pipelines attributes given
 * are an id "prod" and labels "foo: bar", a delivery pipeline resource must
 * match both that id and have that label in order to be subject to the policy.
 *
 * @generated from message google.cloud.deploy.v1.DeployPolicyResourceSelector
 */
export type DeployPolicyResourceSelector = Message<"google.cloud.deploy.v1.DeployPolicyResourceSelector"> & {
  /**
   * Optional. Contains attributes about a delivery pipeline.
   *
   * @generated from field: google.cloud.deploy.v1.DeliveryPipelineAttribute delivery_pipeline = 1;
   */
  deliveryPipeline?: DeliveryPipelineAttribute;

  /**
   * Optional. Contains attributes about a target.
   *
   * @generated from field: google.cloud.deploy.v1.TargetAttribute target = 2;
   */
  target?: TargetAttribute;
};

/**
 * Describes the message google.cloud.deploy.v1.DeployPolicyResourceSelector.
 * Use `create(DeployPolicyResourceSelectorSchema)` to create a new message.
 */
export const DeployPolicyResourceSelectorSchema: GenMessage<DeployPolicyResourceSelector> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 52);

/**
 * Contains criteria for selecting DeliveryPipelines.
 *
 * @generated from message google.cloud.deploy.v1.DeliveryPipelineAttribute
 */
export type DeliveryPipelineAttribute = Message<"google.cloud.deploy.v1.DeliveryPipelineAttribute"> & {
  /**
   * ID of the `DeliveryPipeline`. The value of this field could be one of the
   * following:
   *
   * * The last segment of a pipeline name
   * * "*", all delivery pipelines in a location
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * DeliveryPipeline labels.
   *
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.deploy.v1.DeliveryPipelineAttribute.
 * Use `create(DeliveryPipelineAttributeSchema)` to create a new message.
 */
export const DeliveryPipelineAttributeSchema: GenMessage<DeliveryPipelineAttribute> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 53);

/**
 * Contains criteria for selecting Targets. This could be used to select targets
 * for a Deploy Policy or for an Automation.
 *
 * @generated from message google.cloud.deploy.v1.TargetAttribute
 */
export type TargetAttribute = Message<"google.cloud.deploy.v1.TargetAttribute"> & {
  /**
   * ID of the `Target`. The value of this field could be one of the
   * following:
   *
   * * The last segment of a target name
   * * "*", all targets in a location
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Target labels.
   *
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.deploy.v1.TargetAttribute.
 * Use `create(TargetAttributeSchema)` to create a new message.
 */
export const TargetAttributeSchema: GenMessage<TargetAttribute> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 54);

/**
 * Deploy Policy rule.
 *
 * @generated from message google.cloud.deploy.v1.PolicyRule
 */
export type PolicyRule = Message<"google.cloud.deploy.v1.PolicyRule"> & {
  /**
   * @generated from oneof google.cloud.deploy.v1.PolicyRule.rule
   */
  rule: {
    /**
     * Rollout restrictions.
     *
     * @generated from field: google.cloud.deploy.v1.RolloutRestriction rollout_restriction = 2;
     */
    value: RolloutRestriction;
    case: "rolloutRestriction";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.PolicyRule.
 * Use `create(PolicyRuleSchema)` to create a new message.
 */
export const PolicyRuleSchema: GenMessage<PolicyRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 55);

/**
 * Rollout restrictions.
 *
 * @generated from message google.cloud.deploy.v1.RolloutRestriction
 */
export type RolloutRestriction = Message<"google.cloud.deploy.v1.RolloutRestriction"> & {
  /**
   * Required. Restriction rule ID. Required and must be unique within a
   * DeployPolicy. The format is `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional. What invoked the action. If left empty, all invoker types will be
   * restricted.
   *
   * @generated from field: repeated google.cloud.deploy.v1.DeployPolicy.Invoker invokers = 2;
   */
  invokers: DeployPolicy_Invoker[];

  /**
   * Optional. Rollout actions to be restricted as part of the policy. If left
   * empty, all actions will be restricted.
   *
   * @generated from field: repeated google.cloud.deploy.v1.RolloutRestriction.RolloutActions actions = 3;
   */
  actions: RolloutRestriction_RolloutActions[];

  /**
   * Required. Time window within which actions are restricted.
   *
   * @generated from field: google.cloud.deploy.v1.TimeWindows time_windows = 4;
   */
  timeWindows?: TimeWindows;
};

/**
 * Describes the message google.cloud.deploy.v1.RolloutRestriction.
 * Use `create(RolloutRestrictionSchema)` to create a new message.
 */
export const RolloutRestrictionSchema: GenMessage<RolloutRestriction> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 56);

/**
 * Rollout actions to be restricted as part of the policy.
 *
 * @generated from enum google.cloud.deploy.v1.RolloutRestriction.RolloutActions
 */
export enum RolloutRestriction_RolloutActions {
  /**
   * Unspecified.
   *
   * @generated from enum value: ROLLOUT_ACTIONS_UNSPECIFIED = 0;
   */
  ROLLOUT_ACTIONS_UNSPECIFIED = 0,

  /**
   * Advance the rollout to the next phase.
   *
   * @generated from enum value: ADVANCE = 1;
   */
  ADVANCE = 1,

  /**
   * Approve the rollout.
   *
   * @generated from enum value: APPROVE = 2;
   */
  APPROVE = 2,

  /**
   * Cancel the rollout.
   *
   * @generated from enum value: CANCEL = 3;
   */
  CANCEL = 3,

  /**
   * Create a rollout.
   *
   * @generated from enum value: CREATE = 4;
   */
  CREATE = 4,

  /**
   * Ignore a job result on the rollout.
   *
   * @generated from enum value: IGNORE_JOB = 5;
   */
  IGNORE_JOB = 5,

  /**
   * Retry a job for a rollout.
   *
   * @generated from enum value: RETRY_JOB = 6;
   */
  RETRY_JOB = 6,

  /**
   * Rollback a rollout.
   *
   * @generated from enum value: ROLLBACK = 7;
   */
  ROLLBACK = 7,

  /**
   * Terminate a jobrun.
   *
   * @generated from enum value: TERMINATE_JOBRUN = 8;
   */
  TERMINATE_JOBRUN = 8,
}

/**
 * Describes the enum google.cloud.deploy.v1.RolloutRestriction.RolloutActions.
 */
export const RolloutRestriction_RolloutActionsSchema: GenEnum<RolloutRestriction_RolloutActions> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 56, 0);

/**
 * Time windows within which actions are restricted. See the
 * [documentation](https://cloud.google.com/deploy/docs/deploy-policy#dates_times)
 * for more information on how to configure dates/times.
 *
 * @generated from message google.cloud.deploy.v1.TimeWindows
 */
export type TimeWindows = Message<"google.cloud.deploy.v1.TimeWindows"> & {
  /**
   * Required. The time zone in IANA format [IANA Time Zone
   * Database](https://www.iana.org/time-zones) (e.g. America/New_York).
   *
   * @generated from field: string time_zone = 1;
   */
  timeZone: string;

  /**
   * Optional. One-time windows within which actions are restricted.
   *
   * @generated from field: repeated google.cloud.deploy.v1.OneTimeWindow one_time_windows = 2;
   */
  oneTimeWindows: OneTimeWindow[];

  /**
   * Optional. Recurring weekly windows within which actions are restricted.
   *
   * @generated from field: repeated google.cloud.deploy.v1.WeeklyWindow weekly_windows = 3;
   */
  weeklyWindows: WeeklyWindow[];
};

/**
 * Describes the message google.cloud.deploy.v1.TimeWindows.
 * Use `create(TimeWindowsSchema)` to create a new message.
 */
export const TimeWindowsSchema: GenMessage<TimeWindows> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 57);

/**
 * One-time window within which actions are restricted. For example, blocking
 * actions over New Year's Eve from December 31st at 5pm to January 1st at 9am.
 *
 * @generated from message google.cloud.deploy.v1.OneTimeWindow
 */
export type OneTimeWindow = Message<"google.cloud.deploy.v1.OneTimeWindow"> & {
  /**
   * Required. Start date.
   *
   * @generated from field: google.type.Date start_date = 1;
   */
  startDate?: Date;

  /**
   * Required. Start time (inclusive). Use 00:00 for the beginning of the day.
   *
   * @generated from field: google.type.TimeOfDay start_time = 2;
   */
  startTime?: TimeOfDay;

  /**
   * Required. End date.
   *
   * @generated from field: google.type.Date end_date = 3;
   */
  endDate?: Date;

  /**
   * Required. End time (exclusive). You may use 24:00 for the end of the day.
   *
   * @generated from field: google.type.TimeOfDay end_time = 4;
   */
  endTime?: TimeOfDay;
};

/**
 * Describes the message google.cloud.deploy.v1.OneTimeWindow.
 * Use `create(OneTimeWindowSchema)` to create a new message.
 */
export const OneTimeWindowSchema: GenMessage<OneTimeWindow> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 58);

/**
 * Weekly windows. For example, blocking actions every Saturday and Sunday.
 * Another example would be blocking actions every weekday from 5pm to midnight.
 *
 * @generated from message google.cloud.deploy.v1.WeeklyWindow
 */
export type WeeklyWindow = Message<"google.cloud.deploy.v1.WeeklyWindow"> & {
  /**
   * Optional. Days of week. If left empty, all days of the week will be
   * included.
   *
   * @generated from field: repeated google.type.DayOfWeek days_of_week = 1;
   */
  daysOfWeek: DayOfWeek[];

  /**
   * Optional. Start time (inclusive). Use 00:00 for the beginning of the day.
   * If you specify start_time you must also specify end_time. If left empty,
   * this will block for the entire day for the days specified in days_of_week.
   *
   * @generated from field: google.type.TimeOfDay start_time = 2;
   */
  startTime?: TimeOfDay;

  /**
   * Optional. End time (exclusive). Use 24:00 to indicate midnight. If you
   * specify end_time you must also specify start_time. If left empty, this will
   * block for the entire day for the days specified in days_of_week.
   *
   * @generated from field: google.type.TimeOfDay end_time = 3;
   */
  endTime?: TimeOfDay;
};

/**
 * Describes the message google.cloud.deploy.v1.WeeklyWindow.
 * Use `create(WeeklyWindowSchema)` to create a new message.
 */
export const WeeklyWindowSchema: GenMessage<WeeklyWindow> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 59);

/**
 * Returned from an action if one or more policies were
 * violated, and therefore the action was prevented. Contains information about
 * what policies were violated and why.
 *
 * @generated from message google.cloud.deploy.v1.PolicyViolation
 */
export type PolicyViolation = Message<"google.cloud.deploy.v1.PolicyViolation"> & {
  /**
   * Policy violation details.
   *
   * @generated from field: repeated google.cloud.deploy.v1.PolicyViolationDetails policy_violation_details = 1;
   */
  policyViolationDetails: PolicyViolationDetails[];
};

/**
 * Describes the message google.cloud.deploy.v1.PolicyViolation.
 * Use `create(PolicyViolationSchema)` to create a new message.
 */
export const PolicyViolationSchema: GenMessage<PolicyViolation> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 60);

/**
 * Policy violation details.
 *
 * @generated from message google.cloud.deploy.v1.PolicyViolationDetails
 */
export type PolicyViolationDetails = Message<"google.cloud.deploy.v1.PolicyViolationDetails"> & {
  /**
   * Name of the policy that was violated.
   * Policy resource will be in the format of
   * `projects/{project}/locations/{location}/policies/{policy}`.
   *
   * @generated from field: string policy = 1;
   */
  policy: string;

  /**
   * Id of the rule that triggered the policy violation.
   *
   * @generated from field: string rule_id = 2;
   */
  ruleId: string;

  /**
   * User readable message about why the request violated a policy. This is not
   * intended for machine parsing.
   *
   * @generated from field: string failure_message = 3;
   */
  failureMessage: string;
};

/**
 * Describes the message google.cloud.deploy.v1.PolicyViolationDetails.
 * Use `create(PolicyViolationDetailsSchema)` to create a new message.
 */
export const PolicyViolationDetailsSchema: GenMessage<PolicyViolationDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 61);

/**
 * A `Release` resource in the Cloud Deploy API.
 *
 * A `Release` defines a specific Skaffold configuration instance
 * that can be deployed.
 *
 * @generated from message google.cloud.deploy.v1.Release
 */
export type Release = Message<"google.cloud.deploy.v1.Release"> & {
  /**
   * Optional. Name of the `Release`. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}`.
   * The `release` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Unique identifier of the `Release`.
   *
   * @generated from field: string uid = 2;
   */
  uid: string;

  /**
   * Description of the `Release`. Max length is 255 characters.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * User annotations. These attributes can only be set and used by the
   * user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations
   * for more details such as format and size limitations.
   *
   * @generated from field: map<string, string> annotations = 4;
   */
  annotations: { [key: string]: string };

  /**
   * Labels are attributes that can be set and used by both the
   * user and by Cloud Deploy. Labels must meet the following constraints:
   *
   * * Keys and values can contain only lowercase letters, numeric characters,
   * underscores, and dashes.
   * * All characters must use UTF-8 encoding, and international characters are
   * allowed.
   * * Keys must start with a lowercase letter or international character.
   * * Each resource is limited to a maximum of 64 labels.
   *
   * Both keys and values are additionally constrained to be <= 128 bytes.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * Output only. Indicates whether this is an abandoned release.
   *
   * @generated from field: bool abandoned = 23;
   */
  abandoned: boolean;

  /**
   * Output only. Time at which the `Release` was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time at which the render began.
   *
   * @generated from field: google.protobuf.Timestamp render_start_time = 7;
   */
  renderStartTime?: Timestamp;

  /**
   * Output only. Time at which the render completed.
   *
   * @generated from field: google.protobuf.Timestamp render_end_time = 8;
   */
  renderEndTime?: Timestamp;

  /**
   * Cloud Storage URI of tar.gz archive containing Skaffold configuration.
   *
   * @generated from field: string skaffold_config_uri = 17;
   */
  skaffoldConfigUri: string;

  /**
   * Filepath of the Skaffold config inside of the config URI.
   *
   * @generated from field: string skaffold_config_path = 9;
   */
  skaffoldConfigPath: string;

  /**
   * List of artifacts to pass through to Skaffold command.
   *
   * @generated from field: repeated google.cloud.deploy.v1.BuildArtifact build_artifacts = 10;
   */
  buildArtifacts: BuildArtifact[];

  /**
   * Output only. Snapshot of the parent pipeline taken at release creation
   * time.
   *
   * @generated from field: google.cloud.deploy.v1.DeliveryPipeline delivery_pipeline_snapshot = 11;
   */
  deliveryPipelineSnapshot?: DeliveryPipeline;

  /**
   * Output only. Snapshot of the targets taken at release creation time.
   *
   * @generated from field: repeated google.cloud.deploy.v1.Target target_snapshots = 12;
   */
  targetSnapshots: Target[];

  /**
   * Output only. Snapshot of the custom target types referenced by the targets
   * taken at release creation time.
   *
   * @generated from field: repeated google.cloud.deploy.v1.CustomTargetType custom_target_type_snapshots = 27;
   */
  customTargetTypeSnapshots: CustomTargetType[];

  /**
   * Output only. Current state of the render operation.
   *
   * @generated from field: google.cloud.deploy.v1.Release.RenderState render_state = 13;
   */
  renderState: Release_RenderState;

  /**
   * This checksum is computed by the server based on the value of other
   * fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 16;
   */
  etag: string;

  /**
   * The Skaffold version to use when operating on this release, such as
   * "1.20.0". Not all versions are valid; Cloud Deploy supports a specific set
   * of versions.
   *
   * If unset, the most recent supported Skaffold version will be used.
   *
   * @generated from field: string skaffold_version = 19;
   */
  skaffoldVersion: string;

  /**
   * Output only. Map from target ID to the target artifacts created
   * during the render operation.
   *
   * @generated from field: map<string, google.cloud.deploy.v1.TargetArtifact> target_artifacts = 20;
   */
  targetArtifacts: { [key: string]: TargetArtifact };

  /**
   * Output only. Map from target ID to details of the render operation for that
   * target.
   *
   * @generated from field: map<string, google.cloud.deploy.v1.Release.TargetRender> target_renders = 22;
   */
  targetRenders: { [key: string]: Release_TargetRender };

  /**
   * Output only. Information around the state of the Release.
   *
   * @generated from field: google.cloud.deploy.v1.Release.ReleaseCondition condition = 24;
   */
  condition?: Release_ReleaseCondition;

  /**
   * Optional. The deploy parameters to use for all targets in this release.
   *
   * @generated from field: map<string, string> deploy_parameters = 25;
   */
  deployParameters: { [key: string]: string };
};

/**
 * Describes the message google.cloud.deploy.v1.Release.
 * Use `create(ReleaseSchema)` to create a new message.
 */
export const ReleaseSchema: GenMessage<Release> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 62);

/**
 * Details of rendering for a single target.
 *
 * @generated from message google.cloud.deploy.v1.Release.TargetRender
 */
export type Release_TargetRender = Message<"google.cloud.deploy.v1.Release.TargetRender"> & {
  /**
   * Output only. The resource name of the Cloud Build `Build` object that is
   * used to render the manifest for this target. Format is
   * `projects/{project}/locations/{location}/builds/{build}`.
   *
   * @generated from field: string rendering_build = 1;
   */
  renderingBuild: string;

  /**
   * Output only. Current state of the render operation for this Target.
   *
   * @generated from field: google.cloud.deploy.v1.Release.TargetRender.TargetRenderState rendering_state = 2;
   */
  renderingState: Release_TargetRender_TargetRenderState;

  /**
   * Output only. Metadata related to the `Release` render for this Target.
   *
   * @generated from field: google.cloud.deploy.v1.RenderMetadata metadata = 6;
   */
  metadata?: RenderMetadata;

  /**
   * Output only. Reason this render failed. This will always be unspecified
   * while the render in progress.
   *
   * @generated from field: google.cloud.deploy.v1.Release.TargetRender.FailureCause failure_cause = 4;
   */
  failureCause: Release_TargetRender_FailureCause;

  /**
   * Output only. Additional information about the render failure, if
   * available.
   *
   * @generated from field: string failure_message = 5;
   */
  failureMessage: string;
};

/**
 * Describes the message google.cloud.deploy.v1.Release.TargetRender.
 * Use `create(Release_TargetRenderSchema)` to create a new message.
 */
export const Release_TargetRenderSchema: GenMessage<Release_TargetRender> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 62, 0);

/**
 * Valid states of the render operation.
 *
 * @generated from enum google.cloud.deploy.v1.Release.TargetRender.TargetRenderState
 */
export enum Release_TargetRender_TargetRenderState {
  /**
   * The render operation state is unspecified.
   *
   * @generated from enum value: TARGET_RENDER_STATE_UNSPECIFIED = 0;
   */
  TARGET_RENDER_STATE_UNSPECIFIED = 0,

  /**
   * The render operation has completed successfully.
   *
   * @generated from enum value: SUCCEEDED = 1;
   */
  SUCCEEDED = 1,

  /**
   * The render operation has failed.
   *
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,

  /**
   * The render operation is in progress.
   *
   * @generated from enum value: IN_PROGRESS = 3;
   */
  IN_PROGRESS = 3,
}

/**
 * Describes the enum google.cloud.deploy.v1.Release.TargetRender.TargetRenderState.
 */
export const Release_TargetRender_TargetRenderStateSchema: GenEnum<Release_TargetRender_TargetRenderState> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 62, 0, 0);

/**
 * Well-known rendering failures.
 *
 * @generated from enum google.cloud.deploy.v1.Release.TargetRender.FailureCause
 */
export enum Release_TargetRender_FailureCause {
  /**
   * No reason for failure is specified.
   *
   * @generated from enum value: FAILURE_CAUSE_UNSPECIFIED = 0;
   */
  FAILURE_CAUSE_UNSPECIFIED = 0,

  /**
   * Cloud Build is not available, either because it is not enabled or
   * because Cloud Deploy has insufficient permissions. See [required
   * permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
   *
   * @generated from enum value: CLOUD_BUILD_UNAVAILABLE = 1;
   */
  CLOUD_BUILD_UNAVAILABLE = 1,

  /**
   * The render operation did not complete successfully; check Cloud Build
   * logs.
   *
   * @generated from enum value: EXECUTION_FAILED = 2;
   */
  EXECUTION_FAILED = 2,

  /**
   * Cloud Build failed to fulfill Cloud Deploy's request. See
   * failure_message for additional details.
   *
   * @generated from enum value: CLOUD_BUILD_REQUEST_FAILED = 3;
   */
  CLOUD_BUILD_REQUEST_FAILED = 3,

  /**
   * The render operation did not complete successfully because the
   * verification stanza required for verify was not found on the Skaffold
   * configuration.
   *
   * @generated from enum value: VERIFICATION_CONFIG_NOT_FOUND = 4;
   */
  VERIFICATION_CONFIG_NOT_FOUND = 4,

  /**
   * The render operation did not complete successfully because the custom
   * action required for predeploy or postdeploy was not found in the
   * Skaffold configuration. See failure_message for additional details.
   *
   * @generated from enum value: CUSTOM_ACTION_NOT_FOUND = 5;
   */
  CUSTOM_ACTION_NOT_FOUND = 5,

  /**
   * Release failed during rendering because the release configuration is
   * not supported with the specified deployment strategy.
   *
   * @generated from enum value: DEPLOYMENT_STRATEGY_NOT_SUPPORTED = 6;
   */
  DEPLOYMENT_STRATEGY_NOT_SUPPORTED = 6,

  /**
   * The render operation had a feature configured that is not supported.
   *
   * @generated from enum value: RENDER_FEATURE_NOT_SUPPORTED = 7;
   */
  RENDER_FEATURE_NOT_SUPPORTED = 7,
}

/**
 * Describes the enum google.cloud.deploy.v1.Release.TargetRender.FailureCause.
 */
export const Release_TargetRender_FailureCauseSchema: GenEnum<Release_TargetRender_FailureCause> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 62, 0, 1);

/**
 * ReleaseReadyCondition contains information around the status of the
 * Release. If a release is not ready, you cannot create a rollout with the
 * release.
 *
 * @generated from message google.cloud.deploy.v1.Release.ReleaseReadyCondition
 */
export type Release_ReleaseReadyCondition = Message<"google.cloud.deploy.v1.Release.ReleaseReadyCondition"> & {
  /**
   * True if the Release is in a valid state. Otherwise at least one condition
   * in `ReleaseCondition` is in an invalid state. Iterate over those
   * conditions and see which condition(s) has status = false to find out what
   * is wrong with the Release.
   *
   * @generated from field: bool status = 1;
   */
  status: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.Release.ReleaseReadyCondition.
 * Use `create(Release_ReleaseReadyConditionSchema)` to create a new message.
 */
export const Release_ReleaseReadyConditionSchema: GenMessage<Release_ReleaseReadyCondition> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 62, 1);

/**
 * SkaffoldSupportedCondition contains information about when support for the
 * release's version of Skaffold ends.
 *
 * @generated from message google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
 */
export type Release_SkaffoldSupportedCondition = Message<"google.cloud.deploy.v1.Release.SkaffoldSupportedCondition"> & {
  /**
   * True if the version of Skaffold used by this release is supported.
   *
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * The Skaffold support state for this release's version of Skaffold.
   *
   * @generated from field: google.cloud.deploy.v1.SkaffoldSupportState skaffold_support_state = 2;
   */
  skaffoldSupportState: SkaffoldSupportState;

  /**
   * The time at which this release's version of Skaffold will enter
   * maintenance mode.
   *
   * @generated from field: google.protobuf.Timestamp maintenance_mode_time = 3;
   */
  maintenanceModeTime?: Timestamp;

  /**
   * The time at which this release's version of Skaffold will no longer be
   * supported.
   *
   * @generated from field: google.protobuf.Timestamp support_expiration_time = 4;
   */
  supportExpirationTime?: Timestamp;
};

/**
 * Describes the message google.cloud.deploy.v1.Release.SkaffoldSupportedCondition.
 * Use `create(Release_SkaffoldSupportedConditionSchema)` to create a new message.
 */
export const Release_SkaffoldSupportedConditionSchema: GenMessage<Release_SkaffoldSupportedCondition> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 62, 2);

/**
 * ReleaseCondition contains all conditions relevant to a Release.
 *
 * @generated from message google.cloud.deploy.v1.Release.ReleaseCondition
 */
export type Release_ReleaseCondition = Message<"google.cloud.deploy.v1.Release.ReleaseCondition"> & {
  /**
   * Details around the Releases's overall status.
   *
   * @generated from field: google.cloud.deploy.v1.Release.ReleaseReadyCondition release_ready_condition = 1;
   */
  releaseReadyCondition?: Release_ReleaseReadyCondition;

  /**
   * Details around the support state of the release's Skaffold
   * version.
   *
   * @generated from field: google.cloud.deploy.v1.Release.SkaffoldSupportedCondition skaffold_supported_condition = 2;
   */
  skaffoldSupportedCondition?: Release_SkaffoldSupportedCondition;
};

/**
 * Describes the message google.cloud.deploy.v1.Release.ReleaseCondition.
 * Use `create(Release_ReleaseConditionSchema)` to create a new message.
 */
export const Release_ReleaseConditionSchema: GenMessage<Release_ReleaseCondition> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 62, 3);

/**
 * Valid states of the render operation.
 *
 * @generated from enum google.cloud.deploy.v1.Release.RenderState
 */
export enum Release_RenderState {
  /**
   * The render state is unspecified.
   *
   * @generated from enum value: RENDER_STATE_UNSPECIFIED = 0;
   */
  RENDER_STATE_UNSPECIFIED = 0,

  /**
   * All rendering operations have completed successfully.
   *
   * @generated from enum value: SUCCEEDED = 1;
   */
  SUCCEEDED = 1,

  /**
   * All rendering operations have completed, and one or more have failed.
   *
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,

  /**
   * Rendering has started and is not complete.
   *
   * @generated from enum value: IN_PROGRESS = 3;
   */
  IN_PROGRESS = 3,
}

/**
 * Describes the enum google.cloud.deploy.v1.Release.RenderState.
 */
export const Release_RenderStateSchema: GenEnum<Release_RenderState> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 62, 0);

/**
 * The request object for `CreateDeployPolicy`.
 *
 * @generated from message google.cloud.deploy.v1.CreateDeployPolicyRequest
 */
export type CreateDeployPolicyRequest = Message<"google.cloud.deploy.v1.CreateDeployPolicyRequest"> & {
  /**
   * Required. The parent collection in which the `DeployPolicy` must be
   * created. The format is `projects/{project_id}/locations/{location_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. ID of the `DeployPolicy`.
   *
   * @generated from field: string deploy_policy_id = 2;
   */
  deployPolicyId: string;

  /**
   * Required. The `DeployPolicy` to create.
   *
   * @generated from field: google.cloud.deploy.v1.DeployPolicy deploy_policy = 3;
   */
  deployPolicy?: DeployPolicy;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.CreateDeployPolicyRequest.
 * Use `create(CreateDeployPolicyRequestSchema)` to create a new message.
 */
export const CreateDeployPolicyRequestSchema: GenMessage<CreateDeployPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 63);

/**
 * The request object for `UpdateDeployPolicy`.
 *
 * @generated from message google.cloud.deploy.v1.UpdateDeployPolicyRequest
 */
export type UpdateDeployPolicyRequest = Message<"google.cloud.deploy.v1.UpdateDeployPolicyRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten by the
   * update in the `DeployPolicy` resource. The fields specified in the
   * update_mask are relative to the resource, not the full request. A field
   * will be overwritten if it's in the mask. If the user doesn't provide a mask
   * then all fields are overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The `DeployPolicy` to update.
   *
   * @generated from field: google.cloud.deploy.v1.DeployPolicy deploy_policy = 2;
   */
  deployPolicy?: DeployPolicy;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;

  /**
   * Optional. If set to true, updating a `DeployPolicy` that does not exist
   * will result in the creation of a new `DeployPolicy`.
   *
   * @generated from field: bool allow_missing = 4;
   */
  allowMissing: boolean;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.UpdateDeployPolicyRequest.
 * Use `create(UpdateDeployPolicyRequestSchema)` to create a new message.
 */
export const UpdateDeployPolicyRequestSchema: GenMessage<UpdateDeployPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 64);

/**
 * The request object for `DeleteDeployPolicy`.
 *
 * @generated from message google.cloud.deploy.v1.DeleteDeployPolicyRequest
 */
export type DeleteDeployPolicyRequest = Message<"google.cloud.deploy.v1.DeleteDeployPolicyRequest"> & {
  /**
   * Required. The name of the `DeployPolicy` to delete. The format is
   * `projects/{project_id}/locations/{location_name}/deployPolicies/{deploy_policy_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Optional. If set to true, then deleting an already deleted or non-existing
   * `DeployPolicy` will succeed.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;

  /**
   * Optional. If set, validate the request and preview the review, but do not
   * actually post it.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;

  /**
   * Optional. This checksum is computed by the server based on the value of
   * other fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 5;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.deploy.v1.DeleteDeployPolicyRequest.
 * Use `create(DeleteDeployPolicyRequestSchema)` to create a new message.
 */
export const DeleteDeployPolicyRequestSchema: GenMessage<DeleteDeployPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 65);

/**
 * The request object for `ListDeployPolicies`.
 *
 * @generated from message google.cloud.deploy.v1.ListDeployPoliciesRequest
 */
export type ListDeployPoliciesRequest = Message<"google.cloud.deploy.v1.ListDeployPoliciesRequest"> & {
  /**
   * Required. The parent, which owns this collection of deploy policies. Format
   * must be `projects/{project_id}/locations/{location_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of deploy policies to return. The service may return
   * fewer than this value. If unspecified, at most 50 deploy policies will
   * be returned. The maximum value is 1000; values above 1000 will be set
   * to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListDeployPolicies` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter deploy policies to be returned. See https://google.aip.dev/160 for
   * more details. All fields can be used in the filter.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Field to sort by. See https://google.aip.dev/132#ordering for more details.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.deploy.v1.ListDeployPoliciesRequest.
 * Use `create(ListDeployPoliciesRequestSchema)` to create a new message.
 */
export const ListDeployPoliciesRequestSchema: GenMessage<ListDeployPoliciesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 66);

/**
 * The response object from `ListDeployPolicies`.
 *
 * @generated from message google.cloud.deploy.v1.ListDeployPoliciesResponse
 */
export type ListDeployPoliciesResponse = Message<"google.cloud.deploy.v1.ListDeployPoliciesResponse"> & {
  /**
   * The `DeployPolicy` objects.
   *
   * @generated from field: repeated google.cloud.deploy.v1.DeployPolicy deploy_policies = 1;
   */
  deployPolicies: DeployPolicy[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.ListDeployPoliciesResponse.
 * Use `create(ListDeployPoliciesResponseSchema)` to create a new message.
 */
export const ListDeployPoliciesResponseSchema: GenMessage<ListDeployPoliciesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 67);

/**
 * The request object for `GetDeployPolicy`
 *
 * @generated from message google.cloud.deploy.v1.GetDeployPolicyRequest
 */
export type GetDeployPolicyRequest = Message<"google.cloud.deploy.v1.GetDeployPolicyRequest"> & {
  /**
   * Required. Name of the `DeployPolicy`. Format must be
   * `projects/{project_id}/locations/{location_name}/deployPolicies/{deploy_policy_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GetDeployPolicyRequest.
 * Use `create(GetDeployPolicyRequestSchema)` to create a new message.
 */
export const GetDeployPolicyRequestSchema: GenMessage<GetDeployPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 68);

/**
 * Description of an a image to use during Skaffold rendering.
 *
 * @generated from message google.cloud.deploy.v1.BuildArtifact
 */
export type BuildArtifact = Message<"google.cloud.deploy.v1.BuildArtifact"> & {
  /**
   * Image name in Skaffold configuration.
   *
   * @generated from field: string image = 3;
   */
  image: string;

  /**
   * Image tag to use. This will generally be the full path to an image, such
   * as "gcr.io/my-project/busybox:1.2.3" or
   * "gcr.io/my-project/busybox@sha256:abc123".
   *
   * @generated from field: string tag = 2;
   */
  tag: string;
};

/**
 * Describes the message google.cloud.deploy.v1.BuildArtifact.
 * Use `create(BuildArtifactSchema)` to create a new message.
 */
export const BuildArtifactSchema: GenMessage<BuildArtifact> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 69);

/**
 * The artifacts produced by a target render operation.
 *
 * @generated from message google.cloud.deploy.v1.TargetArtifact
 */
export type TargetArtifact = Message<"google.cloud.deploy.v1.TargetArtifact"> & {
  /**
   * @generated from oneof google.cloud.deploy.v1.TargetArtifact.uri
   */
  uri: {
    /**
     * Output only. URI of a directory containing the artifacts. This contains
     * deployment configuration used by Skaffold during a rollout, and all
     * paths are relative to this location.
     *
     * @generated from field: string artifact_uri = 4;
     */
    value: string;
    case: "artifactUri";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. File path of the resolved Skaffold configuration relative to
   * the URI.
   *
   * @generated from field: string skaffold_config_path = 2;
   */
  skaffoldConfigPath: string;

  /**
   * Output only. File path of the rendered manifest relative to the URI.
   *
   * @generated from field: string manifest_path = 3;
   */
  manifestPath: string;

  /**
   * Output only. Map from the phase ID to the phase artifacts for the `Target`.
   *
   * @generated from field: map<string, google.cloud.deploy.v1.TargetArtifact.PhaseArtifact> phase_artifacts = 5;
   */
  phaseArtifacts: { [key: string]: TargetArtifact_PhaseArtifact };
};

/**
 * Describes the message google.cloud.deploy.v1.TargetArtifact.
 * Use `create(TargetArtifactSchema)` to create a new message.
 */
export const TargetArtifactSchema: GenMessage<TargetArtifact> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 70);

/**
 * Contains the paths to the artifacts, relative to the URI, for a phase.
 *
 * @generated from message google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
 */
export type TargetArtifact_PhaseArtifact = Message<"google.cloud.deploy.v1.TargetArtifact.PhaseArtifact"> & {
  /**
   * Output only. File path of the resolved Skaffold configuration relative to
   * the URI.
   *
   * @generated from field: string skaffold_config_path = 1;
   */
  skaffoldConfigPath: string;

  /**
   * Output only. File path of the rendered manifest relative to the URI.
   *
   * @generated from field: string manifest_path = 3;
   */
  manifestPath: string;

  /**
   * Output only. File path of the directory of rendered job manifests
   * relative to the URI. This is only set if it is applicable.
   *
   * @generated from field: string job_manifests_path = 4;
   */
  jobManifestsPath: string;
};

/**
 * Describes the message google.cloud.deploy.v1.TargetArtifact.PhaseArtifact.
 * Use `create(TargetArtifact_PhaseArtifactSchema)` to create a new message.
 */
export const TargetArtifact_PhaseArtifactSchema: GenMessage<TargetArtifact_PhaseArtifact> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 70, 0);

/**
 * The artifacts produced by a deploy operation.
 *
 * @generated from message google.cloud.deploy.v1.DeployArtifact
 */
export type DeployArtifact = Message<"google.cloud.deploy.v1.DeployArtifact"> & {
  /**
   * Output only. URI of a directory containing the artifacts. All paths are
   * relative to this location.
   *
   * @generated from field: string artifact_uri = 1;
   */
  artifactUri: string;

  /**
   * Output only. File paths of the manifests applied during the deploy
   * operation relative to the URI.
   *
   * @generated from field: repeated string manifest_paths = 2;
   */
  manifestPaths: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.DeployArtifact.
 * Use `create(DeployArtifactSchema)` to create a new message.
 */
export const DeployArtifactSchema: GenMessage<DeployArtifact> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 71);

/**
 * CloudRunRenderMetadata contains Cloud Run information associated with a
 * `Release` render.
 *
 * @generated from message google.cloud.deploy.v1.CloudRunRenderMetadata
 */
export type CloudRunRenderMetadata = Message<"google.cloud.deploy.v1.CloudRunRenderMetadata"> & {
  /**
   * Output only. The name of the Cloud Run Service in the rendered manifest.
   * Format is `projects/{project}/locations/{location}/services/{service}`.
   *
   * @generated from field: string service = 1;
   */
  service: string;
};

/**
 * Describes the message google.cloud.deploy.v1.CloudRunRenderMetadata.
 * Use `create(CloudRunRenderMetadataSchema)` to create a new message.
 */
export const CloudRunRenderMetadataSchema: GenMessage<CloudRunRenderMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 72);

/**
 * RenderMetadata includes information associated with a `Release` render.
 *
 * @generated from message google.cloud.deploy.v1.RenderMetadata
 */
export type RenderMetadata = Message<"google.cloud.deploy.v1.RenderMetadata"> & {
  /**
   * Output only. Metadata associated with rendering for Cloud Run.
   *
   * @generated from field: google.cloud.deploy.v1.CloudRunRenderMetadata cloud_run = 1;
   */
  cloudRun?: CloudRunRenderMetadata;

  /**
   * Output only. Custom metadata provided by user-defined render operation.
   *
   * @generated from field: google.cloud.deploy.v1.CustomMetadata custom = 2;
   */
  custom?: CustomMetadata;
};

/**
 * Describes the message google.cloud.deploy.v1.RenderMetadata.
 * Use `create(RenderMetadataSchema)` to create a new message.
 */
export const RenderMetadataSchema: GenMessage<RenderMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 73);

/**
 * The request object for `ListReleases`.
 *
 * @generated from message google.cloud.deploy.v1.ListReleasesRequest
 */
export type ListReleasesRequest = Message<"google.cloud.deploy.v1.ListReleasesRequest"> & {
  /**
   * Required. The `DeliveryPipeline` which owns this collection of `Release`
   * objects.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of `Release` objects to return. The service
   * may return fewer than this value. If unspecified, at most 50 `Release`
   * objects will be returned. The maximum value is 1000; values above 1000 will
   * be set to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous `ListReleases` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filter releases to be returned. See https://google.aip.dev/160
   * for more details.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   * more details.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.deploy.v1.ListReleasesRequest.
 * Use `create(ListReleasesRequestSchema)` to create a new message.
 */
export const ListReleasesRequestSchema: GenMessage<ListReleasesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 74);

/**
 * The response object from `ListReleases`.
 *
 * @generated from message google.cloud.deploy.v1.ListReleasesResponse
 */
export type ListReleasesResponse = Message<"google.cloud.deploy.v1.ListReleasesResponse"> & {
  /**
   * The `Release` objects.
   *
   * @generated from field: repeated google.cloud.deploy.v1.Release releases = 1;
   */
  releases: Release[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.ListReleasesResponse.
 * Use `create(ListReleasesResponseSchema)` to create a new message.
 */
export const ListReleasesResponseSchema: GenMessage<ListReleasesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 75);

/**
 * The request object for `GetRelease`.
 *
 * @generated from message google.cloud.deploy.v1.GetReleaseRequest
 */
export type GetReleaseRequest = Message<"google.cloud.deploy.v1.GetReleaseRequest"> & {
  /**
   * Required. Name of the `Release`. Format must be
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GetReleaseRequest.
 * Use `create(GetReleaseRequestSchema)` to create a new message.
 */
export const GetReleaseRequestSchema: GenMessage<GetReleaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 76);

/**
 * The request object for `CreateRelease`,
 *
 * @generated from message google.cloud.deploy.v1.CreateReleaseRequest
 */
export type CreateReleaseRequest = Message<"google.cloud.deploy.v1.CreateReleaseRequest"> & {
  /**
   * Required. The parent collection in which the `Release` is created.
   * The format is
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. ID of the `Release`.
   *
   * @generated from field: string release_id = 2;
   */
  releaseId: string;

  /**
   * Required. The `Release` to create.
   *
   * @generated from field: google.cloud.deploy.v1.Release release = 3;
   */
  release?: Release;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;

  /**
   * Optional. Deploy policies to override. Format is
   * `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
   *
   * @generated from field: repeated string override_deploy_policy = 6;
   */
  overrideDeployPolicy: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.CreateReleaseRequest.
 * Use `create(CreateReleaseRequestSchema)` to create a new message.
 */
export const CreateReleaseRequestSchema: GenMessage<CreateReleaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 77);

/**
 * A `Rollout` resource in the Cloud Deploy API.
 *
 * A `Rollout` contains information around a specific deployment to a `Target`.
 *
 * @generated from message google.cloud.deploy.v1.Rollout
 */
export type Rollout = Message<"google.cloud.deploy.v1.Rollout"> & {
  /**
   * Optional. Name of the `Rollout`. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   * The `rollout` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Unique identifier of the `Rollout`.
   *
   * @generated from field: string uid = 2;
   */
  uid: string;

  /**
   * Description of the `Rollout` for user purposes. Max length is 255
   * characters.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * User annotations. These attributes can only be set and used by the
   * user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations
   * for more details such as format and size limitations.
   *
   * @generated from field: map<string, string> annotations = 4;
   */
  annotations: { [key: string]: string };

  /**
   * Labels are attributes that can be set and used by both the
   * user and by Cloud Deploy. Labels must meet the following constraints:
   *
   * * Keys and values can contain only lowercase letters, numeric characters,
   * underscores, and dashes.
   * * All characters must use UTF-8 encoding, and international characters are
   * allowed.
   * * Keys must start with a lowercase letter or international character.
   * * Each resource is limited to a maximum of 64 labels.
   *
   * Both keys and values are additionally constrained to be <= 128 bytes.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * Output only. Time at which the `Rollout` was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time at which the `Rollout` was approved.
   *
   * @generated from field: google.protobuf.Timestamp approve_time = 7;
   */
  approveTime?: Timestamp;

  /**
   * Output only. Time at which the `Rollout` was enqueued.
   *
   * @generated from field: google.protobuf.Timestamp enqueue_time = 8;
   */
  enqueueTime?: Timestamp;

  /**
   * Output only. Time at which the `Rollout` started deploying.
   *
   * @generated from field: google.protobuf.Timestamp deploy_start_time = 9;
   */
  deployStartTime?: Timestamp;

  /**
   * Output only. Time at which the `Rollout` finished deploying.
   *
   * @generated from field: google.protobuf.Timestamp deploy_end_time = 10;
   */
  deployEndTime?: Timestamp;

  /**
   * Required. The ID of Target to which this `Rollout` is deploying.
   *
   * @generated from field: string target_id = 18;
   */
  targetId: string;

  /**
   * Output only. Approval state of the `Rollout`.
   *
   * @generated from field: google.cloud.deploy.v1.Rollout.ApprovalState approval_state = 12;
   */
  approvalState: Rollout_ApprovalState;

  /**
   * Output only. Current state of the `Rollout`.
   *
   * @generated from field: google.cloud.deploy.v1.Rollout.State state = 13;
   */
  state: Rollout_State;

  /**
   * Output only. Additional information about the rollout failure, if
   * available.
   *
   * @generated from field: string failure_reason = 14;
   */
  failureReason: string;

  /**
   * Output only. The resource name of the Cloud Build `Build` object that is
   * used to deploy the Rollout. Format is
   * `projects/{project}/locations/{location}/builds/{build}`.
   *
   * @generated from field: string deploying_build = 17;
   */
  deployingBuild: string;

  /**
   * This checksum is computed by the server based on the value of other
   * fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 16;
   */
  etag: string;

  /**
   * Output only. The reason this rollout failed. This will always be
   * unspecified while the rollout is in progress.
   *
   * @generated from field: google.cloud.deploy.v1.Rollout.FailureCause deploy_failure_cause = 19;
   */
  deployFailureCause: Rollout_FailureCause;

  /**
   * Output only. The phases that represent the workflows of this `Rollout`.
   *
   * @generated from field: repeated google.cloud.deploy.v1.Phase phases = 23;
   */
  phases: Phase[];

  /**
   * Output only. Metadata contains information about the rollout.
   *
   * @generated from field: google.cloud.deploy.v1.Metadata metadata = 24;
   */
  metadata?: Metadata;

  /**
   * Output only. Name of the `ControllerRollout`. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   *
   * @generated from field: string controller_rollout = 25;
   */
  controllerRollout: string;

  /**
   * Output only. Name of the `Rollout` that is rolled back by this `Rollout`.
   * Empty if this `Rollout` wasn't created as a rollback.
   *
   * @generated from field: string rollback_of_rollout = 26;
   */
  rollbackOfRollout: string;

  /**
   * Output only. Names of `Rollouts` that rolled back this `Rollout`.
   *
   * @generated from field: repeated string rolled_back_by_rollouts = 27;
   */
  rolledBackByRollouts: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.Rollout.
 * Use `create(RolloutSchema)` to create a new message.
 */
export const RolloutSchema: GenMessage<Rollout> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 78);

/**
 * Valid approval states of a `Rollout`.
 *
 * @generated from enum google.cloud.deploy.v1.Rollout.ApprovalState
 */
export enum Rollout_ApprovalState {
  /**
   * The `Rollout` has an unspecified approval state.
   *
   * @generated from enum value: APPROVAL_STATE_UNSPECIFIED = 0;
   */
  APPROVAL_STATE_UNSPECIFIED = 0,

  /**
   * The `Rollout` requires approval.
   *
   * @generated from enum value: NEEDS_APPROVAL = 1;
   */
  NEEDS_APPROVAL = 1,

  /**
   * The `Rollout` does not require approval.
   *
   * @generated from enum value: DOES_NOT_NEED_APPROVAL = 2;
   */
  DOES_NOT_NEED_APPROVAL = 2,

  /**
   * The `Rollout` has been approved.
   *
   * @generated from enum value: APPROVED = 3;
   */
  APPROVED = 3,

  /**
   * The `Rollout` has been rejected.
   *
   * @generated from enum value: REJECTED = 4;
   */
  REJECTED = 4,
}

/**
 * Describes the enum google.cloud.deploy.v1.Rollout.ApprovalState.
 */
export const Rollout_ApprovalStateSchema: GenEnum<Rollout_ApprovalState> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 78, 0);

/**
 * Valid states of a `Rollout`.
 *
 * @generated from enum google.cloud.deploy.v1.Rollout.State
 */
export enum Rollout_State {
  /**
   * The `Rollout` has an unspecified state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The `Rollout` has completed successfully.
   *
   * @generated from enum value: SUCCEEDED = 1;
   */
  SUCCEEDED = 1,

  /**
   * The `Rollout` has failed.
   *
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,

  /**
   * The `Rollout` is being deployed.
   *
   * @generated from enum value: IN_PROGRESS = 3;
   */
  IN_PROGRESS = 3,

  /**
   * The `Rollout` needs approval.
   *
   * @generated from enum value: PENDING_APPROVAL = 4;
   */
  PENDING_APPROVAL = 4,

  /**
   * An approver rejected the `Rollout`.
   *
   * @generated from enum value: APPROVAL_REJECTED = 5;
   */
  APPROVAL_REJECTED = 5,

  /**
   * The `Rollout` is waiting for an earlier Rollout(s) to complete on this
   * `Target`.
   *
   * @generated from enum value: PENDING = 6;
   */
  PENDING = 6,

  /**
   * The `Rollout` is waiting for the `Release` to be fully rendered.
   *
   * @generated from enum value: PENDING_RELEASE = 7;
   */
  PENDING_RELEASE = 7,

  /**
   * The `Rollout` is in the process of being cancelled.
   *
   * @generated from enum value: CANCELLING = 8;
   */
  CANCELLING = 8,

  /**
   * The `Rollout` has been cancelled.
   *
   * @generated from enum value: CANCELLED = 9;
   */
  CANCELLED = 9,

  /**
   * The `Rollout` is halted.
   *
   * @generated from enum value: HALTED = 10;
   */
  HALTED = 10,
}

/**
 * Describes the enum google.cloud.deploy.v1.Rollout.State.
 */
export const Rollout_StateSchema: GenEnum<Rollout_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 78, 1);

/**
 * Well-known rollout failures.
 *
 * @generated from enum google.cloud.deploy.v1.Rollout.FailureCause
 */
export enum Rollout_FailureCause {
  /**
   * No reason for failure is specified.
   *
   * @generated from enum value: FAILURE_CAUSE_UNSPECIFIED = 0;
   */
  FAILURE_CAUSE_UNSPECIFIED = 0,

  /**
   * Cloud Build is not available, either because it is not enabled or because
   * Cloud Deploy has insufficient permissions. See [required
   * permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
   *
   * @generated from enum value: CLOUD_BUILD_UNAVAILABLE = 1;
   */
  CLOUD_BUILD_UNAVAILABLE = 1,

  /**
   * The deploy operation did not complete successfully; check Cloud Build
   * logs.
   *
   * @generated from enum value: EXECUTION_FAILED = 2;
   */
  EXECUTION_FAILED = 2,

  /**
   * Deployment did not complete within the alloted time.
   *
   * @generated from enum value: DEADLINE_EXCEEDED = 3;
   */
  DEADLINE_EXCEEDED = 3,

  /**
   * Release is in a failed state.
   *
   * @generated from enum value: RELEASE_FAILED = 4;
   */
  RELEASE_FAILED = 4,

  /**
   * Release is abandoned.
   *
   * @generated from enum value: RELEASE_ABANDONED = 5;
   */
  RELEASE_ABANDONED = 5,

  /**
   * No Skaffold verify configuration was found.
   *
   * @generated from enum value: VERIFICATION_CONFIG_NOT_FOUND = 6;
   */
  VERIFICATION_CONFIG_NOT_FOUND = 6,

  /**
   * Cloud Build failed to fulfill Cloud Deploy's request. See failure_message
   * for additional details.
   *
   * @generated from enum value: CLOUD_BUILD_REQUEST_FAILED = 7;
   */
  CLOUD_BUILD_REQUEST_FAILED = 7,

  /**
   * A Rollout operation had a feature configured that is not supported.
   *
   * @generated from enum value: OPERATION_FEATURE_NOT_SUPPORTED = 8;
   */
  OPERATION_FEATURE_NOT_SUPPORTED = 8,
}

/**
 * Describes the enum google.cloud.deploy.v1.Rollout.FailureCause.
 */
export const Rollout_FailureCauseSchema: GenEnum<Rollout_FailureCause> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 78, 2);

/**
 * Metadata includes information associated with a `Rollout`.
 *
 * @generated from message google.cloud.deploy.v1.Metadata
 */
export type Metadata = Message<"google.cloud.deploy.v1.Metadata"> & {
  /**
   * Output only. The name of the Cloud Run Service that is associated with a
   * `Rollout`.
   *
   * @generated from field: google.cloud.deploy.v1.CloudRunMetadata cloud_run = 1;
   */
  cloudRun?: CloudRunMetadata;

  /**
   * Output only. AutomationRolloutMetadata contains the information about the
   * interactions between Automation service and this rollout.
   *
   * @generated from field: google.cloud.deploy.v1.AutomationRolloutMetadata automation = 2;
   */
  automation?: AutomationRolloutMetadata;

  /**
   * Output only. Custom metadata provided by user-defined `Rollout` operations.
   *
   * @generated from field: google.cloud.deploy.v1.CustomMetadata custom = 3;
   */
  custom?: CustomMetadata;
};

/**
 * Describes the message google.cloud.deploy.v1.Metadata.
 * Use `create(MetadataSchema)` to create a new message.
 */
export const MetadataSchema: GenMessage<Metadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 79);

/**
 * DeployJobRunMetadata surfaces information associated with a `DeployJobRun` to
 * the user.
 *
 * @generated from message google.cloud.deploy.v1.DeployJobRunMetadata
 */
export type DeployJobRunMetadata = Message<"google.cloud.deploy.v1.DeployJobRunMetadata"> & {
  /**
   * Output only. The name of the Cloud Run Service that is associated with a
   * `DeployJobRun`.
   *
   * @generated from field: google.cloud.deploy.v1.CloudRunMetadata cloud_run = 1;
   */
  cloudRun?: CloudRunMetadata;

  /**
   * Output only. Custom Target metadata associated with a `DeployJobRun`.
   *
   * @generated from field: google.cloud.deploy.v1.CustomTargetDeployMetadata custom_target = 2;
   */
  customTarget?: CustomTargetDeployMetadata;

  /**
   * Output only. Custom metadata provided by user-defined deploy operation.
   *
   * @generated from field: google.cloud.deploy.v1.CustomMetadata custom = 3;
   */
  custom?: CustomMetadata;
};

/**
 * Describes the message google.cloud.deploy.v1.DeployJobRunMetadata.
 * Use `create(DeployJobRunMetadataSchema)` to create a new message.
 */
export const DeployJobRunMetadataSchema: GenMessage<DeployJobRunMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 80);

/**
 * CloudRunMetadata contains information from a Cloud Run deployment.
 *
 * @generated from message google.cloud.deploy.v1.CloudRunMetadata
 */
export type CloudRunMetadata = Message<"google.cloud.deploy.v1.CloudRunMetadata"> & {
  /**
   * Output only. The name of the Cloud Run Service that is associated with a
   * `Rollout`. Format is
   * `projects/{project}/locations/{location}/services/{service}`.
   *
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * Output only. The Cloud Run Service urls that are associated with a
   * `Rollout`.
   *
   * @generated from field: repeated string service_urls = 2;
   */
  serviceUrls: string[];

  /**
   * Output only. The Cloud Run Revision id associated with a `Rollout`.
   *
   * @generated from field: string revision = 3;
   */
  revision: string;

  /**
   * Output only. The name of the Cloud Run job that is associated with a
   * `Rollout`. Format is
   * `projects/{project}/locations/{location}/jobs/{job_name}`.
   *
   * @generated from field: string job = 4;
   */
  job: string;
};

/**
 * Describes the message google.cloud.deploy.v1.CloudRunMetadata.
 * Use `create(CloudRunMetadataSchema)` to create a new message.
 */
export const CloudRunMetadataSchema: GenMessage<CloudRunMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 81);

/**
 * CustomTargetDeployMetadata contains information from a Custom Target
 * deploy operation.
 *
 * @generated from message google.cloud.deploy.v1.CustomTargetDeployMetadata
 */
export type CustomTargetDeployMetadata = Message<"google.cloud.deploy.v1.CustomTargetDeployMetadata"> & {
  /**
   * Output only. Skip message provided in the results of a custom deploy
   * operation.
   *
   * @generated from field: string skip_message = 1;
   */
  skipMessage: string;
};

/**
 * Describes the message google.cloud.deploy.v1.CustomTargetDeployMetadata.
 * Use `create(CustomTargetDeployMetadataSchema)` to create a new message.
 */
export const CustomTargetDeployMetadataSchema: GenMessage<CustomTargetDeployMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 82);

/**
 * AutomationRolloutMetadata contains Automation-related actions that
 * were performed on a rollout.
 *
 * @generated from message google.cloud.deploy.v1.AutomationRolloutMetadata
 */
export type AutomationRolloutMetadata = Message<"google.cloud.deploy.v1.AutomationRolloutMetadata"> & {
  /**
   * Output only. The name of the AutomationRun initiated by a promote release
   * rule.
   *
   * @generated from field: string promote_automation_run = 1;
   */
  promoteAutomationRun: string;

  /**
   * Output only. The names of the AutomationRuns initiated by an advance
   * rollout rule.
   *
   * @generated from field: repeated string advance_automation_runs = 2;
   */
  advanceAutomationRuns: string[];

  /**
   * Output only. The names of the AutomationRuns initiated by a repair rollout
   * rule.
   *
   * @generated from field: repeated string repair_automation_runs = 3;
   */
  repairAutomationRuns: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.AutomationRolloutMetadata.
 * Use `create(AutomationRolloutMetadataSchema)` to create a new message.
 */
export const AutomationRolloutMetadataSchema: GenMessage<AutomationRolloutMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 83);

/**
 * CustomMetadata contains information from a user-defined operation.
 *
 * @generated from message google.cloud.deploy.v1.CustomMetadata
 */
export type CustomMetadata = Message<"google.cloud.deploy.v1.CustomMetadata"> & {
  /**
   * Output only. Key-value pairs provided by the user-defined operation.
   *
   * @generated from field: map<string, string> values = 1;
   */
  values: { [key: string]: string };
};

/**
 * Describes the message google.cloud.deploy.v1.CustomMetadata.
 * Use `create(CustomMetadataSchema)` to create a new message.
 */
export const CustomMetadataSchema: GenMessage<CustomMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 84);

/**
 * Phase represents a collection of jobs that are logically grouped together
 * for a `Rollout`.
 *
 * @generated from message google.cloud.deploy.v1.Phase
 */
export type Phase = Message<"google.cloud.deploy.v1.Phase"> & {
  /**
   * Output only. The ID of the Phase.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Output only. Current state of the Phase.
   *
   * @generated from field: google.cloud.deploy.v1.Phase.State state = 3;
   */
  state: Phase_State;

  /**
   * Output only. Additional information on why the Phase was skipped, if
   * available.
   *
   * @generated from field: string skip_message = 6;
   */
  skipMessage: string;

  /**
   * The job composition of this Phase.
   *
   * @generated from oneof google.cloud.deploy.v1.Phase.jobs
   */
  jobs: {
    /**
     * Output only. Deployment job composition.
     *
     * @generated from field: google.cloud.deploy.v1.DeploymentJobs deployment_jobs = 4;
     */
    value: DeploymentJobs;
    case: "deploymentJobs";
  } | {
    /**
     * Output only. ChildRollout job composition.
     *
     * @generated from field: google.cloud.deploy.v1.ChildRolloutJobs child_rollout_jobs = 5;
     */
    value: ChildRolloutJobs;
    case: "childRolloutJobs";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.Phase.
 * Use `create(PhaseSchema)` to create a new message.
 */
export const PhaseSchema: GenMessage<Phase> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 85);

/**
 * Valid states of a Phase.
 *
 * @generated from enum google.cloud.deploy.v1.Phase.State
 */
export enum Phase_State {
  /**
   * The Phase has an unspecified state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The Phase is waiting for an earlier Phase(s) to complete.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The Phase is in progress.
   *
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * The Phase has succeeded.
   *
   * @generated from enum value: SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * The Phase has failed.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * The Phase was aborted.
   *
   * @generated from enum value: ABORTED = 5;
   */
  ABORTED = 5,

  /**
   * The Phase was skipped.
   *
   * @generated from enum value: SKIPPED = 6;
   */
  SKIPPED = 6,
}

/**
 * Describes the enum google.cloud.deploy.v1.Phase.State.
 */
export const Phase_StateSchema: GenEnum<Phase_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 85, 0);

/**
 * Deployment job composition.
 *
 * @generated from message google.cloud.deploy.v1.DeploymentJobs
 */
export type DeploymentJobs = Message<"google.cloud.deploy.v1.DeploymentJobs"> & {
  /**
   * Output only. The deploy Job. This is the deploy job in the phase.
   *
   * @generated from field: google.cloud.deploy.v1.Job deploy_job = 1;
   */
  deployJob?: Job;

  /**
   * Output only. The verify Job. Runs after a deploy if the deploy succeeds.
   *
   * @generated from field: google.cloud.deploy.v1.Job verify_job = 2;
   */
  verifyJob?: Job;

  /**
   * Output only. The predeploy Job, which is the first job on the phase.
   *
   * @generated from field: google.cloud.deploy.v1.Job predeploy_job = 3;
   */
  predeployJob?: Job;

  /**
   * Output only. The postdeploy Job, which is the last job on the phase.
   *
   * @generated from field: google.cloud.deploy.v1.Job postdeploy_job = 4;
   */
  postdeployJob?: Job;
};

/**
 * Describes the message google.cloud.deploy.v1.DeploymentJobs.
 * Use `create(DeploymentJobsSchema)` to create a new message.
 */
export const DeploymentJobsSchema: GenMessage<DeploymentJobs> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 86);

/**
 * ChildRollouts job composition
 *
 * @generated from message google.cloud.deploy.v1.ChildRolloutJobs
 */
export type ChildRolloutJobs = Message<"google.cloud.deploy.v1.ChildRolloutJobs"> & {
  /**
   * Output only. List of CreateChildRolloutJobs
   *
   * @generated from field: repeated google.cloud.deploy.v1.Job create_rollout_jobs = 1;
   */
  createRolloutJobs: Job[];

  /**
   * Output only. List of AdvanceChildRolloutJobs
   *
   * @generated from field: repeated google.cloud.deploy.v1.Job advance_rollout_jobs = 2;
   */
  advanceRolloutJobs: Job[];
};

/**
 * Describes the message google.cloud.deploy.v1.ChildRolloutJobs.
 * Use `create(ChildRolloutJobsSchema)` to create a new message.
 */
export const ChildRolloutJobsSchema: GenMessage<ChildRolloutJobs> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 87);

/**
 * Job represents an operation for a `Rollout`.
 *
 * @generated from message google.cloud.deploy.v1.Job
 */
export type Job = Message<"google.cloud.deploy.v1.Job"> & {
  /**
   * Output only. The ID of the Job.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Output only. The current state of the Job.
   *
   * @generated from field: google.cloud.deploy.v1.Job.State state = 2;
   */
  state: Job_State;

  /**
   * Output only. Additional information on why the Job was skipped, if
   * available.
   *
   * @generated from field: string skip_message = 8;
   */
  skipMessage: string;

  /**
   * Output only. The name of the `JobRun` responsible for the most recent
   * invocation of this Job.
   *
   * @generated from field: string job_run = 3;
   */
  jobRun: string;

  /**
   * The type of Job.
   *
   * @generated from oneof google.cloud.deploy.v1.Job.job_type
   */
  jobType: {
    /**
     * Output only. A deploy Job.
     *
     * @generated from field: google.cloud.deploy.v1.DeployJob deploy_job = 4;
     */
    value: DeployJob;
    case: "deployJob";
  } | {
    /**
     * Output only. A verify Job.
     *
     * @generated from field: google.cloud.deploy.v1.VerifyJob verify_job = 5;
     */
    value: VerifyJob;
    case: "verifyJob";
  } | {
    /**
     * Output only. A predeploy Job.
     *
     * @generated from field: google.cloud.deploy.v1.PredeployJob predeploy_job = 9;
     */
    value: PredeployJob;
    case: "predeployJob";
  } | {
    /**
     * Output only. A postdeploy Job.
     *
     * @generated from field: google.cloud.deploy.v1.PostdeployJob postdeploy_job = 10;
     */
    value: PostdeployJob;
    case: "postdeployJob";
  } | {
    /**
     * Output only. A createChildRollout Job.
     *
     * @generated from field: google.cloud.deploy.v1.CreateChildRolloutJob create_child_rollout_job = 6;
     */
    value: CreateChildRolloutJob;
    case: "createChildRolloutJob";
  } | {
    /**
     * Output only. An advanceChildRollout Job.
     *
     * @generated from field: google.cloud.deploy.v1.AdvanceChildRolloutJob advance_child_rollout_job = 7;
     */
    value: AdvanceChildRolloutJob;
    case: "advanceChildRolloutJob";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.Job.
 * Use `create(JobSchema)` to create a new message.
 */
export const JobSchema: GenMessage<Job> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 88);

/**
 * Valid states of a Job.
 *
 * @generated from enum google.cloud.deploy.v1.Job.State
 */
export enum Job_State {
  /**
   * The Job has an unspecified state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The Job is waiting for an earlier Phase(s) or Job(s) to complete.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The Job is disabled.
   *
   * @generated from enum value: DISABLED = 2;
   */
  DISABLED = 2,

  /**
   * The Job is in progress.
   *
   * @generated from enum value: IN_PROGRESS = 3;
   */
  IN_PROGRESS = 3,

  /**
   * The Job succeeded.
   *
   * @generated from enum value: SUCCEEDED = 4;
   */
  SUCCEEDED = 4,

  /**
   * The Job failed.
   *
   * @generated from enum value: FAILED = 5;
   */
  FAILED = 5,

  /**
   * The Job was aborted.
   *
   * @generated from enum value: ABORTED = 6;
   */
  ABORTED = 6,

  /**
   * The Job was skipped.
   *
   * @generated from enum value: SKIPPED = 7;
   */
  SKIPPED = 7,

  /**
   * The Job was ignored.
   *
   * @generated from enum value: IGNORED = 8;
   */
  IGNORED = 8,
}

/**
 * Describes the enum google.cloud.deploy.v1.Job.State.
 */
export const Job_StateSchema: GenEnum<Job_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 88, 0);

/**
 * A deploy Job.
 *
 * @generated from message google.cloud.deploy.v1.DeployJob
 */
export type DeployJob = Message<"google.cloud.deploy.v1.DeployJob"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.DeployJob.
 * Use `create(DeployJobSchema)` to create a new message.
 */
export const DeployJobSchema: GenMessage<DeployJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 89);

/**
 * A verify Job.
 *
 * @generated from message google.cloud.deploy.v1.VerifyJob
 */
export type VerifyJob = Message<"google.cloud.deploy.v1.VerifyJob"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.VerifyJob.
 * Use `create(VerifyJobSchema)` to create a new message.
 */
export const VerifyJobSchema: GenMessage<VerifyJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 90);

/**
 * A predeploy Job.
 *
 * @generated from message google.cloud.deploy.v1.PredeployJob
 */
export type PredeployJob = Message<"google.cloud.deploy.v1.PredeployJob"> & {
  /**
   * Output only. The custom actions that the predeploy Job executes.
   *
   * @generated from field: repeated string actions = 1;
   */
  actions: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.PredeployJob.
 * Use `create(PredeployJobSchema)` to create a new message.
 */
export const PredeployJobSchema: GenMessage<PredeployJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 91);

/**
 * A postdeploy Job.
 *
 * @generated from message google.cloud.deploy.v1.PostdeployJob
 */
export type PostdeployJob = Message<"google.cloud.deploy.v1.PostdeployJob"> & {
  /**
   * Output only. The custom actions that the postdeploy Job executes.
   *
   * @generated from field: repeated string actions = 1;
   */
  actions: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.PostdeployJob.
 * Use `create(PostdeployJobSchema)` to create a new message.
 */
export const PostdeployJobSchema: GenMessage<PostdeployJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 92);

/**
 * A createChildRollout Job.
 *
 * @generated from message google.cloud.deploy.v1.CreateChildRolloutJob
 */
export type CreateChildRolloutJob = Message<"google.cloud.deploy.v1.CreateChildRolloutJob"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.CreateChildRolloutJob.
 * Use `create(CreateChildRolloutJobSchema)` to create a new message.
 */
export const CreateChildRolloutJobSchema: GenMessage<CreateChildRolloutJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 93);

/**
 * An advanceChildRollout Job.
 *
 * @generated from message google.cloud.deploy.v1.AdvanceChildRolloutJob
 */
export type AdvanceChildRolloutJob = Message<"google.cloud.deploy.v1.AdvanceChildRolloutJob"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.AdvanceChildRolloutJob.
 * Use `create(AdvanceChildRolloutJobSchema)` to create a new message.
 */
export const AdvanceChildRolloutJobSchema: GenMessage<AdvanceChildRolloutJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 94);

/**
 * ListRolloutsRequest is the request object used by `ListRollouts`.
 *
 * @generated from message google.cloud.deploy.v1.ListRolloutsRequest
 */
export type ListRolloutsRequest = Message<"google.cloud.deploy.v1.ListRolloutsRequest"> & {
  /**
   * Required. The `Release` which owns this collection of `Rollout` objects.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of `Rollout` objects to return. The service
   * may return fewer than this value. If unspecified, at most 50 `Rollout`
   * objects will be returned. The maximum value is 1000; values above 1000 will
   * be set to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous `ListRollouts` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filter rollouts to be returned. See https://google.aip.dev/160
   * for more details.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   * more details.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.deploy.v1.ListRolloutsRequest.
 * Use `create(ListRolloutsRequestSchema)` to create a new message.
 */
export const ListRolloutsRequestSchema: GenMessage<ListRolloutsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 95);

/**
 * ListRolloutsResponse is the response object reutrned by `ListRollouts`.
 *
 * @generated from message google.cloud.deploy.v1.ListRolloutsResponse
 */
export type ListRolloutsResponse = Message<"google.cloud.deploy.v1.ListRolloutsResponse"> & {
  /**
   * The `Rollout` objects.
   *
   * @generated from field: repeated google.cloud.deploy.v1.Rollout rollouts = 1;
   */
  rollouts: Rollout[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.ListRolloutsResponse.
 * Use `create(ListRolloutsResponseSchema)` to create a new message.
 */
export const ListRolloutsResponseSchema: GenMessage<ListRolloutsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 96);

/**
 * GetRolloutRequest is the request object used by `GetRollout`.
 *
 * @generated from message google.cloud.deploy.v1.GetRolloutRequest
 */
export type GetRolloutRequest = Message<"google.cloud.deploy.v1.GetRolloutRequest"> & {
  /**
   * Required. Name of the `Rollout`. Format must be
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GetRolloutRequest.
 * Use `create(GetRolloutRequestSchema)` to create a new message.
 */
export const GetRolloutRequestSchema: GenMessage<GetRolloutRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 97);

/**
 * CreateRolloutRequest is the request object used by `CreateRollout`.
 *
 * @generated from message google.cloud.deploy.v1.CreateRolloutRequest
 */
export type CreateRolloutRequest = Message<"google.cloud.deploy.v1.CreateRolloutRequest"> & {
  /**
   * Required. The parent collection in which the `Rollout` must be created.
   * The format is
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. ID of the `Rollout`.
   *
   * @generated from field: string rollout_id = 2;
   */
  rolloutId: string;

  /**
   * Required. The `Rollout` to create.
   *
   * @generated from field: google.cloud.deploy.v1.Rollout rollout = 3;
   */
  rollout?: Rollout;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;

  /**
   * Optional. Deploy policies to override. Format is
   * `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
   *
   * @generated from field: repeated string override_deploy_policy = 6;
   */
  overrideDeployPolicy: string[];

  /**
   * Optional. The starting phase ID for the `Rollout`. If empty the `Rollout`
   * will start at the first phase.
   *
   * @generated from field: string starting_phase_id = 7;
   */
  startingPhaseId: string;
};

/**
 * Describes the message google.cloud.deploy.v1.CreateRolloutRequest.
 * Use `create(CreateRolloutRequestSchema)` to create a new message.
 */
export const CreateRolloutRequestSchema: GenMessage<CreateRolloutRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 98);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.deploy.v1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.deploy.v1.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. Identifies whether the user has requested cancellation
   * of the operation. Operations that have successfully been cancelled
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.deploy.v1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 99);

/**
 * The request object used by `ApproveRollout`.
 *
 * @generated from message google.cloud.deploy.v1.ApproveRolloutRequest
 */
export type ApproveRolloutRequest = Message<"google.cloud.deploy.v1.ApproveRolloutRequest"> & {
  /**
   * Required. Name of the Rollout. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. True = approve; false = reject
   *
   * @generated from field: bool approved = 2;
   */
  approved: boolean;

  /**
   * Optional. Deploy policies to override. Format is
   * `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
   *
   * @generated from field: repeated string override_deploy_policy = 3;
   */
  overrideDeployPolicy: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.ApproveRolloutRequest.
 * Use `create(ApproveRolloutRequestSchema)` to create a new message.
 */
export const ApproveRolloutRequestSchema: GenMessage<ApproveRolloutRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 100);

/**
 * The response object from `ApproveRollout`.
 *
 * @generated from message google.cloud.deploy.v1.ApproveRolloutResponse
 */
export type ApproveRolloutResponse = Message<"google.cloud.deploy.v1.ApproveRolloutResponse"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.ApproveRolloutResponse.
 * Use `create(ApproveRolloutResponseSchema)` to create a new message.
 */
export const ApproveRolloutResponseSchema: GenMessage<ApproveRolloutResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 101);

/**
 * The request object used by `AdvanceRollout`.
 *
 * @generated from message google.cloud.deploy.v1.AdvanceRolloutRequest
 */
export type AdvanceRolloutRequest = Message<"google.cloud.deploy.v1.AdvanceRolloutRequest"> & {
  /**
   * Required. Name of the Rollout. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The phase ID to advance the `Rollout` to.
   *
   * @generated from field: string phase_id = 2;
   */
  phaseId: string;

  /**
   * Optional. Deploy policies to override. Format is
   * `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
   *
   * @generated from field: repeated string override_deploy_policy = 3;
   */
  overrideDeployPolicy: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.AdvanceRolloutRequest.
 * Use `create(AdvanceRolloutRequestSchema)` to create a new message.
 */
export const AdvanceRolloutRequestSchema: GenMessage<AdvanceRolloutRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 102);

/**
 * The response object from `AdvanceRollout`.
 *
 * @generated from message google.cloud.deploy.v1.AdvanceRolloutResponse
 */
export type AdvanceRolloutResponse = Message<"google.cloud.deploy.v1.AdvanceRolloutResponse"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.AdvanceRolloutResponse.
 * Use `create(AdvanceRolloutResponseSchema)` to create a new message.
 */
export const AdvanceRolloutResponseSchema: GenMessage<AdvanceRolloutResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 103);

/**
 * The request object used by `CancelRollout`.
 *
 * @generated from message google.cloud.deploy.v1.CancelRolloutRequest
 */
export type CancelRolloutRequest = Message<"google.cloud.deploy.v1.CancelRolloutRequest"> & {
  /**
   * Required. Name of the Rollout. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Deploy policies to override. Format is
   * `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
   *
   * @generated from field: repeated string override_deploy_policy = 2;
   */
  overrideDeployPolicy: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.CancelRolloutRequest.
 * Use `create(CancelRolloutRequestSchema)` to create a new message.
 */
export const CancelRolloutRequestSchema: GenMessage<CancelRolloutRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 104);

/**
 * The response object from `CancelRollout`.
 *
 * @generated from message google.cloud.deploy.v1.CancelRolloutResponse
 */
export type CancelRolloutResponse = Message<"google.cloud.deploy.v1.CancelRolloutResponse"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.CancelRolloutResponse.
 * Use `create(CancelRolloutResponseSchema)` to create a new message.
 */
export const CancelRolloutResponseSchema: GenMessage<CancelRolloutResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 105);

/**
 * The request object used by `IgnoreJob`.
 *
 * @generated from message google.cloud.deploy.v1.IgnoreJobRequest
 */
export type IgnoreJobRequest = Message<"google.cloud.deploy.v1.IgnoreJobRequest"> & {
  /**
   * Required. Name of the Rollout. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   *
   * @generated from field: string rollout = 1;
   */
  rollout: string;

  /**
   * Required. The phase ID the Job to ignore belongs to.
   *
   * @generated from field: string phase_id = 2;
   */
  phaseId: string;

  /**
   * Required. The job ID for the Job to ignore.
   *
   * @generated from field: string job_id = 3;
   */
  jobId: string;

  /**
   * Optional. Deploy policies to override. Format is
   * `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
   *
   * @generated from field: repeated string override_deploy_policy = 4;
   */
  overrideDeployPolicy: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.IgnoreJobRequest.
 * Use `create(IgnoreJobRequestSchema)` to create a new message.
 */
export const IgnoreJobRequestSchema: GenMessage<IgnoreJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 106);

/**
 * The response object from `IgnoreJob`.
 *
 * @generated from message google.cloud.deploy.v1.IgnoreJobResponse
 */
export type IgnoreJobResponse = Message<"google.cloud.deploy.v1.IgnoreJobResponse"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.IgnoreJobResponse.
 * Use `create(IgnoreJobResponseSchema)` to create a new message.
 */
export const IgnoreJobResponseSchema: GenMessage<IgnoreJobResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 107);

/**
 * RetryJobRequest is the request object used by `RetryJob`.
 *
 * @generated from message google.cloud.deploy.v1.RetryJobRequest
 */
export type RetryJobRequest = Message<"google.cloud.deploy.v1.RetryJobRequest"> & {
  /**
   * Required. Name of the Rollout. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   *
   * @generated from field: string rollout = 1;
   */
  rollout: string;

  /**
   * Required. The phase ID the Job to retry belongs to.
   *
   * @generated from field: string phase_id = 2;
   */
  phaseId: string;

  /**
   * Required. The job ID for the Job to retry.
   *
   * @generated from field: string job_id = 3;
   */
  jobId: string;

  /**
   * Optional. Deploy policies to override. Format is
   * `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
   *
   * @generated from field: repeated string override_deploy_policy = 4;
   */
  overrideDeployPolicy: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.RetryJobRequest.
 * Use `create(RetryJobRequestSchema)` to create a new message.
 */
export const RetryJobRequestSchema: GenMessage<RetryJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 108);

/**
 * The response object from 'RetryJob'.
 *
 * @generated from message google.cloud.deploy.v1.RetryJobResponse
 */
export type RetryJobResponse = Message<"google.cloud.deploy.v1.RetryJobResponse"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.RetryJobResponse.
 * Use `create(RetryJobResponseSchema)` to create a new message.
 */
export const RetryJobResponseSchema: GenMessage<RetryJobResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 109);

/**
 * The request object used by `AbandonRelease`.
 *
 * @generated from message google.cloud.deploy.v1.AbandonReleaseRequest
 */
export type AbandonReleaseRequest = Message<"google.cloud.deploy.v1.AbandonReleaseRequest"> & {
  /**
   * Required. Name of the Release. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.AbandonReleaseRequest.
 * Use `create(AbandonReleaseRequestSchema)` to create a new message.
 */
export const AbandonReleaseRequestSchema: GenMessage<AbandonReleaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 110);

/**
 * The response object for `AbandonRelease`.
 *
 * @generated from message google.cloud.deploy.v1.AbandonReleaseResponse
 */
export type AbandonReleaseResponse = Message<"google.cloud.deploy.v1.AbandonReleaseResponse"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.AbandonReleaseResponse.
 * Use `create(AbandonReleaseResponseSchema)` to create a new message.
 */
export const AbandonReleaseResponseSchema: GenMessage<AbandonReleaseResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 111);

/**
 * A `JobRun` resource in the Cloud Deploy API.
 *
 * A `JobRun` contains information of a single `Rollout` job evaluation.
 *
 * @generated from message google.cloud.deploy.v1.JobRun
 */
export type JobRun = Message<"google.cloud.deploy.v1.JobRun"> & {
  /**
   * Optional. Name of the `JobRun`. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/{rollouts}/jobRuns/{uuid}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Unique identifier of the `JobRun`.
   *
   * @generated from field: string uid = 2;
   */
  uid: string;

  /**
   * Output only. ID of the `Rollout` phase this `JobRun` belongs in.
   *
   * @generated from field: string phase_id = 3;
   */
  phaseId: string;

  /**
   * Output only. ID of the `Rollout` job this `JobRun` corresponds to.
   *
   * @generated from field: string job_id = 4;
   */
  jobId: string;

  /**
   * Output only. Time at which the `JobRun` was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time at which the `JobRun` was started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 6;
   */
  startTime?: Timestamp;

  /**
   * Output only. Time at which the `JobRun` ended.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 7;
   */
  endTime?: Timestamp;

  /**
   * Output only. The current state of the `JobRun`.
   *
   * @generated from field: google.cloud.deploy.v1.JobRun.State state = 8;
   */
  state: JobRun_State;

  /**
   * The `JobRun` type and the information for that type.
   *
   * @generated from oneof google.cloud.deploy.v1.JobRun.job_run
   */
  jobRun: {
    /**
     * Output only. Information specific to a deploy `JobRun`.
     *
     * @generated from field: google.cloud.deploy.v1.DeployJobRun deploy_job_run = 9;
     */
    value: DeployJobRun;
    case: "deployJobRun";
  } | {
    /**
     * Output only. Information specific to a verify `JobRun`.
     *
     * @generated from field: google.cloud.deploy.v1.VerifyJobRun verify_job_run = 10;
     */
    value: VerifyJobRun;
    case: "verifyJobRun";
  } | {
    /**
     * Output only. Information specific to a predeploy `JobRun`.
     *
     * @generated from field: google.cloud.deploy.v1.PredeployJobRun predeploy_job_run = 14;
     */
    value: PredeployJobRun;
    case: "predeployJobRun";
  } | {
    /**
     * Output only. Information specific to a postdeploy `JobRun`.
     *
     * @generated from field: google.cloud.deploy.v1.PostdeployJobRun postdeploy_job_run = 15;
     */
    value: PostdeployJobRun;
    case: "postdeployJobRun";
  } | {
    /**
     * Output only. Information specific to a createChildRollout `JobRun`.
     *
     * @generated from field: google.cloud.deploy.v1.CreateChildRolloutJobRun create_child_rollout_job_run = 12;
     */
    value: CreateChildRolloutJobRun;
    case: "createChildRolloutJobRun";
  } | {
    /**
     * Output only. Information specific to an advanceChildRollout `JobRun`
     *
     * @generated from field: google.cloud.deploy.v1.AdvanceChildRolloutJobRun advance_child_rollout_job_run = 13;
     */
    value: AdvanceChildRolloutJobRun;
    case: "advanceChildRolloutJobRun";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. This checksum is computed by the server based on the value of
   * other fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 11;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.deploy.v1.JobRun.
 * Use `create(JobRunSchema)` to create a new message.
 */
export const JobRunSchema: GenMessage<JobRun> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 112);

/**
 * Valid states of a `JobRun`.
 *
 * @generated from enum google.cloud.deploy.v1.JobRun.State
 */
export enum JobRun_State {
  /**
   * The `JobRun` has an unspecified state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The `JobRun` is in progress.
   *
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * The `JobRun` has succeeded.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The `JobRun` has failed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * The `JobRun` is terminating.
   *
   * @generated from enum value: TERMINATING = 4;
   */
  TERMINATING = 4,

  /**
   * The `JobRun` was terminated.
   *
   * @generated from enum value: TERMINATED = 5;
   */
  TERMINATED = 5,
}

/**
 * Describes the enum google.cloud.deploy.v1.JobRun.State.
 */
export const JobRun_StateSchema: GenEnum<JobRun_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 112, 0);

/**
 * DeployJobRun contains information specific to a deploy `JobRun`.
 *
 * @generated from message google.cloud.deploy.v1.DeployJobRun
 */
export type DeployJobRun = Message<"google.cloud.deploy.v1.DeployJobRun"> & {
  /**
   * Output only. The resource name of the Cloud Build `Build` object that is
   * used to deploy. Format is
   * `projects/{project}/locations/{location}/builds/{build}`.
   *
   * @generated from field: string build = 1;
   */
  build: string;

  /**
   * Output only. The reason the deploy failed. This will always be unspecified
   * while the deploy is in progress or if it succeeded.
   *
   * @generated from field: google.cloud.deploy.v1.DeployJobRun.FailureCause failure_cause = 2;
   */
  failureCause: DeployJobRun_FailureCause;

  /**
   * Output only. Additional information about the deploy failure, if available.
   *
   * @generated from field: string failure_message = 3;
   */
  failureMessage: string;

  /**
   * Output only. Metadata containing information about the deploy job run.
   *
   * @generated from field: google.cloud.deploy.v1.DeployJobRunMetadata metadata = 4;
   */
  metadata?: DeployJobRunMetadata;

  /**
   * Output only. The artifact of a deploy job run, if available.
   *
   * @generated from field: google.cloud.deploy.v1.DeployArtifact artifact = 5;
   */
  artifact?: DeployArtifact;
};

/**
 * Describes the message google.cloud.deploy.v1.DeployJobRun.
 * Use `create(DeployJobRunSchema)` to create a new message.
 */
export const DeployJobRunSchema: GenMessage<DeployJobRun> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 113);

/**
 * Well-known deploy failures.
 *
 * @generated from enum google.cloud.deploy.v1.DeployJobRun.FailureCause
 */
export enum DeployJobRun_FailureCause {
  /**
   * No reason for failure is specified.
   *
   * @generated from enum value: FAILURE_CAUSE_UNSPECIFIED = 0;
   */
  FAILURE_CAUSE_UNSPECIFIED = 0,

  /**
   * Cloud Build is not available, either because it is not enabled or because
   * Cloud Deploy has insufficient permissions. See [Required
   * permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
   *
   * @generated from enum value: CLOUD_BUILD_UNAVAILABLE = 1;
   */
  CLOUD_BUILD_UNAVAILABLE = 1,

  /**
   * The deploy operation did not complete successfully; check Cloud Build
   * logs.
   *
   * @generated from enum value: EXECUTION_FAILED = 2;
   */
  EXECUTION_FAILED = 2,

  /**
   * The deploy job run did not complete within the alloted time.
   *
   * @generated from enum value: DEADLINE_EXCEEDED = 3;
   */
  DEADLINE_EXCEEDED = 3,

  /**
   * There were missing resources in the runtime environment required for a
   * canary deployment. Check the Cloud Build logs for more information.
   *
   * @generated from enum value: MISSING_RESOURCES_FOR_CANARY = 4;
   */
  MISSING_RESOURCES_FOR_CANARY = 4,

  /**
   * Cloud Build failed to fulfill Cloud Deploy's request. See failure_message
   * for additional details.
   *
   * @generated from enum value: CLOUD_BUILD_REQUEST_FAILED = 5;
   */
  CLOUD_BUILD_REQUEST_FAILED = 5,

  /**
   * The deploy operation had a feature configured that is not supported.
   *
   * @generated from enum value: DEPLOY_FEATURE_NOT_SUPPORTED = 6;
   */
  DEPLOY_FEATURE_NOT_SUPPORTED = 6,
}

/**
 * Describes the enum google.cloud.deploy.v1.DeployJobRun.FailureCause.
 */
export const DeployJobRun_FailureCauseSchema: GenEnum<DeployJobRun_FailureCause> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 113, 0);

/**
 * VerifyJobRun contains information specific to a verify `JobRun`.
 *
 * @generated from message google.cloud.deploy.v1.VerifyJobRun
 */
export type VerifyJobRun = Message<"google.cloud.deploy.v1.VerifyJobRun"> & {
  /**
   * Output only. The resource name of the Cloud Build `Build` object that is
   * used to verify. Format is
   * `projects/{project}/locations/{location}/builds/{build}`.
   *
   * @generated from field: string build = 1;
   */
  build: string;

  /**
   * Output only. URI of a directory containing the verify artifacts. This
   * contains the Skaffold event log.
   *
   * @generated from field: string artifact_uri = 2;
   */
  artifactUri: string;

  /**
   * Output only. File path of the Skaffold event log relative to the artifact
   * URI.
   *
   * @generated from field: string event_log_path = 3;
   */
  eventLogPath: string;

  /**
   * Output only. The reason the verify failed. This will always be unspecified
   * while the verify is in progress or if it succeeded.
   *
   * @generated from field: google.cloud.deploy.v1.VerifyJobRun.FailureCause failure_cause = 4;
   */
  failureCause: VerifyJobRun_FailureCause;

  /**
   * Output only. Additional information about the verify failure, if available.
   *
   * @generated from field: string failure_message = 5;
   */
  failureMessage: string;
};

/**
 * Describes the message google.cloud.deploy.v1.VerifyJobRun.
 * Use `create(VerifyJobRunSchema)` to create a new message.
 */
export const VerifyJobRunSchema: GenMessage<VerifyJobRun> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 114);

/**
 * Well-known verify failures.
 *
 * @generated from enum google.cloud.deploy.v1.VerifyJobRun.FailureCause
 */
export enum VerifyJobRun_FailureCause {
  /**
   * No reason for failure is specified.
   *
   * @generated from enum value: FAILURE_CAUSE_UNSPECIFIED = 0;
   */
  FAILURE_CAUSE_UNSPECIFIED = 0,

  /**
   * Cloud Build is not available, either because it is not enabled or because
   * Cloud Deploy has insufficient permissions. See [required
   * permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
   *
   * @generated from enum value: CLOUD_BUILD_UNAVAILABLE = 1;
   */
  CLOUD_BUILD_UNAVAILABLE = 1,

  /**
   * The verify operation did not complete successfully; check Cloud Build
   * logs.
   *
   * @generated from enum value: EXECUTION_FAILED = 2;
   */
  EXECUTION_FAILED = 2,

  /**
   * The verify job run did not complete within the alloted time.
   *
   * @generated from enum value: DEADLINE_EXCEEDED = 3;
   */
  DEADLINE_EXCEEDED = 3,

  /**
   * No Skaffold verify configuration was found.
   *
   * @generated from enum value: VERIFICATION_CONFIG_NOT_FOUND = 4;
   */
  VERIFICATION_CONFIG_NOT_FOUND = 4,

  /**
   * Cloud Build failed to fulfill Cloud Deploy's request. See failure_message
   * for additional details.
   *
   * @generated from enum value: CLOUD_BUILD_REQUEST_FAILED = 5;
   */
  CLOUD_BUILD_REQUEST_FAILED = 5,
}

/**
 * Describes the enum google.cloud.deploy.v1.VerifyJobRun.FailureCause.
 */
export const VerifyJobRun_FailureCauseSchema: GenEnum<VerifyJobRun_FailureCause> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 114, 0);

/**
 * PredeployJobRun contains information specific to a predeploy `JobRun`.
 *
 * @generated from message google.cloud.deploy.v1.PredeployJobRun
 */
export type PredeployJobRun = Message<"google.cloud.deploy.v1.PredeployJobRun"> & {
  /**
   * Output only. The resource name of the Cloud Build `Build` object that is
   * used to execute the custom actions associated with the predeploy Job.
   * Format is `projects/{project}/locations/{location}/builds/{build}`.
   *
   * @generated from field: string build = 1;
   */
  build: string;

  /**
   * Output only. The reason the predeploy failed. This will always be
   * unspecified while the predeploy is in progress or if it succeeded.
   *
   * @generated from field: google.cloud.deploy.v1.PredeployJobRun.FailureCause failure_cause = 2;
   */
  failureCause: PredeployJobRun_FailureCause;

  /**
   * Output only. Additional information about the predeploy failure, if
   * available.
   *
   * @generated from field: string failure_message = 3;
   */
  failureMessage: string;
};

/**
 * Describes the message google.cloud.deploy.v1.PredeployJobRun.
 * Use `create(PredeployJobRunSchema)` to create a new message.
 */
export const PredeployJobRunSchema: GenMessage<PredeployJobRun> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 115);

/**
 * Well-known predeploy failures.
 *
 * @generated from enum google.cloud.deploy.v1.PredeployJobRun.FailureCause
 */
export enum PredeployJobRun_FailureCause {
  /**
   * No reason for failure is specified.
   *
   * @generated from enum value: FAILURE_CAUSE_UNSPECIFIED = 0;
   */
  FAILURE_CAUSE_UNSPECIFIED = 0,

  /**
   * Cloud Build is not available, either because it is not enabled or because
   * Cloud Deploy has insufficient permissions. See [required
   * permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
   *
   * @generated from enum value: CLOUD_BUILD_UNAVAILABLE = 1;
   */
  CLOUD_BUILD_UNAVAILABLE = 1,

  /**
   * The predeploy operation did not complete successfully; check Cloud Build
   * logs.
   *
   * @generated from enum value: EXECUTION_FAILED = 2;
   */
  EXECUTION_FAILED = 2,

  /**
   * The predeploy job run did not complete within the alloted time.
   *
   * @generated from enum value: DEADLINE_EXCEEDED = 3;
   */
  DEADLINE_EXCEEDED = 3,

  /**
   * Cloud Build failed to fulfill Cloud Deploy's request. See failure_message
   * for additional details.
   *
   * @generated from enum value: CLOUD_BUILD_REQUEST_FAILED = 4;
   */
  CLOUD_BUILD_REQUEST_FAILED = 4,
}

/**
 * Describes the enum google.cloud.deploy.v1.PredeployJobRun.FailureCause.
 */
export const PredeployJobRun_FailureCauseSchema: GenEnum<PredeployJobRun_FailureCause> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 115, 0);

/**
 * PostdeployJobRun contains information specific to a postdeploy `JobRun`.
 *
 * @generated from message google.cloud.deploy.v1.PostdeployJobRun
 */
export type PostdeployJobRun = Message<"google.cloud.deploy.v1.PostdeployJobRun"> & {
  /**
   * Output only. The resource name of the Cloud Build `Build` object that is
   * used to execute the custom actions associated with the postdeploy Job.
   * Format is `projects/{project}/locations/{location}/builds/{build}`.
   *
   * @generated from field: string build = 1;
   */
  build: string;

  /**
   * Output only. The reason the postdeploy failed. This will always be
   * unspecified while the postdeploy is in progress or if it succeeded.
   *
   * @generated from field: google.cloud.deploy.v1.PostdeployJobRun.FailureCause failure_cause = 2;
   */
  failureCause: PostdeployJobRun_FailureCause;

  /**
   * Output only. Additional information about the postdeploy failure, if
   * available.
   *
   * @generated from field: string failure_message = 3;
   */
  failureMessage: string;
};

/**
 * Describes the message google.cloud.deploy.v1.PostdeployJobRun.
 * Use `create(PostdeployJobRunSchema)` to create a new message.
 */
export const PostdeployJobRunSchema: GenMessage<PostdeployJobRun> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 116);

/**
 * Well-known postdeploy failures.
 *
 * @generated from enum google.cloud.deploy.v1.PostdeployJobRun.FailureCause
 */
export enum PostdeployJobRun_FailureCause {
  /**
   * No reason for failure is specified.
   *
   * @generated from enum value: FAILURE_CAUSE_UNSPECIFIED = 0;
   */
  FAILURE_CAUSE_UNSPECIFIED = 0,

  /**
   * Cloud Build is not available, either because it is not enabled or because
   * Cloud Deploy has insufficient permissions. See [required
   * permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).
   *
   * @generated from enum value: CLOUD_BUILD_UNAVAILABLE = 1;
   */
  CLOUD_BUILD_UNAVAILABLE = 1,

  /**
   * The postdeploy operation did not complete successfully; check Cloud Build
   * logs.
   *
   * @generated from enum value: EXECUTION_FAILED = 2;
   */
  EXECUTION_FAILED = 2,

  /**
   * The postdeploy job run did not complete within the alloted time.
   *
   * @generated from enum value: DEADLINE_EXCEEDED = 3;
   */
  DEADLINE_EXCEEDED = 3,

  /**
   * Cloud Build failed to fulfill Cloud Deploy's request. See failure_message
   * for additional details.
   *
   * @generated from enum value: CLOUD_BUILD_REQUEST_FAILED = 4;
   */
  CLOUD_BUILD_REQUEST_FAILED = 4,
}

/**
 * Describes the enum google.cloud.deploy.v1.PostdeployJobRun.FailureCause.
 */
export const PostdeployJobRun_FailureCauseSchema: GenEnum<PostdeployJobRun_FailureCause> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 116, 0);

/**
 * CreateChildRolloutJobRun contains information specific to a
 * createChildRollout `JobRun`.
 *
 * @generated from message google.cloud.deploy.v1.CreateChildRolloutJobRun
 */
export type CreateChildRolloutJobRun = Message<"google.cloud.deploy.v1.CreateChildRolloutJobRun"> & {
  /**
   * Output only. Name of the `ChildRollout`. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   *
   * @generated from field: string rollout = 1;
   */
  rollout: string;

  /**
   * Output only. The ID of the childRollout Phase initiated by this JobRun.
   *
   * @generated from field: string rollout_phase_id = 2;
   */
  rolloutPhaseId: string;
};

/**
 * Describes the message google.cloud.deploy.v1.CreateChildRolloutJobRun.
 * Use `create(CreateChildRolloutJobRunSchema)` to create a new message.
 */
export const CreateChildRolloutJobRunSchema: GenMessage<CreateChildRolloutJobRun> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 117);

/**
 * AdvanceChildRolloutJobRun contains information specific to a
 * advanceChildRollout `JobRun`.
 *
 * @generated from message google.cloud.deploy.v1.AdvanceChildRolloutJobRun
 */
export type AdvanceChildRolloutJobRun = Message<"google.cloud.deploy.v1.AdvanceChildRolloutJobRun"> & {
  /**
   * Output only. Name of the `ChildRollout`. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   *
   * @generated from field: string rollout = 1;
   */
  rollout: string;

  /**
   * Output only. the ID of the ChildRollout's Phase.
   *
   * @generated from field: string rollout_phase_id = 2;
   */
  rolloutPhaseId: string;
};

/**
 * Describes the message google.cloud.deploy.v1.AdvanceChildRolloutJobRun.
 * Use `create(AdvanceChildRolloutJobRunSchema)` to create a new message.
 */
export const AdvanceChildRolloutJobRunSchema: GenMessage<AdvanceChildRolloutJobRun> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 118);

/**
 * ListJobRunsRequest is the request object used by `ListJobRuns`.
 *
 * @generated from message google.cloud.deploy.v1.ListJobRunsRequest
 */
export type ListJobRunsRequest = Message<"google.cloud.deploy.v1.ListJobRunsRequest"> & {
  /**
   * Required. The `Rollout` which owns this collection of `JobRun` objects.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of `JobRun` objects to return. The service may
   * return fewer than this value. If unspecified, at most 50 `JobRun` objects
   * will be returned. The maximum value is 1000; values above 1000 will be set
   * to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous `ListJobRuns` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters match the call that provided
   * the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filter results to be returned. See https://google.aip.dev/160 for
   * more details.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   * more details.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.deploy.v1.ListJobRunsRequest.
 * Use `create(ListJobRunsRequestSchema)` to create a new message.
 */
export const ListJobRunsRequestSchema: GenMessage<ListJobRunsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 119);

/**
 * ListJobRunsResponse is the response object returned by `ListJobRuns`.
 *
 * @generated from message google.cloud.deploy.v1.ListJobRunsResponse
 */
export type ListJobRunsResponse = Message<"google.cloud.deploy.v1.ListJobRunsResponse"> & {
  /**
   * The `JobRun` objects.
   *
   * @generated from field: repeated google.cloud.deploy.v1.JobRun job_runs = 1;
   */
  jobRuns: JobRun[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page. If
   * this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.ListJobRunsResponse.
 * Use `create(ListJobRunsResponseSchema)` to create a new message.
 */
export const ListJobRunsResponseSchema: GenMessage<ListJobRunsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 120);

/**
 * GetJobRunRequest is the request object used by `GetJobRun`.
 *
 * @generated from message google.cloud.deploy.v1.GetJobRunRequest
 */
export type GetJobRunRequest = Message<"google.cloud.deploy.v1.GetJobRunRequest"> & {
  /**
   * Required. Name of the `JobRun`. Format must be
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}/jobRuns/{job_run_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GetJobRunRequest.
 * Use `create(GetJobRunRequestSchema)` to create a new message.
 */
export const GetJobRunRequestSchema: GenMessage<GetJobRunRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 121);

/**
 * The request object used by `TerminateJobRun`.
 *
 * @generated from message google.cloud.deploy.v1.TerminateJobRunRequest
 */
export type TerminateJobRunRequest = Message<"google.cloud.deploy.v1.TerminateJobRunRequest"> & {
  /**
   * Required. Name of the `JobRun`. Format must be
   * `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}/jobRuns/{jobRun}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Deploy policies to override. Format is
   * `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`.
   *
   * @generated from field: repeated string override_deploy_policy = 2;
   */
  overrideDeployPolicy: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.TerminateJobRunRequest.
 * Use `create(TerminateJobRunRequestSchema)` to create a new message.
 */
export const TerminateJobRunRequestSchema: GenMessage<TerminateJobRunRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 122);

/**
 * The response object from `TerminateJobRun`.
 *
 * @generated from message google.cloud.deploy.v1.TerminateJobRunResponse
 */
export type TerminateJobRunResponse = Message<"google.cloud.deploy.v1.TerminateJobRunResponse"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.TerminateJobRunResponse.
 * Use `create(TerminateJobRunResponseSchema)` to create a new message.
 */
export const TerminateJobRunResponseSchema: GenMessage<TerminateJobRunResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 123);

/**
 * Service-wide configuration.
 *
 * @generated from message google.cloud.deploy.v1.Config
 */
export type Config = Message<"google.cloud.deploy.v1.Config"> & {
  /**
   * Name of the configuration.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * All supported versions of Skaffold.
   *
   * @generated from field: repeated google.cloud.deploy.v1.SkaffoldVersion supported_versions = 2;
   */
  supportedVersions: SkaffoldVersion[];

  /**
   * Default Skaffold version that is assigned when a Release is created without
   * specifying a Skaffold version.
   *
   * @generated from field: string default_skaffold_version = 3;
   */
  defaultSkaffoldVersion: string;
};

/**
 * Describes the message google.cloud.deploy.v1.Config.
 * Use `create(ConfigSchema)` to create a new message.
 */
export const ConfigSchema: GenMessage<Config> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 124);

/**
 * Details of a supported Skaffold version.
 *
 * @generated from message google.cloud.deploy.v1.SkaffoldVersion
 */
export type SkaffoldVersion = Message<"google.cloud.deploy.v1.SkaffoldVersion"> & {
  /**
   * Release version number. For example, "1.20.3".
   *
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * The time at which this version of Skaffold will enter maintenance mode.
   *
   * @generated from field: google.protobuf.Timestamp maintenance_mode_time = 3;
   */
  maintenanceModeTime?: Timestamp;

  /**
   * The time at which this version of Skaffold will no longer be supported.
   *
   * @generated from field: google.protobuf.Timestamp support_expiration_time = 4;
   */
  supportExpirationTime?: Timestamp;

  /**
   * Date when this version is expected to no longer be supported.
   *
   * @generated from field: google.type.Date support_end_date = 2;
   */
  supportEndDate?: Date;
};

/**
 * Describes the message google.cloud.deploy.v1.SkaffoldVersion.
 * Use `create(SkaffoldVersionSchema)` to create a new message.
 */
export const SkaffoldVersionSchema: GenMessage<SkaffoldVersion> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 125);

/**
 * Request to get a configuration.
 *
 * @generated from message google.cloud.deploy.v1.GetConfigRequest
 */
export type GetConfigRequest = Message<"google.cloud.deploy.v1.GetConfigRequest"> & {
  /**
   * Required. Name of requested configuration.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GetConfigRequest.
 * Use `create(GetConfigRequestSchema)` to create a new message.
 */
export const GetConfigRequestSchema: GenMessage<GetConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 126);

/**
 * An `Automation` resource in the Cloud Deploy API.
 *
 * An `Automation` enables the automation of manually driven actions for
 * a Delivery Pipeline, which includes Release promotion among Targets,
 * Rollout repair and Rollout deployment strategy advancement. The intention
 * of Automation is to reduce manual intervention in the continuous delivery
 * process.
 *
 * @generated from message google.cloud.deploy.v1.Automation
 */
export type Automation = Message<"google.cloud.deploy.v1.Automation"> & {
  /**
   * Output only. Name of the `Automation`. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automations/{automation}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Unique identifier of the `Automation`.
   *
   * @generated from field: string uid = 2;
   */
  uid: string;

  /**
   * Optional. Description of the `Automation`. Max length is 255 characters.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. Time at which the automation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time at which the automation was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;

  /**
   * Optional. User annotations. These attributes can only be set and used by
   * the user, and not by Cloud Deploy. Annotations must meet the following
   * constraints:
   *
   * * Annotations are key/value pairs.
   * * Valid annotation keys have two segments: an optional prefix and name,
   * separated by a slash (`/`).
   * * The name segment is required and must be 63 characters or less,
   * beginning and ending with an alphanumeric character (`[a-z0-9A-Z]`) with
   * dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.
   * * The prefix is optional. If specified, the prefix must be a DNS subdomain:
   * a series of DNS labels separated by dots(`.`), not longer than 253
   * characters in total, followed by a slash (`/`).
   *
   * See
   * https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set
   * for more details.
   *
   * @generated from field: map<string, string> annotations = 6;
   */
  annotations: { [key: string]: string };

  /**
   * Optional. Labels are attributes that can be set and used by both the
   * user and by Cloud Deploy. Labels must meet the following constraints:
   *
   * * Keys and values can contain only lowercase letters, numeric characters,
   * underscores, and dashes.
   * * All characters must use UTF-8 encoding, and international characters are
   * allowed.
   * * Keys must start with a lowercase letter or international character.
   * * Each resource is limited to a maximum of 64 labels.
   *
   * Both keys and values are additionally constrained to be <= 63 characters.
   *
   * @generated from field: map<string, string> labels = 7;
   */
  labels: { [key: string]: string };

  /**
   * Optional. The weak etag of the `Automation` resource.
   * This checksum is computed by the server based on the value of other
   * fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 8;
   */
  etag: string;

  /**
   * Optional. When Suspended, automation is deactivated from execution.
   *
   * @generated from field: bool suspended = 9;
   */
  suspended: boolean;

  /**
   * Required. Email address of the user-managed IAM service account that
   * creates Cloud Deploy release and rollout resources.
   *
   * @generated from field: string service_account = 10;
   */
  serviceAccount: string;

  /**
   * Required. Selected resources to which the automation will be applied.
   *
   * @generated from field: google.cloud.deploy.v1.AutomationResourceSelector selector = 11;
   */
  selector?: AutomationResourceSelector;

  /**
   * Required. List of Automation rules associated with the Automation resource.
   * Must have at least one rule and limited to 250 rules per Delivery Pipeline.
   * Note: the order of the rules here is not the same as the order of
   * execution.
   *
   * @generated from field: repeated google.cloud.deploy.v1.AutomationRule rules = 14;
   */
  rules: AutomationRule[];
};

/**
 * Describes the message google.cloud.deploy.v1.Automation.
 * Use `create(AutomationSchema)` to create a new message.
 */
export const AutomationSchema: GenMessage<Automation> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 127);

/**
 * AutomationResourceSelector contains the information to select the resources
 * to which an Automation is going to be applied.
 *
 * @generated from message google.cloud.deploy.v1.AutomationResourceSelector
 */
export type AutomationResourceSelector = Message<"google.cloud.deploy.v1.AutomationResourceSelector"> & {
  /**
   * Contains attributes about a target.
   *
   * @generated from field: repeated google.cloud.deploy.v1.TargetAttribute targets = 1;
   */
  targets: TargetAttribute[];
};

/**
 * Describes the message google.cloud.deploy.v1.AutomationResourceSelector.
 * Use `create(AutomationResourceSelectorSchema)` to create a new message.
 */
export const AutomationResourceSelectorSchema: GenMessage<AutomationResourceSelector> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 128);

/**
 * `AutomationRule` defines the automation activities.
 *
 * @generated from message google.cloud.deploy.v1.AutomationRule
 */
export type AutomationRule = Message<"google.cloud.deploy.v1.AutomationRule"> & {
  /**
   * The configuration of the Automation rule.
   *
   * @generated from oneof google.cloud.deploy.v1.AutomationRule.rule
   */
  rule: {
    /**
     * Optional. `PromoteReleaseRule` will automatically promote a release from
     * the current target to a specified target.
     *
     * @generated from field: google.cloud.deploy.v1.PromoteReleaseRule promote_release_rule = 1;
     */
    value: PromoteReleaseRule;
    case: "promoteReleaseRule";
  } | {
    /**
     * Optional. The `AdvanceRolloutRule` will automatically advance a
     * successful Rollout.
     *
     * @generated from field: google.cloud.deploy.v1.AdvanceRolloutRule advance_rollout_rule = 2;
     */
    value: AdvanceRolloutRule;
    case: "advanceRolloutRule";
  } | {
    /**
     * Optional. The `RepairRolloutRule` will automatically repair a failed
     * rollout.
     *
     * @generated from field: google.cloud.deploy.v1.RepairRolloutRule repair_rollout_rule = 3;
     */
    value: RepairRolloutRule;
    case: "repairRolloutRule";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.AutomationRule.
 * Use `create(AutomationRuleSchema)` to create a new message.
 */
export const AutomationRuleSchema: GenMessage<AutomationRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 129);

/**
 * The `PromoteRelease` rule will automatically promote a release from the
 * current target to a specified target.
 *
 * @generated from message google.cloud.deploy.v1.PromoteReleaseRule
 */
export type PromoteReleaseRule = Message<"google.cloud.deploy.v1.PromoteReleaseRule"> & {
  /**
   * Required. ID of the rule. This id must be unique in the `Automation`
   * resource to which this rule belongs. The format is
   * `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional. How long the release need to be paused until being promoted to
   * the next target.
   *
   * @generated from field: google.protobuf.Duration wait = 2;
   */
  wait?: Duration;

  /**
   * Optional. The ID of the stage in the pipeline to which this `Release` is
   * deploying. If unspecified, default it to the next stage in the promotion
   * flow. The value of this field could be one of the following:
   *
   * * The last segment of a target name
   * * "@next", the next target in the promotion sequence
   *
   * @generated from field: string destination_target_id = 7;
   */
  destinationTargetId: string;

  /**
   * Output only. Information around the state of the Automation rule.
   *
   * @generated from field: google.cloud.deploy.v1.AutomationRuleCondition condition = 5;
   */
  condition?: AutomationRuleCondition;

  /**
   * Optional. The starting phase of the rollout created by this operation.
   * Default to the first phase.
   *
   * @generated from field: string destination_phase = 8;
   */
  destinationPhase: string;
};

/**
 * Describes the message google.cloud.deploy.v1.PromoteReleaseRule.
 * Use `create(PromoteReleaseRuleSchema)` to create a new message.
 */
export const PromoteReleaseRuleSchema: GenMessage<PromoteReleaseRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 130);

/**
 * The `AdvanceRollout` automation rule will automatically advance a successful
 * Rollout to the next phase.
 *
 * @generated from message google.cloud.deploy.v1.AdvanceRolloutRule
 */
export type AdvanceRolloutRule = Message<"google.cloud.deploy.v1.AdvanceRolloutRule"> & {
  /**
   * Required. ID of the rule. This id must be unique in the `Automation`
   * resource to which this rule belongs. The format is
   * `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional. Proceeds only after phase name matched any one in the list.
   * This value must consist of lower-case letters, numbers, and hyphens,
   * start with a letter and end with a letter or a number, and have a max
   * length of 63 characters. In other words, it must match the following
   * regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
   *
   * @generated from field: repeated string source_phases = 6;
   */
  sourcePhases: string[];

  /**
   * Optional. How long to wait after a rollout is finished.
   *
   * @generated from field: google.protobuf.Duration wait = 3;
   */
  wait?: Duration;

  /**
   * Output only. Information around the state of the Automation rule.
   *
   * @generated from field: google.cloud.deploy.v1.AutomationRuleCondition condition = 5;
   */
  condition?: AutomationRuleCondition;
};

/**
 * Describes the message google.cloud.deploy.v1.AdvanceRolloutRule.
 * Use `create(AdvanceRolloutRuleSchema)` to create a new message.
 */
export const AdvanceRolloutRuleSchema: GenMessage<AdvanceRolloutRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 131);

/**
 * The `RepairRolloutRule` automation rule will automatically repair a failed
 * `Rollout`.
 *
 * @generated from message google.cloud.deploy.v1.RepairRolloutRule
 */
export type RepairRolloutRule = Message<"google.cloud.deploy.v1.RepairRolloutRule"> & {
  /**
   * Required. ID of the rule. This id must be unique in the `Automation`
   * resource to which this rule belongs. The format is
   * `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional. Jobs to repair. Proceeds only after job name matched any one in
   * the list, or for all jobs if unspecified or empty. The phase that includes
   * the job must match the phase ID specified in `source_phase`. This value
   * must consist of lower-case letters, numbers, and hyphens, start with a
   * letter and end with a letter or a number, and have a max length of 63
   * characters. In other words, it must match the following regex:
   * `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
   *
   * @generated from field: repeated string jobs = 3;
   */
  jobs: string[];

  /**
   * Output only. Information around the state of the 'Automation' rule.
   *
   * @generated from field: google.cloud.deploy.v1.AutomationRuleCondition condition = 6;
   */
  condition?: AutomationRuleCondition;
};

/**
 * Describes the message google.cloud.deploy.v1.RepairRolloutRule.
 * Use `create(RepairRolloutRuleSchema)` to create a new message.
 */
export const RepairRolloutRuleSchema: GenMessage<RepairRolloutRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 132);

/**
 * `AutomationRuleCondition` contains conditions relevant to an
 * `Automation` rule.
 *
 * @generated from message google.cloud.deploy.v1.AutomationRuleCondition
 */
export type AutomationRuleCondition = Message<"google.cloud.deploy.v1.AutomationRuleCondition"> & {
  /**
   * Optional. Details around targets enumerated in the rule.
   *
   * @generated from field: google.cloud.deploy.v1.TargetsPresentCondition targets_present_condition = 1;
   */
  targetsPresentCondition?: TargetsPresentCondition;
};

/**
 * Describes the message google.cloud.deploy.v1.AutomationRuleCondition.
 * Use `create(AutomationRuleConditionSchema)` to create a new message.
 */
export const AutomationRuleConditionSchema: GenMessage<AutomationRuleCondition> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 133);

/**
 * The request object for `CreateAutomation`.
 *
 * @generated from message google.cloud.deploy.v1.CreateAutomationRequest
 */
export type CreateAutomationRequest = Message<"google.cloud.deploy.v1.CreateAutomationRequest"> & {
  /**
   * Required. The parent collection in which the `Automation` must be created.
   * The format is
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. ID of the `Automation`.
   *
   * @generated from field: string automation_id = 2;
   */
  automationId: string;

  /**
   * Required. The `Automation` to create.
   *
   * @generated from field: google.cloud.deploy.v1.Automation automation = 3;
   */
  automation?: Automation;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.CreateAutomationRequest.
 * Use `create(CreateAutomationRequestSchema)` to create a new message.
 */
export const CreateAutomationRequestSchema: GenMessage<CreateAutomationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 134);

/**
 * The request object for `UpdateAutomation`.
 *
 * @generated from message google.cloud.deploy.v1.UpdateAutomationRequest
 */
export type UpdateAutomationRequest = Message<"google.cloud.deploy.v1.UpdateAutomationRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten by the
   * update in the `Automation` resource. The fields specified in the
   * update_mask are relative to the resource, not the full request. A field
   * will be overwritten if it's in the mask. If the user doesn't provide a mask
   * then all fields are overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The `Automation` to update.
   *
   * @generated from field: google.cloud.deploy.v1.Automation automation = 2;
   */
  automation?: Automation;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;

  /**
   * Optional. If set to true, updating a `Automation` that does not exist will
   * result in the creation of a new `Automation`.
   *
   * @generated from field: bool allow_missing = 4;
   */
  allowMissing: boolean;

  /**
   * Optional. If set to true, the request is validated and the user is provided
   * with an expected result, but no actual change is made.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.deploy.v1.UpdateAutomationRequest.
 * Use `create(UpdateAutomationRequestSchema)` to create a new message.
 */
export const UpdateAutomationRequestSchema: GenMessage<UpdateAutomationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 135);

/**
 * The request object for `DeleteAutomation`.
 *
 * @generated from message google.cloud.deploy.v1.DeleteAutomationRequest
 */
export type DeleteAutomationRequest = Message<"google.cloud.deploy.v1.DeleteAutomationRequest"> & {
  /**
   * Required. The name of the `Automation` to delete. The format is
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/automations/{automation_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server knows to ignore the
   * request if it has already been completed. The server guarantees that for
   * at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Optional. If set to true, then deleting an already deleted or non-existing
   * `Automation` will succeed.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;

  /**
   * Optional. If set, validate the request and verify whether the resource
   * exists, but do not actually post it.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;

  /**
   * Optional. The weak etag of the request.
   * This checksum is computed by the server based on the value of other
   * fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 5;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.deploy.v1.DeleteAutomationRequest.
 * Use `create(DeleteAutomationRequestSchema)` to create a new message.
 */
export const DeleteAutomationRequestSchema: GenMessage<DeleteAutomationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 136);

/**
 * The request object for `ListAutomations`.
 *
 * @generated from message google.cloud.deploy.v1.ListAutomationsRequest
 */
export type ListAutomationsRequest = Message<"google.cloud.deploy.v1.ListAutomationsRequest"> & {
  /**
   * Required. The parent `Delivery Pipeline`, which owns this collection of
   * automations. Format must be
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of automations to return. The service may return
   * fewer than this value. If unspecified, at most 50 automations will
   * be returned. The maximum value is 1000; values above 1000 will be set
   * to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListAutomations` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter automations to be returned. All fields can be used in the
   * filter.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Field to sort by.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.deploy.v1.ListAutomationsRequest.
 * Use `create(ListAutomationsRequestSchema)` to create a new message.
 */
export const ListAutomationsRequestSchema: GenMessage<ListAutomationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 137);

/**
 * The response object from `ListAutomations`.
 *
 * @generated from message google.cloud.deploy.v1.ListAutomationsResponse
 */
export type ListAutomationsResponse = Message<"google.cloud.deploy.v1.ListAutomationsResponse"> & {
  /**
   * The `Automation` objects.
   *
   * @generated from field: repeated google.cloud.deploy.v1.Automation automations = 1;
   */
  automations: Automation[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.ListAutomationsResponse.
 * Use `create(ListAutomationsResponseSchema)` to create a new message.
 */
export const ListAutomationsResponseSchema: GenMessage<ListAutomationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 138);

/**
 * The request object for `GetAutomation`
 *
 * @generated from message google.cloud.deploy.v1.GetAutomationRequest
 */
export type GetAutomationRequest = Message<"google.cloud.deploy.v1.GetAutomationRequest"> & {
  /**
   * Required. Name of the `Automation`. Format must be
   * `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/automations/{automation_name}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GetAutomationRequest.
 * Use `create(GetAutomationRequestSchema)` to create a new message.
 */
export const GetAutomationRequestSchema: GenMessage<GetAutomationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 139);

/**
 * An `AutomationRun` resource in the Cloud Deploy API.
 *
 * An `AutomationRun` represents an execution instance of an
 * automation rule.
 *
 * @generated from message google.cloud.deploy.v1.AutomationRun
 */
export type AutomationRun = Message<"google.cloud.deploy.v1.AutomationRun"> & {
  /**
   * Output only. Name of the `AutomationRun`. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Time at which the `AutomationRun` was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time at which the automationRun was updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The weak etag of the `AutomationRun` resource.
   * This checksum is computed by the server based on the value of other
   * fields, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   *
   * @generated from field: string etag = 4;
   */
  etag: string;

  /**
   * Output only. Email address of the user-managed IAM service account that
   * performs the operations against Cloud Deploy resources.
   *
   * @generated from field: string service_account = 5;
   */
  serviceAccount: string;

  /**
   * Output only. Snapshot of the Automation taken at AutomationRun creation
   * time.
   *
   * @generated from field: google.cloud.deploy.v1.Automation automation_snapshot = 6;
   */
  automationSnapshot?: Automation;

  /**
   * Output only. The ID of the target that represents the promotion stage that
   * initiates the `AutomationRun`. The value of this field is the last segment
   * of a target name.
   *
   * @generated from field: string target_id = 7;
   */
  targetId: string;

  /**
   * Output only. Current state of the `AutomationRun`.
   *
   * @generated from field: google.cloud.deploy.v1.AutomationRun.State state = 8;
   */
  state: AutomationRun_State;

  /**
   * Output only. Explains the current state of the `AutomationRun`. Present
   * only when an explanation is needed.
   *
   * @generated from field: string state_description = 9;
   */
  stateDescription: string;

  /**
   * Output only. Contains information about what policies prevented the
   * `AutomationRun` from proceeding.
   *
   * @generated from field: google.cloud.deploy.v1.PolicyViolation policy_violation = 10;
   */
  policyViolation?: PolicyViolation;

  /**
   * Output only. Time the `AutomationRun` expires. An `AutomationRun` expires
   * after 14 days from its creation date.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 11;
   */
  expireTime?: Timestamp;

  /**
   * Output only. The ID of the automation rule that initiated the operation.
   *
   * @generated from field: string rule_id = 12;
   */
  ruleId: string;

  /**
   * Output only. The ID of the automation that initiated the operation.
   *
   * @generated from field: string automation_id = 15;
   */
  automationId: string;

  /**
   * The operation that the `AutomationRun` will perform.
   *
   * @generated from oneof google.cloud.deploy.v1.AutomationRun.operation
   */
  operation: {
    /**
     * Output only. Promotes a release to a specified 'Target'.
     *
     * @generated from field: google.cloud.deploy.v1.PromoteReleaseOperation promote_release_operation = 13;
     */
    value: PromoteReleaseOperation;
    case: "promoteReleaseOperation";
  } | {
    /**
     * Output only. Advances a rollout to the next phase.
     *
     * @generated from field: google.cloud.deploy.v1.AdvanceRolloutOperation advance_rollout_operation = 14;
     */
    value: AdvanceRolloutOperation;
    case: "advanceRolloutOperation";
  } | {
    /**
     * Output only. Repairs a failed 'Rollout'.
     *
     * @generated from field: google.cloud.deploy.v1.RepairRolloutOperation repair_rollout_operation = 17;
     */
    value: RepairRolloutOperation;
    case: "repairRolloutOperation";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Earliest time the `AutomationRun` will attempt to resume.
   * Wait-time is configured by `wait` in automation rule.
   *
   * @generated from field: google.protobuf.Timestamp wait_until_time = 16;
   */
  waitUntilTime?: Timestamp;
};

/**
 * Describes the message google.cloud.deploy.v1.AutomationRun.
 * Use `create(AutomationRunSchema)` to create a new message.
 */
export const AutomationRunSchema: GenMessage<AutomationRun> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 140);

/**
 * Valid state of an `AutomationRun`.
 *
 * @generated from enum google.cloud.deploy.v1.AutomationRun.State
 */
export enum AutomationRun_State {
  /**
   * The `AutomationRun` has an unspecified state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The `AutomationRun` has succeeded.
   *
   * @generated from enum value: SUCCEEDED = 1;
   */
  SUCCEEDED = 1,

  /**
   * The `AutomationRun` was cancelled.
   *
   * @generated from enum value: CANCELLED = 2;
   */
  CANCELLED = 2,

  /**
   * The `AutomationRun` has failed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * The `AutomationRun` is in progress.
   *
   * @generated from enum value: IN_PROGRESS = 4;
   */
  IN_PROGRESS = 4,

  /**
   * The `AutomationRun` is pending.
   *
   * @generated from enum value: PENDING = 5;
   */
  PENDING = 5,

  /**
   * The `AutomationRun` was aborted.
   *
   * @generated from enum value: ABORTED = 6;
   */
  ABORTED = 6,
}

/**
 * Describes the enum google.cloud.deploy.v1.AutomationRun.State.
 */
export const AutomationRun_StateSchema: GenEnum<AutomationRun_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 140, 0);

/**
 * Contains the information of an automated promote-release operation.
 *
 * @generated from message google.cloud.deploy.v1.PromoteReleaseOperation
 */
export type PromoteReleaseOperation = Message<"google.cloud.deploy.v1.PromoteReleaseOperation"> & {
  /**
   * Output only. The ID of the target that represents the promotion stage to
   * which the release will be promoted. The value of this field is the last
   * segment of a target name.
   *
   * @generated from field: string target_id = 1;
   */
  targetId: string;

  /**
   * Output only. How long the operation will be paused.
   *
   * @generated from field: google.protobuf.Duration wait = 2;
   */
  wait?: Duration;

  /**
   * Output only. The name of the rollout that initiates the `AutomationRun`.
   *
   * @generated from field: string rollout = 3;
   */
  rollout: string;

  /**
   * Output only. The starting phase of the rollout created by this operation.
   *
   * @generated from field: string phase = 4;
   */
  phase: string;
};

/**
 * Describes the message google.cloud.deploy.v1.PromoteReleaseOperation.
 * Use `create(PromoteReleaseOperationSchema)` to create a new message.
 */
export const PromoteReleaseOperationSchema: GenMessage<PromoteReleaseOperation> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 141);

/**
 * Contains the information of an automated advance-rollout operation.
 *
 * @generated from message google.cloud.deploy.v1.AdvanceRolloutOperation
 */
export type AdvanceRolloutOperation = Message<"google.cloud.deploy.v1.AdvanceRolloutOperation"> & {
  /**
   * Output only. The phase of a deployment that initiated the operation.
   *
   * @generated from field: string source_phase = 5;
   */
  sourcePhase: string;

  /**
   * Output only. How long the operation will be paused.
   *
   * @generated from field: google.protobuf.Duration wait = 2;
   */
  wait?: Duration;

  /**
   * Output only. The name of the rollout that initiates the `AutomationRun`.
   *
   * @generated from field: string rollout = 3;
   */
  rollout: string;

  /**
   * Output only. The phase the rollout will be advanced to.
   *
   * @generated from field: string destination_phase = 4;
   */
  destinationPhase: string;
};

/**
 * Describes the message google.cloud.deploy.v1.AdvanceRolloutOperation.
 * Use `create(AdvanceRolloutOperationSchema)` to create a new message.
 */
export const AdvanceRolloutOperationSchema: GenMessage<AdvanceRolloutOperation> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 142);

/**
 * Contains the information for an automated `repair rollout` operation.
 *
 * @generated from message google.cloud.deploy.v1.RepairRolloutOperation
 */
export type RepairRolloutOperation = Message<"google.cloud.deploy.v1.RepairRolloutOperation"> & {
  /**
   * Output only. The name of the rollout that initiates the `AutomationRun`.
   *
   * @generated from field: string rollout = 1;
   */
  rollout: string;

  /**
   * Output only. Records of the repair attempts. Each repair phase may have
   * multiple retry attempts or single rollback attempt.
   *
   * @generated from field: repeated google.cloud.deploy.v1.RepairPhase repair_phases = 3;
   */
  repairPhases: RepairPhase[];

  /**
   * Output only. The phase ID of the phase that includes the job being
   * repaired.
   *
   * @generated from field: string phase_id = 4;
   */
  phaseId: string;

  /**
   * Output only. The job ID for the Job to repair.
   *
   * @generated from field: string job_id = 5;
   */
  jobId: string;
};

/**
 * Describes the message google.cloud.deploy.v1.RepairRolloutOperation.
 * Use `create(RepairRolloutOperationSchema)` to create a new message.
 */
export const RepairRolloutOperationSchema: GenMessage<RepairRolloutOperation> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 143);

/**
 * RepairPhase tracks the repair attempts that have been made for
 * each `RepairPhaseConfig` specified in the `Automation` resource.
 *
 * @generated from message google.cloud.deploy.v1.RepairPhase
 */
export type RepairPhase = Message<"google.cloud.deploy.v1.RepairPhase"> & {
  /**
   * The `RepairPhase` type and the information for that type.
   *
   * @generated from oneof google.cloud.deploy.v1.RepairPhase.repair_phase
   */
  repairPhase: {
    /**
     * Output only. Records of the retry attempts for retry repair mode.
     *
     * @generated from field: google.cloud.deploy.v1.RetryPhase retry = 1;
     */
    value: RetryPhase;
    case: "retry";
  } | {
    /**
     * Output only. Rollback attempt for rollback repair mode .
     *
     * @generated from field: google.cloud.deploy.v1.RollbackAttempt rollback = 2;
     */
    value: RollbackAttempt;
    case: "rollback";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.deploy.v1.RepairPhase.
 * Use `create(RepairPhaseSchema)` to create a new message.
 */
export const RepairPhaseSchema: GenMessage<RepairPhase> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 144);

/**
 * RetryPhase contains the retry attempts and the metadata for initiating a
 * new attempt.
 *
 * @generated from message google.cloud.deploy.v1.RetryPhase
 */
export type RetryPhase = Message<"google.cloud.deploy.v1.RetryPhase"> & {
  /**
   * Output only. The number of attempts that have been made.
   *
   * @generated from field: int64 total_attempts = 1;
   */
  totalAttempts: bigint;

  /**
   * Output only. The pattern of how the wait time of the retry attempt is
   * calculated.
   *
   * @generated from field: google.cloud.deploy.v1.BackoffMode backoff_mode = 2;
   */
  backoffMode: BackoffMode;

  /**
   * Output only. Detail of a retry action.
   *
   * @generated from field: repeated google.cloud.deploy.v1.RetryAttempt attempts = 5;
   */
  attempts: RetryAttempt[];
};

/**
 * Describes the message google.cloud.deploy.v1.RetryPhase.
 * Use `create(RetryPhaseSchema)` to create a new message.
 */
export const RetryPhaseSchema: GenMessage<RetryPhase> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 145);

/**
 * RetryAttempt represents an action of retrying the failed Cloud Deploy job.
 *
 * @generated from message google.cloud.deploy.v1.RetryAttempt
 */
export type RetryAttempt = Message<"google.cloud.deploy.v1.RetryAttempt"> & {
  /**
   * Output only. The index of this retry attempt.
   *
   * @generated from field: int64 attempt = 1;
   */
  attempt: bigint;

  /**
   * Output only. How long the operation will be paused.
   *
   * @generated from field: google.protobuf.Duration wait = 2;
   */
  wait?: Duration;

  /**
   * Output only. Valid state of this retry action.
   *
   * @generated from field: google.cloud.deploy.v1.RepairState state = 5;
   */
  state: RepairState;

  /**
   * Output only. Description of the state of the Retry.
   *
   * @generated from field: string state_desc = 6;
   */
  stateDesc: string;
};

/**
 * Describes the message google.cloud.deploy.v1.RetryAttempt.
 * Use `create(RetryAttemptSchema)` to create a new message.
 */
export const RetryAttemptSchema: GenMessage<RetryAttempt> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 146);

/**
 * RollbackAttempt represents an action of rolling back a Cloud Deploy 'Target'.
 *
 * @generated from message google.cloud.deploy.v1.RollbackAttempt
 */
export type RollbackAttempt = Message<"google.cloud.deploy.v1.RollbackAttempt"> & {
  /**
   * Output only. The phase to which the rollout will be rolled back to.
   *
   * @generated from field: string destination_phase = 1;
   */
  destinationPhase: string;

  /**
   * Output only. ID of the rollback `Rollout` to create.
   *
   * @generated from field: string rollout_id = 2;
   */
  rolloutId: string;

  /**
   * Output only. Valid state of this rollback action.
   *
   * @generated from field: google.cloud.deploy.v1.RepairState state = 3;
   */
  state: RepairState;

  /**
   * Output only. Description of the state of the Rollback.
   *
   * @generated from field: string state_desc = 4;
   */
  stateDesc: string;
};

/**
 * Describes the message google.cloud.deploy.v1.RollbackAttempt.
 * Use `create(RollbackAttemptSchema)` to create a new message.
 */
export const RollbackAttemptSchema: GenMessage<RollbackAttempt> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 147);

/**
 * The request object for `ListAutomationRuns`.
 *
 * @generated from message google.cloud.deploy.v1.ListAutomationRunsRequest
 */
export type ListAutomationRunsRequest = Message<"google.cloud.deploy.v1.ListAutomationRunsRequest"> & {
  /**
   * Required. The parent `Delivery Pipeline`, which owns this collection of
   * automationRuns. Format must be
   * `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of automationRuns to return. The service may return
   * fewer than this value. If unspecified, at most 50 automationRuns will
   * be returned. The maximum value is 1000; values above 1000 will be set
   * to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListAutomationRuns` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter automationRuns to be returned. All fields can be used in the
   * filter.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Field to sort by.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.deploy.v1.ListAutomationRunsRequest.
 * Use `create(ListAutomationRunsRequestSchema)` to create a new message.
 */
export const ListAutomationRunsRequestSchema: GenMessage<ListAutomationRunsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 148);

/**
 * The response object from `ListAutomationRuns`.
 *
 * @generated from message google.cloud.deploy.v1.ListAutomationRunsResponse
 */
export type ListAutomationRunsResponse = Message<"google.cloud.deploy.v1.ListAutomationRunsResponse"> & {
  /**
   * The `AutomationRuns` objects.
   *
   * @generated from field: repeated google.cloud.deploy.v1.AutomationRun automation_runs = 1;
   */
  automationRuns: AutomationRun[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.deploy.v1.ListAutomationRunsResponse.
 * Use `create(ListAutomationRunsResponseSchema)` to create a new message.
 */
export const ListAutomationRunsResponseSchema: GenMessage<ListAutomationRunsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 149);

/**
 * The request object for `GetAutomationRun`
 *
 * @generated from message google.cloud.deploy.v1.GetAutomationRunRequest
 */
export type GetAutomationRunRequest = Message<"google.cloud.deploy.v1.GetAutomationRunRequest"> & {
  /**
   * Required. Name of the `AutomationRun`. Format must be
   * `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.GetAutomationRunRequest.
 * Use `create(GetAutomationRunRequestSchema)` to create a new message.
 */
export const GetAutomationRunRequestSchema: GenMessage<GetAutomationRunRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 150);

/**
 * The request object used by `CancelAutomationRun`.
 *
 * @generated from message google.cloud.deploy.v1.CancelAutomationRunRequest
 */
export type CancelAutomationRunRequest = Message<"google.cloud.deploy.v1.CancelAutomationRunRequest"> & {
  /**
   * Required. Name of the `AutomationRun`. Format is
   * `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.deploy.v1.CancelAutomationRunRequest.
 * Use `create(CancelAutomationRunRequestSchema)` to create a new message.
 */
export const CancelAutomationRunRequestSchema: GenMessage<CancelAutomationRunRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 151);

/**
 * The response object from `CancelAutomationRun`.
 *
 * @generated from message google.cloud.deploy.v1.CancelAutomationRunResponse
 */
export type CancelAutomationRunResponse = Message<"google.cloud.deploy.v1.CancelAutomationRunResponse"> & {
};

/**
 * Describes the message google.cloud.deploy.v1.CancelAutomationRunResponse.
 * Use `create(CancelAutomationRunResponseSchema)` to create a new message.
 */
export const CancelAutomationRunResponseSchema: GenMessage<CancelAutomationRunResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_deploy_v1_cloud_deploy, 152);

/**
 * The support state of a specific Skaffold version.
 *
 * @generated from enum google.cloud.deploy.v1.SkaffoldSupportState
 */
export enum SkaffoldSupportState {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: SKAFFOLD_SUPPORT_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * This Skaffold version is currently supported.
   *
   * @generated from enum value: SKAFFOLD_SUPPORT_STATE_SUPPORTED = 1;
   */
  SUPPORTED = 1,

  /**
   * This Skaffold version is in maintenance mode.
   *
   * @generated from enum value: SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE = 2;
   */
  MAINTENANCE_MODE = 2,

  /**
   * This Skaffold version is no longer supported.
   *
   * @generated from enum value: SKAFFOLD_SUPPORT_STATE_UNSUPPORTED = 3;
   */
  UNSUPPORTED = 3,
}

/**
 * Describes the enum google.cloud.deploy.v1.SkaffoldSupportState.
 */
export const SkaffoldSupportStateSchema: GenEnum<SkaffoldSupportState> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 0);

/**
 * The pattern of how wait time is increased.
 *
 * @generated from enum google.cloud.deploy.v1.BackoffMode
 */
export enum BackoffMode {
  /**
   * No WaitMode is specified.
   *
   * @generated from enum value: BACKOFF_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Increases the wait time linearly.
   *
   * @generated from enum value: BACKOFF_MODE_LINEAR = 1;
   */
  LINEAR = 1,

  /**
   * Increases the wait time exponentially.
   *
   * @generated from enum value: BACKOFF_MODE_EXPONENTIAL = 2;
   */
  EXPONENTIAL = 2,
}

/**
 * Describes the enum google.cloud.deploy.v1.BackoffMode.
 */
export const BackoffModeSchema: GenEnum<BackoffMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 1);

/**
 * Valid state of a repair attempt.
 *
 * @generated from enum google.cloud.deploy.v1.RepairState
 */
export enum RepairState {
  /**
   * The `repair` has an unspecified state.
   *
   * @generated from enum value: REPAIR_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The `repair` action has succeeded.
   *
   * @generated from enum value: REPAIR_STATE_SUCCEEDED = 1;
   */
  SUCCEEDED = 1,

  /**
   * The `repair` action was cancelled.
   *
   * @generated from enum value: REPAIR_STATE_CANCELLED = 2;
   */
  CANCELLED = 2,

  /**
   * The `repair` action has failed.
   *
   * @generated from enum value: REPAIR_STATE_FAILED = 3;
   */
  FAILED = 3,

  /**
   * The `repair` action is in progress.
   *
   * @generated from enum value: REPAIR_STATE_IN_PROGRESS = 4;
   */
  IN_PROGRESS = 4,

  /**
   * The `repair` action is pending.
   *
   * @generated from enum value: REPAIR_STATE_PENDING = 5;
   */
  PENDING = 5,

  /**
   * The `repair` action was aborted.
   *
   * @generated from enum value: REPAIR_STATE_ABORTED = 7;
   */
  ABORTED = 7,
}

/**
 * Describes the enum google.cloud.deploy.v1.RepairState.
 */
export const RepairStateSchema: GenEnum<RepairState> = /*@__PURE__*/
  enumDesc(file_google_cloud_deploy_v1_cloud_deploy, 2);

/**
 * CloudDeploy service creates and manages Continuous Delivery operations
 * on Google Cloud Platform via Skaffold (https://skaffold.dev).
 *
 * @generated from service google.cloud.deploy.v1.CloudDeploy
 */
export const CloudDeploy: GenService<{
  /**
   * Lists DeliveryPipelines in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.ListDeliveryPipelines
   */
  listDeliveryPipelines: {
    methodKind: "unary";
    input: typeof ListDeliveryPipelinesRequestSchema;
    output: typeof ListDeliveryPipelinesResponseSchema;
  },
  /**
   * Gets details of a single DeliveryPipeline.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.GetDeliveryPipeline
   */
  getDeliveryPipeline: {
    methodKind: "unary";
    input: typeof GetDeliveryPipelineRequestSchema;
    output: typeof DeliveryPipelineSchema;
  },
  /**
   * Creates a new DeliveryPipeline in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.CreateDeliveryPipeline
   */
  createDeliveryPipeline: {
    methodKind: "unary";
    input: typeof CreateDeliveryPipelineRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single DeliveryPipeline.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.UpdateDeliveryPipeline
   */
  updateDeliveryPipeline: {
    methodKind: "unary";
    input: typeof UpdateDeliveryPipelineRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single DeliveryPipeline.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.DeleteDeliveryPipeline
   */
  deleteDeliveryPipeline: {
    methodKind: "unary";
    input: typeof DeleteDeliveryPipelineRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Targets in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.ListTargets
   */
  listTargets: {
    methodKind: "unary";
    input: typeof ListTargetsRequestSchema;
    output: typeof ListTargetsResponseSchema;
  },
  /**
   * Creates a `Rollout` to roll back the specified target.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.RollbackTarget
   */
  rollbackTarget: {
    methodKind: "unary";
    input: typeof RollbackTargetRequestSchema;
    output: typeof RollbackTargetResponseSchema;
  },
  /**
   * Gets details of a single Target.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.GetTarget
   */
  getTarget: {
    methodKind: "unary";
    input: typeof GetTargetRequestSchema;
    output: typeof TargetSchema;
  },
  /**
   * Creates a new Target in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.CreateTarget
   */
  createTarget: {
    methodKind: "unary";
    input: typeof CreateTargetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Target.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.UpdateTarget
   */
  updateTarget: {
    methodKind: "unary";
    input: typeof UpdateTargetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Target.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.DeleteTarget
   */
  deleteTarget: {
    methodKind: "unary";
    input: typeof DeleteTargetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists CustomTargetTypes in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.ListCustomTargetTypes
   */
  listCustomTargetTypes: {
    methodKind: "unary";
    input: typeof ListCustomTargetTypesRequestSchema;
    output: typeof ListCustomTargetTypesResponseSchema;
  },
  /**
   * Gets details of a single CustomTargetType.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.GetCustomTargetType
   */
  getCustomTargetType: {
    methodKind: "unary";
    input: typeof GetCustomTargetTypeRequestSchema;
    output: typeof CustomTargetTypeSchema;
  },
  /**
   * Creates a new CustomTargetType in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.CreateCustomTargetType
   */
  createCustomTargetType: {
    methodKind: "unary";
    input: typeof CreateCustomTargetTypeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a single CustomTargetType.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.UpdateCustomTargetType
   */
  updateCustomTargetType: {
    methodKind: "unary";
    input: typeof UpdateCustomTargetTypeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single CustomTargetType.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.DeleteCustomTargetType
   */
  deleteCustomTargetType: {
    methodKind: "unary";
    input: typeof DeleteCustomTargetTypeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Releases in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.ListReleases
   */
  listReleases: {
    methodKind: "unary";
    input: typeof ListReleasesRequestSchema;
    output: typeof ListReleasesResponseSchema;
  },
  /**
   * Gets details of a single Release.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.GetRelease
   */
  getRelease: {
    methodKind: "unary";
    input: typeof GetReleaseRequestSchema;
    output: typeof ReleaseSchema;
  },
  /**
   * Creates a new Release in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.CreateRelease
   */
  createRelease: {
    methodKind: "unary";
    input: typeof CreateReleaseRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Abandons a Release in the Delivery Pipeline.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.AbandonRelease
   */
  abandonRelease: {
    methodKind: "unary";
    input: typeof AbandonReleaseRequestSchema;
    output: typeof AbandonReleaseResponseSchema;
  },
  /**
   * Creates a new DeployPolicy in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.CreateDeployPolicy
   */
  createDeployPolicy: {
    methodKind: "unary";
    input: typeof CreateDeployPolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single DeployPolicy.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.UpdateDeployPolicy
   */
  updateDeployPolicy: {
    methodKind: "unary";
    input: typeof UpdateDeployPolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single DeployPolicy.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.DeleteDeployPolicy
   */
  deleteDeployPolicy: {
    methodKind: "unary";
    input: typeof DeleteDeployPolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists DeployPolicies in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.ListDeployPolicies
   */
  listDeployPolicies: {
    methodKind: "unary";
    input: typeof ListDeployPoliciesRequestSchema;
    output: typeof ListDeployPoliciesResponseSchema;
  },
  /**
   * Gets details of a single DeployPolicy.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.GetDeployPolicy
   */
  getDeployPolicy: {
    methodKind: "unary";
    input: typeof GetDeployPolicyRequestSchema;
    output: typeof DeployPolicySchema;
  },
  /**
   * Approves a Rollout.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.ApproveRollout
   */
  approveRollout: {
    methodKind: "unary";
    input: typeof ApproveRolloutRequestSchema;
    output: typeof ApproveRolloutResponseSchema;
  },
  /**
   * Advances a Rollout in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.AdvanceRollout
   */
  advanceRollout: {
    methodKind: "unary";
    input: typeof AdvanceRolloutRequestSchema;
    output: typeof AdvanceRolloutResponseSchema;
  },
  /**
   * Cancels a Rollout in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.CancelRollout
   */
  cancelRollout: {
    methodKind: "unary";
    input: typeof CancelRolloutRequestSchema;
    output: typeof CancelRolloutResponseSchema;
  },
  /**
   * Lists Rollouts in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.ListRollouts
   */
  listRollouts: {
    methodKind: "unary";
    input: typeof ListRolloutsRequestSchema;
    output: typeof ListRolloutsResponseSchema;
  },
  /**
   * Gets details of a single Rollout.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.GetRollout
   */
  getRollout: {
    methodKind: "unary";
    input: typeof GetRolloutRequestSchema;
    output: typeof RolloutSchema;
  },
  /**
   * Creates a new Rollout in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.CreateRollout
   */
  createRollout: {
    methodKind: "unary";
    input: typeof CreateRolloutRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Ignores the specified Job in a Rollout.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.IgnoreJob
   */
  ignoreJob: {
    methodKind: "unary";
    input: typeof IgnoreJobRequestSchema;
    output: typeof IgnoreJobResponseSchema;
  },
  /**
   * Retries the specified Job in a Rollout.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.RetryJob
   */
  retryJob: {
    methodKind: "unary";
    input: typeof RetryJobRequestSchema;
    output: typeof RetryJobResponseSchema;
  },
  /**
   * Lists JobRuns in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.ListJobRuns
   */
  listJobRuns: {
    methodKind: "unary";
    input: typeof ListJobRunsRequestSchema;
    output: typeof ListJobRunsResponseSchema;
  },
  /**
   * Gets details of a single JobRun.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.GetJobRun
   */
  getJobRun: {
    methodKind: "unary";
    input: typeof GetJobRunRequestSchema;
    output: typeof JobRunSchema;
  },
  /**
   * Terminates a Job Run in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.TerminateJobRun
   */
  terminateJobRun: {
    methodKind: "unary";
    input: typeof TerminateJobRunRequestSchema;
    output: typeof TerminateJobRunResponseSchema;
  },
  /**
   * Gets the configuration for a location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.GetConfig
   */
  getConfig: {
    methodKind: "unary";
    input: typeof GetConfigRequestSchema;
    output: typeof ConfigSchema;
  },
  /**
   * Creates a new Automation in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.CreateAutomation
   */
  createAutomation: {
    methodKind: "unary";
    input: typeof CreateAutomationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single Automation resource.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.UpdateAutomation
   */
  updateAutomation: {
    methodKind: "unary";
    input: typeof UpdateAutomationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Automation resource.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.DeleteAutomation
   */
  deleteAutomation: {
    methodKind: "unary";
    input: typeof DeleteAutomationRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details of a single Automation.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.GetAutomation
   */
  getAutomation: {
    methodKind: "unary";
    input: typeof GetAutomationRequestSchema;
    output: typeof AutomationSchema;
  },
  /**
   * Lists Automations in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.ListAutomations
   */
  listAutomations: {
    methodKind: "unary";
    input: typeof ListAutomationsRequestSchema;
    output: typeof ListAutomationsResponseSchema;
  },
  /**
   * Gets details of a single AutomationRun.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.GetAutomationRun
   */
  getAutomationRun: {
    methodKind: "unary";
    input: typeof GetAutomationRunRequestSchema;
    output: typeof AutomationRunSchema;
  },
  /**
   * Lists AutomationRuns in a given project and location.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.ListAutomationRuns
   */
  listAutomationRuns: {
    methodKind: "unary";
    input: typeof ListAutomationRunsRequestSchema;
    output: typeof ListAutomationRunsResponseSchema;
  },
  /**
   * Cancels an AutomationRun. The `state` of the `AutomationRun` after
   * cancelling is `CANCELLED`. `CancelAutomationRun` can be called on
   * AutomationRun in the state `IN_PROGRESS` and `PENDING`; AutomationRun
   * in a different state returns an `FAILED_PRECONDITION` error.
   *
   * @generated from rpc google.cloud.deploy.v1.CloudDeploy.CancelAutomationRun
   */
  cancelAutomationRun: {
    methodKind: "unary";
    input: typeof CancelAutomationRunRequestSchema;
    output: typeof CancelAutomationRunResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_deploy_v1_cloud_deploy, 0);

