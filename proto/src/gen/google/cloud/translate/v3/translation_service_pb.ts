// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/translate/v3/translation_service.proto (package google.cloud.translation.v3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { AdaptiveMtDatasetSchema, AdaptiveMtFileSchema, AdaptiveMtTranslateRequestSchema, AdaptiveMtTranslateResponseSchema, CreateAdaptiveMtDatasetRequestSchema, DeleteAdaptiveMtDatasetRequestSchema, DeleteAdaptiveMtFileRequestSchema, GetAdaptiveMtDatasetRequestSchema, GetAdaptiveMtFileRequestSchema, ImportAdaptiveMtFileRequestSchema, ImportAdaptiveMtFileResponseSchema, ListAdaptiveMtDatasetsRequestSchema, ListAdaptiveMtDatasetsResponseSchema, ListAdaptiveMtFilesRequestSchema, ListAdaptiveMtFilesResponseSchema, ListAdaptiveMtSentencesRequestSchema, ListAdaptiveMtSentencesResponseSchema } from "./adaptive_mt_pb";
import { file_google_cloud_translate_v3_adaptive_mt } from "./adaptive_mt_pb";
import type { CreateDatasetRequestSchema, CreateModelRequestSchema, DatasetSchema, DeleteDatasetRequestSchema, DeleteModelRequestSchema, ExportDataRequestSchema, GetDatasetRequestSchema, GetModelRequestSchema, ImportDataRequestSchema, ListDatasetsRequestSchema, ListDatasetsResponseSchema, ListExamplesRequestSchema, ListExamplesResponseSchema, ListModelsRequestSchema, ListModelsResponseSchema, ModelSchema } from "./automl_translation_pb";
import { file_google_cloud_translate_v3_automl_translation } from "./automl_translation_pb";
import type { GlossaryEntry, GlossaryEntrySchema } from "./common_pb";
import { file_google_cloud_translate_v3_common } from "./common_pb";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/translate/v3/translation_service.proto.
 */
export const file_google_cloud_translate_v3_translation_service: GenFile = /*@__PURE__*/
  fileDesc("CjNnb29nbGUvY2xvdWQvdHJhbnNsYXRlL3YzL3RyYW5zbGF0aW9uX3NlcnZpY2UucHJvdG8SG2dvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52MyI3ChVUcmFuc2xpdGVyYXRpb25Db25maWcSHgoWZW5hYmxlX3RyYW5zbGl0ZXJhdGlvbhgBIAEoCCKOBAoUVHJhbnNsYXRlVGV4dFJlcXVlc3QSFQoIY29udGVudHMYASADKAlCA+BBAhIWCgltaW1lX3R5cGUYAyABKAlCA+BBARIhChRzb3VyY2VfbGFuZ3VhZ2VfY29kZRgEIAEoCUID4EEBEiEKFHRhcmdldF9sYW5ndWFnZV9jb2RlGAUgASgJQgPgQQISOQoGcGFyZW50GAggASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhISCgVtb2RlbBgGIAEoCUID4EEBElYKD2dsb3NzYXJ5X2NvbmZpZxgHIAEoCzI4Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5UcmFuc2xhdGVUZXh0R2xvc3NhcnlDb25maWdCA+BBARJXChZ0cmFuc2xpdGVyYXRpb25fY29uZmlnGA0gASgLMjIuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLlRyYW5zbGl0ZXJhdGlvbkNvbmZpZ0ID4EEBElIKBmxhYmVscxgKIAMoCzI9Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5UcmFuc2xhdGVUZXh0UmVxdWVzdC5MYWJlbHNFbnRyeUID4EEBGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEioAEKFVRyYW5zbGF0ZVRleHRSZXNwb25zZRI+Cgx0cmFuc2xhdGlvbnMYASADKAsyKC5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuVHJhbnNsYXRpb24SRwoVZ2xvc3NhcnlfdHJhbnNsYXRpb25zGAMgAygLMiguZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLlRyYW5zbGF0aW9uIqgBCgtUcmFuc2xhdGlvbhIXCg90cmFuc2xhdGVkX3RleHQYASABKAkSDQoFbW9kZWwYAiABKAkSHgoWZGV0ZWN0ZWRfbGFuZ3VhZ2VfY29kZRgEIAEoCRJRCg9nbG9zc2FyeV9jb25maWcYAyABKAsyOC5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuVHJhbnNsYXRlVGV4dEdsb3NzYXJ5Q29uZmlnIooBChNSb21hbml6ZVRleHRSZXF1ZXN0EjkKBnBhcmVudBgEIAEoCUIp4EEC+kEjCiFsb2NhdGlvbnMuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SFQoIY29udGVudHMYASADKAlCA+BBAhIhChRzb3VyY2VfbGFuZ3VhZ2VfY29kZRgCIAEoCUID4EEBIkYKDFJvbWFuaXphdGlvbhIWCg5yb21hbml6ZWRfdGV4dBgBIAEoCRIeChZkZXRlY3RlZF9sYW5ndWFnZV9jb2RlGAIgASgJIlgKFFJvbWFuaXplVGV4dFJlc3BvbnNlEkAKDXJvbWFuaXphdGlvbnMYASADKAsyKS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuUm9tYW5pemF0aW9uIp8CChVEZXRlY3RMYW5ndWFnZVJlcXVlc3QSOQoGcGFyZW50GAUgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhISCgVtb2RlbBgEIAEoCUID4EEBEhEKB2NvbnRlbnQYASABKAlIABIWCgltaW1lX3R5cGUYAyABKAlCA+BBARJTCgZsYWJlbHMYBiADKAsyPi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuRGV0ZWN0TGFuZ3VhZ2VSZXF1ZXN0LkxhYmVsc0VudHJ5QgPgQQEaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUIICgZzb3VyY2UiPQoQRGV0ZWN0ZWRMYW5ndWFnZRIVCg1sYW5ndWFnZV9jb2RlGAEgASgJEhIKCmNvbmZpZGVuY2UYAiABKAIiWgoWRGV0ZWN0TGFuZ3VhZ2VSZXNwb25zZRJACglsYW5ndWFnZXMYASADKAsyLS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuRGV0ZWN0ZWRMYW5ndWFnZSKRAQocR2V0U3VwcG9ydGVkTGFuZ3VhZ2VzUmVxdWVzdBI5CgZwYXJlbnQYAyABKAlCKeBBAvpBIwohbG9jYXRpb25zLmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uEiIKFWRpc3BsYXlfbGFuZ3VhZ2VfY29kZRgBIAEoCUID4EEBEhIKBW1vZGVsGAIgASgJQgPgQQEiVwoSU3VwcG9ydGVkTGFuZ3VhZ2VzEkEKCWxhbmd1YWdlcxgBIAMoCzIuLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5TdXBwb3J0ZWRMYW5ndWFnZSJwChFTdXBwb3J0ZWRMYW5ndWFnZRIVCg1sYW5ndWFnZV9jb2RlGAEgASgJEhQKDGRpc3BsYXlfbmFtZRgCIAEoCRIWCg5zdXBwb3J0X3NvdXJjZRgDIAEoCBIWCg5zdXBwb3J0X3RhcmdldBgEIAEoCCIjCglHY3NTb3VyY2USFgoJaW5wdXRfdXJpGAEgASgJQgPgQQIibQoLSW5wdXRDb25maWcSFgoJbWltZV90eXBlGAEgASgJQgPgQQESPAoKZ2NzX3NvdXJjZRgCIAEoCzImLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5HY3NTb3VyY2VIAEIICgZzb3VyY2UiMAoOR2NzRGVzdGluYXRpb24SHgoRb3V0cHV0X3VyaV9wcmVmaXgYASABKAlCA+BBAiJlCgxPdXRwdXRDb25maWcSRgoPZ2NzX2Rlc3RpbmF0aW9uGAEgASgLMisuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkdjc0Rlc3RpbmF0aW9uSABCDQoLZGVzdGluYXRpb24igwEKE0RvY3VtZW50SW5wdXRDb25maWcSEQoHY29udGVudBgBIAEoDEgAEjwKCmdjc19zb3VyY2UYAiABKAsyJi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuR2NzU291cmNlSAASEQoJbWltZV90eXBlGAQgASgJQggKBnNvdXJjZSKKAQoURG9jdW1lbnRPdXRwdXRDb25maWcSSwoPZ2NzX2Rlc3RpbmF0aW9uGAEgASgLMisuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkdjc0Rlc3RpbmF0aW9uQgPgQQFIABIWCgltaW1lX3R5cGUYAyABKAlCA+BBAUINCgtkZXN0aW5hdGlvbiK+BQoYVHJhbnNsYXRlRG9jdW1lbnRSZXF1ZXN0EhMKBnBhcmVudBgBIAEoCUID4EECEiEKFHNvdXJjZV9sYW5ndWFnZV9jb2RlGAIgASgJQgPgQQESIQoUdGFyZ2V0X2xhbmd1YWdlX2NvZGUYAyABKAlCA+BBAhJUChVkb2N1bWVudF9pbnB1dF9jb25maWcYBCABKAsyMC5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuRG9jdW1lbnRJbnB1dENvbmZpZ0ID4EECElYKFmRvY3VtZW50X291dHB1dF9jb25maWcYBSABKAsyMS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuRG9jdW1lbnRPdXRwdXRDb25maWdCA+BBARISCgVtb2RlbBgGIAEoCUID4EEBElYKD2dsb3NzYXJ5X2NvbmZpZxgHIAEoCzI4Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5UcmFuc2xhdGVUZXh0R2xvc3NhcnlDb25maWdCA+BBARJWCgZsYWJlbHMYCCADKAsyQS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuVHJhbnNsYXRlRG9jdW1lbnRSZXF1ZXN0LkxhYmVsc0VudHJ5QgPgQQESIwoWY3VzdG9taXplZF9hdHRyaWJ1dGlvbhgKIAEoCUID4EEBEikKHGlzX3RyYW5zbGF0ZV9uYXRpdmVfcGRmX29ubHkYCyABKAhCA+BBARItCiBlbmFibGVfc2hhZG93X3JlbW92YWxfbmF0aXZlX3BkZhgMIAEoCEID4EEBEicKGmVuYWJsZV9yb3RhdGlvbl9jb3JyZWN0aW9uGA0gASgIQgPgQQEaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJlChNEb2N1bWVudFRyYW5zbGF0aW9uEhsKE2J5dGVfc3RyZWFtX291dHB1dHMYASADKAwSEQoJbWltZV90eXBlGAIgASgJEh4KFmRldGVjdGVkX2xhbmd1YWdlX2NvZGUYAyABKAkipgIKGVRyYW5zbGF0ZURvY3VtZW50UmVzcG9uc2USTgoUZG9jdW1lbnRfdHJhbnNsYXRpb24YASABKAsyMC5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuRG9jdW1lbnRUcmFuc2xhdGlvbhJXCh1nbG9zc2FyeV9kb2N1bWVudF90cmFuc2xhdGlvbhgCIAEoCzIwLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5Eb2N1bWVudFRyYW5zbGF0aW9uEg0KBW1vZGVsGAMgASgJElEKD2dsb3NzYXJ5X2NvbmZpZxgEIAEoCzI4Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5UcmFuc2xhdGVUZXh0R2xvc3NhcnlDb25maWciiAYKGUJhdGNoVHJhbnNsYXRlVGV4dFJlcXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhIhChRzb3VyY2VfbGFuZ3VhZ2VfY29kZRgCIAEoCUID4EECEiIKFXRhcmdldF9sYW5ndWFnZV9jb2RlcxgDIAMoCUID4EECElcKBm1vZGVscxgEIAMoCzJCLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5CYXRjaFRyYW5zbGF0ZVRleHRSZXF1ZXN0Lk1vZGVsc0VudHJ5QgPgQQESRAoNaW5wdXRfY29uZmlncxgFIAMoCzIoLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5JbnB1dENvbmZpZ0ID4EECEkUKDW91dHB1dF9jb25maWcYBiABKAsyKS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuT3V0cHV0Q29uZmlnQgPgQQISXwoKZ2xvc3NhcmllcxgHIAMoCzJGLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5CYXRjaFRyYW5zbGF0ZVRleHRSZXF1ZXN0Lkdsb3NzYXJpZXNFbnRyeUID4EEBElcKBmxhYmVscxgJIAMoCzJCLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5CYXRjaFRyYW5zbGF0ZVRleHRSZXF1ZXN0LkxhYmVsc0VudHJ5QgPgQQEaLQoLTW9kZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARprCg9HbG9zc2FyaWVzRW50cnkSCwoDa2V5GAEgASgJEkcKBXZhbHVlGAIgASgLMjguZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLlRyYW5zbGF0ZVRleHRHbG9zc2FyeUNvbmZpZzoCOAEaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLOAgoWQmF0Y2hUcmFuc2xhdGVNZXRhZGF0YRJICgVzdGF0ZRgBIAEoDjI5Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5CYXRjaFRyYW5zbGF0ZU1ldGFkYXRhLlN0YXRlEh0KFXRyYW5zbGF0ZWRfY2hhcmFjdGVycxgCIAEoAxIZChFmYWlsZWRfY2hhcmFjdGVycxgDIAEoAxIYChB0b3RhbF9jaGFyYWN0ZXJzGAQgASgDEi8KC3N1Ym1pdF90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJlCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgsKB1JVTk5JTkcQARINCglTVUNDRUVERUQQAhIKCgZGQUlMRUQQAxIOCgpDQU5DRUxMSU5HEAQSDQoJQ0FOQ0VMTEVEEAUiywEKFkJhdGNoVHJhbnNsYXRlUmVzcG9uc2USGAoQdG90YWxfY2hhcmFjdGVycxgBIAEoAxIdChV0cmFuc2xhdGVkX2NoYXJhY3RlcnMYAiABKAMSGQoRZmFpbGVkX2NoYXJhY3RlcnMYAyABKAMSLwoLc3VibWl0X3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJdChNHbG9zc2FyeUlucHV0Q29uZmlnEjwKCmdjc19zb3VyY2UYASABKAsyJi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuR2NzU291cmNlSABCCAoGc291cmNlIpoFCghHbG9zc2FyeRIRCgRuYW1lGAEgASgJQgPgQQISTwoNbGFuZ3VhZ2VfcGFpchgDIAEoCzI2Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5HbG9zc2FyeS5MYW5ndWFnZUNvZGVQYWlySAASVAoSbGFuZ3VhZ2VfY29kZXNfc2V0GAQgASgLMjYuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkdsb3NzYXJ5Lkxhbmd1YWdlQ29kZXNTZXRIABJGCgxpbnB1dF9jb25maWcYBSABKAsyMC5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuR2xvc3NhcnlJbnB1dENvbmZpZxIYCgtlbnRyeV9jb3VudBgGIAEoBUID4EEDEjQKC3N1Ym1pdF90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjEKCGVuZF90aW1lGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhkKDGRpc3BsYXlfbmFtZRgJIAEoCUID4EEBGk4KEExhbmd1YWdlQ29kZVBhaXISHAoUc291cmNlX2xhbmd1YWdlX2NvZGUYASABKAkSHAoUdGFyZ2V0X2xhbmd1YWdlX2NvZGUYAiABKAkaKgoQTGFuZ3VhZ2VDb2Rlc1NldBIWCg5sYW5ndWFnZV9jb2RlcxgBIAMoCTpl6kFiCiF0cmFuc2xhdGUuZ29vZ2xlYXBpcy5jb20vR2xvc3NhcnkSPXByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9nbG9zc2FyaWVzL3tnbG9zc2FyeX1CCwoJbGFuZ3VhZ2VzIpABChVDcmVhdGVHbG9zc2FyeVJlcXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhI8CghnbG9zc2FyeRgCIAEoCzIlLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5HbG9zc2FyeUID4EECIoYBChVVcGRhdGVHbG9zc2FyeVJlcXVlc3QSPAoIZ2xvc3NhcnkYASABKAsyJS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuR2xvc3NhcnlCA+BBAhIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2siTQoSR2V0R2xvc3NhcnlSZXF1ZXN0EjcKBG5hbWUYASABKAlCKeBBAvpBIwohdHJhbnNsYXRlLmdvb2dsZWFwaXMuY29tL0dsb3NzYXJ5IlAKFURlbGV0ZUdsb3NzYXJ5UmVxdWVzdBI3CgRuYW1lGAEgASgJQingQQL6QSMKIXRyYW5zbGF0ZS5nb29nbGVhcGlzLmNvbS9HbG9zc2FyeSKYAQoVTGlzdEdsb3NzYXJpZXNSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjCiFsb2NhdGlvbnMuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBEhMKBmZpbHRlchgEIAEoCUID4EEBImwKFkxpc3RHbG9zc2FyaWVzUmVzcG9uc2USOQoKZ2xvc3NhcmllcxgBIAMoCzIlLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5HbG9zc2FyeRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiVwoXR2V0R2xvc3NhcnlFbnRyeVJlcXVlc3QSPAoEbmFtZRgBIAEoCUIu4EEC+kEoCiZ0cmFuc2xhdGUuZ29vZ2xlYXBpcy5jb20vR2xvc3NhcnlFbnRyeSJaChpEZWxldGVHbG9zc2FyeUVudHJ5UmVxdWVzdBI8CgRuYW1lGAEgASgJQi7gQQL6QSgKJnRyYW5zbGF0ZS5nb29nbGVhcGlzLmNvbS9HbG9zc2FyeUVudHJ5IogBChpMaXN0R2xvc3NhcnlFbnRyaWVzUmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIwohdHJhbnNsYXRlLmdvb2dsZWFwaXMuY29tL0dsb3NzYXJ5EhYKCXBhZ2Vfc2l6ZRgCIAEoBUID4EEBEhcKCnBhZ2VfdG9rZW4YAyABKAlCA+BBASKGAQobTGlzdEdsb3NzYXJ5RW50cmllc1Jlc3BvbnNlEkkKEGdsb3NzYXJ5X2VudHJpZXMYASADKAsyKi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuR2xvc3NhcnlFbnRyeUID4EEBEhwKD25leHRfcGFnZV90b2tlbhgCIAEoCUID4EEBIqABChpDcmVhdGVHbG9zc2FyeUVudHJ5UmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIwohdHJhbnNsYXRlLmdvb2dsZWFwaXMuY29tL0dsb3NzYXJ5EkcKDmdsb3NzYXJ5X2VudHJ5GAIgASgLMiouZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkdsb3NzYXJ5RW50cnlCA+BBAiJlChpVcGRhdGVHbG9zc2FyeUVudHJ5UmVxdWVzdBJHCg5nbG9zc2FyeV9lbnRyeRgBIAEoCzIqLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5HbG9zc2FyeUVudHJ5QgPgQQIiiAIKFkNyZWF0ZUdsb3NzYXJ5TWV0YWRhdGESDAoEbmFtZRgBIAEoCRJICgVzdGF0ZRgCIAEoDjI5Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5DcmVhdGVHbG9zc2FyeU1ldGFkYXRhLlN0YXRlEi8KC3N1Ym1pdF90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJlCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgsKB1JVTk5JTkcQARINCglTVUNDRUVERUQQAhIKCgZGQUlMRUQQAxIOCgpDQU5DRUxMSU5HEAQSDQoJQ0FOQ0VMTEVEEAUiswIKFlVwZGF0ZUdsb3NzYXJ5TWV0YWRhdGESNwoIZ2xvc3NhcnkYASABKAsyJS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuR2xvc3NhcnkSSAoFc3RhdGUYAiABKA4yOS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuVXBkYXRlR2xvc3NhcnlNZXRhZGF0YS5TdGF0ZRIvCgtzdWJtaXRfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiZQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABILCgdSVU5OSU5HEAESDQoJU1VDQ0VFREVEEAISCgoGRkFJTEVEEAMSDgoKQ0FOQ0VMTElORxAEEg0KCUNBTkNFTExFRBAFIogCChZEZWxldGVHbG9zc2FyeU1ldGFkYXRhEgwKBG5hbWUYASABKAkSSAoFc3RhdGUYAiABKA4yOS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuRGVsZXRlR2xvc3NhcnlNZXRhZGF0YS5TdGF0ZRIvCgtzdWJtaXRfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiZQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABILCgdSVU5OSU5HEAESDQoJU1VDQ0VFREVEEAISCgoGRkFJTEVEEAMSDgoKQ0FOQ0VMTElORxAEEg0KCUNBTkNFTExFRBAFIoUBChZEZWxldGVHbG9zc2FyeVJlc3BvbnNlEgwKBG5hbWUYASABKAkSLwoLc3VibWl0X3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCLRBwodQmF0Y2hUcmFuc2xhdGVEb2N1bWVudFJlcXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhIhChRzb3VyY2VfbGFuZ3VhZ2VfY29kZRgCIAEoCUID4EECEiIKFXRhcmdldF9sYW5ndWFnZV9jb2RlcxgDIAMoCUID4EECElEKDWlucHV0X2NvbmZpZ3MYBCADKAsyNS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuQmF0Y2hEb2N1bWVudElucHV0Q29uZmlnQgPgQQISUgoNb3V0cHV0X2NvbmZpZxgFIAEoCzI2Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5CYXRjaERvY3VtZW50T3V0cHV0Q29uZmlnQgPgQQISWwoGbW9kZWxzGAYgAygLMkYuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkJhdGNoVHJhbnNsYXRlRG9jdW1lbnRSZXF1ZXN0Lk1vZGVsc0VudHJ5QgPgQQESYwoKZ2xvc3NhcmllcxgHIAMoCzJKLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5CYXRjaFRyYW5zbGF0ZURvY3VtZW50UmVxdWVzdC5HbG9zc2FyaWVzRW50cnlCA+BBARJyChJmb3JtYXRfY29udmVyc2lvbnMYCCADKAsyUS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuQmF0Y2hUcmFuc2xhdGVEb2N1bWVudFJlcXVlc3QuRm9ybWF0Q29udmVyc2lvbnNFbnRyeUID4EEBEiMKFmN1c3RvbWl6ZWRfYXR0cmlidXRpb24YCiABKAlCA+BBARItCiBlbmFibGVfc2hhZG93X3JlbW92YWxfbmF0aXZlX3BkZhgLIAEoCEID4EEBEicKGmVuYWJsZV9yb3RhdGlvbl9jb3JyZWN0aW9uGAwgASgIQgPgQQEaLQoLTW9kZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARprCg9HbG9zc2FyaWVzRW50cnkSCwoDa2V5GAEgASgJEkcKBXZhbHVlGAIgASgLMjguZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLlRyYW5zbGF0ZVRleHRHbG9zc2FyeUNvbmZpZzoCOAEaOAoWRm9ybWF0Q29udmVyc2lvbnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBImIKGEJhdGNoRG9jdW1lbnRJbnB1dENvbmZpZxI8CgpnY3Nfc291cmNlGAEgASgLMiYuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkdjc1NvdXJjZUgAQggKBnNvdXJjZSJyChlCYXRjaERvY3VtZW50T3V0cHV0Q29uZmlnEkYKD2djc19kZXN0aW5hdGlvbhgBIAEoCzIrLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5HY3NEZXN0aW5hdGlvbkgAQg0KC2Rlc3RpbmF0aW9uItkCCh5CYXRjaFRyYW5zbGF0ZURvY3VtZW50UmVzcG9uc2USEwoLdG90YWxfcGFnZXMYASABKAMSGAoQdHJhbnNsYXRlZF9wYWdlcxgCIAEoAxIUCgxmYWlsZWRfcGFnZXMYAyABKAMSHAoUdG90YWxfYmlsbGFibGVfcGFnZXMYBCABKAMSGAoQdG90YWxfY2hhcmFjdGVycxgFIAEoAxIdChV0cmFuc2xhdGVkX2NoYXJhY3RlcnMYBiABKAMSGQoRZmFpbGVkX2NoYXJhY3RlcnMYByABKAMSIQoZdG90YWxfYmlsbGFibGVfY2hhcmFjdGVycxgIIAEoAxIvCgtzdWJtaXRfdGltZRgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIuQDCh5CYXRjaFRyYW5zbGF0ZURvY3VtZW50TWV0YWRhdGESUAoFc3RhdGUYASABKA4yQS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuQmF0Y2hUcmFuc2xhdGVEb2N1bWVudE1ldGFkYXRhLlN0YXRlEhMKC3RvdGFsX3BhZ2VzGAIgASgDEhgKEHRyYW5zbGF0ZWRfcGFnZXMYAyABKAMSFAoMZmFpbGVkX3BhZ2VzGAQgASgDEhwKFHRvdGFsX2JpbGxhYmxlX3BhZ2VzGAUgASgDEhgKEHRvdGFsX2NoYXJhY3RlcnMYBiABKAMSHQoVdHJhbnNsYXRlZF9jaGFyYWN0ZXJzGAcgASgDEhkKEWZhaWxlZF9jaGFyYWN0ZXJzGAggASgDEiEKGXRvdGFsX2JpbGxhYmxlX2NoYXJhY3RlcnMYCSABKAMSLwoLc3VibWl0X3RpbWUYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wImUKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASCwoHUlVOTklORxABEg0KCVNVQ0NFRURFRBACEgoKBkZBSUxFRBADEg4KCkNBTkNFTExJTkcQBBINCglDQU5DRUxMRUQQBSJ0ChtUcmFuc2xhdGVUZXh0R2xvc3NhcnlDb25maWcSOwoIZ2xvc3NhcnkYASABKAlCKeBBAvpBIwohdHJhbnNsYXRlLmdvb2dsZWFwaXMuY29tL0dsb3NzYXJ5EhgKC2lnbm9yZV9jYXNlGAIgASgIQgPgQQEyvUMKElRyYW5zbGF0aW9uU2VydmljZRLUAgoNVHJhbnNsYXRlVGV4dBIxLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5UcmFuc2xhdGVUZXh0UmVxdWVzdBoyLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5UcmFuc2xhdGVUZXh0UmVzcG9uc2Ui2wHaQSRwYXJlbnQsdGFyZ2V0X2xhbmd1YWdlX2NvZGUsY29udGVudHPaQUlwYXJlbnQsbW9kZWwsbWltZV90eXBlLHNvdXJjZV9sYW5ndWFnZV9jb2RlLHRhcmdldF9sYW5ndWFnZV9jb2RlLGNvbnRlbnRzgtPkkwJiOgEqWio6ASoiJS92My97cGFyZW50PXByb2plY3RzLyp9OnRyYW5zbGF0ZVRleHQiMS92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9OnRyYW5zbGF0ZVRleHQS7QEKDFJvbWFuaXplVGV4dBIwLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5Sb21hbml6ZVRleHRSZXF1ZXN0GjEuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLlJvbWFuaXplVGV4dFJlc3BvbnNlInjaQQ9wYXJlbnQsY29udGVudHOC0+STAmA6ASpaKToBKiIkL3YzL3twYXJlbnQ9cHJvamVjdHMvKn06cm9tYW5pemVUZXh0IjAvdjMve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfTpyb21hbml6ZVRleHQShwIKDkRldGVjdExhbmd1YWdlEjIuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkRldGVjdExhbmd1YWdlUmVxdWVzdBozLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5EZXRlY3RMYW5ndWFnZVJlc3BvbnNlIosB2kEecGFyZW50LG1vZGVsLG1pbWVfdHlwZSxjb250ZW50gtPkkwJkOgEqWis6ASoiJi92My97cGFyZW50PXByb2plY3RzLyp9OmRldGVjdExhbmd1YWdlIjIvdjMve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfTpkZXRlY3RMYW5ndWFnZRKXAgoVR2V0U3VwcG9ydGVkTGFuZ3VhZ2VzEjkuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkdldFN1cHBvcnRlZExhbmd1YWdlc1JlcXVlc3QaLy5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuU3VwcG9ydGVkTGFuZ3VhZ2VzIpEB2kEicGFyZW50LG1vZGVsLGRpc3BsYXlfbGFuZ3VhZ2VfY29kZYLT5JMCZlosEiovdjMve3BhcmVudD1wcm9qZWN0cy8qfS9zdXBwb3J0ZWRMYW5ndWFnZXMSNi92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L3N1cHBvcnRlZExhbmd1YWdlcxLEAQoRVHJhbnNsYXRlRG9jdW1lbnQSNS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuVHJhbnNsYXRlRG9jdW1lbnRSZXF1ZXN0GjYuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLlRyYW5zbGF0ZURvY3VtZW50UmVzcG9uc2UiQILT5JMCOjoBKiI1L3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn06dHJhbnNsYXRlRG9jdW1lbnQS4QEKEkJhdGNoVHJhbnNsYXRlVGV4dBI2Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5CYXRjaFRyYW5zbGF0ZVRleHRSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJ0ykEwChZCYXRjaFRyYW5zbGF0ZVJlc3BvbnNlEhZCYXRjaFRyYW5zbGF0ZU1ldGFkYXRhgtPkkwI7OgEqIjYvdjMve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfTpiYXRjaFRyYW5zbGF0ZVRleHQSzgIKFkJhdGNoVHJhbnNsYXRlRG9jdW1lbnQSOi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuQmF0Y2hUcmFuc2xhdGVEb2N1bWVudFJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uItgBykFACh5CYXRjaFRyYW5zbGF0ZURvY3VtZW50UmVzcG9uc2USHkJhdGNoVHJhbnNsYXRlRG9jdW1lbnRNZXRhZGF0YdpBTXBhcmVudCxzb3VyY2VfbGFuZ3VhZ2VfY29kZSx0YXJnZXRfbGFuZ3VhZ2VfY29kZXMsaW5wdXRfY29uZmlncyxvdXRwdXRfY29uZmlngtPkkwI/OgEqIjovdjMve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfTpiYXRjaFRyYW5zbGF0ZURvY3VtZW50EtwBCg5DcmVhdGVHbG9zc2FyeRIyLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5DcmVhdGVHbG9zc2FyeVJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uInfKQSIKCEdsb3NzYXJ5EhZDcmVhdGVHbG9zc2FyeU1ldGFkYXRh2kEPcGFyZW50LGdsb3NzYXJ5gtPkkwI6OghnbG9zc2FyeSIuL3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vZ2xvc3NhcmllcxLrAQoOVXBkYXRlR2xvc3NhcnkSMi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuVXBkYXRlR2xvc3NhcnlSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKFAcpBIgoIR2xvc3NhcnkSFlVwZGF0ZUdsb3NzYXJ5TWV0YWRhdGHaQRRnbG9zc2FyeSx1cGRhdGVfbWFza4LT5JMCQzoIZ2xvc3NhcnkyNy92My97Z2xvc3NhcnkubmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2dsb3NzYXJpZXMvKn0SugEKDkxpc3RHbG9zc2FyaWVzEjIuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkxpc3RHbG9zc2FyaWVzUmVxdWVzdBozLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5MaXN0R2xvc3Nhcmllc1Jlc3BvbnNlIj/aQQZwYXJlbnSC0+STAjASLi92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2dsb3NzYXJpZXMSpAEKC0dldEdsb3NzYXJ5Ei8uZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkdldEdsb3NzYXJ5UmVxdWVzdBolLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5HbG9zc2FyeSI92kEEbmFtZYLT5JMCMBIuL3YzL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZ2xvc3Nhcmllcy8qfRLVAQoORGVsZXRlR2xvc3NhcnkSMi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuRGVsZXRlR2xvc3NhcnlSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJwykEwChZEZWxldGVHbG9zc2FyeVJlc3BvbnNlEhZEZWxldGVHbG9zc2FyeU1ldGFkYXRh2kEEbmFtZYLT5JMCMCouL3YzL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZ2xvc3Nhcmllcy8qfRLFAQoQR2V0R2xvc3NhcnlFbnRyeRI0Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5HZXRHbG9zc2FyeUVudHJ5UmVxdWVzdBoqLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5HbG9zc2FyeUVudHJ5Ik/aQQRuYW1lgtPkkwJCEkAvdjMve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9nbG9zc2FyaWVzLyovZ2xvc3NhcnlFbnRyaWVzLyp9EtsBChNMaXN0R2xvc3NhcnlFbnRyaWVzEjcuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkxpc3RHbG9zc2FyeUVudHJpZXNSZXF1ZXN0GjguZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkxpc3RHbG9zc2FyeUVudHJpZXNSZXNwb25zZSJR2kEGcGFyZW50gtPkkwJCEkAvdjMve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2dsb3NzYXJpZXMvKn0vZ2xvc3NhcnlFbnRyaWVzEuwBChNDcmVhdGVHbG9zc2FyeUVudHJ5EjcuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkNyZWF0ZUdsb3NzYXJ5RW50cnlSZXF1ZXN0GiouZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkdsb3NzYXJ5RW50cnkicNpBFXBhcmVudCxnbG9zc2FyeV9lbnRyeYLT5JMCUjoOZ2xvc3NhcnlfZW50cnkiQC92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovZ2xvc3Nhcmllcy8qfS9nbG9zc2FyeUVudHJpZXMS9AEKE1VwZGF0ZUdsb3NzYXJ5RW50cnkSNy5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuVXBkYXRlR2xvc3NhcnlFbnRyeVJlcXVlc3QaKi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuR2xvc3NhcnlFbnRyeSJ42kEOZ2xvc3NhcnlfZW50cnmC0+STAmE6Dmdsb3NzYXJ5X2VudHJ5Mk8vdjMve2dsb3NzYXJ5X2VudHJ5Lm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9nbG9zc2FyaWVzLyovZ2xvc3NhcnlFbnRyaWVzLyp9ErcBChNEZWxldGVHbG9zc2FyeUVudHJ5EjcuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkRlbGV0ZUdsb3NzYXJ5RW50cnlSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ik/aQQRuYW1lgtPkkwJCKkAvdjMve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9nbG9zc2FyaWVzLyovZ2xvc3NhcnlFbnRyaWVzLyp9EtQBCg1DcmVhdGVEYXRhc2V0EjEuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkNyZWF0ZURhdGFzZXRSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJxykEgCgdEYXRhc2V0EhVDcmVhdGVEYXRhc2V0TWV0YWRhdGHaQQ5wYXJlbnQsZGF0YXNldILT5JMCNzoHZGF0YXNldCIsL3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vZGF0YXNldHMSnwEKCkdldERhdGFzZXQSLi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuR2V0RGF0YXNldFJlcXVlc3QaJC5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuRGF0YXNldCI72kEEbmFtZYLT5JMCLhIsL3YzL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZGF0YXNldHMvKn0SsgEKDExpc3REYXRhc2V0cxIwLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5MaXN0RGF0YXNldHNSZXF1ZXN0GjEuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkxpc3REYXRhc2V0c1Jlc3BvbnNlIj3aQQZwYXJlbnSC0+STAi4SLC92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2RhdGFzZXRzEs8BCg1EZWxldGVEYXRhc2V0EjEuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkRlbGV0ZURhdGFzZXRSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJsykEuChVnb29nbGUucHJvdG9idWYuRW1wdHkSFURlbGV0ZURhdGFzZXRNZXRhZGF0YdpBBG5hbWWC0+STAi4qLC92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2RhdGFzZXRzLyp9EvgBChdDcmVhdGVBZGFwdGl2ZU10RGF0YXNldBI7Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5DcmVhdGVBZGFwdGl2ZU10RGF0YXNldFJlcXVlc3QaLi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuQWRhcHRpdmVNdERhdGFzZXQicNpBGnBhcmVudCxhZGFwdGl2ZV9tdF9kYXRhc2V0gtPkkwJNOhNhZGFwdGl2ZV9tdF9kYXRhc2V0IjYvdjMve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9hZGFwdGl2ZU10RGF0YXNldHMStQEKF0RlbGV0ZUFkYXB0aXZlTXREYXRhc2V0EjsuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkRlbGV0ZUFkYXB0aXZlTXREYXRhc2V0UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJF2kEEbmFtZYLT5JMCOCo2L3YzL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWRhcHRpdmVNdERhdGFzZXRzLyp9EscBChRHZXRBZGFwdGl2ZU10RGF0YXNldBI4Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5HZXRBZGFwdGl2ZU10RGF0YXNldFJlcXVlc3QaLi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuQWRhcHRpdmVNdERhdGFzZXQiRdpBBG5hbWWC0+STAjgSNi92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FkYXB0aXZlTXREYXRhc2V0cy8qfRLaAQoWTGlzdEFkYXB0aXZlTXREYXRhc2V0cxI6Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5MaXN0QWRhcHRpdmVNdERhdGFzZXRzUmVxdWVzdBo7Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5MaXN0QWRhcHRpdmVNdERhdGFzZXRzUmVzcG9uc2UiR9pBBnBhcmVudILT5JMCOBI2L3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vYWRhcHRpdmVNdERhdGFzZXRzEt0BChNBZGFwdGl2ZU10VHJhbnNsYXRlEjcuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkFkYXB0aXZlTXRUcmFuc2xhdGVSZXF1ZXN0GjguZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkFkYXB0aXZlTXRUcmFuc2xhdGVSZXNwb25zZSJT2kEOcGFyZW50LGNvbnRlbnSC0+STAjw6ASoiNy92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9OmFkYXB0aXZlTXRUcmFuc2xhdGUS0AEKEUdldEFkYXB0aXZlTXRGaWxlEjUuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkdldEFkYXB0aXZlTXRGaWxlUmVxdWVzdBorLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5BZGFwdGl2ZU10RmlsZSJX2kEEbmFtZYLT5JMCShJIL3YzL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWRhcHRpdmVNdERhdGFzZXRzLyovYWRhcHRpdmVNdEZpbGVzLyp9EsEBChREZWxldGVBZGFwdGl2ZU10RmlsZRI4Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5EZWxldGVBZGFwdGl2ZU10RmlsZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiV9pBBG5hbWWC0+STAkoqSC92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FkYXB0aXZlTXREYXRhc2V0cy8qL2FkYXB0aXZlTXRGaWxlcy8qfRLuAQoUSW1wb3J0QWRhcHRpdmVNdEZpbGUSOC5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuSW1wb3J0QWRhcHRpdmVNdEZpbGVSZXF1ZXN0GjkuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkltcG9ydEFkYXB0aXZlTXRGaWxlUmVzcG9uc2UiYdpBBnBhcmVudILT5JMCUjoBKiJNL3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZGFwdGl2ZU10RGF0YXNldHMvKn06aW1wb3J0QWRhcHRpdmVNdEZpbGUS4wEKE0xpc3RBZGFwdGl2ZU10RmlsZXMSNy5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuTGlzdEFkYXB0aXZlTXRGaWxlc1JlcXVlc3QaOC5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuTGlzdEFkYXB0aXZlTXRGaWxlc1Jlc3BvbnNlIlnaQQZwYXJlbnSC0+STAkoSSC92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWRhcHRpdmVNdERhdGFzZXRzLyp9L2FkYXB0aXZlTXRGaWxlcxLXAgoXTGlzdEFkYXB0aXZlTXRTZW50ZW5jZXMSOy5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuTGlzdEFkYXB0aXZlTXRTZW50ZW5jZXNSZXF1ZXN0GjwuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkxpc3RBZGFwdGl2ZU10U2VudGVuY2VzUmVzcG9uc2UiwAHaQQZwYXJlbnSC0+STArABWk4STC92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWRhcHRpdmVNdERhdGFzZXRzLyp9L2FkYXB0aXZlTXRTZW50ZW5jZXMSXi92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWRhcHRpdmVNdERhdGFzZXRzLyovYWRhcHRpdmVNdEZpbGVzLyp9L2FkYXB0aXZlTXRTZW50ZW5jZXMS6AEKCkltcG9ydERhdGESLi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuSW1wb3J0RGF0YVJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIooBykErChVnb29nbGUucHJvdG9idWYuRW1wdHkSEkltcG9ydERhdGFNZXRhZGF0YdpBFGRhdGFzZXQsaW5wdXRfY29uZmlngtPkkwI/OgEqIjovdjMve2RhdGFzZXQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9kYXRhc2V0cy8qfTppbXBvcnREYXRhEukBCgpFeHBvcnREYXRhEi4uZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkV4cG9ydERhdGFSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKLAcpBKwoVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EhJFeHBvcnREYXRhTWV0YWRhdGHaQRVkYXRhc2V0LG91dHB1dF9jb25maWeC0+STAj86ASoiOi92My97ZGF0YXNldD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2RhdGFzZXRzLyp9OmV4cG9ydERhdGESvQEKDExpc3RFeGFtcGxlcxIwLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52My5MaXN0RXhhbXBsZXNSZXF1ZXN0GjEuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkxpc3RFeGFtcGxlc1Jlc3BvbnNlIkjaQQZwYXJlbnSC0+STAjkSNy92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovZGF0YXNldHMvKn0vZXhhbXBsZXMSxgEKC0NyZWF0ZU1vZGVsEi8uZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkNyZWF0ZU1vZGVsUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iZ8pBHAoFTW9kZWwSE0NyZWF0ZU1vZGVsTWV0YWRhdGHaQQxwYXJlbnQsbW9kZWyC0+STAjM6BW1vZGVsIiovdjMve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9tb2RlbHMSqgEKCkxpc3RNb2RlbHMSLi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuTGlzdE1vZGVsc1JlcXVlc3QaLy5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuTGlzdE1vZGVsc1Jlc3BvbnNlIjvaQQZwYXJlbnSC0+STAiwSKi92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L21vZGVscxKXAQoIR2V0TW9kZWwSLC5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjMuR2V0TW9kZWxSZXF1ZXN0GiIuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLk1vZGVsIjnaQQRuYW1lgtPkkwIsEiovdjMve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9tb2RlbHMvKn0SxwEKC0RlbGV0ZU1vZGVsEi8uZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzLkRlbGV0ZU1vZGVsUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iaMpBLAoVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EhNEZWxldGVNb2RlbE1ldGFkYXRh2kEEbmFtZYLT5JMCLCoqL3YzL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovbW9kZWxzLyp9Gn7KQRh0cmFuc2xhdGUuZ29vZ2xlYXBpcy5jb23SQWBodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtdHJhbnNsYXRpb25C2QEKHWNvbS5nb29nbGUuY2xvdWQudHJhbnNsYXRlLnYzQhdUcmFuc2xhdGlvblNlcnZpY2VQcm90b1ABWjtjbG91ZC5nb29nbGUuY29tL2dvL3RyYW5zbGF0ZS9hcGl2My90cmFuc2xhdGVwYjt0cmFuc2xhdGVwYvgBAaICBUNUUkwzqgIZR29vZ2xlLkNsb3VkLlRyYW5zbGF0ZS5WM8oCGUdvb2dsZVxDbG91ZFxUcmFuc2xhdGVcVjPqAhxHb29nbGU6OkNsb3VkOjpUcmFuc2xhdGU6OlYzUABQAVACYgZwcm90bzM", [file_google_cloud_translate_v3_adaptive_mt, file_google_cloud_translate_v3_automl_translation, file_google_cloud_translate_v3_common, file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Configures transliteration feature on top of translation.
 *
 * @generated from message google.cloud.translation.v3.TransliterationConfig
 */
export type TransliterationConfig = Message<"google.cloud.translation.v3.TransliterationConfig"> & {
  /**
   * If true, source text in romanized form can be translated to the target
   * language.
   *
   * @generated from field: bool enable_transliteration = 1;
   */
  enableTransliteration: boolean;
};

/**
 * Describes the message google.cloud.translation.v3.TransliterationConfig.
 * Use `create(TransliterationConfigSchema)` to create a new message.
 */
export const TransliterationConfigSchema: GenMessage<TransliterationConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 0);

/**
 * The request message for synchronous translation.
 *
 * @generated from message google.cloud.translation.v3.TranslateTextRequest
 */
export type TranslateTextRequest = Message<"google.cloud.translation.v3.TranslateTextRequest"> & {
  /**
   * Required. The content of the input in string format.
   * We recommend the total content be less than 30,000 codepoints. The max
   * length of this field is 1024. Use BatchTranslateText for larger text.
   *
   * @generated from field: repeated string contents = 1;
   */
  contents: string[];

  /**
   * Optional. The format of the source text, for example, "text/html",
   *  "text/plain". If left blank, the MIME type defaults to "text/html".
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;

  /**
   * Optional. The ISO-639 language code of the input text if
   * known, for example, "en-US" or "sr-Latn". Supported language codes are
   * listed in Language Support. If the source language isn't specified, the API
   * attempts to identify the source language automatically and returns the
   * source language within the response.
   *
   * @generated from field: string source_language_code = 4;
   */
  sourceLanguageCode: string;

  /**
   * Required. The ISO-639 language code to use for translation of the input
   * text, set to one of the language codes listed in Language Support.
   *
   * @generated from field: string target_language_code = 5;
   */
  targetLanguageCode: string;

  /**
   * Required. Project or location to make a call. Must refer to a caller's
   * project.
   *
   * Format: `projects/{project-number-or-id}` or
   * `projects/{project-number-or-id}/locations/{location-id}`.
   *
   * For global calls, use `projects/{project-number-or-id}/locations/global` or
   * `projects/{project-number-or-id}`.
   *
   * Non-global location is required for requests using AutoML models or
   * custom glossaries.
   *
   * Models and glossaries must be within the same region (have same
   * location-id), otherwise an INVALID_ARGUMENT (400) error is returned.
   *
   * @generated from field: string parent = 8;
   */
  parent: string;

  /**
   * Optional. The `model` type requested for this translation.
   *
   * The format depends on model type:
   *
   * - AutoML Translation models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}`
   *
   * - General (built-in) models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`,
   *
   * - Translation LLM models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/general/translation-llm`,
   *
   * For global (non-regionalized) requests, use `location-id` `global`.
   * For example,
   * `projects/{project-number-or-id}/locations/global/models/general/nmt`.
   *
   * If not provided, the default Google model (NMT) will be used
   *
   * @generated from field: string model = 6;
   */
  model: string;

  /**
   * Optional. Glossary to be applied. The glossary must be
   * within the same region (have the same location-id) as the model, otherwise
   * an INVALID_ARGUMENT (400) error is returned.
   *
   * @generated from field: google.cloud.translation.v3.TranslateTextGlossaryConfig glossary_config = 7;
   */
  glossaryConfig?: TranslateTextGlossaryConfig;

  /**
   * Optional. Transliteration to be applied.
   *
   * @generated from field: google.cloud.translation.v3.TransliterationConfig transliteration_config = 13;
   */
  transliterationConfig?: TransliterationConfig;

  /**
   * Optional. The labels with user-defined metadata for the request.
   *
   * Label keys and values can be no longer than 63 characters
   * (Unicode codepoints), can only contain lowercase letters, numeric
   * characters, underscores and dashes. International characters are allowed.
   * Label values are optional. Label keys must start with a letter.
   *
   * See https://cloud.google.com/translate/docs/advanced/labels for more
   * information.
   *
   * @generated from field: map<string, string> labels = 10;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.translation.v3.TranslateTextRequest.
 * Use `create(TranslateTextRequestSchema)` to create a new message.
 */
export const TranslateTextRequestSchema: GenMessage<TranslateTextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 1);

/**
 * @generated from message google.cloud.translation.v3.TranslateTextResponse
 */
export type TranslateTextResponse = Message<"google.cloud.translation.v3.TranslateTextResponse"> & {
  /**
   * Text translation responses with no glossary applied.
   * This field has the same length as
   * [`contents`][google.cloud.translation.v3.TranslateTextRequest.contents].
   *
   * @generated from field: repeated google.cloud.translation.v3.Translation translations = 1;
   */
  translations: Translation[];

  /**
   * Text translation responses if a glossary is provided in the request.
   * This can be the same as
   * [`translations`][google.cloud.translation.v3.TranslateTextResponse.translations]
   * if no terms apply. This field has the same length as
   * [`contents`][google.cloud.translation.v3.TranslateTextRequest.contents].
   *
   * @generated from field: repeated google.cloud.translation.v3.Translation glossary_translations = 3;
   */
  glossaryTranslations: Translation[];
};

/**
 * Describes the message google.cloud.translation.v3.TranslateTextResponse.
 * Use `create(TranslateTextResponseSchema)` to create a new message.
 */
export const TranslateTextResponseSchema: GenMessage<TranslateTextResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 2);

/**
 * A single translation response.
 *
 * @generated from message google.cloud.translation.v3.Translation
 */
export type Translation = Message<"google.cloud.translation.v3.Translation"> & {
  /**
   * Text translated into the target language.
   * If an error occurs during translation, this field might be excluded from
   * the response.
   *
   * @generated from field: string translated_text = 1;
   */
  translatedText: string;

  /**
   * Only present when `model` is present in the request.
   * `model` here is normalized to have project number.
   *
   * For example:
   * If the `model` requested in TranslationTextRequest is
   * `projects/{project-id}/locations/{location-id}/models/general/nmt` then
   * `model` here would be normalized to
   * `projects/{project-number}/locations/{location-id}/models/general/nmt`.
   *
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * The ISO-639 language code of source text in the initial request, detected
   * automatically, if no source language was passed within the initial
   * request. If the source language was passed, auto-detection of the language
   * does not occur and this field is empty.
   *
   * @generated from field: string detected_language_code = 4;
   */
  detectedLanguageCode: string;

  /**
   * The `glossary_config` used for this translation.
   *
   * @generated from field: google.cloud.translation.v3.TranslateTextGlossaryConfig glossary_config = 3;
   */
  glossaryConfig?: TranslateTextGlossaryConfig;
};

/**
 * Describes the message google.cloud.translation.v3.Translation.
 * Use `create(TranslationSchema)` to create a new message.
 */
export const TranslationSchema: GenMessage<Translation> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 3);

/**
 * The request message for synchronous romanization.
 *
 * @generated from message google.cloud.translation.v3.RomanizeTextRequest
 */
export type RomanizeTextRequest = Message<"google.cloud.translation.v3.RomanizeTextRequest"> & {
  /**
   * Required. Project or location to make a call. Must refer to a caller's
   * project.
   *
   * Format: `projects/{project-number-or-id}/locations/{location-id}` or
   * `projects/{project-number-or-id}`.
   *
   * For global calls, use `projects/{project-number-or-id}/locations/global` or
   * `projects/{project-number-or-id}`.
   *
   * @generated from field: string parent = 4;
   */
  parent: string;

  /**
   * Required. The content of the input in string format.
   *
   * @generated from field: repeated string contents = 1;
   */
  contents: string[];

  /**
   * Optional. The ISO-639 language code of the input text if
   * known, for example, "hi" or "zh". If the source language isn't specified,
   * the API attempts to identify the source language automatically and returns
   * the source language for each content in the response.
   *
   * @generated from field: string source_language_code = 2;
   */
  sourceLanguageCode: string;
};

/**
 * Describes the message google.cloud.translation.v3.RomanizeTextRequest.
 * Use `create(RomanizeTextRequestSchema)` to create a new message.
 */
export const RomanizeTextRequestSchema: GenMessage<RomanizeTextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 4);

/**
 * A single romanization response.
 *
 * @generated from message google.cloud.translation.v3.Romanization
 */
export type Romanization = Message<"google.cloud.translation.v3.Romanization"> & {
  /**
   * Romanized text.
   * If an error occurs during romanization, this field might be excluded from
   * the response.
   *
   * @generated from field: string romanized_text = 1;
   */
  romanizedText: string;

  /**
   * The ISO-639 language code of source text in the initial request, detected
   * automatically, if no source language was passed within the initial
   * request. If the source language was passed, auto-detection of the language
   * does not occur and this field is empty.
   *
   * @generated from field: string detected_language_code = 2;
   */
  detectedLanguageCode: string;
};

/**
 * Describes the message google.cloud.translation.v3.Romanization.
 * Use `create(RomanizationSchema)` to create a new message.
 */
export const RomanizationSchema: GenMessage<Romanization> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 5);

/**
 * The response message for synchronous romanization.
 *
 * @generated from message google.cloud.translation.v3.RomanizeTextResponse
 */
export type RomanizeTextResponse = Message<"google.cloud.translation.v3.RomanizeTextResponse"> & {
  /**
   * Text romanization responses.
   * This field has the same length as
   * [`contents`][google.cloud.translation.v3.RomanizeTextRequest.contents].
   *
   * @generated from field: repeated google.cloud.translation.v3.Romanization romanizations = 1;
   */
  romanizations: Romanization[];
};

/**
 * Describes the message google.cloud.translation.v3.RomanizeTextResponse.
 * Use `create(RomanizeTextResponseSchema)` to create a new message.
 */
export const RomanizeTextResponseSchema: GenMessage<RomanizeTextResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 6);

/**
 * The request message for language detection.
 *
 * @generated from message google.cloud.translation.v3.DetectLanguageRequest
 */
export type DetectLanguageRequest = Message<"google.cloud.translation.v3.DetectLanguageRequest"> & {
  /**
   * Required. Project or location to make a call. Must refer to a caller's
   * project.
   *
   * Format: `projects/{project-number-or-id}/locations/{location-id}` or
   * `projects/{project-number-or-id}`.
   *
   * For global calls, use `projects/{project-number-or-id}/locations/global` or
   * `projects/{project-number-or-id}`.
   *
   * Only models within the same region (has same location-id) can be used.
   * Otherwise an INVALID_ARGUMENT (400) error is returned.
   *
   * @generated from field: string parent = 5;
   */
  parent: string;

  /**
   * Optional. The language detection model to be used.
   *
   * Format:
   * `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/{model-id}`
   *
   * Only one language detection model is currently supported:
   * `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/default`.
   *
   * If not specified, the default model is used.
   *
   * @generated from field: string model = 4;
   */
  model: string;

  /**
   * Required. The source of the document from which to detect the language.
   *
   * @generated from oneof google.cloud.translation.v3.DetectLanguageRequest.source
   */
  source: {
    /**
     * The content of the input stored as a string.
     *
     * @generated from field: string content = 1;
     */
    value: string;
    case: "content";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. The format of the source text, for example, "text/html",
   * "text/plain". If left blank, the MIME type defaults to "text/html".
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;

  /**
   * Optional. The labels with user-defined metadata for the request.
   *
   * Label keys and values can be no longer than 63 characters
   * (Unicode codepoints), can only contain lowercase letters, numeric
   * characters, underscores and dashes. International characters are allowed.
   * Label values are optional. Label keys must start with a letter.
   *
   * See https://cloud.google.com/translate/docs/advanced/labels for more
   * information.
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.translation.v3.DetectLanguageRequest.
 * Use `create(DetectLanguageRequestSchema)` to create a new message.
 */
export const DetectLanguageRequestSchema: GenMessage<DetectLanguageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 7);

/**
 * The response message for language detection.
 *
 * @generated from message google.cloud.translation.v3.DetectedLanguage
 */
export type DetectedLanguage = Message<"google.cloud.translation.v3.DetectedLanguage"> & {
  /**
   * The ISO-639 language code of the source content in the request, detected
   * automatically.
   *
   * @generated from field: string language_code = 1;
   */
  languageCode: string;

  /**
   * The confidence of the detection result for this language.
   *
   * @generated from field: float confidence = 2;
   */
  confidence: number;
};

/**
 * Describes the message google.cloud.translation.v3.DetectedLanguage.
 * Use `create(DetectedLanguageSchema)` to create a new message.
 */
export const DetectedLanguageSchema: GenMessage<DetectedLanguage> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 8);

/**
 * The response message for language detection.
 *
 * @generated from message google.cloud.translation.v3.DetectLanguageResponse
 */
export type DetectLanguageResponse = Message<"google.cloud.translation.v3.DetectLanguageResponse"> & {
  /**
   * The most probable language detected by the Translation API. For each
   * request, the Translation API will always return only one result.
   *
   * @generated from field: repeated google.cloud.translation.v3.DetectedLanguage languages = 1;
   */
  languages: DetectedLanguage[];
};

/**
 * Describes the message google.cloud.translation.v3.DetectLanguageResponse.
 * Use `create(DetectLanguageResponseSchema)` to create a new message.
 */
export const DetectLanguageResponseSchema: GenMessage<DetectLanguageResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 9);

/**
 * The request message for discovering supported languages.
 *
 * @generated from message google.cloud.translation.v3.GetSupportedLanguagesRequest
 */
export type GetSupportedLanguagesRequest = Message<"google.cloud.translation.v3.GetSupportedLanguagesRequest"> & {
  /**
   * Required. Project or location to make a call. Must refer to a caller's
   * project.
   *
   * Format: `projects/{project-number-or-id}` or
   * `projects/{project-number-or-id}/locations/{location-id}`.
   *
   * For global calls, use `projects/{project-number-or-id}/locations/global` or
   * `projects/{project-number-or-id}`.
   *
   * Non-global location is required for AutoML models.
   *
   * Only models within the same region (have same location-id) can be used,
   * otherwise an INVALID_ARGUMENT (400) error is returned.
   *
   * @generated from field: string parent = 3;
   */
  parent: string;

  /**
   * Optional. The language to use to return localized, human readable names
   * of supported languages. If missing, then display names are not returned
   * in a response.
   *
   * @generated from field: string display_language_code = 1;
   */
  displayLanguageCode: string;

  /**
   * Optional. Get supported languages of this model.
   *
   * The format depends on model type:
   *
   * - AutoML Translation models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}`
   *
   * - General (built-in) models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`,
   *
   *
   * Returns languages supported by the specified model.
   * If missing, we get supported languages of Google general NMT model.
   *
   * @generated from field: string model = 2;
   */
  model: string;
};

/**
 * Describes the message google.cloud.translation.v3.GetSupportedLanguagesRequest.
 * Use `create(GetSupportedLanguagesRequestSchema)` to create a new message.
 */
export const GetSupportedLanguagesRequestSchema: GenMessage<GetSupportedLanguagesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 10);

/**
 * The response message for discovering supported languages.
 *
 * @generated from message google.cloud.translation.v3.SupportedLanguages
 */
export type SupportedLanguages = Message<"google.cloud.translation.v3.SupportedLanguages"> & {
  /**
   * A list of supported language responses. This list contains an entry
   * for each language the Translation API supports.
   *
   * @generated from field: repeated google.cloud.translation.v3.SupportedLanguage languages = 1;
   */
  languages: SupportedLanguage[];
};

/**
 * Describes the message google.cloud.translation.v3.SupportedLanguages.
 * Use `create(SupportedLanguagesSchema)` to create a new message.
 */
export const SupportedLanguagesSchema: GenMessage<SupportedLanguages> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 11);

/**
 * A single supported language response corresponds to information related
 * to one supported language.
 *
 * @generated from message google.cloud.translation.v3.SupportedLanguage
 */
export type SupportedLanguage = Message<"google.cloud.translation.v3.SupportedLanguage"> & {
  /**
   * Supported language code, generally consisting of its ISO 639-1
   * identifier, for example, 'en', 'ja'. In certain cases, ISO-639 codes
   * including language and region identifiers are returned (for example,
   * 'zh-TW' and 'zh-CN').
   *
   * @generated from field: string language_code = 1;
   */
  languageCode: string;

  /**
   * Human-readable name of the language localized in the display language
   * specified in the request.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Can be used as a source language.
   *
   * @generated from field: bool support_source = 3;
   */
  supportSource: boolean;

  /**
   * Can be used as a target language.
   *
   * @generated from field: bool support_target = 4;
   */
  supportTarget: boolean;
};

/**
 * Describes the message google.cloud.translation.v3.SupportedLanguage.
 * Use `create(SupportedLanguageSchema)` to create a new message.
 */
export const SupportedLanguageSchema: GenMessage<SupportedLanguage> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 12);

/**
 * The Google Cloud Storage location for the input content.
 *
 * @generated from message google.cloud.translation.v3.GcsSource
 */
export type GcsSource = Message<"google.cloud.translation.v3.GcsSource"> & {
  /**
   * Required. Source data URI. For example, `gs://my_bucket/my_object`.
   *
   * @generated from field: string input_uri = 1;
   */
  inputUri: string;
};

/**
 * Describes the message google.cloud.translation.v3.GcsSource.
 * Use `create(GcsSourceSchema)` to create a new message.
 */
export const GcsSourceSchema: GenMessage<GcsSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 13);

/**
 * Input configuration for BatchTranslateText request.
 *
 * @generated from message google.cloud.translation.v3.InputConfig
 */
export type InputConfig = Message<"google.cloud.translation.v3.InputConfig"> & {
  /**
   * Optional. Can be "text/plain" or "text/html".
   * For `.tsv`, "text/html" is used if mime_type is missing.
   * For `.html`, this field must be "text/html" or empty.
   * For `.txt`, this field must be "text/plain" or empty.
   *
   * @generated from field: string mime_type = 1;
   */
  mimeType: string;

  /**
   * Required. Specify the input.
   *
   * @generated from oneof google.cloud.translation.v3.InputConfig.source
   */
  source: {
    /**
     * Required. Google Cloud Storage location for the source input.
     * This can be a single file (for example,
     * `gs://translation-test/input.tsv`) or a wildcard (for example,
     * `gs://translation-test/*`). If a file extension is `.tsv`, it can
     * contain either one or two columns. The first column (optional) is the id
     * of the text request. If the first column is missing, we use the row
     * number (0-based) from the input file as the ID in the output file. The
     * second column is the actual text to be
     *  translated. We recommend each row be <= 10K Unicode codepoints,
     * otherwise an error might be returned.
     * Note that the input tsv must be RFC 4180 compliant.
     *
     * You could use https://github.com/Clever/csvlint to check potential
     * formatting errors in your tsv file.
     * csvlint --delimiter='\t' your_input_file.tsv
     *
     * The other supported file extensions are `.txt` or `.html`, which is
     * treated as a single large chunk of text.
     *
     * @generated from field: google.cloud.translation.v3.GcsSource gcs_source = 2;
     */
    value: GcsSource;
    case: "gcsSource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.translation.v3.InputConfig.
 * Use `create(InputConfigSchema)` to create a new message.
 */
export const InputConfigSchema: GenMessage<InputConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 14);

/**
 * The Google Cloud Storage location for the output content.
 *
 * @generated from message google.cloud.translation.v3.GcsDestination
 */
export type GcsDestination = Message<"google.cloud.translation.v3.GcsDestination"> & {
  /**
   * Required. The bucket used in 'output_uri_prefix' must exist and there must
   * be no files under 'output_uri_prefix'. 'output_uri_prefix' must end with
   * "/" and start with "gs://". One 'output_uri_prefix' can only be used by one
   * batch translation job at a time. Otherwise an INVALID_ARGUMENT (400) error
   * is returned.
   *
   * @generated from field: string output_uri_prefix = 1;
   */
  outputUriPrefix: string;
};

/**
 * Describes the message google.cloud.translation.v3.GcsDestination.
 * Use `create(GcsDestinationSchema)` to create a new message.
 */
export const GcsDestinationSchema: GenMessage<GcsDestination> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 15);

/**
 * Output configuration for BatchTranslateText request.
 *
 * @generated from message google.cloud.translation.v3.OutputConfig
 */
export type OutputConfig = Message<"google.cloud.translation.v3.OutputConfig"> & {
  /**
   * Required. The destination of output.
   *
   * @generated from oneof google.cloud.translation.v3.OutputConfig.destination
   */
  destination: {
    /**
     * Google Cloud Storage destination for output content.
     * For every single input file (for example, gs://a/b/c.[extension]), we
     * generate at most 2 * n output files. (n is the # of target_language_codes
     * in the BatchTranslateTextRequest).
     *
     * Output files (tsv) generated are compliant with RFC 4180 except that
     * record delimiters are '\n' instead of '\r\n'. We don't provide any way to
     * change record delimiters.
     *
     * While the input files are being processed, we write/update an index file
     * 'index.csv'  under 'output_uri_prefix' (for example,
     * gs://translation-test/index.csv) The index file is generated/updated as
     * new files are being translated. The format is:
     *
     * input_file,target_language_code,translations_file,errors_file,
     * glossary_translations_file,glossary_errors_file
     *
     * input_file is one file we matched using gcs_source.input_uri.
     * target_language_code is provided in the request.
     * translations_file contains the translations. (details provided below)
     * errors_file contains the errors during processing of the file. (details
     * below). Both translations_file and errors_file could be empty
     * strings if we have no content to output.
     * glossary_translations_file and glossary_errors_file are always empty
     * strings if the input_file is tsv. They could also be empty if we have no
     * content to output.
     *
     * Once a row is present in index.csv, the input/output matching never
     * changes. Callers should also expect all the content in input_file are
     * processed and ready to be consumed (that is, no partial output file is
     * written).
     *
     * Since index.csv will be keeping updated during the process, please make
     * sure there is no custom retention policy applied on the output bucket
     * that may avoid file updating.
     * (https://cloud.google.com/storage/docs/bucket-lock#retention-policy)
     *
     * The format of translations_file (for target language code 'trg') is:
     * `gs://translation_test/a_b_c_'trg'_translations.[extension]`
     *
     * If the input file extension is tsv, the output has the following
     * columns:
     * Column 1: ID of the request provided in the input, if it's not
     * provided in the input, then the input row number is used (0-based).
     * Column 2: source sentence.
     * Column 3: translation without applying a glossary. Empty string if there
     * is an error.
     * Column 4 (only present if a glossary is provided in the request):
     * translation after applying the glossary. Empty string if there is an
     * error applying the glossary. Could be same string as column 3 if there is
     * no glossary applied.
     *
     * If input file extension is a txt or html, the translation is directly
     * written to the output file. If glossary is requested, a separate
     * glossary_translations_file has format of
     * `gs://translation_test/a_b_c_'trg'_glossary_translations.[extension]`
     *
     * The format of errors file (for target language code 'trg') is:
     * `gs://translation_test/a_b_c_'trg'_errors.[extension]`
     *
     * If the input file extension is tsv, errors_file contains the following:
     * Column 1: ID of the request provided in the input, if it's not
     * provided in the input, then the input row number is used (0-based).
     * Column 2: source sentence.
     * Column 3: Error detail for the translation. Could be empty.
     * Column 4 (only present if a glossary is provided in the request):
     * Error when applying the glossary.
     *
     * If the input file extension is txt or html, glossary_error_file will be
     * generated that contains error details. glossary_error_file has format of
     * `gs://translation_test/a_b_c_'trg'_glossary_errors.[extension]`
     *
     * @generated from field: google.cloud.translation.v3.GcsDestination gcs_destination = 1;
     */
    value: GcsDestination;
    case: "gcsDestination";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.translation.v3.OutputConfig.
 * Use `create(OutputConfigSchema)` to create a new message.
 */
export const OutputConfigSchema: GenMessage<OutputConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 16);

/**
 * A document translation request input config.
 *
 * @generated from message google.cloud.translation.v3.DocumentInputConfig
 */
export type DocumentInputConfig = Message<"google.cloud.translation.v3.DocumentInputConfig"> & {
  /**
   * Specifies the source for the document's content.
   * The input file size should be <= 20MB for
   * - application/vnd.openxmlformats-officedocument.wordprocessingml.document
   * - application/vnd.openxmlformats-officedocument.presentationml.presentation
   * - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
   * The input file size should be <= 20MB and the maximum page limit is 20 for
   * - application/pdf
   *
   * @generated from oneof google.cloud.translation.v3.DocumentInputConfig.source
   */
  source: {
    /**
     * Document's content represented as a stream of bytes.
     *
     * @generated from field: bytes content = 1;
     */
    value: Uint8Array;
    case: "content";
  } | {
    /**
     * Google Cloud Storage location. This must be a single file.
     * For example: gs://example_bucket/example_file.pdf
     *
     * @generated from field: google.cloud.translation.v3.GcsSource gcs_source = 2;
     */
    value: GcsSource;
    case: "gcsSource";
  } | { case: undefined; value?: undefined };

  /**
   * Specifies the input document's mime_type.
   *
   * If not specified it will be determined using the file extension for
   * gcs_source provided files. For a file provided through bytes content the
   * mime_type must be provided.
   * Currently supported mime types are:
   * - application/pdf
   * - application/vnd.openxmlformats-officedocument.wordprocessingml.document
   * - application/vnd.openxmlformats-officedocument.presentationml.presentation
   * - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
   *
   * @generated from field: string mime_type = 4;
   */
  mimeType: string;
};

/**
 * Describes the message google.cloud.translation.v3.DocumentInputConfig.
 * Use `create(DocumentInputConfigSchema)` to create a new message.
 */
export const DocumentInputConfigSchema: GenMessage<DocumentInputConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 17);

/**
 * A document translation request output config.
 *
 * @generated from message google.cloud.translation.v3.DocumentOutputConfig
 */
export type DocumentOutputConfig = Message<"google.cloud.translation.v3.DocumentOutputConfig"> & {
  /**
   * A URI destination for the translated document.
   * It is optional to provide a destination. If provided the results from
   * TranslateDocument will be stored in the destination.
   * Whether a destination is provided or not, the translated documents will be
   * returned within TranslateDocumentResponse.document_translation and
   * TranslateDocumentResponse.glossary_document_translation.
   *
   * @generated from oneof google.cloud.translation.v3.DocumentOutputConfig.destination
   */
  destination: {
    /**
     * Optional. Google Cloud Storage destination for the translation output,
     * e.g., `gs://my_bucket/my_directory/`.
     *
     * The destination directory provided does not have to be empty, but the
     * bucket must exist. If a file with the same name as the output file
     * already exists in the destination an error will be returned.
     *
     * For a DocumentInputConfig.contents provided document, the output file
     * will have the name "output_[trg]_translations.[ext]", where
     * - [trg] corresponds to the translated file's language code,
     * - [ext] corresponds to the translated file's extension according to its
     * mime type.
     *
     *
     * For a DocumentInputConfig.gcs_uri provided document, the output file will
     * have a name according to its URI. For example: an input file with URI:
     * `gs://a/b/c.[extension]` stored in a gcs_destination bucket with name
     * "my_bucket" will have an output URI:
     * `gs://my_bucket/a_b_c_[trg]_translations.[ext]`, where
     * - [trg] corresponds to the translated file's language code,
     * - [ext] corresponds to the translated file's extension according to its
     * mime type.
     *
     *
     * If the document was directly provided through the request, then the
     * output document will have the format:
     * `gs://my_bucket/translated_document_[trg]_translations.[ext]`, where
     * - [trg] corresponds to the translated file's language code,
     * - [ext] corresponds to the translated file's extension according to its
     * mime type.
     *
     * If a glossary was provided, then the output URI for the glossary
     * translation will be equal to the default output URI but have
     * `glossary_translations` instead of `translations`. For the previous
     * example, its glossary URI would be:
     * `gs://my_bucket/a_b_c_[trg]_glossary_translations.[ext]`.
     *
     * Thus the max number of output files will be 2 (Translated document,
     * Glossary translated document).
     *
     * Callers should expect no partial outputs. If there is any error during
     * document translation, no output will be stored in the Cloud Storage
     * bucket.
     *
     * @generated from field: google.cloud.translation.v3.GcsDestination gcs_destination = 1;
     */
    value: GcsDestination;
    case: "gcsDestination";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. Specifies the translated document's mime_type.
   * If not specified, the translated file's mime type will be the same as the
   * input file's mime type.
   * Currently only support the output mime type to be the same as input mime
   * type.
   * - application/pdf
   * - application/vnd.openxmlformats-officedocument.wordprocessingml.document
   * - application/vnd.openxmlformats-officedocument.presentationml.presentation
   * - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;
};

/**
 * Describes the message google.cloud.translation.v3.DocumentOutputConfig.
 * Use `create(DocumentOutputConfigSchema)` to create a new message.
 */
export const DocumentOutputConfigSchema: GenMessage<DocumentOutputConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 18);

/**
 * A document translation request.
 *
 * @generated from message google.cloud.translation.v3.TranslateDocumentRequest
 */
export type TranslateDocumentRequest = Message<"google.cloud.translation.v3.TranslateDocumentRequest"> & {
  /**
   * Required. Location to make a regional call.
   *
   * Format: `projects/{project-number-or-id}/locations/{location-id}`.
   *
   * For global calls, use `projects/{project-number-or-id}/locations/global` or
   * `projects/{project-number-or-id}`.
   *
   * Non-global location is required for requests using AutoML models or custom
   * glossaries.
   *
   * Models and glossaries must be within the same region (have the same
   * location-id), otherwise an INVALID_ARGUMENT (400) error is returned.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The ISO-639 language code of the input document if known, for
   * example, "en-US" or "sr-Latn". Supported language codes are listed in
   * Language Support. If the source language isn't specified, the API attempts
   * to identify the source language automatically and returns the source
   * language within the response. Source language must be specified if the
   * request contains a glossary or a custom model.
   *
   * @generated from field: string source_language_code = 2;
   */
  sourceLanguageCode: string;

  /**
   * Required. The ISO-639 language code to use for translation of the input
   * document, set to one of the language codes listed in Language Support.
   *
   * @generated from field: string target_language_code = 3;
   */
  targetLanguageCode: string;

  /**
   * Required. Input configurations.
   *
   * @generated from field: google.cloud.translation.v3.DocumentInputConfig document_input_config = 4;
   */
  documentInputConfig?: DocumentInputConfig;

  /**
   * Optional. Output configurations.
   * Defines if the output file should be stored within Cloud Storage as well
   * as the desired output format. If not provided the translated file will
   * only be returned through a byte-stream and its output mime type will be
   * the same as the input file's mime type.
   *
   * @generated from field: google.cloud.translation.v3.DocumentOutputConfig document_output_config = 5;
   */
  documentOutputConfig?: DocumentOutputConfig;

  /**
   * Optional. The `model` type requested for this translation.
   *
   * The format depends on model type:
   *
   * - AutoML Translation models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}`
   *
   * - General (built-in) models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`,
   *
   *
   * If not provided, the default Google model (NMT) will be used for
   * translation.
   *
   * @generated from field: string model = 6;
   */
  model: string;

  /**
   * Optional. Glossary to be applied. The glossary must be within the same
   * region (have the same location-id) as the model, otherwise an
   * INVALID_ARGUMENT (400) error is returned.
   *
   * @generated from field: google.cloud.translation.v3.TranslateTextGlossaryConfig glossary_config = 7;
   */
  glossaryConfig?: TranslateTextGlossaryConfig;

  /**
   * Optional. The labels with user-defined metadata for the request.
   *
   * Label keys and values can be no longer than 63 characters (Unicode
   * codepoints), can only contain lowercase letters, numeric characters,
   * underscores and dashes. International characters are allowed. Label values
   * are optional. Label keys must start with a letter.
   *
   * See https://cloud.google.com/translate/docs/advanced/labels for more
   * information.
   *
   * @generated from field: map<string, string> labels = 8;
   */
  labels: { [key: string]: string };

  /**
   * Optional. This flag is to support user customized attribution.
   * If not provided, the default is `Machine Translated by Google`.
   * Customized attribution should follow rules in
   * https://cloud.google.com/translate/attribution#attribution_and_logos
   *
   * @generated from field: string customized_attribution = 10;
   */
  customizedAttribution: string;

  /**
   * Optional. is_translate_native_pdf_only field for external customers.
   * If true, the page limit of online native pdf translation is 300 and only
   * native pdf pages will be translated.
   *
   * @generated from field: bool is_translate_native_pdf_only = 11;
   */
  isTranslateNativePdfOnly: boolean;

  /**
   * Optional. If true, use the text removal server to remove the shadow text on
   * background image for native pdf translation.
   * Shadow removal feature can only be enabled when
   * is_translate_native_pdf_only: false && pdf_native_only: false
   *
   * @generated from field: bool enable_shadow_removal_native_pdf = 12;
   */
  enableShadowRemovalNativePdf: boolean;

  /**
   * Optional. If true, enable auto rotation correction in DVS.
   *
   * @generated from field: bool enable_rotation_correction = 13;
   */
  enableRotationCorrection: boolean;
};

/**
 * Describes the message google.cloud.translation.v3.TranslateDocumentRequest.
 * Use `create(TranslateDocumentRequestSchema)` to create a new message.
 */
export const TranslateDocumentRequestSchema: GenMessage<TranslateDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 19);

/**
 * A translated document message.
 *
 * @generated from message google.cloud.translation.v3.DocumentTranslation
 */
export type DocumentTranslation = Message<"google.cloud.translation.v3.DocumentTranslation"> & {
  /**
   * The array of translated documents. It is expected to be size 1 for now. We
   * may produce multiple translated documents in the future for other type of
   * file formats.
   *
   * @generated from field: repeated bytes byte_stream_outputs = 1;
   */
  byteStreamOutputs: Uint8Array[];

  /**
   * The translated document's mime type.
   *
   * @generated from field: string mime_type = 2;
   */
  mimeType: string;

  /**
   * The detected language for the input document.
   * If the user did not provide the source language for the input document,
   * this field will have the language code automatically detected. If the
   * source language was passed, auto-detection of the language does not occur
   * and this field is empty.
   *
   * @generated from field: string detected_language_code = 3;
   */
  detectedLanguageCode: string;
};

/**
 * Describes the message google.cloud.translation.v3.DocumentTranslation.
 * Use `create(DocumentTranslationSchema)` to create a new message.
 */
export const DocumentTranslationSchema: GenMessage<DocumentTranslation> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 20);

/**
 * A translated document response message.
 *
 * @generated from message google.cloud.translation.v3.TranslateDocumentResponse
 */
export type TranslateDocumentResponse = Message<"google.cloud.translation.v3.TranslateDocumentResponse"> & {
  /**
   * Translated document.
   *
   * @generated from field: google.cloud.translation.v3.DocumentTranslation document_translation = 1;
   */
  documentTranslation?: DocumentTranslation;

  /**
   * The document's translation output if a glossary is provided in the request.
   * This can be the same as [TranslateDocumentResponse.document_translation]
   * if no glossary terms apply.
   *
   * @generated from field: google.cloud.translation.v3.DocumentTranslation glossary_document_translation = 2;
   */
  glossaryDocumentTranslation?: DocumentTranslation;

  /**
   * Only present when 'model' is present in the request.
   * 'model' is normalized to have a project number.
   *
   * For example:
   * If the 'model' field in TranslateDocumentRequest is:
   * `projects/{project-id}/locations/{location-id}/models/general/nmt` then
   * `model` here would be normalized to
   * `projects/{project-number}/locations/{location-id}/models/general/nmt`.
   *
   * @generated from field: string model = 3;
   */
  model: string;

  /**
   * The `glossary_config` used for this translation.
   *
   * @generated from field: google.cloud.translation.v3.TranslateTextGlossaryConfig glossary_config = 4;
   */
  glossaryConfig?: TranslateTextGlossaryConfig;
};

/**
 * Describes the message google.cloud.translation.v3.TranslateDocumentResponse.
 * Use `create(TranslateDocumentResponseSchema)` to create a new message.
 */
export const TranslateDocumentResponseSchema: GenMessage<TranslateDocumentResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 21);

/**
 * The batch translation request.
 *
 * @generated from message google.cloud.translation.v3.BatchTranslateTextRequest
 */
export type BatchTranslateTextRequest = Message<"google.cloud.translation.v3.BatchTranslateTextRequest"> & {
  /**
   * Required. Location to make a call. Must refer to a caller's project.
   *
   * Format: `projects/{project-number-or-id}/locations/{location-id}`.
   *
   * The `global` location is not supported for batch translation.
   *
   * Only AutoML Translation models or glossaries within the same region (have
   * the same location-id) can be used, otherwise an INVALID_ARGUMENT (400)
   * error is returned.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Source language code.
   *
   * @generated from field: string source_language_code = 2;
   */
  sourceLanguageCode: string;

  /**
   * Required. Specify up to 10 language codes here.
   *
   * @generated from field: repeated string target_language_codes = 3;
   */
  targetLanguageCodes: string[];

  /**
   * Optional. The models to use for translation. Map's key is target language
   * code. Map's value is model name. Value can be a built-in general model,
   * or an AutoML Translation model.
   *
   * The value format depends on model type:
   *
   * - AutoML Translation models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}`
   *
   * - General (built-in) models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`,
   *
   *
   * If the map is empty or a specific model is
   * not requested for a language pair, then default google model (nmt) is used.
   *
   * @generated from field: map<string, string> models = 4;
   */
  models: { [key: string]: string };

  /**
   * Required. Input configurations.
   * The total number of files matched should be <= 100.
   * The total content size should be <= 100M Unicode codepoints.
   * The files must use UTF-8 encoding.
   *
   * @generated from field: repeated google.cloud.translation.v3.InputConfig input_configs = 5;
   */
  inputConfigs: InputConfig[];

  /**
   * Required. Output configuration.
   * If 2 input configs match to the same file (that is, same input path),
   * we don't generate output for duplicate inputs.
   *
   * @generated from field: google.cloud.translation.v3.OutputConfig output_config = 6;
   */
  outputConfig?: OutputConfig;

  /**
   * Optional. Glossaries to be applied for translation.
   * It's keyed by target language code.
   *
   * @generated from field: map<string, google.cloud.translation.v3.TranslateTextGlossaryConfig> glossaries = 7;
   */
  glossaries: { [key: string]: TranslateTextGlossaryConfig };

  /**
   * Optional. The labels with user-defined metadata for the request.
   *
   * Label keys and values can be no longer than 63 characters
   * (Unicode codepoints), can only contain lowercase letters, numeric
   * characters, underscores and dashes. International characters are allowed.
   * Label values are optional. Label keys must start with a letter.
   *
   * See https://cloud.google.com/translate/docs/advanced/labels for more
   * information.
   *
   * @generated from field: map<string, string> labels = 9;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.translation.v3.BatchTranslateTextRequest.
 * Use `create(BatchTranslateTextRequestSchema)` to create a new message.
 */
export const BatchTranslateTextRequestSchema: GenMessage<BatchTranslateTextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 22);

/**
 * State metadata for the batch translation operation.
 *
 * @generated from message google.cloud.translation.v3.BatchTranslateMetadata
 */
export type BatchTranslateMetadata = Message<"google.cloud.translation.v3.BatchTranslateMetadata"> & {
  /**
   * The state of the operation.
   *
   * @generated from field: google.cloud.translation.v3.BatchTranslateMetadata.State state = 1;
   */
  state: BatchTranslateMetadata_State;

  /**
   * Number of successfully translated characters so far (Unicode codepoints).
   *
   * @generated from field: int64 translated_characters = 2;
   */
  translatedCharacters: bigint;

  /**
   * Number of characters that have failed to process so far (Unicode
   * codepoints).
   *
   * @generated from field: int64 failed_characters = 3;
   */
  failedCharacters: bigint;

  /**
   * Total number of characters (Unicode codepoints).
   * This is the total number of codepoints from input files times the number of
   * target languages and appears here shortly after the call is submitted.
   *
   * @generated from field: int64 total_characters = 4;
   */
  totalCharacters: bigint;

  /**
   * Time when the operation was submitted.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 5;
   */
  submitTime?: Timestamp;
};

/**
 * Describes the message google.cloud.translation.v3.BatchTranslateMetadata.
 * Use `create(BatchTranslateMetadataSchema)` to create a new message.
 */
export const BatchTranslateMetadataSchema: GenMessage<BatchTranslateMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 23);

/**
 * State of the job.
 *
 * @generated from enum google.cloud.translation.v3.BatchTranslateMetadata.State
 */
export enum BatchTranslateMetadata_State {
  /**
   * Invalid.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Request is being processed.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The batch is processed, and at least one item was successfully
   * processed.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The batch is done and no item was successfully processed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * Request is in the process of being canceled after caller invoked
   * longrunning.Operations.CancelOperation on the request id.
   *
   * @generated from enum value: CANCELLING = 4;
   */
  CANCELLING = 4,

  /**
   * The batch is done after the user has called the
   * longrunning.Operations.CancelOperation. Any records processed before the
   * cancel command are output as specified in the request.
   *
   * @generated from enum value: CANCELLED = 5;
   */
  CANCELLED = 5,
}

/**
 * Describes the enum google.cloud.translation.v3.BatchTranslateMetadata.State.
 */
export const BatchTranslateMetadata_StateSchema: GenEnum<BatchTranslateMetadata_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_translate_v3_translation_service, 23, 0);

/**
 * Stored in the
 * [google.longrunning.Operation.response][google.longrunning.Operation.response]
 * field returned by BatchTranslateText if at least one sentence is translated
 * successfully.
 *
 * @generated from message google.cloud.translation.v3.BatchTranslateResponse
 */
export type BatchTranslateResponse = Message<"google.cloud.translation.v3.BatchTranslateResponse"> & {
  /**
   * Total number of characters (Unicode codepoints).
   *
   * @generated from field: int64 total_characters = 1;
   */
  totalCharacters: bigint;

  /**
   * Number of successfully translated characters (Unicode codepoints).
   *
   * @generated from field: int64 translated_characters = 2;
   */
  translatedCharacters: bigint;

  /**
   * Number of characters that have failed to process (Unicode codepoints).
   *
   * @generated from field: int64 failed_characters = 3;
   */
  failedCharacters: bigint;

  /**
   * Time when the operation was submitted.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 4;
   */
  submitTime?: Timestamp;

  /**
   * The time when the operation is finished and
   * [google.longrunning.Operation.done][google.longrunning.Operation.done] is
   * set to true.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 5;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.translation.v3.BatchTranslateResponse.
 * Use `create(BatchTranslateResponseSchema)` to create a new message.
 */
export const BatchTranslateResponseSchema: GenMessage<BatchTranslateResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 24);

/**
 * Input configuration for glossaries.
 *
 * @generated from message google.cloud.translation.v3.GlossaryInputConfig
 */
export type GlossaryInputConfig = Message<"google.cloud.translation.v3.GlossaryInputConfig"> & {
  /**
   * Required. Specify the input.
   *
   * @generated from oneof google.cloud.translation.v3.GlossaryInputConfig.source
   */
  source: {
    /**
     * Required. Google Cloud Storage location of glossary data.
     * File format is determined based on the filename extension. API returns
     * [google.rpc.Code.INVALID_ARGUMENT] for unsupported URI-s and file
     * formats. Wildcards are not allowed. This must be a single file in one of
     * the following formats:
     *
     * For unidirectional glossaries:
     *
     * - TSV/CSV (`.tsv`/`.csv`): Two column file, tab- or comma-separated.
     *   The first column is source text. The second column is target text.
     *   No headers in this file. The first row contains data and not column
     *   names.
     *
     * - TMX (`.tmx`): TMX file with parallel data defining source/target term
     * pairs.
     *
     * For equivalent term sets glossaries:
     *
     * - CSV (`.csv`): Multi-column CSV file defining equivalent glossary terms
     *   in multiple languages. See documentation for more information -
     *   [glossaries](https://cloud.google.com/translate/docs/advanced/glossary).
     *
     * @generated from field: google.cloud.translation.v3.GcsSource gcs_source = 1;
     */
    value: GcsSource;
    case: "gcsSource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.translation.v3.GlossaryInputConfig.
 * Use `create(GlossaryInputConfigSchema)` to create a new message.
 */
export const GlossaryInputConfigSchema: GenMessage<GlossaryInputConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 25);

/**
 * Represents a glossary built from user-provided data.
 *
 * @generated from message google.cloud.translation.v3.Glossary
 */
export type Glossary = Message<"google.cloud.translation.v3.Glossary"> & {
  /**
   * Required. The resource name of the glossary. Glossary names have the form
   * `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Languages supported by the glossary.
   *
   * @generated from oneof google.cloud.translation.v3.Glossary.languages
   */
  languages: {
    /**
     * Used with unidirectional glossaries.
     *
     * @generated from field: google.cloud.translation.v3.Glossary.LanguageCodePair language_pair = 3;
     */
    value: Glossary_LanguageCodePair;
    case: "languagePair";
  } | {
    /**
     * Used with equivalent term set glossaries.
     *
     * @generated from field: google.cloud.translation.v3.Glossary.LanguageCodesSet language_codes_set = 4;
     */
    value: Glossary_LanguageCodesSet;
    case: "languageCodesSet";
  } | { case: undefined; value?: undefined };

  /**
   * Required. Provides examples to build the glossary from.
   * Total glossary must not exceed 10M Unicode codepoints.
   *
   * @generated from field: google.cloud.translation.v3.GlossaryInputConfig input_config = 5;
   */
  inputConfig?: GlossaryInputConfig;

  /**
   * Output only. The number of entries defined in the glossary.
   *
   * @generated from field: int32 entry_count = 6;
   */
  entryCount: number;

  /**
   * Output only. When CreateGlossary was called.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 7;
   */
  submitTime?: Timestamp;

  /**
   * Output only. When the glossary creation was finished.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 8;
   */
  endTime?: Timestamp;

  /**
   * Optional. The display name of the glossary.
   *
   * @generated from field: string display_name = 9;
   */
  displayName: string;
};

/**
 * Describes the message google.cloud.translation.v3.Glossary.
 * Use `create(GlossarySchema)` to create a new message.
 */
export const GlossarySchema: GenMessage<Glossary> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 26);

/**
 * Used with unidirectional glossaries.
 *
 * @generated from message google.cloud.translation.v3.Glossary.LanguageCodePair
 */
export type Glossary_LanguageCodePair = Message<"google.cloud.translation.v3.Glossary.LanguageCodePair"> & {
  /**
   * Required. The ISO-639 language code of the input text, for example,
   * "en-US". Expected to be an exact match for GlossaryTerm.language_code.
   *
   * @generated from field: string source_language_code = 1;
   */
  sourceLanguageCode: string;

  /**
   * Required. The ISO-639 language code for translation output, for example,
   * "zh-CN". Expected to be an exact match for GlossaryTerm.language_code.
   *
   * @generated from field: string target_language_code = 2;
   */
  targetLanguageCode: string;
};

/**
 * Describes the message google.cloud.translation.v3.Glossary.LanguageCodePair.
 * Use `create(Glossary_LanguageCodePairSchema)` to create a new message.
 */
export const Glossary_LanguageCodePairSchema: GenMessage<Glossary_LanguageCodePair> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 26, 0);

/**
 * Used with equivalent term set glossaries.
 *
 * @generated from message google.cloud.translation.v3.Glossary.LanguageCodesSet
 */
export type Glossary_LanguageCodesSet = Message<"google.cloud.translation.v3.Glossary.LanguageCodesSet"> & {
  /**
   * The ISO-639 language code(s) for terms defined in the glossary.
   * All entries are unique. The list contains at least two entries.
   * Expected to be an exact match for GlossaryTerm.language_code.
   *
   * @generated from field: repeated string language_codes = 1;
   */
  languageCodes: string[];
};

/**
 * Describes the message google.cloud.translation.v3.Glossary.LanguageCodesSet.
 * Use `create(Glossary_LanguageCodesSetSchema)` to create a new message.
 */
export const Glossary_LanguageCodesSetSchema: GenMessage<Glossary_LanguageCodesSet> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 26, 1);

/**
 * Request message for CreateGlossary.
 *
 * @generated from message google.cloud.translation.v3.CreateGlossaryRequest
 */
export type CreateGlossaryRequest = Message<"google.cloud.translation.v3.CreateGlossaryRequest"> & {
  /**
   * Required. The project name.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The glossary to create.
   *
   * @generated from field: google.cloud.translation.v3.Glossary glossary = 2;
   */
  glossary?: Glossary;
};

/**
 * Describes the message google.cloud.translation.v3.CreateGlossaryRequest.
 * Use `create(CreateGlossaryRequestSchema)` to create a new message.
 */
export const CreateGlossaryRequestSchema: GenMessage<CreateGlossaryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 27);

/**
 * Request message for the update glossary flow
 *
 * @generated from message google.cloud.translation.v3.UpdateGlossaryRequest
 */
export type UpdateGlossaryRequest = Message<"google.cloud.translation.v3.UpdateGlossaryRequest"> & {
  /**
   * Required. The glossary entry to update.
   *
   * @generated from field: google.cloud.translation.v3.Glossary glossary = 1;
   */
  glossary?: Glossary;

  /**
   * The list of fields to be updated. Currently only `display_name` and
   * 'input_config'
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.translation.v3.UpdateGlossaryRequest.
 * Use `create(UpdateGlossaryRequestSchema)` to create a new message.
 */
export const UpdateGlossaryRequestSchema: GenMessage<UpdateGlossaryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 28);

/**
 * Request message for GetGlossary.
 *
 * @generated from message google.cloud.translation.v3.GetGlossaryRequest
 */
export type GetGlossaryRequest = Message<"google.cloud.translation.v3.GetGlossaryRequest"> & {
  /**
   * Required. The name of the glossary to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.translation.v3.GetGlossaryRequest.
 * Use `create(GetGlossaryRequestSchema)` to create a new message.
 */
export const GetGlossaryRequestSchema: GenMessage<GetGlossaryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 29);

/**
 * Request message for DeleteGlossary.
 *
 * @generated from message google.cloud.translation.v3.DeleteGlossaryRequest
 */
export type DeleteGlossaryRequest = Message<"google.cloud.translation.v3.DeleteGlossaryRequest"> & {
  /**
   * Required. The name of the glossary to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.translation.v3.DeleteGlossaryRequest.
 * Use `create(DeleteGlossaryRequestSchema)` to create a new message.
 */
export const DeleteGlossaryRequestSchema: GenMessage<DeleteGlossaryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 30);

/**
 * Request message for ListGlossaries.
 *
 * @generated from message google.cloud.translation.v3.ListGlossariesRequest
 */
export type ListGlossariesRequest = Message<"google.cloud.translation.v3.ListGlossariesRequest"> & {
  /**
   * Required. The name of the project from which to list all of the glossaries.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Requested page size. The server may return fewer glossaries than
   * requested. If unspecified, the server picks an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results the server should return.
   * Typically, this is the value of [ListGlossariesResponse.next_page_token]
   * returned from the previous call to `ListGlossaries` method.
   * The first page is returned if `page_token`is empty or missing.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filter specifying constraints of a list operation.
   * Specify the constraint by the format of "key=value", where key must be
   * "src" or "tgt", and the value must be a valid language code.
   * For multiple restrictions, concatenate them by "AND" (uppercase only),
   * such as: "src=en-US AND tgt=zh-CN". Notice that the exact match is used
   * here, which means using 'en-US' and 'en' can lead to different results,
   * which depends on the language code you used when you create the glossary.
   * For the unidirectional glossaries, the "src" and "tgt" add restrictions
   * on the source and target language code separately.
   * For the equivalent term set glossaries, the "src" and/or "tgt" add
   * restrictions on the term set.
   * For example: "src=en-US AND tgt=zh-CN" will only pick the unidirectional
   * glossaries which exactly match the source language code as "en-US" and the
   * target language code "zh-CN", but all equivalent term set glossaries which
   * contain "en-US" and "zh-CN" in their language set will be picked.
   * If missing, no filtering is performed.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.translation.v3.ListGlossariesRequest.
 * Use `create(ListGlossariesRequestSchema)` to create a new message.
 */
export const ListGlossariesRequestSchema: GenMessage<ListGlossariesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 31);

/**
 * Response message for ListGlossaries.
 *
 * @generated from message google.cloud.translation.v3.ListGlossariesResponse
 */
export type ListGlossariesResponse = Message<"google.cloud.translation.v3.ListGlossariesResponse"> & {
  /**
   * The list of glossaries for a project.
   *
   * @generated from field: repeated google.cloud.translation.v3.Glossary glossaries = 1;
   */
  glossaries: Glossary[];

  /**
   * A token to retrieve a page of results. Pass this value in the
   * [ListGlossariesRequest.page_token] field in the subsequent call to
   * `ListGlossaries` method to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.translation.v3.ListGlossariesResponse.
 * Use `create(ListGlossariesResponseSchema)` to create a new message.
 */
export const ListGlossariesResponseSchema: GenMessage<ListGlossariesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 32);

/**
 * Request message for the Get Glossary Entry Api
 *
 * @generated from message google.cloud.translation.v3.GetGlossaryEntryRequest
 */
export type GetGlossaryEntryRequest = Message<"google.cloud.translation.v3.GetGlossaryEntryRequest"> & {
  /**
   * Required. The resource name of the glossary entry to get
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.translation.v3.GetGlossaryEntryRequest.
 * Use `create(GetGlossaryEntryRequestSchema)` to create a new message.
 */
export const GetGlossaryEntryRequestSchema: GenMessage<GetGlossaryEntryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 33);

/**
 * Request message for Delete Glossary Entry
 *
 * @generated from message google.cloud.translation.v3.DeleteGlossaryEntryRequest
 */
export type DeleteGlossaryEntryRequest = Message<"google.cloud.translation.v3.DeleteGlossaryEntryRequest"> & {
  /**
   * Required. The resource name of the glossary entry to delete
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.translation.v3.DeleteGlossaryEntryRequest.
 * Use `create(DeleteGlossaryEntryRequestSchema)` to create a new message.
 */
export const DeleteGlossaryEntryRequestSchema: GenMessage<DeleteGlossaryEntryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 34);

/**
 * Request message for ListGlossaryEntries
 *
 * @generated from message google.cloud.translation.v3.ListGlossaryEntriesRequest
 */
export type ListGlossaryEntriesRequest = Message<"google.cloud.translation.v3.ListGlossaryEntriesRequest"> & {
  /**
   * Required. The parent glossary resource name for listing the glossary's
   * entries.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Requested page size. The server may return fewer glossary entries
   * than requested. If unspecified, the server picks an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results the server should return.
   * Typically, this is the value of
   * [ListGlossaryEntriesResponse.next_page_token] returned from the previous
   * call. The first page is returned if `page_token`is empty or missing.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.translation.v3.ListGlossaryEntriesRequest.
 * Use `create(ListGlossaryEntriesRequestSchema)` to create a new message.
 */
export const ListGlossaryEntriesRequestSchema: GenMessage<ListGlossaryEntriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 35);

/**
 * Response message for ListGlossaryEntries
 *
 * @generated from message google.cloud.translation.v3.ListGlossaryEntriesResponse
 */
export type ListGlossaryEntriesResponse = Message<"google.cloud.translation.v3.ListGlossaryEntriesResponse"> & {
  /**
   * Optional. The Glossary Entries
   *
   * @generated from field: repeated google.cloud.translation.v3.GlossaryEntry glossary_entries = 1;
   */
  glossaryEntries: GlossaryEntry[];

  /**
   * Optional. A token to retrieve a page of results. Pass this value in the
   * [ListGLossaryEntriesRequest.page_token] field in the subsequent calls.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.translation.v3.ListGlossaryEntriesResponse.
 * Use `create(ListGlossaryEntriesResponseSchema)` to create a new message.
 */
export const ListGlossaryEntriesResponseSchema: GenMessage<ListGlossaryEntriesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 36);

/**
 * Request message for CreateGlossaryEntry
 *
 * @generated from message google.cloud.translation.v3.CreateGlossaryEntryRequest
 */
export type CreateGlossaryEntryRequest = Message<"google.cloud.translation.v3.CreateGlossaryEntryRequest"> & {
  /**
   * Required. The resource name of the glossary to create the entry under.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The glossary entry to create
   *
   * @generated from field: google.cloud.translation.v3.GlossaryEntry glossary_entry = 2;
   */
  glossaryEntry?: GlossaryEntry;
};

/**
 * Describes the message google.cloud.translation.v3.CreateGlossaryEntryRequest.
 * Use `create(CreateGlossaryEntryRequestSchema)` to create a new message.
 */
export const CreateGlossaryEntryRequestSchema: GenMessage<CreateGlossaryEntryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 37);

/**
 * Request message for UpdateGlossaryEntry
 *
 * @generated from message google.cloud.translation.v3.UpdateGlossaryEntryRequest
 */
export type UpdateGlossaryEntryRequest = Message<"google.cloud.translation.v3.UpdateGlossaryEntryRequest"> & {
  /**
   * Required. The glossary entry to update.
   *
   * @generated from field: google.cloud.translation.v3.GlossaryEntry glossary_entry = 1;
   */
  glossaryEntry?: GlossaryEntry;
};

/**
 * Describes the message google.cloud.translation.v3.UpdateGlossaryEntryRequest.
 * Use `create(UpdateGlossaryEntryRequestSchema)` to create a new message.
 */
export const UpdateGlossaryEntryRequestSchema: GenMessage<UpdateGlossaryEntryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 38);

/**
 * Stored in the
 * [google.longrunning.Operation.metadata][google.longrunning.Operation.metadata]
 * field returned by CreateGlossary.
 *
 * @generated from message google.cloud.translation.v3.CreateGlossaryMetadata
 */
export type CreateGlossaryMetadata = Message<"google.cloud.translation.v3.CreateGlossaryMetadata"> & {
  /**
   * The name of the glossary that is being created.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The current state of the glossary creation operation.
   *
   * @generated from field: google.cloud.translation.v3.CreateGlossaryMetadata.State state = 2;
   */
  state: CreateGlossaryMetadata_State;

  /**
   * The time when the operation was submitted to the server.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 3;
   */
  submitTime?: Timestamp;
};

/**
 * Describes the message google.cloud.translation.v3.CreateGlossaryMetadata.
 * Use `create(CreateGlossaryMetadataSchema)` to create a new message.
 */
export const CreateGlossaryMetadataSchema: GenMessage<CreateGlossaryMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 39);

/**
 * Enumerates the possible states that the creation request can be in.
 *
 * @generated from enum google.cloud.translation.v3.CreateGlossaryMetadata.State
 */
export enum CreateGlossaryMetadata_State {
  /**
   * Invalid.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Request is being processed.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The glossary was successfully created.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * Failed to create the glossary.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * Request is in the process of being canceled after caller invoked
   * longrunning.Operations.CancelOperation on the request id.
   *
   * @generated from enum value: CANCELLING = 4;
   */
  CANCELLING = 4,

  /**
   * The glossary creation request was successfully canceled.
   *
   * @generated from enum value: CANCELLED = 5;
   */
  CANCELLED = 5,
}

/**
 * Describes the enum google.cloud.translation.v3.CreateGlossaryMetadata.State.
 */
export const CreateGlossaryMetadata_StateSchema: GenEnum<CreateGlossaryMetadata_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_translate_v3_translation_service, 39, 0);

/**
 * Stored in the
 * [google.longrunning.Operation.metadata][google.longrunning.Operation.metadata]
 * field returned by UpdateGlossary.
 *
 * @generated from message google.cloud.translation.v3.UpdateGlossaryMetadata
 */
export type UpdateGlossaryMetadata = Message<"google.cloud.translation.v3.UpdateGlossaryMetadata"> & {
  /**
   * The updated glossary object.
   *
   * @generated from field: google.cloud.translation.v3.Glossary glossary = 1;
   */
  glossary?: Glossary;

  /**
   * The current state of the glossary update operation. If the glossary input
   * file was not updated this will be completed immediately
   *
   * @generated from field: google.cloud.translation.v3.UpdateGlossaryMetadata.State state = 2;
   */
  state: UpdateGlossaryMetadata_State;

  /**
   * The time when the operation was submitted to the server.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 3;
   */
  submitTime?: Timestamp;
};

/**
 * Describes the message google.cloud.translation.v3.UpdateGlossaryMetadata.
 * Use `create(UpdateGlossaryMetadataSchema)` to create a new message.
 */
export const UpdateGlossaryMetadataSchema: GenMessage<UpdateGlossaryMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 40);

/**
 * Enumerates the possible states that the update request can be in.
 *
 * @generated from enum google.cloud.translation.v3.UpdateGlossaryMetadata.State
 */
export enum UpdateGlossaryMetadata_State {
  /**
   * Invalid.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Request is being processed.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The glossary was successfully updated.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * Failed to update the glossary.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * Request is in the process of being canceled after caller invoked
   * longrunning.Operations.CancelOperation on the request id.
   *
   * @generated from enum value: CANCELLING = 4;
   */
  CANCELLING = 4,

  /**
   * The glossary update request was successfully canceled.
   *
   * @generated from enum value: CANCELLED = 5;
   */
  CANCELLED = 5,
}

/**
 * Describes the enum google.cloud.translation.v3.UpdateGlossaryMetadata.State.
 */
export const UpdateGlossaryMetadata_StateSchema: GenEnum<UpdateGlossaryMetadata_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_translate_v3_translation_service, 40, 0);

/**
 * Stored in the
 * [google.longrunning.Operation.metadata][google.longrunning.Operation.metadata]
 * field returned by DeleteGlossary.
 *
 * @generated from message google.cloud.translation.v3.DeleteGlossaryMetadata
 */
export type DeleteGlossaryMetadata = Message<"google.cloud.translation.v3.DeleteGlossaryMetadata"> & {
  /**
   * The name of the glossary that is being deleted.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The current state of the glossary deletion operation.
   *
   * @generated from field: google.cloud.translation.v3.DeleteGlossaryMetadata.State state = 2;
   */
  state: DeleteGlossaryMetadata_State;

  /**
   * The time when the operation was submitted to the server.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 3;
   */
  submitTime?: Timestamp;
};

/**
 * Describes the message google.cloud.translation.v3.DeleteGlossaryMetadata.
 * Use `create(DeleteGlossaryMetadataSchema)` to create a new message.
 */
export const DeleteGlossaryMetadataSchema: GenMessage<DeleteGlossaryMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 41);

/**
 * Enumerates the possible states that the creation request can be in.
 *
 * @generated from enum google.cloud.translation.v3.DeleteGlossaryMetadata.State
 */
export enum DeleteGlossaryMetadata_State {
  /**
   * Invalid.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Request is being processed.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The glossary was successfully deleted.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * Failed to delete the glossary.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * Request is in the process of being canceled after caller invoked
   * longrunning.Operations.CancelOperation on the request id.
   *
   * @generated from enum value: CANCELLING = 4;
   */
  CANCELLING = 4,

  /**
   * The glossary deletion request was successfully canceled.
   *
   * @generated from enum value: CANCELLED = 5;
   */
  CANCELLED = 5,
}

/**
 * Describes the enum google.cloud.translation.v3.DeleteGlossaryMetadata.State.
 */
export const DeleteGlossaryMetadata_StateSchema: GenEnum<DeleteGlossaryMetadata_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_translate_v3_translation_service, 41, 0);

/**
 * Stored in the
 * [google.longrunning.Operation.response][google.longrunning.Operation.response]
 * field returned by DeleteGlossary.
 *
 * @generated from message google.cloud.translation.v3.DeleteGlossaryResponse
 */
export type DeleteGlossaryResponse = Message<"google.cloud.translation.v3.DeleteGlossaryResponse"> & {
  /**
   * The name of the deleted glossary.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The time when the operation was submitted to the server.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 2;
   */
  submitTime?: Timestamp;

  /**
   * The time when the glossary deletion is finished and
   * [google.longrunning.Operation.done][google.longrunning.Operation.done] is
   * set to true.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.translation.v3.DeleteGlossaryResponse.
 * Use `create(DeleteGlossaryResponseSchema)` to create a new message.
 */
export const DeleteGlossaryResponseSchema: GenMessage<DeleteGlossaryResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 42);

/**
 * The BatchTranslateDocument request.
 *
 * @generated from message google.cloud.translation.v3.BatchTranslateDocumentRequest
 */
export type BatchTranslateDocumentRequest = Message<"google.cloud.translation.v3.BatchTranslateDocumentRequest"> & {
  /**
   * Required. Location to make a regional call.
   *
   * Format: `projects/{project-number-or-id}/locations/{location-id}`.
   *
   * The `global` location is not supported for batch translation.
   *
   * Only AutoML Translation models or glossaries within the same region (have
   * the same location-id) can be used, otherwise an INVALID_ARGUMENT (400)
   * error is returned.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ISO-639 language code of the input document if known, for
   * example, "en-US" or "sr-Latn". Supported language codes are listed in
   * [Language Support](https://cloud.google.com/translate/docs/languages).
   *
   * @generated from field: string source_language_code = 2;
   */
  sourceLanguageCode: string;

  /**
   * Required. The ISO-639 language code to use for translation of the input
   * document. Specify up to 10 language codes here.
   *
   * @generated from field: repeated string target_language_codes = 3;
   */
  targetLanguageCodes: string[];

  /**
   * Required. Input configurations.
   * The total number of files matched should be <= 100.
   * The total content size to translate should be <= 100M Unicode codepoints.
   * The files must use UTF-8 encoding.
   *
   * @generated from field: repeated google.cloud.translation.v3.BatchDocumentInputConfig input_configs = 4;
   */
  inputConfigs: BatchDocumentInputConfig[];

  /**
   * Required. Output configuration.
   * If 2 input configs match to the same file (that is, same input path),
   * we don't generate output for duplicate inputs.
   *
   * @generated from field: google.cloud.translation.v3.BatchDocumentOutputConfig output_config = 5;
   */
  outputConfig?: BatchDocumentOutputConfig;

  /**
   * Optional. The models to use for translation. Map's key is target language
   * code. Map's value is the model name. Value can be a built-in general model,
   * or an AutoML Translation model.
   *
   * The value format depends on model type:
   *
   * - AutoML Translation models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}`
   *
   * - General (built-in) models:
   *   `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`,
   *
   *
   * If the map is empty or a specific model is
   * not requested for a language pair, then default google model (nmt) is used.
   *
   * @generated from field: map<string, string> models = 6;
   */
  models: { [key: string]: string };

  /**
   * Optional. Glossaries to be applied. It's keyed by target language code.
   *
   * @generated from field: map<string, google.cloud.translation.v3.TranslateTextGlossaryConfig> glossaries = 7;
   */
  glossaries: { [key: string]: TranslateTextGlossaryConfig };

  /**
   * Optional. The file format conversion map that is applied to all input
   * files. The map key is the original mime_type. The map value is the target
   * mime_type of translated documents.
   *
   * Supported file format conversion includes:
   * - `application/pdf` to
   *   `application/vnd.openxmlformats-officedocument.wordprocessingml.document`
   *
   * If nothing specified, output files will be in the same format as the
   * original file.
   *
   * @generated from field: map<string, string> format_conversions = 8;
   */
  formatConversions: { [key: string]: string };

  /**
   * Optional. This flag is to support user customized attribution.
   * If not provided, the default is `Machine Translated by Google`.
   * Customized attribution should follow rules in
   * https://cloud.google.com/translate/attribution#attribution_and_logos
   *
   * @generated from field: string customized_attribution = 10;
   */
  customizedAttribution: string;

  /**
   * Optional. If true, use the text removal server to remove the shadow text on
   * background image for native pdf translation.
   * Shadow removal feature can only be enabled when
   * is_translate_native_pdf_only: false && pdf_native_only: false
   *
   * @generated from field: bool enable_shadow_removal_native_pdf = 11;
   */
  enableShadowRemovalNativePdf: boolean;

  /**
   * Optional. If true, enable auto rotation correction in DVS.
   *
   * @generated from field: bool enable_rotation_correction = 12;
   */
  enableRotationCorrection: boolean;
};

/**
 * Describes the message google.cloud.translation.v3.BatchTranslateDocumentRequest.
 * Use `create(BatchTranslateDocumentRequestSchema)` to create a new message.
 */
export const BatchTranslateDocumentRequestSchema: GenMessage<BatchTranslateDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 43);

/**
 * Input configuration for BatchTranslateDocument request.
 *
 * @generated from message google.cloud.translation.v3.BatchDocumentInputConfig
 */
export type BatchDocumentInputConfig = Message<"google.cloud.translation.v3.BatchDocumentInputConfig"> & {
  /**
   * Specify the input.
   *
   * @generated from oneof google.cloud.translation.v3.BatchDocumentInputConfig.source
   */
  source: {
    /**
     * Google Cloud Storage location for the source input.
     * This can be a single file (for example,
     * `gs://translation-test/input.docx`) or a wildcard (for example,
     * `gs://translation-test/*`).
     *
     * File mime type is determined based on extension. Supported mime type
     * includes:
     * - `pdf`, application/pdf
     * - `docx`,
     * application/vnd.openxmlformats-officedocument.wordprocessingml.document
     * - `pptx`,
     * application/vnd.openxmlformats-officedocument.presentationml.presentation
     * - `xlsx`,
     * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
     *
     * The max file size to support for `.docx`, `.pptx` and `.xlsx` is 100MB.
     * The max file size to support for `.pdf` is 1GB and the max page limit is
     * 1000 pages.
     * The max file size to support for all input documents is 1GB.
     *
     * @generated from field: google.cloud.translation.v3.GcsSource gcs_source = 1;
     */
    value: GcsSource;
    case: "gcsSource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.translation.v3.BatchDocumentInputConfig.
 * Use `create(BatchDocumentInputConfigSchema)` to create a new message.
 */
export const BatchDocumentInputConfigSchema: GenMessage<BatchDocumentInputConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 44);

/**
 * Output configuration for BatchTranslateDocument request.
 *
 * @generated from message google.cloud.translation.v3.BatchDocumentOutputConfig
 */
export type BatchDocumentOutputConfig = Message<"google.cloud.translation.v3.BatchDocumentOutputConfig"> & {
  /**
   * The destination of output. The destination directory provided must exist
   * and be empty.
   *
   * @generated from oneof google.cloud.translation.v3.BatchDocumentOutputConfig.destination
   */
  destination: {
    /**
     * Google Cloud Storage destination for output content.
     * For every single input document (for example, gs://a/b/c.[extension]), we
     * generate at most 2 * n output files. (n is the # of target_language_codes
     * in the BatchTranslateDocumentRequest).
     *
     * While the input documents are being processed, we write/update an index
     * file `index.csv` under `gcs_destination.output_uri_prefix` (for example,
     * gs://translation_output/index.csv) The index file is generated/updated as
     * new files are being translated. The format is:
     *
     * input_document,target_language_code,translation_output,error_output,
     * glossary_translation_output,glossary_error_output
     *
     * `input_document` is one file we matched using gcs_source.input_uri.
     * `target_language_code` is provided in the request.
     * `translation_output` contains the translations. (details provided below)
     * `error_output` contains the error message during processing of the file.
     * Both translations_file and errors_file could be empty strings if we have
     * no content to output.
     * `glossary_translation_output` and `glossary_error_output` are the
     * translated output/error when we apply glossaries. They could also be
     * empty if we have no content to output.
     *
     * Once a row is present in index.csv, the input/output matching never
     * changes. Callers should also expect all the content in input_file are
     * processed and ready to be consumed (that is, no partial output file is
     * written).
     *
     * Since index.csv will be keeping updated during the process, please make
     * sure there is no custom retention policy applied on the output bucket
     * that may avoid file updating.
     * (https://cloud.google.com/storage/docs/bucket-lock#retention-policy)
     *
     * The naming format of translation output files follows (for target
     * language code [trg]): `translation_output`:
     * `gs://translation_output/a_b_c_[trg]_translation.[extension]`
     * `glossary_translation_output`:
     * `gs://translation_test/a_b_c_[trg]_glossary_translation.[extension]`. The
     * output document will maintain the same file format as the input document.
     *
     * The naming format of error output files follows (for target language code
     * [trg]): `error_output`: `gs://translation_test/a_b_c_[trg]_errors.txt`
     * `glossary_error_output`:
     * `gs://translation_test/a_b_c_[trg]_glossary_translation.txt`. The error
     * output is a txt file containing error details.
     *
     * @generated from field: google.cloud.translation.v3.GcsDestination gcs_destination = 1;
     */
    value: GcsDestination;
    case: "gcsDestination";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.translation.v3.BatchDocumentOutputConfig.
 * Use `create(BatchDocumentOutputConfigSchema)` to create a new message.
 */
export const BatchDocumentOutputConfigSchema: GenMessage<BatchDocumentOutputConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 45);

/**
 * Stored in the
 * [google.longrunning.Operation.response][google.longrunning.Operation.response]
 * field returned by BatchTranslateDocument if at least one document is
 * translated successfully.
 *
 * @generated from message google.cloud.translation.v3.BatchTranslateDocumentResponse
 */
export type BatchTranslateDocumentResponse = Message<"google.cloud.translation.v3.BatchTranslateDocumentResponse"> & {
  /**
   * Total number of pages to translate in all documents. Documents without
   * clear page definition (such as XLSX) are not counted.
   *
   * @generated from field: int64 total_pages = 1;
   */
  totalPages: bigint;

  /**
   * Number of successfully translated pages in all documents. Documents without
   * clear page definition (such as XLSX) are not counted.
   *
   * @generated from field: int64 translated_pages = 2;
   */
  translatedPages: bigint;

  /**
   * Number of pages that failed to process in all documents. Documents without
   * clear page definition (such as XLSX) are not counted.
   *
   * @generated from field: int64 failed_pages = 3;
   */
  failedPages: bigint;

  /**
   * Number of billable pages in documents with clear page definition (such as
   * PDF, DOCX, PPTX)
   *
   * @generated from field: int64 total_billable_pages = 4;
   */
  totalBillablePages: bigint;

  /**
   * Total number of characters (Unicode codepoints) in all documents.
   *
   * @generated from field: int64 total_characters = 5;
   */
  totalCharacters: bigint;

  /**
   * Number of successfully translated characters (Unicode codepoints) in all
   * documents.
   *
   * @generated from field: int64 translated_characters = 6;
   */
  translatedCharacters: bigint;

  /**
   * Number of characters that have failed to process (Unicode codepoints) in
   * all documents.
   *
   * @generated from field: int64 failed_characters = 7;
   */
  failedCharacters: bigint;

  /**
   * Number of billable characters (Unicode codepoints) in documents without
   * clear page definition, such as XLSX.
   *
   * @generated from field: int64 total_billable_characters = 8;
   */
  totalBillableCharacters: bigint;

  /**
   * Time when the operation was submitted.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 9;
   */
  submitTime?: Timestamp;

  /**
   * The time when the operation is finished and
   * [google.longrunning.Operation.done][google.longrunning.Operation.done] is
   * set to true.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 10;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.translation.v3.BatchTranslateDocumentResponse.
 * Use `create(BatchTranslateDocumentResponseSchema)` to create a new message.
 */
export const BatchTranslateDocumentResponseSchema: GenMessage<BatchTranslateDocumentResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 46);

/**
 * State metadata for the batch translation operation.
 *
 * @generated from message google.cloud.translation.v3.BatchTranslateDocumentMetadata
 */
export type BatchTranslateDocumentMetadata = Message<"google.cloud.translation.v3.BatchTranslateDocumentMetadata"> & {
  /**
   * The state of the operation.
   *
   * @generated from field: google.cloud.translation.v3.BatchTranslateDocumentMetadata.State state = 1;
   */
  state: BatchTranslateDocumentMetadata_State;

  /**
   * Total number of pages to translate in all documents so far. Documents
   * without clear page definition (such as XLSX) are not counted.
   *
   * @generated from field: int64 total_pages = 2;
   */
  totalPages: bigint;

  /**
   * Number of successfully translated pages in all documents so far. Documents
   * without clear page definition (such as XLSX) are not counted.
   *
   * @generated from field: int64 translated_pages = 3;
   */
  translatedPages: bigint;

  /**
   * Number of pages that failed to process in all documents so far. Documents
   * without clear page definition (such as XLSX) are not counted.
   *
   * @generated from field: int64 failed_pages = 4;
   */
  failedPages: bigint;

  /**
   * Number of billable pages in documents with clear page definition (such as
   * PDF, DOCX, PPTX) so far.
   *
   * @generated from field: int64 total_billable_pages = 5;
   */
  totalBillablePages: bigint;

  /**
   * Total number of characters (Unicode codepoints) in all documents so far.
   *
   * @generated from field: int64 total_characters = 6;
   */
  totalCharacters: bigint;

  /**
   * Number of successfully translated characters (Unicode codepoints) in all
   * documents so far.
   *
   * @generated from field: int64 translated_characters = 7;
   */
  translatedCharacters: bigint;

  /**
   * Number of characters that have failed to process (Unicode codepoints) in
   * all documents so far.
   *
   * @generated from field: int64 failed_characters = 8;
   */
  failedCharacters: bigint;

  /**
   * Number of billable characters (Unicode codepoints) in documents without
   * clear page definition (such as XLSX) so far.
   *
   * @generated from field: int64 total_billable_characters = 9;
   */
  totalBillableCharacters: bigint;

  /**
   * Time when the operation was submitted.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 10;
   */
  submitTime?: Timestamp;
};

/**
 * Describes the message google.cloud.translation.v3.BatchTranslateDocumentMetadata.
 * Use `create(BatchTranslateDocumentMetadataSchema)` to create a new message.
 */
export const BatchTranslateDocumentMetadataSchema: GenMessage<BatchTranslateDocumentMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 47);

/**
 * State of the job.
 *
 * @generated from enum google.cloud.translation.v3.BatchTranslateDocumentMetadata.State
 */
export enum BatchTranslateDocumentMetadata_State {
  /**
   * Invalid.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Request is being processed.
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The batch is processed, and at least one item was successfully processed.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * The batch is done and no item was successfully processed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,

  /**
   * Request is in the process of being canceled after caller invoked
   * longrunning.Operations.CancelOperation on the request id.
   *
   * @generated from enum value: CANCELLING = 4;
   */
  CANCELLING = 4,

  /**
   * The batch is done after the user has called the
   * longrunning.Operations.CancelOperation. Any records processed before the
   * cancel command are output as specified in the request.
   *
   * @generated from enum value: CANCELLED = 5;
   */
  CANCELLED = 5,
}

/**
 * Describes the enum google.cloud.translation.v3.BatchTranslateDocumentMetadata.State.
 */
export const BatchTranslateDocumentMetadata_StateSchema: GenEnum<BatchTranslateDocumentMetadata_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_translate_v3_translation_service, 47, 0);

/**
 * Configures which glossary is used for a specific target language and defines
 * options for applying that glossary.
 *
 * @generated from message google.cloud.translation.v3.TranslateTextGlossaryConfig
 */
export type TranslateTextGlossaryConfig = Message<"google.cloud.translation.v3.TranslateTextGlossaryConfig"> & {
  /**
   * Required. The `glossary` to be applied for this translation.
   *
   * The format depends on the glossary:
   *
   * - User-provided custom glossary:
   *   `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`
   *
   * @generated from field: string glossary = 1;
   */
  glossary: string;

  /**
   * Optional. Indicates match is case insensitive. The default value is `false`
   * if missing.
   *
   * @generated from field: bool ignore_case = 2;
   */
  ignoreCase: boolean;
};

/**
 * Describes the message google.cloud.translation.v3.TranslateTextGlossaryConfig.
 * Use `create(TranslateTextGlossaryConfigSchema)` to create a new message.
 */
export const TranslateTextGlossaryConfigSchema: GenMessage<TranslateTextGlossaryConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_translate_v3_translation_service, 48);

/**
 * Provides natural language translation operations.
 *
 * @generated from service google.cloud.translation.v3.TranslationService
 */
export const TranslationService: GenService<{
  /**
   * Translates input text and returns translated text.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.TranslateText
   */
  translateText: {
    methodKind: "unary";
    input: typeof TranslateTextRequestSchema;
    output: typeof TranslateTextResponseSchema;
  },
  /**
   * Romanize input text written in non-Latin scripts to Latin text.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.RomanizeText
   */
  romanizeText: {
    methodKind: "unary";
    input: typeof RomanizeTextRequestSchema;
    output: typeof RomanizeTextResponseSchema;
  },
  /**
   * Detects the language of text within a request.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.DetectLanguage
   */
  detectLanguage: {
    methodKind: "unary";
    input: typeof DetectLanguageRequestSchema;
    output: typeof DetectLanguageResponseSchema;
  },
  /**
   * Returns a list of supported languages for translation.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.GetSupportedLanguages
   */
  getSupportedLanguages: {
    methodKind: "unary";
    input: typeof GetSupportedLanguagesRequestSchema;
    output: typeof SupportedLanguagesSchema;
  },
  /**
   * Translates documents in synchronous mode.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.TranslateDocument
   */
  translateDocument: {
    methodKind: "unary";
    input: typeof TranslateDocumentRequestSchema;
    output: typeof TranslateDocumentResponseSchema;
  },
  /**
   * Translates a large volume of text in asynchronous batch mode.
   * This function provides real-time output as the inputs are being processed.
   * If caller cancels a request, the partial results (for an input file, it's
   * all or nothing) may still be available on the specified output location.
   *
   * This call returns immediately and you can
   * use google.longrunning.Operation.name to poll the status of the call.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.BatchTranslateText
   */
  batchTranslateText: {
    methodKind: "unary";
    input: typeof BatchTranslateTextRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Translates a large volume of document in asynchronous batch mode.
   * This function provides real-time output as the inputs are being processed.
   * If caller cancels a request, the partial results (for an input file, it's
   * all or nothing) may still be available on the specified output location.
   *
   * This call returns immediately and you can use
   * google.longrunning.Operation.name to poll the status of the call.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.BatchTranslateDocument
   */
  batchTranslateDocument: {
    methodKind: "unary";
    input: typeof BatchTranslateDocumentRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a glossary and returns the long-running operation. Returns
   * NOT_FOUND, if the project doesn't exist.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.CreateGlossary
   */
  createGlossary: {
    methodKind: "unary";
    input: typeof CreateGlossaryRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a glossary. A LRO is used since the update can be async if the
   * glossary's entry file is updated.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.UpdateGlossary
   */
  updateGlossary: {
    methodKind: "unary";
    input: typeof UpdateGlossaryRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists glossaries in a project. Returns NOT_FOUND, if the project doesn't
   * exist.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ListGlossaries
   */
  listGlossaries: {
    methodKind: "unary";
    input: typeof ListGlossariesRequestSchema;
    output: typeof ListGlossariesResponseSchema;
  },
  /**
   * Gets a glossary. Returns NOT_FOUND, if the glossary doesn't
   * exist.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.GetGlossary
   */
  getGlossary: {
    methodKind: "unary";
    input: typeof GetGlossaryRequestSchema;
    output: typeof GlossarySchema;
  },
  /**
   * Deletes a glossary, or cancels glossary construction
   * if the glossary isn't created yet.
   * Returns NOT_FOUND, if the glossary doesn't exist.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.DeleteGlossary
   */
  deleteGlossary: {
    methodKind: "unary";
    input: typeof DeleteGlossaryRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a single glossary entry by the given id.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.GetGlossaryEntry
   */
  getGlossaryEntry: {
    methodKind: "unary";
    input: typeof GetGlossaryEntryRequestSchema;
    output: typeof GlossaryEntrySchema;
  },
  /**
   * List the entries for the glossary.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ListGlossaryEntries
   */
  listGlossaryEntries: {
    methodKind: "unary";
    input: typeof ListGlossaryEntriesRequestSchema;
    output: typeof ListGlossaryEntriesResponseSchema;
  },
  /**
   * Creates a glossary entry.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.CreateGlossaryEntry
   */
  createGlossaryEntry: {
    methodKind: "unary";
    input: typeof CreateGlossaryEntryRequestSchema;
    output: typeof GlossaryEntrySchema;
  },
  /**
   * Updates a glossary entry.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.UpdateGlossaryEntry
   */
  updateGlossaryEntry: {
    methodKind: "unary";
    input: typeof UpdateGlossaryEntryRequestSchema;
    output: typeof GlossaryEntrySchema;
  },
  /**
   * Deletes a single entry from the glossary
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.DeleteGlossaryEntry
   */
  deleteGlossaryEntry: {
    methodKind: "unary";
    input: typeof DeleteGlossaryEntryRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Creates a Dataset.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.CreateDataset
   */
  createDataset: {
    methodKind: "unary";
    input: typeof CreateDatasetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a Dataset.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.GetDataset
   */
  getDataset: {
    methodKind: "unary";
    input: typeof GetDatasetRequestSchema;
    output: typeof DatasetSchema;
  },
  /**
   * Lists datasets.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ListDatasets
   */
  listDatasets: {
    methodKind: "unary";
    input: typeof ListDatasetsRequestSchema;
    output: typeof ListDatasetsResponseSchema;
  },
  /**
   * Deletes a dataset and all of its contents.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.DeleteDataset
   */
  deleteDataset: {
    methodKind: "unary";
    input: typeof DeleteDatasetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates an Adaptive MT dataset.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.CreateAdaptiveMtDataset
   */
  createAdaptiveMtDataset: {
    methodKind: "unary";
    input: typeof CreateAdaptiveMtDatasetRequestSchema;
    output: typeof AdaptiveMtDatasetSchema;
  },
  /**
   * Deletes an Adaptive MT dataset, including all its entries and associated
   * metadata.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.DeleteAdaptiveMtDataset
   */
  deleteAdaptiveMtDataset: {
    methodKind: "unary";
    input: typeof DeleteAdaptiveMtDatasetRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets the Adaptive MT dataset.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.GetAdaptiveMtDataset
   */
  getAdaptiveMtDataset: {
    methodKind: "unary";
    input: typeof GetAdaptiveMtDatasetRequestSchema;
    output: typeof AdaptiveMtDatasetSchema;
  },
  /**
   * Lists all Adaptive MT datasets for which the caller has read permission.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ListAdaptiveMtDatasets
   */
  listAdaptiveMtDatasets: {
    methodKind: "unary";
    input: typeof ListAdaptiveMtDatasetsRequestSchema;
    output: typeof ListAdaptiveMtDatasetsResponseSchema;
  },
  /**
   * Translate text using Adaptive MT.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.AdaptiveMtTranslate
   */
  adaptiveMtTranslate: {
    methodKind: "unary";
    input: typeof AdaptiveMtTranslateRequestSchema;
    output: typeof AdaptiveMtTranslateResponseSchema;
  },
  /**
   * Gets and AdaptiveMtFile
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.GetAdaptiveMtFile
   */
  getAdaptiveMtFile: {
    methodKind: "unary";
    input: typeof GetAdaptiveMtFileRequestSchema;
    output: typeof AdaptiveMtFileSchema;
  },
  /**
   * Deletes an AdaptiveMtFile along with its sentences.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.DeleteAdaptiveMtFile
   */
  deleteAdaptiveMtFile: {
    methodKind: "unary";
    input: typeof DeleteAdaptiveMtFileRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Imports an AdaptiveMtFile and adds all of its sentences into the
   * AdaptiveMtDataset.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ImportAdaptiveMtFile
   */
  importAdaptiveMtFile: {
    methodKind: "unary";
    input: typeof ImportAdaptiveMtFileRequestSchema;
    output: typeof ImportAdaptiveMtFileResponseSchema;
  },
  /**
   * Lists all AdaptiveMtFiles associated to an AdaptiveMtDataset.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ListAdaptiveMtFiles
   */
  listAdaptiveMtFiles: {
    methodKind: "unary";
    input: typeof ListAdaptiveMtFilesRequestSchema;
    output: typeof ListAdaptiveMtFilesResponseSchema;
  },
  /**
   * Lists all AdaptiveMtSentences under a given file/dataset.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ListAdaptiveMtSentences
   */
  listAdaptiveMtSentences: {
    methodKind: "unary";
    input: typeof ListAdaptiveMtSentencesRequestSchema;
    output: typeof ListAdaptiveMtSentencesResponseSchema;
  },
  /**
   * Import sentence pairs into translation Dataset.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ImportData
   */
  importData: {
    methodKind: "unary";
    input: typeof ImportDataRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Exports dataset's data to the provided output location.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ExportData
   */
  exportData: {
    methodKind: "unary";
    input: typeof ExportDataRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists sentence pairs in the dataset.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ListExamples
   */
  listExamples: {
    methodKind: "unary";
    input: typeof ListExamplesRequestSchema;
    output: typeof ListExamplesResponseSchema;
  },
  /**
   * Creates a Model.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.CreateModel
   */
  createModel: {
    methodKind: "unary";
    input: typeof CreateModelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists models.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.ListModels
   */
  listModels: {
    methodKind: "unary";
    input: typeof ListModelsRequestSchema;
    output: typeof ListModelsResponseSchema;
  },
  /**
   * Gets a model.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.GetModel
   */
  getModel: {
    methodKind: "unary";
    input: typeof GetModelRequestSchema;
    output: typeof ModelSchema;
  },
  /**
   * Deletes a model.
   *
   * @generated from rpc google.cloud.translation.v3.TranslationService.DeleteModel
   */
  deleteModel: {
    methodKind: "unary";
    input: typeof DeleteModelRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_translate_v3_translation_service, 0);

