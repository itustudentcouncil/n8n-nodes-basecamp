// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/healthcare/logging/fhir.proto (package google.cloud.healthcare.logging, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/healthcare/logging/fhir.proto.
 */
export const file_google_cloud_healthcare_logging_fhir: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvY2xvdWQvaGVhbHRoY2FyZS9sb2dnaW5nL2ZoaXIucHJvdG8SH2dvb2dsZS5jbG91ZC5oZWFsdGhjYXJlLmxvZ2dpbmciXAoSSW1wb3J0RmhpckxvZ0VudHJ5Eg4KBnNvdXJjZRgBIAEoCRITCgtyZXNvdXJjZV9pZBgCIAEoCRIhCgVlcnJvchgDIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzImMKEkV4cG9ydEZoaXJMb2dFbnRyeRITCgtkZXN0aW5hdGlvbhgBIAEoCRIVCg1yZXNvdXJjZV9uYW1lGAMgASgJEiEKBWVycm9yGAQgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMiVQobRmhpckNvbmZpZ3VyZVNlYXJjaExvZ0VudHJ5EhMKC3Jlc291cmNlX2lkGAEgASgJEiEKBWVycm9yGAIgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMiagoYRmhpck5vdGlmaWNhdGlvbkxvZ0VudHJ5EhUKDXJlc291cmNlX25hbWUYASABKAkSFAoMcHVic3ViX3RvcGljGAIgASgJEiEKBWVycm9yGAMgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMiYwoSRmhpclN0cmVhbUxvZ0VudHJ5EhUKDXJlc291cmNlX25hbWUYASABKAkSEwoLZGVzdGluYXRpb24YAiABKAkSIQoFZXJyb3IYAyABKAsyEi5nb29nbGUucnBjLlN0YXR1cyJ0CiNGaGlyRGVpZGVudGlmeVN0cmVhbVRvU3RvcmVMb2dFbnRyeRIVCg1yZXNvdXJjZV9uYW1lGAEgASgJEhMKC2Rlc3RpbmF0aW9uGAIgASgJEiEKBWVycm9yGAMgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXNCYQojY29tLmdvb2dsZS5jbG91ZC5oZWFsdGhjYXJlLmxvZ2dpbmdaOmNsb3VkLmdvb2dsZS5jb20vZ28vaGVhbHRoY2FyZS9sb2dnaW5nL2xvZ2dpbmdwYjtsb2dnaW5ncGJiBnByb3RvMw", [file_google_rpc_status]);

/**
 * A log entry for a FHIR import long-running operation.
 *
 * @generated from message google.cloud.healthcare.logging.ImportFhirLogEntry
 */
export type ImportFhirLogEntry = Message<"google.cloud.healthcare.logging.ImportFhirLogEntry"> & {
  /**
   * The source in Cloud Storage (for example,
   * `gs://{bucket_id}/{path/to/file}`) or BigQuery (for example,
   * `bq://{projectId}.{bqDatasetId}`).
   *
   * @generated from field: string source = 1;
   */
  source: string;

  /**
   * The ID in the source file of the FHIR resource being imported.
   *
   * @generated from field: string resource_id = 2;
   */
  resourceId: string;

  /**
   * The error code and message.
   *
   * @generated from field: google.rpc.Status error = 3;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.healthcare.logging.ImportFhirLogEntry.
 * Use `create(ImportFhirLogEntrySchema)` to create a new message.
 */
export const ImportFhirLogEntrySchema: GenMessage<ImportFhirLogEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_healthcare_logging_fhir, 0);

/**
 * A log entry for a FHIR export long-running operation.
 *
 * @generated from message google.cloud.healthcare.logging.ExportFhirLogEntry
 */
export type ExportFhirLogEntry = Message<"google.cloud.healthcare.logging.ExportFhirLogEntry"> & {
  /**
   * The destination in Cloud Storage (for example,
   * `gs://{bucket_id}/{path/to/file}`) or BigQuery (for example,
   * `bq://{projectId}.{bqDatasetId}`).
   *
   * @generated from field: string destination = 1;
   */
  destination: string;

  /**
   * The resource being exported (e.g.
   * `projects/{projectId}/locations/{locationId}/datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Patient/{patientId}`).
   *
   * @generated from field: string resource_name = 3;
   */
  resourceName: string;

  /**
   * The error code and message.
   *
   * @generated from field: google.rpc.Status error = 4;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.healthcare.logging.ExportFhirLogEntry.
 * Use `create(ExportFhirLogEntrySchema)` to create a new message.
 */
export const ExportFhirLogEntrySchema: GenMessage<ExportFhirLogEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_healthcare_logging_fhir, 1);

/**
 * A log entry for a FHIR configure search long-running operation
 *
 * @generated from message google.cloud.healthcare.logging.FhirConfigureSearchLogEntry
 */
export type FhirConfigureSearchLogEntry = Message<"google.cloud.healthcare.logging.FhirConfigureSearchLogEntry"> & {
  /**
   * The ID of the resource being reindexed.
   *
   * @generated from field: string resource_id = 1;
   */
  resourceId: string;

  /**
   * The error code and message.
   *
   * @generated from field: google.rpc.Status error = 2;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.healthcare.logging.FhirConfigureSearchLogEntry.
 * Use `create(FhirConfigureSearchLogEntrySchema)` to create a new message.
 */
export const FhirConfigureSearchLogEntrySchema: GenMessage<FhirConfigureSearchLogEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_healthcare_logging_fhir, 2);

/**
 * A log entry for a FHIR store Pub/Sub notification.
 *
 * @generated from message google.cloud.healthcare.logging.FhirNotificationLogEntry
 */
export type FhirNotificationLogEntry = Message<"google.cloud.healthcare.logging.FhirNotificationLogEntry"> & {
  /**
   * The resource being changed (for example,
   * `projects/{projectId}/locations/{locationId}/datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Patient/{patientId}`).
   *
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * The Pub/Sub topic that the notification is published on.
   *
   * @generated from field: string pubsub_topic = 2;
   */
  pubsubTopic: string;

  /**
   * The error code and message.
   *
   * @generated from field: google.rpc.Status error = 3;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.healthcare.logging.FhirNotificationLogEntry.
 * Use `create(FhirNotificationLogEntrySchema)` to create a new message.
 */
export const FhirNotificationLogEntrySchema: GenMessage<FhirNotificationLogEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_healthcare_logging_fhir, 3);

/**
 * A log entry for a FHIR streaming export notification.
 *
 * @generated from message google.cloud.healthcare.logging.FhirStreamLogEntry
 */
export type FhirStreamLogEntry = Message<"google.cloud.healthcare.logging.FhirStreamLogEntry"> & {
  /**
   * The resource being changed (for example,
   * `projects/{projectId}/locations/{locationId}/datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Patient/{patientId}`).
   *
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * The destination in BigQuery (for example,
   * `bq://{projectId}.{bqDatasetId}.{bqTableId}`).
   *
   * @generated from field: string destination = 2;
   */
  destination: string;

  /**
   * The error code and message.
   *
   * @generated from field: google.rpc.Status error = 3;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.healthcare.logging.FhirStreamLogEntry.
 * Use `create(FhirStreamLogEntrySchema)` to create a new message.
 */
export const FhirStreamLogEntrySchema: GenMessage<FhirStreamLogEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_healthcare_logging_fhir, 4);

/**
 * A log entry for a FHIR streaming deidentification notification.
 *
 * @generated from message google.cloud.healthcare.logging.FhirDeidentifyStreamToStoreLogEntry
 */
export type FhirDeidentifyStreamToStoreLogEntry = Message<"google.cloud.healthcare.logging.FhirDeidentifyStreamToStoreLogEntry"> & {
  /**
   * The resource that changed (for example,
   * `projects/{projectId}/locations/{locationId}/datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Patient/{patientId}`).
   *
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * The destination FHIR store name. (for example,
   * `projects/{projectId}/locations/{locationId}/datasets/{datasetId}/fhirStores/{fhirStoreId}`).
   *
   * @generated from field: string destination = 2;
   */
  destination: string;

  /**
   * The error code and message.
   *
   * @generated from field: google.rpc.Status error = 3;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.healthcare.logging.FhirDeidentifyStreamToStoreLogEntry.
 * Use `create(FhirDeidentifyStreamToStoreLogEntrySchema)` to create a new message.
 */
export const FhirDeidentifyStreamToStoreLogEntrySchema: GenMessage<FhirDeidentifyStreamToStoreLogEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_healthcare_logging_fhir, 5);

