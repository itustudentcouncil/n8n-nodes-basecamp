// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/healthcare/logging/annotation.proto (package google.cloud.healthcare.logging, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/healthcare/logging/annotation.proto.
 */
export const file_google_cloud_healthcare_logging_annotation: GenFile = /*@__PURE__*/
  fileDesc("CjBnb29nbGUvY2xvdWQvaGVhbHRoY2FyZS9sb2dnaW5nL2Fubm90YXRpb24ucHJvdG8SH2dvb2dsZS5jbG91ZC5oZWFsdGhjYXJlLmxvZ2dpbmciTQoYSW1wb3J0QW5ub3RhdGlvbkxvZ0VudHJ5Eg4KBnNvdXJjZRgBIAEoCRIhCgVlcnJvchgCIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzImsKGEV4cG9ydEFubm90YXRpb25Mb2dFbnRyeRITCgtkZXN0aW5hdGlvbhgBIAEoCRIXCg9hbm5vdGF0aW9uX25hbWUYAiABKAkSIQoFZXJyb3IYAyABKAsyEi5nb29nbGUucnBjLlN0YXR1cyKSAQoaRXZhbHVhdGVBbm5vdGF0aW9uTG9nRW50cnkSEwoLZGVzdGluYXRpb24YASABKAkSHAoUZXZhbF9hbm5vdGF0aW9uX25hbWUYAiABKAkSHgoWZ29sZGVuX2Fubm90YXRpb25fbmFtZRgDIAEoCRIhCgVlcnJvchgEIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzQmEKI2NvbS5nb29nbGUuY2xvdWQuaGVhbHRoY2FyZS5sb2dnaW5nWjpjbG91ZC5nb29nbGUuY29tL2dvL2hlYWx0aGNhcmUvbG9nZ2luZy9sb2dnaW5ncGI7bG9nZ2luZ3BiYgZwcm90bzM", [file_google_rpc_status]);

/**
 * A log entry for an Annotation import long-running operation.
 *
 * @generated from message google.cloud.healthcare.logging.ImportAnnotationLogEntry
 */
export type ImportAnnotationLogEntry = Message<"google.cloud.healthcare.logging.ImportAnnotationLogEntry"> & {
  /**
   * The source in Cloud Storage. For example,
   * `gs://{bucket_id}/{path/to/file}`.
   *
   * @generated from field: string source = 1;
   */
  source: string;

  /**
   * The error code and message.
   *
   * @generated from field: google.rpc.Status error = 2;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.healthcare.logging.ImportAnnotationLogEntry.
 * Use `create(ImportAnnotationLogEntrySchema)` to create a new message.
 */
export const ImportAnnotationLogEntrySchema: GenMessage<ImportAnnotationLogEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_healthcare_logging_annotation, 0);

/**
 * A log entry for an Annotation export long-running operation.
 *
 * @generated from message google.cloud.healthcare.logging.ExportAnnotationLogEntry
 */
export type ExportAnnotationLogEntry = Message<"google.cloud.healthcare.logging.ExportAnnotationLogEntry"> & {
  /**
   * The destination in Cloud Storage or BigQuery.
   *
   * @generated from field: string destination = 1;
   */
  destination: string;

  /**
   * The annotation record being exported. For example:
   * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{store_id}/annotations/{annotation_id}`.
   *
   * @generated from field: string annotation_name = 2;
   */
  annotationName: string;

  /**
   * The error code and message.
   *
   * @generated from field: google.rpc.Status error = 3;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.healthcare.logging.ExportAnnotationLogEntry.
 * Use `create(ExportAnnotationLogEntrySchema)` to create a new message.
 */
export const ExportAnnotationLogEntrySchema: GenMessage<ExportAnnotationLogEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_healthcare_logging_annotation, 1);

/**
 * A log entry for an Annotation evaluate long-running operation.
 *
 * @generated from message google.cloud.healthcare.logging.EvaluateAnnotationLogEntry
 */
export type EvaluateAnnotationLogEntry = Message<"google.cloud.healthcare.logging.EvaluateAnnotationLogEntry"> & {
  /**
   * The report destination in BigQuery.
   *
   * @generated from field: string destination = 1;
   */
  destination: string;

  /**
   * The eval annotation record being evaluated. For example:
   * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{eval_store_id}/annotations/{eval_annotation_id}`.
   *
   * @generated from field: string eval_annotation_name = 2;
   */
  evalAnnotationName: string;

  /**
   * The golden annotation record being evaluated. For example:
   * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{golden_store_id}/annotations/{golden_annotation_id}`.
   *
   * @generated from field: string golden_annotation_name = 3;
   */
  goldenAnnotationName: string;

  /**
   * The error code and message.
   *
   * @generated from field: google.rpc.Status error = 4;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.healthcare.logging.EvaluateAnnotationLogEntry.
 * Use `create(EvaluateAnnotationLogEntrySchema)` to create a new message.
 */
export const EvaluateAnnotationLogEntrySchema: GenMessage<EvaluateAnnotationLogEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_healthcare_logging_annotation, 2);

