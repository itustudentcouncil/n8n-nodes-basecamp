// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/functions/v2beta/functions.proto (package google.cloud.functions.v2beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Any, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Date } from "../../../type/date_pb";
import { file_google_type_date } from "../../../type/date_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/functions/v2beta/functions.proto.
 */
export const file_google_cloud_functions_v2beta_functions: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_any, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_type_date]);

/**
 * Describes a Cloud Function that contains user computation executed in
 * response to an event. It encapsulates function and trigger configurations.
 *
 * @generated from message google.cloud.functions.v2beta.Function
 */
export type Function = Message<"google.cloud.functions.v2beta.Function"> & {
  /**
   * A user-defined name of the function. Function names must be unique
   * globally and match pattern `projects/*\/locations/*\/functions/*`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * User-provided description of a function.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Describes the Build step of the function that builds a container from the
   * given source.
   *
   * @generated from field: google.cloud.functions.v2beta.BuildConfig build_config = 3;
   */
  buildConfig?: BuildConfig;

  /**
   * Describes the Service being deployed. Currently deploys services to Cloud
   * Run (fully managed).
   *
   * @generated from field: google.cloud.functions.v2beta.ServiceConfig service_config = 4;
   */
  serviceConfig?: ServiceConfig;

  /**
   * An Eventarc trigger managed by Google Cloud Functions that fires events in
   * response to a condition in another service.
   *
   * @generated from field: google.cloud.functions.v2beta.EventTrigger event_trigger = 5;
   */
  eventTrigger?: EventTrigger;

  /**
   * Output only. State of the function.
   *
   * @generated from field: google.cloud.functions.v2beta.Function.State state = 6;
   */
  state: Function_State;

  /**
   * Output only. The last update timestamp of a Cloud Function.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 7;
   */
  updateTime?: Timestamp;

  /**
   * Labels associated with this Cloud Function.
   *
   * @generated from field: map<string, string> labels = 8;
   */
  labels: { [key: string]: string };

  /**
   * Output only. State Messages for this Cloud Function.
   *
   * @generated from field: repeated google.cloud.functions.v2beta.StateMessage state_messages = 9;
   */
  stateMessages: StateMessage[];

  /**
   * Describe whether the function is 1st Gen or 2nd Gen.
   *
   * @generated from field: google.cloud.functions.v2beta.Environment environment = 10;
   */
  environment: Environment;

  /**
   * Output only. The deployed url for the function.
   *
   * @generated from field: string url = 14;
   */
  url: string;

  /**
   * [Preview] Resource name of a KMS crypto key (managed by the user) used to
   * encrypt/decrypt function resources.
   *
   * It must match the pattern
   * `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
   *
   * @generated from field: string kms_key_name = 25;
   */
  kmsKeyName: string;

  /**
   * Output only. Reserved for future use.
   *
   * @generated from field: bool satisfies_pzs = 27;
   */
  satisfiesPzs: boolean;

  /**
   * Output only. The create timestamp of a Cloud Function. This is only
   * applicable to 2nd Gen functions.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 28;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message google.cloud.functions.v2beta.Function.
 * Use `create(FunctionSchema)` to create a new message.
 */
export const FunctionSchema: GenMessage<Function> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 0);

/**
 * Describes the current state of the function.
 *
 * @generated from enum google.cloud.functions.v2beta.Function.State
 */
export enum Function_State {
  /**
   * Not specified. Invalid state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Function has been successfully deployed and is serving.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * Function deployment failed and the function is not serving.
   *
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,

  /**
   * Function is being created or updated.
   *
   * @generated from enum value: DEPLOYING = 3;
   */
  DEPLOYING = 3,

  /**
   * Function is being deleted.
   *
   * @generated from enum value: DELETING = 4;
   */
  DELETING = 4,

  /**
   * Function deployment failed and the function serving state is undefined.
   * The function should be updated or deleted to move it out of this state.
   *
   * @generated from enum value: UNKNOWN = 5;
   */
  UNKNOWN = 5,
}

/**
 * Describes the enum google.cloud.functions.v2beta.Function.State.
 */
export const Function_StateSchema: GenEnum<Function_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 0, 0);

/**
 * Informational messages about the state of the Cloud Function or Operation.
 *
 * @generated from message google.cloud.functions.v2beta.StateMessage
 */
export type StateMessage = Message<"google.cloud.functions.v2beta.StateMessage"> & {
  /**
   * Severity of the state message.
   *
   * @generated from field: google.cloud.functions.v2beta.StateMessage.Severity severity = 1;
   */
  severity: StateMessage_Severity;

  /**
   * One-word CamelCase type of the state message.
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * The message.
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.StateMessage.
 * Use `create(StateMessageSchema)` to create a new message.
 */
export const StateMessageSchema: GenMessage<StateMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 1);

/**
 * Severity of the state message.
 *
 * @generated from enum google.cloud.functions.v2beta.StateMessage.Severity
 */
export enum StateMessage_Severity {
  /**
   * Not specified. Invalid severity.
   *
   * @generated from enum value: SEVERITY_UNSPECIFIED = 0;
   */
  SEVERITY_UNSPECIFIED = 0,

  /**
   * ERROR-level severity.
   *
   * @generated from enum value: ERROR = 1;
   */
  ERROR = 1,

  /**
   * WARNING-level severity.
   *
   * @generated from enum value: WARNING = 2;
   */
  WARNING = 2,

  /**
   * INFO-level severity.
   *
   * @generated from enum value: INFO = 3;
   */
  INFO = 3,
}

/**
 * Describes the enum google.cloud.functions.v2beta.StateMessage.Severity.
 */
export const StateMessage_SeveritySchema: GenEnum<StateMessage_Severity> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 1, 0);

/**
 * Location of the source in an archive file in Google Cloud Storage.
 *
 * @generated from message google.cloud.functions.v2beta.StorageSource
 */
export type StorageSource = Message<"google.cloud.functions.v2beta.StorageSource"> & {
  /**
   * Google Cloud Storage bucket containing the source (see
   * [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   *
   * @generated from field: string bucket = 1;
   */
  bucket: string;

  /**
   * Google Cloud Storage object containing the source.
   *
   * This object must be a gzipped archive file (`.tar.gz`) containing source to
   * build.
   *
   * @generated from field: string object = 2;
   */
  object: string;

  /**
   * Google Cloud Storage generation for the object. If the generation is
   * omitted, the latest generation will be used.
   *
   * @generated from field: int64 generation = 3;
   */
  generation: bigint;

  /**
   * When the specified storage bucket is a 1st gen function uploard url bucket,
   * this field should be set as the generated upload url for 1st gen
   * deployment.
   *
   * @generated from field: string source_upload_url = 4;
   */
  sourceUploadUrl: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.StorageSource.
 * Use `create(StorageSourceSchema)` to create a new message.
 */
export const StorageSourceSchema: GenMessage<StorageSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 2);

/**
 * Location of the source in a Google Cloud Source Repository.
 *
 * @generated from message google.cloud.functions.v2beta.RepoSource
 */
export type RepoSource = Message<"google.cloud.functions.v2beta.RepoSource"> & {
  /**
   * A revision within the Cloud Source Repository must be specified in
   * one of these ways.
   *
   * @generated from oneof google.cloud.functions.v2beta.RepoSource.revision
   */
  revision: {
    /**
     * Regex matching branches to build.
     *
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     *
     * @generated from field: string branch_name = 3;
     */
    value: string;
    case: "branchName";
  } | {
    /**
     * Regex matching tags to build.
     *
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     *
     * @generated from field: string tag_name = 4;
     */
    value: string;
    case: "tagName";
  } | {
    /**
     * Explicit commit SHA to build.
     *
     * @generated from field: string commit_sha = 5;
     */
    value: string;
    case: "commitSha";
  } | { case: undefined; value?: undefined };

  /**
   * ID of the project that owns the Cloud Source Repository. If omitted, the
   * project ID requesting the build is assumed.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Name of the Cloud Source Repository.
   *
   * @generated from field: string repo_name = 2;
   */
  repoName: string;

  /**
   * Directory, relative to the source root, in which to run the build.
   *
   * This must be a relative path. If a step's `dir` is specified and is an
   * absolute path, this value is ignored for that step's execution.
   * eg. helloworld (no leading slash allowed)
   *
   * @generated from field: string dir = 6;
   */
  dir: string;

  /**
   * Only trigger a build if the revision regex does NOT match the revision
   * regex.
   *
   * @generated from field: bool invert_regex = 7;
   */
  invertRegex: boolean;
};

/**
 * Describes the message google.cloud.functions.v2beta.RepoSource.
 * Use `create(RepoSourceSchema)` to create a new message.
 */
export const RepoSourceSchema: GenMessage<RepoSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 3);

/**
 * The location of the function source code.
 *
 * @generated from message google.cloud.functions.v2beta.Source
 */
export type Source = Message<"google.cloud.functions.v2beta.Source"> & {
  /**
   * Location of the source.
   * At least one source needs to be provided for the deployment to succeed.
   *
   * @generated from oneof google.cloud.functions.v2beta.Source.source
   */
  source: {
    /**
     * If provided, get the source from this location in Google Cloud Storage.
     *
     * @generated from field: google.cloud.functions.v2beta.StorageSource storage_source = 1;
     */
    value: StorageSource;
    case: "storageSource";
  } | {
    /**
     * If provided, get the source from this location in a Cloud Source
     * Repository.
     *
     * @generated from field: google.cloud.functions.v2beta.RepoSource repo_source = 2;
     */
    value: RepoSource;
    case: "repoSource";
  } | {
    /**
     * If provided, get the source from GitHub repository. This option is valid
     * only for GCF 1st Gen function.
     * Example: https://github.com/<user>/<repo>/blob/<commit>/<path-to-code>
     *
     * @generated from field: string git_uri = 3;
     */
    value: string;
    case: "gitUri";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.functions.v2beta.Source.
 * Use `create(SourceSchema)` to create a new message.
 */
export const SourceSchema: GenMessage<Source> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 4);

/**
 * Provenance of the source. Ways to find the original source, or verify that
 * some source was used for this build.
 *
 * @generated from message google.cloud.functions.v2beta.SourceProvenance
 */
export type SourceProvenance = Message<"google.cloud.functions.v2beta.SourceProvenance"> & {
  /**
   * A copy of the build's `source.storage_source`, if exists, with any
   * generations resolved.
   *
   * @generated from field: google.cloud.functions.v2beta.StorageSource resolved_storage_source = 1;
   */
  resolvedStorageSource?: StorageSource;

  /**
   * A copy of the build's `source.repo_source`, if exists, with any
   * revisions resolved.
   *
   * @generated from field: google.cloud.functions.v2beta.RepoSource resolved_repo_source = 2;
   */
  resolvedRepoSource?: RepoSource;

  /**
   * A copy of the build's `source.git_uri`, if exists, with any commits
   * resolved.
   *
   * @generated from field: string git_uri = 3;
   */
  gitUri: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.SourceProvenance.
 * Use `create(SourceProvenanceSchema)` to create a new message.
 */
export const SourceProvenanceSchema: GenMessage<SourceProvenance> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 5);

/**
 * Describes the Build step of the function that builds a container from the
 * given source.
 *
 * @generated from message google.cloud.functions.v2beta.BuildConfig
 */
export type BuildConfig = Message<"google.cloud.functions.v2beta.BuildConfig"> & {
  /**
   * This controls when security patches are applied to the runtime environment.
   *
   * @generated from oneof google.cloud.functions.v2beta.BuildConfig.runtime_update_policy
   */
  runtimeUpdatePolicy: {
    /**
     * @generated from field: google.cloud.functions.v2beta.AutomaticUpdatePolicy automatic_update_policy = 40;
     */
    value: AutomaticUpdatePolicy;
    case: "automaticUpdatePolicy";
  } | {
    /**
     * @generated from field: google.cloud.functions.v2beta.OnDeployUpdatePolicy on_deploy_update_policy = 41;
     */
    value: OnDeployUpdatePolicy;
    case: "onDeployUpdatePolicy";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The Cloud Build name of the latest successful deployment of
   * the function.
   *
   * @generated from field: string build = 1;
   */
  build: string;

  /**
   * The runtime in which to run the function. Required when deploying a new
   * function, optional when updating an existing function. For a complete
   * list of possible choices, see the
   * [`gcloud` command
   * reference](https://cloud.google.com/sdk/gcloud/reference/functions/deploy#--runtime).
   *
   * @generated from field: string runtime = 2;
   */
  runtime: string;

  /**
   * The name of the function (as defined in source code) that will be
   * executed. Defaults to the resource name suffix, if not specified. For
   * backward compatibility, if function with given name is not found, then the
   * system will try to use function named "function".
   * For Node.js this is name of a function exported by the module specified
   * in `source_location`.
   *
   * @generated from field: string entry_point = 3;
   */
  entryPoint: string;

  /**
   * The location of the function source code.
   *
   * @generated from field: google.cloud.functions.v2beta.Source source = 4;
   */
  source?: Source;

  /**
   * Output only. A permanent fixed identifier for source.
   *
   * @generated from field: google.cloud.functions.v2beta.SourceProvenance source_provenance = 8;
   */
  sourceProvenance?: SourceProvenance;

  /**
   * Name of the Cloud Build Custom Worker Pool that should be used to build the
   * function. The format of this field is
   * `projects/{project}/locations/{region}/workerPools/{workerPool}` where
   * {project} and {region} are the project id and region respectively where the
   * worker pool is defined and {workerPool} is the short name of the worker
   * pool.
   *
   * If the project id is not the same as the function, then the Cloud
   * Functions Service Agent
   * (service-<project_number>@gcf-admin-robot.iam.gserviceaccount.com) must be
   * granted the role Cloud Build Custom Workers Builder
   * (roles/cloudbuild.customworkers.builder) in the project.
   *
   * @generated from field: string worker_pool = 5;
   */
  workerPool: string;

  /**
   * User-provided build-time environment variables for the function
   *
   * @generated from field: map<string, string> environment_variables = 6;
   */
  environmentVariables: { [key: string]: string };

  /**
   * Docker Registry to use for this deployment. This configuration is only
   * applicable to 1st Gen functions, 2nd Gen functions can only use Artifact
   * Registry.
   *
   * If unspecified, it defaults to `ARTIFACT_REGISTRY`.
   * If `docker_repository` field is specified, this field should either be left
   * unspecified or set to `ARTIFACT_REGISTRY`.
   *
   * @generated from field: google.cloud.functions.v2beta.BuildConfig.DockerRegistry docker_registry = 10;
   */
  dockerRegistry: BuildConfig_DockerRegistry;

  /**
   * Repository in Artifact Registry to which the function docker image will be
   * pushed after it is built by Cloud Build. If specified by user, it is
   * created and managed by user with a customer managed encryption key.
   * Otherwise, GCF will create and use a repository named 'gcf-artifacts'
   * for every deployed region.
   *
   * It must match the pattern
   * `projects/{project}/locations/{location}/repositories/{repository}`.
   *
   * Cross-project repositories are not supported.
   * Cross-location repositories are not supported.
   * Repository format must be 'DOCKER'.
   *
   * @generated from field: string docker_repository = 7;
   */
  dockerRepository: string;

  /**
   * Service account to be used for building the container. The format of this
   * field is `projects/{projectId}/serviceAccounts/{serviceAccountEmail}`.
   *
   * @generated from field: string service_account = 27;
   */
  serviceAccount: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.BuildConfig.
 * Use `create(BuildConfigSchema)` to create a new message.
 */
export const BuildConfigSchema: GenMessage<BuildConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 6);

/**
 * Docker Registry to use for storing function Docker images.
 *
 * @generated from enum google.cloud.functions.v2beta.BuildConfig.DockerRegistry
 */
export enum BuildConfig_DockerRegistry {
  /**
   * Unspecified.
   *
   * @generated from enum value: DOCKER_REGISTRY_UNSPECIFIED = 0;
   */
  DOCKER_REGISTRY_UNSPECIFIED = 0,

  /**
   * Docker images will be stored in multi-regional Container Registry
   * repositories named `gcf`.
   *
   * @generated from enum value: CONTAINER_REGISTRY = 1;
   */
  CONTAINER_REGISTRY = 1,

  /**
   * Docker images will be stored in regional Artifact Registry repositories.
   * By default, GCF will create and use repositories named `gcf-artifacts`
   * in every region in which a function is deployed. But the repository to
   * use can also be specified by the user using the `docker_repository`
   * field.
   *
   * @generated from enum value: ARTIFACT_REGISTRY = 2;
   */
  ARTIFACT_REGISTRY = 2,
}

/**
 * Describes the enum google.cloud.functions.v2beta.BuildConfig.DockerRegistry.
 */
export const BuildConfig_DockerRegistrySchema: GenEnum<BuildConfig_DockerRegistry> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 6, 0);

/**
 * Describes the Service being deployed.
 * Currently Supported : Cloud Run (fully managed).
 *
 * @generated from message google.cloud.functions.v2beta.ServiceConfig
 */
export type ServiceConfig = Message<"google.cloud.functions.v2beta.ServiceConfig"> & {
  /**
   * Output only. Name of the service associated with a Function.
   * The format of this field is
   * `projects/{project}/locations/{region}/services/{service}`
   *
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * The function execution timeout. Execution is considered failed and
   * can be terminated if the function is not completed at the end of the
   * timeout period. Defaults to 60 seconds.
   *
   * @generated from field: int32 timeout_seconds = 2;
   */
  timeoutSeconds: number;

  /**
   * The amount of memory available for a function.
   * Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is
   * supplied the value is interpreted as bytes.
   * See
   * https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
   * a full description.
   *
   * @generated from field: string available_memory = 13;
   */
  availableMemory: string;

  /**
   * The number of CPUs used in a single container instance.
   * Default value is calculated from available memory.
   * Supports the same values as Cloud Run, see
   * https://cloud.google.com/run/docs/reference/rest/v1/Container#resourcerequirements
   * Example: "1" indicates 1 vCPU
   *
   * @generated from field: string available_cpu = 22;
   */
  availableCpu: string;

  /**
   * Environment variables that shall be available during function execution.
   *
   * @generated from field: map<string, string> environment_variables = 4;
   */
  environmentVariables: { [key: string]: string };

  /**
   * The limit on the maximum number of function instances that may coexist at a
   * given time.
   *
   * In some cases, such as rapid traffic surges, Cloud Functions may, for a
   * short period of time, create more instances than the specified max
   * instances limit. If your function cannot tolerate this temporary behavior,
   * you may want to factor in a safety margin and set a lower max instances
   * value than your function can tolerate.
   *
   * See the [Max
   * Instances](https://cloud.google.com/functions/docs/max-instances) Guide for
   * more details.
   *
   * @generated from field: int32 max_instance_count = 5;
   */
  maxInstanceCount: number;

  /**
   * The limit on the minimum number of function instances that may coexist at a
   * given time.
   *
   * Function instances are kept in idle state for a short period after they
   * finished executing the request to reduce cold start time for subsequent
   * requests. Setting a minimum instance count will ensure that the given
   * number of instances are kept running in idle state always. This can help
   * with cold start times when jump in incoming request count occurs after the
   * idle instance would have been stopped in the default case.
   *
   * @generated from field: int32 min_instance_count = 12;
   */
  minInstanceCount: number;

  /**
   * The Serverless VPC Access connector that this cloud function can connect
   * to. The format of this field is `projects/*\/locations/*\/connectors/*`.
   *
   * @generated from field: string vpc_connector = 6;
   */
  vpcConnector: string;

  /**
   * The egress settings for the connector, controlling what traffic is diverted
   * through it.
   *
   * @generated from field: google.cloud.functions.v2beta.ServiceConfig.VpcConnectorEgressSettings vpc_connector_egress_settings = 7;
   */
  vpcConnectorEgressSettings: ServiceConfig_VpcConnectorEgressSettings;

  /**
   * The ingress settings for the function, controlling what traffic can reach
   * it.
   *
   * @generated from field: google.cloud.functions.v2beta.ServiceConfig.IngressSettings ingress_settings = 8;
   */
  ingressSettings: ServiceConfig_IngressSettings;

  /**
   * Output only. URI of the Service deployed.
   *
   * @generated from field: string uri = 9;
   */
  uri: string;

  /**
   * The email of the service's service account. If empty, defaults to
   * `{project_number}-compute@developer.gserviceaccount.com`.
   *
   * @generated from field: string service_account_email = 10;
   */
  serviceAccountEmail: string;

  /**
   * Whether 100% of traffic is routed to the latest revision.
   * On CreateFunction and UpdateFunction, when set to true, the revision being
   * deployed will serve 100% of traffic, ignoring any traffic split settings,
   * if any. On GetFunction, true will be returned if the latest revision is
   * serving 100% of traffic.
   *
   * @generated from field: bool all_traffic_on_latest_revision = 16;
   */
  allTrafficOnLatestRevision: boolean;

  /**
   * Secret environment variables configuration.
   *
   * @generated from field: repeated google.cloud.functions.v2beta.SecretEnvVar secret_environment_variables = 17;
   */
  secretEnvironmentVariables: SecretEnvVar[];

  /**
   * Secret volumes configuration.
   *
   * @generated from field: repeated google.cloud.functions.v2beta.SecretVolume secret_volumes = 19;
   */
  secretVolumes: SecretVolume[];

  /**
   * Output only. The name of service revision.
   *
   * @generated from field: string revision = 18;
   */
  revision: string;

  /**
   * Sets the maximum number of concurrent requests that each instance
   * can receive. Defaults to 1.
   *
   * @generated from field: int32 max_instance_request_concurrency = 20;
   */
  maxInstanceRequestConcurrency: number;

  /**
   * Security level configure whether the function only accepts https.
   * This configuration is only applicable to 1st Gen functions with Http
   * trigger. By default https is optional for 1st Gen functions; 2nd Gen
   * functions are https ONLY.
   *
   * @generated from field: google.cloud.functions.v2beta.ServiceConfig.SecurityLevel security_level = 21;
   */
  securityLevel: ServiceConfig_SecurityLevel;

  /**
   * Optional. The binary authorization policy to be checked when deploying the
   * Cloud Run service.
   *
   * @generated from field: string binary_authorization_policy = 23;
   */
  binaryAuthorizationPolicy: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.ServiceConfig.
 * Use `create(ServiceConfigSchema)` to create a new message.
 */
export const ServiceConfigSchema: GenMessage<ServiceConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 7);

/**
 * Available egress settings.
 *
 * This controls what traffic is diverted through the VPC Access Connector
 * resource. By default PRIVATE_RANGES_ONLY will be used.
 *
 * @generated from enum google.cloud.functions.v2beta.ServiceConfig.VpcConnectorEgressSettings
 */
export enum ServiceConfig_VpcConnectorEgressSettings {
  /**
   * Unspecified.
   *
   * @generated from enum value: VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED = 0;
   */
  VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED = 0,

  /**
   * Use the VPC Access Connector only for private IP space from RFC1918.
   *
   * @generated from enum value: PRIVATE_RANGES_ONLY = 1;
   */
  PRIVATE_RANGES_ONLY = 1,

  /**
   * Force the use of VPC Access Connector for all egress traffic from the
   * function.
   *
   * @generated from enum value: ALL_TRAFFIC = 2;
   */
  ALL_TRAFFIC = 2,
}

/**
 * Describes the enum google.cloud.functions.v2beta.ServiceConfig.VpcConnectorEgressSettings.
 */
export const ServiceConfig_VpcConnectorEgressSettingsSchema: GenEnum<ServiceConfig_VpcConnectorEgressSettings> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 7, 0);

/**
 * Available ingress settings.
 *
 * This controls what traffic can reach the function.
 *
 * If unspecified, ALLOW_ALL will be used.
 *
 * @generated from enum google.cloud.functions.v2beta.ServiceConfig.IngressSettings
 */
export enum ServiceConfig_IngressSettings {
  /**
   * Unspecified.
   *
   * @generated from enum value: INGRESS_SETTINGS_UNSPECIFIED = 0;
   */
  INGRESS_SETTINGS_UNSPECIFIED = 0,

  /**
   * Allow HTTP traffic from public and private sources.
   *
   * @generated from enum value: ALLOW_ALL = 1;
   */
  ALLOW_ALL = 1,

  /**
   * Allow HTTP traffic from only private VPC sources.
   *
   * @generated from enum value: ALLOW_INTERNAL_ONLY = 2;
   */
  ALLOW_INTERNAL_ONLY = 2,

  /**
   * Allow HTTP traffic from private VPC sources and through GCLB.
   *
   * @generated from enum value: ALLOW_INTERNAL_AND_GCLB = 3;
   */
  ALLOW_INTERNAL_AND_GCLB = 3,
}

/**
 * Describes the enum google.cloud.functions.v2beta.ServiceConfig.IngressSettings.
 */
export const ServiceConfig_IngressSettingsSchema: GenEnum<ServiceConfig_IngressSettings> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 7, 1);

/**
 * Available security level settings.
 *
 * This enforces security protocol on function URL.
 *
 * Security level is only configurable for 1st Gen functions, If unspecified,
 * SECURE_OPTIONAL will be used. 2nd Gen functions are SECURE_ALWAYS ONLY.
 *
 * @generated from enum google.cloud.functions.v2beta.ServiceConfig.SecurityLevel
 */
export enum ServiceConfig_SecurityLevel {
  /**
   * Unspecified.
   *
   * @generated from enum value: SECURITY_LEVEL_UNSPECIFIED = 0;
   */
  SECURITY_LEVEL_UNSPECIFIED = 0,

  /**
   * Requests for a URL that match this handler that do not use HTTPS are
   * automatically redirected to the HTTPS URL with the same path. Query
   * parameters are reserved for the redirect.
   *
   * @generated from enum value: SECURE_ALWAYS = 1;
   */
  SECURE_ALWAYS = 1,

  /**
   * Both HTTP and HTTPS requests with URLs that match the handler succeed
   * without redirects. The application can examine the request to determine
   * which protocol was used and respond accordingly.
   *
   * @generated from enum value: SECURE_OPTIONAL = 2;
   */
  SECURE_OPTIONAL = 2,
}

/**
 * Describes the enum google.cloud.functions.v2beta.ServiceConfig.SecurityLevel.
 */
export const ServiceConfig_SecurityLevelSchema: GenEnum<ServiceConfig_SecurityLevel> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 7, 2);

/**
 * Configuration for a secret environment variable. It has the information
 * necessary to fetch the secret value from secret manager and expose it as an
 * environment variable.
 *
 * @generated from message google.cloud.functions.v2beta.SecretEnvVar
 */
export type SecretEnvVar = Message<"google.cloud.functions.v2beta.SecretEnvVar"> & {
  /**
   * Name of the environment variable.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Project identifier (preferably project number but can also be the
   * project ID) of the project that contains the secret. If not set, it is
   * assumed that the secret is in the same project as the function.
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * Name of the secret in secret manager (not the full resource name).
   *
   * @generated from field: string secret = 3;
   */
  secret: string;

  /**
   * Version of the secret (version number or the string 'latest'). It is
   * recommended to use a numeric version for secret environment variables as
   * any updates to the secret value is not reflected until new instances
   * start.
   *
   * @generated from field: string version = 4;
   */
  version: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.SecretEnvVar.
 * Use `create(SecretEnvVarSchema)` to create a new message.
 */
export const SecretEnvVarSchema: GenMessage<SecretEnvVar> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 8);

/**
 * Configuration for a secret volume. It has the information necessary to fetch
 * the secret value from secret manager and make it available as files mounted
 * at the requested paths within the application container.
 *
 * @generated from message google.cloud.functions.v2beta.SecretVolume
 */
export type SecretVolume = Message<"google.cloud.functions.v2beta.SecretVolume"> & {
  /**
   * The path within the container to mount the secret volume. For example,
   * setting the mount_path as `/etc/secrets` would mount the secret value files
   * under the `/etc/secrets` directory. This directory will also be completely
   * shadowed and unavailable to mount any other secrets.
   * Recommended mount path: /etc/secrets
   *
   * @generated from field: string mount_path = 1;
   */
  mountPath: string;

  /**
   * Project identifier (preferably project number but can also be the project
   * ID) of the project that contains the secret. If not set, it is
   * assumed that the secret is in the same project as the function.
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * Name of the secret in secret manager (not the full resource name).
   *
   * @generated from field: string secret = 3;
   */
  secret: string;

  /**
   * List of secret versions to mount for this secret. If empty, the `latest`
   * version of the secret will be made available in a file named after the
   * secret under the mount point.
   *
   * @generated from field: repeated google.cloud.functions.v2beta.SecretVolume.SecretVersion versions = 4;
   */
  versions: SecretVolume_SecretVersion[];
};

/**
 * Describes the message google.cloud.functions.v2beta.SecretVolume.
 * Use `create(SecretVolumeSchema)` to create a new message.
 */
export const SecretVolumeSchema: GenMessage<SecretVolume> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 9);

/**
 * Configuration for a single version.
 *
 * @generated from message google.cloud.functions.v2beta.SecretVolume.SecretVersion
 */
export type SecretVolume_SecretVersion = Message<"google.cloud.functions.v2beta.SecretVolume.SecretVersion"> & {
  /**
   * Version of the secret (version number or the string 'latest'). It is
   * preferable to use `latest` version with secret volumes as secret value
   * changes are reflected immediately.
   *
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * Relative path of the file under the mount path where the secret value for
   * this version will be fetched and made available. For example, setting the
   * mount_path as '/etc/secrets' and path as `secret_foo` would mount the
   * secret value file at `/etc/secrets/secret_foo`.
   *
   * @generated from field: string path = 2;
   */
  path: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.SecretVolume.SecretVersion.
 * Use `create(SecretVolume_SecretVersionSchema)` to create a new message.
 */
export const SecretVolume_SecretVersionSchema: GenMessage<SecretVolume_SecretVersion> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 9, 0);

/**
 * Describes EventTrigger, used to request events to be sent from another
 * service.
 *
 * @generated from message google.cloud.functions.v2beta.EventTrigger
 */
export type EventTrigger = Message<"google.cloud.functions.v2beta.EventTrigger"> & {
  /**
   * Output only. The resource name of the Eventarc trigger. The format of this
   * field is `projects/{project}/locations/{region}/triggers/{trigger}`.
   *
   * @generated from field: string trigger = 1;
   */
  trigger: string;

  /**
   * The region that the trigger will be in. The trigger will only receive
   * events originating in this region. It can be the same
   * region as the function, a different region or multi-region, or the global
   * region. If not provided, defaults to the same region as the function.
   *
   * @generated from field: string trigger_region = 2;
   */
  triggerRegion: string;

  /**
   * Required. The type of event to observe. For example:
   * `google.cloud.audit.log.v1.written` or
   * `google.cloud.pubsub.topic.v1.messagePublished`.
   *
   * @generated from field: string event_type = 3;
   */
  eventType: string;

  /**
   * Criteria used to filter events.
   *
   * @generated from field: repeated google.cloud.functions.v2beta.EventFilter event_filters = 4;
   */
  eventFilters: EventFilter[];

  /**
   * Optional. The name of a Pub/Sub topic in the same project that will be used
   * as the transport topic for the event delivery. Format:
   * `projects/{project}/topics/{topic}`.
   *
   * This is only valid for events of type
   * `google.cloud.pubsub.topic.v1.messagePublished`. The topic provided here
   * will not be deleted at function deletion.
   *
   * @generated from field: string pubsub_topic = 5;
   */
  pubsubTopic: string;

  /**
   * Optional. The email of the trigger's service account. The service account
   * must have permission to invoke Cloud Run services, the permission is
   * `run.routes.invoke`.
   * If empty, defaults to the Compute Engine default service account:
   * `{project_number}-compute@developer.gserviceaccount.com`.
   *
   * @generated from field: string service_account_email = 6;
   */
  serviceAccountEmail: string;

  /**
   * Optional. If unset, then defaults to ignoring failures (i.e. not retrying
   * them).
   *
   * @generated from field: google.cloud.functions.v2beta.EventTrigger.RetryPolicy retry_policy = 7;
   */
  retryPolicy: EventTrigger_RetryPolicy;

  /**
   * Optional. The name of the channel associated with the trigger in
   * `projects/{project}/locations/{location}/channels/{channel}` format.
   * You must provide a channel to receive events from Eventarc SaaS partners.
   *
   * @generated from field: string channel = 8;
   */
  channel: string;

  /**
   * Optional. The hostname of the service that 1st Gen function should be
   * observed.
   *
   * If no string is provided, the default service implementing the API will
   * be used. For example, `storage.googleapis.com` is the default for all
   * event types in the `google.storage` namespace.
   *
   * The field is only applicable to 1st Gen functions.
   *
   * @generated from field: string service = 9;
   */
  service: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.EventTrigger.
 * Use `create(EventTriggerSchema)` to create a new message.
 */
export const EventTriggerSchema: GenMessage<EventTrigger> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 10);

/**
 * Describes the retry policy in case of function's execution failure.
 * Retried execution is charged as any other execution.
 *
 * @generated from enum google.cloud.functions.v2beta.EventTrigger.RetryPolicy
 */
export enum EventTrigger_RetryPolicy {
  /**
   * Not specified.
   *
   * @generated from enum value: RETRY_POLICY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Do not retry.
   *
   * @generated from enum value: RETRY_POLICY_DO_NOT_RETRY = 1;
   */
  DO_NOT_RETRY = 1,

  /**
   * Retry on any failure, retry up to 7 days with an exponential backoff
   * (capped at 10 seconds).
   *
   * @generated from enum value: RETRY_POLICY_RETRY = 2;
   */
  RETRY = 2,
}

/**
 * Describes the enum google.cloud.functions.v2beta.EventTrigger.RetryPolicy.
 */
export const EventTrigger_RetryPolicySchema: GenEnum<EventTrigger_RetryPolicy> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 10, 0);

/**
 * Filters events based on exact matches on the CloudEvents attributes.
 *
 * @generated from message google.cloud.functions.v2beta.EventFilter
 */
export type EventFilter = Message<"google.cloud.functions.v2beta.EventFilter"> & {
  /**
   * Required. The name of a CloudEvents attribute.
   *
   * @generated from field: string attribute = 1;
   */
  attribute: string;

  /**
   * Required. The value for the attribute.
   *
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * Optional. The operator used for matching the events with the value of the
   * filter. If not specified, only events that have an exact key-value pair
   * specified in the filter are matched. The only allowed value is
   * `match-path-pattern`.
   *
   * @generated from field: string operator = 3;
   */
  operator: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.EventFilter.
 * Use `create(EventFilterSchema)` to create a new message.
 */
export const EventFilterSchema: GenMessage<EventFilter> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 11);

/**
 * Request for the `GetFunction` method.
 *
 * @generated from message google.cloud.functions.v2beta.GetFunctionRequest
 */
export type GetFunctionRequest = Message<"google.cloud.functions.v2beta.GetFunctionRequest"> & {
  /**
   * Required. The name of the function which details should be obtained.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The optional version of the 1st gen function whose details should
   * be obtained. The version of a 1st gen function is an integer that starts
   * from 1 and gets incremented on redeployments. GCF may keep historical
   * configs for old versions of 1st gen function. This field can be specified
   * to fetch the historical configs. This field is valid only for GCF 1st gen
   * function.
   *
   * @generated from field: string revision = 2;
   */
  revision: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.GetFunctionRequest.
 * Use `create(GetFunctionRequestSchema)` to create a new message.
 */
export const GetFunctionRequestSchema: GenMessage<GetFunctionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 12);

/**
 * Request for the `ListFunctions` method.
 *
 * @generated from message google.cloud.functions.v2beta.ListFunctionsRequest
 */
export type ListFunctionsRequest = Message<"google.cloud.functions.v2beta.ListFunctionsRequest"> & {
  /**
   * Required. The project and location from which the function should be
   * listed, specified in the format `projects/*\/locations/*` If you want to
   * list functions in all locations, use "-" in place of a location. When
   * listing functions in all locations, if one or more location(s) are
   * unreachable, the response will contain functions from all reachable
   * locations along with the names of any unreachable locations.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum number of functions to return per call. The largest allowed
   * page_size is 1,000, if the page_size is omitted or specified as greater
   * than 1,000 then it will be replaced as 1,000. The size of the list
   * response can be less than specified when used with filters.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The value returned by the last
   * `ListFunctionsResponse`; indicates that
   * this is a continuation of a prior `ListFunctions` call, and that the
   * system should return the next page of data.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The filter for Functions that match the filter expression,
   * following the syntax outlined in https://google.aip.dev/160.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * The sorting order of the resources returned. Value should be a comma
   * separated list of fields. The default sorting oder is ascending.
   * See https://google.aip.dev/132#ordering.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.ListFunctionsRequest.
 * Use `create(ListFunctionsRequestSchema)` to create a new message.
 */
export const ListFunctionsRequestSchema: GenMessage<ListFunctionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 13);

/**
 * Response for the `ListFunctions` method.
 *
 * @generated from message google.cloud.functions.v2beta.ListFunctionsResponse
 */
export type ListFunctionsResponse = Message<"google.cloud.functions.v2beta.ListFunctionsResponse"> & {
  /**
   * The functions that match the request.
   *
   * @generated from field: repeated google.cloud.functions.v2beta.Function functions = 1;
   */
  functions: Function[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached. The response does not include any
   * functions from these locations.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.functions.v2beta.ListFunctionsResponse.
 * Use `create(ListFunctionsResponseSchema)` to create a new message.
 */
export const ListFunctionsResponseSchema: GenMessage<ListFunctionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 14);

/**
 * Request for the `CreateFunction` method.
 *
 * @generated from message google.cloud.functions.v2beta.CreateFunctionRequest
 */
export type CreateFunctionRequest = Message<"google.cloud.functions.v2beta.CreateFunctionRequest"> & {
  /**
   * Required. The project and location in which the function should be created,
   * specified in the format `projects/*\/locations/*`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Function to be created.
   *
   * @generated from field: google.cloud.functions.v2beta.Function function = 2;
   */
  function?: Function;

  /**
   * The ID to use for the function, which will become the final component of
   * the function's resource name.
   *
   * This value should be 4-63 characters, and valid characters
   * are /[a-z][0-9]-/.
   *
   * @generated from field: string function_id = 3;
   */
  functionId: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.CreateFunctionRequest.
 * Use `create(CreateFunctionRequestSchema)` to create a new message.
 */
export const CreateFunctionRequestSchema: GenMessage<CreateFunctionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 15);

/**
 * Request for the `UpdateFunction` method.
 *
 * @generated from message google.cloud.functions.v2beta.UpdateFunctionRequest
 */
export type UpdateFunctionRequest = Message<"google.cloud.functions.v2beta.UpdateFunctionRequest"> & {
  /**
   * Required. New version of the function.
   *
   * @generated from field: google.cloud.functions.v2beta.Function function = 1;
   */
  function?: Function;

  /**
   * The list of fields to be updated.
   * If no field mask is provided, all fields will be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.functions.v2beta.UpdateFunctionRequest.
 * Use `create(UpdateFunctionRequestSchema)` to create a new message.
 */
export const UpdateFunctionRequestSchema: GenMessage<UpdateFunctionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 16);

/**
 * Request for the `DeleteFunction` method.
 *
 * @generated from message google.cloud.functions.v2beta.DeleteFunctionRequest
 */
export type DeleteFunctionRequest = Message<"google.cloud.functions.v2beta.DeleteFunctionRequest"> & {
  /**
   * Required. The name of the function which should be deleted.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.DeleteFunctionRequest.
 * Use `create(DeleteFunctionRequestSchema)` to create a new message.
 */
export const DeleteFunctionRequestSchema: GenMessage<DeleteFunctionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 17);

/**
 * Request of `GenerateSourceUploadUrl` method.
 *
 * @generated from message google.cloud.functions.v2beta.GenerateUploadUrlRequest
 */
export type GenerateUploadUrlRequest = Message<"google.cloud.functions.v2beta.GenerateUploadUrlRequest"> & {
  /**
   * Required. The project and location in which the Google Cloud Storage signed
   * URL should be generated, specified in the format `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * [Preview] Resource name of a KMS crypto key (managed by the user) used to
   * encrypt/decrypt function source code objects in intermediate Cloud Storage
   * buckets. When you generate an upload url and upload your source code, it
   * gets copied to an intermediate Cloud Storage bucket. The source code is
   * then copied to a versioned directory in the sources bucket in the consumer
   * project during the function deployment.
   *
   * It must match the pattern
   * `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
   *
   * The Google Cloud Functions service account
   * (service-{project_number}@gcf-admin-robot.iam.gserviceaccount.com) must be
   * granted the role 'Cloud KMS CryptoKey Encrypter/Decrypter
   * (roles/cloudkms.cryptoKeyEncrypterDecrypter)' on the
   * Key/KeyRing/Project/Organization (least access preferred).
   *
   * @generated from field: string kms_key_name = 2;
   */
  kmsKeyName: string;

  /**
   * The function environment the generated upload url will be used for.
   * The upload url for 2nd Gen functions can also be used for 1st gen
   * functions, but not vice versa. If not specified, 2nd generation-style
   * upload URLs are generated.
   *
   * @generated from field: google.cloud.functions.v2beta.Environment environment = 3;
   */
  environment: Environment;
};

/**
 * Describes the message google.cloud.functions.v2beta.GenerateUploadUrlRequest.
 * Use `create(GenerateUploadUrlRequestSchema)` to create a new message.
 */
export const GenerateUploadUrlRequestSchema: GenMessage<GenerateUploadUrlRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 18);

/**
 * Response of `GenerateSourceUploadUrl` method.
 *
 * @generated from message google.cloud.functions.v2beta.GenerateUploadUrlResponse
 */
export type GenerateUploadUrlResponse = Message<"google.cloud.functions.v2beta.GenerateUploadUrlResponse"> & {
  /**
   * The generated Google Cloud Storage signed URL that should be used for a
   * function source code upload. The uploaded file should be a zip archive
   * which contains a function.
   *
   * @generated from field: string upload_url = 1;
   */
  uploadUrl: string;

  /**
   * The location of the source code in the upload bucket.
   *
   * Once the archive is uploaded using the `upload_url` use this field to
   * set the `function.build_config.source.storage_source`
   * during CreateFunction and UpdateFunction.
   *
   * Generation defaults to 0, as Cloud Storage provides a new generation only
   * upon uploading a new object or version of an object.
   *
   * @generated from field: google.cloud.functions.v2beta.StorageSource storage_source = 2;
   */
  storageSource?: StorageSource;
};

/**
 * Describes the message google.cloud.functions.v2beta.GenerateUploadUrlResponse.
 * Use `create(GenerateUploadUrlResponseSchema)` to create a new message.
 */
export const GenerateUploadUrlResponseSchema: GenMessage<GenerateUploadUrlResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 19);

/**
 * Request of `GenerateDownloadUrl` method.
 *
 * @generated from message google.cloud.functions.v2beta.GenerateDownloadUrlRequest
 */
export type GenerateDownloadUrlRequest = Message<"google.cloud.functions.v2beta.GenerateDownloadUrlRequest"> & {
  /**
   * Required. The name of function for which source code Google Cloud Storage
   * signed URL should be generated.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.GenerateDownloadUrlRequest.
 * Use `create(GenerateDownloadUrlRequestSchema)` to create a new message.
 */
export const GenerateDownloadUrlRequestSchema: GenMessage<GenerateDownloadUrlRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 20);

/**
 * Response of `GenerateDownloadUrl` method.
 *
 * @generated from message google.cloud.functions.v2beta.GenerateDownloadUrlResponse
 */
export type GenerateDownloadUrlResponse = Message<"google.cloud.functions.v2beta.GenerateDownloadUrlResponse"> & {
  /**
   * The generated Google Cloud Storage signed URL that should be used for
   * function source code download.
   *
   * @generated from field: string download_url = 1;
   */
  downloadUrl: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.GenerateDownloadUrlResponse.
 * Use `create(GenerateDownloadUrlResponseSchema)` to create a new message.
 */
export const GenerateDownloadUrlResponseSchema: GenMessage<GenerateDownloadUrlResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 21);

/**
 * Request for the `ListRuntimes` method.
 *
 * @generated from message google.cloud.functions.v2beta.ListRuntimesRequest
 */
export type ListRuntimesRequest = Message<"google.cloud.functions.v2beta.ListRuntimesRequest"> & {
  /**
   * Required. The project and location from which the runtimes should be
   * listed, specified in the format `projects/*\/locations/*`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The filter for Runtimes that match the filter expression,
   * following the syntax outlined in https://google.aip.dev/160.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.ListRuntimesRequest.
 * Use `create(ListRuntimesRequestSchema)` to create a new message.
 */
export const ListRuntimesRequestSchema: GenMessage<ListRuntimesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 22);

/**
 * Response for the `ListRuntimes` method.
 *
 * @generated from message google.cloud.functions.v2beta.ListRuntimesResponse
 */
export type ListRuntimesResponse = Message<"google.cloud.functions.v2beta.ListRuntimesResponse"> & {
  /**
   * The runtimes that match the request.
   *
   * @generated from field: repeated google.cloud.functions.v2beta.ListRuntimesResponse.Runtime runtimes = 1;
   */
  runtimes: ListRuntimesResponse_Runtime[];
};

/**
 * Describes the message google.cloud.functions.v2beta.ListRuntimesResponse.
 * Use `create(ListRuntimesResponseSchema)` to create a new message.
 */
export const ListRuntimesResponseSchema: GenMessage<ListRuntimesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 23);

/**
 * Describes a runtime and any special information (e.g., deprecation status)
 * related to it.
 *
 * @generated from message google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
 */
export type ListRuntimesResponse_Runtime = Message<"google.cloud.functions.v2beta.ListRuntimesResponse.Runtime"> & {
  /**
   * The name of the runtime, e.g., 'go113', 'nodejs12', etc.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The user facing name, eg 'Go 1.13', 'Node.js 12', etc.
   *
   * @generated from field: string display_name = 5;
   */
  displayName: string;

  /**
   * The stage of life this runtime is in, e.g., BETA, GA, etc.
   *
   * @generated from field: google.cloud.functions.v2beta.ListRuntimesResponse.RuntimeStage stage = 2;
   */
  stage: ListRuntimesResponse_RuntimeStage;

  /**
   * Warning messages, e.g., a deprecation warning.
   *
   * @generated from field: repeated string warnings = 3;
   */
  warnings: string[];

  /**
   * The environment for the runtime.
   *
   * @generated from field: google.cloud.functions.v2beta.Environment environment = 4;
   */
  environment: Environment;

  /**
   * Deprecation date for the runtime.
   *
   * @generated from field: google.type.Date deprecation_date = 6;
   */
  deprecationDate?: Date;

  /**
   * Decommission date for the runtime.
   *
   * @generated from field: google.type.Date decommission_date = 7;
   */
  decommissionDate?: Date;
};

/**
 * Describes the message google.cloud.functions.v2beta.ListRuntimesResponse.Runtime.
 * Use `create(ListRuntimesResponse_RuntimeSchema)` to create a new message.
 */
export const ListRuntimesResponse_RuntimeSchema: GenMessage<ListRuntimesResponse_Runtime> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 23, 0);

/**
 * The various stages that a runtime can be in.
 *
 * @generated from enum google.cloud.functions.v2beta.ListRuntimesResponse.RuntimeStage
 */
export enum ListRuntimesResponse_RuntimeStage {
  /**
   * Not specified.
   *
   * @generated from enum value: RUNTIME_STAGE_UNSPECIFIED = 0;
   */
  RUNTIME_STAGE_UNSPECIFIED = 0,

  /**
   * The runtime is in development.
   *
   * @generated from enum value: DEVELOPMENT = 1;
   */
  DEVELOPMENT = 1,

  /**
   * The runtime is in the Alpha stage.
   *
   * @generated from enum value: ALPHA = 2;
   */
  ALPHA = 2,

  /**
   * The runtime is in the Beta stage.
   *
   * @generated from enum value: BETA = 3;
   */
  BETA = 3,

  /**
   * The runtime is generally available.
   *
   * @generated from enum value: GA = 4;
   */
  GA = 4,

  /**
   * The runtime is deprecated.
   *
   * @generated from enum value: DEPRECATED = 5;
   */
  DEPRECATED = 5,

  /**
   * The runtime is no longer supported.
   *
   * @generated from enum value: DECOMMISSIONED = 6;
   */
  DECOMMISSIONED = 6,
}

/**
 * Describes the enum google.cloud.functions.v2beta.ListRuntimesResponse.RuntimeStage.
 */
export const ListRuntimesResponse_RuntimeStageSchema: GenEnum<ListRuntimesResponse_RuntimeStage> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 23, 0);

/**
 * Security patches are applied automatically to the runtime without requiring
 * the function to be redeployed.
 *
 * @generated from message google.cloud.functions.v2beta.AutomaticUpdatePolicy
 */
export type AutomaticUpdatePolicy = Message<"google.cloud.functions.v2beta.AutomaticUpdatePolicy"> & {
};

/**
 * Describes the message google.cloud.functions.v2beta.AutomaticUpdatePolicy.
 * Use `create(AutomaticUpdatePolicySchema)` to create a new message.
 */
export const AutomaticUpdatePolicySchema: GenMessage<AutomaticUpdatePolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 24);

/**
 * Security patches are only applied when a function is redeployed.
 *
 * @generated from message google.cloud.functions.v2beta.OnDeployUpdatePolicy
 */
export type OnDeployUpdatePolicy = Message<"google.cloud.functions.v2beta.OnDeployUpdatePolicy"> & {
  /**
   * Output only. contains the runtime version which was used during latest
   * function deployment.
   *
   * @generated from field: string runtime_version = 1;
   */
  runtimeVersion: string;
};

/**
 * Describes the message google.cloud.functions.v2beta.OnDeployUpdatePolicy.
 * Use `create(OnDeployUpdatePolicySchema)` to create a new message.
 */
export const OnDeployUpdatePolicySchema: GenMessage<OnDeployUpdatePolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 25);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.functions.v2beta.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.functions.v2beta.OperationMetadata"> & {
  /**
   * The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Human-readable status of the operation, if any.
   *
   * @generated from field: string status_detail = 5;
   */
  statusDetail: string;

  /**
   * Identifies whether the user has requested cancellation
   * of the operation. Operations that have successfully been cancelled
   * have
   * [google.longrunning.Operation.error][google.longrunning.Operation.error]
   * value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
   * corresponding to `Code.CANCELLED`.
   *
   * @generated from field: bool cancel_requested = 6;
   */
  cancelRequested: boolean;

  /**
   * API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;

  /**
   * The original request that started the operation.
   *
   * @generated from field: google.protobuf.Any request_resource = 8;
   */
  requestResource?: Any;

  /**
   * Mechanism for reporting in-progress stages
   *
   * @generated from field: repeated google.cloud.functions.v2beta.Stage stages = 9;
   */
  stages: Stage[];

  /**
   * The build name of the function for create and update operations.
   *
   * @generated from field: string build_name = 13;
   */
  buildName: string;

  /**
   * The operation type.
   *
   * @generated from field: google.cloud.functions.v2beta.OperationType operation_type = 11;
   */
  operationType: OperationType;
};

/**
 * Describes the message google.cloud.functions.v2beta.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 26);

/**
 * Extra GCF specific location information.
 *
 * @generated from message google.cloud.functions.v2beta.LocationMetadata
 */
export type LocationMetadata = Message<"google.cloud.functions.v2beta.LocationMetadata"> & {
  /**
   * The Cloud Function environments this location supports.
   *
   * @generated from field: repeated google.cloud.functions.v2beta.Environment environments = 1;
   */
  environments: Environment[];
};

/**
 * Describes the message google.cloud.functions.v2beta.LocationMetadata.
 * Use `create(LocationMetadataSchema)` to create a new message.
 */
export const LocationMetadataSchema: GenMessage<LocationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 27);

/**
 * Each Stage of the deployment process
 *
 * @generated from message google.cloud.functions.v2beta.Stage
 */
export type Stage = Message<"google.cloud.functions.v2beta.Stage"> & {
  /**
   * Name of the Stage. This will be unique for each Stage.
   *
   * @generated from field: google.cloud.functions.v2beta.Stage.Name name = 1;
   */
  name: Stage_Name;

  /**
   * Message describing the Stage
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Current state of the Stage
   *
   * @generated from field: google.cloud.functions.v2beta.Stage.State state = 3;
   */
  state: Stage_State;

  /**
   * Resource of the Stage
   *
   * @generated from field: string resource = 4;
   */
  resource: string;

  /**
   * Link to the current Stage resource
   *
   * @generated from field: string resource_uri = 5;
   */
  resourceUri: string;

  /**
   * State messages from the current Stage.
   *
   * @generated from field: repeated google.cloud.functions.v2beta.StateMessage state_messages = 6;
   */
  stateMessages: StateMessage[];
};

/**
 * Describes the message google.cloud.functions.v2beta.Stage.
 * Use `create(StageSchema)` to create a new message.
 */
export const StageSchema: GenMessage<Stage> = /*@__PURE__*/
  messageDesc(file_google_cloud_functions_v2beta_functions, 28);

/**
 * Possible names for a Stage
 *
 * @generated from enum google.cloud.functions.v2beta.Stage.Name
 */
export enum Stage_Name {
  /**
   * Not specified. Invalid name.
   *
   * @generated from enum value: NAME_UNSPECIFIED = 0;
   */
  NAME_UNSPECIFIED = 0,

  /**
   * Artifact Regsitry Stage
   *
   * @generated from enum value: ARTIFACT_REGISTRY = 1;
   */
  ARTIFACT_REGISTRY = 1,

  /**
   * Build Stage
   *
   * @generated from enum value: BUILD = 2;
   */
  BUILD = 2,

  /**
   * Service Stage
   *
   * @generated from enum value: SERVICE = 3;
   */
  SERVICE = 3,

  /**
   * Trigger Stage
   *
   * @generated from enum value: TRIGGER = 4;
   */
  TRIGGER = 4,

  /**
   * Service Rollback Stage
   *
   * @generated from enum value: SERVICE_ROLLBACK = 5;
   */
  SERVICE_ROLLBACK = 5,

  /**
   * Trigger Rollback Stage
   *
   * @generated from enum value: TRIGGER_ROLLBACK = 6;
   */
  TRIGGER_ROLLBACK = 6,
}

/**
 * Describes the enum google.cloud.functions.v2beta.Stage.Name.
 */
export const Stage_NameSchema: GenEnum<Stage_Name> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 28, 0);

/**
 * Possible states for a Stage
 *
 * @generated from enum google.cloud.functions.v2beta.Stage.State
 */
export enum Stage_State {
  /**
   * Not specified. Invalid state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Stage has not started.
   *
   * @generated from enum value: NOT_STARTED = 1;
   */
  NOT_STARTED = 1,

  /**
   * Stage is in progress.
   *
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * Stage has completed.
   *
   * @generated from enum value: COMPLETE = 3;
   */
  COMPLETE = 3,
}

/**
 * Describes the enum google.cloud.functions.v2beta.Stage.State.
 */
export const Stage_StateSchema: GenEnum<Stage_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 28, 1);

/**
 * The type of the long running operation.
 *
 * @generated from enum google.cloud.functions.v2beta.OperationType
 */
export enum OperationType {
  /**
   * Unspecified
   *
   * @generated from enum value: OPERATIONTYPE_UNSPECIFIED = 0;
   */
  OPERATIONTYPE_UNSPECIFIED = 0,

  /**
   * CreateFunction
   *
   * @generated from enum value: CREATE_FUNCTION = 1;
   */
  CREATE_FUNCTION = 1,

  /**
   * UpdateFunction
   *
   * @generated from enum value: UPDATE_FUNCTION = 2;
   */
  UPDATE_FUNCTION = 2,

  /**
   * DeleteFunction
   *
   * @generated from enum value: DELETE_FUNCTION = 3;
   */
  DELETE_FUNCTION = 3,
}

/**
 * Describes the enum google.cloud.functions.v2beta.OperationType.
 */
export const OperationTypeSchema: GenEnum<OperationType> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 0);

/**
 * The environment the function is hosted on.
 *
 * @generated from enum google.cloud.functions.v2beta.Environment
 */
export enum Environment {
  /**
   * Unspecified
   *
   * @generated from enum value: ENVIRONMENT_UNSPECIFIED = 0;
   */
  ENVIRONMENT_UNSPECIFIED = 0,

  /**
   * Gen 1
   *
   * @generated from enum value: GEN_1 = 1;
   */
  GEN_1 = 1,

  /**
   * Gen 2
   *
   * @generated from enum value: GEN_2 = 2;
   */
  GEN_2 = 2,
}

/**
 * Describes the enum google.cloud.functions.v2beta.Environment.
 */
export const EnvironmentSchema: GenEnum<Environment> = /*@__PURE__*/
  enumDesc(file_google_cloud_functions_v2beta_functions, 1);

/**
 * Google Cloud Functions is used to deploy functions that are executed by
 * Google in response to various events. Data connected with that event is
 * passed to a function as the input data.
 *
 * A **function** is a resource which describes a function that should be
 * executed and how it is triggered.
 *
 * @generated from service google.cloud.functions.v2beta.FunctionService
 */
export const FunctionService: GenService<{
  /**
   * Returns a function with the given name from the requested project.
   *
   * @generated from rpc google.cloud.functions.v2beta.FunctionService.GetFunction
   */
  getFunction: {
    methodKind: "unary";
    input: typeof GetFunctionRequestSchema;
    output: typeof FunctionSchema;
  },
  /**
   * Returns a list of functions that belong to the requested project.
   *
   * @generated from rpc google.cloud.functions.v2beta.FunctionService.ListFunctions
   */
  listFunctions: {
    methodKind: "unary";
    input: typeof ListFunctionsRequestSchema;
    output: typeof ListFunctionsResponseSchema;
  },
  /**
   * Creates a new function. If a function with the given name already exists in
   * the specified project, the long running operation will return
   * `ALREADY_EXISTS` error.
   *
   * @generated from rpc google.cloud.functions.v2beta.FunctionService.CreateFunction
   */
  createFunction: {
    methodKind: "unary";
    input: typeof CreateFunctionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates existing function.
   *
   * @generated from rpc google.cloud.functions.v2beta.FunctionService.UpdateFunction
   */
  updateFunction: {
    methodKind: "unary";
    input: typeof UpdateFunctionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a function with the given name from the specified project. If the
   * given function is used by some trigger, the trigger will be updated to
   * remove this function.
   *
   * @generated from rpc google.cloud.functions.v2beta.FunctionService.DeleteFunction
   */
  deleteFunction: {
    methodKind: "unary";
    input: typeof DeleteFunctionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Returns a signed URL for uploading a function source code.
   * For more information about the signed URL usage see:
   * https://cloud.google.com/storage/docs/access-control/signed-urls.
   * Once the function source code upload is complete, the used signed
   * URL should be provided in CreateFunction or UpdateFunction request
   * as a reference to the function source code.
   *
   * When uploading source code to the generated signed URL, please follow
   * these restrictions:
   *
   * * Source file type should be a zip file.
   * * No credentials should be attached - the signed URLs provide access to the
   *   target bucket using internal service identity; if credentials were
   *   attached, the identity from the credentials would be used, but that
   *   identity does not have permissions to upload files to the URL.
   *
   * When making a HTTP PUT request, specify this header:
   *
   * * `content-type: application/zip`
   *
   * Do not specify this header:
   *
   * * `Authorization: Bearer YOUR_TOKEN`
   *
   * @generated from rpc google.cloud.functions.v2beta.FunctionService.GenerateUploadUrl
   */
  generateUploadUrl: {
    methodKind: "unary";
    input: typeof GenerateUploadUrlRequestSchema;
    output: typeof GenerateUploadUrlResponseSchema;
  },
  /**
   * Returns a signed URL for downloading deployed function source code.
   * The URL is only valid for a limited period and should be used within
   * 30 minutes of generation.
   * For more information about the signed URL usage see:
   * https://cloud.google.com/storage/docs/access-control/signed-urls
   *
   * @generated from rpc google.cloud.functions.v2beta.FunctionService.GenerateDownloadUrl
   */
  generateDownloadUrl: {
    methodKind: "unary";
    input: typeof GenerateDownloadUrlRequestSchema;
    output: typeof GenerateDownloadUrlResponseSchema;
  },
  /**
   * Returns a list of runtimes that are supported for the requested project.
   *
   * @generated from rpc google.cloud.functions.v2beta.FunctionService.ListRuntimes
   */
  listRuntimes: {
    methodKind: "unary";
    input: typeof ListRuntimesRequestSchema;
    output: typeof ListRuntimesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_functions_v2beta_functions, 0);

