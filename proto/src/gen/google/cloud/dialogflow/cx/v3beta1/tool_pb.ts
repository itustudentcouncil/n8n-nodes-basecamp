// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/cx/v3beta1/tool.proto (package google.cloud.dialogflow.cx.v3beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { DataStoreConnection } from "./data_store_connection_pb";
import { file_google_cloud_dialogflow_cx_v3beta1_data_store_connection } from "./data_store_connection_pb";
import type { InlineDestination } from "./inline_pb";
import { file_google_cloud_dialogflow_cx_v3beta1_inline } from "./inline_pb";
import type { OperationSchema } from "../../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/cx/v3beta1/tool.proto.
 */
export const file_google_cloud_dialogflow_cx_v3beta1_tool: GenFile = /*@__PURE__*/
  fileDesc("Ci1nb29nbGUvY2xvdWQvZGlhbG9nZmxvdy9jeC92M2JldGExL3Rvb2wucHJvdG8SImdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEiiAEKEUNyZWF0ZVRvb2xSZXF1ZXN0EjYKBnBhcmVudBgBIAEoCUIm4EEC+kEgEh5kaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1Rvb2wSOwoEdG9vbBgCIAEoCzIoLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuVG9vbEID4EECInEKEExpc3RUb29sc1JlcXVlc3QSNgoGcGFyZW50GAEgASgJQibgQQL6QSASHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vVG9vbBIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSJlChFMaXN0VG9vbHNSZXNwb25zZRI3CgV0b29scxgBIAMoCzIoLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuVG9vbBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiRgoOR2V0VG9vbFJlcXVlc3QSNAoEbmFtZRgBIAEoCUIm4EEC+kEgCh5kaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1Rvb2wi7QIKEkV4cG9ydFRvb2xzUmVxdWVzdBI2CgZwYXJlbnQYASABKAlCJuBBAvpBIBIeZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9Ub29sEjUKBXRvb2xzGAIgAygJQibgQQL6QSAKHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vVG9vbBIYCgl0b29sc191cmkYAyABKAlCA+BBAUgAEiMKFHRvb2xzX2NvbnRlbnRfaW5saW5lGAQgASgIQgPgQQFIABJbCgtkYXRhX2Zvcm1hdBgFIAEoDjJBLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuRXhwb3J0VG9vbHNSZXF1ZXN0LkRhdGFGb3JtYXRCA+BBASI9CgpEYXRhRm9ybWF0EhsKF0RBVEFfRk9STUFUX1VOU1BFQ0lGSUVEEAASCAoEQkxPQhABEggKBEpTT04QAkINCgtkZXN0aW5hdGlvbiKDAQoTRXhwb3J0VG9vbHNSZXNwb25zZRITCgl0b29sc191cmkYASABKAlIABJOCg10b29sc19jb250ZW50GAIgASgLMjUuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5JbmxpbmVEZXN0aW5hdGlvbkgAQgcKBXRvb2xzIoEBChFVcGRhdGVUb29sUmVxdWVzdBI7CgR0b29sGAEgASgLMiguZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5Ub29sQgPgQQISLwoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrIlgKEURlbGV0ZVRvb2xSZXF1ZXN0EjQKBG5hbWUYASABKAlCJuBBAvpBIAoeZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9Ub29sEg0KBWZvcmNlGAIgASgIIuATCgRUb29sEgwKBG5hbWUYASABKAkSGQoMZGlzcGxheV9uYW1lGAIgASgJQgPgQQISGAoLZGVzY3JpcHRpb24YAyABKAlCA+BBAhJNCg1vcGVuX2FwaV9zcGVjGAQgASgLMjQuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5Ub29sLk9wZW5BcGlUb29sSAASUQoPZGF0YV9zdG9yZV9zcGVjGAggASgLMjYuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5Ub29sLkRhdGFTdG9yZVRvb2xIABJQCg5leHRlbnNpb25fc3BlYxgLIAEoCzI2Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuVG9vbC5FeHRlbnNpb25Ub29sSAASTgoNZnVuY3Rpb25fc3BlYxgNIAEoCzI1Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuVG9vbC5GdW5jdGlvblRvb2xIABJJCgl0b29sX3R5cGUYDCABKA4yMS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLlRvb2wuVG9vbFR5cGVCA+BBAxq+AgoLT3BlbkFwaVRvb2wSGgoLdGV4dF9zY2hlbWEYASABKAlCA+BBAkgAElQKDmF1dGhlbnRpY2F0aW9uGAIgASgLMjcuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5Ub29sLkF1dGhlbnRpY2F0aW9uQgPgQQESSwoKdGxzX2NvbmZpZxgDIAEoCzIyLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuVG9vbC5UTFNDb25maWdCA+BBARJmChhzZXJ2aWNlX2RpcmVjdG9yeV9jb25maWcYBCABKAsyPy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLlRvb2wuU2VydmljZURpcmVjdG9yeUNvbmZpZ0ID4EEBQggKBnNjaGVtYRrkAQoNRGF0YVN0b3JlVG9vbBJcChZkYXRhX3N0b3JlX2Nvbm5lY3Rpb25zGAEgAygLMjcuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5EYXRhU3RvcmVDb25uZWN0aW9uQgPgQQISYwoPZmFsbGJhY2tfcHJvbXB0GAMgASgLMkUuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5Ub29sLkRhdGFTdG9yZVRvb2wuRmFsbGJhY2tQcm9tcHRCA+BBAhoQCg5GYWxsYmFja1Byb21wdBoiCg1FeHRlbnNpb25Ub29sEhEKBG5hbWUYASABKAlCA+BBAhp3CgxGdW5jdGlvblRvb2wSMgoMaW5wdXRfc2NoZW1hGAEgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdEID4EEBEjMKDW91dHB1dF9zY2hlbWEYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0QgPgQQEagwcKDkF1dGhlbnRpY2F0aW9uEl4KDmFwaV9rZXlfY29uZmlnGAEgASgLMkQuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5Ub29sLkF1dGhlbnRpY2F0aW9uLkFwaUtleUNvbmZpZ0gAElsKDG9hdXRoX2NvbmZpZxgCIAEoCzJDLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuVG9vbC5BdXRoZW50aWNhdGlvbi5PQXV0aENvbmZpZ0gAEnMKGXNlcnZpY2VfYWdlbnRfYXV0aF9jb25maWcYAyABKAsyTi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLlRvb2wuQXV0aGVudGljYXRpb24uU2VydmljZUFnZW50QXV0aENvbmZpZ0gAGqMBCgxBcGlLZXlDb25maWcSFQoIa2V5X25hbWUYASABKAlCA+BBAhIUCgdhcGlfa2V5GAIgASgJQgPgQQISZgoQcmVxdWVzdF9sb2NhdGlvbhgDIAEoDjJHLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuVG9vbC5BdXRoZW50aWNhdGlvbi5SZXF1ZXN0TG9jYXRpb25CA+BBAhqcAgoLT0F1dGhDb25maWcScQoQb2F1dGhfZ3JhbnRfdHlwZRgBIAEoDjJSLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuVG9vbC5BdXRoZW50aWNhdGlvbi5PQXV0aENvbmZpZy5PYXV0aEdyYW50VHlwZUID4EECEhYKCWNsaWVudF9pZBgCIAEoCUID4EECEhoKDWNsaWVudF9zZWNyZXQYAyABKAlCA+BBAhIbCg50b2tlbl9lbmRwb2ludBgEIAEoCUID4EECIkkKDk9hdXRoR3JhbnRUeXBlEiAKHE9BVVRIX0dSQU5UX1RZUEVfVU5TUEVDSUZJRUQQABIVChFDTElFTlRfQ1JFREVOVElBTBABGhgKFlNlcnZpY2VBZ2VudEF1dGhDb25maWciUQoPUmVxdWVzdExvY2F0aW9uEiAKHFJFUVVFU1RfTE9DQVRJT05fVU5TUEVDSUZJRUQQABIKCgZIRUFERVIQARIQCgxRVUVSWV9TVFJJTkcQAkINCgthdXRoX2NvbmZpZxqVAQoJVExTQ29uZmlnElAKCGNhX2NlcnRzGAEgAygLMjkuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5Ub29sLlRMU0NvbmZpZy5DQUNlcnRCA+BBAho2CgZDQUNlcnQSGQoMZGlzcGxheV9uYW1lGAEgASgJQgPgQQISEQoEY2VydBgCIAEoDEID4EECGloKFlNlcnZpY2VEaXJlY3RvcnlDb25maWcSQAoHc2VydmljZRgBIAEoCUIv4EEC+kEpCidzZXJ2aWNlZGlyZWN0b3J5Lmdvb2dsZWFwaXMuY29tL1NlcnZpY2UiTAoIVG9vbFR5cGUSGQoVVE9PTF9UWVBFX1VOU1BFQ0lGSUVEEAASEwoPQ1VTVE9NSVpFRF9UT09MEAESEAoMQlVJTFRJTl9UT09MEAI6aOpBZQoeZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9Ub29sEkNwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vYWdlbnRzL3thZ2VudH0vdG9vbHMve3Rvb2x9Qg8KDXNwZWNpZmljYXRpb24iFQoTRXhwb3J0VG9vbHNNZXRhZGF0YTKRCgoFVG9vbHMSwgEKCkNyZWF0ZVRvb2wSNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLkNyZWF0ZVRvb2xSZXF1ZXN0GiguZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5Ub29sIlPaQQtwYXJlbnQsdG9vbILT5JMCPzoEdG9vbCI3L3YzYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qfS90b29scxLCAQoJTGlzdFRvb2xzEjQuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5MaXN0VG9vbHNSZXF1ZXN0GjUuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5MaXN0VG9vbHNSZXNwb25zZSJI2kEGcGFyZW50gtPkkwI5EjcvdjNiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyp9L3Rvb2xzEtwBCgtFeHBvcnRUb29scxI2Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuRXhwb3J0VG9vbHNSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJ2ykEqChNFeHBvcnRUb29sc1Jlc3BvbnNlEhNFeHBvcnRUb29sc01ldGFkYXRhgtPkkwJDOgEqIj4vdjNiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyp9L3Rvb2xzOmV4cG9ydBKvAQoHR2V0VG9vbBIyLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuR2V0VG9vbFJlcXVlc3QaKC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLlRvb2wiRtpBBG5hbWWC0+STAjkSNy92M2JldGExL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovdG9vbHMvKn0SzAEKClVwZGF0ZVRvb2wSNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLlVwZGF0ZVRvb2xSZXF1ZXN0GiguZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5Ub29sIl3aQRB0b29sLHVwZGF0ZV9tYXNrgtPkkwJEOgR0b29sMjwvdjNiZXRhMS97dG9vbC5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovdG9vbHMvKn0SowEKCkRlbGV0ZVRvb2wSNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLkRlbGV0ZVRvb2xSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IkbaQQRuYW1lgtPkkwI5KjcvdjNiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL3Rvb2xzLyp9GnjKQRlkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29t0kFZaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2RpYWxvZ2Zsb3dCmgEKJmNvbS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExQglUb29sUHJvdG9QAVo2Y2xvdWQuZ29vZ2xlLmNvbS9nby9kaWFsb2dmbG93L2N4L2FwaXYzYmV0YTEvY3hwYjtjeHBi+AEBogICREaqAiJHb29nbGUuQ2xvdWQuRGlhbG9nZmxvdy5DeC5WM0JldGExYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_cx_v3beta1_data_store_connection, file_google_cloud_dialogflow_cx_v3beta1_inline, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct]);

/**
 * The request message for
 * [Tools.CreateTool][google.cloud.dialogflow.cx.v3beta1.Tools.CreateTool].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.CreateToolRequest
 */
export type CreateToolRequest = Message<"google.cloud.dialogflow.cx.v3beta1.CreateToolRequest"> & {
  /**
   * Required. The agent to create a Tool for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The Tool to be created.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool tool = 2;
   */
  tool?: Tool;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.CreateToolRequest.
 * Use `create(CreateToolRequestSchema)` to create a new message.
 */
export const CreateToolRequestSchema: GenMessage<CreateToolRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 0);

/**
 * The request message for
 * [Tools.ListTools][google.cloud.dialogflow.cx.v3beta1.Tools.ListTools].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.ListToolsRequest
 */
export type ListToolsRequest = Message<"google.cloud.dialogflow.cx.v3beta1.ListToolsRequest"> & {
  /**
   * Required. The agent to list the Tools from.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return in a single page. By default 100 and
   * at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.ListToolsRequest.
 * Use `create(ListToolsRequestSchema)` to create a new message.
 */
export const ListToolsRequestSchema: GenMessage<ListToolsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 1);

/**
 * The response message for
 * [Tools.ListTools][google.cloud.dialogflow.cx.v3beta1.Tools.ListTools].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.ListToolsResponse
 */
export type ListToolsResponse = Message<"google.cloud.dialogflow.cx.v3beta1.ListToolsResponse"> & {
  /**
   * The list of Tools. There will be a maximum number of items returned
   * based on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3beta1.Tool tools = 1;
   */
  tools: Tool[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.ListToolsResponse.
 * Use `create(ListToolsResponseSchema)` to create a new message.
 */
export const ListToolsResponseSchema: GenMessage<ListToolsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 2);

/**
 * The request message for
 * [Tools.GetTool][google.cloud.dialogflow.cx.v3beta1.Tools.GetTool].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.GetToolRequest
 */
export type GetToolRequest = Message<"google.cloud.dialogflow.cx.v3beta1.GetToolRequest"> & {
  /**
   * Required. The name of the Tool.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/tools/<Tool ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.GetToolRequest.
 * Use `create(GetToolRequestSchema)` to create a new message.
 */
export const GetToolRequestSchema: GenMessage<GetToolRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 3);

/**
 * The request message for
 * [Tools.ExportTools][google.cloud.dialogflow.cx.v3beta1.Tools.ExportTools].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.ExportToolsRequest
 */
export type ExportToolsRequest = Message<"google.cloud.dialogflow.cx.v3beta1.ExportToolsRequest"> & {
  /**
   * Required. The agent to export tools from.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The name of the tools to export.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/tools/<Tool ID>`.
   *
   * @generated from field: repeated string tools = 2;
   */
  tools: string[];

  /**
   * The destination to export.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3beta1.ExportToolsRequest.destination
   */
  destination: {
    /**
     * Optional. The [Google Cloud
     * Storage](https://cloud.google.com/storage/docs/) URI to export the tools
     * to. The format of this URI must be `gs://<bucket-name>/<object-name>`.
     *
     * Dialogflow performs a write operation for the Cloud Storage object
     * on the caller's behalf, so your request authentication must
     * have write permissions for the object. For more information, see
     * [Dialogflow access
     * control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
     *
     * @generated from field: string tools_uri = 3;
     */
    value: string;
    case: "toolsUri";
  } | {
    /**
     * Optional. The option to return the serialized tools inline.
     *
     * @generated from field: bool tools_content_inline = 4;
     */
    value: boolean;
    case: "toolsContentInline";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. The data format of the exported tools. If not specified, `BLOB`
   * is assumed.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.ExportToolsRequest.DataFormat data_format = 5;
   */
  dataFormat: ExportToolsRequest_DataFormat;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.ExportToolsRequest.
 * Use `create(ExportToolsRequestSchema)` to create a new message.
 */
export const ExportToolsRequestSchema: GenMessage<ExportToolsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 4);

/**
 * Data format of the exported tools.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3beta1.ExportToolsRequest.DataFormat
 */
export enum ExportToolsRequest_DataFormat {
  /**
   * Unspecified format. Treated as `BLOB`.
   *
   * @generated from enum value: DATA_FORMAT_UNSPECIFIED = 0;
   */
  DATA_FORMAT_UNSPECIFIED = 0,

  /**
   * Tools will be exported as raw bytes.
   *
   * @generated from enum value: BLOB = 1;
   */
  BLOB = 1,

  /**
   * Tools will be exported in JSON format.
   *
   * @generated from enum value: JSON = 2;
   */
  JSON = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3beta1.ExportToolsRequest.DataFormat.
 */
export const ExportToolsRequest_DataFormatSchema: GenEnum<ExportToolsRequest_DataFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 4, 0);

/**
 * The response message for
 * [Tools.ExportTools][google.cloud.dialogflow.cx.v3beta1.Tools.ExportTools].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.ExportToolsResponse
 */
export type ExportToolsResponse = Message<"google.cloud.dialogflow.cx.v3beta1.ExportToolsResponse"> & {
  /**
   * The exported tools.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3beta1.ExportToolsResponse.tools
   */
  tools: {
    /**
     * The URI to a file containing the exported tools. This field is
     * populated only if `tools_uri` is specified in
     * [ExportToolsRequest][google.cloud.dialogflow.cx.v3beta1.ExportToolsRequest].
     *
     * @generated from field: string tools_uri = 1;
     */
    value: string;
    case: "toolsUri";
  } | {
    /**
     * Uncompressed byte content for tools. This field is populated only if
     * `tools_content_inline` is set to true in
     * [ExportToolsRequest][google.cloud.dialogflow.cx.v3beta1.ExportToolsRequest].
     *
     * @generated from field: google.cloud.dialogflow.cx.v3beta1.InlineDestination tools_content = 2;
     */
    value: InlineDestination;
    case: "toolsContent";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.ExportToolsResponse.
 * Use `create(ExportToolsResponseSchema)` to create a new message.
 */
export const ExportToolsResponseSchema: GenMessage<ExportToolsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 5);

/**
 * The request message for
 * [Tools.UpdateTool][google.cloud.dialogflow.cx.v3beta1.Tools.UpdateTool].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.UpdateToolRequest
 */
export type UpdateToolRequest = Message<"google.cloud.dialogflow.cx.v3beta1.UpdateToolRequest"> & {
  /**
   * Required. The Tool to be updated.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool tool = 1;
   */
  tool?: Tool;

  /**
   * The mask to control which fields get updated. If the mask is not present,
   * all fields will be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.UpdateToolRequest.
 * Use `create(UpdateToolRequestSchema)` to create a new message.
 */
export const UpdateToolRequestSchema: GenMessage<UpdateToolRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 6);

/**
 * The request message for
 * [Tools.DeleteTool][google.cloud.dialogflow.cx.v3beta1.Tools.DeleteTool].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.DeleteToolRequest
 */
export type DeleteToolRequest = Message<"google.cloud.dialogflow.cx.v3beta1.DeleteToolRequest"> & {
  /**
   * Required. The name of the Tool to be deleted.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/tools/<Tool ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * This field has no effect for Tools not being used.
   * For Tools that are used:
   *
   * *  If `force` is set to false, an error will be returned with message
   *    indicating the referenced resources.
   * *  If `force` is set to true, Dialogflow will remove the tool, as well
   *    as any references to the tool.
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.DeleteToolRequest.
 * Use `create(DeleteToolRequestSchema)` to create a new message.
 */
export const DeleteToolRequestSchema: GenMessage<DeleteToolRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 7);

/**
 * A tool provides a list of actions which are available to the
 * [Playbook][google.cloud.dialogflow.cx.v3beta1.Playbook] to attain its goal. A
 * Tool consists of a description of the tool's usage and a specification of the
 * tool which contains the schema and authentication information.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool
 */
export type Tool = Message<"google.cloud.dialogflow.cx.v3beta1.Tool"> & {
  /**
   * The unique identifier of the Tool.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/tools/<Tool ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The human-readable name of the Tool, unique within an agent.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Required. High level description of the Tool and its usage.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Specification of the Tool.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3beta1.Tool.specification
   */
  specification: {
    /**
     * OpenAPI specification of the Tool.
     *
     * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.OpenApiTool open_api_spec = 4;
     */
    value: Tool_OpenApiTool;
    case: "openApiSpec";
  } | {
    /**
     * Data store search tool specification.
     *
     * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.DataStoreTool data_store_spec = 8;
     */
    value: Tool_DataStoreTool;
    case: "dataStoreSpec";
  } | {
    /**
     * Vertex extension tool specification.
     *
     * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.ExtensionTool extension_spec = 11;
     */
    value: Tool_ExtensionTool;
    case: "extensionSpec";
  } | {
    /**
     * Client side executed function specification.
     *
     * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.FunctionTool function_spec = 13;
     */
    value: Tool_FunctionTool;
    case: "functionSpec";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The tool type.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.ToolType tool_type = 12;
   */
  toolType: Tool_ToolType;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.
 * Use `create(ToolSchema)` to create a new message.
 */
export const ToolSchema: GenMessage<Tool> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8);

/**
 * An OpenAPI tool is a way to provide the Tool specifications in the Open API
 * schema format.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.OpenApiTool
 */
export type Tool_OpenApiTool = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.OpenApiTool"> & {
  /**
   * Schema representation.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3beta1.Tool.OpenApiTool.schema
   */
  schema: {
    /**
     * Required. The OpenAPI schema specified as a text.
     *
     * @generated from field: string text_schema = 1;
     */
    value: string;
    case: "textSchema";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. Authentication information required by the API.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.Authentication authentication = 2;
   */
  authentication?: Tool_Authentication;

  /**
   * Optional. TLS configuration for the HTTPS verification.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.TLSConfig tls_config = 3;
   */
  tlsConfig?: Tool_TLSConfig;

  /**
   * Optional. Service Directory configuration.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.ServiceDirectoryConfig service_directory_config = 4;
   */
  serviceDirectoryConfig?: Tool_ServiceDirectoryConfig;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.OpenApiTool.
 * Use `create(Tool_OpenApiToolSchema)` to create a new message.
 */
export const Tool_OpenApiToolSchema: GenMessage<Tool_OpenApiTool> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 0);

/**
 * A DataStoreTool is a way to provide specifications needed to search a
 * list of data stores.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.DataStoreTool
 */
export type Tool_DataStoreTool = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.DataStoreTool"> & {
  /**
   * Required. List of data stores to search.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3beta1.DataStoreConnection data_store_connections = 1;
   */
  dataStoreConnections: DataStoreConnection[];

  /**
   * Required. Fallback prompt configurations to use.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.DataStoreTool.FallbackPrompt fallback_prompt = 3;
   */
  fallbackPrompt?: Tool_DataStoreTool_FallbackPrompt;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.DataStoreTool.
 * Use `create(Tool_DataStoreToolSchema)` to create a new message.
 */
export const Tool_DataStoreToolSchema: GenMessage<Tool_DataStoreTool> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 1);

/**
 * A FallbackPrompt is a way to provide specifications for the Data Store
 * fallback prompt when generating responses.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.DataStoreTool.FallbackPrompt
 */
export type Tool_DataStoreTool_FallbackPrompt = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.DataStoreTool.FallbackPrompt"> & {
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.DataStoreTool.FallbackPrompt.
 * Use `create(Tool_DataStoreTool_FallbackPromptSchema)` to create a new message.
 */
export const Tool_DataStoreTool_FallbackPromptSchema: GenMessage<Tool_DataStoreTool_FallbackPrompt> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 1, 0);

/**
 * An ExtensionTool is a way to use Vertex Extensions as a tool.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.ExtensionTool
 */
export type Tool_ExtensionTool = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.ExtensionTool"> & {
  /**
   * Required. The full name of the referenced vertex extension.
   * Formats:
   * `projects/{project}/locations/{location}/extensions/{extension}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.ExtensionTool.
 * Use `create(Tool_ExtensionToolSchema)` to create a new message.
 */
export const Tool_ExtensionToolSchema: GenMessage<Tool_ExtensionTool> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 2);

/**
 * A Function tool describes the functions to be invoked on the client side.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.FunctionTool
 */
export type Tool_FunctionTool = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.FunctionTool"> & {
  /**
   * Optional. The JSON schema is encapsulated in a
   * [google.protobuf.Struct][google.protobuf.Struct] to describe the input of
   * the function. This input is a JSON object that contains the function's
   * parameters as properties of the object.
   *
   * @generated from field: google.protobuf.Struct input_schema = 1;
   */
  inputSchema?: JsonObject;

  /**
   * Optional. The JSON schema is encapsulated in a
   * [google.protobuf.Struct][google.protobuf.Struct] to describe the output
   * of the function. This output is a JSON object that contains the
   * function's parameters as properties of the object.
   *
   * @generated from field: google.protobuf.Struct output_schema = 2;
   */
  outputSchema?: JsonObject;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.FunctionTool.
 * Use `create(Tool_FunctionToolSchema)` to create a new message.
 */
export const Tool_FunctionToolSchema: GenMessage<Tool_FunctionTool> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 3);

/**
 * Authentication information required for API calls
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.Authentication
 */
export type Tool_Authentication = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.Authentication"> & {
  /**
   * The auth configuration.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.auth_config
   */
  authConfig: {
    /**
     * Config for API key auth.
     *
     * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.ApiKeyConfig api_key_config = 1;
     */
    value: Tool_Authentication_ApiKeyConfig;
    case: "apiKeyConfig";
  } | {
    /**
     * Config for OAuth.
     *
     * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.OAuthConfig oauth_config = 2;
     */
    value: Tool_Authentication_OAuthConfig;
    case: "oauthConfig";
  } | {
    /**
     * Config for [Diglogflow service
     * agent](https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent)
     * auth.
     *
     * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.ServiceAgentAuthConfig service_agent_auth_config = 3;
     */
    value: Tool_Authentication_ServiceAgentAuthConfig;
    case: "serviceAgentAuthConfig";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.
 * Use `create(Tool_AuthenticationSchema)` to create a new message.
 */
export const Tool_AuthenticationSchema: GenMessage<Tool_Authentication> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 4);

/**
 * Config for authentication with API key.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.ApiKeyConfig
 */
export type Tool_Authentication_ApiKeyConfig = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.ApiKeyConfig"> & {
  /**
   * Required. The parameter name or the header name of the API key.
   * E.g., If the API request is "https://example.com/act?X-Api-Key=<API
   * KEY>", "X-Api-Key" would be the parameter name.
   *
   * @generated from field: string key_name = 1;
   */
  keyName: string;

  /**
   * Required. The API key.
   *
   * @generated from field: string api_key = 2;
   */
  apiKey: string;

  /**
   * Required. Key location in the request.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.RequestLocation request_location = 3;
   */
  requestLocation: Tool_Authentication_RequestLocation;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.ApiKeyConfig.
 * Use `create(Tool_Authentication_ApiKeyConfigSchema)` to create a new message.
 */
export const Tool_Authentication_ApiKeyConfigSchema: GenMessage<Tool_Authentication_ApiKeyConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 4, 0);

/**
 * Config for authentication with OAuth.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.OAuthConfig
 */
export type Tool_Authentication_OAuthConfig = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.OAuthConfig"> & {
  /**
   * Required. OAuth grant types.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.OAuthConfig.OauthGrantType oauth_grant_type = 1;
   */
  oauthGrantType: Tool_Authentication_OAuthConfig_OauthGrantType;

  /**
   * Required. The client ID from the OAuth provider.
   *
   * @generated from field: string client_id = 2;
   */
  clientId: string;

  /**
   * Required. The client secret from the OAuth provider.
   *
   * @generated from field: string client_secret = 3;
   */
  clientSecret: string;

  /**
   * Required. The token endpoint in the OAuth provider to exchange for an
   * access token.
   *
   * @generated from field: string token_endpoint = 4;
   */
  tokenEndpoint: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.OAuthConfig.
 * Use `create(Tool_Authentication_OAuthConfigSchema)` to create a new message.
 */
export const Tool_Authentication_OAuthConfigSchema: GenMessage<Tool_Authentication_OAuthConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 4, 1);

/**
 * OAuth grant types. Only [client credential
 * grant](https://oauth.net/2/grant-types/client-credentials) is
 * supported.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.OAuthConfig.OauthGrantType
 */
export enum Tool_Authentication_OAuthConfig_OauthGrantType {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: OAUTH_GRANT_TYPE_UNSPECIFIED = 0;
   */
  OAUTH_GRANT_TYPE_UNSPECIFIED = 0,

  /**
   * Represents the [client credential
   * flow](https://oauth.net/2/grant-types/client-credentials).
   *
   * @generated from enum value: CLIENT_CREDENTIAL = 1;
   */
  CLIENT_CREDENTIAL = 1,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.OAuthConfig.OauthGrantType.
 */
export const Tool_Authentication_OAuthConfig_OauthGrantTypeSchema: GenEnum<Tool_Authentication_OAuthConfig_OauthGrantType> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 4, 1, 0);

/**
 * Config for auth using [Diglogflow service
 * agent](https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent).
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.ServiceAgentAuthConfig
 */
export type Tool_Authentication_ServiceAgentAuthConfig = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.ServiceAgentAuthConfig"> & {
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.ServiceAgentAuthConfig.
 * Use `create(Tool_Authentication_ServiceAgentAuthConfigSchema)` to create a new message.
 */
export const Tool_Authentication_ServiceAgentAuthConfigSchema: GenMessage<Tool_Authentication_ServiceAgentAuthConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 4, 2);

/**
 * The location of the API key in the request.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.RequestLocation
 */
export enum Tool_Authentication_RequestLocation {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: REQUEST_LOCATION_UNSPECIFIED = 0;
   */
  REQUEST_LOCATION_UNSPECIFIED = 0,

  /**
   * Represents the key in http header.
   *
   * @generated from enum value: HEADER = 1;
   */
  HEADER = 1,

  /**
   * Represents the key in query string.
   *
   * @generated from enum value: QUERY_STRING = 2;
   */
  QUERY_STRING = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3beta1.Tool.Authentication.RequestLocation.
 */
export const Tool_Authentication_RequestLocationSchema: GenEnum<Tool_Authentication_RequestLocation> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 4, 0);

/**
 * The TLS configuration.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.TLSConfig
 */
export type Tool_TLSConfig = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.TLSConfig"> & {
  /**
   * Required. Specifies a list of allowed custom CA certificates for HTTPS
   * verification.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3beta1.Tool.TLSConfig.CACert ca_certs = 1;
   */
  caCerts: Tool_TLSConfig_CACert[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.TLSConfig.
 * Use `create(Tool_TLSConfigSchema)` to create a new message.
 */
export const Tool_TLSConfigSchema: GenMessage<Tool_TLSConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 5);

/**
 * The CA certificate.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.TLSConfig.CACert
 */
export type Tool_TLSConfig_CACert = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.TLSConfig.CACert"> & {
  /**
   * Required. The name of the allowed custom CA certificates. This
   * can be used to disambiguate the custom CA certificates.
   *
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * Required. The allowed custom CA certificates (in DER format) for
   * HTTPS verification. This overrides the default SSL trust store. If this
   * is empty or unspecified, Dialogflow will use Google's default trust
   * store to verify certificates. N.B. Make sure the HTTPS server
   * certificates are signed with "subject alt name". For instance a
   * certificate can be self-signed using the following command,
   *    openssl x509 -req -days 200 -in example.com.csr \
   *      -signkey example.com.key \
   *      -out example.com.crt \
   *      -extfile <(printf "\nsubjectAltName='DNS:www.example.com'")
   *
   * @generated from field: bytes cert = 2;
   */
  cert: Uint8Array;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.TLSConfig.CACert.
 * Use `create(Tool_TLSConfig_CACertSchema)` to create a new message.
 */
export const Tool_TLSConfig_CACertSchema: GenMessage<Tool_TLSConfig_CACert> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 5, 0);

/**
 * Configuration for tools using Service Directory.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.Tool.ServiceDirectoryConfig
 */
export type Tool_ServiceDirectoryConfig = Message<"google.cloud.dialogflow.cx.v3beta1.Tool.ServiceDirectoryConfig"> & {
  /**
   * Required. The name of [Service
   * Directory](https://cloud.google.com/service-directory) service.
   * Format:
   * `projects/<ProjectID>/locations/<LocationID>/namespaces/<NamespaceID>/services/<ServiceID>`.
   * `LocationID` of the service directory must be the same as the location
   * of the agent.
   *
   * @generated from field: string service = 1;
   */
  service: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.Tool.ServiceDirectoryConfig.
 * Use `create(Tool_ServiceDirectoryConfigSchema)` to create a new message.
 */
export const Tool_ServiceDirectoryConfigSchema: GenMessage<Tool_ServiceDirectoryConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 6);

/**
 * Represents the type of the tool.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3beta1.Tool.ToolType
 */
export enum Tool_ToolType {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: TOOL_TYPE_UNSPECIFIED = 0;
   */
  TOOL_TYPE_UNSPECIFIED = 0,

  /**
   * Customer provided tool.
   *
   * @generated from enum value: CUSTOMIZED_TOOL = 1;
   */
  CUSTOMIZED_TOOL = 1,

  /**
   * First party built-in tool created by Dialogflow which cannot be modified.
   *
   * @generated from enum value: BUILTIN_TOOL = 2;
   */
  BUILTIN_TOOL = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3beta1.Tool.ToolType.
 */
export const Tool_ToolTypeSchema: GenEnum<Tool_ToolType> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 8, 0);

/**
 * Metadata returned for the
 * [Tools.ExportTools][google.cloud.dialogflow.cx.v3beta1.Tools.ExportTools]
 * long running operation.
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.ExportToolsMetadata
 */
export type ExportToolsMetadata = Message<"google.cloud.dialogflow.cx.v3beta1.ExportToolsMetadata"> & {
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.ExportToolsMetadata.
 * Use `create(ExportToolsMetadataSchema)` to create a new message.
 */
export const ExportToolsMetadataSchema: GenMessage<ExportToolsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 9);

/**
 * Service for managing [Tools][google.cloud.dialogflow.cx.v3beta1.Tool].
 *
 * @generated from service google.cloud.dialogflow.cx.v3beta1.Tools
 */
export const Tools: GenService<{
  /**
   * Creates a [Tool][google.cloud.dialogflow.cx.v3beta1.Tool] in the specified
   * agent.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.Tools.CreateTool
   */
  createTool: {
    methodKind: "unary";
    input: typeof CreateToolRequestSchema;
    output: typeof ToolSchema;
  },
  /**
   * Returns a list of [Tools][google.cloud.dialogflow.cx.v3beta1.Tool] in the
   * specified agent.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.Tools.ListTools
   */
  listTools: {
    methodKind: "unary";
    input: typeof ListToolsRequestSchema;
    output: typeof ListToolsResponseSchema;
  },
  /**
   * Exports the selected tools.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.Tools.ExportTools
   */
  exportTools: {
    methodKind: "unary";
    input: typeof ExportToolsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Retrieves the specified [Tool][google.cloud.dialogflow.cx.v3beta1.Tool].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.Tools.GetTool
   */
  getTool: {
    methodKind: "unary";
    input: typeof GetToolRequestSchema;
    output: typeof ToolSchema;
  },
  /**
   * Update the specified [Tool][google.cloud.dialogflow.cx.v3beta1.Tool].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.Tools.UpdateTool
   */
  updateTool: {
    methodKind: "unary";
    input: typeof UpdateToolRequestSchema;
    output: typeof ToolSchema;
  },
  /**
   * Deletes a specified [Tool][google.cloud.dialogflow.cx.v3beta1.Tool].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.Tools.DeleteTool
   */
  deleteTool: {
    methodKind: "unary";
    input: typeof DeleteToolRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_cx_v3beta1_tool, 0);

