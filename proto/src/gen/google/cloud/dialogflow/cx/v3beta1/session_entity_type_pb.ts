// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/cx/v3beta1/session_entity_type.proto (package google.cloud.dialogflow.cx.v3beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { EntityType_Entity } from "./entity_type_pb";
import { file_google_cloud_dialogflow_cx_v3beta1_entity_type } from "./entity_type_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/cx/v3beta1/session_entity_type.proto.
 */
export const file_google_cloud_dialogflow_cx_v3beta1_session_entity_type: GenFile = /*@__PURE__*/
  fileDesc("Cjxnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy9jeC92M2JldGExL3Nlc3Npb25fZW50aXR5X3R5cGUucHJvdG8SImdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEi/wQKEVNlc3Npb25FbnRpdHlUeXBlEhEKBG5hbWUYASABKAlCA+BBAhJrChRlbnRpdHlfb3ZlcnJpZGVfbW9kZRgDIAEoDjJILmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuU2Vzc2lvbkVudGl0eVR5cGUuRW50aXR5T3ZlcnJpZGVNb2RlQgPgQQISTAoIZW50aXRpZXMYBCADKAsyNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLkVudGl0eVR5cGUuRW50aXR5QgPgQQIiggEKEkVudGl0eU92ZXJyaWRlTW9kZRIkCiBFTlRJVFlfT1ZFUlJJREVfTU9ERV9VTlNQRUNJRklFRBAAEiEKHUVOVElUWV9PVkVSUklERV9NT0RFX09WRVJSSURFEAESIwofRU5USVRZX09WRVJSSURFX01PREVfU1VQUExFTUVOVBACOpYC6kGSAgorZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9TZXNzaW9uRW50aXR5VHlwZRJjcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2FnZW50cy97YWdlbnR9L3Nlc3Npb25zL3tzZXNzaW9ufS9lbnRpdHlUeXBlcy97ZW50aXR5X3R5cGV9En5wcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vYWdlbnRzL3thZ2VudH0vZW52aXJvbm1lbnRzL3tlbnZpcm9ubWVudH0vc2Vzc2lvbnMve3Nlc3Npb259L2VudGl0eVR5cGVzL3tlbnRpdHlfdHlwZX0iiwEKHUxpc3RTZXNzaW9uRW50aXR5VHlwZXNSZXF1ZXN0EkMKBnBhcmVudBgBIAEoCUIz4EEC+kEtEitkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1Nlc3Npb25FbnRpdHlUeXBlEhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJIo4BCh5MaXN0U2Vzc2lvbkVudGl0eVR5cGVzUmVzcG9uc2USUwoUc2Vzc2lvbl9lbnRpdHlfdHlwZXMYASADKAsyNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLlNlc3Npb25FbnRpdHlUeXBlEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJgChtHZXRTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QSQQoEbmFtZRgBIAEoCUIz4EEC+kEtCitkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1Nlc3Npb25FbnRpdHlUeXBlIr4BCh5DcmVhdGVTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QSQwoGcGFyZW50GAEgASgJQjPgQQL6QS0SK2RpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vU2Vzc2lvbkVudGl0eVR5cGUSVwoTc2Vzc2lvbl9lbnRpdHlfdHlwZRgCIAEoCzI1Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuU2Vzc2lvbkVudGl0eVR5cGVCA+BBAiKqAQoeVXBkYXRlU2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0ElcKE3Nlc3Npb25fZW50aXR5X3R5cGUYASABKAsyNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLlNlc3Npb25FbnRpdHlUeXBlQgPgQQISLwoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrImMKHkRlbGV0ZVNlc3Npb25FbnRpdHlUeXBlUmVxdWVzdBJBCgRuYW1lGAEgASgJQjPgQQL6QS0KK2RpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vU2Vzc2lvbkVudGl0eVR5cGUypQ8KElNlc3Npb25FbnRpdHlUeXBlcxLXAgoWTGlzdFNlc3Npb25FbnRpdHlUeXBlcxJBLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuTGlzdFNlc3Npb25FbnRpdHlUeXBlc1JlcXVlc3QaQi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLkxpc3RTZXNzaW9uRW50aXR5VHlwZXNSZXNwb25zZSK1AdpBBnBhcmVudILT5JMCpQFaWRJXL3YzYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Vudmlyb25tZW50cy8qL3Nlc3Npb25zLyp9L2VudGl0eVR5cGVzEkgvdjNiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovc2Vzc2lvbnMvKn0vZW50aXR5VHlwZXMSxAIKFEdldFNlc3Npb25FbnRpdHlUeXBlEj8uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5HZXRTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QaNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLlNlc3Npb25FbnRpdHlUeXBlIrMB2kEEbmFtZYLT5JMCpQFaWRJXL3YzYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9lbnZpcm9ubWVudHMvKi9zZXNzaW9ucy8qL2VudGl0eVR5cGVzLyp9EkgvdjNiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn0SigMKF0NyZWF0ZVNlc3Npb25FbnRpdHlUeXBlEkIuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5DcmVhdGVTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QaNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M2JldGExLlNlc3Npb25FbnRpdHlUeXBlIvMB2kEacGFyZW50LHNlc3Npb25fZW50aXR5X3R5cGWC0+STAs8BOhNzZXNzaW9uX2VudGl0eV90eXBlWm46E3Nlc3Npb25fZW50aXR5X3R5cGUiVy92M2JldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9lbnZpcm9ubWVudHMvKi9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlcyJIL3YzYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL3Nlc3Npb25zLyp9L2VudGl0eVR5cGVzErgDChdVcGRhdGVTZXNzaW9uRW50aXR5VHlwZRJCLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzYmV0YTEuVXBkYXRlU2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0GjUuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5TZXNzaW9uRW50aXR5VHlwZSKhAtpBH3Nlc3Npb25fZW50aXR5X3R5cGUsdXBkYXRlX21hc2uC0+STAvgBOhNzZXNzaW9uX2VudGl0eV90eXBlWoIBOhNzZXNzaW9uX2VudGl0eV90eXBlMmsvdjNiZXRhMS97c2Vzc2lvbl9lbnRpdHlfdHlwZS5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZW52aXJvbm1lbnRzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfTJcL3YzYmV0YTEve3Nlc3Npb25fZW50aXR5X3R5cGUubmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn0SqwIKF0RlbGV0ZVNlc3Npb25FbnRpdHlUeXBlEkIuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMS5EZWxldGVTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiswHaQQRuYW1lgtPkkwKlAVpZKlcvdjNiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Vudmlyb25tZW50cy8qL3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn0qSC92M2JldGExL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfRp4ykEZZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbdJBWWh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9kaWFsb2dmbG93QtABCiZjb20uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNiZXRhMUIWU2Vzc2lvbkVudGl0eVR5cGVQcm90b1ABWjZjbG91ZC5nb29nbGUuY29tL2dvL2RpYWxvZ2Zsb3cvY3gvYXBpdjNiZXRhMS9jeHBiO2N4cGL4AQGiAgJERqoCIkdvb2dsZS5DbG91ZC5EaWFsb2dmbG93LkN4LlYzQmV0YTHqAiZHb29nbGU6OkNsb3VkOjpEaWFsb2dmbG93OjpDWDo6VjNiZXRhMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_cx_v3beta1_entity_type, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Session entity types are referred to as **User** entity types and are
 * entities that are built for an individual user such as favorites,
 * preferences, playlists, and so on.
 *
 * You can redefine a session entity type at the session level to extend or
 * replace a [custom entity type][google.cloud.dialogflow.cx.v3beta1.EntityType]
 * at the user session level (we refer to the entity types defined at the agent
 * level as "custom entity types").
 *
 * Note: session entity types apply to all queries, regardless of the language.
 *
 * For more information about entity types, see the [Dialogflow
 * documentation](https://cloud.google.com/dialogflow/docs/entities-overview).
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.SessionEntityType
 */
export type SessionEntityType = Message<"google.cloud.dialogflow.cx.v3beta1.SessionEntityType"> & {
  /**
   * Required. The unique identifier of the session entity type.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/sessions/<Session ID>/entityTypes/<Entity Type
   * ID>` or `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>/sessions/<Session ID>/entityTypes/<Entity
   * Type ID>`. If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Indicates whether the additional data should override or
   * supplement the custom entity type definition.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.SessionEntityType.EntityOverrideMode entity_override_mode = 3;
   */
  entityOverrideMode: SessionEntityType_EntityOverrideMode;

  /**
   * Required. The collection of entities to override or supplement the custom
   * entity type.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3beta1.EntityType.Entity entities = 4;
   */
  entities: EntityType_Entity[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.SessionEntityType.
 * Use `create(SessionEntityTypeSchema)` to create a new message.
 */
export const SessionEntityTypeSchema: GenMessage<SessionEntityType> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_session_entity_type, 0);

/**
 * The types of modifications for the session entity type.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3beta1.SessionEntityType.EntityOverrideMode
 */
export enum SessionEntityType_EntityOverrideMode {
  /**
   * Not specified. This value should be never used.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The collection of session entities overrides the collection of entities
   * in the corresponding custom entity type.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_OVERRIDE = 1;
   */
  OVERRIDE = 1,

  /**
   * The collection of session entities extends the collection of entities in
   * the corresponding custom entity type.
   *
   * Note: Even in this override mode calls to `ListSessionEntityTypes`,
   * `GetSessionEntityType`, `CreateSessionEntityType` and
   * `UpdateSessionEntityType` only return the additional entities added in
   * this session entity type. If you want to get the supplemented list,
   * please call
   * [EntityTypes.GetEntityType][google.cloud.dialogflow.cx.v3beta1.EntityTypes.GetEntityType]
   * on the custom entity type and merge.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_SUPPLEMENT = 2;
   */
  SUPPLEMENT = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3beta1.SessionEntityType.EntityOverrideMode.
 */
export const SessionEntityType_EntityOverrideModeSchema: GenEnum<SessionEntityType_EntityOverrideMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3beta1_session_entity_type, 0, 0);

/**
 * The request message for
 * [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.ListSessionEntityTypes].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.ListSessionEntityTypesRequest
 */
export type ListSessionEntityTypesRequest = Message<"google.cloud.dialogflow.cx.v3beta1.ListSessionEntityTypesRequest"> & {
  /**
   * Required. The session to list all session entity types from.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/sessions/<Session ID>` or `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/environments/<Environment ID>/sessions/<Session ID>`.
   * If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return in a single page. By default 100 and
   * at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.ListSessionEntityTypesRequest.
 * Use `create(ListSessionEntityTypesRequestSchema)` to create a new message.
 */
export const ListSessionEntityTypesRequestSchema: GenMessage<ListSessionEntityTypesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_session_entity_type, 1);

/**
 * The response message for
 * [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.ListSessionEntityTypes].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.ListSessionEntityTypesResponse
 */
export type ListSessionEntityTypesResponse = Message<"google.cloud.dialogflow.cx.v3beta1.ListSessionEntityTypesResponse"> & {
  /**
   * The list of session entity types. There will be a maximum number of items
   * returned based on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3beta1.SessionEntityType session_entity_types = 1;
   */
  sessionEntityTypes: SessionEntityType[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.ListSessionEntityTypesResponse.
 * Use `create(ListSessionEntityTypesResponseSchema)` to create a new message.
 */
export const ListSessionEntityTypesResponseSchema: GenMessage<ListSessionEntityTypesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_session_entity_type, 2);

/**
 * The request message for
 * [SessionEntityTypes.GetSessionEntityType][google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.GetSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.GetSessionEntityTypeRequest
 */
export type GetSessionEntityTypeRequest = Message<"google.cloud.dialogflow.cx.v3beta1.GetSessionEntityTypeRequest"> & {
  /**
   * Required. The name of the session entity type.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/sessions/<Session ID>/entityTypes/<Entity Type ID>` or
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>/sessions/<Session ID>/entityTypes/<Entity
   * Type ID>`. If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.GetSessionEntityTypeRequest.
 * Use `create(GetSessionEntityTypeRequestSchema)` to create a new message.
 */
export const GetSessionEntityTypeRequestSchema: GenMessage<GetSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_session_entity_type, 3);

/**
 * The request message for
 * [SessionEntityTypes.CreateSessionEntityType][google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.CreateSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.CreateSessionEntityTypeRequest
 */
export type CreateSessionEntityTypeRequest = Message<"google.cloud.dialogflow.cx.v3beta1.CreateSessionEntityTypeRequest"> & {
  /**
   * Required. The session to create a session entity type for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/sessions/<Session ID>` or `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/environments/<Environment ID>/sessions/<Session ID>`.
   * If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The session entity type to create.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.SessionEntityType session_entity_type = 2;
   */
  sessionEntityType?: SessionEntityType;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.CreateSessionEntityTypeRequest.
 * Use `create(CreateSessionEntityTypeRequestSchema)` to create a new message.
 */
export const CreateSessionEntityTypeRequestSchema: GenMessage<CreateSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_session_entity_type, 4);

/**
 * The request message for
 * [SessionEntityTypes.UpdateSessionEntityType][google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.UpdateSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.UpdateSessionEntityTypeRequest
 */
export type UpdateSessionEntityTypeRequest = Message<"google.cloud.dialogflow.cx.v3beta1.UpdateSessionEntityTypeRequest"> & {
  /**
   * Required. The session entity type to update.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/sessions/<Session ID>/entityTypes/<Entity Type ID>` or
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>/sessions/<Session ID>/entityTypes/<Entity
   * Type ID>`. If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3beta1.SessionEntityType session_entity_type = 1;
   */
  sessionEntityType?: SessionEntityType;

  /**
   * The mask to control which fields get updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.UpdateSessionEntityTypeRequest.
 * Use `create(UpdateSessionEntityTypeRequestSchema)` to create a new message.
 */
export const UpdateSessionEntityTypeRequestSchema: GenMessage<UpdateSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_session_entity_type, 5);

/**
 * The request message for
 * [SessionEntityTypes.DeleteSessionEntityType][google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.DeleteSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.cx.v3beta1.DeleteSessionEntityTypeRequest
 */
export type DeleteSessionEntityTypeRequest = Message<"google.cloud.dialogflow.cx.v3beta1.DeleteSessionEntityTypeRequest"> & {
  /**
   * Required. The name of the session entity type to delete.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/sessions/<Session ID>/entityTypes/<Entity Type ID>` or
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>/sessions/<Session ID>/entityTypes/<Entity
   * Type ID>`. If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3beta1.DeleteSessionEntityTypeRequest.
 * Use `create(DeleteSessionEntityTypeRequestSchema)` to create a new message.
 */
export const DeleteSessionEntityTypeRequestSchema: GenMessage<DeleteSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3beta1_session_entity_type, 6);

/**
 * Service for managing
 * [SessionEntityTypes][google.cloud.dialogflow.cx.v3beta1.SessionEntityType].
 *
 * @generated from service google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes
 */
export const SessionEntityTypes: GenService<{
  /**
   * Returns the list of all session entity types in the specified session.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.ListSessionEntityTypes
   */
  listSessionEntityTypes: {
    methodKind: "unary";
    input: typeof ListSessionEntityTypesRequestSchema;
    output: typeof ListSessionEntityTypesResponseSchema;
  },
  /**
   * Retrieves the specified session entity type.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.GetSessionEntityType
   */
  getSessionEntityType: {
    methodKind: "unary";
    input: typeof GetSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Creates a session entity type.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.CreateSessionEntityType
   */
  createSessionEntityType: {
    methodKind: "unary";
    input: typeof CreateSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Updates the specified session entity type.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.UpdateSessionEntityType
   */
  updateSessionEntityType: {
    methodKind: "unary";
    input: typeof UpdateSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Deletes the specified session entity type.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3beta1.SessionEntityTypes.DeleteSessionEntityType
   */
  deleteSessionEntityType: {
    methodKind: "unary";
    input: typeof DeleteSessionEntityTypeRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_cx_v3beta1_session_entity_type, 0);

