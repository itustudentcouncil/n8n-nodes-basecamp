// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/cx/v3/audio_config.proto (package google.cloud.dialogflow.cx.v3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/cx/v3/audio_config.proto.
 */
export const file_google_cloud_dialogflow_cx_v3_audio_config: GenFile = /*@__PURE__*/
  fileDesc("CjBnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy9jeC92My9hdWRpb19jb25maWcucHJvdG8SHWdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzIpIBCg5TcGVlY2hXb3JkSW5mbxIMCgR3b3JkGAMgASgJEi8KDHN0YXJ0X29mZnNldBgBIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhItCgplbmRfb2Zmc2V0GAIgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEhIKCmNvbmZpZGVuY2UYBCABKAIiewoNQmFyZ2VJbkNvbmZpZxI3ChRub19iYXJnZV9pbl9kdXJhdGlvbhgBIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIxCg50b3RhbF9kdXJhdGlvbhgCIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbiKNAwoQSW5wdXRBdWRpb0NvbmZpZxJJCg5hdWRpb19lbmNvZGluZxgBIAEoDjIsLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkF1ZGlvRW5jb2RpbmdCA+BBAhIZChFzYW1wbGVfcmF0ZV9oZXJ0ehgCIAEoBRIYChBlbmFibGVfd29yZF9pbmZvGA0gASgIEhQKDHBocmFzZV9oaW50cxgEIAMoCRINCgVtb2RlbBgHIAEoCRJICg1tb2RlbF92YXJpYW50GAogASgOMjEuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuU3BlZWNoTW9kZWxWYXJpYW50EhgKEHNpbmdsZV91dHRlcmFuY2UYCCABKAgSRQoPYmFyZ2VfaW5fY29uZmlnGA8gASgLMiwuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuQmFyZ2VJbkNvbmZpZxIpCiFvcHRfb3V0X2NvbmZvcm1lcl9tb2RlbF9taWdyYXRpb24YGiABKAgiaQoUVm9pY2VTZWxlY3Rpb25QYXJhbXMSDAoEbmFtZRgBIAEoCRJDCgtzc21sX2dlbmRlchgCIAEoDjIuLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlNzbWxWb2ljZUdlbmRlciK2AQoWU3ludGhlc2l6ZVNwZWVjaENvbmZpZxIVCg1zcGVha2luZ19yYXRlGAEgASgBEg0KBXBpdGNoGAIgASgBEhYKDnZvbHVtZV9nYWluX2RiGAMgASgBEhoKEmVmZmVjdHNfcHJvZmlsZV9pZBgFIAMoCRJCCgV2b2ljZRgEIAEoCzIzLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlZvaWNlU2VsZWN0aW9uUGFyYW1zItgBChFPdXRwdXRBdWRpb0NvbmZpZxJPCg5hdWRpb19lbmNvZGluZxgBIAEoDjIyLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLk91dHB1dEF1ZGlvRW5jb2RpbmdCA+BBAhIZChFzYW1wbGVfcmF0ZV9oZXJ0ehgCIAEoBRJXChhzeW50aGVzaXplX3NwZWVjaF9jb25maWcYAyABKAsyNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5TeW50aGVzaXplU3BlZWNoQ29uZmlnIoICChRUZXh0VG9TcGVlY2hTZXR0aW5ncxJzChlzeW50aGVzaXplX3NwZWVjaF9jb25maWdzGAEgAygLMlAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuVGV4dFRvU3BlZWNoU2V0dGluZ3MuU3ludGhlc2l6ZVNwZWVjaENvbmZpZ3NFbnRyeRp1ChxTeW50aGVzaXplU3BlZWNoQ29uZmlnc0VudHJ5EgsKA2tleRgBIAEoCRJECgV2YWx1ZRgCIAEoCzI1Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlN5bnRoZXNpemVTcGVlY2hDb25maWc6AjgBKvsBCg1BdWRpb0VuY29kaW5nEh4KGkFVRElPX0VOQ09ESU5HX1VOU1BFQ0lGSUVEEAASHAoYQVVESU9fRU5DT0RJTkdfTElORUFSXzE2EAESFwoTQVVESU9fRU5DT0RJTkdfRkxBQxACEhgKFEFVRElPX0VOQ09ESU5HX01VTEFXEAMSFgoSQVVESU9fRU5DT0RJTkdfQU1SEAQSGQoVQVVESU9fRU5DT0RJTkdfQU1SX1dCEAUSGwoXQVVESU9fRU5DT0RJTkdfT0dHX09QVVMQBhIpCiVBVURJT19FTkNPRElOR19TUEVFWF9XSVRIX0hFQURFUl9CWVRFEAcqdgoSU3BlZWNoTW9kZWxWYXJpYW50EiQKIFNQRUVDSF9NT0RFTF9WQVJJQU5UX1VOU1BFQ0lGSUVEEAASFgoSVVNFX0JFU1RfQVZBSUxBQkxFEAESEAoMVVNFX1NUQU5EQVJEEAISEAoMVVNFX0VOSEFOQ0VEEAMqjQEKD1NzbWxWb2ljZUdlbmRlchIhCh1TU01MX1ZPSUNFX0dFTkRFUl9VTlNQRUNJRklFRBAAEhoKFlNTTUxfVk9JQ0VfR0VOREVSX01BTEUQARIcChhTU01MX1ZPSUNFX0dFTkRFUl9GRU1BTEUQAhIdChlTU01MX1ZPSUNFX0dFTkRFUl9ORVVUUkFMEAMq7AEKE091dHB1dEF1ZGlvRW5jb2RpbmcSJQohT1VUUFVUX0FVRElPX0VOQ09ESU5HX1VOU1BFQ0lGSUVEEAASIwofT1VUUFVUX0FVRElPX0VOQ09ESU5HX0xJTkVBUl8xNhABEh0KGU9VVFBVVF9BVURJT19FTkNPRElOR19NUDMQAhIlCiFPVVRQVVRfQVVESU9fRU5DT0RJTkdfTVAzXzY0X0tCUFMQBBIiCh5PVVRQVVRfQVVESU9fRU5DT0RJTkdfT0dHX09QVVMQAxIfChtPVVRQVVRfQVVESU9fRU5DT0RJTkdfTVVMQVcQBUKOAgohY29tLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzQhBBdWRpb0NvbmZpZ1Byb3RvUAFaMWNsb3VkLmdvb2dsZS5jb20vZ28vZGlhbG9nZmxvdy9jeC9hcGl2My9jeHBiO2N4cGL4AQGiAgJERqoCHUdvb2dsZS5DbG91ZC5EaWFsb2dmbG93LkN4LlYz6gIhR29vZ2xlOjpDbG91ZDo6RGlhbG9nZmxvdzo6Q1g6OlYz6kFVChthdXRvbWwuZ29vZ2xlYXBpcy5jb20vTW9kZWwSNnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9tb2RlbHMve21vZGVsfWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration]);

/**
 * Information for a word recognized by the speech recognizer.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.SpeechWordInfo
 */
export type SpeechWordInfo = Message<"google.cloud.dialogflow.cx.v3.SpeechWordInfo"> & {
  /**
   * The word this info is for.
   *
   * @generated from field: string word = 3;
   */
  word: string;

  /**
   * Time offset relative to the beginning of the audio that corresponds to the
   * start of the spoken word. This is an experimental feature and the accuracy
   * of the time offset can vary.
   *
   * @generated from field: google.protobuf.Duration start_offset = 1;
   */
  startOffset?: Duration;

  /**
   * Time offset relative to the beginning of the audio that corresponds to the
   * end of the spoken word. This is an experimental feature and the accuracy of
   * the time offset can vary.
   *
   * @generated from field: google.protobuf.Duration end_offset = 2;
   */
  endOffset?: Duration;

  /**
   * The Speech confidence between 0.0 and 1.0 for this word. A higher number
   * indicates an estimated greater likelihood that the recognized word is
   * correct. The default of 0.0 is a sentinel value indicating that confidence
   * was not set.
   *
   * This field is not guaranteed to be fully stable over time for the same
   * audio input. Users should also not rely on it to always be provided.
   *
   * @generated from field: float confidence = 4;
   */
  confidence: number;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.SpeechWordInfo.
 * Use `create(SpeechWordInfoSchema)` to create a new message.
 */
export const SpeechWordInfoSchema: GenMessage<SpeechWordInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 0);

/**
 * Configuration of the barge-in behavior. Barge-in instructs the API to return
 * a detected utterance at a proper time while the client is playing back the
 * response audio from a previous request. When the client sees the
 * utterance, it should stop the playback and immediately get ready for
 * receiving the responses for the current request.
 *
 * The barge-in handling requires the client to start streaming audio input
 * as soon as it starts playing back the audio from the previous response. The
 * playback is modeled into two phases:
 *
 * * No barge-in phase: which goes first and during which speech detection
 *   should not be carried out.
 *
 * * Barge-in phase: which follows the no barge-in phase and during which
 *   the API starts speech detection and may inform the client that an utterance
 *   has been detected. Note that no-speech event is not expected in this
 *   phase.
 *
 * The client provides this configuration in terms of the durations of those
 * two phases. The durations are measured in terms of the audio length from the
 * the start of the input audio.
 *
 * No-speech event is a response with END_OF_UTTERANCE without any transcript
 * following up.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.BargeInConfig
 */
export type BargeInConfig = Message<"google.cloud.dialogflow.cx.v3.BargeInConfig"> & {
  /**
   * Duration that is not eligible for barge-in at the beginning of the input
   * audio.
   *
   * @generated from field: google.protobuf.Duration no_barge_in_duration = 1;
   */
  noBargeInDuration?: Duration;

  /**
   * Total duration for the playback at the beginning of the input audio.
   *
   * @generated from field: google.protobuf.Duration total_duration = 2;
   */
  totalDuration?: Duration;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.BargeInConfig.
 * Use `create(BargeInConfigSchema)` to create a new message.
 */
export const BargeInConfigSchema: GenMessage<BargeInConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 1);

/**
 * Instructs the speech recognizer on how to process the audio content.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.InputAudioConfig
 */
export type InputAudioConfig = Message<"google.cloud.dialogflow.cx.v3.InputAudioConfig"> & {
  /**
   * Required. Audio encoding of the audio content to process.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.AudioEncoding audio_encoding = 1;
   */
  audioEncoding: AudioEncoding;

  /**
   * Sample rate (in Hertz) of the audio content sent in the query.
   * Refer to
   * [Cloud Speech API
   * documentation](https://cloud.google.com/speech-to-text/docs/basics) for
   * more details.
   *
   * @generated from field: int32 sample_rate_hertz = 2;
   */
  sampleRateHertz: number;

  /**
   * Optional. If `true`, Dialogflow returns
   * [SpeechWordInfo][google.cloud.dialogflow.cx.v3.SpeechWordInfo] in
   * [StreamingRecognitionResult][google.cloud.dialogflow.cx.v3.StreamingRecognitionResult]
   * with information about the recognized speech words, e.g. start and end time
   * offsets. If false or unspecified, Speech doesn't return any word-level
   * information.
   *
   * @generated from field: bool enable_word_info = 13;
   */
  enableWordInfo: boolean;

  /**
   * Optional. A list of strings containing words and phrases that the speech
   * recognizer should recognize with higher likelihood.
   *
   * See [the Cloud Speech
   * documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints)
   * for more details.
   *
   * @generated from field: repeated string phrase_hints = 4;
   */
  phraseHints: string[];

  /**
   * Optional. Which Speech model to select for the given request.
   * For more information, see
   * [Speech
   * models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
   *
   * @generated from field: string model = 7;
   */
  model: string;

  /**
   * Optional. Which variant of the [Speech
   * model][google.cloud.dialogflow.cx.v3.InputAudioConfig.model] to use.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.SpeechModelVariant model_variant = 10;
   */
  modelVariant: SpeechModelVariant;

  /**
   * Optional. If `false` (default), recognition does not cease until the
   * client closes the stream.
   * If `true`, the recognizer will detect a single spoken utterance in input
   * audio. Recognition ceases when it detects the audio's voice has
   * stopped or paused. In this case, once a detected intent is received, the
   * client should close the stream and start a new request with a new stream as
   * needed.
   * Note: This setting is relevant only for streaming methods.
   *
   * @generated from field: bool single_utterance = 8;
   */
  singleUtterance: boolean;

  /**
   * Configuration of barge-in behavior during the streaming of input audio.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.BargeInConfig barge_in_config = 15;
   */
  bargeInConfig?: BargeInConfig;

  /**
   * If `true`, the request will opt out for STT conformer model migration.
   * This field will be deprecated once force migration takes place in June
   * 2024. Please refer to [Dialogflow CX Speech model
   * migration](https://cloud.google.com/dialogflow/cx/docs/concept/speech-model-migration).
   *
   * @generated from field: bool opt_out_conformer_model_migration = 26;
   */
  optOutConformerModelMigration: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.InputAudioConfig.
 * Use `create(InputAudioConfigSchema)` to create a new message.
 */
export const InputAudioConfigSchema: GenMessage<InputAudioConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 2);

/**
 * Description of which voice to use for speech synthesis.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.VoiceSelectionParams
 */
export type VoiceSelectionParams = Message<"google.cloud.dialogflow.cx.v3.VoiceSelectionParams"> & {
  /**
   * Optional. The name of the voice. If not set, the service will choose a
   * voice based on the other parameters such as language_code and
   * [ssml_gender][google.cloud.dialogflow.cx.v3.VoiceSelectionParams.ssml_gender].
   *
   * For the list of available voices, please refer to [Supported voices and
   * languages](https://cloud.google.com/text-to-speech/docs/voices).
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The preferred gender of the voice. If not set, the service will
   * choose a voice based on the other parameters such as language_code and
   * [name][google.cloud.dialogflow.cx.v3.VoiceSelectionParams.name]. Note that
   * this is only a preference, not requirement. If a voice of the appropriate
   * gender is not available, the synthesizer substitutes a voice with a
   * different gender rather than failing the request.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.SsmlVoiceGender ssml_gender = 2;
   */
  ssmlGender: SsmlVoiceGender;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.VoiceSelectionParams.
 * Use `create(VoiceSelectionParamsSchema)` to create a new message.
 */
export const VoiceSelectionParamsSchema: GenMessage<VoiceSelectionParams> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 3);

/**
 * Configuration of how speech should be synthesized.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.SynthesizeSpeechConfig
 */
export type SynthesizeSpeechConfig = Message<"google.cloud.dialogflow.cx.v3.SynthesizeSpeechConfig"> & {
  /**
   * Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal
   * native speed supported by the specific voice. 2.0 is twice as fast, and
   * 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any
   * other values < 0.25 or > 4.0 will return an error.
   *
   * @generated from field: double speaking_rate = 1;
   */
  speakingRate: number;

  /**
   * Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20
   * semitones from the original pitch. -20 means decrease 20 semitones from the
   * original pitch.
   *
   * @generated from field: double pitch = 2;
   */
  pitch: number;

  /**
   * Optional. Volume gain (in dB) of the normal native volume supported by the
   * specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of
   * 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB)
   * will play at approximately half the amplitude of the normal native signal
   * amplitude. A value of +6.0 (dB) will play at approximately twice the
   * amplitude of the normal native signal amplitude. We strongly recommend not
   * to exceed +10 (dB) as there's usually no effective increase in loudness for
   * any value greater than that.
   *
   * @generated from field: double volume_gain_db = 3;
   */
  volumeGainDb: number;

  /**
   * Optional. An identifier which selects 'audio effects' profiles that are
   * applied on (post synthesized) text to speech. Effects are applied on top of
   * each other in the order they are given.
   *
   * @generated from field: repeated string effects_profile_id = 5;
   */
  effectsProfileId: string[];

  /**
   * Optional. The desired voice of the synthesized audio.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.VoiceSelectionParams voice = 4;
   */
  voice?: VoiceSelectionParams;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.SynthesizeSpeechConfig.
 * Use `create(SynthesizeSpeechConfigSchema)` to create a new message.
 */
export const SynthesizeSpeechConfigSchema: GenMessage<SynthesizeSpeechConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 4);

/**
 * Instructs the speech synthesizer how to generate the output audio content.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.OutputAudioConfig
 */
export type OutputAudioConfig = Message<"google.cloud.dialogflow.cx.v3.OutputAudioConfig"> & {
  /**
   * Required. Audio encoding of the synthesized audio content.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.OutputAudioEncoding audio_encoding = 1;
   */
  audioEncoding: OutputAudioEncoding;

  /**
   * Optional. The synthesis sample rate (in hertz) for this audio. If not
   * provided, then the synthesizer will use the default sample rate based on
   * the audio encoding. If this is different from the voice's natural sample
   * rate, then the synthesizer will honor this request by converting to the
   * desired sample rate (which might result in worse audio quality).
   *
   * @generated from field: int32 sample_rate_hertz = 2;
   */
  sampleRateHertz: number;

  /**
   * Optional. Configuration of how speech should be synthesized.
   * If not specified,
   * [Agent.text_to_speech_settings][google.cloud.dialogflow.cx.v3.Agent.text_to_speech_settings]
   * is applied.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.SynthesizeSpeechConfig synthesize_speech_config = 3;
   */
  synthesizeSpeechConfig?: SynthesizeSpeechConfig;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.OutputAudioConfig.
 * Use `create(OutputAudioConfigSchema)` to create a new message.
 */
export const OutputAudioConfigSchema: GenMessage<OutputAudioConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 5);

/**
 * Settings related to speech synthesizing.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.TextToSpeechSettings
 */
export type TextToSpeechSettings = Message<"google.cloud.dialogflow.cx.v3.TextToSpeechSettings"> & {
  /**
   * Configuration of how speech should be synthesized, mapping from language
   * (https://cloud.google.com/dialogflow/cx/docs/reference/language) to
   * SynthesizeSpeechConfig.
   *
   * These settings affect:
   *
   *  - The [phone
   *  gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway)
   *    synthesize configuration set via
   *    [Agent.text_to_speech_settings][google.cloud.dialogflow.cx.v3.Agent.text_to_speech_settings].
   *
   *  - How speech is synthesized when invoking
   *  [session][google.cloud.dialogflow.cx.v3.Sessions] APIs.
   *    [Agent.text_to_speech_settings][google.cloud.dialogflow.cx.v3.Agent.text_to_speech_settings]
   *    only applies if
   *    [OutputAudioConfig.synthesize_speech_config][google.cloud.dialogflow.cx.v3.OutputAudioConfig.synthesize_speech_config]
   *    is not specified.
   *
   * @generated from field: map<string, google.cloud.dialogflow.cx.v3.SynthesizeSpeechConfig> synthesize_speech_configs = 1;
   */
  synthesizeSpeechConfigs: { [key: string]: SynthesizeSpeechConfig };
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.TextToSpeechSettings.
 * Use `create(TextToSpeechSettingsSchema)` to create a new message.
 */
export const TextToSpeechSettingsSchema: GenMessage<TextToSpeechSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 6);

/**
 * Audio encoding of the audio content sent in the conversational query request.
 * Refer to the
 * [Cloud Speech API
 * documentation](https://cloud.google.com/speech-to-text/docs/basics) for more
 * details.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.AudioEncoding
 */
export enum AudioEncoding {
  /**
   * Not specified.
   *
   * @generated from enum value: AUDIO_ENCODING_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Uncompressed 16-bit signed little-endian samples (Linear PCM).
   *
   * @generated from enum value: AUDIO_ENCODING_LINEAR_16 = 1;
   */
  LINEAR_16 = 1,

  /**
   * [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio
   * Codec) is the recommended encoding because it is lossless (therefore
   * recognition is not compromised) and requires only about half the
   * bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and
   * 24-bit samples, however, not all fields in `STREAMINFO` are supported.
   *
   * @generated from enum value: AUDIO_ENCODING_FLAC = 2;
   */
  FLAC = 2,

  /**
   * 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
   *
   * @generated from enum value: AUDIO_ENCODING_MULAW = 3;
   */
  MULAW = 3,

  /**
   * Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.
   *
   * @generated from enum value: AUDIO_ENCODING_AMR = 4;
   */
  AMR = 4,

  /**
   * Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
   *
   * @generated from enum value: AUDIO_ENCODING_AMR_WB = 5;
   */
  AMR_WB = 5,

  /**
   * Opus encoded audio frames in Ogg container
   * ([OggOpus](https://wiki.xiph.org/OggOpus)).
   * `sample_rate_hertz` must be 16000.
   *
   * @generated from enum value: AUDIO_ENCODING_OGG_OPUS = 6;
   */
  OGG_OPUS = 6,

  /**
   * Although the use of lossy encodings is not recommended, if a very low
   * bitrate encoding is required, `OGG_OPUS` is highly preferred over
   * Speex encoding. The [Speex](https://speex.org/) encoding supported by
   * Dialogflow API has a header byte in each block, as in MIME type
   * `audio/x-speex-with-header-byte`.
   * It is a variant of the RTP Speex encoding defined in
   * [RFC 5574](https://tools.ietf.org/html/rfc5574).
   * The stream is a sequence of blocks, one block per RTP packet. Each block
   * starts with a byte containing the length of the block, in bytes, followed
   * by one or more frames of Speex data, padded to an integral number of
   * bytes (octets) as specified in RFC 5574. In other words, each RTP header
   * is replaced with a single byte containing the block length. Only Speex
   * wideband is supported. `sample_rate_hertz` must be 16000.
   *
   * @generated from enum value: AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE = 7;
   */
  SPEEX_WITH_HEADER_BYTE = 7,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.AudioEncoding.
 */
export const AudioEncodingSchema: GenEnum<AudioEncoding> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 0);

/**
 * Variant of the specified [Speech
 * model][google.cloud.dialogflow.cx.v3.InputAudioConfig.model] to use.
 *
 * See the [Cloud Speech
 * documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
 * for which models have different variants. For example, the "phone_call" model
 * has both a standard and an enhanced variant. When you use an enhanced model,
 * you will generally receive higher quality results than for a standard model.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.SpeechModelVariant
 */
export enum SpeechModelVariant {
  /**
   * No model variant specified. In this case Dialogflow defaults to
   * USE_BEST_AVAILABLE.
   *
   * @generated from enum value: SPEECH_MODEL_VARIANT_UNSPECIFIED = 0;
   */
  SPEECH_MODEL_VARIANT_UNSPECIFIED = 0,

  /**
   * Use the best available variant of the [Speech
   * model][InputAudioConfig.model] that the caller is eligible for.
   *
   * @generated from enum value: USE_BEST_AVAILABLE = 1;
   */
  USE_BEST_AVAILABLE = 1,

  /**
   * Use standard model variant even if an enhanced model is available.  See the
   * [Cloud Speech
   * documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
   * for details about enhanced models.
   *
   * @generated from enum value: USE_STANDARD = 2;
   */
  USE_STANDARD = 2,

  /**
   * Use an enhanced model variant:
   *
   * * If an enhanced variant does not exist for the given
   *   [model][google.cloud.dialogflow.cx.v3.InputAudioConfig.model] and request
   *   language, Dialogflow falls back to the standard variant.
   *
   *   The [Cloud Speech
   *   documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
   *   describes which models have enhanced variants.
   *
   * @generated from enum value: USE_ENHANCED = 3;
   */
  USE_ENHANCED = 3,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.SpeechModelVariant.
 */
export const SpeechModelVariantSchema: GenEnum<SpeechModelVariant> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 1);

/**
 * Gender of the voice as described in
 * [SSML voice element](https://www.w3.org/TR/speech-synthesis11/#edef_voice).
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.SsmlVoiceGender
 */
export enum SsmlVoiceGender {
  /**
   * An unspecified gender, which means that the client doesn't care which
   * gender the selected voice will have.
   *
   * @generated from enum value: SSML_VOICE_GENDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * A male voice.
   *
   * @generated from enum value: SSML_VOICE_GENDER_MALE = 1;
   */
  MALE = 1,

  /**
   * A female voice.
   *
   * @generated from enum value: SSML_VOICE_GENDER_FEMALE = 2;
   */
  FEMALE = 2,

  /**
   * A gender-neutral voice.
   *
   * @generated from enum value: SSML_VOICE_GENDER_NEUTRAL = 3;
   */
  NEUTRAL = 3,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.SsmlVoiceGender.
 */
export const SsmlVoiceGenderSchema: GenEnum<SsmlVoiceGender> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 2);

/**
 * Audio encoding of the output audio format in Text-To-Speech.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.OutputAudioEncoding
 */
export enum OutputAudioEncoding {
  /**
   * Not specified.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Uncompressed 16-bit signed little-endian samples (Linear PCM).
   * Audio content returned as LINEAR16 also contains a WAV header.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_LINEAR_16 = 1;
   */
  LINEAR_16 = 1,

  /**
   * MP3 audio at 32kbps.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_MP3 = 2;
   */
  MP3 = 2,

  /**
   * MP3 audio at 64kbps.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_MP3_64_KBPS = 4;
   */
  MP3_64_KBPS = 4,

  /**
   * Opus encoded audio wrapped in an ogg container. The result will be a
   * file which can be played natively on Android, and in browsers (at least
   * Chrome and Firefox). The quality of the encoding is considerably higher
   * than MP3 while using approximately the same bitrate.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_OGG_OPUS = 3;
   */
  OGG_OPUS = 3,

  /**
   * 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_MULAW = 5;
   */
  MULAW = 5,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.OutputAudioEncoding.
 */
export const OutputAudioEncodingSchema: GenEnum<OutputAudioEncoding> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_audio_config, 3);

