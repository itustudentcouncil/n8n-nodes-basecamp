// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/cx/v3/version.proto (package google.cloud.dialogflow.cx.v3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { NluSettings } from "./flow_pb";
import { file_google_cloud_dialogflow_cx_v3_flow } from "./flow_pb";
import type { OperationSchema } from "../../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/cx/v3/version.proto.
 */
export const file_google_cloud_dialogflow_cx_v3_version: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy9jeC92My92ZXJzaW9uLnByb3RvEh1nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52MyJZCh5DcmVhdGVWZXJzaW9uT3BlcmF0aW9uTWV0YWRhdGESNwoHdmVyc2lvbhgBIAEoCUIm+kEjCiFkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1ZlcnNpb24izgMKB1ZlcnNpb24SDAoEbmFtZRgBIAEoCRIZCgxkaXNwbGF5X25hbWUYAiABKAlCA+BBAhITCgtkZXNjcmlwdGlvbhgDIAEoCRJFCgxubHVfc2V0dGluZ3MYBCABKAsyKi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5ObHVTZXR0aW5nc0ID4EEDEjQKC2NyZWF0ZV90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEkAKBXN0YXRlGAYgASgOMiwuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuVmVyc2lvbi5TdGF0ZUID4EEDIkYKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASCwoHUlVOTklORxABEg0KCVNVQ0NFRURFRBACEgoKBkZBSUxFRBADOn7qQXsKIWRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vVmVyc2lvbhJWcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2FnZW50cy97YWdlbnR9L2Zsb3dzL3tmbG93fS92ZXJzaW9ucy97dmVyc2lvbn0idwoTTGlzdFZlcnNpb25zUmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIxIhZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9WZXJzaW9uEhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJImkKFExpc3RWZXJzaW9uc1Jlc3BvbnNlEjgKCHZlcnNpb25zGAEgAygLMiYuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuVmVyc2lvbhIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiTAoRR2V0VmVyc2lvblJlcXVlc3QSNwoEbmFtZRgBIAEoCUIp4EEC+kEjCiFkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1ZlcnNpb24ijwEKFENyZWF0ZVZlcnNpb25SZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjEiFkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1ZlcnNpb24SPAoHdmVyc2lvbhgCIAEoCzImLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlZlcnNpb25CA+BBAiKKAQoUVXBkYXRlVmVyc2lvblJlcXVlc3QSPAoHdmVyc2lvbhgBIAEoCzImLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlZlcnNpb25CA+BBAhI0Cgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BBAiJPChREZWxldGVWZXJzaW9uUmVxdWVzdBI3CgRuYW1lGAEgASgJQingQQL6QSMKIWRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vVmVyc2lvbiJ1ChJMb2FkVmVyc2lvblJlcXVlc3QSNwoEbmFtZRgBIAEoCUIp4EEC+kEjCiFkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1ZlcnNpb24SJgoeYWxsb3dfb3ZlcnJpZGVfYWdlbnRfcmVzb3VyY2VzGAIgASgIIrMBChZDb21wYXJlVmVyc2lvbnNSZXF1ZXN0Ej8KDGJhc2VfdmVyc2lvbhgBIAEoCUIp4EEC+kEjCiFkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1ZlcnNpb24SQQoOdGFyZ2V0X3ZlcnNpb24YAiABKAlCKeBBAvpBIwohZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9WZXJzaW9uEhUKDWxhbmd1YWdlX2NvZGUYAyABKAkikwEKF0NvbXBhcmVWZXJzaW9uc1Jlc3BvbnNlEiEKGWJhc2VfdmVyc2lvbl9jb250ZW50X2pzb24YASABKAkSIwobdGFyZ2V0X3ZlcnNpb25fY29udGVudF9qc29uGAIgASgJEjAKDGNvbXBhcmVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAy4gwKCFZlcnNpb25zEscBCgxMaXN0VmVyc2lvbnMSMi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5MaXN0VmVyc2lvbnNSZXF1ZXN0GjMuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuTGlzdFZlcnNpb25zUmVzcG9uc2UiTtpBBnBhcmVudILT5JMCPxI9L3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9mbG93cy8qfS92ZXJzaW9ucxK0AQoKR2V0VmVyc2lvbhIwLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkdldFZlcnNpb25SZXF1ZXN0GiYuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuVmVyc2lvbiJM2kEEbmFtZYLT5JMCPxI9L3YzL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZmxvd3MvKi92ZXJzaW9ucy8qfRLxAQoNQ3JlYXRlVmVyc2lvbhIzLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkNyZWF0ZVZlcnNpb25SZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKLAcpBKQoHVmVyc2lvbhIeQ3JlYXRlVmVyc2lvbk9wZXJhdGlvbk1ldGFkYXRh2kEOcGFyZW50LHZlcnNpb26C0+STAkg6B3ZlcnNpb24iPS92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZmxvd3MvKn0vdmVyc2lvbnMS2gEKDVVwZGF0ZVZlcnNpb24SMy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5VcGRhdGVWZXJzaW9uUmVxdWVzdBomLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlZlcnNpb24ibNpBE3ZlcnNpb24sdXBkYXRlX21hc2uC0+STAlA6B3ZlcnNpb24yRS92My97dmVyc2lvbi5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZmxvd3MvKi92ZXJzaW9ucy8qfRKqAQoNRGVsZXRlVmVyc2lvbhIzLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkRlbGV0ZVZlcnNpb25SZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IkzaQQRuYW1lgtPkkwI/Kj0vdjMve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9mbG93cy8qL3ZlcnNpb25zLyp9EugBCgtMb2FkVmVyc2lvbhIxLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkxvYWRWZXJzaW9uUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24ihgHKQS8KFWdvb2dsZS5wcm90b2J1Zi5FbXB0eRIWZ29vZ2xlLnByb3RvYnVmLlN0cnVjdNpBBG5hbWWC0+STAkc6ASoiQi92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Zsb3dzLyovdmVyc2lvbnMvKn06bG9hZBLxAQoPQ29tcGFyZVZlcnNpb25zEjUuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuQ29tcGFyZVZlcnNpb25zUmVxdWVzdBo2Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkNvbXBhcmVWZXJzaW9uc1Jlc3BvbnNlIm/aQQxiYXNlX3ZlcnNpb26C0+STAlo6ASoiVS92My97YmFzZV92ZXJzaW9uPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZmxvd3MvKi92ZXJzaW9ucy8qfTpjb21wYXJlVmVyc2lvbnMaeMpBGWRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb23SQVlodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvZGlhbG9nZmxvd0KyAQohY29tLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzQgxWZXJzaW9uUHJvdG9QAVoxY2xvdWQuZ29vZ2xlLmNvbS9nby9kaWFsb2dmbG93L2N4L2FwaXYzL2N4cGI7Y3hwYvgBAaICAkRGqgIdR29vZ2xlLkNsb3VkLkRpYWxvZ2Zsb3cuQ3guVjPqAiFHb29nbGU6OkNsb3VkOjpEaWFsb2dmbG93OjpDWDo6VjNiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_cx_v3_flow, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp]);

/**
 * Metadata associated with the long running operation for
 * [Versions.CreateVersion][google.cloud.dialogflow.cx.v3.Versions.CreateVersion].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.CreateVersionOperationMetadata
 */
export type CreateVersionOperationMetadata = Message<"google.cloud.dialogflow.cx.v3.CreateVersionOperationMetadata"> & {
  /**
   * Name of the created version.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/versions/<Version ID>`.
   *
   * @generated from field: string version = 1;
   */
  version: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.CreateVersionOperationMetadata.
 * Use `create(CreateVersionOperationMetadataSchema)` to create a new message.
 */
export const CreateVersionOperationMetadataSchema: GenMessage<CreateVersionOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 0);

/**
 * Represents a version of a flow.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Version
 */
export type Version = Message<"google.cloud.dialogflow.cx.v3.Version"> & {
  /**
   * Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/versions/<Version ID>. Version ID is a self-increasing
   * number generated by Dialogflow upon version creation.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The human-readable name of the version. Limit of 64 characters.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * The description of the version. The maximum length is 500 characters. If
   * exceeded, the request is rejected.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. The NLU settings of the flow at version creation.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.NluSettings nlu_settings = 4;
   */
  nluSettings?: NluSettings;

  /**
   * Output only. Create time of the version.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. The state of this version. This field is read-only and cannot
   * be set by create and update methods.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Version.State state = 6;
   */
  state: Version_State;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Version.
 * Use `create(VersionSchema)` to create a new message.
 */
export const VersionSchema: GenMessage<Version> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 1);

/**
 * The state of the version.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.Version.State
 */
export enum Version_State {
  /**
   * Not specified. This value is not used.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Version is not ready to serve (e.g. training is running).
   *
   * @generated from enum value: RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * Training has succeeded and this version is ready to serve.
   *
   * @generated from enum value: SUCCEEDED = 2;
   */
  SUCCEEDED = 2,

  /**
   * Version training failed.
   *
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.Version.State.
 */
export const Version_StateSchema: GenEnum<Version_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_version, 1, 0);

/**
 * The request message for
 * [Versions.ListVersions][google.cloud.dialogflow.cx.v3.Versions.ListVersions].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListVersionsRequest
 */
export type ListVersionsRequest = Message<"google.cloud.dialogflow.cx.v3.ListVersionsRequest"> & {
  /**
   * Required. The [Flow][google.cloud.dialogflow.cx.v3.Flow] to list all
   * versions for. Format: `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/flows/<Flow ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return in a single page. By default 20 and
   * at most 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListVersionsRequest.
 * Use `create(ListVersionsRequestSchema)` to create a new message.
 */
export const ListVersionsRequestSchema: GenMessage<ListVersionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 2);

/**
 * The response message for
 * [Versions.ListVersions][google.cloud.dialogflow.cx.v3.Versions.ListVersions].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListVersionsResponse
 */
export type ListVersionsResponse = Message<"google.cloud.dialogflow.cx.v3.ListVersionsResponse"> & {
  /**
   * A list of versions. There will be a maximum number of items returned based
   * on the page_size field in the request. The list may in some cases be empty
   * or contain fewer entries than page_size even if this isn't the last page.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Version versions = 1;
   */
  versions: Version[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListVersionsResponse.
 * Use `create(ListVersionsResponseSchema)` to create a new message.
 */
export const ListVersionsResponseSchema: GenMessage<ListVersionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 3);

/**
 * The request message for
 * [Versions.GetVersion][google.cloud.dialogflow.cx.v3.Versions.GetVersion].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.GetVersionRequest
 */
export type GetVersionRequest = Message<"google.cloud.dialogflow.cx.v3.GetVersionRequest"> & {
  /**
   * Required. The name of the [Version][google.cloud.dialogflow.cx.v3.Version].
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/versions/<Version ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.GetVersionRequest.
 * Use `create(GetVersionRequestSchema)` to create a new message.
 */
export const GetVersionRequestSchema: GenMessage<GetVersionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 4);

/**
 * The request message for
 * [Versions.CreateVersion][google.cloud.dialogflow.cx.v3.Versions.CreateVersion].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.CreateVersionRequest
 */
export type CreateVersionRequest = Message<"google.cloud.dialogflow.cx.v3.CreateVersionRequest"> & {
  /**
   * Required. The [Flow][google.cloud.dialogflow.cx.v3.Flow] to create an
   * [Version][google.cloud.dialogflow.cx.v3.Version] for. Format:
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The version to create.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Version version = 2;
   */
  version?: Version;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.CreateVersionRequest.
 * Use `create(CreateVersionRequestSchema)` to create a new message.
 */
export const CreateVersionRequestSchema: GenMessage<CreateVersionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 5);

/**
 * The request message for
 * [Versions.UpdateVersion][google.cloud.dialogflow.cx.v3.Versions.UpdateVersion].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.UpdateVersionRequest
 */
export type UpdateVersionRequest = Message<"google.cloud.dialogflow.cx.v3.UpdateVersionRequest"> & {
  /**
   * Required. The version to update.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Version version = 1;
   */
  version?: Version;

  /**
   * Required. The mask to control which fields get updated. Currently only
   * `description` and `display_name` can be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.UpdateVersionRequest.
 * Use `create(UpdateVersionRequestSchema)` to create a new message.
 */
export const UpdateVersionRequestSchema: GenMessage<UpdateVersionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 6);

/**
 * The request message for
 * [Versions.DeleteVersion][google.cloud.dialogflow.cx.v3.Versions.DeleteVersion].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.DeleteVersionRequest
 */
export type DeleteVersionRequest = Message<"google.cloud.dialogflow.cx.v3.DeleteVersionRequest"> & {
  /**
   * Required. The name of the [Version][google.cloud.dialogflow.cx.v3.Version]
   * to delete. Format: `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/flows/<Flow ID>/versions/<Version ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.DeleteVersionRequest.
 * Use `create(DeleteVersionRequestSchema)` to create a new message.
 */
export const DeleteVersionRequestSchema: GenMessage<DeleteVersionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 7);

/**
 * The request message for
 * [Versions.LoadVersion][google.cloud.dialogflow.cx.v3.Versions.LoadVersion].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.LoadVersionRequest
 */
export type LoadVersionRequest = Message<"google.cloud.dialogflow.cx.v3.LoadVersionRequest"> & {
  /**
   * Required. The [Version][google.cloud.dialogflow.cx.v3.Version] to be loaded
   * to draft flow. Format: `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/flows/<Flow ID>/versions/<Version ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * This field is used to prevent accidental overwrite of other agent
   * resources, which can potentially impact other flow's behavior. If
   * `allow_override_agent_resources` is false, conflicted agent-level resources
   * will not be overridden (i.e. intents, entities, webhooks).
   *
   * @generated from field: bool allow_override_agent_resources = 2;
   */
  allowOverrideAgentResources: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.LoadVersionRequest.
 * Use `create(LoadVersionRequestSchema)` to create a new message.
 */
export const LoadVersionRequestSchema: GenMessage<LoadVersionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 8);

/**
 * The request message for
 * [Versions.CompareVersions][google.cloud.dialogflow.cx.v3.Versions.CompareVersions].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.CompareVersionsRequest
 */
export type CompareVersionsRequest = Message<"google.cloud.dialogflow.cx.v3.CompareVersionsRequest"> & {
  /**
   * Required. Name of the base flow version to compare with the target version.
   * Use version ID `0` to indicate the draft version of the specified flow.
   *
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/
   * <Agent ID>/flows/<Flow ID>/versions/<Version ID>`.
   *
   * @generated from field: string base_version = 1;
   */
  baseVersion: string;

  /**
   * Required. Name of the target flow version to compare with the
   * base version. Use version ID `0` to indicate the draft version of the
   * specified flow. Format: `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/flows/<Flow ID>/versions/<Version ID>`.
   *
   * @generated from field: string target_version = 2;
   */
  targetVersion: string;

  /**
   * The language to compare the flow versions for.
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/docs/reference/language) are
   * supported. Note: languages must be enabled in the agent before they can be
   * used.
   *
   * @generated from field: string language_code = 3;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.CompareVersionsRequest.
 * Use `create(CompareVersionsRequestSchema)` to create a new message.
 */
export const CompareVersionsRequestSchema: GenMessage<CompareVersionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 9);

/**
 * The response message for
 * [Versions.CompareVersions][google.cloud.dialogflow.cx.v3.Versions.CompareVersions].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.CompareVersionsResponse
 */
export type CompareVersionsResponse = Message<"google.cloud.dialogflow.cx.v3.CompareVersionsResponse"> & {
  /**
   * JSON representation of the base version content.
   *
   * @generated from field: string base_version_content_json = 1;
   */
  baseVersionContentJson: string;

  /**
   * JSON representation of the target version content.
   *
   * @generated from field: string target_version_content_json = 2;
   */
  targetVersionContentJson: string;

  /**
   * The timestamp when the two version compares.
   *
   * @generated from field: google.protobuf.Timestamp compare_time = 3;
   */
  compareTime?: Timestamp;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.CompareVersionsResponse.
 * Use `create(CompareVersionsResponseSchema)` to create a new message.
 */
export const CompareVersionsResponseSchema: GenMessage<CompareVersionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_version, 10);

/**
 * Service for managing [Versions][google.cloud.dialogflow.cx.v3.Version].
 *
 * @generated from service google.cloud.dialogflow.cx.v3.Versions
 */
export const Versions: GenService<{
  /**
   * Returns the list of all versions in the specified
   * [Flow][google.cloud.dialogflow.cx.v3.Flow].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Versions.ListVersions
   */
  listVersions: {
    methodKind: "unary";
    input: typeof ListVersionsRequestSchema;
    output: typeof ListVersionsResponseSchema;
  },
  /**
   * Retrieves the specified [Version][google.cloud.dialogflow.cx.v3.Version].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Versions.GetVersion
   */
  getVersion: {
    methodKind: "unary";
    input: typeof GetVersionRequestSchema;
    output: typeof VersionSchema;
  },
  /**
   * Creates a [Version][google.cloud.dialogflow.cx.v3.Version] in the specified
   * [Flow][google.cloud.dialogflow.cx.v3.Flow].
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [CreateVersionOperationMetadata][google.cloud.dialogflow.cx.v3.CreateVersionOperationMetadata]
   * - `response`: [Version][google.cloud.dialogflow.cx.v3.Version]
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Versions.CreateVersion
   */
  createVersion: {
    methodKind: "unary";
    input: typeof CreateVersionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the specified [Version][google.cloud.dialogflow.cx.v3.Version].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Versions.UpdateVersion
   */
  updateVersion: {
    methodKind: "unary";
    input: typeof UpdateVersionRequestSchema;
    output: typeof VersionSchema;
  },
  /**
   * Deletes the specified [Version][google.cloud.dialogflow.cx.v3.Version].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Versions.DeleteVersion
   */
  deleteVersion: {
    methodKind: "unary";
    input: typeof DeleteVersionRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Loads resources in the specified version to the draft flow.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`: An empty [Struct
   *   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
   * - `response`: An [Empty
   *   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Versions.LoadVersion
   */
  loadVersion: {
    methodKind: "unary";
    input: typeof LoadVersionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Compares the specified base version with target version.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Versions.CompareVersions
   */
  compareVersions: {
    methodKind: "unary";
    input: typeof CompareVersionsRequestSchema;
    output: typeof CompareVersionsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_cx_v3_version, 0);

