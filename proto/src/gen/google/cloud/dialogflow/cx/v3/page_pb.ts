// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/cx/v3/page.proto (package google.cloud.dialogflow.cx.v3, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { AdvancedSettings } from "./advanced_settings_pb";
import { file_google_cloud_dialogflow_cx_v3_advanced_settings } from "./advanced_settings_pb";
import type { DataStoreConnection } from "./data_store_connection_pb";
import { file_google_cloud_dialogflow_cx_v3_data_store_connection } from "./data_store_connection_pb";
import type { Fulfillment } from "./fulfillment_pb";
import { file_google_cloud_dialogflow_cx_v3_fulfillment } from "./fulfillment_pb";
import type { EmptySchema, FieldMask, Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/cx/v3/page.proto.
 */
export const file_google_cloud_dialogflow_cx_v3_page: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy9jeC92My9wYWdlLnByb3RvEh1nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52MyLNBQoEUGFnZRIMCgRuYW1lGAEgASgJEhkKDGRpc3BsYXlfbmFtZRgCIAEoCUID4EECEhMKC2Rlc2NyaXB0aW9uGBMgASgJEkUKEWVudHJ5X2Z1bGZpbGxtZW50GAcgASgLMiouZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRnVsZmlsbG1lbnQSMQoEZm9ybRgEIAEoCzIjLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkZvcm0SVAoXdHJhbnNpdGlvbl9yb3V0ZV9ncm91cHMYCyADKAlCM/pBMAouZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9UcmFuc2l0aW9uUm91dGVHcm91cBJJChF0cmFuc2l0aW9uX3JvdXRlcxgJIAMoCzIuLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlRyYW5zaXRpb25Sb3V0ZRJDCg5ldmVudF9oYW5kbGVycxgKIAMoCzIrLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkV2ZW50SGFuZGxlchJKChFhZHZhbmNlZF9zZXR0aW5ncxgNIAEoCzIvLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkFkdmFuY2VkU2V0dGluZ3MSZAoca25vd2xlZGdlX2Nvbm5lY3Rvcl9zZXR0aW5ncxgSIAEoCzI5Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLktub3dsZWRnZUNvbm5lY3RvclNldHRpbmdzQgPgQQE6depBcgoeZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9QYWdlElBwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vYWdlbnRzL3thZ2VudH0vZmxvd3Mve2Zsb3d9L3BhZ2VzL3twYWdlfSLvBAoERm9ybRJBCgpwYXJhbWV0ZXJzGAEgAygLMi0uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRm9ybS5QYXJhbWV0ZXIaowQKCVBhcmFtZXRlchIZCgxkaXNwbGF5X25hbWUYASABKAlCA+BBAhIQCghyZXF1aXJlZBgCIAEoCBJBCgtlbnRpdHlfdHlwZRgDIAEoCUIs4EEC+kEmCiRkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0VudGl0eVR5cGUSDwoHaXNfbGlzdBgEIAEoCBJWCg1maWxsX2JlaGF2aW9yGAcgASgLMjouZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRm9ybS5QYXJhbWV0ZXIuRmlsbEJlaGF2aW9yQgPgQQISLQoNZGVmYXVsdF92YWx1ZRgJIAEoCzIWLmdvb2dsZS5wcm90b2J1Zi5WYWx1ZRIOCgZyZWRhY3QYCyABKAgSSgoRYWR2YW5jZWRfc2V0dGluZ3MYDCABKAsyLy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5BZHZhbmNlZFNldHRpbmdzGrEBCgxGaWxsQmVoYXZpb3ISUwoaaW5pdGlhbF9wcm9tcHRfZnVsZmlsbG1lbnQYAyABKAsyKi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5GdWxmaWxsbWVudEID4EECEkwKF3JlcHJvbXB0X2V2ZW50X2hhbmRsZXJzGAUgAygLMisuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRXZlbnRIYW5kbGVyIoACCgxFdmVudEhhbmRsZXISEQoEbmFtZRgGIAEoCUID4EEDEhIKBWV2ZW50GAQgASgJQgPgQQISRwoTdHJpZ2dlcl9mdWxmaWxsbWVudBgFIAEoCzIqLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkZ1bGZpbGxtZW50EjoKC3RhcmdldF9wYWdlGAIgASgJQiP6QSAKHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vUGFnZUgAEjoKC3RhcmdldF9mbG93GAMgASgJQiP6QSAKHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRmxvd0gAQggKBnRhcmdldCLTAgoPVHJhbnNpdGlvblJvdXRlEhEKBG5hbWUYBiABKAlCA+BBAxIYCgtkZXNjcmlwdGlvbhgIIAEoCUID4EEBEjUKBmludGVudBgBIAEoCUIl+kEiCiBkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0ludGVudBIRCgljb25kaXRpb24YAiABKAkSRwoTdHJpZ2dlcl9mdWxmaWxsbWVudBgDIAEoCzIqLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkZ1bGZpbGxtZW50EjoKC3RhcmdldF9wYWdlGAQgASgJQiP6QSAKHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vUGFnZUgAEjoKC3RhcmdldF9mbG93GAUgASgJQiP6QSAKHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRmxvd0gAQggKBnRhcmdldCKIAQoQTGlzdFBhZ2VzUmVxdWVzdBI2CgZwYXJlbnQYASABKAlCJuBBAvpBIBIeZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9QYWdlEhUKDWxhbmd1YWdlX2NvZGUYAiABKAkSEQoJcGFnZV9zaXplGAMgASgFEhIKCnBhZ2VfdG9rZW4YBCABKAkiYAoRTGlzdFBhZ2VzUmVzcG9uc2USMgoFcGFnZXMYASADKAsyIy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5QYWdlEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJdCg5HZXRQYWdlUmVxdWVzdBI0CgRuYW1lGAEgASgJQibgQQL6QSAKHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vUGFnZRIVCg1sYW5ndWFnZV9jb2RlGAIgASgJIpoBChFDcmVhdGVQYWdlUmVxdWVzdBI2CgZwYXJlbnQYASABKAlCJuBBAvpBIBIeZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9QYWdlEjYKBHBhZ2UYAiABKAsyIy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5QYWdlQgPgQQISFQoNbGFuZ3VhZ2VfY29kZRgDIAEoCSKTAQoRVXBkYXRlUGFnZVJlcXVlc3QSNgoEcGFnZRgBIAEoCzIjLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlBhZ2VCA+BBAhIVCg1sYW5ndWFnZV9jb2RlGAIgASgJEi8KC3VwZGF0ZV9tYXNrGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJYChFEZWxldGVQYWdlUmVxdWVzdBI0CgRuYW1lGAEgASgJQibgQQL6QSAKHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vUGFnZRINCgVmb3JjZRgCIAEoCCLRAgoaS25vd2xlZGdlQ29ubmVjdG9yU2V0dGluZ3MSDwoHZW5hYmxlZBgBIAEoCBJHChN0cmlnZ2VyX2Z1bGZpbGxtZW50GAMgASgLMiouZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRnVsZmlsbG1lbnQSOgoLdGFyZ2V0X3BhZ2UYBCABKAlCI/pBIAoeZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9QYWdlSAASOgoLdGFyZ2V0X2Zsb3cYBSABKAlCI/pBIAoeZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9GbG93SAASVwoWZGF0YV9zdG9yZV9jb25uZWN0aW9ucxgGIAMoCzIyLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkRhdGFTdG9yZUNvbm5lY3Rpb25CA+BBAUIICgZ0YXJnZXQylAgKBVBhZ2VzErsBCglMaXN0UGFnZXMSLy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5MaXN0UGFnZXNSZXF1ZXN0GjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuTGlzdFBhZ2VzUmVzcG9uc2UiS9pBBnBhcmVudILT5JMCPBI6L3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9mbG93cy8qfS9wYWdlcxKoAQoHR2V0UGFnZRItLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkdldFBhZ2VSZXF1ZXN0GiMuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuUGFnZSJJ2kEEbmFtZYLT5JMCPBI6L3YzL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZmxvd3MvKi9wYWdlcy8qfRK7AQoKQ3JlYXRlUGFnZRIwLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkNyZWF0ZVBhZ2VSZXF1ZXN0GiMuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuUGFnZSJW2kELcGFyZW50LHBhZ2WC0+STAkI6BHBhZ2UiOi92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZmxvd3MvKn0vcGFnZXMSxQEKClVwZGF0ZVBhZ2USMC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5VcGRhdGVQYWdlUmVxdWVzdBojLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlBhZ2UiYNpBEHBhZ2UsdXBkYXRlX21hc2uC0+STAkc6BHBhZ2UyPy92My97cGFnZS5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZmxvd3MvKi9wYWdlcy8qfRKhAQoKRGVsZXRlUGFnZRIwLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkRlbGV0ZVBhZ2VSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IknaQQRuYW1lgtPkkwI8KjovdjMve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9mbG93cy8qL3BhZ2VzLyp9GnjKQRlkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29t0kFZaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2RpYWxvZ2Zsb3dCrwEKIWNvbS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M0IJUGFnZVByb3RvUAFaMWNsb3VkLmdvb2dsZS5jb20vZ28vZGlhbG9nZmxvdy9jeC9hcGl2My9jeHBiO2N4cGL4AQGiAgJERqoCHUdvb2dsZS5DbG91ZC5EaWFsb2dmbG93LkN4LlYz6gIhR29vZ2xlOjpDbG91ZDo6RGlhbG9nZmxvdzo6Q1g6OlYzYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_cx_v3_advanced_settings, file_google_cloud_dialogflow_cx_v3_data_store_connection, file_google_cloud_dialogflow_cx_v3_fulfillment, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct]);

/**
 * A Dialogflow CX conversation (session) can be described and visualized as a
 * state machine. The states of a CX session are represented by pages.
 *
 * For each flow, you define many pages, where your combined pages can handle a
 * complete conversation on the topics the flow is designed for. At any given
 * moment, exactly one page is the current page, the current page is considered
 * active, and the flow associated with that page is considered active. Every
 * flow has a special start page. When a flow initially becomes active, the
 * start page page becomes the current page. For each conversational turn, the
 * current page will either stay the same or transition to another page.
 *
 * You configure each page to collect information from the end-user that is
 * relevant for the conversational state represented by the page.
 *
 * For more information, see the
 * [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Page
 */
export type Page = Message<"google.cloud.dialogflow.cx.v3.Page"> & {
  /**
   * The unique identifier of the page.
   * Required for the
   * [Pages.UpdatePage][google.cloud.dialogflow.cx.v3.Pages.UpdatePage] method.
   * [Pages.CreatePage][google.cloud.dialogflow.cx.v3.Pages.CreatePage]
   * populates the name automatically.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/pages/<Page ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The human-readable name of the page, unique within the flow.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * The description of the page. The maximum length is 500 characters.
   *
   * @generated from field: string description = 19;
   */
  description: string;

  /**
   * The fulfillment to call when the session is entering the page.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Fulfillment entry_fulfillment = 7;
   */
  entryFulfillment?: Fulfillment;

  /**
   * The form associated with the page, used for collecting parameters
   * relevant to the page.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Form form = 4;
   */
  form?: Form;

  /**
   * Ordered list of
   * [`TransitionRouteGroups`][google.cloud.dialogflow.cx.v3.TransitionRouteGroup]
   * added to the page. Transition route groups must be unique within a page. If
   * the page links both flow-level transition route groups and agent-level
   * transition route groups, the flow-level ones will have higher priority and
   * will be put before the agent-level ones.
   *
   * *   If multiple transition routes within a page scope refer to the same
   *     intent, then the precedence order is: page's transition route -> page's
   *     transition route group -> flow's transition routes.
   *
   * *   If multiple transition route groups within a page contain the same
   *     intent, then the first group in the ordered list takes precedence.
   *
   * Format:`projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>`
   * or `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/transitionRouteGroups/<TransitionRouteGroup ID>` for agent-level
   * groups.
   *
   * @generated from field: repeated string transition_route_groups = 11;
   */
  transitionRouteGroups: string[];

  /**
   * A list of transitions for the transition rules of this page.
   * They route the conversation to another page in the same flow, or another
   * flow.
   *
   * When we are in a certain page, the TransitionRoutes are evalauted in the
   * following order:
   *
   * *   TransitionRoutes defined in the page with intent specified.
   * *   TransitionRoutes defined in the
   *     [transition route
   *     groups][google.cloud.dialogflow.cx.v3.Page.transition_route_groups]
   *     with intent specified.
   * *   TransitionRoutes defined in flow with intent specified.
   * *   TransitionRoutes defined in the
   *     [transition route
   *     groups][google.cloud.dialogflow.cx.v3.Flow.transition_route_groups]
   *     with intent specified.
   * *   TransitionRoutes defined in the page with only condition specified.
   * *   TransitionRoutes defined in the
   *     [transition route
   *     groups][google.cloud.dialogflow.cx.v3.Page.transition_route_groups]
   *     with only condition specified.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.TransitionRoute transition_routes = 9;
   */
  transitionRoutes: TransitionRoute[];

  /**
   * Handlers associated with the page to handle events such as webhook errors,
   * no match or no input.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.EventHandler event_handlers = 10;
   */
  eventHandlers: EventHandler[];

  /**
   * Hierarchical advanced settings for this page. The settings exposed at the
   * lower level overrides the settings exposed at the higher level.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.AdvancedSettings advanced_settings = 13;
   */
  advancedSettings?: AdvancedSettings;

  /**
   * Optional. Knowledge connector configuration.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.KnowledgeConnectorSettings knowledge_connector_settings = 18;
   */
  knowledgeConnectorSettings?: KnowledgeConnectorSettings;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Page.
 * Use `create(PageSchema)` to create a new message.
 */
export const PageSchema: GenMessage<Page> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 0);

/**
 * A form is a data model that groups related parameters that can be collected
 * from the user. The process in which the agent prompts the user and collects
 * parameter values from the user is called form filling. A form can be added to
 * a [page][google.cloud.dialogflow.cx.v3.Page]. When form filling is done, the
 * filled parameters will be written to the
 * [session][google.cloud.dialogflow.cx.v3.SessionInfo.parameters].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Form
 */
export type Form = Message<"google.cloud.dialogflow.cx.v3.Form"> & {
  /**
   * Parameters to collect from the user.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Form.Parameter parameters = 1;
   */
  parameters: Form_Parameter[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Form.
 * Use `create(FormSchema)` to create a new message.
 */
export const FormSchema: GenMessage<Form> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 1);

/**
 * Represents a form parameter.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Form.Parameter
 */
export type Form_Parameter = Message<"google.cloud.dialogflow.cx.v3.Form.Parameter"> & {
  /**
   * Required. The human-readable name of the parameter, unique within the
   * form.
   *
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * Indicates whether the parameter is required. Optional parameters will not
   * trigger prompts; however, they are filled if the user specifies them.
   * Required parameters must be filled before form filling concludes.
   *
   * @generated from field: bool required = 2;
   */
  required: boolean;

  /**
   * Required. The entity type of the parameter.
   * Format: `projects/-/locations/-/agents/-/entityTypes/<System Entity Type
   * ID>` for system entity types (for example,
   * `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/entityTypes/<Entity Type ID>` for developer entity types.
   *
   * @generated from field: string entity_type = 3;
   */
  entityType: string;

  /**
   * Indicates whether the parameter represents a list of values.
   *
   * @generated from field: bool is_list = 4;
   */
  isList: boolean;

  /**
   * Required. Defines fill behavior for the parameter.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Form.Parameter.FillBehavior fill_behavior = 7;
   */
  fillBehavior?: Form_Parameter_FillBehavior;

  /**
   * The default value of an optional parameter. If the parameter is required,
   * the default value will be ignored.
   *
   * @generated from field: google.protobuf.Value default_value = 9;
   */
  defaultValue?: Value;

  /**
   * Indicates whether the parameter content should be redacted in log.  If
   * redaction is enabled, the parameter content will be replaced by parameter
   * name during logging.
   * Note: the parameter content is subject to redaction if either parameter
   * level redaction or [entity type level
   * redaction][google.cloud.dialogflow.cx.v3.EntityType.redact] is enabled.
   *
   * @generated from field: bool redact = 11;
   */
  redact: boolean;

  /**
   * Hierarchical advanced settings for this parameter. The settings exposed
   * at the lower level overrides the settings exposed at the higher level.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.AdvancedSettings advanced_settings = 12;
   */
  advancedSettings?: AdvancedSettings;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Form.Parameter.
 * Use `create(Form_ParameterSchema)` to create a new message.
 */
export const Form_ParameterSchema: GenMessage<Form_Parameter> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 1, 0);

/**
 * Configuration for how the filling of a parameter should be handled.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Form.Parameter.FillBehavior
 */
export type Form_Parameter_FillBehavior = Message<"google.cloud.dialogflow.cx.v3.Form.Parameter.FillBehavior"> & {
  /**
   * Required. The fulfillment to provide the initial prompt that the agent
   * can present to the user in order to fill the parameter.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Fulfillment initial_prompt_fulfillment = 3;
   */
  initialPromptFulfillment?: Fulfillment;

  /**
   * The handlers for parameter-level events, used to provide reprompt for
   * the parameter or transition to a different page/flow. The supported
   * events are:
   * *   `sys.no-match-<N>`, where N can be from 1 to 6
   * *   `sys.no-match-default`
   * *   `sys.no-input-<N>`, where N can be from 1 to 6
   * *   `sys.no-input-default`
   * *   `sys.invalid-parameter`
   *
   * `initial_prompt_fulfillment` provides the first prompt for the
   * parameter.
   *
   * If the user's response does not fill the parameter, a
   * no-match/no-input event will be triggered, and the fulfillment
   * associated with the `sys.no-match-1`/`sys.no-input-1` handler (if
   * defined) will be called to provide a prompt. The
   * `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to
   * the next no-match/no-input event, and so on.
   *
   * A `sys.no-match-default` or `sys.no-input-default` handler will be used
   * to handle all following no-match/no-input events after all numbered
   * no-match/no-input handlers for the parameter are consumed.
   *
   * A `sys.invalid-parameter` handler can be defined to handle the case
   * where the parameter values have been `invalidated` by webhook. For
   * example, if the user's response fill the parameter, however the
   * parameter was invalidated by webhook, the fulfillment associated with
   * the `sys.invalid-parameter` handler (if defined) will be called to
   * provide a prompt.
   *
   * If the event handler for the corresponding event can't be found on the
   * parameter, `initial_prompt_fulfillment` will be re-prompted.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.EventHandler reprompt_event_handlers = 5;
   */
  repromptEventHandlers: EventHandler[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Form.Parameter.FillBehavior.
 * Use `create(Form_Parameter_FillBehaviorSchema)` to create a new message.
 */
export const Form_Parameter_FillBehaviorSchema: GenMessage<Form_Parameter_FillBehavior> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 1, 0, 0);

/**
 * An event handler specifies an
 * [event][google.cloud.dialogflow.cx.v3.EventHandler.event] that can be handled
 * during a session. When the specified event happens, the following actions are
 * taken in order:
 *
 * *   If there is a
 * [`trigger_fulfillment`][google.cloud.dialogflow.cx.v3.EventHandler.trigger_fulfillment]
 * associated with the event, it will be called.
 * *   If there is a
 * [`target_page`][google.cloud.dialogflow.cx.v3.EventHandler.target_page]
 * associated with the event, the session will transition into the specified
 * page.
 * *   If there is a
 * [`target_flow`][google.cloud.dialogflow.cx.v3.EventHandler.target_flow]
 * associated with the event, the session will transition into the specified
 * flow.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.EventHandler
 */
export type EventHandler = Message<"google.cloud.dialogflow.cx.v3.EventHandler"> & {
  /**
   * Output only. The unique identifier of this event handler.
   *
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * Required. The name of the event to handle.
   *
   * @generated from field: string event = 4;
   */
  event: string;

  /**
   * The fulfillment to call when the event occurs.
   * Handling webhook errors with a fulfillment enabled with webhook could
   * cause infinite loop. It is invalid to specify such fulfillment for a
   * handler handling webhooks.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Fulfillment trigger_fulfillment = 5;
   */
  triggerFulfillment?: Fulfillment;

  /**
   * The target to transition to, either a page in the same host flow (the flow
   * that owns this
   * [TransitionRoute][google.cloud.dialogflow.cx.v3.TransitionRoute]), or
   * another flow in the same agent.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3.EventHandler.target
   */
  target: {
    /**
     * The target page to transition to.
     * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
     * ID>/flows/<Flow ID>/pages/<Page ID>`.
     *
     * @generated from field: string target_page = 2;
     */
    value: string;
    case: "targetPage";
  } | {
    /**
     * The target flow to transition to.
     * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
     * ID>/flows/<Flow ID>`.
     *
     * @generated from field: string target_flow = 3;
     */
    value: string;
    case: "targetFlow";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.EventHandler.
 * Use `create(EventHandlerSchema)` to create a new message.
 */
export const EventHandlerSchema: GenMessage<EventHandler> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 2);

/**
 * A transition route specifies a [intent][google.cloud.dialogflow.cx.v3.Intent]
 * that can be matched and/or a data condition that can be evaluated during a
 * session. When a specified transition is matched, the following actions are
 * taken in order:
 *
 * *   If there is a
 * [`trigger_fulfillment`][google.cloud.dialogflow.cx.v3.TransitionRoute.trigger_fulfillment]
 * associated with the transition, it will be called.
 * *   If there is a
 * [`target_page`][google.cloud.dialogflow.cx.v3.TransitionRoute.target_page]
 * associated with the transition, the session will transition into the
 * specified page.
 * *   If there is a
 * [`target_flow`][google.cloud.dialogflow.cx.v3.TransitionRoute.target_flow]
 * associated with the transition, the session will transition into the
 * specified flow.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.TransitionRoute
 */
export type TransitionRoute = Message<"google.cloud.dialogflow.cx.v3.TransitionRoute"> & {
  /**
   * Output only. The unique identifier of this transition route.
   *
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * Optional. The description of the transition route. The maximum length is
   * 500 characters.
   *
   * @generated from field: string description = 8;
   */
  description: string;

  /**
   * The unique identifier of an [Intent][google.cloud.dialogflow.cx.v3.Intent].
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/intents/<Intent ID>`.
   * Indicates that the transition can only happen when the given intent is
   * matched.
   * At least one of `intent` or `condition` must be specified. When both
   * `intent` and `condition` are specified, the transition can only happen
   * when both are fulfilled.
   *
   * @generated from field: string intent = 1;
   */
  intent: string;

  /**
   * The condition to evaluate against [form
   * parameters][google.cloud.dialogflow.cx.v3.Form.parameters] or [session
   * parameters][google.cloud.dialogflow.cx.v3.SessionInfo.parameters].
   *
   * See the [conditions
   * reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
   * At least one of `intent` or `condition` must be specified. When both
   * `intent` and `condition` are specified, the transition can only happen
   * when both are fulfilled.
   *
   * @generated from field: string condition = 2;
   */
  condition: string;

  /**
   * The fulfillment to call when the condition is satisfied. At least one of
   * `trigger_fulfillment` and `target` must be specified. When both are
   * defined, `trigger_fulfillment` is executed first.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Fulfillment trigger_fulfillment = 3;
   */
  triggerFulfillment?: Fulfillment;

  /**
   * The target to transition to, either a page in the same host flow (the flow
   * that owns this
   * [TransitionRoute][google.cloud.dialogflow.cx.v3.TransitionRoute]), or
   * another flow in the same agent.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3.TransitionRoute.target
   */
  target: {
    /**
     * The target page to transition to.
     * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
     * ID>/flows/<Flow ID>/pages/<Page ID>`.
     *
     * @generated from field: string target_page = 4;
     */
    value: string;
    case: "targetPage";
  } | {
    /**
     * The target flow to transition to.
     * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
     * ID>/flows/<Flow ID>`.
     *
     * @generated from field: string target_flow = 5;
     */
    value: string;
    case: "targetFlow";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.TransitionRoute.
 * Use `create(TransitionRouteSchema)` to create a new message.
 */
export const TransitionRouteSchema: GenMessage<TransitionRoute> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 3);

/**
 * The request message for
 * [Pages.ListPages][google.cloud.dialogflow.cx.v3.Pages.ListPages].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListPagesRequest
 */
export type ListPagesRequest = Message<"google.cloud.dialogflow.cx.v3.ListPagesRequest"> & {
  /**
   * Required. The flow to list all pages for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The language to list pages for. The following fields are language
   * dependent:
   *
   * *  `Page.entry_fulfillment.messages`
   * *  `Page.entry_fulfillment.conditional_cases`
   * *  `Page.event_handlers.trigger_fulfillment.messages`
   * *  `Page.event_handlers.trigger_fulfillment.conditional_cases`
   * *  `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages`
   * *
   * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases`
   * *  `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages`
   * *
   * `Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases`
   * *  `Page.transition_routes.trigger_fulfillment.messages`
   * *  `Page.transition_routes.trigger_fulfillment.conditional_cases`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;

  /**
   * The maximum number of items to return in a single page. By default 100 and
   * at most 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListPagesRequest.
 * Use `create(ListPagesRequestSchema)` to create a new message.
 */
export const ListPagesRequestSchema: GenMessage<ListPagesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 4);

/**
 * The response message for
 * [Pages.ListPages][google.cloud.dialogflow.cx.v3.Pages.ListPages].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListPagesResponse
 */
export type ListPagesResponse = Message<"google.cloud.dialogflow.cx.v3.ListPagesResponse"> & {
  /**
   * The list of pages. There will be a maximum number of items returned based
   * on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Page pages = 1;
   */
  pages: Page[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListPagesResponse.
 * Use `create(ListPagesResponseSchema)` to create a new message.
 */
export const ListPagesResponseSchema: GenMessage<ListPagesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 5);

/**
 * The request message for
 * [Pages.GetPage][google.cloud.dialogflow.cx.v3.Pages.GetPage].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.GetPageRequest
 */
export type GetPageRequest = Message<"google.cloud.dialogflow.cx.v3.GetPageRequest"> & {
  /**
   * Required. The name of the page.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/pages/<Page ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The language to retrieve the page for. The following fields are language
   * dependent:
   *
   * *  `Page.entry_fulfillment.messages`
   * *  `Page.entry_fulfillment.conditional_cases`
   * *  `Page.event_handlers.trigger_fulfillment.messages`
   * *  `Page.event_handlers.trigger_fulfillment.conditional_cases`
   * *  `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages`
   * *
   * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases`
   * *  `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages`
   * *
   * `Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases`
   * *  `Page.transition_routes.trigger_fulfillment.messages`
   * *  `Page.transition_routes.trigger_fulfillment.conditional_cases`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.GetPageRequest.
 * Use `create(GetPageRequestSchema)` to create a new message.
 */
export const GetPageRequestSchema: GenMessage<GetPageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 6);

/**
 * The request message for
 * [Pages.CreatePage][google.cloud.dialogflow.cx.v3.Pages.CreatePage].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.CreatePageRequest
 */
export type CreatePageRequest = Message<"google.cloud.dialogflow.cx.v3.CreatePageRequest"> & {
  /**
   * Required. The flow to create a page for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The page to create.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Page page = 2;
   */
  page?: Page;

  /**
   * The language of the following fields in `page`:
   *
   * *  `Page.entry_fulfillment.messages`
   * *  `Page.entry_fulfillment.conditional_cases`
   * *  `Page.event_handlers.trigger_fulfillment.messages`
   * *  `Page.event_handlers.trigger_fulfillment.conditional_cases`
   * *  `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages`
   * *
   * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases`
   * *  `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages`
   * *
   * `Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases`
   * *  `Page.transition_routes.trigger_fulfillment.messages`
   * *  `Page.transition_routes.trigger_fulfillment.conditional_cases`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 3;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.CreatePageRequest.
 * Use `create(CreatePageRequestSchema)` to create a new message.
 */
export const CreatePageRequestSchema: GenMessage<CreatePageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 7);

/**
 * The request message for
 * [Pages.UpdatePage][google.cloud.dialogflow.cx.v3.Pages.UpdatePage].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.UpdatePageRequest
 */
export type UpdatePageRequest = Message<"google.cloud.dialogflow.cx.v3.UpdatePageRequest"> & {
  /**
   * Required. The page to update.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Page page = 1;
   */
  page?: Page;

  /**
   * The language of the following fields in `page`:
   *
   * *  `Page.entry_fulfillment.messages`
   * *  `Page.entry_fulfillment.conditional_cases`
   * *  `Page.event_handlers.trigger_fulfillment.messages`
   * *  `Page.event_handlers.trigger_fulfillment.conditional_cases`
   * *  `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages`
   * *
   * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases`
   * *  `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages`
   * *
   * `Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases`
   * *  `Page.transition_routes.trigger_fulfillment.messages`
   * *  `Page.transition_routes.trigger_fulfillment.conditional_cases`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;

  /**
   * The mask to control which fields get updated. If the mask is not present,
   * all fields will be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.UpdatePageRequest.
 * Use `create(UpdatePageRequestSchema)` to create a new message.
 */
export const UpdatePageRequestSchema: GenMessage<UpdatePageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 8);

/**
 * The request message for
 * [Pages.DeletePage][google.cloud.dialogflow.cx.v3.Pages.DeletePage].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.DeletePageRequest
 */
export type DeletePageRequest = Message<"google.cloud.dialogflow.cx.v3.DeletePageRequest"> & {
  /**
   * Required. The name of the page to delete.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/Flows/<flow ID>/pages/<Page ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * This field has no effect for pages with no incoming transitions.
   * For pages with incoming transitions:
   *
   * *  If `force` is set to false, an error will be returned with message
   *    indicating the incoming transitions.
   * *  If `force` is set to true, Dialogflow will remove the page, as well as
   *    any transitions to the page (i.e. [Target
   *    page][EventHandler.target_page] in event handlers or [Target
   *    page][TransitionRoute.target_page] in transition routes that point to
   *    this page will be cleared).
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.DeletePageRequest.
 * Use `create(DeletePageRequestSchema)` to create a new message.
 */
export const DeletePageRequestSchema: GenMessage<DeletePageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 9);

/**
 * The Knowledge Connector settings for this page or flow.
 * This includes information such as the attached Knowledge Bases, and the way
 * to execute fulfillment.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.KnowledgeConnectorSettings
 */
export type KnowledgeConnectorSettings = Message<"google.cloud.dialogflow.cx.v3.KnowledgeConnectorSettings"> & {
  /**
   * Whether Knowledge Connector is enabled or not.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * The fulfillment to be triggered.
   *
   * When the answers from the Knowledge Connector are selected by Dialogflow,
   * you can utitlize the request scoped parameter `$request.knowledge.answers`
   * (contains up to the 5 highest confidence answers) and
   * `$request.knowledge.questions` (contains the corresponding questions) to
   * construct the fulfillment.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Fulfillment trigger_fulfillment = 3;
   */
  triggerFulfillment?: Fulfillment;

  /**
   * The target to transition to, either a page in the same host flow (the flow
   * that owns this
   * [KnowledgeConnectorSettings][google.cloud.dialogflow.cx.v3.KnowledgeConnectorSettings]),
   * or another flow in the same agent.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3.KnowledgeConnectorSettings.target
   */
  target: {
    /**
     * The target page to transition to.
     * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
     * ID>/flows/<Flow ID>/pages/<Page ID>`.
     *
     * @generated from field: string target_page = 4;
     */
    value: string;
    case: "targetPage";
  } | {
    /**
     * The target flow to transition to.
     * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
     * ID>/flows/<Flow ID>`.
     *
     * @generated from field: string target_flow = 5;
     */
    value: string;
    case: "targetFlow";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. List of related data store connections.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.DataStoreConnection data_store_connections = 6;
   */
  dataStoreConnections: DataStoreConnection[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.KnowledgeConnectorSettings.
 * Use `create(KnowledgeConnectorSettingsSchema)` to create a new message.
 */
export const KnowledgeConnectorSettingsSchema: GenMessage<KnowledgeConnectorSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_page, 10);

/**
 * Service for managing [Pages][google.cloud.dialogflow.cx.v3.Page].
 *
 * @generated from service google.cloud.dialogflow.cx.v3.Pages
 */
export const Pages: GenService<{
  /**
   * Returns the list of all pages in the specified flow.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Pages.ListPages
   */
  listPages: {
    methodKind: "unary";
    input: typeof ListPagesRequestSchema;
    output: typeof ListPagesResponseSchema;
  },
  /**
   * Retrieves the specified page.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Pages.GetPage
   */
  getPage: {
    methodKind: "unary";
    input: typeof GetPageRequestSchema;
    output: typeof PageSchema;
  },
  /**
   * Creates a page in the specified flow.
   *
   * Note: You should always train a flow prior to sending it queries. See the
   * [training
   * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Pages.CreatePage
   */
  createPage: {
    methodKind: "unary";
    input: typeof CreatePageRequestSchema;
    output: typeof PageSchema;
  },
  /**
   * Updates the specified page.
   *
   * Note: You should always train a flow prior to sending it queries. See the
   * [training
   * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Pages.UpdatePage
   */
  updatePage: {
    methodKind: "unary";
    input: typeof UpdatePageRequestSchema;
    output: typeof PageSchema;
  },
  /**
   * Deletes the specified page.
   *
   * Note: You should always train a flow prior to sending it queries. See the
   * [training
   * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Pages.DeletePage
   */
  deletePage: {
    methodKind: "unary";
    input: typeof DeletePageRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_cx_v3_page, 0);

