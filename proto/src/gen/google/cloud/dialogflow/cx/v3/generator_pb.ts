// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/cx/v3/generator.proto (package google.cloud.dialogflow.cx.v3, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/cx/v3/generator.proto.
 */
export const file_google_cloud_dialogflow_cx_v3_generator: GenFile = /*@__PURE__*/
  fileDesc("Ci1nb29nbGUvY2xvdWQvZGlhbG9nZmxvdy9jeC92My9nZW5lcmF0b3IucHJvdG8SHWdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzIugCCglHZW5lcmF0b3ISDAoEbmFtZRgBIAEoCRIZCgxkaXNwbGF5X25hbWUYAiABKAlCA+BBAhI/Cgtwcm9tcHRfdGV4dBgDIAEoCzIlLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlBocmFzZUID4EECEk8KDHBsYWNlaG9sZGVycxgFIAMoCzI0Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkdlbmVyYXRvci5QbGFjZWhvbGRlckID4EEBGicKC1BsYWNlaG9sZGVyEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAk6d+pBdAojZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9HZW5lcmF0b3ISTXByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9hZ2VudHMve2FnZW50fS9nZW5lcmF0b3JzL3tnZW5lcmF0b3J9IhsKBlBocmFzZRIRCgR0ZXh0GAEgASgJQgPgQQIikgEKFUxpc3RHZW5lcmF0b3JzUmVxdWVzdBI7CgZwYXJlbnQYASABKAlCK+BBAvpBJRIjZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9HZW5lcmF0b3ISFQoNbGFuZ3VhZ2VfY29kZRgCIAEoCRIRCglwYWdlX3NpemUYAyABKAUSEgoKcGFnZV90b2tlbhgEIAEoCSJvChZMaXN0R2VuZXJhdG9yc1Jlc3BvbnNlEjwKCmdlbmVyYXRvcnMYASADKAsyKC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5HZW5lcmF0b3ISFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJImcKE0dldEdlbmVyYXRvclJlcXVlc3QSOQoEbmFtZRgBIAEoCUIr4EEC+kElCiNkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0dlbmVyYXRvchIVCg1sYW5ndWFnZV9jb2RlGAIgASgJIq4BChZDcmVhdGVHZW5lcmF0b3JSZXF1ZXN0EjsKBnBhcmVudBgBIAEoCUIr4EEC+kElEiNkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0dlbmVyYXRvchJACglnZW5lcmF0b3IYAiABKAsyKC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5HZW5lcmF0b3JCA+BBAhIVCg1sYW5ndWFnZV9jb2RlGAMgASgJIqIBChZVcGRhdGVHZW5lcmF0b3JSZXF1ZXN0EkAKCWdlbmVyYXRvchgBIAEoCzIoLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkdlbmVyYXRvckID4EECEhUKDWxhbmd1YWdlX2NvZGUYAiABKAkSLwoLdXBkYXRlX21hc2sYAyABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrImIKFkRlbGV0ZUdlbmVyYXRvclJlcXVlc3QSOQoEbmFtZRgBIAEoCUIr4EEC+kElCiNkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0dlbmVyYXRvchINCgVmb3JjZRgCIAEoCDLpCAoKR2VuZXJhdG9ycxLHAQoOTGlzdEdlbmVyYXRvcnMSNC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5MaXN0R2VuZXJhdG9yc1JlcXVlc3QaNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5MaXN0R2VuZXJhdG9yc1Jlc3BvbnNlIkjaQQZwYXJlbnSC0+STAjkSNy92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyp9L2dlbmVyYXRvcnMStAEKDEdldEdlbmVyYXRvchIyLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkdldEdlbmVyYXRvclJlcXVlc3QaKC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5HZW5lcmF0b3IiRtpBBG5hbWWC0+STAjkSNy92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2dlbmVyYXRvcnMvKn0S0QEKD0NyZWF0ZUdlbmVyYXRvchI1Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkNyZWF0ZUdlbmVyYXRvclJlcXVlc3QaKC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5HZW5lcmF0b3IiXdpBEHBhcmVudCxnZW5lcmF0b3KC0+STAkQ6CWdlbmVyYXRvciI3L3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKn0vZ2VuZXJhdG9ycxLgAQoPVXBkYXRlR2VuZXJhdG9yEjUuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuVXBkYXRlR2VuZXJhdG9yUmVxdWVzdBooLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkdlbmVyYXRvciJs2kEVZ2VuZXJhdG9yLHVwZGF0ZV9tYXNrgtPkkwJOOglnZW5lcmF0b3IyQS92My97Z2VuZXJhdG9yLm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9nZW5lcmF0b3JzLyp9EqgBCg9EZWxldGVHZW5lcmF0b3ISNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5EZWxldGVHZW5lcmF0b3JSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IkbaQQRuYW1lgtPkkwI5KjcvdjMve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9nZW5lcmF0b3JzLyp9GnjKQRlkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29t0kFZaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2RpYWxvZ2Zsb3dCtAEKIWNvbS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M0IOR2VuZXJhdG9yUHJvdG9QAVoxY2xvdWQuZ29vZ2xlLmNvbS9nby9kaWFsb2dmbG93L2N4L2FwaXYzL2N4cGI7Y3hwYvgBAaICAkRGqgIdR29vZ2xlLkNsb3VkLkRpYWxvZ2Zsb3cuQ3guVjPqAiFHb29nbGU6OkNsb3VkOjpEaWFsb2dmbG93OjpDWDo6VjNiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Generators contain prompt to be sent to the LLM model to generate text. The
 * prompt can contain parameters which will be resolved before calling the
 * model. It can optionally contain banned phrases to ensure the model responses
 * are safe.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Generator
 */
export type Generator = Message<"google.cloud.dialogflow.cx.v3.Generator"> & {
  /**
   * The unique identifier of the generator.
   * Must be set for the
   * [Generators.UpdateGenerator][google.cloud.dialogflow.cx.v3.Generators.UpdateGenerator]
   * method. [Generators.CreateGenerate][] populates the name automatically.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/generators/<Generator ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The human-readable name of the generator, unique within the
   * agent. The prompt contains pre-defined parameters such as $conversation,
   * $last-user-utterance, etc. populated by Dialogflow. It can also contain
   * custom placeholders which will be resolved during fulfillment.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Required. Prompt for the LLM model.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Phrase prompt_text = 3;
   */
  promptText?: Phrase;

  /**
   * Optional. List of custom placeholders in the prompt text.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Generator.Placeholder placeholders = 5;
   */
  placeholders: Generator_Placeholder[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Generator.
 * Use `create(GeneratorSchema)` to create a new message.
 */
export const GeneratorSchema: GenMessage<Generator> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_generator, 0);

/**
 * Represents a custom placeholder in the prompt text.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Generator.Placeholder
 */
export type Generator_Placeholder = Message<"google.cloud.dialogflow.cx.v3.Generator.Placeholder"> & {
  /**
   * Unique ID used to map custom placeholder to parameters in fulfillment.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Custom placeholder value in the prompt text.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Generator.Placeholder.
 * Use `create(Generator_PlaceholderSchema)` to create a new message.
 */
export const Generator_PlaceholderSchema: GenMessage<Generator_Placeholder> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_generator, 0, 0);

/**
 * Text input which can be used for prompt or banned phrases.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Phrase
 */
export type Phrase = Message<"google.cloud.dialogflow.cx.v3.Phrase"> & {
  /**
   * Required. Text input which can be used for prompt or banned phrases.
   *
   * @generated from field: string text = 1;
   */
  text: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Phrase.
 * Use `create(PhraseSchema)` to create a new message.
 */
export const PhraseSchema: GenMessage<Phrase> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_generator, 1);

/**
 * The request message for
 * [Generators.ListGenerators][google.cloud.dialogflow.cx.v3.Generators.ListGenerators].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListGeneratorsRequest
 */
export type ListGeneratorsRequest = Message<"google.cloud.dialogflow.cx.v3.ListGeneratorsRequest"> & {
  /**
   * Required. The agent to list all generators for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The language to list generators for.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;

  /**
   * The maximum number of items to return in a single page. By default 100 and
   * at most 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListGeneratorsRequest.
 * Use `create(ListGeneratorsRequestSchema)` to create a new message.
 */
export const ListGeneratorsRequestSchema: GenMessage<ListGeneratorsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_generator, 2);

/**
 * The response message for
 * [Generators.ListGenerators][google.cloud.dialogflow.cx.v3.Generators.ListGenerators].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListGeneratorsResponse
 */
export type ListGeneratorsResponse = Message<"google.cloud.dialogflow.cx.v3.ListGeneratorsResponse"> & {
  /**
   * The list of generators. There will be a maximum number of items returned
   * based on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Generator generators = 1;
   */
  generators: Generator[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListGeneratorsResponse.
 * Use `create(ListGeneratorsResponseSchema)` to create a new message.
 */
export const ListGeneratorsResponseSchema: GenMessage<ListGeneratorsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_generator, 3);

/**
 * The request message for
 * [Generators.GetGenerator][google.cloud.dialogflow.cx.v3.Generators.GetGenerator].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.GetGeneratorRequest
 */
export type GetGeneratorRequest = Message<"google.cloud.dialogflow.cx.v3.GetGeneratorRequest"> & {
  /**
   * Required. The name of the generator.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/generators/<Generator ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The language to list generators for.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.GetGeneratorRequest.
 * Use `create(GetGeneratorRequestSchema)` to create a new message.
 */
export const GetGeneratorRequestSchema: GenMessage<GetGeneratorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_generator, 4);

/**
 * The request message for
 * [Generators.CreateGenerator][google.cloud.dialogflow.cx.v3.Generators.CreateGenerator].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.CreateGeneratorRequest
 */
export type CreateGeneratorRequest = Message<"google.cloud.dialogflow.cx.v3.CreateGeneratorRequest"> & {
  /**
   * Required. The agent to create a generator for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The generator to create.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Generator generator = 2;
   */
  generator?: Generator;

  /**
   * The language to create generators for the following fields:
   * *  `Generator.prompt_text.text`
   * If not specified, the agent's default language is used.
   *
   * @generated from field: string language_code = 3;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.CreateGeneratorRequest.
 * Use `create(CreateGeneratorRequestSchema)` to create a new message.
 */
export const CreateGeneratorRequestSchema: GenMessage<CreateGeneratorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_generator, 5);

/**
 * The request message for
 * [Generators.UpdateGenerator][google.cloud.dialogflow.cx.v3.Generators.UpdateGenerator].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.UpdateGeneratorRequest
 */
export type UpdateGeneratorRequest = Message<"google.cloud.dialogflow.cx.v3.UpdateGeneratorRequest"> & {
  /**
   * Required. The generator to update.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Generator generator = 1;
   */
  generator?: Generator;

  /**
   * The language to list generators for.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;

  /**
   * The mask to control which fields get updated. If the mask is not present,
   * all fields will be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.UpdateGeneratorRequest.
 * Use `create(UpdateGeneratorRequestSchema)` to create a new message.
 */
export const UpdateGeneratorRequestSchema: GenMessage<UpdateGeneratorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_generator, 6);

/**
 * The request message for
 * [Generators.DeleteGenerator][google.cloud.dialogflow.cx.v3.Generators.DeleteGenerator].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.DeleteGeneratorRequest
 */
export type DeleteGeneratorRequest = Message<"google.cloud.dialogflow.cx.v3.DeleteGeneratorRequest"> & {
  /**
   * Required. The name of the generator to delete.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/generators/<Generator ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * This field has no effect for generators not being used.
   * For generators that are used by pages/flows/transition route groups:
   *
   * *  If `force` is set to false, an error will be returned with message
   *    indicating the referenced resources.
   * *  If `force` is set to true, Dialogflow will remove the generator, as well
   *    as any references to the generator (i.e.
   *    [Generator][Fulfillment.generator]) in fulfillments.
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.DeleteGeneratorRequest.
 * Use `create(DeleteGeneratorRequestSchema)` to create a new message.
 */
export const DeleteGeneratorRequestSchema: GenMessage<DeleteGeneratorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_generator, 7);

/**
 * Service for managing [Generators][google.cloud.dialogflow.cx.v3.Generator]
 *
 * @generated from service google.cloud.dialogflow.cx.v3.Generators
 */
export const Generators: GenService<{
  /**
   * Returns the list of all generators in the specified agent.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Generators.ListGenerators
   */
  listGenerators: {
    methodKind: "unary";
    input: typeof ListGeneratorsRequestSchema;
    output: typeof ListGeneratorsResponseSchema;
  },
  /**
   * Retrieves the specified generator.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Generators.GetGenerator
   */
  getGenerator: {
    methodKind: "unary";
    input: typeof GetGeneratorRequestSchema;
    output: typeof GeneratorSchema;
  },
  /**
   * Creates a generator in the specified agent.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Generators.CreateGenerator
   */
  createGenerator: {
    methodKind: "unary";
    input: typeof CreateGeneratorRequestSchema;
    output: typeof GeneratorSchema;
  },
  /**
   * Update the specified generator.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Generators.UpdateGenerator
   */
  updateGenerator: {
    methodKind: "unary";
    input: typeof UpdateGeneratorRequestSchema;
    output: typeof GeneratorSchema;
  },
  /**
   * Deletes the specified generators.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Generators.DeleteGenerator
   */
  deleteGenerator: {
    methodKind: "unary";
    input: typeof DeleteGeneratorRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_cx_v3_generator, 0);

