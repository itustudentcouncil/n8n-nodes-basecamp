// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/cx/v3/session_entity_type.proto (package google.cloud.dialogflow.cx.v3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { EntityType_Entity } from "./entity_type_pb";
import { file_google_cloud_dialogflow_cx_v3_entity_type } from "./entity_type_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/cx/v3/session_entity_type.proto.
 */
export const file_google_cloud_dialogflow_cx_v3_session_entity_type: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy9jeC92My9zZXNzaW9uX2VudGl0eV90eXBlLnByb3RvEh1nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52MyL1BAoRU2Vzc2lvbkVudGl0eVR5cGUSEQoEbmFtZRgBIAEoCUID4EECEmYKFGVudGl0eV9vdmVycmlkZV9tb2RlGAMgASgOMkMuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuU2Vzc2lvbkVudGl0eVR5cGUuRW50aXR5T3ZlcnJpZGVNb2RlQgPgQQISRwoIZW50aXRpZXMYBCADKAsyMC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5FbnRpdHlUeXBlLkVudGl0eUID4EECIoIBChJFbnRpdHlPdmVycmlkZU1vZGUSJAogRU5USVRZX09WRVJSSURFX01PREVfVU5TUEVDSUZJRUQQABIhCh1FTlRJVFlfT1ZFUlJJREVfTU9ERV9PVkVSUklERRABEiMKH0VOVElUWV9PVkVSUklERV9NT0RFX1NVUFBMRU1FTlQQAjqWAupBkgIKK2RpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vU2Vzc2lvbkVudGl0eVR5cGUSY3Byb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9hZ2VudHMve2FnZW50fS9zZXNzaW9ucy97c2Vzc2lvbn0vZW50aXR5VHlwZXMve2VudGl0eV90eXBlfRJ+cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2FnZW50cy97YWdlbnR9L2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnR9L3Nlc3Npb25zL3tzZXNzaW9ufS9lbnRpdHlUeXBlcy97ZW50aXR5X3R5cGV9IosBCh1MaXN0U2Vzc2lvbkVudGl0eVR5cGVzUmVxdWVzdBJDCgZwYXJlbnQYASABKAlCM+BBAvpBLRIrZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9TZXNzaW9uRW50aXR5VHlwZRIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSKJAQoeTGlzdFNlc3Npb25FbnRpdHlUeXBlc1Jlc3BvbnNlEk4KFHNlc3Npb25fZW50aXR5X3R5cGVzGAEgAygLMjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuU2Vzc2lvbkVudGl0eVR5cGUSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJImAKG0dldFNlc3Npb25FbnRpdHlUeXBlUmVxdWVzdBJBCgRuYW1lGAEgASgJQjPgQQL6QS0KK2RpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vU2Vzc2lvbkVudGl0eVR5cGUiuQEKHkNyZWF0ZVNlc3Npb25FbnRpdHlUeXBlUmVxdWVzdBJDCgZwYXJlbnQYASABKAlCM+BBAvpBLRIrZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9TZXNzaW9uRW50aXR5VHlwZRJSChNzZXNzaW9uX2VudGl0eV90eXBlGAIgASgLMjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuU2Vzc2lvbkVudGl0eVR5cGVCA+BBAiKlAQoeVXBkYXRlU2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0ElIKE3Nlc3Npb25fZW50aXR5X3R5cGUYASABKAsyMC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5TZXNzaW9uRW50aXR5VHlwZUID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJjCh5EZWxldGVTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QSQQoEbmFtZRgBIAEoCUIz4EEC+kEtCitkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1Nlc3Npb25FbnRpdHlUeXBlMsUOChJTZXNzaW9uRW50aXR5VHlwZXMSwwIKFkxpc3RTZXNzaW9uRW50aXR5VHlwZXMSPC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5MaXN0U2Vzc2lvbkVudGl0eVR5cGVzUmVxdWVzdBo9Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkxpc3RTZXNzaW9uRW50aXR5VHlwZXNSZXNwb25zZSKrAdpBBnBhcmVudILT5JMCmwFaVBJSL3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9lbnZpcm9ubWVudHMvKi9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlcxJDL3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlcxKwAgoUR2V0U2Vzc2lvbkVudGl0eVR5cGUSOi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5HZXRTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QaMC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5TZXNzaW9uRW50aXR5VHlwZSKpAdpBBG5hbWWC0+STApsBWlQSUi92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Vudmlyb25tZW50cy8qL3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn0SQy92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn0S9gIKF0NyZWF0ZVNlc3Npb25FbnRpdHlUeXBlEj0uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuQ3JlYXRlU2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0GjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuU2Vzc2lvbkVudGl0eVR5cGUi6QHaQRpwYXJlbnQsc2Vzc2lvbl9lbnRpdHlfdHlwZYLT5JMCxQE6E3Nlc3Npb25fZW50aXR5X3R5cGVaaToTc2Vzc2lvbl9lbnRpdHlfdHlwZSJSL3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9lbnZpcm9ubWVudHMvKi9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlcyJDL3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlcxKjAwoXVXBkYXRlU2Vzc2lvbkVudGl0eVR5cGUSPS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5VcGRhdGVTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QaMC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5TZXNzaW9uRW50aXR5VHlwZSKWAtpBH3Nlc3Npb25fZW50aXR5X3R5cGUsdXBkYXRlX21hc2uC0+STAu0BOhNzZXNzaW9uX2VudGl0eV90eXBlWn06E3Nlc3Npb25fZW50aXR5X3R5cGUyZi92My97c2Vzc2lvbl9lbnRpdHlfdHlwZS5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZW52aXJvbm1lbnRzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfTJXL3YzL3tzZXNzaW9uX2VudGl0eV90eXBlLm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9zZXNzaW9ucy8qL2VudGl0eVR5cGVzLyp9EpwCChdEZWxldGVTZXNzaW9uRW50aXR5VHlwZRI9Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkRlbGV0ZVNlc3Npb25FbnRpdHlUeXBlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSKpAdpBBG5hbWWC0+STApsBWlQqUi92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Vudmlyb25tZW50cy8qL3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn0qQy92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn0aeMpBGWRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb23SQVlodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvZGlhbG9nZmxvd0K8AQohY29tLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzQhZTZXNzaW9uRW50aXR5VHlwZVByb3RvUAFaMWNsb3VkLmdvb2dsZS5jb20vZ28vZGlhbG9nZmxvdy9jeC9hcGl2My9jeHBiO2N4cGL4AQGiAgJERqoCHUdvb2dsZS5DbG91ZC5EaWFsb2dmbG93LkN4LlYz6gIhR29vZ2xlOjpDbG91ZDo6RGlhbG9nZmxvdzo6Q1g6OlYzYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_cx_v3_entity_type, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Session entity types are referred to as **User** entity types and are
 * entities that are built for an individual user such as favorites,
 * preferences, playlists, and so on.
 *
 * You can redefine a session entity type at the session level to extend or
 * replace a [custom entity type][google.cloud.dialogflow.cx.v3.EntityType] at
 * the user session level (we refer to the entity types defined at the agent
 * level as "custom entity types").
 *
 * Note: session entity types apply to all queries, regardless of the language.
 *
 * For more information about entity types, see the [Dialogflow
 * documentation](https://cloud.google.com/dialogflow/docs/entities-overview).
 *
 * @generated from message google.cloud.dialogflow.cx.v3.SessionEntityType
 */
export type SessionEntityType = Message<"google.cloud.dialogflow.cx.v3.SessionEntityType"> & {
  /**
   * Required. The unique identifier of the session entity type.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/sessions/<Session ID>/entityTypes/<Entity Type
   * ID>` or `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>/sessions/<Session ID>/entityTypes/<Entity
   * Type ID>`. If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Indicates whether the additional data should override or
   * supplement the custom entity type definition.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.SessionEntityType.EntityOverrideMode entity_override_mode = 3;
   */
  entityOverrideMode: SessionEntityType_EntityOverrideMode;

  /**
   * Required. The collection of entities to override or supplement the custom
   * entity type.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.EntityType.Entity entities = 4;
   */
  entities: EntityType_Entity[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.SessionEntityType.
 * Use `create(SessionEntityTypeSchema)` to create a new message.
 */
export const SessionEntityTypeSchema: GenMessage<SessionEntityType> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_session_entity_type, 0);

/**
 * The types of modifications for the session entity type.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.SessionEntityType.EntityOverrideMode
 */
export enum SessionEntityType_EntityOverrideMode {
  /**
   * Not specified. This value should be never used.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The collection of session entities overrides the collection of entities
   * in the corresponding custom entity type.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_OVERRIDE = 1;
   */
  OVERRIDE = 1,

  /**
   * The collection of session entities extends the collection of entities in
   * the corresponding custom entity type.
   *
   * Note: Even in this override mode calls to `ListSessionEntityTypes`,
   * `GetSessionEntityType`, `CreateSessionEntityType` and
   * `UpdateSessionEntityType` only return the additional entities added in
   * this session entity type. If you want to get the supplemented list,
   * please call
   * [EntityTypes.GetEntityType][google.cloud.dialogflow.cx.v3.EntityTypes.GetEntityType]
   * on the custom entity type and merge.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_SUPPLEMENT = 2;
   */
  SUPPLEMENT = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.SessionEntityType.EntityOverrideMode.
 */
export const SessionEntityType_EntityOverrideModeSchema: GenEnum<SessionEntityType_EntityOverrideMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_session_entity_type, 0, 0);

/**
 * The request message for
 * [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.cx.v3.SessionEntityTypes.ListSessionEntityTypes].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListSessionEntityTypesRequest
 */
export type ListSessionEntityTypesRequest = Message<"google.cloud.dialogflow.cx.v3.ListSessionEntityTypesRequest"> & {
  /**
   * Required. The session to list all session entity types from.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/sessions/<Session ID>` or `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/environments/<Environment ID>/sessions/<Session ID>`.
   * If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return in a single page. By default 100 and
   * at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListSessionEntityTypesRequest.
 * Use `create(ListSessionEntityTypesRequestSchema)` to create a new message.
 */
export const ListSessionEntityTypesRequestSchema: GenMessage<ListSessionEntityTypesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_session_entity_type, 1);

/**
 * The response message for
 * [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.cx.v3.SessionEntityTypes.ListSessionEntityTypes].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListSessionEntityTypesResponse
 */
export type ListSessionEntityTypesResponse = Message<"google.cloud.dialogflow.cx.v3.ListSessionEntityTypesResponse"> & {
  /**
   * The list of session entity types. There will be a maximum number of items
   * returned based on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.SessionEntityType session_entity_types = 1;
   */
  sessionEntityTypes: SessionEntityType[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListSessionEntityTypesResponse.
 * Use `create(ListSessionEntityTypesResponseSchema)` to create a new message.
 */
export const ListSessionEntityTypesResponseSchema: GenMessage<ListSessionEntityTypesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_session_entity_type, 2);

/**
 * The request message for
 * [SessionEntityTypes.GetSessionEntityType][google.cloud.dialogflow.cx.v3.SessionEntityTypes.GetSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.GetSessionEntityTypeRequest
 */
export type GetSessionEntityTypeRequest = Message<"google.cloud.dialogflow.cx.v3.GetSessionEntityTypeRequest"> & {
  /**
   * Required. The name of the session entity type.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/sessions/<Session ID>/entityTypes/<Entity Type ID>` or
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>/sessions/<Session ID>/entityTypes/<Entity
   * Type ID>`. If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.GetSessionEntityTypeRequest.
 * Use `create(GetSessionEntityTypeRequestSchema)` to create a new message.
 */
export const GetSessionEntityTypeRequestSchema: GenMessage<GetSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_session_entity_type, 3);

/**
 * The request message for
 * [SessionEntityTypes.CreateSessionEntityType][google.cloud.dialogflow.cx.v3.SessionEntityTypes.CreateSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.CreateSessionEntityTypeRequest
 */
export type CreateSessionEntityTypeRequest = Message<"google.cloud.dialogflow.cx.v3.CreateSessionEntityTypeRequest"> & {
  /**
   * Required. The session to create a session entity type for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/sessions/<Session ID>` or `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/environments/<Environment ID>/sessions/<Session ID>`.
   * If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The session entity type to create.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.SessionEntityType session_entity_type = 2;
   */
  sessionEntityType?: SessionEntityType;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.CreateSessionEntityTypeRequest.
 * Use `create(CreateSessionEntityTypeRequestSchema)` to create a new message.
 */
export const CreateSessionEntityTypeRequestSchema: GenMessage<CreateSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_session_entity_type, 4);

/**
 * The request message for
 * [SessionEntityTypes.UpdateSessionEntityType][google.cloud.dialogflow.cx.v3.SessionEntityTypes.UpdateSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.UpdateSessionEntityTypeRequest
 */
export type UpdateSessionEntityTypeRequest = Message<"google.cloud.dialogflow.cx.v3.UpdateSessionEntityTypeRequest"> & {
  /**
   * Required. The session entity type to update.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/sessions/<Session ID>/entityTypes/<Entity Type ID>` or
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>/sessions/<Session ID>/entityTypes/<Entity
   * Type ID>`. If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.SessionEntityType session_entity_type = 1;
   */
  sessionEntityType?: SessionEntityType;

  /**
   * The mask to control which fields get updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.UpdateSessionEntityTypeRequest.
 * Use `create(UpdateSessionEntityTypeRequestSchema)` to create a new message.
 */
export const UpdateSessionEntityTypeRequestSchema: GenMessage<UpdateSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_session_entity_type, 5);

/**
 * The request message for
 * [SessionEntityTypes.DeleteSessionEntityType][google.cloud.dialogflow.cx.v3.SessionEntityTypes.DeleteSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.DeleteSessionEntityTypeRequest
 */
export type DeleteSessionEntityTypeRequest = Message<"google.cloud.dialogflow.cx.v3.DeleteSessionEntityTypeRequest"> & {
  /**
   * Required. The name of the session entity type to delete.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/sessions/<Session ID>/entityTypes/<Entity Type ID>` or
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>/sessions/<Session ID>/entityTypes/<Entity
   * Type ID>`. If `Environment ID` is not specified, we assume default 'draft'
   * environment.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.DeleteSessionEntityTypeRequest.
 * Use `create(DeleteSessionEntityTypeRequestSchema)` to create a new message.
 */
export const DeleteSessionEntityTypeRequestSchema: GenMessage<DeleteSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_session_entity_type, 6);

/**
 * Service for managing
 * [SessionEntityTypes][google.cloud.dialogflow.cx.v3.SessionEntityType].
 *
 * @generated from service google.cloud.dialogflow.cx.v3.SessionEntityTypes
 */
export const SessionEntityTypes: GenService<{
  /**
   * Returns the list of all session entity types in the specified session.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.SessionEntityTypes.ListSessionEntityTypes
   */
  listSessionEntityTypes: {
    methodKind: "unary";
    input: typeof ListSessionEntityTypesRequestSchema;
    output: typeof ListSessionEntityTypesResponseSchema;
  },
  /**
   * Retrieves the specified session entity type.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.SessionEntityTypes.GetSessionEntityType
   */
  getSessionEntityType: {
    methodKind: "unary";
    input: typeof GetSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Creates a session entity type.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.SessionEntityTypes.CreateSessionEntityType
   */
  createSessionEntityType: {
    methodKind: "unary";
    input: typeof CreateSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Updates the specified session entity type.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.SessionEntityTypes.UpdateSessionEntityType
   */
  updateSessionEntityType: {
    methodKind: "unary";
    input: typeof UpdateSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Deletes the specified session entity type.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.SessionEntityTypes.DeleteSessionEntityType
   */
  deleteSessionEntityType: {
    methodKind: "unary";
    input: typeof DeleteSessionEntityTypeRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_cx_v3_session_entity_type, 0);

