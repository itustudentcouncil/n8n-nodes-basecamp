// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/cx/v3/flow.proto (package google.cloud.dialogflow.cx.v3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { AdvancedSettings } from "./advanced_settings_pb";
import { file_google_cloud_dialogflow_cx_v3_advanced_settings } from "./advanced_settings_pb";
import type { ImportStrategy } from "./import_strategy_pb";
import { file_google_cloud_dialogflow_cx_v3_import_strategy } from "./import_strategy_pb";
import type { EventHandler, KnowledgeConnectorSettings, TransitionRoute } from "./page_pb";
import { file_google_cloud_dialogflow_cx_v3_page } from "./page_pb";
import type { ValidationMessage } from "./validation_message_pb";
import { file_google_cloud_dialogflow_cx_v3_validation_message } from "./validation_message_pb";
import type { OperationSchema } from "../../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/cx/v3/flow.proto.
 */
export const file_google_cloud_dialogflow_cx_v3_flow: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy9jeC92My9mbG93LnByb3RvEh1nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52MyKsAwoLTmx1U2V0dGluZ3MSSAoKbW9kZWxfdHlwZRgBIAEoDjI0Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLk5sdVNldHRpbmdzLk1vZGVsVHlwZRIgChhjbGFzc2lmaWNhdGlvbl90aHJlc2hvbGQYAyABKAISWQoTbW9kZWxfdHJhaW5pbmdfbW9kZRgEIAEoDjI8Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLk5sdVNldHRpbmdzLk1vZGVsVHJhaW5pbmdNb2RlIlkKCU1vZGVsVHlwZRIaChZNT0RFTF9UWVBFX1VOU1BFQ0lGSUVEEAASFwoTTU9ERUxfVFlQRV9TVEFOREFSRBABEhcKE01PREVMX1RZUEVfQURWQU5DRUQQAyJ7ChFNb2RlbFRyYWluaW5nTW9kZRIjCh9NT0RFTF9UUkFJTklOR19NT0RFX1VOU1BFQ0lGSUVEEAASIQodTU9ERUxfVFJBSU5JTkdfTU9ERV9BVVRPTUFUSUMQARIeChpNT0RFTF9UUkFJTklOR19NT0RFX01BTlVBTBACIvAGCgRGbG93EgwKBG5hbWUYASABKAkSGQoMZGlzcGxheV9uYW1lGAIgASgJQgPgQQISEwoLZGVzY3JpcHRpb24YAyABKAkSSQoRdHJhbnNpdGlvbl9yb3V0ZXMYBCADKAsyLi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5UcmFuc2l0aW9uUm91dGUSQwoOZXZlbnRfaGFuZGxlcnMYCiADKAsyKy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5FdmVudEhhbmRsZXISVAoXdHJhbnNpdGlvbl9yb3V0ZV9ncm91cHMYDyADKAlCM/pBMAouZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9UcmFuc2l0aW9uUm91dGVHcm91cBJACgxubHVfc2V0dGluZ3MYCyABKAsyKi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5ObHVTZXR0aW5ncxJKChFhZHZhbmNlZF9zZXR0aW5ncxgOIAEoCzIvLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkFkdmFuY2VkU2V0dGluZ3MSZAoca25vd2xlZGdlX2Nvbm5lY3Rvcl9zZXR0aW5ncxgSIAEoCzI5Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLktub3dsZWRnZUNvbm5lY3RvclNldHRpbmdzQgPgQQESXwoXbXVsdGlfbGFuZ3VhZ2Vfc2V0dGluZ3MYHCABKAsyOS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5GbG93Lk11bHRpTGFuZ3VhZ2VTZXR0aW5nc0ID4EEBEg4KBmxvY2tlZBgeIAEoCBp1ChVNdWx0aUxhbmd1YWdlU2V0dGluZ3MSLAofZW5hYmxlX211bHRpX2xhbmd1YWdlX2RldGVjdGlvbhgBIAEoCEID4EEBEi4KIXN1cHBvcnRlZF9yZXNwb25zZV9sYW5ndWFnZV9jb2RlcxgCIAMoCUID4EEBOmjqQWUKHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRmxvdxJDcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2FnZW50cy97YWdlbnR9L2Zsb3dzL3tmbG93fSKaAQoRQ3JlYXRlRmxvd1JlcXVlc3QSNgoGcGFyZW50GAEgASgJQibgQQL6QSASHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRmxvdxI2CgRmbG93GAIgASgLMiMuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRmxvd0ID4EECEhUKDWxhbmd1YWdlX2NvZGUYAyABKAkiWAoRRGVsZXRlRmxvd1JlcXVlc3QSNAoEbmFtZRgBIAEoCUIm4EEC+kEgCh5kaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0Zsb3cSDQoFZm9yY2UYAiABKAgiiAEKEExpc3RGbG93c1JlcXVlc3QSNgoGcGFyZW50GAEgASgJQibgQQL6QSASHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRmxvdxIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCRIVCg1sYW5ndWFnZV9jb2RlGAQgASgJImAKEUxpc3RGbG93c1Jlc3BvbnNlEjIKBWZsb3dzGAEgAygLMiMuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRmxvdxIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiXQoOR2V0Rmxvd1JlcXVlc3QSNAoEbmFtZRgBIAEoCUIm4EEC+kEgCh5kaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0Zsb3cSFQoNbGFuZ3VhZ2VfY29kZRgCIAEoCSKTAQoRVXBkYXRlRmxvd1JlcXVlc3QSNgoEZmxvdxgBIAEoCzIjLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkZsb3dCA+BBAhIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2sSFQoNbGFuZ3VhZ2VfY29kZRgDIAEoCSJIChBUcmFpbkZsb3dSZXF1ZXN0EjQKBG5hbWUYASABKAlCJuBBAvpBIAoeZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9GbG93ImIKE1ZhbGlkYXRlRmxvd1JlcXVlc3QSNAoEbmFtZRgBIAEoCUIm4EEC+kEgCh5kaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0Zsb3cSFQoNbGFuZ3VhZ2VfY29kZRgCIAEoCSJ9Ch5HZXRGbG93VmFsaWRhdGlvblJlc3VsdFJlcXVlc3QSRAoEbmFtZRgBIAEoCUI24EEC+kEwCi5kaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0Zsb3dWYWxpZGF0aW9uUmVzdWx0EhUKDWxhbmd1YWdlX2NvZGUYAiABKAkisQIKFEZsb3dWYWxpZGF0aW9uUmVzdWx0EgwKBG5hbWUYASABKAkSTQoTdmFsaWRhdGlvbl9tZXNzYWdlcxgCIAMoCzIwLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlZhbGlkYXRpb25NZXNzYWdlEi8KC3VwZGF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcDqKAepBhgEKLmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRmxvd1ZhbGlkYXRpb25SZXN1bHQSVHByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9hZ2VudHMve2FnZW50fS9mbG93cy97Zmxvd30vdmFsaWRhdGlvblJlc3VsdCLyAgoRSW1wb3J0Rmxvd1JlcXVlc3QSNgoGcGFyZW50GAEgASgJQibgQQL6QSASHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRmxvdxISCghmbG93X3VyaRgCIAEoCUgAEhYKDGZsb3dfY29udGVudBgDIAEoDEgAElQKDWltcG9ydF9vcHRpb24YBCABKA4yPS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5JbXBvcnRGbG93UmVxdWVzdC5JbXBvcnRPcHRpb24SVAoUZmxvd19pbXBvcnRfc3RyYXRlZ3kYBSABKAsyMS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5GbG93SW1wb3J0U3RyYXRlZ3lCA+BBASJFCgxJbXBvcnRPcHRpb24SHQoZSU1QT1JUX09QVElPTl9VTlNQRUNJRklFRBAAEggKBEtFRVAQARIMCghGQUxMQkFDSxACQgYKBGZsb3ciaAoSRmxvd0ltcG9ydFN0cmF0ZWd5ElIKFmdsb2JhbF9pbXBvcnRfc3RyYXRlZ3kYASABKA4yLS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5JbXBvcnRTdHJhdGVneUID4EEBIkcKEkltcG9ydEZsb3dSZXNwb25zZRIxCgRmbG93GAEgASgJQiP6QSAKHmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRmxvdyKHAQoRRXhwb3J0Rmxvd1JlcXVlc3QSNAoEbmFtZRgBIAEoCUIm4EEC+kEgCh5kaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0Zsb3cSFQoIZmxvd191cmkYAiABKAlCA+BBARIlChhpbmNsdWRlX3JlZmVyZW5jZWRfZmxvd3MYBCABKAhCA+BBASJIChJFeHBvcnRGbG93UmVzcG9uc2USEgoIZmxvd191cmkYASABKAlIABIWCgxmbG93X2NvbnRlbnQYAiABKAxIAEIGCgRmbG93MpgQCgVGbG93cxKzAQoKQ3JlYXRlRmxvdxIwLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkNyZWF0ZUZsb3dSZXF1ZXN0GiMuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRmxvdyJO2kELcGFyZW50LGZsb3eC0+STAjo6BGZsb3ciMi92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyp9L2Zsb3dzEpkBCgpEZWxldGVGbG93EjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRGVsZXRlRmxvd1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiQdpBBG5hbWWC0+STAjQqMi92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Zsb3dzLyp9ErMBCglMaXN0Rmxvd3MSLy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5MaXN0Rmxvd3NSZXF1ZXN0GjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuTGlzdEZsb3dzUmVzcG9uc2UiQ9pBBnBhcmVudILT5JMCNBIyL3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKn0vZmxvd3MSoAEKB0dldEZsb3cSLS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5HZXRGbG93UmVxdWVzdBojLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkZsb3ciQdpBBG5hbWWC0+STAjQSMi92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Zsb3dzLyp9Er0BCgpVcGRhdGVGbG93EjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuVXBkYXRlRmxvd1JlcXVlc3QaIy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5GbG93IljaQRBmbG93LHVwZGF0ZV9tYXNrgtPkkwI/OgRmbG93MjcvdjMve2Zsb3cubmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Zsb3dzLyp9EtkBCglUcmFpbkZsb3cSLy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5UcmFpbkZsb3dSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJ8ykEvChVnb29nbGUucHJvdG9idWYuRW1wdHkSFmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3TaQQRuYW1lgtPkkwI9OgEqIjgvdjMve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9mbG93cy8qfTp0cmFpbhK/AQoMVmFsaWRhdGVGbG93EjIuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuVmFsaWRhdGVGbG93UmVxdWVzdBozLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkZsb3dWYWxpZGF0aW9uUmVzdWx0IkaC0+STAkA6ASoiOy92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Zsb3dzLyp9OnZhbGlkYXRlEuEBChdHZXRGbG93VmFsaWRhdGlvblJlc3VsdBI9Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkdldEZsb3dWYWxpZGF0aW9uUmVzdWx0UmVxdWVzdBozLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkZsb3dWYWxpZGF0aW9uUmVzdWx0IlLaQQRuYW1lgtPkkwJFEkMvdjMve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9mbG93cy8qL3ZhbGlkYXRpb25SZXN1bHR9EtIBCgpJbXBvcnRGbG93EjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuSW1wb3J0Rmxvd1JlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uInPKQSwKEkltcG9ydEZsb3dSZXNwb25zZRIWZ29vZ2xlLnByb3RvYnVmLlN0cnVjdILT5JMCPjoBKiI5L3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKn0vZmxvd3M6aW1wb3J0EtIBCgpFeHBvcnRGbG93EjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRXhwb3J0Rmxvd1JlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uInPKQSwKEkV4cG9ydEZsb3dSZXNwb25zZRIWZ29vZ2xlLnByb3RvYnVmLlN0cnVjdILT5JMCPjoBKiI5L3YzL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZmxvd3MvKn06ZXhwb3J0GnjKQRlkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29t0kFZaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2RpYWxvZ2Zsb3dCrwEKIWNvbS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52M0IJRmxvd1Byb3RvUAFaMWNsb3VkLmdvb2dsZS5jb20vZ28vZGlhbG9nZmxvdy9jeC9hcGl2My9jeHBiO2N4cGL4AQGiAgJERqoCHUdvb2dsZS5DbG91ZC5EaWFsb2dmbG93LkN4LlYz6gIhR29vZ2xlOjpDbG91ZDo6RGlhbG9nZmxvdzo6Q1g6OlYzYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_cx_v3_advanced_settings, file_google_cloud_dialogflow_cx_v3_import_strategy, file_google_cloud_dialogflow_cx_v3_page, file_google_cloud_dialogflow_cx_v3_validation_message, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp]);

/**
 * Settings related to NLU.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.NluSettings
 */
export type NluSettings = Message<"google.cloud.dialogflow.cx.v3.NluSettings"> & {
  /**
   * Indicates the type of NLU model.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.NluSettings.ModelType model_type = 1;
   */
  modelType: NluSettings_ModelType;

  /**
   * To filter out false positive results and still get variety in matched
   * natural language inputs for your agent, you can tune the machine learning
   * classification threshold. If the returned score value is less than the
   * threshold value, then a no-match event will be triggered. The score values
   * range from 0.0 (completely uncertain) to 1.0 (completely certain). If set
   * to 0.0, the default of 0.3 is used.
   *
   * @generated from field: float classification_threshold = 3;
   */
  classificationThreshold: number;

  /**
   * Indicates NLU model training mode.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.NluSettings.ModelTrainingMode model_training_mode = 4;
   */
  modelTrainingMode: NluSettings_ModelTrainingMode;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.NluSettings.
 * Use `create(NluSettingsSchema)` to create a new message.
 */
export const NluSettingsSchema: GenMessage<NluSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 0);

/**
 * NLU model type.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.NluSettings.ModelType
 */
export enum NluSettings_ModelType {
  /**
   * Not specified. `MODEL_TYPE_STANDARD` will be used.
   *
   * @generated from enum value: MODEL_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Use standard NLU model.
   *
   * @generated from enum value: MODEL_TYPE_STANDARD = 1;
   */
  STANDARD = 1,

  /**
   * Use advanced NLU model.
   *
   * @generated from enum value: MODEL_TYPE_ADVANCED = 3;
   */
  ADVANCED = 3,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.NluSettings.ModelType.
 */
export const NluSettings_ModelTypeSchema: GenEnum<NluSettings_ModelType> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_flow, 0, 0);

/**
 * NLU model training mode.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.NluSettings.ModelTrainingMode
 */
export enum NluSettings_ModelTrainingMode {
  /**
   * Not specified. `MODEL_TRAINING_MODE_AUTOMATIC` will be used.
   *
   * @generated from enum value: MODEL_TRAINING_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * NLU model training is automatically triggered when a flow gets modified.
   * User can also manually trigger model training in this mode.
   *
   * @generated from enum value: MODEL_TRAINING_MODE_AUTOMATIC = 1;
   */
  AUTOMATIC = 1,

  /**
   * User needs to manually trigger NLU model training. Best for large flows
   * whose models take long time to train.
   *
   * @generated from enum value: MODEL_TRAINING_MODE_MANUAL = 2;
   */
  MANUAL = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.NluSettings.ModelTrainingMode.
 */
export const NluSettings_ModelTrainingModeSchema: GenEnum<NluSettings_ModelTrainingMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_flow, 0, 1);

/**
 * Flows represents the conversation flows when you build your chatbot agent.
 *
 * A flow consists of many pages connected by the transition routes.
 * Conversations always start with the built-in Start Flow (with an all-0 ID).
 * Transition routes can direct the conversation session from the current flow
 * (parent flow) to another flow (sub flow). When the sub flow is finished,
 * Dialogflow will bring the session back to the parent flow, where the sub flow
 * is started.
 *
 * Usually, when a transition route is followed by a matched intent, the intent
 * will be "consumed". This means the intent won't activate more transition
 * routes. However, when the followed transition route moves the conversation
 * session into a different flow, the matched intent can be carried over and to
 * be consumed in the target flow.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Flow
 */
export type Flow = Message<"google.cloud.dialogflow.cx.v3.Flow"> & {
  /**
   * The unique identifier of the flow.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The human-readable name of the flow.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * The description of the flow. The maximum length is 500 characters. If
   * exceeded, the request is rejected.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * A flow's transition routes serve two purposes:
   *
   * *   They are responsible for matching the user's first utterances in the
   * flow.
   * *   They are inherited by every page's [transition
   * routes][Page.transition_routes] and can support use cases such as the user
   * saying "help" or "can I talk to a human?", which can be handled in a common
   * way regardless of the current page. Transition routes defined in the page
   * have higher priority than those defined in the flow.
   *
   * TransitionRoutes are evalauted in the following order:
   *
   * *   TransitionRoutes with intent specified.
   * *   TransitionRoutes with only condition specified.
   *
   * TransitionRoutes with intent specified are inherited by pages in the flow.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.TransitionRoute transition_routes = 4;
   */
  transitionRoutes: TransitionRoute[];

  /**
   * A flow's event handlers serve two purposes:
   *
   * *   They are responsible for handling events (e.g. no match,
   * webhook errors) in the flow.
   * *   They are inherited by every page's [event
   * handlers][Page.event_handlers], which can be used to handle common events
   * regardless of the current page. Event handlers defined in the page
   * have higher priority than those defined in the flow.
   *
   * Unlike
   * [transition_routes][google.cloud.dialogflow.cx.v3.Flow.transition_routes],
   * these handlers are evaluated on a first-match basis. The first one that
   * matches the event get executed, with the rest being ignored.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.EventHandler event_handlers = 10;
   */
  eventHandlers: EventHandler[];

  /**
   * A flow's transition route group serve two purposes:
   *
   * *   They are responsible for matching the user's first utterances in the
   * flow.
   * *   They are inherited by every page's [transition
   * route groups][Page.transition_route_groups]. Transition route groups
   * defined in the page have higher priority than those defined in the flow.
   *
   * Format:`projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>`
   * or `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/transitionRouteGroups/<TransitionRouteGroup ID>` for agent-level
   * groups.
   *
   * @generated from field: repeated string transition_route_groups = 15;
   */
  transitionRouteGroups: string[];

  /**
   * NLU related settings of the flow.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.NluSettings nlu_settings = 11;
   */
  nluSettings?: NluSettings;

  /**
   * Hierarchical advanced settings for this flow. The settings exposed at the
   * lower level overrides the settings exposed at the higher level.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.AdvancedSettings advanced_settings = 14;
   */
  advancedSettings?: AdvancedSettings;

  /**
   * Optional. Knowledge connector configuration.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.KnowledgeConnectorSettings knowledge_connector_settings = 18;
   */
  knowledgeConnectorSettings?: KnowledgeConnectorSettings;

  /**
   * Optional. Multi-lingual agent settings for this flow.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Flow.MultiLanguageSettings multi_language_settings = 28;
   */
  multiLanguageSettings?: Flow_MultiLanguageSettings;

  /**
   * Indicates whether the flow is locked for changes. If the flow is locked,
   * modifications to the flow will be rejected.
   *
   * @generated from field: bool locked = 30;
   */
  locked: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Flow.
 * Use `create(FlowSchema)` to create a new message.
 */
export const FlowSchema: GenMessage<Flow> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 1);

/**
 * Settings for multi-lingual agents.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Flow.MultiLanguageSettings
 */
export type Flow_MultiLanguageSettings = Message<"google.cloud.dialogflow.cx.v3.Flow.MultiLanguageSettings"> & {
  /**
   * Optional. Enable multi-language detection for this flow. This can be set
   * only if [agent level multi language
   * setting][Agent.enable_multi_language_training] is enabled.
   *
   * @generated from field: bool enable_multi_language_detection = 1;
   */
  enableMultiLanguageDetection: boolean;

  /**
   * Optional. Agent will respond in the detected language if the detected
   * language code is in the supported resolved languages for this flow. This
   * will be used only if multi-language training is enabled in the
   * [agent][google.cloud.dialogflow.cx.v3.Agent.enable_multi_language_training]
   * and multi-language detection is enabled in the
   * [flow][google.cloud.dialogflow.cx.v3.Flow.MultiLanguageSettings.enable_multi_language_detection].
   * The supported languages must be a subset of the languages supported by
   * the agent.
   *
   * @generated from field: repeated string supported_response_language_codes = 2;
   */
  supportedResponseLanguageCodes: string[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Flow.MultiLanguageSettings.
 * Use `create(Flow_MultiLanguageSettingsSchema)` to create a new message.
 */
export const Flow_MultiLanguageSettingsSchema: GenMessage<Flow_MultiLanguageSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 1, 0);

/**
 * The request message for
 * [Flows.CreateFlow][google.cloud.dialogflow.cx.v3.Flows.CreateFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.CreateFlowRequest
 */
export type CreateFlowRequest = Message<"google.cloud.dialogflow.cx.v3.CreateFlowRequest"> & {
  /**
   * Required. The agent to create a flow for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The flow to create.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Flow flow = 2;
   */
  flow?: Flow;

  /**
   * The language of the following fields in `flow`:
   *
   * *  `Flow.event_handlers.trigger_fulfillment.messages`
   * *  `Flow.event_handlers.trigger_fulfillment.conditional_cases`
   * *  `Flow.transition_routes.trigger_fulfillment.messages`
   * *  `Flow.transition_routes.trigger_fulfillment.conditional_cases`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 3;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.CreateFlowRequest.
 * Use `create(CreateFlowRequestSchema)` to create a new message.
 */
export const CreateFlowRequestSchema: GenMessage<CreateFlowRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 2);

/**
 * The request message for
 * [Flows.DeleteFlow][google.cloud.dialogflow.cx.v3.Flows.DeleteFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.DeleteFlowRequest
 */
export type DeleteFlowRequest = Message<"google.cloud.dialogflow.cx.v3.DeleteFlowRequest"> & {
  /**
   * Required. The name of the flow to delete.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * This field has no effect for flows with no incoming transitions.
   * For flows with incoming transitions:
   *
   * *  If `force` is set to false, an error will be returned with message
   *    indicating the incoming transitions.
   * *  If `force` is set to true, Dialogflow will remove the flow, as well as
   *    any transitions to the flow (i.e. [Target
   *    flow][EventHandler.target_flow] in event handlers or [Target
   *    flow][TransitionRoute.target_flow] in transition routes that point to
   *    this flow will be cleared).
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.DeleteFlowRequest.
 * Use `create(DeleteFlowRequestSchema)` to create a new message.
 */
export const DeleteFlowRequestSchema: GenMessage<DeleteFlowRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 3);

/**
 * The request message for
 * [Flows.ListFlows][google.cloud.dialogflow.cx.v3.Flows.ListFlows].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListFlowsRequest
 */
export type ListFlowsRequest = Message<"google.cloud.dialogflow.cx.v3.ListFlowsRequest"> & {
  /**
   * Required. The agent containing the flows.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return in a single page. By default 100 and
   * at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The language to list flows for. The following fields are language
   * dependent:
   *
   * *  `Flow.event_handlers.trigger_fulfillment.messages`
   * *  `Flow.event_handlers.trigger_fulfillment.conditional_cases`
   * *  `Flow.transition_routes.trigger_fulfillment.messages`
   * *  `Flow.transition_routes.trigger_fulfillment.conditional_cases`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 4;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListFlowsRequest.
 * Use `create(ListFlowsRequestSchema)` to create a new message.
 */
export const ListFlowsRequestSchema: GenMessage<ListFlowsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 4);

/**
 * The response message for
 * [Flows.ListFlows][google.cloud.dialogflow.cx.v3.Flows.ListFlows].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListFlowsResponse
 */
export type ListFlowsResponse = Message<"google.cloud.dialogflow.cx.v3.ListFlowsResponse"> & {
  /**
   * The list of flows. There will be a maximum number of items returned based
   * on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Flow flows = 1;
   */
  flows: Flow[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListFlowsResponse.
 * Use `create(ListFlowsResponseSchema)` to create a new message.
 */
export const ListFlowsResponseSchema: GenMessage<ListFlowsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 5);

/**
 * The response message for
 * [Flows.GetFlow][google.cloud.dialogflow.cx.v3.Flows.GetFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.GetFlowRequest
 */
export type GetFlowRequest = Message<"google.cloud.dialogflow.cx.v3.GetFlowRequest"> & {
  /**
   * Required. The name of the flow to get.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The language to retrieve the flow for. The following fields are language
   * dependent:
   *
   * *  `Flow.event_handlers.trigger_fulfillment.messages`
   * *  `Flow.event_handlers.trigger_fulfillment.conditional_cases`
   * *  `Flow.transition_routes.trigger_fulfillment.messages`
   * *  `Flow.transition_routes.trigger_fulfillment.conditional_cases`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.GetFlowRequest.
 * Use `create(GetFlowRequestSchema)` to create a new message.
 */
export const GetFlowRequestSchema: GenMessage<GetFlowRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 6);

/**
 * The request message for
 * [Flows.UpdateFlow][google.cloud.dialogflow.cx.v3.Flows.UpdateFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.UpdateFlowRequest
 */
export type UpdateFlowRequest = Message<"google.cloud.dialogflow.cx.v3.UpdateFlowRequest"> & {
  /**
   * Required. The flow to update.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Flow flow = 1;
   */
  flow?: Flow;

  /**
   * The mask to control which fields get updated. If the mask is not present,
   * all fields will be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * The language of the following fields in `flow`:
   *
   * *  `Flow.event_handlers.trigger_fulfillment.messages`
   * *  `Flow.event_handlers.trigger_fulfillment.conditional_cases`
   * *  `Flow.transition_routes.trigger_fulfillment.messages`
   * *  `Flow.transition_routes.trigger_fulfillment.conditional_cases`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 3;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.UpdateFlowRequest.
 * Use `create(UpdateFlowRequestSchema)` to create a new message.
 */
export const UpdateFlowRequestSchema: GenMessage<UpdateFlowRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 7);

/**
 * The request message for
 * [Flows.TrainFlow][google.cloud.dialogflow.cx.v3.Flows.TrainFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.TrainFlowRequest
 */
export type TrainFlowRequest = Message<"google.cloud.dialogflow.cx.v3.TrainFlowRequest"> & {
  /**
   * Required. The flow to train.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.TrainFlowRequest.
 * Use `create(TrainFlowRequestSchema)` to create a new message.
 */
export const TrainFlowRequestSchema: GenMessage<TrainFlowRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 8);

/**
 * The request message for
 * [Flows.ValidateFlow][google.cloud.dialogflow.cx.v3.Flows.ValidateFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ValidateFlowRequest
 */
export type ValidateFlowRequest = Message<"google.cloud.dialogflow.cx.v3.ValidateFlowRequest"> & {
  /**
   * Required. The flow to validate.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If not specified, the agent's default language is used.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ValidateFlowRequest.
 * Use `create(ValidateFlowRequestSchema)` to create a new message.
 */
export const ValidateFlowRequestSchema: GenMessage<ValidateFlowRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 9);

/**
 * The request message for
 * [Flows.GetFlowValidationResult][google.cloud.dialogflow.cx.v3.Flows.GetFlowValidationResult].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.GetFlowValidationResultRequest
 */
export type GetFlowValidationResultRequest = Message<"google.cloud.dialogflow.cx.v3.GetFlowValidationResultRequest"> & {
  /**
   * Required. The flow name.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/validationResult`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If not specified, the agent's default language is used.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.GetFlowValidationResultRequest.
 * Use `create(GetFlowValidationResultRequestSchema)` to create a new message.
 */
export const GetFlowValidationResultRequestSchema: GenMessage<GetFlowValidationResultRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 10);

/**
 * The response message for
 * [Flows.GetFlowValidationResult][google.cloud.dialogflow.cx.v3.Flows.GetFlowValidationResult].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.FlowValidationResult
 */
export type FlowValidationResult = Message<"google.cloud.dialogflow.cx.v3.FlowValidationResult"> & {
  /**
   * The unique identifier of the flow validation result.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/validationResult`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Contains all validation messages.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.ValidationMessage validation_messages = 2;
   */
  validationMessages: ValidationMessage[];

  /**
   * Last time the flow was validated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.FlowValidationResult.
 * Use `create(FlowValidationResultSchema)` to create a new message.
 */
export const FlowValidationResultSchema: GenMessage<FlowValidationResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 11);

/**
 * The request message for
 * [Flows.ImportFlow][google.cloud.dialogflow.cx.v3.Flows.ImportFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ImportFlowRequest
 */
export type ImportFlowRequest = Message<"google.cloud.dialogflow.cx.v3.ImportFlowRequest"> & {
  /**
   * Required. The agent to import the flow into.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The flow to import.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3.ImportFlowRequest.flow
   */
  flow: {
    /**
     * The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI
     * to import flow from. The format of this URI must be
     * `gs://<bucket-name>/<object-name>`.
     *
     * Dialogflow performs a read operation for the Cloud Storage object
     * on the caller's behalf, so your request authentication must
     * have read permissions for the object. For more information, see
     * [Dialogflow access
     * control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
     *
     * @generated from field: string flow_uri = 2;
     */
    value: string;
    case: "flowUri";
  } | {
    /**
     * Uncompressed raw byte content for flow.
     *
     * @generated from field: bytes flow_content = 3;
     */
    value: Uint8Array;
    case: "flowContent";
  } | { case: undefined; value?: undefined };

  /**
   * Flow import mode. If not specified, `KEEP` is assumed.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.ImportFlowRequest.ImportOption import_option = 4;
   */
  importOption: ImportFlowRequest_ImportOption;

  /**
   * Optional. Specifies the import strategy used when resolving resource
   * conflicts.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.FlowImportStrategy flow_import_strategy = 5;
   */
  flowImportStrategy?: FlowImportStrategy;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ImportFlowRequest.
 * Use `create(ImportFlowRequestSchema)` to create a new message.
 */
export const ImportFlowRequestSchema: GenMessage<ImportFlowRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 12);

/**
 * Import option.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.ImportFlowRequest.ImportOption
 */
export enum ImportFlowRequest_ImportOption {
  /**
   * Unspecified. Treated as `KEEP`.
   *
   * @generated from enum value: IMPORT_OPTION_UNSPECIFIED = 0;
   */
  IMPORT_OPTION_UNSPECIFIED = 0,

  /**
   * Always respect settings in exported flow content. It may cause a
   * import failure if some settings (e.g. custom NLU) are not supported in
   * the agent to import into.
   *
   * @generated from enum value: KEEP = 1;
   */
  KEEP = 1,

  /**
   * Fallback to default settings if some settings are not supported in the
   * agent to import into. E.g. Standard NLU will be used if custom NLU is
   * not available.
   *
   * @generated from enum value: FALLBACK = 2;
   */
  FALLBACK = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.ImportFlowRequest.ImportOption.
 */
export const ImportFlowRequest_ImportOptionSchema: GenEnum<ImportFlowRequest_ImportOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_flow, 12, 0);

/**
 * The flow import strategy used for resource conflict resolution associated
 * with an [ImportFlowRequest][google.cloud.dialogflow.cx.v3.ImportFlowRequest].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.FlowImportStrategy
 */
export type FlowImportStrategy = Message<"google.cloud.dialogflow.cx.v3.FlowImportStrategy"> & {
  /**
   * Optional. Import strategy for resource conflict resolution, applied
   * globally throughout the flow. It will be applied for all display name
   * conflicts in the imported content. If not specified, 'CREATE_NEW' is
   * assumed.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.ImportStrategy global_import_strategy = 1;
   */
  globalImportStrategy: ImportStrategy;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.FlowImportStrategy.
 * Use `create(FlowImportStrategySchema)` to create a new message.
 */
export const FlowImportStrategySchema: GenMessage<FlowImportStrategy> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 13);

/**
 * The response message for
 * [Flows.ImportFlow][google.cloud.dialogflow.cx.v3.Flows.ImportFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ImportFlowResponse
 */
export type ImportFlowResponse = Message<"google.cloud.dialogflow.cx.v3.ImportFlowResponse"> & {
  /**
   * The unique identifier of the new flow.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>`.
   *
   * @generated from field: string flow = 1;
   */
  flow: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ImportFlowResponse.
 * Use `create(ImportFlowResponseSchema)` to create a new message.
 */
export const ImportFlowResponseSchema: GenMessage<ImportFlowResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 14);

/**
 * The request message for
 * [Flows.ExportFlow][google.cloud.dialogflow.cx.v3.Flows.ExportFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ExportFlowRequest
 */
export type ExportFlowRequest = Message<"google.cloud.dialogflow.cx.v3.ExportFlowRequest"> & {
  /**
   * Required. The name of the flow to export.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The [Google Cloud
   * Storage](https://cloud.google.com/storage/docs/) URI to export the flow to.
   * The format of this URI must be `gs://<bucket-name>/<object-name>`. If left
   * unspecified, the serialized flow is returned inline.
   *
   * Dialogflow performs a write operation for the Cloud Storage object
   * on the caller's behalf, so your request authentication must
   * have write permissions for the object. For more information, see
   * [Dialogflow access
   * control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
   *
   * @generated from field: string flow_uri = 2;
   */
  flowUri: string;

  /**
   * Optional. Whether to export flows referenced by the specified flow.
   *
   * @generated from field: bool include_referenced_flows = 4;
   */
  includeReferencedFlows: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ExportFlowRequest.
 * Use `create(ExportFlowRequestSchema)` to create a new message.
 */
export const ExportFlowRequestSchema: GenMessage<ExportFlowRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 15);

/**
 * The response message for
 * [Flows.ExportFlow][google.cloud.dialogflow.cx.v3.Flows.ExportFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ExportFlowResponse
 */
export type ExportFlowResponse = Message<"google.cloud.dialogflow.cx.v3.ExportFlowResponse"> & {
  /**
   * The exported flow.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3.ExportFlowResponse.flow
   */
  flow: {
    /**
     * The URI to a file containing the exported flow. This field is populated
     * only if `flow_uri` is specified in
     * [ExportFlowRequest][google.cloud.dialogflow.cx.v3.ExportFlowRequest].
     *
     * @generated from field: string flow_uri = 1;
     */
    value: string;
    case: "flowUri";
  } | {
    /**
     * Uncompressed raw byte content for flow.
     *
     * @generated from field: bytes flow_content = 2;
     */
    value: Uint8Array;
    case: "flowContent";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ExportFlowResponse.
 * Use `create(ExportFlowResponseSchema)` to create a new message.
 */
export const ExportFlowResponseSchema: GenMessage<ExportFlowResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_flow, 16);

/**
 * Service for managing [Flows][google.cloud.dialogflow.cx.v3.Flow].
 *
 * @generated from service google.cloud.dialogflow.cx.v3.Flows
 */
export const Flows: GenService<{
  /**
   * Creates a flow in the specified agent.
   *
   * Note: You should always train a flow prior to sending it queries. See the
   * [training
   * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Flows.CreateFlow
   */
  createFlow: {
    methodKind: "unary";
    input: typeof CreateFlowRequestSchema;
    output: typeof FlowSchema;
  },
  /**
   * Deletes a specified flow.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Flows.DeleteFlow
   */
  deleteFlow: {
    methodKind: "unary";
    input: typeof DeleteFlowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Returns the list of all flows in the specified agent.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Flows.ListFlows
   */
  listFlows: {
    methodKind: "unary";
    input: typeof ListFlowsRequestSchema;
    output: typeof ListFlowsResponseSchema;
  },
  /**
   * Retrieves the specified flow.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Flows.GetFlow
   */
  getFlow: {
    methodKind: "unary";
    input: typeof GetFlowRequestSchema;
    output: typeof FlowSchema;
  },
  /**
   * Updates the specified flow.
   *
   * Note: You should always train a flow prior to sending it queries. See the
   * [training
   * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Flows.UpdateFlow
   */
  updateFlow: {
    methodKind: "unary";
    input: typeof UpdateFlowRequestSchema;
    output: typeof FlowSchema;
  },
  /**
   * Trains the specified flow. Note that only the flow in 'draft' environment
   * is trained.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`: An empty [Struct
   *   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
   * - `response`: An [Empty
   *   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
   *
   * Note: You should always train a flow prior to sending it queries. See the
   * [training
   * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Flows.TrainFlow
   */
  trainFlow: {
    methodKind: "unary";
    input: typeof TrainFlowRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Validates the specified flow and creates or updates validation results.
   * Please call this API after the training is completed to get the complete
   * validation results.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Flows.ValidateFlow
   */
  validateFlow: {
    methodKind: "unary";
    input: typeof ValidateFlowRequestSchema;
    output: typeof FlowValidationResultSchema;
  },
  /**
   * Gets the latest flow validation result. Flow validation is performed
   * when ValidateFlow is called.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Flows.GetFlowValidationResult
   */
  getFlowValidationResult: {
    methodKind: "unary";
    input: typeof GetFlowValidationResultRequestSchema;
    output: typeof FlowValidationResultSchema;
  },
  /**
   * Imports the specified flow to the specified agent from a binary file.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`: An empty [Struct
   *   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
   * - `response`:
   * [ImportFlowResponse][google.cloud.dialogflow.cx.v3.ImportFlowResponse]
   *
   * Note: You should always train a flow prior to sending it queries. See the
   * [training
   * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Flows.ImportFlow
   */
  importFlow: {
    methodKind: "unary";
    input: typeof ImportFlowRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Exports the specified flow to a binary file.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`: An empty [Struct
   *   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
   * - `response`:
   * [ExportFlowResponse][google.cloud.dialogflow.cx.v3.ExportFlowResponse]
   *
   * Note that resources (e.g. intents, entities, webhooks) that the flow
   * references will also be exported.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Flows.ExportFlow
   */
  exportFlow: {
    methodKind: "unary";
    input: typeof ExportFlowRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_cx_v3_flow, 0);

