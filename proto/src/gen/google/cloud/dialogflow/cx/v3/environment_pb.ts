// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/cx/v3/environment.proto (package google.cloud.dialogflow.cx.v3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { TestError } from "./test_case_pb";
import { file_google_cloud_dialogflow_cx_v3_test_case } from "./test_case_pb";
import type { Webhook } from "./webhook_pb";
import { file_google_cloud_dialogflow_cx_v3_webhook } from "./webhook_pb";
import type { OperationSchema } from "../../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/cx/v3/environment.proto.
 */
export const file_google_cloud_dialogflow_cx_v3_environment: GenFile = /*@__PURE__*/
  fileDesc("Ci9nb29nbGUvY2xvdWQvZGlhbG9nZmxvdy9jeC92My9lbnZpcm9ubWVudC5wcm90bxIdZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMirwYKC0Vudmlyb25tZW50EgwKBG5hbWUYASABKAkSGQoMZGlzcGxheV9uYW1lGAIgASgJQgPgQQISEwoLZGVzY3JpcHRpb24YAyABKAkSUQoPdmVyc2lvbl9jb25maWdzGAYgAygLMjguZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRW52aXJvbm1lbnQuVmVyc2lvbkNvbmZpZxI0Cgt1cGRhdGVfdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxJVChF0ZXN0X2Nhc2VzX2NvbmZpZxgHIAEoCzI6Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkVudmlyb25tZW50LlRlc3RDYXNlc0NvbmZpZxJQCg53ZWJob29rX2NvbmZpZxgKIAEoCzI4Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkVudmlyb25tZW50LldlYmhvb2tDb25maWcaSwoNVmVyc2lvbkNvbmZpZxI6Cgd2ZXJzaW9uGAEgASgJQingQQL6QSMKIWRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vVmVyc2lvbhqPAQoPVGVzdENhc2VzQ29uZmlnEjsKCnRlc3RfY2FzZXMYASADKAlCJ/pBJAoiZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9UZXN0Q2FzZRIdChVlbmFibGVfY29udGludW91c19ydW4YAiABKAgSIAoYZW5hYmxlX3ByZWRlcGxveW1lbnRfcnVuGAMgASgIGlIKDVdlYmhvb2tDb25maWcSQQoRd2ViaG9va19vdmVycmlkZXMYASADKAsyJi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5XZWJob29rOn3qQXoKJWRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRW52aXJvbm1lbnQSUXByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9hZ2VudHMve2FnZW50fS9lbnZpcm9ubWVudHMve2Vudmlyb25tZW50fSJ/ChdMaXN0RW52aXJvbm1lbnRzUmVxdWVzdBI9CgZwYXJlbnQYASABKAlCLeBBAvpBJxIlZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9FbnZpcm9ubWVudBIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSJ1ChhMaXN0RW52aXJvbm1lbnRzUmVzcG9uc2USQAoMZW52aXJvbm1lbnRzGAEgAygLMiouZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRW52aXJvbm1lbnQSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIlQKFUdldEVudmlyb25tZW50UmVxdWVzdBI7CgRuYW1lGAEgASgJQi3gQQL6QScKJWRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRW52aXJvbm1lbnQinwEKGENyZWF0ZUVudmlyb25tZW50UmVxdWVzdBI9CgZwYXJlbnQYASABKAlCLeBBAvpBJxIlZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9FbnZpcm9ubWVudBJECgtlbnZpcm9ubWVudBgCIAEoCzIqLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkVudmlyb25tZW50QgPgQQIilgEKGFVwZGF0ZUVudmlyb25tZW50UmVxdWVzdBJECgtlbnZpcm9ubWVudBgBIAEoCzIqLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkVudmlyb25tZW50QgPgQQISNAoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrQgPgQQIiVwoYRGVsZXRlRW52aXJvbm1lbnRSZXF1ZXN0EjsKBG5hbWUYASABKAlCLeBBAvpBJwolZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9FbnZpcm9ubWVudCKFAQofTG9va3VwRW52aXJvbm1lbnRIaXN0b3J5UmVxdWVzdBI7CgRuYW1lGAEgASgJQi3gQQL6QScKJWRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRW52aXJvbm1lbnQSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkifQogTG9va3VwRW52aXJvbm1lbnRIaXN0b3J5UmVzcG9uc2USQAoMZW52aXJvbm1lbnRzGAEgAygLMiouZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRW52aXJvbm1lbnQSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIogEChRDb250aW51b3VzVGVzdFJlc3VsdBIMCgRuYW1lGAEgASgJElgKBnJlc3VsdBgCIAEoDjJILmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkNvbnRpbnVvdXNUZXN0UmVzdWx0LkFnZ3JlZ2F0ZWRUZXN0UmVzdWx0EkgKEXRlc3RfY2FzZV9yZXN1bHRzGAMgAygJQi36QSoKKGRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vVGVzdENhc2VSZXN1bHQSLAoIcnVuX3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIlYKFEFnZ3JlZ2F0ZWRUZXN0UmVzdWx0EiYKIkFHR1JFR0FURURfVEVTVF9SRVNVTFRfVU5TUEVDSUZJRUQQABIKCgZQQVNTRUQQARIKCgZGQUlMRUQQAjq3AepBswEKLmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vQ29udGludW91c1Rlc3RSZXN1bHQSgAFwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vYWdlbnRzL3thZ2VudH0vZW52aXJvbm1lbnRzL3tlbnZpcm9ubWVudH0vY29udGludW91c1Rlc3RSZXN1bHRzL3tjb250aW51b3VzX3Rlc3RfcmVzdWx0fSJeChhSdW5Db250aW51b3VzVGVzdFJlcXVlc3QSQgoLZW52aXJvbm1lbnQYASABKAlCLeBBAvpBJwolZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9FbnZpcm9ubWVudCJwChlSdW5Db250aW51b3VzVGVzdFJlc3BvbnNlElMKFmNvbnRpbnVvdXNfdGVzdF9yZXN1bHQYASABKAsyMy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5Db250aW51b3VzVGVzdFJlc3VsdCJVChlSdW5Db250aW51b3VzVGVzdE1ldGFkYXRhEjgKBmVycm9ycxgBIAMoCzIoLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLlRlc3RFcnJvciKRAQogTGlzdENvbnRpbnVvdXNUZXN0UmVzdWx0c1JlcXVlc3QSRgoGcGFyZW50GAEgASgJQjbgQQL6QTASLmRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vQ29udGludW91c1Rlc3RSZXN1bHQSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkikgEKIUxpc3RDb250aW51b3VzVGVzdFJlc3VsdHNSZXNwb25zZRJUChdjb250aW51b3VzX3Rlc3RfcmVzdWx0cxgBIAMoCzIzLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkNvbnRpbnVvdXNUZXN0UmVzdWx0EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSKYAQoRRGVwbG95Rmxvd1JlcXVlc3QSQgoLZW52aXJvbm1lbnQYASABKAlCLeBBAvpBJwolZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9FbnZpcm9ubWVudBI/CgxmbG93X3ZlcnNpb24YAiABKAlCKeBBAvpBIwohZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9WZXJzaW9uImkKEkRlcGxveUZsb3dSZXNwb25zZRI/CgtlbnZpcm9ubWVudBgBIAEoCzIqLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkVudmlyb25tZW50EhIKCmRlcGxveW1lbnQYAiABKAkiUwoSRGVwbG95Rmxvd01ldGFkYXRhEj0KC3Rlc3RfZXJyb3JzGAEgAygLMiguZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuVGVzdEVycm9yMsQRCgxFbnZpcm9ubWVudHMSzwEKEExpc3RFbnZpcm9ubWVudHMSNi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5MaXN0RW52aXJvbm1lbnRzUmVxdWVzdBo3Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkxpc3RFbnZpcm9ubWVudHNSZXNwb25zZSJK2kEGcGFyZW50gtPkkwI7EjkvdjMve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qfS9lbnZpcm9ubWVudHMSvAEKDkdldEVudmlyb25tZW50EjQuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuR2V0RW52aXJvbm1lbnRSZXF1ZXN0GiouZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuRW52aXJvbm1lbnQiSNpBBG5hbWWC0+STAjsSOS92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Vudmlyb25tZW50cy8qfRL5AQoRQ3JlYXRlRW52aXJvbm1lbnQSNy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5DcmVhdGVFbnZpcm9ubWVudFJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIosBykElCgtFbnZpcm9ubWVudBIWZ29vZ2xlLnByb3RvYnVmLlN0cnVjdNpBEnBhcmVudCxlbnZpcm9ubWVudILT5JMCSDoLZW52aXJvbm1lbnQiOS92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyp9L2Vudmlyb25tZW50cxKKAgoRVXBkYXRlRW52aXJvbm1lbnQSNy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5VcGRhdGVFbnZpcm9ubWVudFJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIpwBykElCgtFbnZpcm9ubWVudBIWZ29vZ2xlLnByb3RvYnVmLlN0cnVjdNpBF2Vudmlyb25tZW50LHVwZGF0ZV9tYXNrgtPkkwJUOgtlbnZpcm9ubWVudDJFL3YzL3tlbnZpcm9ubWVudC5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZW52aXJvbm1lbnRzLyp9Eq4BChFEZWxldGVFbnZpcm9ubWVudBI3Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkRlbGV0ZUVudmlyb25tZW50UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJI2kEEbmFtZYLT5JMCOyo5L3YzL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZW52aXJvbm1lbnRzLyp9Ev4BChhMb29rdXBFbnZpcm9ubWVudEhpc3RvcnkSPi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5Mb29rdXBFbnZpcm9ubWVudEhpc3RvcnlSZXF1ZXN0Gj8uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuTG9va3VwRW52aXJvbm1lbnRIaXN0b3J5UmVzcG9uc2UiYdpBBG5hbWWC0+STAlQSUi92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Vudmlyb25tZW50cy8qfTpsb29rdXBFbnZpcm9ubWVudEhpc3RvcnkShAIKEVJ1bkNvbnRpbnVvdXNUZXN0EjcuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuUnVuQ29udGludW91c1Rlc3RSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKWAcpBNgoZUnVuQ29udGludW91c1Rlc3RSZXNwb25zZRIZUnVuQ29udGludW91c1Rlc3RNZXRhZGF0YYLT5JMCVzoBKiJSL3YzL3tlbnZpcm9ubWVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2Vudmlyb25tZW50cy8qfTpydW5Db250aW51b3VzVGVzdBKCAgoZTGlzdENvbnRpbnVvdXNUZXN0UmVzdWx0cxI/Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkxpc3RDb250aW51b3VzVGVzdFJlc3VsdHNSZXF1ZXN0GkAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuTGlzdENvbnRpbnVvdXNUZXN0UmVzdWx0c1Jlc3BvbnNlImLaQQZwYXJlbnSC0+STAlMSUS92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyovZW52aXJvbm1lbnRzLyp9L2NvbnRpbnVvdXNUZXN0UmVzdWx0cxLhAQoKRGVwbG95RmxvdxIwLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkRlcGxveUZsb3dSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKBAcpBKAoSRGVwbG95Rmxvd1Jlc3BvbnNlEhJEZXBsb3lGbG93TWV0YWRhdGGC0+STAlA6ASoiSy92My97ZW52aXJvbm1lbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9lbnZpcm9ubWVudHMvKn06ZGVwbG95Rmxvdxp4ykEZZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbdJBWWh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9kaWFsb2dmbG93QrYBCiFjb20uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjNCEEVudmlyb25tZW50UHJvdG9QAVoxY2xvdWQuZ29vZ2xlLmNvbS9nby9kaWFsb2dmbG93L2N4L2FwaXYzL2N4cGI7Y3hwYvgBAaICAkRGqgIdR29vZ2xlLkNsb3VkLkRpYWxvZ2Zsb3cuQ3guVjPqAiFHb29nbGU6OkNsb3VkOjpEaWFsb2dmbG93OjpDWDo6VjNiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_cx_v3_test_case, file_google_cloud_dialogflow_cx_v3_webhook, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp]);

/**
 * Represents an environment for an agent. You can create multiple versions
 * of your agent and publish them to separate environments. When you edit an
 * agent, you are editing the draft agent. At any point, you can save the draft
 * agent as an agent version, which is an immutable snapshot of your agent. When
 * you save the draft agent, it is published to the default environment. When
 * you create agent versions, you can publish them to custom environments. You
 * can create a variety of custom environments for testing, development,
 * production, etc.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Environment
 */
export type Environment = Message<"google.cloud.dialogflow.cx.v3.Environment"> & {
  /**
   * The name of the environment.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The human-readable name of the environment (unique in an agent).
   * Limit of 64 characters.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * The human-readable description of the environment. The maximum length is
   * 500 characters. If exceeded, the request is rejected.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * A list of configurations for flow versions. You should include version
   * configs for all flows that are reachable from [`Start
   * Flow`][Agent.start_flow] in the agent. Otherwise, an error will be
   * returned.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Environment.VersionConfig version_configs = 6;
   */
  versionConfigs: Environment_VersionConfig[];

  /**
   * Output only. Update time of this environment.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;

  /**
   * The test cases config for continuous tests of this environment.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Environment.TestCasesConfig test_cases_config = 7;
   */
  testCasesConfig?: Environment_TestCasesConfig;

  /**
   * The webhook configuration for this environment.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Environment.WebhookConfig webhook_config = 10;
   */
  webhookConfig?: Environment_WebhookConfig;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Environment.
 * Use `create(EnvironmentSchema)` to create a new message.
 */
export const EnvironmentSchema: GenMessage<Environment> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 0);

/**
 * Configuration for the version.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Environment.VersionConfig
 */
export type Environment_VersionConfig = Message<"google.cloud.dialogflow.cx.v3.Environment.VersionConfig"> & {
  /**
   * Required. Format: projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/flows/<Flow ID>/versions/<Version ID>.
   *
   * @generated from field: string version = 1;
   */
  version: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Environment.VersionConfig.
 * Use `create(Environment_VersionConfigSchema)` to create a new message.
 */
export const Environment_VersionConfigSchema: GenMessage<Environment_VersionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 0, 0);

/**
 * The configuration for continuous tests.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Environment.TestCasesConfig
 */
export type Environment_TestCasesConfig = Message<"google.cloud.dialogflow.cx.v3.Environment.TestCasesConfig"> & {
  /**
   * A list of test case names to run. They should be under the same agent.
   * Format of each test case name: `projects/<Project ID>/locations/
   * <Location ID>/agents/<AgentID>/testCases/<TestCase ID>`
   *
   * @generated from field: repeated string test_cases = 1;
   */
  testCases: string[];

  /**
   * Whether to run test cases in
   * [TestCasesConfig.test_cases][google.cloud.dialogflow.cx.v3.Environment.TestCasesConfig.test_cases]
   * periodically. Default false. If set to true, run once a day.
   *
   * @generated from field: bool enable_continuous_run = 2;
   */
  enableContinuousRun: boolean;

  /**
   * Whether to run test cases in
   * [TestCasesConfig.test_cases][google.cloud.dialogflow.cx.v3.Environment.TestCasesConfig.test_cases]
   * before deploying a flow version to the environment. Default false.
   *
   * @generated from field: bool enable_predeployment_run = 3;
   */
  enablePredeploymentRun: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Environment.TestCasesConfig.
 * Use `create(Environment_TestCasesConfigSchema)` to create a new message.
 */
export const Environment_TestCasesConfigSchema: GenMessage<Environment_TestCasesConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 0, 1);

/**
 * Configuration for webhooks.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Environment.WebhookConfig
 */
export type Environment_WebhookConfig = Message<"google.cloud.dialogflow.cx.v3.Environment.WebhookConfig"> & {
  /**
   * The list of webhooks to override for the agent environment. The webhook
   * must exist in the agent. You can override fields in
   * [`generic_web_service`][google.cloud.dialogflow.cx.v3.Webhook.generic_web_service]
   * and
   * [`service_directory`][google.cloud.dialogflow.cx.v3.Webhook.service_directory].
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Webhook webhook_overrides = 1;
   */
  webhookOverrides: Webhook[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Environment.WebhookConfig.
 * Use `create(Environment_WebhookConfigSchema)` to create a new message.
 */
export const Environment_WebhookConfigSchema: GenMessage<Environment_WebhookConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 0, 2);

/**
 * The request message for
 * [Environments.ListEnvironments][google.cloud.dialogflow.cx.v3.Environments.ListEnvironments].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListEnvironmentsRequest
 */
export type ListEnvironmentsRequest = Message<"google.cloud.dialogflow.cx.v3.ListEnvironmentsRequest"> & {
  /**
   * Required. The [Agent][google.cloud.dialogflow.cx.v3.Agent] to list all
   * environments for. Format: `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return in a single page. By default 20 and
   * at most 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListEnvironmentsRequest.
 * Use `create(ListEnvironmentsRequestSchema)` to create a new message.
 */
export const ListEnvironmentsRequestSchema: GenMessage<ListEnvironmentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 1);

/**
 * The response message for
 * [Environments.ListEnvironments][google.cloud.dialogflow.cx.v3.Environments.ListEnvironments].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListEnvironmentsResponse
 */
export type ListEnvironmentsResponse = Message<"google.cloud.dialogflow.cx.v3.ListEnvironmentsResponse"> & {
  /**
   * The list of environments. There will be a maximum number of items
   * returned based on the page_size field in the request. The list may in some
   * cases be empty or contain fewer entries than page_size even if this isn't
   * the last page.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Environment environments = 1;
   */
  environments: Environment[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListEnvironmentsResponse.
 * Use `create(ListEnvironmentsResponseSchema)` to create a new message.
 */
export const ListEnvironmentsResponseSchema: GenMessage<ListEnvironmentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 2);

/**
 * The request message for
 * [Environments.GetEnvironment][google.cloud.dialogflow.cx.v3.Environments.GetEnvironment].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.GetEnvironmentRequest
 */
export type GetEnvironmentRequest = Message<"google.cloud.dialogflow.cx.v3.GetEnvironmentRequest"> & {
  /**
   * Required. The name of the
   * [Environment][google.cloud.dialogflow.cx.v3.Environment]. Format:
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.GetEnvironmentRequest.
 * Use `create(GetEnvironmentRequestSchema)` to create a new message.
 */
export const GetEnvironmentRequestSchema: GenMessage<GetEnvironmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 3);

/**
 * The request message for
 * [Environments.CreateEnvironment][google.cloud.dialogflow.cx.v3.Environments.CreateEnvironment].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.CreateEnvironmentRequest
 */
export type CreateEnvironmentRequest = Message<"google.cloud.dialogflow.cx.v3.CreateEnvironmentRequest"> & {
  /**
   * Required. The [Agent][google.cloud.dialogflow.cx.v3.Agent] to create an
   * [Environment][google.cloud.dialogflow.cx.v3.Environment] for. Format:
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The environment to create.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Environment environment = 2;
   */
  environment?: Environment;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.CreateEnvironmentRequest.
 * Use `create(CreateEnvironmentRequestSchema)` to create a new message.
 */
export const CreateEnvironmentRequestSchema: GenMessage<CreateEnvironmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 4);

/**
 * The request message for
 * [Environments.UpdateEnvironment][google.cloud.dialogflow.cx.v3.Environments.UpdateEnvironment].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.UpdateEnvironmentRequest
 */
export type UpdateEnvironmentRequest = Message<"google.cloud.dialogflow.cx.v3.UpdateEnvironmentRequest"> & {
  /**
   * Required. The environment to update.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Environment environment = 1;
   */
  environment?: Environment;

  /**
   * Required. The mask to control which fields get updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.UpdateEnvironmentRequest.
 * Use `create(UpdateEnvironmentRequestSchema)` to create a new message.
 */
export const UpdateEnvironmentRequestSchema: GenMessage<UpdateEnvironmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 5);

/**
 * The request message for
 * [Environments.DeleteEnvironment][google.cloud.dialogflow.cx.v3.Environments.DeleteEnvironment].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.DeleteEnvironmentRequest
 */
export type DeleteEnvironmentRequest = Message<"google.cloud.dialogflow.cx.v3.DeleteEnvironmentRequest"> & {
  /**
   * Required. The name of the
   * [Environment][google.cloud.dialogflow.cx.v3.Environment] to delete. Format:
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.DeleteEnvironmentRequest.
 * Use `create(DeleteEnvironmentRequestSchema)` to create a new message.
 */
export const DeleteEnvironmentRequestSchema: GenMessage<DeleteEnvironmentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 6);

/**
 * The request message for
 * [Environments.LookupEnvironmentHistory][google.cloud.dialogflow.cx.v3.Environments.LookupEnvironmentHistory].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.LookupEnvironmentHistoryRequest
 */
export type LookupEnvironmentHistoryRequest = Message<"google.cloud.dialogflow.cx.v3.LookupEnvironmentHistoryRequest"> & {
  /**
   * Required. Resource name of the environment to look up the history for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The maximum number of items to return in a single page. By default 100 and
   * at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.LookupEnvironmentHistoryRequest.
 * Use `create(LookupEnvironmentHistoryRequestSchema)` to create a new message.
 */
export const LookupEnvironmentHistoryRequestSchema: GenMessage<LookupEnvironmentHistoryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 7);

/**
 * The response message for
 * [Environments.LookupEnvironmentHistory][google.cloud.dialogflow.cx.v3.Environments.LookupEnvironmentHistory].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.LookupEnvironmentHistoryResponse
 */
export type LookupEnvironmentHistoryResponse = Message<"google.cloud.dialogflow.cx.v3.LookupEnvironmentHistoryResponse"> & {
  /**
   * Represents a list of snapshots for an environment. Time of the snapshots is
   * stored in
   * [`update_time`][google.cloud.dialogflow.cx.v3.Environment.update_time].
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Environment environments = 1;
   */
  environments: Environment[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.LookupEnvironmentHistoryResponse.
 * Use `create(LookupEnvironmentHistoryResponseSchema)` to create a new message.
 */
export const LookupEnvironmentHistoryResponseSchema: GenMessage<LookupEnvironmentHistoryResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 8);

/**
 * Represents a result from running a test case in an agent environment.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ContinuousTestResult
 */
export type ContinuousTestResult = Message<"google.cloud.dialogflow.cx.v3.ContinuousTestResult"> & {
  /**
   * The resource name for the continuous test result. Format:
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/environments/<Environment
   * ID>/continuousTestResults/<ContinuousTestResult ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The result of this continuous test run, i.e. whether all the tests in this
   * continuous test run pass or not.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.ContinuousTestResult.AggregatedTestResult result = 2;
   */
  result: ContinuousTestResult_AggregatedTestResult;

  /**
   * A list of individual test case results names in this continuous test run.
   *
   * @generated from field: repeated string test_case_results = 3;
   */
  testCaseResults: string[];

  /**
   * Time when the continuous testing run starts.
   *
   * @generated from field: google.protobuf.Timestamp run_time = 4;
   */
  runTime?: Timestamp;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ContinuousTestResult.
 * Use `create(ContinuousTestResultSchema)` to create a new message.
 */
export const ContinuousTestResultSchema: GenMessage<ContinuousTestResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 9);

/**
 * The overall result for a continuous test run in an agent environment.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.ContinuousTestResult.AggregatedTestResult
 */
export enum ContinuousTestResult_AggregatedTestResult {
  /**
   * Not specified. Should never be used.
   *
   * @generated from enum value: AGGREGATED_TEST_RESULT_UNSPECIFIED = 0;
   */
  AGGREGATED_TEST_RESULT_UNSPECIFIED = 0,

  /**
   * All the tests passed.
   *
   * @generated from enum value: PASSED = 1;
   */
  PASSED = 1,

  /**
   * At least one test did not pass.
   *
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.ContinuousTestResult.AggregatedTestResult.
 */
export const ContinuousTestResult_AggregatedTestResultSchema: GenEnum<ContinuousTestResult_AggregatedTestResult> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_environment, 9, 0);

/**
 * The request message for
 * [Environments.RunContinuousTest][google.cloud.dialogflow.cx.v3.Environments.RunContinuousTest].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.RunContinuousTestRequest
 */
export type RunContinuousTestRequest = Message<"google.cloud.dialogflow.cx.v3.RunContinuousTestRequest"> & {
  /**
   * Required. Format: `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/environments/<Environment ID>`.
   *
   * @generated from field: string environment = 1;
   */
  environment: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.RunContinuousTestRequest.
 * Use `create(RunContinuousTestRequestSchema)` to create a new message.
 */
export const RunContinuousTestRequestSchema: GenMessage<RunContinuousTestRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 10);

/**
 * The response message for
 * [Environments.RunContinuousTest][google.cloud.dialogflow.cx.v3.Environments.RunContinuousTest].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.RunContinuousTestResponse
 */
export type RunContinuousTestResponse = Message<"google.cloud.dialogflow.cx.v3.RunContinuousTestResponse"> & {
  /**
   * The result for a continuous test run.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.ContinuousTestResult continuous_test_result = 1;
   */
  continuousTestResult?: ContinuousTestResult;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.RunContinuousTestResponse.
 * Use `create(RunContinuousTestResponseSchema)` to create a new message.
 */
export const RunContinuousTestResponseSchema: GenMessage<RunContinuousTestResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 11);

/**
 * Metadata returned for the
 * [Environments.RunContinuousTest][google.cloud.dialogflow.cx.v3.Environments.RunContinuousTest]
 * long running operation.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.RunContinuousTestMetadata
 */
export type RunContinuousTestMetadata = Message<"google.cloud.dialogflow.cx.v3.RunContinuousTestMetadata"> & {
  /**
   * The test errors.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.TestError errors = 1;
   */
  errors: TestError[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.RunContinuousTestMetadata.
 * Use `create(RunContinuousTestMetadataSchema)` to create a new message.
 */
export const RunContinuousTestMetadataSchema: GenMessage<RunContinuousTestMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 12);

/**
 * The request message for
 * [Environments.ListContinuousTestResults][google.cloud.dialogflow.cx.v3.Environments.ListContinuousTestResults].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListContinuousTestResultsRequest
 */
export type ListContinuousTestResultsRequest = Message<"google.cloud.dialogflow.cx.v3.ListContinuousTestResultsRequest"> & {
  /**
   * Required. The environment to list results for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/
   * environments/<Environment ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return in a single page. By default 100 and
   * at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListContinuousTestResultsRequest.
 * Use `create(ListContinuousTestResultsRequestSchema)` to create a new message.
 */
export const ListContinuousTestResultsRequestSchema: GenMessage<ListContinuousTestResultsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 13);

/**
 * The response message for [Environments.ListTestCaseResults][].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListContinuousTestResultsResponse
 */
export type ListContinuousTestResultsResponse = Message<"google.cloud.dialogflow.cx.v3.ListContinuousTestResultsResponse"> & {
  /**
   * The list of continuous test results.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.ContinuousTestResult continuous_test_results = 1;
   */
  continuousTestResults: ContinuousTestResult[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListContinuousTestResultsResponse.
 * Use `create(ListContinuousTestResultsResponseSchema)` to create a new message.
 */
export const ListContinuousTestResultsResponseSchema: GenMessage<ListContinuousTestResultsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 14);

/**
 * The request message for
 * [Environments.DeployFlow][google.cloud.dialogflow.cx.v3.Environments.DeployFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.DeployFlowRequest
 */
export type DeployFlowRequest = Message<"google.cloud.dialogflow.cx.v3.DeployFlowRequest"> & {
  /**
   * Required. The environment to deploy the flow to.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/
   * environments/<Environment ID>`.
   *
   * @generated from field: string environment = 1;
   */
  environment: string;

  /**
   * Required. The flow version to deploy.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/
   * flows/<Flow ID>/versions/<Version ID>`.
   *
   * @generated from field: string flow_version = 2;
   */
  flowVersion: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.DeployFlowRequest.
 * Use `create(DeployFlowRequestSchema)` to create a new message.
 */
export const DeployFlowRequestSchema: GenMessage<DeployFlowRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 15);

/**
 * The response message for
 * [Environments.DeployFlow][google.cloud.dialogflow.cx.v3.Environments.DeployFlow].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.DeployFlowResponse
 */
export type DeployFlowResponse = Message<"google.cloud.dialogflow.cx.v3.DeployFlowResponse"> & {
  /**
   * The updated environment where the flow is deployed.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Environment environment = 1;
   */
  environment?: Environment;

  /**
   * The name of the flow version
   * [Deployment][google.cloud.dialogflow.cx.v3.Deployment]. Format:
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/
   * environments/<Environment ID>/deployments/<Deployment ID>`.
   *
   * @generated from field: string deployment = 2;
   */
  deployment: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.DeployFlowResponse.
 * Use `create(DeployFlowResponseSchema)` to create a new message.
 */
export const DeployFlowResponseSchema: GenMessage<DeployFlowResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 16);

/**
 * Metadata returned for the
 * [Environments.DeployFlow][google.cloud.dialogflow.cx.v3.Environments.DeployFlow]
 * long running operation.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.DeployFlowMetadata
 */
export type DeployFlowMetadata = Message<"google.cloud.dialogflow.cx.v3.DeployFlowMetadata"> & {
  /**
   * Errors of running deployment tests.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.TestError test_errors = 1;
   */
  testErrors: TestError[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.DeployFlowMetadata.
 * Use `create(DeployFlowMetadataSchema)` to create a new message.
 */
export const DeployFlowMetadataSchema: GenMessage<DeployFlowMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_environment, 17);

/**
 * Service for managing
 * [Environments][google.cloud.dialogflow.cx.v3.Environment].
 *
 * @generated from service google.cloud.dialogflow.cx.v3.Environments
 */
export const Environments: GenService<{
  /**
   * Returns the list of all environments in the specified
   * [Agent][google.cloud.dialogflow.cx.v3.Agent].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Environments.ListEnvironments
   */
  listEnvironments: {
    methodKind: "unary";
    input: typeof ListEnvironmentsRequestSchema;
    output: typeof ListEnvironmentsResponseSchema;
  },
  /**
   * Retrieves the specified
   * [Environment][google.cloud.dialogflow.cx.v3.Environment].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Environments.GetEnvironment
   */
  getEnvironment: {
    methodKind: "unary";
    input: typeof GetEnvironmentRequestSchema;
    output: typeof EnvironmentSchema;
  },
  /**
   * Creates an [Environment][google.cloud.dialogflow.cx.v3.Environment] in the
   * specified [Agent][google.cloud.dialogflow.cx.v3.Agent].
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`: An empty [Struct
   *   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
   * - `response`: [Environment][google.cloud.dialogflow.cx.v3.Environment]
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Environments.CreateEnvironment
   */
  createEnvironment: {
    methodKind: "unary";
    input: typeof CreateEnvironmentRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the specified
   * [Environment][google.cloud.dialogflow.cx.v3.Environment].
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`: An empty [Struct
   *   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
   * - `response`: [Environment][google.cloud.dialogflow.cx.v3.Environment]
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Environments.UpdateEnvironment
   */
  updateEnvironment: {
    methodKind: "unary";
    input: typeof UpdateEnvironmentRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes the specified
   * [Environment][google.cloud.dialogflow.cx.v3.Environment].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Environments.DeleteEnvironment
   */
  deleteEnvironment: {
    methodKind: "unary";
    input: typeof DeleteEnvironmentRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Looks up the history of the specified
   * [Environment][google.cloud.dialogflow.cx.v3.Environment].
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Environments.LookupEnvironmentHistory
   */
  lookupEnvironmentHistory: {
    methodKind: "unary";
    input: typeof LookupEnvironmentHistoryRequestSchema;
    output: typeof LookupEnvironmentHistoryResponseSchema;
  },
  /**
   * Kicks off a continuous test under the specified
   * [Environment][google.cloud.dialogflow.cx.v3.Environment].
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [RunContinuousTestMetadata][google.cloud.dialogflow.cx.v3.RunContinuousTestMetadata]
   * - `response`:
   * [RunContinuousTestResponse][google.cloud.dialogflow.cx.v3.RunContinuousTestResponse]
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Environments.RunContinuousTest
   */
  runContinuousTest: {
    methodKind: "unary";
    input: typeof RunContinuousTestRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Fetches a list of continuous test results for a given environment.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Environments.ListContinuousTestResults
   */
  listContinuousTestResults: {
    methodKind: "unary";
    input: typeof ListContinuousTestResultsRequestSchema;
    output: typeof ListContinuousTestResultsResponseSchema;
  },
  /**
   * Deploys a flow to the specified
   * [Environment][google.cloud.dialogflow.cx.v3.Environment].
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [DeployFlowMetadata][google.cloud.dialogflow.cx.v3.DeployFlowMetadata]
   * - `response`:
   * [DeployFlowResponse][google.cloud.dialogflow.cx.v3.DeployFlowResponse]
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Environments.DeployFlow
   */
  deployFlow: {
    methodKind: "unary";
    input: typeof DeployFlowRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_cx_v3_environment, 0);

