// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/cx/v3/intent.proto (package google.cloud.dialogflow.cx.v3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { InlineDestination, InlineSource } from "./inline_pb";
import { file_google_cloud_dialogflow_cx_v3_inline } from "./inline_pb";
import type { OperationSchema } from "../../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/cx/v3/intent.proto.
 */
export const file_google_cloud_dialogflow_cx_v3_intent: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy9jeC92My9pbnRlbnQucHJvdG8SHWdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzIpwGCgZJbnRlbnQSDAoEbmFtZRgBIAEoCRIZCgxkaXNwbGF5X25hbWUYAiABKAlCA+BBAhJOChB0cmFpbmluZ19waHJhc2VzGAMgAygLMjQuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuSW50ZW50LlRyYWluaW5nUGhyYXNlEkMKCnBhcmFtZXRlcnMYBCADKAsyLy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5JbnRlbnQuUGFyYW1ldGVyEhAKCHByaW9yaXR5GAUgASgFEhMKC2lzX2ZhbGxiYWNrGAYgASgIEkEKBmxhYmVscxgHIAMoCzIxLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkludGVudC5MYWJlbHNFbnRyeRITCgtkZXNjcmlwdGlvbhgIIAEoCRqyAQoOVHJhaW5pbmdQaHJhc2USCgoCaWQYASABKAkSTQoFcGFydHMYAiADKAsyOS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5JbnRlbnQuVHJhaW5pbmdQaHJhc2UuUGFydEID4EECEhQKDHJlcGVhdF9jb3VudBgDIAEoBRovCgRQYXJ0EhEKBHRleHQYASABKAlCA+BBAhIUCgxwYXJhbWV0ZXJfaWQYAiABKAkagAEKCVBhcmFtZXRlchIPCgJpZBgBIAEoCUID4EECEkEKC2VudGl0eV90eXBlGAIgASgJQizgQQL6QSYKJGRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vRW50aXR5VHlwZRIPCgdpc19saXN0GAMgASgIEg4KBnJlZGFjdBgEIAEoCBotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBOm7qQWsKIGRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vSW50ZW50Ekdwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vYWdlbnRzL3thZ2VudH0vaW50ZW50cy97aW50ZW50fSLMAQoSTGlzdEludGVudHNSZXF1ZXN0EjgKBnBhcmVudBgBIAEoCUIo4EEC+kEiEiBkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0ludGVudBIVCg1sYW5ndWFnZV9jb2RlGAIgASgJEj4KC2ludGVudF92aWV3GAUgASgOMikuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuSW50ZW50VmlldxIRCglwYWdlX3NpemUYAyABKAUSEgoKcGFnZV90b2tlbhgEIAEoCSJmChNMaXN0SW50ZW50c1Jlc3BvbnNlEjYKB2ludGVudHMYASADKAsyJS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5JbnRlbnQSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJImEKEEdldEludGVudFJlcXVlc3QSNgoEbmFtZRgBIAEoCUIo4EEC+kEiCiBkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0ludGVudBIVCg1sYW5ndWFnZV9jb2RlGAIgASgJIqIBChNDcmVhdGVJbnRlbnRSZXF1ZXN0EjgKBnBhcmVudBgBIAEoCUIo4EEC+kEiEiBkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0ludGVudBI6CgZpbnRlbnQYAiABKAsyJS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5JbnRlbnRCA+BBAhIVCg1sYW5ndWFnZV9jb2RlGAMgASgJIpkBChNVcGRhdGVJbnRlbnRSZXF1ZXN0EjoKBmludGVudBgBIAEoCzIlLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkludGVudEID4EECEhUKDWxhbmd1YWdlX2NvZGUYAiABKAkSLwoLdXBkYXRlX21hc2sYAyABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrIk0KE0RlbGV0ZUludGVudFJlcXVlc3QSNgoEbmFtZRgBIAEoCUIo4EEC+kEiCiBkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0ludGVudCKRAwoUSW1wb3J0SW50ZW50c1JlcXVlc3QSOAoGcGFyZW50GAEgASgJQijgQQL6QSISIGRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vSW50ZW50EhUKC2ludGVudHNfdXJpGAIgASgJSAASRgoPaW50ZW50c19jb250ZW50GAMgASgLMisuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuSW5saW5lU291cmNlSAASVQoMbWVyZ2Vfb3B0aW9uGAQgASgOMj8uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuSW1wb3J0SW50ZW50c1JlcXVlc3QuTWVyZ2VPcHRpb24ifgoLTWVyZ2VPcHRpb24SHAoYTUVSR0VfT1BUSU9OX1VOU1BFQ0lGSUVEEAASDgoGUkVKRUNUEAEaAggBEgsKB1JFUExBQ0UQAhIJCgVNRVJHRRADEgoKBlJFTkFNRRAEEhMKD1JFUE9SVF9DT05GTElDVBAFEggKBEtFRVAQBkIJCgdpbnRlbnRzIo0CChVJbXBvcnRJbnRlbnRzUmVzcG9uc2USNgoHaW50ZW50cxgBIAMoCUIl+kEiCiBkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0ludGVudBJoChVjb25mbGljdGluZ19yZXNvdXJjZXMYAiABKAsySS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5JbXBvcnRJbnRlbnRzUmVzcG9uc2UuQ29uZmxpY3RpbmdSZXNvdXJjZXMaUgoUQ29uZmxpY3RpbmdSZXNvdXJjZXMSHAoUaW50ZW50X2Rpc3BsYXlfbmFtZXMYASADKAkSHAoUZW50aXR5X2Rpc3BsYXlfbmFtZXMYAiADKAkiFwoVSW1wb3J0SW50ZW50c01ldGFkYXRhItoCChRFeHBvcnRJbnRlbnRzUmVxdWVzdBI4CgZwYXJlbnQYASABKAlCKOBBAvpBIhIgZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9JbnRlbnQSFAoHaW50ZW50cxgCIAMoCUID4EECEhoKC2ludGVudHNfdXJpGAMgASgJQgPgQQFIABIlChZpbnRlbnRzX2NvbnRlbnRfaW5saW5lGAQgASgIQgPgQQFIABJYCgtkYXRhX2Zvcm1hdBgFIAEoDjI+Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkV4cG9ydEludGVudHNSZXF1ZXN0LkRhdGFGb3JtYXRCA+BBASJGCgpEYXRhRm9ybWF0EhsKF0RBVEFfRk9STUFUX1VOU1BFQ0lGSUVEEAASCAoEQkxPQhABEggKBEpTT04QAhIHCgNDU1YQA0INCgtkZXN0aW5hdGlvbiKGAQoVRXhwb3J0SW50ZW50c1Jlc3BvbnNlEhUKC2ludGVudHNfdXJpGAEgASgJSAASSwoPaW50ZW50c19jb250ZW50GAIgASgLMjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuSW5saW5lRGVzdGluYXRpb25IAEIJCgdpbnRlbnRzIhcKFUV4cG9ydEludGVudHNNZXRhZGF0YSpYCgpJbnRlbnRWaWV3EhsKF0lOVEVOVF9WSUVXX1VOU1BFQ0lGSUVEEAASFwoTSU5URU5UX1ZJRVdfUEFSVElBTBABEhQKEElOVEVOVF9WSUVXX0ZVTEwQAjLcCwoHSW50ZW50cxK7AQoLTGlzdEludGVudHMSMS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5MaXN0SW50ZW50c1JlcXVlc3QaMi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5MaXN0SW50ZW50c1Jlc3BvbnNlIkXaQQZwYXJlbnSC0+STAjYSNC92My97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnRzLyp9L2ludGVudHMSqAEKCUdldEludGVudBIvLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkdldEludGVudFJlcXVlc3QaJS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5JbnRlbnQiQ9pBBG5hbWWC0+STAjYSNC92My97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qL2ludGVudHMvKn0SvwEKDENyZWF0ZUludGVudBIyLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkNyZWF0ZUludGVudFJlcXVlc3QaJS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5JbnRlbnQiVNpBDXBhcmVudCxpbnRlbnSC0+STAj46BmludGVudCI0L3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKn0vaW50ZW50cxLLAQoMVXBkYXRlSW50ZW50EjIuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuVXBkYXRlSW50ZW50UmVxdWVzdBolLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkludGVudCJg2kESaW50ZW50LHVwZGF0ZV9tYXNrgtPkkwJFOgZpbnRlbnQyOy92My97aW50ZW50Lm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9pbnRlbnRzLyp9Ep8BCgxEZWxldGVJbnRlbnQSMi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy5jeC52My5EZWxldGVJbnRlbnRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IkPaQQRuYW1lgtPkkwI2KjQvdjMve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKi9pbnRlbnRzLyp9EtwBCg1JbXBvcnRJbnRlbnRzEjMuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cuY3gudjMuSW1wb3J0SW50ZW50c1JlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uInfKQS4KFUltcG9ydEludGVudHNSZXNwb25zZRIVSW1wb3J0SW50ZW50c01ldGFkYXRhgtPkkwJAOgEqIjsvdjMve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50cy8qfS9pbnRlbnRzOmltcG9ydBLcAQoNRXhwb3J0SW50ZW50cxIzLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzLkV4cG9ydEludGVudHNSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJ3ykEuChVFeHBvcnRJbnRlbnRzUmVzcG9uc2USFUV4cG9ydEludGVudHNNZXRhZGF0YYLT5JMCQDoBKiI7L3YzL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudHMvKn0vaW50ZW50czpleHBvcnQaeMpBGWRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb23SQVlodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvZGlhbG9nZmxvd0KxAQohY29tLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LmN4LnYzQgtJbnRlbnRQcm90b1ABWjFjbG91ZC5nb29nbGUuY29tL2dvL2RpYWxvZ2Zsb3cvY3gvYXBpdjMvY3hwYjtjeHBi+AEBogICREaqAh1Hb29nbGUuQ2xvdWQuRGlhbG9nZmxvdy5DeC5WM+oCIUdvb2dsZTo6Q2xvdWQ6OkRpYWxvZ2Zsb3c6OkNYOjpWM2IGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_cx_v3_inline, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * An intent represents a user's intent to interact with a conversational agent.
 *
 * You can provide information for the Dialogflow API to use to match user input
 * to an intent by adding training phrases (i.e., examples of user input) to
 * your intent.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Intent
 */
export type Intent = Message<"google.cloud.dialogflow.cx.v3.Intent"> & {
  /**
   * The unique identifier of the intent.
   * Required for the
   * [Intents.UpdateIntent][google.cloud.dialogflow.cx.v3.Intents.UpdateIntent]
   * method.
   * [Intents.CreateIntent][google.cloud.dialogflow.cx.v3.Intents.CreateIntent]
   * populates the name automatically.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/intents/<Intent ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The human-readable name of the intent, unique within the agent.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * The collection of training phrases the agent is trained on to identify the
   * intent.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase training_phrases = 3;
   */
  trainingPhrases: Intent_TrainingPhrase[];

  /**
   * The collection of parameters associated with the intent.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Intent.Parameter parameters = 4;
   */
  parameters: Intent_Parameter[];

  /**
   * The priority of this intent. Higher numbers represent higher
   * priorities.
   *
   * - If the supplied value is unspecified or 0, the service
   *   translates the value to 500,000, which corresponds to the
   *   `Normal` priority in the console.
   * - If the supplied value is negative, the intent is ignored
   *   in runtime detect intent requests.
   *
   * @generated from field: int32 priority = 5;
   */
  priority: number;

  /**
   * Indicates whether this is a fallback intent. Currently only default
   * fallback intent is allowed in the agent, which is added upon agent
   * creation.
   * Adding training phrases to fallback intent is useful in the case of
   * requests that are mistakenly matched, since training phrases assigned to
   * fallback intents act as negative examples that triggers no-match event.
   *
   * @generated from field: bool is_fallback = 6;
   */
  isFallback: boolean;

  /**
   * The key/value metadata to label an intent. Labels can contain
   * lowercase letters, digits and the symbols '-' and '_'. International
   * characters are allowed, including letters from unicase alphabets. Keys must
   * start with a letter. Keys and values can be no longer than 63 characters
   * and no more than 128 bytes.
   *
   * Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed
   * Dialogflow defined labels include:
   * * sys-head
   * * sys-contextual
   * The above labels do not require value. "sys-head" means the intent is a
   * head intent. "sys.contextual" means the intent is a contextual intent.
   *
   * @generated from field: map<string, string> labels = 7;
   */
  labels: { [key: string]: string };

  /**
   * Human readable description for better understanding an intent like its
   * scope, content, result etc. Maximum character limit: 140 characters.
   *
   * @generated from field: string description = 8;
   */
  description: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Intent.
 * Use `create(IntentSchema)` to create a new message.
 */
export const IntentSchema: GenMessage<Intent> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 0);

/**
 * Represents an example that the agent is trained on to identify the intent.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase
 */
export type Intent_TrainingPhrase = Message<"google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase"> & {
  /**
   * Output only. The unique identifier of the training phrase.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. The ordered list of training phrase parts.
   * The parts are concatenated in order to form the training phrase.
   *
   * Note: The API does not automatically annotate training phrases like the
   * Dialogflow Console does.
   *
   * Note: Do not forget to include whitespace at part boundaries, so the
   * training phrase is well formatted when the parts are concatenated.
   *
   * If the training phrase does not need to be annotated with parameters,
   * you just need a single part with only the
   * [Part.text][google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase.Part.text]
   * field set.
   *
   * If you want to annotate the training phrase, you must create multiple
   * parts, where the fields of each part are populated in one of two ways:
   *
   * -   `Part.text` is set to a part of the phrase that has no parameters.
   * -   `Part.text` is set to a part of the phrase that you want to annotate,
   *     and the `parameter_id` field is set.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase.Part parts = 2;
   */
  parts: Intent_TrainingPhrase_Part[];

  /**
   * Indicates how many times this example was added to the intent.
   *
   * @generated from field: int32 repeat_count = 3;
   */
  repeatCount: number;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase.
 * Use `create(Intent_TrainingPhraseSchema)` to create a new message.
 */
export const Intent_TrainingPhraseSchema: GenMessage<Intent_TrainingPhrase> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 0, 0);

/**
 * Represents a part of a training phrase.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase.Part
 */
export type Intent_TrainingPhrase_Part = Message<"google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase.Part"> & {
  /**
   * Required. The text for this part.
   *
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * The [parameter][google.cloud.dialogflow.cx.v3.Intent.Parameter] used to
   * annotate this part of the training phrase. This field is required for
   * annotated parts of the training phrase.
   *
   * @generated from field: string parameter_id = 2;
   */
  parameterId: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase.Part.
 * Use `create(Intent_TrainingPhrase_PartSchema)` to create a new message.
 */
export const Intent_TrainingPhrase_PartSchema: GenMessage<Intent_TrainingPhrase_Part> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 0, 0, 0);

/**
 * Represents an intent parameter.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.Intent.Parameter
 */
export type Intent_Parameter = Message<"google.cloud.dialogflow.cx.v3.Intent.Parameter"> & {
  /**
   * Required. The unique identifier of the parameter. This field
   * is used by [training
   * phrases][google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase] to annotate
   * their [parts][google.cloud.dialogflow.cx.v3.Intent.TrainingPhrase.Part].
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. The entity type of the parameter.
   * Format: `projects/-/locations/-/agents/-/entityTypes/<System Entity Type
   * ID>` for system entity types (for example,
   * `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
   * `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/entityTypes/<Entity Type ID>` for developer entity types.
   *
   * @generated from field: string entity_type = 2;
   */
  entityType: string;

  /**
   * Indicates whether the parameter represents a list of values.
   *
   * @generated from field: bool is_list = 3;
   */
  isList: boolean;

  /**
   * Indicates whether the parameter content should be redacted in log. If
   * redaction is enabled, the parameter content will be replaced by parameter
   * name during logging.
   * Note: the parameter content is subject to redaction if either parameter
   * level redaction or [entity type level
   * redaction][google.cloud.dialogflow.cx.v3.EntityType.redact] is enabled.
   *
   * @generated from field: bool redact = 4;
   */
  redact: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.Intent.Parameter.
 * Use `create(Intent_ParameterSchema)` to create a new message.
 */
export const Intent_ParameterSchema: GenMessage<Intent_Parameter> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 0, 1);

/**
 * The request message for
 * [Intents.ListIntents][google.cloud.dialogflow.cx.v3.Intents.ListIntents].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListIntentsRequest
 */
export type ListIntentsRequest = Message<"google.cloud.dialogflow.cx.v3.ListIntentsRequest"> & {
  /**
   * Required. The agent to list all intents for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The language to list intents for. The following fields are language
   * dependent:
   *
   * *   `Intent.training_phrases.parts.text`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;

  /**
   * The resource view to apply to the returned intent.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.IntentView intent_view = 5;
   */
  intentView: IntentView;

  /**
   * The maximum number of items to return in a single page. By default 100 and
   * at most 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListIntentsRequest.
 * Use `create(ListIntentsRequestSchema)` to create a new message.
 */
export const ListIntentsRequestSchema: GenMessage<ListIntentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 1);

/**
 * The response message for
 * [Intents.ListIntents][google.cloud.dialogflow.cx.v3.Intents.ListIntents].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ListIntentsResponse
 */
export type ListIntentsResponse = Message<"google.cloud.dialogflow.cx.v3.ListIntentsResponse"> & {
  /**
   * The list of intents. There will be a maximum number of items returned based
   * on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.cx.v3.Intent intents = 1;
   */
  intents: Intent[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ListIntentsResponse.
 * Use `create(ListIntentsResponseSchema)` to create a new message.
 */
export const ListIntentsResponseSchema: GenMessage<ListIntentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 2);

/**
 * The request message for
 * [Intents.GetIntent][google.cloud.dialogflow.cx.v3.Intents.GetIntent].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.GetIntentRequest
 */
export type GetIntentRequest = Message<"google.cloud.dialogflow.cx.v3.GetIntentRequest"> & {
  /**
   * Required. The name of the intent.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/intents/<Intent ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The language to retrieve the intent for. The following fields are language
   * dependent:
   *
   * *   `Intent.training_phrases.parts.text`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.GetIntentRequest.
 * Use `create(GetIntentRequestSchema)` to create a new message.
 */
export const GetIntentRequestSchema: GenMessage<GetIntentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 3);

/**
 * The request message for
 * [Intents.CreateIntent][google.cloud.dialogflow.cx.v3.Intents.CreateIntent].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.CreateIntentRequest
 */
export type CreateIntentRequest = Message<"google.cloud.dialogflow.cx.v3.CreateIntentRequest"> & {
  /**
   * Required. The agent to create an intent for.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The intent to create.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Intent intent = 2;
   */
  intent?: Intent;

  /**
   * The language of the following fields in `intent`:
   *
   * *   `Intent.training_phrases.parts.text`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 3;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.CreateIntentRequest.
 * Use `create(CreateIntentRequestSchema)` to create a new message.
 */
export const CreateIntentRequestSchema: GenMessage<CreateIntentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 4);

/**
 * The request message for
 * [Intents.UpdateIntent][google.cloud.dialogflow.cx.v3.Intents.UpdateIntent].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.UpdateIntentRequest
 */
export type UpdateIntentRequest = Message<"google.cloud.dialogflow.cx.v3.UpdateIntentRequest"> & {
  /**
   * Required. The intent to update.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.Intent intent = 1;
   */
  intent?: Intent;

  /**
   * The language of the following fields in `intent`:
   *
   * *   `Intent.training_phrases.parts.text`
   *
   * If not specified, the agent's default language is used.
   * [Many
   * languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
   * are supported.
   * Note: languages must be enabled in the agent before they can be used.
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;

  /**
   * The mask to control which fields get updated. If the mask is not present,
   * all fields will be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.UpdateIntentRequest.
 * Use `create(UpdateIntentRequestSchema)` to create a new message.
 */
export const UpdateIntentRequestSchema: GenMessage<UpdateIntentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 5);

/**
 * The request message for
 * [Intents.DeleteIntent][google.cloud.dialogflow.cx.v3.Intents.DeleteIntent].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.DeleteIntentRequest
 */
export type DeleteIntentRequest = Message<"google.cloud.dialogflow.cx.v3.DeleteIntentRequest"> & {
  /**
   * Required. The name of the intent to delete.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/intents/<Intent ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.DeleteIntentRequest.
 * Use `create(DeleteIntentRequestSchema)` to create a new message.
 */
export const DeleteIntentRequestSchema: GenMessage<DeleteIntentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 6);

/**
 * The request message for
 * [Intents.ImportIntents][google.cloud.dialogflow.cx.v3.Intents.ImportIntents].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ImportIntentsRequest
 */
export type ImportIntentsRequest = Message<"google.cloud.dialogflow.cx.v3.ImportIntentsRequest"> & {
  /**
   * Required. The agent to import the intents into.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The intents to import.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3.ImportIntentsRequest.intents
   */
  intents: {
    /**
     * The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI
     * to import intents from. The format of this URI must be
     * `gs://<bucket-name>/<object-name>`.
     *
     * Dialogflow performs a read operation for the Cloud Storage object
     * on the caller's behalf, so your request authentication must
     * have read permissions for the object. For more information, see
     * [Dialogflow access
     * control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
     *
     * @generated from field: string intents_uri = 2;
     */
    value: string;
    case: "intentsUri";
  } | {
    /**
     * Uncompressed byte content of intents.
     *
     * @generated from field: google.cloud.dialogflow.cx.v3.InlineSource intents_content = 3;
     */
    value: InlineSource;
    case: "intentsContent";
  } | { case: undefined; value?: undefined };

  /**
   * Merge option for importing intents. If not specified, `REJECT` is assumed.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.ImportIntentsRequest.MergeOption merge_option = 4;
   */
  mergeOption: ImportIntentsRequest_MergeOption;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ImportIntentsRequest.
 * Use `create(ImportIntentsRequestSchema)` to create a new message.
 */
export const ImportIntentsRequestSchema: GenMessage<ImportIntentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 7);

/**
 * Merge option when display name conflicts exist during import.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.ImportIntentsRequest.MergeOption
 */
export enum ImportIntentsRequest_MergeOption {
  /**
   * Unspecified. Should not be used.
   *
   * @generated from enum value: MERGE_OPTION_UNSPECIFIED = 0;
   */
  MERGE_OPTION_UNSPECIFIED = 0,

  /**
   * DEPRECATED: Please use
   * [REPORT_CONFLICT][ImportIntentsRequest.REPORT_CONFLICT] instead.
   * Fail the request if there are intents whose display names conflict with
   * the display names of intents in the agent.
   *
   * @generated from enum value: REJECT = 1 [deprecated = true];
   * @deprecated
   */
  REJECT = 1,

  /**
   * Replace the original intent in the agent with the new intent when display
   * name conflicts exist.
   *
   * @generated from enum value: REPLACE = 2;
   */
  REPLACE = 2,

  /**
   * Merge the original intent with the new intent when display name conflicts
   * exist.
   *
   * @generated from enum value: MERGE = 3;
   */
  MERGE = 3,

  /**
   * Create new intents with new display names to differentiate them from the
   * existing intents when display name conflicts exist.
   *
   * @generated from enum value: RENAME = 4;
   */
  RENAME = 4,

  /**
   * Report conflict information if display names conflict is detected.
   * Otherwise, import intents.
   *
   * @generated from enum value: REPORT_CONFLICT = 5;
   */
  REPORT_CONFLICT = 5,

  /**
   * Keep the original intent and discard the conflicting new intent when
   * display name conflicts exist.
   *
   * @generated from enum value: KEEP = 6;
   */
  KEEP = 6,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.ImportIntentsRequest.MergeOption.
 */
export const ImportIntentsRequest_MergeOptionSchema: GenEnum<ImportIntentsRequest_MergeOption> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_intent, 7, 0);

/**
 * The response message for
 * [Intents.ImportIntents][google.cloud.dialogflow.cx.v3.Intents.ImportIntents].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ImportIntentsResponse
 */
export type ImportIntentsResponse = Message<"google.cloud.dialogflow.cx.v3.ImportIntentsResponse"> & {
  /**
   * The unique identifier of the imported intents.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/intents/<Intent ID>`.
   *
   * @generated from field: repeated string intents = 1;
   */
  intents: string[];

  /**
   * Info which resources have conflicts when
   * [REPORT_CONFLICT][ImportIntentsResponse.REPORT_CONFLICT] merge_option is
   * set in ImportIntentsRequest.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.ImportIntentsResponse.ConflictingResources conflicting_resources = 2;
   */
  conflictingResources?: ImportIntentsResponse_ConflictingResources;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ImportIntentsResponse.
 * Use `create(ImportIntentsResponseSchema)` to create a new message.
 */
export const ImportIntentsResponseSchema: GenMessage<ImportIntentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 8);

/**
 * Conflicting resources detected during the import process. Only filled when
 * [REPORT_CONFLICT][ImportIntentsResponse.REPORT_CONFLICT] is set in the
 * request and there are conflicts in the display names.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ImportIntentsResponse.ConflictingResources
 */
export type ImportIntentsResponse_ConflictingResources = Message<"google.cloud.dialogflow.cx.v3.ImportIntentsResponse.ConflictingResources"> & {
  /**
   * Display names of conflicting intents.
   *
   * @generated from field: repeated string intent_display_names = 1;
   */
  intentDisplayNames: string[];

  /**
   * Display names of conflicting entities.
   *
   * @generated from field: repeated string entity_display_names = 2;
   */
  entityDisplayNames: string[];
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ImportIntentsResponse.ConflictingResources.
 * Use `create(ImportIntentsResponse_ConflictingResourcesSchema)` to create a new message.
 */
export const ImportIntentsResponse_ConflictingResourcesSchema: GenMessage<ImportIntentsResponse_ConflictingResources> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 8, 0);

/**
 * Metadata returned for the
 * [Intents.ImportIntents][google.cloud.dialogflow.cx.v3.Intents.ImportIntents]
 * long running operation.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ImportIntentsMetadata
 */
export type ImportIntentsMetadata = Message<"google.cloud.dialogflow.cx.v3.ImportIntentsMetadata"> & {
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ImportIntentsMetadata.
 * Use `create(ImportIntentsMetadataSchema)` to create a new message.
 */
export const ImportIntentsMetadataSchema: GenMessage<ImportIntentsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 9);

/**
 * The request message for
 * [Intents.ExportIntents][google.cloud.dialogflow.cx.v3.Intents.ExportIntents].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ExportIntentsRequest
 */
export type ExportIntentsRequest = Message<"google.cloud.dialogflow.cx.v3.ExportIntentsRequest"> & {
  /**
   * Required. The name of the parent agent to export intents.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The name of the intents to export.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/intents/<Intent ID>`.
   *
   * @generated from field: repeated string intents = 2;
   */
  intents: string[];

  /**
   * The destination to export.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3.ExportIntentsRequest.destination
   */
  destination: {
    /**
     * Optional. The [Google Cloud
     * Storage](https://cloud.google.com/storage/docs/) URI to export the
     * intents to. The format of this URI must be
     * `gs://<bucket-name>/<object-name>`.
     *
     * Dialogflow performs a write operation for the Cloud Storage object
     * on the caller's behalf, so your request authentication must
     * have write permissions for the object. For more information, see
     * [Dialogflow access
     * control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
     *
     * @generated from field: string intents_uri = 3;
     */
    value: string;
    case: "intentsUri";
  } | {
    /**
     * Optional. The option to return the serialized intents inline.
     *
     * @generated from field: bool intents_content_inline = 4;
     */
    value: boolean;
    case: "intentsContentInline";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. The data format of the exported intents. If not specified, `BLOB`
   * is assumed.
   *
   * @generated from field: google.cloud.dialogflow.cx.v3.ExportIntentsRequest.DataFormat data_format = 5;
   */
  dataFormat: ExportIntentsRequest_DataFormat;
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ExportIntentsRequest.
 * Use `create(ExportIntentsRequestSchema)` to create a new message.
 */
export const ExportIntentsRequestSchema: GenMessage<ExportIntentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 10);

/**
 * Data format of the exported intents.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.ExportIntentsRequest.DataFormat
 */
export enum ExportIntentsRequest_DataFormat {
  /**
   * Unspecified format. Treated as `BLOB`.
   *
   * @generated from enum value: DATA_FORMAT_UNSPECIFIED = 0;
   */
  DATA_FORMAT_UNSPECIFIED = 0,

  /**
   * Intents will be exported as raw bytes.
   *
   * @generated from enum value: BLOB = 1;
   */
  BLOB = 1,

  /**
   * Intents will be exported in JSON format.
   *
   * @generated from enum value: JSON = 2;
   */
  JSON = 2,

  /**
   * Intents will be exported in CSV format.
   *
   * @generated from enum value: CSV = 3;
   */
  CSV = 3,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.ExportIntentsRequest.DataFormat.
 */
export const ExportIntentsRequest_DataFormatSchema: GenEnum<ExportIntentsRequest_DataFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_intent, 10, 0);

/**
 * The response message for
 * [Intents.ExportIntents][google.cloud.dialogflow.cx.v3.Intents.ExportIntents].
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ExportIntentsResponse
 */
export type ExportIntentsResponse = Message<"google.cloud.dialogflow.cx.v3.ExportIntentsResponse"> & {
  /**
   * The exported intents.
   *
   * @generated from oneof google.cloud.dialogflow.cx.v3.ExportIntentsResponse.intents
   */
  intents: {
    /**
     * The URI to a file containing the exported intents. This field is
     * populated only if `intents_uri` is specified in
     * [ExportIntentsRequest][google.cloud.dialogflow.cx.v3.ExportIntentsRequest].
     *
     * @generated from field: string intents_uri = 1;
     */
    value: string;
    case: "intentsUri";
  } | {
    /**
     * Uncompressed byte content for intents. This field is populated only if
     * `intents_content_inline` is set to true in
     * [ExportIntentsRequest][google.cloud.dialogflow.cx.v3.ExportIntentsRequest].
     *
     * @generated from field: google.cloud.dialogflow.cx.v3.InlineDestination intents_content = 2;
     */
    value: InlineDestination;
    case: "intentsContent";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ExportIntentsResponse.
 * Use `create(ExportIntentsResponseSchema)` to create a new message.
 */
export const ExportIntentsResponseSchema: GenMessage<ExportIntentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 11);

/**
 * Metadata returned for the
 * [Intents.ExportIntents][google.cloud.dialogflow.cx.v3.Intents.ExportIntents]
 * long running operation.
 *
 * @generated from message google.cloud.dialogflow.cx.v3.ExportIntentsMetadata
 */
export type ExportIntentsMetadata = Message<"google.cloud.dialogflow.cx.v3.ExportIntentsMetadata"> & {
};

/**
 * Describes the message google.cloud.dialogflow.cx.v3.ExportIntentsMetadata.
 * Use `create(ExportIntentsMetadataSchema)` to create a new message.
 */
export const ExportIntentsMetadataSchema: GenMessage<ExportIntentsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_cx_v3_intent, 12);

/**
 * Represents the options for views of an intent.
 * An intent can be a sizable object. Therefore, we provide a resource view that
 * does not return training phrases in the response.
 *
 * @generated from enum google.cloud.dialogflow.cx.v3.IntentView
 */
export enum IntentView {
  /**
   * Not specified. Treated as INTENT_VIEW_FULL.
   *
   * @generated from enum value: INTENT_VIEW_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Training phrases field is not populated in the response.
   *
   * @generated from enum value: INTENT_VIEW_PARTIAL = 1;
   */
  PARTIAL = 1,

  /**
   * All fields are populated.
   *
   * @generated from enum value: INTENT_VIEW_FULL = 2;
   */
  FULL = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.cx.v3.IntentView.
 */
export const IntentViewSchema: GenEnum<IntentView> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_cx_v3_intent, 0);

/**
 * Service for managing [Intents][google.cloud.dialogflow.cx.v3.Intent].
 *
 * @generated from service google.cloud.dialogflow.cx.v3.Intents
 */
export const Intents: GenService<{
  /**
   * Returns the list of all intents in the specified agent.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Intents.ListIntents
   */
  listIntents: {
    methodKind: "unary";
    input: typeof ListIntentsRequestSchema;
    output: typeof ListIntentsResponseSchema;
  },
  /**
   * Retrieves the specified intent.
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Intents.GetIntent
   */
  getIntent: {
    methodKind: "unary";
    input: typeof GetIntentRequestSchema;
    output: typeof IntentSchema;
  },
  /**
   * Creates an intent in the specified agent.
   *
   * Note: You should always train a flow prior to sending it queries. See the
   * [training
   * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Intents.CreateIntent
   */
  createIntent: {
    methodKind: "unary";
    input: typeof CreateIntentRequestSchema;
    output: typeof IntentSchema;
  },
  /**
   * Updates the specified intent.
   *
   * Note: You should always train a flow prior to sending it queries. See the
   * [training
   * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Intents.UpdateIntent
   */
  updateIntent: {
    methodKind: "unary";
    input: typeof UpdateIntentRequestSchema;
    output: typeof IntentSchema;
  },
  /**
   * Deletes the specified intent.
   *
   * Note: You should always train a flow prior to sending it queries. See the
   * [training
   * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Intents.DeleteIntent
   */
  deleteIntent: {
    methodKind: "unary";
    input: typeof DeleteIntentRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Imports the specified intents into the agent.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [ImportIntentsMetadata][google.cloud.dialogflow.cx.v3.ImportIntentsMetadata]
   * - `response`:
   * [ImportIntentsResponse][google.cloud.dialogflow.cx.v3.ImportIntentsResponse]
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Intents.ImportIntents
   */
  importIntents: {
    methodKind: "unary";
    input: typeof ImportIntentsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Exports the selected intents.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [ExportIntentsMetadata][google.cloud.dialogflow.cx.v3.ExportIntentsMetadata]
   * - `response`:
   * [ExportIntentsResponse][google.cloud.dialogflow.cx.v3.ExportIntentsResponse]
   *
   * @generated from rpc google.cloud.dialogflow.cx.v3.Intents.ExportIntents
   */
  exportIntents: {
    methodKind: "unary";
    input: typeof ExportIntentsRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_cx_v3_intent, 0);

