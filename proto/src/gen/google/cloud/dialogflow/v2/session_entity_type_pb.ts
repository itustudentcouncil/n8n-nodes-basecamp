// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/v2/session_entity_type.proto (package google.cloud.dialogflow.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EntityType_Entity } from "./entity_type_pb";
import { file_google_cloud_dialogflow_v2_entity_type } from "./entity_type_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/v2/session_entity_type.proto.
 */
export const file_google_cloud_dialogflow_v2_session_entity_type: GenFile = /*@__PURE__*/
  fileDesc("CjRnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy92Mi9zZXNzaW9uX2VudGl0eV90eXBlLnByb3RvEhpnb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52MiKhBgoRU2Vzc2lvbkVudGl0eVR5cGUSEQoEbmFtZRgBIAEoCUID4EECEmMKFGVudGl0eV9vdmVycmlkZV9tb2RlGAIgASgOMkAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuU2Vzc2lvbkVudGl0eVR5cGUuRW50aXR5T3ZlcnJpZGVNb2RlQgPgQQISRAoIZW50aXRpZXMYAyADKAsyLS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5FbnRpdHlUeXBlLkVudGl0eUID4EECIoIBChJFbnRpdHlPdmVycmlkZU1vZGUSJAogRU5USVRZX09WRVJSSURFX01PREVfVU5TUEVDSUZJRUQQABIhCh1FTlRJVFlfT1ZFUlJJREVfTU9ERV9PVkVSUklERRABEiMKH0VOVElUWV9PVkVSUklERV9NT0RFX1NVUFBMRU1FTlQQAjrIA+pBxAMKK2RpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vU2Vzc2lvbkVudGl0eVR5cGUSRXByb2plY3RzL3twcm9qZWN0fS9hZ2VudC9zZXNzaW9ucy97c2Vzc2lvbn0vZW50aXR5VHlwZXMve2VudGl0eV90eXBlfRJtcHJvamVjdHMve3Byb2plY3R9L2FnZW50L2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnR9L3VzZXJzL3t1c2VyfS9zZXNzaW9ucy97c2Vzc2lvbn0vZW50aXR5VHlwZXMve2VudGl0eV90eXBlfRJacHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2FnZW50L3Nlc3Npb25zL3tzZXNzaW9ufS9lbnRpdHlUeXBlcy97ZW50aXR5X3R5cGV9EoIBcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2FnZW50L2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnR9L3VzZXJzL3t1c2VyfS9zZXNzaW9ucy97c2Vzc2lvbn0vZW50aXR5VHlwZXMve2VudGl0eV90eXBlfSKVAQodTGlzdFNlc3Npb25FbnRpdHlUeXBlc1JlcXVlc3QSQwoGcGFyZW50GAEgASgJQjPgQQL6QS0SK2RpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vU2Vzc2lvbkVudGl0eVR5cGUSFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBIoYBCh5MaXN0U2Vzc2lvbkVudGl0eVR5cGVzUmVzcG9uc2USSwoUc2Vzc2lvbl9lbnRpdHlfdHlwZXMYASADKAsyLS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5TZXNzaW9uRW50aXR5VHlwZRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiYAobR2V0U2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0EkEKBG5hbWUYASABKAlCM+BBAvpBLQorZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9TZXNzaW9uRW50aXR5VHlwZSK2AQoeQ3JlYXRlU2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0EkMKBnBhcmVudBgBIAEoCUIz4EEC+kEtEitkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1Nlc3Npb25FbnRpdHlUeXBlEk8KE3Nlc3Npb25fZW50aXR5X3R5cGUYAiABKAsyLS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5TZXNzaW9uRW50aXR5VHlwZUID4EECIqcBCh5VcGRhdGVTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QSTwoTc2Vzc2lvbl9lbnRpdHlfdHlwZRgBIAEoCzItLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyLlNlc3Npb25FbnRpdHlUeXBlQgPgQQISNAoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrQgPgQQEiYwoeRGVsZXRlU2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0EkEKBG5hbWUYASABKAlCM+BBAvpBLQorZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9TZXNzaW9uRW50aXR5VHlwZTLqFAoSU2Vzc2lvbkVudGl0eVR5cGVzEsYDChZMaXN0U2Vzc2lvbkVudGl0eVR5cGVzEjkuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuTGlzdFNlc3Npb25FbnRpdHlUeXBlc1JlcXVlc3QaOi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5MaXN0U2Vzc2lvbkVudGl0eVR5cGVzUmVzcG9uc2UitALaQQZwYXJlbnSC0+STAqQCWk0SSy92Mi97cGFyZW50PXByb2plY3RzLyovYWdlbnQvZW52aXJvbm1lbnRzLyovdXNlcnMvKi9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlc1pCEkAvdjIve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L3Nlc3Npb25zLyp9L2VudGl0eVR5cGVzWlkSVy92Mi97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnQvZW52aXJvbm1lbnRzLyovdXNlcnMvKi9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlcxI0L3YyL3twYXJlbnQ9cHJvamVjdHMvKi9hZ2VudC9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlcxKzAwoUR2V0U2Vzc2lvbkVudGl0eVR5cGUSNy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5HZXRTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QaLS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5TZXNzaW9uRW50aXR5VHlwZSKyAtpBBG5hbWWC0+STAqQCWk0SSy92Mi97bmFtZT1wcm9qZWN0cy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfVpCEkAvdjIve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9zZXNzaW9ucy8qL2VudGl0eVR5cGVzLyp9WlkSVy92Mi97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfRI0L3YyL3tuYW1lPXByb2plY3RzLyovYWdlbnQvc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfRKjBAoXQ3JlYXRlU2Vzc2lvbkVudGl0eVR5cGUSOi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5DcmVhdGVTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QaLS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5TZXNzaW9uRW50aXR5VHlwZSKcA9pBGnBhcmVudCxzZXNzaW9uX2VudGl0eV90eXBlgtPkkwL4AjoTc2Vzc2lvbl9lbnRpdHlfdHlwZVpiOhNzZXNzaW9uX2VudGl0eV90eXBlIksvdjIve3BhcmVudD1wcm9qZWN0cy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKn0vZW50aXR5VHlwZXNaVzoTc2Vzc2lvbl9lbnRpdHlfdHlwZSJAL3YyL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlc1puOhNzZXNzaW9uX2VudGl0eV90eXBlIlcvdjIve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKn0vZW50aXR5VHlwZXMiNC92Mi97cGFyZW50PXByb2plY3RzLyovYWdlbnQvc2Vzc2lvbnMvKn0vZW50aXR5VHlwZXMSjwUKF1VwZGF0ZVNlc3Npb25FbnRpdHlUeXBlEjouZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuVXBkYXRlU2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0Gi0uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuU2Vzc2lvbkVudGl0eVR5cGUiiATaQRNzZXNzaW9uX2VudGl0eV90eXBl2kEfc2Vzc2lvbl9lbnRpdHlfdHlwZSx1cGRhdGVfbWFza4LT5JMCyQM6E3Nlc3Npb25fZW50aXR5X3R5cGVadjoTc2Vzc2lvbl9lbnRpdHlfdHlwZTJfL3YyL3tzZXNzaW9uX2VudGl0eV90eXBlLm5hbWU9cHJvamVjdHMvKi9hZ2VudC9lbnZpcm9ubWVudHMvKi91c2Vycy8qL3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn1aazoTc2Vzc2lvbl9lbnRpdHlfdHlwZTJUL3YyL3tzZXNzaW9uX2VudGl0eV90eXBlLm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9zZXNzaW9ucy8qL2VudGl0eVR5cGVzLyp9WoIBOhNzZXNzaW9uX2VudGl0eV90eXBlMmsvdjIve3Nlc3Npb25fZW50aXR5X3R5cGUubmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfTJIL3YyL3tzZXNzaW9uX2VudGl0eV90eXBlLm5hbWU9cHJvamVjdHMvKi9hZ2VudC9zZXNzaW9ucy8qL2VudGl0eVR5cGVzLyp9EqIDChdEZWxldGVTZXNzaW9uRW50aXR5VHlwZRI6Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyLkRlbGV0ZVNlc3Npb25FbnRpdHlUeXBlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSKyAtpBBG5hbWWC0+STAqQCWk0qSy92Mi97bmFtZT1wcm9qZWN0cy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfVpCKkAvdjIve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9zZXNzaW9ucy8qL2VudGl0eVR5cGVzLyp9WlkqVy92Mi97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfSo0L3YyL3tuYW1lPXByb2plY3RzLyovYWdlbnQvc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfRp4ykEZZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbdJBWWh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9kaWFsb2dmbG93Qp8BCh5jb20uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJCFlNlc3Npb25FbnRpdHlUeXBlUHJvdG9QAVo+Y2xvdWQuZ29vZ2xlLmNvbS9nby9kaWFsb2dmbG93L2FwaXYyL2RpYWxvZ2Zsb3dwYjtkaWFsb2dmbG93cGL4AQGiAgJERqoCGkdvb2dsZS5DbG91ZC5EaWFsb2dmbG93LlYyYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_v2_entity_type, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * A session represents a conversation between a Dialogflow agent and an
 * end-user. You can create special entities, called session entities, during a
 * session. Session entities can extend or replace custom entity types and only
 * exist during the session that they were created for. All session data,
 * including session entities, is stored by Dialogflow for 20 minutes.
 *
 * For more information, see the [session entity
 * guide](https://cloud.google.com/dialogflow/docs/entities-session).
 *
 * @generated from message google.cloud.dialogflow.v2.SessionEntityType
 */
export type SessionEntityType = Message<"google.cloud.dialogflow.v2.SessionEntityType"> & {
  /**
   * Required. The unique identifier of this session entity type. Format:
   * `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
   * Display Name>`, or `projects/<Project ID>/agent/environments/<Environment
   * ID>/users/<User ID>/sessions/<Session ID>/entityTypes/<Entity Type Display
   * Name>`.
   * If `Environment ID` is not specified, we assume default 'draft'
   * environment. If `User ID` is not specified, we assume default '-' user.
   *
   * `<Entity Type Display Name>` must be the display name of an existing entity
   * type in the same agent that will be overridden or supplemented.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Indicates whether the additional data should override or
   * supplement the custom entity type definition.
   *
   * @generated from field: google.cloud.dialogflow.v2.SessionEntityType.EntityOverrideMode entity_override_mode = 2;
   */
  entityOverrideMode: SessionEntityType_EntityOverrideMode;

  /**
   * Required. The collection of entities associated with this session entity
   * type.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2.EntityType.Entity entities = 3;
   */
  entities: EntityType_Entity[];
};

/**
 * Describes the message google.cloud.dialogflow.v2.SessionEntityType.
 * Use `create(SessionEntityTypeSchema)` to create a new message.
 */
export const SessionEntityTypeSchema: GenMessage<SessionEntityType> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_session_entity_type, 0);

/**
 * The types of modifications for a session entity type.
 *
 * @generated from enum google.cloud.dialogflow.v2.SessionEntityType.EntityOverrideMode
 */
export enum SessionEntityType_EntityOverrideMode {
  /**
   * Not specified. This value should be never used.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The collection of session entities overrides the collection of entities
   * in the corresponding custom entity type.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_OVERRIDE = 1;
   */
  OVERRIDE = 1,

  /**
   * The collection of session entities extends the collection of entities in
   * the corresponding custom entity type.
   *
   * Note: Even in this override mode calls to `ListSessionEntityTypes`,
   * `GetSessionEntityType`, `CreateSessionEntityType` and
   * `UpdateSessionEntityType` only return the additional entities added in
   * this session entity type. If you want to get the supplemented list,
   * please call
   * [EntityTypes.GetEntityType][google.cloud.dialogflow.v2.EntityTypes.GetEntityType]
   * on the custom entity type and merge.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_SUPPLEMENT = 2;
   */
  SUPPLEMENT = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.v2.SessionEntityType.EntityOverrideMode.
 */
export const SessionEntityType_EntityOverrideModeSchema: GenEnum<SessionEntityType_EntityOverrideMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2_session_entity_type, 0, 0);

/**
 * The request message for
 * [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.v2.SessionEntityTypes.ListSessionEntityTypes].
 *
 * @generated from message google.cloud.dialogflow.v2.ListSessionEntityTypesRequest
 */
export type ListSessionEntityTypesRequest = Message<"google.cloud.dialogflow.v2.ListSessionEntityTypesRequest"> & {
  /**
   * Required. The session to list all session entity types from.
   * Format: `projects/<Project ID>/agent/sessions/<Session ID>` or
   * `projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/
   * sessions/<Session ID>`.
   * If `Environment ID` is not specified, we assume default 'draft'
   * environment. If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of items to return in a single page. By
   * default 100 and at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.
 * Use `create(ListSessionEntityTypesRequestSchema)` to create a new message.
 */
export const ListSessionEntityTypesRequestSchema: GenMessage<ListSessionEntityTypesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_session_entity_type, 1);

/**
 * The response message for
 * [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.v2.SessionEntityTypes.ListSessionEntityTypes].
 *
 * @generated from message google.cloud.dialogflow.v2.ListSessionEntityTypesResponse
 */
export type ListSessionEntityTypesResponse = Message<"google.cloud.dialogflow.v2.ListSessionEntityTypesResponse"> & {
  /**
   * The list of session entity types. There will be a maximum number of items
   * returned based on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2.SessionEntityType session_entity_types = 1;
   */
  sessionEntityTypes: SessionEntityType[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.
 * Use `create(ListSessionEntityTypesResponseSchema)` to create a new message.
 */
export const ListSessionEntityTypesResponseSchema: GenMessage<ListSessionEntityTypesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_session_entity_type, 2);

/**
 * The request message for
 * [SessionEntityTypes.GetSessionEntityType][google.cloud.dialogflow.v2.SessionEntityTypes.GetSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.v2.GetSessionEntityTypeRequest
 */
export type GetSessionEntityTypeRequest = Message<"google.cloud.dialogflow.v2.GetSessionEntityTypeRequest"> & {
  /**
   * Required. The name of the session entity type. Format:
   * `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
   * Display Name>` or `projects/<Project ID>/agent/environments/<Environment
   * ID>/users/<User ID>/sessions/<Session ID>/entityTypes/<Entity Type Display
   * Name>`.
   * If `Environment ID` is not specified, we assume default 'draft'
   * environment. If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2.GetSessionEntityTypeRequest.
 * Use `create(GetSessionEntityTypeRequestSchema)` to create a new message.
 */
export const GetSessionEntityTypeRequestSchema: GenMessage<GetSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_session_entity_type, 3);

/**
 * The request message for
 * [SessionEntityTypes.CreateSessionEntityType][google.cloud.dialogflow.v2.SessionEntityTypes.CreateSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest
 */
export type CreateSessionEntityTypeRequest = Message<"google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest"> & {
  /**
   * Required. The session to create a session entity type for.
   * Format: `projects/<Project ID>/agent/sessions/<Session ID>` or
   * `projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/
   * sessions/<Session ID>`.
   * If `Environment ID` is not specified, we assume default 'draft'
   * environment. If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The session entity type to create.
   *
   * @generated from field: google.cloud.dialogflow.v2.SessionEntityType session_entity_type = 2;
   */
  sessionEntityType?: SessionEntityType;
};

/**
 * Describes the message google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.
 * Use `create(CreateSessionEntityTypeRequestSchema)` to create a new message.
 */
export const CreateSessionEntityTypeRequestSchema: GenMessage<CreateSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_session_entity_type, 4);

/**
 * The request message for
 * [SessionEntityTypes.UpdateSessionEntityType][google.cloud.dialogflow.v2.SessionEntityTypes.UpdateSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest
 */
export type UpdateSessionEntityTypeRequest = Message<"google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest"> & {
  /**
   * Required. The session entity type to update.
   *
   * @generated from field: google.cloud.dialogflow.v2.SessionEntityType session_entity_type = 1;
   */
  sessionEntityType?: SessionEntityType;

  /**
   * Optional. The mask to control which fields get updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.
 * Use `create(UpdateSessionEntityTypeRequestSchema)` to create a new message.
 */
export const UpdateSessionEntityTypeRequestSchema: GenMessage<UpdateSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_session_entity_type, 5);

/**
 * The request message for
 * [SessionEntityTypes.DeleteSessionEntityType][google.cloud.dialogflow.v2.SessionEntityTypes.DeleteSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest
 */
export type DeleteSessionEntityTypeRequest = Message<"google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest"> & {
  /**
   * Required. The name of the entity type to delete. Format:
   * `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
   * Display Name>` or `projects/<Project ID>/agent/environments/<Environment
   * ID>/users/<User ID>/sessions/<Session ID>/entityTypes/<Entity Type Display
   * Name>`.
   * If `Environment ID` is not specified, we assume default 'draft'
   * environment. If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest.
 * Use `create(DeleteSessionEntityTypeRequestSchema)` to create a new message.
 */
export const DeleteSessionEntityTypeRequestSchema: GenMessage<DeleteSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_session_entity_type, 6);

/**
 * Service for managing
 * [SessionEntityTypes][google.cloud.dialogflow.v2.SessionEntityType].
 *
 * @generated from service google.cloud.dialogflow.v2.SessionEntityTypes
 */
export const SessionEntityTypes: GenService<{
  /**
   * Returns the list of all session entity types in the specified session.
   *
   * This method doesn't work with Google Assistant integration.
   * Contact Dialogflow support if you need to use session entities
   * with Google Assistant integration.
   *
   * @generated from rpc google.cloud.dialogflow.v2.SessionEntityTypes.ListSessionEntityTypes
   */
  listSessionEntityTypes: {
    methodKind: "unary";
    input: typeof ListSessionEntityTypesRequestSchema;
    output: typeof ListSessionEntityTypesResponseSchema;
  },
  /**
   * Retrieves the specified session entity type.
   *
   * This method doesn't work with Google Assistant integration.
   * Contact Dialogflow support if you need to use session entities
   * with Google Assistant integration.
   *
   * @generated from rpc google.cloud.dialogflow.v2.SessionEntityTypes.GetSessionEntityType
   */
  getSessionEntityType: {
    methodKind: "unary";
    input: typeof GetSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Creates a session entity type.
   *
   * If the specified session entity type already exists, overrides the session
   * entity type.
   *
   * This method doesn't work with Google Assistant integration.
   * Contact Dialogflow support if you need to use session entities
   * with Google Assistant integration.
   *
   * @generated from rpc google.cloud.dialogflow.v2.SessionEntityTypes.CreateSessionEntityType
   */
  createSessionEntityType: {
    methodKind: "unary";
    input: typeof CreateSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Updates the specified session entity type.
   *
   * This method doesn't work with Google Assistant integration.
   * Contact Dialogflow support if you need to use session entities
   * with Google Assistant integration.
   *
   * @generated from rpc google.cloud.dialogflow.v2.SessionEntityTypes.UpdateSessionEntityType
   */
  updateSessionEntityType: {
    methodKind: "unary";
    input: typeof UpdateSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Deletes the specified session entity type.
   *
   * This method doesn't work with Google Assistant integration.
   * Contact Dialogflow support if you need to use session entities
   * with Google Assistant integration.
   *
   * @generated from rpc google.cloud.dialogflow.v2.SessionEntityTypes.DeleteSessionEntityType
   */
  deleteSessionEntityType: {
    methodKind: "unary";
    input: typeof DeleteSessionEntityTypeRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_v2_session_entity_type, 0);

