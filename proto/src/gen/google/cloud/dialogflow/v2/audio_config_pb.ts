// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/v2/audio_config.proto (package google.cloud.dialogflow.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/v2/audio_config.proto.
 */
export const file_google_cloud_dialogflow_v2_audio_config: GenFile = /*@__PURE__*/
  fileDesc("Ci1nb29nbGUvY2xvdWQvZGlhbG9nZmxvdy92Mi9hdWRpb19jb25maWcucHJvdG8SGmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyIjkKDVNwZWVjaENvbnRleHQSFAoHcGhyYXNlcxgBIAMoCUID4EEBEhIKBWJvb3N0GAIgASgCQgPgQQEikgEKDlNwZWVjaFdvcmRJbmZvEgwKBHdvcmQYAyABKAkSLwoMc3RhcnRfb2Zmc2V0GAEgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEi0KCmVuZF9vZmZzZXQYAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SEgoKY29uZmlkZW5jZRgEIAEoAiL7AwoQSW5wdXRBdWRpb0NvbmZpZxJGCg5hdWRpb19lbmNvZGluZxgBIAEoDjIpLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyLkF1ZGlvRW5jb2RpbmdCA+BBAhIeChFzYW1wbGVfcmF0ZV9oZXJ0ehgCIAEoBUID4EECEhoKDWxhbmd1YWdlX2NvZGUYAyABKAlCA+BBAhIYChBlbmFibGVfd29yZF9pbmZvGA0gASgIEhgKDHBocmFzZV9oaW50cxgEIAMoCUICGAESQgoPc3BlZWNoX2NvbnRleHRzGAsgAygLMikuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuU3BlZWNoQ29udGV4dBINCgVtb2RlbBgHIAEoCRJFCg1tb2RlbF92YXJpYW50GAogASgOMi4uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuU3BlZWNoTW9kZWxWYXJpYW50EhgKEHNpbmdsZV91dHRlcmFuY2UYCCABKAgSKgoiZGlzYWJsZV9ub19zcGVlY2hfcmVjb2duaXplZF9ldmVudBgOIAEoCBIkChxlbmFibGVfYXV0b21hdGljX3B1bmN0dWF0aW9uGBEgASgIEikKIW9wdF9vdXRfY29uZm9ybWVyX21vZGVsX21pZ3JhdGlvbhgaIAEoCCJwChRWb2ljZVNlbGVjdGlvblBhcmFtcxIRCgRuYW1lGAEgASgJQgPgQQESRQoLc3NtbF9nZW5kZXIYAiABKA4yKy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5Tc21sVm9pY2VHZW5kZXJCA+BBASLMAQoWU3ludGhlc2l6ZVNwZWVjaENvbmZpZxIaCg1zcGVha2luZ19yYXRlGAEgASgBQgPgQQESEgoFcGl0Y2gYAiABKAFCA+BBARIbCg52b2x1bWVfZ2Fpbl9kYhgDIAEoAUID4EEBEh8KEmVmZmVjdHNfcHJvZmlsZV9pZBgFIAMoCUID4EEBEkQKBXZvaWNlGAQgASgLMjAuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuVm9pY2VTZWxlY3Rpb25QYXJhbXNCA+BBASLSAQoRT3V0cHV0QXVkaW9Db25maWcSTAoOYXVkaW9fZW5jb2RpbmcYASABKA4yLy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5PdXRwdXRBdWRpb0VuY29kaW5nQgPgQQISGQoRc2FtcGxlX3JhdGVfaGVydHoYAiABKAUSVAoYc3ludGhlc2l6ZV9zcGVlY2hfY29uZmlnGAMgASgLMjIuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuU3ludGhlc2l6ZVNwZWVjaENvbmZpZyJVChNUZWxlcGhvbnlEdG1mRXZlbnRzEj4KC2R0bWZfZXZlbnRzGAEgAygOMikuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuVGVsZXBob255RHRtZiKnAgoSU3BlZWNoVG9UZXh0Q29uZmlnEkwKFHNwZWVjaF9tb2RlbF92YXJpYW50GAEgASgOMi4uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuU3BlZWNoTW9kZWxWYXJpYW50Eg0KBW1vZGVsGAIgASgJEkEKDmF1ZGlvX2VuY29kaW5nGAYgASgOMikuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuQXVkaW9FbmNvZGluZxIZChFzYW1wbGVfcmF0ZV9oZXJ0ehgHIAEoBRIVCg1sYW5ndWFnZV9jb2RlGAggASgJEhgKEGVuYWJsZV93b3JkX2luZm8YCSABKAgSJQoddXNlX3RpbWVvdXRfYmFzZWRfZW5kcG9pbnRpbmcYCyABKAgqlAIKDVRlbGVwaG9ueUR0bWYSHgoaVEVMRVBIT05ZX0RUTUZfVU5TUEVDSUZJRUQQABIMCghEVE1GX09ORRABEgwKCERUTUZfVFdPEAISDgoKRFRNRl9USFJFRRADEg0KCURUTUZfRk9VUhAEEg0KCURUTUZfRklWRRAFEgwKCERUTUZfU0lYEAYSDgoKRFRNRl9TRVZFThAHEg4KCkRUTUZfRUlHSFQQCBINCglEVE1GX05JTkUQCRINCglEVE1GX1pFUk8QChIKCgZEVE1GX0EQCxIKCgZEVE1GX0IQDBIKCgZEVE1GX0MQDRIKCgZEVE1GX0QQDhINCglEVE1GX1NUQVIQDxIOCgpEVE1GX1BPVU5EEBAqlAIKDUF1ZGlvRW5jb2RpbmcSHgoaQVVESU9fRU5DT0RJTkdfVU5TUEVDSUZJRUQQABIcChhBVURJT19FTkNPRElOR19MSU5FQVJfMTYQARIXChNBVURJT19FTkNPRElOR19GTEFDEAISGAoUQVVESU9fRU5DT0RJTkdfTVVMQVcQAxIWChJBVURJT19FTkNPRElOR19BTVIQBBIZChVBVURJT19FTkNPRElOR19BTVJfV0IQBRIbChdBVURJT19FTkNPRElOR19PR0dfT1BVUxAGEikKJUFVRElPX0VOQ09ESU5HX1NQRUVYX1dJVEhfSEVBREVSX0JZVEUQBxIXChNBVURJT19FTkNPRElOR19BTEFXEAgqdgoSU3BlZWNoTW9kZWxWYXJpYW50EiQKIFNQRUVDSF9NT0RFTF9WQVJJQU5UX1VOU1BFQ0lGSUVEEAASFgoSVVNFX0JFU1RfQVZBSUxBQkxFEAESEAoMVVNFX1NUQU5EQVJEEAISEAoMVVNFX0VOSEFOQ0VEEAMqjQEKD1NzbWxWb2ljZUdlbmRlchIhCh1TU01MX1ZPSUNFX0dFTkRFUl9VTlNQRUNJRklFRBAAEhoKFlNTTUxfVk9JQ0VfR0VOREVSX01BTEUQARIcChhTU01MX1ZPSUNFX0dFTkRFUl9GRU1BTEUQAhIdChlTU01MX1ZPSUNFX0dFTkRFUl9ORVVUUkFMEAMqjAIKE091dHB1dEF1ZGlvRW5jb2RpbmcSJQohT1VUUFVUX0FVRElPX0VOQ09ESU5HX1VOU1BFQ0lGSUVEEAASIwofT1VUUFVUX0FVRElPX0VOQ09ESU5HX0xJTkVBUl8xNhABEh0KGU9VVFBVVF9BVURJT19FTkNPRElOR19NUDMQAhIlCiFPVVRQVVRfQVVESU9fRU5DT0RJTkdfTVAzXzY0X0tCUFMQBBIiCh5PVVRQVVRfQVVESU9fRU5DT0RJTkdfT0dHX09QVVMQAxIfChtPVVRQVVRfQVVESU9fRU5DT0RJTkdfTVVMQVcQBRIeChpPVVRQVVRfQVVESU9fRU5DT0RJTkdfQUxBVxAGQtYCCh5jb20uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJCEEF1ZGlvQ29uZmlnUHJvdG9QAVo+Y2xvdWQuZ29vZ2xlLmNvbS9nby9kaWFsb2dmbG93L2FwaXYyL2RpYWxvZ2Zsb3dwYjtkaWFsb2dmbG93cGL4AQGiAgJERqoCGkdvb2dsZS5DbG91ZC5EaWFsb2dmbG93LlYy6kFVChthdXRvbWwuZ29vZ2xlYXBpcy5jb20vTW9kZWwSNnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9tb2RlbHMve21vZGVsfepBYgofc3BlZWNoLmdvb2dsZWFwaXMuY29tL1BocmFzZVNldBI/cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3BocmFzZVNldHMve3BocmFzZV9zZXR9YgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration]);

/**
 * Hints for the speech recognizer to help with recognition in a specific
 * conversation state.
 *
 * @generated from message google.cloud.dialogflow.v2.SpeechContext
 */
export type SpeechContext = Message<"google.cloud.dialogflow.v2.SpeechContext"> & {
  /**
   * Optional. A list of strings containing words and phrases that the speech
   * recognizer should recognize with higher likelihood.
   *
   * This list can be used to:
   *
   * * improve accuracy for words and phrases you expect the user to say,
   *   e.g. typical commands for your Dialogflow agent
   * * add additional words to the speech recognizer vocabulary
   * * ...
   *
   * See the [Cloud Speech
   * documentation](https://cloud.google.com/speech-to-text/quotas) for usage
   * limits.
   *
   * @generated from field: repeated string phrases = 1;
   */
  phrases: string[];

  /**
   * Optional. Boost for this context compared to other contexts:
   *
   * * If the boost is positive, Dialogflow will increase the probability that
   *   the phrases in this context are recognized over similar sounding phrases.
   * * If the boost is unspecified or non-positive, Dialogflow will not apply
   *   any boost.
   *
   * Dialogflow recommends that you use boosts in the range (0, 20] and that you
   * find a value that fits your use case with binary search.
   *
   * @generated from field: float boost = 2;
   */
  boost: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2.SpeechContext.
 * Use `create(SpeechContextSchema)` to create a new message.
 */
export const SpeechContextSchema: GenMessage<SpeechContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_audio_config, 0);

/**
 * Information for a word recognized by the speech recognizer.
 *
 * @generated from message google.cloud.dialogflow.v2.SpeechWordInfo
 */
export type SpeechWordInfo = Message<"google.cloud.dialogflow.v2.SpeechWordInfo"> & {
  /**
   * The word this info is for.
   *
   * @generated from field: string word = 3;
   */
  word: string;

  /**
   * Time offset relative to the beginning of the audio that corresponds to the
   * start of the spoken word. This is an experimental feature and the accuracy
   * of the time offset can vary.
   *
   * @generated from field: google.protobuf.Duration start_offset = 1;
   */
  startOffset?: Duration;

  /**
   * Time offset relative to the beginning of the audio that corresponds to the
   * end of the spoken word. This is an experimental feature and the accuracy of
   * the time offset can vary.
   *
   * @generated from field: google.protobuf.Duration end_offset = 2;
   */
  endOffset?: Duration;

  /**
   * The Speech confidence between 0.0 and 1.0 for this word. A higher number
   * indicates an estimated greater likelihood that the recognized word is
   * correct. The default of 0.0 is a sentinel value indicating that confidence
   * was not set.
   *
   * This field is not guaranteed to be fully stable over time for the same
   * audio input. Users should also not rely on it to always be provided.
   *
   * @generated from field: float confidence = 4;
   */
  confidence: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2.SpeechWordInfo.
 * Use `create(SpeechWordInfoSchema)` to create a new message.
 */
export const SpeechWordInfoSchema: GenMessage<SpeechWordInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_audio_config, 1);

/**
 * Instructs the speech recognizer how to process the audio content.
 *
 * @generated from message google.cloud.dialogflow.v2.InputAudioConfig
 */
export type InputAudioConfig = Message<"google.cloud.dialogflow.v2.InputAudioConfig"> & {
  /**
   * Required. Audio encoding of the audio content to process.
   *
   * @generated from field: google.cloud.dialogflow.v2.AudioEncoding audio_encoding = 1;
   */
  audioEncoding: AudioEncoding;

  /**
   * Required. Sample rate (in Hertz) of the audio content sent in the query.
   * Refer to [Cloud Speech API
   * documentation](https://cloud.google.com/speech-to-text/docs/basics) for
   * more details.
   *
   * @generated from field: int32 sample_rate_hertz = 2;
   */
  sampleRateHertz: number;

  /**
   * Required. The language of the supplied audio. Dialogflow does not do
   * translations. See [Language
   * Support](https://cloud.google.com/dialogflow/docs/reference/language)
   * for a list of the currently supported language codes. Note that queries in
   * the same session do not necessarily need to specify the same language.
   *
   * @generated from field: string language_code = 3;
   */
  languageCode: string;

  /**
   * If `true`, Dialogflow returns
   * [SpeechWordInfo][google.cloud.dialogflow.v2.SpeechWordInfo] in
   * [StreamingRecognitionResult][google.cloud.dialogflow.v2.StreamingRecognitionResult]
   * with information about the recognized speech words, e.g. start and end time
   * offsets. If false or unspecified, Speech doesn't return any word-level
   * information.
   *
   * @generated from field: bool enable_word_info = 13;
   */
  enableWordInfo: boolean;

  /**
   * A list of strings containing words and phrases that the speech
   * recognizer should recognize with higher likelihood.
   *
   * See [the Cloud Speech
   * documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints)
   * for more details.
   *
   * This field is deprecated. Please use [`speech_contexts`]() instead. If you
   * specify both [`phrase_hints`]() and [`speech_contexts`](), Dialogflow will
   * treat the [`phrase_hints`]() as a single additional [`SpeechContext`]().
   *
   * @generated from field: repeated string phrase_hints = 4 [deprecated = true];
   * @deprecated
   */
  phraseHints: string[];

  /**
   * Context information to assist speech recognition.
   *
   * See [the Cloud Speech
   * documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints)
   * for more details.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2.SpeechContext speech_contexts = 11;
   */
  speechContexts: SpeechContext[];

  /**
   * Optional. Which Speech model to select for the given request.
   * For more information, see
   * [Speech models](https://cloud.google.com/dialogflow/es/docs/speech-models).
   *
   * @generated from field: string model = 7;
   */
  model: string;

  /**
   * Which variant of the [Speech
   * model][google.cloud.dialogflow.v2.InputAudioConfig.model] to use.
   *
   * @generated from field: google.cloud.dialogflow.v2.SpeechModelVariant model_variant = 10;
   */
  modelVariant: SpeechModelVariant;

  /**
   * If `false` (default), recognition does not cease until the
   * client closes the stream.
   * If `true`, the recognizer will detect a single spoken utterance in input
   * audio. Recognition ceases when it detects the audio's voice has
   * stopped or paused. In this case, once a detected intent is received, the
   * client should close the stream and start a new request with a new stream as
   * needed.
   * Note: This setting is relevant only for streaming methods.
   * Note: When specified, InputAudioConfig.single_utterance takes precedence
   * over StreamingDetectIntentRequest.single_utterance.
   *
   * @generated from field: bool single_utterance = 8;
   */
  singleUtterance: boolean;

  /**
   * Only used in
   * [Participants.AnalyzeContent][google.cloud.dialogflow.v2.Participants.AnalyzeContent]
   * and
   * [Participants.StreamingAnalyzeContent][google.cloud.dialogflow.v2.Participants.StreamingAnalyzeContent].
   * If `false` and recognition doesn't return any result, trigger
   * `NO_SPEECH_RECOGNIZED` event to Dialogflow agent.
   *
   * @generated from field: bool disable_no_speech_recognized_event = 14;
   */
  disableNoSpeechRecognizedEvent: boolean;

  /**
   * Enable automatic punctuation option at the speech backend.
   *
   * @generated from field: bool enable_automatic_punctuation = 17;
   */
  enableAutomaticPunctuation: boolean;

  /**
   * If `true`, the request will opt out for STT conformer model migration.
   * This field will be deprecated once force migration takes place in June
   * 2024. Please refer to [Dialogflow ES Speech model
   * migration](https://cloud.google.com/dialogflow/es/docs/speech-model-migration).
   *
   * @generated from field: bool opt_out_conformer_model_migration = 26;
   */
  optOutConformerModelMigration: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2.InputAudioConfig.
 * Use `create(InputAudioConfigSchema)` to create a new message.
 */
export const InputAudioConfigSchema: GenMessage<InputAudioConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_audio_config, 2);

/**
 * Description of which voice to use for speech synthesis.
 *
 * @generated from message google.cloud.dialogflow.v2.VoiceSelectionParams
 */
export type VoiceSelectionParams = Message<"google.cloud.dialogflow.v2.VoiceSelectionParams"> & {
  /**
   * Optional. The name of the voice. If not set, the service will choose a
   * voice based on the other parameters such as language_code and
   * [ssml_gender][google.cloud.dialogflow.v2.VoiceSelectionParams.ssml_gender].
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The preferred gender of the voice. If not set, the service will
   * choose a voice based on the other parameters such as language_code and
   * [name][google.cloud.dialogflow.v2.VoiceSelectionParams.name]. Note that
   * this is only a preference, not requirement. If a voice of the appropriate
   * gender is not available, the synthesizer should substitute a voice with a
   * different gender rather than failing the request.
   *
   * @generated from field: google.cloud.dialogflow.v2.SsmlVoiceGender ssml_gender = 2;
   */
  ssmlGender: SsmlVoiceGender;
};

/**
 * Describes the message google.cloud.dialogflow.v2.VoiceSelectionParams.
 * Use `create(VoiceSelectionParamsSchema)` to create a new message.
 */
export const VoiceSelectionParamsSchema: GenMessage<VoiceSelectionParams> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_audio_config, 3);

/**
 * Configuration of how speech should be synthesized.
 *
 * @generated from message google.cloud.dialogflow.v2.SynthesizeSpeechConfig
 */
export type SynthesizeSpeechConfig = Message<"google.cloud.dialogflow.v2.SynthesizeSpeechConfig"> & {
  /**
   * Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal
   * native speed supported by the specific voice. 2.0 is twice as fast, and 0.5
   * is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other
   * values < 0.25 or > 4.0 will return an error.
   *
   * @generated from field: double speaking_rate = 1;
   */
  speakingRate: number;

  /**
   * Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20
   * semitones from the original pitch. -20 means decrease 20 semitones from the
   * original pitch.
   *
   * @generated from field: double pitch = 2;
   */
  pitch: number;

  /**
   * Optional. Volume gain (in dB) of the normal native volume supported by the
   * specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of
   * 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB)
   * will play at approximately half the amplitude of the normal native signal
   * amplitude. A value of +6.0 (dB) will play at approximately twice the
   * amplitude of the normal native signal amplitude. We strongly recommend not
   * to exceed +10 (dB) as there's usually no effective increase in loudness for
   * any value greater than that.
   *
   * @generated from field: double volume_gain_db = 3;
   */
  volumeGainDb: number;

  /**
   * Optional. An identifier which selects 'audio effects' profiles that are
   * applied on (post synthesized) text to speech. Effects are applied on top of
   * each other in the order they are given.
   *
   * @generated from field: repeated string effects_profile_id = 5;
   */
  effectsProfileId: string[];

  /**
   * Optional. The desired voice of the synthesized audio.
   *
   * @generated from field: google.cloud.dialogflow.v2.VoiceSelectionParams voice = 4;
   */
  voice?: VoiceSelectionParams;
};

/**
 * Describes the message google.cloud.dialogflow.v2.SynthesizeSpeechConfig.
 * Use `create(SynthesizeSpeechConfigSchema)` to create a new message.
 */
export const SynthesizeSpeechConfigSchema: GenMessage<SynthesizeSpeechConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_audio_config, 4);

/**
 * Instructs the speech synthesizer on how to generate the output audio content.
 * If this audio config is supplied in a request, it overrides all existing
 * text-to-speech settings applied to the agent.
 *
 * @generated from message google.cloud.dialogflow.v2.OutputAudioConfig
 */
export type OutputAudioConfig = Message<"google.cloud.dialogflow.v2.OutputAudioConfig"> & {
  /**
   * Required. Audio encoding of the synthesized audio content.
   *
   * @generated from field: google.cloud.dialogflow.v2.OutputAudioEncoding audio_encoding = 1;
   */
  audioEncoding: OutputAudioEncoding;

  /**
   * The synthesis sample rate (in hertz) for this audio. If not
   * provided, then the synthesizer will use the default sample rate based on
   * the audio encoding. If this is different from the voice's natural sample
   * rate, then the synthesizer will honor this request by converting to the
   * desired sample rate (which might result in worse audio quality).
   *
   * @generated from field: int32 sample_rate_hertz = 2;
   */
  sampleRateHertz: number;

  /**
   * Configuration of how speech should be synthesized.
   *
   * @generated from field: google.cloud.dialogflow.v2.SynthesizeSpeechConfig synthesize_speech_config = 3;
   */
  synthesizeSpeechConfig?: SynthesizeSpeechConfig;
};

/**
 * Describes the message google.cloud.dialogflow.v2.OutputAudioConfig.
 * Use `create(OutputAudioConfigSchema)` to create a new message.
 */
export const OutputAudioConfigSchema: GenMessage<OutputAudioConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_audio_config, 5);

/**
 * A wrapper of repeated TelephonyDtmf digits.
 *
 * @generated from message google.cloud.dialogflow.v2.TelephonyDtmfEvents
 */
export type TelephonyDtmfEvents = Message<"google.cloud.dialogflow.v2.TelephonyDtmfEvents"> & {
  /**
   * A sequence of TelephonyDtmf digits.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2.TelephonyDtmf dtmf_events = 1;
   */
  dtmfEvents: TelephonyDtmf[];
};

/**
 * Describes the message google.cloud.dialogflow.v2.TelephonyDtmfEvents.
 * Use `create(TelephonyDtmfEventsSchema)` to create a new message.
 */
export const TelephonyDtmfEventsSchema: GenMessage<TelephonyDtmfEvents> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_audio_config, 6);

/**
 * Configures speech transcription for
 * [ConversationProfile][google.cloud.dialogflow.v2.ConversationProfile].
 *
 * @generated from message google.cloud.dialogflow.v2.SpeechToTextConfig
 */
export type SpeechToTextConfig = Message<"google.cloud.dialogflow.v2.SpeechToTextConfig"> & {
  /**
   * The speech model used in speech to text.
   * `SPEECH_MODEL_VARIANT_UNSPECIFIED`, `USE_BEST_AVAILABLE` will be treated as
   * `USE_ENHANCED`. It can be overridden in
   * [AnalyzeContentRequest][google.cloud.dialogflow.v2.AnalyzeContentRequest]
   * and
   * [StreamingAnalyzeContentRequest][google.cloud.dialogflow.v2.StreamingAnalyzeContentRequest]
   * request. If enhanced model variant is specified and an enhanced version of
   * the specified model for the language does not exist, then it would emit an
   * error.
   *
   * @generated from field: google.cloud.dialogflow.v2.SpeechModelVariant speech_model_variant = 1;
   */
  speechModelVariant: SpeechModelVariant;

  /**
   * Which Speech model to select. Select the
   * model best suited to your domain to get best results. If a model is not
   * explicitly specified, then Dialogflow auto-selects a model based on other
   * parameters in the SpeechToTextConfig and Agent settings.
   * If enhanced speech model is enabled for the agent and an enhanced
   * version of the specified model for the language does not exist, then the
   * speech is recognized using the standard version of the specified model.
   * Refer to
   * [Cloud Speech API
   * documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model)
   * for more details.
   * If you specify a model, the following models typically have the best
   * performance:
   *
   * - phone_call (best for Agent Assist and telephony)
   * - latest_short (best for Dialogflow non-telephony)
   * - command_and_search
   *
   * Leave this field unspecified to use
   * [Agent Speech
   * settings](https://cloud.google.com/dialogflow/cx/docs/concept/agent#settings-speech)
   * for model selection.
   *
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * Audio encoding of the audio content to process.
   *
   * @generated from field: google.cloud.dialogflow.v2.AudioEncoding audio_encoding = 6;
   */
  audioEncoding: AudioEncoding;

  /**
   * Sample rate (in Hertz) of the audio content sent in the query.
   * Refer to [Cloud Speech API
   * documentation](https://cloud.google.com/speech-to-text/docs/basics) for
   * more details.
   *
   * @generated from field: int32 sample_rate_hertz = 7;
   */
  sampleRateHertz: number;

  /**
   * The language of the supplied audio. Dialogflow does not do
   * translations. See [Language
   * Support](https://cloud.google.com/dialogflow/docs/reference/language)
   * for a list of the currently supported language codes. Note that queries in
   * the same session do not necessarily need to specify the same language.
   *
   * @generated from field: string language_code = 8;
   */
  languageCode: string;

  /**
   * If `true`, Dialogflow returns
   * [SpeechWordInfo][google.cloud.dialogflow.v2.SpeechWordInfo] in
   * [StreamingRecognitionResult][google.cloud.dialogflow.v2.StreamingRecognitionResult]
   * with information about the recognized speech words, e.g. start and end time
   * offsets. If false or unspecified, Speech doesn't return any word-level
   * information.
   *
   * @generated from field: bool enable_word_info = 9;
   */
  enableWordInfo: boolean;

  /**
   * Use timeout based endpointing, interpreting endpointer sensitivy as
   * seconds of timeout value.
   *
   * @generated from field: bool use_timeout_based_endpointing = 11;
   */
  useTimeoutBasedEndpointing: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2.SpeechToTextConfig.
 * Use `create(SpeechToTextConfigSchema)` to create a new message.
 */
export const SpeechToTextConfigSchema: GenMessage<SpeechToTextConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2_audio_config, 7);

/**
 * [DTMF](https://en.wikipedia.org/wiki/Dual-tone_multi-frequency_signaling)
 * digit in Telephony Gateway.
 *
 * @generated from enum google.cloud.dialogflow.v2.TelephonyDtmf
 */
export enum TelephonyDtmf {
  /**
   * Not specified. This value may be used to indicate an absent digit.
   *
   * @generated from enum value: TELEPHONY_DTMF_UNSPECIFIED = 0;
   */
  TELEPHONY_DTMF_UNSPECIFIED = 0,

  /**
   * Number: '1'.
   *
   * @generated from enum value: DTMF_ONE = 1;
   */
  DTMF_ONE = 1,

  /**
   * Number: '2'.
   *
   * @generated from enum value: DTMF_TWO = 2;
   */
  DTMF_TWO = 2,

  /**
   * Number: '3'.
   *
   * @generated from enum value: DTMF_THREE = 3;
   */
  DTMF_THREE = 3,

  /**
   * Number: '4'.
   *
   * @generated from enum value: DTMF_FOUR = 4;
   */
  DTMF_FOUR = 4,

  /**
   * Number: '5'.
   *
   * @generated from enum value: DTMF_FIVE = 5;
   */
  DTMF_FIVE = 5,

  /**
   * Number: '6'.
   *
   * @generated from enum value: DTMF_SIX = 6;
   */
  DTMF_SIX = 6,

  /**
   * Number: '7'.
   *
   * @generated from enum value: DTMF_SEVEN = 7;
   */
  DTMF_SEVEN = 7,

  /**
   * Number: '8'.
   *
   * @generated from enum value: DTMF_EIGHT = 8;
   */
  DTMF_EIGHT = 8,

  /**
   * Number: '9'.
   *
   * @generated from enum value: DTMF_NINE = 9;
   */
  DTMF_NINE = 9,

  /**
   * Number: '0'.
   *
   * @generated from enum value: DTMF_ZERO = 10;
   */
  DTMF_ZERO = 10,

  /**
   * Letter: 'A'.
   *
   * @generated from enum value: DTMF_A = 11;
   */
  DTMF_A = 11,

  /**
   * Letter: 'B'.
   *
   * @generated from enum value: DTMF_B = 12;
   */
  DTMF_B = 12,

  /**
   * Letter: 'C'.
   *
   * @generated from enum value: DTMF_C = 13;
   */
  DTMF_C = 13,

  /**
   * Letter: 'D'.
   *
   * @generated from enum value: DTMF_D = 14;
   */
  DTMF_D = 14,

  /**
   * Asterisk/star: '*'.
   *
   * @generated from enum value: DTMF_STAR = 15;
   */
  DTMF_STAR = 15,

  /**
   * Pound/diamond/hash/square/gate/octothorpe: '#'.
   *
   * @generated from enum value: DTMF_POUND = 16;
   */
  DTMF_POUND = 16,
}

/**
 * Describes the enum google.cloud.dialogflow.v2.TelephonyDtmf.
 */
export const TelephonyDtmfSchema: GenEnum<TelephonyDtmf> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2_audio_config, 0);

/**
 * Audio encoding of the audio content sent in the conversational query request.
 * Refer to the
 * [Cloud Speech API
 * documentation](https://cloud.google.com/speech-to-text/docs/basics) for more
 * details.
 *
 * @generated from enum google.cloud.dialogflow.v2.AudioEncoding
 */
export enum AudioEncoding {
  /**
   * Not specified.
   *
   * @generated from enum value: AUDIO_ENCODING_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Uncompressed 16-bit signed little-endian samples (Linear PCM).
   *
   * @generated from enum value: AUDIO_ENCODING_LINEAR_16 = 1;
   */
  LINEAR_16 = 1,

  /**
   * [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio
   * Codec) is the recommended encoding because it is lossless (therefore
   * recognition is not compromised) and requires only about half the
   * bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and
   * 24-bit samples, however, not all fields in `STREAMINFO` are supported.
   *
   * @generated from enum value: AUDIO_ENCODING_FLAC = 2;
   */
  FLAC = 2,

  /**
   * 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
   *
   * @generated from enum value: AUDIO_ENCODING_MULAW = 3;
   */
  MULAW = 3,

  /**
   * Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.
   *
   * @generated from enum value: AUDIO_ENCODING_AMR = 4;
   */
  AMR = 4,

  /**
   * Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
   *
   * @generated from enum value: AUDIO_ENCODING_AMR_WB = 5;
   */
  AMR_WB = 5,

  /**
   * Opus encoded audio frames in Ogg container
   * ([OggOpus](https://wiki.xiph.org/OggOpus)).
   * `sample_rate_hertz` must be 16000.
   *
   * @generated from enum value: AUDIO_ENCODING_OGG_OPUS = 6;
   */
  OGG_OPUS = 6,

  /**
   * Although the use of lossy encodings is not recommended, if a very low
   * bitrate encoding is required, `OGG_OPUS` is highly preferred over
   * Speex encoding. The [Speex](https://speex.org/) encoding supported by
   * Dialogflow API has a header byte in each block, as in MIME type
   * `audio/x-speex-with-header-byte`.
   * It is a variant of the RTP Speex encoding defined in
   * [RFC 5574](https://tools.ietf.org/html/rfc5574).
   * The stream is a sequence of blocks, one block per RTP packet. Each block
   * starts with a byte containing the length of the block, in bytes, followed
   * by one or more frames of Speex data, padded to an integral number of
   * bytes (octets) as specified in RFC 5574. In other words, each RTP header
   * is replaced with a single byte containing the block length. Only Speex
   * wideband is supported. `sample_rate_hertz` must be 16000.
   *
   * @generated from enum value: AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE = 7;
   */
  SPEEX_WITH_HEADER_BYTE = 7,

  /**
   * 8-bit samples that compand 13-bit audio samples using G.711 PCMU/a-law.
   *
   * @generated from enum value: AUDIO_ENCODING_ALAW = 8;
   */
  ALAW = 8,
}

/**
 * Describes the enum google.cloud.dialogflow.v2.AudioEncoding.
 */
export const AudioEncodingSchema: GenEnum<AudioEncoding> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2_audio_config, 1);

/**
 * Variant of the specified [Speech
 * model][google.cloud.dialogflow.v2.InputAudioConfig.model] to use.
 *
 * See the [Cloud Speech
 * documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
 * for which models have different variants. For example, the "phone_call" model
 * has both a standard and an enhanced variant. When you use an enhanced model,
 * you will generally receive higher quality results than for a standard model.
 *
 * @generated from enum google.cloud.dialogflow.v2.SpeechModelVariant
 */
export enum SpeechModelVariant {
  /**
   * No model variant specified. In this case Dialogflow defaults to
   * USE_BEST_AVAILABLE.
   *
   * @generated from enum value: SPEECH_MODEL_VARIANT_UNSPECIFIED = 0;
   */
  SPEECH_MODEL_VARIANT_UNSPECIFIED = 0,

  /**
   * Use the best available variant of the [Speech
   * model][InputAudioConfig.model] that the caller is eligible for.
   *
   * Please see the [Dialogflow
   * docs](https://cloud.google.com/dialogflow/docs/data-logging) for
   * how to make your project eligible for enhanced models.
   *
   * @generated from enum value: USE_BEST_AVAILABLE = 1;
   */
  USE_BEST_AVAILABLE = 1,

  /**
   * Use standard model variant even if an enhanced model is available.  See the
   * [Cloud Speech
   * documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
   * for details about enhanced models.
   *
   * @generated from enum value: USE_STANDARD = 2;
   */
  USE_STANDARD = 2,

  /**
   * Use an enhanced model variant:
   *
   * * If an enhanced variant does not exist for the given
   *   [model][google.cloud.dialogflow.v2.InputAudioConfig.model] and request
   *   language, Dialogflow falls back to the standard variant.
   *
   *   The [Cloud Speech
   *   documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
   *   describes which models have enhanced variants.
   *
   * * If the API caller isn't eligible for enhanced models, Dialogflow returns
   *   an error. Please see the [Dialogflow
   *   docs](https://cloud.google.com/dialogflow/docs/data-logging)
   *   for how to make your project eligible.
   *
   * @generated from enum value: USE_ENHANCED = 3;
   */
  USE_ENHANCED = 3,
}

/**
 * Describes the enum google.cloud.dialogflow.v2.SpeechModelVariant.
 */
export const SpeechModelVariantSchema: GenEnum<SpeechModelVariant> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2_audio_config, 2);

/**
 * Gender of the voice as described in
 * [SSML voice element](https://www.w3.org/TR/speech-synthesis11/#edef_voice).
 *
 * @generated from enum google.cloud.dialogflow.v2.SsmlVoiceGender
 */
export enum SsmlVoiceGender {
  /**
   * An unspecified gender, which means that the client doesn't care which
   * gender the selected voice will have.
   *
   * @generated from enum value: SSML_VOICE_GENDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * A male voice.
   *
   * @generated from enum value: SSML_VOICE_GENDER_MALE = 1;
   */
  MALE = 1,

  /**
   * A female voice.
   *
   * @generated from enum value: SSML_VOICE_GENDER_FEMALE = 2;
   */
  FEMALE = 2,

  /**
   * A gender-neutral voice.
   *
   * @generated from enum value: SSML_VOICE_GENDER_NEUTRAL = 3;
   */
  NEUTRAL = 3,
}

/**
 * Describes the enum google.cloud.dialogflow.v2.SsmlVoiceGender.
 */
export const SsmlVoiceGenderSchema: GenEnum<SsmlVoiceGender> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2_audio_config, 3);

/**
 * Audio encoding of the output audio format in Text-To-Speech.
 *
 * @generated from enum google.cloud.dialogflow.v2.OutputAudioEncoding
 */
export enum OutputAudioEncoding {
  /**
   * Not specified.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Uncompressed 16-bit signed little-endian samples (Linear PCM).
   * Audio content returned as LINEAR16 also contains a WAV header.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_LINEAR_16 = 1;
   */
  LINEAR_16 = 1,

  /**
   * MP3 audio at 32kbps.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_MP3 = 2;
   */
  MP3 = 2,

  /**
   * MP3 audio at 64kbps.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_MP3_64_KBPS = 4;
   */
  MP3_64_KBPS = 4,

  /**
   * Opus encoded audio wrapped in an ogg container. The result will be a
   * file which can be played natively on Android, and in browsers (at least
   * Chrome and Firefox). The quality of the encoding is considerably higher
   * than MP3 while using approximately the same bitrate.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_OGG_OPUS = 3;
   */
  OGG_OPUS = 3,

  /**
   * 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_MULAW = 5;
   */
  MULAW = 5,

  /**
   * 8-bit samples that compand 13-bit audio samples using G.711 PCMU/a-law.
   *
   * @generated from enum value: OUTPUT_AUDIO_ENCODING_ALAW = 6;
   */
  ALAW = 6,
}

/**
 * Describes the enum google.cloud.dialogflow.v2.OutputAudioEncoding.
 */
export const OutputAudioEncodingSchema: GenEnum<OutputAudioEncoding> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2_audio_config, 4);

