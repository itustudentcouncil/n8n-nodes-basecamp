// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/v2beta1/document.proto (package google.cloud.dialogflow.v2beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { GcsDestination, GcsSource, GcsSources } from "./gcs_pb";
import { file_google_cloud_dialogflow_v2beta1_gcs } from "./gcs_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/v2beta1/document.proto.
 */
export const file_google_cloud_dialogflow_v2beta1_document: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_v2beta1_gcs, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * A knowledge document to be used by a
 * [KnowledgeBase][google.cloud.dialogflow.v2beta1.KnowledgeBase].
 *
 * For more information, see the [knowledge base
 * guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases).
 *
 * Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
 * only use `projects.knowledgeBases.documents`.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.Document
 */
export type Document = Message<"google.cloud.dialogflow.v2beta1.Document"> & {
  /**
   * Optional. The document resource name.
   * The name must be empty when creating a document.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The display name of the document. The name must be 1024 bytes or
   * less; otherwise, the creation request fails.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Required. The MIME type of this document.
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;

  /**
   * Required. The knowledge type of document content.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Document.KnowledgeType knowledge_types = 4;
   */
  knowledgeTypes: Document_KnowledgeType[];

  /**
   * The source of this document.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.Document.source
   */
  source: {
    /**
     * The URI where the file content is located.
     *
     * For documents stored in Google Cloud Storage, these URIs must have
     * the form `gs://<bucket-name>/<object-name>`.
     *
     * NOTE: External URLs must correspond to public webpages, i.e., they must
     * be indexed by Google Search. In particular, URLs for showing documents in
     * Google Cloud Storage (i.e. the URL in your browser) are not supported.
     * Instead use the `gs://` format URI described above.
     *
     * @generated from field: string content_uri = 5;
     */
    value: string;
    case: "contentUri";
  } | {
    /**
     * The raw content of the document. This field is only permitted for
     * EXTRACTIVE_QA and FAQ knowledge types.
     * Note: This field is in the process of being deprecated, please use
     * raw_content instead.
     *
     * @generated from field: string content = 6 [deprecated = true];
     * @deprecated
     */
    value: string;
    case: "content";
  } | {
    /**
     * The raw content of the document. This field is only permitted for
     * EXTRACTIVE_QA and FAQ knowledge types.
     *
     * @generated from field: bytes raw_content = 9;
     */
    value: Uint8Array;
    case: "rawContent";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. If true, we try to automatically reload the document every day
   * (at a time picked by the system). If false or unspecified, we don't try
   * to automatically reload the document.
   *
   * Currently you can only enable automatic reload for documents sourced from
   * a public url, see `source` field for the source types.
   *
   * Reload status can be tracked in `latest_reload_status`. If a reload
   * fails, we will keep the document unchanged.
   *
   * If a reload fails with internal errors, the system will try to reload the
   * document on the next day.
   * If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the
   * system will not try to reload the document anymore. You need to manually
   * reload the document successfully by calling `ReloadDocument` and clear the
   * errors.
   *
   * @generated from field: bool enable_auto_reload = 11;
   */
  enableAutoReload: boolean;

  /**
   * Output only. The time and status of the latest reload.
   * This reload may have been triggered automatically or manually
   * and may not have succeeded.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Document.ReloadStatus latest_reload_status = 12;
   */
  latestReloadStatus?: Document_ReloadStatus;

  /**
   * Optional. Metadata for the document. The metadata supports arbitrary
   * key-value pairs. Suggested use cases include storing a document's title,
   * an external URL distinct from the document's content_uri, etc.
   * The max size of a `key` or a `value` of the metadata is 1024 bytes.
   *
   * @generated from field: map<string, string> metadata = 7;
   */
  metadata: { [key: string]: string };

  /**
   * Output only. The current state of the document.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Document.State state = 13;
   */
  state: Document_State;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.Document.
 * Use `create(DocumentSchema)` to create a new message.
 */
export const DocumentSchema: GenMessage<Document> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 0);

/**
 * The status of a reload attempt.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.Document.ReloadStatus
 */
export type Document_ReloadStatus = Message<"google.cloud.dialogflow.v2beta1.Document.ReloadStatus"> & {
  /**
   * Output only. The time of a reload attempt.
   * This reload may have been triggered automatically or manually and may
   * not have succeeded.
   *
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * Output only. The status of a reload attempt or the initial load.
   *
   * @generated from field: google.rpc.Status status = 2;
   */
  status?: Status;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.Document.ReloadStatus.
 * Use `create(Document_ReloadStatusSchema)` to create a new message.
 */
export const Document_ReloadStatusSchema: GenMessage<Document_ReloadStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 0, 0);

/**
 * The knowledge type of document content.
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.Document.KnowledgeType
 */
export enum Document_KnowledgeType {
  /**
   * The type is unspecified or arbitrary.
   *
   * @generated from enum value: KNOWLEDGE_TYPE_UNSPECIFIED = 0;
   */
  KNOWLEDGE_TYPE_UNSPECIFIED = 0,

  /**
   * The document content contains question and answer pairs as either HTML or
   * CSV. Typical FAQ HTML formats are parsed accurately, but unusual formats
   * may fail to be parsed.
   *
   * CSV must have questions in the first column and answers in the second,
   * with no header. Because of this explicit format, they are always parsed
   * accurately.
   *
   * @generated from enum value: FAQ = 1;
   */
  FAQ = 1,

  /**
   * Documents for which unstructured text is extracted and used for
   * question answering.
   *
   * @generated from enum value: EXTRACTIVE_QA = 2;
   */
  EXTRACTIVE_QA = 2,

  /**
   * The entire document content as a whole can be used for query results.
   * Only for Contact Center Solutions on Dialogflow.
   *
   * @generated from enum value: ARTICLE_SUGGESTION = 3;
   */
  ARTICLE_SUGGESTION = 3,

  /**
   * The document contains agent-facing Smart Reply entries.
   *
   * @generated from enum value: AGENT_FACING_SMART_REPLY = 4;
   */
  AGENT_FACING_SMART_REPLY = 4,

  /**
   * The legacy enum for agent-facing smart reply feature.
   *
   * @generated from enum value: SMART_REPLY = 4;
   */
  SMART_REPLY = 4,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.Document.KnowledgeType.
 */
export const Document_KnowledgeTypeSchema: GenEnum<Document_KnowledgeType> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_document, 0, 0);

/**
 * Possible states of the document
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.Document.State
 */
export enum Document_State {
  /**
   * The document state is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The document creation is in progress.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The document is active and ready to use.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The document updation is in progress.
   *
   * @generated from enum value: UPDATING = 3;
   */
  UPDATING = 3,

  /**
   * The document is reloading.
   *
   * @generated from enum value: RELOADING = 4;
   */
  RELOADING = 4,

  /**
   * The document deletion is in progress.
   *
   * @generated from enum value: DELETING = 5;
   */
  DELETING = 5,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.Document.State.
 */
export const Document_StateSchema: GenEnum<Document_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_document, 0, 1);

/**
 * Request message for
 * [Documents.GetDocument][google.cloud.dialogflow.v2beta1.Documents.GetDocument].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GetDocumentRequest
 */
export type GetDocumentRequest = Message<"google.cloud.dialogflow.v2beta1.GetDocumentRequest"> & {
  /**
   * Required. The name of the document to retrieve.
   * Format `projects/<Project ID>/locations/<Location
   * ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GetDocumentRequest.
 * Use `create(GetDocumentRequestSchema)` to create a new message.
 */
export const GetDocumentRequestSchema: GenMessage<GetDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 1);

/**
 * Request message for
 * [Documents.ListDocuments][google.cloud.dialogflow.v2beta1.Documents.ListDocuments].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListDocumentsRequest
 */
export type ListDocumentsRequest = Message<"google.cloud.dialogflow.v2beta1.ListDocumentsRequest"> & {
  /**
   * Required. The knowledge base to list all documents for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/knowledgeBases/<Knowledge Base ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return in a single page. By
   * default 10 and at most 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The filter expression used to filter documents returned by the list method.
   * The expression has the following syntax:
   *
   *   <field> <operator> <value> [AND <field> <operator> <value>] ...
   *
   * The following fields and operators are supported:
   *
   * * knowledge_types with has(:) operator
   * * display_name with has(:) operator
   * * state with equals(=) operator
   *
   * Examples:
   *
   * * "knowledge_types:FAQ" matches documents with FAQ knowledge type.
   * * "display_name:customer" matches documents whose display name contains
   *   "customer".
   * * "state=ACTIVE" matches documents with ACTIVE state.
   * * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents.
   *
   * For more information about filtering, see
   * [API Filtering](https://aip.dev/160).
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListDocumentsRequest.
 * Use `create(ListDocumentsRequestSchema)` to create a new message.
 */
export const ListDocumentsRequestSchema: GenMessage<ListDocumentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 2);

/**
 * Response message for
 * [Documents.ListDocuments][google.cloud.dialogflow.v2beta1.Documents.ListDocuments].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListDocumentsResponse
 */
export type ListDocumentsResponse = Message<"google.cloud.dialogflow.v2beta1.ListDocumentsResponse"> & {
  /**
   * The list of documents.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Document documents = 1;
   */
  documents: Document[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListDocumentsResponse.
 * Use `create(ListDocumentsResponseSchema)` to create a new message.
 */
export const ListDocumentsResponseSchema: GenMessage<ListDocumentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 3);

/**
 * Request message for
 * [Documents.CreateDocument][google.cloud.dialogflow.v2beta1.Documents.CreateDocument].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.CreateDocumentRequest
 */
export type CreateDocumentRequest = Message<"google.cloud.dialogflow.v2beta1.CreateDocumentRequest"> & {
  /**
   * Required. The knowledge base to create a document for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/knowledgeBases/<Knowledge Base ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The document to create.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Document document = 2;
   */
  document?: Document;

  /**
   * Whether to import custom metadata from Google Cloud Storage.
   * Only valid when the document source is Google Cloud Storage URI.
   *
   * @generated from field: bool import_gcs_custom_metadata = 3;
   */
  importGcsCustomMetadata: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.CreateDocumentRequest.
 * Use `create(CreateDocumentRequestSchema)` to create a new message.
 */
export const CreateDocumentRequestSchema: GenMessage<CreateDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 4);

/**
 * Request message for
 * [Documents.ImportDocuments][google.cloud.dialogflow.v2beta1.Documents.ImportDocuments].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ImportDocumentsRequest
 */
export type ImportDocumentsRequest = Message<"google.cloud.dialogflow.v2beta1.ImportDocumentsRequest"> & {
  /**
   * Required. The knowledge base to import documents into.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/knowledgeBases/<Knowledge Base ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The source to use for importing documents.
   *
   * If the source captures multiple objects, then multiple documents will be
   * created, one corresponding to each object, and all of these documents will
   * be created using the same document template.
   *
   * Dialogflow supports up to 350 documents in each request. If you try to
   * import more, Dialogflow will return an error.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.ImportDocumentsRequest.source
   */
  source: {
    /**
     * Optional. The Google Cloud Storage location for the documents.
     * The path can include a wildcard.
     *
     * These URIs may have the forms
     * `gs://<bucket-name>/<object-name>`.
     * `gs://<bucket-name>/<object-path>/*.<extension>`.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.GcsSources gcs_source = 2;
     */
    value: GcsSources;
    case: "gcsSource";
  } | { case: undefined; value?: undefined };

  /**
   * Required. Document template used for importing all the documents.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.ImportDocumentTemplate document_template = 3;
   */
  documentTemplate?: ImportDocumentTemplate;

  /**
   * Whether to import custom metadata from Google Cloud Storage.
   * Only valid when the document source is Google Cloud Storage URI.
   *
   * @generated from field: bool import_gcs_custom_metadata = 4;
   */
  importGcsCustomMetadata: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ImportDocumentsRequest.
 * Use `create(ImportDocumentsRequestSchema)` to create a new message.
 */
export const ImportDocumentsRequestSchema: GenMessage<ImportDocumentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 5);

/**
 * The template used for importing documents.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ImportDocumentTemplate
 */
export type ImportDocumentTemplate = Message<"google.cloud.dialogflow.v2beta1.ImportDocumentTemplate"> & {
  /**
   * Required. The MIME type of the document.
   *
   * @generated from field: string mime_type = 1;
   */
  mimeType: string;

  /**
   * Required. The knowledge type of document content.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Document.KnowledgeType knowledge_types = 2;
   */
  knowledgeTypes: Document_KnowledgeType[];

  /**
   * Metadata for the document. The metadata supports arbitrary
   * key-value pairs. Suggested use cases include storing a document's title,
   * an external URL distinct from the document's content_uri, etc.
   * The max size of a `key` or a `value` of the metadata is 1024 bytes.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ImportDocumentTemplate.
 * Use `create(ImportDocumentTemplateSchema)` to create a new message.
 */
export const ImportDocumentTemplateSchema: GenMessage<ImportDocumentTemplate> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 6);

/**
 * Response message for
 * [Documents.ImportDocuments][google.cloud.dialogflow.v2beta1.Documents.ImportDocuments].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ImportDocumentsResponse
 */
export type ImportDocumentsResponse = Message<"google.cloud.dialogflow.v2beta1.ImportDocumentsResponse"> & {
  /**
   * Includes details about skipped documents or any other warnings.
   *
   * @generated from field: repeated google.rpc.Status warnings = 1;
   */
  warnings: Status[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ImportDocumentsResponse.
 * Use `create(ImportDocumentsResponseSchema)` to create a new message.
 */
export const ImportDocumentsResponseSchema: GenMessage<ImportDocumentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 7);

/**
 * Request message for
 * [Documents.DeleteDocument][google.cloud.dialogflow.v2beta1.Documents.DeleteDocument].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.DeleteDocumentRequest
 */
export type DeleteDocumentRequest = Message<"google.cloud.dialogflow.v2beta1.DeleteDocumentRequest"> & {
  /**
   * Required. The name of the document to delete.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.
 * Use `create(DeleteDocumentRequestSchema)` to create a new message.
 */
export const DeleteDocumentRequestSchema: GenMessage<DeleteDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 8);

/**
 * Request message for
 * [Documents.UpdateDocument][google.cloud.dialogflow.v2beta1.Documents.UpdateDocument].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.UpdateDocumentRequest
 */
export type UpdateDocumentRequest = Message<"google.cloud.dialogflow.v2beta1.UpdateDocumentRequest"> & {
  /**
   * Required. The document to update.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Document document = 1;
   */
  document?: Document;

  /**
   * Optional. Not specified means `update all`.
   * Currently, only `display_name` can be updated, an InvalidArgument will be
   * returned for attempting to update other fields.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.UpdateDocumentRequest.
 * Use `create(UpdateDocumentRequestSchema)` to create a new message.
 */
export const UpdateDocumentRequestSchema: GenMessage<UpdateDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 9);

/**
 * Metadata related to the Export Data Operations (e.g. ExportDocument).
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ExportOperationMetadata
 */
export type ExportOperationMetadata = Message<"google.cloud.dialogflow.v2beta1.ExportOperationMetadata"> & {
  /**
   * Cloud Storage file path of the exported data.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.GcsDestination exported_gcs_destination = 1;
   */
  exportedGcsDestination?: GcsDestination;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ExportOperationMetadata.
 * Use `create(ExportOperationMetadataSchema)` to create a new message.
 */
export const ExportOperationMetadataSchema: GenMessage<ExportOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 10);

/**
 * Metadata in google::longrunning::Operation for Knowledge operations.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata
 */
export type KnowledgeOperationMetadata = Message<"google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata"> & {
  /**
   * Required. Output only. The current state of this operation.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata.State state = 1;
   */
  state: KnowledgeOperationMetadata_State;

  /**
   * The name of the knowledge base interacted with during the operation.
   *
   * @generated from field: string knowledge_base = 3;
   */
  knowledgeBase: string;

  /**
   * Additional metadata for the Knowledge operation.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata.operation_metadata
   */
  operationMetadata: {
    /**
     * Metadata for the Export Data Operation such as the destination of export.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.ExportOperationMetadata export_operation_metadata = 4;
     */
    value: ExportOperationMetadata;
    case: "exportOperationMetadata";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata.
 * Use `create(KnowledgeOperationMetadataSchema)` to create a new message.
 */
export const KnowledgeOperationMetadataSchema: GenMessage<KnowledgeOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 11);

/**
 * States of the operation.
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata.State
 */
export enum KnowledgeOperationMetadata_State {
  /**
   * State unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The operation has been created.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The operation is currently running.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The operation is done, either cancelled or completed.
   *
   * @generated from enum value: DONE = 3;
   */
  DONE = 3,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata.State.
 */
export const KnowledgeOperationMetadata_StateSchema: GenEnum<KnowledgeOperationMetadata_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_document, 11, 0);

/**
 * Request message for
 * [Documents.ReloadDocument][google.cloud.dialogflow.v2beta1.Documents.ReloadDocument].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ReloadDocumentRequest
 */
export type ReloadDocumentRequest = Message<"google.cloud.dialogflow.v2beta1.ReloadDocumentRequest"> & {
  /**
   * Required. The name of the document to reload.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The source for document reloading.
   *
   * Optional. If provided, the service will load the contents from the source
   * and update document in the knowledge base.
   *
   * Reloading from a new document source is allowed for smart messaging
   * documents only. If you want to update the source for other document types,
   * please delete the existing document and create a new one instead.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.ReloadDocumentRequest.source
   */
  source: {
    /**
     * The path for a Cloud Storage source file for reloading document content.
     * If not provided, the Document's existing source will be reloaded.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.GcsSource gcs_source = 3;
     */
    value: GcsSource;
    case: "gcsSource";
  } | { case: undefined; value?: undefined };

  /**
   * Whether to import custom metadata from Google Cloud Storage.
   * Only valid when the document source is Google Cloud Storage URI.
   *
   * @generated from field: bool import_gcs_custom_metadata = 4;
   */
  importGcsCustomMetadata: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ReloadDocumentRequest.
 * Use `create(ReloadDocumentRequestSchema)` to create a new message.
 */
export const ReloadDocumentRequestSchema: GenMessage<ReloadDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_document, 12);

/**
 * Service for managing knowledge
 * [Documents][google.cloud.dialogflow.v2beta1.Document].
 *
 * @generated from service google.cloud.dialogflow.v2beta1.Documents
 */
export const Documents: GenService<{
  /**
   * Returns the list of all documents of the knowledge base.
   *
   * Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
   * only use `projects.knowledgeBases.documents`.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Documents.ListDocuments
   */
  listDocuments: {
    methodKind: "unary";
    input: typeof ListDocumentsRequestSchema;
    output: typeof ListDocumentsResponseSchema;
  },
  /**
   * Retrieves the specified document.
   *
   * Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
   * only use `projects.knowledgeBases.documents`.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Documents.GetDocument
   */
  getDocument: {
    methodKind: "unary";
    input: typeof GetDocumentRequestSchema;
    output: typeof DocumentSchema;
  },
  /**
   * Creates a new document.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [KnowledgeOperationMetadata][google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata]
   * - `response`: [Document][google.cloud.dialogflow.v2beta1.Document]
   *
   * Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
   * only use `projects.knowledgeBases.documents`.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Documents.CreateDocument
   */
  createDocument: {
    methodKind: "unary";
    input: typeof CreateDocumentRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Create documents by importing data from external sources.
   * Dialogflow supports up to 350 documents in each request. If you try to
   * import more, Dialogflow will return an error.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [KnowledgeOperationMetadata][google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata]
   * - `response`:
   * [ImportDocumentsResponse][google.cloud.dialogflow.v2beta1.ImportDocumentsResponse]
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Documents.ImportDocuments
   */
  importDocuments: {
    methodKind: "unary";
    input: typeof ImportDocumentsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes the specified document.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [KnowledgeOperationMetadata][google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata]
   * - `response`: An [Empty
   *   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
   *
   * Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
   * only use `projects.knowledgeBases.documents`.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Documents.DeleteDocument
   */
  deleteDocument: {
    methodKind: "unary";
    input: typeof DeleteDocumentRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the specified document.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [KnowledgeOperationMetadata][google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata]
   * - `response`: [Document][google.cloud.dialogflow.v2beta1.Document]
   *
   * Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
   * only use `projects.knowledgeBases.documents`.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Documents.UpdateDocument
   */
  updateDocument: {
    methodKind: "unary";
    input: typeof UpdateDocumentRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Reloads the specified document from its specified source, content_uri or
   * content. The previously loaded content of the document will be deleted.
   * Note: Even when the content of the document has not changed, there still
   * may be side effects because of internal implementation changes.
   * Note: If the document source is Google Cloud Storage URI, its metadata will
   * be replaced with the custom metadata from Google Cloud Storage if the
   * `import_gcs_custom_metadata` field is set to true in the request.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [KnowledgeOperationMetadata][google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata]
   * - `response`: [Document][google.cloud.dialogflow.v2beta1.Document]
   *
   * Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
   * only use `projects.knowledgeBases.documents`.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Documents.ReloadDocument
   */
  reloadDocument: {
    methodKind: "unary";
    input: typeof ReloadDocumentRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_v2beta1_document, 0);

