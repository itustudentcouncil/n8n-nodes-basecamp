// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/v2beta1/conversation.proto (package google.cloud.dialogflow.v2beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ConversationProfile } from "./conversation_profile_pb";
import { file_google_cloud_dialogflow_v2beta1_conversation_profile } from "./conversation_profile_pb";
import type { ConversationContext, Generator, GeneratorSuggestion, TriggerEvent } from "./generator_pb";
import { file_google_cloud_dialogflow_v2beta1_generator } from "./generator_pb";
import type { AssistQueryParameters, Message as Message$1 } from "./participant_pb";
import { file_google_cloud_dialogflow_v2beta1_participant } from "./participant_pb";
import type { TextInput } from "./session_pb";
import { file_google_cloud_dialogflow_v2beta1_session } from "./session_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/v2beta1/conversation.proto.
 */
export const file_google_cloud_dialogflow_v2beta1_conversation: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_v2beta1_conversation_profile, file_google_cloud_dialogflow_v2beta1_generator, file_google_cloud_dialogflow_v2beta1_participant, file_google_cloud_dialogflow_v2beta1_session, file_google_protobuf_timestamp]);

/**
 * Represents a conversation.
 * A conversation is an interaction between an agent, including live agents
 * and Dialogflow agents, and a support customer. Conversations can
 * include phone calls and text-based chat sessions.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.Conversation
 */
export type Conversation = Message<"google.cloud.dialogflow.v2beta1.Conversation"> & {
  /**
   * Output only. Identifier. The unique identifier of this conversation.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The current state of the Conversation.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Conversation.LifecycleState lifecycle_state = 2;
   */
  lifecycleState: Conversation_LifecycleState;

  /**
   * Required. The Conversation Profile to be used to configure this
   * Conversation. This field cannot be updated.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversationProfiles/<Conversation Profile ID>`.
   *
   * @generated from field: string conversation_profile = 3;
   */
  conversationProfile: string;

  /**
   * Output only. Required if the conversation is to be connected over
   * telephony.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.ConversationPhoneNumber phone_number = 4;
   */
  phoneNumber?: ConversationPhoneNumber;

  /**
   * Optional. The stage of a conversation. It indicates whether the virtual
   * agent or a human agent is handling the conversation.
   *
   * If the conversation is created with the conversation profile that has
   * Dialogflow config set, defaults to
   * [ConversationStage.VIRTUAL_AGENT_STAGE][google.cloud.dialogflow.v2beta1.Conversation.ConversationStage.VIRTUAL_AGENT_STAGE];
   * Otherwise, defaults to
   * [ConversationStage.HUMAN_ASSIST_STAGE][google.cloud.dialogflow.v2beta1.Conversation.ConversationStage.HUMAN_ASSIST_STAGE].
   *
   * If the conversation is created with the conversation profile that has
   * Dialogflow config set but explicitly sets conversation_stage to
   * [ConversationStage.HUMAN_ASSIST_STAGE][google.cloud.dialogflow.v2beta1.Conversation.ConversationStage.HUMAN_ASSIST_STAGE],
   * it skips
   * [ConversationStage.VIRTUAL_AGENT_STAGE][google.cloud.dialogflow.v2beta1.Conversation.ConversationStage.VIRTUAL_AGENT_STAGE]
   * stage and directly goes to
   * [ConversationStage.HUMAN_ASSIST_STAGE][google.cloud.dialogflow.v2beta1.Conversation.ConversationStage.HUMAN_ASSIST_STAGE].
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Conversation.ConversationStage conversation_stage = 7;
   */
  conversationStage: Conversation_ConversationStage;

  /**
   * Output only. The time the conversation was started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 5;
   */
  startTime?: Timestamp;

  /**
   * Output only. The time the conversation was finished.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 6;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.Conversation.
 * Use `create(ConversationSchema)` to create a new message.
 */
export const ConversationSchema: GenMessage<Conversation> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 0);

/**
 * Enumeration of the completion status of the conversation.
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.Conversation.LifecycleState
 */
export enum Conversation_LifecycleState {
  /**
   * Unknown.
   *
   * @generated from enum value: LIFECYCLE_STATE_UNSPECIFIED = 0;
   */
  LIFECYCLE_STATE_UNSPECIFIED = 0,

  /**
   * Conversation is currently open for media analysis.
   *
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * Conversation has been completed.
   *
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.Conversation.LifecycleState.
 */
export const Conversation_LifecycleStateSchema: GenEnum<Conversation_LifecycleState> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_conversation, 0, 0);

/**
 * Enumeration of the different conversation stages a conversation can be in.
 * Reference:
 * https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.Conversation.ConversationStage
 */
export enum Conversation_ConversationStage {
  /**
   * Unknown. Should never be used after a conversation is successfully
   * created.
   *
   * @generated from enum value: CONVERSATION_STAGE_UNSPECIFIED = 0;
   */
  CONVERSATION_STAGE_UNSPECIFIED = 0,

  /**
   * The conversation should return virtual agent responses into the
   * conversation.
   *
   * @generated from enum value: VIRTUAL_AGENT_STAGE = 1;
   */
  VIRTUAL_AGENT_STAGE = 1,

  /**
   * The conversation should not provide responses, just listen and provide
   * suggestions.
   *
   * @generated from enum value: HUMAN_ASSIST_STAGE = 2;
   */
  HUMAN_ASSIST_STAGE = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.Conversation.ConversationStage.
 */
export const Conversation_ConversationStageSchema: GenEnum<Conversation_ConversationStage> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_conversation, 0, 1);

/**
 * Represents a phone number for telephony integration. It allows for connecting
 * a particular conversation over telephony.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ConversationPhoneNumber
 */
export type ConversationPhoneNumber = Message<"google.cloud.dialogflow.v2beta1.ConversationPhoneNumber"> & {
  /**
   * Output only. The phone number to connect to this conversation.
   *
   * @generated from field: string phone_number = 3;
   */
  phoneNumber: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ConversationPhoneNumber.
 * Use `create(ConversationPhoneNumberSchema)` to create a new message.
 */
export const ConversationPhoneNumberSchema: GenMessage<ConversationPhoneNumber> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 1);

/**
 * The request message for
 * [Conversations.CreateConversation][google.cloud.dialogflow.v2beta1.Conversations.CreateConversation].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.CreateConversationRequest
 */
export type CreateConversationRequest = Message<"google.cloud.dialogflow.v2beta1.CreateConversationRequest"> & {
  /**
   * Required. Resource identifier of the project creating the conversation.
   * Format: `projects/<Project ID>/locations/<Location ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The conversation to create.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Conversation conversation = 2;
   */
  conversation?: Conversation;

  /**
   * Optional. Identifier of the conversation. Generally it's auto generated by
   * Google. Only set it if you cannot wait for the response to return a
   * auto-generated one to you.
   *
   * The conversation ID must be compliant with the regression fomula
   * `[a-zA-Z][a-zA-Z0-9_-]*` with the characters length in range of [3,64].
   * If the field is provided, the caller is resposible for
   * 1. the uniqueness of the ID, otherwise the request will be rejected.
   * 2. the consistency for whether to use custom ID or not under a project to
   * better ensure uniqueness.
   *
   * @generated from field: string conversation_id = 3;
   */
  conversationId: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.CreateConversationRequest.
 * Use `create(CreateConversationRequestSchema)` to create a new message.
 */
export const CreateConversationRequestSchema: GenMessage<CreateConversationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 2);

/**
 * The request message for
 * [Conversations.ListConversations][google.cloud.dialogflow.v2beta1.Conversations.ListConversations].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListConversationsRequest
 */
export type ListConversationsRequest = Message<"google.cloud.dialogflow.v2beta1.ListConversationsRequest"> & {
  /**
   * Required. The project from which to list all conversation.
   * Format: `projects/<Project ID>/locations/<Location ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of items to return in a single page. By
   * default 100 and at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. A filter expression that filters conversations listed in the
   * response. Only `lifecycle_state` can be filtered on in this way. For
   * example, the following expression only returns `COMPLETED` conversations:
   *
   * `lifecycle_state = "COMPLETED"`
   *
   * For more information about filtering, see
   * [API Filtering](https://aip.dev/160).
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListConversationsRequest.
 * Use `create(ListConversationsRequestSchema)` to create a new message.
 */
export const ListConversationsRequestSchema: GenMessage<ListConversationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 3);

/**
 * The response message for
 * [Conversations.ListConversations][google.cloud.dialogflow.v2beta1.Conversations.ListConversations].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListConversationsResponse
 */
export type ListConversationsResponse = Message<"google.cloud.dialogflow.v2beta1.ListConversationsResponse"> & {
  /**
   * The list of conversations. There will be a maximum number of items
   * returned based on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Conversation conversations = 1;
   */
  conversations: Conversation[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListConversationsResponse.
 * Use `create(ListConversationsResponseSchema)` to create a new message.
 */
export const ListConversationsResponseSchema: GenMessage<ListConversationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 4);

/**
 * The request message for
 * [Conversations.GetConversation][google.cloud.dialogflow.v2beta1.Conversations.GetConversation].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GetConversationRequest
 */
export type GetConversationRequest = Message<"google.cloud.dialogflow.v2beta1.GetConversationRequest"> & {
  /**
   * Required. The name of the conversation. Format:
   * `projects/<Project ID>/locations/<Location ID>/conversations/<Conversation
   * ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GetConversationRequest.
 * Use `create(GetConversationRequestSchema)` to create a new message.
 */
export const GetConversationRequestSchema: GenMessage<GetConversationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 5);

/**
 * The request message for
 * [Conversations.CompleteConversation][google.cloud.dialogflow.v2beta1.Conversations.CompleteConversation].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.CompleteConversationRequest
 */
export type CompleteConversationRequest = Message<"google.cloud.dialogflow.v2beta1.CompleteConversationRequest"> & {
  /**
   * Required. Resource identifier of the conversation to close.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.CompleteConversationRequest.
 * Use `create(CompleteConversationRequestSchema)` to create a new message.
 */
export const CompleteConversationRequestSchema: GenMessage<CompleteConversationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 6);

/**
 * The request message to create one Message. Currently it is only used in
 * BatchCreateMessagesRequest.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.CreateMessageRequest
 */
export type CreateMessageRequest = Message<"google.cloud.dialogflow.v2beta1.CreateMessageRequest"> & {
  /**
   * Required. Resource identifier of the conversation to create message.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The message to create.
   * [Message.participant][google.cloud.dialogflow.v2beta1.Message.participant]
   * is required.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Message message = 2;
   */
  message?: Message$1;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.CreateMessageRequest.
 * Use `create(CreateMessageRequestSchema)` to create a new message.
 */
export const CreateMessageRequestSchema: GenMessage<CreateMessageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 7);

/**
 * The request message for [Conversations.BatchCreateMessagesRequest][].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.BatchCreateMessagesRequest
 */
export type BatchCreateMessagesRequest = Message<"google.cloud.dialogflow.v2beta1.BatchCreateMessagesRequest"> & {
  /**
   * Required. Resource identifier of the conversation to create message.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. A maximum of 300 messages can be created in a batch.
   * [CreateMessageRequest.message.send_time][] is required. All created
   * messages will have identical
   * [Message.create_time][google.cloud.dialogflow.v2beta1.Message.create_time].
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.CreateMessageRequest requests = 2;
   */
  requests: CreateMessageRequest[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.BatchCreateMessagesRequest.
 * Use `create(BatchCreateMessagesRequestSchema)` to create a new message.
 */
export const BatchCreateMessagesRequestSchema: GenMessage<BatchCreateMessagesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 8);

/**
 * The request message for [Conversations.BatchCreateMessagesResponse][].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.BatchCreateMessagesResponse
 */
export type BatchCreateMessagesResponse = Message<"google.cloud.dialogflow.v2beta1.BatchCreateMessagesResponse"> & {
  /**
   * Messages created.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Message messages = 1;
   */
  messages: Message$1[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.BatchCreateMessagesResponse.
 * Use `create(BatchCreateMessagesResponseSchema)` to create a new message.
 */
export const BatchCreateMessagesResponseSchema: GenMessage<BatchCreateMessagesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 9);

/**
 * The request message for
 * [Conversations.ListMessages][google.cloud.dialogflow.v2beta1.Conversations.ListMessages].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListMessagesRequest
 */
export type ListMessagesRequest = Message<"google.cloud.dialogflow.v2beta1.ListMessagesRequest"> & {
  /**
   * Required. The name of the conversation to list messages for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Filter on message fields. Currently predicates on `create_time`
   * and `create_time_epoch_microseconds` are supported. `create_time` only
   * support milliseconds accuracy. E.g.,
   * `create_time_epoch_microseconds > 1551790877964485` or
   * `create_time > "2017-01-15T01:30:15.01Z"`.
   *
   * For more information about filtering, see
   * [API Filtering](https://aip.dev/160).
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. The maximum number of items to return in a single page. By
   * default 100 and at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListMessagesRequest.
 * Use `create(ListMessagesRequestSchema)` to create a new message.
 */
export const ListMessagesRequestSchema: GenMessage<ListMessagesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 10);

/**
 * The response message for
 * [Conversations.ListMessages][google.cloud.dialogflow.v2beta1.Conversations.ListMessages].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListMessagesResponse
 */
export type ListMessagesResponse = Message<"google.cloud.dialogflow.v2beta1.ListMessagesResponse"> & {
  /**
   * Required. The list of messages. There will be a maximum number of items
   * returned based on the page_size field in the request.
   * `messages` is sorted by `create_time` in descending order.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Message messages = 1;
   */
  messages: Message$1[];

  /**
   * Optional. Token to retrieve the next page of results, or empty if there are
   * no more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListMessagesResponse.
 * Use `create(ListMessagesResponseSchema)` to create a new message.
 */
export const ListMessagesResponseSchema: GenMessage<ListMessagesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 11);

/**
 * The request message for
 * [Conversations.SuggestConversationSummary][google.cloud.dialogflow.v2beta1.Conversations.SuggestConversationSummary].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestConversationSummaryRequest
 */
export type SuggestConversationSummaryRequest = Message<"google.cloud.dialogflow.v2beta1.SuggestConversationSummaryRequest"> & {
  /**
   * Required. The conversation to fetch suggestion for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>`.
   *
   * @generated from field: string conversation = 1;
   */
  conversation: string;

  /**
   * Optional. The name of the latest conversation message used as context for
   * compiling suggestion. If empty, the latest message of the conversation will
   * be used.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 3;
   */
  latestMessage: string;

  /**
   * Optional. Max number of messages prior to and including
   * [latest_message] to use as context when compiling the
   * suggestion. By default 500 and at most 1000.
   *
   * @generated from field: int32 context_size = 4;
   */
  contextSize: number;

  /**
   * Optional. Parameters for a human assist query. Only used for POC/demo
   * purpose.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.AssistQueryParameters assist_query_params = 5;
   */
  assistQueryParams?: AssistQueryParameters;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestConversationSummaryRequest.
 * Use `create(SuggestConversationSummaryRequestSchema)` to create a new message.
 */
export const SuggestConversationSummaryRequestSchema: GenMessage<SuggestConversationSummaryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 12);

/**
 * The response message for
 * [Conversations.SuggestConversationSummary][google.cloud.dialogflow.v2beta1.Conversations.SuggestConversationSummary].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestConversationSummaryResponse
 */
export type SuggestConversationSummaryResponse = Message<"google.cloud.dialogflow.v2beta1.SuggestConversationSummaryResponse"> & {
  /**
   * Generated summary.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SuggestConversationSummaryResponse.Summary summary = 1;
   */
  summary?: SuggestConversationSummaryResponse_Summary;

  /**
   * The name of the latest conversation message used as context for
   * compiling suggestion.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Number of messages prior to and including
   * [last_conversation_message][] used to compile the suggestion. It may be
   * smaller than the [SuggestSummaryRequest.context_size][] field in the
   * request if there weren't that many messages in the conversation.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestConversationSummaryResponse.
 * Use `create(SuggestConversationSummaryResponseSchema)` to create a new message.
 */
export const SuggestConversationSummaryResponseSchema: GenMessage<SuggestConversationSummaryResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 13);

/**
 * Generated summary for a conversation.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestConversationSummaryResponse.Summary
 */
export type SuggestConversationSummaryResponse_Summary = Message<"google.cloud.dialogflow.v2beta1.SuggestConversationSummaryResponse.Summary"> & {
  /**
   * The summary content that is concatenated into one string.
   *
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * The summary content that is divided into sections. The key is the
   * section's name and the value is the section's content. There is no
   * specific format for the key or value.
   *
   * @generated from field: map<string, string> text_sections = 4;
   */
  textSections: { [key: string]: string };

  /**
   * The name of the answer record. Format:
   * "projects/<Project ID>/answerRecords/<Answer Record ID>"
   *
   * @generated from field: string answer_record = 3;
   */
  answerRecord: string;

  /**
   * The baseline model version used to generate this summary. It is empty if
   * a baseline model was not used to generate this summary.
   *
   * @generated from field: string baseline_model_version = 5;
   */
  baselineModelVersion: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestConversationSummaryResponse.Summary.
 * Use `create(SuggestConversationSummaryResponse_SummarySchema)` to create a new message.
 */
export const SuggestConversationSummaryResponse_SummarySchema: GenMessage<SuggestConversationSummaryResponse_Summary> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 13, 0);

/**
 * The request message for
 * [Conversations.GenerateStatelessSummary][google.cloud.dialogflow.v2beta1.Conversations.GenerateStatelessSummary].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryRequest
 */
export type GenerateStatelessSummaryRequest = Message<"google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryRequest"> & {
  /**
   * Required. The conversation to suggest a summary for.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryRequest.MinimalConversation stateless_conversation = 1;
   */
  statelessConversation?: GenerateStatelessSummaryRequest_MinimalConversation;

  /**
   * Required. A ConversationProfile containing information required for Summary
   * generation.
   * Required fields: {language_code, security_settings}
   * Optional fields: {agent_assistant_config}
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.ConversationProfile conversation_profile = 2;
   */
  conversationProfile?: ConversationProfile;

  /**
   * Optional. The name of the latest conversation message used as context for
   * generating a Summary. If empty, the latest message of the conversation will
   * be used. The format is specific to the user and the names of the messages
   * provided.
   *
   * @generated from field: string latest_message = 3;
   */
  latestMessage: string;

  /**
   * Optional. Max number of messages prior to and including
   * [latest_message] to use as context when compiling the
   * suggestion. By default 500 and at most 1000.
   *
   * @generated from field: int32 max_context_size = 4;
   */
  maxContextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryRequest.
 * Use `create(GenerateStatelessSummaryRequestSchema)` to create a new message.
 */
export const GenerateStatelessSummaryRequestSchema: GenMessage<GenerateStatelessSummaryRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 14);

/**
 * The minimum amount of information required to generate a Summary without
 * having a Conversation resource created.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryRequest.MinimalConversation
 */
export type GenerateStatelessSummaryRequest_MinimalConversation = Message<"google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryRequest.MinimalConversation"> & {
  /**
   * Required. The messages that the Summary will be generated from. It is
   * expected that this message content is already redacted and does not
   * contain any PII. Required fields: {content, language_code, participant,
   * participant_role} Optional fields: {send_time} If send_time is not
   * provided, then the messages must be provided in chronological order.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Message messages = 1;
   */
  messages: Message$1[];

  /**
   * Required. The parent resource to charge for the Summary's generation.
   * Format: `projects/<Project ID>/locations/<Location ID>`.
   *
   * @generated from field: string parent = 2;
   */
  parent: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryRequest.MinimalConversation.
 * Use `create(GenerateStatelessSummaryRequest_MinimalConversationSchema)` to create a new message.
 */
export const GenerateStatelessSummaryRequest_MinimalConversationSchema: GenMessage<GenerateStatelessSummaryRequest_MinimalConversation> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 14, 0);

/**
 * The response message for
 * [Conversations.GenerateStatelessSummary][google.cloud.dialogflow.v2beta1.Conversations.GenerateStatelessSummary].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryResponse
 */
export type GenerateStatelessSummaryResponse = Message<"google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryResponse"> & {
  /**
   * Generated summary.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryResponse.Summary summary = 1;
   */
  summary?: GenerateStatelessSummaryResponse_Summary;

  /**
   * The name of the latest conversation message used as context for
   * compiling suggestion. The format is specific to the user and the names of
   * the messages provided.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Number of messages prior to and including
   * [last_conversation_message][] used to compile the suggestion. It may be
   * smaller than the [GenerateStatelessSummaryRequest.context_size][] field in
   * the request if there weren't that many messages in the conversation.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryResponse.
 * Use `create(GenerateStatelessSummaryResponseSchema)` to create a new message.
 */
export const GenerateStatelessSummaryResponseSchema: GenMessage<GenerateStatelessSummaryResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 15);

/**
 * Generated summary for a conversation.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryResponse.Summary
 */
export type GenerateStatelessSummaryResponse_Summary = Message<"google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryResponse.Summary"> & {
  /**
   * The summary content that is concatenated into one string.
   *
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * The summary content that is divided into sections. The key is the
   * section's name and the value is the section's content. There is no
   * specific format for the key or value.
   *
   * @generated from field: map<string, string> text_sections = 2;
   */
  textSections: { [key: string]: string };

  /**
   * The baseline model version used to generate this summary. It is empty if
   * a baseline model was not used to generate this summary.
   *
   * @generated from field: string baseline_model_version = 4;
   */
  baselineModelVersion: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GenerateStatelessSummaryResponse.Summary.
 * Use `create(GenerateStatelessSummaryResponse_SummarySchema)` to create a new message.
 */
export const GenerateStatelessSummaryResponse_SummarySchema: GenMessage<GenerateStatelessSummaryResponse_Summary> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 15, 0);

/**
 * The request message for
 * [Conversations.GenerateStatelessSuggestion][google.cloud.dialogflow.v2beta1.Conversations.GenerateStatelessSuggestion].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GenerateStatelessSuggestionRequest
 */
export type GenerateStatelessSuggestionRequest = Message<"google.cloud.dialogflow.v2beta1.GenerateStatelessSuggestionRequest"> & {
  /**
   * Required. The parent resource to charge for the Suggestion's generation.
   * Format: `projects/<Project ID>/locations/<Location ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Generator.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.GenerateStatelessSuggestionRequest.generator_resource
   */
  generatorResource: {
    /**
     * Uncreated generator. It should be a complete generator that includes all
     * information about the generator.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.Generator generator = 2;
     */
    value: Generator;
    case: "generator";
  } | {
    /**
     * The resource name of the existing created generator. Format:
     * `projects/<Project ID>/locations/<Location ID>/generators/<Generator ID>`
     *
     * @generated from field: string generator_name = 3;
     */
    value: string;
    case: "generatorName";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. Context of the conversation, including transcripts.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.ConversationContext conversation_context = 5;
   */
  conversationContext?: ConversationContext;

  /**
   * Optional. A list of trigger events. Generator will be triggered only if
   * it's trigger event is included here.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.TriggerEvent trigger_events = 6;
   */
  triggerEvents: TriggerEvent[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GenerateStatelessSuggestionRequest.
 * Use `create(GenerateStatelessSuggestionRequestSchema)` to create a new message.
 */
export const GenerateStatelessSuggestionRequestSchema: GenMessage<GenerateStatelessSuggestionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 16);

/**
 * The response message for
 * [Conversations.GenerateStatelessSuggestion][google.cloud.dialogflow.v2beta1.Conversations.GenerateStatelessSuggestion].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GenerateStatelessSuggestionResponse
 */
export type GenerateStatelessSuggestionResponse = Message<"google.cloud.dialogflow.v2beta1.GenerateStatelessSuggestionResponse"> & {
  /**
   * Required. Generated suggestion for a conversation.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.GeneratorSuggestion generator_suggestion = 1;
   */
  generatorSuggestion?: GeneratorSuggestion;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GenerateStatelessSuggestionResponse.
 * Use `create(GenerateStatelessSuggestionResponseSchema)` to create a new message.
 */
export const GenerateStatelessSuggestionResponseSchema: GenMessage<GenerateStatelessSuggestionResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 17);

/**
 * The request message for
 * [Conversations.SearchKnowledge][google.cloud.dialogflow.v2beta1.Conversations.SearchKnowledge].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SearchKnowledgeRequest
 */
export type SearchKnowledgeRequest = Message<"google.cloud.dialogflow.v2beta1.SearchKnowledgeRequest"> & {
  /**
   * Required. The parent resource contains the conversation profile
   * Format: 'projects/<Project ID>' or `projects/<Project
   * ID>/locations/<Location ID>`.
   *
   * @generated from field: string parent = 6;
   */
  parent: string;

  /**
   * Required. The natural language text query for knowledge search.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.TextInput query = 1;
   */
  query?: TextInput;

  /**
   * Required. The conversation profile used to configure the search.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversationProfiles/<Conversation Profile ID>`.
   *
   * @generated from field: string conversation_profile = 2;
   */
  conversationProfile: string;

  /**
   * Required. The ID of the search session.
   * The session_id can be combined with Dialogflow V3 Agent ID retrieved from
   * conversation profile or on its own to identify a search session. The search
   * history of the same session will impact the search result. It's up to the
   * API caller to choose an appropriate `Session ID`. It can be a random number
   * or some type of session identifiers (preferably hashed). The length must
   * not exceed 36 characters.
   *
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * Optional. The conversation (between human agent and end user) where the
   * search request is triggered. Format: `projects/<Project
   * ID>/locations/<Location ID>/conversations/<Conversation ID>`.
   *
   * @generated from field: string conversation = 4;
   */
  conversation: string;

  /**
   * Optional. The name of the latest conversation message when the request is
   * triggered.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 5;
   */
  latestMessage: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SearchKnowledgeRequest.
 * Use `create(SearchKnowledgeRequestSchema)` to create a new message.
 */
export const SearchKnowledgeRequestSchema: GenMessage<SearchKnowledgeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 18);

/**
 * The response message for
 * [Conversations.SearchKnowledge][google.cloud.dialogflow.v2beta1.Conversations.SearchKnowledge].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SearchKnowledgeResponse
 */
export type SearchKnowledgeResponse = Message<"google.cloud.dialogflow.v2beta1.SearchKnowledgeResponse"> & {
  /**
   * Most relevant snippets extracted from articles in the given knowledge base,
   * ordered by confidence.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer answers = 2;
   */
  answers: SearchKnowledgeAnswer[];

  /**
   * The rewritten query used to search knowledge.
   *
   * @generated from field: string rewritten_query = 3;
   */
  rewrittenQuery: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SearchKnowledgeResponse.
 * Use `create(SearchKnowledgeResponseSchema)` to create a new message.
 */
export const SearchKnowledgeResponseSchema: GenMessage<SearchKnowledgeResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 19);

/**
 * Represents a SearchKnowledge answer.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer
 */
export type SearchKnowledgeAnswer = Message<"google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer"> & {
  /**
   * The piece of text from the knowledge base documents that answers
   * the search query
   *
   * @generated from field: string answer = 1;
   */
  answer: string;

  /**
   * The type of the answer.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer.AnswerType answer_type = 2;
   */
  answerType: SearchKnowledgeAnswer_AnswerType;

  /**
   * All sources used to generate the answer.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer.AnswerSource answer_sources = 3;
   */
  answerSources: SearchKnowledgeAnswer_AnswerSource[];

  /**
   * The name of the answer record.
   * Format: `projects/<Project ID>/locations/<location ID>/answer
   * Records/<Answer Record ID>`
   *
   * @generated from field: string answer_record = 5;
   */
  answerRecord: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer.
 * Use `create(SearchKnowledgeAnswerSchema)` to create a new message.
 */
export const SearchKnowledgeAnswerSchema: GenMessage<SearchKnowledgeAnswer> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 20);

/**
 * The sources of the answers.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer.AnswerSource
 */
export type SearchKnowledgeAnswer_AnswerSource = Message<"google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer.AnswerSource"> & {
  /**
   * The title of the article.
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * The URI of the article.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * The relevant snippet of the article.
   *
   * @generated from field: string snippet = 3;
   */
  snippet: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer.AnswerSource.
 * Use `create(SearchKnowledgeAnswer_AnswerSourceSchema)` to create a new message.
 */
export const SearchKnowledgeAnswer_AnswerSourceSchema: GenMessage<SearchKnowledgeAnswer_AnswerSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation, 20, 0);

/**
 * The type of the answer.
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer.AnswerType
 */
export enum SearchKnowledgeAnswer_AnswerType {
  /**
   * The answer has a unspecified type.
   *
   * @generated from enum value: ANSWER_TYPE_UNSPECIFIED = 0;
   */
  ANSWER_TYPE_UNSPECIFIED = 0,

  /**
   * The answer is from FAQ documents.
   *
   * @generated from enum value: FAQ = 1;
   */
  FAQ = 1,

  /**
   * The answer is from generative model.
   *
   * @generated from enum value: GENERATIVE = 2;
   */
  GENERATIVE = 2,

  /**
   * The answer is from intent matching.
   *
   * @generated from enum value: INTENT = 3;
   */
  INTENT = 3,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.SearchKnowledgeAnswer.AnswerType.
 */
export const SearchKnowledgeAnswer_AnswerTypeSchema: GenEnum<SearchKnowledgeAnswer_AnswerType> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_conversation, 20, 0);

/**
 * Service for managing
 * [Conversations][google.cloud.dialogflow.v2beta1.Conversation].
 *
 * @generated from service google.cloud.dialogflow.v2beta1.Conversations
 */
export const Conversations: GenService<{
  /**
   * Creates a new conversation. Conversations are auto-completed after 24
   * hours.
   *
   * Conversation Lifecycle:
   * There are two stages during a conversation: Automated Agent Stage and
   * Assist Stage.
   *
   * For Automated Agent Stage, there will be a dialogflow agent responding to
   * user queries.
   *
   * For Assist Stage, there's no dialogflow agent responding to user queries.
   * But we will provide suggestions which are generated from conversation.
   *
   * If
   * [Conversation.conversation_profile][google.cloud.dialogflow.v2beta1.Conversation.conversation_profile]
   * is configured for a dialogflow agent, conversation will start from
   * `Automated Agent Stage`, otherwise, it will start from `Assist Stage`. And
   * during `Automated Agent Stage`, once an
   * [Intent][google.cloud.dialogflow.v2beta1.Intent] with
   * [Intent.live_agent_handoff][google.cloud.dialogflow.v2beta1.Intent.live_agent_handoff]
   * is triggered, conversation will transfer to Assist Stage.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Conversations.CreateConversation
   */
  createConversation: {
    methodKind: "unary";
    input: typeof CreateConversationRequestSchema;
    output: typeof ConversationSchema;
  },
  /**
   * Returns the list of all conversations in the specified project.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Conversations.ListConversations
   */
  listConversations: {
    methodKind: "unary";
    input: typeof ListConversationsRequestSchema;
    output: typeof ListConversationsResponseSchema;
  },
  /**
   * Retrieves the specific conversation.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Conversations.GetConversation
   */
  getConversation: {
    methodKind: "unary";
    input: typeof GetConversationRequestSchema;
    output: typeof ConversationSchema;
  },
  /**
   * Completes the specified conversation. Finished conversations are purged
   * from the database after 30 days.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Conversations.CompleteConversation
   */
  completeConversation: {
    methodKind: "unary";
    input: typeof CompleteConversationRequestSchema;
    output: typeof ConversationSchema;
  },
  /**
   * Batch ingests messages to conversation. Customers can use this RPC to
   * ingest historical messages to conversation.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Conversations.BatchCreateMessages
   */
  batchCreateMessages: {
    methodKind: "unary";
    input: typeof BatchCreateMessagesRequestSchema;
    output: typeof BatchCreateMessagesResponseSchema;
  },
  /**
   * Lists messages that belong to a given conversation.
   * `messages` are ordered by `create_time` in descending order. To fetch
   * updates without duplication, send request with filter
   * `create_time_epoch_microseconds >
   * [first item's create_time of previous request]` and empty page_token.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Conversations.ListMessages
   */
  listMessages: {
    methodKind: "unary";
    input: typeof ListMessagesRequestSchema;
    output: typeof ListMessagesResponseSchema;
  },
  /**
   * Suggest summary for a conversation based on specific historical messages.
   * The range of the messages to be used for summary can be specified in the
   * request.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Conversations.SuggestConversationSummary
   */
  suggestConversationSummary: {
    methodKind: "unary";
    input: typeof SuggestConversationSummaryRequestSchema;
    output: typeof SuggestConversationSummaryResponseSchema;
  },
  /**
   * Generates and returns a summary for a conversation that does not have a
   * resource created for it.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Conversations.GenerateStatelessSummary
   */
  generateStatelessSummary: {
    methodKind: "unary";
    input: typeof GenerateStatelessSummaryRequestSchema;
    output: typeof GenerateStatelessSummaryResponseSchema;
  },
  /**
   * Generates and returns a suggestion for a conversation that does not have a
   * resource created for it.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Conversations.GenerateStatelessSuggestion
   */
  generateStatelessSuggestion: {
    methodKind: "unary";
    input: typeof GenerateStatelessSuggestionRequestSchema;
    output: typeof GenerateStatelessSuggestionResponseSchema;
  },
  /**
   * Get answers for the given query based on knowledge documents.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Conversations.SearchKnowledge
   */
  searchKnowledge: {
    methodKind: "unary";
    input: typeof SearchKnowledgeRequestSchema;
    output: typeof SearchKnowledgeResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_v2beta1_conversation, 0);

