// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/v2beta1/participant.proto (package google.cloud.dialogflow.v2beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { InputAudioConfig, OutputAudioConfig, TelephonyDtmfEvents } from "./audio_config_pb";
import { file_google_cloud_dialogflow_v2beta1_audio_config } from "./audio_config_pb";
import type { CloudConversationDebuggingInfo, DetectIntentResponse, EventInput, QueryParameters, QueryResult, SentimentAnalysisResult, StreamingRecognitionResult, TextInput } from "./session_pb";
import { file_google_cloud_dialogflow_v2beta1_session } from "./session_pb";
import type { FieldMask, Timestamp, Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { JsonObject, Message as Message$1 } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/v2beta1/participant.proto.
 */
export const file_google_cloud_dialogflow_v2beta1_participant: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_v2beta1_audio_config, file_google_cloud_dialogflow_v2beta1_session, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * Represents a conversation participant (human agent, virtual agent, end-user).
 *
 * @generated from message google.cloud.dialogflow.v2beta1.Participant
 */
export type Participant = Message$1<"google.cloud.dialogflow.v2beta1.Participant"> & {
  /**
   * Optional. The unique identifier of this participant.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Immutable. The role this participant plays in the conversation. This field
   * must be set during participant creation and is then immutable.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Participant.Role role = 2;
   */
  role: Participant_Role;

  /**
   * Optional. Obfuscated user id that should be associated with the created
   * participant.
   *
   * You can specify a user id as follows:
   *
   * 1. If you set this field in
   *    [CreateParticipantRequest][google.cloud.dialogflow.v2beta1.CreateParticipantRequest.participant]
   *    or
   *    [UpdateParticipantRequest][google.cloud.dialogflow.v2beta1.UpdateParticipantRequest.participant],
   *    Dialogflow adds the obfuscated user id with the participant.
   *
   * 2. If you set this field in
   *    [AnalyzeContent][google.cloud.dialogflow.v2beta1.AnalyzeContentRequest.obfuscated_external_user_id]
   *    or
   *    [StreamingAnalyzeContent][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.obfuscated_external_user_id],
   *    Dialogflow will update
   *    [Participant.obfuscated_external_user_id][google.cloud.dialogflow.v2beta1.Participant.obfuscated_external_user_id].
   *
   * Dialogflow uses this user id for billing and measurement. If a user with
   * the same obfuscated_external_user_id is created in a later conversation,
   * Dialogflow will know it's the same user.
   *
   * Dialogflow also uses this user id for Agent Assist suggestion
   * personalization. For example, Dialogflow can use it to provide personalized
   * smart reply suggestions for this user.
   *
   * Note:
   *
   * * Please never pass raw user ids to Dialogflow. Always obfuscate your user
   *   id first.
   * * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a
   *   hash function like SHA-512.
   * * The length of the user id must be <= 256 characters.
   *
   * @generated from field: string obfuscated_external_user_id = 7;
   */
  obfuscatedExternalUserId: string;

  /**
   * Optional. Key-value filters on the metadata of documents returned by
   * article suggestion. If specified, article suggestion only returns suggested
   * documents that match all filters in their
   * [Document.metadata][google.cloud.dialogflow.v2beta1.Document.metadata].
   * Multiple values for a metadata key should be concatenated by comma. For
   * example, filters to match all documents that have 'US' or 'CA' in their
   * market metadata values and 'agent' in their user metadata values will be
   * ```
   * documents_metadata_filters {
   *   key: "market"
   *   value: "US,CA"
   * }
   * documents_metadata_filters {
   *   key: "user"
   *   value: "agent"
   * }
   * ```
   *
   * @generated from field: map<string, string> documents_metadata_filters = 8;
   */
  documentsMetadataFilters: { [key: string]: string };
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.Participant.
 * Use `create(ParticipantSchema)` to create a new message.
 */
export const ParticipantSchema: GenMessage<Participant> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 0);

/**
 * Enumeration of the roles a participant can play in a conversation.
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.Participant.Role
 */
export enum Participant_Role {
  /**
   * Participant role not set.
   *
   * @generated from enum value: ROLE_UNSPECIFIED = 0;
   */
  ROLE_UNSPECIFIED = 0,

  /**
   * Participant is a human agent.
   *
   * @generated from enum value: HUMAN_AGENT = 1;
   */
  HUMAN_AGENT = 1,

  /**
   * Participant is an automated agent, such as a Dialogflow agent.
   *
   * @generated from enum value: AUTOMATED_AGENT = 2;
   */
  AUTOMATED_AGENT = 2,

  /**
   * Participant is an end user that has called or chatted with
   * Dialogflow services.
   *
   * @generated from enum value: END_USER = 3;
   */
  END_USER = 3,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.Participant.Role.
 */
export const Participant_RoleSchema: GenEnum<Participant_Role> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_participant, 0, 0);

/**
 * Represents a message posted into a conversation.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.Message
 */
export type Message = Message$1<"google.cloud.dialogflow.v2beta1.Message"> & {
  /**
   * Optional. The unique identifier of the message.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The message content.
   *
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * Optional. Automated agent responses.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.ResponseMessage response_messages = 11;
   */
  responseMessages: ResponseMessage[];

  /**
   * Optional. The message language.
   * This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt)
   * language tag. Example: "en-US".
   *
   * @generated from field: string language_code = 3;
   */
  languageCode: string;

  /**
   * Output only. The participant that sends this message.
   *
   * @generated from field: string participant = 4;
   */
  participant: string;

  /**
   * Output only. The role of the participant.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Participant.Role participant_role = 5;
   */
  participantRole: Participant_Role;

  /**
   * Output only. The time when the message was created in Contact Center AI.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Optional. The time when the message was sent.
   *
   * @generated from field: google.protobuf.Timestamp send_time = 9;
   */
  sendTime?: Timestamp;

  /**
   * Output only. The annotation for the message.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.MessageAnnotation message_annotation = 7;
   */
  messageAnnotation?: MessageAnnotation;

  /**
   * Output only. The sentiment analysis result for the message.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SentimentAnalysisResult sentiment_analysis = 8;
   */
  sentimentAnalysis?: SentimentAnalysisResult;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
export const MessageSchema: GenMessage<Message> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 1);

/**
 * The request message for
 * [Participants.CreateParticipant][google.cloud.dialogflow.v2beta1.Participants.CreateParticipant].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.CreateParticipantRequest
 */
export type CreateParticipantRequest = Message$1<"google.cloud.dialogflow.v2beta1.CreateParticipantRequest"> & {
  /**
   * Required. Resource identifier of the conversation adding the participant.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The participant to create.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Participant participant = 2;
   */
  participant?: Participant;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.CreateParticipantRequest.
 * Use `create(CreateParticipantRequestSchema)` to create a new message.
 */
export const CreateParticipantRequestSchema: GenMessage<CreateParticipantRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 2);

/**
 * The request message for
 * [Participants.GetParticipant][google.cloud.dialogflow.v2beta1.Participants.GetParticipant].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GetParticipantRequest
 */
export type GetParticipantRequest = Message$1<"google.cloud.dialogflow.v2beta1.GetParticipantRequest"> & {
  /**
   * Required. The name of the participant. Format:
   * `projects/<Project ID>/locations/<Location ID>/conversations/<Conversation
   * ID>/participants/<Participant ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GetParticipantRequest.
 * Use `create(GetParticipantRequestSchema)` to create a new message.
 */
export const GetParticipantRequestSchema: GenMessage<GetParticipantRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 3);

/**
 * The request message for
 * [Participants.ListParticipants][google.cloud.dialogflow.v2beta1.Participants.ListParticipants].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListParticipantsRequest
 */
export type ListParticipantsRequest = Message$1<"google.cloud.dialogflow.v2beta1.ListParticipantsRequest"> & {
  /**
   * Required. The conversation to list all participants from.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of items to return in a single page. By
   * default 100 and at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListParticipantsRequest.
 * Use `create(ListParticipantsRequestSchema)` to create a new message.
 */
export const ListParticipantsRequestSchema: GenMessage<ListParticipantsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 4);

/**
 * The response message for
 * [Participants.ListParticipants][google.cloud.dialogflow.v2beta1.Participants.ListParticipants].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListParticipantsResponse
 */
export type ListParticipantsResponse = Message$1<"google.cloud.dialogflow.v2beta1.ListParticipantsResponse"> & {
  /**
   * The list of participants. There is a maximum number of items
   * returned based on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Participant participants = 1;
   */
  participants: Participant[];

  /**
   * Token to retrieve the next page of results or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListParticipantsResponse.
 * Use `create(ListParticipantsResponseSchema)` to create a new message.
 */
export const ListParticipantsResponseSchema: GenMessage<ListParticipantsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 5);

/**
 * The request message for
 * [Participants.UpdateParticipant][google.cloud.dialogflow.v2beta1.Participants.UpdateParticipant].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.UpdateParticipantRequest
 */
export type UpdateParticipantRequest = Message$1<"google.cloud.dialogflow.v2beta1.UpdateParticipantRequest"> & {
  /**
   * Required. The participant to update.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Participant participant = 1;
   */
  participant?: Participant;

  /**
   * Required. The mask to specify which fields to update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.UpdateParticipantRequest.
 * Use `create(UpdateParticipantRequestSchema)` to create a new message.
 */
export const UpdateParticipantRequestSchema: GenMessage<UpdateParticipantRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 6);

/**
 * Represents the natural language speech audio to be processed.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.AudioInput
 */
export type AudioInput = Message$1<"google.cloud.dialogflow.v2beta1.AudioInput"> & {
  /**
   * Required. Instructs the speech recognizer how to process the speech audio.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.InputAudioConfig config = 1;
   */
  config?: InputAudioConfig;

  /**
   * Required. The natural language speech audio to be processed.
   * A single request can contain up to 2 minutes of speech audio data.
   * The transcribed text cannot contain more than 256 bytes for virtual agent
   * interactions.
   *
   * @generated from field: bytes audio = 2;
   */
  audio: Uint8Array;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.AudioInput.
 * Use `create(AudioInputSchema)` to create a new message.
 */
export const AudioInputSchema: GenMessage<AudioInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 7);

/**
 * Represents the natural language speech audio to be played to the end user.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.OutputAudio
 */
export type OutputAudio = Message$1<"google.cloud.dialogflow.v2beta1.OutputAudio"> & {
  /**
   * Required. Instructs the speech synthesizer how to generate the speech
   * audio.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.OutputAudioConfig config = 1;
   */
  config?: OutputAudioConfig;

  /**
   * Required. The natural language speech audio.
   *
   * @generated from field: bytes audio = 2;
   */
  audio: Uint8Array;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.OutputAudio.
 * Use `create(OutputAudioSchema)` to create a new message.
 */
export const OutputAudioSchema: GenMessage<OutputAudio> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 8);

/**
 * Represents a response from an automated agent.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.AutomatedAgentReply
 */
export type AutomatedAgentReply = Message$1<"google.cloud.dialogflow.v2beta1.AutomatedAgentReply"> & {
  /**
   * Required.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.AutomatedAgentReply.response
   */
  response: {
    /**
     * Response of the Dialogflow
     * [Sessions.DetectIntent][google.cloud.dialogflow.v2beta1.Sessions.DetectIntent]
     * call.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.DetectIntentResponse detect_intent_response = 1;
     */
    value: DetectIntentResponse;
    case: "detectIntentResponse";
  } | { case: undefined; value?: undefined };

  /**
   * Response messages from the automated agent.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.ResponseMessage response_messages = 3;
   */
  responseMessages: ResponseMessage[];

  /**
   * Info on the query match for the automated agent response.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.AutomatedAgentReply.match
   */
  match: {
    /**
     * Name of the intent if an intent is matched for the query.
     * For a V2 query, the value format is `projects/<Project ID>/locations/
     * <Location ID>/agent/intents/<Intent ID>`.
     * For a V3 query, the value format is `projects/<Project ID>/locations/
     * <Location ID>/agents/<Agent ID>/intents/<Intent ID>`.
     *
     * @generated from field: string intent = 4;
     */
    value: string;
    case: "intent";
  } | {
    /**
     * Event name if an event is triggered for the query.
     *
     * @generated from field: string event = 5;
     */
    value: string;
    case: "event";
  } | { case: undefined; value?: undefined };

  /**
   * The confidence of the match. Values range from 0.0 (completely uncertain)
   * to 1.0 (completely certain).
   * This value is for informational purpose only and is only used to help match
   * the best intent within the classification threshold. This value may change
   * for the same end-user expression at any time due to a model retraining or
   * change in implementation.
   *
   * @generated from field: float match_confidence = 9;
   */
  matchConfidence: number;

  /**
   * The collection of current parameters at the time of this response.
   *
   * @generated from field: google.protobuf.Struct parameters = 10;
   */
  parameters?: JsonObject;

  /**
   * The collection of current Dialogflow CX agent session parameters at the
   * time of this response.
   * Deprecated: Use `parameters` instead.
   *
   * @generated from field: google.protobuf.Struct cx_session_parameters = 6 [deprecated = true];
   * @deprecated
   */
  cxSessionParameters?: JsonObject;

  /**
   * AutomatedAgentReply type.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.AutomatedAgentReply.AutomatedAgentReplyType automated_agent_reply_type = 7;
   */
  automatedAgentReplyType: AutomatedAgentReply_AutomatedAgentReplyType;

  /**
   * Indicates whether the partial automated agent reply is interruptible when a
   * later reply message arrives. e.g. if the agent specified some music as
   * partial response, it can be cancelled.
   *
   * @generated from field: bool allow_cancellation = 8;
   */
  allowCancellation: boolean;

  /**
   * The unique identifier of the current Dialogflow CX conversation page.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/pages/<Page ID>`.
   *
   * @generated from field: string cx_current_page = 11;
   */
  cxCurrentPage: string;

  /**
   * The auth code for accessing Call Companion UI.
   *
   * @generated from field: bytes call_companion_auth_code = 12;
   */
  callCompanionAuthCode: Uint8Array;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.AutomatedAgentReply.
 * Use `create(AutomatedAgentReplySchema)` to create a new message.
 */
export const AutomatedAgentReplySchema: GenMessage<AutomatedAgentReply> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 9);

/**
 * Represents different automated agent reply types.
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.AutomatedAgentReply.AutomatedAgentReplyType
 */
export enum AutomatedAgentReply_AutomatedAgentReplyType {
  /**
   * Not specified. This should never happen.
   *
   * @generated from enum value: AUTOMATED_AGENT_REPLY_TYPE_UNSPECIFIED = 0;
   */
  AUTOMATED_AGENT_REPLY_TYPE_UNSPECIFIED = 0,

  /**
   * Partial reply. e.g. Aggregated responses in a `Fulfillment` that enables
   * `return_partial_response` can be returned as partial reply.
   * WARNING: partial reply is not eligible for barge-in.
   *
   * @generated from enum value: PARTIAL = 1;
   */
  PARTIAL = 1,

  /**
   * Final reply.
   *
   * @generated from enum value: FINAL = 2;
   */
  FINAL = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.AutomatedAgentReply.AutomatedAgentReplyType.
 */
export const AutomatedAgentReply_AutomatedAgentReplyTypeSchema: GenEnum<AutomatedAgentReply_AutomatedAgentReplyType> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_participant, 9, 0);

/**
 * Represents the selection of a suggestion.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestionInput
 */
export type SuggestionInput = Message$1<"google.cloud.dialogflow.v2beta1.SuggestionInput"> & {
  /**
   * Required. The ID of a suggestion selected by the human agent.
   * The suggestion(s) were generated in a previous call to
   * request Dialogflow assist.
   * The format is:
   * `projects/<Project ID>/locations/<Location ID>/answerRecords/<Answer Record
   * ID>` where <Answer Record ID> is an alphanumeric string.
   *
   * @generated from field: string answer_record = 1;
   */
  answerRecord: string;

  /**
   * Optional. If the customer edited the suggestion before using it, include
   * the revised text here.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.TextInput text_override = 2;
   */
  textOverride?: TextInput;

  /**
   * In Dialogflow assist for v3, the user can submit a form by sending
   * a [SuggestionInput][google.cloud.dialogflow.v2beta1.SuggestionInput]. The
   * form is uniquely determined by the
   * [answer_record][google.cloud.dialogflow.v2beta1.SuggestionInput.answer_record]
   * field, which identifies a v3
   * [QueryResult][google.cloud.dialogflow.v3alpha1.QueryResult] containing the
   * current [page][google.cloud.dialogflow.v3alpha1.Page]. The form parameters
   * are specified via the
   * [parameters][google.cloud.dialogflow.v2beta1.SuggestionInput.parameters]
   * field.
   *
   * Depending on your protocol or client library language, this is a
   * map, associative array, symbol table, dictionary, or JSON object
   * composed of a collection of (MapKey, MapValue) pairs:
   *
   * * MapKey type: string
   * * MapKey value: parameter name
   * * MapValue type: If parameter's entity type is a composite entity then use
   * map, otherwise, depending on the parameter value type, it could be one of
   * string, number, boolean, null, list or map.
   * * MapValue value: If parameter's entity type is a composite entity then use
   * map from composite entity property names to property values, otherwise,
   * use parameter value.
   *
   * @generated from field: google.protobuf.Struct parameters = 4;
   */
  parameters?: JsonObject;

  /**
   * The intent to be triggered on V3 agent.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.IntentInput intent_input = 6;
   */
  intentInput?: IntentInput;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestionInput.
 * Use `create(SuggestionInputSchema)` to create a new message.
 */
export const SuggestionInputSchema: GenMessage<SuggestionInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 10);

/**
 * Represents the intent to trigger programmatically rather than as a result of
 * natural language processing. The intent input is only used for V3 agent.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.IntentInput
 */
export type IntentInput = Message$1<"google.cloud.dialogflow.v2beta1.IntentInput"> & {
  /**
   * Required. The unique identifier of the intent in V3 agent.
   * Format: `projects/<Project ID>/locations/<Location ID>/locations/<Location
   * ID>/agents/<Agent ID>/intents/<Intent ID>`.
   *
   * @generated from field: string intent = 1;
   */
  intent: string;

  /**
   * Required. The language of this conversational query. See [Language
   * Support](https://cloud.google.com/dialogflow/docs/reference/language)
   * for a list of the currently supported language codes.
   *
   * @generated from field: string language_code = 3;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.IntentInput.
 * Use `create(IntentInputSchema)` to create a new message.
 */
export const IntentInputSchema: GenMessage<IntentInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 11);

/**
 * The type of Human Agent Assistant API suggestion to perform, and the maximum
 * number of results to return for that type. Multiple `Feature` objects can
 * be specified in the `features` list.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestionFeature
 */
export type SuggestionFeature = Message$1<"google.cloud.dialogflow.v2beta1.SuggestionFeature"> & {
  /**
   * Type of Human Agent Assistant API feature to request.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SuggestionFeature.Type type = 1;
   */
  type: SuggestionFeature_Type;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestionFeature.
 * Use `create(SuggestionFeatureSchema)` to create a new message.
 */
export const SuggestionFeatureSchema: GenMessage<SuggestionFeature> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 12);

/**
 * Defines the type of Human Agent Assistant feature.
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.SuggestionFeature.Type
 */
export enum SuggestionFeature_Type {
  /**
   * Unspecified feature type.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Run article suggestion model for chat.
   *
   * @generated from enum value: ARTICLE_SUGGESTION = 1;
   */
  ARTICLE_SUGGESTION = 1,

  /**
   * Run FAQ model.
   *
   * @generated from enum value: FAQ = 2;
   */
  FAQ = 2,

  /**
   * Run smart reply model for chat.
   *
   * @generated from enum value: SMART_REPLY = 3;
   */
  SMART_REPLY = 3,

  /**
   * Run Dialogflow assist model for chat, which will return automated agent
   * response as suggestion.
   *
   * @generated from enum value: DIALOGFLOW_ASSIST = 4;
   */
  DIALOGFLOW_ASSIST = 4,

  /**
   * Run conversation summarization model for chat.
   *
   * @generated from enum value: CONVERSATION_SUMMARIZATION = 8;
   */
  CONVERSATION_SUMMARIZATION = 8,

  /**
   * Run knowledge search with text input from agent or text generated query.
   *
   * @generated from enum value: KNOWLEDGE_SEARCH = 14;
   */
  KNOWLEDGE_SEARCH = 14,

  /**
   * Run knowledge assist with automatic query generation.
   *
   * @generated from enum value: KNOWLEDGE_ASSIST = 15;
   */
  KNOWLEDGE_ASSIST = 15,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.SuggestionFeature.Type.
 */
export const SuggestionFeature_TypeSchema: GenEnum<SuggestionFeature_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_participant, 12, 0);

/**
 * Represents the parameters of human assist query.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.AssistQueryParameters
 */
export type AssistQueryParameters = Message$1<"google.cloud.dialogflow.v2beta1.AssistQueryParameters"> & {
  /**
   * Key-value filters on the metadata of documents returned by article
   * suggestion. If specified, article suggestion only returns suggested
   * documents that match all filters in their
   * [Document.metadata][google.cloud.dialogflow.v2beta1.Document.metadata].
   * Multiple values for a metadata key should be concatenated by comma. For
   * example, filters to match all documents that have 'US' or 'CA' in their
   * market metadata values and 'agent' in their user metadata values will be
   * ```
   * documents_metadata_filters {
   *   key: "market"
   *   value: "US,CA"
   * }
   * documents_metadata_filters {
   *   key: "user"
   *   value: "agent"
   * }
   * ```
   *
   * @generated from field: map<string, string> documents_metadata_filters = 1;
   */
  documentsMetadataFilters: { [key: string]: string };
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.AssistQueryParameters.
 * Use `create(AssistQueryParametersSchema)` to create a new message.
 */
export const AssistQueryParametersSchema: GenMessage<AssistQueryParameters> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 13);

/**
 * The request message for
 * [Participants.AnalyzeContent][google.cloud.dialogflow.v2beta1.Participants.AnalyzeContent].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.AnalyzeContentRequest
 */
export type AnalyzeContentRequest = Message$1<"google.cloud.dialogflow.v2beta1.AnalyzeContentRequest"> & {
  /**
   * Required. The name of the participant this text comes from.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
   *
   * @generated from field: string participant = 1;
   */
  participant: string;

  /**
   * Required. The input content.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.AnalyzeContentRequest.input
   */
  input: {
    /**
     * The natural language text to be processed.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.TextInput text_input = 6;
     */
    value: TextInput;
    case: "textInput";
  } | {
    /**
     * The natural language speech audio to be processed.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.AudioInput audio_input = 7;
     */
    value: AudioInput;
    case: "audioInput";
  } | {
    /**
     * An input event to send to Dialogflow.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.EventInput event_input = 8;
     */
    value: EventInput;
    case: "eventInput";
  } | {
    /**
     * An input representing the selection of a suggestion.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.SuggestionInput suggestion_input = 12;
     */
    value: SuggestionInput;
    case: "suggestionInput";
  } | {
    /**
     * The intent to be triggered on V3 agent.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.IntentInput intent_input = 13;
     */
    value: IntentInput;
    case: "intentInput";
  } | { case: undefined; value?: undefined };

  /**
   * Speech synthesis configuration.
   * The speech synthesis settings for a virtual agent that may be configured
   * for the associated conversation profile are not used when calling
   * AnalyzeContent. If this configuration is not supplied, speech synthesis
   * is disabled.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.OutputAudioConfig reply_audio_config = 5;
   */
  replyAudioConfig?: OutputAudioConfig;

  /**
   * Parameters for a Dialogflow virtual-agent query.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.QueryParameters query_params = 9;
   */
  queryParams?: QueryParameters;

  /**
   * Parameters for a human assist query.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.AssistQueryParameters assist_query_params = 14;
   */
  assistQueryParams?: AssistQueryParameters;

  /**
   * Additional parameters to be put into Dialogflow CX session parameters. To
   * remove a parameter from the session, clients should explicitly set the
   * parameter value to null.
   *
   * Note: this field should only be used if you are connecting to a Dialogflow
   * CX agent.
   *
   * @generated from field: google.protobuf.Struct cx_parameters = 18;
   */
  cxParameters?: JsonObject;

  /**
   * The unique identifier of the CX page to override the `current_page` in the
   * session.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/pages/<Page ID>`.
   *
   * If `cx_current_page` is specified, the previous state of the session will
   * be ignored by Dialogflow CX, including the [previous
   * page][QueryResult.current_page] and the [previous session
   * parameters][QueryResult.parameters]. In most cases, `cx_current_page` and
   * `cx_parameters` should be configured together to direct a session to a
   * specific state.
   *
   * Note: this field should only be used if you are connecting to a Dialogflow
   * CX agent.
   *
   * @generated from field: string cx_current_page = 20;
   */
  cxCurrentPage: string;

  /**
   * Optional. The send time of the message from end user or human agent's
   * perspective. It is used for identifying the same message under one
   * participant.
   *
   * Given two messages under the same participant:
   * * If send time are different regardless of whether the content of the
   * messages are exactly the same, the conversation will regard them as
   * two distinct messages sent by the participant.
   * * If send time is the same regardless of whether the content of the
   * messages are exactly the same, the conversation will regard them as
   * same message, and ignore the message received later.
   *
   * If the value is not provided, a new request will always be regarded as a
   * new message without any de-duplication.
   *
   * @generated from field: google.protobuf.Timestamp message_send_time = 10;
   */
  messageSendTime?: Timestamp;

  /**
   * A unique identifier for this request. Restricted to 36 ASCII characters.
   * A random UUID is recommended.
   * This request is only idempotent if a `request_id` is provided.
   *
   * @generated from field: string request_id = 11;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.AnalyzeContentRequest.
 * Use `create(AnalyzeContentRequestSchema)` to create a new message.
 */
export const AnalyzeContentRequestSchema: GenMessage<AnalyzeContentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 14);

/**
 * The message in the response that indicates the parameters of DTMF.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.DtmfParameters
 */
export type DtmfParameters = Message$1<"google.cloud.dialogflow.v2beta1.DtmfParameters"> & {
  /**
   * Indicates whether DTMF input can be handled in the next request.
   *
   * @generated from field: bool accepts_dtmf_input = 1;
   */
  acceptsDtmfInput: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.DtmfParameters.
 * Use `create(DtmfParametersSchema)` to create a new message.
 */
export const DtmfParametersSchema: GenMessage<DtmfParameters> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 15);

/**
 * The response message for
 * [Participants.AnalyzeContent][google.cloud.dialogflow.v2beta1.Participants.AnalyzeContent].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.AnalyzeContentResponse
 */
export type AnalyzeContentResponse = Message$1<"google.cloud.dialogflow.v2beta1.AnalyzeContentResponse"> & {
  /**
   * Output only. The output text content.
   * This field is set if the automated agent responded with text to show to
   * the user.
   *
   * @generated from field: string reply_text = 1;
   */
  replyText: string;

  /**
   * Optional. The audio data bytes encoded as specified in the request.
   * This field is set if:
   *
   *  - `reply_audio_config` was specified in the request, or
   *  - The automated agent responded with audio to play to the user. In such
   *    case, `reply_audio.config` contains settings used to synthesize the
   *    speech.
   *
   * In some scenarios, multiple output audio fields may be present in the
   * response structure. In these cases, only the top-most-level audio output
   * has content.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.OutputAudio reply_audio = 2;
   */
  replyAudio?: OutputAudio;

  /**
   * Optional. Only set if a Dialogflow automated agent has responded.
   * Note that: [AutomatedAgentReply.detect_intent_response.output_audio][]
   * and [AutomatedAgentReply.detect_intent_response.output_audio_config][]
   * are always empty, use
   * [reply_audio][google.cloud.dialogflow.v2beta1.AnalyzeContentResponse.reply_audio]
   * instead.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.AutomatedAgentReply automated_agent_reply = 3;
   */
  automatedAgentReply?: AutomatedAgentReply;

  /**
   * Output only. Message analyzed by CCAI.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Message message = 5;
   */
  message?: Message;

  /**
   * The suggestions for most recent human agent. The order is the same as
   * [HumanAgentAssistantConfig.SuggestionConfig.feature_configs][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionConfig.feature_configs]
   * of
   * [HumanAgentAssistantConfig.human_agent_suggestion_config][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.human_agent_suggestion_config].
   *
   * Note that any failure of Agent Assist features will not lead to the overall
   * failure of an AnalyzeContent API call. Instead, the features will
   * fail silently with the error field set in the corresponding
   * SuggestionResult.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.SuggestionResult human_agent_suggestion_results = 6;
   */
  humanAgentSuggestionResults: SuggestionResult[];

  /**
   * The suggestions for end user. The order is the same as
   * [HumanAgentAssistantConfig.SuggestionConfig.feature_configs][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionConfig.feature_configs]
   * of
   * [HumanAgentAssistantConfig.end_user_suggestion_config][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.end_user_suggestion_config].
   *
   * Same as human_agent_suggestion_results, any failure of Agent Assist
   * features will not lead to the overall failure of an AnalyzeContent API
   * call. Instead, the features will fail silently with the error field set in
   * the corresponding SuggestionResult.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.SuggestionResult end_user_suggestion_results = 7;
   */
  endUserSuggestionResults: SuggestionResult[];

  /**
   * Indicates the parameters of DTMF.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.DtmfParameters dtmf_parameters = 9;
   */
  dtmfParameters?: DtmfParameters;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.AnalyzeContentResponse.
 * Use `create(AnalyzeContentResponseSchema)` to create a new message.
 */
export const AnalyzeContentResponseSchema: GenMessage<AnalyzeContentResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 16);

/**
 * Defines the language used in the input text.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.InputTextConfig
 */
export type InputTextConfig = Message$1<"google.cloud.dialogflow.v2beta1.InputTextConfig"> & {
  /**
   * Required. The language of this conversational query. See [Language
   * Support](https://cloud.google.com/dialogflow/docs/reference/language)
   * for a list of the currently supported language codes.
   *
   * @generated from field: string language_code = 1;
   */
  languageCode: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.InputTextConfig.
 * Use `create(InputTextConfigSchema)` to create a new message.
 */
export const InputTextConfigSchema: GenMessage<InputTextConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 17);

/**
 * The top-level message sent by the client to the
 * [Participants.StreamingAnalyzeContent][google.cloud.dialogflow.v2beta1.Participants.StreamingAnalyzeContent]
 * method.
 *
 * Multiple request messages should be sent in order:
 *
 * 1.  The first message must contain
 *     [participant][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.participant],
 *     [config][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.config]
 *     and optionally
 *     [query_params][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.query_params].
 *     If you want to receive an audio response, it should also contain
 *     [reply_audio_config][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.reply_audio_config].
 *     The message must not contain
 *     [input][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.input].
 *
 * 2.  If
 * [config][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.config]
 * in the first message
 *     was set to
 *     [audio_config][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.audio_config],
 *     all subsequent messages must contain
 *     [input_audio][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.input_audio]
 *     to continue with Speech recognition. If you decide to rather analyze text
 *     input after you already started Speech recognition, please send a message
 *     with
 *     [StreamingAnalyzeContentRequest.input_text][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.input_text].
 *
 *     However, note that:
 *
 *     * Dialogflow will bill you for the audio so far.
 *     * Dialogflow discards all Speech recognition results in favor of the
 *       text input.
 *
 *  3. If
 *  [StreamingAnalyzeContentRequest.config][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.config]
 *  in the first message was set
 *    to
 *    [StreamingAnalyzeContentRequest.text_config][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.text_config],
 *    then the second message must contain only
 *    [input_text][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.input_text].
 *    Moreover, you must not send more than two messages.
 *
 *  After you sent all input, you must half-close or abort the request stream.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest
 */
export type StreamingAnalyzeContentRequest = Message$1<"google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest"> & {
  /**
   * Required. The name of the participant this text comes from.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
   *
   * @generated from field: string participant = 1;
   */
  participant: string;

  /**
   * Required. The input config.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.config
   */
  config: {
    /**
     * Instructs the speech recognizer how to process the speech audio.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.InputAudioConfig audio_config = 2;
     */
    value: InputAudioConfig;
    case: "audioConfig";
  } | {
    /**
     * The natural language text to be processed.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.InputTextConfig text_config = 3;
     */
    value: InputTextConfig;
    case: "textConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Speech synthesis configuration.
   * The speech synthesis settings for a virtual agent that may be configured
   * for the associated conversation profile are not used when calling
   * StreamingAnalyzeContent. If this configuration is not supplied, speech
   * synthesis is disabled.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.OutputAudioConfig reply_audio_config = 4;
   */
  replyAudioConfig?: OutputAudioConfig;

  /**
   * Required. The input.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.input
   */
  input: {
    /**
     * The input audio content to be recognized. Must be sent if `audio_config`
     * is set in the first message. The complete audio over all streaming
     * messages must not exceed 1 minute.
     *
     * @generated from field: bytes input_audio = 5;
     */
    value: Uint8Array;
    case: "inputAudio";
  } | {
    /**
     * The UTF-8 encoded natural language text to be processed. Must be sent if
     * `text_config` is set in the first message. Text length must not exceed
     * 256 bytes for virtual agent interactions. The `input_text` field can be
     * only sent once, and would cancel the speech recognition if any ongoing.
     *
     * @generated from field: string input_text = 6;
     */
    value: string;
    case: "inputText";
  } | {
    /**
     * The DTMF digits used to invoke intent and fill in parameter value.
     *
     * This input is ignored if the previous response indicated that DTMF input
     * is not accepted.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.TelephonyDtmfEvents input_dtmf = 9;
     */
    value: TelephonyDtmfEvents;
    case: "inputDtmf";
  } | {
    /**
     * The intent to be triggered on V3 agent.
     * Format: `projects/<Project ID>/locations/<Location ID>/locations/
     * <Location ID>/agents/<Agent ID>/intents/<Intent ID>`.
     *
     * @generated from field: string input_intent = 17;
     */
    value: string;
    case: "inputIntent";
  } | {
    /**
     * The input event name.
     * This can only be sent once and would cancel the ongoing speech
     * recognition if any.
     *
     * @generated from field: string input_event = 20;
     */
    value: string;
    case: "inputEvent";
  } | { case: undefined; value?: undefined };

  /**
   * Parameters for a Dialogflow virtual-agent query.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.QueryParameters query_params = 7;
   */
  queryParams?: QueryParameters;

  /**
   * Parameters for a human assist query.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.AssistQueryParameters assist_query_params = 8;
   */
  assistQueryParams?: AssistQueryParameters;

  /**
   * Additional parameters to be put into Dialogflow CX session parameters. To
   * remove a parameter from the session, clients should explicitly set the
   * parameter value to null.
   *
   * Note: this field should only be used if you are connecting to a Dialogflow
   * CX agent.
   *
   * @generated from field: google.protobuf.Struct cx_parameters = 13;
   */
  cxParameters?: JsonObject;

  /**
   * The unique identifier of the CX page to override the `current_page` in the
   * session.
   * Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
   * ID>/flows/<Flow ID>/pages/<Page ID>`.
   *
   * If `cx_current_page` is specified, the previous state of the session will
   * be ignored by Dialogflow CX, including the [previous
   * page][QueryResult.current_page] and the [previous session
   * parameters][QueryResult.parameters]. In most cases, `cx_current_page` and
   * `cx_parameters` should be configured together to direct a session to a
   * specific state.
   *
   * Note: this field should only be used if you are connecting to a Dialogflow
   * CX agent.
   *
   * @generated from field: string cx_current_page = 15;
   */
  cxCurrentPage: string;

  /**
   * Optional. Enable full bidirectional streaming. You can keep streaming the
   * audio until timeout, and there's no need to half close the stream to get
   * the response.
   *
   * Restrictions:
   *
   * - Timeout: 3 mins.
   * - Audio Encoding: only supports
   * [AudioEncoding.AUDIO_ENCODING_LINEAR_16][google.cloud.dialogflow.v2beta1.AudioEncoding.AUDIO_ENCODING_LINEAR_16]
   * and
   * [AudioEncoding.AUDIO_ENCODING_MULAW][google.cloud.dialogflow.v2beta1.AudioEncoding.AUDIO_ENCODING_MULAW]
   * - Lifecycle: conversation should be in `Assist Stage`, go to
   *   [Conversation.CreateConversation][] for more information.
   *
   * InvalidArgument Error will be returned if the one of restriction checks
   * failed.
   *
   * You can find more details in
   * https://cloud.google.com/agent-assist/docs/extended-streaming
   *
   * @generated from field: bool enable_extended_streaming = 11;
   */
  enableExtendedStreaming: boolean;

  /**
   * Enable partial virtual agent responses. If this flag is not enabled,
   * response stream still contains only one final response even if some
   * `Fulfillment`s in Dialogflow virtual agent have been configured to return
   * partial responses.
   *
   * @generated from field: bool enable_partial_automated_agent_reply = 12;
   */
  enablePartialAutomatedAgentReply: boolean;

  /**
   * if true, `StreamingAnalyzeContentResponse.debugging_info` will get
   * populated.
   *
   * @generated from field: bool enable_debugging_info = 19;
   */
  enableDebuggingInfo: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentRequest.
 * Use `create(StreamingAnalyzeContentRequestSchema)` to create a new message.
 */
export const StreamingAnalyzeContentRequestSchema: GenMessage<StreamingAnalyzeContentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 18);

/**
 * The top-level message returned from the `StreamingAnalyzeContent` method.
 *
 * Multiple response messages can be returned in order:
 *
 * 1.  If the input was set to streaming audio, the first one or more messages
 *     contain `recognition_result`. Each `recognition_result` represents a more
 *     complete transcript of what the user said. The last `recognition_result`
 *     has `is_final` set to `true`.
 *
 * 2.  In virtual agent stage: if `enable_partial_automated_agent_reply` is
 *     true, the following N (currently 1 <= N <= 4) messages
 *     contain `automated_agent_reply` and optionally `reply_audio`
 *     returned by the virtual agent. The first (N-1)
 *     `automated_agent_reply`s will have `automated_agent_reply_type` set to
 *     `PARTIAL`. The last `automated_agent_reply` has
 *     `automated_agent_reply_type` set to `FINAL`.
 *     If `enable_partial_automated_agent_reply` is not enabled, response stream
 *     only contains the final reply.
 *
 *     In human assist stage: the following N (N >= 1) messages contain
 *     `human_agent_suggestion_results`, `end_user_suggestion_results` or
 *     `message`.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentResponse
 */
export type StreamingAnalyzeContentResponse = Message$1<"google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentResponse"> & {
  /**
   * The result of speech recognition.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.StreamingRecognitionResult recognition_result = 1;
   */
  recognitionResult?: StreamingRecognitionResult;

  /**
   * Optional. The output text content.
   * This field is set if an automated agent responded with a text for the user.
   *
   * @generated from field: string reply_text = 2;
   */
  replyText: string;

  /**
   * Optional. The audio data bytes encoded as specified in the request.
   * This field is set if:
   *
   *  - The `reply_audio_config` field is specified in the request.
   *  - The automated agent, which this output comes from, responded with audio.
   *    In such case, the `reply_audio.config` field contains settings used to
   *    synthesize the speech.
   *
   * In some scenarios, multiple output audio fields may be present in the
   * response structure. In these cases, only the top-most-level audio output
   * has content.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.OutputAudio reply_audio = 3;
   */
  replyAudio?: OutputAudio;

  /**
   * Optional. Only set if a Dialogflow automated agent has responded.
   * Note that: [AutomatedAgentReply.detect_intent_response.output_audio][]
   * and [AutomatedAgentReply.detect_intent_response.output_audio_config][]
   * are always empty, use
   * [reply_audio][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentResponse.reply_audio]
   * instead.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.AutomatedAgentReply automated_agent_reply = 4;
   */
  automatedAgentReply?: AutomatedAgentReply;

  /**
   * Output only. Message analyzed by CCAI.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Message message = 6;
   */
  message?: Message;

  /**
   * The suggestions for most recent human agent. The order is the same as
   * [HumanAgentAssistantConfig.SuggestionConfig.feature_configs][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionConfig.feature_configs]
   * of
   * [HumanAgentAssistantConfig.human_agent_suggestion_config][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.human_agent_suggestion_config].
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.SuggestionResult human_agent_suggestion_results = 7;
   */
  humanAgentSuggestionResults: SuggestionResult[];

  /**
   * The suggestions for end user. The order is the same as
   * [HumanAgentAssistantConfig.SuggestionConfig.feature_configs][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionConfig.feature_configs]
   * of
   * [HumanAgentAssistantConfig.end_user_suggestion_config][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.end_user_suggestion_config].
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.SuggestionResult end_user_suggestion_results = 8;
   */
  endUserSuggestionResults: SuggestionResult[];

  /**
   * Indicates the parameters of DTMF.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.DtmfParameters dtmf_parameters = 10;
   */
  dtmfParameters?: DtmfParameters;

  /**
   * Debugging info that would get populated when
   * `StreamingAnalyzeContentRequest.enable_debugging_info` is set to true.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.CloudConversationDebuggingInfo debugging_info = 11;
   */
  debuggingInfo?: CloudConversationDebuggingInfo;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentResponse.
 * Use `create(StreamingAnalyzeContentResponseSchema)` to create a new message.
 */
export const StreamingAnalyzeContentResponseSchema: GenMessage<StreamingAnalyzeContentResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 19);

/**
 * Represents a part of a message possibly annotated with an entity. The part
 * can be an entity or purely a part of the message between two entities or
 * message start/end.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.AnnotatedMessagePart
 */
export type AnnotatedMessagePart = Message$1<"google.cloud.dialogflow.v2beta1.AnnotatedMessagePart"> & {
  /**
   * Required. A part of a message possibly annotated with an entity.
   *
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * Optional. The [Dialogflow system entity
   * type](https://cloud.google.com/dialogflow/docs/reference/system-entities)
   * of this message part. If this is empty, Dialogflow could not annotate the
   * phrase part with a system entity.
   *
   * @generated from field: string entity_type = 2;
   */
  entityType: string;

  /**
   * Optional. The [Dialogflow system entity formatted value
   * ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of
   * this message part. For example for a system entity of type
   * `@sys.unit-currency`, this may contain:
   * <pre>
   * {
   *   "amount": 5,
   *   "currency": "USD"
   * }
   * </pre>
   *
   * @generated from field: google.protobuf.Value formatted_value = 3;
   */
  formattedValue?: Value;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.AnnotatedMessagePart.
 * Use `create(AnnotatedMessagePartSchema)` to create a new message.
 */
export const AnnotatedMessagePartSchema: GenMessage<AnnotatedMessagePart> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 20);

/**
 * Represents the result of annotation for the message.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.MessageAnnotation
 */
export type MessageAnnotation = Message$1<"google.cloud.dialogflow.v2beta1.MessageAnnotation"> & {
  /**
   * Optional. The collection of annotated message parts ordered by their
   * position in the message. You can recover the annotated message by
   * concatenating [AnnotatedMessagePart.text].
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.AnnotatedMessagePart parts = 1;
   */
  parts: AnnotatedMessagePart[];

  /**
   * Required. Indicates whether the text message contains entities.
   *
   * @generated from field: bool contain_entities = 2;
   */
  containEntities: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.MessageAnnotation.
 * Use `create(MessageAnnotationSchema)` to create a new message.
 */
export const MessageAnnotationSchema: GenMessage<MessageAnnotation> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 21);

/**
 * Represents article answer.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ArticleAnswer
 */
export type ArticleAnswer = Message$1<"google.cloud.dialogflow.v2beta1.ArticleAnswer"> & {
  /**
   * The article title.
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * The article URI.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * Output only. Article snippets.
   *
   * @generated from field: repeated string snippets = 3;
   */
  snippets: string[];

  /**
   * A map that contains metadata about the answer and the
   * document from which it originates.
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };

  /**
   * The name of answer record, in the format of
   * "projects/<Project ID>/locations/<Location ID>/answerRecords/<Answer Record
   * ID>"
   *
   * @generated from field: string answer_record = 6;
   */
  answerRecord: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ArticleAnswer.
 * Use `create(ArticleAnswerSchema)` to create a new message.
 */
export const ArticleAnswerSchema: GenMessage<ArticleAnswer> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 22);

/**
 * Represents answer from "frequently asked questions".
 *
 * @generated from message google.cloud.dialogflow.v2beta1.FaqAnswer
 */
export type FaqAnswer = Message$1<"google.cloud.dialogflow.v2beta1.FaqAnswer"> & {
  /**
   * The piece of text from the `source` knowledge base document.
   *
   * @generated from field: string answer = 1;
   */
  answer: string;

  /**
   * The system's confidence score that this Knowledge answer is a good match
   * for this conversational query, range from 0.0 (completely uncertain)
   * to 1.0 (completely certain).
   *
   * @generated from field: float confidence = 2;
   */
  confidence: number;

  /**
   * The corresponding FAQ question.
   *
   * @generated from field: string question = 3;
   */
  question: string;

  /**
   * Indicates which Knowledge Document this answer was extracted
   * from.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/agent/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>`.
   *
   * @generated from field: string source = 4;
   */
  source: string;

  /**
   * A map that contains metadata about the answer and the
   * document from which it originates.
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };

  /**
   * The name of answer record, in the format of
   * "projects/<Project ID>/locations/<Location ID>/answerRecords/<Answer Record
   * ID>"
   *
   * @generated from field: string answer_record = 6;
   */
  answerRecord: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.FaqAnswer.
 * Use `create(FaqAnswerSchema)` to create a new message.
 */
export const FaqAnswerSchema: GenMessage<FaqAnswer> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 23);

/**
 * Represents a smart reply answer.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SmartReplyAnswer
 */
export type SmartReplyAnswer = Message$1<"google.cloud.dialogflow.v2beta1.SmartReplyAnswer"> & {
  /**
   * The content of the reply.
   *
   * @generated from field: string reply = 1;
   */
  reply: string;

  /**
   * Smart reply confidence.
   * The system's confidence score that this reply is a good match for
   * this conversation, as a value from 0.0 (completely uncertain) to 1.0
   * (completely certain).
   *
   * @generated from field: float confidence = 2;
   */
  confidence: number;

  /**
   * The name of answer record, in the format of
   * "projects/<Project ID>/locations/<Location ID>/answerRecords/<Answer Record
   * ID>"
   *
   * @generated from field: string answer_record = 3;
   */
  answerRecord: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SmartReplyAnswer.
 * Use `create(SmartReplyAnswerSchema)` to create a new message.
 */
export const SmartReplyAnswerSchema: GenMessage<SmartReplyAnswer> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 24);

/**
 * Represents an intent suggestion.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.IntentSuggestion
 */
export type IntentSuggestion = Message$1<"google.cloud.dialogflow.v2beta1.IntentSuggestion"> & {
  /**
   * The display name of the intent.
   *
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * The name of the intent.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.IntentSuggestion.intent
   */
  intent: {
    /**
     * The unique identifier of this
     * [intent][google.cloud.dialogflow.v2beta1.Intent]. Format:
     * `projects/<Project ID>/locations/<Location ID>/agent/intents/<Intent
     * ID>`.
     *
     * @generated from field: string intent_v2 = 2;
     */
    value: string;
    case: "intentV2";
  } | { case: undefined; value?: undefined };

  /**
   * Human readable description for better understanding an intent like its
   * scope, content, result etc. Maximum character limit: 140 characters.
   *
   * @generated from field: string description = 5;
   */
  description: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.IntentSuggestion.
 * Use `create(IntentSuggestionSchema)` to create a new message.
 */
export const IntentSuggestionSchema: GenMessage<IntentSuggestion> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 25);

/**
 * Represents a Dialogflow assist answer.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.DialogflowAssistAnswer
 */
export type DialogflowAssistAnswer = Message$1<"google.cloud.dialogflow.v2beta1.DialogflowAssistAnswer"> & {
  /**
   * Result from DetectIntent for one matched intent.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.DialogflowAssistAnswer.result
   */
  result: {
    /**
     * Result from v2 agent.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.QueryResult query_result = 1;
     */
    value: QueryResult;
    case: "queryResult";
  } | {
    /**
     * An intent suggestion generated from conversation.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.IntentSuggestion intent_suggestion = 5;
     */
    value: IntentSuggestion;
    case: "intentSuggestion";
  } | { case: undefined; value?: undefined };

  /**
   * The name of answer record, in the format of
   * "projects/<Project ID>/locations/<Location ID>/answerRecords/<Answer Record
   * ID>"
   *
   * @generated from field: string answer_record = 2;
   */
  answerRecord: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.DialogflowAssistAnswer.
 * Use `create(DialogflowAssistAnswerSchema)` to create a new message.
 */
export const DialogflowAssistAnswerSchema: GenMessage<DialogflowAssistAnswer> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 26);

/**
 * One response of different type of suggestion response which is used in
 * the response of
 * [Participants.AnalyzeContent][google.cloud.dialogflow.v2beta1.Participants.AnalyzeContent]
 * and
 * [Participants.AnalyzeContent][google.cloud.dialogflow.v2beta1.Participants.AnalyzeContent],
 * as well as
 * [HumanAgentAssistantEvent][google.cloud.dialogflow.v2beta1.HumanAgentAssistantEvent].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestionResult
 */
export type SuggestionResult = Message$1<"google.cloud.dialogflow.v2beta1.SuggestionResult"> & {
  /**
   * Different type of suggestion response.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.SuggestionResult.suggestion_response
   */
  suggestionResponse: {
    /**
     * Error status if the request failed.
     *
     * @generated from field: google.rpc.Status error = 1;
     */
    value: Status;
    case: "error";
  } | {
    /**
     * SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.SuggestArticlesResponse suggest_articles_response = 2;
     */
    value: SuggestArticlesResponse;
    case: "suggestArticlesResponse";
  } | {
    /**
     * SuggestKnowledgeAssistResponse if request is for KNOWLEDGE_ASSIST.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.SuggestKnowledgeAssistResponse suggest_knowledge_assist_response = 8;
     */
    value: SuggestKnowledgeAssistResponse;
    case: "suggestKnowledgeAssistResponse";
  } | {
    /**
     * SuggestFaqAnswersResponse if request is for FAQ_ANSWER.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.SuggestFaqAnswersResponse suggest_faq_answers_response = 3;
     */
    value: SuggestFaqAnswersResponse;
    case: "suggestFaqAnswersResponse";
  } | {
    /**
     * SuggestSmartRepliesResponse if request is for SMART_REPLY.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.SuggestSmartRepliesResponse suggest_smart_replies_response = 4;
     */
    value: SuggestSmartRepliesResponse;
    case: "suggestSmartRepliesResponse";
  } | {
    /**
     * SuggestDialogflowAssistsResponse if request is for DIALOGFLOW_ASSIST.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.SuggestDialogflowAssistsResponse suggest_dialogflow_assists_response = 5;
     */
    value: SuggestDialogflowAssistsResponse;
    case: "suggestDialogflowAssistsResponse";
  } | {
    /**
     * SuggestDialogflowAssistsResponse if request is for ENTITY_EXTRACTION.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.SuggestDialogflowAssistsResponse suggest_entity_extraction_response = 7;
     */
    value: SuggestDialogflowAssistsResponse;
    case: "suggestEntityExtractionResponse";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestionResult.
 * Use `create(SuggestionResultSchema)` to create a new message.
 */
export const SuggestionResultSchema: GenMessage<SuggestionResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 27);

/**
 * The request message for
 * [Participants.SuggestArticles][google.cloud.dialogflow.v2beta1.Participants.SuggestArticles].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestArticlesRequest
 */
export type SuggestArticlesRequest = Message$1<"google.cloud.dialogflow.v2beta1.SuggestArticlesRequest"> & {
  /**
   * Required. The name of the participant to fetch suggestion for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The name of the latest conversation message to compile suggestion
   * for. If empty, it will be the latest message of the conversation.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Optional. Max number of messages prior to and including
   * [latest_message][google.cloud.dialogflow.v2beta1.SuggestArticlesRequest.latest_message]
   * to use as context when compiling the suggestion. By default 20 and at
   * most 50.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;

  /**
   * Optional. Parameters for a human assist query.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.AssistQueryParameters assist_query_params = 4;
   */
  assistQueryParams?: AssistQueryParameters;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestArticlesRequest.
 * Use `create(SuggestArticlesRequestSchema)` to create a new message.
 */
export const SuggestArticlesRequestSchema: GenMessage<SuggestArticlesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 28);

/**
 * The response message for
 * [Participants.SuggestArticles][google.cloud.dialogflow.v2beta1.Participants.SuggestArticles].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestArticlesResponse
 */
export type SuggestArticlesResponse = Message$1<"google.cloud.dialogflow.v2beta1.SuggestArticlesResponse"> & {
  /**
   * Output only. Articles ordered by score in descending order.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.ArticleAnswer article_answers = 1;
   */
  articleAnswers: ArticleAnswer[];

  /**
   * The name of the latest conversation message used to compile
   * suggestion for.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Number of messages prior to and including
   * [latest_message][google.cloud.dialogflow.v2beta1.SuggestArticlesResponse.latest_message]
   * to compile the suggestion. It may be smaller than the
   * [SuggestArticlesResponse.context_size][google.cloud.dialogflow.v2beta1.SuggestArticlesResponse.context_size]
   * field in the request if there aren't that many messages in the
   * conversation.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestArticlesResponse.
 * Use `create(SuggestArticlesResponseSchema)` to create a new message.
 */
export const SuggestArticlesResponseSchema: GenMessage<SuggestArticlesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 29);

/**
 * The request message for
 * [Participants.SuggestFaqAnswers][google.cloud.dialogflow.v2beta1.Participants.SuggestFaqAnswers].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestFaqAnswersRequest
 */
export type SuggestFaqAnswersRequest = Message$1<"google.cloud.dialogflow.v2beta1.SuggestFaqAnswersRequest"> & {
  /**
   * Required. The name of the participant to fetch suggestion for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The name of the latest conversation message to compile suggestion
   * for. If empty, it will be the latest message of the conversation.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Optional. Max number of messages prior to and including
   * [latest_message] to use as context when compiling the
   * suggestion. By default 20 and at most 50.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;

  /**
   * Optional. Parameters for a human assist query.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.AssistQueryParameters assist_query_params = 4;
   */
  assistQueryParams?: AssistQueryParameters;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestFaqAnswersRequest.
 * Use `create(SuggestFaqAnswersRequestSchema)` to create a new message.
 */
export const SuggestFaqAnswersRequestSchema: GenMessage<SuggestFaqAnswersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 30);

/**
 * The request message for
 * [Participants.SuggestFaqAnswers][google.cloud.dialogflow.v2beta1.Participants.SuggestFaqAnswers].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestFaqAnswersResponse
 */
export type SuggestFaqAnswersResponse = Message$1<"google.cloud.dialogflow.v2beta1.SuggestFaqAnswersResponse"> & {
  /**
   * Output only. Answers extracted from FAQ documents.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.FaqAnswer faq_answers = 1;
   */
  faqAnswers: FaqAnswer[];

  /**
   * The name of the latest conversation message used to compile
   * suggestion for.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Number of messages prior to and including
   * [latest_message][google.cloud.dialogflow.v2beta1.SuggestFaqAnswersResponse.latest_message]
   * to compile the suggestion. It may be smaller than the
   * [SuggestFaqAnswersRequest.context_size][google.cloud.dialogflow.v2beta1.SuggestFaqAnswersRequest.context_size]
   * field in the request if there aren't that many messages in the
   * conversation.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestFaqAnswersResponse.
 * Use `create(SuggestFaqAnswersResponseSchema)` to create a new message.
 */
export const SuggestFaqAnswersResponseSchema: GenMessage<SuggestFaqAnswersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 31);

/**
 * The request message for
 * [Participants.SuggestSmartReplies][google.cloud.dialogflow.v2beta1.Participants.SuggestSmartReplies].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestSmartRepliesRequest
 */
export type SuggestSmartRepliesRequest = Message$1<"google.cloud.dialogflow.v2beta1.SuggestSmartRepliesRequest"> & {
  /**
   * Required. The name of the participant to fetch suggestion for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The current natural language text segment to compile suggestion
   * for. This provides a way for user to get follow up smart reply suggestion
   * after a smart reply selection, without sending a text message.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.TextInput current_text_input = 4;
   */
  currentTextInput?: TextInput;

  /**
   * The name of the latest conversation message to compile suggestion
   * for. If empty, it will be the latest message of the conversation.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Optional. Max number of messages prior to and including
   * [latest_message] to use as context when compiling the
   * suggestion. By default 20 and at most 50.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestSmartRepliesRequest.
 * Use `create(SuggestSmartRepliesRequestSchema)` to create a new message.
 */
export const SuggestSmartRepliesRequestSchema: GenMessage<SuggestSmartRepliesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 32);

/**
 * The response message for
 * [Participants.SuggestSmartReplies][google.cloud.dialogflow.v2beta1.Participants.SuggestSmartReplies].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestSmartRepliesResponse
 */
export type SuggestSmartRepliesResponse = Message$1<"google.cloud.dialogflow.v2beta1.SuggestSmartRepliesResponse"> & {
  /**
   * Output only. Multiple reply options provided by smart reply service. The
   * order is based on the rank of the model prediction.
   * The maximum number of the returned replies is set in SmartReplyConfig.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.SmartReplyAnswer smart_reply_answers = 1;
   */
  smartReplyAnswers: SmartReplyAnswer[];

  /**
   * The name of the latest conversation message used to compile
   * suggestion for.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Number of messages prior to and including
   * [latest_message][google.cloud.dialogflow.v2beta1.SuggestSmartRepliesResponse.latest_message]
   * to compile the suggestion. It may be smaller than the
   * [SuggestSmartRepliesRequest.context_size][google.cloud.dialogflow.v2beta1.SuggestSmartRepliesRequest.context_size]
   * field in the request if there aren't that many messages in the
   * conversation.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestSmartRepliesResponse.
 * Use `create(SuggestSmartRepliesResponseSchema)` to create a new message.
 */
export const SuggestSmartRepliesResponseSchema: GenMessage<SuggestSmartRepliesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 33);

/**
 * The response message for
 * [Participants.SuggestDialogflowAssists][google.cloud.dialogflow.v2beta1.Participants.SuggestDialogflowAssists].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestDialogflowAssistsResponse
 */
export type SuggestDialogflowAssistsResponse = Message$1<"google.cloud.dialogflow.v2beta1.SuggestDialogflowAssistsResponse"> & {
  /**
   * Output only. Multiple reply options provided by Dialogflow assist
   * service. The order is based on the rank of the model prediction.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.DialogflowAssistAnswer dialogflow_assist_answers = 1;
   */
  dialogflowAssistAnswers: DialogflowAssistAnswer[];

  /**
   * The name of the latest conversation message used to suggest answer.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Number of messages prior to and including
   * [latest_message][google.cloud.dialogflow.v2beta1.SuggestDialogflowAssistsResponse.latest_message]
   * to compile the suggestion. It may be smaller than the
   * [SuggestDialogflowAssistsRequest.context_size][google.cloud.dialogflow.v2beta1.SuggestDialogflowAssistsRequest.context_size]
   * field in the request if there aren't that many messages in the
   * conversation.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestDialogflowAssistsResponse.
 * Use `create(SuggestDialogflowAssistsResponseSchema)` to create a new message.
 */
export const SuggestDialogflowAssistsResponseSchema: GenMessage<SuggestDialogflowAssistsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 34);

/**
 * Represents a suggestion for a human agent.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.Suggestion
 * @deprecated
 */
export type Suggestion = Message$1<"google.cloud.dialogflow.v2beta1.Suggestion"> & {
  /**
   * Output only. The name of this suggestion.
   * Format:
   * `projects/<Project ID>/locations/<Location ID>/conversations/<Conversation
   * ID>/participants/*\/suggestions/<Suggestion ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Articles ordered by score in descending order.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Suggestion.Article articles = 2;
   */
  articles: Suggestion_Article[];

  /**
   * Output only. Answers extracted from FAQ documents.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Suggestion.FaqAnswer faq_answers = 4;
   */
  faqAnswers: Suggestion_FaqAnswer[];

  /**
   * Output only. The time the suggestion was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. Latest message used as context to compile this suggestion.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 7;
   */
  latestMessage: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.Suggestion.
 * Use `create(SuggestionSchema)` to create a new message.
 * @deprecated
 */
export const SuggestionSchema: GenMessage<Suggestion> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 35);

/**
 * Represents suggested article.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.Suggestion.Article
 * @deprecated
 */
export type Suggestion_Article = Message$1<"google.cloud.dialogflow.v2beta1.Suggestion.Article"> & {
  /**
   * Output only. The article title.
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * Output only. The article URI.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * Output only. Article snippets.
   *
   * @generated from field: repeated string snippets = 3;
   */
  snippets: string[];

  /**
   * Output only. A map that contains metadata about the answer and the
   * document from which it originates.
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };

  /**
   * Output only. The name of answer record, in the format of
   * "projects/<Project ID>/locations/<Location ID>/answerRecords/<Answer
   * Record ID>"
   *
   * @generated from field: string answer_record = 6;
   */
  answerRecord: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.Suggestion.Article.
 * Use `create(Suggestion_ArticleSchema)` to create a new message.
 * @deprecated
 */
export const Suggestion_ArticleSchema: GenMessage<Suggestion_Article> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 35, 0);

/**
 * Represents suggested answer from "frequently asked questions".
 *
 * @generated from message google.cloud.dialogflow.v2beta1.Suggestion.FaqAnswer
 * @deprecated
 */
export type Suggestion_FaqAnswer = Message$1<"google.cloud.dialogflow.v2beta1.Suggestion.FaqAnswer"> & {
  /**
   * Output only. The piece of text from the `source` knowledge base document.
   *
   * @generated from field: string answer = 1;
   */
  answer: string;

  /**
   * The system's confidence score that this Knowledge answer is a good match
   * for this conversational query, range from 0.0 (completely uncertain)
   * to 1.0 (completely certain).
   *
   * @generated from field: float confidence = 2;
   */
  confidence: number;

  /**
   * Output only. The corresponding FAQ question.
   *
   * @generated from field: string question = 3;
   */
  question: string;

  /**
   * Output only. Indicates which Knowledge Document this answer was extracted
   * from.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/agent/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>`.
   *
   * @generated from field: string source = 4;
   */
  source: string;

  /**
   * Output only. A map that contains metadata about the answer and the
   * document from which it originates.
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };

  /**
   * Output only. The name of answer record, in the format of
   * "projects/<Project ID>/locations/<Location ID>/answerRecords/<Answer
   * Record ID>"
   *
   * @generated from field: string answer_record = 6;
   */
  answerRecord: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.Suggestion.FaqAnswer.
 * Use `create(Suggestion_FaqAnswerSchema)` to create a new message.
 * @deprecated
 */
export const Suggestion_FaqAnswerSchema: GenMessage<Suggestion_FaqAnswer> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 35, 1);

/**
 * The request message for
 * [Participants.ListSuggestions][google.cloud.dialogflow.v2beta1.Participants.ListSuggestions].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListSuggestionsRequest
 * @deprecated
 */
export type ListSuggestionsRequest = Message$1<"google.cloud.dialogflow.v2beta1.ListSuggestionsRequest"> & {
  /**
   * Required. The name of the participant to fetch suggestions for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of items to return in a single page. The
   * default value is 100; the maximum value is 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filter on suggestions fields. Currently predicates on
   * `create_time` and `create_time_epoch_microseconds` are supported.
   * `create_time` only support milliseconds accuracy. E.g.,
   * `create_time_epoch_microseconds > 1551790877964485` or
   * `create_time > "2017-01-15T01:30:15.01Z"`
   *
   * For more information about filtering, see
   * [API Filtering](https://aip.dev/160).
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListSuggestionsRequest.
 * Use `create(ListSuggestionsRequestSchema)` to create a new message.
 * @deprecated
 */
export const ListSuggestionsRequestSchema: GenMessage<ListSuggestionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 36);

/**
 * The response message for
 * [Participants.ListSuggestions][google.cloud.dialogflow.v2beta1.Participants.ListSuggestions].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListSuggestionsResponse
 * @deprecated
 */
export type ListSuggestionsResponse = Message$1<"google.cloud.dialogflow.v2beta1.ListSuggestionsResponse"> & {
  /**
   * Required. The list of suggestions. There will be a maximum number of items
   * returned based on the page_size field in the request. `suggestions` is
   * sorted by `create_time` in descending order.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Suggestion suggestions = 1;
   */
  suggestions: Suggestion[];

  /**
   * Optional. Token to retrieve the next page of results or empty if there are
   * no more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListSuggestionsResponse.
 * Use `create(ListSuggestionsResponseSchema)` to create a new message.
 * @deprecated
 */
export const ListSuggestionsResponseSchema: GenMessage<ListSuggestionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 37);

/**
 * The request message for
 * [Participants.CompileSuggestion][google.cloud.dialogflow.v2beta1.Participants.CompileSuggestion].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.CompileSuggestionRequest
 * @deprecated
 */
export type CompileSuggestionRequest = Message$1<"google.cloud.dialogflow.v2beta1.CompileSuggestionRequest"> & {
  /**
   * Required. The name of the participant to fetch suggestion for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The name of the latest conversation message to compile suggestion
   * for. If empty, it will be the latest message of the conversation.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Optional. Max number of messages prior to and including
   * [latest_message] to use as context when compiling the
   * suggestion. If zero or less than zero, 20 is used.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.CompileSuggestionRequest.
 * Use `create(CompileSuggestionRequestSchema)` to create a new message.
 * @deprecated
 */
export const CompileSuggestionRequestSchema: GenMessage<CompileSuggestionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 38);

/**
 * The response message for
 * [Participants.CompileSuggestion][google.cloud.dialogflow.v2beta1.Participants.CompileSuggestion].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.CompileSuggestionResponse
 * @deprecated
 */
export type CompileSuggestionResponse = Message$1<"google.cloud.dialogflow.v2beta1.CompileSuggestionResponse"> & {
  /**
   * The compiled suggestion.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Suggestion suggestion = 1;
   */
  suggestion?: Suggestion;

  /**
   * The name of the latest conversation message used to compile
   * suggestion for.
   *
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Number of messages prior to and including
   * [latest_message][google.cloud.dialogflow.v2beta1.CompileSuggestionResponse.latest_message]
   * to compile the suggestion. It may be smaller than the
   * [CompileSuggestionRequest.context_size][google.cloud.dialogflow.v2beta1.CompileSuggestionRequest.context_size]
   * field in the request if there aren't that many messages in the
   * conversation.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.CompileSuggestionResponse.
 * Use `create(CompileSuggestionResponseSchema)` to create a new message.
 * @deprecated
 */
export const CompileSuggestionResponseSchema: GenMessage<CompileSuggestionResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 39);

/**
 * Response messages from an automated agent.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ResponseMessage
 */
export type ResponseMessage = Message$1<"google.cloud.dialogflow.v2beta1.ResponseMessage"> & {
  /**
   * Required. The rich response message.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.ResponseMessage.message
   */
  message: {
    /**
     * Returns a text response.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.ResponseMessage.Text text = 1;
     */
    value: ResponseMessage_Text;
    case: "text";
  } | {
    /**
     * Returns a response containing a custom, platform-specific payload.
     *
     * @generated from field: google.protobuf.Struct payload = 2;
     */
    value: JsonObject;
    case: "payload";
  } | {
    /**
     * Hands off conversation to a live agent.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.ResponseMessage.LiveAgentHandoff live_agent_handoff = 3;
     */
    value: ResponseMessage_LiveAgentHandoff;
    case: "liveAgentHandoff";
  } | {
    /**
     * A signal that indicates the interaction with the Dialogflow agent has
     * ended.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.ResponseMessage.EndInteraction end_interaction = 4;
     */
    value: ResponseMessage_EndInteraction;
    case: "endInteraction";
  } | {
    /**
     * An audio response message composed of both the synthesized Dialogflow
     * agent responses and the audios hosted in places known to the client.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.ResponseMessage.MixedAudio mixed_audio = 5;
     */
    value: ResponseMessage_MixedAudio;
    case: "mixedAudio";
  } | {
    /**
     * A signal that the client should transfer the phone call connected to
     * this agent to a third-party endpoint.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.ResponseMessage.TelephonyTransferCall telephony_transfer_call = 6;
     */
    value: ResponseMessage_TelephonyTransferCall;
    case: "telephonyTransferCall";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ResponseMessage.
 * Use `create(ResponseMessageSchema)` to create a new message.
 */
export const ResponseMessageSchema: GenMessage<ResponseMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 40);

/**
 * The text response message.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ResponseMessage.Text
 */
export type ResponseMessage_Text = Message$1<"google.cloud.dialogflow.v2beta1.ResponseMessage.Text"> & {
  /**
   * A collection of text responses.
   *
   * @generated from field: repeated string text = 1;
   */
  text: string[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ResponseMessage.Text.
 * Use `create(ResponseMessage_TextSchema)` to create a new message.
 */
export const ResponseMessage_TextSchema: GenMessage<ResponseMessage_Text> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 40, 0);

/**
 * Indicates that the conversation should be handed off to a human agent.
 *
 * Dialogflow only uses this to determine which conversations were handed off
 * to a human agent for measurement purposes. What else to do with this signal
 * is up to you and your handoff procedures.
 *
 * You may set this, for example:
 *
 * * In the entry fulfillment of a CX Page if entering the page indicates
 *   something went extremely wrong in the conversation.
 * * In a webhook response when you determine that the customer issue can only
 *   be handled by a human.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ResponseMessage.LiveAgentHandoff
 */
export type ResponseMessage_LiveAgentHandoff = Message$1<"google.cloud.dialogflow.v2beta1.ResponseMessage.LiveAgentHandoff"> & {
  /**
   * Custom metadata for your handoff procedure. Dialogflow doesn't impose
   * any structure on this.
   *
   * @generated from field: google.protobuf.Struct metadata = 1;
   */
  metadata?: JsonObject;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ResponseMessage.LiveAgentHandoff.
 * Use `create(ResponseMessage_LiveAgentHandoffSchema)` to create a new message.
 */
export const ResponseMessage_LiveAgentHandoffSchema: GenMessage<ResponseMessage_LiveAgentHandoff> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 40, 1);

/**
 * Indicates that interaction with the Dialogflow agent has ended.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ResponseMessage.EndInteraction
 */
export type ResponseMessage_EndInteraction = Message$1<"google.cloud.dialogflow.v2beta1.ResponseMessage.EndInteraction"> & {
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ResponseMessage.EndInteraction.
 * Use `create(ResponseMessage_EndInteractionSchema)` to create a new message.
 */
export const ResponseMessage_EndInteractionSchema: GenMessage<ResponseMessage_EndInteraction> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 40, 2);

/**
 * Represents an audio message that is composed of both segments
 * synthesized from the Dialogflow agent prompts and ones hosted externally
 * at the specified URIs.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ResponseMessage.MixedAudio
 */
export type ResponseMessage_MixedAudio = Message$1<"google.cloud.dialogflow.v2beta1.ResponseMessage.MixedAudio"> & {
  /**
   * Segments this audio response is composed of.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.ResponseMessage.MixedAudio.Segment segments = 1;
   */
  segments: ResponseMessage_MixedAudio_Segment[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ResponseMessage.MixedAudio.
 * Use `create(ResponseMessage_MixedAudioSchema)` to create a new message.
 */
export const ResponseMessage_MixedAudioSchema: GenMessage<ResponseMessage_MixedAudio> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 40, 3);

/**
 * Represents one segment of audio.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ResponseMessage.MixedAudio.Segment
 */
export type ResponseMessage_MixedAudio_Segment = Message$1<"google.cloud.dialogflow.v2beta1.ResponseMessage.MixedAudio.Segment"> & {
  /**
   * Content of the segment.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.ResponseMessage.MixedAudio.Segment.content
   */
  content: {
    /**
     * Raw audio synthesized from the Dialogflow agent's response using
     * the output config specified in the request.
     *
     * @generated from field: bytes audio = 1;
     */
    value: Uint8Array;
    case: "audio";
  } | {
    /**
     * Client-specific URI that points to an audio clip accessible to the
     * client.
     *
     * @generated from field: string uri = 2;
     */
    value: string;
    case: "uri";
  } | { case: undefined; value?: undefined };

  /**
   * Whether the playback of this segment can be interrupted by the end
   * user's speech and the client should then start the next Dialogflow
   * request.
   *
   * @generated from field: bool allow_playback_interruption = 3;
   */
  allowPlaybackInterruption: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ResponseMessage.MixedAudio.Segment.
 * Use `create(ResponseMessage_MixedAudio_SegmentSchema)` to create a new message.
 */
export const ResponseMessage_MixedAudio_SegmentSchema: GenMessage<ResponseMessage_MixedAudio_Segment> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 40, 3, 0);

/**
 * Represents the signal that telles the client to transfer the phone call
 * connected to the agent to a third-party endpoint.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ResponseMessage.TelephonyTransferCall
 */
export type ResponseMessage_TelephonyTransferCall = Message$1<"google.cloud.dialogflow.v2beta1.ResponseMessage.TelephonyTransferCall"> & {
  /**
   * Endpoint to transfer the call to.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.ResponseMessage.TelephonyTransferCall.endpoint
   */
  endpoint: {
    /**
     * Transfer the call to a phone number
     * in [E.164 format](https://en.wikipedia.org/wiki/E.164).
     *
     * @generated from field: string phone_number = 1;
     */
    value: string;
    case: "phoneNumber";
  } | {
    /**
     * Transfer the call to a SIP endpoint.
     *
     * @generated from field: string sip_uri = 2;
     */
    value: string;
    case: "sipUri";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ResponseMessage.TelephonyTransferCall.
 * Use `create(ResponseMessage_TelephonyTransferCallSchema)` to create a new message.
 */
export const ResponseMessage_TelephonyTransferCallSchema: GenMessage<ResponseMessage_TelephonyTransferCall> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 40, 4);

/**
 * The request message for
 * [Participants.SuggestKnowledgeAssist][google.cloud.dialogflow.v2beta1.Participants.SuggestKnowledgeAssist].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestKnowledgeAssistRequest
 */
export type SuggestKnowledgeAssistRequest = Message$1<"google.cloud.dialogflow.v2beta1.SuggestKnowledgeAssistRequest"> & {
  /**
   * Required. The name of the participant to fetch suggestions for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The name of the latest conversation message to compile
   * suggestions for. If empty, it will be the latest message of the
   * conversation. Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Optional. Max number of messages prior to and including
   * [latest_message][google.cloud.dialogflow.v2beta1.SuggestKnowledgeAssistRequest.latest_message]
   * to use as context when compiling the suggestion. The context size is by
   * default 100 and at most 100.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;

  /**
   * Optional. The previously suggested query for the given conversation. This
   * helps identify whether the next suggestion we generate is resonably
   * different from the previous one. This is useful to avoid similar
   * suggestions within the conversation.
   *
   * @generated from field: string previous_suggested_query = 4;
   */
  previousSuggestedQuery: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestKnowledgeAssistRequest.
 * Use `create(SuggestKnowledgeAssistRequestSchema)` to create a new message.
 */
export const SuggestKnowledgeAssistRequestSchema: GenMessage<SuggestKnowledgeAssistRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 41);

/**
 * The response message for
 * [Participants.SuggestKnowledgeAssist][google.cloud.dialogflow.v2beta1.Participants.SuggestKnowledgeAssist].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SuggestKnowledgeAssistResponse
 */
export type SuggestKnowledgeAssistResponse = Message$1<"google.cloud.dialogflow.v2beta1.SuggestKnowledgeAssistResponse"> & {
  /**
   * Output only. Knowledge Assist suggestion.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer knowledge_assist_answer = 1;
   */
  knowledgeAssistAnswer?: KnowledgeAssistAnswer;

  /**
   * The name of the latest conversation message used to compile suggestion for.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
   *
   * @generated from field: string latest_message = 2;
   */
  latestMessage: string;

  /**
   * Number of messages prior to and including
   * [latest_message][google.cloud.dialogflow.v2beta1.SuggestKnowledgeAssistResponse.latest_message]
   * to compile the suggestion. It may be smaller than the
   * [SuggestKnowledgeAssistRequest.context_size][google.cloud.dialogflow.v2beta1.SuggestKnowledgeAssistRequest.context_size]
   * field in the request if there are fewer messages in the conversation.
   *
   * @generated from field: int32 context_size = 3;
   */
  contextSize: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SuggestKnowledgeAssistResponse.
 * Use `create(SuggestKnowledgeAssistResponseSchema)` to create a new message.
 */
export const SuggestKnowledgeAssistResponseSchema: GenMessage<SuggestKnowledgeAssistResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 42);

/**
 * Represents a Knowledge Assist answer.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer
 */
export type KnowledgeAssistAnswer = Message$1<"google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer"> & {
  /**
   * The query suggested based on the context. Suggestion is made only if it
   * is different from the previous suggestion.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.SuggestedQuery suggested_query = 1;
   */
  suggestedQuery?: KnowledgeAssistAnswer_SuggestedQuery;

  /**
   * The answer generated for the suggested query. Whether or not an answer is
   * generated depends on how confident we are about the generated query.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer suggested_query_answer = 2;
   */
  suggestedQueryAnswer?: KnowledgeAssistAnswer_KnowledgeAnswer;

  /**
   * The name of the answer record.
   * Format: `projects/<Project ID>/locations/<location ID>/answer
   * Records/<Answer Record ID>`.
   *
   * @generated from field: string answer_record = 3;
   */
  answerRecord: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.
 * Use `create(KnowledgeAssistAnswerSchema)` to create a new message.
 */
export const KnowledgeAssistAnswerSchema: GenMessage<KnowledgeAssistAnswer> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 43);

/**
 * Represents a suggested query.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.SuggestedQuery
 */
export type KnowledgeAssistAnswer_SuggestedQuery = Message$1<"google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.SuggestedQuery"> & {
  /**
   * Suggested query text.
   *
   * @generated from field: string query_text = 1;
   */
  queryText: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.SuggestedQuery.
 * Use `create(KnowledgeAssistAnswer_SuggestedQuerySchema)` to create a new message.
 */
export const KnowledgeAssistAnswer_SuggestedQuerySchema: GenMessage<KnowledgeAssistAnswer_SuggestedQuery> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 43, 0);

/**
 * Represents an answer from Knowledge. Currently supports FAQ and Generative
 * answers.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer
 */
export type KnowledgeAssistAnswer_KnowledgeAnswer = Message$1<"google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer"> & {
  /**
   * The piece of text from the `source` that answers this suggested query.
   *
   * @generated from field: string answer_text = 1;
   */
  answerText: string;

  /**
   * Source of result.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.source
   */
  source: {
    /**
     * Populated if the prediction came from FAQ.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.FaqSource faq_source = 3;
     */
    value: KnowledgeAssistAnswer_KnowledgeAnswer_FaqSource;
    case: "faqSource";
  } | {
    /**
     * Populated if the prediction was Generative.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.GenerativeSource generative_source = 4;
     */
    value: KnowledgeAssistAnswer_KnowledgeAnswer_GenerativeSource;
    case: "generativeSource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.
 * Use `create(KnowledgeAssistAnswer_KnowledgeAnswerSchema)` to create a new message.
 */
export const KnowledgeAssistAnswer_KnowledgeAnswerSchema: GenMessage<KnowledgeAssistAnswer_KnowledgeAnswer> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 43, 1);

/**
 * Details about source of FAQ answer.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.FaqSource
 */
export type KnowledgeAssistAnswer_KnowledgeAnswer_FaqSource = Message$1<"google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.FaqSource"> & {
  /**
   * The corresponding FAQ question.
   *
   * @generated from field: string question = 2;
   */
  question: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.FaqSource.
 * Use `create(KnowledgeAssistAnswer_KnowledgeAnswer_FaqSourceSchema)` to create a new message.
 */
export const KnowledgeAssistAnswer_KnowledgeAnswer_FaqSourceSchema: GenMessage<KnowledgeAssistAnswer_KnowledgeAnswer_FaqSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 43, 1, 0);

/**
 * Details about source of Generative answer.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.GenerativeSource
 */
export type KnowledgeAssistAnswer_KnowledgeAnswer_GenerativeSource = Message$1<"google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.GenerativeSource"> & {
  /**
   * All snippets used for this Generative Prediction, with their source URI
   * and data.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.GenerativeSource.Snippet snippets = 1;
   */
  snippets: KnowledgeAssistAnswer_KnowledgeAnswer_GenerativeSource_Snippet[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.GenerativeSource.
 * Use `create(KnowledgeAssistAnswer_KnowledgeAnswer_GenerativeSourceSchema)` to create a new message.
 */
export const KnowledgeAssistAnswer_KnowledgeAnswer_GenerativeSourceSchema: GenMessage<KnowledgeAssistAnswer_KnowledgeAnswer_GenerativeSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 43, 1, 1);

/**
 * Snippet Source for a Generative Prediction.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.GenerativeSource.Snippet
 */
export type KnowledgeAssistAnswer_KnowledgeAnswer_GenerativeSource_Snippet = Message$1<"google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.GenerativeSource.Snippet"> & {
  /**
   * URI the data is sourced from.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * Text taken from that URI.
   *
   * @generated from field: string text = 3;
   */
  text: string;

  /**
   * Title of the document.
   *
   * @generated from field: string title = 4;
   */
  title: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.KnowledgeAssistAnswer.KnowledgeAnswer.GenerativeSource.Snippet.
 * Use `create(KnowledgeAssistAnswer_KnowledgeAnswer_GenerativeSource_SnippetSchema)` to create a new message.
 */
export const KnowledgeAssistAnswer_KnowledgeAnswer_GenerativeSource_SnippetSchema: GenMessage<KnowledgeAssistAnswer_KnowledgeAnswer_GenerativeSource_Snippet> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_participant, 43, 1, 1, 0);

/**
 * Service for managing
 * [Participants][google.cloud.dialogflow.v2beta1.Participant].
 *
 * @generated from service google.cloud.dialogflow.v2beta1.Participants
 */
export const Participants: GenService<{
  /**
   * Creates a new participant in a conversation.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.CreateParticipant
   */
  createParticipant: {
    methodKind: "unary";
    input: typeof CreateParticipantRequestSchema;
    output: typeof ParticipantSchema;
  },
  /**
   * Retrieves a conversation participant.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.GetParticipant
   */
  getParticipant: {
    methodKind: "unary";
    input: typeof GetParticipantRequestSchema;
    output: typeof ParticipantSchema;
  },
  /**
   * Returns the list of all participants in the specified conversation.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.ListParticipants
   */
  listParticipants: {
    methodKind: "unary";
    input: typeof ListParticipantsRequestSchema;
    output: typeof ListParticipantsResponseSchema;
  },
  /**
   * Updates the specified participant.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.UpdateParticipant
   */
  updateParticipant: {
    methodKind: "unary";
    input: typeof UpdateParticipantRequestSchema;
    output: typeof ParticipantSchema;
  },
  /**
   * Adds a text (chat, for example), or audio (phone recording, for example)
   * message from a participant into the conversation.
   *
   * Note: Always use agent versions for production traffic
   * sent to virtual agents. See [Versions and
   * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.AnalyzeContent
   */
  analyzeContent: {
    methodKind: "unary";
    input: typeof AnalyzeContentRequestSchema;
    output: typeof AnalyzeContentResponseSchema;
  },
  /**
   * Adds a text (e.g., chat) or audio (e.g., phone recording) message from a
   * participant into the conversation.
   * Note: This method is only available through the gRPC API (not REST).
   *
   * The top-level message sent to the client by the server is
   * `StreamingAnalyzeContentResponse`. Multiple response messages can be
   * returned in order. The first one or more messages contain the
   * `recognition_result` field. Each result represents a more complete
   * transcript of what the user said. The next message contains the
   * `reply_text` field, and potentially the `reply_audio` and/or the
   * `automated_agent_reply` fields.
   *
   * Note: Always use agent versions for production traffic
   * sent to virtual agents. See [Versions and
   * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.StreamingAnalyzeContent
   */
  streamingAnalyzeContent: {
    methodKind: "bidi_streaming";
    input: typeof StreamingAnalyzeContentRequestSchema;
    output: typeof StreamingAnalyzeContentResponseSchema;
  },
  /**
   * Gets suggested articles for a participant based on specific historical
   * messages.
   *
   * Note that
   * [ListSuggestions][google.cloud.dialogflow.v2beta1.Participants.ListSuggestions]
   * will only list the auto-generated suggestions, while
   * [CompileSuggestion][google.cloud.dialogflow.v2beta1.Participants.CompileSuggestion]
   * will try to compile suggestion based on the provided conversation context
   * in the real time.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.SuggestArticles
   */
  suggestArticles: {
    methodKind: "unary";
    input: typeof SuggestArticlesRequestSchema;
    output: typeof SuggestArticlesResponseSchema;
  },
  /**
   * Gets suggested faq answers for a participant based on specific historical
   * messages.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.SuggestFaqAnswers
   */
  suggestFaqAnswers: {
    methodKind: "unary";
    input: typeof SuggestFaqAnswersRequestSchema;
    output: typeof SuggestFaqAnswersResponseSchema;
  },
  /**
   * Gets smart replies for a participant based on specific historical
   * messages.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.SuggestSmartReplies
   */
  suggestSmartReplies: {
    methodKind: "unary";
    input: typeof SuggestSmartRepliesRequestSchema;
    output: typeof SuggestSmartRepliesResponseSchema;
  },
  /**
   * Gets knowledge assist suggestions based on historical messages.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.SuggestKnowledgeAssist
   */
  suggestKnowledgeAssist: {
    methodKind: "unary";
    input: typeof SuggestKnowledgeAssistRequestSchema;
    output: typeof SuggestKnowledgeAssistResponseSchema;
  },
  /**
   * Deprecated: Use inline suggestion, event based suggestion or
   * Suggestion* API instead.
   * See
   * [HumanAgentAssistantConfig.name][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.name]
   * for more details. Removal Date: 2020-09-01.
   *
   * Retrieves suggestions for live agents.
   *
   * This method should be used by human agent client software to fetch auto
   * generated suggestions in real-time, while the conversation with an end user
   * is in progress. The functionality is implemented in terms of the
   * [list
   * pagination](https://cloud.google.com/apis/design/design_patterns#list_pagination)
   * design pattern. The client app should use the `next_page_token` field
   * to fetch the next batch of suggestions. `suggestions` are sorted by
   * `create_time` in descending order.
   * To fetch latest suggestion, just set `page_size` to 1.
   * To fetch new suggestions without duplication, send request with filter
   * `create_time_epoch_microseconds > [first item's create_time of previous
   * request]` and empty page_token.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.ListSuggestions
   * @deprecated
   */
  listSuggestions: {
    methodKind: "unary";
    input: typeof ListSuggestionsRequestSchema;
    output: typeof ListSuggestionsResponseSchema;
  },
  /**
   * Deprecated. use
   * [SuggestArticles][google.cloud.dialogflow.v2beta1.Participants.SuggestArticles]
   * and
   * [SuggestFaqAnswers][google.cloud.dialogflow.v2beta1.Participants.SuggestFaqAnswers]
   * instead.
   *
   * Gets suggestions for a participant based on specific historical
   * messages.
   *
   * Note that
   * [ListSuggestions][google.cloud.dialogflow.v2beta1.Participants.ListSuggestions]
   * will only list the auto-generated suggestions, while
   * [CompileSuggestion][google.cloud.dialogflow.v2beta1.Participants.CompileSuggestion]
   * will try to compile suggestion based on the provided conversation context
   * in the real time.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Participants.CompileSuggestion
   * @deprecated
   */
  compileSuggestion: {
    methodKind: "unary";
    input: typeof CompileSuggestionRequestSchema;
    output: typeof CompileSuggestionResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_v2beta1_participant, 0);

