// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/v2beta1/session_entity_type.proto (package google.cloud.dialogflow.v2beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EntityType_Entity } from "./entity_type_pb";
import { file_google_cloud_dialogflow_v2beta1_entity_type } from "./entity_type_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/v2beta1/session_entity_type.proto.
 */
export const file_google_cloud_dialogflow_v2beta1_session_entity_type: GenFile = /*@__PURE__*/
  fileDesc("Cjlnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy92MmJldGExL3Nlc3Npb25fZW50aXR5X3R5cGUucHJvdG8SH2dvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyYmV0YTEinAYKEVNlc3Npb25FbnRpdHlUeXBlEgwKBG5hbWUYASABKAkSYwoUZW50aXR5X292ZXJyaWRlX21vZGUYAiABKA4yRS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52MmJldGExLlNlc3Npb25FbnRpdHlUeXBlLkVudGl0eU92ZXJyaWRlTW9kZRJECghlbnRpdGllcxgDIAMoCzIyLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyYmV0YTEuRW50aXR5VHlwZS5FbnRpdHkiggEKEkVudGl0eU92ZXJyaWRlTW9kZRIkCiBFTlRJVFlfT1ZFUlJJREVfTU9ERV9VTlNQRUNJRklFRBAAEiEKHUVOVElUWV9PVkVSUklERV9NT0RFX09WRVJSSURFEAESIwofRU5USVRZX09WRVJSSURFX01PREVfU1VQUExFTUVOVBACOsgD6kHEAworZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9TZXNzaW9uRW50aXR5VHlwZRJFcHJvamVjdHMve3Byb2plY3R9L2FnZW50L3Nlc3Npb25zL3tzZXNzaW9ufS9lbnRpdHlUeXBlcy97ZW50aXR5X3R5cGV9Elpwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vYWdlbnQvc2Vzc2lvbnMve3Nlc3Npb259L2VudGl0eVR5cGVzL3tlbnRpdHlfdHlwZX0SbXByb2plY3RzL3twcm9qZWN0fS9hZ2VudC9lbnZpcm9ubWVudHMve2Vudmlyb25tZW50fS91c2Vycy97dXNlcn0vc2Vzc2lvbnMve3Nlc3Npb259L2VudGl0eVR5cGVzL3tlbnRpdHlfdHlwZX0SggFwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vYWdlbnQvZW52aXJvbm1lbnRzL3tlbnZpcm9ubWVudH0vdXNlcnMve3VzZXJ9L3Nlc3Npb25zL3tzZXNzaW9ufS9lbnRpdHlUeXBlcy97ZW50aXR5X3R5cGV9IosBCh1MaXN0U2Vzc2lvbkVudGl0eVR5cGVzUmVxdWVzdBJDCgZwYXJlbnQYASABKAlCM+BBAvpBLRIrZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9TZXNzaW9uRW50aXR5VHlwZRIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSKLAQoeTGlzdFNlc3Npb25FbnRpdHlUeXBlc1Jlc3BvbnNlElAKFHNlc3Npb25fZW50aXR5X3R5cGVzGAEgAygLMjIuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5TZXNzaW9uRW50aXR5VHlwZRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiYAobR2V0U2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0EkEKBG5hbWUYASABKAlCM+BBAvpBLQorZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9TZXNzaW9uRW50aXR5VHlwZSK7AQoeQ3JlYXRlU2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0EkMKBnBhcmVudBgBIAEoCUIz4EEC+kEtEitkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1Nlc3Npb25FbnRpdHlUeXBlElQKE3Nlc3Npb25fZW50aXR5X3R5cGUYAiABKAsyMi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52MmJldGExLlNlc3Npb25FbnRpdHlUeXBlQgPgQQIipwEKHlVwZGF0ZVNlc3Npb25FbnRpdHlUeXBlUmVxdWVzdBJUChNzZXNzaW9uX2VudGl0eV90eXBlGAEgASgLMjIuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5TZXNzaW9uRW50aXR5VHlwZUID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJjCh5EZWxldGVTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QSQQoEbmFtZRgBIAEoCUIz4EEC+kEtCitkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL1Nlc3Npb25FbnRpdHlUeXBlMvsVChJTZXNzaW9uRW50aXR5VHlwZXMS5AMKFkxpc3RTZXNzaW9uRW50aXR5VHlwZXMSPi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52MmJldGExLkxpc3RTZXNzaW9uRW50aXR5VHlwZXNSZXF1ZXN0Gj8uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5MaXN0U2Vzc2lvbkVudGl0eVR5cGVzUmVzcG9uc2UiyALaQQZwYXJlbnSC0+STArgCWlISUC92MmJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9hZ2VudC9lbnZpcm9ubWVudHMvKi91c2Vycy8qL3Nlc3Npb25zLyp9L2VudGl0eVR5cGVzWkcSRS92MmJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlc1peElwvdjJiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnQvZW52aXJvbm1lbnRzLyovdXNlcnMvKi9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlcxI5L3YyYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2FnZW50L3Nlc3Npb25zLyp9L2VudGl0eVR5cGVzEtEDChRHZXRTZXNzaW9uRW50aXR5VHlwZRI8Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyYmV0YTEuR2V0U2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0GjIuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5TZXNzaW9uRW50aXR5VHlwZSLGAtpBBG5hbWWC0+STArgCWlISUC92MmJldGExL3tuYW1lPXByb2plY3RzLyovYWdlbnQvZW52aXJvbm1lbnRzLyovdXNlcnMvKi9zZXNzaW9ucy8qL2VudGl0eVR5cGVzLyp9WkcSRS92MmJldGExL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnQvc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfVpeElwvdjJiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfRI5L3YyYmV0YTEve25hbWU9cHJvamVjdHMvKi9hZ2VudC9zZXNzaW9ucy8qL2VudGl0eVR5cGVzLyp9EsEEChdDcmVhdGVTZXNzaW9uRW50aXR5VHlwZRI/Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyYmV0YTEuQ3JlYXRlU2Vzc2lvbkVudGl0eVR5cGVSZXF1ZXN0GjIuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5TZXNzaW9uRW50aXR5VHlwZSKwA9pBGnBhcmVudCxzZXNzaW9uX2VudGl0eV90eXBlgtPkkwKMAzoTc2Vzc2lvbl9lbnRpdHlfdHlwZVpnOhNzZXNzaW9uX2VudGl0eV90eXBlIlAvdjJiZXRhMS97cGFyZW50PXByb2plY3RzLyovYWdlbnQvZW52aXJvbm1lbnRzLyovdXNlcnMvKi9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlc1pcOhNzZXNzaW9uX2VudGl0eV90eXBlIkUvdjJiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnQvc2Vzc2lvbnMvKn0vZW50aXR5VHlwZXNaczoTc2Vzc2lvbl9lbnRpdHlfdHlwZSJcL3YyYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKn0vZW50aXR5VHlwZXMiOS92MmJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9hZ2VudC9zZXNzaW9ucy8qfS9lbnRpdHlUeXBlcxKtBQoXVXBkYXRlU2Vzc2lvbkVudGl0eVR5cGUSPy5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52MmJldGExLlVwZGF0ZVNlc3Npb25FbnRpdHlUeXBlUmVxdWVzdBoyLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyYmV0YTEuU2Vzc2lvbkVudGl0eVR5cGUinATaQRNzZXNzaW9uX2VudGl0eV90eXBl2kEfc2Vzc2lvbl9lbnRpdHlfdHlwZSx1cGRhdGVfbWFza4LT5JMC3QM6E3Nlc3Npb25fZW50aXR5X3R5cGVaezoTc2Vzc2lvbl9lbnRpdHlfdHlwZTJkL3YyYmV0YTEve3Nlc3Npb25fZW50aXR5X3R5cGUubmFtZT1wcm9qZWN0cy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfVpwOhNzZXNzaW9uX2VudGl0eV90eXBlMlkvdjJiZXRhMS97c2Vzc2lvbl9lbnRpdHlfdHlwZS5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnQvc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfVqHAToTc2Vzc2lvbl9lbnRpdHlfdHlwZTJwL3YyYmV0YTEve3Nlc3Npb25fZW50aXR5X3R5cGUubmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfTJNL3YyYmV0YTEve3Nlc3Npb25fZW50aXR5X3R5cGUubmFtZT1wcm9qZWN0cy8qL2FnZW50L3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn0SuwMKF0RlbGV0ZVNlc3Npb25FbnRpdHlUeXBlEj8uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5EZWxldGVTZXNzaW9uRW50aXR5VHlwZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkixgLaQQRuYW1lgtPkkwK4AlpSKlAvdjJiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfVpHKkUvdjJiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn1aXipcL3YyYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9lbnZpcm9ubWVudHMvKi91c2Vycy8qL3Nlc3Npb25zLyovZW50aXR5VHlwZXMvKn0qOS92MmJldGExL3tuYW1lPXByb2plY3RzLyovYWdlbnQvc2Vzc2lvbnMvKi9lbnRpdHlUeXBlcy8qfRp4ykEZZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbdJBWWh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9kaWFsb2dmbG93Qq4BCiNjb20uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMUIWU2Vzc2lvbkVudGl0eVR5cGVQcm90b1ABWkNjbG91ZC5nb29nbGUuY29tL2dvL2RpYWxvZ2Zsb3cvYXBpdjJiZXRhMS9kaWFsb2dmbG93cGI7ZGlhbG9nZmxvd3Bi+AEBogICREaqAh9Hb29nbGUuQ2xvdWQuRGlhbG9nZmxvdy5WMkJldGExYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_v2beta1_entity_type, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * A session represents a conversation between a Dialogflow agent and an
 * end-user. You can create special entities, called session entities, during a
 * session. Session entities can extend or replace custom entity types and only
 * exist during the session that they were created for. All session data,
 * including session entities, is stored by Dialogflow for 20 minutes.
 *
 * For more information, see the [session entity
 * guide](https://cloud.google.com/dialogflow/docs/entities-session).
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SessionEntityType
 */
export type SessionEntityType = Message<"google.cloud.dialogflow.v2beta1.SessionEntityType"> & {
  /**
   * Required. The unique identifier of this session entity type. Supported
   * formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity
   *   Type Display Name>`
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>/entityTypes/<Entity Type Display Name>`
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>/entityTypes/<Entity Type Display Name>`
   * - `projects/<Project ID>/locations/<Location ID>/agent/environments/
   *   <Environment ID>/users/<User ID>/sessions/<Session
   *   ID>/entityTypes/<Entity Type Display Name>`
   *
   * If `Location ID` is not specified we assume default 'us' location. If
   * `Environment ID` is not specified, we assume default 'draft' environment.
   * If `User ID` is not specified, we assume default '-' user.
   * `<Entity Type Display Name>` must be the display name of an existing entity
   * type in the same agent that will be overridden or supplemented.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Indicates whether the additional data should override or
   * supplement the custom entity type definition.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SessionEntityType.EntityOverrideMode entity_override_mode = 2;
   */
  entityOverrideMode: SessionEntityType_EntityOverrideMode;

  /**
   * Required. The collection of entities associated with this session entity
   * type.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.EntityType.Entity entities = 3;
   */
  entities: EntityType_Entity[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SessionEntityType.
 * Use `create(SessionEntityTypeSchema)` to create a new message.
 */
export const SessionEntityTypeSchema: GenMessage<SessionEntityType> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_session_entity_type, 0);

/**
 * The types of modifications for a session entity type.
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.SessionEntityType.EntityOverrideMode
 */
export enum SessionEntityType_EntityOverrideMode {
  /**
   * Not specified. This value should be never used.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The collection of session entities overrides the collection of entities
   * in the corresponding custom entity type.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_OVERRIDE = 1;
   */
  OVERRIDE = 1,

  /**
   * The collection of session entities extends the collection of entities in
   * the corresponding custom entity type.
   *
   * Note: Even in this override mode calls to `ListSessionEntityTypes`,
   * `GetSessionEntityType`, `CreateSessionEntityType` and
   * `UpdateSessionEntityType` only return the additional entities added in
   * this session entity type. If you want to get the supplemented list,
   * please call
   * [EntityTypes.GetEntityType][google.cloud.dialogflow.v2beta1.EntityTypes.GetEntityType]
   * on the custom entity type and merge.
   *
   * @generated from enum value: ENTITY_OVERRIDE_MODE_SUPPLEMENT = 2;
   */
  SUPPLEMENT = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.SessionEntityType.EntityOverrideMode.
 */
export const SessionEntityType_EntityOverrideModeSchema: GenEnum<SessionEntityType_EntityOverrideMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_session_entity_type, 0, 0);

/**
 * The request message for
 * [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.v2beta1.SessionEntityTypes.ListSessionEntityTypes].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListSessionEntityTypesRequest
 */
export type ListSessionEntityTypesRequest = Message<"google.cloud.dialogflow.v2beta1.ListSessionEntityTypesRequest"> & {
  /**
   * Required. The session to list all session entity types from.
   * Supported formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>,
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>`,
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>`,
   * - `projects/<Project ID>/locations/<Location
   *   ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session
   *   ID>`,
   *
   * If `Location ID` is not specified we assume default 'us' location. If
   * `Environment ID` is not specified, we assume default 'draft' environment.
   * If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of items to return in a single page. By
   * default 100 and at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListSessionEntityTypesRequest.
 * Use `create(ListSessionEntityTypesRequestSchema)` to create a new message.
 */
export const ListSessionEntityTypesRequestSchema: GenMessage<ListSessionEntityTypesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_session_entity_type, 1);

/**
 * The response message for
 * [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.v2beta1.SessionEntityTypes.ListSessionEntityTypes].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListSessionEntityTypesResponse
 */
export type ListSessionEntityTypesResponse = Message<"google.cloud.dialogflow.v2beta1.ListSessionEntityTypesResponse"> & {
  /**
   * The list of session entity types. There will be a maximum number of items
   * returned based on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.SessionEntityType session_entity_types = 1;
   */
  sessionEntityTypes: SessionEntityType[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListSessionEntityTypesResponse.
 * Use `create(ListSessionEntityTypesResponseSchema)` to create a new message.
 */
export const ListSessionEntityTypesResponseSchema: GenMessage<ListSessionEntityTypesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_session_entity_type, 2);

/**
 * The request message for
 * [SessionEntityTypes.GetSessionEntityType][google.cloud.dialogflow.v2beta1.SessionEntityTypes.GetSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GetSessionEntityTypeRequest
 */
export type GetSessionEntityTypeRequest = Message<"google.cloud.dialogflow.v2beta1.GetSessionEntityTypeRequest"> & {
  /**
   * Required. The name of the session entity type. Supported formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity
   *   Type Display Name>`
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>/entityTypes/<Entity Type Display Name>`
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>/entityTypes/<Entity Type Display Name>`
   * - `projects/<Project ID>/locations/<Location ID>/agent/environments/
   *   <Environment ID>/users/<User ID>/sessions/<Session
   *   ID>/entityTypes/<Entity Type Display Name>`
   *
   * If `Location ID` is not specified we assume default 'us' location. If
   * `Environment ID` is not specified, we assume default 'draft' environment.
   * If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GetSessionEntityTypeRequest.
 * Use `create(GetSessionEntityTypeRequestSchema)` to create a new message.
 */
export const GetSessionEntityTypeRequestSchema: GenMessage<GetSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_session_entity_type, 3);

/**
 * The request message for
 * [SessionEntityTypes.CreateSessionEntityType][google.cloud.dialogflow.v2beta1.SessionEntityTypes.CreateSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.CreateSessionEntityTypeRequest
 */
export type CreateSessionEntityTypeRequest = Message<"google.cloud.dialogflow.v2beta1.CreateSessionEntityTypeRequest"> & {
  /**
   * Required. The session to create a session entity type for.
   * Supported formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>,
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>`,
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>`,
   * - `projects/<Project ID>/locations/<Location
   *   ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session
   *   ID>`,
   *
   * If `Location ID` is not specified we assume default 'us' location. If
   * `Environment ID` is not specified, we assume default 'draft' environment.
   * If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The session entity type to create.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SessionEntityType session_entity_type = 2;
   */
  sessionEntityType?: SessionEntityType;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.CreateSessionEntityTypeRequest.
 * Use `create(CreateSessionEntityTypeRequestSchema)` to create a new message.
 */
export const CreateSessionEntityTypeRequestSchema: GenMessage<CreateSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_session_entity_type, 4);

/**
 * The request message for
 * [SessionEntityTypes.UpdateSessionEntityType][google.cloud.dialogflow.v2beta1.SessionEntityTypes.UpdateSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.UpdateSessionEntityTypeRequest
 */
export type UpdateSessionEntityTypeRequest = Message<"google.cloud.dialogflow.v2beta1.UpdateSessionEntityTypeRequest"> & {
  /**
   * Required. The session entity type to update.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SessionEntityType session_entity_type = 1;
   */
  sessionEntityType?: SessionEntityType;

  /**
   * Optional. The mask to control which fields get updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.UpdateSessionEntityTypeRequest.
 * Use `create(UpdateSessionEntityTypeRequestSchema)` to create a new message.
 */
export const UpdateSessionEntityTypeRequestSchema: GenMessage<UpdateSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_session_entity_type, 5);

/**
 * The request message for
 * [SessionEntityTypes.DeleteSessionEntityType][google.cloud.dialogflow.v2beta1.SessionEntityTypes.DeleteSessionEntityType].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.DeleteSessionEntityTypeRequest
 */
export type DeleteSessionEntityTypeRequest = Message<"google.cloud.dialogflow.v2beta1.DeleteSessionEntityTypeRequest"> & {
  /**
   * Required. The name of the entity type to delete.
   * Supported formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity
   *   Type Display Name>`
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>/entityTypes/<Entity Type Display Name>`
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>/entityTypes/<Entity Type Display Name>`
   * - `projects/<Project ID>/locations/<Location ID>/agent/environments/
   *   <Environment ID>/users/<User ID>/sessions/<Session
   *   ID>/entityTypes/<Entity Type Display Name>`
   *
   * If `Location ID` is not specified we assume default 'us' location. If
   * `Environment ID` is not specified, we assume default 'draft' environment.
   * If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.DeleteSessionEntityTypeRequest.
 * Use `create(DeleteSessionEntityTypeRequestSchema)` to create a new message.
 */
export const DeleteSessionEntityTypeRequestSchema: GenMessage<DeleteSessionEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_session_entity_type, 6);

/**
 * Service for managing
 * [SessionEntityTypes][google.cloud.dialogflow.v2beta1.SessionEntityType].
 *
 * @generated from service google.cloud.dialogflow.v2beta1.SessionEntityTypes
 */
export const SessionEntityTypes: GenService<{
  /**
   * Returns the list of all session entity types in the specified session.
   *
   * This method doesn't work with Google Assistant integration.
   * Contact Dialogflow support if you need to use session entities
   * with Google Assistant integration.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.SessionEntityTypes.ListSessionEntityTypes
   */
  listSessionEntityTypes: {
    methodKind: "unary";
    input: typeof ListSessionEntityTypesRequestSchema;
    output: typeof ListSessionEntityTypesResponseSchema;
  },
  /**
   * Retrieves the specified session entity type.
   *
   * This method doesn't work with Google Assistant integration.
   * Contact Dialogflow support if you need to use session entities
   * with Google Assistant integration.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.SessionEntityTypes.GetSessionEntityType
   */
  getSessionEntityType: {
    methodKind: "unary";
    input: typeof GetSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Creates a session entity type.
   *
   * If the specified session entity type already exists, overrides the
   * session entity type.
   *
   * This method doesn't work with Google Assistant integration.
   * Contact Dialogflow support if you need to use session entities
   * with Google Assistant integration.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.SessionEntityTypes.CreateSessionEntityType
   */
  createSessionEntityType: {
    methodKind: "unary";
    input: typeof CreateSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Updates the specified session entity type.
   *
   * This method doesn't work with Google Assistant integration.
   * Contact Dialogflow support if you need to use session entities
   * with Google Assistant integration.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.SessionEntityTypes.UpdateSessionEntityType
   */
  updateSessionEntityType: {
    methodKind: "unary";
    input: typeof UpdateSessionEntityTypeRequestSchema;
    output: typeof SessionEntityTypeSchema;
  },
  /**
   * Deletes the specified session entity type.
   *
   * This method doesn't work with Google Assistant integration.
   * Contact Dialogflow support if you need to use session entities
   * with Google Assistant integration.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.SessionEntityTypes.DeleteSessionEntityType
   */
  deleteSessionEntityType: {
    methodKind: "unary";
    input: typeof DeleteSessionEntityTypeRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_v2beta1_session_entity_type, 0);

