// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/v2beta1/conversation_profile.proto (package google.cloud.dialogflow.v2beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { SpeechToTextConfig, SynthesizeSpeechConfig } from "./audio_config_pb";
import { file_google_cloud_dialogflow_v2beta1_audio_config } from "./audio_config_pb";
import type { Participant_Role, SuggestionFeature, SuggestionFeature_Type } from "./participant_pb";
import { file_google_cloud_dialogflow_v2beta1_participant } from "./participant_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Duration, EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/v2beta1/conversation_profile.proto.
 */
export const file_google_cloud_dialogflow_v2beta1_conversation_profile: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_dialogflow_v2beta1_audio_config, file_google_cloud_dialogflow_v2beta1_participant, file_google_longrunning_operations, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Defines the services to connect to incoming Dialogflow conversations.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ConversationProfile
 */
export type ConversationProfile = Message<"google.cloud.dialogflow.v2beta1.ConversationProfile"> & {
  /**
   * The unique identifier of this conversation profile.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversationProfiles/<Conversation Profile ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Human readable name for this profile. Max length 1024 bytes.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Output only. Create time of the conversation profile.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 11;
   */
  createTime?: Timestamp;

  /**
   * Output only. Update time of the conversation profile.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 12;
   */
  updateTime?: Timestamp;

  /**
   * Configuration for an automated agent to use with this profile.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.AutomatedAgentConfig automated_agent_config = 3;
   */
  automatedAgentConfig?: AutomatedAgentConfig;

  /**
   * Configuration for agent assistance to use with this profile.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig human_agent_assistant_config = 4;
   */
  humanAgentAssistantConfig?: HumanAgentAssistantConfig;

  /**
   * Configuration for connecting to a live agent.
   *
   * Currently, this feature is not general available, please contact Google
   * to get access.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig human_agent_handoff_config = 5;
   */
  humanAgentHandoffConfig?: HumanAgentHandoffConfig;

  /**
   * Configuration for publishing conversation lifecycle events.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.NotificationConfig notification_config = 6;
   */
  notificationConfig?: NotificationConfig;

  /**
   * Configuration for logging conversation lifecycle events.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.LoggingConfig logging_config = 7;
   */
  loggingConfig?: LoggingConfig;

  /**
   * Configuration for publishing new message events. Event will be sent in
   * format of
   * [ConversationEvent][google.cloud.dialogflow.v2beta1.ConversationEvent]
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.NotificationConfig new_message_event_notification_config = 8;
   */
  newMessageEventNotificationConfig?: NotificationConfig;

  /**
   * Settings for speech transcription.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SpeechToTextConfig stt_config = 9;
   */
  sttConfig?: SpeechToTextConfig;

  /**
   * Language code for the conversation profile. If not specified, the language
   * is en-US. Language at ConversationProfile should be set for all non en-us
   * languages.
   * This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt)
   * language tag. Example: "en-US".
   *
   * @generated from field: string language_code = 10;
   */
  languageCode: string;

  /**
   * The time zone of this conversational profile from the
   * [time zone database](https://www.iana.org/time-zones), e.g.,
   * America/New_York, Europe/Paris. Defaults to America/New_York.
   *
   * @generated from field: string time_zone = 14;
   */
  timeZone: string;

  /**
   * Name of the CX SecuritySettings reference for the agent.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/securitySettings/<Security Settings ID>`.
   *
   * @generated from field: string security_settings = 13;
   */
  securitySettings: string;

  /**
   * Configuration for Text-to-Speech synthesization.
   *
   * Used by Phone Gateway to specify synthesization options. If agent defines
   * synthesization options as well, agent settings overrides the option here.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig tts_config = 18;
   */
  ttsConfig?: SynthesizeSpeechConfig;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ConversationProfile.
 * Use `create(ConversationProfileSchema)` to create a new message.
 */
export const ConversationProfileSchema: GenMessage<ConversationProfile> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 0);

/**
 * Defines the Automated Agent to connect to a conversation.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.AutomatedAgentConfig
 */
export type AutomatedAgentConfig = Message<"google.cloud.dialogflow.v2beta1.AutomatedAgentConfig"> & {
  /**
   * Required. ID of the Dialogflow agent environment to use.
   *
   * This project needs to either be the same project as the conversation or you
   * need to grant `service-<Conversation Project
   * Number>@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow API
   * Service Agent` role in this project.
   *
   * - For ES agents, use format: `projects/<Project ID>/locations/<Location
   * ID>/agent/environments/<Environment ID or '-'>`. If environment is not
   * specified, the default `draft` environment is used. Refer to
   * [DetectIntentRequest](/dialogflow/docs/reference/rpc/google.cloud.dialogflow.v2beta1#google.cloud.dialogflow.v2beta1.DetectIntentRequest)
   * for more details.
   *
   * - For CX agents, use format `projects/<Project ID>/locations/<Location
   * ID>/agents/<Agent ID>/environments/<Environment ID
   * or '-'>`. If environment is not specified, the default `draft` environment
   * is used.
   *
   * @generated from field: string agent = 1;
   */
  agent: string;

  /**
   * Optional. Configure lifetime of the Dialogflow session.
   * By default, a Dialogflow CX session remains active and its data is stored
   * for 30 minutes after the last request is sent for the session.
   * This value should be no longer than 1 day.
   *
   * @generated from field: google.protobuf.Duration session_ttl = 3;
   */
  sessionTtl?: Duration;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.AutomatedAgentConfig.
 * Use `create(AutomatedAgentConfigSchema)` to create a new message.
 */
export const AutomatedAgentConfigSchema: GenMessage<AutomatedAgentConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 1);

/**
 * Defines the Human Agent Assistant to connect to a conversation.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig
 */
export type HumanAgentAssistantConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig"> & {
  /**
   * Pub/Sub topic on which to publish new agent assistant events.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.NotificationConfig notification_config = 2;
   */
  notificationConfig?: NotificationConfig;

  /**
   * Configuration for agent assistance of human agent participant.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionConfig human_agent_suggestion_config = 3;
   */
  humanAgentSuggestionConfig?: HumanAgentAssistantConfig_SuggestionConfig;

  /**
   * Configuration for agent assistance of end user participant.
   *
   * Currently, this feature is not general available, please contact Google
   * to get access.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionConfig end_user_suggestion_config = 4;
   */
  endUserSuggestionConfig?: HumanAgentAssistantConfig_SuggestionConfig;

  /**
   * Configuration for message analysis.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.MessageAnalysisConfig message_analysis_config = 5;
   */
  messageAnalysisConfig?: HumanAgentAssistantConfig_MessageAnalysisConfig;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.
 * Use `create(HumanAgentAssistantConfigSchema)` to create a new message.
 */
export const HumanAgentAssistantConfigSchema: GenMessage<HumanAgentAssistantConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2);

/**
 * Settings of suggestion trigger.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionTriggerSettings
 */
export type HumanAgentAssistantConfig_SuggestionTriggerSettings = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionTriggerSettings"> & {
  /**
   * Do not trigger if last utterance is small talk.
   *
   * @generated from field: bool no_small_talk = 1;
   */
  noSmallTalk: boolean;

  /**
   * Only trigger suggestion if participant role of last utterance is
   * END_USER.
   *
   * @generated from field: bool only_end_user = 2;
   */
  onlyEndUser: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionTriggerSettings.
 * Use `create(HumanAgentAssistantConfig_SuggestionTriggerSettingsSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_SuggestionTriggerSettingsSchema: GenMessage<HumanAgentAssistantConfig_SuggestionTriggerSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 0);

/**
 * Config for suggestion features.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionFeatureConfig
 */
export type HumanAgentAssistantConfig_SuggestionFeatureConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionFeatureConfig"> & {
  /**
   * The suggestion feature.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SuggestionFeature suggestion_feature = 5;
   */
  suggestionFeature?: SuggestionFeature;

  /**
   * Automatically iterates all participants and tries to compile
   * suggestions.
   *
   * Supported features: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST,
   * ENTITY_EXTRACTION, KNOWLEDGE_ASSIST.
   *
   * @generated from field: bool enable_event_based_suggestion = 3;
   */
  enableEventBasedSuggestion: boolean;

  /**
   * Optional. Disable the logging of search queries sent by human agents. It
   * can prevent those queries from being stored at answer records.
   *
   * Supported features: KNOWLEDGE_SEARCH.
   *
   * @generated from field: bool disable_agent_query_logging = 14;
   */
  disableAgentQueryLogging: boolean;

  /**
   * Optional. Enable query suggestion even if we can't find its answer.
   * By default, queries are suggested only if we find its answer.
   * Supported features: KNOWLEDGE_ASSIST
   *
   * @generated from field: bool enable_query_suggestion_when_no_answer = 15;
   */
  enableQuerySuggestionWhenNoAnswer: boolean;

  /**
   * Optional. Enable including conversation context during query answer
   * generation. Supported features: KNOWLEDGE_SEARCH.
   *
   * @generated from field: bool enable_conversation_augmented_query = 16;
   */
  enableConversationAugmentedQuery: boolean;

  /**
   * Optional. Enable query suggestion only.
   * Supported features: KNOWLEDGE_ASSIST
   *
   * @generated from field: bool enable_query_suggestion_only = 17;
   */
  enableQuerySuggestionOnly: boolean;

  /**
   * Settings of suggestion trigger.
   *
   * Currently, only ARTICLE_SUGGESTION, FAQ, and DIALOGFLOW_ASSIST will use
   * this field.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionTriggerSettings suggestion_trigger_settings = 10;
   */
  suggestionTriggerSettings?: HumanAgentAssistantConfig_SuggestionTriggerSettings;

  /**
   * Configs of query.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig query_config = 6;
   */
  queryConfig?: HumanAgentAssistantConfig_SuggestionQueryConfig;

  /**
   * Configs of custom conversation model.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.ConversationModelConfig conversation_model_config = 7;
   */
  conversationModelConfig?: HumanAgentAssistantConfig_ConversationModelConfig;

  /**
   * Configs for processing conversation.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.ConversationProcessConfig conversation_process_config = 8;
   */
  conversationProcessConfig?: HumanAgentAssistantConfig_ConversationProcessConfig;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionFeatureConfig.
 * Use `create(HumanAgentAssistantConfig_SuggestionFeatureConfigSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_SuggestionFeatureConfigSchema: GenMessage<HumanAgentAssistantConfig_SuggestionFeatureConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 1);

/**
 * Detail human agent assistant config.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionConfig
 */
export type HumanAgentAssistantConfig_SuggestionConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionConfig"> & {
  /**
   * Configuration of different suggestion features. One feature can have only
   * one config.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionFeatureConfig feature_configs = 2;
   */
  featureConfigs: HumanAgentAssistantConfig_SuggestionFeatureConfig[];

  /**
   * If `group_suggestion_responses` is false, and there are multiple
   * `feature_configs` in `event based suggestion` or
   * StreamingAnalyzeContent, we will try to deliver suggestions to customers
   * as soon as we get new suggestion. Different type of suggestions based on
   * the same context will be in  separate Pub/Sub event or
   * `StreamingAnalyzeContentResponse`.
   *
   * If `group_suggestion_responses` set to true. All the suggestions to the
   * same participant based on the same context will be grouped into a single
   * Pub/Sub event or StreamingAnalyzeContentResponse.
   *
   * @generated from field: bool group_suggestion_responses = 3;
   */
  groupSuggestionResponses: boolean;

  /**
   * Optional. List of various generator resource names used in the
   * conversation profile.
   *
   * @generated from field: repeated string generators = 4;
   */
  generators: string[];

  /**
   * Optional. When disable_high_latency_features_sync_delivery is true and
   * using the AnalyzeContent API, we will not deliver the responses from high
   * latency features in the API response. The
   * human_agent_assistant_config.notification_config must be configured and
   * enable_event_based_suggestion must be set to true to receive the
   * responses from high latency features in Pub/Sub. High latency feature(s):
   * KNOWLEDGE_ASSIST
   *
   * @generated from field: bool disable_high_latency_features_sync_delivery = 5;
   */
  disableHighLatencyFeaturesSyncDelivery: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionConfig.
 * Use `create(HumanAgentAssistantConfig_SuggestionConfigSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_SuggestionConfigSchema: GenMessage<HumanAgentAssistantConfig_SuggestionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 2);

/**
 * Config for suggestion query.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig
 */
export type HumanAgentAssistantConfig_SuggestionQueryConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig"> & {
  /**
   * Source of query.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.query_source
   */
  querySource: {
    /**
     * Query from knowledgebase. It is used by:
     * ARTICLE_SUGGESTION, FAQ.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource knowledge_base_query_source = 1;
     */
    value: HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource;
    case: "knowledgeBaseQuerySource";
  } | {
    /**
     * Query from knowledge base document. It is used by:
     * SMART_REPLY, SMART_COMPOSE.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource document_query_source = 2;
     */
    value: HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource;
    case: "documentQuerySource";
  } | {
    /**
     * Query from Dialogflow agent. It is used by DIALOGFLOW_ASSIST,
     * ENTITY_EXTRACTION.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource dialogflow_query_source = 3;
     */
    value: HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource;
    case: "dialogflowQuerySource";
  } | { case: undefined; value?: undefined };

  /**
   * Maximum number of results to return. Currently, if unset, defaults to 10.
   * And the max number is 20.
   *
   * @generated from field: int32 max_results = 4;
   */
  maxResults: number;

  /**
   * Confidence threshold of query result.
   *
   * Agent Assist gives each suggestion a score in the range [0.0, 1.0], based
   * on the relevance between the suggestion and the current conversation
   * context. A score of 0.0 has no relevance, while a score of 1.0 has high
   * relevance. Only suggestions with a score greater than or equal to the
   * value of this field are included in the results.
   *
   * For a baseline model (the default), the recommended value is in the range
   * [0.05, 0.1].
   *
   * For a custom model, there is no recommended value. Tune this value by
   * starting from a very low value and slowly increasing until you have
   * desired results.
   *
   * If this field is not set, it is default to 0.0, which means that all
   * suggestions are returned.
   *
   * Supported features: ARTICLE_SUGGESTION, FAQ, SMART_REPLY, SMART_COMPOSE,
   * KNOWLEDGE_SEARCH, KNOWLEDGE_ASSIST, ENTITY_EXTRACTION.
   *
   * @generated from field: float confidence_threshold = 5;
   */
  confidenceThreshold: number;

  /**
   * Determines how recent conversation context is filtered when generating
   * suggestions. If unspecified, no messages will be dropped.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings context_filter_settings = 7;
   */
  contextFilterSettings?: HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings;

  /**
   * Optional. The customized sections chosen to return when requesting a
   * summary of a conversation.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.Sections sections = 8;
   */
  sections?: HumanAgentAssistantConfig_SuggestionQueryConfig_Sections;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.
 * Use `create(HumanAgentAssistantConfig_SuggestionQueryConfigSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_SuggestionQueryConfigSchema: GenMessage<HumanAgentAssistantConfig_SuggestionQueryConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 3);

/**
 * Knowledge base source settings.
 *
 * Supported features: ARTICLE_SUGGESTION, FAQ.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource
 */
export type HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource"> & {
  /**
   * Required. Knowledge bases to query. Format:
   * `projects/<Project ID>/locations/<Location
   * ID>/knowledgeBases/<Knowledge Base ID>`. Currently, only one knowledge
   * base is supported.
   *
   * @generated from field: repeated string knowledge_bases = 1;
   */
  knowledgeBases: string[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.
 * Use `create(HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySourceSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySourceSchema: GenMessage<HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 3, 0);

/**
 * Document source settings.
 *
 * Supported features: SMART_REPLY, SMART_COMPOSE.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource
 */
export type HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource"> & {
  /**
   * Required. Knowledge documents to query from. Format:
   * `projects/<Project ID>/locations/<Location
   * ID>/knowledgeBases/<KnowledgeBase ID>/documents/<Document ID>`.
   * Currently, only one document is supported.
   *
   * @generated from field: repeated string documents = 1;
   */
  documents: string[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.
 * Use `create(HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySourceSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySourceSchema: GenMessage<HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 3, 1);

/**
 * Dialogflow source setting.
 *
 * Supported feature: DIALOGFLOW_ASSIST, ENTITY_EXTRACTION.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource
 */
export type HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource"> & {
  /**
   * Required. The name of a dialogflow virtual agent used for end user side
   * intent detection and suggestion. Format: `projects/<Project
   * ID>/locations/<Location ID>/agent`. When multiple agents are allowed in
   * the same Dialogflow project.
   *
   * @generated from field: string agent = 1;
   */
  agent: string;

  /**
   * The Dialogflow assist configuration for human agent.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource.HumanAgentSideConfig human_agent_side_config = 3;
   */
  humanAgentSideConfig?: HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource_HumanAgentSideConfig;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource.
 * Use `create(HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySourceSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySourceSchema: GenMessage<HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 3, 2);

/**
 * The configuration used for human agent side Dialogflow assist
 * suggestion.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource.HumanAgentSideConfig
 */
export type HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource_HumanAgentSideConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource.HumanAgentSideConfig"> & {
  /**
   * Optional. The name of a dialogflow virtual agent used for intent
   * detection and suggestion triggered by human agent.
   * Format: `projects/<Project ID>/locations/<Location ID>/agent`.
   *
   * @generated from field: string agent = 1;
   */
  agent: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource.HumanAgentSideConfig.
 * Use `create(HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource_HumanAgentSideConfigSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource_HumanAgentSideConfigSchema: GenMessage<HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource_HumanAgentSideConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 3, 2, 0);

/**
 * Settings that determine how to filter recent conversation context when
 * generating suggestions.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings
 */
export type HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings"> & {
  /**
   * If set to true, the last message from virtual agent (hand off message)
   * and the message before it (trigger message of hand off) are dropped.
   *
   * @generated from field: bool drop_handoff_messages = 1;
   */
  dropHandoffMessages: boolean;

  /**
   * If set to true, all messages from virtual agent are dropped.
   *
   * @generated from field: bool drop_virtual_agent_messages = 2;
   */
  dropVirtualAgentMessages: boolean;

  /**
   * If set to true, all messages from ivr stage are dropped.
   *
   * @generated from field: bool drop_ivr_messages = 3;
   */
  dropIvrMessages: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings.
 * Use `create(HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettingsSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettingsSchema: GenMessage<HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 3, 3);

/**
 * Custom sections to return when requesting a summary of a conversation.
 * This is only supported when `baseline_model_version` == '2.0'.
 *
 * Supported features: CONVERSATION_SUMMARIZATION,
 * CONVERSATION_SUMMARIZATION_VOICE.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.Sections
 */
export type HumanAgentAssistantConfig_SuggestionQueryConfig_Sections = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.Sections"> & {
  /**
   * The selected sections chosen to return when requesting a summary of a
   * conversation. A duplicate selected section will be treated as a single
   * selected section. If section types are not provided, the default will
   * be {SITUATION, ACTION, RESULT}.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.Sections.SectionType section_types = 1;
   */
  sectionTypes: HumanAgentAssistantConfig_SuggestionQueryConfig_Sections_SectionType[];
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.Sections.
 * Use `create(HumanAgentAssistantConfig_SuggestionQueryConfig_SectionsSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_SuggestionQueryConfig_SectionsSchema: GenMessage<HumanAgentAssistantConfig_SuggestionQueryConfig_Sections> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 3, 4);

/**
 * Selectable sections to return when requesting a summary of a
 * conversation.
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.Sections.SectionType
 */
export enum HumanAgentAssistantConfig_SuggestionQueryConfig_Sections_SectionType {
  /**
   * Undefined section type, does not return anything.
   *
   * @generated from enum value: SECTION_TYPE_UNSPECIFIED = 0;
   */
  SECTION_TYPE_UNSPECIFIED = 0,

  /**
   * What the customer needs help with or has question about.
   * Section name: "situation".
   *
   * @generated from enum value: SITUATION = 1;
   */
  SITUATION = 1,

  /**
   * What the agent does to help the customer.
   * Section name: "action".
   *
   * @generated from enum value: ACTION = 2;
   */
  ACTION = 2,

  /**
   * Result of the customer service. A single word describing the result
   * of the conversation.
   * Section name: "resolution".
   *
   * @generated from enum value: RESOLUTION = 3;
   */
  RESOLUTION = 3,

  /**
   * Reason for cancellation if the customer requests for a cancellation.
   * "N/A" otherwise.
   * Section name: "reason_for_cancellation".
   *
   * @generated from enum value: REASON_FOR_CANCELLATION = 4;
   */
  REASON_FOR_CANCELLATION = 4,

  /**
   * "Unsatisfied" or "Satisfied" depending on the customer's feelings at
   * the end of the conversation.
   * Section name: "customer_satisfaction".
   *
   * @generated from enum value: CUSTOMER_SATISFACTION = 5;
   */
  CUSTOMER_SATISFACTION = 5,

  /**
   * Key entities extracted from the conversation, such as ticket number,
   * order number, dollar amount, etc.
   * Section names are prefixed by "entities/".
   *
   * @generated from enum value: ENTITIES = 6;
   */
  ENTITIES = 6,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionQueryConfig.Sections.SectionType.
 */
export const HumanAgentAssistantConfig_SuggestionQueryConfig_Sections_SectionTypeSchema: GenEnum<HumanAgentAssistantConfig_SuggestionQueryConfig_Sections_SectionType> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 3, 4, 0);

/**
 * Custom conversation models used in agent assist feature.
 *
 * Supported feature: ARTICLE_SUGGESTION, SMART_COMPOSE, SMART_REPLY,
 * CONVERSATION_SUMMARIZATION.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.ConversationModelConfig
 */
export type HumanAgentAssistantConfig_ConversationModelConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.ConversationModelConfig"> & {
  /**
   * Conversation model resource name. Format: `projects/<Project
   * ID>/conversationModels/<Model ID>`.
   *
   * @generated from field: string model = 1;
   */
  model: string;

  /**
   * Version of current baseline model. It will be ignored if
   * [model][google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.ConversationModelConfig.model]
   * is set. Valid versions are:
   *   Article Suggestion baseline model:
   *     - 0.9
   *     - 1.0 (default)
   *   Summarization baseline model:
   *     - 1.0
   *
   * @generated from field: string baseline_model_version = 8;
   */
  baselineModelVersion: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.ConversationModelConfig.
 * Use `create(HumanAgentAssistantConfig_ConversationModelConfigSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_ConversationModelConfigSchema: GenMessage<HumanAgentAssistantConfig_ConversationModelConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 4);

/**
 * Config to process conversation.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.ConversationProcessConfig
 */
export type HumanAgentAssistantConfig_ConversationProcessConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.ConversationProcessConfig"> & {
  /**
   * Number of recent non-small-talk sentences to use as context for article
   * and FAQ suggestion
   *
   * @generated from field: int32 recent_sentences_count = 2;
   */
  recentSentencesCount: number;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.ConversationProcessConfig.
 * Use `create(HumanAgentAssistantConfig_ConversationProcessConfigSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_ConversationProcessConfigSchema: GenMessage<HumanAgentAssistantConfig_ConversationProcessConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 5);

/**
 * Configuration for analyses to run on each conversation message.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.MessageAnalysisConfig
 */
export type HumanAgentAssistantConfig_MessageAnalysisConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.MessageAnalysisConfig"> & {
  /**
   * Enable entity extraction in conversation messages on [agent assist
   * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages).
   * If unspecified, defaults to false.
   *
   * Currently, this feature is not general available, please contact Google
   * to get access.
   *
   * @generated from field: bool enable_entity_extraction = 2;
   */
  enableEntityExtraction: boolean;

  /**
   * Enable sentiment analysis in conversation messages on [agent assist
   * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages).
   * If unspecified, defaults to false. Sentiment analysis inspects user input
   * and identifies the prevailing subjective opinion, especially to determine
   * a user's attitude as positive, negative, or neutral:
   * https://cloud.google.com/natural-language/docs/basics#sentiment_analysis
   * For
   * [Participants.StreamingAnalyzeContent][google.cloud.dialogflow.v2beta1.Participants.StreamingAnalyzeContent]
   * method, result will be in
   * [StreamingAnalyzeContentResponse.message.SentimentAnalysisResult][google.cloud.dialogflow.v2beta1.StreamingAnalyzeContentResponse.message].
   * For
   * [Participants.AnalyzeContent][google.cloud.dialogflow.v2beta1.Participants.AnalyzeContent]
   * method, result will be in
   * [AnalyzeContentResponse.message.SentimentAnalysisResult][google.cloud.dialogflow.v2beta1.AnalyzeContentResponse.message]
   * For
   * [Conversations.ListMessages][google.cloud.dialogflow.v2beta1.Conversations.ListMessages]
   * method, result will be in
   * [ListMessagesResponse.messages.SentimentAnalysisResult][google.cloud.dialogflow.v2beta1.ListMessagesResponse.messages]
   * If Pub/Sub notification is configured, result will be in
   * [ConversationEvent.new_message_payload.SentimentAnalysisResult][google.cloud.dialogflow.v2beta1.ConversationEvent.new_message_payload].
   *
   * @generated from field: bool enable_sentiment_analysis = 3;
   */
  enableSentimentAnalysis: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.MessageAnalysisConfig.
 * Use `create(HumanAgentAssistantConfig_MessageAnalysisConfigSchema)` to create a new message.
 */
export const HumanAgentAssistantConfig_MessageAnalysisConfigSchema: GenMessage<HumanAgentAssistantConfig_MessageAnalysisConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 2, 6);

/**
 * Defines the hand off to a live agent, typically on which external agent
 * service provider to connect to a conversation.
 *
 * Currently, this feature is not general available, please contact Google
 * to get access.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig
 */
export type HumanAgentHandoffConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig"> & {
  /**
   * Required. Specifies which agent service to connect for human agent handoff.
   *
   * @generated from oneof google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig.agent_service
   */
  agentService: {
    /**
     * Uses [LivePerson](https://www.liveperson.com).
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig.LivePersonConfig live_person_config = 1;
     */
    value: HumanAgentHandoffConfig_LivePersonConfig;
    case: "livePersonConfig";
  } | {
    /**
     * Uses Salesforce Live Agent.
     *
     * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig.SalesforceLiveAgentConfig salesforce_live_agent_config = 2;
     */
    value: HumanAgentHandoffConfig_SalesforceLiveAgentConfig;
    case: "salesforceLiveAgentConfig";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig.
 * Use `create(HumanAgentHandoffConfigSchema)` to create a new message.
 */
export const HumanAgentHandoffConfigSchema: GenMessage<HumanAgentHandoffConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 3);

/**
 * Configuration specific to [LivePerson](https://www.liveperson.com).
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig.LivePersonConfig
 */
export type HumanAgentHandoffConfig_LivePersonConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig.LivePersonConfig"> & {
  /**
   * Required. Account number of the LivePerson account to connect. This is
   * the account number you input at the login page.
   *
   * @generated from field: string account_number = 1;
   */
  accountNumber: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig.LivePersonConfig.
 * Use `create(HumanAgentHandoffConfig_LivePersonConfigSchema)` to create a new message.
 */
export const HumanAgentHandoffConfig_LivePersonConfigSchema: GenMessage<HumanAgentHandoffConfig_LivePersonConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 3, 0);

/**
 * Configuration specific to Salesforce Live Agent.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig.SalesforceLiveAgentConfig
 */
export type HumanAgentHandoffConfig_SalesforceLiveAgentConfig = Message<"google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig.SalesforceLiveAgentConfig"> & {
  /**
   * Required. The organization ID of the Salesforce account.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * Required. Live Agent deployment ID.
   *
   * @generated from field: string deployment_id = 2;
   */
  deploymentId: string;

  /**
   * Required. Live Agent chat button ID.
   *
   * @generated from field: string button_id = 3;
   */
  buttonId: string;

  /**
   * Required. Domain of the Live Agent endpoint for this agent. You can find
   * the endpoint URL in the `Live Agent settings` page. For example if URL
   * has the form https://d.la4-c2-phx.salesforceliveagent.com/...,
   * you should fill in d.la4-c2-phx.salesforceliveagent.com.
   *
   * @generated from field: string endpoint_domain = 4;
   */
  endpointDomain: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.
 * Use `create(HumanAgentHandoffConfig_SalesforceLiveAgentConfigSchema)` to create a new message.
 */
export const HumanAgentHandoffConfig_SalesforceLiveAgentConfigSchema: GenMessage<HumanAgentHandoffConfig_SalesforceLiveAgentConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 3, 1);

/**
 * Defines notification behavior.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.NotificationConfig
 */
export type NotificationConfig = Message<"google.cloud.dialogflow.v2beta1.NotificationConfig"> & {
  /**
   * Name of the Pub/Sub topic to publish conversation
   * events like
   * [CONVERSATION_STARTED][google.cloud.dialogflow.v2beta1.ConversationEvent.Type.CONVERSATION_STARTED]
   * as serialized
   * [ConversationEvent][google.cloud.dialogflow.v2beta1.ConversationEvent]
   * protos.
   *
   * For telephony integration to receive notification, make sure either this
   * topic is in the same project as the conversation or you grant
   * `service-<Conversation Project
   * Number>@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service
   * Agent` role in the topic project.
   *
   * For chat integration to receive notification, make sure API caller has been
   * granted the `Dialogflow Service Agent` role for the topic.
   *
   * Format: `projects/<Project ID>/locations/<Location ID>/topics/<Topic ID>`.
   *
   * @generated from field: string topic = 1;
   */
  topic: string;

  /**
   * Format of message.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.NotificationConfig.MessageFormat message_format = 2;
   */
  messageFormat: NotificationConfig_MessageFormat;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.NotificationConfig.
 * Use `create(NotificationConfigSchema)` to create a new message.
 */
export const NotificationConfigSchema: GenMessage<NotificationConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 4);

/**
 * Format of cloud pub/sub message.
 *
 * @generated from enum google.cloud.dialogflow.v2beta1.NotificationConfig.MessageFormat
 */
export enum NotificationConfig_MessageFormat {
  /**
   * If it is unspecified, PROTO will be used.
   *
   * @generated from enum value: MESSAGE_FORMAT_UNSPECIFIED = 0;
   */
  MESSAGE_FORMAT_UNSPECIFIED = 0,

  /**
   * Pub/Sub message will be serialized proto.
   *
   * @generated from enum value: PROTO = 1;
   */
  PROTO = 1,

  /**
   * Pub/Sub message will be json.
   *
   * @generated from enum value: JSON = 2;
   */
  JSON = 2,
}

/**
 * Describes the enum google.cloud.dialogflow.v2beta1.NotificationConfig.MessageFormat.
 */
export const NotificationConfig_MessageFormatSchema: GenEnum<NotificationConfig_MessageFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 4, 0);

/**
 * Defines logging behavior for conversation lifecycle events.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.LoggingConfig
 */
export type LoggingConfig = Message<"google.cloud.dialogflow.v2beta1.LoggingConfig"> & {
  /**
   * Whether to log conversation events like
   * [CONVERSATION_STARTED][google.cloud.dialogflow.v2beta1.ConversationEvent.Type.CONVERSATION_STARTED]
   * to Stackdriver in the conversation project as JSON format
   * [ConversationEvent][google.cloud.dialogflow.v2beta1.ConversationEvent]
   * protos.
   *
   * @generated from field: bool enable_stackdriver_logging = 3;
   */
  enableStackdriverLogging: boolean;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.LoggingConfig.
 * Use `create(LoggingConfigSchema)` to create a new message.
 */
export const LoggingConfigSchema: GenMessage<LoggingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 5);

/**
 * The request message for
 * [ConversationProfiles.ListConversationProfiles][google.cloud.dialogflow.v2beta1.ConversationProfiles.ListConversationProfiles].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListConversationProfilesRequest
 */
export type ListConversationProfilesRequest = Message<"google.cloud.dialogflow.v2beta1.ListConversationProfilesRequest"> & {
  /**
   * Required. The project to list all conversation profiles from.
   * Format: `projects/<Project ID>/locations/<Location ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return in a single page. By
   * default 100 and at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListConversationProfilesRequest.
 * Use `create(ListConversationProfilesRequestSchema)` to create a new message.
 */
export const ListConversationProfilesRequestSchema: GenMessage<ListConversationProfilesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 6);

/**
 * The response message for
 * [ConversationProfiles.ListConversationProfiles][google.cloud.dialogflow.v2beta1.ConversationProfiles.ListConversationProfiles].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListConversationProfilesResponse
 */
export type ListConversationProfilesResponse = Message<"google.cloud.dialogflow.v2beta1.ListConversationProfilesResponse"> & {
  /**
   * The list of project conversation profiles. There is a maximum number
   * of items returned based on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.ConversationProfile conversation_profiles = 1;
   */
  conversationProfiles: ConversationProfile[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListConversationProfilesResponse.
 * Use `create(ListConversationProfilesResponseSchema)` to create a new message.
 */
export const ListConversationProfilesResponseSchema: GenMessage<ListConversationProfilesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 7);

/**
 * The request message for
 * [ConversationProfiles.GetConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfiles.GetConversationProfile].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GetConversationProfileRequest
 */
export type GetConversationProfileRequest = Message<"google.cloud.dialogflow.v2beta1.GetConversationProfileRequest"> & {
  /**
   * Required. The resource name of the conversation profile.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversationProfiles/<Conversation Profile ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GetConversationProfileRequest.
 * Use `create(GetConversationProfileRequestSchema)` to create a new message.
 */
export const GetConversationProfileRequestSchema: GenMessage<GetConversationProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 8);

/**
 * The request message for
 * [ConversationProfiles.CreateConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfiles.CreateConversationProfile].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.CreateConversationProfileRequest
 */
export type CreateConversationProfileRequest = Message<"google.cloud.dialogflow.v2beta1.CreateConversationProfileRequest"> & {
  /**
   * Required. The project to create a conversation profile for.
   * Format: `projects/<Project ID>/locations/<Location ID>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The conversation profile to create.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.ConversationProfile conversation_profile = 2;
   */
  conversationProfile?: ConversationProfile;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.CreateConversationProfileRequest.
 * Use `create(CreateConversationProfileRequestSchema)` to create a new message.
 */
export const CreateConversationProfileRequestSchema: GenMessage<CreateConversationProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 9);

/**
 * The request message for
 * [ConversationProfiles.UpdateConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfiles.UpdateConversationProfile].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.UpdateConversationProfileRequest
 */
export type UpdateConversationProfileRequest = Message<"google.cloud.dialogflow.v2beta1.UpdateConversationProfileRequest"> & {
  /**
   * Required. The conversation profile to update.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.ConversationProfile conversation_profile = 1;
   */
  conversationProfile?: ConversationProfile;

  /**
   * Required. The mask to control which fields to update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.UpdateConversationProfileRequest.
 * Use `create(UpdateConversationProfileRequestSchema)` to create a new message.
 */
export const UpdateConversationProfileRequestSchema: GenMessage<UpdateConversationProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 10);

/**
 * The request message for
 * [ConversationProfiles.DeleteConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfiles.DeleteConversationProfile].
 *
 * This operation fails if the conversation profile is still referenced from
 * a phone number.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.DeleteConversationProfileRequest
 */
export type DeleteConversationProfileRequest = Message<"google.cloud.dialogflow.v2beta1.DeleteConversationProfileRequest"> & {
  /**
   * Required. The name of the conversation profile to delete.
   * Format: `projects/<Project ID>/locations/<Location
   * ID>/conversationProfiles/<Conversation Profile ID>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.DeleteConversationProfileRequest.
 * Use `create(DeleteConversationProfileRequestSchema)` to create a new message.
 */
export const DeleteConversationProfileRequestSchema: GenMessage<DeleteConversationProfileRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 11);

/**
 * The request message for
 * [ConversationProfiles.SetSuggestionFeature][].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SetSuggestionFeatureConfigRequest
 */
export type SetSuggestionFeatureConfigRequest = Message<"google.cloud.dialogflow.v2beta1.SetSuggestionFeatureConfigRequest"> & {
  /**
   * Required. The Conversation Profile to add or update the suggestion feature
   * config. Format: `projects/<Project ID>/locations/<Location
   * ID>/conversationProfiles/<Conversation Profile ID>`.
   *
   * @generated from field: string conversation_profile = 1;
   */
  conversationProfile: string;

  /**
   * Required. The participant role to add or update the suggestion feature
   * config. Only HUMAN_AGENT or END_USER can be used.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Participant.Role participant_role = 2;
   */
  participantRole: Participant_Role;

  /**
   * Required. The suggestion feature config to add or update.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.HumanAgentAssistantConfig.SuggestionFeatureConfig suggestion_feature_config = 3;
   */
  suggestionFeatureConfig?: HumanAgentAssistantConfig_SuggestionFeatureConfig;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SetSuggestionFeatureConfigRequest.
 * Use `create(SetSuggestionFeatureConfigRequestSchema)` to create a new message.
 */
export const SetSuggestionFeatureConfigRequestSchema: GenMessage<SetSuggestionFeatureConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 12);

/**
 * The request message for [ConversationProfiles.ClearFeature][].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ClearSuggestionFeatureConfigRequest
 */
export type ClearSuggestionFeatureConfigRequest = Message<"google.cloud.dialogflow.v2beta1.ClearSuggestionFeatureConfigRequest"> & {
  /**
   * Required. The Conversation Profile to add or update the suggestion feature
   * config. Format: `projects/<Project ID>/locations/<Location
   * ID>/conversationProfiles/<Conversation Profile ID>`.
   *
   * @generated from field: string conversation_profile = 1;
   */
  conversationProfile: string;

  /**
   * Required. The participant role to remove the suggestion feature
   * config. Only HUMAN_AGENT or END_USER can be used.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Participant.Role participant_role = 2;
   */
  participantRole: Participant_Role;

  /**
   * Required. The type of the suggestion feature to remove.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SuggestionFeature.Type suggestion_feature_type = 3;
   */
  suggestionFeatureType: SuggestionFeature_Type;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ClearSuggestionFeatureConfigRequest.
 * Use `create(ClearSuggestionFeatureConfigRequestSchema)` to create a new message.
 */
export const ClearSuggestionFeatureConfigRequestSchema: GenMessage<ClearSuggestionFeatureConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 13);

/**
 * Metadata for a [ConversationProfile.SetSuggestionFeatureConfig][]
 * operation.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.SetSuggestionFeatureConfigOperationMetadata
 */
export type SetSuggestionFeatureConfigOperationMetadata = Message<"google.cloud.dialogflow.v2beta1.SetSuggestionFeatureConfigOperationMetadata"> & {
  /**
   * The resource name of the conversation profile. Format:
   * `projects/<Project ID>/locations/<Location
   * ID>/conversationProfiles/<Conversation Profile ID>`
   *
   * @generated from field: string conversation_profile = 1;
   */
  conversationProfile: string;

  /**
   * Required. The participant role to add or update the suggestion feature
   * config. Only HUMAN_AGENT or END_USER can be used.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Participant.Role participant_role = 2;
   */
  participantRole: Participant_Role;

  /**
   * Required. The type of the suggestion feature to add or update.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SuggestionFeature.Type suggestion_feature_type = 3;
   */
  suggestionFeatureType: SuggestionFeature_Type;

  /**
   * Timestamp whe the request was created. The time is measured on server side.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.SetSuggestionFeatureConfigOperationMetadata.
 * Use `create(SetSuggestionFeatureConfigOperationMetadataSchema)` to create a new message.
 */
export const SetSuggestionFeatureConfigOperationMetadataSchema: GenMessage<SetSuggestionFeatureConfigOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 14);

/**
 * Metadata for a [ConversationProfile.ClearSuggestionFeatureConfig][]
 * operation.
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ClearSuggestionFeatureConfigOperationMetadata
 */
export type ClearSuggestionFeatureConfigOperationMetadata = Message<"google.cloud.dialogflow.v2beta1.ClearSuggestionFeatureConfigOperationMetadata"> & {
  /**
   * The resource name of the conversation profile. Format:
   * `projects/<Project ID>/locations/<Location
   * ID>/conversationProfiles/<Conversation Profile ID>`
   *
   * @generated from field: string conversation_profile = 1;
   */
  conversationProfile: string;

  /**
   * Required. The participant role to remove the suggestion feature
   * config. Only HUMAN_AGENT or END_USER can be used.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Participant.Role participant_role = 2;
   */
  participantRole: Participant_Role;

  /**
   * Required. The type of the suggestion feature to remove.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.SuggestionFeature.Type suggestion_feature_type = 3;
   */
  suggestionFeatureType: SuggestionFeature_Type;

  /**
   * Timestamp whe the request was created. The time is measured on server side.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ClearSuggestionFeatureConfigOperationMetadata.
 * Use `create(ClearSuggestionFeatureConfigOperationMetadataSchema)` to create a new message.
 */
export const ClearSuggestionFeatureConfigOperationMetadataSchema: GenMessage<ClearSuggestionFeatureConfigOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 15);

/**
 * Service for managing
 * [ConversationProfiles][google.cloud.dialogflow.v2beta1.ConversationProfile].
 *
 * @generated from service google.cloud.dialogflow.v2beta1.ConversationProfiles
 */
export const ConversationProfiles: GenService<{
  /**
   * Returns the list of all conversation profiles in the specified project.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.ConversationProfiles.ListConversationProfiles
   */
  listConversationProfiles: {
    methodKind: "unary";
    input: typeof ListConversationProfilesRequestSchema;
    output: typeof ListConversationProfilesResponseSchema;
  },
  /**
   * Retrieves the specified conversation profile.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.ConversationProfiles.GetConversationProfile
   */
  getConversationProfile: {
    methodKind: "unary";
    input: typeof GetConversationProfileRequestSchema;
    output: typeof ConversationProfileSchema;
  },
  /**
   * Creates a conversation profile in the specified project.
   *
   * [ConversationProfile.CreateTime][] and [ConversationProfile.UpdateTime][]
   * aren't populated in the response. You can retrieve them via
   * [GetConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfiles.GetConversationProfile]
   * API.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.ConversationProfiles.CreateConversationProfile
   */
  createConversationProfile: {
    methodKind: "unary";
    input: typeof CreateConversationProfileRequestSchema;
    output: typeof ConversationProfileSchema;
  },
  /**
   * Updates the specified conversation profile.
   *
   * [ConversationProfile.CreateTime][] and [ConversationProfile.UpdateTime][]
   * aren't populated in the response. You can retrieve them via
   * [GetConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfiles.GetConversationProfile]
   * API.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.ConversationProfiles.UpdateConversationProfile
   */
  updateConversationProfile: {
    methodKind: "unary";
    input: typeof UpdateConversationProfileRequestSchema;
    output: typeof ConversationProfileSchema;
  },
  /**
   * Deletes the specified conversation profile.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.ConversationProfiles.DeleteConversationProfile
   */
  deleteConversationProfile: {
    methodKind: "unary";
    input: typeof DeleteConversationProfileRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Adds or updates a suggestion feature in a conversation profile.
   * If the conversation profile contains the type of suggestion feature for
   * the participant role, it will update it. Otherwise it will insert the
   * suggestion feature.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [SetSuggestionFeatureConfigOperationMetadata][google.cloud.dialogflow.v2beta1.SetSuggestionFeatureConfigOperationMetadata]
   * - `response`:
   * [ConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfile]
   *
   * If a long running operation to add or update suggestion feature
   * config for the same conversation profile, participant role and suggestion
   * feature type exists, please cancel the existing long running operation
   * before sending such request, otherwise the request will be rejected.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.ConversationProfiles.SetSuggestionFeatureConfig
   */
  setSuggestionFeatureConfig: {
    methodKind: "unary";
    input: typeof SetSuggestionFeatureConfigRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Clears a suggestion feature from a conversation profile for the given
   * participant role.
   *
   * This method is a [long-running
   * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
   * The returned `Operation` type has the following method-specific fields:
   *
   * - `metadata`:
   * [ClearSuggestionFeatureConfigOperationMetadata][google.cloud.dialogflow.v2beta1.ClearSuggestionFeatureConfigOperationMetadata]
   * - `response`:
   * [ConversationProfile][google.cloud.dialogflow.v2beta1.ConversationProfile]
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.ConversationProfiles.ClearSuggestionFeatureConfig
   */
  clearSuggestionFeatureConfig: {
    methodKind: "unary";
    input: typeof ClearSuggestionFeatureConfigRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_v2beta1_conversation_profile, 0);

