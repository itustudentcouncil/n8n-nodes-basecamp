// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dialogflow/v2beta1/context.proto (package google.cloud.dialogflow.v2beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dialogflow/v2beta1/context.proto.
 */
export const file_google_cloud_dialogflow_v2beta1_context: GenFile = /*@__PURE__*/
  fileDesc("Ci1nb29nbGUvY2xvdWQvZGlhbG9nZmxvdy92MmJldGExL2NvbnRleHQucHJvdG8SH2dvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyYmV0YTEigAQKB0NvbnRleHQSDAoEbmFtZRgBIAEoCRIWCg5saWZlc3Bhbl9jb3VudBgCIAEoBRIrCgpwYXJhbWV0ZXJzGAMgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdDqhA+pBnQMKIWRpYWxvZ2Zsb3cuZ29vZ2xlYXBpcy5jb20vQ29udGV4dBI+cHJvamVjdHMve3Byb2plY3R9L2FnZW50L3Nlc3Npb25zL3tzZXNzaW9ufS9jb250ZXh0cy97Y29udGV4dH0SZnByb2plY3RzL3twcm9qZWN0fS9hZ2VudC9lbnZpcm9ubWVudHMve2Vudmlyb25tZW50fS91c2Vycy97dXNlcn0vc2Vzc2lvbnMve3Nlc3Npb259L2NvbnRleHRzL3tjb250ZXh0fRJTcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2FnZW50L3Nlc3Npb25zL3tzZXNzaW9ufS9jb250ZXh0cy97Y29udGV4dH0Se3Byb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9hZ2VudC9lbnZpcm9ubWVudHMve2Vudmlyb25tZW50fS91c2Vycy97dXNlcn0vc2Vzc2lvbnMve3Nlc3Npb259L2NvbnRleHRzL3tjb250ZXh0fSJ3ChNMaXN0Q29udGV4dHNSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjEiFkaWFsb2dmbG93Lmdvb2dsZWFwaXMuY29tL0NvbnRleHQSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkiawoUTGlzdENvbnRleHRzUmVzcG9uc2USOgoIY29udGV4dHMYASADKAsyKC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52MmJldGExLkNvbnRleHQSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIkwKEUdldENvbnRleHRSZXF1ZXN0EjcKBG5hbWUYASABKAlCKeBBAvpBIwohZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9Db250ZXh0IpEBChRDcmVhdGVDb250ZXh0UmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIxIhZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9Db250ZXh0Ej4KB2NvbnRleHQYAiABKAsyKC5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52MmJldGExLkNvbnRleHRCA+BBAiKMAQoUVXBkYXRlQ29udGV4dFJlcXVlc3QSPgoHY29udGV4dBgBIAEoCzIoLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyYmV0YTEuQ29udGV4dEID4EECEjQKC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EEBIk8KFERlbGV0ZUNvbnRleHRSZXF1ZXN0EjcKBG5hbWUYASABKAlCKeBBAvpBIwohZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9Db250ZXh0IlUKGERlbGV0ZUFsbENvbnRleHRzUmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIxIhZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbS9Db250ZXh0MpwWCghDb250ZXh0cxK6AwoMTGlzdENvbnRleHRzEjQuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5MaXN0Q29udGV4dHNSZXF1ZXN0GjUuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5MaXN0Q29udGV4dHNSZXNwb25zZSK8AtpBBnBhcmVudILT5JMCrAJaTxJNL3YyYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKn0vY29udGV4dHNaRBJCL3YyYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L3Nlc3Npb25zLyp9L2NvbnRleHRzWlsSWS92MmJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9lbnZpcm9ubWVudHMvKi91c2Vycy8qL3Nlc3Npb25zLyp9L2NvbnRleHRzEjYvdjJiZXRhMS97cGFyZW50PXByb2plY3RzLyovYWdlbnQvc2Vzc2lvbnMvKn0vY29udGV4dHMSpwMKCkdldENvbnRleHQSMi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52MmJldGExLkdldENvbnRleHRSZXF1ZXN0GiguZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5Db250ZXh0IroC2kEEbmFtZYLT5JMCrAJaTxJNL3YyYmV0YTEve25hbWU9cHJvamVjdHMvKi9hZ2VudC9lbnZpcm9ubWVudHMvKi91c2Vycy8qL3Nlc3Npb25zLyovY29udGV4dHMvKn1aRBJCL3YyYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9zZXNzaW9ucy8qL2NvbnRleHRzLyp9WlsSWS92MmJldGExL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnQvZW52aXJvbm1lbnRzLyovdXNlcnMvKi9zZXNzaW9ucy8qL2NvbnRleHRzLyp9EjYvdjJiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2FnZW50L3Nlc3Npb25zLyovY29udGV4dHMvKn0S2wMKDUNyZWF0ZUNvbnRleHQSNS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52MmJldGExLkNyZWF0ZUNvbnRleHRSZXF1ZXN0GiguZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5Db250ZXh0IugC2kEOcGFyZW50LGNvbnRleHSC0+STAtACOgdjb250ZXh0Wlg6B2NvbnRleHQiTS92MmJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9hZ2VudC9lbnZpcm9ubWVudHMvKi91c2Vycy8qL3Nlc3Npb25zLyp9L2NvbnRleHRzWk06B2NvbnRleHQiQi92MmJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9zZXNzaW9ucy8qfS9jb250ZXh0c1pkOgdjb250ZXh0IlkvdjJiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnQvZW52aXJvbm1lbnRzLyovdXNlcnMvKi9zZXNzaW9ucy8qfS9jb250ZXh0cyI2L3YyYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2FnZW50L3Nlc3Npb25zLyp9L2NvbnRleHRzEooECg1VcGRhdGVDb250ZXh0EjUuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5VcGRhdGVDb250ZXh0UmVxdWVzdBooLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyYmV0YTEuQ29udGV4dCKXA9pBE2NvbnRleHQsdXBkYXRlX21hc2vaQQdjb250ZXh0gtPkkwLwAjoHY29udGV4dFpgOgdjb250ZXh0MlUvdjJiZXRhMS97Y29udGV4dC5uYW1lPXByb2plY3RzLyovYWdlbnQvZW52aXJvbm1lbnRzLyovdXNlcnMvKi9zZXNzaW9ucy8qL2NvbnRleHRzLyp9WlU6B2NvbnRleHQySi92MmJldGExL3tjb250ZXh0Lm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9zZXNzaW9ucy8qL2NvbnRleHRzLyp9Wmw6B2NvbnRleHQyYS92MmJldGExL3tjb250ZXh0Lm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9hZ2VudC9lbnZpcm9ubWVudHMvKi91c2Vycy8qL3Nlc3Npb25zLyovY29udGV4dHMvKn0yPi92MmJldGExL3tjb250ZXh0Lm5hbWU9cHJvamVjdHMvKi9hZ2VudC9zZXNzaW9ucy8qL2NvbnRleHRzLyp9EpsDCg1EZWxldGVDb250ZXh0EjUuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMS5EZWxldGVDb250ZXh0UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSK6AtpBBG5hbWWC0+STAqwCWk8qTS92MmJldGExL3tuYW1lPXByb2plY3RzLyovYWdlbnQvZW52aXJvbm1lbnRzLyovdXNlcnMvKi9zZXNzaW9ucy8qL2NvbnRleHRzLyp9WkQqQi92MmJldGExL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnQvc2Vzc2lvbnMvKi9jb250ZXh0cy8qfVpbKlkvdjJiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKi9jb250ZXh0cy8qfSo2L3YyYmV0YTEve25hbWU9cHJvamVjdHMvKi9hZ2VudC9zZXNzaW9ucy8qL2NvbnRleHRzLyp9EqUDChFEZWxldGVBbGxDb250ZXh0cxI5Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyYmV0YTEuRGVsZXRlQWxsQ29udGV4dHNSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IrwC2kEGcGFyZW50gtPkkwKsAlpPKk0vdjJiZXRhMS97cGFyZW50PXByb2plY3RzLyovYWdlbnQvZW52aXJvbm1lbnRzLyovdXNlcnMvKi9zZXNzaW9ucy8qfS9jb250ZXh0c1pEKkIvdjJiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovYWdlbnQvc2Vzc2lvbnMvKn0vY29udGV4dHNaWypZL3YyYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2FnZW50L2Vudmlyb25tZW50cy8qL3VzZXJzLyovc2Vzc2lvbnMvKn0vY29udGV4dHMqNi92MmJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9hZ2VudC9zZXNzaW9ucy8qfS9jb250ZXh0cxp4ykEZZGlhbG9nZmxvdy5nb29nbGVhcGlzLmNvbdJBWWh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9kaWFsb2dmbG93QqQBCiNjb20uZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjJiZXRhMUIMQ29udGV4dFByb3RvUAFaQ2Nsb3VkLmdvb2dsZS5jb20vZ28vZGlhbG9nZmxvdy9hcGl2MmJldGExL2RpYWxvZ2Zsb3dwYjtkaWFsb2dmbG93cGL4AQGiAgJERqoCH0dvb2dsZS5DbG91ZC5EaWFsb2dmbG93LlYyQmV0YTFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct]);

/**
 * Dialogflow contexts are similar to natural language context. If a person says
 * to you "they are orange", you need context in order to understand what "they"
 * is referring to. Similarly, for Dialogflow to handle an end-user expression
 * like that, it needs to be provided with context in order to correctly match
 * an intent.
 *
 * Using contexts, you can control the flow of a conversation. You can configure
 * contexts for an intent by setting input and output contexts, which are
 * identified by string names. When an intent is matched, any configured output
 * contexts for that intent become active. While any contexts are active,
 * Dialogflow is more likely to match intents that are configured with input
 * contexts that correspond to the currently active contexts.
 *
 * For more information about context, see the
 * [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
 *
 * @generated from message google.cloud.dialogflow.v2beta1.Context
 */
export type Context = Message<"google.cloud.dialogflow.v2beta1.Context"> & {
  /**
   * Required. The unique identifier of the context. Supported formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context
   *   ID>`,
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>/contexts/<Context ID>`,
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>/contexts/<Context ID>`,
   * - `projects/<Project ID>/locations/<Location
   *   ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session
   *   ID>/contexts/<Context ID>`,
   *
   * The `Context ID` is always converted to lowercase, may only contain
   * characters in `a-zA-Z0-9_-%` and may be at most 250 bytes long.
   *
   * If `Environment ID` is not specified, we assume default 'draft'
   * environment. If `User ID` is not specified, we assume default '-' user.
   *
   * The following context names are reserved for internal use by Dialogflow.
   * You should not use these contexts or create contexts with these names:
   *
   * * `__system_counters__`
   * * `*_id_dialog_context`
   * * `*_dialog_params_size`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The number of conversational query requests after which the
   * context expires. The default is `0`. If set to `0`, the context expires
   * immediately. Contexts expire automatically after 20 minutes if there
   * are no matching queries.
   *
   * @generated from field: int32 lifespan_count = 2;
   */
  lifespanCount: number;

  /**
   * Optional. The collection of parameters associated with this context.
   *
   * Depending on your protocol or client library language, this is a
   * map, associative array, symbol table, dictionary, or JSON object
   * composed of a collection of (MapKey, MapValue) pairs:
   *
   * * MapKey type: string
   * * MapKey value: parameter name
   * * MapValue type: If parameter's entity type is a composite entity then use
   * map, otherwise, depending on the parameter value type, it could be one of
   * string, number, boolean, null, list or map.
   * * MapValue value: If parameter's entity type is a composite entity then use
   * map from composite entity property names to property values, otherwise,
   * use parameter value.
   *
   * @generated from field: google.protobuf.Struct parameters = 3;
   */
  parameters?: JsonObject;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.Context.
 * Use `create(ContextSchema)` to create a new message.
 */
export const ContextSchema: GenMessage<Context> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_context, 0);

/**
 * The request message for
 * [Contexts.ListContexts][google.cloud.dialogflow.v2beta1.Contexts.ListContexts].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListContextsRequest
 */
export type ListContextsRequest = Message<"google.cloud.dialogflow.v2beta1.ListContextsRequest"> & {
  /**
   * Required. The session to list all contexts from. Supported formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>,
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>`,
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>`,
   * - `projects/<Project ID>/locations/<Location
   *   ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session
   *   ID>`,
   *
   * If `Location ID` is not specified we assume default 'us' location. If
   * `Environment ID` is not specified, we assume default 'draft' environment.
   * If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of items to return in a single page. By
   * default 100 and at most 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The next_page_token value returned from a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListContextsRequest.
 * Use `create(ListContextsRequestSchema)` to create a new message.
 */
export const ListContextsRequestSchema: GenMessage<ListContextsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_context, 1);

/**
 * The response message for
 * [Contexts.ListContexts][google.cloud.dialogflow.v2beta1.Contexts.ListContexts].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.ListContextsResponse
 */
export type ListContextsResponse = Message<"google.cloud.dialogflow.v2beta1.ListContextsResponse"> & {
  /**
   * The list of contexts. There will be a maximum number of items
   * returned based on the page_size field in the request.
   *
   * @generated from field: repeated google.cloud.dialogflow.v2beta1.Context contexts = 1;
   */
  contexts: Context[];

  /**
   * Token to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.ListContextsResponse.
 * Use `create(ListContextsResponseSchema)` to create a new message.
 */
export const ListContextsResponseSchema: GenMessage<ListContextsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_context, 2);

/**
 * The request message for
 * [Contexts.GetContext][google.cloud.dialogflow.v2beta1.Contexts.GetContext].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.GetContextRequest
 */
export type GetContextRequest = Message<"google.cloud.dialogflow.v2beta1.GetContextRequest"> & {
  /**
   * Required. The name of the context. Supported formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context
   *   ID>`,
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>/contexts/<Context ID>`,
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>/contexts/<Context ID>`,
   * - `projects/<Project ID>/locations/<Location
   *   ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session
   *   ID>/contexts/<Context ID>`,
   *
   * If `Location ID` is not specified we assume default 'us' location. If
   * `Environment ID` is not specified, we assume default 'draft' environment.
   * If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.GetContextRequest.
 * Use `create(GetContextRequestSchema)` to create a new message.
 */
export const GetContextRequestSchema: GenMessage<GetContextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_context, 3);

/**
 * The request message for
 * [Contexts.CreateContext][google.cloud.dialogflow.v2beta1.Contexts.CreateContext].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.CreateContextRequest
 */
export type CreateContextRequest = Message<"google.cloud.dialogflow.v2beta1.CreateContextRequest"> & {
  /**
   * Required. The session to create a context for. Supported formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>,
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>`,
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>`,
   * - `projects/<Project ID>/locations/<Location
   *   ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session
   *   ID>`,
   *
   * If `Location ID` is not specified we assume default 'us' location. If
   * `Environment ID` is not specified, we assume default 'draft' environment.
   * If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The context to create.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Context context = 2;
   */
  context?: Context;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.CreateContextRequest.
 * Use `create(CreateContextRequestSchema)` to create a new message.
 */
export const CreateContextRequestSchema: GenMessage<CreateContextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_context, 4);

/**
 * The request message for
 * [Contexts.UpdateContext][google.cloud.dialogflow.v2beta1.Contexts.UpdateContext].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.UpdateContextRequest
 */
export type UpdateContextRequest = Message<"google.cloud.dialogflow.v2beta1.UpdateContextRequest"> & {
  /**
   * Required. The context to update.
   *
   * @generated from field: google.cloud.dialogflow.v2beta1.Context context = 1;
   */
  context?: Context;

  /**
   * Optional. The mask to control which fields get updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.UpdateContextRequest.
 * Use `create(UpdateContextRequestSchema)` to create a new message.
 */
export const UpdateContextRequestSchema: GenMessage<UpdateContextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_context, 5);

/**
 * The request message for
 * [Contexts.DeleteContext][google.cloud.dialogflow.v2beta1.Contexts.DeleteContext].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.DeleteContextRequest
 */
export type DeleteContextRequest = Message<"google.cloud.dialogflow.v2beta1.DeleteContextRequest"> & {
  /**
   * Required. The name of the context to delete. Supported formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context
   *   ID>`,
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>/contexts/<Context ID>`,
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>/contexts/<Context ID>`,
   * - `projects/<Project ID>/locations/<Location
   *   ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session
   *   ID>/contexts/<Context ID>`,
   *
   * If `Location ID` is not specified we assume default 'us' location. If
   * `Environment ID` is not specified, we assume default 'draft' environment.
   * If `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.DeleteContextRequest.
 * Use `create(DeleteContextRequestSchema)` to create a new message.
 */
export const DeleteContextRequestSchema: GenMessage<DeleteContextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_context, 6);

/**
 * The request message for
 * [Contexts.DeleteAllContexts][google.cloud.dialogflow.v2beta1.Contexts.DeleteAllContexts].
 *
 * @generated from message google.cloud.dialogflow.v2beta1.DeleteAllContextsRequest
 */
export type DeleteAllContextsRequest = Message<"google.cloud.dialogflow.v2beta1.DeleteAllContextsRequest"> & {
  /**
   * Required. The name of the session to delete all contexts from. Supported
   * formats:
   * - `projects/<Project ID>/agent/sessions/<Session ID>,
   * - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
   *   ID>`,
   * - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
   *   ID>/sessions/<Session ID>`,
   * - `projects/<Project ID>/locations/<Location
   *   ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session
   *   ID>`,
   *
   * If `Location ID` is not specified we assume default 'us' location. If
   * `Environment ID` is not specified we assume default 'draft' environment. If
   * `User ID` is not specified, we assume default '-' user.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;
};

/**
 * Describes the message google.cloud.dialogflow.v2beta1.DeleteAllContextsRequest.
 * Use `create(DeleteAllContextsRequestSchema)` to create a new message.
 */
export const DeleteAllContextsRequestSchema: GenMessage<DeleteAllContextsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_dialogflow_v2beta1_context, 7);

/**
 * Service for managing [Contexts][google.cloud.dialogflow.v2beta1.Context].
 *
 * @generated from service google.cloud.dialogflow.v2beta1.Contexts
 */
export const Contexts: GenService<{
  /**
   * Returns the list of all contexts in the specified session.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Contexts.ListContexts
   */
  listContexts: {
    methodKind: "unary";
    input: typeof ListContextsRequestSchema;
    output: typeof ListContextsResponseSchema;
  },
  /**
   * Retrieves the specified context.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Contexts.GetContext
   */
  getContext: {
    methodKind: "unary";
    input: typeof GetContextRequestSchema;
    output: typeof ContextSchema;
  },
  /**
   * Creates a context.
   *
   * If the specified context already exists, overrides the context.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Contexts.CreateContext
   */
  createContext: {
    methodKind: "unary";
    input: typeof CreateContextRequestSchema;
    output: typeof ContextSchema;
  },
  /**
   * Updates the specified context.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Contexts.UpdateContext
   */
  updateContext: {
    methodKind: "unary";
    input: typeof UpdateContextRequestSchema;
    output: typeof ContextSchema;
  },
  /**
   * Deletes the specified context.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Contexts.DeleteContext
   */
  deleteContext: {
    methodKind: "unary";
    input: typeof DeleteContextRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Deletes all active contexts in the specified session.
   *
   * @generated from rpc google.cloud.dialogflow.v2beta1.Contexts.DeleteAllContexts
   */
  deleteAllContexts: {
    methodKind: "unary";
    input: typeof DeleteAllContextsRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_dialogflow_v2beta1_context, 0);

