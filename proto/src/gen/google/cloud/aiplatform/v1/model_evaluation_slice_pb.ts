// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1/model_evaluation_slice.proto (package google.cloud.aiplatform.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ModelExplanation } from "./explanation_pb";
import { file_google_cloud_aiplatform_v1_explanation } from "./explanation_pb";
import type { BoolValue, Timestamp, Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1/model_evaluation_slice.proto.
 */
export const file_google_cloud_aiplatform_v1_model_evaluation_slice: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9tb2RlbF9ldmFsdWF0aW9uX3NsaWNlLnByb3RvEhpnb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MSK8CQoUTW9kZWxFdmFsdWF0aW9uU2xpY2USEQoEbmFtZRgBIAEoCUID4EEDEkoKBXNsaWNlGAIgASgLMjYuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTW9kZWxFdmFsdWF0aW9uU2xpY2UuU2xpY2VCA+BBAxIfChJtZXRyaWNzX3NjaGVtYV91cmkYAyABKAlCA+BBAxIsCgdtZXRyaWNzGAQgASgLMhYuZ29vZ2xlLnByb3RvYnVmLlZhbHVlQgPgQQMSNAoLY3JlYXRlX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSTAoRbW9kZWxfZXhwbGFuYXRpb24YBiABKAsyLC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5Nb2RlbEV4cGxhbmF0aW9uQgPgQQMa2gUKBVNsaWNlEhYKCWRpbWVuc2lvbhgBIAEoCUID4EEDEhIKBXZhbHVlGAIgASgJQgPgQQMSWQoKc2xpY2Vfc3BlYxgDIAEoCzJALmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLk1vZGVsRXZhbHVhdGlvblNsaWNlLlNsaWNlLlNsaWNlU3BlY0ID4EEDGskECglTbGljZVNwZWMSXgoHY29uZmlncxgBIAMoCzJNLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLk1vZGVsRXZhbHVhdGlvblNsaWNlLlNsaWNlLlNsaWNlU3BlYy5Db25maWdzRW50cnka+QEKC1NsaWNlQ29uZmlnElcKBXZhbHVlGAEgASgLMkYuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTW9kZWxFdmFsdWF0aW9uU2xpY2UuU2xpY2UuU2xpY2VTcGVjLlZhbHVlSAASVwoFcmFuZ2UYAiABKAsyRi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5Nb2RlbEV2YWx1YXRpb25TbGljZS5TbGljZS5TbGljZVNwZWMuUmFuZ2VIABIwCgphbGxfdmFsdWVzGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZUgAQgYKBGtpbmQaIgoFUmFuZ2USCwoDbG93GAEgASgCEgwKBGhpZ2gYAiABKAIaPgoFVmFsdWUSFgoMc3RyaW5nX3ZhbHVlGAEgASgJSAASFQoLZmxvYXRfdmFsdWUYAiABKAJIAEIGCgRraW5kGnwKDENvbmZpZ3NFbnRyeRILCgNrZXkYASABKAkSWwoFdmFsdWUYAiABKAsyTC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5Nb2RlbEV2YWx1YXRpb25TbGljZS5TbGljZS5TbGljZVNwZWMuU2xpY2VDb25maWc6AjgBOpQB6kGQAQouYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9Nb2RlbEV2YWx1YXRpb25TbGljZRJecHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L21vZGVscy97bW9kZWx9L2V2YWx1YXRpb25zL3tldmFsdWF0aW9ufS9zbGljZXMve3NsaWNlfULXAQoeY29tLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxQhlNb2RlbEV2YWx1YXRpb25TbGljZVByb3RvUAFaPmNsb3VkLmdvb2dsZS5jb20vZ28vYWlwbGF0Zm9ybS9hcGl2MS9haXBsYXRmb3JtcGI7YWlwbGF0Zm9ybXBiqgIaR29vZ2xlLkNsb3VkLkFJUGxhdGZvcm0uVjHKAhpHb29nbGVcQ2xvdWRcQUlQbGF0Zm9ybVxWMeoCHUdvb2dsZTo6Q2xvdWQ6OkFJUGxhdGZvcm06OlYxYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1_explanation, file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * A collection of metrics calculated by comparing Model's predictions on a
 * slice of the test data against ground truth annotations.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelEvaluationSlice
 */
export type ModelEvaluationSlice = Message<"google.cloud.aiplatform.v1.ModelEvaluationSlice"> & {
  /**
   * Output only. The resource name of the ModelEvaluationSlice.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The slice of the test data that is used to evaluate the Model.
   *
   * @generated from field: google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice slice = 2;
   */
  slice?: ModelEvaluationSlice_Slice;

  /**
   * Output only. Points to a YAML file stored on Google Cloud Storage
   * describing the
   * [metrics][google.cloud.aiplatform.v1.ModelEvaluationSlice.metrics] of this
   * ModelEvaluationSlice. The schema is defined as an OpenAPI 3.0.2 [Schema
   * Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
   *
   * @generated from field: string metrics_schema_uri = 3;
   */
  metricsSchemaUri: string;

  /**
   * Output only. Sliced evaluation metrics of the Model. The schema of the
   * metrics is stored in
   * [metrics_schema_uri][google.cloud.aiplatform.v1.ModelEvaluationSlice.metrics_schema_uri]
   *
   * @generated from field: google.protobuf.Value metrics = 4;
   */
  metrics?: Value;

  /**
   * Output only. Timestamp when this ModelEvaluationSlice was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. Aggregated explanation metrics for the Model's prediction
   * output over the data this ModelEvaluation uses. This field is populated
   * only if the Model is evaluated with explanations, and only for tabular
   * Models.
   *
   * @generated from field: google.cloud.aiplatform.v1.ModelExplanation model_explanation = 6;
   */
  modelExplanation?: ModelExplanation;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelEvaluationSlice.
 * Use `create(ModelEvaluationSliceSchema)` to create a new message.
 */
export const ModelEvaluationSliceSchema: GenMessage<ModelEvaluationSlice> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_evaluation_slice, 0);

/**
 * Definition of a slice.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice
 */
export type ModelEvaluationSlice_Slice = Message<"google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice"> & {
  /**
   * Output only. The dimension of the slice.
   * Well-known dimensions are:
   *   * `annotationSpec`: This slice is on the test data that has either
   *     ground truth or prediction with
   *     [AnnotationSpec.display_name][google.cloud.aiplatform.v1.AnnotationSpec.display_name]
   *     equals to
   *     [value][google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.value].
   *   * `slice`: This slice is a user customized slice defined by its
   *     SliceSpec.
   *
   * @generated from field: string dimension = 1;
   */
  dimension: string;

  /**
   * Output only. The value of the dimension in this slice.
   *
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * Output only. Specification for how the data was sliced.
   *
   * @generated from field: google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec slice_spec = 3;
   */
  sliceSpec?: ModelEvaluationSlice_Slice_SliceSpec;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.
 * Use `create(ModelEvaluationSlice_SliceSchema)` to create a new message.
 */
export const ModelEvaluationSlice_SliceSchema: GenMessage<ModelEvaluationSlice_Slice> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_evaluation_slice, 0, 0);

/**
 * Specification for how the data should be sliced.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec
 */
export type ModelEvaluationSlice_Slice_SliceSpec = Message<"google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec"> & {
  /**
   * Mapping configuration for this SliceSpec.
   * The key is the name of the feature.
   * By default, the key will be prefixed by "instance" as a dictionary
   * prefix for Vertex Batch Predictions output format.
   *
   * @generated from field: map<string, google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.SliceConfig> configs = 1;
   */
  configs: { [key: string]: ModelEvaluationSlice_Slice_SliceSpec_SliceConfig };
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.
 * Use `create(ModelEvaluationSlice_Slice_SliceSpecSchema)` to create a new message.
 */
export const ModelEvaluationSlice_Slice_SliceSpecSchema: GenMessage<ModelEvaluationSlice_Slice_SliceSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_evaluation_slice, 0, 0, 0);

/**
 * Specification message containing the config for this SliceSpec.
 * When `kind` is selected as `value` and/or `range`, only a single slice
 * will be computed.
 * When `all_values` is present, a separate slice will be computed for
 * each possible label/value for the corresponding key in `config`.
 * Examples, with feature zip_code with values 12345, 23334, 88888 and
 * feature country with values "US", "Canada", "Mexico" in the dataset:
 *
 * Example 1:
 *
 *     {
 *       "zip_code": { "value": { "float_value": 12345.0 } }
 *     }
 *
 * A single slice for any data with zip_code 12345 in the dataset.
 *
 * Example 2:
 *
 *     {
 *       "zip_code": { "range": { "low": 12345, "high": 20000 } }
 *     }
 *
 * A single slice containing data where the zip_codes between 12345 and
 * 20000 For this example, data with the zip_code of 12345 will be in this
 * slice.
 *
 * Example 3:
 *
 *     {
 *       "zip_code": { "range": { "low": 10000, "high": 20000 } },
 *       "country": { "value": { "string_value": "US" } }
 *     }
 *
 * A single slice containing data where the zip_codes between 10000 and
 * 20000 has the country "US". For this example, data with the zip_code of
 * 12345 and country "US" will be in this slice.
 *
 * Example 4:
 *
 *     { "country": {"all_values": { "value": true } } }
 *
 * Three slices are computed, one for each unique country in the dataset.
 *
 * Example 5:
 *
 *     {
 *       "country": { "all_values": { "value": true } },
 *       "zip_code": { "value": { "float_value": 12345.0 } }
 *     }
 *
 * Three slices are computed, one for each unique country in the dataset
 * where the zip_code is also 12345. For this example, data with zip_code
 * 12345 and country "US" will be in one slice, zip_code 12345 and country
 * "Canada" in another slice, and zip_code 12345 and country "Mexico" in
 * another slice, totaling 3 slices.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.SliceConfig
 */
export type ModelEvaluationSlice_Slice_SliceSpec_SliceConfig = Message<"google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.SliceConfig"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.SliceConfig.kind
   */
  kind: {
    /**
     * A unique specific value for a given feature.
     * Example: `{ "value": { "string_value": "12345" } }`
     *
     * @generated from field: google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.Value value = 1;
     */
    value: ModelEvaluationSlice_Slice_SliceSpec_Value;
    case: "value";
  } | {
    /**
     * A range of values for a numerical feature.
     * Example: `{"range":{"low":10000.0,"high":50000.0}}`
     * will capture 12345 and 23334 in the slice.
     *
     * @generated from field: google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.Range range = 2;
     */
    value: ModelEvaluationSlice_Slice_SliceSpec_Range;
    case: "range";
  } | {
    /**
     * If all_values is set to true, then all possible labels of the keyed
     * feature will have another slice computed.
     * Example: `{"all_values":{"value":true}}`
     *
     * @generated from field: google.protobuf.BoolValue all_values = 3;
     */
    value: BoolValue;
    case: "allValues";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.SliceConfig.
 * Use `create(ModelEvaluationSlice_Slice_SliceSpec_SliceConfigSchema)` to create a new message.
 */
export const ModelEvaluationSlice_Slice_SliceSpec_SliceConfigSchema: GenMessage<ModelEvaluationSlice_Slice_SliceSpec_SliceConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_evaluation_slice, 0, 0, 0, 0);

/**
 * A range of values for slice(s).
 * `low` is inclusive, `high` is exclusive.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.Range
 */
export type ModelEvaluationSlice_Slice_SliceSpec_Range = Message<"google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.Range"> & {
  /**
   * Inclusive low value for the range.
   *
   * @generated from field: float low = 1;
   */
  low: number;

  /**
   * Exclusive high value for the range.
   *
   * @generated from field: float high = 2;
   */
  high: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.Range.
 * Use `create(ModelEvaluationSlice_Slice_SliceSpec_RangeSchema)` to create a new message.
 */
export const ModelEvaluationSlice_Slice_SliceSpec_RangeSchema: GenMessage<ModelEvaluationSlice_Slice_SliceSpec_Range> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_evaluation_slice, 0, 0, 0, 1);

/**
 * Single value that supports strings and floats.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.Value
 */
export type ModelEvaluationSlice_Slice_SliceSpec_Value = Message<"google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.Value"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.Value.kind
   */
  kind: {
    /**
     * String type.
     *
     * @generated from field: string string_value = 1;
     */
    value: string;
    case: "stringValue";
  } | {
    /**
     * Float type.
     *
     * @generated from field: float float_value = 2;
     */
    value: number;
    case: "floatValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.SliceSpec.Value.
 * Use `create(ModelEvaluationSlice_Slice_SliceSpec_ValueSchema)` to create a new message.
 */
export const ModelEvaluationSlice_Slice_SliceSpec_ValueSchema: GenMessage<ModelEvaluationSlice_Slice_SliceSpec_Value> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_evaluation_slice, 0, 0, 0, 2);

