// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1/accelerator_type.proto (package google.cloud.aiplatform.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc } from "@bufbuild/protobuf/codegenv1";

/**
 * Describes the file google/cloud/aiplatform/v1/accelerator_type.proto.
 */
export const file_google_cloud_aiplatform_v1_accelerator_type: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9hY2NlbGVyYXRvcl90eXBlLnByb3RvEhpnb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MSqzAgoPQWNjZWxlcmF0b3JUeXBlEiAKHEFDQ0VMRVJBVE9SX1RZUEVfVU5TUEVDSUZJRUQQABIYChBOVklESUFfVEVTTEFfSzgwEAEaAggBEhUKEU5WSURJQV9URVNMQV9QMTAwEAISFQoRTlZJRElBX1RFU0xBX1YxMDAQAxITCg9OVklESUFfVEVTTEFfUDQQBBITCg9OVklESUFfVEVTTEFfVDQQBRIVChFOVklESUFfVEVTTEFfQTEwMBAIEhQKEE5WSURJQV9BMTAwXzgwR0IQCRINCglOVklESUFfTDQQCxIUChBOVklESUFfSDEwMF84MEdCEA0SCgoGVFBVX1YyEAYSCgoGVFBVX1YzEAcSDgoKVFBVX1Y0X1BPRBAKEhIKDlRQVV9WNV9MSVRFUE9EEAxC0gEKHmNvbS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MUIUQWNjZWxlcmF0b3JUeXBlUHJvdG9QAVo+Y2xvdWQuZ29vZ2xlLmNvbS9nby9haXBsYXRmb3JtL2FwaXYxL2FpcGxhdGZvcm1wYjthaXBsYXRmb3JtcGKqAhpHb29nbGUuQ2xvdWQuQUlQbGF0Zm9ybS5WMcoCGkdvb2dsZVxDbG91ZFxBSVBsYXRmb3JtXFYx6gIdR29vZ2xlOjpDbG91ZDo6QUlQbGF0Zm9ybTo6VjFiBnByb3RvMw");

/**
 * Represents a hardware accelerator type.
 *
 * @generated from enum google.cloud.aiplatform.v1.AcceleratorType
 */
export enum AcceleratorType {
  /**
   * Unspecified accelerator type, which means no accelerator.
   *
   * @generated from enum value: ACCELERATOR_TYPE_UNSPECIFIED = 0;
   */
  ACCELERATOR_TYPE_UNSPECIFIED = 0,

  /**
   * Deprecated: Nvidia Tesla K80 GPU has reached end of support,
   * see https://cloud.google.com/compute/docs/eol/k80-eol.
   *
   * @generated from enum value: NVIDIA_TESLA_K80 = 1 [deprecated = true];
   * @deprecated
   */
  NVIDIA_TESLA_K80 = 1,

  /**
   * Nvidia Tesla P100 GPU.
   *
   * @generated from enum value: NVIDIA_TESLA_P100 = 2;
   */
  NVIDIA_TESLA_P100 = 2,

  /**
   * Nvidia Tesla V100 GPU.
   *
   * @generated from enum value: NVIDIA_TESLA_V100 = 3;
   */
  NVIDIA_TESLA_V100 = 3,

  /**
   * Nvidia Tesla P4 GPU.
   *
   * @generated from enum value: NVIDIA_TESLA_P4 = 4;
   */
  NVIDIA_TESLA_P4 = 4,

  /**
   * Nvidia Tesla T4 GPU.
   *
   * @generated from enum value: NVIDIA_TESLA_T4 = 5;
   */
  NVIDIA_TESLA_T4 = 5,

  /**
   * Nvidia Tesla A100 GPU.
   *
   * @generated from enum value: NVIDIA_TESLA_A100 = 8;
   */
  NVIDIA_TESLA_A100 = 8,

  /**
   * Nvidia A100 80GB GPU.
   *
   * @generated from enum value: NVIDIA_A100_80GB = 9;
   */
  NVIDIA_A100_80GB = 9,

  /**
   * Nvidia L4 GPU.
   *
   * @generated from enum value: NVIDIA_L4 = 11;
   */
  NVIDIA_L4 = 11,

  /**
   * Nvidia H100 80Gb GPU.
   *
   * @generated from enum value: NVIDIA_H100_80GB = 13;
   */
  NVIDIA_H100_80GB = 13,

  /**
   * TPU v2.
   *
   * @generated from enum value: TPU_V2 = 6;
   */
  TPU_V2 = 6,

  /**
   * TPU v3.
   *
   * @generated from enum value: TPU_V3 = 7;
   */
  TPU_V3 = 7,

  /**
   * TPU v4.
   *
   * @generated from enum value: TPU_V4_POD = 10;
   */
  TPU_V4_POD = 10,

  /**
   * TPU v5.
   *
   * @generated from enum value: TPU_V5_LITEPOD = 12;
   */
  TPU_V5_LITEPOD = 12,
}

/**
 * Describes the enum google.cloud.aiplatform.v1.AcceleratorType.
 */
export const AcceleratorTypeSchema: GenEnum<AcceleratorType> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1_accelerator_type, 0);

