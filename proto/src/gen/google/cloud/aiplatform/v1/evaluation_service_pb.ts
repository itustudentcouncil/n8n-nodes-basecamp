// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1/evaluation_service.proto (package google.cloud.aiplatform.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1/evaluation_service.proto.
 */
export const file_google_cloud_aiplatform_v1_evaluation_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource]);

/**
 * Request message for EvaluationService.EvaluateInstances.
 *
 * @generated from message google.cloud.aiplatform.v1.EvaluateInstancesRequest
 */
export type EvaluateInstancesRequest = Message<"google.cloud.aiplatform.v1.EvaluateInstancesRequest"> & {
  /**
   * Instances and specs for evaluation
   *
   * @generated from oneof google.cloud.aiplatform.v1.EvaluateInstancesRequest.metric_inputs
   */
  metricInputs: {
    /**
     * Auto metric instances.
     * Instances and metric spec for exact match metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.ExactMatchInput exact_match_input = 2;
     */
    value: ExactMatchInput;
    case: "exactMatchInput";
  } | {
    /**
     * Instances and metric spec for bleu metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.BleuInput bleu_input = 3;
     */
    value: BleuInput;
    case: "bleuInput";
  } | {
    /**
     * Instances and metric spec for rouge metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.RougeInput rouge_input = 4;
     */
    value: RougeInput;
    case: "rougeInput";
  } | {
    /**
     * LLM-based metric instance.
     * General text generation metrics, applicable to other categories.
     * Input for fluency metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.FluencyInput fluency_input = 5;
     */
    value: FluencyInput;
    case: "fluencyInput";
  } | {
    /**
     * Input for coherence metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.CoherenceInput coherence_input = 6;
     */
    value: CoherenceInput;
    case: "coherenceInput";
  } | {
    /**
     * Input for safety metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.SafetyInput safety_input = 8;
     */
    value: SafetyInput;
    case: "safetyInput";
  } | {
    /**
     * Input for groundedness metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.GroundednessInput groundedness_input = 9;
     */
    value: GroundednessInput;
    case: "groundednessInput";
  } | {
    /**
     * Input for fulfillment metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.FulfillmentInput fulfillment_input = 12;
     */
    value: FulfillmentInput;
    case: "fulfillmentInput";
  } | {
    /**
     * Input for summarization quality metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.SummarizationQualityInput summarization_quality_input = 7;
     */
    value: SummarizationQualityInput;
    case: "summarizationQualityInput";
  } | {
    /**
     * Input for pairwise summarization quality metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.PairwiseSummarizationQualityInput pairwise_summarization_quality_input = 23;
     */
    value: PairwiseSummarizationQualityInput;
    case: "pairwiseSummarizationQualityInput";
  } | {
    /**
     * Input for summarization helpfulness metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.SummarizationHelpfulnessInput summarization_helpfulness_input = 14;
     */
    value: SummarizationHelpfulnessInput;
    case: "summarizationHelpfulnessInput";
  } | {
    /**
     * Input for summarization verbosity metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.SummarizationVerbosityInput summarization_verbosity_input = 15;
     */
    value: SummarizationVerbosityInput;
    case: "summarizationVerbosityInput";
  } | {
    /**
     * Input for question answering quality metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringQualityInput question_answering_quality_input = 10;
     */
    value: QuestionAnsweringQualityInput;
    case: "questionAnsweringQualityInput";
  } | {
    /**
     * Input for pairwise question answering quality metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityInput pairwise_question_answering_quality_input = 24;
     */
    value: PairwiseQuestionAnsweringQualityInput;
    case: "pairwiseQuestionAnsweringQualityInput";
  } | {
    /**
     * Input for question answering relevance metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringRelevanceInput question_answering_relevance_input = 16;
     */
    value: QuestionAnsweringRelevanceInput;
    case: "questionAnsweringRelevanceInput";
  } | {
    /**
     * Input for question answering helpfulness
     * metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessInput question_answering_helpfulness_input = 17;
     */
    value: QuestionAnsweringHelpfulnessInput;
    case: "questionAnsweringHelpfulnessInput";
  } | {
    /**
     * Input for question answering correctness
     * metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessInput question_answering_correctness_input = 18;
     */
    value: QuestionAnsweringCorrectnessInput;
    case: "questionAnsweringCorrectnessInput";
  } | {
    /**
     * Input for pointwise metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.PointwiseMetricInput pointwise_metric_input = 28;
     */
    value: PointwiseMetricInput;
    case: "pointwiseMetricInput";
  } | {
    /**
     * Input for pairwise metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.PairwiseMetricInput pairwise_metric_input = 29;
     */
    value: PairwiseMetricInput;
    case: "pairwiseMetricInput";
  } | {
    /**
     * Tool call metric instances.
     * Input for tool call valid metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.ToolCallValidInput tool_call_valid_input = 19;
     */
    value: ToolCallValidInput;
    case: "toolCallValidInput";
  } | {
    /**
     * Input for tool name match metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.ToolNameMatchInput tool_name_match_input = 20;
     */
    value: ToolNameMatchInput;
    case: "toolNameMatchInput";
  } | {
    /**
     * Input for tool parameter key match metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.ToolParameterKeyMatchInput tool_parameter_key_match_input = 21;
     */
    value: ToolParameterKeyMatchInput;
    case: "toolParameterKeyMatchInput";
  } | {
    /**
     * Input for tool parameter key value match metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.ToolParameterKVMatchInput tool_parameter_kv_match_input = 22;
     */
    value: ToolParameterKVMatchInput;
    case: "toolParameterKvMatchInput";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the Location to evaluate the instances.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string location = 1;
   */
  location: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.EvaluateInstancesRequest.
 * Use `create(EvaluateInstancesRequestSchema)` to create a new message.
 */
export const EvaluateInstancesRequestSchema: GenMessage<EvaluateInstancesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 0);

/**
 * Response message for EvaluationService.EvaluateInstances.
 *
 * @generated from message google.cloud.aiplatform.v1.EvaluateInstancesResponse
 */
export type EvaluateInstancesResponse = Message<"google.cloud.aiplatform.v1.EvaluateInstancesResponse"> & {
  /**
   * Evaluation results will be served in the same order as presented in
   * EvaluationRequest.instances.
   *
   * @generated from oneof google.cloud.aiplatform.v1.EvaluateInstancesResponse.evaluation_results
   */
  evaluationResults: {
    /**
     * Auto metric evaluation results.
     * Results for exact match metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.ExactMatchResults exact_match_results = 1;
     */
    value: ExactMatchResults;
    case: "exactMatchResults";
  } | {
    /**
     * Results for bleu metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.BleuResults bleu_results = 2;
     */
    value: BleuResults;
    case: "bleuResults";
  } | {
    /**
     * Results for rouge metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.RougeResults rouge_results = 3;
     */
    value: RougeResults;
    case: "rougeResults";
  } | {
    /**
     * LLM-based metric evaluation result.
     * General text generation metrics, applicable to other categories.
     * Result for fluency metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.FluencyResult fluency_result = 4;
     */
    value: FluencyResult;
    case: "fluencyResult";
  } | {
    /**
     * Result for coherence metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.CoherenceResult coherence_result = 5;
     */
    value: CoherenceResult;
    case: "coherenceResult";
  } | {
    /**
     * Result for safety metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.SafetyResult safety_result = 7;
     */
    value: SafetyResult;
    case: "safetyResult";
  } | {
    /**
     * Result for groundedness metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.GroundednessResult groundedness_result = 8;
     */
    value: GroundednessResult;
    case: "groundednessResult";
  } | {
    /**
     * Result for fulfillment metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.FulfillmentResult fulfillment_result = 11;
     */
    value: FulfillmentResult;
    case: "fulfillmentResult";
  } | {
    /**
     * Summarization only metrics.
     * Result for summarization quality metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.SummarizationQualityResult summarization_quality_result = 6;
     */
    value: SummarizationQualityResult;
    case: "summarizationQualityResult";
  } | {
    /**
     * Result for pairwise summarization quality metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.PairwiseSummarizationQualityResult pairwise_summarization_quality_result = 22;
     */
    value: PairwiseSummarizationQualityResult;
    case: "pairwiseSummarizationQualityResult";
  } | {
    /**
     * Result for summarization helpfulness metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.SummarizationHelpfulnessResult summarization_helpfulness_result = 13;
     */
    value: SummarizationHelpfulnessResult;
    case: "summarizationHelpfulnessResult";
  } | {
    /**
     * Result for summarization verbosity metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.SummarizationVerbosityResult summarization_verbosity_result = 14;
     */
    value: SummarizationVerbosityResult;
    case: "summarizationVerbosityResult";
  } | {
    /**
     * Question answering only metrics.
     * Result for question answering quality metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringQualityResult question_answering_quality_result = 9;
     */
    value: QuestionAnsweringQualityResult;
    case: "questionAnsweringQualityResult";
  } | {
    /**
     * Result for pairwise question answering quality metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityResult pairwise_question_answering_quality_result = 23;
     */
    value: PairwiseQuestionAnsweringQualityResult;
    case: "pairwiseQuestionAnsweringQualityResult";
  } | {
    /**
     * Result for question answering relevance metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringRelevanceResult question_answering_relevance_result = 15;
     */
    value: QuestionAnsweringRelevanceResult;
    case: "questionAnsweringRelevanceResult";
  } | {
    /**
     * Result for question answering helpfulness metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessResult question_answering_helpfulness_result = 16;
     */
    value: QuestionAnsweringHelpfulnessResult;
    case: "questionAnsweringHelpfulnessResult";
  } | {
    /**
     * Result for question answering correctness metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessResult question_answering_correctness_result = 17;
     */
    value: QuestionAnsweringCorrectnessResult;
    case: "questionAnsweringCorrectnessResult";
  } | {
    /**
     * Generic metrics.
     * Result for pointwise metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.PointwiseMetricResult pointwise_metric_result = 27;
     */
    value: PointwiseMetricResult;
    case: "pointwiseMetricResult";
  } | {
    /**
     * Result for pairwise metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.PairwiseMetricResult pairwise_metric_result = 28;
     */
    value: PairwiseMetricResult;
    case: "pairwiseMetricResult";
  } | {
    /**
     * Tool call metrics.
     *  Results for tool call valid metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.ToolCallValidResults tool_call_valid_results = 18;
     */
    value: ToolCallValidResults;
    case: "toolCallValidResults";
  } | {
    /**
     * Results for tool name match metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.ToolNameMatchResults tool_name_match_results = 19;
     */
    value: ToolNameMatchResults;
    case: "toolNameMatchResults";
  } | {
    /**
     * Results for tool parameter key match  metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.ToolParameterKeyMatchResults tool_parameter_key_match_results = 20;
     */
    value: ToolParameterKeyMatchResults;
    case: "toolParameterKeyMatchResults";
  } | {
    /**
     * Results for tool parameter key value match metric.
     *
     * @generated from field: google.cloud.aiplatform.v1.ToolParameterKVMatchResults tool_parameter_kv_match_results = 21;
     */
    value: ToolParameterKVMatchResults;
    case: "toolParameterKvMatchResults";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1.EvaluateInstancesResponse.
 * Use `create(EvaluateInstancesResponseSchema)` to create a new message.
 */
export const EvaluateInstancesResponseSchema: GenMessage<EvaluateInstancesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 1);

/**
 * Input for exact match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ExactMatchInput
 */
export type ExactMatchInput = Message<"google.cloud.aiplatform.v1.ExactMatchInput"> & {
  /**
   * Required. Spec for exact match metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.ExactMatchSpec metric_spec = 1;
   */
  metricSpec?: ExactMatchSpec;

  /**
   * Required. Repeated exact match instances.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ExactMatchInstance instances = 2;
   */
  instances: ExactMatchInstance[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExactMatchInput.
 * Use `create(ExactMatchInputSchema)` to create a new message.
 */
export const ExactMatchInputSchema: GenMessage<ExactMatchInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 2);

/**
 * Spec for exact match instance.
 *
 * @generated from message google.cloud.aiplatform.v1.ExactMatchInstance
 */
export type ExactMatchInstance = Message<"google.cloud.aiplatform.v1.ExactMatchInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExactMatchInstance.
 * Use `create(ExactMatchInstanceSchema)` to create a new message.
 */
export const ExactMatchInstanceSchema: GenMessage<ExactMatchInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 3);

/**
 * Spec for exact match metric - returns 1 if prediction and reference exactly
 * matches, otherwise 0.
 *
 * @generated from message google.cloud.aiplatform.v1.ExactMatchSpec
 */
export type ExactMatchSpec = Message<"google.cloud.aiplatform.v1.ExactMatchSpec"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExactMatchSpec.
 * Use `create(ExactMatchSpecSchema)` to create a new message.
 */
export const ExactMatchSpecSchema: GenMessage<ExactMatchSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 4);

/**
 * Results for exact match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ExactMatchResults
 */
export type ExactMatchResults = Message<"google.cloud.aiplatform.v1.ExactMatchResults"> & {
  /**
   * Output only. Exact match metric values.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ExactMatchMetricValue exact_match_metric_values = 1;
   */
  exactMatchMetricValues: ExactMatchMetricValue[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExactMatchResults.
 * Use `create(ExactMatchResultsSchema)` to create a new message.
 */
export const ExactMatchResultsSchema: GenMessage<ExactMatchResults> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 5);

/**
 * Exact match metric value for an instance.
 *
 * @generated from message google.cloud.aiplatform.v1.ExactMatchMetricValue
 */
export type ExactMatchMetricValue = Message<"google.cloud.aiplatform.v1.ExactMatchMetricValue"> & {
  /**
   * Output only. Exact match score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExactMatchMetricValue.
 * Use `create(ExactMatchMetricValueSchema)` to create a new message.
 */
export const ExactMatchMetricValueSchema: GenMessage<ExactMatchMetricValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 6);

/**
 * Input for bleu metric.
 *
 * @generated from message google.cloud.aiplatform.v1.BleuInput
 */
export type BleuInput = Message<"google.cloud.aiplatform.v1.BleuInput"> & {
  /**
   * Required. Spec for bleu score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.BleuSpec metric_spec = 1;
   */
  metricSpec?: BleuSpec;

  /**
   * Required. Repeated bleu instances.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.BleuInstance instances = 2;
   */
  instances: BleuInstance[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BleuInput.
 * Use `create(BleuInputSchema)` to create a new message.
 */
export const BleuInputSchema: GenMessage<BleuInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 7);

/**
 * Spec for bleu instance.
 *
 * @generated from message google.cloud.aiplatform.v1.BleuInstance
 */
export type BleuInstance = Message<"google.cloud.aiplatform.v1.BleuInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.BleuInstance.
 * Use `create(BleuInstanceSchema)` to create a new message.
 */
export const BleuInstanceSchema: GenMessage<BleuInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 8);

/**
 * Spec for bleu score metric - calculates the precision of n-grams in the
 * prediction as compared to reference - returns a score ranging between 0 to 1.
 *
 * @generated from message google.cloud.aiplatform.v1.BleuSpec
 */
export type BleuSpec = Message<"google.cloud.aiplatform.v1.BleuSpec"> & {
  /**
   * Optional. Whether to use_effective_order to compute bleu score.
   *
   * @generated from field: bool use_effective_order = 1;
   */
  useEffectiveOrder: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1.BleuSpec.
 * Use `create(BleuSpecSchema)` to create a new message.
 */
export const BleuSpecSchema: GenMessage<BleuSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 9);

/**
 * Results for bleu metric.
 *
 * @generated from message google.cloud.aiplatform.v1.BleuResults
 */
export type BleuResults = Message<"google.cloud.aiplatform.v1.BleuResults"> & {
  /**
   * Output only. Bleu metric values.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.BleuMetricValue bleu_metric_values = 1;
   */
  bleuMetricValues: BleuMetricValue[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BleuResults.
 * Use `create(BleuResultsSchema)` to create a new message.
 */
export const BleuResultsSchema: GenMessage<BleuResults> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 10);

/**
 * Bleu metric value for an instance.
 *
 * @generated from message google.cloud.aiplatform.v1.BleuMetricValue
 */
export type BleuMetricValue = Message<"google.cloud.aiplatform.v1.BleuMetricValue"> & {
  /**
   * Output only. Bleu score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.BleuMetricValue.
 * Use `create(BleuMetricValueSchema)` to create a new message.
 */
export const BleuMetricValueSchema: GenMessage<BleuMetricValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 11);

/**
 * Input for rouge metric.
 *
 * @generated from message google.cloud.aiplatform.v1.RougeInput
 */
export type RougeInput = Message<"google.cloud.aiplatform.v1.RougeInput"> & {
  /**
   * Required. Spec for rouge score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.RougeSpec metric_spec = 1;
   */
  metricSpec?: RougeSpec;

  /**
   * Required. Repeated rouge instances.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.RougeInstance instances = 2;
   */
  instances: RougeInstance[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.RougeInput.
 * Use `create(RougeInputSchema)` to create a new message.
 */
export const RougeInputSchema: GenMessage<RougeInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 12);

/**
 * Spec for rouge instance.
 *
 * @generated from message google.cloud.aiplatform.v1.RougeInstance
 */
export type RougeInstance = Message<"google.cloud.aiplatform.v1.RougeInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.RougeInstance.
 * Use `create(RougeInstanceSchema)` to create a new message.
 */
export const RougeInstanceSchema: GenMessage<RougeInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 13);

/**
 * Spec for rouge score metric - calculates the recall of n-grams in prediction
 * as compared to reference - returns a score ranging between 0 and 1.
 *
 * @generated from message google.cloud.aiplatform.v1.RougeSpec
 */
export type RougeSpec = Message<"google.cloud.aiplatform.v1.RougeSpec"> & {
  /**
   * Optional. Supported rouge types are rougen[1-9], rougeL, and rougeLsum.
   *
   * @generated from field: string rouge_type = 1;
   */
  rougeType: string;

  /**
   * Optional. Whether to use stemmer to compute rouge score.
   *
   * @generated from field: bool use_stemmer = 2;
   */
  useStemmer: boolean;

  /**
   * Optional. Whether to split summaries while using rougeLsum.
   *
   * @generated from field: bool split_summaries = 3;
   */
  splitSummaries: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1.RougeSpec.
 * Use `create(RougeSpecSchema)` to create a new message.
 */
export const RougeSpecSchema: GenMessage<RougeSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 14);

/**
 * Results for rouge metric.
 *
 * @generated from message google.cloud.aiplatform.v1.RougeResults
 */
export type RougeResults = Message<"google.cloud.aiplatform.v1.RougeResults"> & {
  /**
   * Output only. Rouge metric values.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.RougeMetricValue rouge_metric_values = 1;
   */
  rougeMetricValues: RougeMetricValue[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.RougeResults.
 * Use `create(RougeResultsSchema)` to create a new message.
 */
export const RougeResultsSchema: GenMessage<RougeResults> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 15);

/**
 * Rouge metric value for an instance.
 *
 * @generated from message google.cloud.aiplatform.v1.RougeMetricValue
 */
export type RougeMetricValue = Message<"google.cloud.aiplatform.v1.RougeMetricValue"> & {
  /**
   * Output only. Rouge score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.RougeMetricValue.
 * Use `create(RougeMetricValueSchema)` to create a new message.
 */
export const RougeMetricValueSchema: GenMessage<RougeMetricValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 16);

/**
 * Input for coherence metric.
 *
 * @generated from message google.cloud.aiplatform.v1.CoherenceInput
 */
export type CoherenceInput = Message<"google.cloud.aiplatform.v1.CoherenceInput"> & {
  /**
   * Required. Spec for coherence score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.CoherenceSpec metric_spec = 1;
   */
  metricSpec?: CoherenceSpec;

  /**
   * Required. Coherence instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.CoherenceInstance instance = 2;
   */
  instance?: CoherenceInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CoherenceInput.
 * Use `create(CoherenceInputSchema)` to create a new message.
 */
export const CoherenceInputSchema: GenMessage<CoherenceInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 17);

/**
 * Spec for coherence instance.
 *
 * @generated from message google.cloud.aiplatform.v1.CoherenceInstance
 */
export type CoherenceInstance = Message<"google.cloud.aiplatform.v1.CoherenceInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CoherenceInstance.
 * Use `create(CoherenceInstanceSchema)` to create a new message.
 */
export const CoherenceInstanceSchema: GenMessage<CoherenceInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 18);

/**
 * Spec for coherence score metric.
 *
 * @generated from message google.cloud.aiplatform.v1.CoherenceSpec
 */
export type CoherenceSpec = Message<"google.cloud.aiplatform.v1.CoherenceSpec"> & {
  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 1;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CoherenceSpec.
 * Use `create(CoherenceSpecSchema)` to create a new message.
 */
export const CoherenceSpecSchema: GenMessage<CoherenceSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 19);

/**
 * Spec for coherence result.
 *
 * @generated from message google.cloud.aiplatform.v1.CoherenceResult
 */
export type CoherenceResult = Message<"google.cloud.aiplatform.v1.CoherenceResult"> & {
  /**
   * Output only. Coherence score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for coherence score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for coherence score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CoherenceResult.
 * Use `create(CoherenceResultSchema)` to create a new message.
 */
export const CoherenceResultSchema: GenMessage<CoherenceResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 20);

/**
 * Input for fluency metric.
 *
 * @generated from message google.cloud.aiplatform.v1.FluencyInput
 */
export type FluencyInput = Message<"google.cloud.aiplatform.v1.FluencyInput"> & {
  /**
   * Required. Spec for fluency score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.FluencySpec metric_spec = 1;
   */
  metricSpec?: FluencySpec;

  /**
   * Required. Fluency instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.FluencyInstance instance = 2;
   */
  instance?: FluencyInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FluencyInput.
 * Use `create(FluencyInputSchema)` to create a new message.
 */
export const FluencyInputSchema: GenMessage<FluencyInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 21);

/**
 * Spec for fluency instance.
 *
 * @generated from message google.cloud.aiplatform.v1.FluencyInstance
 */
export type FluencyInstance = Message<"google.cloud.aiplatform.v1.FluencyInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FluencyInstance.
 * Use `create(FluencyInstanceSchema)` to create a new message.
 */
export const FluencyInstanceSchema: GenMessage<FluencyInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 22);

/**
 * Spec for fluency score metric.
 *
 * @generated from message google.cloud.aiplatform.v1.FluencySpec
 */
export type FluencySpec = Message<"google.cloud.aiplatform.v1.FluencySpec"> & {
  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 1;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FluencySpec.
 * Use `create(FluencySpecSchema)` to create a new message.
 */
export const FluencySpecSchema: GenMessage<FluencySpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 23);

/**
 * Spec for fluency result.
 *
 * @generated from message google.cloud.aiplatform.v1.FluencyResult
 */
export type FluencyResult = Message<"google.cloud.aiplatform.v1.FluencyResult"> & {
  /**
   * Output only. Fluency score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for fluency score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for fluency score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FluencyResult.
 * Use `create(FluencyResultSchema)` to create a new message.
 */
export const FluencyResultSchema: GenMessage<FluencyResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 24);

/**
 * Input for safety metric.
 *
 * @generated from message google.cloud.aiplatform.v1.SafetyInput
 */
export type SafetyInput = Message<"google.cloud.aiplatform.v1.SafetyInput"> & {
  /**
   * Required. Spec for safety metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.SafetySpec metric_spec = 1;
   */
  metricSpec?: SafetySpec;

  /**
   * Required. Safety instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.SafetyInstance instance = 2;
   */
  instance?: SafetyInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SafetyInput.
 * Use `create(SafetyInputSchema)` to create a new message.
 */
export const SafetyInputSchema: GenMessage<SafetyInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 25);

/**
 * Spec for safety instance.
 *
 * @generated from message google.cloud.aiplatform.v1.SafetyInstance
 */
export type SafetyInstance = Message<"google.cloud.aiplatform.v1.SafetyInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SafetyInstance.
 * Use `create(SafetyInstanceSchema)` to create a new message.
 */
export const SafetyInstanceSchema: GenMessage<SafetyInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 26);

/**
 * Spec for safety metric.
 *
 * @generated from message google.cloud.aiplatform.v1.SafetySpec
 */
export type SafetySpec = Message<"google.cloud.aiplatform.v1.SafetySpec"> & {
  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 1;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SafetySpec.
 * Use `create(SafetySpecSchema)` to create a new message.
 */
export const SafetySpecSchema: GenMessage<SafetySpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 27);

/**
 * Spec for safety result.
 *
 * @generated from message google.cloud.aiplatform.v1.SafetyResult
 */
export type SafetyResult = Message<"google.cloud.aiplatform.v1.SafetyResult"> & {
  /**
   * Output only. Safety score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for safety score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for safety score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SafetyResult.
 * Use `create(SafetyResultSchema)` to create a new message.
 */
export const SafetyResultSchema: GenMessage<SafetyResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 28);

/**
 * Input for groundedness metric.
 *
 * @generated from message google.cloud.aiplatform.v1.GroundednessInput
 */
export type GroundednessInput = Message<"google.cloud.aiplatform.v1.GroundednessInput"> & {
  /**
   * Required. Spec for groundedness metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.GroundednessSpec metric_spec = 1;
   */
  metricSpec?: GroundednessSpec;

  /**
   * Required. Groundedness instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.GroundednessInstance instance = 2;
   */
  instance?: GroundednessInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GroundednessInput.
 * Use `create(GroundednessInputSchema)` to create a new message.
 */
export const GroundednessInputSchema: GenMessage<GroundednessInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 29);

/**
 * Spec for groundedness instance.
 *
 * @generated from message google.cloud.aiplatform.v1.GroundednessInstance
 */
export type GroundednessInstance = Message<"google.cloud.aiplatform.v1.GroundednessInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Background information provided in context used to compare
   * against the prediction.
   *
   * @generated from field: optional string context = 2;
   */
  context?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GroundednessInstance.
 * Use `create(GroundednessInstanceSchema)` to create a new message.
 */
export const GroundednessInstanceSchema: GenMessage<GroundednessInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 30);

/**
 * Spec for groundedness metric.
 *
 * @generated from message google.cloud.aiplatform.v1.GroundednessSpec
 */
export type GroundednessSpec = Message<"google.cloud.aiplatform.v1.GroundednessSpec"> & {
  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 1;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GroundednessSpec.
 * Use `create(GroundednessSpecSchema)` to create a new message.
 */
export const GroundednessSpecSchema: GenMessage<GroundednessSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 31);

/**
 * Spec for groundedness result.
 *
 * @generated from message google.cloud.aiplatform.v1.GroundednessResult
 */
export type GroundednessResult = Message<"google.cloud.aiplatform.v1.GroundednessResult"> & {
  /**
   * Output only. Groundedness score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for groundedness score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for groundedness score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GroundednessResult.
 * Use `create(GroundednessResultSchema)` to create a new message.
 */
export const GroundednessResultSchema: GenMessage<GroundednessResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 32);

/**
 * Input for fulfillment metric.
 *
 * @generated from message google.cloud.aiplatform.v1.FulfillmentInput
 */
export type FulfillmentInput = Message<"google.cloud.aiplatform.v1.FulfillmentInput"> & {
  /**
   * Required. Spec for fulfillment score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.FulfillmentSpec metric_spec = 1;
   */
  metricSpec?: FulfillmentSpec;

  /**
   * Required. Fulfillment instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.FulfillmentInstance instance = 2;
   */
  instance?: FulfillmentInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FulfillmentInput.
 * Use `create(FulfillmentInputSchema)` to create a new message.
 */
export const FulfillmentInputSchema: GenMessage<FulfillmentInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 33);

/**
 * Spec for fulfillment instance.
 *
 * @generated from message google.cloud.aiplatform.v1.FulfillmentInstance
 */
export type FulfillmentInstance = Message<"google.cloud.aiplatform.v1.FulfillmentInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Inference instruction prompt to compare prediction with.
   *
   * @generated from field: optional string instruction = 2;
   */
  instruction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FulfillmentInstance.
 * Use `create(FulfillmentInstanceSchema)` to create a new message.
 */
export const FulfillmentInstanceSchema: GenMessage<FulfillmentInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 34);

/**
 * Spec for fulfillment metric.
 *
 * @generated from message google.cloud.aiplatform.v1.FulfillmentSpec
 */
export type FulfillmentSpec = Message<"google.cloud.aiplatform.v1.FulfillmentSpec"> & {
  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 1;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FulfillmentSpec.
 * Use `create(FulfillmentSpecSchema)` to create a new message.
 */
export const FulfillmentSpecSchema: GenMessage<FulfillmentSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 35);

/**
 * Spec for fulfillment result.
 *
 * @generated from message google.cloud.aiplatform.v1.FulfillmentResult
 */
export type FulfillmentResult = Message<"google.cloud.aiplatform.v1.FulfillmentResult"> & {
  /**
   * Output only. Fulfillment score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for fulfillment score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for fulfillment score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FulfillmentResult.
 * Use `create(FulfillmentResultSchema)` to create a new message.
 */
export const FulfillmentResultSchema: GenMessage<FulfillmentResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 36);

/**
 * Input for summarization quality metric.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationQualityInput
 */
export type SummarizationQualityInput = Message<"google.cloud.aiplatform.v1.SummarizationQualityInput"> & {
  /**
   * Required. Spec for summarization quality score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.SummarizationQualitySpec metric_spec = 1;
   */
  metricSpec?: SummarizationQualitySpec;

  /**
   * Required. Summarization quality instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.SummarizationQualityInstance instance = 2;
   */
  instance?: SummarizationQualityInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationQualityInput.
 * Use `create(SummarizationQualityInputSchema)` to create a new message.
 */
export const SummarizationQualityInputSchema: GenMessage<SummarizationQualityInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 37);

/**
 * Spec for summarization quality instance.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationQualityInstance
 */
export type SummarizationQualityInstance = Message<"google.cloud.aiplatform.v1.SummarizationQualityInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Optional. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;

  /**
   * Required. Text to be summarized.
   *
   * @generated from field: optional string context = 3;
   */
  context?: string;

  /**
   * Required. Summarization prompt for LLM.
   *
   * @generated from field: optional string instruction = 4;
   */
  instruction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationQualityInstance.
 * Use `create(SummarizationQualityInstanceSchema)` to create a new message.
 */
export const SummarizationQualityInstanceSchema: GenMessage<SummarizationQualityInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 38);

/**
 * Spec for summarization quality score metric.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationQualitySpec
 */
export type SummarizationQualitySpec = Message<"google.cloud.aiplatform.v1.SummarizationQualitySpec"> & {
  /**
   * Optional. Whether to use instance.reference to compute summarization
   * quality.
   *
   * @generated from field: bool use_reference = 1;
   */
  useReference: boolean;

  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationQualitySpec.
 * Use `create(SummarizationQualitySpecSchema)` to create a new message.
 */
export const SummarizationQualitySpecSchema: GenMessage<SummarizationQualitySpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 39);

/**
 * Spec for summarization quality result.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationQualityResult
 */
export type SummarizationQualityResult = Message<"google.cloud.aiplatform.v1.SummarizationQualityResult"> & {
  /**
   * Output only. Summarization Quality score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for summarization quality score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for summarization quality score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationQualityResult.
 * Use `create(SummarizationQualityResultSchema)` to create a new message.
 */
export const SummarizationQualityResultSchema: GenMessage<SummarizationQualityResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 40);

/**
 * Input for pairwise summarization quality metric.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseSummarizationQualityInput
 */
export type PairwiseSummarizationQualityInput = Message<"google.cloud.aiplatform.v1.PairwiseSummarizationQualityInput"> & {
  /**
   * Required. Spec for pairwise summarization quality score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.PairwiseSummarizationQualitySpec metric_spec = 1;
   */
  metricSpec?: PairwiseSummarizationQualitySpec;

  /**
   * Required. Pairwise summarization quality instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.PairwiseSummarizationQualityInstance instance = 2;
   */
  instance?: PairwiseSummarizationQualityInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseSummarizationQualityInput.
 * Use `create(PairwiseSummarizationQualityInputSchema)` to create a new message.
 */
export const PairwiseSummarizationQualityInputSchema: GenMessage<PairwiseSummarizationQualityInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 41);

/**
 * Spec for pairwise summarization quality instance.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseSummarizationQualityInstance
 */
export type PairwiseSummarizationQualityInstance = Message<"google.cloud.aiplatform.v1.PairwiseSummarizationQualityInstance"> & {
  /**
   * Required. Output of the candidate model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Output of the baseline model.
   *
   * @generated from field: optional string baseline_prediction = 2;
   */
  baselinePrediction?: string;

  /**
   * Optional. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 3;
   */
  reference?: string;

  /**
   * Required. Text to be summarized.
   *
   * @generated from field: optional string context = 4;
   */
  context?: string;

  /**
   * Required. Summarization prompt for LLM.
   *
   * @generated from field: optional string instruction = 5;
   */
  instruction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseSummarizationQualityInstance.
 * Use `create(PairwiseSummarizationQualityInstanceSchema)` to create a new message.
 */
export const PairwiseSummarizationQualityInstanceSchema: GenMessage<PairwiseSummarizationQualityInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 42);

/**
 * Spec for pairwise summarization quality score metric.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseSummarizationQualitySpec
 */
export type PairwiseSummarizationQualitySpec = Message<"google.cloud.aiplatform.v1.PairwiseSummarizationQualitySpec"> & {
  /**
   * Optional. Whether to use instance.reference to compute pairwise
   * summarization quality.
   *
   * @generated from field: bool use_reference = 1;
   */
  useReference: boolean;

  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseSummarizationQualitySpec.
 * Use `create(PairwiseSummarizationQualitySpecSchema)` to create a new message.
 */
export const PairwiseSummarizationQualitySpecSchema: GenMessage<PairwiseSummarizationQualitySpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 43);

/**
 * Spec for pairwise summarization quality result.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseSummarizationQualityResult
 */
export type PairwiseSummarizationQualityResult = Message<"google.cloud.aiplatform.v1.PairwiseSummarizationQualityResult"> & {
  /**
   * Output only. Pairwise summarization prediction choice.
   *
   * @generated from field: google.cloud.aiplatform.v1.PairwiseChoice pairwise_choice = 1;
   */
  pairwiseChoice: PairwiseChoice;

  /**
   * Output only. Explanation for summarization quality score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for summarization quality score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseSummarizationQualityResult.
 * Use `create(PairwiseSummarizationQualityResultSchema)` to create a new message.
 */
export const PairwiseSummarizationQualityResultSchema: GenMessage<PairwiseSummarizationQualityResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 44);

/**
 * Input for summarization helpfulness metric.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationHelpfulnessInput
 */
export type SummarizationHelpfulnessInput = Message<"google.cloud.aiplatform.v1.SummarizationHelpfulnessInput"> & {
  /**
   * Required. Spec for summarization helpfulness score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.SummarizationHelpfulnessSpec metric_spec = 1;
   */
  metricSpec?: SummarizationHelpfulnessSpec;

  /**
   * Required. Summarization helpfulness instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.SummarizationHelpfulnessInstance instance = 2;
   */
  instance?: SummarizationHelpfulnessInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationHelpfulnessInput.
 * Use `create(SummarizationHelpfulnessInputSchema)` to create a new message.
 */
export const SummarizationHelpfulnessInputSchema: GenMessage<SummarizationHelpfulnessInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 45);

/**
 * Spec for summarization helpfulness instance.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationHelpfulnessInstance
 */
export type SummarizationHelpfulnessInstance = Message<"google.cloud.aiplatform.v1.SummarizationHelpfulnessInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Optional. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;

  /**
   * Required. Text to be summarized.
   *
   * @generated from field: optional string context = 3;
   */
  context?: string;

  /**
   * Optional. Summarization prompt for LLM.
   *
   * @generated from field: optional string instruction = 4;
   */
  instruction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationHelpfulnessInstance.
 * Use `create(SummarizationHelpfulnessInstanceSchema)` to create a new message.
 */
export const SummarizationHelpfulnessInstanceSchema: GenMessage<SummarizationHelpfulnessInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 46);

/**
 * Spec for summarization helpfulness score metric.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationHelpfulnessSpec
 */
export type SummarizationHelpfulnessSpec = Message<"google.cloud.aiplatform.v1.SummarizationHelpfulnessSpec"> & {
  /**
   * Optional. Whether to use instance.reference to compute summarization
   * helpfulness.
   *
   * @generated from field: bool use_reference = 1;
   */
  useReference: boolean;

  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationHelpfulnessSpec.
 * Use `create(SummarizationHelpfulnessSpecSchema)` to create a new message.
 */
export const SummarizationHelpfulnessSpecSchema: GenMessage<SummarizationHelpfulnessSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 47);

/**
 * Spec for summarization helpfulness result.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationHelpfulnessResult
 */
export type SummarizationHelpfulnessResult = Message<"google.cloud.aiplatform.v1.SummarizationHelpfulnessResult"> & {
  /**
   * Output only. Summarization Helpfulness score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for summarization helpfulness score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for summarization helpfulness score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationHelpfulnessResult.
 * Use `create(SummarizationHelpfulnessResultSchema)` to create a new message.
 */
export const SummarizationHelpfulnessResultSchema: GenMessage<SummarizationHelpfulnessResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 48);

/**
 * Input for summarization verbosity metric.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationVerbosityInput
 */
export type SummarizationVerbosityInput = Message<"google.cloud.aiplatform.v1.SummarizationVerbosityInput"> & {
  /**
   * Required. Spec for summarization verbosity score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.SummarizationVerbositySpec metric_spec = 1;
   */
  metricSpec?: SummarizationVerbositySpec;

  /**
   * Required. Summarization verbosity instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.SummarizationVerbosityInstance instance = 2;
   */
  instance?: SummarizationVerbosityInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationVerbosityInput.
 * Use `create(SummarizationVerbosityInputSchema)` to create a new message.
 */
export const SummarizationVerbosityInputSchema: GenMessage<SummarizationVerbosityInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 49);

/**
 * Spec for summarization verbosity instance.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationVerbosityInstance
 */
export type SummarizationVerbosityInstance = Message<"google.cloud.aiplatform.v1.SummarizationVerbosityInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Optional. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;

  /**
   * Required. Text to be summarized.
   *
   * @generated from field: optional string context = 3;
   */
  context?: string;

  /**
   * Optional. Summarization prompt for LLM.
   *
   * @generated from field: optional string instruction = 4;
   */
  instruction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationVerbosityInstance.
 * Use `create(SummarizationVerbosityInstanceSchema)` to create a new message.
 */
export const SummarizationVerbosityInstanceSchema: GenMessage<SummarizationVerbosityInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 50);

/**
 * Spec for summarization verbosity score metric.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationVerbositySpec
 */
export type SummarizationVerbositySpec = Message<"google.cloud.aiplatform.v1.SummarizationVerbositySpec"> & {
  /**
   * Optional. Whether to use instance.reference to compute summarization
   * verbosity.
   *
   * @generated from field: bool use_reference = 1;
   */
  useReference: boolean;

  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationVerbositySpec.
 * Use `create(SummarizationVerbositySpecSchema)` to create a new message.
 */
export const SummarizationVerbositySpecSchema: GenMessage<SummarizationVerbositySpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 51);

/**
 * Spec for summarization verbosity result.
 *
 * @generated from message google.cloud.aiplatform.v1.SummarizationVerbosityResult
 */
export type SummarizationVerbosityResult = Message<"google.cloud.aiplatform.v1.SummarizationVerbosityResult"> & {
  /**
   * Output only. Summarization Verbosity score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for summarization verbosity score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for summarization verbosity score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SummarizationVerbosityResult.
 * Use `create(SummarizationVerbosityResultSchema)` to create a new message.
 */
export const SummarizationVerbosityResultSchema: GenMessage<SummarizationVerbosityResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 52);

/**
 * Input for question answering quality metric.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringQualityInput
 */
export type QuestionAnsweringQualityInput = Message<"google.cloud.aiplatform.v1.QuestionAnsweringQualityInput"> & {
  /**
   * Required. Spec for question answering quality score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringQualitySpec metric_spec = 1;
   */
  metricSpec?: QuestionAnsweringQualitySpec;

  /**
   * Required. Question answering quality instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringQualityInstance instance = 2;
   */
  instance?: QuestionAnsweringQualityInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringQualityInput.
 * Use `create(QuestionAnsweringQualityInputSchema)` to create a new message.
 */
export const QuestionAnsweringQualityInputSchema: GenMessage<QuestionAnsweringQualityInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 53);

/**
 * Spec for question answering quality instance.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringQualityInstance
 */
export type QuestionAnsweringQualityInstance = Message<"google.cloud.aiplatform.v1.QuestionAnsweringQualityInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Optional. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;

  /**
   * Required. Text to answer the question.
   *
   * @generated from field: optional string context = 3;
   */
  context?: string;

  /**
   * Required. Question Answering prompt for LLM.
   *
   * @generated from field: optional string instruction = 4;
   */
  instruction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringQualityInstance.
 * Use `create(QuestionAnsweringQualityInstanceSchema)` to create a new message.
 */
export const QuestionAnsweringQualityInstanceSchema: GenMessage<QuestionAnsweringQualityInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 54);

/**
 * Spec for question answering quality score metric.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringQualitySpec
 */
export type QuestionAnsweringQualitySpec = Message<"google.cloud.aiplatform.v1.QuestionAnsweringQualitySpec"> & {
  /**
   * Optional. Whether to use instance.reference to compute question answering
   * quality.
   *
   * @generated from field: bool use_reference = 1;
   */
  useReference: boolean;

  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringQualitySpec.
 * Use `create(QuestionAnsweringQualitySpecSchema)` to create a new message.
 */
export const QuestionAnsweringQualitySpecSchema: GenMessage<QuestionAnsweringQualitySpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 55);

/**
 * Spec for question answering quality result.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringQualityResult
 */
export type QuestionAnsweringQualityResult = Message<"google.cloud.aiplatform.v1.QuestionAnsweringQualityResult"> & {
  /**
   * Output only. Question Answering Quality score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for question answering quality score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for question answering quality score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringQualityResult.
 * Use `create(QuestionAnsweringQualityResultSchema)` to create a new message.
 */
export const QuestionAnsweringQualityResultSchema: GenMessage<QuestionAnsweringQualityResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 56);

/**
 * Input for pairwise question answering quality metric.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityInput
 */
export type PairwiseQuestionAnsweringQualityInput = Message<"google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityInput"> & {
  /**
   * Required. Spec for pairwise question answering quality score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualitySpec metric_spec = 1;
   */
  metricSpec?: PairwiseQuestionAnsweringQualitySpec;

  /**
   * Required. Pairwise question answering quality instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityInstance instance = 2;
   */
  instance?: PairwiseQuestionAnsweringQualityInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityInput.
 * Use `create(PairwiseQuestionAnsweringQualityInputSchema)` to create a new message.
 */
export const PairwiseQuestionAnsweringQualityInputSchema: GenMessage<PairwiseQuestionAnsweringQualityInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 57);

/**
 * Spec for pairwise question answering quality instance.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityInstance
 */
export type PairwiseQuestionAnsweringQualityInstance = Message<"google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityInstance"> & {
  /**
   * Required. Output of the candidate model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Output of the baseline model.
   *
   * @generated from field: optional string baseline_prediction = 2;
   */
  baselinePrediction?: string;

  /**
   * Optional. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 3;
   */
  reference?: string;

  /**
   * Required. Text to answer the question.
   *
   * @generated from field: optional string context = 4;
   */
  context?: string;

  /**
   * Required. Question Answering prompt for LLM.
   *
   * @generated from field: optional string instruction = 5;
   */
  instruction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityInstance.
 * Use `create(PairwiseQuestionAnsweringQualityInstanceSchema)` to create a new message.
 */
export const PairwiseQuestionAnsweringQualityInstanceSchema: GenMessage<PairwiseQuestionAnsweringQualityInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 58);

/**
 * Spec for pairwise question answering quality score metric.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualitySpec
 */
export type PairwiseQuestionAnsweringQualitySpec = Message<"google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualitySpec"> & {
  /**
   * Optional. Whether to use instance.reference to compute question answering
   * quality.
   *
   * @generated from field: bool use_reference = 1;
   */
  useReference: boolean;

  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualitySpec.
 * Use `create(PairwiseQuestionAnsweringQualitySpecSchema)` to create a new message.
 */
export const PairwiseQuestionAnsweringQualitySpecSchema: GenMessage<PairwiseQuestionAnsweringQualitySpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 59);

/**
 * Spec for pairwise question answering quality result.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityResult
 */
export type PairwiseQuestionAnsweringQualityResult = Message<"google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityResult"> & {
  /**
   * Output only. Pairwise question answering prediction choice.
   *
   * @generated from field: google.cloud.aiplatform.v1.PairwiseChoice pairwise_choice = 1;
   */
  pairwiseChoice: PairwiseChoice;

  /**
   * Output only. Explanation for question answering quality score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for question answering quality score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseQuestionAnsweringQualityResult.
 * Use `create(PairwiseQuestionAnsweringQualityResultSchema)` to create a new message.
 */
export const PairwiseQuestionAnsweringQualityResultSchema: GenMessage<PairwiseQuestionAnsweringQualityResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 60);

/**
 * Input for question answering relevance metric.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringRelevanceInput
 */
export type QuestionAnsweringRelevanceInput = Message<"google.cloud.aiplatform.v1.QuestionAnsweringRelevanceInput"> & {
  /**
   * Required. Spec for question answering relevance score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringRelevanceSpec metric_spec = 1;
   */
  metricSpec?: QuestionAnsweringRelevanceSpec;

  /**
   * Required. Question answering relevance instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringRelevanceInstance instance = 2;
   */
  instance?: QuestionAnsweringRelevanceInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringRelevanceInput.
 * Use `create(QuestionAnsweringRelevanceInputSchema)` to create a new message.
 */
export const QuestionAnsweringRelevanceInputSchema: GenMessage<QuestionAnsweringRelevanceInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 61);

/**
 * Spec for question answering relevance instance.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringRelevanceInstance
 */
export type QuestionAnsweringRelevanceInstance = Message<"google.cloud.aiplatform.v1.QuestionAnsweringRelevanceInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Optional. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;

  /**
   * Optional. Text provided as context to answer the question.
   *
   * @generated from field: optional string context = 3;
   */
  context?: string;

  /**
   * Required. The question asked and other instruction in the inference prompt.
   *
   * @generated from field: optional string instruction = 4;
   */
  instruction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringRelevanceInstance.
 * Use `create(QuestionAnsweringRelevanceInstanceSchema)` to create a new message.
 */
export const QuestionAnsweringRelevanceInstanceSchema: GenMessage<QuestionAnsweringRelevanceInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 62);

/**
 * Spec for question answering relevance metric.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringRelevanceSpec
 */
export type QuestionAnsweringRelevanceSpec = Message<"google.cloud.aiplatform.v1.QuestionAnsweringRelevanceSpec"> & {
  /**
   * Optional. Whether to use instance.reference to compute question answering
   * relevance.
   *
   * @generated from field: bool use_reference = 1;
   */
  useReference: boolean;

  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringRelevanceSpec.
 * Use `create(QuestionAnsweringRelevanceSpecSchema)` to create a new message.
 */
export const QuestionAnsweringRelevanceSpecSchema: GenMessage<QuestionAnsweringRelevanceSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 63);

/**
 * Spec for question answering relevance result.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringRelevanceResult
 */
export type QuestionAnsweringRelevanceResult = Message<"google.cloud.aiplatform.v1.QuestionAnsweringRelevanceResult"> & {
  /**
   * Output only. Question Answering Relevance score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for question answering relevance score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for question answering relevance score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringRelevanceResult.
 * Use `create(QuestionAnsweringRelevanceResultSchema)` to create a new message.
 */
export const QuestionAnsweringRelevanceResultSchema: GenMessage<QuestionAnsweringRelevanceResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 64);

/**
 * Input for question answering helpfulness metric.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessInput
 */
export type QuestionAnsweringHelpfulnessInput = Message<"google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessInput"> & {
  /**
   * Required. Spec for question answering helpfulness score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessSpec metric_spec = 1;
   */
  metricSpec?: QuestionAnsweringHelpfulnessSpec;

  /**
   * Required. Question answering helpfulness instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessInstance instance = 2;
   */
  instance?: QuestionAnsweringHelpfulnessInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessInput.
 * Use `create(QuestionAnsweringHelpfulnessInputSchema)` to create a new message.
 */
export const QuestionAnsweringHelpfulnessInputSchema: GenMessage<QuestionAnsweringHelpfulnessInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 65);

/**
 * Spec for question answering helpfulness instance.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessInstance
 */
export type QuestionAnsweringHelpfulnessInstance = Message<"google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Optional. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;

  /**
   * Optional. Text provided as context to answer the question.
   *
   * @generated from field: optional string context = 3;
   */
  context?: string;

  /**
   * Required. The question asked and other instruction in the inference prompt.
   *
   * @generated from field: optional string instruction = 4;
   */
  instruction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessInstance.
 * Use `create(QuestionAnsweringHelpfulnessInstanceSchema)` to create a new message.
 */
export const QuestionAnsweringHelpfulnessInstanceSchema: GenMessage<QuestionAnsweringHelpfulnessInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 66);

/**
 * Spec for question answering helpfulness metric.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessSpec
 */
export type QuestionAnsweringHelpfulnessSpec = Message<"google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessSpec"> & {
  /**
   * Optional. Whether to use instance.reference to compute question answering
   * helpfulness.
   *
   * @generated from field: bool use_reference = 1;
   */
  useReference: boolean;

  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessSpec.
 * Use `create(QuestionAnsweringHelpfulnessSpecSchema)` to create a new message.
 */
export const QuestionAnsweringHelpfulnessSpecSchema: GenMessage<QuestionAnsweringHelpfulnessSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 67);

/**
 * Spec for question answering helpfulness result.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessResult
 */
export type QuestionAnsweringHelpfulnessResult = Message<"google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessResult"> & {
  /**
   * Output only. Question Answering Helpfulness score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for question answering helpfulness score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for question answering helpfulness score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringHelpfulnessResult.
 * Use `create(QuestionAnsweringHelpfulnessResultSchema)` to create a new message.
 */
export const QuestionAnsweringHelpfulnessResultSchema: GenMessage<QuestionAnsweringHelpfulnessResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 68);

/**
 * Input for question answering correctness metric.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessInput
 */
export type QuestionAnsweringCorrectnessInput = Message<"google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessInput"> & {
  /**
   * Required. Spec for question answering correctness score metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessSpec metric_spec = 1;
   */
  metricSpec?: QuestionAnsweringCorrectnessSpec;

  /**
   * Required. Question answering correctness instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessInstance instance = 2;
   */
  instance?: QuestionAnsweringCorrectnessInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessInput.
 * Use `create(QuestionAnsweringCorrectnessInputSchema)` to create a new message.
 */
export const QuestionAnsweringCorrectnessInputSchema: GenMessage<QuestionAnsweringCorrectnessInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 69);

/**
 * Spec for question answering correctness instance.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessInstance
 */
export type QuestionAnsweringCorrectnessInstance = Message<"google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Optional. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;

  /**
   * Optional. Text provided as context to answer the question.
   *
   * @generated from field: optional string context = 3;
   */
  context?: string;

  /**
   * Required. The question asked and other instruction in the inference prompt.
   *
   * @generated from field: optional string instruction = 4;
   */
  instruction?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessInstance.
 * Use `create(QuestionAnsweringCorrectnessInstanceSchema)` to create a new message.
 */
export const QuestionAnsweringCorrectnessInstanceSchema: GenMessage<QuestionAnsweringCorrectnessInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 70);

/**
 * Spec for question answering correctness metric.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessSpec
 */
export type QuestionAnsweringCorrectnessSpec = Message<"google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessSpec"> & {
  /**
   * Optional. Whether to use instance.reference to compute question answering
   * correctness.
   *
   * @generated from field: bool use_reference = 1;
   */
  useReference: boolean;

  /**
   * Optional. Which version to use for evaluation.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessSpec.
 * Use `create(QuestionAnsweringCorrectnessSpecSchema)` to create a new message.
 */
export const QuestionAnsweringCorrectnessSpecSchema: GenMessage<QuestionAnsweringCorrectnessSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 71);

/**
 * Spec for question answering correctness result.
 *
 * @generated from message google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessResult
 */
export type QuestionAnsweringCorrectnessResult = Message<"google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessResult"> & {
  /**
   * Output only. Question Answering Correctness score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for question answering correctness score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;

  /**
   * Output only. Confidence for question answering correctness score.
   *
   * @generated from field: optional float confidence = 3;
   */
  confidence?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.QuestionAnsweringCorrectnessResult.
 * Use `create(QuestionAnsweringCorrectnessResultSchema)` to create a new message.
 */
export const QuestionAnsweringCorrectnessResultSchema: GenMessage<QuestionAnsweringCorrectnessResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 72);

/**
 * Input for pointwise metric.
 *
 * @generated from message google.cloud.aiplatform.v1.PointwiseMetricInput
 */
export type PointwiseMetricInput = Message<"google.cloud.aiplatform.v1.PointwiseMetricInput"> & {
  /**
   * Required. Spec for pointwise metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.PointwiseMetricSpec metric_spec = 1;
   */
  metricSpec?: PointwiseMetricSpec;

  /**
   * Required. Pointwise metric instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.PointwiseMetricInstance instance = 2;
   */
  instance?: PointwiseMetricInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PointwiseMetricInput.
 * Use `create(PointwiseMetricInputSchema)` to create a new message.
 */
export const PointwiseMetricInputSchema: GenMessage<PointwiseMetricInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 73);

/**
 * Pointwise metric instance. Usually one instance corresponds to one row in an
 * evaluation dataset.
 *
 * @generated from message google.cloud.aiplatform.v1.PointwiseMetricInstance
 */
export type PointwiseMetricInstance = Message<"google.cloud.aiplatform.v1.PointwiseMetricInstance"> & {
  /**
   * Instance for pointwise metric.
   *
   * @generated from oneof google.cloud.aiplatform.v1.PointwiseMetricInstance.instance
   */
  instance: {
    /**
     * Instance specified as a json string. String key-value pairs are expected
     * in the json_instance to render
     * PointwiseMetricSpec.instance_prompt_template.
     *
     * @generated from field: string json_instance = 1;
     */
    value: string;
    case: "jsonInstance";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1.PointwiseMetricInstance.
 * Use `create(PointwiseMetricInstanceSchema)` to create a new message.
 */
export const PointwiseMetricInstanceSchema: GenMessage<PointwiseMetricInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 74);

/**
 * Spec for pointwise metric.
 *
 * @generated from message google.cloud.aiplatform.v1.PointwiseMetricSpec
 */
export type PointwiseMetricSpec = Message<"google.cloud.aiplatform.v1.PointwiseMetricSpec"> & {
  /**
   * Required. Metric prompt template for pointwise metric.
   *
   * @generated from field: optional string metric_prompt_template = 1;
   */
  metricPromptTemplate?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PointwiseMetricSpec.
 * Use `create(PointwiseMetricSpecSchema)` to create a new message.
 */
export const PointwiseMetricSpecSchema: GenMessage<PointwiseMetricSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 75);

/**
 * Spec for pointwise metric result.
 *
 * @generated from message google.cloud.aiplatform.v1.PointwiseMetricResult
 */
export type PointwiseMetricResult = Message<"google.cloud.aiplatform.v1.PointwiseMetricResult"> & {
  /**
   * Output only. Pointwise metric score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;

  /**
   * Output only. Explanation for pointwise metric score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PointwiseMetricResult.
 * Use `create(PointwiseMetricResultSchema)` to create a new message.
 */
export const PointwiseMetricResultSchema: GenMessage<PointwiseMetricResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 76);

/**
 * Input for pairwise metric.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseMetricInput
 */
export type PairwiseMetricInput = Message<"google.cloud.aiplatform.v1.PairwiseMetricInput"> & {
  /**
   * Required. Spec for pairwise metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.PairwiseMetricSpec metric_spec = 1;
   */
  metricSpec?: PairwiseMetricSpec;

  /**
   * Required. Pairwise metric instance.
   *
   * @generated from field: google.cloud.aiplatform.v1.PairwiseMetricInstance instance = 2;
   */
  instance?: PairwiseMetricInstance;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseMetricInput.
 * Use `create(PairwiseMetricInputSchema)` to create a new message.
 */
export const PairwiseMetricInputSchema: GenMessage<PairwiseMetricInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 77);

/**
 * Pairwise metric instance. Usually one instance corresponds to one row in an
 * evaluation dataset.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseMetricInstance
 */
export type PairwiseMetricInstance = Message<"google.cloud.aiplatform.v1.PairwiseMetricInstance"> & {
  /**
   * Instance for pairwise metric.
   *
   * @generated from oneof google.cloud.aiplatform.v1.PairwiseMetricInstance.instance
   */
  instance: {
    /**
     * Instance specified as a json string. String key-value pairs are expected
     * in the json_instance to render
     * PairwiseMetricSpec.instance_prompt_template.
     *
     * @generated from field: string json_instance = 1;
     */
    value: string;
    case: "jsonInstance";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseMetricInstance.
 * Use `create(PairwiseMetricInstanceSchema)` to create a new message.
 */
export const PairwiseMetricInstanceSchema: GenMessage<PairwiseMetricInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 78);

/**
 * Spec for pairwise metric.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseMetricSpec
 */
export type PairwiseMetricSpec = Message<"google.cloud.aiplatform.v1.PairwiseMetricSpec"> & {
  /**
   * Required. Metric prompt template for pairwise metric.
   *
   * @generated from field: optional string metric_prompt_template = 1;
   */
  metricPromptTemplate?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseMetricSpec.
 * Use `create(PairwiseMetricSpecSchema)` to create a new message.
 */
export const PairwiseMetricSpecSchema: GenMessage<PairwiseMetricSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 79);

/**
 * Spec for pairwise metric result.
 *
 * @generated from message google.cloud.aiplatform.v1.PairwiseMetricResult
 */
export type PairwiseMetricResult = Message<"google.cloud.aiplatform.v1.PairwiseMetricResult"> & {
  /**
   * Output only. Pairwise metric choice.
   *
   * @generated from field: google.cloud.aiplatform.v1.PairwiseChoice pairwise_choice = 1;
   */
  pairwiseChoice: PairwiseChoice;

  /**
   * Output only. Explanation for pairwise metric score.
   *
   * @generated from field: string explanation = 2;
   */
  explanation: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.PairwiseMetricResult.
 * Use `create(PairwiseMetricResultSchema)` to create a new message.
 */
export const PairwiseMetricResultSchema: GenMessage<PairwiseMetricResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 80);

/**
 * Input for tool call valid metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolCallValidInput
 */
export type ToolCallValidInput = Message<"google.cloud.aiplatform.v1.ToolCallValidInput"> & {
  /**
   * Required. Spec for tool call valid metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.ToolCallValidSpec metric_spec = 1;
   */
  metricSpec?: ToolCallValidSpec;

  /**
   * Required. Repeated tool call valid instances.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ToolCallValidInstance instances = 2;
   */
  instances: ToolCallValidInstance[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolCallValidInput.
 * Use `create(ToolCallValidInputSchema)` to create a new message.
 */
export const ToolCallValidInputSchema: GenMessage<ToolCallValidInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 81);

/**
 * Spec for tool call valid metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolCallValidSpec
 */
export type ToolCallValidSpec = Message<"google.cloud.aiplatform.v1.ToolCallValidSpec"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolCallValidSpec.
 * Use `create(ToolCallValidSpecSchema)` to create a new message.
 */
export const ToolCallValidSpecSchema: GenMessage<ToolCallValidSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 82);

/**
 * Spec for tool call valid instance.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolCallValidInstance
 */
export type ToolCallValidInstance = Message<"google.cloud.aiplatform.v1.ToolCallValidInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolCallValidInstance.
 * Use `create(ToolCallValidInstanceSchema)` to create a new message.
 */
export const ToolCallValidInstanceSchema: GenMessage<ToolCallValidInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 83);

/**
 * Results for tool call valid metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolCallValidResults
 */
export type ToolCallValidResults = Message<"google.cloud.aiplatform.v1.ToolCallValidResults"> & {
  /**
   * Output only. Tool call valid metric values.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ToolCallValidMetricValue tool_call_valid_metric_values = 1;
   */
  toolCallValidMetricValues: ToolCallValidMetricValue[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolCallValidResults.
 * Use `create(ToolCallValidResultsSchema)` to create a new message.
 */
export const ToolCallValidResultsSchema: GenMessage<ToolCallValidResults> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 84);

/**
 * Tool call valid metric value for an instance.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolCallValidMetricValue
 */
export type ToolCallValidMetricValue = Message<"google.cloud.aiplatform.v1.ToolCallValidMetricValue"> & {
  /**
   * Output only. Tool call valid score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolCallValidMetricValue.
 * Use `create(ToolCallValidMetricValueSchema)` to create a new message.
 */
export const ToolCallValidMetricValueSchema: GenMessage<ToolCallValidMetricValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 85);

/**
 * Input for tool name match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolNameMatchInput
 */
export type ToolNameMatchInput = Message<"google.cloud.aiplatform.v1.ToolNameMatchInput"> & {
  /**
   * Required. Spec for tool name match metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.ToolNameMatchSpec metric_spec = 1;
   */
  metricSpec?: ToolNameMatchSpec;

  /**
   * Required. Repeated tool name match instances.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ToolNameMatchInstance instances = 2;
   */
  instances: ToolNameMatchInstance[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolNameMatchInput.
 * Use `create(ToolNameMatchInputSchema)` to create a new message.
 */
export const ToolNameMatchInputSchema: GenMessage<ToolNameMatchInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 86);

/**
 * Spec for tool name match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolNameMatchSpec
 */
export type ToolNameMatchSpec = Message<"google.cloud.aiplatform.v1.ToolNameMatchSpec"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolNameMatchSpec.
 * Use `create(ToolNameMatchSpecSchema)` to create a new message.
 */
export const ToolNameMatchSpecSchema: GenMessage<ToolNameMatchSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 87);

/**
 * Spec for tool name match instance.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolNameMatchInstance
 */
export type ToolNameMatchInstance = Message<"google.cloud.aiplatform.v1.ToolNameMatchInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolNameMatchInstance.
 * Use `create(ToolNameMatchInstanceSchema)` to create a new message.
 */
export const ToolNameMatchInstanceSchema: GenMessage<ToolNameMatchInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 88);

/**
 * Results for tool name match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolNameMatchResults
 */
export type ToolNameMatchResults = Message<"google.cloud.aiplatform.v1.ToolNameMatchResults"> & {
  /**
   * Output only. Tool name match metric values.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ToolNameMatchMetricValue tool_name_match_metric_values = 1;
   */
  toolNameMatchMetricValues: ToolNameMatchMetricValue[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolNameMatchResults.
 * Use `create(ToolNameMatchResultsSchema)` to create a new message.
 */
export const ToolNameMatchResultsSchema: GenMessage<ToolNameMatchResults> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 89);

/**
 * Tool name match metric value for an instance.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolNameMatchMetricValue
 */
export type ToolNameMatchMetricValue = Message<"google.cloud.aiplatform.v1.ToolNameMatchMetricValue"> & {
  /**
   * Output only. Tool name match score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolNameMatchMetricValue.
 * Use `create(ToolNameMatchMetricValueSchema)` to create a new message.
 */
export const ToolNameMatchMetricValueSchema: GenMessage<ToolNameMatchMetricValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 90);

/**
 * Input for tool parameter key match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolParameterKeyMatchInput
 */
export type ToolParameterKeyMatchInput = Message<"google.cloud.aiplatform.v1.ToolParameterKeyMatchInput"> & {
  /**
   * Required. Spec for tool parameter key match metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.ToolParameterKeyMatchSpec metric_spec = 1;
   */
  metricSpec?: ToolParameterKeyMatchSpec;

  /**
   * Required. Repeated tool parameter key match instances.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ToolParameterKeyMatchInstance instances = 2;
   */
  instances: ToolParameterKeyMatchInstance[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolParameterKeyMatchInput.
 * Use `create(ToolParameterKeyMatchInputSchema)` to create a new message.
 */
export const ToolParameterKeyMatchInputSchema: GenMessage<ToolParameterKeyMatchInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 91);

/**
 * Spec for tool parameter key match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolParameterKeyMatchSpec
 */
export type ToolParameterKeyMatchSpec = Message<"google.cloud.aiplatform.v1.ToolParameterKeyMatchSpec"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolParameterKeyMatchSpec.
 * Use `create(ToolParameterKeyMatchSpecSchema)` to create a new message.
 */
export const ToolParameterKeyMatchSpecSchema: GenMessage<ToolParameterKeyMatchSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 92);

/**
 * Spec for tool parameter key match instance.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolParameterKeyMatchInstance
 */
export type ToolParameterKeyMatchInstance = Message<"google.cloud.aiplatform.v1.ToolParameterKeyMatchInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolParameterKeyMatchInstance.
 * Use `create(ToolParameterKeyMatchInstanceSchema)` to create a new message.
 */
export const ToolParameterKeyMatchInstanceSchema: GenMessage<ToolParameterKeyMatchInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 93);

/**
 * Results for tool parameter key match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolParameterKeyMatchResults
 */
export type ToolParameterKeyMatchResults = Message<"google.cloud.aiplatform.v1.ToolParameterKeyMatchResults"> & {
  /**
   * Output only. Tool parameter key match metric values.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ToolParameterKeyMatchMetricValue tool_parameter_key_match_metric_values = 1;
   */
  toolParameterKeyMatchMetricValues: ToolParameterKeyMatchMetricValue[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolParameterKeyMatchResults.
 * Use `create(ToolParameterKeyMatchResultsSchema)` to create a new message.
 */
export const ToolParameterKeyMatchResultsSchema: GenMessage<ToolParameterKeyMatchResults> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 94);

/**
 * Tool parameter key match metric value for an instance.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolParameterKeyMatchMetricValue
 */
export type ToolParameterKeyMatchMetricValue = Message<"google.cloud.aiplatform.v1.ToolParameterKeyMatchMetricValue"> & {
  /**
   * Output only. Tool parameter key match score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolParameterKeyMatchMetricValue.
 * Use `create(ToolParameterKeyMatchMetricValueSchema)` to create a new message.
 */
export const ToolParameterKeyMatchMetricValueSchema: GenMessage<ToolParameterKeyMatchMetricValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 95);

/**
 * Input for tool parameter key value match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolParameterKVMatchInput
 */
export type ToolParameterKVMatchInput = Message<"google.cloud.aiplatform.v1.ToolParameterKVMatchInput"> & {
  /**
   * Required. Spec for tool parameter key value match metric.
   *
   * @generated from field: google.cloud.aiplatform.v1.ToolParameterKVMatchSpec metric_spec = 1;
   */
  metricSpec?: ToolParameterKVMatchSpec;

  /**
   * Required. Repeated tool parameter key value match instances.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ToolParameterKVMatchInstance instances = 2;
   */
  instances: ToolParameterKVMatchInstance[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolParameterKVMatchInput.
 * Use `create(ToolParameterKVMatchInputSchema)` to create a new message.
 */
export const ToolParameterKVMatchInputSchema: GenMessage<ToolParameterKVMatchInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 96);

/**
 * Spec for tool parameter key value match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolParameterKVMatchSpec
 */
export type ToolParameterKVMatchSpec = Message<"google.cloud.aiplatform.v1.ToolParameterKVMatchSpec"> & {
  /**
   * Optional. Whether to use STRCIT string match on parameter values.
   *
   * @generated from field: bool use_strict_string_match = 1;
   */
  useStrictStringMatch: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolParameterKVMatchSpec.
 * Use `create(ToolParameterKVMatchSpecSchema)` to create a new message.
 */
export const ToolParameterKVMatchSpecSchema: GenMessage<ToolParameterKVMatchSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 97);

/**
 * Spec for tool parameter key value match instance.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolParameterKVMatchInstance
 */
export type ToolParameterKVMatchInstance = Message<"google.cloud.aiplatform.v1.ToolParameterKVMatchInstance"> & {
  /**
   * Required. Output of the evaluated model.
   *
   * @generated from field: optional string prediction = 1;
   */
  prediction?: string;

  /**
   * Required. Ground truth used to compare against the prediction.
   *
   * @generated from field: optional string reference = 2;
   */
  reference?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolParameterKVMatchInstance.
 * Use `create(ToolParameterKVMatchInstanceSchema)` to create a new message.
 */
export const ToolParameterKVMatchInstanceSchema: GenMessage<ToolParameterKVMatchInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 98);

/**
 * Results for tool parameter key value match metric.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolParameterKVMatchResults
 */
export type ToolParameterKVMatchResults = Message<"google.cloud.aiplatform.v1.ToolParameterKVMatchResults"> & {
  /**
   * Output only. Tool parameter key value match metric values.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ToolParameterKVMatchMetricValue tool_parameter_kv_match_metric_values = 1;
   */
  toolParameterKvMatchMetricValues: ToolParameterKVMatchMetricValue[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolParameterKVMatchResults.
 * Use `create(ToolParameterKVMatchResultsSchema)` to create a new message.
 */
export const ToolParameterKVMatchResultsSchema: GenMessage<ToolParameterKVMatchResults> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 99);

/**
 * Tool parameter key value match metric value for an instance.
 *
 * @generated from message google.cloud.aiplatform.v1.ToolParameterKVMatchMetricValue
 */
export type ToolParameterKVMatchMetricValue = Message<"google.cloud.aiplatform.v1.ToolParameterKVMatchMetricValue"> & {
  /**
   * Output only. Tool parameter key value match score.
   *
   * @generated from field: optional float score = 1;
   */
  score?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ToolParameterKVMatchMetricValue.
 * Use `create(ToolParameterKVMatchMetricValueSchema)` to create a new message.
 */
export const ToolParameterKVMatchMetricValueSchema: GenMessage<ToolParameterKVMatchMetricValue> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_evaluation_service, 100);

/**
 * Pairwise prediction autorater preference.
 *
 * @generated from enum google.cloud.aiplatform.v1.PairwiseChoice
 */
export enum PairwiseChoice {
  /**
   * Unspecified prediction choice.
   *
   * @generated from enum value: PAIRWISE_CHOICE_UNSPECIFIED = 0;
   */
  PAIRWISE_CHOICE_UNSPECIFIED = 0,

  /**
   * Baseline prediction wins
   *
   * @generated from enum value: BASELINE = 1;
   */
  BASELINE = 1,

  /**
   * Candidate prediction wins
   *
   * @generated from enum value: CANDIDATE = 2;
   */
  CANDIDATE = 2,

  /**
   * Winner cannot be determined
   *
   * @generated from enum value: TIE = 3;
   */
  TIE = 3,
}

/**
 * Describes the enum google.cloud.aiplatform.v1.PairwiseChoice.
 */
export const PairwiseChoiceSchema: GenEnum<PairwiseChoice> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1_evaluation_service, 0);

/**
 * Vertex AI Online Evaluation Service.
 *
 * @generated from service google.cloud.aiplatform.v1.EvaluationService
 */
export const EvaluationService: GenService<{
  /**
   * Evaluates instances based on a given metric.
   *
   * @generated from rpc google.cloud.aiplatform.v1.EvaluationService.EvaluateInstances
   */
  evaluateInstances: {
    methodKind: "unary";
    input: typeof EvaluateInstancesRequestSchema;
    output: typeof EvaluateInstancesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1_evaluation_service, 0);

