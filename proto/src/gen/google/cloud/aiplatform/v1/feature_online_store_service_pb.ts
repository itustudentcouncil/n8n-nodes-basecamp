// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1/feature_online_store_service.proto (package google.cloud.aiplatform.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { FeatureValue } from "./featurestore_online_service_pb";
import { file_google_cloud_aiplatform_v1_featurestore_online_service } from "./featurestore_online_service_pb";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1/feature_online_store_service.proto.
 */
export const file_google_cloud_aiplatform_v1_feature_online_store_service: GenFile = /*@__PURE__*/
  fileDesc("Cj1nb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9mZWF0dXJlX29ubGluZV9zdG9yZV9zZXJ2aWNlLnByb3RvEhpnb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MSKlAQoSRmVhdHVyZVZpZXdEYXRhS2V5Eg0KA2tleRgBIAEoCUgAElQKDWNvbXBvc2l0ZV9rZXkYAiABKAsyOy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5GZWF0dXJlVmlld0RhdGFLZXkuQ29tcG9zaXRlS2V5SAAaHQoMQ29tcG9zaXRlS2V5Eg0KBXBhcnRzGAEgAygJQgsKCWtleV9vbmVvZiL0AQoZRmV0Y2hGZWF0dXJlVmFsdWVzUmVxdWVzdBJDCgxmZWF0dXJlX3ZpZXcYASABKAlCLeBBAvpBJwolYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9GZWF0dXJlVmlldxJFCghkYXRhX2tleRgGIAEoCzIuLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkZlYXR1cmVWaWV3RGF0YUtleUID4EEBEksKC2RhdGFfZm9ybWF0GAcgASgOMjEuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuRmVhdHVyZVZpZXdEYXRhRm9ybWF0QgPgQQEi/gMKGkZldGNoRmVhdHVyZVZhbHVlc1Jlc3BvbnNlEmUKCmtleV92YWx1ZXMYAyABKAsyTy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5GZXRjaEZlYXR1cmVWYWx1ZXNSZXNwb25zZS5GZWF0dXJlTmFtZVZhbHVlUGFpckxpc3RIABIvCgxwcm90b19zdHJ1Y3QYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0SAASQAoIZGF0YV9rZXkYBCABKAsyLi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5GZWF0dXJlVmlld0RhdGFLZXka+wEKGEZlYXR1cmVOYW1lVmFsdWVQYWlyTGlzdBJ2CghmZWF0dXJlcxgBIAMoCzJkLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkZldGNoRmVhdHVyZVZhbHVlc1Jlc3BvbnNlLkZlYXR1cmVOYW1lVmFsdWVQYWlyTGlzdC5GZWF0dXJlTmFtZVZhbHVlUGFpchpnChRGZWF0dXJlTmFtZVZhbHVlUGFpchI5CgV2YWx1ZRgCIAEoCzIoLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkZlYXR1cmVWYWx1ZUgAEgwKBG5hbWUYASABKAlCBgoEZGF0YUIICgZmb3JtYXQiowgKFE5lYXJlc3ROZWlnaGJvclF1ZXJ5EhgKCWVudGl0eV9pZBgBIAEoCUID4EEBSAASVAoJZW1iZWRkaW5nGAIgASgLMjouZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTmVhcmVzdE5laWdoYm9yUXVlcnkuRW1iZWRkaW5nQgPgQQFIABIbCg5uZWlnaGJvcl9jb3VudBgDIAEoBUID4EEBEloKDnN0cmluZ19maWx0ZXJzGAQgAygLMj0uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTmVhcmVzdE5laWdoYm9yUXVlcnkuU3RyaW5nRmlsdGVyQgPgQQESXAoPbnVtZXJpY19maWx0ZXJzGAggAygLMj4uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTmVhcmVzdE5laWdoYm9yUXVlcnkuTnVtZXJpY0ZpbHRlckID4EEBEjIKJXBlcl9jcm93ZGluZ19hdHRyaWJ1dGVfbmVpZ2hib3JfY291bnQYBSABKAVCA+BBARJUCgpwYXJhbWV0ZXJzGAcgASgLMjsuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTmVhcmVzdE5laWdoYm9yUXVlcnkuUGFyYW1ldGVyc0ID4EEBGh8KCUVtYmVkZGluZxISCgV2YWx1ZRgBIAMoAkID4EEBGlYKDFN0cmluZ0ZpbHRlchIRCgRuYW1lGAEgASgJQgPgQQISGQoMYWxsb3dfdG9rZW5zGAIgAygJQgPgQQESGAoLZGVueV90b2tlbnMYAyADKAlCA+BBARrPAgoNTnVtZXJpY0ZpbHRlchITCgl2YWx1ZV9pbnQYAiABKANIABIVCgt2YWx1ZV9mbG9hdBgDIAEoAkgAEhYKDHZhbHVlX2RvdWJsZRgEIAEoAUgAEhEKBG5hbWUYASABKAlCA+BBAhJdCgJvcBgFIAEoDjJHLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLk5lYXJlc3ROZWlnaGJvclF1ZXJ5Lk51bWVyaWNGaWx0ZXIuT3BlcmF0b3JCA+BBAUgBiAEBIngKCE9wZXJhdG9yEhgKFE9QRVJBVE9SX1VOU1BFQ0lGSUVEEAASCAoETEVTUxABEg4KCkxFU1NfRVFVQUwQAhIJCgVFUVVBTBADEhEKDUdSRUFURVJfRVFVQUwQBBILCgdHUkVBVEVSEAUSDQoJTk9UX0VRVUFMEAZCBwoFVmFsdWVCBQoDX29wGmMKClBhcmFtZXRlcnMSLAofYXBwcm94aW1hdGVfbmVpZ2hib3JfY2FuZGlkYXRlcxgBIAEoBUID4EEBEicKGmxlYWZfbm9kZXNfc2VhcmNoX2ZyYWN0aW9uGAIgASgBQgPgQQFCCgoIaW5zdGFuY2UiygEKHFNlYXJjaE5lYXJlc3RFbnRpdGllc1JlcXVlc3QSQwoMZmVhdHVyZV92aWV3GAEgASgJQi3gQQL6QScKJWFpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vRmVhdHVyZVZpZXcSRAoFcXVlcnkYAiABKAsyMC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5OZWFyZXN0TmVpZ2hib3JRdWVyeUID4EECEh8KEnJldHVybl9mdWxsX2VudGl0eRgDIAEoCEID4EEBIuEBChBOZWFyZXN0TmVpZ2hib3JzEkgKCW5laWdoYm9ycxgBIAMoCzI1Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLk5lYXJlc3ROZWlnaGJvcnMuTmVpZ2hib3IaggEKCE5laWdoYm9yEhEKCWVudGl0eV9pZBgBIAEoCRIQCghkaXN0YW5jZRgCIAEoARJRChFlbnRpdHlfa2V5X3ZhbHVlcxgDIAEoCzI2Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkZldGNoRmVhdHVyZVZhbHVlc1Jlc3BvbnNlImgKHVNlYXJjaE5lYXJlc3RFbnRpdGllc1Jlc3BvbnNlEkcKEW5lYXJlc3RfbmVpZ2hib3JzGAEgASgLMiwuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTmVhcmVzdE5laWdoYm9ycypiChVGZWF0dXJlVmlld0RhdGFGb3JtYXQSKAokRkVBVFVSRV9WSUVXX0RBVEFfRk9STUFUX1VOU1BFQ0lGSUVEEAASDQoJS0VZX1ZBTFVFEAESEAoMUFJPVE9fU1RSVUNUEAIy+AQKGUZlYXR1cmVPbmxpbmVTdG9yZVNlcnZpY2USiwIKEkZldGNoRmVhdHVyZVZhbHVlcxI1Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkZldGNoRmVhdHVyZVZhbHVlc1JlcXVlc3QaNi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5GZXRjaEZlYXR1cmVWYWx1ZXNSZXNwb25zZSKFAdpBFmZlYXR1cmVfdmlldywgZGF0YV9rZXmC0+STAmY6ASoiYS92MS97ZmVhdHVyZV92aWV3PXByb2plY3RzLyovbG9jYXRpb25zLyovZmVhdHVyZU9ubGluZVN0b3Jlcy8qL2ZlYXR1cmVWaWV3cy8qfTpmZXRjaEZlYXR1cmVWYWx1ZXMS/QEKFVNlYXJjaE5lYXJlc3RFbnRpdGllcxI4Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLlNlYXJjaE5lYXJlc3RFbnRpdGllc1JlcXVlc3QaOS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5TZWFyY2hOZWFyZXN0RW50aXRpZXNSZXNwb25zZSJvgtPkkwJpOgEqImQvdjEve2ZlYXR1cmVfdmlldz1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2ZlYXR1cmVPbmxpbmVTdG9yZXMvKi9mZWF0dXJlVmlld3MvKn06c2VhcmNoTmVhcmVzdEVudGl0aWVzGk3KQRlhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybULcAQoeY29tLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxQh5GZWF0dXJlT25saW5lU3RvcmVTZXJ2aWNlUHJvdG9QAVo+Y2xvdWQuZ29vZ2xlLmNvbS9nby9haXBsYXRmb3JtL2FwaXYxL2FpcGxhdGZvcm1wYjthaXBsYXRmb3JtcGKqAhpHb29nbGUuQ2xvdWQuQUlQbGF0Zm9ybS5WMcoCGkdvb2dsZVxDbG91ZFxBSVBsYXRmb3JtXFYx6gIdR29vZ2xlOjpDbG91ZDo6QUlQbGF0Zm9ybTo6VjFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1_featurestore_online_service, file_google_protobuf_struct]);

/**
 * Lookup key for a feature view.
 *
 * @generated from message google.cloud.aiplatform.v1.FeatureViewDataKey
 */
export type FeatureViewDataKey = Message<"google.cloud.aiplatform.v1.FeatureViewDataKey"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.FeatureViewDataKey.key_oneof
   */
  keyOneof: {
    /**
     * String key to use for lookup.
     *
     * @generated from field: string key = 1;
     */
    value: string;
    case: "key";
  } | {
    /**
     * The actual Entity ID will be composed from this struct. This should match
     * with the way ID is defined in the FeatureView spec.
     *
     * @generated from field: google.cloud.aiplatform.v1.FeatureViewDataKey.CompositeKey composite_key = 2;
     */
    value: FeatureViewDataKey_CompositeKey;
    case: "compositeKey";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1.FeatureViewDataKey.
 * Use `create(FeatureViewDataKeySchema)` to create a new message.
 */
export const FeatureViewDataKeySchema: GenMessage<FeatureViewDataKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 0);

/**
 * ID that is comprised from several parts (columns).
 *
 * @generated from message google.cloud.aiplatform.v1.FeatureViewDataKey.CompositeKey
 */
export type FeatureViewDataKey_CompositeKey = Message<"google.cloud.aiplatform.v1.FeatureViewDataKey.CompositeKey"> & {
  /**
   * Parts to construct Entity ID. Should match with the same ID columns as
   * defined in FeatureView in the same order.
   *
   * @generated from field: repeated string parts = 1;
   */
  parts: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.FeatureViewDataKey.CompositeKey.
 * Use `create(FeatureViewDataKey_CompositeKeySchema)` to create a new message.
 */
export const FeatureViewDataKey_CompositeKeySchema: GenMessage<FeatureViewDataKey_CompositeKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 0, 0);

/**
 * Request message for
 * [FeatureOnlineStoreService.FetchFeatureValues][google.cloud.aiplatform.v1.FeatureOnlineStoreService.FetchFeatureValues].
 * All the features under the requested feature view will be returned.
 *
 * @generated from message google.cloud.aiplatform.v1.FetchFeatureValuesRequest
 */
export type FetchFeatureValuesRequest = Message<"google.cloud.aiplatform.v1.FetchFeatureValuesRequest"> & {
  /**
   * Required. FeatureView resource format
   * `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
   *
   * @generated from field: string feature_view = 1;
   */
  featureView: string;

  /**
   * Optional. The request key to fetch feature values for.
   *
   * @generated from field: google.cloud.aiplatform.v1.FeatureViewDataKey data_key = 6;
   */
  dataKey?: FeatureViewDataKey;

  /**
   * Optional. Response data format. If not set,
   * [FeatureViewDataFormat.KEY_VALUE][google.cloud.aiplatform.v1.FeatureViewDataFormat.KEY_VALUE]
   * will be used.
   *
   * @generated from field: google.cloud.aiplatform.v1.FeatureViewDataFormat data_format = 7;
   */
  dataFormat: FeatureViewDataFormat;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FetchFeatureValuesRequest.
 * Use `create(FetchFeatureValuesRequestSchema)` to create a new message.
 */
export const FetchFeatureValuesRequestSchema: GenMessage<FetchFeatureValuesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 1);

/**
 * Response message for
 * [FeatureOnlineStoreService.FetchFeatureValues][google.cloud.aiplatform.v1.FeatureOnlineStoreService.FetchFeatureValues]
 *
 * @generated from message google.cloud.aiplatform.v1.FetchFeatureValuesResponse
 */
export type FetchFeatureValuesResponse = Message<"google.cloud.aiplatform.v1.FetchFeatureValuesResponse"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.FetchFeatureValuesResponse.format
   */
  format: {
    /**
     * Feature values in KeyValue format.
     *
     * @generated from field: google.cloud.aiplatform.v1.FetchFeatureValuesResponse.FeatureNameValuePairList key_values = 3;
     */
    value: FetchFeatureValuesResponse_FeatureNameValuePairList;
    case: "keyValues";
  } | {
    /**
     * Feature values in proto Struct format.
     *
     * @generated from field: google.protobuf.Struct proto_struct = 2;
     */
    value: JsonObject;
    case: "protoStruct";
  } | { case: undefined; value?: undefined };

  /**
   * The data key associated with this response.
   * Will only be populated for
   * [FeatureOnlineStoreService.StreamingFetchFeatureValues][] RPCs.
   *
   * @generated from field: google.cloud.aiplatform.v1.FeatureViewDataKey data_key = 4;
   */
  dataKey?: FeatureViewDataKey;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FetchFeatureValuesResponse.
 * Use `create(FetchFeatureValuesResponseSchema)` to create a new message.
 */
export const FetchFeatureValuesResponseSchema: GenMessage<FetchFeatureValuesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 2);

/**
 * Response structure in the format of key (feature name) and (feature) value
 * pair.
 *
 * @generated from message google.cloud.aiplatform.v1.FetchFeatureValuesResponse.FeatureNameValuePairList
 */
export type FetchFeatureValuesResponse_FeatureNameValuePairList = Message<"google.cloud.aiplatform.v1.FetchFeatureValuesResponse.FeatureNameValuePairList"> & {
  /**
   * List of feature names and values.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.FetchFeatureValuesResponse.FeatureNameValuePairList.FeatureNameValuePair features = 1;
   */
  features: FetchFeatureValuesResponse_FeatureNameValuePairList_FeatureNameValuePair[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.FetchFeatureValuesResponse.FeatureNameValuePairList.
 * Use `create(FetchFeatureValuesResponse_FeatureNameValuePairListSchema)` to create a new message.
 */
export const FetchFeatureValuesResponse_FeatureNameValuePairListSchema: GenMessage<FetchFeatureValuesResponse_FeatureNameValuePairList> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 2, 0);

/**
 * Feature name & value pair.
 *
 * @generated from message google.cloud.aiplatform.v1.FetchFeatureValuesResponse.FeatureNameValuePairList.FeatureNameValuePair
 */
export type FetchFeatureValuesResponse_FeatureNameValuePairList_FeatureNameValuePair = Message<"google.cloud.aiplatform.v1.FetchFeatureValuesResponse.FeatureNameValuePairList.FeatureNameValuePair"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.FetchFeatureValuesResponse.FeatureNameValuePairList.FeatureNameValuePair.data
   */
  data: {
    /**
     * Feature value.
     *
     * @generated from field: google.cloud.aiplatform.v1.FeatureValue value = 2;
     */
    value: FeatureValue;
    case: "value";
  } | { case: undefined; value?: undefined };

  /**
   * Feature short name.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.FetchFeatureValuesResponse.FeatureNameValuePairList.FeatureNameValuePair.
 * Use `create(FetchFeatureValuesResponse_FeatureNameValuePairList_FeatureNameValuePairSchema)` to create a new message.
 */
export const FetchFeatureValuesResponse_FeatureNameValuePairList_FeatureNameValuePairSchema: GenMessage<FetchFeatureValuesResponse_FeatureNameValuePairList_FeatureNameValuePair> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 2, 0, 0);

/**
 * A query to find a number of similar entities.
 *
 * @generated from message google.cloud.aiplatform.v1.NearestNeighborQuery
 */
export type NearestNeighborQuery = Message<"google.cloud.aiplatform.v1.NearestNeighborQuery"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.NearestNeighborQuery.instance
   */
  instance: {
    /**
     * Optional. The entity id whose similar entities should be searched for.
     * If embedding is set, search will use embedding instead of
     * entity_id.
     *
     * @generated from field: string entity_id = 1;
     */
    value: string;
    case: "entityId";
  } | {
    /**
     * Optional. The embedding vector that be used for similar search.
     *
     * @generated from field: google.cloud.aiplatform.v1.NearestNeighborQuery.Embedding embedding = 2;
     */
    value: NearestNeighborQuery_Embedding;
    case: "embedding";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. The number of similar entities to be retrieved from feature view
   * for each query.
   *
   * @generated from field: int32 neighbor_count = 3;
   */
  neighborCount: number;

  /**
   * Optional. The list of string filters.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.NearestNeighborQuery.StringFilter string_filters = 4;
   */
  stringFilters: NearestNeighborQuery_StringFilter[];

  /**
   * Optional. The list of numeric filters.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.NearestNeighborQuery.NumericFilter numeric_filters = 8;
   */
  numericFilters: NearestNeighborQuery_NumericFilter[];

  /**
   * Optional. Crowding is a constraint on a neighbor list produced by nearest
   * neighbor search requiring that no more than
   * sper_crowding_attribute_neighbor_count of the k neighbors returned have the
   * same value of crowding_attribute. It's used for improving result diversity.
   *
   * @generated from field: int32 per_crowding_attribute_neighbor_count = 5;
   */
  perCrowdingAttributeNeighborCount: number;

  /**
   * Optional. Parameters that can be set to tune query on the fly.
   *
   * @generated from field: google.cloud.aiplatform.v1.NearestNeighborQuery.Parameters parameters = 7;
   */
  parameters?: NearestNeighborQuery_Parameters;
};

/**
 * Describes the message google.cloud.aiplatform.v1.NearestNeighborQuery.
 * Use `create(NearestNeighborQuerySchema)` to create a new message.
 */
export const NearestNeighborQuerySchema: GenMessage<NearestNeighborQuery> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 3);

/**
 * The embedding vector.
 *
 * @generated from message google.cloud.aiplatform.v1.NearestNeighborQuery.Embedding
 */
export type NearestNeighborQuery_Embedding = Message<"google.cloud.aiplatform.v1.NearestNeighborQuery.Embedding"> & {
  /**
   * Optional. Individual value in the embedding.
   *
   * @generated from field: repeated float value = 1;
   */
  value: number[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.NearestNeighborQuery.Embedding.
 * Use `create(NearestNeighborQuery_EmbeddingSchema)` to create a new message.
 */
export const NearestNeighborQuery_EmbeddingSchema: GenMessage<NearestNeighborQuery_Embedding> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 3, 0);

/**
 * String filter is used to search a subset of the entities by using boolean
 * rules on string columns.
 * For example: if a query specifies string filter
 * with 'name = color, allow_tokens = {red, blue}, deny_tokens = {purple}','
 * then that query will match entities that are red or blue, but if those
 * points are also purple, then they will be excluded even if they are
 * red/blue. Only string filter is supported for now, numeric filter will be
 * supported in the near future.
 *
 * @generated from message google.cloud.aiplatform.v1.NearestNeighborQuery.StringFilter
 */
export type NearestNeighborQuery_StringFilter = Message<"google.cloud.aiplatform.v1.NearestNeighborQuery.StringFilter"> & {
  /**
   * Required. Column names in BigQuery that used as filters.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The allowed tokens.
   *
   * @generated from field: repeated string allow_tokens = 2;
   */
  allowTokens: string[];

  /**
   * Optional. The denied tokens.
   *
   * @generated from field: repeated string deny_tokens = 3;
   */
  denyTokens: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.NearestNeighborQuery.StringFilter.
 * Use `create(NearestNeighborQuery_StringFilterSchema)` to create a new message.
 */
export const NearestNeighborQuery_StringFilterSchema: GenMessage<NearestNeighborQuery_StringFilter> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 3, 1);

/**
 * Numeric filter is used to search a subset of the entities by using boolean
 * rules on numeric columns.
 * For example:
 * Database Point 0: {name: “a” value_int: 42} {name: “b” value_float: 1.0}
 * Database Point 1:  {name: “a” value_int: 10} {name: “b” value_float: 2.0}
 * Database Point 2: {name: “a” value_int: -1} {name: “b” value_float: 3.0}
 * Query: {name: “a” value_int: 12 operator: LESS}    // Matches Point 1, 2
 * {name: “b” value_float: 2.0 operator: EQUAL} // Matches Point 1
 *
 * @generated from message google.cloud.aiplatform.v1.NearestNeighborQuery.NumericFilter
 */
export type NearestNeighborQuery_NumericFilter = Message<"google.cloud.aiplatform.v1.NearestNeighborQuery.NumericFilter"> & {
  /**
   * The type of Value must be consistent for all datapoints with a given
   * name.  This is verified at runtime.
   *
   * @generated from oneof google.cloud.aiplatform.v1.NearestNeighborQuery.NumericFilter.Value
   */
  Value: {
    /**
     * int value type.
     *
     * @generated from field: int64 value_int = 2;
     */
    value: bigint;
    case: "valueInt";
  } | {
    /**
     * float value type.
     *
     * @generated from field: float value_float = 3;
     */
    value: number;
    case: "valueFloat";
  } | {
    /**
     * double value type.
     *
     * @generated from field: double value_double = 4;
     */
    value: number;
    case: "valueDouble";
  } | { case: undefined; value?: undefined };

  /**
   * Required. Column name in BigQuery that used as filters.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. This MUST be specified for queries and must NOT be specified
   * for database points.
   *
   * @generated from field: optional google.cloud.aiplatform.v1.NearestNeighborQuery.NumericFilter.Operator op = 5;
   */
  op?: NearestNeighborQuery_NumericFilter_Operator;
};

/**
 * Describes the message google.cloud.aiplatform.v1.NearestNeighborQuery.NumericFilter.
 * Use `create(NearestNeighborQuery_NumericFilterSchema)` to create a new message.
 */
export const NearestNeighborQuery_NumericFilterSchema: GenMessage<NearestNeighborQuery_NumericFilter> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 3, 2);

/**
 * Datapoints for which Operator is true relative to the query’s Value
 * field will be allowlisted.
 *
 * @generated from enum google.cloud.aiplatform.v1.NearestNeighborQuery.NumericFilter.Operator
 */
export enum NearestNeighborQuery_NumericFilter_Operator {
  /**
   * Unspecified operator.
   *
   * @generated from enum value: OPERATOR_UNSPECIFIED = 0;
   */
  OPERATOR_UNSPECIFIED = 0,

  /**
   * Entities are eligible if their value is < the query's.
   *
   * @generated from enum value: LESS = 1;
   */
  LESS = 1,

  /**
   * Entities are eligible if their value is <= the query's.
   *
   * @generated from enum value: LESS_EQUAL = 2;
   */
  LESS_EQUAL = 2,

  /**
   * Entities are eligible if their value is == the query's.
   *
   * @generated from enum value: EQUAL = 3;
   */
  EQUAL = 3,

  /**
   * Entities are eligible if their value is >= the query's.
   *
   * @generated from enum value: GREATER_EQUAL = 4;
   */
  GREATER_EQUAL = 4,

  /**
   * Entities are eligible if their value is > the query's.
   *
   * @generated from enum value: GREATER = 5;
   */
  GREATER = 5,

  /**
   * Entities are eligible if their value is != the query's.
   *
   * @generated from enum value: NOT_EQUAL = 6;
   */
  NOT_EQUAL = 6,
}

/**
 * Describes the enum google.cloud.aiplatform.v1.NearestNeighborQuery.NumericFilter.Operator.
 */
export const NearestNeighborQuery_NumericFilter_OperatorSchema: GenEnum<NearestNeighborQuery_NumericFilter_Operator> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 3, 2, 0);

/**
 * Parameters that can be overrided in each query to tune query latency and
 * recall.
 *
 * @generated from message google.cloud.aiplatform.v1.NearestNeighborQuery.Parameters
 */
export type NearestNeighborQuery_Parameters = Message<"google.cloud.aiplatform.v1.NearestNeighborQuery.Parameters"> & {
  /**
   * Optional. The number of neighbors to find via approximate search before
   * exact reordering is performed; if set, this value must be >
   * neighbor_count.
   *
   * @generated from field: int32 approximate_neighbor_candidates = 1;
   */
  approximateNeighborCandidates: number;

  /**
   * Optional. The fraction of the number of leaves to search, set at query
   * time allows user to tune search performance. This value increase result
   * in both search accuracy and latency increase. The value should be between
   * 0.0 and 1.0.
   *
   * @generated from field: double leaf_nodes_search_fraction = 2;
   */
  leafNodesSearchFraction: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.NearestNeighborQuery.Parameters.
 * Use `create(NearestNeighborQuery_ParametersSchema)` to create a new message.
 */
export const NearestNeighborQuery_ParametersSchema: GenMessage<NearestNeighborQuery_Parameters> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 3, 3);

/**
 * The request message for
 * [FeatureOnlineStoreService.SearchNearestEntities][google.cloud.aiplatform.v1.FeatureOnlineStoreService.SearchNearestEntities].
 *
 * @generated from message google.cloud.aiplatform.v1.SearchNearestEntitiesRequest
 */
export type SearchNearestEntitiesRequest = Message<"google.cloud.aiplatform.v1.SearchNearestEntitiesRequest"> & {
  /**
   * Required. FeatureView resource format
   * `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
   *
   * @generated from field: string feature_view = 1;
   */
  featureView: string;

  /**
   * Required. The query.
   *
   * @generated from field: google.cloud.aiplatform.v1.NearestNeighborQuery query = 2;
   */
  query?: NearestNeighborQuery;

  /**
   * Optional. If set to true, the full entities (including all vector values
   * and metadata) of the nearest neighbors are returned; otherwise only entity
   * id of the nearest neighbors will be returned. Note that returning full
   * entities will significantly increase the latency and cost of the query.
   *
   * @generated from field: bool return_full_entity = 3;
   */
  returnFullEntity: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SearchNearestEntitiesRequest.
 * Use `create(SearchNearestEntitiesRequestSchema)` to create a new message.
 */
export const SearchNearestEntitiesRequestSchema: GenMessage<SearchNearestEntitiesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 4);

/**
 * Nearest neighbors for one query.
 *
 * @generated from message google.cloud.aiplatform.v1.NearestNeighbors
 */
export type NearestNeighbors = Message<"google.cloud.aiplatform.v1.NearestNeighbors"> & {
  /**
   * All its neighbors.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.NearestNeighbors.Neighbor neighbors = 1;
   */
  neighbors: NearestNeighbors_Neighbor[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.NearestNeighbors.
 * Use `create(NearestNeighborsSchema)` to create a new message.
 */
export const NearestNeighborsSchema: GenMessage<NearestNeighbors> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 5);

/**
 * A neighbor of the query vector.
 *
 * @generated from message google.cloud.aiplatform.v1.NearestNeighbors.Neighbor
 */
export type NearestNeighbors_Neighbor = Message<"google.cloud.aiplatform.v1.NearestNeighbors.Neighbor"> & {
  /**
   * The id of the similar entity.
   *
   * @generated from field: string entity_id = 1;
   */
  entityId: string;

  /**
   * The distance between the neighbor and the query vector.
   *
   * @generated from field: double distance = 2;
   */
  distance: number;

  /**
   * The attributes of the neighbor, e.g. filters, crowding and metadata
   * Note that full entities are returned only when "return_full_entity"
   * is set to true. Otherwise, only the "entity_id" and "distance" fields
   * are populated.
   *
   * @generated from field: google.cloud.aiplatform.v1.FetchFeatureValuesResponse entity_key_values = 3;
   */
  entityKeyValues?: FetchFeatureValuesResponse;
};

/**
 * Describes the message google.cloud.aiplatform.v1.NearestNeighbors.Neighbor.
 * Use `create(NearestNeighbors_NeighborSchema)` to create a new message.
 */
export const NearestNeighbors_NeighborSchema: GenMessage<NearestNeighbors_Neighbor> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 5, 0);

/**
 * Response message for
 * [FeatureOnlineStoreService.SearchNearestEntities][google.cloud.aiplatform.v1.FeatureOnlineStoreService.SearchNearestEntities]
 *
 * @generated from message google.cloud.aiplatform.v1.SearchNearestEntitiesResponse
 */
export type SearchNearestEntitiesResponse = Message<"google.cloud.aiplatform.v1.SearchNearestEntitiesResponse"> & {
  /**
   * The nearest neighbors of the query entity.
   *
   * @generated from field: google.cloud.aiplatform.v1.NearestNeighbors nearest_neighbors = 1;
   */
  nearestNeighbors?: NearestNeighbors;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SearchNearestEntitiesResponse.
 * Use `create(SearchNearestEntitiesResponseSchema)` to create a new message.
 */
export const SearchNearestEntitiesResponseSchema: GenMessage<SearchNearestEntitiesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 6);

/**
 * Format of the data in the Feature View.
 *
 * @generated from enum google.cloud.aiplatform.v1.FeatureViewDataFormat
 */
export enum FeatureViewDataFormat {
  /**
   * Not set. Will be treated as the KeyValue format.
   *
   * @generated from enum value: FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED = 0;
   */
  FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED = 0,

  /**
   * Return response data in key-value format.
   *
   * @generated from enum value: KEY_VALUE = 1;
   */
  KEY_VALUE = 1,

  /**
   * Return response data in proto Struct format.
   *
   * @generated from enum value: PROTO_STRUCT = 2;
   */
  PROTO_STRUCT = 2,
}

/**
 * Describes the enum google.cloud.aiplatform.v1.FeatureViewDataFormat.
 */
export const FeatureViewDataFormatSchema: GenEnum<FeatureViewDataFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 0);

/**
 * A service for fetching feature values from the online store.
 *
 * @generated from service google.cloud.aiplatform.v1.FeatureOnlineStoreService
 */
export const FeatureOnlineStoreService: GenService<{
  /**
   * Fetch feature values under a FeatureView.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureOnlineStoreService.FetchFeatureValues
   */
  fetchFeatureValues: {
    methodKind: "unary";
    input: typeof FetchFeatureValuesRequestSchema;
    output: typeof FetchFeatureValuesResponseSchema;
  },
  /**
   * Search the nearest entities under a FeatureView.
   * Search only works for indexable feature view; if a feature view isn't
   * indexable, returns Invalid argument response.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureOnlineStoreService.SearchNearestEntities
   */
  searchNearestEntities: {
    methodKind: "unary";
    input: typeof SearchNearestEntitiesRequestSchema;
    output: typeof SearchNearestEntitiesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1_feature_online_store_service, 0);

