// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1/io.proto (package google.cloud.aiplatform.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1/io.proto.
 */
export const file_google_cloud_aiplatform_v1_io: GenFile = /*@__PURE__*/
  fileDesc("CiNnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9pby5wcm90bxIaZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEiTAoKQXZyb1NvdXJjZRI+CgpnY3Nfc291cmNlGAEgASgLMiUuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuR2NzU291cmNlQgPgQQIiSwoJQ3N2U291cmNlEj4KCmdjc19zb3VyY2UYASABKAsyJS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5HY3NTb3VyY2VCA+BBAiIeCglHY3NTb3VyY2USEQoEdXJpcxgBIAMoCUID4EECIjAKDkdjc0Rlc3RpbmF0aW9uEh4KEW91dHB1dF91cmlfcHJlZml4GAEgASgJQgPgQQIiKAoOQmlnUXVlcnlTb3VyY2USFgoJaW5wdXRfdXJpGAEgASgJQgPgQQIiLgoTQmlnUXVlcnlEZXN0aW5hdGlvbhIXCgpvdXRwdXRfdXJpGAEgASgJQgPgQQIiWgoOQ3N2RGVzdGluYXRpb24SSAoPZ2NzX2Rlc3RpbmF0aW9uGAEgASgLMiouZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuR2NzRGVzdGluYXRpb25CA+BBAiJfChNURlJlY29yZERlc3RpbmF0aW9uEkgKD2djc19kZXN0aW5hdGlvbhgBIAEoCzIqLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkdjc0Rlc3RpbmF0aW9uQgPgQQIiNwocQ29udGFpbmVyUmVnaXN0cnlEZXN0aW5hdGlvbhIXCgpvdXRwdXRfdXJpGAEgASgJQgPgQQJCxQEKHmNvbS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MUIHSW9Qcm90b1ABWj5jbG91ZC5nb29nbGUuY29tL2dvL2FpcGxhdGZvcm0vYXBpdjEvYWlwbGF0Zm9ybXBiO2FpcGxhdGZvcm1wYqoCGkdvb2dsZS5DbG91ZC5BSVBsYXRmb3JtLlYxygIaR29vZ2xlXENsb3VkXEFJUGxhdGZvcm1cVjHqAh1Hb29nbGU6OkNsb3VkOjpBSVBsYXRmb3JtOjpWMWIGcHJvdG8z", [file_google_api_field_behavior]);

/**
 * The storage details for Avro input content.
 *
 * @generated from message google.cloud.aiplatform.v1.AvroSource
 */
export type AvroSource = Message<"google.cloud.aiplatform.v1.AvroSource"> & {
  /**
   * Required. Google Cloud Storage location.
   *
   * @generated from field: google.cloud.aiplatform.v1.GcsSource gcs_source = 1;
   */
  gcsSource?: GcsSource;
};

/**
 * Describes the message google.cloud.aiplatform.v1.AvroSource.
 * Use `create(AvroSourceSchema)` to create a new message.
 */
export const AvroSourceSchema: GenMessage<AvroSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_io, 0);

/**
 * The storage details for CSV input content.
 *
 * @generated from message google.cloud.aiplatform.v1.CsvSource
 */
export type CsvSource = Message<"google.cloud.aiplatform.v1.CsvSource"> & {
  /**
   * Required. Google Cloud Storage location.
   *
   * @generated from field: google.cloud.aiplatform.v1.GcsSource gcs_source = 1;
   */
  gcsSource?: GcsSource;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CsvSource.
 * Use `create(CsvSourceSchema)` to create a new message.
 */
export const CsvSourceSchema: GenMessage<CsvSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_io, 1);

/**
 * The Google Cloud Storage location for the input content.
 *
 * @generated from message google.cloud.aiplatform.v1.GcsSource
 */
export type GcsSource = Message<"google.cloud.aiplatform.v1.GcsSource"> & {
  /**
   * Required. Google Cloud Storage URI(-s) to the input file(s). May contain
   * wildcards. For more information on wildcards, see
   * https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.
   *
   * @generated from field: repeated string uris = 1;
   */
  uris: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.GcsSource.
 * Use `create(GcsSourceSchema)` to create a new message.
 */
export const GcsSourceSchema: GenMessage<GcsSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_io, 2);

/**
 * The Google Cloud Storage location where the output is to be written to.
 *
 * @generated from message google.cloud.aiplatform.v1.GcsDestination
 */
export type GcsDestination = Message<"google.cloud.aiplatform.v1.GcsDestination"> & {
  /**
   * Required. Google Cloud Storage URI to output directory. If the uri doesn't
   * end with
   * '/', a '/' will be automatically appended. The directory is created if it
   * doesn't exist.
   *
   * @generated from field: string output_uri_prefix = 1;
   */
  outputUriPrefix: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GcsDestination.
 * Use `create(GcsDestinationSchema)` to create a new message.
 */
export const GcsDestinationSchema: GenMessage<GcsDestination> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_io, 3);

/**
 * The BigQuery location for the input content.
 *
 * @generated from message google.cloud.aiplatform.v1.BigQuerySource
 */
export type BigQuerySource = Message<"google.cloud.aiplatform.v1.BigQuerySource"> & {
  /**
   * Required. BigQuery URI to a table, up to 2000 characters long.
   * Accepted forms:
   *
   * *  BigQuery path. For example: `bq://projectId.bqDatasetId.bqTableId`.
   *
   * @generated from field: string input_uri = 1;
   */
  inputUri: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.BigQuerySource.
 * Use `create(BigQuerySourceSchema)` to create a new message.
 */
export const BigQuerySourceSchema: GenMessage<BigQuerySource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_io, 4);

/**
 * The BigQuery location for the output content.
 *
 * @generated from message google.cloud.aiplatform.v1.BigQueryDestination
 */
export type BigQueryDestination = Message<"google.cloud.aiplatform.v1.BigQueryDestination"> & {
  /**
   * Required. BigQuery URI to a project or table, up to 2000 characters long.
   *
   * When only the project is specified, the Dataset and Table is created.
   * When the full table reference is specified, the Dataset must exist and
   * table must not exist.
   *
   * Accepted forms:
   *
   * *  BigQuery path. For example:
   * `bq://projectId` or `bq://projectId.bqDatasetId` or
   * `bq://projectId.bqDatasetId.bqTableId`.
   *
   * @generated from field: string output_uri = 1;
   */
  outputUri: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.BigQueryDestination.
 * Use `create(BigQueryDestinationSchema)` to create a new message.
 */
export const BigQueryDestinationSchema: GenMessage<BigQueryDestination> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_io, 5);

/**
 * The storage details for CSV output content.
 *
 * @generated from message google.cloud.aiplatform.v1.CsvDestination
 */
export type CsvDestination = Message<"google.cloud.aiplatform.v1.CsvDestination"> & {
  /**
   * Required. Google Cloud Storage location.
   *
   * @generated from field: google.cloud.aiplatform.v1.GcsDestination gcs_destination = 1;
   */
  gcsDestination?: GcsDestination;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CsvDestination.
 * Use `create(CsvDestinationSchema)` to create a new message.
 */
export const CsvDestinationSchema: GenMessage<CsvDestination> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_io, 6);

/**
 * The storage details for TFRecord output content.
 *
 * @generated from message google.cloud.aiplatform.v1.TFRecordDestination
 */
export type TFRecordDestination = Message<"google.cloud.aiplatform.v1.TFRecordDestination"> & {
  /**
   * Required. Google Cloud Storage location.
   *
   * @generated from field: google.cloud.aiplatform.v1.GcsDestination gcs_destination = 1;
   */
  gcsDestination?: GcsDestination;
};

/**
 * Describes the message google.cloud.aiplatform.v1.TFRecordDestination.
 * Use `create(TFRecordDestinationSchema)` to create a new message.
 */
export const TFRecordDestinationSchema: GenMessage<TFRecordDestination> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_io, 7);

/**
 * The Container Registry location for the container image.
 *
 * @generated from message google.cloud.aiplatform.v1.ContainerRegistryDestination
 */
export type ContainerRegistryDestination = Message<"google.cloud.aiplatform.v1.ContainerRegistryDestination"> & {
  /**
   * Required. Container Registry URI of a container image.
   * Only Google Container Registry and Artifact Registry are supported now.
   * Accepted forms:
   *
   * *  Google Container Registry path. For example:
   *    `gcr.io/projectId/imageName:tag`.
   *
   * *  Artifact Registry path. For example:
   *    `us-central1-docker.pkg.dev/projectId/repoName/imageName:tag`.
   *
   * If a tag is not specified, "latest" will be used as the default tag.
   *
   * @generated from field: string output_uri = 1;
   */
  outputUri: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ContainerRegistryDestination.
 * Use `create(ContainerRegistryDestinationSchema)` to create a new message.
 */
export const ContainerRegistryDestinationSchema: GenMessage<ContainerRegistryDestination> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_io, 8);

