// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1/tensorboard_service.proto (package google.cloud.aiplatform.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { GenericOperationMetadata } from "./operation_pb";
import { file_google_cloud_aiplatform_v1_operation } from "./operation_pb";
import type { Tensorboard, TensorboardSchema } from "./tensorboard_pb";
import { file_google_cloud_aiplatform_v1_tensorboard } from "./tensorboard_pb";
import type { TensorboardBlob, TimeSeriesData, TimeSeriesDataPoint } from "./tensorboard_data_pb";
import { file_google_cloud_aiplatform_v1_tensorboard_data } from "./tensorboard_data_pb";
import type { TensorboardExperiment, TensorboardExperimentSchema } from "./tensorboard_experiment_pb";
import { file_google_cloud_aiplatform_v1_tensorboard_experiment } from "./tensorboard_experiment_pb";
import type { TensorboardRun, TensorboardRunSchema } from "./tensorboard_run_pb";
import { file_google_cloud_aiplatform_v1_tensorboard_run } from "./tensorboard_run_pb";
import type { TensorboardTimeSeries, TensorboardTimeSeriesSchema } from "./tensorboard_time_series_pb";
import { file_google_cloud_aiplatform_v1_tensorboard_time_series } from "./tensorboard_time_series_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1/tensorboard_service.proto.
 */
export const file_google_cloud_aiplatform_v1_tensorboard_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1_operation, file_google_cloud_aiplatform_v1_tensorboard, file_google_cloud_aiplatform_v1_tensorboard_data, file_google_cloud_aiplatform_v1_tensorboard_experiment, file_google_cloud_aiplatform_v1_tensorboard_run, file_google_cloud_aiplatform_v1_tensorboard_time_series, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Request message for
 * [TensorboardService.CreateTensorboard][google.cloud.aiplatform.v1.TensorboardService.CreateTensorboard].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateTensorboardRequest
 */
export type CreateTensorboardRequest = Message<"google.cloud.aiplatform.v1.CreateTensorboardRequest"> & {
  /**
   * Required. The resource name of the Location to create the Tensorboard in.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The Tensorboard to create.
   *
   * @generated from field: google.cloud.aiplatform.v1.Tensorboard tensorboard = 2;
   */
  tensorboard?: Tensorboard;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateTensorboardRequest.
 * Use `create(CreateTensorboardRequestSchema)` to create a new message.
 */
export const CreateTensorboardRequestSchema: GenMessage<CreateTensorboardRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 0);

/**
 * Request message for
 * [TensorboardService.GetTensorboard][google.cloud.aiplatform.v1.TensorboardService.GetTensorboard].
 *
 * @generated from message google.cloud.aiplatform.v1.GetTensorboardRequest
 */
export type GetTensorboardRequest = Message<"google.cloud.aiplatform.v1.GetTensorboardRequest"> & {
  /**
   * Required. The name of the Tensorboard resource.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetTensorboardRequest.
 * Use `create(GetTensorboardRequestSchema)` to create a new message.
 */
export const GetTensorboardRequestSchema: GenMessage<GetTensorboardRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 1);

/**
 * Request message for
 * [TensorboardService.ListTensorboards][google.cloud.aiplatform.v1.TensorboardService.ListTensorboards].
 *
 * @generated from message google.cloud.aiplatform.v1.ListTensorboardsRequest
 */
export type ListTensorboardsRequest = Message<"google.cloud.aiplatform.v1.ListTensorboardsRequest"> & {
  /**
   * Required. The resource name of the Location to list Tensorboards.
   * Format:
   * `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Lists the Tensorboards that match the filter expression.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of Tensorboards to return. The service may return
   * fewer than this value. If unspecified, at most 100 Tensorboards are
   * returned. The maximum value is 100; values above 100 are coerced to
   * 100.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [TensorboardService.ListTensorboards][google.cloud.aiplatform.v1.TensorboardService.ListTensorboards]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [TensorboardService.ListTensorboards][google.cloud.aiplatform.v1.TensorboardService.ListTensorboards]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Field to use to sort the list.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 6;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListTensorboardsRequest.
 * Use `create(ListTensorboardsRequestSchema)` to create a new message.
 */
export const ListTensorboardsRequestSchema: GenMessage<ListTensorboardsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 2);

/**
 * Response message for
 * [TensorboardService.ListTensorboards][google.cloud.aiplatform.v1.TensorboardService.ListTensorboards].
 *
 * @generated from message google.cloud.aiplatform.v1.ListTensorboardsResponse
 */
export type ListTensorboardsResponse = Message<"google.cloud.aiplatform.v1.ListTensorboardsResponse"> & {
  /**
   * The Tensorboards mathching the request.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.Tensorboard tensorboards = 1;
   */
  tensorboards: Tensorboard[];

  /**
   * A token, which can be sent as
   * [ListTensorboardsRequest.page_token][google.cloud.aiplatform.v1.ListTensorboardsRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListTensorboardsResponse.
 * Use `create(ListTensorboardsResponseSchema)` to create a new message.
 */
export const ListTensorboardsResponseSchema: GenMessage<ListTensorboardsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 3);

/**
 * Request message for
 * [TensorboardService.UpdateTensorboard][google.cloud.aiplatform.v1.TensorboardService.UpdateTensorboard].
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateTensorboardRequest
 */
export type UpdateTensorboardRequest = Message<"google.cloud.aiplatform.v1.UpdateTensorboardRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Tensorboard resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field is overwritten if it's in the mask. If the
   * user does not provide a mask then all fields are overwritten if new
   * values are specified.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The Tensorboard's `name` field is used to identify the
   * Tensorboard to be updated. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
   *
   * @generated from field: google.cloud.aiplatform.v1.Tensorboard tensorboard = 2;
   */
  tensorboard?: Tensorboard;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateTensorboardRequest.
 * Use `create(UpdateTensorboardRequestSchema)` to create a new message.
 */
export const UpdateTensorboardRequestSchema: GenMessage<UpdateTensorboardRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 4);

/**
 * Request message for
 * [TensorboardService.DeleteTensorboard][google.cloud.aiplatform.v1.TensorboardService.DeleteTensorboard].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteTensorboardRequest
 */
export type DeleteTensorboardRequest = Message<"google.cloud.aiplatform.v1.DeleteTensorboardRequest"> & {
  /**
   * Required. The name of the Tensorboard to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteTensorboardRequest.
 * Use `create(DeleteTensorboardRequestSchema)` to create a new message.
 */
export const DeleteTensorboardRequestSchema: GenMessage<DeleteTensorboardRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 5);

/**
 * Request message for
 * [TensorboardService.ReadTensorboardUsage][google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardUsage].
 *
 * @generated from message google.cloud.aiplatform.v1.ReadTensorboardUsageRequest
 */
export type ReadTensorboardUsageRequest = Message<"google.cloud.aiplatform.v1.ReadTensorboardUsageRequest"> & {
  /**
   * Required. The name of the Tensorboard resource.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
   *
   * @generated from field: string tensorboard = 1;
   */
  tensorboard: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ReadTensorboardUsageRequest.
 * Use `create(ReadTensorboardUsageRequestSchema)` to create a new message.
 */
export const ReadTensorboardUsageRequestSchema: GenMessage<ReadTensorboardUsageRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 6);

/**
 * Response message for
 * [TensorboardService.ReadTensorboardUsage][google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardUsage].
 *
 * @generated from message google.cloud.aiplatform.v1.ReadTensorboardUsageResponse
 */
export type ReadTensorboardUsageResponse = Message<"google.cloud.aiplatform.v1.ReadTensorboardUsageResponse"> & {
  /**
   * Maps year-month (YYYYMM) string to per month usage data.
   *
   * @generated from field: map<string, google.cloud.aiplatform.v1.ReadTensorboardUsageResponse.PerMonthUsageData> monthly_usage_data = 1;
   */
  monthlyUsageData: { [key: string]: ReadTensorboardUsageResponse_PerMonthUsageData };
};

/**
 * Describes the message google.cloud.aiplatform.v1.ReadTensorboardUsageResponse.
 * Use `create(ReadTensorboardUsageResponseSchema)` to create a new message.
 */
export const ReadTensorboardUsageResponseSchema: GenMessage<ReadTensorboardUsageResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 7);

/**
 * Per user usage data.
 *
 * @generated from message google.cloud.aiplatform.v1.ReadTensorboardUsageResponse.PerUserUsageData
 */
export type ReadTensorboardUsageResponse_PerUserUsageData = Message<"google.cloud.aiplatform.v1.ReadTensorboardUsageResponse.PerUserUsageData"> & {
  /**
   * User's username
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * Number of times the user has read data within the Tensorboard.
   *
   * @generated from field: int64 view_count = 2;
   */
  viewCount: bigint;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ReadTensorboardUsageResponse.PerUserUsageData.
 * Use `create(ReadTensorboardUsageResponse_PerUserUsageDataSchema)` to create a new message.
 */
export const ReadTensorboardUsageResponse_PerUserUsageDataSchema: GenMessage<ReadTensorboardUsageResponse_PerUserUsageData> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 7, 0);

/**
 * Per month usage data
 *
 * @generated from message google.cloud.aiplatform.v1.ReadTensorboardUsageResponse.PerMonthUsageData
 */
export type ReadTensorboardUsageResponse_PerMonthUsageData = Message<"google.cloud.aiplatform.v1.ReadTensorboardUsageResponse.PerMonthUsageData"> & {
  /**
   * Usage data for each user in the given month.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ReadTensorboardUsageResponse.PerUserUsageData user_usage_data = 1;
   */
  userUsageData: ReadTensorboardUsageResponse_PerUserUsageData[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ReadTensorboardUsageResponse.PerMonthUsageData.
 * Use `create(ReadTensorboardUsageResponse_PerMonthUsageDataSchema)` to create a new message.
 */
export const ReadTensorboardUsageResponse_PerMonthUsageDataSchema: GenMessage<ReadTensorboardUsageResponse_PerMonthUsageData> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 7, 1);

/**
 * Request message for
 * [TensorboardService.ReadTensorboardSize][google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardSize].
 *
 * @generated from message google.cloud.aiplatform.v1.ReadTensorboardSizeRequest
 */
export type ReadTensorboardSizeRequest = Message<"google.cloud.aiplatform.v1.ReadTensorboardSizeRequest"> & {
  /**
   * Required. The name of the Tensorboard resource.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
   *
   * @generated from field: string tensorboard = 1;
   */
  tensorboard: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ReadTensorboardSizeRequest.
 * Use `create(ReadTensorboardSizeRequestSchema)` to create a new message.
 */
export const ReadTensorboardSizeRequestSchema: GenMessage<ReadTensorboardSizeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 8);

/**
 * Response message for
 * [TensorboardService.ReadTensorboardSize][google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardSize].
 *
 * @generated from message google.cloud.aiplatform.v1.ReadTensorboardSizeResponse
 */
export type ReadTensorboardSizeResponse = Message<"google.cloud.aiplatform.v1.ReadTensorboardSizeResponse"> & {
  /**
   * Payload storage size for the TensorBoard
   *
   * @generated from field: int64 storage_size_byte = 1;
   */
  storageSizeByte: bigint;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ReadTensorboardSizeResponse.
 * Use `create(ReadTensorboardSizeResponseSchema)` to create a new message.
 */
export const ReadTensorboardSizeResponseSchema: GenMessage<ReadTensorboardSizeResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 9);

/**
 * Request message for
 * [TensorboardService.CreateTensorboardExperiment][google.cloud.aiplatform.v1.TensorboardService.CreateTensorboardExperiment].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateTensorboardExperimentRequest
 */
export type CreateTensorboardExperimentRequest = Message<"google.cloud.aiplatform.v1.CreateTensorboardExperimentRequest"> & {
  /**
   * Required. The resource name of the Tensorboard to create the
   * TensorboardExperiment in. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The TensorboardExperiment to create.
   *
   * @generated from field: google.cloud.aiplatform.v1.TensorboardExperiment tensorboard_experiment = 2;
   */
  tensorboardExperiment?: TensorboardExperiment;

  /**
   * Required. The ID to use for the Tensorboard experiment, which becomes the
   * final component of the Tensorboard experiment's resource name.
   *
   * This value should be 1-128 characters, and valid characters
   * are `/[a-z][0-9]-/`.
   *
   * @generated from field: string tensorboard_experiment_id = 3;
   */
  tensorboardExperimentId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateTensorboardExperimentRequest.
 * Use `create(CreateTensorboardExperimentRequestSchema)` to create a new message.
 */
export const CreateTensorboardExperimentRequestSchema: GenMessage<CreateTensorboardExperimentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 10);

/**
 * Request message for
 * [TensorboardService.GetTensorboardExperiment][google.cloud.aiplatform.v1.TensorboardService.GetTensorboardExperiment].
 *
 * @generated from message google.cloud.aiplatform.v1.GetTensorboardExperimentRequest
 */
export type GetTensorboardExperimentRequest = Message<"google.cloud.aiplatform.v1.GetTensorboardExperimentRequest"> & {
  /**
   * Required. The name of the TensorboardExperiment resource.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetTensorboardExperimentRequest.
 * Use `create(GetTensorboardExperimentRequestSchema)` to create a new message.
 */
export const GetTensorboardExperimentRequestSchema: GenMessage<GetTensorboardExperimentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 11);

/**
 * Request message for
 * [TensorboardService.ListTensorboardExperiments][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardExperiments].
 *
 * @generated from message google.cloud.aiplatform.v1.ListTensorboardExperimentsRequest
 */
export type ListTensorboardExperimentsRequest = Message<"google.cloud.aiplatform.v1.ListTensorboardExperimentsRequest"> & {
  /**
   * Required. The resource name of the Tensorboard to list
   * TensorboardExperiments. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Lists the TensorboardExperiments that match the filter expression.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of TensorboardExperiments to return. The service may
   * return fewer than this value. If unspecified, at most 50
   * TensorboardExperiments are returned. The maximum value is 1000; values
   * above 1000 are coerced to 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [TensorboardService.ListTensorboardExperiments][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardExperiments]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [TensorboardService.ListTensorboardExperiments][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardExperiments]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Field to use to sort the list.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 6;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListTensorboardExperimentsRequest.
 * Use `create(ListTensorboardExperimentsRequestSchema)` to create a new message.
 */
export const ListTensorboardExperimentsRequestSchema: GenMessage<ListTensorboardExperimentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 12);

/**
 * Response message for
 * [TensorboardService.ListTensorboardExperiments][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardExperiments].
 *
 * @generated from message google.cloud.aiplatform.v1.ListTensorboardExperimentsResponse
 */
export type ListTensorboardExperimentsResponse = Message<"google.cloud.aiplatform.v1.ListTensorboardExperimentsResponse"> & {
  /**
   * The TensorboardExperiments mathching the request.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.TensorboardExperiment tensorboard_experiments = 1;
   */
  tensorboardExperiments: TensorboardExperiment[];

  /**
   * A token, which can be sent as
   * [ListTensorboardExperimentsRequest.page_token][google.cloud.aiplatform.v1.ListTensorboardExperimentsRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListTensorboardExperimentsResponse.
 * Use `create(ListTensorboardExperimentsResponseSchema)` to create a new message.
 */
export const ListTensorboardExperimentsResponseSchema: GenMessage<ListTensorboardExperimentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 13);

/**
 * Request message for
 * [TensorboardService.UpdateTensorboardExperiment][google.cloud.aiplatform.v1.TensorboardService.UpdateTensorboardExperiment].
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateTensorboardExperimentRequest
 */
export type UpdateTensorboardExperimentRequest = Message<"google.cloud.aiplatform.v1.UpdateTensorboardExperimentRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * TensorboardExperiment resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field is overwritten if it's in the mask. If the
   * user does not provide a mask then all fields are overwritten if new
   * values are specified.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The TensorboardExperiment's `name` field is used to identify the
   * TensorboardExperiment to be updated. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
   *
   * @generated from field: google.cloud.aiplatform.v1.TensorboardExperiment tensorboard_experiment = 2;
   */
  tensorboardExperiment?: TensorboardExperiment;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateTensorboardExperimentRequest.
 * Use `create(UpdateTensorboardExperimentRequestSchema)` to create a new message.
 */
export const UpdateTensorboardExperimentRequestSchema: GenMessage<UpdateTensorboardExperimentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 14);

/**
 * Request message for
 * [TensorboardService.DeleteTensorboardExperiment][google.cloud.aiplatform.v1.TensorboardService.DeleteTensorboardExperiment].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteTensorboardExperimentRequest
 */
export type DeleteTensorboardExperimentRequest = Message<"google.cloud.aiplatform.v1.DeleteTensorboardExperimentRequest"> & {
  /**
   * Required. The name of the TensorboardExperiment to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteTensorboardExperimentRequest.
 * Use `create(DeleteTensorboardExperimentRequestSchema)` to create a new message.
 */
export const DeleteTensorboardExperimentRequestSchema: GenMessage<DeleteTensorboardExperimentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 15);

/**
 * Request message for
 * [TensorboardService.BatchCreateTensorboardRuns][google.cloud.aiplatform.v1.TensorboardService.BatchCreateTensorboardRuns].
 *
 * @generated from message google.cloud.aiplatform.v1.BatchCreateTensorboardRunsRequest
 */
export type BatchCreateTensorboardRunsRequest = Message<"google.cloud.aiplatform.v1.BatchCreateTensorboardRunsRequest"> & {
  /**
   * Required. The resource name of the TensorboardExperiment to create the
   * TensorboardRuns in. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
   * The parent field in the CreateTensorboardRunRequest messages must match
   * this field.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The request message specifying the TensorboardRuns to create.
   * A maximum of 1000 TensorboardRuns can be created in a batch.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.CreateTensorboardRunRequest requests = 2;
   */
  requests: CreateTensorboardRunRequest[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchCreateTensorboardRunsRequest.
 * Use `create(BatchCreateTensorboardRunsRequestSchema)` to create a new message.
 */
export const BatchCreateTensorboardRunsRequestSchema: GenMessage<BatchCreateTensorboardRunsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 16);

/**
 * Response message for
 * [TensorboardService.BatchCreateTensorboardRuns][google.cloud.aiplatform.v1.TensorboardService.BatchCreateTensorboardRuns].
 *
 * @generated from message google.cloud.aiplatform.v1.BatchCreateTensorboardRunsResponse
 */
export type BatchCreateTensorboardRunsResponse = Message<"google.cloud.aiplatform.v1.BatchCreateTensorboardRunsResponse"> & {
  /**
   * The created TensorboardRuns.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.TensorboardRun tensorboard_runs = 1;
   */
  tensorboardRuns: TensorboardRun[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchCreateTensorboardRunsResponse.
 * Use `create(BatchCreateTensorboardRunsResponseSchema)` to create a new message.
 */
export const BatchCreateTensorboardRunsResponseSchema: GenMessage<BatchCreateTensorboardRunsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 17);

/**
 * Request message for
 * [TensorboardService.CreateTensorboardRun][google.cloud.aiplatform.v1.TensorboardService.CreateTensorboardRun].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateTensorboardRunRequest
 */
export type CreateTensorboardRunRequest = Message<"google.cloud.aiplatform.v1.CreateTensorboardRunRequest"> & {
  /**
   * Required. The resource name of the TensorboardExperiment to create the
   * TensorboardRun in. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The TensorboardRun to create.
   *
   * @generated from field: google.cloud.aiplatform.v1.TensorboardRun tensorboard_run = 2;
   */
  tensorboardRun?: TensorboardRun;

  /**
   * Required. The ID to use for the Tensorboard run, which becomes the final
   * component of the Tensorboard run's resource name.
   *
   * This value should be 1-128 characters, and valid characters
   * are `/[a-z][0-9]-/`.
   *
   * @generated from field: string tensorboard_run_id = 3;
   */
  tensorboardRunId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateTensorboardRunRequest.
 * Use `create(CreateTensorboardRunRequestSchema)` to create a new message.
 */
export const CreateTensorboardRunRequestSchema: GenMessage<CreateTensorboardRunRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 18);

/**
 * Request message for
 * [TensorboardService.GetTensorboardRun][google.cloud.aiplatform.v1.TensorboardService.GetTensorboardRun].
 *
 * @generated from message google.cloud.aiplatform.v1.GetTensorboardRunRequest
 */
export type GetTensorboardRunRequest = Message<"google.cloud.aiplatform.v1.GetTensorboardRunRequest"> & {
  /**
   * Required. The name of the TensorboardRun resource.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetTensorboardRunRequest.
 * Use `create(GetTensorboardRunRequestSchema)` to create a new message.
 */
export const GetTensorboardRunRequestSchema: GenMessage<GetTensorboardRunRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 19);

/**
 * Request message for
 * [TensorboardService.ReadTensorboardBlobData][google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardBlobData].
 *
 * @generated from message google.cloud.aiplatform.v1.ReadTensorboardBlobDataRequest
 */
export type ReadTensorboardBlobDataRequest = Message<"google.cloud.aiplatform.v1.ReadTensorboardBlobDataRequest"> & {
  /**
   * Required. The resource name of the TensorboardTimeSeries to list Blobs.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
   *
   * @generated from field: string time_series = 1;
   */
  timeSeries: string;

  /**
   * IDs of the blobs to read.
   *
   * @generated from field: repeated string blob_ids = 2;
   */
  blobIds: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ReadTensorboardBlobDataRequest.
 * Use `create(ReadTensorboardBlobDataRequestSchema)` to create a new message.
 */
export const ReadTensorboardBlobDataRequestSchema: GenMessage<ReadTensorboardBlobDataRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 20);

/**
 * Response message for
 * [TensorboardService.ReadTensorboardBlobData][google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardBlobData].
 *
 * @generated from message google.cloud.aiplatform.v1.ReadTensorboardBlobDataResponse
 */
export type ReadTensorboardBlobDataResponse = Message<"google.cloud.aiplatform.v1.ReadTensorboardBlobDataResponse"> & {
  /**
   * Blob messages containing blob bytes.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.TensorboardBlob blobs = 1;
   */
  blobs: TensorboardBlob[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ReadTensorboardBlobDataResponse.
 * Use `create(ReadTensorboardBlobDataResponseSchema)` to create a new message.
 */
export const ReadTensorboardBlobDataResponseSchema: GenMessage<ReadTensorboardBlobDataResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 21);

/**
 * Request message for
 * [TensorboardService.ListTensorboardRuns][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardRuns].
 *
 * @generated from message google.cloud.aiplatform.v1.ListTensorboardRunsRequest
 */
export type ListTensorboardRunsRequest = Message<"google.cloud.aiplatform.v1.ListTensorboardRunsRequest"> & {
  /**
   * Required. The resource name of the TensorboardExperiment to list
   * TensorboardRuns. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Lists the TensorboardRuns that match the filter expression.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of TensorboardRuns to return. The service may return
   * fewer than this value. If unspecified, at most 50 TensorboardRuns are
   * returned. The maximum value is 1000; values above 1000 are coerced to
   * 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [TensorboardService.ListTensorboardRuns][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardRuns]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [TensorboardService.ListTensorboardRuns][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardRuns]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Field to use to sort the list.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 6;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListTensorboardRunsRequest.
 * Use `create(ListTensorboardRunsRequestSchema)` to create a new message.
 */
export const ListTensorboardRunsRequestSchema: GenMessage<ListTensorboardRunsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 22);

/**
 * Response message for
 * [TensorboardService.ListTensorboardRuns][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardRuns].
 *
 * @generated from message google.cloud.aiplatform.v1.ListTensorboardRunsResponse
 */
export type ListTensorboardRunsResponse = Message<"google.cloud.aiplatform.v1.ListTensorboardRunsResponse"> & {
  /**
   * The TensorboardRuns mathching the request.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.TensorboardRun tensorboard_runs = 1;
   */
  tensorboardRuns: TensorboardRun[];

  /**
   * A token, which can be sent as
   * [ListTensorboardRunsRequest.page_token][google.cloud.aiplatform.v1.ListTensorboardRunsRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListTensorboardRunsResponse.
 * Use `create(ListTensorboardRunsResponseSchema)` to create a new message.
 */
export const ListTensorboardRunsResponseSchema: GenMessage<ListTensorboardRunsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 23);

/**
 * Request message for
 * [TensorboardService.UpdateTensorboardRun][google.cloud.aiplatform.v1.TensorboardService.UpdateTensorboardRun].
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateTensorboardRunRequest
 */
export type UpdateTensorboardRunRequest = Message<"google.cloud.aiplatform.v1.UpdateTensorboardRunRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * TensorboardRun resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field is overwritten if it's in the mask. If the
   * user does not provide a mask then all fields are overwritten if new
   * values are specified.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The TensorboardRun's `name` field is used to identify the
   * TensorboardRun to be updated. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
   *
   * @generated from field: google.cloud.aiplatform.v1.TensorboardRun tensorboard_run = 2;
   */
  tensorboardRun?: TensorboardRun;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateTensorboardRunRequest.
 * Use `create(UpdateTensorboardRunRequestSchema)` to create a new message.
 */
export const UpdateTensorboardRunRequestSchema: GenMessage<UpdateTensorboardRunRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 24);

/**
 * Request message for
 * [TensorboardService.DeleteTensorboardRun][google.cloud.aiplatform.v1.TensorboardService.DeleteTensorboardRun].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteTensorboardRunRequest
 */
export type DeleteTensorboardRunRequest = Message<"google.cloud.aiplatform.v1.DeleteTensorboardRunRequest"> & {
  /**
   * Required. The name of the TensorboardRun to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteTensorboardRunRequest.
 * Use `create(DeleteTensorboardRunRequestSchema)` to create a new message.
 */
export const DeleteTensorboardRunRequestSchema: GenMessage<DeleteTensorboardRunRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 25);

/**
 * Request message for
 * [TensorboardService.BatchCreateTensorboardTimeSeries][google.cloud.aiplatform.v1.TensorboardService.BatchCreateTensorboardTimeSeries].
 *
 * @generated from message google.cloud.aiplatform.v1.BatchCreateTensorboardTimeSeriesRequest
 */
export type BatchCreateTensorboardTimeSeriesRequest = Message<"google.cloud.aiplatform.v1.BatchCreateTensorboardTimeSeriesRequest"> & {
  /**
   * Required. The resource name of the TensorboardExperiment to create the
   * TensorboardTimeSeries in.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
   * The TensorboardRuns referenced by the parent fields in the
   * CreateTensorboardTimeSeriesRequest messages must be sub resources of this
   * TensorboardExperiment.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The request message specifying the TensorboardTimeSeries to
   * create. A maximum of 1000 TensorboardTimeSeries can be created in a batch.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.CreateTensorboardTimeSeriesRequest requests = 2;
   */
  requests: CreateTensorboardTimeSeriesRequest[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchCreateTensorboardTimeSeriesRequest.
 * Use `create(BatchCreateTensorboardTimeSeriesRequestSchema)` to create a new message.
 */
export const BatchCreateTensorboardTimeSeriesRequestSchema: GenMessage<BatchCreateTensorboardTimeSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 26);

/**
 * Response message for
 * [TensorboardService.BatchCreateTensorboardTimeSeries][google.cloud.aiplatform.v1.TensorboardService.BatchCreateTensorboardTimeSeries].
 *
 * @generated from message google.cloud.aiplatform.v1.BatchCreateTensorboardTimeSeriesResponse
 */
export type BatchCreateTensorboardTimeSeriesResponse = Message<"google.cloud.aiplatform.v1.BatchCreateTensorboardTimeSeriesResponse"> & {
  /**
   * The created TensorboardTimeSeries.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.TensorboardTimeSeries tensorboard_time_series = 1;
   */
  tensorboardTimeSeries: TensorboardTimeSeries[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchCreateTensorboardTimeSeriesResponse.
 * Use `create(BatchCreateTensorboardTimeSeriesResponseSchema)` to create a new message.
 */
export const BatchCreateTensorboardTimeSeriesResponseSchema: GenMessage<BatchCreateTensorboardTimeSeriesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 27);

/**
 * Request message for
 * [TensorboardService.CreateTensorboardTimeSeries][google.cloud.aiplatform.v1.TensorboardService.CreateTensorboardTimeSeries].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateTensorboardTimeSeriesRequest
 */
export type CreateTensorboardTimeSeriesRequest = Message<"google.cloud.aiplatform.v1.CreateTensorboardTimeSeriesRequest"> & {
  /**
   * Required. The resource name of the TensorboardRun to create the
   * TensorboardTimeSeries in.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The user specified unique ID to use for the
   * TensorboardTimeSeries, which becomes the final component of the
   * TensorboardTimeSeries's resource name. This value should match
   * "[a-z0-9][a-z0-9-]{0, 127}"
   *
   * @generated from field: string tensorboard_time_series_id = 3;
   */
  tensorboardTimeSeriesId: string;

  /**
   * Required. The TensorboardTimeSeries to create.
   *
   * @generated from field: google.cloud.aiplatform.v1.TensorboardTimeSeries tensorboard_time_series = 2;
   */
  tensorboardTimeSeries?: TensorboardTimeSeries;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateTensorboardTimeSeriesRequest.
 * Use `create(CreateTensorboardTimeSeriesRequestSchema)` to create a new message.
 */
export const CreateTensorboardTimeSeriesRequestSchema: GenMessage<CreateTensorboardTimeSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 28);

/**
 * Request message for
 * [TensorboardService.GetTensorboardTimeSeries][google.cloud.aiplatform.v1.TensorboardService.GetTensorboardTimeSeries].
 *
 * @generated from message google.cloud.aiplatform.v1.GetTensorboardTimeSeriesRequest
 */
export type GetTensorboardTimeSeriesRequest = Message<"google.cloud.aiplatform.v1.GetTensorboardTimeSeriesRequest"> & {
  /**
   * Required. The name of the TensorboardTimeSeries resource.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetTensorboardTimeSeriesRequest.
 * Use `create(GetTensorboardTimeSeriesRequestSchema)` to create a new message.
 */
export const GetTensorboardTimeSeriesRequestSchema: GenMessage<GetTensorboardTimeSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 29);

/**
 * Request message for
 * [TensorboardService.ListTensorboardTimeSeries][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardTimeSeries].
 *
 * @generated from message google.cloud.aiplatform.v1.ListTensorboardTimeSeriesRequest
 */
export type ListTensorboardTimeSeriesRequest = Message<"google.cloud.aiplatform.v1.ListTensorboardTimeSeriesRequest"> & {
  /**
   * Required. The resource name of the TensorboardRun to list
   * TensorboardTimeSeries. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Lists the TensorboardTimeSeries that match the filter expression.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of TensorboardTimeSeries to return. The service may
   * return fewer than this value. If unspecified, at most 50
   * TensorboardTimeSeries are returned. The maximum value is 1000; values
   * above 1000 are coerced to 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [TensorboardService.ListTensorboardTimeSeries][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardTimeSeries]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [TensorboardService.ListTensorboardTimeSeries][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardTimeSeries]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Field to use to sort the list.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 6;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListTensorboardTimeSeriesRequest.
 * Use `create(ListTensorboardTimeSeriesRequestSchema)` to create a new message.
 */
export const ListTensorboardTimeSeriesRequestSchema: GenMessage<ListTensorboardTimeSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 30);

/**
 * Response message for
 * [TensorboardService.ListTensorboardTimeSeries][google.cloud.aiplatform.v1.TensorboardService.ListTensorboardTimeSeries].
 *
 * @generated from message google.cloud.aiplatform.v1.ListTensorboardTimeSeriesResponse
 */
export type ListTensorboardTimeSeriesResponse = Message<"google.cloud.aiplatform.v1.ListTensorboardTimeSeriesResponse"> & {
  /**
   * The TensorboardTimeSeries mathching the request.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.TensorboardTimeSeries tensorboard_time_series = 1;
   */
  tensorboardTimeSeries: TensorboardTimeSeries[];

  /**
   * A token, which can be sent as
   * [ListTensorboardTimeSeriesRequest.page_token][google.cloud.aiplatform.v1.ListTensorboardTimeSeriesRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListTensorboardTimeSeriesResponse.
 * Use `create(ListTensorboardTimeSeriesResponseSchema)` to create a new message.
 */
export const ListTensorboardTimeSeriesResponseSchema: GenMessage<ListTensorboardTimeSeriesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 31);

/**
 * Request message for
 * [TensorboardService.UpdateTensorboardTimeSeries][google.cloud.aiplatform.v1.TensorboardService.UpdateTensorboardTimeSeries].
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateTensorboardTimeSeriesRequest
 */
export type UpdateTensorboardTimeSeriesRequest = Message<"google.cloud.aiplatform.v1.UpdateTensorboardTimeSeriesRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * TensorboardTimeSeries resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field is overwritten if it's in the mask. If the
   * user does not provide a mask then all fields are overwritten if new
   * values are specified.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The TensorboardTimeSeries' `name` field is used to identify the
   * TensorboardTimeSeries to be updated.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
   *
   * @generated from field: google.cloud.aiplatform.v1.TensorboardTimeSeries tensorboard_time_series = 2;
   */
  tensorboardTimeSeries?: TensorboardTimeSeries;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateTensorboardTimeSeriesRequest.
 * Use `create(UpdateTensorboardTimeSeriesRequestSchema)` to create a new message.
 */
export const UpdateTensorboardTimeSeriesRequestSchema: GenMessage<UpdateTensorboardTimeSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 32);

/**
 * Request message for
 * [TensorboardService.DeleteTensorboardTimeSeries][google.cloud.aiplatform.v1.TensorboardService.DeleteTensorboardTimeSeries].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteTensorboardTimeSeriesRequest
 */
export type DeleteTensorboardTimeSeriesRequest = Message<"google.cloud.aiplatform.v1.DeleteTensorboardTimeSeriesRequest"> & {
  /**
   * Required. The name of the TensorboardTimeSeries to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteTensorboardTimeSeriesRequest.
 * Use `create(DeleteTensorboardTimeSeriesRequestSchema)` to create a new message.
 */
export const DeleteTensorboardTimeSeriesRequestSchema: GenMessage<DeleteTensorboardTimeSeriesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 33);

/**
 * Request message for
 * [TensorboardService.BatchReadTensorboardTimeSeriesData][google.cloud.aiplatform.v1.TensorboardService.BatchReadTensorboardTimeSeriesData].
 *
 * @generated from message google.cloud.aiplatform.v1.BatchReadTensorboardTimeSeriesDataRequest
 */
export type BatchReadTensorboardTimeSeriesDataRequest = Message<"google.cloud.aiplatform.v1.BatchReadTensorboardTimeSeriesDataRequest"> & {
  /**
   * Required. The resource name of the Tensorboard containing
   * TensorboardTimeSeries to read data from. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`.
   * The TensorboardTimeSeries referenced by
   * [time_series][google.cloud.aiplatform.v1.BatchReadTensorboardTimeSeriesDataRequest.time_series]
   * must be sub resources of this Tensorboard.
   *
   * @generated from field: string tensorboard = 1;
   */
  tensorboard: string;

  /**
   * Required. The resource names of the TensorboardTimeSeries to read data
   * from. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
   *
   * @generated from field: repeated string time_series = 2;
   */
  timeSeries: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchReadTensorboardTimeSeriesDataRequest.
 * Use `create(BatchReadTensorboardTimeSeriesDataRequestSchema)` to create a new message.
 */
export const BatchReadTensorboardTimeSeriesDataRequestSchema: GenMessage<BatchReadTensorboardTimeSeriesDataRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 34);

/**
 * Response message for
 * [TensorboardService.BatchReadTensorboardTimeSeriesData][google.cloud.aiplatform.v1.TensorboardService.BatchReadTensorboardTimeSeriesData].
 *
 * @generated from message google.cloud.aiplatform.v1.BatchReadTensorboardTimeSeriesDataResponse
 */
export type BatchReadTensorboardTimeSeriesDataResponse = Message<"google.cloud.aiplatform.v1.BatchReadTensorboardTimeSeriesDataResponse"> & {
  /**
   * The returned time series data.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.TimeSeriesData time_series_data = 1;
   */
  timeSeriesData: TimeSeriesData[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchReadTensorboardTimeSeriesDataResponse.
 * Use `create(BatchReadTensorboardTimeSeriesDataResponseSchema)` to create a new message.
 */
export const BatchReadTensorboardTimeSeriesDataResponseSchema: GenMessage<BatchReadTensorboardTimeSeriesDataResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 35);

/**
 * Request message for
 * [TensorboardService.ReadTensorboardTimeSeriesData][google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardTimeSeriesData].
 *
 * @generated from message google.cloud.aiplatform.v1.ReadTensorboardTimeSeriesDataRequest
 */
export type ReadTensorboardTimeSeriesDataRequest = Message<"google.cloud.aiplatform.v1.ReadTensorboardTimeSeriesDataRequest"> & {
  /**
   * Required. The resource name of the TensorboardTimeSeries to read data from.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
   *
   * @generated from field: string tensorboard_time_series = 1;
   */
  tensorboardTimeSeries: string;

  /**
   * The maximum number of TensorboardTimeSeries' data to return.
   *
   * This value should be a positive integer.
   * This value can be set to -1 to return all data.
   *
   * @generated from field: int32 max_data_points = 2;
   */
  maxDataPoints: number;

  /**
   * Reads the TensorboardTimeSeries' data that match the filter expression.
   *
   * @generated from field: string filter = 3;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ReadTensorboardTimeSeriesDataRequest.
 * Use `create(ReadTensorboardTimeSeriesDataRequestSchema)` to create a new message.
 */
export const ReadTensorboardTimeSeriesDataRequestSchema: GenMessage<ReadTensorboardTimeSeriesDataRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 36);

/**
 * Response message for
 * [TensorboardService.ReadTensorboardTimeSeriesData][google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardTimeSeriesData].
 *
 * @generated from message google.cloud.aiplatform.v1.ReadTensorboardTimeSeriesDataResponse
 */
export type ReadTensorboardTimeSeriesDataResponse = Message<"google.cloud.aiplatform.v1.ReadTensorboardTimeSeriesDataResponse"> & {
  /**
   * The returned time series data.
   *
   * @generated from field: google.cloud.aiplatform.v1.TimeSeriesData time_series_data = 1;
   */
  timeSeriesData?: TimeSeriesData;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ReadTensorboardTimeSeriesDataResponse.
 * Use `create(ReadTensorboardTimeSeriesDataResponseSchema)` to create a new message.
 */
export const ReadTensorboardTimeSeriesDataResponseSchema: GenMessage<ReadTensorboardTimeSeriesDataResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 37);

/**
 * Request message for
 * [TensorboardService.WriteTensorboardExperimentData][google.cloud.aiplatform.v1.TensorboardService.WriteTensorboardExperimentData].
 *
 * @generated from message google.cloud.aiplatform.v1.WriteTensorboardExperimentDataRequest
 */
export type WriteTensorboardExperimentDataRequest = Message<"google.cloud.aiplatform.v1.WriteTensorboardExperimentDataRequest"> & {
  /**
   * Required. The resource name of the TensorboardExperiment to write data to.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
   *
   * @generated from field: string tensorboard_experiment = 1;
   */
  tensorboardExperiment: string;

  /**
   * Required. Requests containing per-run TensorboardTimeSeries data to write.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.WriteTensorboardRunDataRequest write_run_data_requests = 2;
   */
  writeRunDataRequests: WriteTensorboardRunDataRequest[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.WriteTensorboardExperimentDataRequest.
 * Use `create(WriteTensorboardExperimentDataRequestSchema)` to create a new message.
 */
export const WriteTensorboardExperimentDataRequestSchema: GenMessage<WriteTensorboardExperimentDataRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 38);

/**
 * Response message for
 * [TensorboardService.WriteTensorboardExperimentData][google.cloud.aiplatform.v1.TensorboardService.WriteTensorboardExperimentData].
 *
 * @generated from message google.cloud.aiplatform.v1.WriteTensorboardExperimentDataResponse
 */
export type WriteTensorboardExperimentDataResponse = Message<"google.cloud.aiplatform.v1.WriteTensorboardExperimentDataResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1.WriteTensorboardExperimentDataResponse.
 * Use `create(WriteTensorboardExperimentDataResponseSchema)` to create a new message.
 */
export const WriteTensorboardExperimentDataResponseSchema: GenMessage<WriteTensorboardExperimentDataResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 39);

/**
 * Request message for
 * [TensorboardService.WriteTensorboardRunData][google.cloud.aiplatform.v1.TensorboardService.WriteTensorboardRunData].
 *
 * @generated from message google.cloud.aiplatform.v1.WriteTensorboardRunDataRequest
 */
export type WriteTensorboardRunDataRequest = Message<"google.cloud.aiplatform.v1.WriteTensorboardRunDataRequest"> & {
  /**
   * Required. The resource name of the TensorboardRun to write data to.
   * Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
   *
   * @generated from field: string tensorboard_run = 1;
   */
  tensorboardRun: string;

  /**
   * Required. The TensorboardTimeSeries data to write.
   * Values with in a time series are indexed by their step value.
   * Repeated writes to the same step will overwrite the existing value for that
   * step.
   * The upper limit of data points per write request is 5000.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.TimeSeriesData time_series_data = 2;
   */
  timeSeriesData: TimeSeriesData[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.WriteTensorboardRunDataRequest.
 * Use `create(WriteTensorboardRunDataRequestSchema)` to create a new message.
 */
export const WriteTensorboardRunDataRequestSchema: GenMessage<WriteTensorboardRunDataRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 40);

/**
 * Response message for
 * [TensorboardService.WriteTensorboardRunData][google.cloud.aiplatform.v1.TensorboardService.WriteTensorboardRunData].
 *
 * @generated from message google.cloud.aiplatform.v1.WriteTensorboardRunDataResponse
 */
export type WriteTensorboardRunDataResponse = Message<"google.cloud.aiplatform.v1.WriteTensorboardRunDataResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1.WriteTensorboardRunDataResponse.
 * Use `create(WriteTensorboardRunDataResponseSchema)` to create a new message.
 */
export const WriteTensorboardRunDataResponseSchema: GenMessage<WriteTensorboardRunDataResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 41);

/**
 * Request message for
 * [TensorboardService.ExportTensorboardTimeSeriesData][google.cloud.aiplatform.v1.TensorboardService.ExportTensorboardTimeSeriesData].
 *
 * @generated from message google.cloud.aiplatform.v1.ExportTensorboardTimeSeriesDataRequest
 */
export type ExportTensorboardTimeSeriesDataRequest = Message<"google.cloud.aiplatform.v1.ExportTensorboardTimeSeriesDataRequest"> & {
  /**
   * Required. The resource name of the TensorboardTimeSeries to export data
   * from. Format:
   * `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
   *
   * @generated from field: string tensorboard_time_series = 1;
   */
  tensorboardTimeSeries: string;

  /**
   * Exports the TensorboardTimeSeries' data that match the filter expression.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of data points to return per page.
   * The default page_size is 1000. Values must be between 1 and 10000.
   * Values above 10000 are coerced to 10000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [ExportTensorboardTimeSeriesData][google.cloud.aiplatform.v1.TensorboardService.ExportTensorboardTimeSeriesData]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [ExportTensorboardTimeSeriesData][google.cloud.aiplatform.v1.TensorboardService.ExportTensorboardTimeSeriesData]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Field to use to sort the TensorboardTimeSeries' data.
   * By default, TensorboardTimeSeries' data is returned in a pseudo random
   * order.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExportTensorboardTimeSeriesDataRequest.
 * Use `create(ExportTensorboardTimeSeriesDataRequestSchema)` to create a new message.
 */
export const ExportTensorboardTimeSeriesDataRequestSchema: GenMessage<ExportTensorboardTimeSeriesDataRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 42);

/**
 * Response message for
 * [TensorboardService.ExportTensorboardTimeSeriesData][google.cloud.aiplatform.v1.TensorboardService.ExportTensorboardTimeSeriesData].
 *
 * @generated from message google.cloud.aiplatform.v1.ExportTensorboardTimeSeriesDataResponse
 */
export type ExportTensorboardTimeSeriesDataResponse = Message<"google.cloud.aiplatform.v1.ExportTensorboardTimeSeriesDataResponse"> & {
  /**
   * The returned time series data points.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.TimeSeriesDataPoint time_series_data_points = 1;
   */
  timeSeriesDataPoints: TimeSeriesDataPoint[];

  /**
   * A token, which can be sent as
   * [page_token][google.cloud.aiplatform.v1.ExportTensorboardTimeSeriesDataRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExportTensorboardTimeSeriesDataResponse.
 * Use `create(ExportTensorboardTimeSeriesDataResponseSchema)` to create a new message.
 */
export const ExportTensorboardTimeSeriesDataResponseSchema: GenMessage<ExportTensorboardTimeSeriesDataResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 43);

/**
 * Details of operations that perform create Tensorboard.
 *
 * @generated from message google.cloud.aiplatform.v1.CreateTensorboardOperationMetadata
 */
export type CreateTensorboardOperationMetadata = Message<"google.cloud.aiplatform.v1.CreateTensorboardOperationMetadata"> & {
  /**
   * Operation metadata for Tensorboard.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateTensorboardOperationMetadata.
 * Use `create(CreateTensorboardOperationMetadataSchema)` to create a new message.
 */
export const CreateTensorboardOperationMetadataSchema: GenMessage<CreateTensorboardOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 44);

/**
 * Details of operations that perform update Tensorboard.
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateTensorboardOperationMetadata
 */
export type UpdateTensorboardOperationMetadata = Message<"google.cloud.aiplatform.v1.UpdateTensorboardOperationMetadata"> & {
  /**
   * Operation metadata for Tensorboard.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateTensorboardOperationMetadata.
 * Use `create(UpdateTensorboardOperationMetadataSchema)` to create a new message.
 */
export const UpdateTensorboardOperationMetadataSchema: GenMessage<UpdateTensorboardOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 45);

/**
 * TensorboardService
 *
 * @generated from service google.cloud.aiplatform.v1.TensorboardService
 */
export const TensorboardService: GenService<{
  /**
   * Creates a Tensorboard.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.CreateTensorboard
   */
  createTensorboard: {
    methodKind: "unary";
    input: typeof CreateTensorboardRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a Tensorboard.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.GetTensorboard
   */
  getTensorboard: {
    methodKind: "unary";
    input: typeof GetTensorboardRequestSchema;
    output: typeof TensorboardSchema;
  },
  /**
   * Updates a Tensorboard.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.UpdateTensorboard
   */
  updateTensorboard: {
    methodKind: "unary";
    input: typeof UpdateTensorboardRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Tensorboards in a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.ListTensorboards
   */
  listTensorboards: {
    methodKind: "unary";
    input: typeof ListTensorboardsRequestSchema;
    output: typeof ListTensorboardsResponseSchema;
  },
  /**
   * Deletes a Tensorboard.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.DeleteTensorboard
   */
  deleteTensorboard: {
    methodKind: "unary";
    input: typeof DeleteTensorboardRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Returns a list of monthly active users for a given TensorBoard instance.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardUsage
   */
  readTensorboardUsage: {
    methodKind: "unary";
    input: typeof ReadTensorboardUsageRequestSchema;
    output: typeof ReadTensorboardUsageResponseSchema;
  },
  /**
   * Returns the storage size for a given TensorBoard instance.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardSize
   */
  readTensorboardSize: {
    methodKind: "unary";
    input: typeof ReadTensorboardSizeRequestSchema;
    output: typeof ReadTensorboardSizeResponseSchema;
  },
  /**
   * Creates a TensorboardExperiment.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.CreateTensorboardExperiment
   */
  createTensorboardExperiment: {
    methodKind: "unary";
    input: typeof CreateTensorboardExperimentRequestSchema;
    output: typeof TensorboardExperimentSchema;
  },
  /**
   * Gets a TensorboardExperiment.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.GetTensorboardExperiment
   */
  getTensorboardExperiment: {
    methodKind: "unary";
    input: typeof GetTensorboardExperimentRequestSchema;
    output: typeof TensorboardExperimentSchema;
  },
  /**
   * Updates a TensorboardExperiment.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.UpdateTensorboardExperiment
   */
  updateTensorboardExperiment: {
    methodKind: "unary";
    input: typeof UpdateTensorboardExperimentRequestSchema;
    output: typeof TensorboardExperimentSchema;
  },
  /**
   * Lists TensorboardExperiments in a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.ListTensorboardExperiments
   */
  listTensorboardExperiments: {
    methodKind: "unary";
    input: typeof ListTensorboardExperimentsRequestSchema;
    output: typeof ListTensorboardExperimentsResponseSchema;
  },
  /**
   * Deletes a TensorboardExperiment.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.DeleteTensorboardExperiment
   */
  deleteTensorboardExperiment: {
    methodKind: "unary";
    input: typeof DeleteTensorboardExperimentRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a TensorboardRun.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.CreateTensorboardRun
   */
  createTensorboardRun: {
    methodKind: "unary";
    input: typeof CreateTensorboardRunRequestSchema;
    output: typeof TensorboardRunSchema;
  },
  /**
   * Batch create TensorboardRuns.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.BatchCreateTensorboardRuns
   */
  batchCreateTensorboardRuns: {
    methodKind: "unary";
    input: typeof BatchCreateTensorboardRunsRequestSchema;
    output: typeof BatchCreateTensorboardRunsResponseSchema;
  },
  /**
   * Gets a TensorboardRun.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.GetTensorboardRun
   */
  getTensorboardRun: {
    methodKind: "unary";
    input: typeof GetTensorboardRunRequestSchema;
    output: typeof TensorboardRunSchema;
  },
  /**
   * Updates a TensorboardRun.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.UpdateTensorboardRun
   */
  updateTensorboardRun: {
    methodKind: "unary";
    input: typeof UpdateTensorboardRunRequestSchema;
    output: typeof TensorboardRunSchema;
  },
  /**
   * Lists TensorboardRuns in a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.ListTensorboardRuns
   */
  listTensorboardRuns: {
    methodKind: "unary";
    input: typeof ListTensorboardRunsRequestSchema;
    output: typeof ListTensorboardRunsResponseSchema;
  },
  /**
   * Deletes a TensorboardRun.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.DeleteTensorboardRun
   */
  deleteTensorboardRun: {
    methodKind: "unary";
    input: typeof DeleteTensorboardRunRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.BatchCreateTensorboardTimeSeries
   */
  batchCreateTensorboardTimeSeries: {
    methodKind: "unary";
    input: typeof BatchCreateTensorboardTimeSeriesRequestSchema;
    output: typeof BatchCreateTensorboardTimeSeriesResponseSchema;
  },
  /**
   * Creates a TensorboardTimeSeries.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.CreateTensorboardTimeSeries
   */
  createTensorboardTimeSeries: {
    methodKind: "unary";
    input: typeof CreateTensorboardTimeSeriesRequestSchema;
    output: typeof TensorboardTimeSeriesSchema;
  },
  /**
   * Gets a TensorboardTimeSeries.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.GetTensorboardTimeSeries
   */
  getTensorboardTimeSeries: {
    methodKind: "unary";
    input: typeof GetTensorboardTimeSeriesRequestSchema;
    output: typeof TensorboardTimeSeriesSchema;
  },
  /**
   * Updates a TensorboardTimeSeries.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.UpdateTensorboardTimeSeries
   */
  updateTensorboardTimeSeries: {
    methodKind: "unary";
    input: typeof UpdateTensorboardTimeSeriesRequestSchema;
    output: typeof TensorboardTimeSeriesSchema;
  },
  /**
   * Lists TensorboardTimeSeries in a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.ListTensorboardTimeSeries
   */
  listTensorboardTimeSeries: {
    methodKind: "unary";
    input: typeof ListTensorboardTimeSeriesRequestSchema;
    output: typeof ListTensorboardTimeSeriesResponseSchema;
  },
  /**
   * Deletes a TensorboardTimeSeries.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.DeleteTensorboardTimeSeries
   */
  deleteTensorboardTimeSeries: {
    methodKind: "unary";
    input: typeof DeleteTensorboardTimeSeriesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Reads multiple TensorboardTimeSeries' data. The data point number limit is
   * 1000 for scalars, 100 for tensors and blob references. If the number of
   * data points stored is less than the limit, all data is returned.
   * Otherwise, the number limit of data points is randomly selected from
   * this time series and returned.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.BatchReadTensorboardTimeSeriesData
   */
  batchReadTensorboardTimeSeriesData: {
    methodKind: "unary";
    input: typeof BatchReadTensorboardTimeSeriesDataRequestSchema;
    output: typeof BatchReadTensorboardTimeSeriesDataResponseSchema;
  },
  /**
   * Reads a TensorboardTimeSeries' data. By default, if the number of data
   * points stored is less than 1000, all data is returned. Otherwise, 1000
   * data points is randomly selected from this time series and returned.
   * This value can be changed by changing max_data_points, which can't be
   * greater than 10k.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardTimeSeriesData
   */
  readTensorboardTimeSeriesData: {
    methodKind: "unary";
    input: typeof ReadTensorboardTimeSeriesDataRequestSchema;
    output: typeof ReadTensorboardTimeSeriesDataResponseSchema;
  },
  /**
   * Gets bytes of TensorboardBlobs.
   * This is to allow reading blob data stored in consumer project's Cloud
   * Storage bucket without users having to obtain Cloud Storage access
   * permission.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.ReadTensorboardBlobData
   */
  readTensorboardBlobData: {
    methodKind: "server_streaming";
    input: typeof ReadTensorboardBlobDataRequestSchema;
    output: typeof ReadTensorboardBlobDataResponseSchema;
  },
  /**
   * Write time series data points of multiple TensorboardTimeSeries in multiple
   * TensorboardRun's. If any data fail to be ingested, an error is returned.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.WriteTensorboardExperimentData
   */
  writeTensorboardExperimentData: {
    methodKind: "unary";
    input: typeof WriteTensorboardExperimentDataRequestSchema;
    output: typeof WriteTensorboardExperimentDataResponseSchema;
  },
  /**
   * Write time series data points into multiple TensorboardTimeSeries under
   * a TensorboardRun. If any data fail to be ingested, an error is returned.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.WriteTensorboardRunData
   */
  writeTensorboardRunData: {
    methodKind: "unary";
    input: typeof WriteTensorboardRunDataRequestSchema;
    output: typeof WriteTensorboardRunDataResponseSchema;
  },
  /**
   * Exports a TensorboardTimeSeries' data. Data is returned in paginated
   * responses.
   *
   * @generated from rpc google.cloud.aiplatform.v1.TensorboardService.ExportTensorboardTimeSeriesData
   */
  exportTensorboardTimeSeriesData: {
    methodKind: "unary";
    input: typeof ExportTensorboardTimeSeriesDataRequestSchema;
    output: typeof ExportTensorboardTimeSeriesDataResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1_tensorboard_service, 0);

