// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1/notebook_service.proto (package google.cloud.aiplatform.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { NotebookExecutionJob, NotebookExecutionJobSchema } from "./notebook_execution_job_pb";
import { file_google_cloud_aiplatform_v1_notebook_execution_job } from "./notebook_execution_job_pb";
import type { NotebookRuntime, NotebookRuntimeSchema, NotebookRuntimeTemplate, NotebookRuntimeTemplateSchema } from "./notebook_runtime_pb";
import { file_google_cloud_aiplatform_v1_notebook_runtime } from "./notebook_runtime_pb";
import type { GenericOperationMetadata } from "./operation_pb";
import { file_google_cloud_aiplatform_v1_operation } from "./operation_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1/notebook_service.proto.
 */
export const file_google_cloud_aiplatform_v1_notebook_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1_notebook_execution_job, file_google_cloud_aiplatform_v1_notebook_runtime, file_google_cloud_aiplatform_v1_operation, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Request message for
 * [NotebookService.CreateNotebookRuntimeTemplate][google.cloud.aiplatform.v1.NotebookService.CreateNotebookRuntimeTemplate].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateNotebookRuntimeTemplateRequest
 */
export type CreateNotebookRuntimeTemplateRequest = Message<"google.cloud.aiplatform.v1.CreateNotebookRuntimeTemplateRequest"> & {
  /**
   * Required. The resource name of the Location to create the
   * NotebookRuntimeTemplate. Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The NotebookRuntimeTemplate to create.
   *
   * @generated from field: google.cloud.aiplatform.v1.NotebookRuntimeTemplate notebook_runtime_template = 2;
   */
  notebookRuntimeTemplate?: NotebookRuntimeTemplate;

  /**
   * Optional. User specified ID for the notebook runtime template.
   *
   * @generated from field: string notebook_runtime_template_id = 3;
   */
  notebookRuntimeTemplateId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateNotebookRuntimeTemplateRequest.
 * Use `create(CreateNotebookRuntimeTemplateRequestSchema)` to create a new message.
 */
export const CreateNotebookRuntimeTemplateRequestSchema: GenMessage<CreateNotebookRuntimeTemplateRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 0);

/**
 * Metadata information for
 * [NotebookService.CreateNotebookRuntimeTemplate][google.cloud.aiplatform.v1.NotebookService.CreateNotebookRuntimeTemplate].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateNotebookRuntimeTemplateOperationMetadata
 */
export type CreateNotebookRuntimeTemplateOperationMetadata = Message<"google.cloud.aiplatform.v1.CreateNotebookRuntimeTemplateOperationMetadata"> & {
  /**
   * The operation generic information.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateNotebookRuntimeTemplateOperationMetadata.
 * Use `create(CreateNotebookRuntimeTemplateOperationMetadataSchema)` to create a new message.
 */
export const CreateNotebookRuntimeTemplateOperationMetadataSchema: GenMessage<CreateNotebookRuntimeTemplateOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 1);

/**
 * Request message for
 * [NotebookService.GetNotebookRuntimeTemplate][google.cloud.aiplatform.v1.NotebookService.GetNotebookRuntimeTemplate]
 *
 * @generated from message google.cloud.aiplatform.v1.GetNotebookRuntimeTemplateRequest
 */
export type GetNotebookRuntimeTemplateRequest = Message<"google.cloud.aiplatform.v1.GetNotebookRuntimeTemplateRequest"> & {
  /**
   * Required. The name of the NotebookRuntimeTemplate resource.
   * Format:
   * `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetNotebookRuntimeTemplateRequest.
 * Use `create(GetNotebookRuntimeTemplateRequestSchema)` to create a new message.
 */
export const GetNotebookRuntimeTemplateRequestSchema: GenMessage<GetNotebookRuntimeTemplateRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 2);

/**
 * Request message for
 * [NotebookService.ListNotebookRuntimeTemplates][google.cloud.aiplatform.v1.NotebookService.ListNotebookRuntimeTemplates].
 *
 * @generated from message google.cloud.aiplatform.v1.ListNotebookRuntimeTemplatesRequest
 */
export type ListNotebookRuntimeTemplatesRequest = Message<"google.cloud.aiplatform.v1.ListNotebookRuntimeTemplatesRequest"> & {
  /**
   * Required. The resource name of the Location from which to list the
   * NotebookRuntimeTemplates.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. An expression for filtering the results of the request. For field
   * names both snake_case and camelCase are supported.
   *
   *   * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate`
   *     represents the NotebookRuntimeTemplate ID,
   *     i.e. the last segment of the NotebookRuntimeTemplate's [resource name]
   *     [google.cloud.aiplatform.v1.NotebookRuntimeTemplate.name].
   *   * `display_name` supports = and !=
   *   * `labels` supports general map functions that is:
   *     * `labels.key=value` - key:value equality
   *     * `labels.key:* or labels:key - key existence
   *     * A key including a space must be quoted. `labels."a key"`.
   *   * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum:
   *   [USER_DEFINED, ONE_CLICK].
   *
   * Some examples:
   *
   *   * `notebookRuntimeTemplate=notebookRuntimeTemplate123`
   *   * `displayName="myDisplayName"`
   *   * `labels.myKey="myValue"`
   *   * `notebookRuntimeType=USER_DEFINED`
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. The standard list page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Optional. The standard list page token.
   * Typically obtained via
   * [ListNotebookRuntimeTemplatesResponse.next_page_token][google.cloud.aiplatform.v1.ListNotebookRuntimeTemplatesResponse.next_page_token]
   * of the previous
   * [NotebookService.ListNotebookRuntimeTemplates][google.cloud.aiplatform.v1.NotebookService.ListNotebookRuntimeTemplates]
   * call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Optional. Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;

  /**
   * Optional. A comma-separated list of fields to order by, sorted in ascending
   * order. Use "desc" after a field name for descending. Supported fields:
   *
   *   * `display_name`
   *   * `create_time`
   *   * `update_time`
   *
   * Example: `display_name, create_time desc`.
   *
   * @generated from field: string order_by = 6;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListNotebookRuntimeTemplatesRequest.
 * Use `create(ListNotebookRuntimeTemplatesRequestSchema)` to create a new message.
 */
export const ListNotebookRuntimeTemplatesRequestSchema: GenMessage<ListNotebookRuntimeTemplatesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 3);

/**
 * Response message for
 * [NotebookService.ListNotebookRuntimeTemplates][google.cloud.aiplatform.v1.NotebookService.ListNotebookRuntimeTemplates].
 *
 * @generated from message google.cloud.aiplatform.v1.ListNotebookRuntimeTemplatesResponse
 */
export type ListNotebookRuntimeTemplatesResponse = Message<"google.cloud.aiplatform.v1.ListNotebookRuntimeTemplatesResponse"> & {
  /**
   * List of NotebookRuntimeTemplates in the requested page.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.NotebookRuntimeTemplate notebook_runtime_templates = 1;
   */
  notebookRuntimeTemplates: NotebookRuntimeTemplate[];

  /**
   * A token to retrieve next page of results.
   * Pass to
   * [ListNotebookRuntimeTemplatesRequest.page_token][google.cloud.aiplatform.v1.ListNotebookRuntimeTemplatesRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListNotebookRuntimeTemplatesResponse.
 * Use `create(ListNotebookRuntimeTemplatesResponseSchema)` to create a new message.
 */
export const ListNotebookRuntimeTemplatesResponseSchema: GenMessage<ListNotebookRuntimeTemplatesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 4);

/**
 * Request message for
 * [NotebookService.DeleteNotebookRuntimeTemplate][google.cloud.aiplatform.v1.NotebookService.DeleteNotebookRuntimeTemplate].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteNotebookRuntimeTemplateRequest
 */
export type DeleteNotebookRuntimeTemplateRequest = Message<"google.cloud.aiplatform.v1.DeleteNotebookRuntimeTemplateRequest"> & {
  /**
   * Required. The name of the NotebookRuntimeTemplate resource to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteNotebookRuntimeTemplateRequest.
 * Use `create(DeleteNotebookRuntimeTemplateRequestSchema)` to create a new message.
 */
export const DeleteNotebookRuntimeTemplateRequestSchema: GenMessage<DeleteNotebookRuntimeTemplateRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 5);

/**
 * Request message for
 * [NotebookService.UpdateNotebookRuntimeTemplate][google.cloud.aiplatform.v1.NotebookService.UpdateNotebookRuntimeTemplate].
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateNotebookRuntimeTemplateRequest
 */
export type UpdateNotebookRuntimeTemplateRequest = Message<"google.cloud.aiplatform.v1.UpdateNotebookRuntimeTemplateRequest"> & {
  /**
   * Required. The NotebookRuntimeTemplate to update.
   *
   * @generated from field: google.cloud.aiplatform.v1.NotebookRuntimeTemplate notebook_runtime_template = 1;
   */
  notebookRuntimeTemplate?: NotebookRuntimeTemplate;

  /**
   * Required. The update mask applies to the resource.
   * For the `FieldMask` definition, see
   * [google.protobuf.FieldMask][google.protobuf.FieldMask]. Input format:
   * `{paths: "${updated_filed}"}` Updatable fields:
   *
   *   * `encryption_spec.kms_key_name`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateNotebookRuntimeTemplateRequest.
 * Use `create(UpdateNotebookRuntimeTemplateRequestSchema)` to create a new message.
 */
export const UpdateNotebookRuntimeTemplateRequestSchema: GenMessage<UpdateNotebookRuntimeTemplateRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 6);

/**
 * Request message for
 * [NotebookService.AssignNotebookRuntime][google.cloud.aiplatform.v1.NotebookService.AssignNotebookRuntime].
 *
 * @generated from message google.cloud.aiplatform.v1.AssignNotebookRuntimeRequest
 */
export type AssignNotebookRuntimeRequest = Message<"google.cloud.aiplatform.v1.AssignNotebookRuntimeRequest"> & {
  /**
   * Required. The resource name of the Location to get the NotebookRuntime
   * assignment. Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The resource name of the NotebookRuntimeTemplate based on which a
   * NotebookRuntime will be assigned (reuse or create a new one).
   *
   * @generated from field: string notebook_runtime_template = 2;
   */
  notebookRuntimeTemplate: string;

  /**
   * Required. Provide runtime specific information (e.g. runtime owner,
   * notebook id) used for NotebookRuntime assignment.
   *
   * @generated from field: google.cloud.aiplatform.v1.NotebookRuntime notebook_runtime = 3;
   */
  notebookRuntime?: NotebookRuntime;

  /**
   * Optional. User specified ID for the notebook runtime.
   *
   * @generated from field: string notebook_runtime_id = 4;
   */
  notebookRuntimeId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.AssignNotebookRuntimeRequest.
 * Use `create(AssignNotebookRuntimeRequestSchema)` to create a new message.
 */
export const AssignNotebookRuntimeRequestSchema: GenMessage<AssignNotebookRuntimeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 7);

/**
 * Metadata information for
 * [NotebookService.AssignNotebookRuntime][google.cloud.aiplatform.v1.NotebookService.AssignNotebookRuntime].
 *
 * @generated from message google.cloud.aiplatform.v1.AssignNotebookRuntimeOperationMetadata
 */
export type AssignNotebookRuntimeOperationMetadata = Message<"google.cloud.aiplatform.v1.AssignNotebookRuntimeOperationMetadata"> & {
  /**
   * The operation generic information.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;

  /**
   * A human-readable message that shows the intermediate progress details of
   * NotebookRuntime.
   *
   * @generated from field: string progress_message = 2;
   */
  progressMessage: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.AssignNotebookRuntimeOperationMetadata.
 * Use `create(AssignNotebookRuntimeOperationMetadataSchema)` to create a new message.
 */
export const AssignNotebookRuntimeOperationMetadataSchema: GenMessage<AssignNotebookRuntimeOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 8);

/**
 * Request message for
 * [NotebookService.GetNotebookRuntime][google.cloud.aiplatform.v1.NotebookService.GetNotebookRuntime]
 *
 * @generated from message google.cloud.aiplatform.v1.GetNotebookRuntimeRequest
 */
export type GetNotebookRuntimeRequest = Message<"google.cloud.aiplatform.v1.GetNotebookRuntimeRequest"> & {
  /**
   * Required. The name of the NotebookRuntime resource.
   * Instead of checking whether the name is in valid NotebookRuntime resource
   * name format, directly throw NotFound exception if there is no such
   * NotebookRuntime in spanner.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetNotebookRuntimeRequest.
 * Use `create(GetNotebookRuntimeRequestSchema)` to create a new message.
 */
export const GetNotebookRuntimeRequestSchema: GenMessage<GetNotebookRuntimeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 9);

/**
 * Request message for
 * [NotebookService.ListNotebookRuntimes][google.cloud.aiplatform.v1.NotebookService.ListNotebookRuntimes].
 *
 * @generated from message google.cloud.aiplatform.v1.ListNotebookRuntimesRequest
 */
export type ListNotebookRuntimesRequest = Message<"google.cloud.aiplatform.v1.ListNotebookRuntimesRequest"> & {
  /**
   * Required. The resource name of the Location from which to list the
   * NotebookRuntimes.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. An expression for filtering the results of the request. For field
   * names both snake_case and camelCase are supported.
   *
   *   * `notebookRuntime` supports = and !=. `notebookRuntime` represents the
   *     NotebookRuntime ID,
   *     i.e. the last segment of the NotebookRuntime's [resource name]
   *     [google.cloud.aiplatform.v1.NotebookRuntime.name].
   *   * `displayName` supports = and != and regex.
   *   * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate`
   *     represents the NotebookRuntimeTemplate ID,
   *     i.e. the last segment of the NotebookRuntimeTemplate's [resource name]
   *     [google.cloud.aiplatform.v1.NotebookRuntimeTemplate.name].
   *   * `healthState` supports = and !=. healthState enum: [HEALTHY, UNHEALTHY,
   *   HEALTH_STATE_UNSPECIFIED].
   *   * `runtimeState` supports = and !=. runtimeState enum:
   *   [RUNTIME_STATE_UNSPECIFIED, RUNNING, BEING_STARTED, BEING_STOPPED,
   *   STOPPED, BEING_UPGRADED, ERROR, INVALID].
   *   * `runtimeUser` supports = and !=.
   *   * API version is UI only: `uiState` supports = and !=. uiState enum:
   *   [UI_RESOURCE_STATE_UNSPECIFIED, UI_RESOURCE_STATE_BEING_CREATED,
   *   UI_RESOURCE_STATE_ACTIVE, UI_RESOURCE_STATE_BEING_DELETED,
   *   UI_RESOURCE_STATE_CREATION_FAILED].
   *   * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum:
   *   [USER_DEFINED, ONE_CLICK].
   *
   * Some examples:
   *
   *   * `notebookRuntime="notebookRuntime123"`
   *   * `displayName="myDisplayName"` and `displayName=~"myDisplayNameRegex"`
   *   * `notebookRuntimeTemplate="notebookRuntimeTemplate321"`
   *   * `healthState=HEALTHY`
   *   * `runtimeState=RUNNING`
   *   * `runtimeUser="test@google.com"`
   *   * `uiState=UI_RESOURCE_STATE_BEING_DELETED`
   *   * `notebookRuntimeType=USER_DEFINED`
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. The standard list page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Optional. The standard list page token.
   * Typically obtained via
   * [ListNotebookRuntimesResponse.next_page_token][google.cloud.aiplatform.v1.ListNotebookRuntimesResponse.next_page_token]
   * of the previous
   * [NotebookService.ListNotebookRuntimes][google.cloud.aiplatform.v1.NotebookService.ListNotebookRuntimes]
   * call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Optional. Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;

  /**
   * Optional. A comma-separated list of fields to order by, sorted in ascending
   * order. Use "desc" after a field name for descending. Supported fields:
   *
   *   * `display_name`
   *   * `create_time`
   *   * `update_time`
   *
   * Example: `display_name, create_time desc`.
   *
   * @generated from field: string order_by = 6;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListNotebookRuntimesRequest.
 * Use `create(ListNotebookRuntimesRequestSchema)` to create a new message.
 */
export const ListNotebookRuntimesRequestSchema: GenMessage<ListNotebookRuntimesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 10);

/**
 * Response message for
 * [NotebookService.ListNotebookRuntimes][google.cloud.aiplatform.v1.NotebookService.ListNotebookRuntimes].
 *
 * @generated from message google.cloud.aiplatform.v1.ListNotebookRuntimesResponse
 */
export type ListNotebookRuntimesResponse = Message<"google.cloud.aiplatform.v1.ListNotebookRuntimesResponse"> & {
  /**
   * List of NotebookRuntimes in the requested page.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.NotebookRuntime notebook_runtimes = 1;
   */
  notebookRuntimes: NotebookRuntime[];

  /**
   * A token to retrieve next page of results.
   * Pass to
   * [ListNotebookRuntimesRequest.page_token][google.cloud.aiplatform.v1.ListNotebookRuntimesRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListNotebookRuntimesResponse.
 * Use `create(ListNotebookRuntimesResponseSchema)` to create a new message.
 */
export const ListNotebookRuntimesResponseSchema: GenMessage<ListNotebookRuntimesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 11);

/**
 * Request message for
 * [NotebookService.DeleteNotebookRuntime][google.cloud.aiplatform.v1.NotebookService.DeleteNotebookRuntime].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteNotebookRuntimeRequest
 */
export type DeleteNotebookRuntimeRequest = Message<"google.cloud.aiplatform.v1.DeleteNotebookRuntimeRequest"> & {
  /**
   * Required. The name of the NotebookRuntime resource to be deleted.
   * Instead of checking whether the name is in valid NotebookRuntime resource
   * name format, directly throw NotFound exception if there is no such
   * NotebookRuntime in spanner.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteNotebookRuntimeRequest.
 * Use `create(DeleteNotebookRuntimeRequestSchema)` to create a new message.
 */
export const DeleteNotebookRuntimeRequestSchema: GenMessage<DeleteNotebookRuntimeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 12);

/**
 * Request message for
 * [NotebookService.UpgradeNotebookRuntime][google.cloud.aiplatform.v1.NotebookService.UpgradeNotebookRuntime].
 *
 * @generated from message google.cloud.aiplatform.v1.UpgradeNotebookRuntimeRequest
 */
export type UpgradeNotebookRuntimeRequest = Message<"google.cloud.aiplatform.v1.UpgradeNotebookRuntimeRequest"> & {
  /**
   * Required. The name of the NotebookRuntime resource to be upgrade.
   * Instead of checking whether the name is in valid NotebookRuntime resource
   * name format, directly throw NotFound exception if there is no such
   * NotebookRuntime in spanner.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpgradeNotebookRuntimeRequest.
 * Use `create(UpgradeNotebookRuntimeRequestSchema)` to create a new message.
 */
export const UpgradeNotebookRuntimeRequestSchema: GenMessage<UpgradeNotebookRuntimeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 13);

/**
 * Metadata information for
 * [NotebookService.UpgradeNotebookRuntime][google.cloud.aiplatform.v1.NotebookService.UpgradeNotebookRuntime].
 *
 * @generated from message google.cloud.aiplatform.v1.UpgradeNotebookRuntimeOperationMetadata
 */
export type UpgradeNotebookRuntimeOperationMetadata = Message<"google.cloud.aiplatform.v1.UpgradeNotebookRuntimeOperationMetadata"> & {
  /**
   * The operation generic information.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;

  /**
   * A human-readable message that shows the intermediate progress details of
   * NotebookRuntime.
   *
   * @generated from field: string progress_message = 2;
   */
  progressMessage: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpgradeNotebookRuntimeOperationMetadata.
 * Use `create(UpgradeNotebookRuntimeOperationMetadataSchema)` to create a new message.
 */
export const UpgradeNotebookRuntimeOperationMetadataSchema: GenMessage<UpgradeNotebookRuntimeOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 14);

/**
 * Response message for
 * [NotebookService.UpgradeNotebookRuntime][google.cloud.aiplatform.v1.NotebookService.UpgradeNotebookRuntime].
 *
 * @generated from message google.cloud.aiplatform.v1.UpgradeNotebookRuntimeResponse
 */
export type UpgradeNotebookRuntimeResponse = Message<"google.cloud.aiplatform.v1.UpgradeNotebookRuntimeResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpgradeNotebookRuntimeResponse.
 * Use `create(UpgradeNotebookRuntimeResponseSchema)` to create a new message.
 */
export const UpgradeNotebookRuntimeResponseSchema: GenMessage<UpgradeNotebookRuntimeResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 15);

/**
 * Request message for
 * [NotebookService.StartNotebookRuntime][google.cloud.aiplatform.v1.NotebookService.StartNotebookRuntime].
 *
 * @generated from message google.cloud.aiplatform.v1.StartNotebookRuntimeRequest
 */
export type StartNotebookRuntimeRequest = Message<"google.cloud.aiplatform.v1.StartNotebookRuntimeRequest"> & {
  /**
   * Required. The name of the NotebookRuntime resource to be started.
   * Instead of checking whether the name is in valid NotebookRuntime resource
   * name format, directly throw NotFound exception if there is no such
   * NotebookRuntime in spanner.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.StartNotebookRuntimeRequest.
 * Use `create(StartNotebookRuntimeRequestSchema)` to create a new message.
 */
export const StartNotebookRuntimeRequestSchema: GenMessage<StartNotebookRuntimeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 16);

/**
 * Metadata information for
 * [NotebookService.StartNotebookRuntime][google.cloud.aiplatform.v1.NotebookService.StartNotebookRuntime].
 *
 * @generated from message google.cloud.aiplatform.v1.StartNotebookRuntimeOperationMetadata
 */
export type StartNotebookRuntimeOperationMetadata = Message<"google.cloud.aiplatform.v1.StartNotebookRuntimeOperationMetadata"> & {
  /**
   * The operation generic information.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;

  /**
   * A human-readable message that shows the intermediate progress details of
   * NotebookRuntime.
   *
   * @generated from field: string progress_message = 2;
   */
  progressMessage: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.StartNotebookRuntimeOperationMetadata.
 * Use `create(StartNotebookRuntimeOperationMetadataSchema)` to create a new message.
 */
export const StartNotebookRuntimeOperationMetadataSchema: GenMessage<StartNotebookRuntimeOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 17);

/**
 * Response message for
 * [NotebookService.StartNotebookRuntime][google.cloud.aiplatform.v1.NotebookService.StartNotebookRuntime].
 *
 * @generated from message google.cloud.aiplatform.v1.StartNotebookRuntimeResponse
 */
export type StartNotebookRuntimeResponse = Message<"google.cloud.aiplatform.v1.StartNotebookRuntimeResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1.StartNotebookRuntimeResponse.
 * Use `create(StartNotebookRuntimeResponseSchema)` to create a new message.
 */
export const StartNotebookRuntimeResponseSchema: GenMessage<StartNotebookRuntimeResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 18);

/**
 * Request message for [NotebookService.CreateNotebookExecutionJob]
 *
 * @generated from message google.cloud.aiplatform.v1.CreateNotebookExecutionJobRequest
 */
export type CreateNotebookExecutionJobRequest = Message<"google.cloud.aiplatform.v1.CreateNotebookExecutionJobRequest"> & {
  /**
   * Required. The resource name of the Location to create the
   * NotebookExecutionJob. Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The NotebookExecutionJob to create.
   *
   * @generated from field: google.cloud.aiplatform.v1.NotebookExecutionJob notebook_execution_job = 2;
   */
  notebookExecutionJob?: NotebookExecutionJob;

  /**
   * Optional. User specified ID for the NotebookExecutionJob.
   *
   * @generated from field: string notebook_execution_job_id = 3;
   */
  notebookExecutionJobId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateNotebookExecutionJobRequest.
 * Use `create(CreateNotebookExecutionJobRequestSchema)` to create a new message.
 */
export const CreateNotebookExecutionJobRequestSchema: GenMessage<CreateNotebookExecutionJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 19);

/**
 * Metadata information for
 * [NotebookService.CreateNotebookExecutionJob][google.cloud.aiplatform.v1.NotebookService.CreateNotebookExecutionJob].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateNotebookExecutionJobOperationMetadata
 */
export type CreateNotebookExecutionJobOperationMetadata = Message<"google.cloud.aiplatform.v1.CreateNotebookExecutionJobOperationMetadata"> & {
  /**
   * The operation generic information.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;

  /**
   * A human-readable message that shows the intermediate progress details of
   * NotebookRuntime.
   *
   * @generated from field: string progress_message = 2;
   */
  progressMessage: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateNotebookExecutionJobOperationMetadata.
 * Use `create(CreateNotebookExecutionJobOperationMetadataSchema)` to create a new message.
 */
export const CreateNotebookExecutionJobOperationMetadataSchema: GenMessage<CreateNotebookExecutionJobOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 20);

/**
 * Request message for [NotebookService.GetNotebookExecutionJob]
 *
 * @generated from message google.cloud.aiplatform.v1.GetNotebookExecutionJobRequest
 */
export type GetNotebookExecutionJobRequest = Message<"google.cloud.aiplatform.v1.GetNotebookExecutionJobRequest"> & {
  /**
   * Required. The name of the NotebookExecutionJob resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The NotebookExecutionJob view. Defaults to BASIC.
   *
   * @generated from field: google.cloud.aiplatform.v1.NotebookExecutionJobView view = 6;
   */
  view: NotebookExecutionJobView;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetNotebookExecutionJobRequest.
 * Use `create(GetNotebookExecutionJobRequestSchema)` to create a new message.
 */
export const GetNotebookExecutionJobRequestSchema: GenMessage<GetNotebookExecutionJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 21);

/**
 * Request message for [NotebookService.ListNotebookExecutionJobs]
 *
 * @generated from message google.cloud.aiplatform.v1.ListNotebookExecutionJobsRequest
 */
export type ListNotebookExecutionJobsRequest = Message<"google.cloud.aiplatform.v1.ListNotebookExecutionJobsRequest"> & {
  /**
   * Required. The resource name of the Location from which to list the
   * NotebookExecutionJobs.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. An expression for filtering the results of the request. For field
   * names both snake_case and camelCase are supported.
   *
   *   * `notebookExecutionJob` supports = and !=. `notebookExecutionJob`
   *   represents the NotebookExecutionJob ID.
   *   * `displayName` supports = and != and regex.
   *   * `schedule` supports = and != and regex.
   *
   * Some examples:
   *   * `notebookExecutionJob="123"`
   *   * `notebookExecutionJob="my-execution-job"`
   *   * `displayName="myDisplayName"` and `displayName=~"myDisplayNameRegex"`
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. The standard list page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Optional. The standard list page token.
   * Typically obtained via
   * [ListNotebookExecutionJobs.next_page_token][] of the previous
   * [NotebookService.ListNotebookExecutionJobs][google.cloud.aiplatform.v1.NotebookService.ListNotebookExecutionJobs]
   * call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Optional. A comma-separated list of fields to order by, sorted in ascending
   * order. Use "desc" after a field name for descending. Supported fields:
   *
   *   * `display_name`
   *   * `create_time`
   *   * `update_time`
   *
   * Example: `display_name, create_time desc`.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;

  /**
   * Optional. The NotebookExecutionJob view. Defaults to BASIC.
   *
   * @generated from field: google.cloud.aiplatform.v1.NotebookExecutionJobView view = 6;
   */
  view: NotebookExecutionJobView;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListNotebookExecutionJobsRequest.
 * Use `create(ListNotebookExecutionJobsRequestSchema)` to create a new message.
 */
export const ListNotebookExecutionJobsRequestSchema: GenMessage<ListNotebookExecutionJobsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 22);

/**
 * Response message for [NotebookService.CreateNotebookExecutionJob]
 *
 * @generated from message google.cloud.aiplatform.v1.ListNotebookExecutionJobsResponse
 */
export type ListNotebookExecutionJobsResponse = Message<"google.cloud.aiplatform.v1.ListNotebookExecutionJobsResponse"> & {
  /**
   * List of NotebookExecutionJobs in the requested page.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.NotebookExecutionJob notebook_execution_jobs = 1;
   */
  notebookExecutionJobs: NotebookExecutionJob[];

  /**
   * A token to retrieve next page of results.
   * Pass to [ListNotebookExecutionJobs.page_token][] to obtain that
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListNotebookExecutionJobsResponse.
 * Use `create(ListNotebookExecutionJobsResponseSchema)` to create a new message.
 */
export const ListNotebookExecutionJobsResponseSchema: GenMessage<ListNotebookExecutionJobsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 23);

/**
 * Request message for [NotebookService.DeleteNotebookExecutionJob]
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteNotebookExecutionJobRequest
 */
export type DeleteNotebookExecutionJobRequest = Message<"google.cloud.aiplatform.v1.DeleteNotebookExecutionJobRequest"> & {
  /**
   * Required. The name of the NotebookExecutionJob resource to be deleted.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteNotebookExecutionJobRequest.
 * Use `create(DeleteNotebookExecutionJobRequestSchema)` to create a new message.
 */
export const DeleteNotebookExecutionJobRequestSchema: GenMessage<DeleteNotebookExecutionJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_notebook_service, 24);

/**
 * Views for Get/List NotebookExecutionJob
 *
 * @generated from enum google.cloud.aiplatform.v1.NotebookExecutionJobView
 */
export enum NotebookExecutionJobView {
  /**
   * When unspecified, the API defaults to the BASIC view.
   *
   * @generated from enum value: NOTEBOOK_EXECUTION_JOB_VIEW_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Includes all fields except for direct notebook inputs.
   *
   * @generated from enum value: NOTEBOOK_EXECUTION_JOB_VIEW_BASIC = 1;
   */
  BASIC = 1,

  /**
   * Includes all fields.
   *
   * @generated from enum value: NOTEBOOK_EXECUTION_JOB_VIEW_FULL = 2;
   */
  FULL = 2,
}

/**
 * Describes the enum google.cloud.aiplatform.v1.NotebookExecutionJobView.
 */
export const NotebookExecutionJobViewSchema: GenEnum<NotebookExecutionJobView> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1_notebook_service, 0);

/**
 * The interface for Vertex Notebook service (a.k.a. Colab on Workbench).
 *
 * @generated from service google.cloud.aiplatform.v1.NotebookService
 */
export const NotebookService: GenService<{
  /**
   * Creates a NotebookRuntimeTemplate.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.CreateNotebookRuntimeTemplate
   */
  createNotebookRuntimeTemplate: {
    methodKind: "unary";
    input: typeof CreateNotebookRuntimeTemplateRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a NotebookRuntimeTemplate.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.GetNotebookRuntimeTemplate
   */
  getNotebookRuntimeTemplate: {
    methodKind: "unary";
    input: typeof GetNotebookRuntimeTemplateRequestSchema;
    output: typeof NotebookRuntimeTemplateSchema;
  },
  /**
   * Lists NotebookRuntimeTemplates in a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.ListNotebookRuntimeTemplates
   */
  listNotebookRuntimeTemplates: {
    methodKind: "unary";
    input: typeof ListNotebookRuntimeTemplatesRequestSchema;
    output: typeof ListNotebookRuntimeTemplatesResponseSchema;
  },
  /**
   * Deletes a NotebookRuntimeTemplate.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.DeleteNotebookRuntimeTemplate
   */
  deleteNotebookRuntimeTemplate: {
    methodKind: "unary";
    input: typeof DeleteNotebookRuntimeTemplateRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a NotebookRuntimeTemplate.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.UpdateNotebookRuntimeTemplate
   */
  updateNotebookRuntimeTemplate: {
    methodKind: "unary";
    input: typeof UpdateNotebookRuntimeTemplateRequestSchema;
    output: typeof NotebookRuntimeTemplateSchema;
  },
  /**
   * Assigns a NotebookRuntime to a user for a particular Notebook file. This
   * method will either returns an existing assignment or generates a new one.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.AssignNotebookRuntime
   */
  assignNotebookRuntime: {
    methodKind: "unary";
    input: typeof AssignNotebookRuntimeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a NotebookRuntime.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.GetNotebookRuntime
   */
  getNotebookRuntime: {
    methodKind: "unary";
    input: typeof GetNotebookRuntimeRequestSchema;
    output: typeof NotebookRuntimeSchema;
  },
  /**
   * Lists NotebookRuntimes in a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.ListNotebookRuntimes
   */
  listNotebookRuntimes: {
    methodKind: "unary";
    input: typeof ListNotebookRuntimesRequestSchema;
    output: typeof ListNotebookRuntimesResponseSchema;
  },
  /**
   * Deletes a NotebookRuntime.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.DeleteNotebookRuntime
   */
  deleteNotebookRuntime: {
    methodKind: "unary";
    input: typeof DeleteNotebookRuntimeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Upgrades a NotebookRuntime.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.UpgradeNotebookRuntime
   */
  upgradeNotebookRuntime: {
    methodKind: "unary";
    input: typeof UpgradeNotebookRuntimeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Starts a NotebookRuntime.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.StartNotebookRuntime
   */
  startNotebookRuntime: {
    methodKind: "unary";
    input: typeof StartNotebookRuntimeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a NotebookExecutionJob.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.CreateNotebookExecutionJob
   */
  createNotebookExecutionJob: {
    methodKind: "unary";
    input: typeof CreateNotebookExecutionJobRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a NotebookExecutionJob.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.GetNotebookExecutionJob
   */
  getNotebookExecutionJob: {
    methodKind: "unary";
    input: typeof GetNotebookExecutionJobRequestSchema;
    output: typeof NotebookExecutionJobSchema;
  },
  /**
   * Lists NotebookExecutionJobs in a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.ListNotebookExecutionJobs
   */
  listNotebookExecutionJobs: {
    methodKind: "unary";
    input: typeof ListNotebookExecutionJobsRequestSchema;
    output: typeof ListNotebookExecutionJobsResponseSchema;
  },
  /**
   * Deletes a NotebookExecutionJob.
   *
   * @generated from rpc google.cloud.aiplatform.v1.NotebookService.DeleteNotebookExecutionJob
   */
  deleteNotebookExecutionJob: {
    methodKind: "unary";
    input: typeof DeleteNotebookExecutionJobRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1_notebook_service, 0);

