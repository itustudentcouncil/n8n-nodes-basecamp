// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1/feature_registry_service.proto (package google.cloud.aiplatform.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { FeatureSchema } from "./feature_pb";
import { file_google_cloud_aiplatform_v1_feature } from "./feature_pb";
import type { FeatureGroup, FeatureGroupSchema } from "./feature_group_pb";
import { file_google_cloud_aiplatform_v1_feature_group } from "./feature_group_pb";
import type { CreateFeatureRequestSchema, DeleteFeatureRequestSchema, GetFeatureRequestSchema, ListFeaturesRequestSchema, ListFeaturesResponseSchema, UpdateFeatureRequestSchema } from "./featurestore_service_pb";
import { file_google_cloud_aiplatform_v1_featurestore_service } from "./featurestore_service_pb";
import type { GenericOperationMetadata } from "./operation_pb";
import { file_google_cloud_aiplatform_v1_operation } from "./operation_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1/feature_registry_service.proto.
 */
export const file_google_cloud_aiplatform_v1_feature_registry_service: GenFile = /*@__PURE__*/
  fileDesc("Cjlnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9mZWF0dXJlX3JlZ2lzdHJ5X3NlcnZpY2UucHJvdG8SGmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxIsABChlDcmVhdGVGZWF0dXJlR3JvdXBSZXF1ZXN0Ej4KBnBhcmVudBgBIAEoCUIu4EEC+kEoEiZhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL0ZlYXR1cmVHcm91cBJECg1mZWF0dXJlX2dyb3VwGAIgASgLMiguZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuRmVhdHVyZUdyb3VwQgPgQQISHQoQZmVhdHVyZV9ncm91cF9pZBgDIAEoCUID4EECIlYKFkdldEZlYXR1cmVHcm91cFJlcXVlc3QSPAoEbmFtZRgBIAEoCUIu4EEC+kEoCiZhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL0ZlYXR1cmVHcm91cCKjAQoYTGlzdEZlYXR1cmVHcm91cHNSZXF1ZXN0Ej4KBnBhcmVudBgBIAEoCUIu4EEC+kEoEiZhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL0ZlYXR1cmVHcm91cBIOCgZmaWx0ZXIYAiABKAkSEQoJcGFnZV9zaXplGAMgASgFEhIKCnBhZ2VfdG9rZW4YBCABKAkSEAoIb3JkZXJfYnkYBSABKAkidgoZTGlzdEZlYXR1cmVHcm91cHNSZXNwb25zZRJACg5mZWF0dXJlX2dyb3VwcxgBIAMoCzIoLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkZlYXR1cmVHcm91cBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkikgEKGVVwZGF0ZUZlYXR1cmVHcm91cFJlcXVlc3QSRAoNZmVhdHVyZV9ncm91cBgBIAEoCzIoLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkZlYXR1cmVHcm91cEID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJoChlEZWxldGVGZWF0dXJlR3JvdXBSZXF1ZXN0EjwKBG5hbWUYASABKAlCLuBBAvpBKAomYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9GZWF0dXJlR3JvdXASDQoFZm9yY2UYAiABKAgidQojQ3JlYXRlRmVhdHVyZUdyb3VwT3BlcmF0aW9uTWV0YWRhdGESTgoQZ2VuZXJpY19tZXRhZGF0YRgBIAEoCzI0Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkdlbmVyaWNPcGVyYXRpb25NZXRhZGF0YSJ1CiNVcGRhdGVGZWF0dXJlR3JvdXBPcGVyYXRpb25NZXRhZGF0YRJOChBnZW5lcmljX21ldGFkYXRhGAEgASgLMjQuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuR2VuZXJpY09wZXJhdGlvbk1ldGFkYXRhIngKJkNyZWF0ZVJlZ2lzdHJ5RmVhdHVyZU9wZXJhdGlvbk1ldGFkYXRhEk4KEGdlbmVyaWNfbWV0YWRhdGEYASABKAsyNC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5HZW5lcmljT3BlcmF0aW9uTWV0YWRhdGEicAoeVXBkYXRlRmVhdHVyZU9wZXJhdGlvbk1ldGFkYXRhEk4KEGdlbmVyaWNfbWV0YWRhdGEYASABKAsyNC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5HZW5lcmljT3BlcmF0aW9uTWV0YWRhdGEyxhIKFkZlYXR1cmVSZWdpc3RyeVNlcnZpY2USkwIKEkNyZWF0ZUZlYXR1cmVHcm91cBI1Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkNyZWF0ZUZlYXR1cmVHcm91cFJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIqYBykEzCgxGZWF0dXJlR3JvdXASI0NyZWF0ZUZlYXR1cmVHcm91cE9wZXJhdGlvbk1ldGFkYXRh2kElcGFyZW50LGZlYXR1cmVfZ3JvdXAsZmVhdHVyZV9ncm91cF9pZILT5JMCQjoNZmVhdHVyZV9ncm91cCIxL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vZmVhdHVyZUdyb3VwcxKxAQoPR2V0RmVhdHVyZUdyb3VwEjIuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuR2V0RmVhdHVyZUdyb3VwUmVxdWVzdBooLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkZlYXR1cmVHcm91cCJA2kEEbmFtZYLT5JMCMxIxL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZmVhdHVyZUdyb3Vwcy8qfRLEAQoRTGlzdEZlYXR1cmVHcm91cHMSNC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5MaXN0RmVhdHVyZUdyb3Vwc1JlcXVlc3QaNS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5MaXN0RmVhdHVyZUdyb3Vwc1Jlc3BvbnNlIkLaQQZwYXJlbnSC0+STAjMSMS92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2ZlYXR1cmVHcm91cHMSlQIKElVwZGF0ZUZlYXR1cmVHcm91cBI1Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLlVwZGF0ZUZlYXR1cmVHcm91cFJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIqgBykEzCgxGZWF0dXJlR3JvdXASI1VwZGF0ZUZlYXR1cmVHcm91cE9wZXJhdGlvbk1ldGFkYXRh2kEZZmVhdHVyZV9ncm91cCx1cGRhdGVfbWFza4LT5JMCUDoNZmVhdHVyZV9ncm91cDI/L3YxL3tmZWF0dXJlX2dyb3VwLm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9mZWF0dXJlR3JvdXBzLyp9EuUBChJEZWxldGVGZWF0dXJlR3JvdXASNS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5EZWxldGVGZWF0dXJlR3JvdXBSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJ5ykEwChVnb29nbGUucHJvdG9idWYuRW1wdHkSF0RlbGV0ZU9wZXJhdGlvbk1ldGFkYXRh2kEKbmFtZSxmb3JjZYLT5JMCMyoxL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZmVhdHVyZUdyb3Vwcy8qfRL4AQoNQ3JlYXRlRmVhdHVyZRIwLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkNyZWF0ZUZlYXR1cmVSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKVAcpBKQoHRmVhdHVyZRIeQ3JlYXRlRmVhdHVyZU9wZXJhdGlvbk1ldGFkYXRh2kEZcGFyZW50LGZlYXR1cmUsZmVhdHVyZV9pZILT5JMCRzoHZmVhdHVyZSI8L3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9mZWF0dXJlR3JvdXBzLyp9L2ZlYXR1cmVzEq0BCgpHZXRGZWF0dXJlEi0uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuR2V0RmVhdHVyZVJlcXVlc3QaIy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5GZWF0dXJlIkvaQQRuYW1lgtPkkwI+EjwvdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9mZWF0dXJlR3JvdXBzLyovZmVhdHVyZXMvKn0SwAEKDExpc3RGZWF0dXJlcxIvLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkxpc3RGZWF0dXJlc1JlcXVlc3QaMC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5MaXN0RmVhdHVyZXNSZXNwb25zZSJN2kEGcGFyZW50gtPkkwI+EjwvdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2ZlYXR1cmVHcm91cHMvKn0vZmVhdHVyZXMS+gEKDVVwZGF0ZUZlYXR1cmUSMC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5VcGRhdGVGZWF0dXJlUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24ilwHKQSkKB0ZlYXR1cmUSHlVwZGF0ZUZlYXR1cmVPcGVyYXRpb25NZXRhZGF0YdpBE2ZlYXR1cmUsdXBkYXRlX21hc2uC0+STAk86B2ZlYXR1cmUyRC92MS97ZmVhdHVyZS5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZmVhdHVyZUdyb3Vwcy8qL2ZlYXR1cmVzLyp9EuABCg1EZWxldGVGZWF0dXJlEjAuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuRGVsZXRlRmVhdHVyZVJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIn7KQTAKFWdvb2dsZS5wcm90b2J1Zi5FbXB0eRIXRGVsZXRlT3BlcmF0aW9uTWV0YWRhdGHaQQRuYW1lgtPkkwI+KjwvdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9mZWF0dXJlR3JvdXBzLyovZmVhdHVyZXMvKn0aTcpBGWFpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb23SQS5odHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtQtkBCh5jb20uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFCG0ZlYXR1cmVSZWdpc3RyeVNlcnZpY2VQcm90b1ABWj5jbG91ZC5nb29nbGUuY29tL2dvL2FpcGxhdGZvcm0vYXBpdjEvYWlwbGF0Zm9ybXBiO2FpcGxhdGZvcm1wYqoCGkdvb2dsZS5DbG91ZC5BSVBsYXRmb3JtLlYxygIaR29vZ2xlXENsb3VkXEFJUGxhdGZvcm1cVjHqAh1Hb29nbGU6OkNsb3VkOjpBSVBsYXRmb3JtOjpWMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1_feature, file_google_cloud_aiplatform_v1_feature_group, file_google_cloud_aiplatform_v1_featurestore_service, file_google_cloud_aiplatform_v1_operation, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Request message for
 * [FeatureRegistryService.CreateFeatureGroup][google.cloud.aiplatform.v1.FeatureRegistryService.CreateFeatureGroup].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateFeatureGroupRequest
 */
export type CreateFeatureGroupRequest = Message<"google.cloud.aiplatform.v1.CreateFeatureGroupRequest"> & {
  /**
   * Required. The resource name of the Location to create FeatureGroups.
   * Format:
   * `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The FeatureGroup to create.
   *
   * @generated from field: google.cloud.aiplatform.v1.FeatureGroup feature_group = 2;
   */
  featureGroup?: FeatureGroup;

  /**
   * Required. The ID to use for this FeatureGroup, which will become the final
   * component of the FeatureGroup's resource name.
   *
   * This value may be up to 60 characters, and valid characters are
   * `[a-z0-9_]`. The first character cannot be a number.
   *
   * The value must be unique within the project and location.
   *
   * @generated from field: string feature_group_id = 3;
   */
  featureGroupId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateFeatureGroupRequest.
 * Use `create(CreateFeatureGroupRequestSchema)` to create a new message.
 */
export const CreateFeatureGroupRequestSchema: GenMessage<CreateFeatureGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 0);

/**
 * Request message for
 * [FeatureRegistryService.GetFeatureGroup][google.cloud.aiplatform.v1.FeatureRegistryService.GetFeatureGroup].
 *
 * @generated from message google.cloud.aiplatform.v1.GetFeatureGroupRequest
 */
export type GetFeatureGroupRequest = Message<"google.cloud.aiplatform.v1.GetFeatureGroupRequest"> & {
  /**
   * Required. The name of the FeatureGroup resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetFeatureGroupRequest.
 * Use `create(GetFeatureGroupRequestSchema)` to create a new message.
 */
export const GetFeatureGroupRequestSchema: GenMessage<GetFeatureGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 1);

/**
 * Request message for
 * [FeatureRegistryService.ListFeatureGroups][google.cloud.aiplatform.v1.FeatureRegistryService.ListFeatureGroups].
 *
 * @generated from message google.cloud.aiplatform.v1.ListFeatureGroupsRequest
 */
export type ListFeatureGroupsRequest = Message<"google.cloud.aiplatform.v1.ListFeatureGroupsRequest"> & {
  /**
   * Required. The resource name of the Location to list FeatureGroups.
   * Format:
   * `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Lists the FeatureGroups that match the filter expression. The
   * following fields are supported:
   *
   * * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
   * Values must be
   *   in RFC 3339 format.
   * * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
   * Values must be
   *   in RFC 3339 format.
   * * `labels`: Supports key-value equality and key presence.
   *
   * Examples:
   *
   * * `create_time > "2020-01-01" OR update_time > "2020-01-01"`
   *    FeatureGroups created or updated after 2020-01-01.
   * * `labels.env = "prod"`
   *    FeatureGroups with label "env" set to "prod".
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of FeatureGroups to return. The service may return
   * fewer than this value. If unspecified, at most 100 FeatureGroups will
   * be returned. The maximum value is 100; any value greater than 100 will be
   * coerced to 100.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [FeatureGroupAdminService.ListFeatureGroups][] call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [FeatureGroupAdminService.ListFeatureGroups][] must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * A comma-separated list of fields to order by, sorted in ascending order.
   * Use "desc" after a field name for descending.
   * Supported Fields:
   *
   *   * `create_time`
   *   * `update_time`
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListFeatureGroupsRequest.
 * Use `create(ListFeatureGroupsRequestSchema)` to create a new message.
 */
export const ListFeatureGroupsRequestSchema: GenMessage<ListFeatureGroupsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 2);

/**
 * Response message for
 * [FeatureRegistryService.ListFeatureGroups][google.cloud.aiplatform.v1.FeatureRegistryService.ListFeatureGroups].
 *
 * @generated from message google.cloud.aiplatform.v1.ListFeatureGroupsResponse
 */
export type ListFeatureGroupsResponse = Message<"google.cloud.aiplatform.v1.ListFeatureGroupsResponse"> & {
  /**
   * The FeatureGroups matching the request.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.FeatureGroup feature_groups = 1;
   */
  featureGroups: FeatureGroup[];

  /**
   * A token, which can be sent as
   * [ListFeatureGroupsRequest.page_token][google.cloud.aiplatform.v1.ListFeatureGroupsRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListFeatureGroupsResponse.
 * Use `create(ListFeatureGroupsResponseSchema)` to create a new message.
 */
export const ListFeatureGroupsResponseSchema: GenMessage<ListFeatureGroupsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 3);

/**
 * Request message for
 * [FeatureRegistryService.UpdateFeatureGroup][google.cloud.aiplatform.v1.FeatureRegistryService.UpdateFeatureGroup].
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateFeatureGroupRequest
 */
export type UpdateFeatureGroupRequest = Message<"google.cloud.aiplatform.v1.UpdateFeatureGroupRequest"> & {
  /**
   * Required. The FeatureGroup's `name` field is used to identify the
   * FeatureGroup to be updated. Format:
   * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
   *
   * @generated from field: google.cloud.aiplatform.v1.FeatureGroup feature_group = 1;
   */
  featureGroup?: FeatureGroup;

  /**
   * Field mask is used to specify the fields to be overwritten in the
   * FeatureGroup resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then only the non-empty fields present in the
   * request will be overwritten. Set the update_mask to `*` to override all
   * fields.
   *
   * Updatable fields:
   *
   *   * `labels`
   *   * `description`
   *   * `big_query`
   *   * `big_query.entity_id_columns`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateFeatureGroupRequest.
 * Use `create(UpdateFeatureGroupRequestSchema)` to create a new message.
 */
export const UpdateFeatureGroupRequestSchema: GenMessage<UpdateFeatureGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 4);

/**
 * Request message for
 * [FeatureRegistryService.DeleteFeatureGroup][google.cloud.aiplatform.v1.FeatureRegistryService.DeleteFeatureGroup].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteFeatureGroupRequest
 */
export type DeleteFeatureGroupRequest = Message<"google.cloud.aiplatform.v1.DeleteFeatureGroupRequest"> & {
  /**
   * Required. The name of the FeatureGroup to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If set to true, any Features under this FeatureGroup
   * will also be deleted. (Otherwise, the request will only work if the
   * FeatureGroup has no Features.)
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteFeatureGroupRequest.
 * Use `create(DeleteFeatureGroupRequestSchema)` to create a new message.
 */
export const DeleteFeatureGroupRequestSchema: GenMessage<DeleteFeatureGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 5);

/**
 * Details of operations that perform create FeatureGroup.
 *
 * @generated from message google.cloud.aiplatform.v1.CreateFeatureGroupOperationMetadata
 */
export type CreateFeatureGroupOperationMetadata = Message<"google.cloud.aiplatform.v1.CreateFeatureGroupOperationMetadata"> & {
  /**
   * Operation metadata for FeatureGroup.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateFeatureGroupOperationMetadata.
 * Use `create(CreateFeatureGroupOperationMetadataSchema)` to create a new message.
 */
export const CreateFeatureGroupOperationMetadataSchema: GenMessage<CreateFeatureGroupOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 6);

/**
 * Details of operations that perform update FeatureGroup.
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateFeatureGroupOperationMetadata
 */
export type UpdateFeatureGroupOperationMetadata = Message<"google.cloud.aiplatform.v1.UpdateFeatureGroupOperationMetadata"> & {
  /**
   * Operation metadata for FeatureGroup.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateFeatureGroupOperationMetadata.
 * Use `create(UpdateFeatureGroupOperationMetadataSchema)` to create a new message.
 */
export const UpdateFeatureGroupOperationMetadataSchema: GenMessage<UpdateFeatureGroupOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 7);

/**
 * Details of operations that perform create FeatureGroup.
 *
 * @generated from message google.cloud.aiplatform.v1.CreateRegistryFeatureOperationMetadata
 */
export type CreateRegistryFeatureOperationMetadata = Message<"google.cloud.aiplatform.v1.CreateRegistryFeatureOperationMetadata"> & {
  /**
   * Operation metadata for Feature.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateRegistryFeatureOperationMetadata.
 * Use `create(CreateRegistryFeatureOperationMetadataSchema)` to create a new message.
 */
export const CreateRegistryFeatureOperationMetadataSchema: GenMessage<CreateRegistryFeatureOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 8);

/**
 * Details of operations that perform update Feature.
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateFeatureOperationMetadata
 */
export type UpdateFeatureOperationMetadata = Message<"google.cloud.aiplatform.v1.UpdateFeatureOperationMetadata"> & {
  /**
   * Operation metadata for Feature Update.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateFeatureOperationMetadata.
 * Use `create(UpdateFeatureOperationMetadataSchema)` to create a new message.
 */
export const UpdateFeatureOperationMetadataSchema: GenMessage<UpdateFeatureOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 9);

/**
 * The service that handles CRUD and List for resources for
 * FeatureRegistry.
 *
 * @generated from service google.cloud.aiplatform.v1.FeatureRegistryService
 */
export const FeatureRegistryService: GenService<{
  /**
   * Creates a new FeatureGroup in a given project and location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureRegistryService.CreateFeatureGroup
   */
  createFeatureGroup: {
    methodKind: "unary";
    input: typeof CreateFeatureGroupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details of a single FeatureGroup.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureRegistryService.GetFeatureGroup
   */
  getFeatureGroup: {
    methodKind: "unary";
    input: typeof GetFeatureGroupRequestSchema;
    output: typeof FeatureGroupSchema;
  },
  /**
   * Lists FeatureGroups in a given project and location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureRegistryService.ListFeatureGroups
   */
  listFeatureGroups: {
    methodKind: "unary";
    input: typeof ListFeatureGroupsRequestSchema;
    output: typeof ListFeatureGroupsResponseSchema;
  },
  /**
   * Updates the parameters of a single FeatureGroup.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureRegistryService.UpdateFeatureGroup
   */
  updateFeatureGroup: {
    methodKind: "unary";
    input: typeof UpdateFeatureGroupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single FeatureGroup.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureRegistryService.DeleteFeatureGroup
   */
  deleteFeatureGroup: {
    methodKind: "unary";
    input: typeof DeleteFeatureGroupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a new Feature in a given FeatureGroup.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureRegistryService.CreateFeature
   */
  createFeature: {
    methodKind: "unary";
    input: typeof CreateFeatureRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details of a single Feature.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureRegistryService.GetFeature
   */
  getFeature: {
    methodKind: "unary";
    input: typeof GetFeatureRequestSchema;
    output: typeof FeatureSchema;
  },
  /**
   * Lists Features in a given FeatureGroup.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureRegistryService.ListFeatures
   */
  listFeatures: {
    methodKind: "unary";
    input: typeof ListFeaturesRequestSchema;
    output: typeof ListFeaturesResponseSchema;
  },
  /**
   * Updates the parameters of a single Feature.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureRegistryService.UpdateFeature
   */
  updateFeature: {
    methodKind: "unary";
    input: typeof UpdateFeatureRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Feature.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeatureRegistryService.DeleteFeature
   */
  deleteFeature: {
    methodKind: "unary";
    input: typeof DeleteFeatureRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1_feature_registry_service, 0);

