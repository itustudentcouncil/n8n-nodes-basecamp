// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1/featurestore_service.proto (package google.cloud.aiplatform.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EntityType, EntityTypeSchema } from "./entity_type_pb";
import { file_google_cloud_aiplatform_v1_entity_type } from "./entity_type_pb";
import type { Feature, FeatureSchema } from "./feature_pb";
import { file_google_cloud_aiplatform_v1_feature } from "./feature_pb";
import type { FeatureSelector } from "./feature_selector_pb";
import { file_google_cloud_aiplatform_v1_feature_selector } from "./feature_selector_pb";
import type { Featurestore, FeaturestoreSchema } from "./featurestore_pb";
import { file_google_cloud_aiplatform_v1_featurestore } from "./featurestore_pb";
import type { AvroSource, BigQueryDestination, BigQuerySource, CsvDestination, CsvSource, TFRecordDestination } from "./io_pb";
import { file_google_cloud_aiplatform_v1_io } from "./io_pb";
import type { GenericOperationMetadata } from "./operation_pb";
import { file_google_cloud_aiplatform_v1_operation } from "./operation_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Interval } from "../../../type/interval_pb";
import { file_google_type_interval } from "../../../type/interval_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1/featurestore_service.proto.
 */
export const file_google_cloud_aiplatform_v1_featurestore_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1_entity_type, file_google_cloud_aiplatform_v1_feature, file_google_cloud_aiplatform_v1_feature_selector, file_google_cloud_aiplatform_v1_featurestore, file_google_cloud_aiplatform_v1_io, file_google_cloud_aiplatform_v1_operation, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_type_interval]);

/**
 * Request message for
 * [FeaturestoreService.CreateFeaturestore][google.cloud.aiplatform.v1.FeaturestoreService.CreateFeaturestore].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateFeaturestoreRequest
 */
export type CreateFeaturestoreRequest = Message<"google.cloud.aiplatform.v1.CreateFeaturestoreRequest"> & {
  /**
   * Required. The resource name of the Location to create Featurestores.
   * Format:
   * `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The Featurestore to create.
   *
   * @generated from field: google.cloud.aiplatform.v1.Featurestore featurestore = 2;
   */
  featurestore?: Featurestore;

  /**
   * Required. The ID to use for this Featurestore, which will become the final
   * component of the Featurestore's resource name.
   *
   * This value may be up to 60 characters, and valid characters are
   * `[a-z0-9_]`. The first character cannot be a number.
   *
   * The value must be unique within the project and location.
   *
   * @generated from field: string featurestore_id = 3;
   */
  featurestoreId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateFeaturestoreRequest.
 * Use `create(CreateFeaturestoreRequestSchema)` to create a new message.
 */
export const CreateFeaturestoreRequestSchema: GenMessage<CreateFeaturestoreRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 0);

/**
 * Request message for
 * [FeaturestoreService.GetFeaturestore][google.cloud.aiplatform.v1.FeaturestoreService.GetFeaturestore].
 *
 * @generated from message google.cloud.aiplatform.v1.GetFeaturestoreRequest
 */
export type GetFeaturestoreRequest = Message<"google.cloud.aiplatform.v1.GetFeaturestoreRequest"> & {
  /**
   * Required. The name of the Featurestore resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetFeaturestoreRequest.
 * Use `create(GetFeaturestoreRequestSchema)` to create a new message.
 */
export const GetFeaturestoreRequestSchema: GenMessage<GetFeaturestoreRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 1);

/**
 * Request message for
 * [FeaturestoreService.ListFeaturestores][google.cloud.aiplatform.v1.FeaturestoreService.ListFeaturestores].
 *
 * @generated from message google.cloud.aiplatform.v1.ListFeaturestoresRequest
 */
export type ListFeaturestoresRequest = Message<"google.cloud.aiplatform.v1.ListFeaturestoresRequest"> & {
  /**
   * Required. The resource name of the Location to list Featurestores.
   * Format:
   * `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Lists the featurestores that match the filter expression. The following
   * fields are supported:
   *
   * * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
   * Values must be
   *   in RFC 3339 format.
   * * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
   * Values must be
   *   in RFC 3339 format.
   * * `online_serving_config.fixed_node_count`: Supports `=`, `!=`, `<`, `>`,
   * `<=`, and `>=` comparisons.
   * * `labels`: Supports key-value equality and key presence.
   *
   * Examples:
   *
   * * `create_time > "2020-01-01" OR update_time > "2020-01-01"`
   *    Featurestores created or updated after 2020-01-01.
   * * `labels.env = "prod"`
   *    Featurestores with label "env" set to "prod".
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of Featurestores to return. The service may return fewer
   * than this value. If unspecified, at most 100 Featurestores will be
   * returned. The maximum value is 100; any value greater than 100 will be
   * coerced to 100.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [FeaturestoreService.ListFeaturestores][google.cloud.aiplatform.v1.FeaturestoreService.ListFeaturestores]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [FeaturestoreService.ListFeaturestores][google.cloud.aiplatform.v1.FeaturestoreService.ListFeaturestores]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * A comma-separated list of fields to order by, sorted in ascending order.
   * Use "desc" after a field name for descending.
   * Supported Fields:
   *
   *   * `create_time`
   *   * `update_time`
   *   * `online_serving_config.fixed_node_count`
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 6;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListFeaturestoresRequest.
 * Use `create(ListFeaturestoresRequestSchema)` to create a new message.
 */
export const ListFeaturestoresRequestSchema: GenMessage<ListFeaturestoresRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 2);

/**
 * Response message for
 * [FeaturestoreService.ListFeaturestores][google.cloud.aiplatform.v1.FeaturestoreService.ListFeaturestores].
 *
 * @generated from message google.cloud.aiplatform.v1.ListFeaturestoresResponse
 */
export type ListFeaturestoresResponse = Message<"google.cloud.aiplatform.v1.ListFeaturestoresResponse"> & {
  /**
   * The Featurestores matching the request.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.Featurestore featurestores = 1;
   */
  featurestores: Featurestore[];

  /**
   * A token, which can be sent as
   * [ListFeaturestoresRequest.page_token][google.cloud.aiplatform.v1.ListFeaturestoresRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListFeaturestoresResponse.
 * Use `create(ListFeaturestoresResponseSchema)` to create a new message.
 */
export const ListFeaturestoresResponseSchema: GenMessage<ListFeaturestoresResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 3);

/**
 * Request message for
 * [FeaturestoreService.UpdateFeaturestore][google.cloud.aiplatform.v1.FeaturestoreService.UpdateFeaturestore].
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateFeaturestoreRequest
 */
export type UpdateFeaturestoreRequest = Message<"google.cloud.aiplatform.v1.UpdateFeaturestoreRequest"> & {
  /**
   * Required. The Featurestore's `name` field is used to identify the
   * Featurestore to be updated. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}`
   *
   * @generated from field: google.cloud.aiplatform.v1.Featurestore featurestore = 1;
   */
  featurestore?: Featurestore;

  /**
   * Field mask is used to specify the fields to be overwritten in the
   * Featurestore resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then only the non-empty fields present in the
   * request will be overwritten. Set the update_mask to `*` to override all
   * fields.
   *
   * Updatable fields:
   *
   *   * `labels`
   *   * `online_serving_config.fixed_node_count`
   *   * `online_serving_config.scaling`
   *   * `online_storage_ttl_days`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateFeaturestoreRequest.
 * Use `create(UpdateFeaturestoreRequestSchema)` to create a new message.
 */
export const UpdateFeaturestoreRequestSchema: GenMessage<UpdateFeaturestoreRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 4);

/**
 * Request message for
 * [FeaturestoreService.DeleteFeaturestore][google.cloud.aiplatform.v1.FeaturestoreService.DeleteFeaturestore].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteFeaturestoreRequest
 */
export type DeleteFeaturestoreRequest = Message<"google.cloud.aiplatform.v1.DeleteFeaturestoreRequest"> & {
  /**
   * Required. The name of the Featurestore to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If set to true, any EntityTypes and Features for this Featurestore will
   * also be deleted. (Otherwise, the request will only work if the Featurestore
   * has no EntityTypes.)
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteFeaturestoreRequest.
 * Use `create(DeleteFeaturestoreRequestSchema)` to create a new message.
 */
export const DeleteFeaturestoreRequestSchema: GenMessage<DeleteFeaturestoreRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 5);

/**
 * Request message for
 * [FeaturestoreService.ImportFeatureValues][google.cloud.aiplatform.v1.FeaturestoreService.ImportFeatureValues].
 *
 * @generated from message google.cloud.aiplatform.v1.ImportFeatureValuesRequest
 */
export type ImportFeatureValuesRequest = Message<"google.cloud.aiplatform.v1.ImportFeatureValuesRequest"> & {
  /**
   * Details about the source data, including the location of the storage and
   * the format.
   *
   * @generated from oneof google.cloud.aiplatform.v1.ImportFeatureValuesRequest.source
   */
  source: {
    /**
     * @generated from field: google.cloud.aiplatform.v1.AvroSource avro_source = 2;
     */
    value: AvroSource;
    case: "avroSource";
  } | {
    /**
     * @generated from field: google.cloud.aiplatform.v1.BigQuerySource bigquery_source = 3;
     */
    value: BigQuerySource;
    case: "bigquerySource";
  } | {
    /**
     * @generated from field: google.cloud.aiplatform.v1.CsvSource csv_source = 4;
     */
    value: CsvSource;
    case: "csvSource";
  } | { case: undefined; value?: undefined };

  /**
   * Source of Feature timestamp for all Feature values of each entity.
   * Timestamps must be millisecond-aligned.
   *
   * @generated from oneof google.cloud.aiplatform.v1.ImportFeatureValuesRequest.feature_time_source
   */
  featureTimeSource: {
    /**
     * Source column that holds the Feature timestamp for all Feature
     * values in each entity.
     *
     * @generated from field: string feature_time_field = 6;
     */
    value: string;
    case: "featureTimeField";
  } | {
    /**
     * Single Feature timestamp for all entities being imported. The
     * timestamp must not have higher than millisecond precision.
     *
     * @generated from field: google.protobuf.Timestamp feature_time = 7;
     */
    value: Timestamp;
    case: "featureTime";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the EntityType grouping the Features for
   * which values are being imported. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
   *
   * @generated from field: string entity_type = 1;
   */
  entityType: string;

  /**
   * Source column that holds entity IDs. If not provided, entity IDs are
   * extracted from the column named entity_id.
   *
   * @generated from field: string entity_id_field = 5;
   */
  entityIdField: string;

  /**
   * Required. Specifications defining which Feature values to import from the
   * entity. The request fails if no feature_specs are provided, and having
   * multiple feature_specs for one Feature is not allowed.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.ImportFeatureValuesRequest.FeatureSpec feature_specs = 8;
   */
  featureSpecs: ImportFeatureValuesRequest_FeatureSpec[];

  /**
   * If set, data will not be imported for online serving. This
   * is typically used for backfilling, where Feature generation timestamps are
   * not in the timestamp range needed for online serving.
   *
   * @generated from field: bool disable_online_serving = 9;
   */
  disableOnlineServing: boolean;

  /**
   * Specifies the number of workers that are used to write data to the
   * Featurestore. Consider the online serving capacity that you require to
   * achieve the desired import throughput without interfering with online
   * serving. The value must be positive, and less than or equal to 100.
   * If not set, defaults to using 1 worker. The low count ensures minimal
   * impact on online serving performance.
   *
   * @generated from field: int32 worker_count = 11;
   */
  workerCount: number;

  /**
   * If true, API doesn't start ingestion analysis pipeline.
   *
   * @generated from field: bool disable_ingestion_analysis = 12;
   */
  disableIngestionAnalysis: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ImportFeatureValuesRequest.
 * Use `create(ImportFeatureValuesRequestSchema)` to create a new message.
 */
export const ImportFeatureValuesRequestSchema: GenMessage<ImportFeatureValuesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 6);

/**
 * Defines the Feature value(s) to import.
 *
 * @generated from message google.cloud.aiplatform.v1.ImportFeatureValuesRequest.FeatureSpec
 */
export type ImportFeatureValuesRequest_FeatureSpec = Message<"google.cloud.aiplatform.v1.ImportFeatureValuesRequest.FeatureSpec"> & {
  /**
   * Required. ID of the Feature to import values of. This Feature must exist
   * in the target EntityType, or the request will fail.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Source column to get the Feature values from. If not set, uses the column
   * with the same name as the Feature ID.
   *
   * @generated from field: string source_field = 2;
   */
  sourceField: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ImportFeatureValuesRequest.FeatureSpec.
 * Use `create(ImportFeatureValuesRequest_FeatureSpecSchema)` to create a new message.
 */
export const ImportFeatureValuesRequest_FeatureSpecSchema: GenMessage<ImportFeatureValuesRequest_FeatureSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 6, 0);

/**
 * Response message for
 * [FeaturestoreService.ImportFeatureValues][google.cloud.aiplatform.v1.FeaturestoreService.ImportFeatureValues].
 *
 * @generated from message google.cloud.aiplatform.v1.ImportFeatureValuesResponse
 */
export type ImportFeatureValuesResponse = Message<"google.cloud.aiplatform.v1.ImportFeatureValuesResponse"> & {
  /**
   * Number of entities that have been imported by the operation.
   *
   * @generated from field: int64 imported_entity_count = 1;
   */
  importedEntityCount: bigint;

  /**
   * Number of Feature values that have been imported by the operation.
   *
   * @generated from field: int64 imported_feature_value_count = 2;
   */
  importedFeatureValueCount: bigint;

  /**
   * The number of rows in input source that weren't imported due to either
   * * Not having any featureValues.
   * * Having a null entityId.
   * * Having a null timestamp.
   * * Not being parsable (applicable for CSV sources).
   *
   * @generated from field: int64 invalid_row_count = 6;
   */
  invalidRowCount: bigint;

  /**
   * The number rows that weren't ingested due to having feature timestamps
   * outside the retention boundary.
   *
   * @generated from field: int64 timestamp_outside_retention_rows_count = 4;
   */
  timestampOutsideRetentionRowsCount: bigint;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ImportFeatureValuesResponse.
 * Use `create(ImportFeatureValuesResponseSchema)` to create a new message.
 */
export const ImportFeatureValuesResponseSchema: GenMessage<ImportFeatureValuesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 7);

/**
 * Request message for
 * [FeaturestoreService.BatchReadFeatureValues][google.cloud.aiplatform.v1.FeaturestoreService.BatchReadFeatureValues].
 *
 * @generated from message google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest
 */
export type BatchReadFeatureValuesRequest = Message<"google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest.read_option
   */
  readOption: {
    /**
     * Each read instance consists of exactly one read timestamp and one or more
     * entity IDs identifying entities of the corresponding EntityTypes whose
     * Features are requested.
     *
     * Each output instance contains Feature values of requested entities
     * concatenated together as of the read time.
     *
     * An example read instance may be `foo_entity_id, bar_entity_id,
     * 2020-01-01T10:00:00.123Z`.
     *
     * An example output instance may be `foo_entity_id, bar_entity_id,
     * 2020-01-01T10:00:00.123Z, foo_entity_feature1_value,
     * bar_entity_feature2_value`.
     *
     * Timestamp in each read instance must be millisecond-aligned.
     *
     * `csv_read_instances` are read instances stored in a plain-text CSV file.
     * The header should be:
     *     [ENTITY_TYPE_ID1], [ENTITY_TYPE_ID2], ..., timestamp
     *
     * The columns can be in any order.
     *
     * Values in the timestamp column must use the RFC 3339 format, e.g.
     * `2012-07-30T10:43:17.123Z`.
     *
     * @generated from field: google.cloud.aiplatform.v1.CsvSource csv_read_instances = 3;
     */
    value: CsvSource;
    case: "csvReadInstances";
  } | {
    /**
     * Similar to csv_read_instances, but from BigQuery source.
     *
     * @generated from field: google.cloud.aiplatform.v1.BigQuerySource bigquery_read_instances = 5;
     */
    value: BigQuerySource;
    case: "bigqueryReadInstances";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the Featurestore from which to query Feature
   * values. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}`
   *
   * @generated from field: string featurestore = 1;
   */
  featurestore: string;

  /**
   * Required. Specifies output location and format.
   *
   * @generated from field: google.cloud.aiplatform.v1.FeatureValueDestination destination = 4;
   */
  destination?: FeatureValueDestination;

  /**
   * When not empty, the specified fields in the *_read_instances source will be
   * joined as-is in the output, in addition to those fields from the
   * Featurestore Entity.
   *
   * For BigQuery source, the type of the pass-through values will be
   * automatically inferred. For CSV source, the pass-through values will be
   * passed as opaque bytes.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest.PassThroughField pass_through_fields = 8;
   */
  passThroughFields: BatchReadFeatureValuesRequest_PassThroughField[];

  /**
   * Required. Specifies EntityType grouping Features to read values of and
   * settings.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest.EntityTypeSpec entity_type_specs = 7;
   */
  entityTypeSpecs: BatchReadFeatureValuesRequest_EntityTypeSpec[];

  /**
   * Optional. Excludes Feature values with feature generation timestamp before
   * this timestamp. If not set, retrieve oldest values kept in Feature Store.
   * Timestamp, if present, must not have higher than millisecond precision.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 11;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest.
 * Use `create(BatchReadFeatureValuesRequestSchema)` to create a new message.
 */
export const BatchReadFeatureValuesRequestSchema: GenMessage<BatchReadFeatureValuesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 8);

/**
 * Describe pass-through fields in read_instance source.
 *
 * @generated from message google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest.PassThroughField
 */
export type BatchReadFeatureValuesRequest_PassThroughField = Message<"google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest.PassThroughField"> & {
  /**
   * Required. The name of the field in the CSV header or the name of the
   * column in BigQuery table. The naming restriction is the same as
   * [Feature.name][google.cloud.aiplatform.v1.Feature.name].
   *
   * @generated from field: string field_name = 1;
   */
  fieldName: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest.PassThroughField.
 * Use `create(BatchReadFeatureValuesRequest_PassThroughFieldSchema)` to create a new message.
 */
export const BatchReadFeatureValuesRequest_PassThroughFieldSchema: GenMessage<BatchReadFeatureValuesRequest_PassThroughField> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 8, 0);

/**
 * Selects Features of an EntityType to read values of and specifies read
 * settings.
 *
 * @generated from message google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest.EntityTypeSpec
 */
export type BatchReadFeatureValuesRequest_EntityTypeSpec = Message<"google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest.EntityTypeSpec"> & {
  /**
   * Required. ID of the EntityType to select Features. The EntityType id is
   * the
   * [entity_type_id][google.cloud.aiplatform.v1.CreateEntityTypeRequest.entity_type_id]
   * specified during EntityType creation.
   *
   * @generated from field: string entity_type_id = 1;
   */
  entityTypeId: string;

  /**
   * Required. Selectors choosing which Feature values to read from the
   * EntityType.
   *
   * @generated from field: google.cloud.aiplatform.v1.FeatureSelector feature_selector = 2;
   */
  featureSelector?: FeatureSelector;

  /**
   * Per-Feature settings for the batch read.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.DestinationFeatureSetting settings = 3;
   */
  settings: DestinationFeatureSetting[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchReadFeatureValuesRequest.EntityTypeSpec.
 * Use `create(BatchReadFeatureValuesRequest_EntityTypeSpecSchema)` to create a new message.
 */
export const BatchReadFeatureValuesRequest_EntityTypeSpecSchema: GenMessage<BatchReadFeatureValuesRequest_EntityTypeSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 8, 1);

/**
 * Request message for
 * [FeaturestoreService.ExportFeatureValues][google.cloud.aiplatform.v1.FeaturestoreService.ExportFeatureValues].
 *
 * @generated from message google.cloud.aiplatform.v1.ExportFeatureValuesRequest
 */
export type ExportFeatureValuesRequest = Message<"google.cloud.aiplatform.v1.ExportFeatureValuesRequest"> & {
  /**
   * Required. The mode in which Feature values are exported.
   *
   * @generated from oneof google.cloud.aiplatform.v1.ExportFeatureValuesRequest.mode
   */
  mode: {
    /**
     * Exports the latest Feature values of all entities of the EntityType
     * within a time range.
     *
     * @generated from field: google.cloud.aiplatform.v1.ExportFeatureValuesRequest.SnapshotExport snapshot_export = 3;
     */
    value: ExportFeatureValuesRequest_SnapshotExport;
    case: "snapshotExport";
  } | {
    /**
     * Exports all historical values of all entities of the EntityType within a
     * time range
     *
     * @generated from field: google.cloud.aiplatform.v1.ExportFeatureValuesRequest.FullExport full_export = 7;
     */
    value: ExportFeatureValuesRequest_FullExport;
    case: "fullExport";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the EntityType from which to export Feature
   * values. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
   *
   * @generated from field: string entity_type = 1;
   */
  entityType: string;

  /**
   * Required. Specifies destination location and format.
   *
   * @generated from field: google.cloud.aiplatform.v1.FeatureValueDestination destination = 4;
   */
  destination?: FeatureValueDestination;

  /**
   * Required. Selects Features to export values of.
   *
   * @generated from field: google.cloud.aiplatform.v1.FeatureSelector feature_selector = 5;
   */
  featureSelector?: FeatureSelector;

  /**
   * Per-Feature export settings.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.DestinationFeatureSetting settings = 6;
   */
  settings: DestinationFeatureSetting[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExportFeatureValuesRequest.
 * Use `create(ExportFeatureValuesRequestSchema)` to create a new message.
 */
export const ExportFeatureValuesRequestSchema: GenMessage<ExportFeatureValuesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 9);

/**
 * Describes exporting the latest Feature values of all entities of the
 * EntityType between [start_time, snapshot_time].
 *
 * @generated from message google.cloud.aiplatform.v1.ExportFeatureValuesRequest.SnapshotExport
 */
export type ExportFeatureValuesRequest_SnapshotExport = Message<"google.cloud.aiplatform.v1.ExportFeatureValuesRequest.SnapshotExport"> & {
  /**
   * Exports Feature values as of this timestamp. If not set,
   * retrieve values as of now. Timestamp, if present, must not have higher
   * than millisecond precision.
   *
   * @generated from field: google.protobuf.Timestamp snapshot_time = 1;
   */
  snapshotTime?: Timestamp;

  /**
   * Excludes Feature values with feature generation timestamp before this
   * timestamp. If not set, retrieve oldest values kept in Feature Store.
   * Timestamp, if present, must not have higher than millisecond precision.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExportFeatureValuesRequest.SnapshotExport.
 * Use `create(ExportFeatureValuesRequest_SnapshotExportSchema)` to create a new message.
 */
export const ExportFeatureValuesRequest_SnapshotExportSchema: GenMessage<ExportFeatureValuesRequest_SnapshotExport> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 9, 0);

/**
 * Describes exporting all historical Feature values of all entities of the
 * EntityType between [start_time, end_time].
 *
 * @generated from message google.cloud.aiplatform.v1.ExportFeatureValuesRequest.FullExport
 */
export type ExportFeatureValuesRequest_FullExport = Message<"google.cloud.aiplatform.v1.ExportFeatureValuesRequest.FullExport"> & {
  /**
   * Excludes Feature values with feature generation timestamp before this
   * timestamp. If not set, retrieve oldest values kept in Feature Store.
   * Timestamp, if present, must not have higher than millisecond precision.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * Exports Feature values as of this timestamp. If not set,
   * retrieve values as of now. Timestamp, if present, must not have higher
   * than millisecond precision.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 1;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExportFeatureValuesRequest.FullExport.
 * Use `create(ExportFeatureValuesRequest_FullExportSchema)` to create a new message.
 */
export const ExportFeatureValuesRequest_FullExportSchema: GenMessage<ExportFeatureValuesRequest_FullExport> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 9, 1);

/**
 * @generated from message google.cloud.aiplatform.v1.DestinationFeatureSetting
 */
export type DestinationFeatureSetting = Message<"google.cloud.aiplatform.v1.DestinationFeatureSetting"> & {
  /**
   * Required. The ID of the Feature to apply the setting to.
   *
   * @generated from field: string feature_id = 1;
   */
  featureId: string;

  /**
   * Specify the field name in the export destination. If not specified,
   * Feature ID is used.
   *
   * @generated from field: string destination_field = 2;
   */
  destinationField: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DestinationFeatureSetting.
 * Use `create(DestinationFeatureSettingSchema)` to create a new message.
 */
export const DestinationFeatureSettingSchema: GenMessage<DestinationFeatureSetting> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 10);

/**
 * A destination location for Feature values and format.
 *
 * @generated from message google.cloud.aiplatform.v1.FeatureValueDestination
 */
export type FeatureValueDestination = Message<"google.cloud.aiplatform.v1.FeatureValueDestination"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.FeatureValueDestination.destination
   */
  destination: {
    /**
     * Output in BigQuery format.
     * [BigQueryDestination.output_uri][google.cloud.aiplatform.v1.BigQueryDestination.output_uri]
     * in
     * [FeatureValueDestination.bigquery_destination][google.cloud.aiplatform.v1.FeatureValueDestination.bigquery_destination]
     * must refer to a table.
     *
     * @generated from field: google.cloud.aiplatform.v1.BigQueryDestination bigquery_destination = 1;
     */
    value: BigQueryDestination;
    case: "bigqueryDestination";
  } | {
    /**
     * Output in TFRecord format.
     *
     * Below are the mapping from Feature value type
     * in Featurestore to Feature value type in TFRecord:
     *
     *     Value type in Featurestore                 | Value type in TFRecord
     *     DOUBLE, DOUBLE_ARRAY                       | FLOAT_LIST
     *     INT64, INT64_ARRAY                         | INT64_LIST
     *     STRING, STRING_ARRAY, BYTES                | BYTES_LIST
     *     true -> byte_string("true"), false -> byte_string("false")
     *     BOOL, BOOL_ARRAY (true, false)             | BYTES_LIST
     *
     * @generated from field: google.cloud.aiplatform.v1.TFRecordDestination tfrecord_destination = 2;
     */
    value: TFRecordDestination;
    case: "tfrecordDestination";
  } | {
    /**
     * Output in CSV format. Array Feature value types are not allowed in CSV
     * format.
     *
     * @generated from field: google.cloud.aiplatform.v1.CsvDestination csv_destination = 3;
     */
    value: CsvDestination;
    case: "csvDestination";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1.FeatureValueDestination.
 * Use `create(FeatureValueDestinationSchema)` to create a new message.
 */
export const FeatureValueDestinationSchema: GenMessage<FeatureValueDestination> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 11);

/**
 * Response message for
 * [FeaturestoreService.ExportFeatureValues][google.cloud.aiplatform.v1.FeaturestoreService.ExportFeatureValues].
 *
 * @generated from message google.cloud.aiplatform.v1.ExportFeatureValuesResponse
 */
export type ExportFeatureValuesResponse = Message<"google.cloud.aiplatform.v1.ExportFeatureValuesResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExportFeatureValuesResponse.
 * Use `create(ExportFeatureValuesResponseSchema)` to create a new message.
 */
export const ExportFeatureValuesResponseSchema: GenMessage<ExportFeatureValuesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 12);

/**
 * Response message for
 * [FeaturestoreService.BatchReadFeatureValues][google.cloud.aiplatform.v1.FeaturestoreService.BatchReadFeatureValues].
 *
 * @generated from message google.cloud.aiplatform.v1.BatchReadFeatureValuesResponse
 */
export type BatchReadFeatureValuesResponse = Message<"google.cloud.aiplatform.v1.BatchReadFeatureValuesResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchReadFeatureValuesResponse.
 * Use `create(BatchReadFeatureValuesResponseSchema)` to create a new message.
 */
export const BatchReadFeatureValuesResponseSchema: GenMessage<BatchReadFeatureValuesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 13);

/**
 * Request message for
 * [FeaturestoreService.CreateEntityType][google.cloud.aiplatform.v1.FeaturestoreService.CreateEntityType].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateEntityTypeRequest
 */
export type CreateEntityTypeRequest = Message<"google.cloud.aiplatform.v1.CreateEntityTypeRequest"> & {
  /**
   * Required. The resource name of the Featurestore to create EntityTypes.
   * Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The EntityType to create.
   *
   * @generated from field: google.cloud.aiplatform.v1.EntityType entity_type = 2;
   */
  entityType?: EntityType;

  /**
   * Required. The ID to use for the EntityType, which will become the final
   * component of the EntityType's resource name.
   *
   * This value may be up to 60 characters, and valid characters are
   * `[a-z0-9_]`. The first character cannot be a number.
   *
   * The value must be unique within a featurestore.
   *
   * @generated from field: string entity_type_id = 3;
   */
  entityTypeId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateEntityTypeRequest.
 * Use `create(CreateEntityTypeRequestSchema)` to create a new message.
 */
export const CreateEntityTypeRequestSchema: GenMessage<CreateEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 14);

/**
 * Request message for
 * [FeaturestoreService.GetEntityType][google.cloud.aiplatform.v1.FeaturestoreService.GetEntityType].
 *
 * @generated from message google.cloud.aiplatform.v1.GetEntityTypeRequest
 */
export type GetEntityTypeRequest = Message<"google.cloud.aiplatform.v1.GetEntityTypeRequest"> & {
  /**
   * Required. The name of the EntityType resource.
   * Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetEntityTypeRequest.
 * Use `create(GetEntityTypeRequestSchema)` to create a new message.
 */
export const GetEntityTypeRequestSchema: GenMessage<GetEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 15);

/**
 * Request message for
 * [FeaturestoreService.ListEntityTypes][google.cloud.aiplatform.v1.FeaturestoreService.ListEntityTypes].
 *
 * @generated from message google.cloud.aiplatform.v1.ListEntityTypesRequest
 */
export type ListEntityTypesRequest = Message<"google.cloud.aiplatform.v1.ListEntityTypesRequest"> & {
  /**
   * Required. The resource name of the Featurestore to list EntityTypes.
   * Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Lists the EntityTypes that match the filter expression. The following
   * filters are supported:
   *
   * * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons.
   * Values must be in RFC 3339 format.
   * * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons.
   * Values must be in RFC 3339 format.
   * * `labels`: Supports key-value equality as well as key presence.
   *
   * Examples:
   *
   * * `create_time > \"2020-01-31T15:30:00.000000Z\" OR
   *      update_time > \"2020-01-31T15:30:00.000000Z\"` --> EntityTypes created
   *      or updated after 2020-01-31T15:30:00.000000Z.
   * * `labels.active = yes AND labels.env = prod` --> EntityTypes having both
   *     (active: yes) and (env: prod) labels.
   * * `labels.env: *` --> Any EntityType which has a label with 'env' as the
   *   key.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of EntityTypes to return. The service may return fewer
   * than this value. If unspecified, at most 1000 EntityTypes will be returned.
   * The maximum value is 1000; any value greater than 1000 will be coerced to
   * 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [FeaturestoreService.ListEntityTypes][google.cloud.aiplatform.v1.FeaturestoreService.ListEntityTypes]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [FeaturestoreService.ListEntityTypes][google.cloud.aiplatform.v1.FeaturestoreService.ListEntityTypes]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * A comma-separated list of fields to order by, sorted in ascending order.
   * Use "desc" after a field name for descending.
   *
   * Supported fields:
   *
   *   * `entity_type_id`
   *   * `create_time`
   *   * `update_time`
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 6;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListEntityTypesRequest.
 * Use `create(ListEntityTypesRequestSchema)` to create a new message.
 */
export const ListEntityTypesRequestSchema: GenMessage<ListEntityTypesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 16);

/**
 * Response message for
 * [FeaturestoreService.ListEntityTypes][google.cloud.aiplatform.v1.FeaturestoreService.ListEntityTypes].
 *
 * @generated from message google.cloud.aiplatform.v1.ListEntityTypesResponse
 */
export type ListEntityTypesResponse = Message<"google.cloud.aiplatform.v1.ListEntityTypesResponse"> & {
  /**
   * The EntityTypes matching the request.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.EntityType entity_types = 1;
   */
  entityTypes: EntityType[];

  /**
   * A token, which can be sent as
   * [ListEntityTypesRequest.page_token][google.cloud.aiplatform.v1.ListEntityTypesRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListEntityTypesResponse.
 * Use `create(ListEntityTypesResponseSchema)` to create a new message.
 */
export const ListEntityTypesResponseSchema: GenMessage<ListEntityTypesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 17);

/**
 * Request message for
 * [FeaturestoreService.UpdateEntityType][google.cloud.aiplatform.v1.FeaturestoreService.UpdateEntityType].
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateEntityTypeRequest
 */
export type UpdateEntityTypeRequest = Message<"google.cloud.aiplatform.v1.UpdateEntityTypeRequest"> & {
  /**
   * Required. The EntityType's `name` field is used to identify the EntityType
   * to be updated. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
   *
   * @generated from field: google.cloud.aiplatform.v1.EntityType entity_type = 1;
   */
  entityType?: EntityType;

  /**
   * Field mask is used to specify the fields to be overwritten in the
   * EntityType resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then only the non-empty fields present in the
   * request will be overwritten. Set the update_mask to `*` to override all
   * fields.
   *
   * Updatable fields:
   *
   *   * `description`
   *   * `labels`
   *   * `monitoring_config.snapshot_analysis.disabled`
   *   * `monitoring_config.snapshot_analysis.monitoring_interval_days`
   *   * `monitoring_config.snapshot_analysis.staleness_days`
   *   * `monitoring_config.import_features_analysis.state`
   *   * `monitoring_config.import_features_analysis.anomaly_detection_baseline`
   *   * `monitoring_config.numerical_threshold_config.value`
   *   * `monitoring_config.categorical_threshold_config.value`
   *   * `offline_storage_ttl_days`
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateEntityTypeRequest.
 * Use `create(UpdateEntityTypeRequestSchema)` to create a new message.
 */
export const UpdateEntityTypeRequestSchema: GenMessage<UpdateEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 18);

/**
 * Request message for [FeaturestoreService.DeleteEntityTypes][].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteEntityTypeRequest
 */
export type DeleteEntityTypeRequest = Message<"google.cloud.aiplatform.v1.DeleteEntityTypeRequest"> & {
  /**
   * Required. The name of the EntityType to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If set to true, any Features for this EntityType will also be deleted.
   * (Otherwise, the request will only work if the EntityType has no Features.)
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteEntityTypeRequest.
 * Use `create(DeleteEntityTypeRequestSchema)` to create a new message.
 */
export const DeleteEntityTypeRequestSchema: GenMessage<DeleteEntityTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 19);

/**
 * Request message for
 * [FeaturestoreService.CreateFeature][google.cloud.aiplatform.v1.FeaturestoreService.CreateFeature].
 * Request message for
 * [FeatureRegistryService.CreateFeature][google.cloud.aiplatform.v1.FeatureRegistryService.CreateFeature].
 *
 * @generated from message google.cloud.aiplatform.v1.CreateFeatureRequest
 */
export type CreateFeatureRequest = Message<"google.cloud.aiplatform.v1.CreateFeatureRequest"> & {
  /**
   * Required. The resource name of the EntityType or FeatureGroup to create a
   * Feature. Format for entity_type as parent:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
   * Format for feature_group as parent:
   * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The Feature to create.
   *
   * @generated from field: google.cloud.aiplatform.v1.Feature feature = 2;
   */
  feature?: Feature;

  /**
   * Required. The ID to use for the Feature, which will become the final
   * component of the Feature's resource name.
   *
   * This value may be up to 128 characters, and valid characters are
   * `[a-z0-9_]`. The first character cannot be a number.
   *
   * The value must be unique within an EntityType/FeatureGroup.
   *
   * @generated from field: string feature_id = 3;
   */
  featureId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateFeatureRequest.
 * Use `create(CreateFeatureRequestSchema)` to create a new message.
 */
export const CreateFeatureRequestSchema: GenMessage<CreateFeatureRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 20);

/**
 * Request message for
 * [FeaturestoreService.BatchCreateFeatures][google.cloud.aiplatform.v1.FeaturestoreService.BatchCreateFeatures].
 *
 * @generated from message google.cloud.aiplatform.v1.BatchCreateFeaturesRequest
 */
export type BatchCreateFeaturesRequest = Message<"google.cloud.aiplatform.v1.BatchCreateFeaturesRequest"> & {
  /**
   * Required. The resource name of the EntityType to create the batch of
   * Features under. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The request message specifying the Features to create. All
   * Features must be created under the same parent EntityType. The `parent`
   * field in each child request message can be omitted. If `parent` is set in a
   * child request, then the value must match the `parent` value in this request
   * message.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.CreateFeatureRequest requests = 2;
   */
  requests: CreateFeatureRequest[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchCreateFeaturesRequest.
 * Use `create(BatchCreateFeaturesRequestSchema)` to create a new message.
 */
export const BatchCreateFeaturesRequestSchema: GenMessage<BatchCreateFeaturesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 21);

/**
 * Response message for
 * [FeaturestoreService.BatchCreateFeatures][google.cloud.aiplatform.v1.FeaturestoreService.BatchCreateFeatures].
 *
 * @generated from message google.cloud.aiplatform.v1.BatchCreateFeaturesResponse
 */
export type BatchCreateFeaturesResponse = Message<"google.cloud.aiplatform.v1.BatchCreateFeaturesResponse"> & {
  /**
   * The Features created.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.Feature features = 1;
   */
  features: Feature[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchCreateFeaturesResponse.
 * Use `create(BatchCreateFeaturesResponseSchema)` to create a new message.
 */
export const BatchCreateFeaturesResponseSchema: GenMessage<BatchCreateFeaturesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 22);

/**
 * Request message for
 * [FeaturestoreService.GetFeature][google.cloud.aiplatform.v1.FeaturestoreService.GetFeature].
 * Request message for
 * [FeatureRegistryService.GetFeature][google.cloud.aiplatform.v1.FeatureRegistryService.GetFeature].
 *
 * @generated from message google.cloud.aiplatform.v1.GetFeatureRequest
 */
export type GetFeatureRequest = Message<"google.cloud.aiplatform.v1.GetFeatureRequest"> & {
  /**
   * Required. The name of the Feature resource.
   * Format for entity_type as parent:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
   * Format for feature_group as parent:
   * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.GetFeatureRequest.
 * Use `create(GetFeatureRequestSchema)` to create a new message.
 */
export const GetFeatureRequestSchema: GenMessage<GetFeatureRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 23);

/**
 * Request message for
 * [FeaturestoreService.ListFeatures][google.cloud.aiplatform.v1.FeaturestoreService.ListFeatures].
 * Request message for
 * [FeatureRegistryService.ListFeatures][google.cloud.aiplatform.v1.FeatureRegistryService.ListFeatures].
 *
 * @generated from message google.cloud.aiplatform.v1.ListFeaturesRequest
 */
export type ListFeaturesRequest = Message<"google.cloud.aiplatform.v1.ListFeaturesRequest"> & {
  /**
   * Required. The resource name of the Location to list Features.
   * Format for entity_type as parent:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
   * Format for feature_group as parent:
   * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Lists the Features that match the filter expression. The following
   * filters are supported:
   *
   * * `value_type`: Supports = and != comparisons.
   * * `create_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must
   * be in RFC 3339 format.
   * * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must
   * be in RFC 3339 format.
   * * `labels`: Supports key-value equality as well as key presence.
   *
   * Examples:
   *
   * * `value_type = DOUBLE` --> Features whose type is DOUBLE.
   * * `create_time > \"2020-01-31T15:30:00.000000Z\" OR
   *      update_time > \"2020-01-31T15:30:00.000000Z\"` --> EntityTypes created
   *      or updated after 2020-01-31T15:30:00.000000Z.
   * * `labels.active = yes AND labels.env = prod` --> Features having both
   *     (active: yes) and (env: prod) labels.
   * * `labels.env: *` --> Any Feature which has a label with 'env' as the
   *   key.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of Features to return. The service may return fewer
   * than this value. If unspecified, at most 1000 Features will be returned.
   * The maximum value is 1000; any value greater than 1000 will be coerced to
   * 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [FeaturestoreService.ListFeatures][google.cloud.aiplatform.v1.FeaturestoreService.ListFeatures]
   * call or
   * [FeatureRegistryService.ListFeatures][google.cloud.aiplatform.v1.FeatureRegistryService.ListFeatures]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [FeaturestoreService.ListFeatures][google.cloud.aiplatform.v1.FeaturestoreService.ListFeatures]
   * or
   * [FeatureRegistryService.ListFeatures][google.cloud.aiplatform.v1.FeatureRegistryService.ListFeatures]
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * A comma-separated list of fields to order by, sorted in ascending order.
   * Use "desc" after a field name for descending.
   * Supported fields:
   *
   *   * `feature_id`
   *   * `value_type` (Not supported for FeatureRegistry Feature)
   *   * `create_time`
   *   * `update_time`
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 6;
   */
  readMask?: FieldMask;

  /**
   * Only applicable for Vertex AI Feature Store (Legacy).
   * If set, return the most recent
   * [ListFeaturesRequest.latest_stats_count][google.cloud.aiplatform.v1.ListFeaturesRequest.latest_stats_count]
   * of stats for each Feature in response. Valid value is [0, 10]. If number of
   * stats exists <
   * [ListFeaturesRequest.latest_stats_count][google.cloud.aiplatform.v1.ListFeaturesRequest.latest_stats_count],
   * return all existing stats.
   *
   * @generated from field: int32 latest_stats_count = 7;
   */
  latestStatsCount: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListFeaturesRequest.
 * Use `create(ListFeaturesRequestSchema)` to create a new message.
 */
export const ListFeaturesRequestSchema: GenMessage<ListFeaturesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 24);

/**
 * Response message for
 * [FeaturestoreService.ListFeatures][google.cloud.aiplatform.v1.FeaturestoreService.ListFeatures].
 * Response message for
 * [FeatureRegistryService.ListFeatures][google.cloud.aiplatform.v1.FeatureRegistryService.ListFeatures].
 *
 * @generated from message google.cloud.aiplatform.v1.ListFeaturesResponse
 */
export type ListFeaturesResponse = Message<"google.cloud.aiplatform.v1.ListFeaturesResponse"> & {
  /**
   * The Features matching the request.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.Feature features = 1;
   */
  features: Feature[];

  /**
   * A token, which can be sent as
   * [ListFeaturesRequest.page_token][google.cloud.aiplatform.v1.ListFeaturesRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ListFeaturesResponse.
 * Use `create(ListFeaturesResponseSchema)` to create a new message.
 */
export const ListFeaturesResponseSchema: GenMessage<ListFeaturesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 25);

/**
 * Request message for
 * [FeaturestoreService.SearchFeatures][google.cloud.aiplatform.v1.FeaturestoreService.SearchFeatures].
 *
 * @generated from message google.cloud.aiplatform.v1.SearchFeaturesRequest
 */
export type SearchFeaturesRequest = Message<"google.cloud.aiplatform.v1.SearchFeaturesRequest"> & {
  /**
   * Required. The resource name of the Location to search Features.
   * Format:
   * `projects/{project}/locations/{location}`
   *
   * @generated from field: string location = 1;
   */
  location: string;

  /**
   * Query string that is a conjunction of field-restricted queries and/or
   * field-restricted filters.  Field-restricted queries and filters can be
   * combined using `AND` to form a conjunction.
   *
   * A field query is in the form FIELD:QUERY. This implicitly checks if QUERY
   * exists as a substring within Feature's FIELD. The QUERY
   * and the FIELD are converted to a sequence of words (i.e. tokens) for
   * comparison. This is done by:
   *
   *   * Removing leading/trailing whitespace and tokenizing the search value.
   *   Characters that are not one of alphanumeric `[a-zA-Z0-9]`, underscore
   *   `_`, or asterisk `*` are treated as delimiters for tokens. `*` is treated
   *   as a wildcard that matches characters within a token.
   *   * Ignoring case.
   *   * Prepending an asterisk to the first and appending an asterisk to the
   *   last token in QUERY.
   *
   * A QUERY must be either a singular token or a phrase. A phrase is one or
   * multiple words enclosed in double quotation marks ("). With phrases, the
   * order of the words is important. Words in the phrase must be matching in
   * order and consecutively.
   *
   * Supported FIELDs for field-restricted queries:
   *
   * * `feature_id`
   * * `description`
   * * `entity_type_id`
   *
   * Examples:
   *
   * * `feature_id: foo` --> Matches a Feature with ID containing the substring
   * `foo` (eg. `foo`, `foofeature`, `barfoo`).
   * * `feature_id: foo*feature` --> Matches a Feature with ID containing the
   * substring `foo*feature` (eg. `foobarfeature`).
   * * `feature_id: foo AND description: bar` --> Matches a Feature with ID
   * containing the substring `foo` and description containing the substring
   * `bar`.
   *
   *
   * Besides field queries, the following exact-match filters are
   * supported. The exact-match filters do not support wildcards. Unlike
   * field-restricted queries, exact-match filters are case-sensitive.
   *
   * * `feature_id`: Supports = comparisons.
   * * `description`: Supports = comparisons. Multi-token filters should be
   * enclosed in quotes.
   * * `entity_type_id`: Supports = comparisons.
   * * `value_type`: Supports = and != comparisons.
   * * `labels`: Supports key-value equality as well as key presence.
   * * `featurestore_id`: Supports = comparisons.
   *
   * Examples:
   *
   * * `description = "foo bar"` --> Any Feature with description exactly equal
   * to `foo bar`
   * * `value_type = DOUBLE` --> Features whose type is DOUBLE.
   * * `labels.active = yes AND labels.env = prod` --> Features having both
   *     (active: yes) and (env: prod) labels.
   * * `labels.env: *` --> Any Feature which has a label with `env` as the
   *   key.
   *
   * @generated from field: string query = 3;
   */
  query: string;

  /**
   * The maximum number of Features to return. The service may return fewer
   * than this value. If unspecified, at most 100 Features will be returned.
   * The maximum value is 100; any value greater than 100 will be coerced to
   * 100.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [FeaturestoreService.SearchFeatures][google.cloud.aiplatform.v1.FeaturestoreService.SearchFeatures]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * [FeaturestoreService.SearchFeatures][google.cloud.aiplatform.v1.FeaturestoreService.SearchFeatures],
   * except `page_size`, must match the call that provided the page token.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SearchFeaturesRequest.
 * Use `create(SearchFeaturesRequestSchema)` to create a new message.
 */
export const SearchFeaturesRequestSchema: GenMessage<SearchFeaturesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 26);

/**
 * Response message for
 * [FeaturestoreService.SearchFeatures][google.cloud.aiplatform.v1.FeaturestoreService.SearchFeatures].
 *
 * @generated from message google.cloud.aiplatform.v1.SearchFeaturesResponse
 */
export type SearchFeaturesResponse = Message<"google.cloud.aiplatform.v1.SearchFeaturesResponse"> & {
  /**
   * The Features matching the request.
   *
   * Fields returned:
   *
   *  * `name`
   *  * `description`
   *  * `labels`
   *  * `create_time`
   *  * `update_time`
   *
   * @generated from field: repeated google.cloud.aiplatform.v1.Feature features = 1;
   */
  features: Feature[];

  /**
   * A token, which can be sent as
   * [SearchFeaturesRequest.page_token][google.cloud.aiplatform.v1.SearchFeaturesRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SearchFeaturesResponse.
 * Use `create(SearchFeaturesResponseSchema)` to create a new message.
 */
export const SearchFeaturesResponseSchema: GenMessage<SearchFeaturesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 27);

/**
 * Request message for
 * [FeaturestoreService.UpdateFeature][google.cloud.aiplatform.v1.FeaturestoreService.UpdateFeature].
 * Request message for
 * [FeatureRegistryService.UpdateFeature][google.cloud.aiplatform.v1.FeatureRegistryService.UpdateFeature].
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateFeatureRequest
 */
export type UpdateFeatureRequest = Message<"google.cloud.aiplatform.v1.UpdateFeatureRequest"> & {
  /**
   * Required. The Feature's `name` field is used to identify the Feature to be
   * updated.
   * Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
   * `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
   *
   * @generated from field: google.cloud.aiplatform.v1.Feature feature = 1;
   */
  feature?: Feature;

  /**
   * Field mask is used to specify the fields to be overwritten in the
   * Features resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then only the non-empty fields present in the
   * request will be overwritten. Set the update_mask to `*` to override all
   * fields.
   *
   * Updatable fields:
   *
   *   * `description`
   *   * `labels`
   *   * `disable_monitoring` (Not supported for FeatureRegistryService Feature)
   *   * `point_of_contact` (Not supported for FeaturestoreService FeatureStore)
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateFeatureRequest.
 * Use `create(UpdateFeatureRequestSchema)` to create a new message.
 */
export const UpdateFeatureRequestSchema: GenMessage<UpdateFeatureRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 28);

/**
 * Request message for
 * [FeaturestoreService.DeleteFeature][google.cloud.aiplatform.v1.FeaturestoreService.DeleteFeature].
 * Request message for
 * [FeatureRegistryService.DeleteFeature][google.cloud.aiplatform.v1.FeatureRegistryService.DeleteFeature].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteFeatureRequest
 */
export type DeleteFeatureRequest = Message<"google.cloud.aiplatform.v1.DeleteFeatureRequest"> & {
  /**
   * Required. The name of the Features to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
   * `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteFeatureRequest.
 * Use `create(DeleteFeatureRequestSchema)` to create a new message.
 */
export const DeleteFeatureRequestSchema: GenMessage<DeleteFeatureRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 29);

/**
 * Details of operations that perform create Featurestore.
 *
 * @generated from message google.cloud.aiplatform.v1.CreateFeaturestoreOperationMetadata
 */
export type CreateFeaturestoreOperationMetadata = Message<"google.cloud.aiplatform.v1.CreateFeaturestoreOperationMetadata"> & {
  /**
   * Operation metadata for Featurestore.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateFeaturestoreOperationMetadata.
 * Use `create(CreateFeaturestoreOperationMetadataSchema)` to create a new message.
 */
export const CreateFeaturestoreOperationMetadataSchema: GenMessage<CreateFeaturestoreOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 30);

/**
 * Details of operations that perform update Featurestore.
 *
 * @generated from message google.cloud.aiplatform.v1.UpdateFeaturestoreOperationMetadata
 */
export type UpdateFeaturestoreOperationMetadata = Message<"google.cloud.aiplatform.v1.UpdateFeaturestoreOperationMetadata"> & {
  /**
   * Operation metadata for Featurestore.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.UpdateFeaturestoreOperationMetadata.
 * Use `create(UpdateFeaturestoreOperationMetadataSchema)` to create a new message.
 */
export const UpdateFeaturestoreOperationMetadataSchema: GenMessage<UpdateFeaturestoreOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 31);

/**
 * Details of operations that perform import Feature values.
 *
 * @generated from message google.cloud.aiplatform.v1.ImportFeatureValuesOperationMetadata
 */
export type ImportFeatureValuesOperationMetadata = Message<"google.cloud.aiplatform.v1.ImportFeatureValuesOperationMetadata"> & {
  /**
   * Operation metadata for Featurestore import Feature values.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;

  /**
   * Number of entities that have been imported by the operation.
   *
   * @generated from field: int64 imported_entity_count = 2;
   */
  importedEntityCount: bigint;

  /**
   * Number of Feature values that have been imported by the operation.
   *
   * @generated from field: int64 imported_feature_value_count = 3;
   */
  importedFeatureValueCount: bigint;

  /**
   * The source URI from where Feature values are imported.
   *
   * @generated from field: repeated string source_uris = 4;
   */
  sourceUris: string[];

  /**
   * The number of rows in input source that weren't imported due to either
   * * Not having any featureValues.
   * * Having a null entityId.
   * * Having a null timestamp.
   * * Not being parsable (applicable for CSV sources).
   *
   * @generated from field: int64 invalid_row_count = 6;
   */
  invalidRowCount: bigint;

  /**
   * The number rows that weren't ingested due to having timestamps outside the
   * retention boundary.
   *
   * @generated from field: int64 timestamp_outside_retention_rows_count = 7;
   */
  timestampOutsideRetentionRowsCount: bigint;

  /**
   * List of ImportFeatureValues operations running under a single EntityType
   * that are blocking this operation.
   *
   * @generated from field: repeated int64 blocking_operation_ids = 8;
   */
  blockingOperationIds: bigint[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ImportFeatureValuesOperationMetadata.
 * Use `create(ImportFeatureValuesOperationMetadataSchema)` to create a new message.
 */
export const ImportFeatureValuesOperationMetadataSchema: GenMessage<ImportFeatureValuesOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 32);

/**
 * Details of operations that exports Features values.
 *
 * @generated from message google.cloud.aiplatform.v1.ExportFeatureValuesOperationMetadata
 */
export type ExportFeatureValuesOperationMetadata = Message<"google.cloud.aiplatform.v1.ExportFeatureValuesOperationMetadata"> & {
  /**
   * Operation metadata for Featurestore export Feature values.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ExportFeatureValuesOperationMetadata.
 * Use `create(ExportFeatureValuesOperationMetadataSchema)` to create a new message.
 */
export const ExportFeatureValuesOperationMetadataSchema: GenMessage<ExportFeatureValuesOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 33);

/**
 * Details of operations that batch reads Feature values.
 *
 * @generated from message google.cloud.aiplatform.v1.BatchReadFeatureValuesOperationMetadata
 */
export type BatchReadFeatureValuesOperationMetadata = Message<"google.cloud.aiplatform.v1.BatchReadFeatureValuesOperationMetadata"> & {
  /**
   * Operation metadata for Featurestore batch read Features values.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchReadFeatureValuesOperationMetadata.
 * Use `create(BatchReadFeatureValuesOperationMetadataSchema)` to create a new message.
 */
export const BatchReadFeatureValuesOperationMetadataSchema: GenMessage<BatchReadFeatureValuesOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 34);

/**
 * Details of operations that delete Feature values.
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteFeatureValuesOperationMetadata
 */
export type DeleteFeatureValuesOperationMetadata = Message<"google.cloud.aiplatform.v1.DeleteFeatureValuesOperationMetadata"> & {
  /**
   * Operation metadata for Featurestore delete Features values.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteFeatureValuesOperationMetadata.
 * Use `create(DeleteFeatureValuesOperationMetadataSchema)` to create a new message.
 */
export const DeleteFeatureValuesOperationMetadataSchema: GenMessage<DeleteFeatureValuesOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 35);

/**
 * Details of operations that perform create EntityType.
 *
 * @generated from message google.cloud.aiplatform.v1.CreateEntityTypeOperationMetadata
 */
export type CreateEntityTypeOperationMetadata = Message<"google.cloud.aiplatform.v1.CreateEntityTypeOperationMetadata"> & {
  /**
   * Operation metadata for EntityType.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateEntityTypeOperationMetadata.
 * Use `create(CreateEntityTypeOperationMetadataSchema)` to create a new message.
 */
export const CreateEntityTypeOperationMetadataSchema: GenMessage<CreateEntityTypeOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 36);

/**
 * Details of operations that perform create Feature.
 *
 * @generated from message google.cloud.aiplatform.v1.CreateFeatureOperationMetadata
 */
export type CreateFeatureOperationMetadata = Message<"google.cloud.aiplatform.v1.CreateFeatureOperationMetadata"> & {
  /**
   * Operation metadata for Feature.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.CreateFeatureOperationMetadata.
 * Use `create(CreateFeatureOperationMetadataSchema)` to create a new message.
 */
export const CreateFeatureOperationMetadataSchema: GenMessage<CreateFeatureOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 37);

/**
 * Details of operations that perform batch create Features.
 *
 * @generated from message google.cloud.aiplatform.v1.BatchCreateFeaturesOperationMetadata
 */
export type BatchCreateFeaturesOperationMetadata = Message<"google.cloud.aiplatform.v1.BatchCreateFeaturesOperationMetadata"> & {
  /**
   * Operation metadata for Feature.
   *
   * @generated from field: google.cloud.aiplatform.v1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1.BatchCreateFeaturesOperationMetadata.
 * Use `create(BatchCreateFeaturesOperationMetadataSchema)` to create a new message.
 */
export const BatchCreateFeaturesOperationMetadataSchema: GenMessage<BatchCreateFeaturesOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 38);

/**
 * Request message for
 * [FeaturestoreService.DeleteFeatureValues][google.cloud.aiplatform.v1.FeaturestoreService.DeleteFeatureValues].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteFeatureValuesRequest
 */
export type DeleteFeatureValuesRequest = Message<"google.cloud.aiplatform.v1.DeleteFeatureValuesRequest"> & {
  /**
   * Defines options to select feature values to be deleted.
   *
   * @generated from oneof google.cloud.aiplatform.v1.DeleteFeatureValuesRequest.DeleteOption
   */
  DeleteOption: {
    /**
     * Select feature values to be deleted by specifying entities.
     *
     * @generated from field: google.cloud.aiplatform.v1.DeleteFeatureValuesRequest.SelectEntity select_entity = 2;
     */
    value: DeleteFeatureValuesRequest_SelectEntity;
    case: "selectEntity";
  } | {
    /**
     * Select feature values to be deleted by specifying time range and
     * features.
     *
     * @generated from field: google.cloud.aiplatform.v1.DeleteFeatureValuesRequest.SelectTimeRangeAndFeature select_time_range_and_feature = 3;
     */
    value: DeleteFeatureValuesRequest_SelectTimeRangeAndFeature;
    case: "selectTimeRangeAndFeature";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the EntityType grouping the Features for
   * which values are being deleted from. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
   *
   * @generated from field: string entity_type = 1;
   */
  entityType: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteFeatureValuesRequest.
 * Use `create(DeleteFeatureValuesRequestSchema)` to create a new message.
 */
export const DeleteFeatureValuesRequestSchema: GenMessage<DeleteFeatureValuesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 39);

/**
 * Message to select entity.
 * If an entity id is selected, all the feature values corresponding to the
 * entity id will be deleted, including the entityId.
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteFeatureValuesRequest.SelectEntity
 */
export type DeleteFeatureValuesRequest_SelectEntity = Message<"google.cloud.aiplatform.v1.DeleteFeatureValuesRequest.SelectEntity"> & {
  /**
   * Required. Selectors choosing feature values of which entity id to be
   * deleted from the EntityType.
   *
   * @generated from field: google.cloud.aiplatform.v1.EntityIdSelector entity_id_selector = 1;
   */
  entityIdSelector?: EntityIdSelector;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteFeatureValuesRequest.SelectEntity.
 * Use `create(DeleteFeatureValuesRequest_SelectEntitySchema)` to create a new message.
 */
export const DeleteFeatureValuesRequest_SelectEntitySchema: GenMessage<DeleteFeatureValuesRequest_SelectEntity> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 39, 0);

/**
 * Message to select time range and feature.
 * Values of the selected feature generated within an inclusive time range
 * will be deleted. Using this option permanently deletes the feature values
 * from the specified feature IDs within the specified time range.
 * This might include data from the online storage. If you want to retain
 * any deleted historical data in the online storage, you must re-ingest it.
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteFeatureValuesRequest.SelectTimeRangeAndFeature
 */
export type DeleteFeatureValuesRequest_SelectTimeRangeAndFeature = Message<"google.cloud.aiplatform.v1.DeleteFeatureValuesRequest.SelectTimeRangeAndFeature"> & {
  /**
   * Required. Select feature generated within a half-inclusive time range.
   * The time range is lower inclusive and upper exclusive.
   *
   * @generated from field: google.type.Interval time_range = 1;
   */
  timeRange?: Interval;

  /**
   * Required. Selectors choosing which feature values to be deleted from the
   * EntityType.
   *
   * @generated from field: google.cloud.aiplatform.v1.FeatureSelector feature_selector = 2;
   */
  featureSelector?: FeatureSelector;

  /**
   * If set, data will not be deleted from online storage.
   * When time range is older than the data in online storage, setting this to
   * be true will make the deletion have no impact on online serving.
   *
   * @generated from field: bool skip_online_storage_delete = 3;
   */
  skipOnlineStorageDelete: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteFeatureValuesRequest.SelectTimeRangeAndFeature.
 * Use `create(DeleteFeatureValuesRequest_SelectTimeRangeAndFeatureSchema)` to create a new message.
 */
export const DeleteFeatureValuesRequest_SelectTimeRangeAndFeatureSchema: GenMessage<DeleteFeatureValuesRequest_SelectTimeRangeAndFeature> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 39, 1);

/**
 * Response message for
 * [FeaturestoreService.DeleteFeatureValues][google.cloud.aiplatform.v1.FeaturestoreService.DeleteFeatureValues].
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteFeatureValuesResponse
 */
export type DeleteFeatureValuesResponse = Message<"google.cloud.aiplatform.v1.DeleteFeatureValuesResponse"> & {
  /**
   * Response based on which delete option is specified in the
   * request
   *
   * @generated from oneof google.cloud.aiplatform.v1.DeleteFeatureValuesResponse.response
   */
  response: {
    /**
     * Response for request specifying the entities to delete
     *
     * @generated from field: google.cloud.aiplatform.v1.DeleteFeatureValuesResponse.SelectEntity select_entity = 1;
     */
    value: DeleteFeatureValuesResponse_SelectEntity;
    case: "selectEntity";
  } | {
    /**
     * Response for request specifying time range and feature
     *
     * @generated from field: google.cloud.aiplatform.v1.DeleteFeatureValuesResponse.SelectTimeRangeAndFeature select_time_range_and_feature = 2;
     */
    value: DeleteFeatureValuesResponse_SelectTimeRangeAndFeature;
    case: "selectTimeRangeAndFeature";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteFeatureValuesResponse.
 * Use `create(DeleteFeatureValuesResponseSchema)` to create a new message.
 */
export const DeleteFeatureValuesResponseSchema: GenMessage<DeleteFeatureValuesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 40);

/**
 * Response message if the request uses the SelectEntity option.
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteFeatureValuesResponse.SelectEntity
 */
export type DeleteFeatureValuesResponse_SelectEntity = Message<"google.cloud.aiplatform.v1.DeleteFeatureValuesResponse.SelectEntity"> & {
  /**
   * The count of deleted entity rows in the offline storage.
   * Each row corresponds to the combination of an entity ID and a timestamp.
   * One entity ID can have multiple rows in the offline storage.
   *
   * @generated from field: int64 offline_storage_deleted_entity_row_count = 1;
   */
  offlineStorageDeletedEntityRowCount: bigint;

  /**
   * The count of deleted entities in the online storage.
   * Each entity ID corresponds to one entity.
   *
   * @generated from field: int64 online_storage_deleted_entity_count = 2;
   */
  onlineStorageDeletedEntityCount: bigint;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteFeatureValuesResponse.SelectEntity.
 * Use `create(DeleteFeatureValuesResponse_SelectEntitySchema)` to create a new message.
 */
export const DeleteFeatureValuesResponse_SelectEntitySchema: GenMessage<DeleteFeatureValuesResponse_SelectEntity> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 40, 0);

/**
 * Response message if the request uses the SelectTimeRangeAndFeature option.
 *
 * @generated from message google.cloud.aiplatform.v1.DeleteFeatureValuesResponse.SelectTimeRangeAndFeature
 */
export type DeleteFeatureValuesResponse_SelectTimeRangeAndFeature = Message<"google.cloud.aiplatform.v1.DeleteFeatureValuesResponse.SelectTimeRangeAndFeature"> & {
  /**
   * The count of the features or columns impacted.
   * This is the same as the feature count in the request.
   *
   * @generated from field: int64 impacted_feature_count = 1;
   */
  impactedFeatureCount: bigint;

  /**
   * The count of modified entity rows in the offline storage.
   * Each row corresponds to the combination of an entity ID and a timestamp.
   * One entity ID can have multiple rows in the offline storage.
   * Within each row, only the features specified in the request are
   * deleted.
   *
   * @generated from field: int64 offline_storage_modified_entity_row_count = 2;
   */
  offlineStorageModifiedEntityRowCount: bigint;

  /**
   * The count of modified entities in the online storage.
   * Each entity ID corresponds to one entity.
   * Within each entity, only the features specified in the request are
   * deleted.
   *
   * @generated from field: int64 online_storage_modified_entity_count = 3;
   */
  onlineStorageModifiedEntityCount: bigint;
};

/**
 * Describes the message google.cloud.aiplatform.v1.DeleteFeatureValuesResponse.SelectTimeRangeAndFeature.
 * Use `create(DeleteFeatureValuesResponse_SelectTimeRangeAndFeatureSchema)` to create a new message.
 */
export const DeleteFeatureValuesResponse_SelectTimeRangeAndFeatureSchema: GenMessage<DeleteFeatureValuesResponse_SelectTimeRangeAndFeature> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 40, 1);

/**
 * Selector for entityId. Getting ids from the given source.
 *
 * @generated from message google.cloud.aiplatform.v1.EntityIdSelector
 */
export type EntityIdSelector = Message<"google.cloud.aiplatform.v1.EntityIdSelector"> & {
  /**
   * Details about the source data, including the location of the storage and
   * the format.
   *
   * @generated from oneof google.cloud.aiplatform.v1.EntityIdSelector.EntityIdsSource
   */
  EntityIdsSource: {
    /**
     * Source of Csv
     *
     * @generated from field: google.cloud.aiplatform.v1.CsvSource csv_source = 3;
     */
    value: CsvSource;
    case: "csvSource";
  } | { case: undefined; value?: undefined };

  /**
   * Source column that holds entity IDs. If not provided, entity IDs are
   * extracted from the column named entity_id.
   *
   * @generated from field: string entity_id_field = 5;
   */
  entityIdField: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1.EntityIdSelector.
 * Use `create(EntityIdSelectorSchema)` to create a new message.
 */
export const EntityIdSelectorSchema: GenMessage<EntityIdSelector> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_featurestore_service, 41);

/**
 * The service that handles CRUD and List for resources for Featurestore.
 *
 * @generated from service google.cloud.aiplatform.v1.FeaturestoreService
 */
export const FeaturestoreService: GenService<{
  /**
   * Creates a new Featurestore in a given project and location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.CreateFeaturestore
   */
  createFeaturestore: {
    methodKind: "unary";
    input: typeof CreateFeaturestoreRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details of a single Featurestore.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.GetFeaturestore
   */
  getFeaturestore: {
    methodKind: "unary";
    input: typeof GetFeaturestoreRequestSchema;
    output: typeof FeaturestoreSchema;
  },
  /**
   * Lists Featurestores in a given project and location.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.ListFeaturestores
   */
  listFeaturestores: {
    methodKind: "unary";
    input: typeof ListFeaturestoresRequestSchema;
    output: typeof ListFeaturestoresResponseSchema;
  },
  /**
   * Updates the parameters of a single Featurestore.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.UpdateFeaturestore
   */
  updateFeaturestore: {
    methodKind: "unary";
    input: typeof UpdateFeaturestoreRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single Featurestore. The Featurestore must not contain any
   * EntityTypes or `force` must be set to true for the request to succeed.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.DeleteFeaturestore
   */
  deleteFeaturestore: {
    methodKind: "unary";
    input: typeof DeleteFeaturestoreRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a new EntityType in a given Featurestore.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.CreateEntityType
   */
  createEntityType: {
    methodKind: "unary";
    input: typeof CreateEntityTypeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details of a single EntityType.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.GetEntityType
   */
  getEntityType: {
    methodKind: "unary";
    input: typeof GetEntityTypeRequestSchema;
    output: typeof EntityTypeSchema;
  },
  /**
   * Lists EntityTypes in a given Featurestore.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.ListEntityTypes
   */
  listEntityTypes: {
    methodKind: "unary";
    input: typeof ListEntityTypesRequestSchema;
    output: typeof ListEntityTypesResponseSchema;
  },
  /**
   * Updates the parameters of a single EntityType.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.UpdateEntityType
   */
  updateEntityType: {
    methodKind: "unary";
    input: typeof UpdateEntityTypeRequestSchema;
    output: typeof EntityTypeSchema;
  },
  /**
   * Deletes a single EntityType. The EntityType must not have any Features
   * or `force` must be set to true for the request to succeed.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.DeleteEntityType
   */
  deleteEntityType: {
    methodKind: "unary";
    input: typeof DeleteEntityTypeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a new Feature in a given EntityType.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.CreateFeature
   */
  createFeature: {
    methodKind: "unary";
    input: typeof CreateFeatureRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a batch of Features in a given EntityType.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.BatchCreateFeatures
   */
  batchCreateFeatures: {
    methodKind: "unary";
    input: typeof BatchCreateFeaturesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details of a single Feature.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.GetFeature
   */
  getFeature: {
    methodKind: "unary";
    input: typeof GetFeatureRequestSchema;
    output: typeof FeatureSchema;
  },
  /**
   * Lists Features in a given EntityType.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.ListFeatures
   */
  listFeatures: {
    methodKind: "unary";
    input: typeof ListFeaturesRequestSchema;
    output: typeof ListFeaturesResponseSchema;
  },
  /**
   * Updates the parameters of a single Feature.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.UpdateFeature
   */
  updateFeature: {
    methodKind: "unary";
    input: typeof UpdateFeatureRequestSchema;
    output: typeof FeatureSchema;
  },
  /**
   * Deletes a single Feature.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.DeleteFeature
   */
  deleteFeature: {
    methodKind: "unary";
    input: typeof DeleteFeatureRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Imports Feature values into the Featurestore from a source storage.
   *
   * The progress of the import is tracked by the returned operation. The
   * imported features are guaranteed to be visible to subsequent read
   * operations after the operation is marked as successfully done.
   *
   * If an import operation fails, the Feature values returned from
   * reads and exports may be inconsistent. If consistency is
   * required, the caller must retry the same import request again and wait till
   * the new operation returned is marked as successfully done.
   *
   * There are also scenarios where the caller can cause inconsistency.
   *
   *  - Source data for import contains multiple distinct Feature values for
   *    the same entity ID and timestamp.
   *  - Source is modified during an import. This includes adding, updating, or
   *  removing source data and/or metadata. Examples of updating metadata
   *  include but are not limited to changing storage location, storage class,
   *  or retention policy.
   *  - Online serving cluster is under-provisioned.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.ImportFeatureValues
   */
  importFeatureValues: {
    methodKind: "unary";
    input: typeof ImportFeatureValuesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Batch reads Feature values from a Featurestore.
   *
   * This API enables batch reading Feature values, where each read
   * instance in the batch may read Feature values of entities from one or
   * more EntityTypes. Point-in-time correctness is guaranteed for Feature
   * values of each read instance as of each instance's read timestamp.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.BatchReadFeatureValues
   */
  batchReadFeatureValues: {
    methodKind: "unary";
    input: typeof BatchReadFeatureValuesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Exports Feature values from all the entities of a target EntityType.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.ExportFeatureValues
   */
  exportFeatureValues: {
    methodKind: "unary";
    input: typeof ExportFeatureValuesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Delete Feature values from Featurestore.
   *
   * The progress of the deletion is tracked by the returned operation. The
   * deleted feature values are guaranteed to be invisible to subsequent read
   * operations after the operation is marked as successfully done.
   *
   * If a delete feature values operation fails, the feature values
   * returned from reads and exports may be inconsistent. If consistency is
   * required, the caller must retry the same delete request again and wait till
   * the new operation returned is marked as successfully done.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.DeleteFeatureValues
   */
  deleteFeatureValues: {
    methodKind: "unary";
    input: typeof DeleteFeatureValuesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Searches Features matching a query in a given project.
   *
   * @generated from rpc google.cloud.aiplatform.v1.FeaturestoreService.SearchFeatures
   */
  searchFeatures: {
    methodKind: "unary";
    input: typeof SearchFeaturesRequestSchema;
    output: typeof SearchFeaturesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1_featurestore_service, 0);

