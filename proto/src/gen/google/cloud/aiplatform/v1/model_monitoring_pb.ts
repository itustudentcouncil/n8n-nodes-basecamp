// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1/model_monitoring.proto (package google.cloud.aiplatform.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { BigQueryDestination, BigQuerySource, GcsDestination, GcsSource } from "./io_pb";
import { file_google_cloud_aiplatform_v1_io } from "./io_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1/model_monitoring.proto.
 */
export const file_google_cloud_aiplatform_v1_model_monitoring: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9tb2RlbF9tb25pdG9yaW5nLnByb3RvEhpnb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MSK/FQoeTW9kZWxNb25pdG9yaW5nT2JqZWN0aXZlQ29uZmlnEmQKEHRyYWluaW5nX2RhdGFzZXQYASABKAsySi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5Nb2RlbE1vbml0b3JpbmdPYmplY3RpdmVDb25maWcuVHJhaW5pbmdEYXRhc2V0EpMBCil0cmFpbmluZ19wcmVkaWN0aW9uX3NrZXdfZGV0ZWN0aW9uX2NvbmZpZxgCIAEoCzJgLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLk1vZGVsTW9uaXRvcmluZ09iamVjdGl2ZUNvbmZpZy5UcmFpbmluZ1ByZWRpY3Rpb25Ta2V3RGV0ZWN0aW9uQ29uZmlnEoQBCiFwcmVkaWN0aW9uX2RyaWZ0X2RldGVjdGlvbl9jb25maWcYAyABKAsyWS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5Nb2RlbE1vbml0b3JpbmdPYmplY3RpdmVDb25maWcuUHJlZGljdGlvbkRyaWZ0RGV0ZWN0aW9uQ29uZmlnEmgKEmV4cGxhbmF0aW9uX2NvbmZpZxgFIAEoCzJMLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLk1vZGVsTW9uaXRvcmluZ09iamVjdGl2ZUNvbmZpZy5FeHBsYW5hdGlvbkNvbmZpZxrbAgoPVHJhaW5pbmdEYXRhc2V0EjkKB2RhdGFzZXQYAyABKAlCJvpBIwohYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9EYXRhc2V0SAASOwoKZ2NzX3NvdXJjZRgEIAEoCzIlLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkdjc1NvdXJjZUgAEkUKD2JpZ3F1ZXJ5X3NvdXJjZRgFIAEoCzIqLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkJpZ1F1ZXJ5U291cmNlSAASEwoLZGF0YV9mb3JtYXQYAiABKAkSFAoMdGFyZ2V0X2ZpZWxkGAYgASgJEk8KGWxvZ2dpbmdfc2FtcGxpbmdfc3RyYXRlZ3kYByABKAsyLC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5TYW1wbGluZ1N0cmF0ZWd5Qg0KC2RhdGFfc291cmNlGo8FCiVUcmFpbmluZ1ByZWRpY3Rpb25Ta2V3RGV0ZWN0aW9uQ29uZmlnEo0BCg9za2V3X3RocmVzaG9sZHMYASADKAsydC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5Nb2RlbE1vbml0b3JpbmdPYmplY3RpdmVDb25maWcuVHJhaW5pbmdQcmVkaWN0aW9uU2tld0RldGVjdGlvbkNvbmZpZy5Ta2V3VGhyZXNob2xkc0VudHJ5ErABCiFhdHRyaWJ1dGlvbl9zY29yZV9za2V3X3RocmVzaG9sZHMYAiADKAsyhAEuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTW9kZWxNb25pdG9yaW5nT2JqZWN0aXZlQ29uZmlnLlRyYWluaW5nUHJlZGljdGlvblNrZXdEZXRlY3Rpb25Db25maWcuQXR0cmlidXRpb25TY29yZVNrZXdUaHJlc2hvbGRzRW50cnkSSwoWZGVmYXVsdF9za2V3X3RocmVzaG9sZBgGIAEoCzIrLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLlRocmVzaG9sZENvbmZpZxpiChNTa2V3VGhyZXNob2xkc0VudHJ5EgsKA2tleRgBIAEoCRI6CgV2YWx1ZRgCIAEoCzIrLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLlRocmVzaG9sZENvbmZpZzoCOAEacgojQXR0cmlidXRpb25TY29yZVNrZXdUaHJlc2hvbGRzRW50cnkSCwoDa2V5GAEgASgJEjoKBXZhbHVlGAIgASgLMisuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuVGhyZXNob2xkQ29uZmlnOgI4ARqABQoeUHJlZGljdGlvbkRyaWZ0RGV0ZWN0aW9uQ29uZmlnEogBChBkcmlmdF90aHJlc2hvbGRzGAEgAygLMm4uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTW9kZWxNb25pdG9yaW5nT2JqZWN0aXZlQ29uZmlnLlByZWRpY3Rpb25EcmlmdERldGVjdGlvbkNvbmZpZy5EcmlmdFRocmVzaG9sZHNFbnRyeRKqAQoiYXR0cmlidXRpb25fc2NvcmVfZHJpZnRfdGhyZXNob2xkcxgCIAMoCzJ+Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLk1vZGVsTW9uaXRvcmluZ09iamVjdGl2ZUNvbmZpZy5QcmVkaWN0aW9uRHJpZnREZXRlY3Rpb25Db25maWcuQXR0cmlidXRpb25TY29yZURyaWZ0VGhyZXNob2xkc0VudHJ5EkwKF2RlZmF1bHRfZHJpZnRfdGhyZXNob2xkGAUgASgLMisuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuVGhyZXNob2xkQ29uZmlnGmMKFERyaWZ0VGhyZXNob2xkc0VudHJ5EgsKA2tleRgBIAEoCRI6CgV2YWx1ZRgCIAEoCzIrLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLlRocmVzaG9sZENvbmZpZzoCOAEacwokQXR0cmlidXRpb25TY29yZURyaWZ0VGhyZXNob2xkc0VudHJ5EgsKA2tleRgBIAEoCRI6CgV2YWx1ZRgCIAEoCzIrLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLlRocmVzaG9sZENvbmZpZzoCOAEavAQKEUV4cGxhbmF0aW9uQ29uZmlnEiEKGWVuYWJsZV9mZWF0dXJlX2F0dHJpYnV0ZXMYASABKAgSfgoUZXhwbGFuYXRpb25fYmFzZWxpbmUYAiABKAsyYC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5Nb2RlbE1vbml0b3JpbmdPYmplY3RpdmVDb25maWcuRXhwbGFuYXRpb25Db25maWcuRXhwbGFuYXRpb25CYXNlbGluZRqDAwoTRXhwbGFuYXRpb25CYXNlbGluZRI5CgNnY3MYAiABKAsyKi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5HY3NEZXN0aW5hdGlvbkgAEkMKCGJpZ3F1ZXJ5GAMgASgLMi8uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuQmlnUXVlcnlEZXN0aW5hdGlvbkgAEowBChFwcmVkaWN0aW9uX2Zvcm1hdBgBIAEoDjJxLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLk1vZGVsTW9uaXRvcmluZ09iamVjdGl2ZUNvbmZpZy5FeHBsYW5hdGlvbkNvbmZpZy5FeHBsYW5hdGlvbkJhc2VsaW5lLlByZWRpY3Rpb25Gb3JtYXQiTgoQUHJlZGljdGlvbkZvcm1hdBIhCh1QUkVESUNUSU9OX0ZPUk1BVF9VTlNQRUNJRklFRBAAEgkKBUpTT05MEAISDAoIQklHUVVFUlkQA0INCgtkZXN0aW5hdGlvbiKgAgoaTW9kZWxNb25pdG9yaW5nQWxlcnRDb25maWcSZQoSZW1haWxfYWxlcnRfY29uZmlnGAEgASgLMkcuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTW9kZWxNb25pdG9yaW5nQWxlcnRDb25maWcuRW1haWxBbGVydENvbmZpZ0gAEhYKDmVuYWJsZV9sb2dnaW5nGAIgASgIElEKFW5vdGlmaWNhdGlvbl9jaGFubmVscxgDIAMoCUIy+kEvCi1tb25pdG9yaW5nLmdvb2dsZWFwaXMuY29tL05vdGlmaWNhdGlvbkNoYW5uZWwaJwoQRW1haWxBbGVydENvbmZpZxITCgt1c2VyX2VtYWlscxgBIAMoCUIHCgVhbGVydCIvCg9UaHJlc2hvbGRDb25maWcSDwoFdmFsdWUYASABKAFIAEILCgl0aHJlc2hvbGQinAEKEFNhbXBsaW5nU3RyYXRlZ3kSXQoUcmFuZG9tX3NhbXBsZV9jb25maWcYASABKAsyPy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5TYW1wbGluZ1N0cmF0ZWd5LlJhbmRvbVNhbXBsZUNvbmZpZxopChJSYW5kb21TYW1wbGVDb25maWcSEwoLc2FtcGxlX3JhdGUYASABKAFCxAIKHmNvbS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MUIUTW9kZWxNb25pdG9yaW5nUHJvdG9QAVo+Y2xvdWQuZ29vZ2xlLmNvbS9nby9haXBsYXRmb3JtL2FwaXYxL2FpcGxhdGZvcm1wYjthaXBsYXRmb3JtcGKqAhpHb29nbGUuQ2xvdWQuQUlQbGF0Zm9ybS5WMcoCGkdvb2dsZVxDbG91ZFxBSVBsYXRmb3JtXFYx6gIdR29vZ2xlOjpDbG91ZDo6QUlQbGF0Zm9ybTo6VjHqQW8KLW1vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vTm90aWZpY2F0aW9uQ2hhbm5lbBI+cHJvamVjdHMve3Byb2plY3R9L25vdGlmaWNhdGlvbkNoYW5uZWxzL3tub3RpZmljYXRpb25fY2hhbm5lbH1iBnByb3RvMw", [file_google_api_resource, file_google_cloud_aiplatform_v1_io]);

/**
 * The objective configuration for model monitoring, including the information
 * needed to detect anomalies for one particular model.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig
 */
export type ModelMonitoringObjectiveConfig = Message<"google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig"> & {
  /**
   * Training dataset for models. This field has to be set only if
   * TrainingPredictionSkewDetectionConfig is specified.
   *
   * @generated from field: google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.TrainingDataset training_dataset = 1;
   */
  trainingDataset?: ModelMonitoringObjectiveConfig_TrainingDataset;

  /**
   * The config for skew between training data and prediction data.
   *
   * @generated from field: google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.TrainingPredictionSkewDetectionConfig training_prediction_skew_detection_config = 2;
   */
  trainingPredictionSkewDetectionConfig?: ModelMonitoringObjectiveConfig_TrainingPredictionSkewDetectionConfig;

  /**
   * The config for drift of prediction data.
   *
   * @generated from field: google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.PredictionDriftDetectionConfig prediction_drift_detection_config = 3;
   */
  predictionDriftDetectionConfig?: ModelMonitoringObjectiveConfig_PredictionDriftDetectionConfig;

  /**
   * The config for integrating with Vertex Explainable AI.
   *
   * @generated from field: google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig explanation_config = 5;
   */
  explanationConfig?: ModelMonitoringObjectiveConfig_ExplanationConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.
 * Use `create(ModelMonitoringObjectiveConfigSchema)` to create a new message.
 */
export const ModelMonitoringObjectiveConfigSchema: GenMessage<ModelMonitoringObjectiveConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 0);

/**
 * Training Dataset information.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.TrainingDataset
 */
export type ModelMonitoringObjectiveConfig_TrainingDataset = Message<"google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.TrainingDataset"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.TrainingDataset.data_source
   */
  dataSource: {
    /**
     * The resource name of the Dataset used to train this Model.
     *
     * @generated from field: string dataset = 3;
     */
    value: string;
    case: "dataset";
  } | {
    /**
     * The Google Cloud Storage uri of the unmanaged Dataset used to train
     * this Model.
     *
     * @generated from field: google.cloud.aiplatform.v1.GcsSource gcs_source = 4;
     */
    value: GcsSource;
    case: "gcsSource";
  } | {
    /**
     * The BigQuery table of the unmanaged Dataset used to train this
     * Model.
     *
     * @generated from field: google.cloud.aiplatform.v1.BigQuerySource bigquery_source = 5;
     */
    value: BigQuerySource;
    case: "bigquerySource";
  } | { case: undefined; value?: undefined };

  /**
   * Data format of the dataset, only applicable if the input is from
   * Google Cloud Storage.
   * The possible formats are:
   *
   * "tf-record"
   * The source file is a TFRecord file.
   *
   * "csv"
   * The source file is a CSV file.
   * "jsonl"
   * The source file is a JSONL file.
   *
   * @generated from field: string data_format = 2;
   */
  dataFormat: string;

  /**
   * The target field name the model is to predict.
   * This field will be excluded when doing Predict and (or) Explain for the
   * training data.
   *
   * @generated from field: string target_field = 6;
   */
  targetField: string;

  /**
   * Strategy to sample data from Training Dataset.
   * If not set, we process the whole dataset.
   *
   * @generated from field: google.cloud.aiplatform.v1.SamplingStrategy logging_sampling_strategy = 7;
   */
  loggingSamplingStrategy?: SamplingStrategy;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.TrainingDataset.
 * Use `create(ModelMonitoringObjectiveConfig_TrainingDatasetSchema)` to create a new message.
 */
export const ModelMonitoringObjectiveConfig_TrainingDatasetSchema: GenMessage<ModelMonitoringObjectiveConfig_TrainingDataset> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 0, 0);

/**
 * The config for Training & Prediction data skew detection. It specifies the
 * training dataset sources and the skew detection parameters.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.TrainingPredictionSkewDetectionConfig
 */
export type ModelMonitoringObjectiveConfig_TrainingPredictionSkewDetectionConfig = Message<"google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.TrainingPredictionSkewDetectionConfig"> & {
  /**
   * Key is the feature name and value is the threshold. If a feature needs to
   * be monitored for skew, a value threshold must be configured for that
   * feature. The threshold here is against feature distribution distance
   * between the training and prediction feature.
   *
   * @generated from field: map<string, google.cloud.aiplatform.v1.ThresholdConfig> skew_thresholds = 1;
   */
  skewThresholds: { [key: string]: ThresholdConfig };

  /**
   * Key is the feature name and value is the threshold. The threshold here is
   * against attribution score distance between the training and prediction
   * feature.
   *
   * @generated from field: map<string, google.cloud.aiplatform.v1.ThresholdConfig> attribution_score_skew_thresholds = 2;
   */
  attributionScoreSkewThresholds: { [key: string]: ThresholdConfig };

  /**
   * Skew anomaly detection threshold used by all features.
   * When the per-feature thresholds are not set, this field can be used to
   * specify a threshold for all features.
   *
   * @generated from field: google.cloud.aiplatform.v1.ThresholdConfig default_skew_threshold = 6;
   */
  defaultSkewThreshold?: ThresholdConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.TrainingPredictionSkewDetectionConfig.
 * Use `create(ModelMonitoringObjectiveConfig_TrainingPredictionSkewDetectionConfigSchema)` to create a new message.
 */
export const ModelMonitoringObjectiveConfig_TrainingPredictionSkewDetectionConfigSchema: GenMessage<ModelMonitoringObjectiveConfig_TrainingPredictionSkewDetectionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 0, 1);

/**
 * The config for Prediction data drift detection.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.PredictionDriftDetectionConfig
 */
export type ModelMonitoringObjectiveConfig_PredictionDriftDetectionConfig = Message<"google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.PredictionDriftDetectionConfig"> & {
  /**
   * Key is the feature name and value is the threshold. If a feature needs to
   * be monitored for drift, a value threshold must be configured for that
   * feature. The threshold here is against feature distribution distance
   * between different time windws.
   *
   * @generated from field: map<string, google.cloud.aiplatform.v1.ThresholdConfig> drift_thresholds = 1;
   */
  driftThresholds: { [key: string]: ThresholdConfig };

  /**
   * Key is the feature name and value is the threshold. The threshold here is
   * against attribution score distance between different time windows.
   *
   * @generated from field: map<string, google.cloud.aiplatform.v1.ThresholdConfig> attribution_score_drift_thresholds = 2;
   */
  attributionScoreDriftThresholds: { [key: string]: ThresholdConfig };

  /**
   * Drift anomaly detection threshold used by all features.
   * When the per-feature thresholds are not set, this field can be used to
   * specify a threshold for all features.
   *
   * @generated from field: google.cloud.aiplatform.v1.ThresholdConfig default_drift_threshold = 5;
   */
  defaultDriftThreshold?: ThresholdConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.PredictionDriftDetectionConfig.
 * Use `create(ModelMonitoringObjectiveConfig_PredictionDriftDetectionConfigSchema)` to create a new message.
 */
export const ModelMonitoringObjectiveConfig_PredictionDriftDetectionConfigSchema: GenMessage<ModelMonitoringObjectiveConfig_PredictionDriftDetectionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 0, 2);

/**
 * The config for integrating with Vertex Explainable AI. Only applicable if
 * the Model has explanation_spec populated.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig
 */
export type ModelMonitoringObjectiveConfig_ExplanationConfig = Message<"google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig"> & {
  /**
   * If want to analyze the Vertex Explainable AI feature attribute scores or
   * not. If set to true, Vertex AI will log the feature attributions from
   * explain response and do the skew/drift detection for them.
   *
   * @generated from field: bool enable_feature_attributes = 1;
   */
  enableFeatureAttributes: boolean;

  /**
   * Predictions generated by the BatchPredictionJob using baseline dataset.
   *
   * @generated from field: google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig.ExplanationBaseline explanation_baseline = 2;
   */
  explanationBaseline?: ModelMonitoringObjectiveConfig_ExplanationConfig_ExplanationBaseline;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig.
 * Use `create(ModelMonitoringObjectiveConfig_ExplanationConfigSchema)` to create a new message.
 */
export const ModelMonitoringObjectiveConfig_ExplanationConfigSchema: GenMessage<ModelMonitoringObjectiveConfig_ExplanationConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 0, 3);

/**
 * Output from
 * [BatchPredictionJob][google.cloud.aiplatform.v1.BatchPredictionJob] for
 * Model Monitoring baseline dataset, which can be used to generate baseline
 * attribution scores.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig.ExplanationBaseline
 */
export type ModelMonitoringObjectiveConfig_ExplanationConfig_ExplanationBaseline = Message<"google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig.ExplanationBaseline"> & {
  /**
   * The configuration specifying of BatchExplain job output. This can be
   * used to generate the baseline of feature attribution scores.
   *
   * @generated from oneof google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig.ExplanationBaseline.destination
   */
  destination: {
    /**
     * Cloud Storage location for BatchExplain output.
     *
     * @generated from field: google.cloud.aiplatform.v1.GcsDestination gcs = 2;
     */
    value: GcsDestination;
    case: "gcs";
  } | {
    /**
     * BigQuery location for BatchExplain output.
     *
     * @generated from field: google.cloud.aiplatform.v1.BigQueryDestination bigquery = 3;
     */
    value: BigQueryDestination;
    case: "bigquery";
  } | { case: undefined; value?: undefined };

  /**
   * The storage format of the predictions generated BatchPrediction job.
   *
   * @generated from field: google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig.ExplanationBaseline.PredictionFormat prediction_format = 1;
   */
  predictionFormat: ModelMonitoringObjectiveConfig_ExplanationConfig_ExplanationBaseline_PredictionFormat;
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig.ExplanationBaseline.
 * Use `create(ModelMonitoringObjectiveConfig_ExplanationConfig_ExplanationBaselineSchema)` to create a new message.
 */
export const ModelMonitoringObjectiveConfig_ExplanationConfig_ExplanationBaselineSchema: GenMessage<ModelMonitoringObjectiveConfig_ExplanationConfig_ExplanationBaseline> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 0, 3, 0);

/**
 * The storage format of the predictions generated BatchPrediction job.
 *
 * @generated from enum google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig.ExplanationBaseline.PredictionFormat
 */
export enum ModelMonitoringObjectiveConfig_ExplanationConfig_ExplanationBaseline_PredictionFormat {
  /**
   * Should not be set.
   *
   * @generated from enum value: PREDICTION_FORMAT_UNSPECIFIED = 0;
   */
  PREDICTION_FORMAT_UNSPECIFIED = 0,

  /**
   * Predictions are in JSONL files.
   *
   * @generated from enum value: JSONL = 2;
   */
  JSONL = 2,

  /**
   * Predictions are in BigQuery.
   *
   * @generated from enum value: BIGQUERY = 3;
   */
  BIGQUERY = 3,
}

/**
 * Describes the enum google.cloud.aiplatform.v1.ModelMonitoringObjectiveConfig.ExplanationConfig.ExplanationBaseline.PredictionFormat.
 */
export const ModelMonitoringObjectiveConfig_ExplanationConfig_ExplanationBaseline_PredictionFormatSchema: GenEnum<ModelMonitoringObjectiveConfig_ExplanationConfig_ExplanationBaseline_PredictionFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1_model_monitoring, 0, 3, 0, 0);

/**
 * The alert config for model monitoring.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelMonitoringAlertConfig
 */
export type ModelMonitoringAlertConfig = Message<"google.cloud.aiplatform.v1.ModelMonitoringAlertConfig"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.ModelMonitoringAlertConfig.alert
   */
  alert: {
    /**
     * Email alert config.
     *
     * @generated from field: google.cloud.aiplatform.v1.ModelMonitoringAlertConfig.EmailAlertConfig email_alert_config = 1;
     */
    value: ModelMonitoringAlertConfig_EmailAlertConfig;
    case: "emailAlertConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Dump the anomalies to Cloud Logging. The anomalies will be put to json
   * payload encoded from proto
   * [google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry][].
   * This can be further sinked to Pub/Sub or any other services supported
   * by Cloud Logging.
   *
   * @generated from field: bool enable_logging = 2;
   */
  enableLogging: boolean;

  /**
   * Resource names of the NotificationChannels to send alert.
   * Must be of the format
   * `projects/<project_id_or_number>/notificationChannels/<channel_id>`
   *
   * @generated from field: repeated string notification_channels = 3;
   */
  notificationChannels: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelMonitoringAlertConfig.
 * Use `create(ModelMonitoringAlertConfigSchema)` to create a new message.
 */
export const ModelMonitoringAlertConfigSchema: GenMessage<ModelMonitoringAlertConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 1);

/**
 * The config for email alert.
 *
 * @generated from message google.cloud.aiplatform.v1.ModelMonitoringAlertConfig.EmailAlertConfig
 */
export type ModelMonitoringAlertConfig_EmailAlertConfig = Message<"google.cloud.aiplatform.v1.ModelMonitoringAlertConfig.EmailAlertConfig"> & {
  /**
   * The email addresses to send the alert.
   *
   * @generated from field: repeated string user_emails = 1;
   */
  userEmails: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1.ModelMonitoringAlertConfig.EmailAlertConfig.
 * Use `create(ModelMonitoringAlertConfig_EmailAlertConfigSchema)` to create a new message.
 */
export const ModelMonitoringAlertConfig_EmailAlertConfigSchema: GenMessage<ModelMonitoringAlertConfig_EmailAlertConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 1, 0);

/**
 * The config for feature monitoring threshold.
 *
 * @generated from message google.cloud.aiplatform.v1.ThresholdConfig
 */
export type ThresholdConfig = Message<"google.cloud.aiplatform.v1.ThresholdConfig"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1.ThresholdConfig.threshold
   */
  threshold: {
    /**
     * Specify a threshold value that can trigger the alert.
     * If this threshold config is for feature distribution distance:
     *   1. For categorical feature, the distribution distance is calculated by
     *      L-inifinity norm.
     *   2. For numerical feature, the distribution distance is calculated by
     *      Jensen–Shannon divergence.
     * Each feature must have a non-zero threshold if they need to be monitored.
     * Otherwise no alert will be triggered for that feature.
     *
     * @generated from field: double value = 1;
     */
    value: number;
    case: "value";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1.ThresholdConfig.
 * Use `create(ThresholdConfigSchema)` to create a new message.
 */
export const ThresholdConfigSchema: GenMessage<ThresholdConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 2);

/**
 * Sampling Strategy for logging, can be for both training and prediction
 * dataset.
 *
 * @generated from message google.cloud.aiplatform.v1.SamplingStrategy
 */
export type SamplingStrategy = Message<"google.cloud.aiplatform.v1.SamplingStrategy"> & {
  /**
   * Random sample config. Will support more sampling strategies later.
   *
   * @generated from field: google.cloud.aiplatform.v1.SamplingStrategy.RandomSampleConfig random_sample_config = 1;
   */
  randomSampleConfig?: SamplingStrategy_RandomSampleConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SamplingStrategy.
 * Use `create(SamplingStrategySchema)` to create a new message.
 */
export const SamplingStrategySchema: GenMessage<SamplingStrategy> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 3);

/**
 * Requests are randomly selected.
 *
 * @generated from message google.cloud.aiplatform.v1.SamplingStrategy.RandomSampleConfig
 */
export type SamplingStrategy_RandomSampleConfig = Message<"google.cloud.aiplatform.v1.SamplingStrategy.RandomSampleConfig"> & {
  /**
   * Sample rate (0, 1]
   *
   * @generated from field: double sample_rate = 1;
   */
  sampleRate: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1.SamplingStrategy.RandomSampleConfig.
 * Use `create(SamplingStrategy_RandomSampleConfigSchema)` to create a new message.
 */
export const SamplingStrategy_RandomSampleConfigSchema: GenMessage<SamplingStrategy_RandomSampleConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1_model_monitoring, 3, 0);

