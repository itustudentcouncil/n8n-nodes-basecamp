// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/tool.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Schema } from "./openapi_pb";
import { file_google_cloud_aiplatform_v1beta1_openapi } from "./openapi_pb";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/tool.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_tool: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL3Rvb2wucHJvdG8SH2dvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEiggIKBFRvb2wSWAoVZnVuY3Rpb25fZGVjbGFyYXRpb25zGAEgAygLMjQuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5GdW5jdGlvbkRlY2xhcmF0aW9uQgPgQQESQgoJcmV0cmlldmFsGAIgASgLMiouZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5SZXRyaWV2YWxCA+BBARJcChdnb29nbGVfc2VhcmNoX3JldHJpZXZhbBgDIAEoCzI2Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuR29vZ2xlU2VhcmNoUmV0cmlldmFsQgPgQQEisAMKDlRvb2xVc2VFeGFtcGxlEmEKE2V4dGVuc2lvbl9vcGVyYXRpb24YCiABKAsyQi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlRvb2xVc2VFeGFtcGxlLkV4dGVuc2lvbk9wZXJhdGlvbkgAEhcKDWZ1bmN0aW9uX25hbWUYCyABKAlIABIZCgxkaXNwbGF5X25hbWUYASABKAlCA+BBAhISCgVxdWVyeRgCIAEoCUID4EECEi8KDnJlcXVlc3RfcGFyYW1zGAMgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIwCg9yZXNwb25zZV9wYXJhbXMYBCABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EhgKEHJlc3BvbnNlX3N1bW1hcnkYBSABKAkabAoSRXh0ZW5zaW9uT3BlcmF0aW9uEjsKCWV4dGVuc2lvbhgBIAEoCUIo+kElCiNhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL0V4dGVuc2lvbhIZCgxvcGVyYXRpb25faWQYAiABKAlCA+BBAkIICgZUYXJnZXQixAEKE0Z1bmN0aW9uRGVjbGFyYXRpb24SEQoEbmFtZRgBIAEoCUID4EECEhgKC2Rlc2NyaXB0aW9uGAIgASgJQgPgQQESQAoKcGFyYW1ldGVycxgDIAEoCzInLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuU2NoZW1hQgPgQQESPgoIcmVzcG9uc2UYBCABKAsyJy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlNjaGVtYUID4EEBIk0KDEZ1bmN0aW9uQ2FsbBIRCgRuYW1lGAEgASgJQgPgQQISKgoEYXJncxgCIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCA+BBASJVChBGdW5jdGlvblJlc3BvbnNlEhEKBG5hbWUYASABKAlCA+BBAhIuCghyZXNwb25zZRgCIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCA+BBAiLTAQoJUmV0cmlldmFsEksKEHZlcnRleF9haV9zZWFyY2gYAiABKAsyLy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlZlcnRleEFJU2VhcmNoSAASSwoQdmVydGV4X3JhZ19zdG9yZRgEIAEoCzIvLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuVmVydGV4UmFnU3RvcmVIABIiChNkaXNhYmxlX2F0dHJpYnV0aW9uGAMgASgIQgUYAeBBAUIICgZzb3VyY2UinAMKDlZlcnRleFJhZ1N0b3JlEkIKC3JhZ19jb3Jwb3JhGAEgAygJQi0YAeBBAfpBJQojYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9SYWdDb3JwdXMSVwoNcmFnX3Jlc291cmNlcxgEIAMoCzI7Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuVmVydGV4UmFnU3RvcmUuUmFnUmVzb3VyY2VCA+BBARIiChBzaW1pbGFyaXR5X3RvcF9rGAIgASgFQgPgQQFIAIgBARIrChl2ZWN0b3JfZGlzdGFuY2VfdGhyZXNob2xkGAMgASgBQgPgQQFIAYgBARppCgtSYWdSZXNvdXJjZRI/CgpyYWdfY29ycHVzGAEgASgJQivgQQH6QSUKI2FpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vUmFnQ29ycHVzEhkKDHJhZ19maWxlX2lkcxgCIAMoCUID4EEBQhMKEV9zaW1pbGFyaXR5X3RvcF9rQhwKGl92ZWN0b3JfZGlzdGFuY2VfdGhyZXNob2xkIigKDlZlcnRleEFJU2VhcmNoEhYKCWRhdGFzdG9yZRgBIAEoCUID4EECIhcKFUdvb2dsZVNlYXJjaFJldHJpZXZhbCJqCgpUb29sQ29uZmlnElwKF2Z1bmN0aW9uX2NhbGxpbmdfY29uZmlnGAEgASgLMjYuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5GdW5jdGlvbkNhbGxpbmdDb25maWdCA+BBASLHAQoVRnVuY3Rpb25DYWxsaW5nQ29uZmlnEk4KBG1vZGUYASABKA4yOy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkZ1bmN0aW9uQ2FsbGluZ0NvbmZpZy5Nb2RlQgPgQQESIwoWYWxsb3dlZF9mdW5jdGlvbl9uYW1lcxgCIAMoCUID4EEBIjkKBE1vZGUSFAoQTU9ERV9VTlNQRUNJRklFRBAAEggKBEFVVE8QARIHCgNBTlkQAhIICgROT05FEANC4AEKI2NvbS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExQglUb29sUHJvdG9QAVpDY2xvdWQuZ29vZ2xlLmNvbS9nby9haXBsYXRmb3JtL2FwaXYxYmV0YTEvYWlwbGF0Zm9ybXBiO2FpcGxhdGZvcm1wYqoCH0dvb2dsZS5DbG91ZC5BSVBsYXRmb3JtLlYxQmV0YTHKAh9Hb29nbGVcQ2xvdWRcQUlQbGF0Zm9ybVxWMWJldGEx6gIiR29vZ2xlOjpDbG91ZDo6QUlQbGF0Zm9ybTo6VjFiZXRhMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1beta1_openapi, file_google_protobuf_struct]);

/**
 * Tool details that the model may use to generate response.
 *
 * A `Tool` is a piece of code that enables the system to interact with
 * external systems to perform an action, or set of actions, outside of
 * knowledge and scope of the model. A Tool object should contain exactly
 * one type of Tool (e.g FunctionDeclaration, Retrieval or
 * GoogleSearchRetrieval).
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Tool
 */
export type Tool = Message<"google.cloud.aiplatform.v1beta1.Tool"> & {
  /**
   * Optional. Function tool type.
   * One or more function declarations to be passed to the model along with the
   * current user query. Model may decide to call a subset of these functions
   * by populating [FunctionCall][content.part.function_call] in the response.
   * User should provide a [FunctionResponse][content.part.function_response]
   * for each function call in the next turn. Based on the function responses,
   * Model will generate the final response back to the user.
   * Maximum 64 function declarations can be provided.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.FunctionDeclaration function_declarations = 1;
   */
  functionDeclarations: FunctionDeclaration[];

  /**
   * Optional. Retrieval tool type.
   * System will always execute the provided retrieval tool(s) to get external
   * knowledge to answer the prompt. Retrieval results are presented to the
   * model for generation.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Retrieval retrieval = 2;
   */
  retrieval?: Retrieval;

  /**
   * Optional. GoogleSearchRetrieval tool type.
   * Specialized retrieval tool that is powered by Google search.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GoogleSearchRetrieval google_search_retrieval = 3;
   */
  googleSearchRetrieval?: GoogleSearchRetrieval;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Tool.
 * Use `create(ToolSchema)` to create a new message.
 */
export const ToolSchema: GenMessage<Tool> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 0);

/**
 * A single example of the tool usage.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ToolUseExample
 */
export type ToolUseExample = Message<"google.cloud.aiplatform.v1beta1.ToolUseExample"> & {
  /**
   * Target tool to use.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.ToolUseExample.Target
   */
  Target: {
    /**
     * Extension operation to call.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.ToolUseExample.ExtensionOperation extension_operation = 10;
     */
    value: ToolUseExample_ExtensionOperation;
    case: "extensionOperation";
  } | {
    /**
     * Function name to call.
     *
     * @generated from field: string function_name = 11;
     */
    value: string;
    case: "functionName";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The display name for example.
   *
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * Required. Query that should be routed to this tool.
   *
   * @generated from field: string query = 2;
   */
  query: string;

  /**
   * Request parameters used for executing this tool.
   *
   * @generated from field: google.protobuf.Struct request_params = 3;
   */
  requestParams?: JsonObject;

  /**
   * Response parameters generated by this tool.
   *
   * @generated from field: google.protobuf.Struct response_params = 4;
   */
  responseParams?: JsonObject;

  /**
   * Summary of the tool response to the user query.
   *
   * @generated from field: string response_summary = 5;
   */
  responseSummary: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ToolUseExample.
 * Use `create(ToolUseExampleSchema)` to create a new message.
 */
export const ToolUseExampleSchema: GenMessage<ToolUseExample> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 1);

/**
 * Identifies one operation of the extension.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ToolUseExample.ExtensionOperation
 */
export type ToolUseExample_ExtensionOperation = Message<"google.cloud.aiplatform.v1beta1.ToolUseExample.ExtensionOperation"> & {
  /**
   * Resource name of the extension.
   *
   * @generated from field: string extension = 1;
   */
  extension: string;

  /**
   * Required. Operation ID of the extension.
   *
   * @generated from field: string operation_id = 2;
   */
  operationId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ToolUseExample.ExtensionOperation.
 * Use `create(ToolUseExample_ExtensionOperationSchema)` to create a new message.
 */
export const ToolUseExample_ExtensionOperationSchema: GenMessage<ToolUseExample_ExtensionOperation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 1, 0);

/**
 * Structured representation of a function declaration as defined by the
 * [OpenAPI 3.0 specification](https://spec.openapis.org/oas/v3.0.3). Included
 * in this declaration are the function name and parameters. This
 * FunctionDeclaration is a representation of a block of code that can be used
 * as a `Tool` by the model and executed by the client.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FunctionDeclaration
 */
export type FunctionDeclaration = Message<"google.cloud.aiplatform.v1beta1.FunctionDeclaration"> & {
  /**
   * Required. The name of the function to call.
   * Must start with a letter or an underscore.
   * Must be a-z, A-Z, 0-9, or contain underscores, dots and dashes, with a
   * maximum length of 64.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Description and purpose of the function.
   * Model uses it to decide how and whether to call the function.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Optional. Describes the parameters to this function in JSON Schema Object
   * format. Reflects the Open API 3.03 Parameter Object. string Key: the name
   * of the parameter. Parameter names are case sensitive. Schema Value: the
   * Schema defining the type used for the parameter. For function with no
   * parameters, this can be left unset. Parameter names must start with a
   * letter or an underscore and must only contain chars a-z, A-Z, 0-9, or
   * underscores with a maximum length of 64. Example with 1 required and 1
   * optional parameter: type: OBJECT properties:
   *  param1:
   *    type: STRING
   *  param2:
   *    type: INTEGER
   * required:
   *  - param1
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Schema parameters = 3;
   */
  parameters?: Schema;

  /**
   * Optional. Describes the output from this function in JSON Schema format.
   * Reflects the Open API 3.03 Response Object. The Schema defines the type
   * used for the response value of the function.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Schema response = 4;
   */
  response?: Schema;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FunctionDeclaration.
 * Use `create(FunctionDeclarationSchema)` to create a new message.
 */
export const FunctionDeclarationSchema: GenMessage<FunctionDeclaration> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 2);

/**
 * A predicted [FunctionCall] returned from the model that contains a string
 * representing the [FunctionDeclaration.name] and a structured JSON object
 * containing the parameters and their values.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FunctionCall
 */
export type FunctionCall = Message<"google.cloud.aiplatform.v1beta1.FunctionCall"> & {
  /**
   * Required. The name of the function to call.
   * Matches [FunctionDeclaration.name].
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Required. The function parameters and values in JSON object
   * format. See [FunctionDeclaration.parameters] for parameter details.
   *
   * @generated from field: google.protobuf.Struct args = 2;
   */
  args?: JsonObject;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FunctionCall.
 * Use `create(FunctionCallSchema)` to create a new message.
 */
export const FunctionCallSchema: GenMessage<FunctionCall> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 3);

/**
 * The result output from a [FunctionCall] that contains a string representing
 * the [FunctionDeclaration.name] and a structured JSON object containing any
 * output from the function is used as context to the model. This should contain
 * the result of a [FunctionCall] made based on model prediction.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FunctionResponse
 */
export type FunctionResponse = Message<"google.cloud.aiplatform.v1beta1.FunctionResponse"> & {
  /**
   * Required. The name of the function to call.
   * Matches [FunctionDeclaration.name] and [FunctionCall.name].
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The function response in JSON object format.
   *
   * @generated from field: google.protobuf.Struct response = 2;
   */
  response?: JsonObject;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FunctionResponse.
 * Use `create(FunctionResponseSchema)` to create a new message.
 */
export const FunctionResponseSchema: GenMessage<FunctionResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 4);

/**
 * Defines a retrieval tool that model can call to access external knowledge.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Retrieval
 */
export type Retrieval = Message<"google.cloud.aiplatform.v1beta1.Retrieval"> & {
  /**
   * The source of the retrieval.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.Retrieval.source
   */
  source: {
    /**
     * Set to use data source powered by Vertex AI Search.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.VertexAISearch vertex_ai_search = 2;
     */
    value: VertexAISearch;
    case: "vertexAiSearch";
  } | {
    /**
     * Set to use data source powered by Vertex RAG store.
     * User data is uploaded via the VertexRagDataService.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.VertexRagStore vertex_rag_store = 4;
     */
    value: VertexRagStore;
    case: "vertexRagStore";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. Deprecated. This option is no longer supported.
   *
   * @generated from field: bool disable_attribution = 3 [deprecated = true];
   * @deprecated
   */
  disableAttribution: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Retrieval.
 * Use `create(RetrievalSchema)` to create a new message.
 */
export const RetrievalSchema: GenMessage<Retrieval> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 5);

/**
 * Retrieve from Vertex RAG Store for grounding.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.VertexRagStore
 */
export type VertexRagStore = Message<"google.cloud.aiplatform.v1beta1.VertexRagStore"> & {
  /**
   * Optional. Deprecated. Please use rag_resources instead.
   *
   * @generated from field: repeated string rag_corpora = 1 [deprecated = true];
   * @deprecated
   */
  ragCorpora: string[];

  /**
   * Optional. The representation of the rag source. It can be used to specify
   * corpus only or ragfiles. Currently only support one corpus or multiple
   * files from one corpus. In the future we may open up multiple corpora
   * support.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.VertexRagStore.RagResource rag_resources = 4;
   */
  ragResources: VertexRagStore_RagResource[];

  /**
   * Optional. Number of top k results to return from the selected corpora.
   *
   * @generated from field: optional int32 similarity_top_k = 2;
   */
  similarityTopK?: number;

  /**
   * Optional. Only return results with vector distance smaller than the
   * threshold.
   *
   * @generated from field: optional double vector_distance_threshold = 3;
   */
  vectorDistanceThreshold?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.VertexRagStore.
 * Use `create(VertexRagStoreSchema)` to create a new message.
 */
export const VertexRagStoreSchema: GenMessage<VertexRagStore> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 6);

/**
 * The definition of the Rag resource.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.VertexRagStore.RagResource
 */
export type VertexRagStore_RagResource = Message<"google.cloud.aiplatform.v1beta1.VertexRagStore.RagResource"> & {
  /**
   * Optional. RagCorpora resource name.
   * Format:
   * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
   *
   * @generated from field: string rag_corpus = 1;
   */
  ragCorpus: string;

  /**
   * Optional. rag_file_id. The files should be in the same rag_corpus set in
   * rag_corpus field.
   *
   * @generated from field: repeated string rag_file_ids = 2;
   */
  ragFileIds: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.VertexRagStore.RagResource.
 * Use `create(VertexRagStore_RagResourceSchema)` to create a new message.
 */
export const VertexRagStore_RagResourceSchema: GenMessage<VertexRagStore_RagResource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 6, 0);

/**
 * Retrieve from Vertex AI Search datastore for grounding.
 * See https://cloud.google.com/vertex-ai-search-and-conversation
 *
 * @generated from message google.cloud.aiplatform.v1beta1.VertexAISearch
 */
export type VertexAISearch = Message<"google.cloud.aiplatform.v1beta1.VertexAISearch"> & {
  /**
   * Required. Fully-qualified Vertex AI Search's datastore resource ID.
   * Format:
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
   *
   * @generated from field: string datastore = 1;
   */
  datastore: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.VertexAISearch.
 * Use `create(VertexAISearchSchema)` to create a new message.
 */
export const VertexAISearchSchema: GenMessage<VertexAISearch> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 7);

/**
 * Tool to retrieve public web data for grounding, powered by Google.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GoogleSearchRetrieval
 */
export type GoogleSearchRetrieval = Message<"google.cloud.aiplatform.v1beta1.GoogleSearchRetrieval"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GoogleSearchRetrieval.
 * Use `create(GoogleSearchRetrievalSchema)` to create a new message.
 */
export const GoogleSearchRetrievalSchema: GenMessage<GoogleSearchRetrieval> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 8);

/**
 * Tool config. This config is shared for all tools provided in the request.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ToolConfig
 */
export type ToolConfig = Message<"google.cloud.aiplatform.v1beta1.ToolConfig"> & {
  /**
   * Optional. Function calling config.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.FunctionCallingConfig function_calling_config = 1;
   */
  functionCallingConfig?: FunctionCallingConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ToolConfig.
 * Use `create(ToolConfigSchema)` to create a new message.
 */
export const ToolConfigSchema: GenMessage<ToolConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 9);

/**
 * Function calling config.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FunctionCallingConfig
 */
export type FunctionCallingConfig = Message<"google.cloud.aiplatform.v1beta1.FunctionCallingConfig"> & {
  /**
   * Optional. Function calling mode.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.FunctionCallingConfig.Mode mode = 1;
   */
  mode: FunctionCallingConfig_Mode;

  /**
   * Optional. Function names to call. Only set when the Mode is ANY. Function
   * names should match [FunctionDeclaration.name]. With mode set to ANY, model
   * will predict a function call from the set of function names provided.
   *
   * @generated from field: repeated string allowed_function_names = 2;
   */
  allowedFunctionNames: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FunctionCallingConfig.
 * Use `create(FunctionCallingConfigSchema)` to create a new message.
 */
export const FunctionCallingConfigSchema: GenMessage<FunctionCallingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_tool, 10);

/**
 * Function calling mode.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.FunctionCallingConfig.Mode
 */
export enum FunctionCallingConfig_Mode {
  /**
   * Unspecified function calling mode. This value should not be used.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * Default model behavior, model decides to predict either a function call
   * or a natural language response.
   *
   * @generated from enum value: AUTO = 1;
   */
  AUTO = 1,

  /**
   * Model is constrained to always predicting a function call only.
   * If "allowed_function_names" are set, the predicted function call will be
   * limited to any one of "allowed_function_names", else the predicted
   * function call will be any one of the provided "function_declarations".
   *
   * @generated from enum value: ANY = 2;
   */
  ANY = 2,

  /**
   * Model will not predict any function call. Model behavior is same as when
   * not passing any function declarations.
   *
   * @generated from enum value: NONE = 3;
   */
  NONE = 3,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.FunctionCallingConfig.Mode.
 */
export const FunctionCallingConfig_ModeSchema: GenEnum<FunctionCallingConfig_Mode> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_tool, 10, 0);

