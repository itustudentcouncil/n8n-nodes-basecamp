// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/model_monitoring_service.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ModelMonitor, ModelMonitorSchema } from "./model_monitor_pb";
import { file_google_cloud_aiplatform_v1beta1_model_monitor } from "./model_monitor_pb";
import type { ModelMonitoringAlert } from "./model_monitoring_alert_pb";
import { file_google_cloud_aiplatform_v1beta1_model_monitoring_alert } from "./model_monitoring_alert_pb";
import type { ModelMonitoringJob, ModelMonitoringJobSchema } from "./model_monitoring_job_pb";
import { file_google_cloud_aiplatform_v1beta1_model_monitoring_job } from "./model_monitoring_job_pb";
import type { ModelMonitoringStats, SearchModelMonitoringStatsFilter } from "./model_monitoring_stats_pb";
import { file_google_cloud_aiplatform_v1beta1_model_monitoring_stats } from "./model_monitoring_stats_pb";
import type { GenericOperationMetadata } from "./operation_pb";
import { file_google_cloud_aiplatform_v1beta1_operation } from "./operation_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Interval } from "../../../type/interval_pb";
import { file_google_type_interval } from "../../../type/interval_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/model_monitoring_service.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_model_monitoring_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1beta1_model_monitor, file_google_cloud_aiplatform_v1beta1_model_monitoring_alert, file_google_cloud_aiplatform_v1beta1_model_monitoring_job, file_google_cloud_aiplatform_v1beta1_model_monitoring_stats, file_google_cloud_aiplatform_v1beta1_operation, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_type_interval]);

/**
 * Request message for
 * [ModelMonitoringService.CreateModelMonitor][google.cloud.aiplatform.v1beta1.ModelMonitoringService.CreateModelMonitor].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateModelMonitorRequest
 */
export type CreateModelMonitorRequest = Message<"google.cloud.aiplatform.v1beta1.CreateModelMonitorRequest"> & {
  /**
   * Required. The resource name of the Location to create the ModelMonitor in.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ModelMonitor to create.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitor model_monitor = 2;
   */
  modelMonitor?: ModelMonitor;

  /**
   * Optional. The ID to use for the Model Monitor, which will become the final
   * component of the model monitor resource name.
   *
   * The maximum length is 63 characters, and valid characters are
   * `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
   *
   * @generated from field: string model_monitor_id = 3;
   */
  modelMonitorId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateModelMonitorRequest.
 * Use `create(CreateModelMonitorRequestSchema)` to create a new message.
 */
export const CreateModelMonitorRequestSchema: GenMessage<CreateModelMonitorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 0);

/**
 * Runtime operation information for
 * [ModelMonitoringService.CreateModelMonitor][google.cloud.aiplatform.v1beta1.ModelMonitoringService.CreateModelMonitor].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateModelMonitorOperationMetadata
 */
export type CreateModelMonitorOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.CreateModelMonitorOperationMetadata"> & {
  /**
   * The operation generic information.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateModelMonitorOperationMetadata.
 * Use `create(CreateModelMonitorOperationMetadataSchema)` to create a new message.
 */
export const CreateModelMonitorOperationMetadataSchema: GenMessage<CreateModelMonitorOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 1);

/**
 * Request message for
 * [ModelMonitoringService.UpdateModelMonitor][google.cloud.aiplatform.v1beta1.ModelMonitoringService.UpdateModelMonitor].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateModelMonitorRequest
 */
export type UpdateModelMonitorRequest = Message<"google.cloud.aiplatform.v1beta1.UpdateModelMonitorRequest"> & {
  /**
   * Required. The model monitoring configuration which replaces the resource on
   * the server.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitor model_monitor = 1;
   */
  modelMonitor?: ModelMonitor;

  /**
   * Required. Mask specifying which fields to update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateModelMonitorRequest.
 * Use `create(UpdateModelMonitorRequestSchema)` to create a new message.
 */
export const UpdateModelMonitorRequestSchema: GenMessage<UpdateModelMonitorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 2);

/**
 * Runtime operation information for
 * [ModelMonitoringService.UpdateModelMonitor][google.cloud.aiplatform.v1beta1.ModelMonitoringService.UpdateModelMonitor].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateModelMonitorOperationMetadata
 */
export type UpdateModelMonitorOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.UpdateModelMonitorOperationMetadata"> & {
  /**
   * The operation generic information.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateModelMonitorOperationMetadata.
 * Use `create(UpdateModelMonitorOperationMetadataSchema)` to create a new message.
 */
export const UpdateModelMonitorOperationMetadataSchema: GenMessage<UpdateModelMonitorOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 3);

/**
 * Request message for
 * [ModelMonitoringService.GetModelMonitor][google.cloud.aiplatform.v1beta1.ModelMonitoringService.GetModelMonitor].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetModelMonitorRequest
 */
export type GetModelMonitorRequest = Message<"google.cloud.aiplatform.v1beta1.GetModelMonitorRequest"> & {
  /**
   * Required. The name of the ModelMonitor resource.
   * Format:
   * `projects/{project}/locations/{location}/modelMonitors/{model_monitor}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetModelMonitorRequest.
 * Use `create(GetModelMonitorRequestSchema)` to create a new message.
 */
export const GetModelMonitorRequestSchema: GenMessage<GetModelMonitorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 4);

/**
 * Request message for
 * [ModelMonitoringService.ListModelMonitors][google.cloud.aiplatform.v1beta1.ModelMonitoringService.ListModelMonitors].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelMonitorsRequest
 */
export type ListModelMonitorsRequest = Message<"google.cloud.aiplatform.v1beta1.ListModelMonitorsRequest"> & {
  /**
   * Required. The resource name of the Location to list the ModelMonitors from.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The standard list filter.
   * More detail in [AIP-160](https://google.aip.dev/160).
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The standard list page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The standard list page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelMonitorsRequest.
 * Use `create(ListModelMonitorsRequestSchema)` to create a new message.
 */
export const ListModelMonitorsRequestSchema: GenMessage<ListModelMonitorsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 5);

/**
 * Response message for
 * [ModelMonitoringService.ListModelMonitors][google.cloud.aiplatform.v1beta1.ModelMonitoringService.ListModelMonitors]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelMonitorsResponse
 */
export type ListModelMonitorsResponse = Message<"google.cloud.aiplatform.v1beta1.ListModelMonitorsResponse"> & {
  /**
   * List of ModelMonitor in the requested page.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.ModelMonitor model_monitors = 1;
   */
  modelMonitors: ModelMonitor[];

  /**
   * A token to retrieve the next page of results.
   * Pass to
   * [ListModelMonitorsRequest.page_token][google.cloud.aiplatform.v1beta1.ListModelMonitorsRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelMonitorsResponse.
 * Use `create(ListModelMonitorsResponseSchema)` to create a new message.
 */
export const ListModelMonitorsResponseSchema: GenMessage<ListModelMonitorsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 6);

/**
 * Request message for
 * [ModelMonitoringService.DeleteModelMonitor][google.cloud.aiplatform.v1beta1.ModelMonitoringService.DeleteModelMonitor].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteModelMonitorRequest
 */
export type DeleteModelMonitorRequest = Message<"google.cloud.aiplatform.v1beta1.DeleteModelMonitorRequest"> & {
  /**
   * Required. The name of the ModelMonitor resource to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/modelMonitords/{model_monitor}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Force delete the model monitor with schedules.
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteModelMonitorRequest.
 * Use `create(DeleteModelMonitorRequestSchema)` to create a new message.
 */
export const DeleteModelMonitorRequestSchema: GenMessage<DeleteModelMonitorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 7);

/**
 * Request message for
 * [ModelMonitoringService.CreateModelMonitoringJob][google.cloud.aiplatform.v1beta1.ModelMonitoringService.CreateModelMonitoringJob].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateModelMonitoringJobRequest
 */
export type CreateModelMonitoringJobRequest = Message<"google.cloud.aiplatform.v1beta1.CreateModelMonitoringJobRequest"> & {
  /**
   * Required. The parent of the ModelMonitoringJob.
   * Format:
   * `projects/{project}/locations/{location}/modelMoniitors/{model_monitor}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ModelMonitoringJob to create
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringJob model_monitoring_job = 2;
   */
  modelMonitoringJob?: ModelMonitoringJob;

  /**
   * Optional. The ID to use for the Model Monitoring Job, which will become the
   * final component of the model monitoring job resource name.
   *
   * The maximum length is 63 characters, and valid characters are
   * `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
   *
   * @generated from field: string model_monitoring_job_id = 3;
   */
  modelMonitoringJobId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateModelMonitoringJobRequest.
 * Use `create(CreateModelMonitoringJobRequestSchema)` to create a new message.
 */
export const CreateModelMonitoringJobRequestSchema: GenMessage<CreateModelMonitoringJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 8);

/**
 * Request message for
 * [ModelMonitoringService.GetModelMonitoringJob][google.cloud.aiplatform.v1beta1.ModelMonitoringService.GetModelMonitoringJob].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetModelMonitoringJobRequest
 */
export type GetModelMonitoringJobRequest = Message<"google.cloud.aiplatform.v1beta1.GetModelMonitoringJobRequest"> & {
  /**
   * Required. The resource name of the ModelMonitoringJob.
   * Format:
   * `projects/{project}/locations/{location}/modelMonitors/{model_monitor}/modelMonitoringJobs/{model_monitoring_job}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetModelMonitoringJobRequest.
 * Use `create(GetModelMonitoringJobRequestSchema)` to create a new message.
 */
export const GetModelMonitoringJobRequestSchema: GenMessage<GetModelMonitoringJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 9);

/**
 * Request message for
 * [ModelMonitoringService.ListModelMonitoringJobs][google.cloud.aiplatform.v1beta1.ModelMonitoringService.ListModelMonitoringJobs].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelMonitoringJobsRequest
 */
export type ListModelMonitoringJobsRequest = Message<"google.cloud.aiplatform.v1beta1.ListModelMonitoringJobsRequest"> & {
  /**
   * Required. The parent of the ModelMonitoringJob.
   * Format:
   * `projects/{project}/locations/{location}/modelMonitors/{model_monitor}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The standard list filter.
   * More detail in [AIP-160](https://google.aip.dev/160).
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The standard list page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The standard list page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Mask specifying which fields to read
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelMonitoringJobsRequest.
 * Use `create(ListModelMonitoringJobsRequestSchema)` to create a new message.
 */
export const ListModelMonitoringJobsRequestSchema: GenMessage<ListModelMonitoringJobsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 10);

/**
 * Response message for
 * [ModelMonitoringService.ListModelMonitoringJobs][google.cloud.aiplatform.v1beta1.ModelMonitoringService.ListModelMonitoringJobs].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelMonitoringJobsResponse
 */
export type ListModelMonitoringJobsResponse = Message<"google.cloud.aiplatform.v1beta1.ListModelMonitoringJobsResponse"> & {
  /**
   * A list of ModelMonitoringJobs that matches the specified filter
   * in the request.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.ModelMonitoringJob model_monitoring_jobs = 1;
   */
  modelMonitoringJobs: ModelMonitoringJob[];

  /**
   * The standard List next-page token.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelMonitoringJobsResponse.
 * Use `create(ListModelMonitoringJobsResponseSchema)` to create a new message.
 */
export const ListModelMonitoringJobsResponseSchema: GenMessage<ListModelMonitoringJobsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 11);

/**
 * Request message for
 * [ModelMonitoringService.DeleteModelMonitoringJob][google.cloud.aiplatform.v1beta1.ModelMonitoringService.DeleteModelMonitoringJob].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteModelMonitoringJobRequest
 */
export type DeleteModelMonitoringJobRequest = Message<"google.cloud.aiplatform.v1beta1.DeleteModelMonitoringJobRequest"> & {
  /**
   * Required. The resource name of the model monitoring job to delete.
   * Format:
   * `projects/{project}/locations/{location}/modelMonitors/{model_monitor}/modelMonitoringJobs/{model_monitoring_job}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteModelMonitoringJobRequest.
 * Use `create(DeleteModelMonitoringJobRequestSchema)` to create a new message.
 */
export const DeleteModelMonitoringJobRequestSchema: GenMessage<DeleteModelMonitoringJobRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 12);

/**
 * Request message for
 * [ModelMonitoringService.SearchModelMonitoringStats][google.cloud.aiplatform.v1beta1.ModelMonitoringService.SearchModelMonitoringStats].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.SearchModelMonitoringStatsRequest
 */
export type SearchModelMonitoringStatsRequest = Message<"google.cloud.aiplatform.v1beta1.SearchModelMonitoringStatsRequest"> & {
  /**
   * Required. ModelMonitor resource name.
   * Format:
   * `projects/{project}/locations/{location}/modelMonitors/{model_monitor}`
   *
   * @generated from field: string model_monitor = 1;
   */
  modelMonitor: string;

  /**
   * Filter for search different stats.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.SearchModelMonitoringStatsFilter stats_filter = 2;
   */
  statsFilter?: SearchModelMonitoringStatsFilter;

  /**
   * The time interval for which results should be returned.
   *
   * @generated from field: google.type.Interval time_interval = 3;
   */
  timeInterval?: Interval;

  /**
   * The standard list page size.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * A page token received from a previous
   * [ModelMonitoringService.SearchModelMonitoringStats][google.cloud.aiplatform.v1beta1.ModelMonitoringService.SearchModelMonitoringStats]
   * call.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.SearchModelMonitoringStatsRequest.
 * Use `create(SearchModelMonitoringStatsRequestSchema)` to create a new message.
 */
export const SearchModelMonitoringStatsRequestSchema: GenMessage<SearchModelMonitoringStatsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 13);

/**
 * Response message for
 * [ModelMonitoringService.SearchModelMonitoringStats][google.cloud.aiplatform.v1beta1.ModelMonitoringService.SearchModelMonitoringStats].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.SearchModelMonitoringStatsResponse
 */
export type SearchModelMonitoringStatsResponse = Message<"google.cloud.aiplatform.v1beta1.SearchModelMonitoringStatsResponse"> & {
  /**
   * Stats retrieved for requested objectives.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.ModelMonitoringStats monitoring_stats = 1;
   */
  monitoringStats: ModelMonitoringStats[];

  /**
   * The page token that can be used by the next
   * [ModelMonitoringService.SearchModelMonitoringStats][google.cloud.aiplatform.v1beta1.ModelMonitoringService.SearchModelMonitoringStats]
   * call.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.SearchModelMonitoringStatsResponse.
 * Use `create(SearchModelMonitoringStatsResponseSchema)` to create a new message.
 */
export const SearchModelMonitoringStatsResponseSchema: GenMessage<SearchModelMonitoringStatsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 14);

/**
 * Request message for
 * [ModelMonitoringService.SearchModelMonitoringAlerts][google.cloud.aiplatform.v1beta1.ModelMonitoringService.SearchModelMonitoringAlerts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.SearchModelMonitoringAlertsRequest
 */
export type SearchModelMonitoringAlertsRequest = Message<"google.cloud.aiplatform.v1beta1.SearchModelMonitoringAlertsRequest"> & {
  /**
   * Required. ModelMonitor resource name.
   * Format:
   * `projects/{project}/locations/{location}/modelMonitors/{model_monitor}`
   *
   * @generated from field: string model_monitor = 1;
   */
  modelMonitor: string;

  /**
   * If non-empty, returns the alerts of this model monitoring job.
   *
   * @generated from field: string model_monitoring_job = 2;
   */
  modelMonitoringJob: string;

  /**
   * If non-empty, returns the alerts in this time interval.
   *
   * @generated from field: google.type.Interval alert_time_interval = 3;
   */
  alertTimeInterval?: Interval;

  /**
   * If non-empty, returns the alerts of this stats_name.
   *
   * @generated from field: string stats_name = 4;
   */
  statsName: string;

  /**
   * If non-empty, returns the alerts of this objective type.
   * Supported monitoring objectives:
   * `raw-feature-drift`
   * `prediction-output-drift`
   * `feature-attribution`
   *
   * @generated from field: string objective_type = 5;
   */
  objectiveType: string;

  /**
   * The standard list page size.
   *
   * @generated from field: int32 page_size = 6;
   */
  pageSize: number;

  /**
   * A page token received from a previous
   * [ModelMonitoringService.SearchModelMonitoringAlerts][google.cloud.aiplatform.v1beta1.ModelMonitoringService.SearchModelMonitoringAlerts]
   * call.
   *
   * @generated from field: string page_token = 7;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.SearchModelMonitoringAlertsRequest.
 * Use `create(SearchModelMonitoringAlertsRequestSchema)` to create a new message.
 */
export const SearchModelMonitoringAlertsRequestSchema: GenMessage<SearchModelMonitoringAlertsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 15);

/**
 * Response message for
 * [ModelMonitoringService.SearchModelMonitoringAlerts][google.cloud.aiplatform.v1beta1.ModelMonitoringService.SearchModelMonitoringAlerts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.SearchModelMonitoringAlertsResponse
 */
export type SearchModelMonitoringAlertsResponse = Message<"google.cloud.aiplatform.v1beta1.SearchModelMonitoringAlertsResponse"> & {
  /**
   * Alerts retrieved for the requested objectives. Sorted by alert time
   * descendingly.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.ModelMonitoringAlert model_monitoring_alerts = 1;
   */
  modelMonitoringAlerts: ModelMonitoringAlert[];

  /**
   * The total number of alerts retrieved by the requested objectives.
   *
   * @generated from field: int64 total_number_alerts = 2;
   */
  totalNumberAlerts: bigint;

  /**
   * The page token that can be used by the next
   * [ModelMonitoringService.SearchModelMonitoringAlerts][google.cloud.aiplatform.v1beta1.ModelMonitoringService.SearchModelMonitoringAlerts]
   * call.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.SearchModelMonitoringAlertsResponse.
 * Use `create(SearchModelMonitoringAlertsResponseSchema)` to create a new message.
 */
export const SearchModelMonitoringAlertsResponseSchema: GenMessage<SearchModelMonitoringAlertsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 16);

/**
 * A service for creating and managing Vertex AI Model moitoring. This includes
 * `ModelMonitor` resources, `ModelMonitoringJob` resources.
 *
 * @generated from service google.cloud.aiplatform.v1beta1.ModelMonitoringService
 */
export const ModelMonitoringService: GenService<{
  /**
   * Creates a ModelMonitor.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.CreateModelMonitor
   */
  createModelMonitor: {
    methodKind: "unary";
    input: typeof CreateModelMonitorRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a ModelMonitor.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.UpdateModelMonitor
   */
  updateModelMonitor: {
    methodKind: "unary";
    input: typeof UpdateModelMonitorRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a ModelMonitor.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.GetModelMonitor
   */
  getModelMonitor: {
    methodKind: "unary";
    input: typeof GetModelMonitorRequestSchema;
    output: typeof ModelMonitorSchema;
  },
  /**
   * Lists ModelMonitors in a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.ListModelMonitors
   */
  listModelMonitors: {
    methodKind: "unary";
    input: typeof ListModelMonitorsRequestSchema;
    output: typeof ListModelMonitorsResponseSchema;
  },
  /**
   * Deletes a ModelMonitor.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.DeleteModelMonitor
   */
  deleteModelMonitor: {
    methodKind: "unary";
    input: typeof DeleteModelMonitorRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a ModelMonitoringJob.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.CreateModelMonitoringJob
   */
  createModelMonitoringJob: {
    methodKind: "unary";
    input: typeof CreateModelMonitoringJobRequestSchema;
    output: typeof ModelMonitoringJobSchema;
  },
  /**
   * Gets a ModelMonitoringJob.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.GetModelMonitoringJob
   */
  getModelMonitoringJob: {
    methodKind: "unary";
    input: typeof GetModelMonitoringJobRequestSchema;
    output: typeof ModelMonitoringJobSchema;
  },
  /**
   * Lists ModelMonitoringJobs.
   * Callers may choose to read across multiple Monitors as per
   * [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
   * character) as a wildcard character instead of modelMonitor id in the
   * parent. Format
   * `projects/{project_id}/locations/{location}/moodelMonitors/-/modelMonitoringJobs`
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.ListModelMonitoringJobs
   */
  listModelMonitoringJobs: {
    methodKind: "unary";
    input: typeof ListModelMonitoringJobsRequestSchema;
    output: typeof ListModelMonitoringJobsResponseSchema;
  },
  /**
   * Deletes a ModelMonitoringJob.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.DeleteModelMonitoringJob
   */
  deleteModelMonitoringJob: {
    methodKind: "unary";
    input: typeof DeleteModelMonitoringJobRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Searches Model Monitoring Stats generated within a given time window.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.SearchModelMonitoringStats
   */
  searchModelMonitoringStats: {
    methodKind: "unary";
    input: typeof SearchModelMonitoringStatsRequestSchema;
    output: typeof SearchModelMonitoringStatsResponseSchema;
  },
  /**
   * Returns the Model Monitoring alerts.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelMonitoringService.SearchModelMonitoringAlerts
   */
  searchModelMonitoringAlerts: {
    methodKind: "unary";
    input: typeof SearchModelMonitoringAlertsRequestSchema;
    output: typeof SearchModelMonitoringAlertsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_service, 0);

