// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/data_labeling_job.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EncryptionSpec } from "./encryption_spec_pb";
import { file_google_cloud_aiplatform_v1beta1_encryption_spec } from "./encryption_spec_pb";
import type { JobState } from "./job_state_pb";
import { file_google_cloud_aiplatform_v1beta1_job_state } from "./job_state_pb";
import type { Timestamp, Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Money } from "../../../type/money_pb";
import { file_google_type_money } from "../../../type/money_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/data_labeling_job.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_data_labeling_job: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL2RhdGFfbGFiZWxpbmdfam9iLnByb3RvEh9nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExIvgICg9EYXRhTGFiZWxpbmdKb2ISEQoEbmFtZRgBIAEoCUID4EEDEhkKDGRpc3BsYXlfbmFtZRgCIAEoCUID4EECEjsKCGRhdGFzZXRzGAMgAygJQingQQL6QSMKIWFpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vRGF0YXNldBJhChFhbm5vdGF0aW9uX2xhYmVscxgMIAMoCzJGLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuRGF0YUxhYmVsaW5nSm9iLkFubm90YXRpb25MYWJlbHNFbnRyeRIaCg1sYWJlbGVyX2NvdW50GAQgASgFQgPgQQISHAoPaW5zdHJ1Y3Rpb25fdXJpGAUgASgJQgPgQQISHgoRaW5wdXRzX3NjaGVtYV91cmkYBiABKAlCA+BBAhIrCgZpbnB1dHMYByABKAsyFi5nb29nbGUucHJvdG9idWYuVmFsdWVCA+BBAhI9CgVzdGF0ZRgIIAEoDjIpLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuSm9iU3RhdGVCA+BBAxIeChFsYWJlbGluZ19wcm9ncmVzcxgNIAEoBUID4EEDEi4KDWN1cnJlbnRfc3BlbmQYDiABKAsyEi5nb29nbGUudHlwZS5Nb25leUID4EEDEjQKC2NyZWF0ZV90aW1lGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEiYKBWVycm9yGBYgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXNCA+BBAxJMCgZsYWJlbHMYCyADKAsyPC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkRhdGFMYWJlbGluZ0pvYi5MYWJlbHNFbnRyeRIYChBzcGVjaWFsaXN0X3Bvb2xzGBAgAygJEkgKD2VuY3J5cHRpb25fc3BlYxgUIAEoCzIvLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuRW5jcnlwdGlvblNwZWMSVQoWYWN0aXZlX2xlYXJuaW5nX2NvbmZpZxgVIAEoCzI1Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuQWN0aXZlTGVhcm5pbmdDb25maWcaNwoVQW5ub3RhdGlvbkxhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ATp86kF5CilhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL0RhdGFMYWJlbGluZ0pvYhJMcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2RhdGFMYWJlbGluZ0pvYnMve2RhdGFfbGFiZWxpbmdfam9ifSKCAgoUQWN0aXZlTGVhcm5pbmdDb25maWcSHQoTbWF4X2RhdGFfaXRlbV9jb3VudBgBIAEoA0gAEiIKGG1heF9kYXRhX2l0ZW1fcGVyY2VudGFnZRgCIAEoBUgAEkQKDXNhbXBsZV9jb25maWcYAyABKAsyLS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlNhbXBsZUNvbmZpZxJICg90cmFpbmluZ19jb25maWcYBCABKAsyLy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlRyYWluaW5nQ29uZmlnQhcKFWh1bWFuX2xhYmVsaW5nX2J1ZGdldCK9AgoMU2FtcGxlQ29uZmlnEikKH2luaXRpYWxfYmF0Y2hfc2FtcGxlX3BlcmNlbnRhZ2UYASABKAVIABIrCiFmb2xsb3dpbmdfYmF0Y2hfc2FtcGxlX3BlcmNlbnRhZ2UYAyABKAVIARJVCg9zYW1wbGVfc3RyYXRlZ3kYBSABKA4yPC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlNhbXBsZUNvbmZpZy5TYW1wbGVTdHJhdGVneSJCCg5TYW1wbGVTdHJhdGVneRIfChtTQU1QTEVfU1RSQVRFR1lfVU5TUEVDSUZJRUQQABIPCgtVTkNFUlRBSU5UWRABQhsKGWluaXRpYWxfYmF0Y2hfc2FtcGxlX3NpemVCHQobZm9sbG93aW5nX2JhdGNoX3NhbXBsZV9zaXplIjYKDlRyYWluaW5nQ29uZmlnEiQKHHRpbWVvdXRfdHJhaW5pbmdfbWlsbGlfaG91cnMYASABKANC6wEKI2NvbS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExQhREYXRhTGFiZWxpbmdKb2JQcm90b1ABWkNjbG91ZC5nb29nbGUuY29tL2dvL2FpcGxhdGZvcm0vYXBpdjFiZXRhMS9haXBsYXRmb3JtcGI7YWlwbGF0Zm9ybXBiqgIfR29vZ2xlLkNsb3VkLkFJUGxhdGZvcm0uVjFCZXRhMcoCH0dvb2dsZVxDbG91ZFxBSVBsYXRmb3JtXFYxYmV0YTHqAiJHb29nbGU6OkNsb3VkOjpBSVBsYXRmb3JtOjpWMWJldGExYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1beta1_encryption_spec, file_google_cloud_aiplatform_v1beta1_job_state, file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_rpc_status, file_google_type_money]);

/**
 * DataLabelingJob is used to trigger a human labeling job on unlabeled data
 * from the following Dataset:
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DataLabelingJob
 */
export type DataLabelingJob = Message<"google.cloud.aiplatform.v1beta1.DataLabelingJob"> & {
  /**
   * Output only. Resource name of the DataLabelingJob.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The user-defined name of the DataLabelingJob.
   * The name can be up to 128 characters long and can consist of any UTF-8
   * characters.
   * Display name of a DataLabelingJob.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Required. Dataset resource names. Right now we only support labeling from a
   * single Dataset. Format:
   * `projects/{project}/locations/{location}/datasets/{dataset}`
   *
   * @generated from field: repeated string datasets = 3;
   */
  datasets: string[];

  /**
   * Labels to assign to annotations generated by this DataLabelingJob.
   *
   * Label keys and values can be no longer than 64 characters
   * (Unicode codepoints), can only contain lowercase letters, numeric
   * characters, underscores and dashes. International characters are allowed.
   * See https://goo.gl/xmQnxf for more information and examples of labels.
   * System reserved label keys are prefixed with "aiplatform.googleapis.com/"
   * and are immutable.
   *
   * @generated from field: map<string, string> annotation_labels = 12;
   */
  annotationLabels: { [key: string]: string };

  /**
   * Required. Number of labelers to work on each DataItem.
   *
   * @generated from field: int32 labeler_count = 4;
   */
  labelerCount: number;

  /**
   * Required. The Google Cloud Storage location of the instruction pdf. This
   * pdf is shared with labelers, and provides detailed description on how to
   * label DataItems in Datasets.
   *
   * @generated from field: string instruction_uri = 5;
   */
  instructionUri: string;

  /**
   * Required. Points to a YAML file stored on Google Cloud Storage describing
   * the config for a specific type of DataLabelingJob. The schema files that
   * can be used here are found in the
   * https://storage.googleapis.com/google-cloud-aiplatform bucket in the
   * /schema/datalabelingjob/inputs/ folder.
   *
   * @generated from field: string inputs_schema_uri = 6;
   */
  inputsSchemaUri: string;

  /**
   * Required. Input config parameters for the DataLabelingJob.
   *
   * @generated from field: google.protobuf.Value inputs = 7;
   */
  inputs?: Value;

  /**
   * Output only. The detailed state of the job.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.JobState state = 8;
   */
  state: JobState;

  /**
   * Output only. Current labeling job progress percentage scaled in interval
   * [0, 100], indicating the percentage of DataItems that has been finished.
   *
   * @generated from field: int32 labeling_progress = 13;
   */
  labelingProgress: number;

  /**
   * Output only. Estimated cost(in US dollars) that the DataLabelingJob has
   * incurred to date.
   *
   * @generated from field: google.type.Money current_spend = 14;
   */
  currentSpend?: Money;

  /**
   * Output only. Timestamp when this DataLabelingJob was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 9;
   */
  createTime?: Timestamp;

  /**
   * Output only. Timestamp when this DataLabelingJob was updated most recently.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 10;
   */
  updateTime?: Timestamp;

  /**
   * Output only. DataLabelingJob errors. It is only populated when job's state
   * is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
   *
   * @generated from field: google.rpc.Status error = 22;
   */
  error?: Status;

  /**
   * The labels with user-defined metadata to organize your DataLabelingJobs.
   *
   * Label keys and values can be no longer than 64 characters
   * (Unicode codepoints), can only contain lowercase letters, numeric
   * characters, underscores and dashes. International characters are allowed.
   *
   * See https://goo.gl/xmQnxf for more information and examples of labels.
   * System reserved label keys are prefixed with "aiplatform.googleapis.com/"
   * and are immutable. Following system labels exist for each DataLabelingJob:
   *
   * * "aiplatform.googleapis.com/schema": output only, its value is the
   *   [inputs_schema][google.cloud.aiplatform.v1beta1.DataLabelingJob.inputs_schema_uri]'s
   *   title.
   *
   * @generated from field: map<string, string> labels = 11;
   */
  labels: { [key: string]: string };

  /**
   * The SpecialistPools' resource names associated with this job.
   *
   * @generated from field: repeated string specialist_pools = 16;
   */
  specialistPools: string[];

  /**
   * Customer-managed encryption key spec for a DataLabelingJob. If set, this
   * DataLabelingJob will be secured by this key.
   *
   * Note: Annotations created in the DataLabelingJob are associated with
   * the EncryptionSpec of the Dataset they are exported to.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.EncryptionSpec encryption_spec = 20;
   */
  encryptionSpec?: EncryptionSpec;

  /**
   * Parameters that configure the active learning pipeline. Active learning
   * will label the data incrementally via several iterations. For every
   * iteration, it will select a batch of data based on the sampling strategy.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ActiveLearningConfig active_learning_config = 21;
   */
  activeLearningConfig?: ActiveLearningConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DataLabelingJob.
 * Use `create(DataLabelingJobSchema)` to create a new message.
 */
export const DataLabelingJobSchema: GenMessage<DataLabelingJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_data_labeling_job, 0);

/**
 * Parameters that configure the active learning pipeline. Active learning will
 *  label the data incrementally by several iterations. For every iteration, it
 *  will select a batch of data based on the sampling strategy.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ActiveLearningConfig
 */
export type ActiveLearningConfig = Message<"google.cloud.aiplatform.v1beta1.ActiveLearningConfig"> & {
  /**
   * Required. Max human labeling DataItems. The rest part will be labeled by
   * machine.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.ActiveLearningConfig.human_labeling_budget
   */
  humanLabelingBudget: {
    /**
     * Max number of human labeled DataItems.
     *
     * @generated from field: int64 max_data_item_count = 1;
     */
    value: bigint;
    case: "maxDataItemCount";
  } | {
    /**
     * Max percent of total DataItems for human labeling.
     *
     * @generated from field: int32 max_data_item_percentage = 2;
     */
    value: number;
    case: "maxDataItemPercentage";
  } | { case: undefined; value?: undefined };

  /**
   * Active learning data sampling config. For every active learning labeling
   * iteration, it will select a batch of data based on the sampling strategy.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.SampleConfig sample_config = 3;
   */
  sampleConfig?: SampleConfig;

  /**
   * CMLE training config. For every active learning labeling iteration, system
   * will train a machine learning model on CMLE. The trained model will be used
   * by data sampling algorithm to select DataItems.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.TrainingConfig training_config = 4;
   */
  trainingConfig?: TrainingConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ActiveLearningConfig.
 * Use `create(ActiveLearningConfigSchema)` to create a new message.
 */
export const ActiveLearningConfigSchema: GenMessage<ActiveLearningConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_data_labeling_job, 1);

/**
 * Active learning data sampling config. For every active learning labeling
 * iteration, it will select a batch of data based on the sampling strategy.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.SampleConfig
 */
export type SampleConfig = Message<"google.cloud.aiplatform.v1beta1.SampleConfig"> & {
  /**
   * Decides sample size for the initial batch. initial_batch_sample_percentage
   * is used by default.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.SampleConfig.initial_batch_sample_size
   */
  initialBatchSampleSize: {
    /**
     * The percentage of data needed to be labeled in the first batch.
     *
     * @generated from field: int32 initial_batch_sample_percentage = 1;
     */
    value: number;
    case: "initialBatchSamplePercentage";
  } | { case: undefined; value?: undefined };

  /**
   * Decides sample size for the following batches.
   * following_batch_sample_percentage is used by default.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.SampleConfig.following_batch_sample_size
   */
  followingBatchSampleSize: {
    /**
     * The percentage of data needed to be labeled in each following batch
     * (except the first batch).
     *
     * @generated from field: int32 following_batch_sample_percentage = 3;
     */
    value: number;
    case: "followingBatchSamplePercentage";
  } | { case: undefined; value?: undefined };

  /**
   * Field to choose sampling strategy. Sampling strategy will decide which data
   * should be selected for human labeling in every batch.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.SampleConfig.SampleStrategy sample_strategy = 5;
   */
  sampleStrategy: SampleConfig_SampleStrategy;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.SampleConfig.
 * Use `create(SampleConfigSchema)` to create a new message.
 */
export const SampleConfigSchema: GenMessage<SampleConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_data_labeling_job, 2);

/**
 * Sample strategy decides which subset of DataItems should be selected for
 * human labeling in every batch.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.SampleConfig.SampleStrategy
 */
export enum SampleConfig_SampleStrategy {
  /**
   * Default will be treated as UNCERTAINTY.
   *
   * @generated from enum value: SAMPLE_STRATEGY_UNSPECIFIED = 0;
   */
  SAMPLE_STRATEGY_UNSPECIFIED = 0,

  /**
   * Sample the most uncertain data to label.
   *
   * @generated from enum value: UNCERTAINTY = 1;
   */
  UNCERTAINTY = 1,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.SampleConfig.SampleStrategy.
 */
export const SampleConfig_SampleStrategySchema: GenEnum<SampleConfig_SampleStrategy> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_data_labeling_job, 2, 0);

/**
 * CMLE training config. For every active learning labeling iteration, system
 * will train a machine learning model on CMLE. The trained model will be used
 * by data sampling algorithm to select DataItems.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.TrainingConfig
 */
export type TrainingConfig = Message<"google.cloud.aiplatform.v1beta1.TrainingConfig"> & {
  /**
   * The timeout hours for the CMLE training job, expressed in milli hours
   * i.e. 1,000 value in this field means 1 hour.
   *
   * @generated from field: int64 timeout_training_milli_hours = 1;
   */
  timeoutTrainingMilliHours: bigint;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.TrainingConfig.
 * Use `create(TrainingConfigSchema)` to create a new message.
 */
export const TrainingConfigSchema: GenMessage<TrainingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_data_labeling_job, 3);

