// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/notebook_execution_job.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EncryptionSpec } from "./encryption_spec_pb";
import { file_google_cloud_aiplatform_v1beta1_encryption_spec } from "./encryption_spec_pb";
import type { JobState } from "./job_state_pb";
import { file_google_cloud_aiplatform_v1beta1_job_state } from "./job_state_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/notebook_execution_job.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_notebook_execution_job: GenFile = /*@__PURE__*/
  fileDesc("Cjxnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL25vdGVib29rX2V4ZWN1dGlvbl9qb2IucHJvdG8SH2dvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEisAwKFE5vdGVib29rRXhlY3V0aW9uSm9iEnQKGmRhdGFmb3JtX3JlcG9zaXRvcnlfc291cmNlGAMgASgLMk4uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Ob3RlYm9va0V4ZWN1dGlvbkpvYi5EYXRhZm9ybVJlcG9zaXRvcnlTb3VyY2VIABJmChNnY3Nfbm90ZWJvb2tfc291cmNlGAQgASgLMkcuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Ob3RlYm9va0V4ZWN1dGlvbkpvYi5HY3NOb3RlYm9va1NvdXJjZUgAEmwKFmRpcmVjdF9ub3RlYm9va19zb3VyY2UYESABKAsySi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLk5vdGVib29rRXhlY3V0aW9uSm9iLkRpcmVjdE5vdGVib29rU291cmNlSAASaQonbm90ZWJvb2tfcnVudGltZV90ZW1wbGF0ZV9yZXNvdXJjZV9uYW1lGA4gASgJQjb6QTMKMWFpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vTm90ZWJvb2tSdW50aW1lVGVtcGxhdGVIARIYCg5nY3Nfb3V0cHV0X3VyaRgIIAEoCUgCEhgKDmV4ZWN1dGlvbl91c2VyGAkgASgJSAMSGQoPc2VydmljZV9hY2NvdW50GBIgASgJSAMSEQoEbmFtZRgBIAEoCUID4EEDEhQKDGRpc3BsYXlfbmFtZRgCIAEoCRI0ChFleGVjdXRpb25fdGltZW91dBgFIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhJKChZzY2hlZHVsZV9yZXNvdXJjZV9uYW1lGAYgASgJQirgQQP6QSQKImFpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vU2NoZWR1bGUSQQoJam9iX3N0YXRlGAogASgOMikuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Kb2JTdGF0ZUID4EEDEicKBnN0YXR1cxgLIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzQgPgQQMSNAoLY3JlYXRlX3RpbWUYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYDSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSUQoGbGFiZWxzGBMgAygLMkEuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Ob3RlYm9va0V4ZWN1dGlvbkpvYi5MYWJlbHNFbnRyeRJICg9lbmNyeXB0aW9uX3NwZWMYFiABKAsyLy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkVuY3J5cHRpb25TcGVjGlkKGERhdGFmb3JtUmVwb3NpdG9yeVNvdXJjZRIpCiFkYXRhZm9ybV9yZXBvc2l0b3J5X3Jlc291cmNlX25hbWUYASABKAkSEgoKY29tbWl0X3NoYRgCIAEoCRo0ChFHY3NOb3RlYm9va1NvdXJjZRILCgN1cmkYASABKAkSEgoKZ2VuZXJhdGlvbhgCIAEoCRonChREaXJlY3ROb3RlYm9va1NvdXJjZRIPCgdjb250ZW50GAEgASgMGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6uQHqQbUBCi5haXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL05vdGVib29rRXhlY3V0aW9uSm9iElZwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vbm90ZWJvb2tFeGVjdXRpb25Kb2JzL3tub3RlYm9va19leGVjdXRpb25fam9ifSoVbm90ZWJvb2tFeGVjdXRpb25Kb2JzMhRub3RlYm9va0V4ZWN1dGlvbkpvYkIRCg9ub3RlYm9va19zb3VyY2VCEgoQZW52aXJvbm1lbnRfc3BlY0IQCg5leGVjdXRpb25fc2lua0IUChJleGVjdXRpb25faWRlbnRpdHlC8AEKI2NvbS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExQhlOb3RlYm9va0V4ZWN1dGlvbkpvYlByb3RvUAFaQ2Nsb3VkLmdvb2dsZS5jb20vZ28vYWlwbGF0Zm9ybS9hcGl2MWJldGExL2FpcGxhdGZvcm1wYjthaXBsYXRmb3JtcGKqAh9Hb29nbGUuQ2xvdWQuQUlQbGF0Zm9ybS5WMUJldGExygIfR29vZ2xlXENsb3VkXEFJUGxhdGZvcm1cVjFiZXRhMeoCIkdvb2dsZTo6Q2xvdWQ6OkFJUGxhdGZvcm06OlYxYmV0YTFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1beta1_encryption_spec, file_google_cloud_aiplatform_v1beta1_job_state, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * NotebookExecutionJob represents an instance of a notebook execution.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.NotebookExecutionJob
 */
export type NotebookExecutionJob = Message<"google.cloud.aiplatform.v1beta1.NotebookExecutionJob"> & {
  /**
   * The input notebook.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.NotebookExecutionJob.notebook_source
   */
  notebookSource: {
    /**
     * The Dataform Repository pointing to a single file notebook repository.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.NotebookExecutionJob.DataformRepositorySource dataform_repository_source = 3;
     */
    value: NotebookExecutionJob_DataformRepositorySource;
    case: "dataformRepositorySource";
  } | {
    /**
     * The Cloud Storage url pointing to the ipynb file. Format:
     * `gs://bucket/notebook_file.ipynb`
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.NotebookExecutionJob.GcsNotebookSource gcs_notebook_source = 4;
     */
    value: NotebookExecutionJob_GcsNotebookSource;
    case: "gcsNotebookSource";
  } | {
    /**
     * The contents of an input notebook file.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.NotebookExecutionJob.DirectNotebookSource direct_notebook_source = 17;
     */
    value: NotebookExecutionJob_DirectNotebookSource;
    case: "directNotebookSource";
  } | { case: undefined; value?: undefined };

  /**
   * The compute config to use for an execution job.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.NotebookExecutionJob.environment_spec
   */
  environmentSpec: {
    /**
     * The NotebookRuntimeTemplate to source compute configuration from.
     *
     * @generated from field: string notebook_runtime_template_resource_name = 14;
     */
    value: string;
    case: "notebookRuntimeTemplateResourceName";
  } | { case: undefined; value?: undefined };

  /**
   * The location to store the notebook execution result.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.NotebookExecutionJob.execution_sink
   */
  executionSink: {
    /**
     * The Cloud Storage location to upload the result to. Format:
     * `gs://bucket-name`
     *
     * @generated from field: string gcs_output_uri = 8;
     */
    value: string;
    case: "gcsOutputUri";
  } | { case: undefined; value?: undefined };

  /**
   * The identity to run the execution as.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.NotebookExecutionJob.execution_identity
   */
  executionIdentity: {
    /**
     * The user email to run the execution as. Only supported by Colab runtimes.
     *
     * @generated from field: string execution_user = 9;
     */
    value: string;
    case: "executionUser";
  } | {
    /**
     * The service account to run the execution as.
     *
     * @generated from field: string service_account = 18;
     */
    value: string;
    case: "serviceAccount";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The resource name of this NotebookExecutionJob. Format:
   * `projects/{project_id}/locations/{location}/notebookExecutionJobs/{job_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The display name of the NotebookExecutionJob. The name can be up to 128
   * characters long and can consist of any UTF-8 characters.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Max running time of the execution job in seconds (default 86400s / 24 hrs).
   *
   * @generated from field: google.protobuf.Duration execution_timeout = 5;
   */
  executionTimeout?: Duration;

  /**
   * Output only. The Schedule resource name if this job is triggered by one.
   * Format:
   * `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
   *
   * @generated from field: string schedule_resource_name = 6;
   */
  scheduleResourceName: string;

  /**
   * Output only. The state of the NotebookExecutionJob.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.JobState job_state = 10;
   */
  jobState: JobState;

  /**
   * Output only. Populated when the NotebookExecutionJob is completed. When
   * there is an error during notebook execution, the error details are
   * populated.
   *
   * @generated from field: google.rpc.Status status = 11;
   */
  status?: Status;

  /**
   * Output only. Timestamp when this NotebookExecutionJob was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 12;
   */
  createTime?: Timestamp;

  /**
   * Output only. Timestamp when this NotebookExecutionJob was most recently
   * updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 13;
   */
  updateTime?: Timestamp;

  /**
   * The labels with user-defined metadata to organize NotebookExecutionJobs.
   *
   * Label keys and values can be no longer than 64 characters
   * (Unicode codepoints), can only contain lowercase letters, numeric
   * characters, underscores and dashes. International characters are allowed.
   *
   * See https://goo.gl/xmQnxf for more information and examples of labels.
   * System reserved label keys are prefixed with "aiplatform.googleapis.com/"
   * and are immutable.
   *
   * @generated from field: map<string, string> labels = 19;
   */
  labels: { [key: string]: string };

  /**
   * Customer-managed encryption key spec for the notebook execution job.
   * This field is auto-populated if the
   * [NotebookService.NotebookRuntimeTemplate][] has an encryption spec.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.EncryptionSpec encryption_spec = 22;
   */
  encryptionSpec?: EncryptionSpec;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.NotebookExecutionJob.
 * Use `create(NotebookExecutionJobSchema)` to create a new message.
 */
export const NotebookExecutionJobSchema: GenMessage<NotebookExecutionJob> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_notebook_execution_job, 0);

/**
 * The Dataform Repository containing the input notebook.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.NotebookExecutionJob.DataformRepositorySource
 */
export type NotebookExecutionJob_DataformRepositorySource = Message<"google.cloud.aiplatform.v1beta1.NotebookExecutionJob.DataformRepositorySource"> & {
  /**
   * The resource name of the Dataform Repository. Format:
   * `projects/{project_id}/locations/{location}/repositories/{repository_id}`
   *
   * @generated from field: string dataform_repository_resource_name = 1;
   */
  dataformRepositoryResourceName: string;

  /**
   * The commit SHA to read repository with. If unset, the file will be read
   * at HEAD.
   *
   * @generated from field: string commit_sha = 2;
   */
  commitSha: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.NotebookExecutionJob.DataformRepositorySource.
 * Use `create(NotebookExecutionJob_DataformRepositorySourceSchema)` to create a new message.
 */
export const NotebookExecutionJob_DataformRepositorySourceSchema: GenMessage<NotebookExecutionJob_DataformRepositorySource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_notebook_execution_job, 0, 0);

/**
 * The Cloud Storage uri for the input notebook.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.NotebookExecutionJob.GcsNotebookSource
 */
export type NotebookExecutionJob_GcsNotebookSource = Message<"google.cloud.aiplatform.v1beta1.NotebookExecutionJob.GcsNotebookSource"> & {
  /**
   * The Cloud Storage uri pointing to the ipynb file. Format:
   * `gs://bucket/notebook_file.ipynb`
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * The version of the Cloud Storage object to read. If unset, the current
   * version of the object is read. See
   * https://cloud.google.com/storage/docs/metadata#generation-number.
   *
   * @generated from field: string generation = 2;
   */
  generation: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.NotebookExecutionJob.GcsNotebookSource.
 * Use `create(NotebookExecutionJob_GcsNotebookSourceSchema)` to create a new message.
 */
export const NotebookExecutionJob_GcsNotebookSourceSchema: GenMessage<NotebookExecutionJob_GcsNotebookSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_notebook_execution_job, 0, 1);

/**
 * The content of the input notebook in ipynb format.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.NotebookExecutionJob.DirectNotebookSource
 */
export type NotebookExecutionJob_DirectNotebookSource = Message<"google.cloud.aiplatform.v1beta1.NotebookExecutionJob.DirectNotebookSource"> & {
  /**
   * The base64-encoded contents of the input notebook file.
   *
   * @generated from field: bytes content = 1;
   */
  content: Uint8Array;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.NotebookExecutionJob.DirectNotebookSource.
 * Use `create(NotebookExecutionJob_DirectNotebookSourceSchema)` to create a new message.
 */
export const NotebookExecutionJob_DirectNotebookSourceSchema: GenMessage<NotebookExecutionJob_DirectNotebookSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_notebook_execution_job, 0, 2);

