// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/feature_group.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { BigQuerySource } from "./io_pb";
import { file_google_cloud_aiplatform_v1beta1_io } from "./io_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/feature_group.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_feature_group: GenFile = /*@__PURE__*/
  fileDesc("CjNnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL2ZlYXR1cmVfZ3JvdXAucHJvdG8SH2dvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEi4gYKDEZlYXR1cmVHcm91cBJLCgliaWdfcXVlcnkYByABKAsyNi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkZlYXR1cmVHcm91cC5CaWdRdWVyeUgAEhEKBG5hbWUYASABKAlCA+BBCBI0CgtjcmVhdGVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxIRCgRldGFnGAQgASgJQgPgQQESTgoGbGFiZWxzGAUgAygLMjkuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5GZWF0dXJlR3JvdXAuTGFiZWxzRW50cnlCA+BBARIYCgtkZXNjcmlwdGlvbhgGIAEoCUID4EEBGrwCCghCaWdRdWVyeRJRChBiaWdfcXVlcnlfc291cmNlGAEgASgLMi8uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5CaWdRdWVyeVNvdXJjZUIG4EEF4EECEh4KEWVudGl0eV9pZF9jb2x1bW5zGAIgAygJQgPgQQESHwoSc3RhdGljX2RhdGFfc291cmNlGAMgASgIQgPgQQESWwoLdGltZV9zZXJpZXMYBCABKAsyQS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkZlYXR1cmVHcm91cC5CaWdRdWVyeS5UaW1lU2VyaWVzQgPgQQESEgoFZGVuc2UYBSABKAhCA+BBARorCgpUaW1lU2VyaWVzEh0KEHRpbWVzdGFtcF9jb2x1bW4YASABKAlCA+BBARotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBOpAB6kGMAQomYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9GZWF0dXJlR3JvdXASRXByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9mZWF0dXJlR3JvdXBzL3tmZWF0dXJlX2dyb3VwfSoNZmVhdHVyZUdyb3VwczIMZmVhdHVyZUdyb3VwQggKBnNvdXJjZULoAQojY29tLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTFCEUZlYXR1cmVHcm91cFByb3RvUAFaQ2Nsb3VkLmdvb2dsZS5jb20vZ28vYWlwbGF0Zm9ybS9hcGl2MWJldGExL2FpcGxhdGZvcm1wYjthaXBsYXRmb3JtcGKqAh9Hb29nbGUuQ2xvdWQuQUlQbGF0Zm9ybS5WMUJldGExygIfR29vZ2xlXENsb3VkXEFJUGxhdGZvcm1cVjFiZXRhMeoCIkdvb2dsZTo6Q2xvdWQ6OkFJUGxhdGZvcm06OlYxYmV0YTFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1beta1_io, file_google_protobuf_timestamp]);

/**
 * Vertex AI Feature Group.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FeatureGroup
 */
export type FeatureGroup = Message<"google.cloud.aiplatform.v1beta1.FeatureGroup"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1beta1.FeatureGroup.source
   */
  source: {
    /**
     * Indicates that features for this group come from BigQuery Table/View.
     * By default treats the source as a sparse time series source. The BigQuery
     * source table or view must have at least one entity ID column and a column
     * named `feature_timestamp`.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.FeatureGroup.BigQuery big_query = 7;
     */
    value: FeatureGroup_BigQuery;
    case: "bigQuery";
  } | { case: undefined; value?: undefined };

  /**
   * Identifier. Name of the FeatureGroup. Format:
   * `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Timestamp when this FeatureGroup was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. Timestamp when this FeatureGroup was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Used to perform consistent read-modify-write updates. If not set,
   * a blind "overwrite" update happens.
   *
   * @generated from field: string etag = 4;
   */
  etag: string;

  /**
   * Optional. The labels with user-defined metadata to organize your
   * FeatureGroup.
   *
   * Label keys and values can be no longer than 64 characters
   * (Unicode codepoints), can only contain lowercase letters, numeric
   * characters, underscores and dashes. International characters are allowed.
   *
   * See https://goo.gl/xmQnxf for more information on and examples of labels.
   * No more than 64 user labels can be associated with one
   * FeatureGroup(System labels are excluded)." System reserved label keys
   * are prefixed with "aiplatform.googleapis.com/" and are immutable.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Description of the FeatureGroup.
   *
   * @generated from field: string description = 6;
   */
  description: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FeatureGroup.
 * Use `create(FeatureGroupSchema)` to create a new message.
 */
export const FeatureGroupSchema: GenMessage<FeatureGroup> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_feature_group, 0);

/**
 * Input source type for BigQuery Tables and Views.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FeatureGroup.BigQuery
 */
export type FeatureGroup_BigQuery = Message<"google.cloud.aiplatform.v1beta1.FeatureGroup.BigQuery"> & {
  /**
   * Required. Immutable. The BigQuery source URI that points to either a
   * BigQuery Table or View.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.BigQuerySource big_query_source = 1;
   */
  bigQuerySource?: BigQuerySource;

  /**
   * Optional. Columns to construct entity_id / row keys.
   * If not provided defaults to `entity_id`.
   *
   * @generated from field: repeated string entity_id_columns = 2;
   */
  entityIdColumns: string[];

  /**
   * Optional. Set if the data source is not a time-series.
   *
   * @generated from field: bool static_data_source = 3;
   */
  staticDataSource: boolean;

  /**
   * Optional. If the source is a time-series source, this can be set to
   * control how downstream sources (ex:
   * [FeatureView][google.cloud.aiplatform.v1beta1.FeatureView] ) will treat
   * time-series sources. If not set, will treat the source as a time-series
   * source with `feature_timestamp` as timestamp column and no scan boundary.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.FeatureGroup.BigQuery.TimeSeries time_series = 4;
   */
  timeSeries?: FeatureGroup_BigQuery_TimeSeries;

  /**
   * Optional. If set, all feature values will be fetched
   * from a single row per unique entityId including nulls.
   * If not set, will collapse all rows for each unique entityId into a singe
   * row with any non-null values if present, if no non-null values are
   * present will sync null.
   * ex: If source has schema
   * `(entity_id, feature_timestamp, f0, f1)` and the following rows:
   * `(e1, 2020-01-01T10:00:00.123Z, 10, 15)`
   * `(e1, 2020-02-01T10:00:00.123Z, 20, null)`
   * If dense is set, `(e1, 20, null)` is synced to online stores. If dense is
   * not set, `(e1, 20, 15)` is synced to online stores.
   *
   * @generated from field: bool dense = 5;
   */
  dense: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FeatureGroup.BigQuery.
 * Use `create(FeatureGroup_BigQuerySchema)` to create a new message.
 */
export const FeatureGroup_BigQuerySchema: GenMessage<FeatureGroup_BigQuery> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_feature_group, 0, 0);

/**
 * @generated from message google.cloud.aiplatform.v1beta1.FeatureGroup.BigQuery.TimeSeries
 */
export type FeatureGroup_BigQuery_TimeSeries = Message<"google.cloud.aiplatform.v1beta1.FeatureGroup.BigQuery.TimeSeries"> & {
  /**
   * Optional. Column hosting timestamp values for a time-series source.
   * Will be used to determine the latest `feature_values` for each entity.
   * Optional. If not provided, column named `feature_timestamp` of
   * type `TIMESTAMP` will be used.
   *
   * @generated from field: string timestamp_column = 1;
   */
  timestampColumn: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FeatureGroup.BigQuery.TimeSeries.
 * Use `create(FeatureGroup_BigQuery_TimeSeriesSchema)` to create a new message.
 */
export const FeatureGroup_BigQuery_TimeSeriesSchema: GenMessage<FeatureGroup_BigQuery_TimeSeries> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_feature_group, 0, 0, 0);

