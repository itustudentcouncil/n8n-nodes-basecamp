// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/match_service.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { IndexDatapoint } from "./index_pb";
import { file_google_cloud_aiplatform_v1beta1_index } from "./index_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/match_service.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_match_service: GenFile = /*@__PURE__*/
  fileDesc("CjNnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL21hdGNoX3NlcnZpY2UucHJvdG8SH2dvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEi0AQKFEZpbmROZWlnaGJvcnNSZXF1ZXN0EkcKDmluZGV4X2VuZHBvaW50GAEgASgJQi/gQQL6QSkKJ2FpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vSW5kZXhFbmRwb2ludBIZChFkZXBsb3llZF9pbmRleF9pZBgCIAEoCRJMCgdxdWVyaWVzGAMgAygLMjsuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5GaW5kTmVpZ2hib3JzUmVxdWVzdC5RdWVyeRIdChVyZXR1cm5fZnVsbF9kYXRhcG9pbnQYBCABKAga5gIKBVF1ZXJ5ElMKA3JyZhgGIAEoCzI/Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuRmluZE5laWdoYm9yc1JlcXVlc3QuUXVlcnkuUlJGQgPgQQFIABJHCglkYXRhcG9pbnQYASABKAsyLy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkluZGV4RGF0YXBvaW50QgPgQQISFgoObmVpZ2hib3JfY291bnQYAiABKAUSLQolcGVyX2Nyb3dkaW5nX2F0dHJpYnV0ZV9uZWlnaGJvcl9jb3VudBgDIAEoBRIiChphcHByb3hpbWF0ZV9uZWlnaGJvcl9jb3VudBgEIAEoBRIuCiZmcmFjdGlvbl9sZWFmX25vZGVzX3RvX3NlYXJjaF9vdmVycmlkZRgFIAEoARoZCgNSUkYSEgoFYWxwaGEYASABKAJCA+BBAkIJCgdyYW5raW5nIuoCChVGaW5kTmVpZ2hib3JzUmVzcG9uc2USYgoRbmVhcmVzdF9uZWlnaGJvcnMYASADKAsyRy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkZpbmROZWlnaGJvcnNSZXNwb25zZS5OZWFyZXN0TmVpZ2hib3JzGnkKCE5laWdoYm9yEkIKCWRhdGFwb2ludBgBIAEoCzIvLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuSW5kZXhEYXRhcG9pbnQSEAoIZGlzdGFuY2UYAiABKAESFwoPc3BhcnNlX2Rpc3RhbmNlGAMgASgBGnIKEE5lYXJlc3ROZWlnaGJvcnMSCgoCaWQYASABKAkSUgoJbmVpZ2hib3JzGAIgAygLMj8uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5GaW5kTmVpZ2hib3JzUmVzcG9uc2UuTmVpZ2hib3IijQEKGlJlYWRJbmRleERhdGFwb2ludHNSZXF1ZXN0EkcKDmluZGV4X2VuZHBvaW50GAEgASgJQi/gQQL6QSkKJ2FpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vSW5kZXhFbmRwb2ludBIZChFkZXBsb3llZF9pbmRleF9pZBgCIAEoCRILCgNpZHMYAyADKAkiYgobUmVhZEluZGV4RGF0YXBvaW50c1Jlc3BvbnNlEkMKCmRhdGFwb2ludHMYASADKAsyLy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkluZGV4RGF0YXBvaW50Mq8ECgxNYXRjaFNlcnZpY2US2gEKDUZpbmROZWlnaGJvcnMSNS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkZpbmROZWlnaGJvcnNSZXF1ZXN0GjYuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5GaW5kTmVpZ2hib3JzUmVzcG9uc2UiWoLT5JMCVDoBKiJPL3YxYmV0YTEve2luZGV4X2VuZHBvaW50PXByb2plY3RzLyovbG9jYXRpb25zLyovaW5kZXhFbmRwb2ludHMvKn06ZmluZE5laWdoYm9ycxLyAQoTUmVhZEluZGV4RGF0YXBvaW50cxI7Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuUmVhZEluZGV4RGF0YXBvaW50c1JlcXVlc3QaPC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlJlYWRJbmRleERhdGFwb2ludHNSZXNwb25zZSJggtPkkwJaOgEqIlUvdjFiZXRhMS97aW5kZXhfZW5kcG9pbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9pbmRleEVuZHBvaW50cy8qfTpyZWFkSW5kZXhEYXRhcG9pbnRzGk3KQRlhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybULoAQojY29tLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTFCEU1hdGNoU2VydmljZVByb3RvUAFaQ2Nsb3VkLmdvb2dsZS5jb20vZ28vYWlwbGF0Zm9ybS9hcGl2MWJldGExL2FpcGxhdGZvcm1wYjthaXBsYXRmb3JtcGKqAh9Hb29nbGUuQ2xvdWQuQUlQbGF0Zm9ybS5WMUJldGExygIfR29vZ2xlXENsb3VkXEFJUGxhdGZvcm1cVjFiZXRhMeoCIkdvb2dsZTo6Q2xvdWQ6OkFJUGxhdGZvcm06OlYxYmV0YTFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1beta1_index]);

/**
 * The request message for
 * [MatchService.FindNeighbors][google.cloud.aiplatform.v1beta1.MatchService.FindNeighbors].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FindNeighborsRequest
 */
export type FindNeighborsRequest = Message<"google.cloud.aiplatform.v1beta1.FindNeighborsRequest"> & {
  /**
   * Required. The name of the index endpoint.
   * Format:
   * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
   *
   * @generated from field: string index_endpoint = 1;
   */
  indexEndpoint: string;

  /**
   * The ID of the DeployedIndex that will serve the request. This request is
   * sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That
   * IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index
   * has a DeployedIndex.id field.
   * The value of the field below must equal one of the DeployedIndex.id
   * fields of the IndexEndpoint that is being called for this request.
   *
   * @generated from field: string deployed_index_id = 2;
   */
  deployedIndexId: string;

  /**
   * The list of queries.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.FindNeighborsRequest.Query queries = 3;
   */
  queries: FindNeighborsRequest_Query[];

  /**
   * If set to true, the full datapoints (including all vector values and
   * restricts) of the nearest neighbors are returned.
   * Note that returning full datapoint will significantly increase the
   * latency and cost of the query.
   *
   * @generated from field: bool return_full_datapoint = 4;
   */
  returnFullDatapoint: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FindNeighborsRequest.
 * Use `create(FindNeighborsRequestSchema)` to create a new message.
 */
export const FindNeighborsRequestSchema: GenMessage<FindNeighborsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_match_service, 0);

/**
 * A query to find a number of the nearest neighbors (most similar vectors)
 * of a vector.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FindNeighborsRequest.Query
 */
export type FindNeighborsRequest_Query = Message<"google.cloud.aiplatform.v1beta1.FindNeighborsRequest.Query"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1beta1.FindNeighborsRequest.Query.ranking
   */
  ranking: {
    /**
     * Optional. Represents RRF algorithm that combines search results.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.FindNeighborsRequest.Query.RRF rrf = 6;
     */
    value: FindNeighborsRequest_Query_RRF;
    case: "rrf";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The datapoint/vector whose nearest neighbors should be searched
   * for.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.IndexDatapoint datapoint = 1;
   */
  datapoint?: IndexDatapoint;

  /**
   * The number of nearest neighbors to be retrieved from database for each
   * query. If not set, will use the default from the service configuration
   * (https://cloud.google.com/vertex-ai/docs/matching-engine/configuring-indexes#nearest-neighbor-search-config).
   *
   * @generated from field: int32 neighbor_count = 2;
   */
  neighborCount: number;

  /**
   * Crowding is a constraint on a neighbor list produced by nearest neighbor
   * search requiring that no more than some value k' of the k neighbors
   * returned have the same value of crowding_attribute.
   * It's used for improving result diversity.
   * This field is the maximum number of matches with the same crowding tag.
   *
   * @generated from field: int32 per_crowding_attribute_neighbor_count = 3;
   */
  perCrowdingAttributeNeighborCount: number;

  /**
   * The number of neighbors to find via approximate search before
   * exact reordering is performed. If not set, the default value from scam
   * config is used; if set, this value must be > 0.
   *
   * @generated from field: int32 approximate_neighbor_count = 4;
   */
  approximateNeighborCount: number;

  /**
   * The fraction of the number of leaves to search, set at query time allows
   * user to tune search performance. This value increase result in both
   * search accuracy and latency increase. The value should be between 0.0
   * and 1.0. If not set or set to 0.0, query uses the default value specified
   * in
   * NearestNeighborSearchConfig.TreeAHConfig.fraction_leaf_nodes_to_search.
   *
   * @generated from field: double fraction_leaf_nodes_to_search_override = 5;
   */
  fractionLeafNodesToSearchOverride: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FindNeighborsRequest.Query.
 * Use `create(FindNeighborsRequest_QuerySchema)` to create a new message.
 */
export const FindNeighborsRequest_QuerySchema: GenMessage<FindNeighborsRequest_Query> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_match_service, 0, 0);

/**
 * Parameters for RRF algorithm that combines search results.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FindNeighborsRequest.Query.RRF
 */
export type FindNeighborsRequest_Query_RRF = Message<"google.cloud.aiplatform.v1beta1.FindNeighborsRequest.Query.RRF"> & {
  /**
   * Required. Users can provide an alpha value to give more weight to dense
   * vs sparse results. For example, if the alpha is 0, we only return
   * sparse and if the alpha is 1, we only return dense.
   *
   * @generated from field: float alpha = 1;
   */
  alpha: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FindNeighborsRequest.Query.RRF.
 * Use `create(FindNeighborsRequest_Query_RRFSchema)` to create a new message.
 */
export const FindNeighborsRequest_Query_RRFSchema: GenMessage<FindNeighborsRequest_Query_RRF> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_match_service, 0, 0, 0);

/**
 * The response message for
 * [MatchService.FindNeighbors][google.cloud.aiplatform.v1beta1.MatchService.FindNeighbors].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FindNeighborsResponse
 */
export type FindNeighborsResponse = Message<"google.cloud.aiplatform.v1beta1.FindNeighborsResponse"> & {
  /**
   * The nearest neighbors of the query datapoints.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.FindNeighborsResponse.NearestNeighbors nearest_neighbors = 1;
   */
  nearestNeighbors: FindNeighborsResponse_NearestNeighbors[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FindNeighborsResponse.
 * Use `create(FindNeighborsResponseSchema)` to create a new message.
 */
export const FindNeighborsResponseSchema: GenMessage<FindNeighborsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_match_service, 1);

/**
 * A neighbor of the query vector.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FindNeighborsResponse.Neighbor
 */
export type FindNeighborsResponse_Neighbor = Message<"google.cloud.aiplatform.v1beta1.FindNeighborsResponse.Neighbor"> & {
  /**
   * The datapoint of the neighbor.
   * Note that full datapoints are returned only when "return_full_datapoint"
   * is set to true. Otherwise, only the "datapoint_id" and "crowding_tag"
   * fields are populated.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.IndexDatapoint datapoint = 1;
   */
  datapoint?: IndexDatapoint;

  /**
   * The distance between the neighbor and the dense embedding query.
   *
   * @generated from field: double distance = 2;
   */
  distance: number;

  /**
   * The distance between the neighbor and the query sparse_embedding.
   *
   * @generated from field: double sparse_distance = 3;
   */
  sparseDistance: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FindNeighborsResponse.Neighbor.
 * Use `create(FindNeighborsResponse_NeighborSchema)` to create a new message.
 */
export const FindNeighborsResponse_NeighborSchema: GenMessage<FindNeighborsResponse_Neighbor> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_match_service, 1, 0);

/**
 * Nearest neighbors for one query.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FindNeighborsResponse.NearestNeighbors
 */
export type FindNeighborsResponse_NearestNeighbors = Message<"google.cloud.aiplatform.v1beta1.FindNeighborsResponse.NearestNeighbors"> & {
  /**
   * The ID of the query datapoint.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * All its neighbors.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.FindNeighborsResponse.Neighbor neighbors = 2;
   */
  neighbors: FindNeighborsResponse_Neighbor[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FindNeighborsResponse.NearestNeighbors.
 * Use `create(FindNeighborsResponse_NearestNeighborsSchema)` to create a new message.
 */
export const FindNeighborsResponse_NearestNeighborsSchema: GenMessage<FindNeighborsResponse_NearestNeighbors> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_match_service, 1, 1);

/**
 * The request message for
 * [MatchService.ReadIndexDatapoints][google.cloud.aiplatform.v1beta1.MatchService.ReadIndexDatapoints].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ReadIndexDatapointsRequest
 */
export type ReadIndexDatapointsRequest = Message<"google.cloud.aiplatform.v1beta1.ReadIndexDatapointsRequest"> & {
  /**
   * Required. The name of the index endpoint.
   * Format:
   * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
   *
   * @generated from field: string index_endpoint = 1;
   */
  indexEndpoint: string;

  /**
   * The ID of the DeployedIndex that will serve the request.
   *
   * @generated from field: string deployed_index_id = 2;
   */
  deployedIndexId: string;

  /**
   * IDs of the datapoints to be searched for.
   *
   * @generated from field: repeated string ids = 3;
   */
  ids: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ReadIndexDatapointsRequest.
 * Use `create(ReadIndexDatapointsRequestSchema)` to create a new message.
 */
export const ReadIndexDatapointsRequestSchema: GenMessage<ReadIndexDatapointsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_match_service, 2);

/**
 * The response message for
 * [MatchService.ReadIndexDatapoints][google.cloud.aiplatform.v1beta1.MatchService.ReadIndexDatapoints].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ReadIndexDatapointsResponse
 */
export type ReadIndexDatapointsResponse = Message<"google.cloud.aiplatform.v1beta1.ReadIndexDatapointsResponse"> & {
  /**
   * The result list of datapoints.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.IndexDatapoint datapoints = 1;
   */
  datapoints: IndexDatapoint[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ReadIndexDatapointsResponse.
 * Use `create(ReadIndexDatapointsResponseSchema)` to create a new message.
 */
export const ReadIndexDatapointsResponseSchema: GenMessage<ReadIndexDatapointsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_match_service, 3);

/**
 * MatchService is a Google managed service for efficient vector similarity
 * search at scale.
 *
 * @generated from service google.cloud.aiplatform.v1beta1.MatchService
 */
export const MatchService: GenService<{
  /**
   * Finds the nearest neighbors of each vector within the request.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MatchService.FindNeighbors
   */
  findNeighbors: {
    methodKind: "unary";
    input: typeof FindNeighborsRequestSchema;
    output: typeof FindNeighborsResponseSchema;
  },
  /**
   * Reads the datapoints/vectors of the given IDs.
   * A maximum of 1000 datapoints can be retrieved in a batch.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MatchService.ReadIndexDatapoints
   */
  readIndexDatapoints: {
    methodKind: "unary";
    input: typeof ReadIndexDatapointsRequestSchema;
    output: typeof ReadIndexDatapointsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1beta1_match_service, 0);

