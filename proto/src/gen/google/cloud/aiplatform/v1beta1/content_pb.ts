// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/content.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Schema } from "./openapi_pb";
import { file_google_cloud_aiplatform_v1beta1_openapi } from "./openapi_pb";
import type { FunctionCall, FunctionResponse } from "./tool_pb";
import { file_google_cloud_aiplatform_v1beta1_tool } from "./tool_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Date } from "../../../type/date_pb";
import { file_google_type_date } from "../../../type/date_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/content.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_content: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_cloud_aiplatform_v1beta1_openapi, file_google_cloud_aiplatform_v1beta1_tool, file_google_protobuf_duration, file_google_type_date]);

/**
 * The base structured datatype containing multi-part content of a message.
 *
 * A `Content` includes a `role` field designating the producer of the `Content`
 * and a `parts` field containing multi-part data that contains the content of
 * the message turn.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Content
 */
export type Content = Message<"google.cloud.aiplatform.v1beta1.Content"> & {
  /**
   * Optional. The producer of the content. Must be either 'user' or 'model'.
   *
   * Useful to set for multi-turn conversations, otherwise can be left blank
   * or unset.
   *
   * @generated from field: string role = 1;
   */
  role: string;

  /**
   * Required. Ordered `Parts` that constitute a single message. Parts may have
   * different IANA MIME types.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Part parts = 2;
   */
  parts: Part[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Content.
 * Use `create(ContentSchema)` to create a new message.
 */
export const ContentSchema: GenMessage<Content> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 0);

/**
 * A datatype containing media that is part of a multi-part `Content` message.
 *
 * A `Part` consists of data which has an associated datatype. A `Part` can only
 * contain one of the accepted types in `Part.data`.
 *
 * A `Part` must have a fixed IANA MIME type identifying the type and subtype
 * of the media if `inline_data` or `file_data` field is filled with raw bytes.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Part
 */
export type Part = Message<"google.cloud.aiplatform.v1beta1.Part"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1beta1.Part.data
   */
  data: {
    /**
     * Optional. Text part (can be code).
     *
     * @generated from field: string text = 1;
     */
    value: string;
    case: "text";
  } | {
    /**
     * Optional. Inlined bytes data.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.Blob inline_data = 2;
     */
    value: Blob;
    case: "inlineData";
  } | {
    /**
     * Optional. URI based data.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.FileData file_data = 3;
     */
    value: FileData;
    case: "fileData";
  } | {
    /**
     * Optional. A predicted [FunctionCall] returned from the model that
     * contains a string representing the [FunctionDeclaration.name] with the
     * parameters and their values.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.FunctionCall function_call = 5;
     */
    value: FunctionCall;
    case: "functionCall";
  } | {
    /**
     * Optional. The result output of a [FunctionCall] that contains a string
     * representing the [FunctionDeclaration.name] and a structured JSON object
     * containing any output from the function call. It is used as context to
     * the model.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.FunctionResponse function_response = 6;
     */
    value: FunctionResponse;
    case: "functionResponse";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof google.cloud.aiplatform.v1beta1.Part.metadata
   */
  metadata: {
    /**
     * Optional. Video metadata. The metadata should only be specified while the
     * video data is presented in inline_data or file_data.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.VideoMetadata video_metadata = 4;
     */
    value: VideoMetadata;
    case: "videoMetadata";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Part.
 * Use `create(PartSchema)` to create a new message.
 */
export const PartSchema: GenMessage<Part> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 1);

/**
 * Content blob.
 *
 * It's preferred to send as [text][google.cloud.aiplatform.v1beta1.Part.text]
 * directly rather than raw bytes.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Blob
 */
export type Blob = Message<"google.cloud.aiplatform.v1beta1.Blob"> & {
  /**
   * Required. The IANA standard MIME type of the source data.
   *
   * @generated from field: string mime_type = 1;
   */
  mimeType: string;

  /**
   * Required. Raw bytes.
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Blob.
 * Use `create(BlobSchema)` to create a new message.
 */
export const BlobSchema: GenMessage<Blob> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 2);

/**
 * URI based data.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FileData
 */
export type FileData = Message<"google.cloud.aiplatform.v1beta1.FileData"> & {
  /**
   * Required. The IANA standard MIME type of the source data.
   *
   * @generated from field: string mime_type = 1;
   */
  mimeType: string;

  /**
   * Required. URI.
   *
   * @generated from field: string file_uri = 2;
   */
  fileUri: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FileData.
 * Use `create(FileDataSchema)` to create a new message.
 */
export const FileDataSchema: GenMessage<FileData> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 3);

/**
 * Metadata describes the input video content.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.VideoMetadata
 */
export type VideoMetadata = Message<"google.cloud.aiplatform.v1beta1.VideoMetadata"> & {
  /**
   * Optional. The start offset of the video.
   *
   * @generated from field: google.protobuf.Duration start_offset = 1;
   */
  startOffset?: Duration;

  /**
   * Optional. The end offset of the video.
   *
   * @generated from field: google.protobuf.Duration end_offset = 2;
   */
  endOffset?: Duration;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.VideoMetadata.
 * Use `create(VideoMetadataSchema)` to create a new message.
 */
export const VideoMetadataSchema: GenMessage<VideoMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 4);

/**
 * Generation config.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GenerationConfig
 */
export type GenerationConfig = Message<"google.cloud.aiplatform.v1beta1.GenerationConfig"> & {
  /**
   * Optional. Controls the randomness of predictions.
   *
   * @generated from field: optional float temperature = 1;
   */
  temperature?: number;

  /**
   * Optional. If specified, nucleus sampling will be used.
   *
   * @generated from field: optional float top_p = 2;
   */
  topP?: number;

  /**
   * Optional. If specified, top-k sampling will be used.
   *
   * @generated from field: optional float top_k = 3;
   */
  topK?: number;

  /**
   * Optional. Number of candidates to generate.
   *
   * @generated from field: optional int32 candidate_count = 4;
   */
  candidateCount?: number;

  /**
   * Optional. The maximum number of output tokens to generate per message.
   *
   * @generated from field: optional int32 max_output_tokens = 5;
   */
  maxOutputTokens?: number;

  /**
   * Optional. Stop sequences.
   *
   * @generated from field: repeated string stop_sequences = 6;
   */
  stopSequences: string[];

  /**
   * Optional. If true, export the logprobs results in response.
   *
   * @generated from field: optional bool response_logprobs = 18;
   */
  responseLogprobs?: boolean;

  /**
   * Optional. Logit probabilities.
   *
   * @generated from field: optional int32 logprobs = 7;
   */
  logprobs?: number;

  /**
   * Optional. Positive penalties.
   *
   * @generated from field: optional float presence_penalty = 8;
   */
  presencePenalty?: number;

  /**
   * Optional. Frequency penalties.
   *
   * @generated from field: optional float frequency_penalty = 9;
   */
  frequencyPenalty?: number;

  /**
   * Optional. Seed.
   *
   * @generated from field: optional int32 seed = 12;
   */
  seed?: number;

  /**
   * Optional. Output response mimetype of the generated candidate text.
   * Supported mimetype:
   * - `text/plain`: (default) Text output.
   * - `application/json`: JSON response in the candidates.
   * The model needs to be prompted to output the appropriate response type,
   * otherwise the behavior is undefined.
   * This is a preview feature.
   *
   * @generated from field: string response_mime_type = 13;
   */
  responseMimeType: string;

  /**
   * Optional. The `Schema` object allows the definition of input and output
   * data types. These types can be objects, but also primitives and arrays.
   * Represents a select subset of an [OpenAPI 3.0 schema
   * object](https://spec.openapis.org/oas/v3.0.3#schema).
   * If set, a compatible response_mime_type must also be set.
   * Compatible mimetypes:
   * `application/json`: Schema for JSON response.
   *
   * @generated from field: optional google.cloud.aiplatform.v1beta1.Schema response_schema = 16;
   */
  responseSchema?: Schema;

  /**
   * Optional. Routing configuration.
   *
   * @generated from field: optional google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig routing_config = 17;
   */
  routingConfig?: GenerationConfig_RoutingConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GenerationConfig.
 * Use `create(GenerationConfigSchema)` to create a new message.
 */
export const GenerationConfigSchema: GenMessage<GenerationConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 5);

/**
 * The configuration for routing the request to a specific model.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig
 */
export type GenerationConfig_RoutingConfig = Message<"google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig"> & {
  /**
   * Routing mode.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.routing_config
   */
  routingConfig: {
    /**
     * Automated routing.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode auto_mode = 1;
     */
    value: GenerationConfig_RoutingConfig_AutoRoutingMode;
    case: "autoMode";
  } | {
    /**
     * Manual routing.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.ManualRoutingMode manual_mode = 2;
     */
    value: GenerationConfig_RoutingConfig_ManualRoutingMode;
    case: "manualMode";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.
 * Use `create(GenerationConfig_RoutingConfigSchema)` to create a new message.
 */
export const GenerationConfig_RoutingConfigSchema: GenMessage<GenerationConfig_RoutingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 5, 0);

/**
 * When automated routing is specified, the routing will be determined by
 * the pretrained routing model and customer provided model routing
 * preference.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode
 */
export type GenerationConfig_RoutingConfig_AutoRoutingMode = Message<"google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode"> & {
  /**
   * The model routing preference.
   *
   * @generated from field: optional google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode.ModelRoutingPreference model_routing_preference = 1;
   */
  modelRoutingPreference?: GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode.
 * Use `create(GenerationConfig_RoutingConfig_AutoRoutingModeSchema)` to create a new message.
 */
export const GenerationConfig_RoutingConfig_AutoRoutingModeSchema: GenMessage<GenerationConfig_RoutingConfig_AutoRoutingMode> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 5, 0, 0);

/**
 * The model routing preference.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode.ModelRoutingPreference
 */
export enum GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference {
  /**
   * Unspecified model routing preference.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Prefer higher quality over low cost.
   *
   * @generated from enum value: PRIORITIZE_QUALITY = 1;
   */
  PRIORITIZE_QUALITY = 1,

  /**
   * Balanced model routing preference.
   *
   * @generated from enum value: BALANCED = 2;
   */
  BALANCED = 2,

  /**
   * Prefer lower cost over higher quality.
   *
   * @generated from enum value: PRIORITIZE_COST = 3;
   */
  PRIORITIZE_COST = 3,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode.ModelRoutingPreference.
 */
export const GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreferenceSchema: GenEnum<GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_content, 5, 0, 0, 0);

/**
 * When manual routing is set, the specified model will be used directly.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.ManualRoutingMode
 */
export type GenerationConfig_RoutingConfig_ManualRoutingMode = Message<"google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.ManualRoutingMode"> & {
  /**
   * The model name to use. Only the public LLM models are accepted. e.g.
   * 'gemini-1.5-pro-001'.
   *
   * @generated from field: optional string model_name = 1;
   */
  modelName?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GenerationConfig.RoutingConfig.ManualRoutingMode.
 * Use `create(GenerationConfig_RoutingConfig_ManualRoutingModeSchema)` to create a new message.
 */
export const GenerationConfig_RoutingConfig_ManualRoutingModeSchema: GenMessage<GenerationConfig_RoutingConfig_ManualRoutingMode> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 5, 0, 1);

/**
 * Safety settings.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.SafetySetting
 */
export type SafetySetting = Message<"google.cloud.aiplatform.v1beta1.SafetySetting"> & {
  /**
   * Required. Harm category.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.HarmCategory category = 1;
   */
  category: HarmCategory;

  /**
   * Required. The harm block threshold.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.SafetySetting.HarmBlockThreshold threshold = 2;
   */
  threshold: SafetySetting_HarmBlockThreshold;

  /**
   * Optional. Specify if the threshold is used for probability or severity
   * score. If not specified, the threshold is used for probability score.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.SafetySetting.HarmBlockMethod method = 4;
   */
  method: SafetySetting_HarmBlockMethod;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.SafetySetting.
 * Use `create(SafetySettingSchema)` to create a new message.
 */
export const SafetySettingSchema: GenMessage<SafetySetting> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 6);

/**
 * Probability based thresholds levels for blocking.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.SafetySetting.HarmBlockThreshold
 */
export enum SafetySetting_HarmBlockThreshold {
  /**
   * Unspecified harm block threshold.
   *
   * @generated from enum value: HARM_BLOCK_THRESHOLD_UNSPECIFIED = 0;
   */
  HARM_BLOCK_THRESHOLD_UNSPECIFIED = 0,

  /**
   * Block low threshold and above (i.e. block more).
   *
   * @generated from enum value: BLOCK_LOW_AND_ABOVE = 1;
   */
  BLOCK_LOW_AND_ABOVE = 1,

  /**
   * Block medium threshold and above.
   *
   * @generated from enum value: BLOCK_MEDIUM_AND_ABOVE = 2;
   */
  BLOCK_MEDIUM_AND_ABOVE = 2,

  /**
   * Block only high threshold (i.e. block less).
   *
   * @generated from enum value: BLOCK_ONLY_HIGH = 3;
   */
  BLOCK_ONLY_HIGH = 3,

  /**
   * Block none.
   *
   * @generated from enum value: BLOCK_NONE = 4;
   */
  BLOCK_NONE = 4,

  /**
   * Turn off the safety filter.
   *
   * @generated from enum value: OFF = 5;
   */
  OFF = 5,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.SafetySetting.HarmBlockThreshold.
 */
export const SafetySetting_HarmBlockThresholdSchema: GenEnum<SafetySetting_HarmBlockThreshold> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_content, 6, 0);

/**
 * Probability vs severity.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.SafetySetting.HarmBlockMethod
 */
export enum SafetySetting_HarmBlockMethod {
  /**
   * The harm block method is unspecified.
   *
   * @generated from enum value: HARM_BLOCK_METHOD_UNSPECIFIED = 0;
   */
  HARM_BLOCK_METHOD_UNSPECIFIED = 0,

  /**
   * The harm block method uses both probability and severity scores.
   *
   * @generated from enum value: SEVERITY = 1;
   */
  SEVERITY = 1,

  /**
   * The harm block method uses the probability score.
   *
   * @generated from enum value: PROBABILITY = 2;
   */
  PROBABILITY = 2,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.SafetySetting.HarmBlockMethod.
 */
export const SafetySetting_HarmBlockMethodSchema: GenEnum<SafetySetting_HarmBlockMethod> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_content, 6, 1);

/**
 * Safety rating corresponding to the generated content.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.SafetyRating
 */
export type SafetyRating = Message<"google.cloud.aiplatform.v1beta1.SafetyRating"> & {
  /**
   * Output only. Harm category.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.HarmCategory category = 1;
   */
  category: HarmCategory;

  /**
   * Output only. Harm probability levels in the content.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.SafetyRating.HarmProbability probability = 2;
   */
  probability: SafetyRating_HarmProbability;

  /**
   * Output only. Harm probability score.
   *
   * @generated from field: float probability_score = 5;
   */
  probabilityScore: number;

  /**
   * Output only. Harm severity levels in the content.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.SafetyRating.HarmSeverity severity = 6;
   */
  severity: SafetyRating_HarmSeverity;

  /**
   * Output only. Harm severity score.
   *
   * @generated from field: float severity_score = 7;
   */
  severityScore: number;

  /**
   * Output only. Indicates whether the content was filtered out because of this
   * rating.
   *
   * @generated from field: bool blocked = 3;
   */
  blocked: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.SafetyRating.
 * Use `create(SafetyRatingSchema)` to create a new message.
 */
export const SafetyRatingSchema: GenMessage<SafetyRating> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 7);

/**
 * Harm probability levels in the content.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.SafetyRating.HarmProbability
 */
export enum SafetyRating_HarmProbability {
  /**
   * Harm probability unspecified.
   *
   * @generated from enum value: HARM_PROBABILITY_UNSPECIFIED = 0;
   */
  HARM_PROBABILITY_UNSPECIFIED = 0,

  /**
   * Negligible level of harm.
   *
   * @generated from enum value: NEGLIGIBLE = 1;
   */
  NEGLIGIBLE = 1,

  /**
   * Low level of harm.
   *
   * @generated from enum value: LOW = 2;
   */
  LOW = 2,

  /**
   * Medium level of harm.
   *
   * @generated from enum value: MEDIUM = 3;
   */
  MEDIUM = 3,

  /**
   * High level of harm.
   *
   * @generated from enum value: HIGH = 4;
   */
  HIGH = 4,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.SafetyRating.HarmProbability.
 */
export const SafetyRating_HarmProbabilitySchema: GenEnum<SafetyRating_HarmProbability> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_content, 7, 0);

/**
 * Harm severity levels.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.SafetyRating.HarmSeverity
 */
export enum SafetyRating_HarmSeverity {
  /**
   * Harm severity unspecified.
   *
   * @generated from enum value: HARM_SEVERITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Negligible level of harm severity.
   *
   * @generated from enum value: HARM_SEVERITY_NEGLIGIBLE = 1;
   */
  NEGLIGIBLE = 1,

  /**
   * Low level of harm severity.
   *
   * @generated from enum value: HARM_SEVERITY_LOW = 2;
   */
  LOW = 2,

  /**
   * Medium level of harm severity.
   *
   * @generated from enum value: HARM_SEVERITY_MEDIUM = 3;
   */
  MEDIUM = 3,

  /**
   * High level of harm severity.
   *
   * @generated from enum value: HARM_SEVERITY_HIGH = 4;
   */
  HIGH = 4,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.SafetyRating.HarmSeverity.
 */
export const SafetyRating_HarmSeveritySchema: GenEnum<SafetyRating_HarmSeverity> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_content, 7, 1);

/**
 * A collection of source attributions for a piece of content.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CitationMetadata
 */
export type CitationMetadata = Message<"google.cloud.aiplatform.v1beta1.CitationMetadata"> & {
  /**
   * Output only. List of citations.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Citation citations = 1;
   */
  citations: Citation[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CitationMetadata.
 * Use `create(CitationMetadataSchema)` to create a new message.
 */
export const CitationMetadataSchema: GenMessage<CitationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 8);

/**
 * Source attributions for content.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Citation
 */
export type Citation = Message<"google.cloud.aiplatform.v1beta1.Citation"> & {
  /**
   * Output only. Start index into the content.
   *
   * @generated from field: int32 start_index = 1;
   */
  startIndex: number;

  /**
   * Output only. End index into the content.
   *
   * @generated from field: int32 end_index = 2;
   */
  endIndex: number;

  /**
   * Output only. Url reference of the attribution.
   *
   * @generated from field: string uri = 3;
   */
  uri: string;

  /**
   * Output only. Title of the attribution.
   *
   * @generated from field: string title = 4;
   */
  title: string;

  /**
   * Output only. License of the attribution.
   *
   * @generated from field: string license = 5;
   */
  license: string;

  /**
   * Output only. Publication date of the attribution.
   *
   * @generated from field: google.type.Date publication_date = 6;
   */
  publicationDate?: Date;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Citation.
 * Use `create(CitationSchema)` to create a new message.
 */
export const CitationSchema: GenMessage<Citation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 9);

/**
 * A response candidate generated from the model.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Candidate
 */
export type Candidate = Message<"google.cloud.aiplatform.v1beta1.Candidate"> & {
  /**
   * Output only. Index of the candidate.
   *
   * @generated from field: int32 index = 1;
   */
  index: number;

  /**
   * Output only. Content parts of the candidate.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Content content = 2;
   */
  content?: Content;

  /**
   * Output only. Average log probability score of the candidate.
   *
   * @generated from field: double avg_logprobs = 9;
   */
  avgLogprobs: number;

  /**
   * Output only. Log-likelihood scores for the response tokens and top tokens
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.LogprobsResult logprobs_result = 10;
   */
  logprobsResult?: LogprobsResult;

  /**
   * Output only. The reason why the model stopped generating tokens.
   * If empty, the model has not stopped generating the tokens.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Candidate.FinishReason finish_reason = 3;
   */
  finishReason: Candidate_FinishReason;

  /**
   * Output only. List of ratings for the safety of a response candidate.
   *
   * There is at most one rating per category.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.SafetyRating safety_ratings = 4;
   */
  safetyRatings: SafetyRating[];

  /**
   * Output only. Describes the reason the mode stopped generating tokens in
   * more detail. This is only filled when `finish_reason` is set.
   *
   * @generated from field: optional string finish_message = 5;
   */
  finishMessage?: string;

  /**
   * Output only. Source attribution of the generated content.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.CitationMetadata citation_metadata = 6;
   */
  citationMetadata?: CitationMetadata;

  /**
   * Output only. Metadata specifies sources used to ground generated content.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GroundingMetadata grounding_metadata = 7;
   */
  groundingMetadata?: GroundingMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Candidate.
 * Use `create(CandidateSchema)` to create a new message.
 */
export const CandidateSchema: GenMessage<Candidate> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 10);

/**
 * The reason why the model stopped generating tokens.
 * If empty, the model has not stopped generating the tokens.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.Candidate.FinishReason
 */
export enum Candidate_FinishReason {
  /**
   * The finish reason is unspecified.
   *
   * @generated from enum value: FINISH_REASON_UNSPECIFIED = 0;
   */
  FINISH_REASON_UNSPECIFIED = 0,

  /**
   * Token generation reached a natural stopping point or a configured stop
   * sequence.
   *
   * @generated from enum value: STOP = 1;
   */
  STOP = 1,

  /**
   * Token generation reached the configured maximum output tokens.
   *
   * @generated from enum value: MAX_TOKENS = 2;
   */
  MAX_TOKENS = 2,

  /**
   * Token generation stopped because the content potentially contains safety
   * violations. NOTE: When streaming,
   * [content][google.cloud.aiplatform.v1beta1.Candidate.content] is empty if
   * content filters blocks the output.
   *
   * @generated from enum value: SAFETY = 3;
   */
  SAFETY = 3,

  /**
   * Token generation stopped because the content potentially contains
   * copyright violations.
   *
   * @generated from enum value: RECITATION = 4;
   */
  RECITATION = 4,

  /**
   * All other reasons that stopped the token generation.
   *
   * @generated from enum value: OTHER = 5;
   */
  OTHER = 5,

  /**
   * Token generation stopped because the content contains forbidden terms.
   *
   * @generated from enum value: BLOCKLIST = 6;
   */
  BLOCKLIST = 6,

  /**
   * Token generation stopped for potentially containing prohibited content.
   *
   * @generated from enum value: PROHIBITED_CONTENT = 7;
   */
  PROHIBITED_CONTENT = 7,

  /**
   * Token generation stopped because the content potentially contains
   * Sensitive Personally Identifiable Information (SPII).
   *
   * @generated from enum value: SPII = 8;
   */
  SPII = 8,

  /**
   * The function call generated by the model is invalid.
   *
   * @generated from enum value: MALFORMED_FUNCTION_CALL = 9;
   */
  MALFORMED_FUNCTION_CALL = 9,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.Candidate.FinishReason.
 */
export const Candidate_FinishReasonSchema: GenEnum<Candidate_FinishReason> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_content, 10, 0);

/**
 * Logprobs Result
 *
 * @generated from message google.cloud.aiplatform.v1beta1.LogprobsResult
 */
export type LogprobsResult = Message<"google.cloud.aiplatform.v1beta1.LogprobsResult"> & {
  /**
   * Length = total number of decoding steps.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.LogprobsResult.TopCandidates top_candidates = 1;
   */
  topCandidates: LogprobsResult_TopCandidates[];

  /**
   * Length = total number of decoding steps.
   * The chosen candidates may or may not be in top_candidates.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.LogprobsResult.Candidate chosen_candidates = 2;
   */
  chosenCandidates: LogprobsResult_Candidate[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.LogprobsResult.
 * Use `create(LogprobsResultSchema)` to create a new message.
 */
export const LogprobsResultSchema: GenMessage<LogprobsResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 11);

/**
 * Candidate for the logprobs token and score.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.LogprobsResult.Candidate
 */
export type LogprobsResult_Candidate = Message<"google.cloud.aiplatform.v1beta1.LogprobsResult.Candidate"> & {
  /**
   * The candidate’s token string value.
   *
   * @generated from field: optional string token = 1;
   */
  token?: string;

  /**
   * The candidate’s token id value.
   *
   * @generated from field: optional int32 token_id = 3;
   */
  tokenId?: number;

  /**
   * The candidate's log probability.
   *
   * @generated from field: optional float log_probability = 2;
   */
  logProbability?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.LogprobsResult.Candidate.
 * Use `create(LogprobsResult_CandidateSchema)` to create a new message.
 */
export const LogprobsResult_CandidateSchema: GenMessage<LogprobsResult_Candidate> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 11, 0);

/**
 * Candidates with top log probabilities at each decoding step.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.LogprobsResult.TopCandidates
 */
export type LogprobsResult_TopCandidates = Message<"google.cloud.aiplatform.v1beta1.LogprobsResult.TopCandidates"> & {
  /**
   * Sorted by log probability in descending order.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.LogprobsResult.Candidate candidates = 1;
   */
  candidates: LogprobsResult_Candidate[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.LogprobsResult.TopCandidates.
 * Use `create(LogprobsResult_TopCandidatesSchema)` to create a new message.
 */
export const LogprobsResult_TopCandidatesSchema: GenMessage<LogprobsResult_TopCandidates> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 11, 1);

/**
 * Segment of the content.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Segment
 */
export type Segment = Message<"google.cloud.aiplatform.v1beta1.Segment"> & {
  /**
   * Output only. The index of a Part object within its parent Content object.
   *
   * @generated from field: int32 part_index = 1;
   */
  partIndex: number;

  /**
   * Output only. Start index in the given Part, measured in bytes. Offset from
   * the start of the Part, inclusive, starting at zero.
   *
   * @generated from field: int32 start_index = 2;
   */
  startIndex: number;

  /**
   * Output only. End index in the given Part, measured in bytes. Offset from
   * the start of the Part, exclusive, starting at zero.
   *
   * @generated from field: int32 end_index = 3;
   */
  endIndex: number;

  /**
   * Output only. The text corresponding to the segment from the response.
   *
   * @generated from field: string text = 4;
   */
  text: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Segment.
 * Use `create(SegmentSchema)` to create a new message.
 */
export const SegmentSchema: GenMessage<Segment> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 12);

/**
 * Grounding chunk.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GroundingChunk
 */
export type GroundingChunk = Message<"google.cloud.aiplatform.v1beta1.GroundingChunk"> & {
  /**
   * Chunk type.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.GroundingChunk.chunk_type
   */
  chunkType: {
    /**
     * Grounding chunk from the web.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.GroundingChunk.Web web = 1;
     */
    value: GroundingChunk_Web;
    case: "web";
  } | {
    /**
     * Grounding chunk from context retrieved by the retrieval tools.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.GroundingChunk.RetrievedContext retrieved_context = 2;
     */
    value: GroundingChunk_RetrievedContext;
    case: "retrievedContext";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GroundingChunk.
 * Use `create(GroundingChunkSchema)` to create a new message.
 */
export const GroundingChunkSchema: GenMessage<GroundingChunk> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 13);

/**
 * Chunk from the web.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GroundingChunk.Web
 */
export type GroundingChunk_Web = Message<"google.cloud.aiplatform.v1beta1.GroundingChunk.Web"> & {
  /**
   * URI reference of the chunk.
   *
   * @generated from field: optional string uri = 1;
   */
  uri?: string;

  /**
   * Title of the chunk.
   *
   * @generated from field: optional string title = 2;
   */
  title?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GroundingChunk.Web.
 * Use `create(GroundingChunk_WebSchema)` to create a new message.
 */
export const GroundingChunk_WebSchema: GenMessage<GroundingChunk_Web> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 13, 0);

/**
 * Chunk from context retrieved by the retrieval tools.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GroundingChunk.RetrievedContext
 */
export type GroundingChunk_RetrievedContext = Message<"google.cloud.aiplatform.v1beta1.GroundingChunk.RetrievedContext"> & {
  /**
   * URI reference of the attribution.
   *
   * @generated from field: optional string uri = 1;
   */
  uri?: string;

  /**
   * Title of the attribution.
   *
   * @generated from field: optional string title = 2;
   */
  title?: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GroundingChunk.RetrievedContext.
 * Use `create(GroundingChunk_RetrievedContextSchema)` to create a new message.
 */
export const GroundingChunk_RetrievedContextSchema: GenMessage<GroundingChunk_RetrievedContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 13, 1);

/**
 * Grounding support.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GroundingSupport
 */
export type GroundingSupport = Message<"google.cloud.aiplatform.v1beta1.GroundingSupport"> & {
  /**
   * Segment of the content this support belongs to.
   *
   * @generated from field: optional google.cloud.aiplatform.v1beta1.Segment segment = 1;
   */
  segment?: Segment;

  /**
   * A list of indices (into 'grounding_chunk') specifying the
   * citations associated with the claim. For instance [1,3,4] means
   * that grounding_chunk[1], grounding_chunk[3],
   * grounding_chunk[4] are the retrieved content attributed to the claim.
   *
   * @generated from field: repeated int32 grounding_chunk_indices = 2;
   */
  groundingChunkIndices: number[];

  /**
   * Confidence score of the support references. Ranges from 0 to 1. 1 is the
   * most confident. This list must have the same size as the
   * grounding_chunk_indices.
   *
   * @generated from field: repeated float confidence_scores = 3;
   */
  confidenceScores: number[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GroundingSupport.
 * Use `create(GroundingSupportSchema)` to create a new message.
 */
export const GroundingSupportSchema: GenMessage<GroundingSupport> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 14);

/**
 * Metadata returned to client when grounding is enabled.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GroundingMetadata
 */
export type GroundingMetadata = Message<"google.cloud.aiplatform.v1beta1.GroundingMetadata"> & {
  /**
   * Optional. Web search queries for the following-up web search.
   *
   * @generated from field: repeated string web_search_queries = 1;
   */
  webSearchQueries: string[];

  /**
   * Optional. Google search entry for the following-up web searches.
   *
   * @generated from field: optional google.cloud.aiplatform.v1beta1.SearchEntryPoint search_entry_point = 4;
   */
  searchEntryPoint?: SearchEntryPoint;

  /**
   * Optional. Queries executed by the retrieval tools.
   *
   * @generated from field: repeated string retrieval_queries = 3;
   */
  retrievalQueries: string[];

  /**
   * List of supporting references retrieved from specified grounding source.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.GroundingChunk grounding_chunks = 5;
   */
  groundingChunks: GroundingChunk[];

  /**
   * Optional. List of grounding support.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.GroundingSupport grounding_supports = 6;
   */
  groundingSupports: GroundingSupport[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GroundingMetadata.
 * Use `create(GroundingMetadataSchema)` to create a new message.
 */
export const GroundingMetadataSchema: GenMessage<GroundingMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 15);

/**
 * Google search entry point.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.SearchEntryPoint
 */
export type SearchEntryPoint = Message<"google.cloud.aiplatform.v1beta1.SearchEntryPoint"> & {
  /**
   * Optional. Web content snippet that can be embedded in a web page or an app
   * webview.
   *
   * @generated from field: string rendered_content = 1;
   */
  renderedContent: string;

  /**
   * Optional. Base64 encoded JSON representing array of <search term, search
   * url> tuple.
   *
   * @generated from field: bytes sdk_blob = 2;
   */
  sdkBlob: Uint8Array;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.SearchEntryPoint.
 * Use `create(SearchEntryPointSchema)` to create a new message.
 */
export const SearchEntryPointSchema: GenMessage<SearchEntryPoint> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_content, 16);

/**
 * Harm categories that will block the content.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.HarmCategory
 */
export enum HarmCategory {
  /**
   * The harm category is unspecified.
   *
   * @generated from enum value: HARM_CATEGORY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The harm category is hate speech.
   *
   * @generated from enum value: HARM_CATEGORY_HATE_SPEECH = 1;
   */
  HATE_SPEECH = 1,

  /**
   * The harm category is dangerous content.
   *
   * @generated from enum value: HARM_CATEGORY_DANGEROUS_CONTENT = 2;
   */
  DANGEROUS_CONTENT = 2,

  /**
   * The harm category is harassment.
   *
   * @generated from enum value: HARM_CATEGORY_HARASSMENT = 3;
   */
  HARASSMENT = 3,

  /**
   * The harm category is sexually explicit content.
   *
   * @generated from enum value: HARM_CATEGORY_SEXUALLY_EXPLICIT = 4;
   */
  SEXUALLY_EXPLICIT = 4,

  /**
   * The harm category is civic integrity.
   *
   * @generated from enum value: HARM_CATEGORY_CIVIC_INTEGRITY = 5;
   */
  CIVIC_INTEGRITY = 5,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.HarmCategory.
 */
export const HarmCategorySchema: GenEnum<HarmCategory> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_content, 0);

