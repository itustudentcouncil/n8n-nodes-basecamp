// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/metadata_service.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Artifact, ArtifactSchema } from "./artifact_pb";
import { file_google_cloud_aiplatform_v1beta1_artifact } from "./artifact_pb";
import type { Context, ContextSchema } from "./context_pb";
import { file_google_cloud_aiplatform_v1beta1_context } from "./context_pb";
import type { Event } from "./event_pb";
import { file_google_cloud_aiplatform_v1beta1_event } from "./event_pb";
import type { Execution, ExecutionSchema } from "./execution_pb";
import { file_google_cloud_aiplatform_v1beta1_execution } from "./execution_pb";
import type { LineageSubgraphSchema } from "./lineage_subgraph_pb";
import { file_google_cloud_aiplatform_v1beta1_lineage_subgraph } from "./lineage_subgraph_pb";
import type { MetadataSchema, MetadataSchemaSchema } from "./metadata_schema_pb";
import { file_google_cloud_aiplatform_v1beta1_metadata_schema } from "./metadata_schema_pb";
import type { MetadataStore, MetadataStoreSchema } from "./metadata_store_pb";
import { file_google_cloud_aiplatform_v1beta1_metadata_store } from "./metadata_store_pb";
import type { GenericOperationMetadata } from "./operation_pb";
import { file_google_cloud_aiplatform_v1beta1_operation } from "./operation_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/metadata_service.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_metadata_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1beta1_artifact, file_google_cloud_aiplatform_v1beta1_context, file_google_cloud_aiplatform_v1beta1_event, file_google_cloud_aiplatform_v1beta1_execution, file_google_cloud_aiplatform_v1beta1_lineage_subgraph, file_google_cloud_aiplatform_v1beta1_metadata_schema, file_google_cloud_aiplatform_v1beta1_metadata_store, file_google_cloud_aiplatform_v1beta1_operation, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Request message for
 * [MetadataService.CreateMetadataStore][google.cloud.aiplatform.v1beta1.MetadataService.CreateMetadataStore].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateMetadataStoreRequest
 */
export type CreateMetadataStoreRequest = Message<"google.cloud.aiplatform.v1beta1.CreateMetadataStoreRequest"> & {
  /**
   * Required. The resource name of the Location where the MetadataStore should
   * be created.
   * Format: `projects/{project}/locations/{location}/`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The MetadataStore to create.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.MetadataStore metadata_store = 2;
   */
  metadataStore?: MetadataStore;

  /**
   * The {metadatastore} portion of the resource name with the format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   * If not provided, the MetadataStore's ID will be a UUID generated by the
   * service.
   * Must be 4-128 characters in length. Valid characters are `/[a-z][0-9]-/`.
   * Must be unique across all MetadataStores in the parent Location.
   * (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED
   * if the caller can't view the preexisting MetadataStore.)
   *
   * @generated from field: string metadata_store_id = 3;
   */
  metadataStoreId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateMetadataStoreRequest.
 * Use `create(CreateMetadataStoreRequestSchema)` to create a new message.
 */
export const CreateMetadataStoreRequestSchema: GenMessage<CreateMetadataStoreRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 0);

/**
 * Details of operations that perform
 * [MetadataService.CreateMetadataStore][google.cloud.aiplatform.v1beta1.MetadataService.CreateMetadataStore].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateMetadataStoreOperationMetadata
 */
export type CreateMetadataStoreOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.CreateMetadataStoreOperationMetadata"> & {
  /**
   * Operation metadata for creating a MetadataStore.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateMetadataStoreOperationMetadata.
 * Use `create(CreateMetadataStoreOperationMetadataSchema)` to create a new message.
 */
export const CreateMetadataStoreOperationMetadataSchema: GenMessage<CreateMetadataStoreOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 1);

/**
 * Request message for
 * [MetadataService.GetMetadataStore][google.cloud.aiplatform.v1beta1.MetadataService.GetMetadataStore].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetMetadataStoreRequest
 */
export type GetMetadataStoreRequest = Message<"google.cloud.aiplatform.v1beta1.GetMetadataStoreRequest"> & {
  /**
   * Required. The resource name of the MetadataStore to retrieve.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetMetadataStoreRequest.
 * Use `create(GetMetadataStoreRequestSchema)` to create a new message.
 */
export const GetMetadataStoreRequestSchema: GenMessage<GetMetadataStoreRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 2);

/**
 * Request message for
 * [MetadataService.ListMetadataStores][google.cloud.aiplatform.v1beta1.MetadataService.ListMetadataStores].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListMetadataStoresRequest
 */
export type ListMetadataStoresRequest = Message<"google.cloud.aiplatform.v1beta1.ListMetadataStoresRequest"> & {
  /**
   * Required. The Location whose MetadataStores should be listed.
   * Format:
   * `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of Metadata Stores to return. The service may return
   * fewer.
   * Must be in range 1-1000, inclusive. Defaults to 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [MetadataService.ListMetadataStores][google.cloud.aiplatform.v1beta1.MetadataService.ListMetadataStores]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters must match the call that
   * provided the page token. (Otherwise the request will fail with
   * INVALID_ARGUMENT error.)
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListMetadataStoresRequest.
 * Use `create(ListMetadataStoresRequestSchema)` to create a new message.
 */
export const ListMetadataStoresRequestSchema: GenMessage<ListMetadataStoresRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 3);

/**
 * Response message for
 * [MetadataService.ListMetadataStores][google.cloud.aiplatform.v1beta1.MetadataService.ListMetadataStores].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListMetadataStoresResponse
 */
export type ListMetadataStoresResponse = Message<"google.cloud.aiplatform.v1beta1.ListMetadataStoresResponse"> & {
  /**
   * The MetadataStores found for the Location.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.MetadataStore metadata_stores = 1;
   */
  metadataStores: MetadataStore[];

  /**
   * A token, which can be sent as
   * [ListMetadataStoresRequest.page_token][google.cloud.aiplatform.v1beta1.ListMetadataStoresRequest.page_token]
   * to retrieve the next page. If this field is not populated, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListMetadataStoresResponse.
 * Use `create(ListMetadataStoresResponseSchema)` to create a new message.
 */
export const ListMetadataStoresResponseSchema: GenMessage<ListMetadataStoresResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 4);

/**
 * Request message for
 * [MetadataService.DeleteMetadataStore][google.cloud.aiplatform.v1beta1.MetadataService.DeleteMetadataStore].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteMetadataStoreRequest
 */
export type DeleteMetadataStoreRequest = Message<"google.cloud.aiplatform.v1beta1.DeleteMetadataStoreRequest"> & {
  /**
   * Required. The resource name of the MetadataStore to delete.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Deprecated: Field is no longer supported.
   *
   * @generated from field: bool force = 2 [deprecated = true];
   * @deprecated
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteMetadataStoreRequest.
 * Use `create(DeleteMetadataStoreRequestSchema)` to create a new message.
 */
export const DeleteMetadataStoreRequestSchema: GenMessage<DeleteMetadataStoreRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 5);

/**
 * Details of operations that perform
 * [MetadataService.DeleteMetadataStore][google.cloud.aiplatform.v1beta1.MetadataService.DeleteMetadataStore].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteMetadataStoreOperationMetadata
 */
export type DeleteMetadataStoreOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.DeleteMetadataStoreOperationMetadata"> & {
  /**
   * Operation metadata for deleting a MetadataStore.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteMetadataStoreOperationMetadata.
 * Use `create(DeleteMetadataStoreOperationMetadataSchema)` to create a new message.
 */
export const DeleteMetadataStoreOperationMetadataSchema: GenMessage<DeleteMetadataStoreOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 6);

/**
 * Request message for
 * [MetadataService.CreateArtifact][google.cloud.aiplatform.v1beta1.MetadataService.CreateArtifact].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateArtifactRequest
 */
export type CreateArtifactRequest = Message<"google.cloud.aiplatform.v1beta1.CreateArtifactRequest"> & {
  /**
   * Required. The resource name of the MetadataStore where the Artifact should
   * be created.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The Artifact to create.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Artifact artifact = 2;
   */
  artifact?: Artifact;

  /**
   * The {artifact} portion of the resource name with the format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
   * If not provided, the Artifact's ID will be a UUID generated by the service.
   * Must be 4-128 characters in length. Valid characters are `/[a-z][0-9]-/`.
   * Must be unique across all Artifacts in the parent MetadataStore. (Otherwise
   * the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the
   * caller can't view the preexisting Artifact.)
   *
   * @generated from field: string artifact_id = 3;
   */
  artifactId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateArtifactRequest.
 * Use `create(CreateArtifactRequestSchema)` to create a new message.
 */
export const CreateArtifactRequestSchema: GenMessage<CreateArtifactRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 7);

/**
 * Request message for
 * [MetadataService.GetArtifact][google.cloud.aiplatform.v1beta1.MetadataService.GetArtifact].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetArtifactRequest
 */
export type GetArtifactRequest = Message<"google.cloud.aiplatform.v1beta1.GetArtifactRequest"> & {
  /**
   * Required. The resource name of the Artifact to retrieve.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetArtifactRequest.
 * Use `create(GetArtifactRequestSchema)` to create a new message.
 */
export const GetArtifactRequestSchema: GenMessage<GetArtifactRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 8);

/**
 * Request message for
 * [MetadataService.ListArtifacts][google.cloud.aiplatform.v1beta1.MetadataService.ListArtifacts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListArtifactsRequest
 */
export type ListArtifactsRequest = Message<"google.cloud.aiplatform.v1beta1.ListArtifactsRequest"> & {
  /**
   * Required. The MetadataStore whose Artifacts should be listed.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of Artifacts to return. The service may return fewer.
   * Must be in range 1-1000, inclusive. Defaults to 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [MetadataService.ListArtifacts][google.cloud.aiplatform.v1beta1.MetadataService.ListArtifacts]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters must match the call that
   * provided the page token. (Otherwise the request will fail with
   * INVALID_ARGUMENT error.)
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter specifying the boolean condition for the Artifacts to satisfy in
   * order to be part of the result set.
   * The syntax to define filter query is based on https://google.aip.dev/160.
   * The supported set of filters include the following:
   *
   * *   **Attribute filtering**:
   *     For example: `display_name = "test"`.
   *     Supported fields include: `name`, `display_name`, `uri`, `state`,
   *     `schema_title`, `create_time`, and `update_time`.
   *     Time fields, such as `create_time` and `update_time`, require values
   *     specified in RFC-3339 format.
   *     For example: `create_time = "2020-11-19T11:30:00-04:00"`
   * *   **Metadata field**:
   *     To filter on metadata fields use traversal operation as follows:
   *     `metadata.<field_name>.<type_value>`.
   *     For example: `metadata.field_1.number_value = 10.0`
   *     In case the field name contains special characters (such as colon), one
   *     can embed it inside double quote.
   *     For example: `metadata."field:1".number_value = 10.0`
   * *   **Context based filtering**:
   *     To filter Artifacts based on the contexts to which they belong, use the
   *     function operator with the full resource name
   *     `in_context(<context-name>)`.
   *     For example:
   *     `in_context("projects/<project_number>/locations/<location>/metadataStores/<metadatastore_name>/contexts/<context-id>")`
   *
   * Each of the above supported filter types can be combined together using
   * logical operators (`AND` & `OR`). Maximum nested expression depth allowed
   * is 5.
   *
   * For example: `display_name = "test" AND metadata.field1.bool_value = true`.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * How the list of messages is ordered. Specify the values to order by and an
   * ordering operation. The default sorting order is ascending. To specify
   * descending order for a field, users append a " desc" suffix; for example:
   * "foo desc, bar".
   * Subfields are specified with a `.` character, such as foo.bar.
   * see https://google.aip.dev/132#ordering for more details.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListArtifactsRequest.
 * Use `create(ListArtifactsRequestSchema)` to create a new message.
 */
export const ListArtifactsRequestSchema: GenMessage<ListArtifactsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 9);

/**
 * Response message for
 * [MetadataService.ListArtifacts][google.cloud.aiplatform.v1beta1.MetadataService.ListArtifacts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListArtifactsResponse
 */
export type ListArtifactsResponse = Message<"google.cloud.aiplatform.v1beta1.ListArtifactsResponse"> & {
  /**
   * The Artifacts retrieved from the MetadataStore.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Artifact artifacts = 1;
   */
  artifacts: Artifact[];

  /**
   * A token, which can be sent as
   * [ListArtifactsRequest.page_token][google.cloud.aiplatform.v1beta1.ListArtifactsRequest.page_token]
   * to retrieve the next page.
   * If this field is not populated, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListArtifactsResponse.
 * Use `create(ListArtifactsResponseSchema)` to create a new message.
 */
export const ListArtifactsResponseSchema: GenMessage<ListArtifactsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 10);

/**
 * Request message for
 * [MetadataService.UpdateArtifact][google.cloud.aiplatform.v1beta1.MetadataService.UpdateArtifact].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateArtifactRequest
 */
export type UpdateArtifactRequest = Message<"google.cloud.aiplatform.v1beta1.UpdateArtifactRequest"> & {
  /**
   * Required. The Artifact containing updates.
   * The Artifact's
   * [Artifact.name][google.cloud.aiplatform.v1beta1.Artifact.name] field is
   * used to identify the Artifact to be updated. Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Artifact artifact = 1;
   */
  artifact?: Artifact;

  /**
   * Optional. A FieldMask indicating which fields should be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * If set to true, and the
   * [Artifact][google.cloud.aiplatform.v1beta1.Artifact] is not found, a new
   * [Artifact][google.cloud.aiplatform.v1beta1.Artifact] is created.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateArtifactRequest.
 * Use `create(UpdateArtifactRequestSchema)` to create a new message.
 */
export const UpdateArtifactRequestSchema: GenMessage<UpdateArtifactRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 11);

/**
 * Request message for
 * [MetadataService.DeleteArtifact][google.cloud.aiplatform.v1beta1.MetadataService.DeleteArtifact].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteArtifactRequest
 */
export type DeleteArtifactRequest = Message<"google.cloud.aiplatform.v1beta1.DeleteArtifactRequest"> & {
  /**
   * Required. The resource name of the Artifact to delete.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The etag of the Artifact to delete.
   * If this is provided, it must match the server's etag. Otherwise, the
   * request will fail with a FAILED_PRECONDITION.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteArtifactRequest.
 * Use `create(DeleteArtifactRequestSchema)` to create a new message.
 */
export const DeleteArtifactRequestSchema: GenMessage<DeleteArtifactRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 12);

/**
 * Request message for
 * [MetadataService.PurgeArtifacts][google.cloud.aiplatform.v1beta1.MetadataService.PurgeArtifacts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.PurgeArtifactsRequest
 */
export type PurgeArtifactsRequest = Message<"google.cloud.aiplatform.v1beta1.PurgeArtifactsRequest"> & {
  /**
   * Required. The metadata store to purge Artifacts from.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. A required filter matching the Artifacts to be purged.
   * E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. Flag to indicate to actually perform the purge.
   * If `force` is set to false, the method will return a sample of
   * Artifact names that would be deleted.
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.PurgeArtifactsRequest.
 * Use `create(PurgeArtifactsRequestSchema)` to create a new message.
 */
export const PurgeArtifactsRequestSchema: GenMessage<PurgeArtifactsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 13);

/**
 * Response message for
 * [MetadataService.PurgeArtifacts][google.cloud.aiplatform.v1beta1.MetadataService.PurgeArtifacts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.PurgeArtifactsResponse
 */
export type PurgeArtifactsResponse = Message<"google.cloud.aiplatform.v1beta1.PurgeArtifactsResponse"> & {
  /**
   * The number of Artifacts that this request deleted (or, if `force` is false,
   * the number of Artifacts that will be deleted). This can be an estimate.
   *
   * @generated from field: int64 purge_count = 1;
   */
  purgeCount: bigint;

  /**
   * A sample of the Artifact names that will be deleted.
   * Only populated if `force` is set to false. The maximum number of samples is
   * 100 (it is possible to return fewer).
   *
   * @generated from field: repeated string purge_sample = 2;
   */
  purgeSample: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.PurgeArtifactsResponse.
 * Use `create(PurgeArtifactsResponseSchema)` to create a new message.
 */
export const PurgeArtifactsResponseSchema: GenMessage<PurgeArtifactsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 14);

/**
 * Details of operations that perform
 * [MetadataService.PurgeArtifacts][google.cloud.aiplatform.v1beta1.MetadataService.PurgeArtifacts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.PurgeArtifactsMetadata
 */
export type PurgeArtifactsMetadata = Message<"google.cloud.aiplatform.v1beta1.PurgeArtifactsMetadata"> & {
  /**
   * Operation metadata for purging Artifacts.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.PurgeArtifactsMetadata.
 * Use `create(PurgeArtifactsMetadataSchema)` to create a new message.
 */
export const PurgeArtifactsMetadataSchema: GenMessage<PurgeArtifactsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 15);

/**
 * Request message for
 * [MetadataService.CreateContext][google.cloud.aiplatform.v1beta1.MetadataService.CreateContext].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateContextRequest
 */
export type CreateContextRequest = Message<"google.cloud.aiplatform.v1beta1.CreateContextRequest"> & {
  /**
   * Required. The resource name of the MetadataStore where the Context should
   * be created. Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The Context to create.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Context context = 2;
   */
  context?: Context;

  /**
   * The {context} portion of the resource name with the format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`.
   * If not provided, the Context's ID will be a UUID generated by the service.
   * Must be 4-128 characters in length. Valid characters are `/[a-z][0-9]-/`.
   * Must be unique across all Contexts in the parent MetadataStore. (Otherwise
   * the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the
   * caller can't view the preexisting Context.)
   *
   * @generated from field: string context_id = 3;
   */
  contextId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateContextRequest.
 * Use `create(CreateContextRequestSchema)` to create a new message.
 */
export const CreateContextRequestSchema: GenMessage<CreateContextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 16);

/**
 * Request message for
 * [MetadataService.GetContext][google.cloud.aiplatform.v1beta1.MetadataService.GetContext].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetContextRequest
 */
export type GetContextRequest = Message<"google.cloud.aiplatform.v1beta1.GetContextRequest"> & {
  /**
   * Required. The resource name of the Context to retrieve.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetContextRequest.
 * Use `create(GetContextRequestSchema)` to create a new message.
 */
export const GetContextRequestSchema: GenMessage<GetContextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 17);

/**
 * Request message for
 * [MetadataService.ListContexts][google.cloud.aiplatform.v1beta1.MetadataService.ListContexts]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListContextsRequest
 */
export type ListContextsRequest = Message<"google.cloud.aiplatform.v1beta1.ListContextsRequest"> & {
  /**
   * Required. The MetadataStore whose Contexts should be listed.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of Contexts to return. The service may return fewer.
   * Must be in range 1-1000, inclusive. Defaults to 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [MetadataService.ListContexts][google.cloud.aiplatform.v1beta1.MetadataService.ListContexts]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters must match the call that
   * provided the page token. (Otherwise the request will fail with
   * INVALID_ARGUMENT error.)
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter specifying the boolean condition for the Contexts to satisfy in
   * order to be part of the result set.
   * The syntax to define filter query is based on https://google.aip.dev/160.
   * Following are the supported set of filters:
   *
   * *  **Attribute filtering**:
   *    For example: `display_name = "test"`.
   *    Supported fields include: `name`, `display_name`, `schema_title`,
   *    `create_time`, and `update_time`.
   *    Time fields, such as `create_time` and `update_time`, require values
   *    specified in RFC-3339 format.
   *    For example: `create_time = "2020-11-19T11:30:00-04:00"`.
   * *  **Metadata field**:
   *    To filter on metadata fields use traversal operation as follows:
   *    `metadata.<field_name>.<type_value>`.
   *    For example: `metadata.field_1.number_value = 10.0`.
   *    In case the field name contains special characters (such as colon), one
   *    can embed it inside double quote.
   *    For example: `metadata."field:1".number_value = 10.0`
   * *  **Parent Child filtering**:
   *    To filter Contexts based on parent-child relationship use the HAS
   *    operator as follows:
   *
   *    ```
   *    parent_contexts:
   *    "projects/<project_number>/locations/<location>/metadataStores/<metadatastore_name>/contexts/<context_id>"
   *    child_contexts:
   *    "projects/<project_number>/locations/<location>/metadataStores/<metadatastore_name>/contexts/<context_id>"
   *    ```
   *
   * Each of the above supported filters can be combined together using
   * logical operators (`AND` & `OR`). Maximum nested expression depth allowed
   * is 5.
   *
   * For example: `display_name = "test" AND metadata.field1.bool_value = true`.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * How the list of messages is ordered. Specify the values to order by and an
   * ordering operation. The default sorting order is ascending. To specify
   * descending order for a field, users append a " desc" suffix; for example:
   * "foo desc, bar".
   * Subfields are specified with a `.` character, such as foo.bar.
   * see https://google.aip.dev/132#ordering for more details.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListContextsRequest.
 * Use `create(ListContextsRequestSchema)` to create a new message.
 */
export const ListContextsRequestSchema: GenMessage<ListContextsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 18);

/**
 * Response message for
 * [MetadataService.ListContexts][google.cloud.aiplatform.v1beta1.MetadataService.ListContexts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListContextsResponse
 */
export type ListContextsResponse = Message<"google.cloud.aiplatform.v1beta1.ListContextsResponse"> & {
  /**
   * The Contexts retrieved from the MetadataStore.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Context contexts = 1;
   */
  contexts: Context[];

  /**
   * A token, which can be sent as
   * [ListContextsRequest.page_token][google.cloud.aiplatform.v1beta1.ListContextsRequest.page_token]
   * to retrieve the next page.
   * If this field is not populated, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListContextsResponse.
 * Use `create(ListContextsResponseSchema)` to create a new message.
 */
export const ListContextsResponseSchema: GenMessage<ListContextsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 19);

/**
 * Request message for
 * [MetadataService.UpdateContext][google.cloud.aiplatform.v1beta1.MetadataService.UpdateContext].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateContextRequest
 */
export type UpdateContextRequest = Message<"google.cloud.aiplatform.v1beta1.UpdateContextRequest"> & {
  /**
   * Required. The Context containing updates.
   * The Context's [Context.name][google.cloud.aiplatform.v1beta1.Context.name]
   * field is used to identify the Context to be updated. Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Context context = 1;
   */
  context?: Context;

  /**
   * Optional. A FieldMask indicating which fields should be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * If set to true, and the [Context][google.cloud.aiplatform.v1beta1.Context]
   * is not found, a new [Context][google.cloud.aiplatform.v1beta1.Context] is
   * created.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateContextRequest.
 * Use `create(UpdateContextRequestSchema)` to create a new message.
 */
export const UpdateContextRequestSchema: GenMessage<UpdateContextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 20);

/**
 * Request message for
 * [MetadataService.DeleteContext][google.cloud.aiplatform.v1beta1.MetadataService.DeleteContext].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteContextRequest
 */
export type DeleteContextRequest = Message<"google.cloud.aiplatform.v1beta1.DeleteContextRequest"> & {
  /**
   * Required. The resource name of the Context to delete.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The force deletion semantics is still undefined.
   * Users should not use this field.
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;

  /**
   * Optional. The etag of the Context to delete.
   * If this is provided, it must match the server's etag. Otherwise, the
   * request will fail with a FAILED_PRECONDITION.
   *
   * @generated from field: string etag = 3;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteContextRequest.
 * Use `create(DeleteContextRequestSchema)` to create a new message.
 */
export const DeleteContextRequestSchema: GenMessage<DeleteContextRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 21);

/**
 * Request message for
 * [MetadataService.PurgeContexts][google.cloud.aiplatform.v1beta1.MetadataService.PurgeContexts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.PurgeContextsRequest
 */
export type PurgeContextsRequest = Message<"google.cloud.aiplatform.v1beta1.PurgeContextsRequest"> & {
  /**
   * Required. The metadata store to purge Contexts from.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. A required filter matching the Contexts to be purged.
   * E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. Flag to indicate to actually perform the purge.
   * If `force` is set to false, the method will return a sample of
   * Context names that would be deleted.
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.PurgeContextsRequest.
 * Use `create(PurgeContextsRequestSchema)` to create a new message.
 */
export const PurgeContextsRequestSchema: GenMessage<PurgeContextsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 22);

/**
 * Response message for
 * [MetadataService.PurgeContexts][google.cloud.aiplatform.v1beta1.MetadataService.PurgeContexts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.PurgeContextsResponse
 */
export type PurgeContextsResponse = Message<"google.cloud.aiplatform.v1beta1.PurgeContextsResponse"> & {
  /**
   * The number of Contexts that this request deleted (or, if `force` is false,
   * the number of Contexts that will be deleted). This can be an estimate.
   *
   * @generated from field: int64 purge_count = 1;
   */
  purgeCount: bigint;

  /**
   * A sample of the Context names that will be deleted.
   * Only populated if `force` is set to false. The maximum number of samples is
   * 100 (it is possible to return fewer).
   *
   * @generated from field: repeated string purge_sample = 2;
   */
  purgeSample: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.PurgeContextsResponse.
 * Use `create(PurgeContextsResponseSchema)` to create a new message.
 */
export const PurgeContextsResponseSchema: GenMessage<PurgeContextsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 23);

/**
 * Details of operations that perform
 * [MetadataService.PurgeContexts][google.cloud.aiplatform.v1beta1.MetadataService.PurgeContexts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.PurgeContextsMetadata
 */
export type PurgeContextsMetadata = Message<"google.cloud.aiplatform.v1beta1.PurgeContextsMetadata"> & {
  /**
   * Operation metadata for purging Contexts.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.PurgeContextsMetadata.
 * Use `create(PurgeContextsMetadataSchema)` to create a new message.
 */
export const PurgeContextsMetadataSchema: GenMessage<PurgeContextsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 24);

/**
 * Request message for
 * [MetadataService.AddContextArtifactsAndExecutions][google.cloud.aiplatform.v1beta1.MetadataService.AddContextArtifactsAndExecutions].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.AddContextArtifactsAndExecutionsRequest
 */
export type AddContextArtifactsAndExecutionsRequest = Message<"google.cloud.aiplatform.v1beta1.AddContextArtifactsAndExecutionsRequest"> & {
  /**
   * Required. The resource name of the Context that the Artifacts and
   * Executions belong to. Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
   *
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * The resource names of the Artifacts to attribute to the Context.
   *
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
   *
   * @generated from field: repeated string artifacts = 2;
   */
  artifacts: string[];

  /**
   * The resource names of the Executions to associate with the
   * Context.
   *
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
   *
   * @generated from field: repeated string executions = 3;
   */
  executions: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.AddContextArtifactsAndExecutionsRequest.
 * Use `create(AddContextArtifactsAndExecutionsRequestSchema)` to create a new message.
 */
export const AddContextArtifactsAndExecutionsRequestSchema: GenMessage<AddContextArtifactsAndExecutionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 25);

/**
 * Response message for
 * [MetadataService.AddContextArtifactsAndExecutions][google.cloud.aiplatform.v1beta1.MetadataService.AddContextArtifactsAndExecutions].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.AddContextArtifactsAndExecutionsResponse
 */
export type AddContextArtifactsAndExecutionsResponse = Message<"google.cloud.aiplatform.v1beta1.AddContextArtifactsAndExecutionsResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.AddContextArtifactsAndExecutionsResponse.
 * Use `create(AddContextArtifactsAndExecutionsResponseSchema)` to create a new message.
 */
export const AddContextArtifactsAndExecutionsResponseSchema: GenMessage<AddContextArtifactsAndExecutionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 26);

/**
 * Request message for
 * [MetadataService.AddContextChildren][google.cloud.aiplatform.v1beta1.MetadataService.AddContextChildren].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.AddContextChildrenRequest
 */
export type AddContextChildrenRequest = Message<"google.cloud.aiplatform.v1beta1.AddContextChildrenRequest"> & {
  /**
   * Required. The resource name of the parent Context.
   *
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
   *
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * The resource names of the child Contexts.
   *
   * @generated from field: repeated string child_contexts = 2;
   */
  childContexts: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.AddContextChildrenRequest.
 * Use `create(AddContextChildrenRequestSchema)` to create a new message.
 */
export const AddContextChildrenRequestSchema: GenMessage<AddContextChildrenRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 27);

/**
 * Response message for
 * [MetadataService.AddContextChildren][google.cloud.aiplatform.v1beta1.MetadataService.AddContextChildren].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.AddContextChildrenResponse
 */
export type AddContextChildrenResponse = Message<"google.cloud.aiplatform.v1beta1.AddContextChildrenResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.AddContextChildrenResponse.
 * Use `create(AddContextChildrenResponseSchema)` to create a new message.
 */
export const AddContextChildrenResponseSchema: GenMessage<AddContextChildrenResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 28);

/**
 * Request message for
 * [MetadataService.DeleteContextChildrenRequest][].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.RemoveContextChildrenRequest
 */
export type RemoveContextChildrenRequest = Message<"google.cloud.aiplatform.v1beta1.RemoveContextChildrenRequest"> & {
  /**
   * Required. The resource name of the parent Context.
   *
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
   *
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * The resource names of the child Contexts.
   *
   * @generated from field: repeated string child_contexts = 2;
   */
  childContexts: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.RemoveContextChildrenRequest.
 * Use `create(RemoveContextChildrenRequestSchema)` to create a new message.
 */
export const RemoveContextChildrenRequestSchema: GenMessage<RemoveContextChildrenRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 29);

/**
 * Response message for
 * [MetadataService.RemoveContextChildren][google.cloud.aiplatform.v1beta1.MetadataService.RemoveContextChildren].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.RemoveContextChildrenResponse
 */
export type RemoveContextChildrenResponse = Message<"google.cloud.aiplatform.v1beta1.RemoveContextChildrenResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.RemoveContextChildrenResponse.
 * Use `create(RemoveContextChildrenResponseSchema)` to create a new message.
 */
export const RemoveContextChildrenResponseSchema: GenMessage<RemoveContextChildrenResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 30);

/**
 * Request message for
 * [MetadataService.QueryContextLineageSubgraph][google.cloud.aiplatform.v1beta1.MetadataService.QueryContextLineageSubgraph].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.QueryContextLineageSubgraphRequest
 */
export type QueryContextLineageSubgraphRequest = Message<"google.cloud.aiplatform.v1beta1.QueryContextLineageSubgraphRequest"> & {
  /**
   * Required. The resource name of the Context whose Artifacts and Executions
   * should be retrieved as a LineageSubgraph.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
   *
   * The request may error with FAILED_PRECONDITION if the number of Artifacts,
   * the number of Executions, or the number of Events that would be returned
   * for the Context exceeds 1000.
   *
   * @generated from field: string context = 1;
   */
  context: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.QueryContextLineageSubgraphRequest.
 * Use `create(QueryContextLineageSubgraphRequestSchema)` to create a new message.
 */
export const QueryContextLineageSubgraphRequestSchema: GenMessage<QueryContextLineageSubgraphRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 31);

/**
 * Request message for
 * [MetadataService.CreateExecution][google.cloud.aiplatform.v1beta1.MetadataService.CreateExecution].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateExecutionRequest
 */
export type CreateExecutionRequest = Message<"google.cloud.aiplatform.v1beta1.CreateExecutionRequest"> & {
  /**
   * Required. The resource name of the MetadataStore where the Execution should
   * be created.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The Execution to create.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Execution execution = 2;
   */
  execution?: Execution;

  /**
   * The {execution} portion of the resource name with the format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
   * If not provided, the Execution's ID will be a UUID generated by the
   * service.
   * Must be 4-128 characters in length. Valid characters are `/[a-z][0-9]-/`.
   * Must be unique across all Executions in the parent MetadataStore.
   * (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED
   * if the caller can't view the preexisting Execution.)
   *
   * @generated from field: string execution_id = 3;
   */
  executionId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateExecutionRequest.
 * Use `create(CreateExecutionRequestSchema)` to create a new message.
 */
export const CreateExecutionRequestSchema: GenMessage<CreateExecutionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 32);

/**
 * Request message for
 * [MetadataService.GetExecution][google.cloud.aiplatform.v1beta1.MetadataService.GetExecution].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetExecutionRequest
 */
export type GetExecutionRequest = Message<"google.cloud.aiplatform.v1beta1.GetExecutionRequest"> & {
  /**
   * Required. The resource name of the Execution to retrieve.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetExecutionRequest.
 * Use `create(GetExecutionRequestSchema)` to create a new message.
 */
export const GetExecutionRequestSchema: GenMessage<GetExecutionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 33);

/**
 * Request message for
 * [MetadataService.ListExecutions][google.cloud.aiplatform.v1beta1.MetadataService.ListExecutions].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListExecutionsRequest
 */
export type ListExecutionsRequest = Message<"google.cloud.aiplatform.v1beta1.ListExecutionsRequest"> & {
  /**
   * Required. The MetadataStore whose Executions should be listed.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of Executions to return. The service may return fewer.
   * Must be in range 1-1000, inclusive. Defaults to 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [MetadataService.ListExecutions][google.cloud.aiplatform.v1beta1.MetadataService.ListExecutions]
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other provided parameters must match the call that
   * provided the page token. (Otherwise the request will fail with an
   * INVALID_ARGUMENT error.)
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter specifying the boolean condition for the Executions to satisfy in
   * order to be part of the result set.
   * The syntax to define filter query is based on https://google.aip.dev/160.
   * Following are the supported set of filters:
   *
   * *  **Attribute filtering**:
   *    For example: `display_name = "test"`.
   *    Supported fields include: `name`, `display_name`, `state`,
   *    `schema_title`, `create_time`, and `update_time`.
   *    Time fields, such as `create_time` and `update_time`, require values
   *    specified in RFC-3339 format.
   *    For example: `create_time = "2020-11-19T11:30:00-04:00"`.
   * *  **Metadata field**:
   *    To filter on metadata fields use traversal operation as follows:
   *    `metadata.<field_name>.<type_value>`
   *    For example: `metadata.field_1.number_value = 10.0`
   *    In case the field name contains special characters (such as colon), one
   *    can embed it inside double quote.
   *    For example: `metadata."field:1".number_value = 10.0`
   * *  **Context based filtering**:
   *    To filter Executions based on the contexts to which they belong use
   *    the function operator with the full resource name:
   *    `in_context(<context-name>)`.
   *    For example:
   *    `in_context("projects/<project_number>/locations/<location>/metadataStores/<metadatastore_name>/contexts/<context-id>")`
   *
   * Each of the above supported filters can be combined together using
   * logical operators (`AND` & `OR`). Maximum nested expression depth allowed
   * is 5.
   *
   * For example: `display_name = "test" AND metadata.field1.bool_value = true`.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * How the list of messages is ordered. Specify the values to order by and an
   * ordering operation. The default sorting order is ascending. To specify
   * descending order for a field, users append a " desc" suffix; for example:
   * "foo desc, bar".
   * Subfields are specified with a `.` character, such as foo.bar.
   * see https://google.aip.dev/132#ordering for more details.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListExecutionsRequest.
 * Use `create(ListExecutionsRequestSchema)` to create a new message.
 */
export const ListExecutionsRequestSchema: GenMessage<ListExecutionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 34);

/**
 * Response message for
 * [MetadataService.ListExecutions][google.cloud.aiplatform.v1beta1.MetadataService.ListExecutions].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListExecutionsResponse
 */
export type ListExecutionsResponse = Message<"google.cloud.aiplatform.v1beta1.ListExecutionsResponse"> & {
  /**
   * The Executions retrieved from the MetadataStore.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Execution executions = 1;
   */
  executions: Execution[];

  /**
   * A token, which can be sent as
   * [ListExecutionsRequest.page_token][google.cloud.aiplatform.v1beta1.ListExecutionsRequest.page_token]
   * to retrieve the next page.
   * If this field is not populated, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListExecutionsResponse.
 * Use `create(ListExecutionsResponseSchema)` to create a new message.
 */
export const ListExecutionsResponseSchema: GenMessage<ListExecutionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 35);

/**
 * Request message for
 * [MetadataService.UpdateExecution][google.cloud.aiplatform.v1beta1.MetadataService.UpdateExecution].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateExecutionRequest
 */
export type UpdateExecutionRequest = Message<"google.cloud.aiplatform.v1beta1.UpdateExecutionRequest"> & {
  /**
   * Required. The Execution containing updates.
   * The Execution's
   * [Execution.name][google.cloud.aiplatform.v1beta1.Execution.name] field is
   * used to identify the Execution to be updated. Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Execution execution = 1;
   */
  execution?: Execution;

  /**
   * Optional. A FieldMask indicating which fields should be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * If set to true, and the
   * [Execution][google.cloud.aiplatform.v1beta1.Execution] is not found, a new
   * [Execution][google.cloud.aiplatform.v1beta1.Execution] is created.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateExecutionRequest.
 * Use `create(UpdateExecutionRequestSchema)` to create a new message.
 */
export const UpdateExecutionRequestSchema: GenMessage<UpdateExecutionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 36);

/**
 * Request message for
 * [MetadataService.DeleteExecution][google.cloud.aiplatform.v1beta1.MetadataService.DeleteExecution].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteExecutionRequest
 */
export type DeleteExecutionRequest = Message<"google.cloud.aiplatform.v1beta1.DeleteExecutionRequest"> & {
  /**
   * Required. The resource name of the Execution to delete.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The etag of the Execution to delete.
   * If this is provided, it must match the server's etag. Otherwise, the
   * request will fail with a FAILED_PRECONDITION.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteExecutionRequest.
 * Use `create(DeleteExecutionRequestSchema)` to create a new message.
 */
export const DeleteExecutionRequestSchema: GenMessage<DeleteExecutionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 37);

/**
 * Request message for
 * [MetadataService.PurgeExecutions][google.cloud.aiplatform.v1beta1.MetadataService.PurgeExecutions].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.PurgeExecutionsRequest
 */
export type PurgeExecutionsRequest = Message<"google.cloud.aiplatform.v1beta1.PurgeExecutionsRequest"> & {
  /**
   * Required. The metadata store to purge Executions from.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. A required filter matching the Executions to be purged.
   * E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. Flag to indicate to actually perform the purge.
   * If `force` is set to false, the method will return a sample of
   * Execution names that would be deleted.
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.PurgeExecutionsRequest.
 * Use `create(PurgeExecutionsRequestSchema)` to create a new message.
 */
export const PurgeExecutionsRequestSchema: GenMessage<PurgeExecutionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 38);

/**
 * Response message for
 * [MetadataService.PurgeExecutions][google.cloud.aiplatform.v1beta1.MetadataService.PurgeExecutions].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.PurgeExecutionsResponse
 */
export type PurgeExecutionsResponse = Message<"google.cloud.aiplatform.v1beta1.PurgeExecutionsResponse"> & {
  /**
   * The number of Executions that this request deleted (or, if `force` is
   * false, the number of Executions that will be deleted). This can be an
   * estimate.
   *
   * @generated from field: int64 purge_count = 1;
   */
  purgeCount: bigint;

  /**
   * A sample of the Execution names that will be deleted.
   * Only populated if `force` is set to false. The maximum number of samples is
   * 100 (it is possible to return fewer).
   *
   * @generated from field: repeated string purge_sample = 2;
   */
  purgeSample: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.PurgeExecutionsResponse.
 * Use `create(PurgeExecutionsResponseSchema)` to create a new message.
 */
export const PurgeExecutionsResponseSchema: GenMessage<PurgeExecutionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 39);

/**
 * Details of operations that perform
 * [MetadataService.PurgeExecutions][google.cloud.aiplatform.v1beta1.MetadataService.PurgeExecutions].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.PurgeExecutionsMetadata
 */
export type PurgeExecutionsMetadata = Message<"google.cloud.aiplatform.v1beta1.PurgeExecutionsMetadata"> & {
  /**
   * Operation metadata for purging Executions.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.PurgeExecutionsMetadata.
 * Use `create(PurgeExecutionsMetadataSchema)` to create a new message.
 */
export const PurgeExecutionsMetadataSchema: GenMessage<PurgeExecutionsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 40);

/**
 * Request message for
 * [MetadataService.AddExecutionEvents][google.cloud.aiplatform.v1beta1.MetadataService.AddExecutionEvents].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.AddExecutionEventsRequest
 */
export type AddExecutionEventsRequest = Message<"google.cloud.aiplatform.v1beta1.AddExecutionEventsRequest"> & {
  /**
   * Required. The resource name of the Execution that the Events connect
   * Artifacts with.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
   *
   * @generated from field: string execution = 1;
   */
  execution: string;

  /**
   * The Events to create and add.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Event events = 2;
   */
  events: Event[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.AddExecutionEventsRequest.
 * Use `create(AddExecutionEventsRequestSchema)` to create a new message.
 */
export const AddExecutionEventsRequestSchema: GenMessage<AddExecutionEventsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 41);

/**
 * Response message for
 * [MetadataService.AddExecutionEvents][google.cloud.aiplatform.v1beta1.MetadataService.AddExecutionEvents].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.AddExecutionEventsResponse
 */
export type AddExecutionEventsResponse = Message<"google.cloud.aiplatform.v1beta1.AddExecutionEventsResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.AddExecutionEventsResponse.
 * Use `create(AddExecutionEventsResponseSchema)` to create a new message.
 */
export const AddExecutionEventsResponseSchema: GenMessage<AddExecutionEventsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 42);

/**
 * Request message for
 * [MetadataService.QueryExecutionInputsAndOutputs][google.cloud.aiplatform.v1beta1.MetadataService.QueryExecutionInputsAndOutputs].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.QueryExecutionInputsAndOutputsRequest
 */
export type QueryExecutionInputsAndOutputsRequest = Message<"google.cloud.aiplatform.v1beta1.QueryExecutionInputsAndOutputsRequest"> & {
  /**
   * Required. The resource name of the Execution whose input and output
   * Artifacts should be retrieved as a LineageSubgraph. Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
   *
   * @generated from field: string execution = 1;
   */
  execution: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.QueryExecutionInputsAndOutputsRequest.
 * Use `create(QueryExecutionInputsAndOutputsRequestSchema)` to create a new message.
 */
export const QueryExecutionInputsAndOutputsRequestSchema: GenMessage<QueryExecutionInputsAndOutputsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 43);

/**
 * Request message for
 * [MetadataService.CreateMetadataSchema][google.cloud.aiplatform.v1beta1.MetadataService.CreateMetadataSchema].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateMetadataSchemaRequest
 */
export type CreateMetadataSchemaRequest = Message<"google.cloud.aiplatform.v1beta1.CreateMetadataSchemaRequest"> & {
  /**
   * Required. The resource name of the MetadataStore where the MetadataSchema
   * should be created. Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The MetadataSchema to create.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.MetadataSchema metadata_schema = 2;
   */
  metadataSchema?: MetadataSchema;

  /**
   * The {metadata_schema} portion of the resource name with the format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}`
   * If not provided, the MetadataStore's ID will be a UUID generated by the
   * service.
   * Must be 4-128 characters in length. Valid characters are `/[a-z][0-9]-/`.
   * Must be unique across all MetadataSchemas in the parent Location.
   * (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED
   * if the caller can't view the preexisting MetadataSchema.)
   *
   * @generated from field: string metadata_schema_id = 3;
   */
  metadataSchemaId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateMetadataSchemaRequest.
 * Use `create(CreateMetadataSchemaRequestSchema)` to create a new message.
 */
export const CreateMetadataSchemaRequestSchema: GenMessage<CreateMetadataSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 44);

/**
 * Request message for
 * [MetadataService.GetMetadataSchema][google.cloud.aiplatform.v1beta1.MetadataService.GetMetadataSchema].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetMetadataSchemaRequest
 */
export type GetMetadataSchemaRequest = Message<"google.cloud.aiplatform.v1beta1.GetMetadataSchemaRequest"> & {
  /**
   * Required. The resource name of the MetadataSchema to retrieve.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetMetadataSchemaRequest.
 * Use `create(GetMetadataSchemaRequestSchema)` to create a new message.
 */
export const GetMetadataSchemaRequestSchema: GenMessage<GetMetadataSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 45);

/**
 * Request message for
 * [MetadataService.ListMetadataSchemas][google.cloud.aiplatform.v1beta1.MetadataService.ListMetadataSchemas].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListMetadataSchemasRequest
 */
export type ListMetadataSchemasRequest = Message<"google.cloud.aiplatform.v1beta1.ListMetadataSchemasRequest"> & {
  /**
   * Required. The MetadataStore whose MetadataSchemas should be listed.
   * Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of MetadataSchemas to return. The service may return
   * fewer.
   * Must be in range 1-1000, inclusive. Defaults to 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * [MetadataService.ListMetadataSchemas][google.cloud.aiplatform.v1beta1.MetadataService.ListMetadataSchemas]
   * call. Provide this to retrieve the next page.
   *
   * When paginating, all other provided parameters must match the call that
   * provided the page token. (Otherwise the request will fail with
   * INVALID_ARGUMENT error.)
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A query to filter available MetadataSchemas for matching results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListMetadataSchemasRequest.
 * Use `create(ListMetadataSchemasRequestSchema)` to create a new message.
 */
export const ListMetadataSchemasRequestSchema: GenMessage<ListMetadataSchemasRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 46);

/**
 * Response message for
 * [MetadataService.ListMetadataSchemas][google.cloud.aiplatform.v1beta1.MetadataService.ListMetadataSchemas].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListMetadataSchemasResponse
 */
export type ListMetadataSchemasResponse = Message<"google.cloud.aiplatform.v1beta1.ListMetadataSchemasResponse"> & {
  /**
   * The MetadataSchemas found for the MetadataStore.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.MetadataSchema metadata_schemas = 1;
   */
  metadataSchemas: MetadataSchema[];

  /**
   * A token, which can be sent as
   * [ListMetadataSchemasRequest.page_token][google.cloud.aiplatform.v1beta1.ListMetadataSchemasRequest.page_token]
   * to retrieve the next page. If this field is not populated, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListMetadataSchemasResponse.
 * Use `create(ListMetadataSchemasResponseSchema)` to create a new message.
 */
export const ListMetadataSchemasResponseSchema: GenMessage<ListMetadataSchemasResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 47);

/**
 * Request message for
 * [MetadataService.QueryArtifactLineageSubgraph][google.cloud.aiplatform.v1beta1.MetadataService.QueryArtifactLineageSubgraph].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.QueryArtifactLineageSubgraphRequest
 */
export type QueryArtifactLineageSubgraphRequest = Message<"google.cloud.aiplatform.v1beta1.QueryArtifactLineageSubgraphRequest"> & {
  /**
   * Required. The resource name of the Artifact whose Lineage needs to be
   * retrieved as a LineageSubgraph. Format:
   * `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
   *
   * The request may error with FAILED_PRECONDITION if the number of Artifacts,
   * the number of Executions, or the number of Events that would be returned
   * for the Context exceeds 1000.
   *
   * @generated from field: string artifact = 1;
   */
  artifact: string;

  /**
   * Specifies the size of the lineage graph in terms of number of hops from the
   * specified artifact.
   * Negative Value: INVALID_ARGUMENT error is returned
   * 0: Only input artifact is returned.
   * No value: Transitive closure is performed to return the complete graph.
   *
   * @generated from field: int32 max_hops = 2;
   */
  maxHops: number;

  /**
   * Filter specifying the boolean condition for the Artifacts to satisfy in
   * order to be part of the Lineage Subgraph.
   * The syntax to define filter query is based on https://google.aip.dev/160.
   * The supported set of filters include the following:
   *
   * *  **Attribute filtering**:
   *    For example: `display_name = "test"`
   *    Supported fields include: `name`, `display_name`, `uri`, `state`,
   *    `schema_title`, `create_time`, and `update_time`.
   *    Time fields, such as `create_time` and `update_time`, require values
   *    specified in RFC-3339 format.
   *    For example: `create_time = "2020-11-19T11:30:00-04:00"`
   * *  **Metadata field**:
   *    To filter on metadata fields use traversal operation as follows:
   *    `metadata.<field_name>.<type_value>`.
   *    For example: `metadata.field_1.number_value = 10.0`
   *    In case the field name contains special characters (such as colon), one
   *    can embed it inside double quote.
   *    For example: `metadata."field:1".number_value = 10.0`
   *
   * Each of the above supported filter types can be combined together using
   * logical operators (`AND` & `OR`). Maximum nested expression depth allowed
   * is 5.
   *
   * For example: `display_name = "test" AND metadata.field1.bool_value = true`.
   *
   * @generated from field: string filter = 3;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.QueryArtifactLineageSubgraphRequest.
 * Use `create(QueryArtifactLineageSubgraphRequestSchema)` to create a new message.
 */
export const QueryArtifactLineageSubgraphRequestSchema: GenMessage<QueryArtifactLineageSubgraphRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 48);

/**
 * Service for reading and writing metadata entries.
 *
 * @generated from service google.cloud.aiplatform.v1beta1.MetadataService
 */
export const MetadataService: GenService<{
  /**
   * Initializes a MetadataStore, including allocation of resources.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.CreateMetadataStore
   */
  createMetadataStore: {
    methodKind: "unary";
    input: typeof CreateMetadataStoreRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Retrieves a specific MetadataStore.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.GetMetadataStore
   */
  getMetadataStore: {
    methodKind: "unary";
    input: typeof GetMetadataStoreRequestSchema;
    output: typeof MetadataStoreSchema;
  },
  /**
   * Lists MetadataStores for a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.ListMetadataStores
   */
  listMetadataStores: {
    methodKind: "unary";
    input: typeof ListMetadataStoresRequestSchema;
    output: typeof ListMetadataStoresResponseSchema;
  },
  /**
   * Deletes a single MetadataStore and all its child resources (Artifacts,
   * Executions, and Contexts).
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.DeleteMetadataStore
   */
  deleteMetadataStore: {
    methodKind: "unary";
    input: typeof DeleteMetadataStoreRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates an Artifact associated with a MetadataStore.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.CreateArtifact
   */
  createArtifact: {
    methodKind: "unary";
    input: typeof CreateArtifactRequestSchema;
    output: typeof ArtifactSchema;
  },
  /**
   * Retrieves a specific Artifact.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.GetArtifact
   */
  getArtifact: {
    methodKind: "unary";
    input: typeof GetArtifactRequestSchema;
    output: typeof ArtifactSchema;
  },
  /**
   * Lists Artifacts in the MetadataStore.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.ListArtifacts
   */
  listArtifacts: {
    methodKind: "unary";
    input: typeof ListArtifactsRequestSchema;
    output: typeof ListArtifactsResponseSchema;
  },
  /**
   * Updates a stored Artifact.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.UpdateArtifact
   */
  updateArtifact: {
    methodKind: "unary";
    input: typeof UpdateArtifactRequestSchema;
    output: typeof ArtifactSchema;
  },
  /**
   * Deletes an Artifact.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.DeleteArtifact
   */
  deleteArtifact: {
    methodKind: "unary";
    input: typeof DeleteArtifactRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Purges Artifacts.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.PurgeArtifacts
   */
  purgeArtifacts: {
    methodKind: "unary";
    input: typeof PurgeArtifactsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a Context associated with a MetadataStore.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.CreateContext
   */
  createContext: {
    methodKind: "unary";
    input: typeof CreateContextRequestSchema;
    output: typeof ContextSchema;
  },
  /**
   * Retrieves a specific Context.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.GetContext
   */
  getContext: {
    methodKind: "unary";
    input: typeof GetContextRequestSchema;
    output: typeof ContextSchema;
  },
  /**
   * Lists Contexts on the MetadataStore.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.ListContexts
   */
  listContexts: {
    methodKind: "unary";
    input: typeof ListContextsRequestSchema;
    output: typeof ListContextsResponseSchema;
  },
  /**
   * Updates a stored Context.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.UpdateContext
   */
  updateContext: {
    methodKind: "unary";
    input: typeof UpdateContextRequestSchema;
    output: typeof ContextSchema;
  },
  /**
   * Deletes a stored Context.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.DeleteContext
   */
  deleteContext: {
    methodKind: "unary";
    input: typeof DeleteContextRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Purges Contexts.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.PurgeContexts
   */
  purgeContexts: {
    methodKind: "unary";
    input: typeof PurgeContextsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Adds a set of Artifacts and Executions to a Context. If any of the
   * Artifacts or Executions have already been added to a Context, they are
   * simply skipped.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.AddContextArtifactsAndExecutions
   */
  addContextArtifactsAndExecutions: {
    methodKind: "unary";
    input: typeof AddContextArtifactsAndExecutionsRequestSchema;
    output: typeof AddContextArtifactsAndExecutionsResponseSchema;
  },
  /**
   * Adds a set of Contexts as children to a parent Context. If any of the
   * child Contexts have already been added to the parent Context, they are
   * simply skipped. If this call would create a cycle or cause any Context to
   * have more than 10 parents, the request will fail with an INVALID_ARGUMENT
   * error.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.AddContextChildren
   */
  addContextChildren: {
    methodKind: "unary";
    input: typeof AddContextChildrenRequestSchema;
    output: typeof AddContextChildrenResponseSchema;
  },
  /**
   * Remove a set of children contexts from a parent Context. If any of the
   * child Contexts were NOT added to the parent Context, they are
   * simply skipped.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.RemoveContextChildren
   */
  removeContextChildren: {
    methodKind: "unary";
    input: typeof RemoveContextChildrenRequestSchema;
    output: typeof RemoveContextChildrenResponseSchema;
  },
  /**
   * Retrieves Artifacts and Executions within the specified Context, connected
   * by Event edges and returned as a LineageSubgraph.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.QueryContextLineageSubgraph
   */
  queryContextLineageSubgraph: {
    methodKind: "unary";
    input: typeof QueryContextLineageSubgraphRequestSchema;
    output: typeof LineageSubgraphSchema;
  },
  /**
   * Creates an Execution associated with a MetadataStore.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.CreateExecution
   */
  createExecution: {
    methodKind: "unary";
    input: typeof CreateExecutionRequestSchema;
    output: typeof ExecutionSchema;
  },
  /**
   * Retrieves a specific Execution.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.GetExecution
   */
  getExecution: {
    methodKind: "unary";
    input: typeof GetExecutionRequestSchema;
    output: typeof ExecutionSchema;
  },
  /**
   * Lists Executions in the MetadataStore.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.ListExecutions
   */
  listExecutions: {
    methodKind: "unary";
    input: typeof ListExecutionsRequestSchema;
    output: typeof ListExecutionsResponseSchema;
  },
  /**
   * Updates a stored Execution.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.UpdateExecution
   */
  updateExecution: {
    methodKind: "unary";
    input: typeof UpdateExecutionRequestSchema;
    output: typeof ExecutionSchema;
  },
  /**
   * Deletes an Execution.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.DeleteExecution
   */
  deleteExecution: {
    methodKind: "unary";
    input: typeof DeleteExecutionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Purges Executions.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.PurgeExecutions
   */
  purgeExecutions: {
    methodKind: "unary";
    input: typeof PurgeExecutionsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Adds Events to the specified Execution. An Event indicates whether an
   * Artifact was used as an input or output for an Execution. If an Event
   * already exists between the Execution and the Artifact, the Event is
   * skipped.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.AddExecutionEvents
   */
  addExecutionEvents: {
    methodKind: "unary";
    input: typeof AddExecutionEventsRequestSchema;
    output: typeof AddExecutionEventsResponseSchema;
  },
  /**
   * Obtains the set of input and output Artifacts for this Execution, in the
   * form of LineageSubgraph that also contains the Execution and connecting
   * Events.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.QueryExecutionInputsAndOutputs
   */
  queryExecutionInputsAndOutputs: {
    methodKind: "unary";
    input: typeof QueryExecutionInputsAndOutputsRequestSchema;
    output: typeof LineageSubgraphSchema;
  },
  /**
   * Creates a MetadataSchema.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.CreateMetadataSchema
   */
  createMetadataSchema: {
    methodKind: "unary";
    input: typeof CreateMetadataSchemaRequestSchema;
    output: typeof MetadataSchemaSchema;
  },
  /**
   * Retrieves a specific MetadataSchema.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.GetMetadataSchema
   */
  getMetadataSchema: {
    methodKind: "unary";
    input: typeof GetMetadataSchemaRequestSchema;
    output: typeof MetadataSchemaSchema;
  },
  /**
   * Lists MetadataSchemas.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.ListMetadataSchemas
   */
  listMetadataSchemas: {
    methodKind: "unary";
    input: typeof ListMetadataSchemasRequestSchema;
    output: typeof ListMetadataSchemasResponseSchema;
  },
  /**
   * Retrieves lineage of an Artifact represented through Artifacts and
   * Executions connected by Event edges and returned as a LineageSubgraph.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.MetadataService.QueryArtifactLineageSubgraph
   */
  queryArtifactLineageSubgraph: {
    methodKind: "unary";
    input: typeof QueryArtifactLineageSubgraphRequestSchema;
    output: typeof LineageSubgraphSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1beta1_metadata_service, 0);

