// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/explanation.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { ExplanationMetadata } from "./explanation_metadata_pb";
import { file_google_cloud_aiplatform_v1beta1_explanation_metadata } from "./explanation_metadata_pb";
import type { GcsSource } from "./io_pb";
import { file_google_cloud_aiplatform_v1beta1_io } from "./io_pb";
import type { ListValue, Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/explanation.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_explanation: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL2V4cGxhbmF0aW9uLnByb3RvEh9nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExIpkBCgtFeHBsYW5hdGlvbhJHCgxhdHRyaWJ1dGlvbnMYASADKAsyLC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkF0dHJpYnV0aW9uQgPgQQMSQQoJbmVpZ2hib3JzGAIgAygLMikuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5OZWlnaGJvckID4EEDImAKEE1vZGVsRXhwbGFuYXRpb24STAoRbWVhbl9hdHRyaWJ1dGlvbnMYASADKAsyLC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkF0dHJpYnV0aW9uQgPgQQMiiQIKC0F0dHJpYnV0aW9uEiIKFWJhc2VsaW5lX291dHB1dF92YWx1ZRgBIAEoAUID4EEDEiIKFWluc3RhbmNlX291dHB1dF92YWx1ZRgCIAEoAUID4EEDEjkKFGZlYXR1cmVfYXR0cmlidXRpb25zGAMgASgLMhYuZ29vZ2xlLnByb3RvYnVmLlZhbHVlQgPgQQMSGQoMb3V0cHV0X2luZGV4GAQgAygFQgPgQQMSIAoTb3V0cHV0X2Rpc3BsYXlfbmFtZRgFIAEoCUID4EEDEiAKE2FwcHJveGltYXRpb25fZXJyb3IYBiABKAFCA+BBAxIYCgtvdXRwdXRfbmFtZRgHIAEoCUID4EEDIkQKCE5laWdoYm9yEhgKC25laWdoYm9yX2lkGAEgASgJQgPgQQMSHgoRbmVpZ2hib3JfZGlzdGFuY2UYAiABKAFCA+BBAyKvAQoPRXhwbGFuYXRpb25TcGVjEk8KCnBhcmFtZXRlcnMYASABKAsyNi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkV4cGxhbmF0aW9uUGFyYW1ldGVyc0ID4EECEksKCG1ldGFkYXRhGAIgASgLMjQuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5FeHBsYW5hdGlvbk1ldGFkYXRhQgPgQQEiwQMKFUV4cGxhbmF0aW9uUGFyYW1ldGVycxJhChtzYW1wbGVkX3NoYXBsZXlfYXR0cmlidXRpb24YASABKAsyOi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlNhbXBsZWRTaGFwbGV5QXR0cmlidXRpb25IABJrCiBpbnRlZ3JhdGVkX2dyYWRpZW50c19hdHRyaWJ1dGlvbhgCIAEoCzI/Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuSW50ZWdyYXRlZEdyYWRpZW50c0F0dHJpYnV0aW9uSAASTAoQeHJhaV9hdHRyaWJ1dGlvbhgDIAEoCzIwLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuWHJhaUF0dHJpYnV0aW9uSAASPQoIZXhhbXBsZXMYByABKAsyKS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkV4YW1wbGVzSAASDQoFdG9wX2sYBCABKAUSMgoOb3V0cHV0X2luZGljZXMYBSABKAsyGi5nb29nbGUucHJvdG9idWYuTGlzdFZhbHVlQggKBm1ldGhvZCI0ChlTYW1wbGVkU2hhcGxleUF0dHJpYnV0aW9uEhcKCnBhdGhfY291bnQYASABKAVCA+BBAiLbAQoeSW50ZWdyYXRlZEdyYWRpZW50c0F0dHJpYnV0aW9uEhcKCnN0ZXBfY291bnQYASABKAVCA+BBAhJNChJzbW9vdGhfZ3JhZF9jb25maWcYAiABKAsyMS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlNtb290aEdyYWRDb25maWcSUQoUYmx1cl9iYXNlbGluZV9jb25maWcYAyABKAsyMy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkJsdXJCYXNlbGluZUNvbmZpZyLMAQoPWHJhaUF0dHJpYnV0aW9uEhcKCnN0ZXBfY291bnQYASABKAVCA+BBAhJNChJzbW9vdGhfZ3JhZF9jb25maWcYAiABKAsyMS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlNtb290aEdyYWRDb25maWcSUQoUYmx1cl9iYXNlbGluZV9jb25maWcYAyABKAsyMy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkJsdXJCYXNlbGluZUNvbmZpZyKuAQoQU21vb3RoR3JhZENvbmZpZxIVCgtub2lzZV9zaWdtYRgBIAEoAkgAElEKE2ZlYXR1cmVfbm9pc2Vfc2lnbWEYAiABKAsyMi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkZlYXR1cmVOb2lzZVNpZ21hSAASGgoSbm9pc3lfc2FtcGxlX2NvdW50GAMgASgFQhQKEkdyYWRpZW50Tm9pc2VTaWdtYSKmAQoRRmVhdHVyZU5vaXNlU2lnbWESXAoLbm9pc2Vfc2lnbWEYASADKAsyRy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkZlYXR1cmVOb2lzZVNpZ21hLk5vaXNlU2lnbWFGb3JGZWF0dXJlGjMKFE5vaXNlU2lnbWFGb3JGZWF0dXJlEgwKBG5hbWUYASABKAkSDQoFc2lnbWEYAiABKAIiLAoSQmx1ckJhc2VsaW5lQ29uZmlnEhYKDm1heF9ibHVyX3NpZ21hGAEgASgCIrYECghFeGFtcGxlcxJYChJleGFtcGxlX2djc19zb3VyY2UYBSABKAsyOi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkV4YW1wbGVzLkV4YW1wbGVHY3NTb3VyY2VIABJACh5uZWFyZXN0X25laWdoYm9yX3NlYXJjaF9jb25maWcYAiABKAsyFi5nb29nbGUucHJvdG9idWYuVmFsdWVIARI7CgdwcmVzZXRzGAQgASgLMiguZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5QcmVzZXRzSAESPgoKZ2NzX3NvdXJjZRgBIAEoCzIqLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuR2NzU291cmNlEhYKDm5laWdoYm9yX2NvdW50GAMgASgFGuQBChBFeGFtcGxlR2NzU291cmNlEloKC2RhdGFfZm9ybWF0GAEgASgOMkUuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5FeGFtcGxlcy5FeGFtcGxlR2NzU291cmNlLkRhdGFGb3JtYXQSPgoKZ2NzX3NvdXJjZRgCIAEoCzIqLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuR2NzU291cmNlIjQKCkRhdGFGb3JtYXQSGwoXREFUQV9GT1JNQVRfVU5TUEVDSUZJRUQQABIJCgVKU09OTBABQggKBnNvdXJjZUIICgZjb25maWcihAIKB1ByZXNldHMSQgoFcXVlcnkYASABKA4yLi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlByZXNldHMuUXVlcnlIAIgBARJDCghtb2RhbGl0eRgCIAEoDjIxLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuUHJlc2V0cy5Nb2RhbGl0eSIeCgVRdWVyeRILCgdQUkVDSVNFEAASCAoERkFTVBABIkYKCE1vZGFsaXR5EhgKFE1PREFMSVRZX1VOU1BFQ0lGSUVEEAASCQoFSU1BR0UQARIICgRURVhUEAISCwoHVEFCVUxBUhADQggKBl9xdWVyeSKDAgoXRXhwbGFuYXRpb25TcGVjT3ZlcnJpZGUSSgoKcGFyYW1ldGVycxgBIAEoCzI2Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuRXhwbGFuYXRpb25QYXJhbWV0ZXJzEk4KCG1ldGFkYXRhGAIgASgLMjwuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5FeHBsYW5hdGlvbk1ldGFkYXRhT3ZlcnJpZGUSTAoRZXhhbXBsZXNfb3ZlcnJpZGUYAyABKAsyMS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkV4YW1wbGVzT3ZlcnJpZGUiygIKG0V4cGxhbmF0aW9uTWV0YWRhdGFPdmVycmlkZRJdCgZpbnB1dHMYASADKAsySC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkV4cGxhbmF0aW9uTWV0YWRhdGFPdmVycmlkZS5JbnB1dHNFbnRyeUID4EECGkgKFUlucHV0TWV0YWRhdGFPdmVycmlkZRIvCg9pbnB1dF9iYXNlbGluZXMYASADKAsyFi5nb29nbGUucHJvdG9idWYuVmFsdWUagQEKC0lucHV0c0VudHJ5EgsKA2tleRgBIAEoCRJhCgV2YWx1ZRgCIAEoCzJSLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuRXhwbGFuYXRpb25NZXRhZGF0YU92ZXJyaWRlLklucHV0TWV0YWRhdGFPdmVycmlkZToCOAEi0AIKEEV4YW1wbGVzT3ZlcnJpZGUSFgoObmVpZ2hib3JfY291bnQYASABKAUSFgoOY3Jvd2RpbmdfY291bnQYAiABKAUSVAoMcmVzdHJpY3Rpb25zGAMgAygLMj4uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5FeGFtcGxlc1Jlc3RyaWN0aW9uc05hbWVzcGFjZRIZChFyZXR1cm5fZW1iZWRkaW5ncxgEIAEoCBJRCgtkYXRhX2Zvcm1hdBgFIAEoDjI8Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuRXhhbXBsZXNPdmVycmlkZS5EYXRhRm9ybWF0IkgKCkRhdGFGb3JtYXQSGwoXREFUQV9GT1JNQVRfVU5TUEVDSUZJRUQQABINCglJTlNUQU5DRVMQARIOCgpFTUJFRERJTkdTEAIiVAodRXhhbXBsZXNSZXN0cmljdGlvbnNOYW1lc3BhY2USFgoObmFtZXNwYWNlX25hbWUYASABKAkSDQoFYWxsb3cYAiADKAkSDAoEZGVueRgDIAMoCULnAQojY29tLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTFCEEV4cGxhbmF0aW9uUHJvdG9QAVpDY2xvdWQuZ29vZ2xlLmNvbS9nby9haXBsYXRmb3JtL2FwaXYxYmV0YTEvYWlwbGF0Zm9ybXBiO2FpcGxhdGZvcm1wYqoCH0dvb2dsZS5DbG91ZC5BSVBsYXRmb3JtLlYxQmV0YTHKAh9Hb29nbGVcQ2xvdWRcQUlQbGF0Zm9ybVxWMWJldGEx6gIiR29vZ2xlOjpDbG91ZDo6QUlQbGF0Zm9ybTo6VjFiZXRhMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_cloud_aiplatform_v1beta1_explanation_metadata, file_google_cloud_aiplatform_v1beta1_io, file_google_protobuf_struct]);

/**
 * Explanation of a prediction (provided in
 * [PredictResponse.predictions][google.cloud.aiplatform.v1beta1.PredictResponse.predictions])
 * produced by the Model on a given
 * [instance][google.cloud.aiplatform.v1beta1.ExplainRequest.instances].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Explanation
 */
export type Explanation = Message<"google.cloud.aiplatform.v1beta1.Explanation"> & {
  /**
   * Output only. Feature attributions grouped by predicted outputs.
   *
   * For Models that predict only one output, such as regression Models that
   * predict only one score, there is only one attibution that explains the
   * predicted output. For Models that predict multiple outputs, such as
   * multiclass Models that predict multiple classes, each element explains one
   * specific item.
   * [Attribution.output_index][google.cloud.aiplatform.v1beta1.Attribution.output_index]
   * can be used to identify which output this attribution is explaining.
   *
   * By default, we provide Shapley values for the predicted class. However,
   * you can configure the explanation request to generate Shapley values for
   * any other classes too. For example, if a model predicts a probability of
   * `0.4` for approving a loan application, the model's decision is to reject
   * the application since `p(reject) = 0.6 > p(approve) = 0.4`, and the default
   * Shapley values would be computed for rejection decision and not approval,
   * even though the latter might be the positive class.
   *
   * If users set
   * [ExplanationParameters.top_k][google.cloud.aiplatform.v1beta1.ExplanationParameters.top_k],
   * the attributions are sorted by
   * [instance_output_value][Attributions.instance_output_value] in descending
   * order. If
   * [ExplanationParameters.output_indices][google.cloud.aiplatform.v1beta1.ExplanationParameters.output_indices]
   * is specified, the attributions are stored by
   * [Attribution.output_index][google.cloud.aiplatform.v1beta1.Attribution.output_index]
   * in the same order as they appear in the output_indices.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Attribution attributions = 1;
   */
  attributions: Attribution[];

  /**
   * Output only. List of the nearest neighbors for example-based explanations.
   *
   * For models deployed with the examples explanations feature enabled, the
   * attributions field is empty and instead the neighbors field is populated.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Neighbor neighbors = 2;
   */
  neighbors: Neighbor[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Explanation.
 * Use `create(ExplanationSchema)` to create a new message.
 */
export const ExplanationSchema: GenMessage<Explanation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 0);

/**
 * Aggregated explanation metrics for a Model over a set of instances.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelExplanation
 */
export type ModelExplanation = Message<"google.cloud.aiplatform.v1beta1.ModelExplanation"> & {
  /**
   * Output only. Aggregated attributions explaining the Model's prediction
   * outputs over the set of instances. The attributions are grouped by outputs.
   *
   * For Models that predict only one output, such as regression Models that
   * predict only one score, there is only one attibution that explains the
   * predicted output. For Models that predict multiple outputs, such as
   * multiclass Models that predict multiple classes, each element explains one
   * specific item.
   * [Attribution.output_index][google.cloud.aiplatform.v1beta1.Attribution.output_index]
   * can be used to identify which output this attribution is explaining.
   *
   * The
   * [baselineOutputValue][google.cloud.aiplatform.v1beta1.Attribution.baseline_output_value],
   * [instanceOutputValue][google.cloud.aiplatform.v1beta1.Attribution.instance_output_value]
   * and
   * [featureAttributions][google.cloud.aiplatform.v1beta1.Attribution.feature_attributions]
   * fields are averaged over the test data.
   *
   * NOTE: Currently AutoML tabular classification Models produce only one
   * attribution, which averages attributions over all the classes it predicts.
   * [Attribution.approximation_error][google.cloud.aiplatform.v1beta1.Attribution.approximation_error]
   * is not populated.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Attribution mean_attributions = 1;
   */
  meanAttributions: Attribution[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelExplanation.
 * Use `create(ModelExplanationSchema)` to create a new message.
 */
export const ModelExplanationSchema: GenMessage<ModelExplanation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 1);

/**
 * Attribution that explains a particular prediction output.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Attribution
 */
export type Attribution = Message<"google.cloud.aiplatform.v1beta1.Attribution"> & {
  /**
   * Output only. Model predicted output if the input instance is constructed
   * from the baselines of all the features defined in
   * [ExplanationMetadata.inputs][google.cloud.aiplatform.v1beta1.ExplanationMetadata.inputs].
   * The field name of the output is determined by the key in
   * [ExplanationMetadata.outputs][google.cloud.aiplatform.v1beta1.ExplanationMetadata.outputs].
   *
   * If the Model's predicted output has multiple dimensions (rank > 1), this is
   * the value in the output located by
   * [output_index][google.cloud.aiplatform.v1beta1.Attribution.output_index].
   *
   * If there are multiple baselines, their output values are averaged.
   *
   * @generated from field: double baseline_output_value = 1;
   */
  baselineOutputValue: number;

  /**
   * Output only. Model predicted output on the corresponding [explanation
   * instance][ExplainRequest.instances]. The field name of the output is
   * determined by the key in
   * [ExplanationMetadata.outputs][google.cloud.aiplatform.v1beta1.ExplanationMetadata.outputs].
   *
   * If the Model predicted output has multiple dimensions, this is the value in
   * the output located by
   * [output_index][google.cloud.aiplatform.v1beta1.Attribution.output_index].
   *
   * @generated from field: double instance_output_value = 2;
   */
  instanceOutputValue: number;

  /**
   * Output only. Attributions of each explained feature. Features are extracted
   * from the [prediction
   * instances][google.cloud.aiplatform.v1beta1.ExplainRequest.instances]
   * according to [explanation metadata for
   * inputs][google.cloud.aiplatform.v1beta1.ExplanationMetadata.inputs].
   *
   * The value is a struct, whose keys are the name of the feature. The values
   * are how much the feature in the
   * [instance][google.cloud.aiplatform.v1beta1.ExplainRequest.instances]
   * contributed to the predicted result.
   *
   * The format of the value is determined by the feature's input format:
   *
   *   * If the feature is a scalar value, the attribution value is a
   *     [floating number][google.protobuf.Value.number_value].
   *
   *   * If the feature is an array of scalar values, the attribution value is
   *     an [array][google.protobuf.Value.list_value].
   *
   *   * If the feature is a struct, the attribution value is a
   *     [struct][google.protobuf.Value.struct_value]. The keys in the
   *     attribution value struct are the same as the keys in the feature
   *     struct. The formats of the values in the attribution struct are
   *     determined by the formats of the values in the feature struct.
   *
   * The
   * [ExplanationMetadata.feature_attributions_schema_uri][google.cloud.aiplatform.v1beta1.ExplanationMetadata.feature_attributions_schema_uri]
   * field, pointed to by the
   * [ExplanationSpec][google.cloud.aiplatform.v1beta1.ExplanationSpec] field of
   * the
   * [Endpoint.deployed_models][google.cloud.aiplatform.v1beta1.Endpoint.deployed_models]
   * object, points to the schema file that describes the features and their
   * attribution values (if it is populated).
   *
   * @generated from field: google.protobuf.Value feature_attributions = 3;
   */
  featureAttributions?: Value;

  /**
   * Output only. The index that locates the explained prediction output.
   *
   * If the prediction output is a scalar value, output_index is not populated.
   * If the prediction output has multiple dimensions, the length of the
   * output_index list is the same as the number of dimensions of the output.
   * The i-th element in output_index is the element index of the i-th dimension
   * of the output vector. Indices start from 0.
   *
   * @generated from field: repeated int32 output_index = 4;
   */
  outputIndex: number[];

  /**
   * Output only. The display name of the output identified by
   * [output_index][google.cloud.aiplatform.v1beta1.Attribution.output_index].
   * For example, the predicted class name by a multi-classification Model.
   *
   * This field is only populated iff the Model predicts display names as a
   * separate field along with the explained output. The predicted display name
   * must has the same shape of the explained output, and can be located using
   * output_index.
   *
   * @generated from field: string output_display_name = 5;
   */
  outputDisplayName: string;

  /**
   * Output only. Error of
   * [feature_attributions][google.cloud.aiplatform.v1beta1.Attribution.feature_attributions]
   * caused by approximation used in the explanation method. Lower value means
   * more precise attributions.
   *
   * * For Sampled Shapley
   * [attribution][google.cloud.aiplatform.v1beta1.ExplanationParameters.sampled_shapley_attribution],
   * increasing
   * [path_count][google.cloud.aiplatform.v1beta1.SampledShapleyAttribution.path_count]
   * might reduce the error.
   * * For Integrated Gradients
   * [attribution][google.cloud.aiplatform.v1beta1.ExplanationParameters.integrated_gradients_attribution],
   * increasing
   * [step_count][google.cloud.aiplatform.v1beta1.IntegratedGradientsAttribution.step_count]
   * might reduce the error.
   * * For [XRAI
   * attribution][google.cloud.aiplatform.v1beta1.ExplanationParameters.xrai_attribution],
   * increasing
   * [step_count][google.cloud.aiplatform.v1beta1.XraiAttribution.step_count]
   * might reduce the error.
   *
   * See [this introduction](/vertex-ai/docs/explainable-ai/overview)
   * for more information.
   *
   * @generated from field: double approximation_error = 6;
   */
  approximationError: number;

  /**
   * Output only. Name of the explain output. Specified as the key in
   * [ExplanationMetadata.outputs][google.cloud.aiplatform.v1beta1.ExplanationMetadata.outputs].
   *
   * @generated from field: string output_name = 7;
   */
  outputName: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Attribution.
 * Use `create(AttributionSchema)` to create a new message.
 */
export const AttributionSchema: GenMessage<Attribution> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 2);

/**
 * Neighbors for example-based explanations.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Neighbor
 */
export type Neighbor = Message<"google.cloud.aiplatform.v1beta1.Neighbor"> & {
  /**
   * Output only. The neighbor id.
   *
   * @generated from field: string neighbor_id = 1;
   */
  neighborId: string;

  /**
   * Output only. The neighbor distance.
   *
   * @generated from field: double neighbor_distance = 2;
   */
  neighborDistance: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Neighbor.
 * Use `create(NeighborSchema)` to create a new message.
 */
export const NeighborSchema: GenMessage<Neighbor> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 3);

/**
 * Specification of Model explanation.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExplanationSpec
 */
export type ExplanationSpec = Message<"google.cloud.aiplatform.v1beta1.ExplanationSpec"> & {
  /**
   * Required. Parameters that configure explaining of the Model's predictions.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ExplanationParameters parameters = 1;
   */
  parameters?: ExplanationParameters;

  /**
   * Optional. Metadata describing the Model's input and output for explanation.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ExplanationMetadata metadata = 2;
   */
  metadata?: ExplanationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExplanationSpec.
 * Use `create(ExplanationSpecSchema)` to create a new message.
 */
export const ExplanationSpecSchema: GenMessage<ExplanationSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 4);

/**
 * Parameters to configure explaining for Model's predictions.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExplanationParameters
 */
export type ExplanationParameters = Message<"google.cloud.aiplatform.v1beta1.ExplanationParameters"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1beta1.ExplanationParameters.method
   */
  method: {
    /**
     * An attribution method that approximates Shapley values for features that
     * contribute to the label being predicted. A sampling strategy is used to
     * approximate the value rather than considering all subsets of features.
     * Refer to this paper for model details: https://arxiv.org/abs/1306.4265.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.SampledShapleyAttribution sampled_shapley_attribution = 1;
     */
    value: SampledShapleyAttribution;
    case: "sampledShapleyAttribution";
  } | {
    /**
     * An attribution method that computes Aumann-Shapley values taking
     * advantage of the model's fully differentiable structure. Refer to this
     * paper for more details: https://arxiv.org/abs/1703.01365
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.IntegratedGradientsAttribution integrated_gradients_attribution = 2;
     */
    value: IntegratedGradientsAttribution;
    case: "integratedGradientsAttribution";
  } | {
    /**
     * An attribution method that redistributes Integrated Gradients
     * attribution to segmented regions, taking advantage of the model's fully
     * differentiable structure. Refer to this paper for
     * more details: https://arxiv.org/abs/1906.02825
     *
     * XRAI currently performs better on natural images, like a picture of a
     * house or an animal. If the images are taken in artificial environments,
     * like a lab or manufacturing line, or from diagnostic equipment, like
     * x-rays or quality-control cameras, use Integrated Gradients instead.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.XraiAttribution xrai_attribution = 3;
     */
    value: XraiAttribution;
    case: "xraiAttribution";
  } | {
    /**
     * Example-based explanations that returns the nearest neighbors from the
     * provided dataset.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.Examples examples = 7;
     */
    value: Examples;
    case: "examples";
  } | { case: undefined; value?: undefined };

  /**
   * If populated, returns attributions for top K indices of outputs
   * (defaults to 1). Only applies to Models that predicts more than one outputs
   * (e,g, multi-class Models). When set to -1, returns explanations for all
   * outputs.
   *
   * @generated from field: int32 top_k = 4;
   */
  topK: number;

  /**
   * If populated, only returns attributions that have
   * [output_index][google.cloud.aiplatform.v1beta1.Attribution.output_index]
   * contained in output_indices. It must be an ndarray of integers, with the
   * same shape of the output it's explaining.
   *
   * If not populated, returns attributions for
   * [top_k][google.cloud.aiplatform.v1beta1.ExplanationParameters.top_k]
   * indices of outputs. If neither top_k nor output_indices is populated,
   * returns the argmax index of the outputs.
   *
   * Only applicable to Models that predict multiple outputs (e,g, multi-class
   * Models that predict multiple classes).
   *
   * @generated from field: google.protobuf.ListValue output_indices = 5;
   */
  outputIndices?: ListValue;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExplanationParameters.
 * Use `create(ExplanationParametersSchema)` to create a new message.
 */
export const ExplanationParametersSchema: GenMessage<ExplanationParameters> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 5);

/**
 * An attribution method that approximates Shapley values for features that
 * contribute to the label being predicted. A sampling strategy is used to
 * approximate the value rather than considering all subsets of features.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.SampledShapleyAttribution
 */
export type SampledShapleyAttribution = Message<"google.cloud.aiplatform.v1beta1.SampledShapleyAttribution"> & {
  /**
   * Required. The number of feature permutations to consider when approximating
   * the Shapley values.
   *
   * Valid range of its value is [1, 50], inclusively.
   *
   * @generated from field: int32 path_count = 1;
   */
  pathCount: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.SampledShapleyAttribution.
 * Use `create(SampledShapleyAttributionSchema)` to create a new message.
 */
export const SampledShapleyAttributionSchema: GenMessage<SampledShapleyAttribution> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 6);

/**
 * An attribution method that computes the Aumann-Shapley value taking advantage
 * of the model's fully differentiable structure. Refer to this paper for
 * more details: https://arxiv.org/abs/1703.01365
 *
 * @generated from message google.cloud.aiplatform.v1beta1.IntegratedGradientsAttribution
 */
export type IntegratedGradientsAttribution = Message<"google.cloud.aiplatform.v1beta1.IntegratedGradientsAttribution"> & {
  /**
   * Required. The number of steps for approximating the path integral.
   * A good value to start is 50 and gradually increase until the
   * sum to diff property is within the desired error range.
   *
   * Valid range of its value is [1, 100], inclusively.
   *
   * @generated from field: int32 step_count = 1;
   */
  stepCount: number;

  /**
   * Config for SmoothGrad approximation of gradients.
   *
   * When enabled, the gradients are approximated by averaging the gradients
   * from noisy samples in the vicinity of the inputs. Adding
   * noise can help improve the computed gradients. Refer to this paper for more
   * details: https://arxiv.org/pdf/1706.03825.pdf
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.SmoothGradConfig smooth_grad_config = 2;
   */
  smoothGradConfig?: SmoothGradConfig;

  /**
   * Config for IG with blur baseline.
   *
   * When enabled, a linear path from the maximally blurred image to the input
   * image is created. Using a blurred baseline instead of zero (black image) is
   * motivated by the BlurIG approach explained here:
   * https://arxiv.org/abs/2004.03383
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.BlurBaselineConfig blur_baseline_config = 3;
   */
  blurBaselineConfig?: BlurBaselineConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.IntegratedGradientsAttribution.
 * Use `create(IntegratedGradientsAttributionSchema)` to create a new message.
 */
export const IntegratedGradientsAttributionSchema: GenMessage<IntegratedGradientsAttribution> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 7);

/**
 * An explanation method that redistributes Integrated Gradients
 * attributions to segmented regions, taking advantage of the model's fully
 * differentiable structure. Refer to this paper for more details:
 * https://arxiv.org/abs/1906.02825
 *
 * Supported only by image Models.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.XraiAttribution
 */
export type XraiAttribution = Message<"google.cloud.aiplatform.v1beta1.XraiAttribution"> & {
  /**
   * Required. The number of steps for approximating the path integral.
   * A good value to start is 50 and gradually increase until the
   * sum to diff property is met within the desired error range.
   *
   * Valid range of its value is [1, 100], inclusively.
   *
   * @generated from field: int32 step_count = 1;
   */
  stepCount: number;

  /**
   * Config for SmoothGrad approximation of gradients.
   *
   * When enabled, the gradients are approximated by averaging the gradients
   * from noisy samples in the vicinity of the inputs. Adding
   * noise can help improve the computed gradients. Refer to this paper for more
   * details: https://arxiv.org/pdf/1706.03825.pdf
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.SmoothGradConfig smooth_grad_config = 2;
   */
  smoothGradConfig?: SmoothGradConfig;

  /**
   * Config for XRAI with blur baseline.
   *
   * When enabled, a linear path from the maximally blurred image to the input
   * image is created. Using a blurred baseline instead of zero (black image) is
   * motivated by the BlurIG approach explained here:
   * https://arxiv.org/abs/2004.03383
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.BlurBaselineConfig blur_baseline_config = 3;
   */
  blurBaselineConfig?: BlurBaselineConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.XraiAttribution.
 * Use `create(XraiAttributionSchema)` to create a new message.
 */
export const XraiAttributionSchema: GenMessage<XraiAttribution> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 8);

/**
 * Config for SmoothGrad approximation of gradients.
 *
 * When enabled, the gradients are approximated by averaging the gradients from
 * noisy samples in the vicinity of the inputs. Adding noise can help improve
 * the computed gradients. Refer to this paper for more details:
 * https://arxiv.org/pdf/1706.03825.pdf
 *
 * @generated from message google.cloud.aiplatform.v1beta1.SmoothGradConfig
 */
export type SmoothGradConfig = Message<"google.cloud.aiplatform.v1beta1.SmoothGradConfig"> & {
  /**
   * Represents the standard deviation of the gaussian kernel
   * that will be used to add noise to the interpolated inputs
   * prior to computing gradients.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.SmoothGradConfig.GradientNoiseSigma
   */
  GradientNoiseSigma: {
    /**
     * This is a single float value and will be used to add noise to all the
     * features. Use this field when all features are normalized to have the
     * same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where
     * features are normalized to have 0-mean and 1-variance. Learn more about
     * [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization).
     *
     * For best results the recommended value is about 10% - 20% of the standard
     * deviation of the input feature. Refer to section 3.2 of the SmoothGrad
     * paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1.
     *
     * If the distribution is different per feature, set
     * [feature_noise_sigma][google.cloud.aiplatform.v1beta1.SmoothGradConfig.feature_noise_sigma]
     * instead for each feature.
     *
     * @generated from field: float noise_sigma = 1;
     */
    value: number;
    case: "noiseSigma";
  } | {
    /**
     * This is similar to
     * [noise_sigma][google.cloud.aiplatform.v1beta1.SmoothGradConfig.noise_sigma],
     * but provides additional flexibility. A separate noise sigma can be
     * provided for each feature, which is useful if their distributions are
     * different. No noise is added to features that are not set. If this field
     * is unset,
     * [noise_sigma][google.cloud.aiplatform.v1beta1.SmoothGradConfig.noise_sigma]
     * will be used for all features.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.FeatureNoiseSigma feature_noise_sigma = 2;
     */
    value: FeatureNoiseSigma;
    case: "featureNoiseSigma";
  } | { case: undefined; value?: undefined };

  /**
   * The number of gradient samples to use for
   * approximation. The higher this number, the more accurate the gradient
   * is, but the runtime complexity increases by this factor as well.
   * Valid range of its value is [1, 50]. Defaults to 3.
   *
   * @generated from field: int32 noisy_sample_count = 3;
   */
  noisySampleCount: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.SmoothGradConfig.
 * Use `create(SmoothGradConfigSchema)` to create a new message.
 */
export const SmoothGradConfigSchema: GenMessage<SmoothGradConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 9);

/**
 * Noise sigma by features. Noise sigma represents the standard deviation of the
 * gaussian kernel that will be used to add noise to interpolated inputs prior
 * to computing gradients.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FeatureNoiseSigma
 */
export type FeatureNoiseSigma = Message<"google.cloud.aiplatform.v1beta1.FeatureNoiseSigma"> & {
  /**
   * Noise sigma per feature. No noise is added to features that are not set.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.FeatureNoiseSigma.NoiseSigmaForFeature noise_sigma = 1;
   */
  noiseSigma: FeatureNoiseSigma_NoiseSigmaForFeature[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FeatureNoiseSigma.
 * Use `create(FeatureNoiseSigmaSchema)` to create a new message.
 */
export const FeatureNoiseSigmaSchema: GenMessage<FeatureNoiseSigma> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 10);

/**
 * Noise sigma for a single feature.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.FeatureNoiseSigma.NoiseSigmaForFeature
 */
export type FeatureNoiseSigma_NoiseSigmaForFeature = Message<"google.cloud.aiplatform.v1beta1.FeatureNoiseSigma.NoiseSigmaForFeature"> & {
  /**
   * The name of the input feature for which noise sigma is provided. The
   * features are defined in
   * [explanation metadata
   * inputs][google.cloud.aiplatform.v1beta1.ExplanationMetadata.inputs].
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * This represents the standard deviation of the Gaussian kernel that will
   * be used to add noise to the feature prior to computing gradients. Similar
   * to
   * [noise_sigma][google.cloud.aiplatform.v1beta1.SmoothGradConfig.noise_sigma]
   * but represents the noise added to the current feature. Defaults to 0.1.
   *
   * @generated from field: float sigma = 2;
   */
  sigma: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.FeatureNoiseSigma.NoiseSigmaForFeature.
 * Use `create(FeatureNoiseSigma_NoiseSigmaForFeatureSchema)` to create a new message.
 */
export const FeatureNoiseSigma_NoiseSigmaForFeatureSchema: GenMessage<FeatureNoiseSigma_NoiseSigmaForFeature> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 10, 0);

/**
 * Config for blur baseline.
 *
 * When enabled, a linear path from the maximally blurred image to the input
 * image is created. Using a blurred baseline instead of zero (black image) is
 * motivated by the BlurIG approach explained here:
 * https://arxiv.org/abs/2004.03383
 *
 * @generated from message google.cloud.aiplatform.v1beta1.BlurBaselineConfig
 */
export type BlurBaselineConfig = Message<"google.cloud.aiplatform.v1beta1.BlurBaselineConfig"> & {
  /**
   * The standard deviation of the blur kernel for the blurred baseline. The
   * same blurring parameter is used for both the height and the width
   * dimension. If not set, the method defaults to the zero (i.e. black for
   * images) baseline.
   *
   * @generated from field: float max_blur_sigma = 1;
   */
  maxBlurSigma: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.BlurBaselineConfig.
 * Use `create(BlurBaselineConfigSchema)` to create a new message.
 */
export const BlurBaselineConfigSchema: GenMessage<BlurBaselineConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 11);

/**
 * Example-based explainability that returns the nearest neighbors from the
 * provided dataset.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Examples
 */
export type Examples = Message<"google.cloud.aiplatform.v1beta1.Examples"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1beta1.Examples.source
   */
  source: {
    /**
     * The Cloud Storage input instances.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.Examples.ExampleGcsSource example_gcs_source = 5;
     */
    value: Examples_ExampleGcsSource;
    case: "exampleGcsSource";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof google.cloud.aiplatform.v1beta1.Examples.config
   */
  config: {
    /**
     * The full configuration for the generated index, the semantics are the
     * same as [metadata][google.cloud.aiplatform.v1beta1.Index.metadata] and
     * should match
     * [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
     *
     * @generated from field: google.protobuf.Value nearest_neighbor_search_config = 2;
     */
    value: Value;
    case: "nearestNeighborSearchConfig";
  } | {
    /**
     * Simplified preset configuration, which automatically sets configuration
     * values based on the desired query speed-precision trade-off and modality.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.Presets presets = 4;
     */
    value: Presets;
    case: "presets";
  } | { case: undefined; value?: undefined };

  /**
   * The Cloud Storage locations that contain the instances to be
   * indexed for approximate nearest neighbor search.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GcsSource gcs_source = 1;
   */
  gcsSource?: GcsSource;

  /**
   * The number of neighbors to return when querying for examples.
   *
   * @generated from field: int32 neighbor_count = 3;
   */
  neighborCount: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Examples.
 * Use `create(ExamplesSchema)` to create a new message.
 */
export const ExamplesSchema: GenMessage<Examples> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 12);

/**
 * The Cloud Storage input instances.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Examples.ExampleGcsSource
 */
export type Examples_ExampleGcsSource = Message<"google.cloud.aiplatform.v1beta1.Examples.ExampleGcsSource"> & {
  /**
   * The format in which instances are given, if not specified, assume it's
   * JSONL format. Currently only JSONL format is supported.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Examples.ExampleGcsSource.DataFormat data_format = 1;
   */
  dataFormat: Examples_ExampleGcsSource_DataFormat;

  /**
   * The Cloud Storage location for the input instances.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GcsSource gcs_source = 2;
   */
  gcsSource?: GcsSource;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Examples.ExampleGcsSource.
 * Use `create(Examples_ExampleGcsSourceSchema)` to create a new message.
 */
export const Examples_ExampleGcsSourceSchema: GenMessage<Examples_ExampleGcsSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 12, 0);

/**
 * The format of the input example instances.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.Examples.ExampleGcsSource.DataFormat
 */
export enum Examples_ExampleGcsSource_DataFormat {
  /**
   * Format unspecified, used when unset.
   *
   * @generated from enum value: DATA_FORMAT_UNSPECIFIED = 0;
   */
  DATA_FORMAT_UNSPECIFIED = 0,

  /**
   * Examples are stored in JSONL files.
   *
   * @generated from enum value: JSONL = 1;
   */
  JSONL = 1,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.Examples.ExampleGcsSource.DataFormat.
 */
export const Examples_ExampleGcsSource_DataFormatSchema: GenEnum<Examples_ExampleGcsSource_DataFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_explanation, 12, 0, 0);

/**
 * Preset configuration for example-based explanations
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Presets
 */
export type Presets = Message<"google.cloud.aiplatform.v1beta1.Presets"> & {
  /**
   * Preset option controlling parameters for speed-precision trade-off when
   * querying for examples. If omitted, defaults to `PRECISE`.
   *
   * @generated from field: optional google.cloud.aiplatform.v1beta1.Presets.Query query = 1;
   */
  query?: Presets_Query;

  /**
   * The modality of the uploaded model, which automatically configures the
   * distance measurement and feature normalization for the underlying example
   * index and queries. If your model does not precisely fit one of these types,
   * it is okay to choose the closest type.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Presets.Modality modality = 2;
   */
  modality: Presets_Modality;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Presets.
 * Use `create(PresetsSchema)` to create a new message.
 */
export const PresetsSchema: GenMessage<Presets> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 13);

/**
 * Preset option controlling parameters for query speed-precision trade-off
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.Presets.Query
 */
export enum Presets_Query {
  /**
   * More precise neighbors as a trade-off against slower response.
   *
   * @generated from enum value: PRECISE = 0;
   */
  PRECISE = 0,

  /**
   * Faster response as a trade-off against less precise neighbors.
   *
   * @generated from enum value: FAST = 1;
   */
  FAST = 1,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.Presets.Query.
 */
export const Presets_QuerySchema: GenEnum<Presets_Query> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_explanation, 13, 0);

/**
 * Preset option controlling parameters for different modalities
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.Presets.Modality
 */
export enum Presets_Modality {
  /**
   * Should not be set. Added as a recommended best practice for enums
   *
   * @generated from enum value: MODALITY_UNSPECIFIED = 0;
   */
  MODALITY_UNSPECIFIED = 0,

  /**
   * IMAGE modality
   *
   * @generated from enum value: IMAGE = 1;
   */
  IMAGE = 1,

  /**
   * TEXT modality
   *
   * @generated from enum value: TEXT = 2;
   */
  TEXT = 2,

  /**
   * TABULAR modality
   *
   * @generated from enum value: TABULAR = 3;
   */
  TABULAR = 3,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.Presets.Modality.
 */
export const Presets_ModalitySchema: GenEnum<Presets_Modality> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_explanation, 13, 1);

/**
 * The [ExplanationSpec][google.cloud.aiplatform.v1beta1.ExplanationSpec]
 * entries that can be overridden at [online
 * explanation][google.cloud.aiplatform.v1beta1.PredictionService.Explain] time.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExplanationSpecOverride
 */
export type ExplanationSpecOverride = Message<"google.cloud.aiplatform.v1beta1.ExplanationSpecOverride"> & {
  /**
   * The parameters to be overridden. Note that the
   * attribution method cannot be changed. If not specified,
   * no parameter is overridden.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ExplanationParameters parameters = 1;
   */
  parameters?: ExplanationParameters;

  /**
   * The metadata to be overridden. If not specified, no metadata is overridden.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ExplanationMetadataOverride metadata = 2;
   */
  metadata?: ExplanationMetadataOverride;

  /**
   * The example-based explanations parameter overrides.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ExamplesOverride examples_override = 3;
   */
  examplesOverride?: ExamplesOverride;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExplanationSpecOverride.
 * Use `create(ExplanationSpecOverrideSchema)` to create a new message.
 */
export const ExplanationSpecOverrideSchema: GenMessage<ExplanationSpecOverride> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 14);

/**
 * The
 * [ExplanationMetadata][google.cloud.aiplatform.v1beta1.ExplanationMetadata]
 * entries that can be overridden at [online
 * explanation][google.cloud.aiplatform.v1beta1.PredictionService.Explain] time.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExplanationMetadataOverride
 */
export type ExplanationMetadataOverride = Message<"google.cloud.aiplatform.v1beta1.ExplanationMetadataOverride"> & {
  /**
   * Required. Overrides the [input
   * metadata][google.cloud.aiplatform.v1beta1.ExplanationMetadata.inputs] of
   * the features. The key is the name of the feature to be overridden. The keys
   * specified here must exist in the input metadata to be overridden. If a
   * feature is not specified here, the corresponding feature's input metadata
   * is not overridden.
   *
   * @generated from field: map<string, google.cloud.aiplatform.v1beta1.ExplanationMetadataOverride.InputMetadataOverride> inputs = 1;
   */
  inputs: { [key: string]: ExplanationMetadataOverride_InputMetadataOverride };
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExplanationMetadataOverride.
 * Use `create(ExplanationMetadataOverrideSchema)` to create a new message.
 */
export const ExplanationMetadataOverrideSchema: GenMessage<ExplanationMetadataOverride> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 15);

/**
 * The [input
 * metadata][google.cloud.aiplatform.v1beta1.ExplanationMetadata.InputMetadata]
 * entries to be overridden.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExplanationMetadataOverride.InputMetadataOverride
 */
export type ExplanationMetadataOverride_InputMetadataOverride = Message<"google.cloud.aiplatform.v1beta1.ExplanationMetadataOverride.InputMetadataOverride"> & {
  /**
   * Baseline inputs for this feature.
   *
   * This overrides the `input_baseline` field of the
   * [ExplanationMetadata.InputMetadata][google.cloud.aiplatform.v1beta1.ExplanationMetadata.InputMetadata]
   * object of the corresponding feature's input metadata. If it's not
   * specified, the original baselines are not overridden.
   *
   * @generated from field: repeated google.protobuf.Value input_baselines = 1;
   */
  inputBaselines: Value[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExplanationMetadataOverride.InputMetadataOverride.
 * Use `create(ExplanationMetadataOverride_InputMetadataOverrideSchema)` to create a new message.
 */
export const ExplanationMetadataOverride_InputMetadataOverrideSchema: GenMessage<ExplanationMetadataOverride_InputMetadataOverride> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 15, 0);

/**
 * Overrides for example-based explanations.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExamplesOverride
 */
export type ExamplesOverride = Message<"google.cloud.aiplatform.v1beta1.ExamplesOverride"> & {
  /**
   * The number of neighbors to return.
   *
   * @generated from field: int32 neighbor_count = 1;
   */
  neighborCount: number;

  /**
   * The number of neighbors to return that have the same crowding tag.
   *
   * @generated from field: int32 crowding_count = 2;
   */
  crowdingCount: number;

  /**
   * Restrict the resulting nearest neighbors to respect these constraints.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.ExamplesRestrictionsNamespace restrictions = 3;
   */
  restrictions: ExamplesRestrictionsNamespace[];

  /**
   * If true, return the embeddings instead of neighbors.
   *
   * @generated from field: bool return_embeddings = 4;
   */
  returnEmbeddings: boolean;

  /**
   * The format of the data being provided with each call.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ExamplesOverride.DataFormat data_format = 5;
   */
  dataFormat: ExamplesOverride_DataFormat;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExamplesOverride.
 * Use `create(ExamplesOverrideSchema)` to create a new message.
 */
export const ExamplesOverrideSchema: GenMessage<ExamplesOverride> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 16);

/**
 * Data format enum.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.ExamplesOverride.DataFormat
 */
export enum ExamplesOverride_DataFormat {
  /**
   * Unspecified format. Must not be used.
   *
   * @generated from enum value: DATA_FORMAT_UNSPECIFIED = 0;
   */
  DATA_FORMAT_UNSPECIFIED = 0,

  /**
   * Provided data is a set of model inputs.
   *
   * @generated from enum value: INSTANCES = 1;
   */
  INSTANCES = 1,

  /**
   * Provided data is a set of embeddings.
   *
   * @generated from enum value: EMBEDDINGS = 2;
   */
  EMBEDDINGS = 2,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.ExamplesOverride.DataFormat.
 */
export const ExamplesOverride_DataFormatSchema: GenEnum<ExamplesOverride_DataFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_explanation, 16, 0);

/**
 * Restrictions namespace for example-based explanations overrides.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExamplesRestrictionsNamespace
 */
export type ExamplesRestrictionsNamespace = Message<"google.cloud.aiplatform.v1beta1.ExamplesRestrictionsNamespace"> & {
  /**
   * The namespace name.
   *
   * @generated from field: string namespace_name = 1;
   */
  namespaceName: string;

  /**
   * The list of allowed tags.
   *
   * @generated from field: repeated string allow = 2;
   */
  allow: string[];

  /**
   * The list of deny tags.
   *
   * @generated from field: repeated string deny = 3;
   */
  deny: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExamplesRestrictionsNamespace.
 * Use `create(ExamplesRestrictionsNamespaceSchema)` to create a new message.
 */
export const ExamplesRestrictionsNamespaceSchema: GenMessage<ExamplesRestrictionsNamespace> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_explanation, 17);

