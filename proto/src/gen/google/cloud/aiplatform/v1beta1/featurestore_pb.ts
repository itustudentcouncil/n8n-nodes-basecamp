// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/featurestore.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EncryptionSpec } from "./encryption_spec_pb";
import { file_google_cloud_aiplatform_v1beta1_encryption_spec } from "./encryption_spec_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/featurestore.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_featurestore: GenFile = /*@__PURE__*/
  fileDesc("CjJnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL2ZlYXR1cmVzdG9yZS5wcm90bxIfZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMSKcCAoMRmVhdHVyZXN0b3JlEhEKBG5hbWUYASABKAlCA+BBAxI0CgtjcmVhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVfdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxIRCgRldGFnGAUgASgJQgPgQQESTgoGbGFiZWxzGAYgAygLMjkuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5GZWF0dXJlc3RvcmUuTGFiZWxzRW50cnlCA+BBARJlChVvbmxpbmVfc2VydmluZ19jb25maWcYByABKAsyQS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkZlYXR1cmVzdG9yZS5PbmxpbmVTZXJ2aW5nQ29uZmlnQgPgQQESRwoFc3RhdGUYCCABKA4yMy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkZlYXR1cmVzdG9yZS5TdGF0ZUID4EEDEiQKF29ubGluZV9zdG9yYWdlX3R0bF9kYXlzGA0gASgFQgPgQQESTQoPZW5jcnlwdGlvbl9zcGVjGAogASgLMi8uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5FbmNyeXB0aW9uU3BlY0ID4EEBEhoKDXNhdGlzZmllc19wenMYDiABKAhCA+BBAxIaCg1zYXRpc2ZpZXNfcHppGA8gASgIQgPgQQMa8AEKE09ubGluZVNlcnZpbmdDb25maWcSGAoQZml4ZWRfbm9kZV9jb3VudBgCIAEoBRJaCgdzY2FsaW5nGAQgASgLMkkuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5GZWF0dXJlc3RvcmUuT25saW5lU2VydmluZ0NvbmZpZy5TY2FsaW5nGmMKB1NjYWxpbmcSGwoObWluX25vZGVfY291bnQYASABKAVCA+BBAhIWCg5tYXhfbm9kZV9jb3VudBgCIAEoBRIjChZjcHVfdXRpbGl6YXRpb25fdGFyZ2V0GAMgASgFQgPgQQEaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASI4CgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgoKBlNUQUJMRRABEgwKCFVQREFUSU5HEAI6cepBbgomYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9GZWF0dXJlc3RvcmUSRHByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9mZWF0dXJlc3RvcmVzL3tmZWF0dXJlc3RvcmV9QugBCiNjb20uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMUIRRmVhdHVyZXN0b3JlUHJvdG9QAVpDY2xvdWQuZ29vZ2xlLmNvbS9nby9haXBsYXRmb3JtL2FwaXYxYmV0YTEvYWlwbGF0Zm9ybXBiO2FpcGxhdGZvcm1wYqoCH0dvb2dsZS5DbG91ZC5BSVBsYXRmb3JtLlYxQmV0YTHKAh9Hb29nbGVcQ2xvdWRcQUlQbGF0Zm9ybVxWMWJldGEx6gIiR29vZ2xlOjpDbG91ZDo6QUlQbGF0Zm9ybTo6VjFiZXRhMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1beta1_encryption_spec, file_google_protobuf_timestamp]);

/**
 * Vertex AI Feature Store provides a centralized repository for organizing,
 * storing, and serving ML features. The Featurestore is a top-level container
 * for your features and their values.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Featurestore
 */
export type Featurestore = Message<"google.cloud.aiplatform.v1beta1.Featurestore"> & {
  /**
   * Output only. Name of the Featurestore. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Timestamp when this Featurestore was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. Timestamp when this Featurestore was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Used to perform consistent read-modify-write updates. If not set,
   * a blind "overwrite" update happens.
   *
   * @generated from field: string etag = 5;
   */
  etag: string;

  /**
   * Optional. The labels with user-defined metadata to organize your
   * Featurestore.
   *
   * Label keys and values can be no longer than 64 characters
   * (Unicode codepoints), can only contain lowercase letters, numeric
   * characters, underscores and dashes. International characters are allowed.
   *
   * See https://goo.gl/xmQnxf for more information on and examples of labels.
   * No more than 64 user labels can be associated with one Featurestore(System
   * labels are excluded)."
   * System reserved label keys are prefixed with "aiplatform.googleapis.com/"
   * and are immutable.
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Config for online storage resources. The field should not
   * co-exist with the field of `OnlineStoreReplicationConfig`. If both of it
   * and OnlineStoreReplicationConfig are unset, the feature store will not have
   * an online store and cannot be used for online serving.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Featurestore.OnlineServingConfig online_serving_config = 7;
   */
  onlineServingConfig?: Featurestore_OnlineServingConfig;

  /**
   * Output only. State of the featurestore.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Featurestore.State state = 8;
   */
  state: Featurestore_State;

  /**
   * Optional. TTL in days for feature values that will be stored in online
   * serving storage. The Feature Store online storage periodically removes
   * obsolete feature values older than `online_storage_ttl_days` since the
   * feature generation time. Note that `online_storage_ttl_days` should be less
   * than or equal to `offline_storage_ttl_days` for each EntityType under a
   * featurestore. If not set, default to 4000 days
   *
   * @generated from field: int32 online_storage_ttl_days = 13;
   */
  onlineStorageTtlDays: number;

  /**
   * Optional. Customer-managed encryption key spec for data storage. If set,
   * both of the online and offline data storage will be secured by this key.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.EncryptionSpec encryption_spec = 10;
   */
  encryptionSpec?: EncryptionSpec;

  /**
   * Output only. Reserved for future use.
   *
   * @generated from field: bool satisfies_pzs = 14;
   */
  satisfiesPzs: boolean;

  /**
   * Output only. Reserved for future use.
   *
   * @generated from field: bool satisfies_pzi = 15;
   */
  satisfiesPzi: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Featurestore.
 * Use `create(FeaturestoreSchema)` to create a new message.
 */
export const FeaturestoreSchema: GenMessage<Featurestore> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_featurestore, 0);

/**
 * OnlineServingConfig specifies the details for provisioning online serving
 * resources.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Featurestore.OnlineServingConfig
 */
export type Featurestore_OnlineServingConfig = Message<"google.cloud.aiplatform.v1beta1.Featurestore.OnlineServingConfig"> & {
  /**
   * The number of nodes for the online store. The number of nodes doesn't
   * scale automatically, but you can manually update the number of
   * nodes. If set to 0, the featurestore will not have an
   * online store and cannot be used for online serving.
   *
   * @generated from field: int32 fixed_node_count = 2;
   */
  fixedNodeCount: number;

  /**
   * Online serving scaling configuration.
   * Only one of `fixed_node_count` and `scaling` can be set. Setting one will
   * reset the other.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Featurestore.OnlineServingConfig.Scaling scaling = 4;
   */
  scaling?: Featurestore_OnlineServingConfig_Scaling;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Featurestore.OnlineServingConfig.
 * Use `create(Featurestore_OnlineServingConfigSchema)` to create a new message.
 */
export const Featurestore_OnlineServingConfigSchema: GenMessage<Featurestore_OnlineServingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_featurestore, 0, 0);

/**
 * Online serving scaling configuration. If min_node_count and
 * max_node_count are set to the same value, the cluster will be configured
 * with the fixed number of node (no auto-scaling).
 *
 * @generated from message google.cloud.aiplatform.v1beta1.Featurestore.OnlineServingConfig.Scaling
 */
export type Featurestore_OnlineServingConfig_Scaling = Message<"google.cloud.aiplatform.v1beta1.Featurestore.OnlineServingConfig.Scaling"> & {
  /**
   * Required. The minimum number of nodes to scale down to. Must be greater
   * than or equal to 1.
   *
   * @generated from field: int32 min_node_count = 1;
   */
  minNodeCount: number;

  /**
   * The maximum number of nodes to scale up to. Must be greater than
   * min_node_count, and less than or equal to 10 times of 'min_node_count'.
   *
   * @generated from field: int32 max_node_count = 2;
   */
  maxNodeCount: number;

  /**
   * Optional. The cpu utilization that the Autoscaler should be trying to
   * achieve. This number is on a scale from 0 (no utilization) to 100
   * (total utilization), and is limited between 10 and 80. When a cluster's
   * CPU utilization exceeds the target that you have set, Bigtable
   * immediately adds nodes to the cluster. When CPU utilization is
   * substantially lower than the target, Bigtable removes nodes. If not set
   * or set to 0, default to 50.
   *
   * @generated from field: int32 cpu_utilization_target = 3;
   */
  cpuUtilizationTarget: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.Featurestore.OnlineServingConfig.Scaling.
 * Use `create(Featurestore_OnlineServingConfig_ScalingSchema)` to create a new message.
 */
export const Featurestore_OnlineServingConfig_ScalingSchema: GenMessage<Featurestore_OnlineServingConfig_Scaling> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_featurestore, 0, 0, 0);

/**
 * Possible states a featurestore can have.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.Featurestore.State
 */
export enum Featurestore_State {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * State when the featurestore configuration is not being updated and the
   * fields reflect the current configuration of the featurestore. The
   * featurestore is usable in this state.
   *
   * @generated from enum value: STABLE = 1;
   */
  STABLE = 1,

  /**
   * The state of the featurestore configuration when it is being updated.
   * During an update, the fields reflect either the original configuration
   * or the updated configuration of the featurestore. For example,
   * `online_serving_config.fixed_node_count` can take minutes to update.
   * While the update is in progress, the featurestore is in the UPDATING
   * state, and the value of `fixed_node_count` can be the original value or
   * the updated value, depending on the progress of the operation. Until the
   * update completes, the actual number of nodes can still be the original
   * value of `fixed_node_count`. The featurestore is still usable in this
   * state.
   *
   * @generated from enum value: UPDATING = 2;
   */
  UPDATING = 2,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.Featurestore.State.
 */
export const Featurestore_StateSchema: GenEnum<Featurestore_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_featurestore, 0, 0);

