// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/vertex_rag_data_service.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { GenericOperationMetadata } from "./operation_pb";
import { file_google_cloud_aiplatform_v1beta1_operation } from "./operation_pb";
import type { ImportRagFilesConfig, RagCorpus, RagCorpusSchema, RagFile, RagFileSchema, UploadRagFileConfig } from "./vertex_rag_data_pb";
import { file_google_cloud_aiplatform_v1beta1_vertex_rag_data } from "./vertex_rag_data_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/vertex_rag_data_service.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service: GenFile = /*@__PURE__*/
  fileDesc("Cj1nb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL3ZlcnRleF9yYWdfZGF0YV9zZXJ2aWNlLnByb3RvEh9nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExIpgBChZDcmVhdGVSYWdDb3JwdXNSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjCiFsb2NhdGlvbnMuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SQwoKcmFnX2NvcnB1cxgCIAEoCzIqLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuUmFnQ29ycHVzQgPgQQIiUAoTR2V0UmFnQ29ycHVzUmVxdWVzdBI5CgRuYW1lGAEgASgJQivgQQL6QSUKI2FpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vUmFnQ29ycHVzIoMBChVMaXN0UmFnQ29ycG9yYVJlcXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhIWCglwYWdlX3NpemUYAiABKAVCA+BBARIXCgpwYWdlX3Rva2VuGAMgASgJQgPgQQEicgoWTGlzdFJhZ0NvcnBvcmFSZXNwb25zZRI/CgtyYWdfY29ycG9yYRgBIAMoCzIqLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuUmFnQ29ycHVzEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJnChZEZWxldGVSYWdDb3JwdXNSZXF1ZXN0EjkKBG5hbWUYASABKAlCK+BBAvpBJQojYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9SYWdDb3JwdXMSEgoFZm9yY2UYAiABKAhCA+BBASLvAQoUVXBsb2FkUmFnRmlsZVJlcXVlc3QSOwoGcGFyZW50GAEgASgJQivgQQL6QSUKI2FpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vUmFnQ29ycHVzEj8KCHJhZ19maWxlGAIgASgLMiguZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5SYWdGaWxlQgPgQQISWQoWdXBsb2FkX3JhZ19maWxlX2NvbmZpZxgFIAEoCzI0Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuVXBsb2FkUmFnRmlsZUNvbmZpZ0ID4EECIoQBChVVcGxvYWRSYWdGaWxlUmVzcG9uc2USPAoIcmFnX2ZpbGUYASABKAsyKC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlJhZ0ZpbGVIABIjCgVlcnJvchgEIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzSABCCAoGcmVzdWx0IrEBChVJbXBvcnRSYWdGaWxlc1JlcXVlc3QSOwoGcGFyZW50GAEgASgJQivgQQL6QSUKI2FpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vUmFnQ29ycHVzElsKF2ltcG9ydF9yYWdfZmlsZXNfY29uZmlnGAIgASgLMjUuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5JbXBvcnRSYWdGaWxlc0NvbmZpZ0ID4EECIuMBChZJbXBvcnRSYWdGaWxlc1Jlc3BvbnNlEiMKGXBhcnRpYWxfZmFpbHVyZXNfZ2NzX3BhdGgYBCABKAlIABIpCh9wYXJ0aWFsX2ZhaWx1cmVzX2JpZ3F1ZXJ5X3RhYmxlGAUgASgJSAASIAoYaW1wb3J0ZWRfcmFnX2ZpbGVzX2NvdW50GAEgASgDEh4KFmZhaWxlZF9yYWdfZmlsZXNfY291bnQYAiABKAMSHwoXc2tpcHBlZF9yYWdfZmlsZXNfY291bnQYAyABKANCFgoUcGFydGlhbF9mYWlsdXJlX3NpbmsiTAoRR2V0UmFnRmlsZVJlcXVlc3QSNwoEbmFtZRgBIAEoCUIp4EEC+kEjCiFhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL1JhZ0ZpbGUigwEKE0xpc3RSYWdGaWxlc1JlcXVlc3QSOwoGcGFyZW50GAEgASgJQivgQQL6QSUKI2FpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vUmFnQ29ycHVzEhYKCXBhZ2Vfc2l6ZRgCIAEoBUID4EEBEhcKCnBhZ2VfdG9rZW4YAyABKAlCA+BBASJsChRMaXN0UmFnRmlsZXNSZXNwb25zZRI7CglyYWdfZmlsZXMYASADKAsyKC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlJhZ0ZpbGUSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIk8KFERlbGV0ZVJhZ0ZpbGVSZXF1ZXN0EjcKBG5hbWUYASABKAlCKeBBAvpBIwohYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9SYWdGaWxlIncKIENyZWF0ZVJhZ0NvcnB1c09wZXJhdGlvbk1ldGFkYXRhElMKEGdlbmVyaWNfbWV0YWRhdGEYASABKAsyOS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkdlbmVyaWNPcGVyYXRpb25NZXRhZGF0YSJdChZVcGRhdGVSYWdDb3JwdXNSZXF1ZXN0EkMKCnJhZ19jb3JwdXMYASABKAsyKi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlJhZ0NvcnB1c0ID4EECIncKIFVwZGF0ZVJhZ0NvcnB1c09wZXJhdGlvbk1ldGFkYXRhElMKEGdlbmVyaWNfbWV0YWRhdGEYASABKAsyOS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkdlbmVyaWNPcGVyYXRpb25NZXRhZGF0YSKHAgofSW1wb3J0UmFnRmlsZXNPcGVyYXRpb25NZXRhZGF0YRJTChBnZW5lcmljX21ldGFkYXRhGAEgASgLMjkuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5HZW5lcmljT3BlcmF0aW9uTWV0YWRhdGESFQoNcmFnX2NvcnB1c19pZBgCIAEoAxJbChdpbXBvcnRfcmFnX2ZpbGVzX2NvbmZpZxgDIAEoCzI1Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuSW1wb3J0UmFnRmlsZXNDb25maWdCA+BBAxIbChNwcm9ncmVzc19wZXJjZW50YWdlGAQgASgFMs0SChRWZXJ0ZXhSYWdEYXRhU2VydmljZRL3AQoPQ3JlYXRlUmFnQ29ycHVzEjcuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5DcmVhdGVSYWdDb3JwdXNSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKLAcpBLQoJUmFnQ29ycHVzEiBDcmVhdGVSYWdDb3JwdXNPcGVyYXRpb25NZXRhZGF0YdpBEXBhcmVudCxyYWdfY29ycHVzgtPkkwJBOgpyYWdfY29ycHVzIjMvdjFiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L3JhZ0NvcnBvcmES+wEKD1VwZGF0ZVJhZ0NvcnB1cxI3Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuVXBkYXRlUmFnQ29ycHVzUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24ijwHKQS0KCVJhZ0NvcnB1cxIgVXBkYXRlUmFnQ29ycHVzT3BlcmF0aW9uTWV0YWRhdGHaQQpyYWdfY29ycHVzgtPkkwJMOgpyYWdfY29ycHVzMj4vdjFiZXRhMS97cmFnX2NvcnB1cy5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovcmFnQ29ycG9yYS8qfRK0AQoMR2V0UmFnQ29ycHVzEjQuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5HZXRSYWdDb3JwdXNSZXF1ZXN0GiouZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5SYWdDb3JwdXMiQtpBBG5hbWWC0+STAjUSMy92MWJldGExL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovcmFnQ29ycG9yYS8qfRLHAQoOTGlzdFJhZ0NvcnBvcmESNi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkxpc3RSYWdDb3Jwb3JhUmVxdWVzdBo3Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTGlzdFJhZ0NvcnBvcmFSZXNwb25zZSJE2kEGcGFyZW50gtPkkwI1EjMvdjFiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L3JhZ0NvcnBvcmES4AEKD0RlbGV0ZVJhZ0NvcnB1cxI3Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuRGVsZXRlUmFnQ29ycHVzUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24idcpBMAoVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EhdEZWxldGVPcGVyYXRpb25NZXRhZGF0YdpBBG5hbWWC0+STAjUqMy92MWJldGExL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovcmFnQ29ycG9yYS8qfRL5AQoNVXBsb2FkUmFnRmlsZRI1Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuVXBsb2FkUmFnRmlsZVJlcXVlc3QaNi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlVwbG9hZFJhZ0ZpbGVSZXNwb25zZSJ52kEmcGFyZW50LHJhZ19maWxlLHVwbG9hZF9yYWdfZmlsZV9jb25maWeC0+STAko6ASoiRS92MWJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9yYWdDb3Jwb3JhLyp9L3JhZ0ZpbGVzOnVwbG9hZBKXAgoOSW1wb3J0UmFnRmlsZXMSNi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkltcG9ydFJhZ0ZpbGVzUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24irQHKQTkKFkltcG9ydFJhZ0ZpbGVzUmVzcG9uc2USH0ltcG9ydFJhZ0ZpbGVzT3BlcmF0aW9uTWV0YWRhdGHaQR5wYXJlbnQsaW1wb3J0X3JhZ19maWxlc19jb25maWeC0+STAko6ASoiRS92MWJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9yYWdDb3Jwb3JhLyp9L3JhZ0ZpbGVzOmltcG9ydBK5AQoKR2V0UmFnRmlsZRIyLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuR2V0UmFnRmlsZVJlcXVlc3QaKC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlJhZ0ZpbGUiTdpBBG5hbWWC0+STAkASPi92MWJldGExL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovcmFnQ29ycG9yYS8qL3JhZ0ZpbGVzLyp9EswBCgxMaXN0UmFnRmlsZXMSNC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkxpc3RSYWdGaWxlc1JlcXVlc3QaNS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLkxpc3RSYWdGaWxlc1Jlc3BvbnNlIk/aQQZwYXJlbnSC0+STAkASPi92MWJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9yYWdDb3Jwb3JhLyp9L3JhZ0ZpbGVzEugBCg1EZWxldGVSYWdGaWxlEjUuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5EZWxldGVSYWdGaWxlUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24igAHKQTAKFWdvb2dsZS5wcm90b2J1Zi5FbXB0eRIXRGVsZXRlT3BlcmF0aW9uTWV0YWRhdGHaQQRuYW1lgtPkkwJAKj4vdjFiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3JhZ0NvcnBvcmEvKi9yYWdGaWxlcy8qfRpNykEZYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1C8AEKI2NvbS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExQhlWZXJ0ZXhSYWdEYXRhU2VydmljZVByb3RvUAFaQ2Nsb3VkLmdvb2dsZS5jb20vZ28vYWlwbGF0Zm9ybS9hcGl2MWJldGExL2FpcGxhdGZvcm1wYjthaXBsYXRmb3JtcGKqAh9Hb29nbGUuQ2xvdWQuQUlQbGF0Zm9ybS5WMUJldGExygIfR29vZ2xlXENsb3VkXEFJUGxhdGZvcm1cVjFiZXRhMeoCIkdvb2dsZTo6Q2xvdWQ6OkFJUGxhdGZvcm06OlYxYmV0YTFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1beta1_operation, file_google_cloud_aiplatform_v1beta1_vertex_rag_data, file_google_longrunning_operations, file_google_protobuf_empty, file_google_rpc_status]);

/**
 * Request message for
 * [VertexRagDataService.CreateRagCorpus][google.cloud.aiplatform.v1beta1.VertexRagDataService.CreateRagCorpus].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateRagCorpusRequest
 */
export type CreateRagCorpusRequest = Message<"google.cloud.aiplatform.v1beta1.CreateRagCorpusRequest"> & {
  /**
   * Required. The resource name of the Location to create the RagCorpus in.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The RagCorpus to create.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.RagCorpus rag_corpus = 2;
   */
  ragCorpus?: RagCorpus;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateRagCorpusRequest.
 * Use `create(CreateRagCorpusRequestSchema)` to create a new message.
 */
export const CreateRagCorpusRequestSchema: GenMessage<CreateRagCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 0);

/**
 * Request message for
 * [VertexRagDataService.GetRagCorpus][google.cloud.aiplatform.v1beta1.VertexRagDataService.GetRagCorpus]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetRagCorpusRequest
 */
export type GetRagCorpusRequest = Message<"google.cloud.aiplatform.v1beta1.GetRagCorpusRequest"> & {
  /**
   * Required. The name of the RagCorpus resource.
   * Format:
   * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetRagCorpusRequest.
 * Use `create(GetRagCorpusRequestSchema)` to create a new message.
 */
export const GetRagCorpusRequestSchema: GenMessage<GetRagCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 1);

/**
 * Request message for
 * [VertexRagDataService.ListRagCorpora][google.cloud.aiplatform.v1beta1.VertexRagDataService.ListRagCorpora].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListRagCorporaRequest
 */
export type ListRagCorporaRequest = Message<"google.cloud.aiplatform.v1beta1.ListRagCorporaRequest"> & {
  /**
   * Required. The resource name of the Location from which to list the
   * RagCorpora. Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The standard list page size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The standard list page token.
   * Typically obtained via
   * [ListRagCorporaResponse.next_page_token][google.cloud.aiplatform.v1beta1.ListRagCorporaResponse.next_page_token]
   * of the previous
   * [VertexRagDataService.ListRagCorpora][google.cloud.aiplatform.v1beta1.VertexRagDataService.ListRagCorpora]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListRagCorporaRequest.
 * Use `create(ListRagCorporaRequestSchema)` to create a new message.
 */
export const ListRagCorporaRequestSchema: GenMessage<ListRagCorporaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 2);

/**
 * Response message for
 * [VertexRagDataService.ListRagCorpora][google.cloud.aiplatform.v1beta1.VertexRagDataService.ListRagCorpora].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListRagCorporaResponse
 */
export type ListRagCorporaResponse = Message<"google.cloud.aiplatform.v1beta1.ListRagCorporaResponse"> & {
  /**
   * List of RagCorpora in the requested page.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.RagCorpus rag_corpora = 1;
   */
  ragCorpora: RagCorpus[];

  /**
   * A token to retrieve the next page of results.
   * Pass to
   * [ListRagCorporaRequest.page_token][google.cloud.aiplatform.v1beta1.ListRagCorporaRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListRagCorporaResponse.
 * Use `create(ListRagCorporaResponseSchema)` to create a new message.
 */
export const ListRagCorporaResponseSchema: GenMessage<ListRagCorporaResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 3);

/**
 * Request message for
 * [VertexRagDataService.DeleteRagCorpus][google.cloud.aiplatform.v1beta1.VertexRagDataService.DeleteRagCorpus].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteRagCorpusRequest
 */
export type DeleteRagCorpusRequest = Message<"google.cloud.aiplatform.v1beta1.DeleteRagCorpusRequest"> & {
  /**
   * Required. The name of the RagCorpus resource to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. If set to true, any RagFiles in this RagCorpus will also be
   * deleted. Otherwise, the request will only work if the RagCorpus has no
   * RagFiles.
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteRagCorpusRequest.
 * Use `create(DeleteRagCorpusRequestSchema)` to create a new message.
 */
export const DeleteRagCorpusRequestSchema: GenMessage<DeleteRagCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 4);

/**
 * Request message for
 * [VertexRagDataService.UploadRagFile][google.cloud.aiplatform.v1beta1.VertexRagDataService.UploadRagFile].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UploadRagFileRequest
 */
export type UploadRagFileRequest = Message<"google.cloud.aiplatform.v1beta1.UploadRagFileRequest"> & {
  /**
   * Required. The name of the RagCorpus resource into which to upload the file.
   * Format:
   * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The RagFile to upload.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.RagFile rag_file = 2;
   */
  ragFile?: RagFile;

  /**
   * Required. The config for the RagFiles to be uploaded into the RagCorpus.
   * [VertexRagDataService.UploadRagFile][google.cloud.aiplatform.v1beta1.VertexRagDataService.UploadRagFile].
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.UploadRagFileConfig upload_rag_file_config = 5;
   */
  uploadRagFileConfig?: UploadRagFileConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UploadRagFileRequest.
 * Use `create(UploadRagFileRequestSchema)` to create a new message.
 */
export const UploadRagFileRequestSchema: GenMessage<UploadRagFileRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 5);

/**
 * Response message for
 * [VertexRagDataService.UploadRagFile][google.cloud.aiplatform.v1beta1.VertexRagDataService.UploadRagFile].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UploadRagFileResponse
 */
export type UploadRagFileResponse = Message<"google.cloud.aiplatform.v1beta1.UploadRagFileResponse"> & {
  /**
   * The result of the upload.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.UploadRagFileResponse.result
   */
  result: {
    /**
     * The RagFile that had been uploaded into the RagCorpus.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.RagFile rag_file = 1;
     */
    value: RagFile;
    case: "ragFile";
  } | {
    /**
     * The error that occurred while processing the RagFile.
     *
     * @generated from field: google.rpc.Status error = 4;
     */
    value: Status;
    case: "error";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UploadRagFileResponse.
 * Use `create(UploadRagFileResponseSchema)` to create a new message.
 */
export const UploadRagFileResponseSchema: GenMessage<UploadRagFileResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 6);

/**
 * Request message for
 * [VertexRagDataService.ImportRagFiles][google.cloud.aiplatform.v1beta1.VertexRagDataService.ImportRagFiles].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ImportRagFilesRequest
 */
export type ImportRagFilesRequest = Message<"google.cloud.aiplatform.v1beta1.ImportRagFilesRequest"> & {
  /**
   * Required. The name of the RagCorpus resource into which to import files.
   * Format:
   * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The config for the RagFiles to be synced and imported into the
   * RagCorpus.
   * [VertexRagDataService.ImportRagFiles][google.cloud.aiplatform.v1beta1.VertexRagDataService.ImportRagFiles].
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ImportRagFilesConfig import_rag_files_config = 2;
   */
  importRagFilesConfig?: ImportRagFilesConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ImportRagFilesRequest.
 * Use `create(ImportRagFilesRequestSchema)` to create a new message.
 */
export const ImportRagFilesRequestSchema: GenMessage<ImportRagFilesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 7);

/**
 * Response message for
 * [VertexRagDataService.ImportRagFiles][google.cloud.aiplatform.v1beta1.VertexRagDataService.ImportRagFiles].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ImportRagFilesResponse
 */
export type ImportRagFilesResponse = Message<"google.cloud.aiplatform.v1beta1.ImportRagFilesResponse"> & {
  /**
   * The location into which the partial failures were written.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.ImportRagFilesResponse.partial_failure_sink
   */
  partialFailureSink: {
    /**
     * The Google Cloud Storage path into which the partial failures were
     * written.
     *
     * @generated from field: string partial_failures_gcs_path = 4;
     */
    value: string;
    case: "partialFailuresGcsPath";
  } | {
    /**
     * The BigQuery table into which the partial failures were written.
     *
     * @generated from field: string partial_failures_bigquery_table = 5;
     */
    value: string;
    case: "partialFailuresBigqueryTable";
  } | { case: undefined; value?: undefined };

  /**
   * The number of RagFiles that had been imported into the RagCorpus.
   *
   * @generated from field: int64 imported_rag_files_count = 1;
   */
  importedRagFilesCount: bigint;

  /**
   * The number of RagFiles that had failed while importing into the RagCorpus.
   *
   * @generated from field: int64 failed_rag_files_count = 2;
   */
  failedRagFilesCount: bigint;

  /**
   * The number of RagFiles that was skipped while importing into the RagCorpus.
   *
   * @generated from field: int64 skipped_rag_files_count = 3;
   */
  skippedRagFilesCount: bigint;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ImportRagFilesResponse.
 * Use `create(ImportRagFilesResponseSchema)` to create a new message.
 */
export const ImportRagFilesResponseSchema: GenMessage<ImportRagFilesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 8);

/**
 * Request message for
 * [VertexRagDataService.GetRagFile][google.cloud.aiplatform.v1beta1.VertexRagDataService.GetRagFile]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetRagFileRequest
 */
export type GetRagFileRequest = Message<"google.cloud.aiplatform.v1beta1.GetRagFileRequest"> & {
  /**
   * Required. The name of the RagFile resource.
   * Format:
   * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}/ragFiles/{rag_file}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetRagFileRequest.
 * Use `create(GetRagFileRequestSchema)` to create a new message.
 */
export const GetRagFileRequestSchema: GenMessage<GetRagFileRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 9);

/**
 * Request message for
 * [VertexRagDataService.ListRagFiles][google.cloud.aiplatform.v1beta1.VertexRagDataService.ListRagFiles].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListRagFilesRequest
 */
export type ListRagFilesRequest = Message<"google.cloud.aiplatform.v1beta1.ListRagFilesRequest"> & {
  /**
   * Required. The resource name of the RagCorpus from which to list the
   * RagFiles. Format:
   * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The standard list page size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The standard list page token.
   * Typically obtained via
   * [ListRagFilesResponse.next_page_token][google.cloud.aiplatform.v1beta1.ListRagFilesResponse.next_page_token]
   * of the previous
   * [VertexRagDataService.ListRagFiles][google.cloud.aiplatform.v1beta1.VertexRagDataService.ListRagFiles]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListRagFilesRequest.
 * Use `create(ListRagFilesRequestSchema)` to create a new message.
 */
export const ListRagFilesRequestSchema: GenMessage<ListRagFilesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 10);

/**
 * Response message for
 * [VertexRagDataService.ListRagFiles][google.cloud.aiplatform.v1beta1.VertexRagDataService.ListRagFiles].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListRagFilesResponse
 */
export type ListRagFilesResponse = Message<"google.cloud.aiplatform.v1beta1.ListRagFilesResponse"> & {
  /**
   * List of RagFiles in the requested page.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.RagFile rag_files = 1;
   */
  ragFiles: RagFile[];

  /**
   * A token to retrieve the next page of results.
   * Pass to
   * [ListRagFilesRequest.page_token][google.cloud.aiplatform.v1beta1.ListRagFilesRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListRagFilesResponse.
 * Use `create(ListRagFilesResponseSchema)` to create a new message.
 */
export const ListRagFilesResponseSchema: GenMessage<ListRagFilesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 11);

/**
 * Request message for
 * [VertexRagDataService.DeleteRagFile][google.cloud.aiplatform.v1beta1.VertexRagDataService.DeleteRagFile].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteRagFileRequest
 */
export type DeleteRagFileRequest = Message<"google.cloud.aiplatform.v1beta1.DeleteRagFileRequest"> & {
  /**
   * Required. The name of the RagFile resource to be deleted.
   * Format:
   * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}/ragFiles/{rag_file}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteRagFileRequest.
 * Use `create(DeleteRagFileRequestSchema)` to create a new message.
 */
export const DeleteRagFileRequestSchema: GenMessage<DeleteRagFileRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 12);

/**
 * Runtime operation information for
 * [VertexRagDataService.CreateRagCorpus][google.cloud.aiplatform.v1beta1.VertexRagDataService.CreateRagCorpus].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CreateRagCorpusOperationMetadata
 */
export type CreateRagCorpusOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.CreateRagCorpusOperationMetadata"> & {
  /**
   * The operation generic information.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CreateRagCorpusOperationMetadata.
 * Use `create(CreateRagCorpusOperationMetadataSchema)` to create a new message.
 */
export const CreateRagCorpusOperationMetadataSchema: GenMessage<CreateRagCorpusOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 13);

/**
 * Request message for
 * [VertexRagDataService.UpdateRagCorpus][google.cloud.aiplatform.v1beta1.VertexRagDataService.UpdateRagCorpus].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateRagCorpusRequest
 */
export type UpdateRagCorpusRequest = Message<"google.cloud.aiplatform.v1beta1.UpdateRagCorpusRequest"> & {
  /**
   * Required. The RagCorpus which replaces the resource on the server.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.RagCorpus rag_corpus = 1;
   */
  ragCorpus?: RagCorpus;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateRagCorpusRequest.
 * Use `create(UpdateRagCorpusRequestSchema)` to create a new message.
 */
export const UpdateRagCorpusRequestSchema: GenMessage<UpdateRagCorpusRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 14);

/**
 * Runtime operation information for
 * [VertexRagDataService.UpdateRagCorpus][google.cloud.aiplatform.v1beta1.VertexRagDataService.UpdateRagCorpus].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateRagCorpusOperationMetadata
 */
export type UpdateRagCorpusOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.UpdateRagCorpusOperationMetadata"> & {
  /**
   * The operation generic information.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateRagCorpusOperationMetadata.
 * Use `create(UpdateRagCorpusOperationMetadataSchema)` to create a new message.
 */
export const UpdateRagCorpusOperationMetadataSchema: GenMessage<UpdateRagCorpusOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 15);

/**
 * Runtime operation information for
 * [VertexRagDataService.ImportRagFiles][google.cloud.aiplatform.v1beta1.VertexRagDataService.ImportRagFiles].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ImportRagFilesOperationMetadata
 */
export type ImportRagFilesOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.ImportRagFilesOperationMetadata"> & {
  /**
   * The operation generic information.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;

  /**
   * The resource ID of RagCorpus that this operation is executed on.
   *
   * @generated from field: int64 rag_corpus_id = 2;
   */
  ragCorpusId: bigint;

  /**
   * Output only. The config that was passed in the ImportRagFilesRequest.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ImportRagFilesConfig import_rag_files_config = 3;
   */
  importRagFilesConfig?: ImportRagFilesConfig;

  /**
   * The progress percentage of the operation. Value is in the range [0, 100].
   * This percentage is calculated as follows:
   *    progress_percentage = 100 * (successes + failures + skips) / total
   *
   * @generated from field: int32 progress_percentage = 4;
   */
  progressPercentage: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ImportRagFilesOperationMetadata.
 * Use `create(ImportRagFilesOperationMetadataSchema)` to create a new message.
 */
export const ImportRagFilesOperationMetadataSchema: GenMessage<ImportRagFilesOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 16);

/**
 * A service for managing user data for RAG.
 *
 * @generated from service google.cloud.aiplatform.v1beta1.VertexRagDataService
 */
export const VertexRagDataService: GenService<{
  /**
   * Creates a RagCorpus.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagDataService.CreateRagCorpus
   */
  createRagCorpus: {
    methodKind: "unary";
    input: typeof CreateRagCorpusRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a RagCorpus.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagDataService.UpdateRagCorpus
   */
  updateRagCorpus: {
    methodKind: "unary";
    input: typeof UpdateRagCorpusRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a RagCorpus.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagDataService.GetRagCorpus
   */
  getRagCorpus: {
    methodKind: "unary";
    input: typeof GetRagCorpusRequestSchema;
    output: typeof RagCorpusSchema;
  },
  /**
   * Lists RagCorpora in a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagDataService.ListRagCorpora
   */
  listRagCorpora: {
    methodKind: "unary";
    input: typeof ListRagCorporaRequestSchema;
    output: typeof ListRagCorporaResponseSchema;
  },
  /**
   * Deletes a RagCorpus.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagDataService.DeleteRagCorpus
   */
  deleteRagCorpus: {
    methodKind: "unary";
    input: typeof DeleteRagCorpusRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Upload a file into a RagCorpus.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagDataService.UploadRagFile
   */
  uploadRagFile: {
    methodKind: "unary";
    input: typeof UploadRagFileRequestSchema;
    output: typeof UploadRagFileResponseSchema;
  },
  /**
   * Import files from Google Cloud Storage or Google Drive into a RagCorpus.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagDataService.ImportRagFiles
   */
  importRagFiles: {
    methodKind: "unary";
    input: typeof ImportRagFilesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a RagFile.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagDataService.GetRagFile
   */
  getRagFile: {
    methodKind: "unary";
    input: typeof GetRagFileRequestSchema;
    output: typeof RagFileSchema;
  },
  /**
   * Lists RagFiles in a RagCorpus.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagDataService.ListRagFiles
   */
  listRagFiles: {
    methodKind: "unary";
    input: typeof ListRagFilesRequestSchema;
    output: typeof ListRagFilesResponseSchema;
  },
  /**
   * Deletes a RagFile.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagDataService.DeleteRagFile
   */
  deleteRagFile: {
    methodKind: "unary";
    input: typeof DeleteRagFileRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_data_service, 0);

