// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/schema/trainingjob/definition/automl_tables.proto (package google.cloud.aiplatform.v1beta1.schema.trainingjob.definition, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { ExportEvaluatedDataItemsConfig } from "./export_evaluated_data_items_config_pb";
import { file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_export_evaluated_data_items_config } from "./export_evaluated_data_items_config_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/schema/trainingjob/definition/automl_tables.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables: GenFile = /*@__PURE__*/
  fileDesc("ClFnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL3NjaGVtYS90cmFpbmluZ2pvYi9kZWZpbml0aW9uL2F1dG9tbF90YWJsZXMucHJvdG8SPWdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuc2NoZW1hLnRyYWluaW5nam9iLmRlZmluaXRpb24i2AEKDEF1dG9NbFRhYmxlcxJhCgZpbnB1dHMYASABKAsyUS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLnNjaGVtYS50cmFpbmluZ2pvYi5kZWZpbml0aW9uLkF1dG9NbFRhYmxlc0lucHV0cxJlCghtZXRhZGF0YRgCIAEoCzJTLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuc2NoZW1hLnRyYWluaW5nam9iLmRlZmluaXRpb24uQXV0b01sVGFibGVzTWV0YWRhdGEiqBIKEkF1dG9NbFRhYmxlc0lucHV0cxItCiNvcHRpbWl6YXRpb25fb2JqZWN0aXZlX3JlY2FsbF92YWx1ZRgFIAEoAkgAEjAKJm9wdGltaXphdGlvbl9vYmplY3RpdmVfcHJlY2lzaW9uX3ZhbHVlGAYgASgCSAASFwoPcHJlZGljdGlvbl90eXBlGAEgASgJEhUKDXRhcmdldF9jb2x1bW4YAiABKAkSeQoPdHJhbnNmb3JtYXRpb25zGAMgAygLMmAuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5zY2hlbWEudHJhaW5pbmdqb2IuZGVmaW5pdGlvbi5BdXRvTWxUYWJsZXNJbnB1dHMuVHJhbnNmb3JtYXRpb24SHgoWb3B0aW1pemF0aW9uX29iamVjdGl2ZRgEIAEoCRIlCh10cmFpbl9idWRnZXRfbWlsbGlfbm9kZV9ob3VycxgHIAEoAxIeChZkaXNhYmxlX2Vhcmx5X3N0b3BwaW5nGAggASgIEhoKEndlaWdodF9jb2x1bW5fbmFtZRgJIAEoCRKJAQoiZXhwb3J0X2V2YWx1YXRlZF9kYXRhX2l0ZW1zX2NvbmZpZxgKIAEoCzJdLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuc2NoZW1hLnRyYWluaW5nam9iLmRlZmluaXRpb24uRXhwb3J0RXZhbHVhdGVkRGF0YUl0ZW1zQ29uZmlnEh4KFmFkZGl0aW9uYWxfZXhwZXJpbWVudHMYCyADKAkaqg0KDlRyYW5zZm9ybWF0aW9uEoMBCgRhdXRvGAEgASgLMnMuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5zY2hlbWEudHJhaW5pbmdqb2IuZGVmaW5pdGlvbi5BdXRvTWxUYWJsZXNJbnB1dHMuVHJhbnNmb3JtYXRpb24uQXV0b1RyYW5zZm9ybWF0aW9uSAASiQEKB251bWVyaWMYAiABKAsydi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLnNjaGVtYS50cmFpbmluZ2pvYi5kZWZpbml0aW9uLkF1dG9NbFRhYmxlc0lucHV0cy5UcmFuc2Zvcm1hdGlvbi5OdW1lcmljVHJhbnNmb3JtYXRpb25IABKRAQoLY2F0ZWdvcmljYWwYAyABKAsyei5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLnNjaGVtYS50cmFpbmluZ2pvYi5kZWZpbml0aW9uLkF1dG9NbFRhYmxlc0lucHV0cy5UcmFuc2Zvcm1hdGlvbi5DYXRlZ29yaWNhbFRyYW5zZm9ybWF0aW9uSAASjQEKCXRpbWVzdGFtcBgEIAEoCzJ4Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuc2NoZW1hLnRyYWluaW5nam9iLmRlZmluaXRpb24uQXV0b01sVGFibGVzSW5wdXRzLlRyYW5zZm9ybWF0aW9uLlRpbWVzdGFtcFRyYW5zZm9ybWF0aW9uSAASgwEKBHRleHQYBSABKAsycy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLnNjaGVtYS50cmFpbmluZ2pvYi5kZWZpbml0aW9uLkF1dG9NbFRhYmxlc0lucHV0cy5UcmFuc2Zvcm1hdGlvbi5UZXh0VHJhbnNmb3JtYXRpb25IABKXAQoQcmVwZWF0ZWRfbnVtZXJpYxgGIAEoCzJ7Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuc2NoZW1hLnRyYWluaW5nam9iLmRlZmluaXRpb24uQXV0b01sVGFibGVzSW5wdXRzLlRyYW5zZm9ybWF0aW9uLk51bWVyaWNBcnJheVRyYW5zZm9ybWF0aW9uSAASnwEKFHJlcGVhdGVkX2NhdGVnb3JpY2FsGAcgASgLMn8uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5zY2hlbWEudHJhaW5pbmdqb2IuZGVmaW5pdGlvbi5BdXRvTWxUYWJsZXNJbnB1dHMuVHJhbnNmb3JtYXRpb24uQ2F0ZWdvcmljYWxBcnJheVRyYW5zZm9ybWF0aW9uSAASkQEKDXJlcGVhdGVkX3RleHQYCCABKAsyeC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLnNjaGVtYS50cmFpbmluZ2pvYi5kZWZpbml0aW9uLkF1dG9NbFRhYmxlc0lucHV0cy5UcmFuc2Zvcm1hdGlvbi5UZXh0QXJyYXlUcmFuc2Zvcm1hdGlvbkgAGikKEkF1dG9UcmFuc2Zvcm1hdGlvbhITCgtjb2x1bW5fbmFtZRgBIAEoCRpMChVOdW1lcmljVHJhbnNmb3JtYXRpb24SEwoLY29sdW1uX25hbWUYASABKAkSHgoWaW52YWxpZF92YWx1ZXNfYWxsb3dlZBgCIAEoCBowChlDYXRlZ29yaWNhbFRyYW5zZm9ybWF0aW9uEhMKC2NvbHVtbl9uYW1lGAEgASgJGmMKF1RpbWVzdGFtcFRyYW5zZm9ybWF0aW9uEhMKC2NvbHVtbl9uYW1lGAEgASgJEhMKC3RpbWVfZm9ybWF0GAIgASgJEh4KFmludmFsaWRfdmFsdWVzX2FsbG93ZWQYAyABKAgaKQoSVGV4dFRyYW5zZm9ybWF0aW9uEhMKC2NvbHVtbl9uYW1lGAEgASgJGlEKGk51bWVyaWNBcnJheVRyYW5zZm9ybWF0aW9uEhMKC2NvbHVtbl9uYW1lGAEgASgJEh4KFmludmFsaWRfdmFsdWVzX2FsbG93ZWQYAiABKAgaNQoeQ2F0ZWdvcmljYWxBcnJheVRyYW5zZm9ybWF0aW9uEhMKC2NvbHVtbl9uYW1lGAEgASgJGi4KF1RleHRBcnJheVRyYW5zZm9ybWF0aW9uEhMKC2NvbHVtbl9uYW1lGAEgASgJQhcKFXRyYW5zZm9ybWF0aW9uX2RldGFpbEIqCihhZGRpdGlvbmFsX29wdGltaXphdGlvbl9vYmplY3RpdmVfY29uZmlnIjsKFEF1dG9NbFRhYmxlc01ldGFkYXRhEiMKG3RyYWluX2Nvc3RfbWlsbGlfbm9kZV9ob3VycxgBIAEoA0KBAwpBY29tLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuc2NoZW1hLnRyYWluaW5nam9iLmRlZmluaXRpb25CEUF1dG9NTFRhYmxlc1Byb3RvUAFaYWNsb3VkLmdvb2dsZS5jb20vZ28vYWlwbGF0Zm9ybS9hcGl2MWJldGExL3NjaGVtYS90cmFpbmluZ2pvYi9kZWZpbml0aW9uL2RlZmluaXRpb25wYjtkZWZpbml0aW9ucGKqAj1Hb29nbGUuQ2xvdWQuQUlQbGF0Zm9ybS5WMUJldGExLlNjaGVtYS5UcmFpbmluZ0pvYi5EZWZpbml0aW9uygI9R29vZ2xlXENsb3VkXEFJUGxhdGZvcm1cVjFiZXRhMVxTY2hlbWFcVHJhaW5pbmdKb2JcRGVmaW5pdGlvbuoCQ0dvb2dsZTo6Q2xvdWQ6OkFJUGxhdGZvcm06OlYxYmV0YTE6OlNjaGVtYTo6VHJhaW5pbmdKb2I6OkRlZmluaXRpb25iBnByb3RvMw", [file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_export_evaluated_data_items_config]);

/**
 * A TrainingJob that trains and uploads an AutoML Tables Model.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTables
 */
export type AutoMlTables = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTables"> & {
  /**
   * The input parameters of this TrainingJob.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs inputs = 1;
   */
  inputs?: AutoMlTablesInputs;

  /**
   * The metadata information.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesMetadata metadata = 2;
   */
  metadata?: AutoMlTablesMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTables.
 * Use `create(AutoMlTablesSchema)` to create a new message.
 */
export const AutoMlTablesSchema: GenMessage<AutoMlTables> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 0);

/**
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs
 */
export type AutoMlTablesInputs = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs"> & {
  /**
   * Additional optimization objective configuration. Required for
   * `maximize-precision-at-recall` and `maximize-recall-at-precision`,
   * otherwise unused.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.additional_optimization_objective_config
   */
  additionalOptimizationObjectiveConfig: {
    /**
     * Required when optimization_objective is "maximize-precision-at-recall".
     * Must be between 0 and 1, inclusive.
     *
     * @generated from field: float optimization_objective_recall_value = 5;
     */
    value: number;
    case: "optimizationObjectiveRecallValue";
  } | {
    /**
     * Required when optimization_objective is "maximize-recall-at-precision".
     * Must be between 0 and 1, inclusive.
     *
     * @generated from field: float optimization_objective_precision_value = 6;
     */
    value: number;
    case: "optimizationObjectivePrecisionValue";
  } | { case: undefined; value?: undefined };

  /**
   * The type of prediction the Model is to produce.
   *   "classification" - Predict one out of multiple target values is
   *                      picked for each row.
   *   "regression" - Predict a value based on its relation to other values.
   *                  This type is available only to columns that contain
   *                  semantically numeric values, i.e. integers or floating
   *                  point number, even if stored as e.g. strings.
   *
   * @generated from field: string prediction_type = 1;
   */
  predictionType: string;

  /**
   * The column name of the target column that the model is to predict.
   *
   * @generated from field: string target_column = 2;
   */
  targetColumn: string;

  /**
   * Each transformation will apply transform function to given input column.
   * And the result will be used for training.
   * When creating transformation for BigQuery Struct column, the column should
   * be flattened using "." as the delimiter.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation transformations = 3;
   */
  transformations: AutoMlTablesInputs_Transformation[];

  /**
   * Objective function the model is optimizing towards. The training process
   * creates a model that maximizes/minimizes the value of the objective
   * function over the validation set.
   *
   * The supported optimization objectives depend on the prediction type.
   * If the field is not set, a default objective function is used.
   *
   * classification (binary):
   *   "maximize-au-roc" (default) - Maximize the area under the receiver
   *                                 operating characteristic (ROC) curve.
   *   "minimize-log-loss" - Minimize log loss.
   *   "maximize-au-prc" - Maximize the area under the precision-recall curve.
   *   "maximize-precision-at-recall" - Maximize precision for a specified
   *                                   recall value.
   *   "maximize-recall-at-precision" - Maximize recall for a specified
   *                                    precision value.
   *
   * classification (multi-class):
   *   "minimize-log-loss" (default) - Minimize log loss.
   *
   * regression:
   *   "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE).
   *   "minimize-mae" - Minimize mean-absolute error (MAE).
   *   "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE).
   *
   * @generated from field: string optimization_objective = 4;
   */
  optimizationObjective: string;

  /**
   * Required. The train budget of creating this model, expressed in milli node
   * hours i.e. 1,000 value in this field means 1 node hour.
   *
   * The training cost of the model will not exceed this budget. The final cost
   * will be attempted to be close to the budget, though may end up being (even)
   * noticeably smaller - at the backend's discretion. This especially may
   * happen when further model training ceases to provide any improvements.
   *
   * If the budget is set to a value known to be insufficient to train a
   * model for the given dataset, the training won't be attempted and
   * will error.
   *
   * The train budget must be between 1,000 and 72,000 milli node hours,
   * inclusive.
   *
   * @generated from field: int64 train_budget_milli_node_hours = 7;
   */
  trainBudgetMilliNodeHours: bigint;

  /**
   * Use the entire training budget. This disables the early stopping feature.
   * By default, the early stopping feature is enabled, which means that AutoML
   * Tables might stop training before the entire training budget has been used.
   *
   * @generated from field: bool disable_early_stopping = 8;
   */
  disableEarlyStopping: boolean;

  /**
   * Column name that should be used as the weight column.
   * Higher values in this column give more importance to the row
   * during model training. The column must have numeric values between 0 and
   * 10000 inclusively; 0 means the row is ignored for training. If weight
   * column field is not set, then all rows are assumed to have equal weight
   * of 1.
   *
   * @generated from field: string weight_column_name = 9;
   */
  weightColumnName: string;

  /**
   * Configuration for exporting test set predictions to a BigQuery table. If
   * this configuration is absent, then the export is not performed.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.ExportEvaluatedDataItemsConfig export_evaluated_data_items_config = 10;
   */
  exportEvaluatedDataItemsConfig?: ExportEvaluatedDataItemsConfig;

  /**
   * Additional experiment flags for the Tables training pipeline.
   *
   * @generated from field: repeated string additional_experiments = 11;
   */
  additionalExperiments: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.
 * Use `create(AutoMlTablesInputsSchema)` to create a new message.
 */
export const AutoMlTablesInputsSchema: GenMessage<AutoMlTablesInputs> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 1);

/**
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation
 */
export type AutoMlTablesInputs_Transformation = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation"> & {
  /**
   * The transformation that the training pipeline will apply to the input
   * columns.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.transformation_detail
   */
  transformationDetail: {
    /**
     * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.AutoTransformation auto = 1;
     */
    value: AutoMlTablesInputs_Transformation_AutoTransformation;
    case: "auto";
  } | {
    /**
     * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.NumericTransformation numeric = 2;
     */
    value: AutoMlTablesInputs_Transformation_NumericTransformation;
    case: "numeric";
  } | {
    /**
     * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.CategoricalTransformation categorical = 3;
     */
    value: AutoMlTablesInputs_Transformation_CategoricalTransformation;
    case: "categorical";
  } | {
    /**
     * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TimestampTransformation timestamp = 4;
     */
    value: AutoMlTablesInputs_Transformation_TimestampTransformation;
    case: "timestamp";
  } | {
    /**
     * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TextTransformation text = 5;
     */
    value: AutoMlTablesInputs_Transformation_TextTransformation;
    case: "text";
  } | {
    /**
     * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.NumericArrayTransformation repeated_numeric = 6;
     */
    value: AutoMlTablesInputs_Transformation_NumericArrayTransformation;
    case: "repeatedNumeric";
  } | {
    /**
     * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.CategoricalArrayTransformation repeated_categorical = 7;
     */
    value: AutoMlTablesInputs_Transformation_CategoricalArrayTransformation;
    case: "repeatedCategorical";
  } | {
    /**
     * @generated from field: google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TextArrayTransformation repeated_text = 8;
     */
    value: AutoMlTablesInputs_Transformation_TextArrayTransformation;
    case: "repeatedText";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.
 * Use `create(AutoMlTablesInputs_TransformationSchema)` to create a new message.
 */
export const AutoMlTablesInputs_TransformationSchema: GenMessage<AutoMlTablesInputs_Transformation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 1, 0);

/**
 * Training pipeline will infer the proper transformation based on the
 * statistic of dataset.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.AutoTransformation
 */
export type AutoMlTablesInputs_Transformation_AutoTransformation = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.AutoTransformation"> & {
  /**
   * @generated from field: string column_name = 1;
   */
  columnName: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.AutoTransformation.
 * Use `create(AutoMlTablesInputs_Transformation_AutoTransformationSchema)` to create a new message.
 */
export const AutoMlTablesInputs_Transformation_AutoTransformationSchema: GenMessage<AutoMlTablesInputs_Transformation_AutoTransformation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 1, 0, 0);

/**
 * Training pipeline will perform following transformation functions.
 * *  The value converted to float32.
 * *  The z_score of the value.
 * *  log(value+1) when the value is greater than or equal to 0. Otherwise,
 *    this transformation is not applied and the value is considered a
 *    missing value.
 * *  z_score of log(value+1) when the value is greater than or equal to 0.
 *    Otherwise, this transformation is not applied and the value is
 *    considered a missing value.
 * *  A boolean value that indicates whether the value is valid.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.NumericTransformation
 */
export type AutoMlTablesInputs_Transformation_NumericTransformation = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.NumericTransformation"> & {
  /**
   * @generated from field: string column_name = 1;
   */
  columnName: string;

  /**
   * If invalid values is allowed, the training pipeline will create a
   * boolean feature that indicated whether the value is valid.
   * Otherwise, the training pipeline will discard the input row from
   * trainining data.
   *
   * @generated from field: bool invalid_values_allowed = 2;
   */
  invalidValuesAllowed: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.NumericTransformation.
 * Use `create(AutoMlTablesInputs_Transformation_NumericTransformationSchema)` to create a new message.
 */
export const AutoMlTablesInputs_Transformation_NumericTransformationSchema: GenMessage<AutoMlTablesInputs_Transformation_NumericTransformation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 1, 0, 1);

/**
 * Training pipeline will perform following transformation functions.
 * *  The categorical string as is--no change to case, punctuation,
 * spelling,
 *    tense, and so on.
 * *  Convert the category name to a dictionary lookup index and generate an
 *    embedding for each index.
 * *  Categories that appear less than 5 times in the training dataset are
 *    treated as the "unknown" category. The "unknown" category gets its own
 *    special lookup index and resulting embedding.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.CategoricalTransformation
 */
export type AutoMlTablesInputs_Transformation_CategoricalTransformation = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.CategoricalTransformation"> & {
  /**
   * @generated from field: string column_name = 1;
   */
  columnName: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.CategoricalTransformation.
 * Use `create(AutoMlTablesInputs_Transformation_CategoricalTransformationSchema)` to create a new message.
 */
export const AutoMlTablesInputs_Transformation_CategoricalTransformationSchema: GenMessage<AutoMlTablesInputs_Transformation_CategoricalTransformation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 1, 0, 2);

/**
 * Training pipeline will perform following transformation functions.
 * *  Apply the transformation functions for Numerical columns.
 * *  Determine the year, month, day,and weekday. Treat each value from the
 * *  timestamp as a Categorical column.
 * *  Invalid numerical values (for example, values that fall outside of a
 *    typical timestamp range, or are extreme values) receive no special
 *    treatment and are not removed.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TimestampTransformation
 */
export type AutoMlTablesInputs_Transformation_TimestampTransformation = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TimestampTransformation"> & {
  /**
   * @generated from field: string column_name = 1;
   */
  columnName: string;

  /**
   * The format in which that time field is expressed. The time_format must
   * either be one of:
   * * `unix-seconds`
   * * `unix-milliseconds`
   * * `unix-microseconds`
   * * `unix-nanoseconds`
   * (for respectively number of seconds, milliseconds, microseconds and
   * nanoseconds since start of the Unix epoch);
   * or be written in `strftime` syntax. If time_format is not set, then the
   * default format is RFC 3339 `date-time` format, where
   * `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
   *
   * @generated from field: string time_format = 2;
   */
  timeFormat: string;

  /**
   * If invalid values is allowed, the training pipeline will create a
   * boolean feature that indicated whether the value is valid.
   * Otherwise, the training pipeline will discard the input row from
   * trainining data.
   *
   * @generated from field: bool invalid_values_allowed = 3;
   */
  invalidValuesAllowed: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TimestampTransformation.
 * Use `create(AutoMlTablesInputs_Transformation_TimestampTransformationSchema)` to create a new message.
 */
export const AutoMlTablesInputs_Transformation_TimestampTransformationSchema: GenMessage<AutoMlTablesInputs_Transformation_TimestampTransformation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 1, 0, 3);

/**
 * Training pipeline will perform following transformation functions.
 * *  The text as is--no change to case, punctuation, spelling, tense, and
 * so
 *    on.
 * *  Tokenize text to words. Convert each words to a dictionary lookup
 * index
 *    and generate an embedding for each index. Combine the embedding of all
 *    elements into a single embedding using the mean.
 * *  Tokenization is based on unicode script boundaries.
 * *  Missing values get their own lookup index and resulting embedding.
 * *  Stop-words receive no special treatment and are not removed.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TextTransformation
 */
export type AutoMlTablesInputs_Transformation_TextTransformation = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TextTransformation"> & {
  /**
   * @generated from field: string column_name = 1;
   */
  columnName: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TextTransformation.
 * Use `create(AutoMlTablesInputs_Transformation_TextTransformationSchema)` to create a new message.
 */
export const AutoMlTablesInputs_Transformation_TextTransformationSchema: GenMessage<AutoMlTablesInputs_Transformation_TextTransformation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 1, 0, 4);

/**
 * Treats the column as numerical array and performs following
 * transformation functions.
 * *  All transformations for Numerical types applied to the average of the
 *    all elements.
 * *  The average of empty arrays is treated as zero.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.NumericArrayTransformation
 */
export type AutoMlTablesInputs_Transformation_NumericArrayTransformation = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.NumericArrayTransformation"> & {
  /**
   * @generated from field: string column_name = 1;
   */
  columnName: string;

  /**
   * If invalid values is allowed, the training pipeline will create a
   * boolean feature that indicated whether the value is valid.
   * Otherwise, the training pipeline will discard the input row from
   * trainining data.
   *
   * @generated from field: bool invalid_values_allowed = 2;
   */
  invalidValuesAllowed: boolean;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.NumericArrayTransformation.
 * Use `create(AutoMlTablesInputs_Transformation_NumericArrayTransformationSchema)` to create a new message.
 */
export const AutoMlTablesInputs_Transformation_NumericArrayTransformationSchema: GenMessage<AutoMlTablesInputs_Transformation_NumericArrayTransformation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 1, 0, 5);

/**
 * Treats the column as categorical array and performs following
 * transformation functions.
 * *  For each element in the array, convert the category name to a
 * dictionary
 *    lookup index and generate an embedding for each index.
 *    Combine the embedding of all elements into a single embedding using
 *    the mean.
 * *  Empty arrays treated as an embedding of zeroes.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.CategoricalArrayTransformation
 */
export type AutoMlTablesInputs_Transformation_CategoricalArrayTransformation = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.CategoricalArrayTransformation"> & {
  /**
   * @generated from field: string column_name = 1;
   */
  columnName: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.CategoricalArrayTransformation.
 * Use `create(AutoMlTablesInputs_Transformation_CategoricalArrayTransformationSchema)` to create a new message.
 */
export const AutoMlTablesInputs_Transformation_CategoricalArrayTransformationSchema: GenMessage<AutoMlTablesInputs_Transformation_CategoricalArrayTransformation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 1, 0, 6);

/**
 * Treats the column as text array and performs following transformation
 * functions.
 * *  Concatenate all text values in the array into a single text value
 * using
 *    a space (" ") as a delimiter, and then treat the result as a single
 *    text value. Apply the transformations for Text columns.
 * *  Empty arrays treated as an empty text.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TextArrayTransformation
 */
export type AutoMlTablesInputs_Transformation_TextArrayTransformation = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TextArrayTransformation"> & {
  /**
   * @generated from field: string column_name = 1;
   */
  columnName: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesInputs.Transformation.TextArrayTransformation.
 * Use `create(AutoMlTablesInputs_Transformation_TextArrayTransformationSchema)` to create a new message.
 */
export const AutoMlTablesInputs_Transformation_TextArrayTransformationSchema: GenMessage<AutoMlTablesInputs_Transformation_TextArrayTransformation> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 1, 0, 7);

/**
 * Model metadata specific to AutoML Tables.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesMetadata
 */
export type AutoMlTablesMetadata = Message<"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesMetadata"> & {
  /**
   * Output only. The actual training cost of the model, expressed in milli
   * node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed
   * to not exceed the train budget.
   *
   * @generated from field: int64 train_cost_milli_node_hours = 1;
   */
  trainCostMilliNodeHours: bigint;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlTablesMetadata.
 * Use `create(AutoMlTablesMetadataSchema)` to create a new message.
 */
export const AutoMlTablesMetadataSchema: GenMessage<AutoMlTablesMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_tables, 2);

