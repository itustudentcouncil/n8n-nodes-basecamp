// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/vertex_rag_service.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/vertex_rag_service.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_vertex_rag_service: GenFile = /*@__PURE__*/
  fileDesc("Cjhnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL3ZlcnRleF9yYWdfc2VydmljZS5wcm90bxIfZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMSK+AQoIUmFnUXVlcnkSEwoEdGV4dBgBIAEoCUID4EEBSAASHQoQc2ltaWxhcml0eV90b3BfaxgCIAEoBUID4EEBEkcKB3JhbmtpbmcYBCABKAsyMS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlJhZ1F1ZXJ5LlJhbmtpbmdCA+BBARosCgdSYW5raW5nEhcKBWFscGhhGAEgASgCQgPgQQFIAIgBAUIICgZfYWxwaGFCBwoFcXVlcnki3QQKF1JldHJpZXZlQ29udGV4dHNSZXF1ZXN0EmMKEHZlcnRleF9yYWdfc3RvcmUYAiABKAsyRy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlJldHJpZXZlQ29udGV4dHNSZXF1ZXN0LlZlcnRleFJhZ1N0b3JlSAASOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2NhdGlvbhI9CgVxdWVyeRgDIAEoCzIpLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuUmFnUXVlcnlCA+BBAhrTAgoOVmVydGV4UmFnU3RvcmUSGgoLcmFnX2NvcnBvcmEYASADKAlCBRgB4EEBEm8KDXJhZ19yZXNvdXJjZXMYAyADKAsyUy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlJldHJpZXZlQ29udGV4dHNSZXF1ZXN0LlZlcnRleFJhZ1N0b3JlLlJhZ1Jlc291cmNlQgPgQQESKwoZdmVjdG9yX2Rpc3RhbmNlX3RocmVzaG9sZBgCIAEoAUID4EEBSACIAQEaaQoLUmFnUmVzb3VyY2USPwoKcmFnX2NvcnB1cxgBIAEoCUIr4EEB+kElCiNhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL1JhZ0NvcnB1cxIZCgxyYWdfZmlsZV9pZHMYAiADKAlCA+BBAUIcChpfdmVjdG9yX2Rpc3RhbmNlX3RocmVzaG9sZEINCgtkYXRhX3NvdXJjZSKtAQoLUmFnQ29udGV4dHMSRgoIY29udGV4dHMYASADKAsyNC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlJhZ0NvbnRleHRzLkNvbnRleHQaVgoHQ29udGV4dBISCgpzb3VyY2VfdXJpGAEgASgJEgwKBHRleHQYAiABKAkSEAoIZGlzdGFuY2UYAyABKAESFwoPc3BhcnNlX2Rpc3RhbmNlGAQgASgBIloKGFJldHJpZXZlQ29udGV4dHNSZXNwb25zZRI+Cghjb250ZXh0cxgBIAEoCzIsLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuUmFnQ29udGV4dHMywAIKEFZlcnRleFJhZ1NlcnZpY2US3AEKEFJldHJpZXZlQ29udGV4dHMSOC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLlJldHJpZXZlQ29udGV4dHNSZXF1ZXN0GjkuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5SZXRyaWV2ZUNvbnRleHRzUmVzcG9uc2UiU9pBDHBhcmVudCxxdWVyeYLT5JMCPjoBKiI5L3YxYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfTpyZXRyaWV2ZUNvbnRleHRzGk3KQRlhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybULsAQojY29tLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTFCFVZlcnRleFJhZ1NlcnZpY2VQcm90b1ABWkNjbG91ZC5nb29nbGUuY29tL2dvL2FpcGxhdGZvcm0vYXBpdjFiZXRhMS9haXBsYXRmb3JtcGI7YWlwbGF0Zm9ybXBiqgIfR29vZ2xlLkNsb3VkLkFJUGxhdGZvcm0uVjFCZXRhMcoCH0dvb2dsZVxDbG91ZFxBSVBsYXRmb3JtXFYxYmV0YTHqAiJHb29nbGU6OkNsb3VkOjpBSVBsYXRmb3JtOjpWMWJldGExYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource]);

/**
 * A query to retrieve relevant contexts.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.RagQuery
 */
export type RagQuery = Message<"google.cloud.aiplatform.v1beta1.RagQuery"> & {
  /**
   * The query to retrieve contexts.
   * Currently only text query is supported.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.RagQuery.query
   */
  query: {
    /**
     * Optional. The query in text format to get relevant contexts.
     *
     * @generated from field: string text = 1;
     */
    value: string;
    case: "text";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. The number of contexts to retrieve.
   *
   * @generated from field: int32 similarity_top_k = 2;
   */
  similarityTopK: number;

  /**
   * Optional. Configurations for hybrid search results ranking.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.RagQuery.Ranking ranking = 4;
   */
  ranking?: RagQuery_Ranking;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.RagQuery.
 * Use `create(RagQuerySchema)` to create a new message.
 */
export const RagQuerySchema: GenMessage<RagQuery> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_service, 0);

/**
 * Configurations for hybrid search results ranking.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.RagQuery.Ranking
 */
export type RagQuery_Ranking = Message<"google.cloud.aiplatform.v1beta1.RagQuery.Ranking"> & {
  /**
   * Optional. Alpha value controls the weight between dense and sparse vector
   * search results. The range is [0, 1], while 0 means sparse vector search
   * only and 1 means dense vector search only. The default value is 0.5 which
   * balances sparse and dense vector search equally.
   *
   * @generated from field: optional float alpha = 1;
   */
  alpha?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.RagQuery.Ranking.
 * Use `create(RagQuery_RankingSchema)` to create a new message.
 */
export const RagQuery_RankingSchema: GenMessage<RagQuery_Ranking> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_service, 0, 0);

/**
 * Request message for
 * [VertexRagService.RetrieveContexts][google.cloud.aiplatform.v1beta1.VertexRagService.RetrieveContexts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.RetrieveContextsRequest
 */
export type RetrieveContextsRequest = Message<"google.cloud.aiplatform.v1beta1.RetrieveContextsRequest"> & {
  /**
   * Data Source to retrieve contexts.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.RetrieveContextsRequest.data_source
   */
  dataSource: {
    /**
     * The data source for Vertex RagStore.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.RetrieveContextsRequest.VertexRagStore vertex_rag_store = 2;
     */
    value: RetrieveContextsRequest_VertexRagStore;
    case: "vertexRagStore";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the Location from which to retrieve
   * RagContexts. The users must have permission to make a call in the project.
   * Format:
   * `projects/{project}/locations/{location}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Single RAG retrieve query.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.RagQuery query = 3;
   */
  query?: RagQuery;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.RetrieveContextsRequest.
 * Use `create(RetrieveContextsRequestSchema)` to create a new message.
 */
export const RetrieveContextsRequestSchema: GenMessage<RetrieveContextsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_service, 1);

/**
 * The data source for Vertex RagStore.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.RetrieveContextsRequest.VertexRagStore
 */
export type RetrieveContextsRequest_VertexRagStore = Message<"google.cloud.aiplatform.v1beta1.RetrieveContextsRequest.VertexRagStore"> & {
  /**
   * Optional. Deprecated. Please use rag_resources to specify the data
   * source.
   *
   * @generated from field: repeated string rag_corpora = 1 [deprecated = true];
   * @deprecated
   */
  ragCorpora: string[];

  /**
   * Optional. The representation of the rag source. It can be used to specify
   * corpus only or ragfiles. Currently only support one corpus or multiple
   * files from one corpus. In the future we may open up multiple corpora
   * support.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.RetrieveContextsRequest.VertexRagStore.RagResource rag_resources = 3;
   */
  ragResources: RetrieveContextsRequest_VertexRagStore_RagResource[];

  /**
   * Optional. Only return contexts with vector distance smaller than the
   * threshold.
   *
   * @generated from field: optional double vector_distance_threshold = 2;
   */
  vectorDistanceThreshold?: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.RetrieveContextsRequest.VertexRagStore.
 * Use `create(RetrieveContextsRequest_VertexRagStoreSchema)` to create a new message.
 */
export const RetrieveContextsRequest_VertexRagStoreSchema: GenMessage<RetrieveContextsRequest_VertexRagStore> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_service, 1, 0);

/**
 * The definition of the Rag resource.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.RetrieveContextsRequest.VertexRagStore.RagResource
 */
export type RetrieveContextsRequest_VertexRagStore_RagResource = Message<"google.cloud.aiplatform.v1beta1.RetrieveContextsRequest.VertexRagStore.RagResource"> & {
  /**
   * Optional. RagCorpora resource name.
   * Format:
   * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
   *
   * @generated from field: string rag_corpus = 1;
   */
  ragCorpus: string;

  /**
   * Optional. rag_file_id. The files should be in the same rag_corpus set
   * in rag_corpus field.
   *
   * @generated from field: repeated string rag_file_ids = 2;
   */
  ragFileIds: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.RetrieveContextsRequest.VertexRagStore.RagResource.
 * Use `create(RetrieveContextsRequest_VertexRagStore_RagResourceSchema)` to create a new message.
 */
export const RetrieveContextsRequest_VertexRagStore_RagResourceSchema: GenMessage<RetrieveContextsRequest_VertexRagStore_RagResource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_service, 1, 0, 0);

/**
 * Relevant contexts for one query.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.RagContexts
 */
export type RagContexts = Message<"google.cloud.aiplatform.v1beta1.RagContexts"> & {
  /**
   * All its contexts.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.RagContexts.Context contexts = 1;
   */
  contexts: RagContexts_Context[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.RagContexts.
 * Use `create(RagContextsSchema)` to create a new message.
 */
export const RagContextsSchema: GenMessage<RagContexts> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_service, 2);

/**
 * A context of the query.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.RagContexts.Context
 */
export type RagContexts_Context = Message<"google.cloud.aiplatform.v1beta1.RagContexts.Context"> & {
  /**
   * For vertex RagStore, if the file is imported from Cloud Storage or Google
   * Drive, source_uri will be original file URI in Cloud Storage or Google
   * Drive; if file is uploaded, source_uri will be file display name.
   *
   * @generated from field: string source_uri = 1;
   */
  sourceUri: string;

  /**
   * The text chunk.
   *
   * @generated from field: string text = 2;
   */
  text: string;

  /**
   * The distance between the query dense embedding vector and the context
   * text vector.
   *
   * @generated from field: double distance = 3;
   */
  distance: number;

  /**
   * The distance between the query sparse embedding vector and the context
   * text vector.
   *
   * @generated from field: double sparse_distance = 4;
   */
  sparseDistance: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.RagContexts.Context.
 * Use `create(RagContexts_ContextSchema)` to create a new message.
 */
export const RagContexts_ContextSchema: GenMessage<RagContexts_Context> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_service, 2, 0);

/**
 * Response message for
 * [VertexRagService.RetrieveContexts][google.cloud.aiplatform.v1beta1.VertexRagService.RetrieveContexts].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.RetrieveContextsResponse
 */
export type RetrieveContextsResponse = Message<"google.cloud.aiplatform.v1beta1.RetrieveContextsResponse"> & {
  /**
   * The contexts of the query.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.RagContexts contexts = 1;
   */
  contexts?: RagContexts;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.RetrieveContextsResponse.
 * Use `create(RetrieveContextsResponseSchema)` to create a new message.
 */
export const RetrieveContextsResponseSchema: GenMessage<RetrieveContextsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_service, 3);

/**
 * A service for retrieving relevant contexts.
 *
 * @generated from service google.cloud.aiplatform.v1beta1.VertexRagService
 */
export const VertexRagService: GenService<{
  /**
   * Retrieves relevant contexts for a query.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.VertexRagService.RetrieveContexts
   */
  retrieveContexts: {
    methodKind: "unary";
    input: typeof RetrieveContextsRequestSchema;
    output: typeof RetrieveContextsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1beta1_vertex_rag_service, 0);

