// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/model_service.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EncryptionSpec } from "./encryption_spec_pb";
import { file_google_cloud_aiplatform_v1beta1_encryption_spec } from "./encryption_spec_pb";
import type { EvaluatedAnnotation } from "./evaluated_annotation_pb";
import { file_google_cloud_aiplatform_v1beta1_evaluated_annotation } from "./evaluated_annotation_pb";
import type { Examples } from "./explanation_pb";
import { file_google_cloud_aiplatform_v1beta1_explanation } from "./explanation_pb";
import type { ContainerRegistryDestination, GcsDestination } from "./io_pb";
import { file_google_cloud_aiplatform_v1beta1_io } from "./io_pb";
import type { Model, ModelSchema } from "./model_pb";
import { file_google_cloud_aiplatform_v1beta1_model } from "./model_pb";
import type { ModelEvaluation, ModelEvaluationSchema } from "./model_evaluation_pb";
import { file_google_cloud_aiplatform_v1beta1_model_evaluation } from "./model_evaluation_pb";
import type { ModelEvaluationSlice, ModelEvaluationSliceSchema } from "./model_evaluation_slice_pb";
import { file_google_cloud_aiplatform_v1beta1_model_evaluation_slice } from "./model_evaluation_slice_pb";
import type { GenericOperationMetadata } from "./operation_pb";
import { file_google_cloud_aiplatform_v1beta1_operation } from "./operation_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/model_service.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_model_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_aiplatform_v1beta1_encryption_spec, file_google_cloud_aiplatform_v1beta1_evaluated_annotation, file_google_cloud_aiplatform_v1beta1_explanation, file_google_cloud_aiplatform_v1beta1_io, file_google_cloud_aiplatform_v1beta1_model, file_google_cloud_aiplatform_v1beta1_model_evaluation, file_google_cloud_aiplatform_v1beta1_model_evaluation_slice, file_google_cloud_aiplatform_v1beta1_operation, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Request message for
 * [ModelService.UploadModel][google.cloud.aiplatform.v1beta1.ModelService.UploadModel].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UploadModelRequest
 */
export type UploadModelRequest = Message<"google.cloud.aiplatform.v1beta1.UploadModelRequest"> & {
  /**
   * Required. The resource name of the Location into which to upload the Model.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The resource name of the model into which to upload the version.
   * Only specify this field when uploading a new version.
   *
   * @generated from field: string parent_model = 4;
   */
  parentModel: string;

  /**
   * Optional. The ID to use for the uploaded Model, which will become the final
   * component of the model resource name.
   *
   * This value may be up to 63 characters, and valid characters are
   * `[a-z0-9_-]`. The first character cannot be a number or hyphen.
   *
   * @generated from field: string model_id = 5;
   */
  modelId: string;

  /**
   * Required. The Model to create.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Model model = 2;
   */
  model?: Model;

  /**
   * Optional. The user-provided custom service account to use to do the model
   * upload. If empty, [Vertex AI Service
   * Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents)
   * will be used to access resources needed to upload the model. This account
   * must belong to the target project where the model is uploaded to, i.e., the
   * project specified in the `parent` field of this request and have necessary
   * read permissions (to Google Cloud Storage, Artifact Registry, etc.).
   *
   * @generated from field: string service_account = 6;
   */
  serviceAccount: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UploadModelRequest.
 * Use `create(UploadModelRequestSchema)` to create a new message.
 */
export const UploadModelRequestSchema: GenMessage<UploadModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 0);

/**
 * Details of
 * [ModelService.UploadModel][google.cloud.aiplatform.v1beta1.ModelService.UploadModel]
 * operation.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UploadModelOperationMetadata
 */
export type UploadModelOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.UploadModelOperationMetadata"> & {
  /**
   * The common part of the operation metadata.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UploadModelOperationMetadata.
 * Use `create(UploadModelOperationMetadataSchema)` to create a new message.
 */
export const UploadModelOperationMetadataSchema: GenMessage<UploadModelOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 1);

/**
 * Response message of
 * [ModelService.UploadModel][google.cloud.aiplatform.v1beta1.ModelService.UploadModel]
 * operation.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UploadModelResponse
 */
export type UploadModelResponse = Message<"google.cloud.aiplatform.v1beta1.UploadModelResponse"> & {
  /**
   * The name of the uploaded Model resource.
   * Format: `projects/{project}/locations/{location}/models/{model}`
   *
   * @generated from field: string model = 1;
   */
  model: string;

  /**
   * Output only. The version ID of the model that is uploaded.
   *
   * @generated from field: string model_version_id = 2;
   */
  modelVersionId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UploadModelResponse.
 * Use `create(UploadModelResponseSchema)` to create a new message.
 */
export const UploadModelResponseSchema: GenMessage<UploadModelResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 2);

/**
 * Request message for
 * [ModelService.GetModel][google.cloud.aiplatform.v1beta1.ModelService.GetModel].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetModelRequest
 */
export type GetModelRequest = Message<"google.cloud.aiplatform.v1beta1.GetModelRequest"> & {
  /**
   * Required. The name of the Model resource.
   * Format: `projects/{project}/locations/{location}/models/{model}`
   *
   * In order to retrieve a specific version of the model, also provide
   * the version ID or version alias.
   *   Example: `projects/{project}/locations/{location}/models/{model}@2`
   *              or
   *            `projects/{project}/locations/{location}/models/{model}@golden`
   * If no version ID or alias is specified, the "default" version will be
   * returned. The "default" version alias is created for the first version of
   * the model, and can be moved to other versions later on. There will be
   * exactly one default version.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetModelRequest.
 * Use `create(GetModelRequestSchema)` to create a new message.
 */
export const GetModelRequestSchema: GenMessage<GetModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 3);

/**
 * Request message for
 * [ModelService.ListModels][google.cloud.aiplatform.v1beta1.ModelService.ListModels].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelsRequest
 */
export type ListModelsRequest = Message<"google.cloud.aiplatform.v1beta1.ListModelsRequest"> & {
  /**
   * Required. The resource name of the Location to list the Models from.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * An expression for filtering the results of the request. For field names
   * both snake_case and camelCase are supported.
   *
   *   * `model` supports = and !=. `model` represents the Model ID,
   *     i.e. the last segment of the Model's [resource
   *     name][google.cloud.aiplatform.v1beta1.Model.name].
   *   * `display_name` supports = and !=
   *   * `labels` supports general map functions that is:
   *     * `labels.key=value` - key:value equality
   *     * `labels.key:* or labels:key - key existence
   *     * A key including a space must be quoted. `labels."a key"`.
   *   * `base_model_name` only supports =
   *
   * Some examples:
   *
   *   * `model=1234`
   *   * `displayName="myDisplayName"`
   *   * `labels.myKey="myValue"`
   *   * `baseModelName="text-bison"`
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The standard list page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The standard list page token.
   * Typically obtained via
   * [ListModelsResponse.next_page_token][google.cloud.aiplatform.v1beta1.ListModelsResponse.next_page_token]
   * of the previous
   * [ModelService.ListModels][google.cloud.aiplatform.v1beta1.ModelService.ListModels]
   * call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelsRequest.
 * Use `create(ListModelsRequestSchema)` to create a new message.
 */
export const ListModelsRequestSchema: GenMessage<ListModelsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 4);

/**
 * Response message for
 * [ModelService.ListModels][google.cloud.aiplatform.v1beta1.ModelService.ListModels]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelsResponse
 */
export type ListModelsResponse = Message<"google.cloud.aiplatform.v1beta1.ListModelsResponse"> & {
  /**
   * List of Models in the requested page.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Model models = 1;
   */
  models: Model[];

  /**
   * A token to retrieve next page of results.
   * Pass to
   * [ListModelsRequest.page_token][google.cloud.aiplatform.v1beta1.ListModelsRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelsResponse.
 * Use `create(ListModelsResponseSchema)` to create a new message.
 */
export const ListModelsResponseSchema: GenMessage<ListModelsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 5);

/**
 * Request message for
 * [ModelService.ListModelVersions][google.cloud.aiplatform.v1beta1.ModelService.ListModelVersions].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelVersionsRequest
 */
export type ListModelVersionsRequest = Message<"google.cloud.aiplatform.v1beta1.ListModelVersionsRequest"> & {
  /**
   * Required. The name of the model to list versions for.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The standard list page size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The standard list page token.
   * Typically obtained via
   * [next_page_token][google.cloud.aiplatform.v1beta1.ListModelVersionsResponse.next_page_token]
   * of the previous
   * [ListModelVersions][google.cloud.aiplatform.v1beta1.ModelService.ListModelVersions]
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * An expression for filtering the results of the request. For field names
   * both snake_case and camelCase are supported.
   *
   *   * `labels` supports general map functions that is:
   *     * `labels.key=value` - key:value equality
   *     * `labels.key:* or labels:key - key existence
   *     * A key including a space must be quoted. `labels."a key"`.
   *
   * Some examples:
   *
   *   * `labels.myKey="myValue"`
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;

  /**
   * A comma-separated list of fields to order by, sorted in ascending order.
   * Use "desc" after a field name for descending.
   * Supported fields:
   *
   *   * `create_time`
   *   * `update_time`
   *
   * Example: `update_time asc, create_time desc`.
   *
   * @generated from field: string order_by = 6;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelVersionsRequest.
 * Use `create(ListModelVersionsRequestSchema)` to create a new message.
 */
export const ListModelVersionsRequestSchema: GenMessage<ListModelVersionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 6);

/**
 * Response message for
 * [ModelService.ListModelVersions][google.cloud.aiplatform.v1beta1.ModelService.ListModelVersions]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelVersionsResponse
 */
export type ListModelVersionsResponse = Message<"google.cloud.aiplatform.v1beta1.ListModelVersionsResponse"> & {
  /**
   * List of Model versions in the requested page.
   * In the returned Model name field, version ID instead of regvision tag will
   * be included.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.Model models = 1;
   */
  models: Model[];

  /**
   * A token to retrieve the next page of results.
   * Pass to
   * [ListModelVersionsRequest.page_token][google.cloud.aiplatform.v1beta1.ListModelVersionsRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelVersionsResponse.
 * Use `create(ListModelVersionsResponseSchema)` to create a new message.
 */
export const ListModelVersionsResponseSchema: GenMessage<ListModelVersionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 7);

/**
 * Request message for
 * [ModelService.UpdateModel][google.cloud.aiplatform.v1beta1.ModelService.UpdateModel].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateModelRequest
 */
export type UpdateModelRequest = Message<"google.cloud.aiplatform.v1beta1.UpdateModelRequest"> & {
  /**
   * Required. The Model which replaces the resource on the server.
   * When Model Versioning is enabled, the model.name will be used to determine
   * whether to update the model or model version.
   * 1. model.name with the @ value, e.g. models/123@1, refers to a version
   * specific update.
   * 2. model.name without the @ value, e.g. models/123, refers to a model
   * update.
   * 3. model.name with @-, e.g. models/123@-, refers to a model update.
   * 4. Supported model fields: display_name, description; supported
   * version-specific fields: version_description. Labels are supported in both
   * scenarios. Both the model labels and the version labels are merged when a
   * model is returned. When updating labels, if the request is for
   * model-specific update, model label gets updated. Otherwise, version labels
   * get updated.
   * 5. A model name or model version name fields update mismatch will cause a
   * precondition error.
   * 6. One request cannot update both the model and the version fields. You
   * must update them separately.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Model model = 1;
   */
  model?: Model;

  /**
   * Required. The update mask applies to the resource.
   * For the `FieldMask` definition, see
   * [google.protobuf.FieldMask][google.protobuf.FieldMask].
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateModelRequest.
 * Use `create(UpdateModelRequestSchema)` to create a new message.
 */
export const UpdateModelRequestSchema: GenMessage<UpdateModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 8);

/**
 * Request message for
 * [ModelService.UpdateExplanationDataset][google.cloud.aiplatform.v1beta1.ModelService.UpdateExplanationDataset].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateExplanationDatasetRequest
 */
export type UpdateExplanationDatasetRequest = Message<"google.cloud.aiplatform.v1beta1.UpdateExplanationDatasetRequest"> & {
  /**
   * Required. The resource name of the Model to update.
   * Format: `projects/{project}/locations/{location}/models/{model}`
   *
   * @generated from field: string model = 1;
   */
  model: string;

  /**
   * The example config containing the location of the dataset.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.Examples examples = 2;
   */
  examples?: Examples;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateExplanationDatasetRequest.
 * Use `create(UpdateExplanationDatasetRequestSchema)` to create a new message.
 */
export const UpdateExplanationDatasetRequestSchema: GenMessage<UpdateExplanationDatasetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 9);

/**
 * Runtime operation information for
 * [ModelService.UpdateExplanationDataset][google.cloud.aiplatform.v1beta1.ModelService.UpdateExplanationDataset].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateExplanationDatasetOperationMetadata
 */
export type UpdateExplanationDatasetOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.UpdateExplanationDatasetOperationMetadata"> & {
  /**
   * The common part of the operation metadata.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateExplanationDatasetOperationMetadata.
 * Use `create(UpdateExplanationDatasetOperationMetadataSchema)` to create a new message.
 */
export const UpdateExplanationDatasetOperationMetadataSchema: GenMessage<UpdateExplanationDatasetOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 10);

/**
 * Request message for
 * [ModelService.DeleteModel][google.cloud.aiplatform.v1beta1.ModelService.DeleteModel].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteModelRequest
 */
export type DeleteModelRequest = Message<"google.cloud.aiplatform.v1beta1.DeleteModelRequest"> & {
  /**
   * Required. The name of the Model resource to be deleted.
   * Format: `projects/{project}/locations/{location}/models/{model}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteModelRequest.
 * Use `create(DeleteModelRequestSchema)` to create a new message.
 */
export const DeleteModelRequestSchema: GenMessage<DeleteModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 11);

/**
 * Request message for
 * [ModelService.DeleteModelVersion][google.cloud.aiplatform.v1beta1.ModelService.DeleteModelVersion].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.DeleteModelVersionRequest
 */
export type DeleteModelVersionRequest = Message<"google.cloud.aiplatform.v1beta1.DeleteModelVersionRequest"> & {
  /**
   * Required. The name of the model version to be deleted, with a version ID
   * explicitly included.
   *
   * Example: `projects/{project}/locations/{location}/models/{model}@1234`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.DeleteModelVersionRequest.
 * Use `create(DeleteModelVersionRequestSchema)` to create a new message.
 */
export const DeleteModelVersionRequestSchema: GenMessage<DeleteModelVersionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 12);

/**
 * Request message for
 * [ModelService.MergeVersionAliases][google.cloud.aiplatform.v1beta1.ModelService.MergeVersionAliases].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.MergeVersionAliasesRequest
 */
export type MergeVersionAliasesRequest = Message<"google.cloud.aiplatform.v1beta1.MergeVersionAliasesRequest"> & {
  /**
   * Required. The name of the model version to merge aliases, with a version ID
   * explicitly included.
   *
   * Example: `projects/{project}/locations/{location}/models/{model}@1234`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The set of version aliases to merge.
   * The alias should be at most 128 characters, and match
   * `[a-z][a-zA-Z0-9-]{0,126}[a-z-0-9]`.
   * Add the `-` prefix to an alias means removing that alias from the version.
   * `-` is NOT counted in the 128 characters. Example: `-golden` means removing
   * the `golden` alias from the version.
   *
   * There is NO ordering in aliases, which means
   * 1) The aliases returned from GetModel API might not have the exactly same
   * order from this MergeVersionAliases API. 2) Adding and deleting the same
   * alias in the request is not recommended, and the 2 operations will be
   * cancelled out.
   *
   * @generated from field: repeated string version_aliases = 2;
   */
  versionAliases: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.MergeVersionAliasesRequest.
 * Use `create(MergeVersionAliasesRequestSchema)` to create a new message.
 */
export const MergeVersionAliasesRequestSchema: GenMessage<MergeVersionAliasesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 13);

/**
 * Request message for
 * [ModelService.ExportModel][google.cloud.aiplatform.v1beta1.ModelService.ExportModel].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExportModelRequest
 */
export type ExportModelRequest = Message<"google.cloud.aiplatform.v1beta1.ExportModelRequest"> & {
  /**
   * Required. The resource name of the Model to export.
   * The resource name may contain version id or version alias to specify the
   * version, if no version is specified, the default version will be exported.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The desired output location and configuration.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ExportModelRequest.OutputConfig output_config = 2;
   */
  outputConfig?: ExportModelRequest_OutputConfig;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExportModelRequest.
 * Use `create(ExportModelRequestSchema)` to create a new message.
 */
export const ExportModelRequestSchema: GenMessage<ExportModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 14);

/**
 * Output configuration for the Model export.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExportModelRequest.OutputConfig
 */
export type ExportModelRequest_OutputConfig = Message<"google.cloud.aiplatform.v1beta1.ExportModelRequest.OutputConfig"> & {
  /**
   * The ID of the format in which the Model must be exported. Each Model
   * lists the [export formats it
   * supports][google.cloud.aiplatform.v1beta1.Model.supported_export_formats].
   * If no value is provided here, then the first from the list of the Model's
   * supported formats is used by default.
   *
   * @generated from field: string export_format_id = 1;
   */
  exportFormatId: string;

  /**
   * The Cloud Storage location where the Model artifact is to be
   * written to. Under the directory given as the destination a new one with
   * name "`model-export-<model-display-name>-<timestamp-of-export-call>`",
   * where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format,
   * will be created. Inside, the Model and any of its supporting files
   * will be written.
   * This field should only be set when the `exportableContent` field of the
   * [Model.supported_export_formats] object contains `ARTIFACT`.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GcsDestination artifact_destination = 3;
   */
  artifactDestination?: GcsDestination;

  /**
   * The Google Container Registry or Artifact Registry uri where the
   * Model container image will be copied to.
   * This field should only be set when the `exportableContent` field of the
   * [Model.supported_export_formats] object contains `IMAGE`.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ContainerRegistryDestination image_destination = 4;
   */
  imageDestination?: ContainerRegistryDestination;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExportModelRequest.OutputConfig.
 * Use `create(ExportModelRequest_OutputConfigSchema)` to create a new message.
 */
export const ExportModelRequest_OutputConfigSchema: GenMessage<ExportModelRequest_OutputConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 14, 0);

/**
 * Details of
 * [ModelService.ExportModel][google.cloud.aiplatform.v1beta1.ModelService.ExportModel]
 * operation.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExportModelOperationMetadata
 */
export type ExportModelOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.ExportModelOperationMetadata"> & {
  /**
   * The common part of the operation metadata.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;

  /**
   * Output only. Information further describing the output of this Model
   * export.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ExportModelOperationMetadata.OutputInfo output_info = 2;
   */
  outputInfo?: ExportModelOperationMetadata_OutputInfo;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExportModelOperationMetadata.
 * Use `create(ExportModelOperationMetadataSchema)` to create a new message.
 */
export const ExportModelOperationMetadataSchema: GenMessage<ExportModelOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 15);

/**
 * Further describes the output of the ExportModel. Supplements
 * [ExportModelRequest.OutputConfig][google.cloud.aiplatform.v1beta1.ExportModelRequest.OutputConfig].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExportModelOperationMetadata.OutputInfo
 */
export type ExportModelOperationMetadata_OutputInfo = Message<"google.cloud.aiplatform.v1beta1.ExportModelOperationMetadata.OutputInfo"> & {
  /**
   * Output only. If the Model artifact is being exported to Google Cloud
   * Storage this is the full path of the directory created, into which the
   * Model files are being written to.
   *
   * @generated from field: string artifact_output_uri = 2;
   */
  artifactOutputUri: string;

  /**
   * Output only. If the Model image is being exported to Google Container
   * Registry or Artifact Registry this is the full path of the image created.
   *
   * @generated from field: string image_output_uri = 3;
   */
  imageOutputUri: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExportModelOperationMetadata.OutputInfo.
 * Use `create(ExportModelOperationMetadata_OutputInfoSchema)` to create a new message.
 */
export const ExportModelOperationMetadata_OutputInfoSchema: GenMessage<ExportModelOperationMetadata_OutputInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 15, 0);

/**
 * Response message of
 * [ModelService.UpdateExplanationDataset][google.cloud.aiplatform.v1beta1.ModelService.UpdateExplanationDataset]
 * operation.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.UpdateExplanationDatasetResponse
 */
export type UpdateExplanationDatasetResponse = Message<"google.cloud.aiplatform.v1beta1.UpdateExplanationDatasetResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.UpdateExplanationDatasetResponse.
 * Use `create(UpdateExplanationDatasetResponseSchema)` to create a new message.
 */
export const UpdateExplanationDatasetResponseSchema: GenMessage<UpdateExplanationDatasetResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 16);

/**
 * Response message of
 * [ModelService.ExportModel][google.cloud.aiplatform.v1beta1.ModelService.ExportModel]
 * operation.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ExportModelResponse
 */
export type ExportModelResponse = Message<"google.cloud.aiplatform.v1beta1.ExportModelResponse"> & {
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ExportModelResponse.
 * Use `create(ExportModelResponseSchema)` to create a new message.
 */
export const ExportModelResponseSchema: GenMessage<ExportModelResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 17);

/**
 * Request message for
 * [ModelService.CopyModel][google.cloud.aiplatform.v1beta1.ModelService.CopyModel].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CopyModelRequest
 */
export type CopyModelRequest = Message<"google.cloud.aiplatform.v1beta1.CopyModelRequest"> & {
  /**
   * If both fields are unset, a new Model will be created with a generated ID.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.CopyModelRequest.destination_model
   */
  destinationModel: {
    /**
     * Optional. Copy source_model into a new Model with this ID. The ID will
     * become the final component of the model resource name.
     *
     * This value may be up to 63 characters, and valid characters are
     * `[a-z0-9_-]`. The first character cannot be a number or hyphen.
     *
     * @generated from field: string model_id = 4;
     */
    value: string;
    case: "modelId";
  } | {
    /**
     * Optional. Specify this field to copy source_model into this existing
     * Model as a new version. Format:
     * `projects/{project}/locations/{location}/models/{model}`
     *
     * @generated from field: string parent_model = 5;
     */
    value: string;
    case: "parentModel";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The resource name of the Location into which to copy the Model.
   * Format: `projects/{project}/locations/{location}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The resource name of the Model to copy. That Model must be in the
   * same Project. Format:
   * `projects/{project}/locations/{location}/models/{model}`
   *
   * @generated from field: string source_model = 2;
   */
  sourceModel: string;

  /**
   * Customer-managed encryption key options. If this is set,
   * then the Model copy will be encrypted with the provided encryption key.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.EncryptionSpec encryption_spec = 3;
   */
  encryptionSpec?: EncryptionSpec;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CopyModelRequest.
 * Use `create(CopyModelRequestSchema)` to create a new message.
 */
export const CopyModelRequestSchema: GenMessage<CopyModelRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 18);

/**
 * Details of
 * [ModelService.CopyModel][google.cloud.aiplatform.v1beta1.ModelService.CopyModel]
 * operation.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CopyModelOperationMetadata
 */
export type CopyModelOperationMetadata = Message<"google.cloud.aiplatform.v1beta1.CopyModelOperationMetadata"> & {
  /**
   * The common part of the operation metadata.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;
   */
  genericMetadata?: GenericOperationMetadata;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CopyModelOperationMetadata.
 * Use `create(CopyModelOperationMetadataSchema)` to create a new message.
 */
export const CopyModelOperationMetadataSchema: GenMessage<CopyModelOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 19);

/**
 * Response message of
 * [ModelService.CopyModel][google.cloud.aiplatform.v1beta1.ModelService.CopyModel]
 * operation.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.CopyModelResponse
 */
export type CopyModelResponse = Message<"google.cloud.aiplatform.v1beta1.CopyModelResponse"> & {
  /**
   * The name of the copied Model resource.
   * Format: `projects/{project}/locations/{location}/models/{model}`
   *
   * @generated from field: string model = 1;
   */
  model: string;

  /**
   * Output only. The version ID of the model that is copied.
   *
   * @generated from field: string model_version_id = 2;
   */
  modelVersionId: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.CopyModelResponse.
 * Use `create(CopyModelResponseSchema)` to create a new message.
 */
export const CopyModelResponseSchema: GenMessage<CopyModelResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 20);

/**
 * Request message for
 * [ModelService.ImportModelEvaluation][google.cloud.aiplatform.v1beta1.ModelService.ImportModelEvaluation]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ImportModelEvaluationRequest
 */
export type ImportModelEvaluationRequest = Message<"google.cloud.aiplatform.v1beta1.ImportModelEvaluationRequest"> & {
  /**
   * Required. The name of the parent model resource.
   * Format: `projects/{project}/locations/{location}/models/{model}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Model evaluation resource to be imported.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelEvaluation model_evaluation = 2;
   */
  modelEvaluation?: ModelEvaluation;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ImportModelEvaluationRequest.
 * Use `create(ImportModelEvaluationRequestSchema)` to create a new message.
 */
export const ImportModelEvaluationRequestSchema: GenMessage<ImportModelEvaluationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 21);

/**
 * Request message for
 * [ModelService.BatchImportModelEvaluationSlices][google.cloud.aiplatform.v1beta1.ModelService.BatchImportModelEvaluationSlices]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.BatchImportModelEvaluationSlicesRequest
 */
export type BatchImportModelEvaluationSlicesRequest = Message<"google.cloud.aiplatform.v1beta1.BatchImportModelEvaluationSlicesRequest"> & {
  /**
   * Required. The name of the parent ModelEvaluation resource.
   * Format:
   * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Model evaluation slice resource to be imported.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.ModelEvaluationSlice model_evaluation_slices = 2;
   */
  modelEvaluationSlices: ModelEvaluationSlice[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.BatchImportModelEvaluationSlicesRequest.
 * Use `create(BatchImportModelEvaluationSlicesRequestSchema)` to create a new message.
 */
export const BatchImportModelEvaluationSlicesRequestSchema: GenMessage<BatchImportModelEvaluationSlicesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 22);

/**
 * Response message for
 * [ModelService.BatchImportModelEvaluationSlices][google.cloud.aiplatform.v1beta1.ModelService.BatchImportModelEvaluationSlices]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.BatchImportModelEvaluationSlicesResponse
 */
export type BatchImportModelEvaluationSlicesResponse = Message<"google.cloud.aiplatform.v1beta1.BatchImportModelEvaluationSlicesResponse"> & {
  /**
   * Output only. List of imported
   * [ModelEvaluationSlice.name][google.cloud.aiplatform.v1beta1.ModelEvaluationSlice.name].
   *
   * @generated from field: repeated string imported_model_evaluation_slices = 1;
   */
  importedModelEvaluationSlices: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.BatchImportModelEvaluationSlicesResponse.
 * Use `create(BatchImportModelEvaluationSlicesResponseSchema)` to create a new message.
 */
export const BatchImportModelEvaluationSlicesResponseSchema: GenMessage<BatchImportModelEvaluationSlicesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 23);

/**
 * Request message for
 * [ModelService.BatchImportEvaluatedAnnotations][google.cloud.aiplatform.v1beta1.ModelService.BatchImportEvaluatedAnnotations]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.BatchImportEvaluatedAnnotationsRequest
 */
export type BatchImportEvaluatedAnnotationsRequest = Message<"google.cloud.aiplatform.v1beta1.BatchImportEvaluatedAnnotationsRequest"> & {
  /**
   * Required. The name of the parent ModelEvaluationSlice resource.
   * Format:
   * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Evaluated annotations resource to be imported.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.EvaluatedAnnotation evaluated_annotations = 2;
   */
  evaluatedAnnotations: EvaluatedAnnotation[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.BatchImportEvaluatedAnnotationsRequest.
 * Use `create(BatchImportEvaluatedAnnotationsRequestSchema)` to create a new message.
 */
export const BatchImportEvaluatedAnnotationsRequestSchema: GenMessage<BatchImportEvaluatedAnnotationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 24);

/**
 * Response message for
 * [ModelService.BatchImportEvaluatedAnnotations][google.cloud.aiplatform.v1beta1.ModelService.BatchImportEvaluatedAnnotations]
 *
 * @generated from message google.cloud.aiplatform.v1beta1.BatchImportEvaluatedAnnotationsResponse
 */
export type BatchImportEvaluatedAnnotationsResponse = Message<"google.cloud.aiplatform.v1beta1.BatchImportEvaluatedAnnotationsResponse"> & {
  /**
   * Output only. Number of EvaluatedAnnotations imported.
   *
   * @generated from field: int32 imported_evaluated_annotations_count = 1;
   */
  importedEvaluatedAnnotationsCount: number;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.BatchImportEvaluatedAnnotationsResponse.
 * Use `create(BatchImportEvaluatedAnnotationsResponseSchema)` to create a new message.
 */
export const BatchImportEvaluatedAnnotationsResponseSchema: GenMessage<BatchImportEvaluatedAnnotationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 25);

/**
 * Request message for
 * [ModelService.GetModelEvaluation][google.cloud.aiplatform.v1beta1.ModelService.GetModelEvaluation].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetModelEvaluationRequest
 */
export type GetModelEvaluationRequest = Message<"google.cloud.aiplatform.v1beta1.GetModelEvaluationRequest"> & {
  /**
   * Required. The name of the ModelEvaluation resource.
   * Format:
   * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetModelEvaluationRequest.
 * Use `create(GetModelEvaluationRequestSchema)` to create a new message.
 */
export const GetModelEvaluationRequestSchema: GenMessage<GetModelEvaluationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 26);

/**
 * Request message for
 * [ModelService.ListModelEvaluations][google.cloud.aiplatform.v1beta1.ModelService.ListModelEvaluations].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelEvaluationsRequest
 */
export type ListModelEvaluationsRequest = Message<"google.cloud.aiplatform.v1beta1.ListModelEvaluationsRequest"> & {
  /**
   * Required. The resource name of the Model to list the ModelEvaluations from.
   * Format: `projects/{project}/locations/{location}/models/{model}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The standard list filter.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The standard list page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The standard list page token.
   * Typically obtained via
   * [ListModelEvaluationsResponse.next_page_token][google.cloud.aiplatform.v1beta1.ListModelEvaluationsResponse.next_page_token]
   * of the previous
   * [ModelService.ListModelEvaluations][google.cloud.aiplatform.v1beta1.ModelService.ListModelEvaluations]
   * call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelEvaluationsRequest.
 * Use `create(ListModelEvaluationsRequestSchema)` to create a new message.
 */
export const ListModelEvaluationsRequestSchema: GenMessage<ListModelEvaluationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 27);

/**
 * Response message for
 * [ModelService.ListModelEvaluations][google.cloud.aiplatform.v1beta1.ModelService.ListModelEvaluations].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelEvaluationsResponse
 */
export type ListModelEvaluationsResponse = Message<"google.cloud.aiplatform.v1beta1.ListModelEvaluationsResponse"> & {
  /**
   * List of ModelEvaluations in the requested page.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.ModelEvaluation model_evaluations = 1;
   */
  modelEvaluations: ModelEvaluation[];

  /**
   * A token to retrieve next page of results.
   * Pass to
   * [ListModelEvaluationsRequest.page_token][google.cloud.aiplatform.v1beta1.ListModelEvaluationsRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelEvaluationsResponse.
 * Use `create(ListModelEvaluationsResponseSchema)` to create a new message.
 */
export const ListModelEvaluationsResponseSchema: GenMessage<ListModelEvaluationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 28);

/**
 * Request message for
 * [ModelService.GetModelEvaluationSlice][google.cloud.aiplatform.v1beta1.ModelService.GetModelEvaluationSlice].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.GetModelEvaluationSliceRequest
 */
export type GetModelEvaluationSliceRequest = Message<"google.cloud.aiplatform.v1beta1.GetModelEvaluationSliceRequest"> & {
  /**
   * Required. The name of the ModelEvaluationSlice resource.
   * Format:
   * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.GetModelEvaluationSliceRequest.
 * Use `create(GetModelEvaluationSliceRequestSchema)` to create a new message.
 */
export const GetModelEvaluationSliceRequestSchema: GenMessage<GetModelEvaluationSliceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 29);

/**
 * Request message for
 * [ModelService.ListModelEvaluationSlices][google.cloud.aiplatform.v1beta1.ModelService.ListModelEvaluationSlices].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelEvaluationSlicesRequest
 */
export type ListModelEvaluationSlicesRequest = Message<"google.cloud.aiplatform.v1beta1.ListModelEvaluationSlicesRequest"> & {
  /**
   * Required. The resource name of the ModelEvaluation to list the
   * ModelEvaluationSlices from. Format:
   * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The standard list filter.
   *
   *   * `slice.dimension` - for =.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The standard list page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The standard list page token.
   * Typically obtained via
   * [ListModelEvaluationSlicesResponse.next_page_token][google.cloud.aiplatform.v1beta1.ListModelEvaluationSlicesResponse.next_page_token]
   * of the previous
   * [ModelService.ListModelEvaluationSlices][google.cloud.aiplatform.v1beta1.ModelService.ListModelEvaluationSlices]
   * call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Mask specifying which fields to read.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelEvaluationSlicesRequest.
 * Use `create(ListModelEvaluationSlicesRequestSchema)` to create a new message.
 */
export const ListModelEvaluationSlicesRequestSchema: GenMessage<ListModelEvaluationSlicesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 30);

/**
 * Response message for
 * [ModelService.ListModelEvaluationSlices][google.cloud.aiplatform.v1beta1.ModelService.ListModelEvaluationSlices].
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ListModelEvaluationSlicesResponse
 */
export type ListModelEvaluationSlicesResponse = Message<"google.cloud.aiplatform.v1beta1.ListModelEvaluationSlicesResponse"> & {
  /**
   * List of ModelEvaluations in the requested page.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.ModelEvaluationSlice model_evaluation_slices = 1;
   */
  modelEvaluationSlices: ModelEvaluationSlice[];

  /**
   * A token to retrieve next page of results.
   * Pass to
   * [ListModelEvaluationSlicesRequest.page_token][google.cloud.aiplatform.v1beta1.ListModelEvaluationSlicesRequest.page_token]
   * to obtain that page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ListModelEvaluationSlicesResponse.
 * Use `create(ListModelEvaluationSlicesResponseSchema)` to create a new message.
 */
export const ListModelEvaluationSlicesResponseSchema: GenMessage<ListModelEvaluationSlicesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_service, 31);

/**
 * A service for managing Vertex AI's machine learning Models.
 *
 * @generated from service google.cloud.aiplatform.v1beta1.ModelService
 */
export const ModelService: GenService<{
  /**
   * Uploads a Model artifact into Vertex AI.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.UploadModel
   */
  uploadModel: {
    methodKind: "unary";
    input: typeof UploadModelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a Model.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.GetModel
   */
  getModel: {
    methodKind: "unary";
    input: typeof GetModelRequestSchema;
    output: typeof ModelSchema;
  },
  /**
   * Lists Models in a Location.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.ListModels
   */
  listModels: {
    methodKind: "unary";
    input: typeof ListModelsRequestSchema;
    output: typeof ListModelsResponseSchema;
  },
  /**
   * Lists versions of the specified model.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.ListModelVersions
   */
  listModelVersions: {
    methodKind: "unary";
    input: typeof ListModelVersionsRequestSchema;
    output: typeof ListModelVersionsResponseSchema;
  },
  /**
   * Updates a Model.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.UpdateModel
   */
  updateModel: {
    methodKind: "unary";
    input: typeof UpdateModelRequestSchema;
    output: typeof ModelSchema;
  },
  /**
   * Incrementally update the dataset used for an examples model.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.UpdateExplanationDataset
   */
  updateExplanationDataset: {
    methodKind: "unary";
    input: typeof UpdateExplanationDatasetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a Model.
   *
   * A model cannot be deleted if any
   * [Endpoint][google.cloud.aiplatform.v1beta1.Endpoint] resource has a
   * [DeployedModel][google.cloud.aiplatform.v1beta1.DeployedModel] based on the
   * model in its
   * [deployed_models][google.cloud.aiplatform.v1beta1.Endpoint.deployed_models]
   * field.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.DeleteModel
   */
  deleteModel: {
    methodKind: "unary";
    input: typeof DeleteModelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a Model version.
   *
   * Model version can only be deleted if there are no
   * [DeployedModels][google.cloud.aiplatform.v1beta1.DeployedModel] created
   * from it. Deleting the only version in the Model is not allowed. Use
   * [DeleteModel][google.cloud.aiplatform.v1beta1.ModelService.DeleteModel] for
   * deleting the Model instead.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.DeleteModelVersion
   */
  deleteModelVersion: {
    methodKind: "unary";
    input: typeof DeleteModelVersionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Merges a set of aliases for a Model version.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.MergeVersionAliases
   */
  mergeVersionAliases: {
    methodKind: "unary";
    input: typeof MergeVersionAliasesRequestSchema;
    output: typeof ModelSchema;
  },
  /**
   * Exports a trained, exportable Model to a location specified by the
   * user. A Model is considered to be exportable if it has at least one
   * [supported export
   * format][google.cloud.aiplatform.v1beta1.Model.supported_export_formats].
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.ExportModel
   */
  exportModel: {
    methodKind: "unary";
    input: typeof ExportModelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Copies an already existing Vertex AI Model into the specified Location.
   * The source Model must exist in the same Project.
   * When copying custom Models, the users themselves are responsible for
   * [Model.metadata][google.cloud.aiplatform.v1beta1.Model.metadata] content to
   * be region-agnostic, as well as making sure that any resources (e.g. files)
   * it depends on remain accessible.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.CopyModel
   */
  copyModel: {
    methodKind: "unary";
    input: typeof CopyModelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Imports an externally generated ModelEvaluation.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.ImportModelEvaluation
   */
  importModelEvaluation: {
    methodKind: "unary";
    input: typeof ImportModelEvaluationRequestSchema;
    output: typeof ModelEvaluationSchema;
  },
  /**
   * Imports a list of externally generated ModelEvaluationSlice.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.BatchImportModelEvaluationSlices
   */
  batchImportModelEvaluationSlices: {
    methodKind: "unary";
    input: typeof BatchImportModelEvaluationSlicesRequestSchema;
    output: typeof BatchImportModelEvaluationSlicesResponseSchema;
  },
  /**
   * Imports a list of externally generated EvaluatedAnnotations.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.BatchImportEvaluatedAnnotations
   */
  batchImportEvaluatedAnnotations: {
    methodKind: "unary";
    input: typeof BatchImportEvaluatedAnnotationsRequestSchema;
    output: typeof BatchImportEvaluatedAnnotationsResponseSchema;
  },
  /**
   * Gets a ModelEvaluation.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.GetModelEvaluation
   */
  getModelEvaluation: {
    methodKind: "unary";
    input: typeof GetModelEvaluationRequestSchema;
    output: typeof ModelEvaluationSchema;
  },
  /**
   * Lists ModelEvaluations in a Model.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.ListModelEvaluations
   */
  listModelEvaluations: {
    methodKind: "unary";
    input: typeof ListModelEvaluationsRequestSchema;
    output: typeof ListModelEvaluationsResponseSchema;
  },
  /**
   * Gets a ModelEvaluationSlice.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.GetModelEvaluationSlice
   */
  getModelEvaluationSlice: {
    methodKind: "unary";
    input: typeof GetModelEvaluationSliceRequestSchema;
    output: typeof ModelEvaluationSliceSchema;
  },
  /**
   * Lists ModelEvaluationSlices in a ModelEvaluation.
   *
   * @generated from rpc google.cloud.aiplatform.v1beta1.ModelService.ListModelEvaluationSlices
   */
  listModelEvaluationSlices: {
    methodKind: "unary";
    input: typeof ListModelEvaluationSlicesRequestSchema;
    output: typeof ListModelEvaluationSlicesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_aiplatform_v1beta1_model_service, 0);

