// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/aiplatform/v1beta1/model_monitoring_spec.proto (package google.cloud.aiplatform.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ExplanationSpec } from "./explanation_pb";
import { file_google_cloud_aiplatform_v1beta1_explanation } from "./explanation_pb";
import type { GcsDestination } from "./io_pb";
import { file_google_cloud_aiplatform_v1beta1_io } from "./io_pb";
import type { BatchDedicatedResources } from "./machine_resources_pb";
import { file_google_cloud_aiplatform_v1beta1_machine_resources } from "./machine_resources_pb";
import type { ModelMonitoringAlertCondition } from "./model_monitoring_alert_pb";
import { file_google_cloud_aiplatform_v1beta1_model_monitoring_alert } from "./model_monitoring_alert_pb";
import type { Interval } from "../../../type/interval_pb";
import { file_google_type_interval } from "../../../type/interval_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/aiplatform/v1beta1/model_monitoring_spec.proto.
 */
export const file_google_cloud_aiplatform_v1beta1_model_monitoring_spec: GenFile = /*@__PURE__*/
  fileDesc("Cjtnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL21vZGVsX21vbml0b3Jpbmdfc3BlYy5wcm90bxIfZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMSKaAgoTTW9kZWxNb25pdG9yaW5nU3BlYxJVCg5vYmplY3RpdmVfc3BlYxgBIAEoCzI9Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTW9kZWxNb25pdG9yaW5nT2JqZWN0aXZlU3BlYxJbChFub3RpZmljYXRpb25fc3BlYxgCIAEoCzJALmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTW9kZWxNb25pdG9yaW5nTm90aWZpY2F0aW9uU3BlYxJPCgtvdXRwdXRfc3BlYxgDIAEoCzI6Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTW9kZWxNb25pdG9yaW5nT3V0cHV0U3BlYyK7DgocTW9kZWxNb25pdG9yaW5nT2JqZWN0aXZlU3BlYxJrChF0YWJ1bGFyX29iamVjdGl2ZRgBIAEoCzJOLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTW9kZWxNb25pdG9yaW5nT2JqZWN0aXZlU3BlYy5UYWJ1bGFyT2JqZWN0aXZlSAASSgoQZXhwbGFuYXRpb25fc3BlYxgDIAEoCzIwLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuRXhwbGFuYXRpb25TcGVjEk8KEGJhc2VsaW5lX2RhdGFzZXQYBCABKAsyNS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLk1vZGVsTW9uaXRvcmluZ0lucHV0Ek0KDnRhcmdldF9kYXRhc2V0GAUgASgLMjUuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Nb2RlbE1vbml0b3JpbmdJbnB1dBrABAoNRGF0YURyaWZ0U3BlYxIQCghmZWF0dXJlcxgBIAMoCRIfChdjYXRlZ29yaWNhbF9tZXRyaWNfdHlwZRgCIAEoCRIbChNudW1lcmljX21ldHJpY190eXBlGAMgASgJEmsKI2RlZmF1bHRfY2F0ZWdvcmljYWxfYWxlcnRfY29uZGl0aW9uGAQgASgLMj4uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Nb2RlbE1vbml0b3JpbmdBbGVydENvbmRpdGlvbhJnCh9kZWZhdWx0X251bWVyaWNfYWxlcnRfY29uZGl0aW9uGAUgASgLMj4uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Nb2RlbE1vbml0b3JpbmdBbGVydENvbmRpdGlvbhKJAQoYZmVhdHVyZV9hbGVydF9jb25kaXRpb25zGAYgAygLMmcuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Nb2RlbE1vbml0b3JpbmdPYmplY3RpdmVTcGVjLkRhdGFEcmlmdFNwZWMuRmVhdHVyZUFsZXJ0Q29uZGl0aW9uc0VudHJ5Gn0KG0ZlYXR1cmVBbGVydENvbmRpdGlvbnNFbnRyeRILCgNrZXkYASABKAkSTQoFdmFsdWUYAiABKAsyPi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLk1vZGVsTW9uaXRvcmluZ0FsZXJ0Q29uZGl0aW9uOgI4ARqIBAoWRmVhdHVyZUF0dHJpYnV0aW9uU3BlYxIQCghmZWF0dXJlcxgBIAMoCRJfChdkZWZhdWx0X2FsZXJ0X2NvbmRpdGlvbhgCIAEoCzI+Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTW9kZWxNb25pdG9yaW5nQWxlcnRDb25kaXRpb24SkgEKGGZlYXR1cmVfYWxlcnRfY29uZGl0aW9ucxgDIAMoCzJwLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTW9kZWxNb25pdG9yaW5nT2JqZWN0aXZlU3BlYy5GZWF0dXJlQXR0cmlidXRpb25TcGVjLkZlYXR1cmVBbGVydENvbmRpdGlvbnNFbnRyeRJnCiViYXRjaF9leHBsYW5hdGlvbl9kZWRpY2F0ZWRfcmVzb3VyY2VzGAQgASgLMjguZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5CYXRjaERlZGljYXRlZFJlc291cmNlcxp9ChtGZWF0dXJlQWxlcnRDb25kaXRpb25zRW50cnkSCwoDa2V5GAEgASgJEk0KBXZhbHVlGAIgASgLMj4uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Nb2RlbE1vbml0b3JpbmdBbGVydENvbmRpdGlvbjoCOAEa5gIKEFRhYnVsYXJPYmplY3RpdmUSZwoSZmVhdHVyZV9kcmlmdF9zcGVjGAogASgLMksuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Nb2RlbE1vbml0b3JpbmdPYmplY3RpdmVTcGVjLkRhdGFEcmlmdFNwZWMScQoccHJlZGljdGlvbl9vdXRwdXRfZHJpZnRfc3BlYxgLIAEoCzJLLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTW9kZWxNb25pdG9yaW5nT2JqZWN0aXZlU3BlYy5EYXRhRHJpZnRTcGVjEnYKGGZlYXR1cmVfYXR0cmlidXRpb25fc3BlYxgMIAEoCzJULmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTW9kZWxNb25pdG9yaW5nT2JqZWN0aXZlU3BlYy5GZWF0dXJlQXR0cmlidXRpb25TcGVjQgsKCW9iamVjdGl2ZSJoChlNb2RlbE1vbml0b3JpbmdPdXRwdXRTcGVjEksKEmdjc19iYXNlX2RpcmVjdG9yeRgBIAEoCzIvLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuR2NzRGVzdGluYXRpb24ixwsKFE1vZGVsTW9uaXRvcmluZ0lucHV0EmoKEmNvbHVtbml6ZWRfZGF0YXNldBgBIAEoCzJMLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTW9kZWxNb25pdG9yaW5nSW5wdXQuTW9kZWxNb25pdG9yaW5nRGF0YXNldEgAEm4KF2JhdGNoX3ByZWRpY3Rpb25fb3V0cHV0GAIgASgLMksuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Nb2RlbE1vbml0b3JpbmdJbnB1dC5CYXRjaFByZWRpY3Rpb25PdXRwdXRIABJoChR2ZXJ0ZXhfZW5kcG9pbnRfbG9ncxgDIAEoCzJILmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTEuTW9kZWxNb25pdG9yaW5nSW5wdXQuVmVydGV4RW5kcG9pbnRMb2dzSAASLgoNdGltZV9pbnRlcnZhbBgGIAEoCzIVLmdvb2dsZS50eXBlLkludGVydmFsSAESVwoLdGltZV9vZmZzZXQYByABKAsyQC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLk1vZGVsTW9uaXRvcmluZ0lucHV0LlRpbWVPZmZzZXRIARrdBQoWTW9kZWxNb25pdG9yaW5nRGF0YXNldBJACg52ZXJ0ZXhfZGF0YXNldBgBIAEoCUIm+kEjCiFhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL0RhdGFzZXRIABJ7CgpnY3Nfc291cmNlGAIgASgLMmUuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Nb2RlbE1vbml0b3JpbmdJbnB1dC5Nb2RlbE1vbml0b3JpbmdEYXRhc2V0Lk1vZGVsTW9uaXRvcmluZ0djc1NvdXJjZUgAEoUBCg9iaWdxdWVyeV9zb3VyY2UYBiABKAsyai5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLk1vZGVsTW9uaXRvcmluZ0lucHV0Lk1vZGVsTW9uaXRvcmluZ0RhdGFzZXQuTW9kZWxNb25pdG9yaW5nQmlnUXVlcnlTb3VyY2VIABIXCg90aW1lc3RhbXBfZmllbGQYByABKAka/AEKGE1vZGVsTW9uaXRvcmluZ0djc1NvdXJjZRIPCgdnY3NfdXJpGAEgASgJEoABCgZmb3JtYXQYAiABKA4ycC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGExLk1vZGVsTW9uaXRvcmluZ0lucHV0Lk1vZGVsTW9uaXRvcmluZ0RhdGFzZXQuTW9kZWxNb25pdG9yaW5nR2NzU291cmNlLkRhdGFGb3JtYXQiTAoKRGF0YUZvcm1hdBIbChdEQVRBX0ZPUk1BVF9VTlNQRUNJRklFRBAAEgcKA0NTVhABEg0KCVRGX1JFQ09SRBACEgkKBUpTT05MEAMaUwodTW9kZWxNb25pdG9yaW5nQmlnUXVlcnlTb3VyY2USEwoJdGFibGVfdXJpGAEgASgJSAASDwoFcXVlcnkYAiABKAlIAEIMCgpjb25uZWN0aW9uQg8KDWRhdGFfbG9jYXRpb24aaAoVQmF0Y2hQcmVkaWN0aW9uT3V0cHV0Ek8KFGJhdGNoX3ByZWRpY3Rpb25fam9iGAEgASgJQjH6QS4KLGFpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vQmF0Y2hQcmVkaWN0aW9uSm9iGlAKElZlcnRleEVuZHBvaW50TG9ncxI6CgllbmRwb2ludHMYASADKAlCJ/pBJAoiYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9FbmRwb2ludBosCgpUaW1lT2Zmc2V0Eg4KBm9mZnNldBgBIAEoCRIOCgZ3aW5kb3cYAiABKAlCCQoHZGF0YXNldEILCgl0aW1lX3NwZWMihQMKH01vZGVsTW9uaXRvcmluZ05vdGlmaWNhdGlvblNwZWMSYgoMZW1haWxfY29uZmlnGAEgASgLMkwuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Nb2RlbE1vbml0b3JpbmdOb3RpZmljYXRpb25TcGVjLkVtYWlsQ29uZmlnEhwKFGVuYWJsZV9jbG91ZF9sb2dnaW5nGAIgASgIEoABChxub3RpZmljYXRpb25fY2hhbm5lbF9jb25maWdzGAMgAygLMlouZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5Nb2RlbE1vbml0b3JpbmdOb3RpZmljYXRpb25TcGVjLk5vdGlmaWNhdGlvbkNoYW5uZWxDb25maWcaIgoLRW1haWxDb25maWcSEwoLdXNlcl9lbWFpbHMYASADKAkaOQoZTm90aWZpY2F0aW9uQ2hhbm5lbENvbmZpZxIcChRub3RpZmljYXRpb25fY2hhbm5lbBgBIAEoCULvAQojY29tLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxYmV0YTFCGE1vZGVsTW9uaXRvcmluZ1NwZWNQcm90b1ABWkNjbG91ZC5nb29nbGUuY29tL2dvL2FpcGxhdGZvcm0vYXBpdjFiZXRhMS9haXBsYXRmb3JtcGI7YWlwbGF0Zm9ybXBiqgIfR29vZ2xlLkNsb3VkLkFJUGxhdGZvcm0uVjFCZXRhMcoCH0dvb2dsZVxDbG91ZFxBSVBsYXRmb3JtXFYxYmV0YTHqAiJHb29nbGU6OkNsb3VkOjpBSVBsYXRmb3JtOjpWMWJldGExYgZwcm90bzM", [file_google_api_resource, file_google_cloud_aiplatform_v1beta1_explanation, file_google_cloud_aiplatform_v1beta1_io, file_google_cloud_aiplatform_v1beta1_machine_resources, file_google_cloud_aiplatform_v1beta1_model_monitoring_alert, file_google_type_interval]);

/**
 * Monitoring monitoring job spec. It outlines the specifications for monitoring
 * objectives, notifications, and result exports.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringSpec
 */
export type ModelMonitoringSpec = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringSpec"> & {
  /**
   * The monitoring objective spec.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec objective_spec = 1;
   */
  objectiveSpec?: ModelMonitoringObjectiveSpec;

  /**
   * The model monitoring notification spec.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec notification_spec = 2;
   */
  notificationSpec?: ModelMonitoringNotificationSpec;

  /**
   * The Output destination spec for metrics, error logs, etc.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringOutputSpec output_spec = 3;
   */
  outputSpec?: ModelMonitoringOutputSpec;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringSpec.
 * Use `create(ModelMonitoringSpecSchema)` to create a new message.
 */
export const ModelMonitoringSpecSchema: GenMessage<ModelMonitoringSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 0);

/**
 * Monitoring objectives spec.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec
 */
export type ModelMonitoringObjectiveSpec = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec"> & {
  /**
   * The monitoring objective.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.objective
   */
  objective: {
    /**
     * Tabular monitoring objective.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.TabularObjective tabular_objective = 1;
     */
    value: ModelMonitoringObjectiveSpec_TabularObjective;
    case: "tabularObjective";
  } | { case: undefined; value?: undefined };

  /**
   * The explanation spec.
   * This spec is required when the objectives spec includes feature attribution
   * objectives.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ExplanationSpec explanation_spec = 3;
   */
  explanationSpec?: ExplanationSpec;

  /**
   * Baseline dataset.
   * It could be the training dataset or production serving dataset from a
   * previous period.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringInput baseline_dataset = 4;
   */
  baselineDataset?: ModelMonitoringInput;

  /**
   * Target dataset.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringInput target_dataset = 5;
   */
  targetDataset?: ModelMonitoringInput;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.
 * Use `create(ModelMonitoringObjectiveSpecSchema)` to create a new message.
 */
export const ModelMonitoringObjectiveSpecSchema: GenMessage<ModelMonitoringObjectiveSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 1);

/**
 * Data drift monitoring spec.
 * Data drift measures the distribution distance between the current dataset
 * and a baseline dataset. A typical use case is to detect data drift between
 * the recent production serving dataset and the training dataset, or to
 * compare the recent production dataset with a dataset from a previous
 * period.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.DataDriftSpec
 */
export type ModelMonitoringObjectiveSpec_DataDriftSpec = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.DataDriftSpec"> & {
  /**
   * Feature names / Prediction output names interested in monitoring.
   * These should be a subset of the input feature names or prediction output
   * names specified in the monitoring schema.
   * If the field is not specified all features / prediction outputs outlied
   * in the monitoring schema will be used.
   *
   * @generated from field: repeated string features = 1;
   */
  features: string[];

  /**
   * Supported metrics type:
   *  * l_infinity
   *  * jensen_shannon_divergence
   *
   * @generated from field: string categorical_metric_type = 2;
   */
  categoricalMetricType: string;

  /**
   * Supported metrics type:
   *  * jensen_shannon_divergence
   *
   * @generated from field: string numeric_metric_type = 3;
   */
  numericMetricType: string;

  /**
   * Default alert condition for all the categorical features.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringAlertCondition default_categorical_alert_condition = 4;
   */
  defaultCategoricalAlertCondition?: ModelMonitoringAlertCondition;

  /**
   * Default alert condition for all the numeric features.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringAlertCondition default_numeric_alert_condition = 5;
   */
  defaultNumericAlertCondition?: ModelMonitoringAlertCondition;

  /**
   * Per feature alert condition will override default alert condition.
   *
   * @generated from field: map<string, google.cloud.aiplatform.v1beta1.ModelMonitoringAlertCondition> feature_alert_conditions = 6;
   */
  featureAlertConditions: { [key: string]: ModelMonitoringAlertCondition };
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.DataDriftSpec.
 * Use `create(ModelMonitoringObjectiveSpec_DataDriftSpecSchema)` to create a new message.
 */
export const ModelMonitoringObjectiveSpec_DataDriftSpecSchema: GenMessage<ModelMonitoringObjectiveSpec_DataDriftSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 1, 0);

/**
 * Feature attribution monitoring spec.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.FeatureAttributionSpec
 */
export type ModelMonitoringObjectiveSpec_FeatureAttributionSpec = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.FeatureAttributionSpec"> & {
  /**
   * Feature names interested in monitoring.
   * These should be a subset of the input feature names specified in the
   * monitoring schema. If the field is not specified all features outlied in
   * the monitoring schema will be used.
   *
   * @generated from field: repeated string features = 1;
   */
  features: string[];

  /**
   * Default alert condition for all the features.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringAlertCondition default_alert_condition = 2;
   */
  defaultAlertCondition?: ModelMonitoringAlertCondition;

  /**
   * Per feature alert condition will override default alert condition.
   *
   * @generated from field: map<string, google.cloud.aiplatform.v1beta1.ModelMonitoringAlertCondition> feature_alert_conditions = 3;
   */
  featureAlertConditions: { [key: string]: ModelMonitoringAlertCondition };

  /**
   * The config of resources used by the Model Monitoring during the batch
   * explanation for non-AutoML models. If not set, `n1-standard-2` machine
   * type will be used by default.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.BatchDedicatedResources batch_explanation_dedicated_resources = 4;
   */
  batchExplanationDedicatedResources?: BatchDedicatedResources;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.FeatureAttributionSpec.
 * Use `create(ModelMonitoringObjectiveSpec_FeatureAttributionSpecSchema)` to create a new message.
 */
export const ModelMonitoringObjectiveSpec_FeatureAttributionSpecSchema: GenMessage<ModelMonitoringObjectiveSpec_FeatureAttributionSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 1, 1);

/**
 * Tabular monitoring objective.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.TabularObjective
 */
export type ModelMonitoringObjectiveSpec_TabularObjective = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.TabularObjective"> & {
  /**
   * Input feature distribution drift monitoring spec.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.DataDriftSpec feature_drift_spec = 10;
   */
  featureDriftSpec?: ModelMonitoringObjectiveSpec_DataDriftSpec;

  /**
   * Prediction output distribution drift monitoring spec.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.DataDriftSpec prediction_output_drift_spec = 11;
   */
  predictionOutputDriftSpec?: ModelMonitoringObjectiveSpec_DataDriftSpec;

  /**
   * Feature attribution monitoring spec.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.FeatureAttributionSpec feature_attribution_spec = 12;
   */
  featureAttributionSpec?: ModelMonitoringObjectiveSpec_FeatureAttributionSpec;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringObjectiveSpec.TabularObjective.
 * Use `create(ModelMonitoringObjectiveSpec_TabularObjectiveSchema)` to create a new message.
 */
export const ModelMonitoringObjectiveSpec_TabularObjectiveSchema: GenMessage<ModelMonitoringObjectiveSpec_TabularObjective> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 1, 2);

/**
 * Specification for the export destination of monitoring results, including
 * metrics, logs, etc.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringOutputSpec
 */
export type ModelMonitoringOutputSpec = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringOutputSpec"> & {
  /**
   * Google Cloud Storage base folder path for metrics, error logs, etc.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.GcsDestination gcs_base_directory = 1;
   */
  gcsBaseDirectory?: GcsDestination;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringOutputSpec.
 * Use `create(ModelMonitoringOutputSpecSchema)` to create a new message.
 */
export const ModelMonitoringOutputSpecSchema: GenMessage<ModelMonitoringOutputSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 2);

/**
 * Model monitoring data input spec.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringInput
 */
export type ModelMonitoringInput = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringInput"> & {
  /**
   * Dataset source.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.ModelMonitoringInput.dataset
   */
  dataset: {
    /**
     * Columnized dataset.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset columnized_dataset = 1;
     */
    value: ModelMonitoringInput_ModelMonitoringDataset;
    case: "columnizedDataset";
  } | {
    /**
     * Vertex AI Batch prediction Job.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringInput.BatchPredictionOutput batch_prediction_output = 2;
     */
    value: ModelMonitoringInput_BatchPredictionOutput;
    case: "batchPredictionOutput";
  } | {
    /**
     * Vertex AI Endpoint request & response logging.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringInput.VertexEndpointLogs vertex_endpoint_logs = 3;
     */
    value: ModelMonitoringInput_VertexEndpointLogs;
    case: "vertexEndpointLogs";
  } | { case: undefined; value?: undefined };

  /**
   * Time specification for the dataset.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.ModelMonitoringInput.time_spec
   */
  timeSpec: {
    /**
     * The time interval (pair of start_time and end_time) for which results
     * should be returned.
     *
     * @generated from field: google.type.Interval time_interval = 6;
     */
    value: Interval;
    case: "timeInterval";
  } | {
    /**
     * The time offset setting for which results should be returned.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringInput.TimeOffset time_offset = 7;
     */
    value: ModelMonitoringInput_TimeOffset;
    case: "timeOffset";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.
 * Use `create(ModelMonitoringInputSchema)` to create a new message.
 */
export const ModelMonitoringInputSchema: GenMessage<ModelMonitoringInput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 3);

/**
 * Input dataset spec.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset
 */
export type ModelMonitoringInput_ModelMonitoringDataset = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset"> & {
  /**
   * Choose one of supported data location for columnized dataset.
   *
   * @generated from oneof google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.data_location
   */
  dataLocation: {
    /**
     * Resource name of the Vertex AI managed dataset.
     *
     * @generated from field: string vertex_dataset = 1;
     */
    value: string;
    case: "vertexDataset";
  } | {
    /**
     * Google Cloud Storage data source.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringGcsSource gcs_source = 2;
     */
    value: ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringGcsSource;
    case: "gcsSource";
  } | {
    /**
     * BigQuery data source.
     *
     * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringBigQuerySource bigquery_source = 6;
     */
    value: ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringBigQuerySource;
    case: "bigquerySource";
  } | { case: undefined; value?: undefined };

  /**
   * The timestamp field. Usually for serving data.
   *
   * @generated from field: string timestamp_field = 7;
   */
  timestampField: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.
 * Use `create(ModelMonitoringInput_ModelMonitoringDatasetSchema)` to create a new message.
 */
export const ModelMonitoringInput_ModelMonitoringDatasetSchema: GenMessage<ModelMonitoringInput_ModelMonitoringDataset> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 3, 0);

/**
 * Dataset spec for data stored in Google Cloud Storage.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringGcsSource
 */
export type ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringGcsSource = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringGcsSource"> & {
  /**
   * Google Cloud Storage URI to the input file(s). May contain
   * wildcards. For more information on wildcards, see
   * https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.
   *
   * @generated from field: string gcs_uri = 1;
   */
  gcsUri: string;

  /**
   * Data format of the dataset.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringGcsSource.DataFormat format = 2;
   */
  format: ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringGcsSource_DataFormat;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringGcsSource.
 * Use `create(ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringGcsSourceSchema)` to create a new message.
 */
export const ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringGcsSourceSchema: GenMessage<ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringGcsSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 3, 0, 0);

/**
 * Supported data format.
 *
 * @generated from enum google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringGcsSource.DataFormat
 */
export enum ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringGcsSource_DataFormat {
  /**
   * Data format unspecified, used when this field is unset.
   *
   * @generated from enum value: DATA_FORMAT_UNSPECIFIED = 0;
   */
  DATA_FORMAT_UNSPECIFIED = 0,

  /**
   * CSV files.
   *
   * @generated from enum value: CSV = 1;
   */
  CSV = 1,

  /**
   * TfRecord files
   *
   * @generated from enum value: TF_RECORD = 2;
   */
  TF_RECORD = 2,

  /**
   * JsonL files.
   *
   * @generated from enum value: JSONL = 3;
   */
  JSONL = 3,
}

/**
 * Describes the enum google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringGcsSource.DataFormat.
 */
export const ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringGcsSource_DataFormatSchema: GenEnum<ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringGcsSource_DataFormat> = /*@__PURE__*/
  enumDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 3, 0, 0, 0);

/**
 * Dataset spec for data sotred in BigQuery.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringBigQuerySource
 */
export type ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringBigQuerySource = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringBigQuerySource"> & {
  /**
   * @generated from oneof google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringBigQuerySource.connection
   */
  connection: {
    /**
     * BigQuery URI to a table, up to 2000 characters long. All the columns
     * in the table will be selected. Accepted forms:
     *
     * *  BigQuery path. For example:
     * `bq://projectId.bqDatasetId.bqTableId`.
     *
     * @generated from field: string table_uri = 1;
     */
    value: string;
    case: "tableUri";
  } | {
    /**
     * Standard SQL to be used instead of the `table_uri`.
     *
     * @generated from field: string query = 2;
     */
    value: string;
    case: "query";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.ModelMonitoringDataset.ModelMonitoringBigQuerySource.
 * Use `create(ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringBigQuerySourceSchema)` to create a new message.
 */
export const ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringBigQuerySourceSchema: GenMessage<ModelMonitoringInput_ModelMonitoringDataset_ModelMonitoringBigQuerySource> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 3, 0, 1);

/**
 * Data from Vertex AI Batch prediction job output.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.BatchPredictionOutput
 */
export type ModelMonitoringInput_BatchPredictionOutput = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringInput.BatchPredictionOutput"> & {
  /**
   * Vertex AI Batch prediction job resource name. The job must match the
   * model version specified in [ModelMonitor].[model_monitoring_target].
   *
   * @generated from field: string batch_prediction_job = 1;
   */
  batchPredictionJob: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.BatchPredictionOutput.
 * Use `create(ModelMonitoringInput_BatchPredictionOutputSchema)` to create a new message.
 */
export const ModelMonitoringInput_BatchPredictionOutputSchema: GenMessage<ModelMonitoringInput_BatchPredictionOutput> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 3, 1);

/**
 * Data from Vertex AI Endpoint request response logging.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.VertexEndpointLogs
 */
export type ModelMonitoringInput_VertexEndpointLogs = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringInput.VertexEndpointLogs"> & {
  /**
   * List of endpoint resource names. The endpoints must enable the logging
   * with the [Endpoint].[request_response_logging_config], and must contain
   * the deployed model corresponding to the model version specified in
   * [ModelMonitor].[model_monitoring_target].
   *
   * @generated from field: repeated string endpoints = 1;
   */
  endpoints: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.VertexEndpointLogs.
 * Use `create(ModelMonitoringInput_VertexEndpointLogsSchema)` to create a new message.
 */
export const ModelMonitoringInput_VertexEndpointLogsSchema: GenMessage<ModelMonitoringInput_VertexEndpointLogs> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 3, 2);

/**
 * Time offset setting.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.TimeOffset
 */
export type ModelMonitoringInput_TimeOffset = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringInput.TimeOffset"> & {
  /**
   * [offset] is the time difference from the cut-off time.
   * For scheduled jobs, the cut-off time is the scheduled time.
   * For non-scheduled jobs, it's the time when the job was created.
   * Currently we support the following format:
   * 'w|W': Week, 'd|D': Day, 'h|H': Hour
   * E.g. '1h' stands for 1 hour, '2d' stands for 2 days.
   *
   * @generated from field: string offset = 1;
   */
  offset: string;

  /**
   * [window] refers to the scope of data selected for analysis.
   * It allows you to specify the quantity of data you wish to examine.
   * Currently we support the following format:
   * 'w|W': Week, 'd|D': Day, 'h|H': Hour
   * E.g. '1h' stands for 1 hour, '2d' stands for 2 days.
   *
   * @generated from field: string window = 2;
   */
  window: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringInput.TimeOffset.
 * Use `create(ModelMonitoringInput_TimeOffsetSchema)` to create a new message.
 */
export const ModelMonitoringInput_TimeOffsetSchema: GenMessage<ModelMonitoringInput_TimeOffset> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 3, 3);

/**
 * Notification spec(email, notification channel) for model monitoring
 * statistics/alerts.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec
 */
export type ModelMonitoringNotificationSpec = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec"> & {
  /**
   * Email alert config.
   *
   * @generated from field: google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec.EmailConfig email_config = 1;
   */
  emailConfig?: ModelMonitoringNotificationSpec_EmailConfig;

  /**
   * Dump the anomalies to Cloud Logging. The anomalies will be put to json
   * payload encoded from proto
   * [google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry][].
   * This can be further sinked to Pub/Sub or any other services supported
   * by Cloud Logging.
   *
   * @generated from field: bool enable_cloud_logging = 2;
   */
  enableCloudLogging: boolean;

  /**
   * Notification channel config.
   *
   * @generated from field: repeated google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec.NotificationChannelConfig notification_channel_configs = 3;
   */
  notificationChannelConfigs: ModelMonitoringNotificationSpec_NotificationChannelConfig[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec.
 * Use `create(ModelMonitoringNotificationSpecSchema)` to create a new message.
 */
export const ModelMonitoringNotificationSpecSchema: GenMessage<ModelMonitoringNotificationSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 4);

/**
 * The config for email alerts.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec.EmailConfig
 */
export type ModelMonitoringNotificationSpec_EmailConfig = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec.EmailConfig"> & {
  /**
   * The email addresses to send the alerts.
   *
   * @generated from field: repeated string user_emails = 1;
   */
  userEmails: string[];
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec.EmailConfig.
 * Use `create(ModelMonitoringNotificationSpec_EmailConfigSchema)` to create a new message.
 */
export const ModelMonitoringNotificationSpec_EmailConfigSchema: GenMessage<ModelMonitoringNotificationSpec_EmailConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 4, 0);

/**
 * Google Cloud Notification Channel config.
 *
 * @generated from message google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec.NotificationChannelConfig
 */
export type ModelMonitoringNotificationSpec_NotificationChannelConfig = Message<"google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec.NotificationChannelConfig"> & {
  /**
   * Resource names of the NotificationChannels.
   * Must be of the format
   * `projects/<project_id_or_number>/notificationChannels/<channel_id>`
   *
   * @generated from field: string notification_channel = 1;
   */
  notificationChannel: string;
};

/**
 * Describes the message google.cloud.aiplatform.v1beta1.ModelMonitoringNotificationSpec.NotificationChannelConfig.
 * Use `create(ModelMonitoringNotificationSpec_NotificationChannelConfigSchema)` to create a new message.
 */
export const ModelMonitoringNotificationSpec_NotificationChannelConfigSchema: GenMessage<ModelMonitoringNotificationSpec_NotificationChannelConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_aiplatform_v1beta1_model_monitoring_spec, 4, 1);

