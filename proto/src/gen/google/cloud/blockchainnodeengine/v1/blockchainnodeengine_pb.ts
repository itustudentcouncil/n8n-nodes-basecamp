// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/blockchainnodeengine/v1/blockchainnodeengine.proto (package google.cloud.blockchainnodeengine.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/blockchainnodeengine/v1/blockchainnodeengine.proto.
 */
export const file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * A representation of a blockchain node.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.BlockchainNode
 */
export type BlockchainNode = Message<"google.cloud.blockchainnodeengine.v1.BlockchainNode"> & {
  /**
   * Information that is specific to a particular blockchain type.
   *
   * @generated from oneof google.cloud.blockchainnodeengine.v1.BlockchainNode.blockchain_type_details
   */
  blockchainTypeDetails: {
    /**
     * Ethereum-specific blockchain node details.
     *
     * @generated from field: google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails ethereum_details = 7;
     */
    value: BlockchainNode_EthereumDetails;
    case: "ethereumDetails";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The fully qualified name of the blockchain node.
   * e.g. `projects/my-project/locations/us-central1/blockchainNodes/my-node`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The timestamp at which the blockchain node was first created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The timestamp at which the blockchain node was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * User-provided key-value pairs.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Immutable. The blockchain type of the node.
   *
   * @generated from field: optional google.cloud.blockchainnodeengine.v1.BlockchainNode.BlockchainType blockchain_type = 5;
   */
  blockchainType?: BlockchainNode_BlockchainType;

  /**
   * Output only. The connection information used to interact with a blockchain
   * node.
   *
   * @generated from field: google.cloud.blockchainnodeengine.v1.BlockchainNode.ConnectionInfo connection_info = 6;
   */
  connectionInfo?: BlockchainNode_ConnectionInfo;

  /**
   * Output only. A status representing the state of the node.
   *
   * @generated from field: google.cloud.blockchainnodeengine.v1.BlockchainNode.State state = 8;
   */
  state: BlockchainNode_State;

  /**
   * Optional. When true, the node is only accessible via Private Service
   * Connect; no public endpoints are exposed. Otherwise, the node is only
   * accessible via public endpoints. Warning: Private Service Connect enabled
   * nodes may require a manual migration effort to remain compatible with
   * future versions of the product. If this feature is enabled, you will be
   * notified of these changes along with any required action to avoid
   * disruption. See https://cloud.google.com/vpc/docs/private-service-connect.
   *
   * @generated from field: bool private_service_connect_enabled = 12;
   */
  privateServiceConnectEnabled: boolean;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.BlockchainNode.
 * Use `create(BlockchainNodeSchema)` to create a new message.
 */
export const BlockchainNodeSchema: GenMessage<BlockchainNode> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0);

/**
 * The connection information through which to interact with a blockchain
 * node.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.BlockchainNode.ConnectionInfo
 */
export type BlockchainNode_ConnectionInfo = Message<"google.cloud.blockchainnodeengine.v1.BlockchainNode.ConnectionInfo"> & {
  /**
   * Output only. The endpoint information through which to interact with a
   * blockchain node.
   *
   * @generated from field: google.cloud.blockchainnodeengine.v1.BlockchainNode.ConnectionInfo.EndpointInfo endpoint_info = 2;
   */
  endpointInfo?: BlockchainNode_ConnectionInfo_EndpointInfo;

  /**
   * Output only. A service attachment that exposes a node, and has the
   * following format:
   * projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}
   *
   * @generated from field: string service_attachment = 3;
   */
  serviceAttachment: string;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.BlockchainNode.ConnectionInfo.
 * Use `create(BlockchainNode_ConnectionInfoSchema)` to create a new message.
 */
export const BlockchainNode_ConnectionInfoSchema: GenMessage<BlockchainNode_ConnectionInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 0);

/**
 * Contains endpoint information through which to interact with a blockchain
 * node.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.BlockchainNode.ConnectionInfo.EndpointInfo
 */
export type BlockchainNode_ConnectionInfo_EndpointInfo = Message<"google.cloud.blockchainnodeengine.v1.BlockchainNode.ConnectionInfo.EndpointInfo"> & {
  /**
   * Output only. The assigned URL for the node JSON-RPC API endpoint.
   *
   * @generated from field: string json_rpc_api_endpoint = 1;
   */
  jsonRpcApiEndpoint: string;

  /**
   * Output only. The assigned URL for the node WebSockets API endpoint.
   *
   * @generated from field: string websockets_api_endpoint = 2;
   */
  websocketsApiEndpoint: string;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.BlockchainNode.ConnectionInfo.EndpointInfo.
 * Use `create(BlockchainNode_ConnectionInfo_EndpointInfoSchema)` to create a new message.
 */
export const BlockchainNode_ConnectionInfo_EndpointInfoSchema: GenMessage<BlockchainNode_ConnectionInfo_EndpointInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 0, 0);

/**
 * Ethereum-specific blockchain node details.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails
 */
export type BlockchainNode_EthereumDetails = Message<"google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails"> & {
  /**
   * Options for the execution client.
   *
   * @generated from oneof google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.execution_client_details
   */
  executionClientDetails: {
    /**
     * Details for the Geth execution client.
     *
     * @generated from field: google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.GethDetails geth_details = 8;
     */
    value: BlockchainNode_EthereumDetails_GethDetails;
    case: "gethDetails";
  } | { case: undefined; value?: undefined };

  /**
   * Immutable. The Ethereum environment being accessed.
   *
   * @generated from field: optional google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.Network network = 1;
   */
  network?: BlockchainNode_EthereumDetails_Network;

  /**
   * Immutable. The type of Ethereum node.
   *
   * @generated from field: optional google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.NodeType node_type = 2;
   */
  nodeType?: BlockchainNode_EthereumDetails_NodeType;

  /**
   * Immutable. The execution client
   *
   * @generated from field: optional google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.ExecutionClient execution_client = 3;
   */
  executionClient?: BlockchainNode_EthereumDetails_ExecutionClient;

  /**
   * Immutable. The consensus client.
   *
   * @generated from field: optional google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.ConsensusClient consensus_client = 4;
   */
  consensusClient?: BlockchainNode_EthereumDetails_ConsensusClient;

  /**
   * Immutable. Enables JSON-RPC access to functions in the `admin` namespace.
   * Defaults to `false`.
   *
   * @generated from field: optional bool api_enable_admin = 5;
   */
  apiEnableAdmin?: boolean;

  /**
   * Immutable. Enables JSON-RPC access to functions in the `debug` namespace.
   * Defaults to `false`.
   *
   * @generated from field: optional bool api_enable_debug = 6;
   */
  apiEnableDebug?: boolean;

  /**
   * Output only. Ethereum-specific endpoint information.
   *
   * @generated from field: optional google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.EthereumEndpoints additional_endpoints = 7;
   */
  additionalEndpoints?: BlockchainNode_EthereumDetails_EthereumEndpoints;

  /**
   * Configuration for validator-related parameters on the beacon client,
   * and for any GCP-managed validator client.
   *
   * @generated from field: optional google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.ValidatorConfig validator_config = 10;
   */
  validatorConfig?: BlockchainNode_EthereumDetails_ValidatorConfig;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.
 * Use `create(BlockchainNode_EthereumDetailsSchema)` to create a new message.
 */
export const BlockchainNode_EthereumDetailsSchema: GenMessage<BlockchainNode_EthereumDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 1);

/**
 * Options for the Geth execution client.
 *
 * See [Command-line
 * Options](https://geth.ethereum.org/docs/fundamentals/command-line-options)
 * for more details.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.GethDetails
 */
export type BlockchainNode_EthereumDetails_GethDetails = Message<"google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.GethDetails"> & {
  /**
   * Immutable. Blockchain garbage collection mode.
   *
   * @generated from field: optional google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.GethDetails.GarbageCollectionMode garbage_collection_mode = 1;
   */
  garbageCollectionMode?: BlockchainNode_EthereumDetails_GethDetails_GarbageCollectionMode;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.GethDetails.
 * Use `create(BlockchainNode_EthereumDetails_GethDetailsSchema)` to create a new message.
 */
export const BlockchainNode_EthereumDetails_GethDetailsSchema: GenMessage<BlockchainNode_EthereumDetails_GethDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 1, 0);

/**
 * Blockchain garbage collection modes. Only applicable when `NodeType` is
 * `FULL` or `ARCHIVE`.
 *
 * @generated from enum google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.GethDetails.GarbageCollectionMode
 */
export enum BlockchainNode_EthereumDetails_GethDetails_GarbageCollectionMode {
  /**
   * The garbage collection has not been specified.
   *
   * @generated from enum value: GARBAGE_COLLECTION_MODE_UNSPECIFIED = 0;
   */
  GARBAGE_COLLECTION_MODE_UNSPECIFIED = 0,

  /**
   * Configures Geth's garbage collection so that older data not needed
   * for a full node is deleted. This is the default mode when creating a
   * full node.
   *
   * @generated from enum value: FULL = 1;
   */
  FULL = 1,

  /**
   * Configures Geth's garbage collection so that old data is never
   * deleted. This is the default mode when creating an archive node. This
   * value can also be chosen when creating a full node in order to create
   * a partial/recent archive node. See
   * [Sync modes](https://geth.ethereum.org/docs/fundamentals/sync-modes)
   * for more details.
   *
   * @generated from enum value: ARCHIVE = 2;
   */
  ARCHIVE = 2,
}

/**
 * Describes the enum google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.GethDetails.GarbageCollectionMode.
 */
export const BlockchainNode_EthereumDetails_GethDetails_GarbageCollectionModeSchema: GenEnum<BlockchainNode_EthereumDetails_GethDetails_GarbageCollectionMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 1, 0, 0);

/**
 * Contains endpoint information specific to Ethereum nodes.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.EthereumEndpoints
 */
export type BlockchainNode_EthereumDetails_EthereumEndpoints = Message<"google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.EthereumEndpoints"> & {
  /**
   * Output only. The assigned URL for the node's Beacon API endpoint.
   *
   * @generated from field: string beacon_api_endpoint = 1;
   */
  beaconApiEndpoint: string;

  /**
   * Output only. The assigned URL for the node's Beacon Prometheus metrics
   * endpoint. See [Prometheus
   * Metrics](https://lighthouse-book.sigmaprime.io/advanced_metrics.html)
   * for more details.
   *
   * @generated from field: string beacon_prometheus_metrics_api_endpoint = 2;
   */
  beaconPrometheusMetricsApiEndpoint: string;

  /**
   * Output only. The assigned URL for the node's execution client's
   * Prometheus metrics endpoint.
   *
   * @generated from field: string execution_client_prometheus_metrics_api_endpoint = 3;
   */
  executionClientPrometheusMetricsApiEndpoint: string;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.EthereumEndpoints.
 * Use `create(BlockchainNode_EthereumDetails_EthereumEndpointsSchema)` to create a new message.
 */
export const BlockchainNode_EthereumDetails_EthereumEndpointsSchema: GenMessage<BlockchainNode_EthereumDetails_EthereumEndpoints> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 1, 1);

/**
 * Configuration for validator-related parameters on the beacon client,
 * and for any GCP-managed validator client.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.ValidatorConfig
 */
export type BlockchainNode_EthereumDetails_ValidatorConfig = Message<"google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.ValidatorConfig"> & {
  /**
   * URLs for MEV-relay services to use for block building. When set, a
   * GCP-managed MEV-boost service is configured on the beacon client.
   *
   * @generated from field: repeated string mev_relay_urls = 1;
   */
  mevRelayUrls: string[];

  /**
   * Immutable. When true, deploys a GCP-managed validator client alongside
   * the beacon client.
   *
   * @generated from field: bool managed_validator_client = 2;
   */
  managedValidatorClient: boolean;

  /**
   * An Ethereum address which the beacon client will send fee rewards to if
   * no recipient is configured in the validator client.
   *
   * See https://lighthouse-book.sigmaprime.io/suggested-fee-recipient.html
   * or https://docs.prylabs.network/docs/execution-node/fee-recipient for
   * examples of how this is used.
   *
   * Note that while this is often described as "suggested", as we run the
   * execution node we can trust the execution node, and therefore this is
   * considered enforced.
   *
   * @generated from field: optional string beacon_fee_recipient = 3;
   */
  beaconFeeRecipient?: string;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.ValidatorConfig.
 * Use `create(BlockchainNode_EthereumDetails_ValidatorConfigSchema)` to create a new message.
 */
export const BlockchainNode_EthereumDetails_ValidatorConfigSchema: GenMessage<BlockchainNode_EthereumDetails_ValidatorConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 1, 2);

/**
 * The Ethereum environment being accessed.
 *
 * See [Networks](https://ethereum.org/en/developers/docs/networks)
 * for more details.
 *
 * @generated from enum google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.Network
 */
export enum BlockchainNode_EthereumDetails_Network {
  /**
   * The network has not been specified, but should be.
   *
   * @generated from enum value: NETWORK_UNSPECIFIED = 0;
   */
  NETWORK_UNSPECIFIED = 0,

  /**
   * The Ethereum Mainnet.
   *
   * @generated from enum value: MAINNET = 1;
   */
  MAINNET = 1,

  /**
   * Deprecated: The Ethereum Testnet based on Goerli protocol. Please
   * use another test network.
   *
   * @generated from enum value: TESTNET_GOERLI_PRATER = 2 [deprecated = true];
   * @deprecated
   */
  TESTNET_GOERLI_PRATER = 2,

  /**
   * The Ethereum Testnet based on Sepolia/Bepolia protocol.
   * See https://github.com/eth-clients/sepolia.
   *
   * @generated from enum value: TESTNET_SEPOLIA = 3;
   */
  TESTNET_SEPOLIA = 3,

  /**
   * The Ethereum Testnet based on Holesky specification.
   * See https://github.com/eth-clients/holesky.
   *
   * @generated from enum value: TESTNET_HOLESKY = 4;
   */
  TESTNET_HOLESKY = 4,
}

/**
 * Describes the enum google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.Network.
 */
export const BlockchainNode_EthereumDetails_NetworkSchema: GenEnum<BlockchainNode_EthereumDetails_Network> = /*@__PURE__*/
  enumDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 1, 0);

/**
 * The type of Ethereum node.
 *
 * See
 * [Node
 * Types](https://ethereum.org/en/developers/docs/nodes-and-clients/#node-types)
 * for more details.
 *
 * @generated from enum google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.NodeType
 */
export enum BlockchainNode_EthereumDetails_NodeType {
  /**
   * Node type has not been specified, but should be.
   *
   * @generated from enum value: NODE_TYPE_UNSPECIFIED = 0;
   */
  NODE_TYPE_UNSPECIFIED = 0,

  /**
   * An Ethereum node that only downloads Ethereum block headers.
   *
   * @generated from enum value: LIGHT = 1;
   */
  LIGHT = 1,

  /**
   * Keeps a complete copy of the blockchain data, and contributes to the
   * network by receiving, validating, and forwarding transactions.
   *
   * @generated from enum value: FULL = 2;
   */
  FULL = 2,

  /**
   * Holds the same data as full node as well as all of the blockchain's
   * history state data dating back to the Genesis Block.
   *
   * @generated from enum value: ARCHIVE = 3;
   */
  ARCHIVE = 3,
}

/**
 * Describes the enum google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.NodeType.
 */
export const BlockchainNode_EthereumDetails_NodeTypeSchema: GenEnum<BlockchainNode_EthereumDetails_NodeType> = /*@__PURE__*/
  enumDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 1, 1);

/**
 * The execution client (i.e., Execution Engine or EL client) listens to new
 * transactions broadcast in the network, executes them in EVM, and holds
 * the latest state and database of all current Ethereum data.
 *
 * See
 * [What are nodes and
 * clients?](https://ethereum.org/en/developers/docs/nodes-and-clients/#what-are-nodes-and-clients)
 * for more details.
 *
 * @generated from enum google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.ExecutionClient
 */
export enum BlockchainNode_EthereumDetails_ExecutionClient {
  /**
   * Execution client has not been specified, but should be.
   *
   * @generated from enum value: EXECUTION_CLIENT_UNSPECIFIED = 0;
   */
  EXECUTION_CLIENT_UNSPECIFIED = 0,

  /**
   * Official Go implementation of the Ethereum protocol.
   * See [go-ethereum](https://geth.ethereum.org/) for details.
   *
   * @generated from enum value: GETH = 1;
   */
  GETH = 1,

  /**
   * An implementation of Ethereum (execution client), on the efficiency
   * frontier, written in Go. See [Erigon on
   * GitHub](https://github.com/ledgerwatch/erigon) for details.
   *
   * @generated from enum value: ERIGON = 2;
   */
  ERIGON = 2,
}

/**
 * Describes the enum google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.ExecutionClient.
 */
export const BlockchainNode_EthereumDetails_ExecutionClientSchema: GenEnum<BlockchainNode_EthereumDetails_ExecutionClient> = /*@__PURE__*/
  enumDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 1, 2);

/**
 * The consensus client (also referred to as beacon node or CL client)
 * implements the proof-of-stake consensus algorithm, which enables the
 * network to achieve agreement based on validated data from the
 * execution client.
 *
 * See
 * [What are nodes and
 * clients?](https://ethereum.org/en/developers/docs/nodes-and-clients/#what-are-nodes-and-clients)
 * for more details.
 *
 * @generated from enum google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.ConsensusClient
 */
export enum BlockchainNode_EthereumDetails_ConsensusClient {
  /**
   * Consensus client has not been specified, but should be.
   *
   * @generated from enum value: CONSENSUS_CLIENT_UNSPECIFIED = 0;
   */
  CONSENSUS_CLIENT_UNSPECIFIED = 0,

  /**
   * Consensus client implementation written in Rust, maintained by Sigma
   * Prime. See [Lighthouse - Sigma
   * Prime](https://lighthouse.sigmaprime.io/) for details.
   *
   * @generated from enum value: LIGHTHOUSE = 1;
   */
  LIGHTHOUSE = 1,
}

/**
 * Describes the enum google.cloud.blockchainnodeengine.v1.BlockchainNode.EthereumDetails.ConsensusClient.
 */
export const BlockchainNode_EthereumDetails_ConsensusClientSchema: GenEnum<BlockchainNode_EthereumDetails_ConsensusClient> = /*@__PURE__*/
  enumDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 1, 3);

/**
 * The blockchain type of the node.
 *
 * @generated from enum google.cloud.blockchainnodeengine.v1.BlockchainNode.BlockchainType
 */
export enum BlockchainNode_BlockchainType {
  /**
   * Blockchain type has not been specified, but should be.
   *
   * @generated from enum value: BLOCKCHAIN_TYPE_UNSPECIFIED = 0;
   */
  BLOCKCHAIN_TYPE_UNSPECIFIED = 0,

  /**
   * The blockchain type is Ethereum.
   *
   * @generated from enum value: ETHEREUM = 1;
   */
  ETHEREUM = 1,
}

/**
 * Describes the enum google.cloud.blockchainnodeengine.v1.BlockchainNode.BlockchainType.
 */
export const BlockchainNode_BlockchainTypeSchema: GenEnum<BlockchainNode_BlockchainType> = /*@__PURE__*/
  enumDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 0);

/**
 * All possible states for a given blockchain node.
 *
 * @generated from enum google.cloud.blockchainnodeengine.v1.BlockchainNode.State
 */
export enum BlockchainNode_State {
  /**
   * The state has not been specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The node has been requested and is in the process of being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The existing node is undergoing deletion, but is not yet finished.
   *
   * @generated from enum value: DELETING = 2;
   */
  DELETING = 2,

  /**
   * The node is running and ready for use.
   *
   * @generated from enum value: RUNNING = 4;
   */
  RUNNING = 4,

  /**
   * The node is in an unexpected or errored state.
   *
   * @generated from enum value: ERROR = 5;
   */
  ERROR = 5,

  /**
   * The node is currently being updated.
   *
   * @generated from enum value: UPDATING = 6;
   */
  UPDATING = 6,

  /**
   * The node is currently being repaired.
   *
   * @generated from enum value: REPAIRING = 7;
   */
  REPAIRING = 7,

  /**
   * The node is currently being reconciled.
   *
   * @generated from enum value: RECONCILING = 8;
   */
  RECONCILING = 8,

  /**
   * The node is syncing, which is the process by which it obtains the latest
   * block and current global state.
   *
   * @generated from enum value: SYNCING = 9;
   */
  SYNCING = 9,
}

/**
 * Describes the enum google.cloud.blockchainnodeengine.v1.BlockchainNode.State.
 */
export const BlockchainNode_StateSchema: GenEnum<BlockchainNode_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0, 1);

/**
 * Message for requesting list of blockchain nodes.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.ListBlockchainNodesRequest
 */
export type ListBlockchainNodesRequest = Message<"google.cloud.blockchainnodeengine.v1.ListBlockchainNodesRequest"> & {
  /**
   * Required. Parent value for `ListNodesRequest`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.ListBlockchainNodesRequest.
 * Use `create(ListBlockchainNodesRequestSchema)` to create a new message.
 */
export const ListBlockchainNodesRequestSchema: GenMessage<ListBlockchainNodesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 1);

/**
 * Message for response to listing blockchain nodes.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.ListBlockchainNodesResponse
 */
export type ListBlockchainNodesResponse = Message<"google.cloud.blockchainnodeengine.v1.ListBlockchainNodesResponse"> & {
  /**
   * The list of nodes
   *
   * @generated from field: repeated google.cloud.blockchainnodeengine.v1.BlockchainNode blockchain_nodes = 1;
   */
  blockchainNodes: BlockchainNode[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.ListBlockchainNodesResponse.
 * Use `create(ListBlockchainNodesResponseSchema)` to create a new message.
 */
export const ListBlockchainNodesResponseSchema: GenMessage<ListBlockchainNodesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 2);

/**
 * Message for getting a blockchain node.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.GetBlockchainNodeRequest
 */
export type GetBlockchainNodeRequest = Message<"google.cloud.blockchainnodeengine.v1.GetBlockchainNodeRequest"> & {
  /**
   * Required. The fully qualified name of the blockchain node to fetch.
   * e.g. `projects/my-project/locations/us-central1/blockchainNodes/my-node`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.GetBlockchainNodeRequest.
 * Use `create(GetBlockchainNodeRequestSchema)` to create a new message.
 */
export const GetBlockchainNodeRequestSchema: GenMessage<GetBlockchainNodeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 3);

/**
 * Message for creating a blockchain node.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.CreateBlockchainNodeRequest
 */
export type CreateBlockchainNodeRequest = Message<"google.cloud.blockchainnodeengine.v1.CreateBlockchainNodeRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. ID of the requesting object.
   *
   * @generated from field: string blockchain_node_id = 2;
   */
  blockchainNodeId: string;

  /**
   * Required. The resource being created.
   *
   * @generated from field: google.cloud.blockchainnodeengine.v1.BlockchainNode blockchain_node = 3;
   */
  blockchainNode?: BlockchainNode;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.CreateBlockchainNodeRequest.
 * Use `create(CreateBlockchainNodeRequestSchema)` to create a new message.
 */
export const CreateBlockchainNodeRequestSchema: GenMessage<CreateBlockchainNodeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 4);

/**
 * Message for updating a blockchain node.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.UpdateBlockchainNodeRequest
 */
export type UpdateBlockchainNodeRequest = Message<"google.cloud.blockchainnodeengine.v1.UpdateBlockchainNodeRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Blockchain node resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The resource being updated.
   *
   * @generated from field: google.cloud.blockchainnodeengine.v1.BlockchainNode blockchain_node = 2;
   */
  blockchainNode?: BlockchainNode;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.UpdateBlockchainNodeRequest.
 * Use `create(UpdateBlockchainNodeRequestSchema)` to create a new message.
 */
export const UpdateBlockchainNodeRequestSchema: GenMessage<UpdateBlockchainNodeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 5);

/**
 * Message for deleting a blockchain node.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.DeleteBlockchainNodeRequest
 */
export type DeleteBlockchainNodeRequest = Message<"google.cloud.blockchainnodeengine.v1.DeleteBlockchainNodeRequest"> & {
  /**
   * Required. The fully qualified name of the blockchain node to delete.
   * e.g. `projects/my-project/locations/us-central1/blockchainNodes/my-node`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.DeleteBlockchainNodeRequest.
 * Use `create(DeleteBlockchainNodeRequestSchema)` to create a new message.
 */
export const DeleteBlockchainNodeRequestSchema: GenMessage<DeleteBlockchainNodeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 6);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.blockchainnodeengine.v1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.blockchainnodeengine.v1.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. Identifies whether the user has requested cancellation
   * of the operation. Operations that have been cancelled successfully
   * have `[Operation.error][]` value with a
   * `[google.rpc.Status.code][google.rpc.Status.code]` of `1`, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.blockchainnodeengine.v1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 7);

/**
 * This service is the control plane API for Blockchain Node Engine,
 * and can be used to create, read, and delete blockchain nodes.
 *
 * @generated from service google.cloud.blockchainnodeengine.v1.BlockchainNodeEngine
 */
export const BlockchainNodeEngine: GenService<{
  /**
   * Lists blockchain nodes in a given project and location.
   *
   * @generated from rpc google.cloud.blockchainnodeengine.v1.BlockchainNodeEngine.ListBlockchainNodes
   */
  listBlockchainNodes: {
    methodKind: "unary";
    input: typeof ListBlockchainNodesRequestSchema;
    output: typeof ListBlockchainNodesResponseSchema;
  },
  /**
   * Gets details of a single blockchain node.
   *
   * @generated from rpc google.cloud.blockchainnodeengine.v1.BlockchainNodeEngine.GetBlockchainNode
   */
  getBlockchainNode: {
    methodKind: "unary";
    input: typeof GetBlockchainNodeRequestSchema;
    output: typeof BlockchainNodeSchema;
  },
  /**
   * Creates a new blockchain node in a given project and location.
   *
   * @generated from rpc google.cloud.blockchainnodeengine.v1.BlockchainNodeEngine.CreateBlockchainNode
   */
  createBlockchainNode: {
    methodKind: "unary";
    input: typeof CreateBlockchainNodeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single blockchain node.
   *
   * @generated from rpc google.cloud.blockchainnodeengine.v1.BlockchainNodeEngine.UpdateBlockchainNode
   */
  updateBlockchainNode: {
    methodKind: "unary";
    input: typeof UpdateBlockchainNodeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single blockchain node.
   *
   * @generated from rpc google.cloud.blockchainnodeengine.v1.BlockchainNodeEngine.DeleteBlockchainNode
   */
  deleteBlockchainNode: {
    methodKind: "unary";
    input: typeof DeleteBlockchainNodeRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_blockchainnodeengine_v1_blockchainnodeengine, 0);

