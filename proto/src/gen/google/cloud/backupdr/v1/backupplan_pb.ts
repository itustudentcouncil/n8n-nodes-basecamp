// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/backupdr/v1/backupplan.proto (package google.cloud.backupdr.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_field_info } from "../../../api/field_info_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { DayOfWeek } from "../../../type/dayofweek_pb";
import { file_google_type_dayofweek } from "../../../type/dayofweek_pb";
import type { Month } from "../../../type/month_pb";
import { file_google_type_month } from "../../../type/month_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/backupdr/v1/backupplan.proto.
 */
export const file_google_cloud_backupdr_v1_backupplan: GenFile = /*@__PURE__*/
  fileDesc("Cilnb29nbGUvY2xvdWQvYmFja3VwZHIvdjEvYmFja3VwcGxhbi5wcm90bxIYZ29vZ2xlLmNsb3VkLmJhY2t1cGRyLnYxIpkGCgpCYWNrdXBQbGFuEhQKBG5hbWUYASABKAlCBuBBA+BBCBIYCgtkZXNjcmlwdGlvbhgCIAEoCUID4EEBEkUKBmxhYmVscxgDIAMoCzIwLmdvb2dsZS5jbG91ZC5iYWNrdXBkci52MS5CYWNrdXBQbGFuLkxhYmVsc0VudHJ5QgPgQQESNAoLY3JlYXRlX3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSPwoMYmFja3VwX3J1bGVzGAYgAygLMiQuZ29vZ2xlLmNsb3VkLmJhY2t1cGRyLnYxLkJhY2t1cFJ1bGVCA+BBAhI+CgVzdGF0ZRgHIAEoDjIqLmdvb2dsZS5jbG91ZC5iYWNrdXBkci52MS5CYWNrdXBQbGFuLlN0YXRlQgPgQQMSGgoNcmVzb3VyY2VfdHlwZRgIIAEoCUID4EECEhEKBGV0YWcYCSABKAlCA+BBARJBCgxiYWNrdXBfdmF1bHQYCiABKAlCK+BBAvpBJQojYmFja3VwZHIuZ29vZ2xlYXBpcy5jb20vQmFja3VwVmF1bHQSKQocYmFja3VwX3ZhdWx0X3NlcnZpY2VfYWNjb3VudBgLIAEoCUID4EEDGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiVAoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIMCghDUkVBVElORxABEgoKBkFDVElWRRACEgwKCERFTEVUSU5HEAMSDAoISU5BQ1RJVkUQBDqEAepBgAEKImJhY2t1cGRyLmdvb2dsZWFwaXMuY29tL0JhY2t1cFBsYW4SQXByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9iYWNrdXBQbGFucy97YmFja3VwX3BsYW59KgtiYWNrdXBQbGFuczIKYmFja3VwUGxhbiKwAQoKQmFja3VwUnVsZRIXCgdydWxlX2lkGAEgASgJQgbgQQLgQQUSIgoVYmFja3VwX3JldGVudGlvbl9kYXlzGAQgASgFQgPgQQISTAoRc3RhbmRhcmRfc2NoZWR1bGUYBSABKAsyKi5nb29nbGUuY2xvdWQuYmFja3VwZHIudjEuU3RhbmRhcmRTY2hlZHVsZUID4EECSABCFwoVYmFja3VwX3NjaGVkdWxlX29uZW9mIpcEChBTdGFuZGFyZFNjaGVkdWxlElcKD3JlY3VycmVuY2VfdHlwZRgBIAEoDjI5Lmdvb2dsZS5jbG91ZC5iYWNrdXBkci52MS5TdGFuZGFyZFNjaGVkdWxlLlJlY3VycmVuY2VUeXBlQgPgQQISHQoQaG91cmx5X2ZyZXF1ZW5jeRgCIAEoBUID4EEBEjEKDGRheXNfb2Zfd2VlaxgDIAMoDjIWLmdvb2dsZS50eXBlLkRheU9mV2Vla0ID4EEBEhoKDWRheXNfb2ZfbW9udGgYBCADKAVCA+BBARJIChF3ZWVrX2RheV9vZl9tb250aBgFIAEoCzIoLmdvb2dsZS5jbG91ZC5iYWNrdXBkci52MS5XZWVrRGF5T2ZNb250aEID4EEBEicKBm1vbnRocxgGIAMoDjISLmdvb2dsZS50eXBlLk1vbnRoQgPgQQESQgoNYmFja3VwX3dpbmRvdxgHIAEoCzImLmdvb2dsZS5jbG91ZC5iYWNrdXBkci52MS5CYWNrdXBXaW5kb3dCA+BBAhIWCgl0aW1lX3pvbmUYCCABKAlCA+BBAiJtCg5SZWN1cnJlbmNlVHlwZRIfChtSRUNVUlJFTkNFX1RZUEVfVU5TUEVDSUZJRUQQABIKCgZIT1VSTFkQARIJCgVEQUlMWRACEgoKBldFRUtMWRADEgsKB01PTlRITFkQBBIKCgZZRUFSTFkQBSJMCgxCYWNrdXBXaW5kb3cSHgoRc3RhcnRfaG91cl9vZl9kYXkYASABKAVCA+BBAhIcCg9lbmRfaG91cl9vZl9kYXkYAiABKAVCA+BBAiL6AQoOV2Vla0RheU9mTW9udGgSUAoNd2Vla19vZl9tb250aBgBIAEoDjI0Lmdvb2dsZS5jbG91ZC5iYWNrdXBkci52MS5XZWVrRGF5T2ZNb250aC5XZWVrT2ZNb250aEID4EECEjAKC2RheV9vZl93ZWVrGAIgASgOMhYuZ29vZ2xlLnR5cGUuRGF5T2ZXZWVrQgPgQQIiZAoLV2Vla09mTW9udGgSHQoZV0VFS19PRl9NT05USF9VTlNQRUNJRklFRBAAEgkKBUZJUlNUEAESCgoGU0VDT05EEAISCQoFVEhJUkQQAxIKCgZGT1VSVEgQBBIICgRMQVNUEAUi0wEKF0NyZWF0ZUJhY2t1cFBsYW5SZXF1ZXN0EjoKBnBhcmVudBgBIAEoCUIq4EEC+kEkEiJiYWNrdXBkci5nb29nbGVhcGlzLmNvbS9CYWNrdXBQbGFuEhsKDmJhY2t1cF9wbGFuX2lkGAIgASgJQgPgQQISPgoLYmFja3VwX3BsYW4YAyABKAsyJC5nb29nbGUuY2xvdWQuYmFja3VwZHIudjEuQmFja3VwUGxhbkID4EECEh8KCnJlcXVlc3RfaWQYBCABKAlCC+BBAeKMz9cIAggBIrEBChZMaXN0QmFja3VwUGxhbnNSZXF1ZXN0EjoKBnBhcmVudBgBIAEoCUIq4EEC+kEkEiJiYWNrdXBkci5nb29nbGVhcGlzLmNvbS9CYWNrdXBQbGFuEhYKCXBhZ2Vfc2l6ZRgCIAEoBUID4EEBEhcKCnBhZ2VfdG9rZW4YAyABKAlCA+BBARITCgZmaWx0ZXIYBCABKAlCA+BBARIVCghvcmRlcl9ieRgFIAEoCUID4EEBIoMBChdMaXN0QmFja3VwUGxhbnNSZXNwb25zZRI6CgxiYWNrdXBfcGxhbnMYASADKAsyJC5nb29nbGUuY2xvdWQuYmFja3VwZHIudjEuQmFja3VwUGxhbhIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSEwoLdW5yZWFjaGFibGUYAyADKAkiUAoUR2V0QmFja3VwUGxhblJlcXVlc3QSOAoEbmFtZRgBIAEoCUIq4EEC+kEkCiJiYWNrdXBkci5nb29nbGVhcGlzLmNvbS9CYWNrdXBQbGFuInQKF0RlbGV0ZUJhY2t1cFBsYW5SZXF1ZXN0EjgKBG5hbWUYASABKAlCKuBBAvpBJAoiYmFja3VwZHIuZ29vZ2xlYXBpcy5jb20vQmFja3VwUGxhbhIfCgpyZXF1ZXN0X2lkGAIgASgJQgvgQQHijM/XCAIIAUK/AQocY29tLmdvb2dsZS5jbG91ZC5iYWNrdXBkci52MUIPQmFja3VwUGxhblByb3RvUAFaOGNsb3VkLmdvb2dsZS5jb20vZ28vYmFja3VwZHIvYXBpdjEvYmFja3VwZHJwYjtiYWNrdXBkcnBiqgIYR29vZ2xlLkNsb3VkLkJhY2t1cERSLlYxygIYR29vZ2xlXENsb3VkXEJhY2t1cERSXFYx6gIbR29vZ2xlOjpDbG91ZDo6QmFja3VwRFI6OlYxYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_field_info, file_google_api_resource, file_google_protobuf_timestamp, file_google_type_dayofweek, file_google_type_month]);

/**
 * A `BackupPlan` specifies some common fields, such as `description` as well
 * as one or more `BackupRule` messages. Each `BackupRule` has a retention
 * policy and defines a schedule by which the system is to perform backup
 * workloads.
 *
 * @generated from message google.cloud.backupdr.v1.BackupPlan
 */
export type BackupPlan = Message<"google.cloud.backupdr.v1.BackupPlan"> & {
  /**
   * Output only. Identifier. The resource name of the `BackupPlan`.
   *
   * Format: `projects/{project}/locations/{location}/backupPlans/{backup_plan}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The description of the `BackupPlan` resource.
   *
   * The description allows for additional details about `BackupPlan` and its
   * use cases to be provided. An example description is the following:  "This
   * is a backup plan that performs a daily backup at 6pm and retains data for 3
   * months". The description must be at most 2048 characters.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Optional. This collection of key/value pairs allows for custom labels to be
   * supplied by the user.  Example, {"tag": "Weekly"}.
   *
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };

  /**
   * Output only. When the `BackupPlan` was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Output only. When the `BackupPlan` was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;

  /**
   * Required. The backup rules for this `BackupPlan`. There must be at least
   * one `BackupRule` message.
   *
   * @generated from field: repeated google.cloud.backupdr.v1.BackupRule backup_rules = 6;
   */
  backupRules: BackupRule[];

  /**
   * Output only. The `State` for the `BackupPlan`.
   *
   * @generated from field: google.cloud.backupdr.v1.BackupPlan.State state = 7;
   */
  state: BackupPlan_State;

  /**
   * Required. The resource type to which the `BackupPlan` will be applied.
   * Examples include, "compute.googleapis.com/Instance" and
   * "storage.googleapis.com/Bucket".
   *
   * @generated from field: string resource_type = 8;
   */
  resourceType: string;

  /**
   * Optional. `etag` is returned from the service in the response. As a user of
   * the service, you may provide an etag value in this field to prevent stale
   * resources.
   *
   * @generated from field: string etag = 9;
   */
  etag: string;

  /**
   * Required. Resource name of backup vault which will be used as storage
   * location for backups. Format:
   * projects/{project}/locations/{location}/backupVaults/{backupvault}
   *
   * @generated from field: string backup_vault = 10;
   */
  backupVault: string;

  /**
   * Output only. The Google Cloud Platform Service Account to be used by the
   * BackupVault for taking backups. Specify the email address of the Backup
   * Vault Service Account.
   *
   * @generated from field: string backup_vault_service_account = 11;
   */
  backupVaultServiceAccount: string;
};

/**
 * Describes the message google.cloud.backupdr.v1.BackupPlan.
 * Use `create(BackupPlanSchema)` to create a new message.
 */
export const BackupPlanSchema: GenMessage<BackupPlan> = /*@__PURE__*/
  messageDesc(file_google_cloud_backupdr_v1_backupplan, 0);

/**
 * `State` enumerates the possible states for a `BackupPlan`.
 *
 * @generated from enum google.cloud.backupdr.v1.BackupPlan.State
 */
export enum BackupPlan_State {
  /**
   * State not set.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The resource is being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The resource has been created and is fully usable.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The resource is being deleted.
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,

  /**
   * The resource has been created but is not usable.
   *
   * @generated from enum value: INACTIVE = 4;
   */
  INACTIVE = 4,
}

/**
 * Describes the enum google.cloud.backupdr.v1.BackupPlan.State.
 */
export const BackupPlan_StateSchema: GenEnum<BackupPlan_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_backupdr_v1_backupplan, 0, 0);

/**
 * `BackupRule` binds the backup schedule to a retention policy.
 *
 * @generated from message google.cloud.backupdr.v1.BackupRule
 */
export type BackupRule = Message<"google.cloud.backupdr.v1.BackupRule"> & {
  /**
   * Required. Immutable. The unique id of this `BackupRule`. The `rule_id` is
   * unique per `BackupPlan`.The `rule_id` must start with a lowercase letter
   * followed by up to 62 lowercase letters, numbers, or hyphens. Pattern,
   * /[a-z][a-z0-9-]{,62}/.
   *
   * @generated from field: string rule_id = 1;
   */
  ruleId: string;

  /**
   * Required. Configures the duration for which backup data will be kept. It is
   * defined in “days”. The value should be greater than or equal to minimum
   * enforced retention of the backup vault.
   *
   * @generated from field: int32 backup_retention_days = 4;
   */
  backupRetentionDays: number;

  /**
   * Required.
   *
   * The schedule that defines the automated backup workloads for this
   * `BackupRule`.
   *
   * @generated from oneof google.cloud.backupdr.v1.BackupRule.backup_schedule_oneof
   */
  backupScheduleOneof: {
    /**
     * Required. Defines a schedule that runs within the confines of a defined
     * window of time.
     *
     * @generated from field: google.cloud.backupdr.v1.StandardSchedule standard_schedule = 5;
     */
    value: StandardSchedule;
    case: "standardSchedule";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.backupdr.v1.BackupRule.
 * Use `create(BackupRuleSchema)` to create a new message.
 */
export const BackupRuleSchema: GenMessage<BackupRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_backupdr_v1_backupplan, 1);

/**
 * `StandardSchedule` defines a schedule that run within the confines of a
 * defined window of days. We can define recurrence type for schedule as
 * HOURLY, DAILY, WEEKLY, MONTHLY or YEARLY.
 *
 * @generated from message google.cloud.backupdr.v1.StandardSchedule
 */
export type StandardSchedule = Message<"google.cloud.backupdr.v1.StandardSchedule"> & {
  /**
   * Required. Specifies the `RecurrenceType` for the schedule.
   *
   * @generated from field: google.cloud.backupdr.v1.StandardSchedule.RecurrenceType recurrence_type = 1;
   */
  recurrenceType: StandardSchedule_RecurrenceType;

  /**
   * Optional. Specifies frequency for hourly backups. A hourly frequency of 2
   * means jobs will run every 2 hours from start time till end time defined.
   *
   * This is required for `recurrence_type`, `HOURLY` and is not applicable
   * otherwise. A validation error will occur if a value is supplied and
   * `recurrence_type` is not `HOURLY`.
   *
   * Value of hourly frequency should be between 6 and 23.
   *
   * Reason for limit : We found that there is bandwidth limitation of 3GB/S for
   * GMI while taking a backup and 5GB/S while doing a restore. Given the amount
   * of parallel backups and restore we are targeting, this will potentially
   * take the backup time to mins and hours (in worst case scenario).
   *
   * @generated from field: int32 hourly_frequency = 2;
   */
  hourlyFrequency: number;

  /**
   * Optional. Specifies days of week like, MONDAY or TUESDAY, on which jobs
   * will run.
   *
   * This is required for `recurrence_type`, `WEEKLY` and is not applicable
   * otherwise. A validation error will occur if a value is supplied and
   * `recurrence_type` is not `WEEKLY`.
   *
   * @generated from field: repeated google.type.DayOfWeek days_of_week = 3;
   */
  daysOfWeek: DayOfWeek[];

  /**
   * Optional. Specifies days of months like 1, 5, or 14 on which jobs will run.
   *
   * Values for `days_of_month` are only applicable for `recurrence_type`,
   * `MONTHLY` and `YEARLY`. A validation error will occur if other values are
   * supplied.
   *
   * @generated from field: repeated int32 days_of_month = 4;
   */
  daysOfMonth: number[];

  /**
   * Optional. Specifies a week day of the month like, FIRST SUNDAY or LAST
   * MONDAY, on which jobs will run. This will be specified by two fields in
   * `WeekDayOfMonth`, one for the day, e.g. `MONDAY`, and one for the week,
   * e.g. `LAST`.
   *
   * This field is only applicable for `recurrence_type`, `MONTHLY` and
   * `YEARLY`. A validation error will occur if other values are supplied.
   *
   * @generated from field: google.cloud.backupdr.v1.WeekDayOfMonth week_day_of_month = 5;
   */
  weekDayOfMonth?: WeekDayOfMonth;

  /**
   * Optional. Specifies the months of year, like `FEBRUARY` and/or `MAY`, on
   * which jobs will run.
   *
   * This field is only applicable when `recurrence_type` is `YEARLY`. A
   * validation error will occur if other values are supplied.
   *
   * @generated from field: repeated google.type.Month months = 6;
   */
  months: Month[];

  /**
   * Required. A BackupWindow defines the window of day during which backup jobs
   * will run. Jobs are queued at the beginning of the window and will be marked
   * as `NOT_RUN` if they do not start by the end of the window.
   *
   * Note: running jobs will not be cancelled at the end of the window.
   *
   * @generated from field: google.cloud.backupdr.v1.BackupWindow backup_window = 7;
   */
  backupWindow?: BackupWindow;

  /**
   * Required. The time zone to be used when interpreting the schedule.
   * The value of this field must be a time zone name from the IANA tz database.
   * See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for the
   * list of valid timezone names. For e.g., Europe/Paris.
   *
   * @generated from field: string time_zone = 8;
   */
  timeZone: string;
};

/**
 * Describes the message google.cloud.backupdr.v1.StandardSchedule.
 * Use `create(StandardScheduleSchema)` to create a new message.
 */
export const StandardScheduleSchema: GenMessage<StandardSchedule> = /*@__PURE__*/
  messageDesc(file_google_cloud_backupdr_v1_backupplan, 2);

/**
 * `RecurrenceTypes` enumerates the applicable periodicity for the schedule.
 *
 * @generated from enum google.cloud.backupdr.v1.StandardSchedule.RecurrenceType
 */
export enum StandardSchedule_RecurrenceType {
  /**
   * recurrence type not set
   *
   * @generated from enum value: RECURRENCE_TYPE_UNSPECIFIED = 0;
   */
  RECURRENCE_TYPE_UNSPECIFIED = 0,

  /**
   * The `BackupRule` is to be applied hourly.
   *
   * @generated from enum value: HOURLY = 1;
   */
  HOURLY = 1,

  /**
   * The `BackupRule` is to be applied daily.
   *
   * @generated from enum value: DAILY = 2;
   */
  DAILY = 2,

  /**
   * The `BackupRule` is to be applied weekly.
   *
   * @generated from enum value: WEEKLY = 3;
   */
  WEEKLY = 3,

  /**
   * The `BackupRule` is to be applied monthly.
   *
   * @generated from enum value: MONTHLY = 4;
   */
  MONTHLY = 4,

  /**
   * The `BackupRule` is to be applied yearly.
   *
   * @generated from enum value: YEARLY = 5;
   */
  YEARLY = 5,
}

/**
 * Describes the enum google.cloud.backupdr.v1.StandardSchedule.RecurrenceType.
 */
export const StandardSchedule_RecurrenceTypeSchema: GenEnum<StandardSchedule_RecurrenceType> = /*@__PURE__*/
  enumDesc(file_google_cloud_backupdr_v1_backupplan, 2, 0);

/**
 * `BackupWindow` defines a window of the day during which backup jobs will run.
 *
 * @generated from message google.cloud.backupdr.v1.BackupWindow
 */
export type BackupWindow = Message<"google.cloud.backupdr.v1.BackupWindow"> & {
  /**
   * Required. The hour of day (0-23) when the window starts for e.g. if value
   * of start hour of day is 6 that mean backup window start at 6:00.
   *
   * @generated from field: int32 start_hour_of_day = 1;
   */
  startHourOfDay: number;

  /**
   * Required. The hour of day (1-24) when the window end for e.g. if value of
   * end hour of day is 10 that mean backup window end time is 10:00.
   *
   * End hour of day should be greater than start hour of day.
   * 0 <= start_hour_of_day < end_hour_of_day <= 24
   *
   * End hour of day is not include in backup window that mean if
   * end_hour_of_day= 10 jobs should start before 10:00.
   *
   * @generated from field: int32 end_hour_of_day = 2;
   */
  endHourOfDay: number;
};

/**
 * Describes the message google.cloud.backupdr.v1.BackupWindow.
 * Use `create(BackupWindowSchema)` to create a new message.
 */
export const BackupWindowSchema: GenMessage<BackupWindow> = /*@__PURE__*/
  messageDesc(file_google_cloud_backupdr_v1_backupplan, 3);

/**
 * `WeekDayOfMonth` defines the week day of the month on which the backups will
 * run. The message combines a `WeekOfMonth` and `DayOfWeek` to produce values
 * like `FIRST`/`MONDAY` or `LAST`/`FRIDAY`.
 *
 * @generated from message google.cloud.backupdr.v1.WeekDayOfMonth
 */
export type WeekDayOfMonth = Message<"google.cloud.backupdr.v1.WeekDayOfMonth"> & {
  /**
   * Required. Specifies the week of the month.
   *
   * @generated from field: google.cloud.backupdr.v1.WeekDayOfMonth.WeekOfMonth week_of_month = 1;
   */
  weekOfMonth: WeekDayOfMonth_WeekOfMonth;

  /**
   * Required. Specifies the day of the week.
   *
   * @generated from field: google.type.DayOfWeek day_of_week = 2;
   */
  dayOfWeek: DayOfWeek;
};

/**
 * Describes the message google.cloud.backupdr.v1.WeekDayOfMonth.
 * Use `create(WeekDayOfMonthSchema)` to create a new message.
 */
export const WeekDayOfMonthSchema: GenMessage<WeekDayOfMonth> = /*@__PURE__*/
  messageDesc(file_google_cloud_backupdr_v1_backupplan, 4);

/**
 * `WeekOfMonth` enumerates possible weeks in the month, e.g. the first,
 * third, or last week of the month.
 *
 * @generated from enum google.cloud.backupdr.v1.WeekDayOfMonth.WeekOfMonth
 */
export enum WeekDayOfMonth_WeekOfMonth {
  /**
   * The zero value. Do not use.
   *
   * @generated from enum value: WEEK_OF_MONTH_UNSPECIFIED = 0;
   */
  WEEK_OF_MONTH_UNSPECIFIED = 0,

  /**
   * The first week of the month.
   *
   * @generated from enum value: FIRST = 1;
   */
  FIRST = 1,

  /**
   * The second week of the month.
   *
   * @generated from enum value: SECOND = 2;
   */
  SECOND = 2,

  /**
   * The third week of the month.
   *
   * @generated from enum value: THIRD = 3;
   */
  THIRD = 3,

  /**
   * The fourth  week of the month.
   *
   * @generated from enum value: FOURTH = 4;
   */
  FOURTH = 4,

  /**
   * The last  week of the month.
   *
   * @generated from enum value: LAST = 5;
   */
  LAST = 5,
}

/**
 * Describes the enum google.cloud.backupdr.v1.WeekDayOfMonth.WeekOfMonth.
 */
export const WeekDayOfMonth_WeekOfMonthSchema: GenEnum<WeekDayOfMonth_WeekOfMonth> = /*@__PURE__*/
  enumDesc(file_google_cloud_backupdr_v1_backupplan, 4, 0);

/**
 * The request message for creating a `BackupPlan`.
 *
 * @generated from message google.cloud.backupdr.v1.CreateBackupPlanRequest
 */
export type CreateBackupPlanRequest = Message<"google.cloud.backupdr.v1.CreateBackupPlanRequest"> & {
  /**
   * Required. The `BackupPlan` project and location in the format
   * `projects/{project}/locations/{location}`. In Cloud BackupDR locations
   * map to GCP regions, for example **us-central1**.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The name of the `BackupPlan` to create. The name must be unique
   * for the specified project and location.The name must start with a lowercase
   * letter followed by up to 62 lowercase letters, numbers, or hyphens.
   * Pattern, /[a-z][a-z0-9-]{,62}/.
   *
   * @generated from field: string backup_plan_id = 2;
   */
  backupPlanId: string;

  /**
   * Required. The `BackupPlan` resource object to create.
   *
   * @generated from field: google.cloud.backupdr.v1.BackupPlan backup_plan = 3;
   */
  backupPlan?: BackupPlan;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes since the first request.
   *
   * For example, consider a situation where you make an initial request and t
   * he request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.backupdr.v1.CreateBackupPlanRequest.
 * Use `create(CreateBackupPlanRequestSchema)` to create a new message.
 */
export const CreateBackupPlanRequestSchema: GenMessage<CreateBackupPlanRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_backupdr_v1_backupplan, 5);

/**
 * The request message for getting a list `BackupPlan`.
 *
 * @generated from message google.cloud.backupdr.v1.ListBackupPlansRequest
 */
export type ListBackupPlansRequest = Message<"google.cloud.backupdr.v1.ListBackupPlansRequest"> & {
  /**
   * Required. The project and location for which to retrieve `BackupPlans`
   * information. Format: `projects/{project}/locations/{location}`. In Cloud
   * BackupDR, locations map to GCP regions, for e.g. **us-central1**. To
   * retrieve backup plans for all locations, use "-" for the
   * `{location}` value.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of `BackupPlans` to return in a single
   * response. If not specified, a default value will be chosen by the service.
   * Note that the response may include a partial list and a caller should
   * only rely on the response's
   * [next_page_token][google.cloud.backupdr.v1.ListBackupPlansResponse.next_page_token]
   * to determine if there are more instances left to be queried.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The value of
   * [next_page_token][google.cloud.backupdr.v1.ListBackupPlansResponse.next_page_token]
   * received from a previous `ListBackupPlans` call.
   * Provide this to retrieve the subsequent page in a multi-page list of
   * results. When paginating, all other parameters provided to
   * `ListBackupPlans` must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Field match expression used to filter the results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Field by which to sort the results.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.backupdr.v1.ListBackupPlansRequest.
 * Use `create(ListBackupPlansRequestSchema)` to create a new message.
 */
export const ListBackupPlansRequestSchema: GenMessage<ListBackupPlansRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_backupdr_v1_backupplan, 6);

/**
 * The response message for getting a list of `BackupPlan`.
 *
 * @generated from message google.cloud.backupdr.v1.ListBackupPlansResponse
 */
export type ListBackupPlansResponse = Message<"google.cloud.backupdr.v1.ListBackupPlansResponse"> & {
  /**
   * The list of `BackupPlans` in the project for the specified
   * location.
   *
   * If the `{location}` value in the request is "-", the response contains a
   * list of resources from all locations. In case any location is unreachable,
   * the response will only return backup plans in reachable locations and
   * the 'unreachable' field will be populated with a list of unreachable
   * locations.
   * BackupPlan
   *
   * @generated from field: repeated google.cloud.backupdr.v1.BackupPlan backup_plans = 1;
   */
  backupPlans: BackupPlan[];

  /**
   * A token which may be sent as
   * [page_token][google.cloud.backupdr.v1.ListBackupPlansRequest.page_token] in
   * a subsequent `ListBackupPlans` call to retrieve the next page of results.
   * If this field is omitted or empty, then there are no more results to
   * return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.backupdr.v1.ListBackupPlansResponse.
 * Use `create(ListBackupPlansResponseSchema)` to create a new message.
 */
export const ListBackupPlansResponseSchema: GenMessage<ListBackupPlansResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_backupdr_v1_backupplan, 7);

/**
 * The request message for getting a `BackupPlan`.
 *
 * @generated from message google.cloud.backupdr.v1.GetBackupPlanRequest
 */
export type GetBackupPlanRequest = Message<"google.cloud.backupdr.v1.GetBackupPlanRequest"> & {
  /**
   * Required. The resource name of the `BackupPlan` to retrieve.
   *
   * Format: `projects/{project}/locations/{location}/backupPlans/{backup_plan}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.backupdr.v1.GetBackupPlanRequest.
 * Use `create(GetBackupPlanRequestSchema)` to create a new message.
 */
export const GetBackupPlanRequestSchema: GenMessage<GetBackupPlanRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_backupdr_v1_backupplan, 8);

/**
 * The request message for deleting a `BackupPlan`.
 *
 * @generated from message google.cloud.backupdr.v1.DeleteBackupPlanRequest
 */
export type DeleteBackupPlanRequest = Message<"google.cloud.backupdr.v1.DeleteBackupPlanRequest"> & {
  /**
   * Required. The resource name of the `BackupPlan` to delete.
   *
   * Format: `projects/{project}/locations/{location}/backupPlans/{backup_plan}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.backupdr.v1.DeleteBackupPlanRequest.
 * Use `create(DeleteBackupPlanRequestSchema)` to create a new message.
 */
export const DeleteBackupPlanRequestSchema: GenMessage<DeleteBackupPlanRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_backupdr_v1_backupplan, 9);

