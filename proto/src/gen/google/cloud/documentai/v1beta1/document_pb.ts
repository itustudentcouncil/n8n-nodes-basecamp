// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/documentai/v1beta1/document.proto (package google.cloud.documentai.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { BoundingPoly } from "./geometry_pb";
import { file_google_cloud_documentai_v1beta1_geometry } from "./geometry_pb";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Color } from "../../../type/color_pb";
import { file_google_type_color } from "../../../type/color_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/documentai/v1beta1/document.proto.
 */
export const file_google_cloud_documentai_v1beta1_document: GenFile = /*@__PURE__*/
  fileDesc("Ci5nb29nbGUvY2xvdWQvZG9jdW1lbnRhaS92MWJldGExL2RvY3VtZW50LnByb3RvEh9nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExIv8kCghEb2N1bWVudBINCgN1cmkYASABKAlIABIRCgdjb250ZW50GAIgASgMSAASEQoJbWltZV90eXBlGAMgASgJEgwKBHRleHQYBCABKAkSRAoLdGV4dF9zdHlsZXMYBSADKAsyLy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlN0eWxlEj0KBXBhZ2VzGAYgAygLMi4uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlEkIKCGVudGl0aWVzGAcgAygLMjAuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5FbnRpdHkSUgoQZW50aXR5X3JlbGF0aW9ucxgIIAMoCzI4Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuRW50aXR5UmVsYXRpb24SRwoKc2hhcmRfaW5mbxgJIAEoCzIzLmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuU2hhcmRJbmZvEiEKBWVycm9yGAogASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMaSgoJU2hhcmRJbmZvEhMKC3NoYXJkX2luZGV4GAEgASgDEhMKC3NoYXJkX2NvdW50GAIgASgDEhMKC3RleHRfb2Zmc2V0GAMgASgDGtoCCgVTdHlsZRJJCgt0ZXh0X2FuY2hvchgBIAEoCzI0Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuVGV4dEFuY2hvchIhCgVjb2xvchgCIAEoCzISLmdvb2dsZS50eXBlLkNvbG9yEiwKEGJhY2tncm91bmRfY29sb3IYAyABKAsyEi5nb29nbGUudHlwZS5Db2xvchITCgtmb250X3dlaWdodBgEIAEoCRISCgp0ZXh0X3N0eWxlGAUgASgJEhcKD3RleHRfZGVjb3JhdGlvbhgGIAEoCRJLCglmb250X3NpemUYByABKAsyOC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlN0eWxlLkZvbnRTaXplGiYKCEZvbnRTaXplEgwKBHNpemUYASABKAISDAoEdW5pdBgCIAEoCRr2GgoEUGFnZRITCgtwYWdlX251bWJlchgBIAEoBRJLCglkaW1lbnNpb24YAiABKAsyOC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuRGltZW5zaW9uEkUKBmxheW91dBgDIAEoCzI1Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5MYXlvdXQSWwoSZGV0ZWN0ZWRfbGFuZ3VhZ2VzGAQgAygLMj8uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkRldGVjdGVkTGFuZ3VhZ2USRAoGYmxvY2tzGAUgAygLMjQuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkJsb2NrEkwKCnBhcmFncmFwaHMYBiADKAsyOC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuUGFyYWdyYXBoEkIKBWxpbmVzGAcgAygLMjMuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkxpbmUSRAoGdG9rZW5zGAggAygLMjQuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLlRva2VuElUKD3Zpc3VhbF9lbGVtZW50cxgJIAMoCzI8Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5WaXN1YWxFbGVtZW50EkQKBnRhYmxlcxgKIAMoCzI0Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5UYWJsZRJNCgtmb3JtX2ZpZWxkcxgLIAMoCzI4Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5Gb3JtRmllbGQaOAoJRGltZW5zaW9uEg0KBXdpZHRoGAEgASgCEg4KBmhlaWdodBgCIAEoAhIMCgR1bml0GAMgASgJGuwCCgZMYXlvdXQSSQoLdGV4dF9hbmNob3IYASABKAsyNC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlRleHRBbmNob3ISEgoKY29uZmlkZW5jZRgCIAEoAhJECg1ib3VuZGluZ19wb2x5GAMgASgLMi0uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Cb3VuZGluZ1BvbHkSVgoLb3JpZW50YXRpb24YBCABKA4yQS5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuTGF5b3V0Lk9yaWVudGF0aW9uImUKC09yaWVudGF0aW9uEhsKF09SSUVOVEFUSU9OX1VOU1BFQ0lGSUVEEAASCwoHUEFHRV9VUBABEg4KClBBR0VfUklHSFQQAhINCglQQUdFX0RPV04QAxINCglQQUdFX0xFRlQQBBqrAQoFQmxvY2sSRQoGbGF5b3V0GAEgASgLMjUuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkxheW91dBJbChJkZXRlY3RlZF9sYW5ndWFnZXMYAiADKAsyPy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuRGV0ZWN0ZWRMYW5ndWFnZRqvAQoJUGFyYWdyYXBoEkUKBmxheW91dBgBIAEoCzI1Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5MYXlvdXQSWwoSZGV0ZWN0ZWRfbGFuZ3VhZ2VzGAIgAygLMj8uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkRldGVjdGVkTGFuZ3VhZ2UaqgEKBExpbmUSRQoGbGF5b3V0GAEgASgLMjUuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkxheW91dBJbChJkZXRlY3RlZF9sYW5ndWFnZXMYAiADKAsyPy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuRGV0ZWN0ZWRMYW5ndWFnZRq1AwoFVG9rZW4SRQoGbGF5b3V0GAEgASgLMjUuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkxheW91dBJaCg5kZXRlY3RlZF9icmVhaxgCIAEoCzJCLmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5Ub2tlbi5EZXRlY3RlZEJyZWFrElsKEmRldGVjdGVkX2xhbmd1YWdlcxgDIAMoCzI/Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5EZXRlY3RlZExhbmd1YWdlGqsBCg1EZXRlY3RlZEJyZWFrElUKBHR5cGUYASABKA4yRy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuVG9rZW4uRGV0ZWN0ZWRCcmVhay5UeXBlIkMKBFR5cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEgkKBVNQQUNFEAESDgoKV0lERV9TUEFDRRACEgoKBkhZUEhFThADGsEBCg1WaXN1YWxFbGVtZW50EkUKBmxheW91dBgBIAEoCzI1Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5MYXlvdXQSDAoEdHlwZRgCIAEoCRJbChJkZXRlY3RlZF9sYW5ndWFnZXMYAyADKAsyPy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuRGV0ZWN0ZWRMYW5ndWFnZRqCBQoFVGFibGUSRQoGbGF5b3V0GAEgASgLMjUuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkxheW91dBJSCgtoZWFkZXJfcm93cxgCIAMoCzI9Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5UYWJsZS5UYWJsZVJvdxJQCglib2R5X3Jvd3MYAyADKAsyPS5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuVGFibGUuVGFibGVSb3cSWwoSZGV0ZWN0ZWRfbGFuZ3VhZ2VzGAQgAygLMj8uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkRldGVjdGVkTGFuZ3VhZ2UaWQoIVGFibGVSb3cSTQoFY2VsbHMYASADKAsyPi5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuVGFibGUuVGFibGVDZWxsGtMBCglUYWJsZUNlbGwSRQoGbGF5b3V0GAEgASgLMjUuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkxheW91dBIQCghyb3dfc3BhbhgCIAEoBRIQCghjb2xfc3BhbhgDIAEoBRJbChJkZXRlY3RlZF9sYW5ndWFnZXMYBCADKAsyPy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuRGV0ZWN0ZWRMYW5ndWFnZRrnAgoJRm9ybUZpZWxkEkkKCmZpZWxkX25hbWUYASABKAsyNS5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuTGF5b3V0EkoKC2ZpZWxkX3ZhbHVlGAIgASgLMjUuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkxheW91dBJgChduYW1lX2RldGVjdGVkX2xhbmd1YWdlcxgDIAMoCzI/Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5EZXRlY3RlZExhbmd1YWdlEmEKGHZhbHVlX2RldGVjdGVkX2xhbmd1YWdlcxgEIAMoCzI/Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5EZXRlY3RlZExhbmd1YWdlGj0KEERldGVjdGVkTGFuZ3VhZ2USFQoNbGFuZ3VhZ2VfY29kZRgBIAEoCRISCgpjb25maWRlbmNlGAIgASgCGpABCgZFbnRpdHkSSQoLdGV4dF9hbmNob3IYASABKAsyNC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlRleHRBbmNob3ISEQoEdHlwZRgCIAEoCUID4EECEhQKDG1lbnRpb25fdGV4dBgDIAEoCRISCgptZW50aW9uX2lkGAQgASgJGkkKDkVudGl0eVJlbGF0aW9uEhIKCnN1YmplY3RfaWQYASABKAkSEQoJb2JqZWN0X2lkGAIgASgJEhAKCHJlbGF0aW9uGAMgASgJGpwBCgpUZXh0QW5jaG9yElcKDXRleHRfc2VnbWVudHMYASADKAsyQC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlRleHRBbmNob3IuVGV4dFNlZ21lbnQaNQoLVGV4dFNlZ21lbnQSEwoLc3RhcnRfaW5kZXgYASABKAMSEQoJZW5kX2luZGV4GAIgASgDQggKBnNvdXJjZULkAQojY29tLmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTFCDURvY3VtZW50UHJvdG9QAVpDY2xvdWQuZ29vZ2xlLmNvbS9nby9kb2N1bWVudGFpL2FwaXYxYmV0YTEvZG9jdW1lbnRhaXBiO2RvY3VtZW50YWlwYqoCH0dvb2dsZS5DbG91ZC5Eb2N1bWVudEFJLlYxQmV0YTHKAh9Hb29nbGVcQ2xvdWRcRG9jdW1lbnRBSVxWMWJldGEx6gIiR29vZ2xlOjpDbG91ZDo6RG9jdW1lbnRBSTo6VjFiZXRhMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_cloud_documentai_v1beta1_geometry, file_google_rpc_status, file_google_type_color]);

/**
 * Document represents the canonical document resource in Document Understanding
 * AI.
 * It is an interchange format that provides insights into documents and allows
 * for collaboration between users and Document Understanding AI to iterate and
 * optimize for quality.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document
 */
export type Document = Message<"google.cloud.documentai.v1beta1.Document"> & {
  /**
   * Original source document from the user.
   *
   * @generated from oneof google.cloud.documentai.v1beta1.Document.source
   */
  source: {
    /**
     * Currently supports Google Cloud Storage URI of the form
     *    `gs://bucket_name/object_name`. Object versioning is not supported.
     *    See [Google Cloud Storage Request
     *    URIs](https://cloud.google.com/storage/docs/reference-uris) for more
     *    info.
     *
     * @generated from field: string uri = 1;
     */
    value: string;
    case: "uri";
  } | {
    /**
     * Inline document content, represented as a stream of bytes.
     * Note: As with all `bytes` fields, protobuffers use a pure binary
     * representation, whereas JSON representations use base64.
     *
     * @generated from field: bytes content = 2;
     */
    value: Uint8Array;
    case: "content";
  } | { case: undefined; value?: undefined };

  /**
   * An IANA published MIME type (also referred to as media type). For more
   * information, see
   * https://www.iana.org/assignments/media-types/media-types.xhtml.
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;

  /**
   * UTF-8 encoded text in reading order from the document.
   *
   * @generated from field: string text = 4;
   */
  text: string;

  /**
   * Styles for the
   * [Document.text][google.cloud.documentai.v1beta1.Document.text].
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Style text_styles = 5;
   */
  textStyles: Document_Style[];

  /**
   * Visual page layout for the
   * [Document][google.cloud.documentai.v1beta1.Document].
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page pages = 6;
   */
  pages: Document_Page[];

  /**
   * A list of entities detected on
   * [Document.text][google.cloud.documentai.v1beta1.Document.text]. For
   * document shards, entities in this list may cross shard boundaries.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Entity entities = 7;
   */
  entities: Document_Entity[];

  /**
   * Relationship among
   * [Document.entities][google.cloud.documentai.v1beta1.Document.entities].
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.EntityRelation entity_relations = 8;
   */
  entityRelations: Document_EntityRelation[];

  /**
   * Information about the sharding if this document is sharded part of a larger
   * document. If the document is not sharded, this message is not specified.
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.ShardInfo shard_info = 9;
   */
  shardInfo?: Document_ShardInfo;

  /**
   * Any error that occurred while processing this document.
   *
   * @generated from field: google.rpc.Status error = 10;
   */
  error?: Status;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.
 * Use `create(DocumentSchema)` to create a new message.
 */
export const DocumentSchema: GenMessage<Document> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0);

/**
 * For a large document, sharding may be performed to produce several
 * document shards. Each document shard contains this field to detail which
 * shard it is.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.ShardInfo
 */
export type Document_ShardInfo = Message<"google.cloud.documentai.v1beta1.Document.ShardInfo"> & {
  /**
   * The 0-based index of this shard.
   *
   * @generated from field: int64 shard_index = 1;
   */
  shardIndex: bigint;

  /**
   * Total number of shards.
   *
   * @generated from field: int64 shard_count = 2;
   */
  shardCount: bigint;

  /**
   * The index of the first character in
   * [Document.text][google.cloud.documentai.v1beta1.Document.text] in the
   * overall document global text.
   *
   * @generated from field: int64 text_offset = 3;
   */
  textOffset: bigint;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.ShardInfo.
 * Use `create(Document_ShardInfoSchema)` to create a new message.
 */
export const Document_ShardInfoSchema: GenMessage<Document_ShardInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 0);

/**
 * Annotation for common text style attributes. This adheres to CSS
 * conventions as much as possible.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Style
 */
export type Document_Style = Message<"google.cloud.documentai.v1beta1.Document.Style"> & {
  /**
   * Text anchor indexing into the
   * [Document.text][google.cloud.documentai.v1beta1.Document.text].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.TextAnchor text_anchor = 1;
   */
  textAnchor?: Document_TextAnchor;

  /**
   * Text color.
   *
   * @generated from field: google.type.Color color = 2;
   */
  color?: Color;

  /**
   * Text background color.
   *
   * @generated from field: google.type.Color background_color = 3;
   */
  backgroundColor?: Color;

  /**
   * Font weight. Possible values are normal, bold, bolder, and lighter.
   * https://www.w3schools.com/cssref/pr_font_weight.asp
   *
   * @generated from field: string font_weight = 4;
   */
  fontWeight: string;

  /**
   * Text style. Possible values are normal, italic, and oblique.
   * https://www.w3schools.com/cssref/pr_font_font-style.asp
   *
   * @generated from field: string text_style = 5;
   */
  textStyle: string;

  /**
   * Text decoration. Follows CSS standard.
   * <text-decoration-line> <text-decoration-color> <text-decoration-style>
   * https://www.w3schools.com/cssref/pr_text_text-decoration.asp
   *
   * @generated from field: string text_decoration = 6;
   */
  textDecoration: string;

  /**
   * Font size.
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Style.FontSize font_size = 7;
   */
  fontSize?: Document_Style_FontSize;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Style.
 * Use `create(Document_StyleSchema)` to create a new message.
 */
export const Document_StyleSchema: GenMessage<Document_Style> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 1);

/**
 * Font size with unit.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Style.FontSize
 */
export type Document_Style_FontSize = Message<"google.cloud.documentai.v1beta1.Document.Style.FontSize"> & {
  /**
   * Font size for the text.
   *
   * @generated from field: float size = 1;
   */
  size: number;

  /**
   * Unit for the font size. Follows CSS naming (in, px, pt, etc.).
   *
   * @generated from field: string unit = 2;
   */
  unit: string;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Style.FontSize.
 * Use `create(Document_Style_FontSizeSchema)` to create a new message.
 */
export const Document_Style_FontSizeSchema: GenMessage<Document_Style_FontSize> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 1, 0);

/**
 * A page in a [Document][google.cloud.documentai.v1beta1.Document].
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page
 */
export type Document_Page = Message<"google.cloud.documentai.v1beta1.Document.Page"> & {
  /**
   * 1-based index for current
   * [Page][google.cloud.documentai.v1beta1.Document.Page] in a parent
   * [Document][google.cloud.documentai.v1beta1.Document]. Useful when a page
   * is taken out of a [Document][google.cloud.documentai.v1beta1.Document]
   * for individual processing.
   *
   * @generated from field: int32 page_number = 1;
   */
  pageNumber: number;

  /**
   * Physical dimension of the page.
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Dimension dimension = 2;
   */
  dimension?: Document_Page_Dimension;

  /**
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for the
   * page.
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout layout = 3;
   */
  layout?: Document_Page_Layout;

  /**
   * A list of detected languages together with confidence.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage detected_languages = 4;
   */
  detectedLanguages: Document_Page_DetectedLanguage[];

  /**
   * A list of visually detected text blocks on the page.
   * A block has a set of lines (collected into paragraphs) that have a common
   * line-spacing and orientation.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.Block blocks = 5;
   */
  blocks: Document_Page_Block[];

  /**
   * A list of visually detected text paragraphs on the page.
   * A collection of lines that a human would perceive as a paragraph.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.Paragraph paragraphs = 6;
   */
  paragraphs: Document_Page_Paragraph[];

  /**
   * A list of visually detected text lines on the page.
   * A collection of tokens that a human would perceive as a line.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.Line lines = 7;
   */
  lines: Document_Page_Line[];

  /**
   * A list of visually detected tokens on the page.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.Token tokens = 8;
   */
  tokens: Document_Page_Token[];

  /**
   * A list of detected non-text visual elements e.g. checkbox,
   * signature etc. on the page.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.VisualElement visual_elements = 9;
   */
  visualElements: Document_Page_VisualElement[];

  /**
   * A list of visually detected tables on the page.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.Table tables = 10;
   */
  tables: Document_Page_Table[];

  /**
   * A list of visually detected form fields on the page.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.FormField form_fields = 11;
   */
  formFields: Document_Page_FormField[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.
 * Use `create(Document_PageSchema)` to create a new message.
 */
export const Document_PageSchema: GenMessage<Document_Page> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2);

/**
 * Dimension for the page.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.Dimension
 */
export type Document_Page_Dimension = Message<"google.cloud.documentai.v1beta1.Document.Page.Dimension"> & {
  /**
   * Page width.
   *
   * @generated from field: float width = 1;
   */
  width: number;

  /**
   * Page height.
   *
   * @generated from field: float height = 2;
   */
  height: number;

  /**
   * Dimension unit.
   *
   * @generated from field: string unit = 3;
   */
  unit: string;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.Dimension.
 * Use `create(Document_Page_DimensionSchema)` to create a new message.
 */
export const Document_Page_DimensionSchema: GenMessage<Document_Page_Dimension> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 0);

/**
 * Visual element describing a layout unit on a page.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.Layout
 */
export type Document_Page_Layout = Message<"google.cloud.documentai.v1beta1.Document.Page.Layout"> & {
  /**
   * Text anchor indexing into the
   * [Document.text][google.cloud.documentai.v1beta1.Document.text].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.TextAnchor text_anchor = 1;
   */
  textAnchor?: Document_TextAnchor;

  /**
   * Confidence of the current
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] within
   * context of the object this layout is for. e.g. confidence can be for a
   * single token, a table, a visual element, etc. depending on context.
   * Range [0, 1].
   *
   * @generated from field: float confidence = 2;
   */
  confidence: number;

  /**
   * The bounding polygon for the
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout].
   *
   * @generated from field: google.cloud.documentai.v1beta1.BoundingPoly bounding_poly = 3;
   */
  boundingPoly?: BoundingPoly;

  /**
   * Detected orientation for the
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout.Orientation orientation = 4;
   */
  orientation: Document_Page_Layout_Orientation;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.Layout.
 * Use `create(Document_Page_LayoutSchema)` to create a new message.
 */
export const Document_Page_LayoutSchema: GenMessage<Document_Page_Layout> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 1);

/**
 * Detected human reading orientation.
 *
 * @generated from enum google.cloud.documentai.v1beta1.Document.Page.Layout.Orientation
 */
export enum Document_Page_Layout_Orientation {
  /**
   * Unspecified orientation.
   *
   * @generated from enum value: ORIENTATION_UNSPECIFIED = 0;
   */
  ORIENTATION_UNSPECIFIED = 0,

  /**
   * Orientation is aligned with page up.
   *
   * @generated from enum value: PAGE_UP = 1;
   */
  PAGE_UP = 1,

  /**
   * Orientation is aligned with page right.
   * Turn the head 90 degrees clockwise from upright to read.
   *
   * @generated from enum value: PAGE_RIGHT = 2;
   */
  PAGE_RIGHT = 2,

  /**
   * Orientation is aligned with page down.
   * Turn the head 180 degrees from upright to read.
   *
   * @generated from enum value: PAGE_DOWN = 3;
   */
  PAGE_DOWN = 3,

  /**
   * Orientation is aligned with page left.
   * Turn the head 90 degrees counterclockwise from upright to read.
   *
   * @generated from enum value: PAGE_LEFT = 4;
   */
  PAGE_LEFT = 4,
}

/**
 * Describes the enum google.cloud.documentai.v1beta1.Document.Page.Layout.Orientation.
 */
export const Document_Page_Layout_OrientationSchema: GenEnum<Document_Page_Layout_Orientation> = /*@__PURE__*/
  enumDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 1, 0);

/**
 * A block has a set of lines (collected into paragraphs) that have a
 * common line-spacing and orientation.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.Block
 */
export type Document_Page_Block = Message<"google.cloud.documentai.v1beta1.Document.Page.Block"> & {
  /**
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
   * [Block][google.cloud.documentai.v1beta1.Document.Page.Block].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout layout = 1;
   */
  layout?: Document_Page_Layout;

  /**
   * A list of detected languages together with confidence.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage detected_languages = 2;
   */
  detectedLanguages: Document_Page_DetectedLanguage[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.Block.
 * Use `create(Document_Page_BlockSchema)` to create a new message.
 */
export const Document_Page_BlockSchema: GenMessage<Document_Page_Block> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 2);

/**
 * A collection of lines that a human would perceive as a paragraph.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.Paragraph
 */
export type Document_Page_Paragraph = Message<"google.cloud.documentai.v1beta1.Document.Page.Paragraph"> & {
  /**
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
   * [Paragraph][google.cloud.documentai.v1beta1.Document.Page.Paragraph].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout layout = 1;
   */
  layout?: Document_Page_Layout;

  /**
   * A list of detected languages together with confidence.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage detected_languages = 2;
   */
  detectedLanguages: Document_Page_DetectedLanguage[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.Paragraph.
 * Use `create(Document_Page_ParagraphSchema)` to create a new message.
 */
export const Document_Page_ParagraphSchema: GenMessage<Document_Page_Paragraph> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 3);

/**
 * A collection of tokens that a human would perceive as a line.
 * Does not cross column boundaries, can be horizontal, vertical, etc.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.Line
 */
export type Document_Page_Line = Message<"google.cloud.documentai.v1beta1.Document.Page.Line"> & {
  /**
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
   * [Line][google.cloud.documentai.v1beta1.Document.Page.Line].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout layout = 1;
   */
  layout?: Document_Page_Layout;

  /**
   * A list of detected languages together with confidence.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage detected_languages = 2;
   */
  detectedLanguages: Document_Page_DetectedLanguage[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.Line.
 * Use `create(Document_Page_LineSchema)` to create a new message.
 */
export const Document_Page_LineSchema: GenMessage<Document_Page_Line> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 4);

/**
 * A detected token.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.Token
 */
export type Document_Page_Token = Message<"google.cloud.documentai.v1beta1.Document.Page.Token"> & {
  /**
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
   * [Token][google.cloud.documentai.v1beta1.Document.Page.Token].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout layout = 1;
   */
  layout?: Document_Page_Layout;

  /**
   * Detected break at the end of a
   * [Token][google.cloud.documentai.v1beta1.Document.Page.Token].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Token.DetectedBreak detected_break = 2;
   */
  detectedBreak?: Document_Page_Token_DetectedBreak;

  /**
   * A list of detected languages together with confidence.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage detected_languages = 3;
   */
  detectedLanguages: Document_Page_DetectedLanguage[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.Token.
 * Use `create(Document_Page_TokenSchema)` to create a new message.
 */
export const Document_Page_TokenSchema: GenMessage<Document_Page_Token> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 5);

/**
 * Detected break at the end of a
 * [Token][google.cloud.documentai.v1beta1.Document.Page.Token].
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.Token.DetectedBreak
 */
export type Document_Page_Token_DetectedBreak = Message<"google.cloud.documentai.v1beta1.Document.Page.Token.DetectedBreak"> & {
  /**
   * Detected break type.
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Token.DetectedBreak.Type type = 1;
   */
  type: Document_Page_Token_DetectedBreak_Type;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.Token.DetectedBreak.
 * Use `create(Document_Page_Token_DetectedBreakSchema)` to create a new message.
 */
export const Document_Page_Token_DetectedBreakSchema: GenMessage<Document_Page_Token_DetectedBreak> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 5, 0);

/**
 * Enum to denote the type of break found.
 *
 * @generated from enum google.cloud.documentai.v1beta1.Document.Page.Token.DetectedBreak.Type
 */
export enum Document_Page_Token_DetectedBreak_Type {
  /**
   * Unspecified break type.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * A single whitespace.
   *
   * @generated from enum value: SPACE = 1;
   */
  SPACE = 1,

  /**
   * A wider whitespace.
   *
   * @generated from enum value: WIDE_SPACE = 2;
   */
  WIDE_SPACE = 2,

  /**
   * A hyphen that indicates that a token has been split across lines.
   *
   * @generated from enum value: HYPHEN = 3;
   */
  HYPHEN = 3,
}

/**
 * Describes the enum google.cloud.documentai.v1beta1.Document.Page.Token.DetectedBreak.Type.
 */
export const Document_Page_Token_DetectedBreak_TypeSchema: GenEnum<Document_Page_Token_DetectedBreak_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 5, 0, 0);

/**
 * Detected non-text visual elements e.g. checkbox, signature etc. on the
 * page.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.VisualElement
 */
export type Document_Page_VisualElement = Message<"google.cloud.documentai.v1beta1.Document.Page.VisualElement"> & {
  /**
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
   * [Token][google.cloud.documentai.v1beta1.Document.Page.Token].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout layout = 1;
   */
  layout?: Document_Page_Layout;

  /**
   * Type of the
   * [VisualElement][google.cloud.documentai.v1beta1.Document.Page.VisualElement].
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * A list of detected languages together with confidence.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage detected_languages = 3;
   */
  detectedLanguages: Document_Page_DetectedLanguage[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.VisualElement.
 * Use `create(Document_Page_VisualElementSchema)` to create a new message.
 */
export const Document_Page_VisualElementSchema: GenMessage<Document_Page_VisualElement> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 6);

/**
 * A table representation similar to HTML table structure.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.Table
 */
export type Document_Page_Table = Message<"google.cloud.documentai.v1beta1.Document.Page.Table"> & {
  /**
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
   * [Table][google.cloud.documentai.v1beta1.Document.Page.Table].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout layout = 1;
   */
  layout?: Document_Page_Layout;

  /**
   * Header rows of the table.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.Table.TableRow header_rows = 2;
   */
  headerRows: Document_Page_Table_TableRow[];

  /**
   * Body rows of the table.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.Table.TableRow body_rows = 3;
   */
  bodyRows: Document_Page_Table_TableRow[];

  /**
   * A list of detected languages together with confidence.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage detected_languages = 4;
   */
  detectedLanguages: Document_Page_DetectedLanguage[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.Table.
 * Use `create(Document_Page_TableSchema)` to create a new message.
 */
export const Document_Page_TableSchema: GenMessage<Document_Page_Table> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 7);

/**
 * A row of table cells.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.Table.TableRow
 */
export type Document_Page_Table_TableRow = Message<"google.cloud.documentai.v1beta1.Document.Page.Table.TableRow"> & {
  /**
   * Cells that make up this row.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.Table.TableCell cells = 1;
   */
  cells: Document_Page_Table_TableCell[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.Table.TableRow.
 * Use `create(Document_Page_Table_TableRowSchema)` to create a new message.
 */
export const Document_Page_Table_TableRowSchema: GenMessage<Document_Page_Table_TableRow> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 7, 0);

/**
 * A cell representation inside the table.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.Table.TableCell
 */
export type Document_Page_Table_TableCell = Message<"google.cloud.documentai.v1beta1.Document.Page.Table.TableCell"> & {
  /**
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
   * [TableCell][google.cloud.documentai.v1beta1.Document.Page.Table.TableCell].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout layout = 1;
   */
  layout?: Document_Page_Layout;

  /**
   * How many rows this cell spans.
   *
   * @generated from field: int32 row_span = 2;
   */
  rowSpan: number;

  /**
   * How many columns this cell spans.
   *
   * @generated from field: int32 col_span = 3;
   */
  colSpan: number;

  /**
   * A list of detected languages together with confidence.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage detected_languages = 4;
   */
  detectedLanguages: Document_Page_DetectedLanguage[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.Table.TableCell.
 * Use `create(Document_Page_Table_TableCellSchema)` to create a new message.
 */
export const Document_Page_Table_TableCellSchema: GenMessage<Document_Page_Table_TableCell> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 7, 1);

/**
 * A form field detected on the page.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.FormField
 */
export type Document_Page_FormField = Message<"google.cloud.documentai.v1beta1.Document.Page.FormField"> & {
  /**
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for the
   * [FormField][google.cloud.documentai.v1beta1.Document.Page.FormField]
   * name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout field_name = 1;
   */
  fieldName?: Document_Page_Layout;

  /**
   * [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for the
   * [FormField][google.cloud.documentai.v1beta1.Document.Page.FormField]
   * value.
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.Page.Layout field_value = 2;
   */
  fieldValue?: Document_Page_Layout;

  /**
   * A list of detected languages for name together with confidence.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage name_detected_languages = 3;
   */
  nameDetectedLanguages: Document_Page_DetectedLanguage[];

  /**
   * A list of detected languages for value together with confidence.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage value_detected_languages = 4;
   */
  valueDetectedLanguages: Document_Page_DetectedLanguage[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.FormField.
 * Use `create(Document_Page_FormFieldSchema)` to create a new message.
 */
export const Document_Page_FormFieldSchema: GenMessage<Document_Page_FormField> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 8);

/**
 * Detected language for a structural component.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage
 */
export type Document_Page_DetectedLanguage = Message<"google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage"> & {
  /**
   * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
   * information, see
   * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
   *
   * @generated from field: string language_code = 1;
   */
  languageCode: string;

  /**
   * Confidence of detected language. Range [0, 1].
   *
   * @generated from field: float confidence = 2;
   */
  confidence: number;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Page.DetectedLanguage.
 * Use `create(Document_Page_DetectedLanguageSchema)` to create a new message.
 */
export const Document_Page_DetectedLanguageSchema: GenMessage<Document_Page_DetectedLanguage> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 2, 9);

/**
 * A phrase in the text that is a known entity type, such as a person, an
 * organization, or location.
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.Entity
 */
export type Document_Entity = Message<"google.cloud.documentai.v1beta1.Document.Entity"> & {
  /**
   * Provenance of the entity.
   * Text anchor indexing into the
   * [Document.text][google.cloud.documentai.v1beta1.Document.text].
   *
   * @generated from field: google.cloud.documentai.v1beta1.Document.TextAnchor text_anchor = 1;
   */
  textAnchor?: Document_TextAnchor;

  /**
   * Required. Entity type from a schema e.g. `Address`.
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * Text value in the document e.g. `1600 Amphitheatre Pkwy`.
   *
   * @generated from field: string mention_text = 3;
   */
  mentionText: string;

  /**
   * Canonical mention name. This will be a unique value in the entity list
   * for this document.
   *
   * @generated from field: string mention_id = 4;
   */
  mentionId: string;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.Entity.
 * Use `create(Document_EntitySchema)` to create a new message.
 */
export const Document_EntitySchema: GenMessage<Document_Entity> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 3);

/**
 * Relationship between
 * [Entities][google.cloud.documentai.v1beta1.Document.Entity].
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.EntityRelation
 */
export type Document_EntityRelation = Message<"google.cloud.documentai.v1beta1.Document.EntityRelation"> & {
  /**
   * Subject entity mention_id.
   *
   * @generated from field: string subject_id = 1;
   */
  subjectId: string;

  /**
   * Object entity mention_id.
   *
   * @generated from field: string object_id = 2;
   */
  objectId: string;

  /**
   * Relationship description.
   *
   * @generated from field: string relation = 3;
   */
  relation: string;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.EntityRelation.
 * Use `create(Document_EntityRelationSchema)` to create a new message.
 */
export const Document_EntityRelationSchema: GenMessage<Document_EntityRelation> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 4);

/**
 * Text reference indexing into the
 * [Document.text][google.cloud.documentai.v1beta1.Document.text].
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.TextAnchor
 */
export type Document_TextAnchor = Message<"google.cloud.documentai.v1beta1.Document.TextAnchor"> & {
  /**
   * The text segments from the
   * [Document.text][google.cloud.documentai.v1beta1.Document.text].
   *
   * @generated from field: repeated google.cloud.documentai.v1beta1.Document.TextAnchor.TextSegment text_segments = 1;
   */
  textSegments: Document_TextAnchor_TextSegment[];
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.TextAnchor.
 * Use `create(Document_TextAnchorSchema)` to create a new message.
 */
export const Document_TextAnchorSchema: GenMessage<Document_TextAnchor> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 5);

/**
 * A text segment in the
 * [Document.text][google.cloud.documentai.v1beta1.Document.text]. The
 * indices may be out of bounds which indicate that the text extends into
 * another document shard for large sharded documents. See
 * [ShardInfo.text_offset][google.cloud.documentai.v1beta1.Document.ShardInfo.text_offset]
 *
 * @generated from message google.cloud.documentai.v1beta1.Document.TextAnchor.TextSegment
 */
export type Document_TextAnchor_TextSegment = Message<"google.cloud.documentai.v1beta1.Document.TextAnchor.TextSegment"> & {
  /**
   * [TextSegment][google.cloud.documentai.v1beta1.Document.TextAnchor.TextSegment]
   * start UTF-8 char index in the
   * [Document.text][google.cloud.documentai.v1beta1.Document.text].
   *
   * @generated from field: int64 start_index = 1;
   */
  startIndex: bigint;

  /**
   * [TextSegment][google.cloud.documentai.v1beta1.Document.TextAnchor.TextSegment]
   * half open end UTF-8 char index in the
   * [Document.text][google.cloud.documentai.v1beta1.Document.text].
   *
   * @generated from field: int64 end_index = 2;
   */
  endIndex: bigint;
};

/**
 * Describes the message google.cloud.documentai.v1beta1.Document.TextAnchor.TextSegment.
 * Use `create(Document_TextAnchor_TextSegmentSchema)` to create a new message.
 */
export const Document_TextAnchor_TextSegmentSchema: GenMessage<Document_TextAnchor_TextSegment> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta1_document, 0, 5, 0);

