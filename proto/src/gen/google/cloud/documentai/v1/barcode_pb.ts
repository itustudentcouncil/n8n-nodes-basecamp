// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/documentai/v1/barcode.proto (package google.cloud.documentai.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/documentai/v1/barcode.proto.
 */
export const file_google_cloud_documentai_v1_barcode: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvY2xvdWQvZG9jdW1lbnRhaS92MS9iYXJjb2RlLnByb3RvEhpnb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MSJCCgdCYXJjb2RlEg4KBmZvcm1hdBgBIAEoCRIUCgx2YWx1ZV9mb3JtYXQYAiABKAkSEQoJcmF3X3ZhbHVlGAMgASgJQsoBCh5jb20uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFCDEJhcmNvZGVQcm90b1ABWj5jbG91ZC5nb29nbGUuY29tL2dvL2RvY3VtZW50YWkvYXBpdjEvZG9jdW1lbnRhaXBiO2RvY3VtZW50YWlwYqoCGkdvb2dsZS5DbG91ZC5Eb2N1bWVudEFJLlYxygIaR29vZ2xlXENsb3VkXERvY3VtZW50QUlcVjHqAh1Hb29nbGU6OkNsb3VkOjpEb2N1bWVudEFJOjpWMWIGcHJvdG8z");

/**
 * Encodes the detailed information of a barcode.
 *
 * @generated from message google.cloud.documentai.v1.Barcode
 */
export type Barcode = Message<"google.cloud.documentai.v1.Barcode"> & {
  /**
   * Format of a barcode.
   * The supported formats are:
   *
   * - `CODE_128`: Code 128 type.
   * - `CODE_39`: Code 39 type.
   * - `CODE_93`: Code 93 type.
   * - `CODABAR`: Codabar type.
   * - `DATA_MATRIX`: 2D Data Matrix type.
   * - `ITF`: ITF type.
   * - `EAN_13`: EAN-13 type.
   * - `EAN_8`: EAN-8 type.
   * - `QR_CODE`: 2D QR code type.
   * - `UPC_A`: UPC-A type.
   * - `UPC_E`: UPC-E type.
   * - `PDF417`: PDF417 type.
   * - `AZTEC`: 2D Aztec code type.
   * - `DATABAR`: GS1 DataBar code type.
   *
   * @generated from field: string format = 1;
   */
  format: string;

  /**
   * Value format describes the format of the value that a barcode
   * encodes.
   * The supported formats are:
   *
   * - `CONTACT_INFO`: Contact information.
   * - `EMAIL`: Email address.
   * - `ISBN`: ISBN identifier.
   * - `PHONE`: Phone number.
   * - `PRODUCT`: Product.
   * - `SMS`: SMS message.
   * - `TEXT`: Text string.
   * - `URL`: URL address.
   * - `WIFI`: Wifi information.
   * - `GEO`: Geo-localization.
   * - `CALENDAR_EVENT`: Calendar event.
   * - `DRIVER_LICENSE`: Driver's license.
   *
   * @generated from field: string value_format = 2;
   */
  valueFormat: string;

  /**
   * Raw value encoded in the barcode.
   * For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.
   *
   * @generated from field: string raw_value = 3;
   */
  rawValue: string;
};

/**
 * Describes the message google.cloud.documentai.v1.Barcode.
 * Use `create(BarcodeSchema)` to create a new message.
 */
export const BarcodeSchema: GenMessage<Barcode> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1_barcode, 0);

