// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/documentai/v1beta3/document_service.proto (package google.cloud.documentai.v1beta3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { BatchDatasetDocuments, Dataset, DatasetSchema, DatasetSchemaSchema, DocumentId } from "./dataset_pb";
import { file_google_cloud_documentai_v1beta3_dataset } from "./dataset_pb";
import type { Document } from "./document_pb";
import { file_google_cloud_documentai_v1beta3_document } from "./document_pb";
import type { BatchDocumentsInputConfig } from "./document_io_pb";
import { file_google_cloud_documentai_v1beta3_document_io } from "./document_io_pb";
import type { CommonOperationMetadata } from "./operation_metadata_pb";
import { file_google_cloud_documentai_v1beta3_operation_metadata } from "./operation_metadata_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/documentai/v1beta3/document_service.proto.
 */
export const file_google_cloud_documentai_v1beta3_document_service: GenFile = /*@__PURE__*/
  fileDesc("CjZnb29nbGUvY2xvdWQvZG9jdW1lbnRhaS92MWJldGEzL2RvY3VtZW50X3NlcnZpY2UucHJvdG8SH2dvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMihwEKFFVwZGF0ZURhdGFzZXRSZXF1ZXN0Ej4KB2RhdGFzZXQYASABKAsyKC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkRhdGFzZXRCA+BBAhIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2sicwoeVXBkYXRlRGF0YXNldE9wZXJhdGlvbk1ldGFkYXRhElEKD2NvbW1vbl9tZXRhZGF0YRgBIAEoCzI4Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuQ29tbW9uT3BlcmF0aW9uTWV0YWRhdGEi3wQKFkltcG9ydERvY3VtZW50c1JlcXVlc3QSOgoHZGF0YXNldBgBIAEoCUIp4EEC+kEjCiFkb2N1bWVudGFpLmdvb2dsZWFwaXMuY29tL0RhdGFzZXQSfwoeYmF0Y2hfZG9jdW1lbnRzX2ltcG9ydF9jb25maWdzGAQgAygLMlIuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMy5JbXBvcnREb2N1bWVudHNSZXF1ZXN0LkJhdGNoRG9jdW1lbnRzSW1wb3J0Q29uZmlnQgPgQQIahwMKGkJhdGNoRG9jdW1lbnRzSW1wb3J0Q29uZmlnEkoKDWRhdGFzZXRfc3BsaXQYAiABKA4yMS5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkRhdGFzZXRTcGxpdFR5cGVIABJ/ChFhdXRvX3NwbGl0X2NvbmZpZxgDIAEoCzJiLmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuSW1wb3J0RG9jdW1lbnRzUmVxdWVzdC5CYXRjaERvY3VtZW50c0ltcG9ydENvbmZpZy5BdXRvU3BsaXRDb25maWdIABJWChJiYXRjaF9pbnB1dF9jb25maWcYASABKAsyOi5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkJhdGNoRG9jdW1lbnRzSW5wdXRDb25maWcaLwoPQXV0b1NwbGl0Q29uZmlnEhwKFHRyYWluaW5nX3NwbGl0X3JhdGlvGAEgASgCQhMKEXNwbGl0X3R5cGVfY29uZmlnIhkKF0ltcG9ydERvY3VtZW50c1Jlc3BvbnNlIoAFChdJbXBvcnREb2N1bWVudHNNZXRhZGF0YRJRCg9jb21tb25fbWV0YWRhdGEYASABKAsyOC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkNvbW1vbk9wZXJhdGlvbk1ldGFkYXRhEnMKGmluZGl2aWR1YWxfaW1wb3J0X3N0YXR1c2VzGAIgAygLMk8uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMy5JbXBvcnREb2N1bWVudHNNZXRhZGF0YS5JbmRpdmlkdWFsSW1wb3J0U3RhdHVzEn8KIGltcG9ydF9jb25maWdfdmFsaWRhdGlvbl9yZXN1bHRzGAQgAygLMlUuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMy5JbXBvcnREb2N1bWVudHNNZXRhZGF0YS5JbXBvcnRDb25maWdWYWxpZGF0aW9uUmVzdWx0EhwKFHRvdGFsX2RvY3VtZW50X2NvdW50GAMgASgFGp8BChZJbmRpdmlkdWFsSW1wb3J0U3RhdHVzEhgKEGlucHV0X2djc19zb3VyY2UYASABKAkSIgoGc3RhdHVzGAIgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMSRwoSb3V0cHV0X2RvY3VtZW50X2lkGAQgASgLMisuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMy5Eb2N1bWVudElkGlwKHEltcG9ydENvbmZpZ1ZhbGlkYXRpb25SZXN1bHQSGAoQaW5wdXRfZ2NzX3NvdXJjZRgBIAEoCRIiCgZzdGF0dXMYAiABKAsyEi5nb29nbGUucnBjLlN0YXR1cyKOAgoSR2V0RG9jdW1lbnRSZXF1ZXN0EjoKB2RhdGFzZXQYASABKAlCKeBBAvpBIwohZG9jdW1lbnRhaS5nb29nbGVhcGlzLmNvbS9EYXRhc2V0EkUKC2RvY3VtZW50X2lkGAIgASgLMisuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMy5Eb2N1bWVudElkQgPgQQISLQoJcmVhZF9tYXNrGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzaxJGCgpwYWdlX3JhbmdlGAQgASgLMjIuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMy5Eb2N1bWVudFBhZ2VSYW5nZSJSChNHZXREb2N1bWVudFJlc3BvbnNlEjsKCGRvY3VtZW50GAEgASgLMikuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMy5Eb2N1bWVudCLBAQoUTGlzdERvY3VtZW50c1JlcXVlc3QSOgoHZGF0YXNldBgBIAEoCUIp4EEC+kEjCiFkb2N1bWVudGFpLmdvb2dsZWFwaXMuY29tL0RhdGFzZXQSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkSEwoGZmlsdGVyGAQgASgJQgPgQQESHgoRcmV0dXJuX3RvdGFsX3NpemUYBiABKAhCA+BBARIRCgRza2lwGAggASgFQgPgQQEikgEKFUxpc3REb2N1bWVudHNSZXNwb25zZRJMChFkb2N1bWVudF9tZXRhZGF0YRgBIAMoCzIxLmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuRG9jdW1lbnRNZXRhZGF0YRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSEgoKdG90YWxfc2l6ZRgDIAEoBSKLAQobQmF0Y2hEZWxldGVEb2N1bWVudHNSZXF1ZXN0EhQKB2RhdGFzZXQYASABKAlCA+BBAhJWChFkYXRhc2V0X2RvY3VtZW50cxgDIAEoCzI2Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuQmF0Y2hEYXRhc2V0RG9jdW1lbnRzQgPgQQIiHgocQmF0Y2hEZWxldGVEb2N1bWVudHNSZXNwb25zZSK5AwocQmF0Y2hEZWxldGVEb2N1bWVudHNNZXRhZGF0YRJRCg9jb21tb25fbWV0YWRhdGEYASABKAsyOC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkNvbW1vbk9wZXJhdGlvbk1ldGFkYXRhEoMBCiBpbmRpdmlkdWFsX2JhdGNoX2RlbGV0ZV9zdGF0dXNlcxgCIAMoCzJZLmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuQmF0Y2hEZWxldGVEb2N1bWVudHNNZXRhZGF0YS5JbmRpdmlkdWFsQmF0Y2hEZWxldGVTdGF0dXMSHAoUdG90YWxfZG9jdW1lbnRfY291bnQYAyABKAUSHAoUZXJyb3JfZG9jdW1lbnRfY291bnQYBCABKAUagwEKG0luZGl2aWR1YWxCYXRjaERlbGV0ZVN0YXR1cxJACgtkb2N1bWVudF9pZBgBIAEoCzIrLmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuRG9jdW1lbnRJZBIiCgZzdGF0dXMYAiABKAsyEi5nb29nbGUucnBjLlN0YXR1cyJ1ChdHZXREYXRhc2V0U2NoZW1hUmVxdWVzdBI9CgRuYW1lGAEgASgJQi/gQQL6QSkKJ2RvY3VtZW50YWkuZ29vZ2xlYXBpcy5jb20vRGF0YXNldFNjaGVtYRIbChN2aXNpYmxlX2ZpZWxkc19vbmx5GAIgASgIIpoBChpVcGRhdGVEYXRhc2V0U2NoZW1hUmVxdWVzdBJLCg5kYXRhc2V0X3NjaGVtYRgBIAEoCzIuLmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuRGF0YXNldFNjaGVtYUID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayIvChFEb2N1bWVudFBhZ2VSYW5nZRINCgVzdGFydBgBIAEoBRILCgNlbmQYAiABKAUilwIKEERvY3VtZW50TWV0YWRhdGESQAoLZG9jdW1lbnRfaWQYASABKAsyKy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkRvY3VtZW50SWQSEgoKcGFnZV9jb3VudBgCIAEoBRJHCgxkYXRhc2V0X3R5cGUYAyABKA4yMS5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkRhdGFzZXRTcGxpdFR5cGUSTgoObGFiZWxpbmdfc3RhdGUYBSABKA4yNi5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkRvY3VtZW50TGFiZWxpbmdTdGF0ZRIUCgxkaXNwbGF5X25hbWUYBiABKAkqhQEKEERhdGFzZXRTcGxpdFR5cGUSIgoeREFUQVNFVF9TUExJVF9UWVBFX1VOU1BFQ0lGSUVEEAASFwoTREFUQVNFVF9TUExJVF9UUkFJThABEhYKEkRBVEFTRVRfU1BMSVRfVEVTVBACEhwKGERBVEFTRVRfU1BMSVRfVU5BU1NJR05FRBADKokBChVEb2N1bWVudExhYmVsaW5nU3RhdGUSJwojRE9DVU1FTlRfTEFCRUxJTkdfU1RBVEVfVU5TUEVDSUZJRUQQABIUChBET0NVTUVOVF9MQUJFTEVEEAESFgoSRE9DVU1FTlRfVU5MQUJFTEVEEAISGQoVRE9DVU1FTlRfQVVUT19MQUJFTEVEEAMysw4KD0RvY3VtZW50U2VydmljZRL+AQoNVXBkYXRlRGF0YXNldBI1Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuVXBkYXRlRGF0YXNldFJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIpYBykEpCgdEYXRhc2V0Eh5VcGRhdGVEYXRhc2V0T3BlcmF0aW9uTWV0YWRhdGHaQRNkYXRhc2V0LHVwZGF0ZV9tYXNrgtPkkwJOOgdkYXRhc2V0MkMvdjFiZXRhMy97ZGF0YXNldC5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovcHJvY2Vzc29ycy8qL2RhdGFzZXR9EoQCCg9JbXBvcnREb2N1bWVudHMSNy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkltcG9ydERvY3VtZW50c1JlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIpgBykEyChdJbXBvcnREb2N1bWVudHNSZXNwb25zZRIXSW1wb3J0RG9jdW1lbnRzTWV0YWRhdGHaQQdkYXRhc2V0gtPkkwJTOgEqIk4vdjFiZXRhMy97ZGF0YXNldD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3Byb2Nlc3NvcnMvKi9kYXRhc2V0fTppbXBvcnREb2N1bWVudHMS1gEKC0dldERvY3VtZW50EjMuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMy5HZXREb2N1bWVudFJlcXVlc3QaNC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkdldERvY3VtZW50UmVzcG9uc2UiXNpBB2RhdGFzZXSC0+STAkwSSi92MWJldGEzL3tkYXRhc2V0PXByb2plY3RzLyovbG9jYXRpb25zLyovcHJvY2Vzc29ycy8qL2RhdGFzZXR9OmdldERvY3VtZW50EuEBCg1MaXN0RG9jdW1lbnRzEjUuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMy5MaXN0RG9jdW1lbnRzUmVxdWVzdBo2Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuTGlzdERvY3VtZW50c1Jlc3BvbnNlImHaQQdkYXRhc2V0gtPkkwJROgEqIkwvdjFiZXRhMy97ZGF0YXNldD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3Byb2Nlc3NvcnMvKi9kYXRhc2V0fTpsaXN0RG9jdW1lbnRzEp0CChRCYXRjaERlbGV0ZURvY3VtZW50cxI8Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuQmF0Y2hEZWxldGVEb2N1bWVudHNSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKnAcpBPAocQmF0Y2hEZWxldGVEb2N1bWVudHNSZXNwb25zZRIcQmF0Y2hEZWxldGVEb2N1bWVudHNNZXRhZGF0YdpBB2RhdGFzZXSC0+STAlg6ASoiUy92MWJldGEzL3tkYXRhc2V0PXByb2plY3RzLyovbG9jYXRpb25zLyovcHJvY2Vzc29ycy8qL2RhdGFzZXR9OmJhdGNoRGVsZXRlRG9jdW1lbnRzEtYBChBHZXREYXRhc2V0U2NoZW1hEjguZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMy5HZXREYXRhc2V0U2NoZW1hUmVxdWVzdBouLmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuRGF0YXNldFNjaGVtYSJY2kEEbmFtZYLT5JMCSxJJL3YxYmV0YTMve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9wcm9jZXNzb3JzLyovZGF0YXNldC9kYXRhc2V0U2NoZW1hfRKSAgoTVXBkYXRlRGF0YXNldFNjaGVtYRI7Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTMuVXBkYXRlRGF0YXNldFNjaGVtYVJlcXVlc3QaLi5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEzLkRhdGFzZXRTY2hlbWEijQHaQRpkYXRhc2V0X3NjaGVtYSx1cGRhdGVfbWFza4LT5JMCajoOZGF0YXNldF9zY2hlbWEyWC92MWJldGEzL3tkYXRhc2V0X3NjaGVtYS5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovcHJvY2Vzc29ycy8qL2RhdGFzZXQvZGF0YXNldFNjaGVtYX0aTcpBGWRvY3VtZW50YWkuZ29vZ2xlYXBpcy5jb23SQS5odHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtQvABCiNjb20uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhM0IZRG9jdW1lbnRBaURvY3VtZW50U2VydmljZVABWkNjbG91ZC5nb29nbGUuY29tL2dvL2RvY3VtZW50YWkvYXBpdjFiZXRhMy9kb2N1bWVudGFpcGI7ZG9jdW1lbnRhaXBiqgIfR29vZ2xlLkNsb3VkLkRvY3VtZW50QUkuVjFCZXRhM8oCH0dvb2dsZVxDbG91ZFxEb2N1bWVudEFJXFYxYmV0YTPqAiJHb29nbGU6OkNsb3VkOjpEb2N1bWVudEFJOjpWMWJldGEzYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_documentai_v1beta3_dataset, file_google_cloud_documentai_v1beta3_document, file_google_cloud_documentai_v1beta3_document_io, file_google_cloud_documentai_v1beta3_operation_metadata, file_google_longrunning_operations, file_google_protobuf_field_mask, file_google_rpc_status]);

/**
 * @generated from message google.cloud.documentai.v1beta3.UpdateDatasetRequest
 */
export type UpdateDatasetRequest = Message<"google.cloud.documentai.v1beta3.UpdateDatasetRequest"> & {
  /**
   * Required. The `name` field of the `Dataset` is used to identify the
   * resource to be updated.
   *
   * @generated from field: google.cloud.documentai.v1beta3.Dataset dataset = 1;
   */
  dataset?: Dataset;

  /**
   * The update mask applies to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.UpdateDatasetRequest.
 * Use `create(UpdateDatasetRequestSchema)` to create a new message.
 */
export const UpdateDatasetRequestSchema: GenMessage<UpdateDatasetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 0);

/**
 * @generated from message google.cloud.documentai.v1beta3.UpdateDatasetOperationMetadata
 */
export type UpdateDatasetOperationMetadata = Message<"google.cloud.documentai.v1beta3.UpdateDatasetOperationMetadata"> & {
  /**
   * The basic metadata of the long-running operation.
   *
   * @generated from field: google.cloud.documentai.v1beta3.CommonOperationMetadata common_metadata = 1;
   */
  commonMetadata?: CommonOperationMetadata;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.UpdateDatasetOperationMetadata.
 * Use `create(UpdateDatasetOperationMetadataSchema)` to create a new message.
 */
export const UpdateDatasetOperationMetadataSchema: GenMessage<UpdateDatasetOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 1);

/**
 * @generated from message google.cloud.documentai.v1beta3.ImportDocumentsRequest
 */
export type ImportDocumentsRequest = Message<"google.cloud.documentai.v1beta3.ImportDocumentsRequest"> & {
  /**
   * Required. The dataset resource name.
   * Format:
   * projects/{project}/locations/{location}/processors/{processor}/dataset
   *
   * @generated from field: string dataset = 1;
   */
  dataset: string;

  /**
   * Required. The Cloud Storage uri containing raw documents that must be
   * imported.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta3.ImportDocumentsRequest.BatchDocumentsImportConfig batch_documents_import_configs = 4;
   */
  batchDocumentsImportConfigs: ImportDocumentsRequest_BatchDocumentsImportConfig[];
};

/**
 * Describes the message google.cloud.documentai.v1beta3.ImportDocumentsRequest.
 * Use `create(ImportDocumentsRequestSchema)` to create a new message.
 */
export const ImportDocumentsRequestSchema: GenMessage<ImportDocumentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 2);

/**
 * Config for importing documents.
 * Each batch can have its own dataset split type.
 *
 * @generated from message google.cloud.documentai.v1beta3.ImportDocumentsRequest.BatchDocumentsImportConfig
 */
export type ImportDocumentsRequest_BatchDocumentsImportConfig = Message<"google.cloud.documentai.v1beta3.ImportDocumentsRequest.BatchDocumentsImportConfig"> & {
  /**
   * @generated from oneof google.cloud.documentai.v1beta3.ImportDocumentsRequest.BatchDocumentsImportConfig.split_type_config
   */
  splitTypeConfig: {
    /**
     * Target dataset split where the documents must be stored.
     *
     * @generated from field: google.cloud.documentai.v1beta3.DatasetSplitType dataset_split = 2;
     */
    value: DatasetSplitType;
    case: "datasetSplit";
  } | {
    /**
     * If set, documents will be automatically split into training and test
     * split category with the specified ratio.
     *
     * @generated from field: google.cloud.documentai.v1beta3.ImportDocumentsRequest.BatchDocumentsImportConfig.AutoSplitConfig auto_split_config = 3;
     */
    value: ImportDocumentsRequest_BatchDocumentsImportConfig_AutoSplitConfig;
    case: "autoSplitConfig";
  } | { case: undefined; value?: undefined };

  /**
   * The common config to specify a set of documents used as input.
   *
   * @generated from field: google.cloud.documentai.v1beta3.BatchDocumentsInputConfig batch_input_config = 1;
   */
  batchInputConfig?: BatchDocumentsInputConfig;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.ImportDocumentsRequest.BatchDocumentsImportConfig.
 * Use `create(ImportDocumentsRequest_BatchDocumentsImportConfigSchema)` to create a new message.
 */
export const ImportDocumentsRequest_BatchDocumentsImportConfigSchema: GenMessage<ImportDocumentsRequest_BatchDocumentsImportConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 2, 0);

/**
 * The config for auto-split.
 *
 * @generated from message google.cloud.documentai.v1beta3.ImportDocumentsRequest.BatchDocumentsImportConfig.AutoSplitConfig
 */
export type ImportDocumentsRequest_BatchDocumentsImportConfig_AutoSplitConfig = Message<"google.cloud.documentai.v1beta3.ImportDocumentsRequest.BatchDocumentsImportConfig.AutoSplitConfig"> & {
  /**
   * Ratio of training dataset split.
   *
   * @generated from field: float training_split_ratio = 1;
   */
  trainingSplitRatio: number;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.ImportDocumentsRequest.BatchDocumentsImportConfig.AutoSplitConfig.
 * Use `create(ImportDocumentsRequest_BatchDocumentsImportConfig_AutoSplitConfigSchema)` to create a new message.
 */
export const ImportDocumentsRequest_BatchDocumentsImportConfig_AutoSplitConfigSchema: GenMessage<ImportDocumentsRequest_BatchDocumentsImportConfig_AutoSplitConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 2, 0, 0);

/**
 * Response of the import document operation.
 *
 * @generated from message google.cloud.documentai.v1beta3.ImportDocumentsResponse
 */
export type ImportDocumentsResponse = Message<"google.cloud.documentai.v1beta3.ImportDocumentsResponse"> & {
};

/**
 * Describes the message google.cloud.documentai.v1beta3.ImportDocumentsResponse.
 * Use `create(ImportDocumentsResponseSchema)` to create a new message.
 */
export const ImportDocumentsResponseSchema: GenMessage<ImportDocumentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 3);

/**
 * Metadata of the import document operation.
 *
 * @generated from message google.cloud.documentai.v1beta3.ImportDocumentsMetadata
 */
export type ImportDocumentsMetadata = Message<"google.cloud.documentai.v1beta3.ImportDocumentsMetadata"> & {
  /**
   * The basic metadata of the long-running operation.
   *
   * @generated from field: google.cloud.documentai.v1beta3.CommonOperationMetadata common_metadata = 1;
   */
  commonMetadata?: CommonOperationMetadata;

  /**
   * The list of response details of each document.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta3.ImportDocumentsMetadata.IndividualImportStatus individual_import_statuses = 2;
   */
  individualImportStatuses: ImportDocumentsMetadata_IndividualImportStatus[];

  /**
   * Validation statuses of the batch documents import config.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta3.ImportDocumentsMetadata.ImportConfigValidationResult import_config_validation_results = 4;
   */
  importConfigValidationResults: ImportDocumentsMetadata_ImportConfigValidationResult[];

  /**
   * Total number of the documents that are qualified for importing.
   *
   * @generated from field: int32 total_document_count = 3;
   */
  totalDocumentCount: number;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.ImportDocumentsMetadata.
 * Use `create(ImportDocumentsMetadataSchema)` to create a new message.
 */
export const ImportDocumentsMetadataSchema: GenMessage<ImportDocumentsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 4);

/**
 * The status of each individual document in the import process.
 *
 * @generated from message google.cloud.documentai.v1beta3.ImportDocumentsMetadata.IndividualImportStatus
 */
export type ImportDocumentsMetadata_IndividualImportStatus = Message<"google.cloud.documentai.v1beta3.ImportDocumentsMetadata.IndividualImportStatus"> & {
  /**
   * The source Cloud Storage URI of the document.
   *
   * @generated from field: string input_gcs_source = 1;
   */
  inputGcsSource: string;

  /**
   * The status of the importing of the document.
   *
   * @generated from field: google.rpc.Status status = 2;
   */
  status?: Status;

  /**
   * The document id of imported document if it was successful, otherwise
   * empty.
   *
   * @generated from field: google.cloud.documentai.v1beta3.DocumentId output_document_id = 4;
   */
  outputDocumentId?: DocumentId;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.ImportDocumentsMetadata.IndividualImportStatus.
 * Use `create(ImportDocumentsMetadata_IndividualImportStatusSchema)` to create a new message.
 */
export const ImportDocumentsMetadata_IndividualImportStatusSchema: GenMessage<ImportDocumentsMetadata_IndividualImportStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 4, 0);

/**
 * The validation status of each import config. Status is set to an error if
 * there are no documents to import in the `import_config`, or `OK` if the
 * operation will try to proceed with at least one document.
 *
 * @generated from message google.cloud.documentai.v1beta3.ImportDocumentsMetadata.ImportConfigValidationResult
 */
export type ImportDocumentsMetadata_ImportConfigValidationResult = Message<"google.cloud.documentai.v1beta3.ImportDocumentsMetadata.ImportConfigValidationResult"> & {
  /**
   * The source Cloud Storage URI specified in the import config.
   *
   * @generated from field: string input_gcs_source = 1;
   */
  inputGcsSource: string;

  /**
   * The validation status of import config.
   *
   * @generated from field: google.rpc.Status status = 2;
   */
  status?: Status;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.ImportDocumentsMetadata.ImportConfigValidationResult.
 * Use `create(ImportDocumentsMetadata_ImportConfigValidationResultSchema)` to create a new message.
 */
export const ImportDocumentsMetadata_ImportConfigValidationResultSchema: GenMessage<ImportDocumentsMetadata_ImportConfigValidationResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 4, 1);

/**
 * @generated from message google.cloud.documentai.v1beta3.GetDocumentRequest
 */
export type GetDocumentRequest = Message<"google.cloud.documentai.v1beta3.GetDocumentRequest"> & {
  /**
   * Required. The resource name of the dataset that the document belongs to .
   * Format:
   * projects/{project}/locations/{location}/processors/{processor}/dataset
   *
   * @generated from field: string dataset = 1;
   */
  dataset: string;

  /**
   * Required. Document identifier.
   *
   * @generated from field: google.cloud.documentai.v1beta3.DocumentId document_id = 2;
   */
  documentId?: DocumentId;

  /**
   * If set, only fields listed here will be returned. Otherwise, all fields
   * will be returned by default.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 3;
   */
  readMask?: FieldMask;

  /**
   * List of pages for which the fields specified in the `read_mask` must
   * be served.
   *
   * @generated from field: google.cloud.documentai.v1beta3.DocumentPageRange page_range = 4;
   */
  pageRange?: DocumentPageRange;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.GetDocumentRequest.
 * Use `create(GetDocumentRequestSchema)` to create a new message.
 */
export const GetDocumentRequestSchema: GenMessage<GetDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 5);

/**
 * @generated from message google.cloud.documentai.v1beta3.GetDocumentResponse
 */
export type GetDocumentResponse = Message<"google.cloud.documentai.v1beta3.GetDocumentResponse"> & {
  /**
   * @generated from field: google.cloud.documentai.v1beta3.Document document = 1;
   */
  document?: Document;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.GetDocumentResponse.
 * Use `create(GetDocumentResponseSchema)` to create a new message.
 */
export const GetDocumentResponseSchema: GenMessage<GetDocumentResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 6);

/**
 * @generated from message google.cloud.documentai.v1beta3.ListDocumentsRequest
 */
export type ListDocumentsRequest = Message<"google.cloud.documentai.v1beta3.ListDocumentsRequest"> & {
  /**
   * Required. The resource name of the dataset to be listed.
   * Format:
   * projects/{project}/locations/{location}/processors/{processor}/dataset
   *
   * @generated from field: string dataset = 1;
   */
  dataset: string;

  /**
   * The maximum number of documents to return. The service may return
   * fewer than this value.
   * If unspecified, at most 20 documents will be returned.
   * The maximum value is 100; values above 100 will be coerced to 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListDocuments` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListDocuments`
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Query to filter the documents based on
   * https://google.aip.dev/160.
   * ## Currently support query strings are:
   *
   * `SplitType=DATASET_SPLIT_TEST|DATASET_SPLIT_TRAIN|DATASET_SPLIT_UNASSIGNED`
   * - `LabelingState=DOCUMENT_LABELED|DOCUMENT_UNLABELED|DOCUMENT_AUTO_LABELED`
   * - `DisplayName=\"file_name.pdf\"`
   * - `EntityType=abc/def`
   * - `TagName=\"auto-labeling-running\"|\"sampled\"`
   *
   * Note:
   * - Only `AND`, `=` and `!=` are supported.
   *     e.g. `DisplayName=file_name AND EntityType!=abc` IS supported.
   * - Wildcard `*` is supported only in `DisplayName` filter
   * - No duplicate filter keys are allowed,
   *     e.g. `EntityType=a AND EntityType=b` is NOT supported.
   * - String match is case sensitive (for filter `DisplayName` & `EntityType`).
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Controls if the request requires a total size of matched
   * documents. See
   * [ListDocumentsResponse.total_size][google.cloud.documentai.v1beta3.ListDocumentsResponse.total_size].
   *
   * Enabling this flag may adversely impact performance.
   *
   * Defaults to false.
   *
   * @generated from field: bool return_total_size = 6;
   */
  returnTotalSize: boolean;

  /**
   * Optional. Number of results to skip beginning from the `page_token` if
   * provided. https://google.aip.dev/158#skipping-results. It must be a
   * non-negative integer. Negative values will be rejected. Note that this is
   * not the number of pages to skip. If this value causes the cursor to move
   * past the end of results,
   * [ListDocumentsResponse.document_metadata][google.cloud.documentai.v1beta3.ListDocumentsResponse.document_metadata]
   * and
   * [ListDocumentsResponse.next_page_token][google.cloud.documentai.v1beta3.ListDocumentsResponse.next_page_token]
   * will be empty.
   *
   * @generated from field: int32 skip = 8;
   */
  skip: number;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.ListDocumentsRequest.
 * Use `create(ListDocumentsRequestSchema)` to create a new message.
 */
export const ListDocumentsRequestSchema: GenMessage<ListDocumentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 7);

/**
 * @generated from message google.cloud.documentai.v1beta3.ListDocumentsResponse
 */
export type ListDocumentsResponse = Message<"google.cloud.documentai.v1beta3.ListDocumentsResponse"> & {
  /**
   * Document metadata corresponding to the listed documents.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta3.DocumentMetadata document_metadata = 1;
   */
  documentMetadata: DocumentMetadata[];

  /**
   * A token, which can be sent as
   * [ListDocumentsRequest.page_token][google.cloud.documentai.v1beta3.ListDocumentsRequest.page_token]
   * to retrieve the next page. If this field is omitted, there are no
   * subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Total count of documents queried.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.ListDocumentsResponse.
 * Use `create(ListDocumentsResponseSchema)` to create a new message.
 */
export const ListDocumentsResponseSchema: GenMessage<ListDocumentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 8);

/**
 * @generated from message google.cloud.documentai.v1beta3.BatchDeleteDocumentsRequest
 */
export type BatchDeleteDocumentsRequest = Message<"google.cloud.documentai.v1beta3.BatchDeleteDocumentsRequest"> & {
  /**
   * Required. The dataset resource name.
   * Format:
   * projects/{project}/locations/{location}/processors/{processor}/dataset
   *
   * @generated from field: string dataset = 1;
   */
  dataset: string;

  /**
   * Required. Dataset documents input. If given `filter`, all documents
   * satisfying the filter will be deleted. If given documentIds, a maximum of
   * 50 documents can be deleted in a batch. The request will be rejected if
   * more than 50 document_ids are provided.
   *
   * @generated from field: google.cloud.documentai.v1beta3.BatchDatasetDocuments dataset_documents = 3;
   */
  datasetDocuments?: BatchDatasetDocuments;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.BatchDeleteDocumentsRequest.
 * Use `create(BatchDeleteDocumentsRequestSchema)` to create a new message.
 */
export const BatchDeleteDocumentsRequestSchema: GenMessage<BatchDeleteDocumentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 9);

/**
 * Response of the delete documents operation.
 *
 * @generated from message google.cloud.documentai.v1beta3.BatchDeleteDocumentsResponse
 */
export type BatchDeleteDocumentsResponse = Message<"google.cloud.documentai.v1beta3.BatchDeleteDocumentsResponse"> & {
};

/**
 * Describes the message google.cloud.documentai.v1beta3.BatchDeleteDocumentsResponse.
 * Use `create(BatchDeleteDocumentsResponseSchema)` to create a new message.
 */
export const BatchDeleteDocumentsResponseSchema: GenMessage<BatchDeleteDocumentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 10);

/**
 * @generated from message google.cloud.documentai.v1beta3.BatchDeleteDocumentsMetadata
 */
export type BatchDeleteDocumentsMetadata = Message<"google.cloud.documentai.v1beta3.BatchDeleteDocumentsMetadata"> & {
  /**
   * The basic metadata of the long-running operation.
   *
   * @generated from field: google.cloud.documentai.v1beta3.CommonOperationMetadata common_metadata = 1;
   */
  commonMetadata?: CommonOperationMetadata;

  /**
   * The list of response details of each document.
   *
   * @generated from field: repeated google.cloud.documentai.v1beta3.BatchDeleteDocumentsMetadata.IndividualBatchDeleteStatus individual_batch_delete_statuses = 2;
   */
  individualBatchDeleteStatuses: BatchDeleteDocumentsMetadata_IndividualBatchDeleteStatus[];

  /**
   * Total number of documents deleting from dataset.
   *
   * @generated from field: int32 total_document_count = 3;
   */
  totalDocumentCount: number;

  /**
   * Total number of documents that failed to be deleted in storage.
   *
   * @generated from field: int32 error_document_count = 4;
   */
  errorDocumentCount: number;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.BatchDeleteDocumentsMetadata.
 * Use `create(BatchDeleteDocumentsMetadataSchema)` to create a new message.
 */
export const BatchDeleteDocumentsMetadataSchema: GenMessage<BatchDeleteDocumentsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 11);

/**
 * The status of each individual document in the batch delete process.
 *
 * @generated from message google.cloud.documentai.v1beta3.BatchDeleteDocumentsMetadata.IndividualBatchDeleteStatus
 */
export type BatchDeleteDocumentsMetadata_IndividualBatchDeleteStatus = Message<"google.cloud.documentai.v1beta3.BatchDeleteDocumentsMetadata.IndividualBatchDeleteStatus"> & {
  /**
   * The document id of the document.
   *
   * @generated from field: google.cloud.documentai.v1beta3.DocumentId document_id = 1;
   */
  documentId?: DocumentId;

  /**
   * The status of deleting the document in storage.
   *
   * @generated from field: google.rpc.Status status = 2;
   */
  status?: Status;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.BatchDeleteDocumentsMetadata.IndividualBatchDeleteStatus.
 * Use `create(BatchDeleteDocumentsMetadata_IndividualBatchDeleteStatusSchema)` to create a new message.
 */
export const BatchDeleteDocumentsMetadata_IndividualBatchDeleteStatusSchema: GenMessage<BatchDeleteDocumentsMetadata_IndividualBatchDeleteStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 11, 0);

/**
 * Request for `GetDatasetSchema`.
 *
 * @generated from message google.cloud.documentai.v1beta3.GetDatasetSchemaRequest
 */
export type GetDatasetSchemaRequest = Message<"google.cloud.documentai.v1beta3.GetDatasetSchemaRequest"> & {
  /**
   * Required. The dataset schema resource name.
   * Format:
   * projects/{project}/locations/{location}/processors/{processor}/dataset/datasetSchema
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If set, only returns the visible fields of the schema.
   *
   * @generated from field: bool visible_fields_only = 2;
   */
  visibleFieldsOnly: boolean;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.GetDatasetSchemaRequest.
 * Use `create(GetDatasetSchemaRequestSchema)` to create a new message.
 */
export const GetDatasetSchemaRequestSchema: GenMessage<GetDatasetSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 12);

/**
 * Request for `UpdateDatasetSchema`.
 *
 * @generated from message google.cloud.documentai.v1beta3.UpdateDatasetSchemaRequest
 */
export type UpdateDatasetSchemaRequest = Message<"google.cloud.documentai.v1beta3.UpdateDatasetSchemaRequest"> & {
  /**
   * Required. The name field of the `DatasetSchema` is used to identify the
   * resource to be updated.
   *
   * @generated from field: google.cloud.documentai.v1beta3.DatasetSchema dataset_schema = 1;
   */
  datasetSchema?: DatasetSchema;

  /**
   * The update mask applies to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.UpdateDatasetSchemaRequest.
 * Use `create(UpdateDatasetSchemaRequestSchema)` to create a new message.
 */
export const UpdateDatasetSchemaRequestSchema: GenMessage<UpdateDatasetSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 13);

/**
 * Range of pages present in a document.
 *
 * @generated from message google.cloud.documentai.v1beta3.DocumentPageRange
 */
export type DocumentPageRange = Message<"google.cloud.documentai.v1beta3.DocumentPageRange"> & {
  /**
   * First page number (one-based index) to be returned.
   *
   * @generated from field: int32 start = 1;
   */
  start: number;

  /**
   * Last page number (one-based index) to be returned.
   *
   * @generated from field: int32 end = 2;
   */
  end: number;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.DocumentPageRange.
 * Use `create(DocumentPageRangeSchema)` to create a new message.
 */
export const DocumentPageRangeSchema: GenMessage<DocumentPageRange> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 14);

/**
 * Metadata about a document.
 *
 * @generated from message google.cloud.documentai.v1beta3.DocumentMetadata
 */
export type DocumentMetadata = Message<"google.cloud.documentai.v1beta3.DocumentMetadata"> & {
  /**
   * Document identifier.
   *
   * @generated from field: google.cloud.documentai.v1beta3.DocumentId document_id = 1;
   */
  documentId?: DocumentId;

  /**
   * Number of pages in the document.
   *
   * @generated from field: int32 page_count = 2;
   */
  pageCount: number;

  /**
   * Type of the dataset split to which the document belongs.
   *
   * @generated from field: google.cloud.documentai.v1beta3.DatasetSplitType dataset_type = 3;
   */
  datasetType: DatasetSplitType;

  /**
   * Labeling state of the document.
   *
   * @generated from field: google.cloud.documentai.v1beta3.DocumentLabelingState labeling_state = 5;
   */
  labelingState: DocumentLabelingState;

  /**
   * The display name of the document.
   *
   * @generated from field: string display_name = 6;
   */
  displayName: string;
};

/**
 * Describes the message google.cloud.documentai.v1beta3.DocumentMetadata.
 * Use `create(DocumentMetadataSchema)` to create a new message.
 */
export const DocumentMetadataSchema: GenMessage<DocumentMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_documentai_v1beta3_document_service, 15);

/**
 * Documents belonging to a dataset will be split into different groups
 * referred to as splits: train, test.
 *
 * @generated from enum google.cloud.documentai.v1beta3.DatasetSplitType
 */
export enum DatasetSplitType {
  /**
   * Default value if the enum is not set.
   *
   * @generated from enum value: DATASET_SPLIT_TYPE_UNSPECIFIED = 0;
   */
  DATASET_SPLIT_TYPE_UNSPECIFIED = 0,

  /**
   * Identifies the train documents.
   *
   * @generated from enum value: DATASET_SPLIT_TRAIN = 1;
   */
  DATASET_SPLIT_TRAIN = 1,

  /**
   * Identifies the test documents.
   *
   * @generated from enum value: DATASET_SPLIT_TEST = 2;
   */
  DATASET_SPLIT_TEST = 2,

  /**
   * Identifies the unassigned documents.
   *
   * @generated from enum value: DATASET_SPLIT_UNASSIGNED = 3;
   */
  DATASET_SPLIT_UNASSIGNED = 3,
}

/**
 * Describes the enum google.cloud.documentai.v1beta3.DatasetSplitType.
 */
export const DatasetSplitTypeSchema: GenEnum<DatasetSplitType> = /*@__PURE__*/
  enumDesc(file_google_cloud_documentai_v1beta3_document_service, 0);

/**
 * Describes the labeling status of a document.
 *
 * @generated from enum google.cloud.documentai.v1beta3.DocumentLabelingState
 */
export enum DocumentLabelingState {
  /**
   * Default value if the enum is not set.
   *
   * @generated from enum value: DOCUMENT_LABELING_STATE_UNSPECIFIED = 0;
   */
  DOCUMENT_LABELING_STATE_UNSPECIFIED = 0,

  /**
   * Document has been labeled.
   *
   * @generated from enum value: DOCUMENT_LABELED = 1;
   */
  DOCUMENT_LABELED = 1,

  /**
   * Document has not been labeled.
   *
   * @generated from enum value: DOCUMENT_UNLABELED = 2;
   */
  DOCUMENT_UNLABELED = 2,

  /**
   * Document has been auto-labeled.
   *
   * @generated from enum value: DOCUMENT_AUTO_LABELED = 3;
   */
  DOCUMENT_AUTO_LABELED = 3,
}

/**
 * Describes the enum google.cloud.documentai.v1beta3.DocumentLabelingState.
 */
export const DocumentLabelingStateSchema: GenEnum<DocumentLabelingState> = /*@__PURE__*/
  enumDesc(file_google_cloud_documentai_v1beta3_document_service, 1);

/**
 * Service to call Cloud DocumentAI to manage document collection (dataset).
 *
 * @generated from service google.cloud.documentai.v1beta3.DocumentService
 */
export const DocumentService: GenService<{
  /**
   * Updates metadata associated with a dataset.
   * Note that this method requires the
   * `documentai.googleapis.com/datasets.update` permission on the project,
   * which is highly privileged. A user or service account with this permission
   * can create new processors that can interact with any gcs bucket in your
   * project.
   *
   * @generated from rpc google.cloud.documentai.v1beta3.DocumentService.UpdateDataset
   */
  updateDataset: {
    methodKind: "unary";
    input: typeof UpdateDatasetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Import documents into a dataset.
   *
   * @generated from rpc google.cloud.documentai.v1beta3.DocumentService.ImportDocuments
   */
  importDocuments: {
    methodKind: "unary";
    input: typeof ImportDocumentsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Returns relevant fields present in the requested document.
   *
   * @generated from rpc google.cloud.documentai.v1beta3.DocumentService.GetDocument
   */
  getDocument: {
    methodKind: "unary";
    input: typeof GetDocumentRequestSchema;
    output: typeof GetDocumentResponseSchema;
  },
  /**
   * Returns a list of documents present in the dataset.
   *
   * @generated from rpc google.cloud.documentai.v1beta3.DocumentService.ListDocuments
   */
  listDocuments: {
    methodKind: "unary";
    input: typeof ListDocumentsRequestSchema;
    output: typeof ListDocumentsResponseSchema;
  },
  /**
   * Deletes a set of documents.
   *
   * @generated from rpc google.cloud.documentai.v1beta3.DocumentService.BatchDeleteDocuments
   */
  batchDeleteDocuments: {
    methodKind: "unary";
    input: typeof BatchDeleteDocumentsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets the `DatasetSchema` of a `Dataset`.
   *
   * @generated from rpc google.cloud.documentai.v1beta3.DocumentService.GetDatasetSchema
   */
  getDatasetSchema: {
    methodKind: "unary";
    input: typeof GetDatasetSchemaRequestSchema;
    output: typeof DatasetSchemaSchema;
  },
  /**
   * Updates a `DatasetSchema`.
   *
   * @generated from rpc google.cloud.documentai.v1beta3.DocumentService.UpdateDatasetSchema
   */
  updateDatasetSchema: {
    methodKind: "unary";
    input: typeof UpdateDatasetSchemaRequestSchema;
    output: typeof DatasetSchemaSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_documentai_v1beta3_document_service, 0);

