// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/gdchardwaremanagement/v1alpha/resources.proto (package google.cloud.gdchardwaremanagement.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_field_info } from "../../../api/field_info_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Date } from "../../../type/date_pb";
import { file_google_type_date } from "../../../type/date_pb";
import type { TimeZone } from "../../../type/datetime_pb";
import { file_google_type_datetime } from "../../../type/datetime_pb";
import type { DayOfWeek } from "../../../type/dayofweek_pb";
import { file_google_type_dayofweek } from "../../../type/dayofweek_pb";
import type { PostalAddress } from "../../../type/postal_address_pb";
import { file_google_type_postal_address } from "../../../type/postal_address_pb";
import type { TimeOfDay } from "../../../type/timeofday_pb";
import { file_google_type_timeofday } from "../../../type/timeofday_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/gdchardwaremanagement/v1alpha/resources.proto.
 */
export const file_google_cloud_gdchardwaremanagement_v1alpha_resources: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_api_field_info, file_google_api_resource, file_google_protobuf_timestamp, file_google_type_date, file_google_type_datetime, file_google_type_dayofweek, file_google_type_postal_address, file_google_type_timeofday]);

/**
 * An order for GDC hardware.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.Order
 */
export type Order = Message<"google.cloud.gdchardwaremanagement.v1alpha.Order"> & {
  /**
   * Identifier. Name of this order.
   * Format: `projects/{project}/locations/{location}/orders/{order}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Display name of this order.
   *
   * @generated from field: string display_name = 13;
   */
  displayName: string;

  /**
   * Output only. Time when this order was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time when this order was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels associated with this order as key value pairs.
   * For more information about labels, see [Create and manage
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Output only. State of this order. On order creation, state will be set to
   * DRAFT.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.Order.State state = 5;
   */
  state: Order_State;

  /**
   * Required. Customer contact information.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.OrganizationContact organization_contact = 6;
   */
  organizationContact?: OrganizationContact;

  /**
   * Optional. Customer specified workloads of interest targeted by this order.
   * This must contain <= 20 elements and the length of each element must be <=
   * 50 characters.
   *
   * @generated from field: repeated string target_workloads = 7;
   */
  targetWorkloads: string[];

  /**
   * Required. Information about the customer's motivation for this order. The
   * length of this field must be <= 1000 characters.
   *
   * @generated from field: string customer_motivation = 8;
   */
  customerMotivation: string;

  /**
   * Required. Customer specified deadline by when this order should be
   * fulfilled.
   *
   * @generated from field: google.protobuf.Timestamp fulfillment_time = 9;
   */
  fulfillmentTime?: Timestamp;

  /**
   * Required. [Unicode CLDR](http://cldr.unicode.org/) region code where this
   * order will be deployed. For a list of valid CLDR region codes, see the
   * [Language Subtag
   * Registry](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry).
   *
   * @generated from field: string region_code = 10;
   */
  regionCode: string;

  /**
   * Output only. Link to the order form.
   *
   * @generated from field: string order_form_uri = 11;
   */
  orderFormUri: string;

  /**
   * Output only. Type of this Order.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.Order.Type type = 12;
   */
  type: Order_Type;

  /**
   * Output only. Time when the order was submitted. Is auto-populated to the
   * current time when an order is submitted.
   *
   * @generated from field: google.protobuf.Timestamp submit_time = 14;
   */
  submitTime?: Timestamp;

  /**
   * Required. The Google Cloud Billing ID to be charged for this order.
   *
   * @generated from field: string billing_id = 15;
   */
  billingId: string;

  /**
   * Optional. Existing hardware to be removed as part of this order.
   * Note: any hardware removed will be recycled unless otherwise agreed.
   *
   * @generated from field: repeated google.cloud.gdchardwaremanagement.v1alpha.HardwareLocation existing_hardware = 16;
   */
  existingHardware: HardwareLocation[];
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.Order.
 * Use `create(OrderSchema)` to create a new message.
 */
export const OrderSchema: GenMessage<Order> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 0);

/**
 * Valid states of an order.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.Order.State
 */
export enum Order_State {
  /**
   * State of the order is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Order is being drafted by the customer and has not been submitted yet.
   *
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * Order has been submitted to Google.
   *
   * @generated from enum value: SUBMITTED = 2;
   */
  SUBMITTED = 2,

  /**
   * All information required from the customer for fulfillment of the order
   * is complete.
   *
   * @generated from enum value: INFO_COMPLETE = 12;
   */
  INFO_COMPLETE = 12,

  /**
   * Order has been accepted by Google.
   *
   * @generated from enum value: ACCEPTED = 3;
   */
  ACCEPTED = 3,

  /**
   * Order needs more information from the customer.
   *
   * @generated from enum value: ADDITIONAL_INFO_NEEDED = 4;
   */
  ADDITIONAL_INFO_NEEDED = 4,

  /**
   * Google has initiated building hardware for the order.
   *
   * @generated from enum value: BUILDING = 5;
   */
  BUILDING = 5,

  /**
   * The hardware has been built and is being shipped.
   *
   * @generated from enum value: SHIPPING = 6;
   */
  SHIPPING = 6,

  /**
   * The hardware is being installed.
   *
   * @generated from enum value: INSTALLING = 7;
   */
  INSTALLING = 7,

  /**
   * An error occurred in processing the order and customer intervention is
   * required.
   *
   * @generated from enum value: FAILED = 8;
   */
  FAILED = 8,

  /**
   * Order has been partially completed i.e., some hardware have been
   * delivered and installed.
   *
   * @generated from enum value: PARTIALLY_COMPLETED = 9;
   */
  PARTIALLY_COMPLETED = 9,

  /**
   * Order has been completed.
   *
   * @generated from enum value: COMPLETED = 10;
   */
  COMPLETED = 10,

  /**
   * Order has been cancelled.
   *
   * @generated from enum value: CANCELLED = 11;
   */
  CANCELLED = 11,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.Order.State.
 */
export const Order_StateSchema: GenEnum<Order_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 0, 0);

/**
 * Valid types of an Order.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.Order.Type
 */
export enum Order_Type {
  /**
   * Type of the order is unspecified.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Paid by the customer.
   *
   * @generated from enum value: PAID = 1;
   */
  PAID = 1,

  /**
   * Proof of concept for the customer.
   *
   * @generated from enum value: POC = 2;
   */
  POC = 2,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.Order.Type.
 */
export const Order_TypeSchema: GenEnum<Order_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 0, 1);

/**
 * A physical site where hardware will be installed.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.Site
 */
export type Site = Message<"google.cloud.gdchardwaremanagement.v1alpha.Site"> & {
  /**
   * Identifier. Name of the site.
   * Format: `projects/{project}/locations/{location}/sites/{site}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Display name of this Site.
   *
   * @generated from field: string display_name = 24;
   */
  displayName: string;

  /**
   * Optional. Description of this Site.
   *
   * @generated from field: string description = 25;
   */
  description: string;

  /**
   * Output only. Time when this site was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time when this site was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels associated with this site as key value pairs.
   * For more information about labels, see [Create and manage
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Required. Contact information for this site.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.OrganizationContact organization_contact = 5;
   */
  organizationContact?: OrganizationContact;

  /**
   * Required. A URL to the Google Maps address location of the site.
   * An example value is `https://goo.gl/maps/xxxxxxxxx`.
   *
   * @generated from field: string google_maps_pin_uri = 6;
   */
  googleMapsPinUri: string;

  /**
   * Optional. The time periods when the site is accessible.
   * If this field is empty, the site is accessible at all times.
   *
   * This field is used by Google to schedule the initial installation as well
   * as any later hardware maintenance. You may update this at any time. For
   * example, if the initial installation is requested during off-hours but
   * maintenance should be performed during regular business hours, you should
   * update the access times after initial installation is complete.
   *
   * @generated from field: repeated google.cloud.gdchardwaremanagement.v1alpha.TimePeriod access_times = 26;
   */
  accessTimes: TimePeriod[];

  /**
   * Optional. Any additional notes for this Site. Please include information
   * about:
   *  - security or access restrictions
   *  - any regulations affecting the technicians visiting the site
   *  - any special process or approval required to move the equipment
   *  - whether a representative will be available during site visits
   *
   * @generated from field: string notes = 27;
   */
  notes: string;

  /**
   * Optional. Customer defined identifier for this Site. This can be used to
   * identify the site in the customer's own systems.
   *
   * @generated from field: string customer_site_id = 28;
   */
  customerSiteId: string;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.Site.
 * Use `create(SiteSchema)` to create a new message.
 */
export const SiteSchema: GenMessage<Site> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 1);

/**
 * A group of hardware that is part of the same order, has the same SKU, and is
 * delivered to the same site.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.HardwareGroup
 */
export type HardwareGroup = Message<"google.cloud.gdchardwaremanagement.v1alpha.HardwareGroup"> & {
  /**
   * Identifier. Name of this hardware group.
   * Format:
   * `projects/{project}/locations/{location}/orders/{order}/hardwareGroups/{hardware_group}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Time when this hardware group was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time when this hardware group was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels associated with this hardware group as key value pairs.
   * For more information about labels, see [Create and manage
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Required. Number of hardware in this HardwareGroup.
   *
   * @generated from field: int32 hardware_count = 5;
   */
  hardwareCount: number;

  /**
   * Required. Configuration for hardware in this HardwareGroup.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.HardwareConfig config = 6;
   */
  config?: HardwareConfig;

  /**
   * Required. Name of the site where the hardware in this HardwareGroup will be
   * delivered.
   * Format: `projects/{project}/locations/{location}/sites/{site}`
   *
   * @generated from field: string site = 7;
   */
  site: string;

  /**
   * Output only. Current state of this HardwareGroup.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.HardwareGroup.State state = 8;
   */
  state: HardwareGroup_State;

  /**
   * Optional. Name of the zone that the hardware in this HardwareGroup belongs
   * to. Format: `projects/{project}/locations/{location}/zones/{zone}`
   *
   * @generated from field: string zone = 9;
   */
  zone: string;

  /**
   * Optional. Requested installation date for the hardware in this
   * HardwareGroup. Filled in by the customer.
   *
   * @generated from field: google.type.Date requested_installation_date = 10;
   */
  requestedInstallationDate?: Date;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.HardwareGroup.
 * Use `create(HardwareGroupSchema)` to create a new message.
 */
export const HardwareGroupSchema: GenMessage<HardwareGroup> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 2);

/**
 * Valid states of a HardwareGroup.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.HardwareGroup.State
 */
export enum HardwareGroup_State {
  /**
   * State of the HardwareGroup is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * More information is required from the customer to make progress.
   *
   * @generated from enum value: ADDITIONAL_INFO_NEEDED = 1;
   */
  ADDITIONAL_INFO_NEEDED = 1,

  /**
   * Google has initiated building hardware for this HardwareGroup.
   *
   * @generated from enum value: BUILDING = 2;
   */
  BUILDING = 2,

  /**
   * The hardware has been built and is being shipped.
   *
   * @generated from enum value: SHIPPING = 3;
   */
  SHIPPING = 3,

  /**
   * The hardware is being installed.
   *
   * @generated from enum value: INSTALLING = 4;
   */
  INSTALLING = 4,

  /**
   * Some hardware in the HardwareGroup have been installed.
   *
   * @generated from enum value: PARTIALLY_INSTALLED = 5;
   */
  PARTIALLY_INSTALLED = 5,

  /**
   * All hardware in the HardwareGroup have been installed.
   *
   * @generated from enum value: INSTALLED = 6;
   */
  INSTALLED = 6,

  /**
   * An error occurred and customer intervention is required.
   *
   * @generated from enum value: FAILED = 7;
   */
  FAILED = 7,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.HardwareGroup.State.
 */
export const HardwareGroup_StateSchema: GenEnum<HardwareGroup_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 2, 0);

/**
 * An instance of hardware installed at a site.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.Hardware
 */
export type Hardware = Message<"google.cloud.gdchardwaremanagement.v1alpha.Hardware"> & {
  /**
   * Identifier. Name of this hardware.
   * Format: `projects/{project}/locations/{location}/hardware/{hardware}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Display name for this hardware.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Output only. Time when this hardware was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time when this hardware was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels associated with this hardware as key value pairs.
   * For more information about labels, see [Create and manage
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * Required. Name of the order that this hardware belongs to.
   * Format: `projects/{project}/locations/{location}/orders/{order}`
   *
   * @generated from field: string order = 6;
   */
  order: string;

  /**
   * Output only. Name for the hardware group that this hardware belongs to.
   * Format:
   * `projects/{project}/locations/{location}/orders/{order}/hardwareGroups/{hardware_group}`
   *
   * @generated from field: string hardware_group = 7;
   */
  hardwareGroup: string;

  /**
   * Required. Name for the site that this hardware belongs to.
   * Format: `projects/{project}/locations/{location}/sites/{site}`
   *
   * @generated from field: string site = 8;
   */
  site: string;

  /**
   * Output only. Current state for this hardware.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.Hardware.State state = 9;
   */
  state: Hardware_State;

  /**
   * Output only. Link to the Customer Intake Questionnaire (CIQ) sheet for this
   * Hardware.
   *
   * @generated from field: string ciq_uri = 10;
   */
  ciqUri: string;

  /**
   * Required. Configuration for this hardware.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.HardwareConfig config = 11;
   */
  config?: HardwareConfig;

  /**
   * Output only. Estimated installation date for this hardware.
   *
   * @generated from field: google.type.Date estimated_installation_date = 12;
   */
  estimatedInstallationDate?: Date;

  /**
   * Optional. Physical properties of this hardware.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo physical_info = 13;
   */
  physicalInfo?: HardwarePhysicalInfo;

  /**
   * Optional. Information for installation of this hardware.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo installation_info = 14;
   */
  installationInfo?: HardwareInstallationInfo;

  /**
   * Required. Name for the zone that this hardware belongs to.
   * Format: `projects/{project}/locations/{location}/zones/{zone}`
   *
   * @generated from field: string zone = 15;
   */
  zone: string;

  /**
   * Optional. Requested installation date for this hardware. This is
   * auto-populated when the order is accepted, if the hardware's HardwareGroup
   * specifies this. It can also be filled in by the customer.
   *
   * @generated from field: google.type.Date requested_installation_date = 16;
   */
  requestedInstallationDate?: Date;

  /**
   * Output only. Actual installation date for this hardware. Filled in by
   * Google.
   *
   * @generated from field: google.type.Date actual_installation_date = 17;
   */
  actualInstallationDate?: Date;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.Hardware.
 * Use `create(HardwareSchema)` to create a new message.
 */
export const HardwareSchema: GenMessage<Hardware> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 3);

/**
 * Valid states for hardware.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.Hardware.State
 */
export enum Hardware_State {
  /**
   * State of the Hardware is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * More information is required from the customer to make progress.
   *
   * @generated from enum value: ADDITIONAL_INFO_NEEDED = 1;
   */
  ADDITIONAL_INFO_NEEDED = 1,

  /**
   * Google has initiated building hardware for this Hardware.
   *
   * @generated from enum value: BUILDING = 2;
   */
  BUILDING = 2,

  /**
   * The hardware has been built and is being shipped.
   *
   * @generated from enum value: SHIPPING = 3;
   */
  SHIPPING = 3,

  /**
   * The hardware is being installed.
   *
   * @generated from enum value: INSTALLING = 4;
   */
  INSTALLING = 4,

  /**
   * The hardware has been installed.
   *
   * @generated from enum value: INSTALLED = 5;
   */
  INSTALLED = 5,

  /**
   * An error occurred and customer intervention is required.
   *
   * @generated from enum value: FAILED = 6;
   */
  FAILED = 6,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.Hardware.State.
 */
export const Hardware_StateSchema: GenEnum<Hardware_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 3, 0);

/**
 * A comment on an order.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.Comment
 */
export type Comment = Message<"google.cloud.gdchardwaremanagement.v1alpha.Comment"> & {
  /**
   * Identifier. Name of this comment.
   * Format:
   * `projects/{project}/locations/{location}/orders/{order}/comments/{comment}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Time when this comment was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Optional. Labels associated with this comment as key value pairs.
   * For more information about labels, see [Create and manage
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
   *
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };

  /**
   * Output only. Username of the author of this comment. This is auto-populated
   * from the credentials used during creation of the comment.
   *
   * @generated from field: string author = 4;
   */
  author: string;

  /**
   * Required. Text of this comment. The length of text must be <= 1000
   * characters.
   *
   * @generated from field: string text = 5;
   */
  text: string;

  /**
   * Output only. Timestamp of the first time this comment was viewed by the
   * customer. If the comment wasn't viewed then this timestamp will be unset.
   *
   * @generated from field: google.protobuf.Timestamp customer_viewed_time = 6;
   */
  customerViewedTime?: Timestamp;

  /**
   * Output only. The entity the author belongs to.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.Entity author_entity = 7;
   */
  authorEntity: Entity;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.Comment.
 * Use `create(CommentSchema)` to create a new message.
 */
export const CommentSchema: GenMessage<Comment> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 4);

/**
 * A log entry of a change made to an order.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.ChangeLogEntry
 */
export type ChangeLogEntry = Message<"google.cloud.gdchardwaremanagement.v1alpha.ChangeLogEntry"> & {
  /**
   * Identifier. Name of this change log entry.
   * Format:
   * `projects/{project}/locations/{location}/orders/{order}/changeLogEntries/{change_log_entry}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Time when this change log entry was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Optional. Labels associated with this change log entry as key value pairs.
   * For more information about labels, see [Create and manage
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
   *
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };

  /**
   * Output only. Content of this log entry.
   *
   * @generated from field: string log = 4;
   */
  log: string;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.ChangeLogEntry.
 * Use `create(ChangeLogEntrySchema)` to create a new message.
 */
export const ChangeLogEntrySchema: GenMessage<ChangeLogEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 5);

/**
 * A stock keeping unit (SKU) of GDC hardware.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.Sku
 */
export type Sku = Message<"google.cloud.gdchardwaremanagement.v1alpha.Sku"> & {
  /**
   * Identifier. Name of this SKU.
   * Format: `projects/{project}/locations/{location}/skus/{sku}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Display name of this SKU.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Output only. Time when this SKU was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time when this SKU was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * Output only. Configuration for this SKU.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.SkuConfig config = 6;
   */
  config?: SkuConfig;

  /**
   * Output only. Available instances of this SKU. This field should be used for
   * checking availability of a SKU.
   *
   * @generated from field: repeated google.cloud.gdchardwaremanagement.v1alpha.SkuInstance instances = 7;
   */
  instances: SkuInstance[];

  /**
   * Output only. Description of this SKU.
   *
   * @generated from field: string description = 8;
   */
  description: string;

  /**
   * Output only. The SKU revision ID.
   * A new revision is created whenever `config` is updated. The format is an
   * 8-character hexadecimal string.
   *
   * @generated from field: string revision_id = 9;
   */
  revisionId: string;

  /**
   * Output only. Flag to indicate whether or not this revision is active. Only
   * an active revision can be used in a new Order.
   *
   * @generated from field: bool is_active = 10;
   */
  isActive: boolean;

  /**
   * Output only. Type of this SKU.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.Sku.Type type = 11;
   */
  type: Sku_Type;

  /**
   * Output only. The vCPU count associated with this SKU.
   *
   * @generated from field: int32 vcpu_count = 12;
   */
  vcpuCount: number;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.Sku.
 * Use `create(SkuSchema)` to create a new message.
 */
export const SkuSchema: GenMessage<Sku> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 6);

/**
 * Valid types of a SKU.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.Sku.Type
 */
export enum Sku_Type {
  /**
   * Type of the SKU is unspecified. This is not an allowed value.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Rack SKU.
   *
   * @generated from enum value: RACK = 1;
   */
  RACK = 1,

  /**
   * Server SKU.
   *
   * @generated from enum value: SERVER = 2;
   */
  SERVER = 2,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.Sku.Type.
 */
export const Sku_TypeSchema: GenEnum<Sku_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 6, 0);

/**
 * A zone holding a set of hardware.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.Zone
 */
export type Zone = Message<"google.cloud.gdchardwaremanagement.v1alpha.Zone"> & {
  /**
   * Identifier. Name of this zone.
   * Format: `projects/{project}/locations/{location}/zones/{zone}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Time when this zone was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time when this zone was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels associated with this zone as key value pairs.
   * For more information about labels, see [Create and manage
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Human friendly display name of this zone.
   *
   * @generated from field: string display_name = 5;
   */
  displayName: string;

  /**
   * Output only. Current state for this zone.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.Zone.State state = 8;
   */
  state: Zone_State;

  /**
   * Required. The points of contact.
   *
   * @generated from field: repeated google.cloud.gdchardwaremanagement.v1alpha.Contact contacts = 9;
   */
  contacts: Contact[];

  /**
   * Output only. Link to the Customer Intake Questionnaire (CIQ) sheet for this
   * zone.
   *
   * @generated from field: string ciq_uri = 10;
   */
  ciqUri: string;

  /**
   * Optional. Networking configuration for this zone.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig network_config = 11;
   */
  networkConfig?: ZoneNetworkConfig;

  /**
   * Output only. Globally unique identifier generated for this Edge Zone.
   *
   * @generated from field: string globally_unique_id = 12;
   */
  globallyUniqueId: string;

  /**
   * Output only. Subscription configurations for this zone.
   *
   * @generated from field: repeated google.cloud.gdchardwaremanagement.v1alpha.SubscriptionConfig subscription_configs = 13;
   */
  subscriptionConfigs: SubscriptionConfig[];
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.Zone.
 * Use `create(ZoneSchema)` to create a new message.
 */
export const ZoneSchema: GenMessage<Zone> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 7);

/**
 * Valid states for a zone.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.Zone.State
 */
export enum Zone_State {
  /**
   * State of the Zone is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * More information is required from the customer to make progress.
   *
   * @generated from enum value: ADDITIONAL_INFO_NEEDED = 1;
   */
  ADDITIONAL_INFO_NEEDED = 1,

  /**
   * Google is preparing the Zone.
   *
   * @generated from enum value: PREPARING = 2;
   */
  PREPARING = 2,

  /**
   * Factory turnup has succeeded.
   *
   * @generated from enum value: READY_FOR_CUSTOMER_FACTORY_TURNUP_CHECKS = 5;
   */
  READY_FOR_CUSTOMER_FACTORY_TURNUP_CHECKS = 5,

  /**
   * The Zone is ready for site turnup.
   *
   * @generated from enum value: READY_FOR_SITE_TURNUP = 6;
   */
  READY_FOR_SITE_TURNUP = 6,

  /**
   * The Zone failed in factory turnup checks.
   *
   * @generated from enum value: CUSTOMER_FACTORY_TURNUP_CHECKS_FAILED = 7;
   */
  CUSTOMER_FACTORY_TURNUP_CHECKS_FAILED = 7,

  /**
   * The Zone is available to use.
   *
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * The Zone has been cancelled.
   *
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.Zone.State.
 */
export const Zone_StateSchema: GenEnum<Zone_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 7, 0);

/**
 * Contact information of the customer organization.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.OrganizationContact
 */
export type OrganizationContact = Message<"google.cloud.gdchardwaremanagement.v1alpha.OrganizationContact"> & {
  /**
   * Required. The organization's address.
   *
   * @generated from field: google.type.PostalAddress address = 1;
   */
  address?: PostalAddress;

  /**
   * Optional. The organization's email.
   *
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * Optional. The organization's phone number.
   *
   * @generated from field: string phone = 3;
   */
  phone: string;

  /**
   * Required. The individual points of contact in the organization at this
   * location.
   *
   * @generated from field: repeated google.cloud.gdchardwaremanagement.v1alpha.Contact contacts = 4;
   */
  contacts: Contact[];
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.OrganizationContact.
 * Use `create(OrganizationContactSchema)` to create a new message.
 */
export const OrganizationContactSchema: GenMessage<OrganizationContact> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 8);

/**
 * Contact details of a point of contact.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.Contact
 */
export type Contact = Message<"google.cloud.gdchardwaremanagement.v1alpha.Contact"> & {
  /**
   * Required. Given name of the contact.
   *
   * @generated from field: string given_name = 1;
   */
  givenName: string;

  /**
   * Optional. Family name of the contact.
   *
   * @generated from field: string family_name = 2;
   */
  familyName: string;

  /**
   * Required. Email of the contact.
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * Required. Phone number of the contact.
   *
   * @generated from field: string phone = 4;
   */
  phone: string;

  /**
   * Optional. Time zone of the contact.
   *
   * @generated from field: google.type.TimeZone time_zone = 5;
   */
  timeZone?: TimeZone;

  /**
   * Optional. The time periods when the contact is reachable.
   * If this field is empty, the contact is reachable at all times.
   *
   * @generated from field: repeated google.cloud.gdchardwaremanagement.v1alpha.TimePeriod reachable_times = 6;
   */
  reachableTimes: TimePeriod[];
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.Contact.
 * Use `create(ContactSchema)` to create a new message.
 */
export const ContactSchema: GenMessage<Contact> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 9);

/**
 * Configuration for GDC hardware.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.HardwareConfig
 */
export type HardwareConfig = Message<"google.cloud.gdchardwaremanagement.v1alpha.HardwareConfig"> & {
  /**
   * Required. Reference to the SKU for this hardware. This can point to a
   * specific SKU revision in the form of `resource_name@revision_id` as defined
   * in [AIP-162](https://google.aip.dev/162). If no revision_id is specified,
   * it refers to the latest revision.
   *
   * @generated from field: string sku = 1;
   */
  sku: string;

  /**
   * Required. Power supply type for this hardware.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.PowerSupply power_supply = 2;
   */
  powerSupply: PowerSupply;

  /**
   * Optional. Subscription duration for the hardware in months.
   *
   * @generated from field: int32 subscription_duration_months = 3;
   */
  subscriptionDurationMonths: number;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.HardwareConfig.
 * Use `create(HardwareConfigSchema)` to create a new message.
 */
export const HardwareConfigSchema: GenMessage<HardwareConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 10);

/**
 * Configuration for a SKU.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.SkuConfig
 */
export type SkuConfig = Message<"google.cloud.gdchardwaremanagement.v1alpha.SkuConfig"> & {
  /**
   * Information about CPU configuration.
   *
   * @generated from field: string cpu = 1;
   */
  cpu: string;

  /**
   * Information about GPU configuration.
   *
   * @generated from field: string gpu = 2;
   */
  gpu: string;

  /**
   * Information about RAM configuration.
   *
   * @generated from field: string ram = 3;
   */
  ram: string;

  /**
   * Information about storage configuration.
   *
   * @generated from field: string storage = 4;
   */
  storage: string;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.SkuConfig.
 * Use `create(SkuConfigSchema)` to create a new message.
 */
export const SkuConfigSchema: GenMessage<SkuConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 11);

/**
 * A specific instance of the SKU.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.SkuInstance
 */
export type SkuInstance = Message<"google.cloud.gdchardwaremanagement.v1alpha.SkuInstance"> & {
  /**
   * The [Unicode CLDR](https://cldr.unicode.org) region code where this
   * instance is available.
   *
   * @generated from field: string region_code = 1;
   */
  regionCode: string;

  /**
   * Power supply type for this instance.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.PowerSupply power_supply = 2;
   */
  powerSupply: PowerSupply;

  /**
   * Reference to the corresponding SKU in the Cloud Billing API.
   * The estimated price information can be retrieved using that API.
   * Format: `services/{service}/skus/{sku}`
   *
   * @generated from field: string billing_sku = 3;
   */
  billingSku: string;

  /**
   * Reference to the corresponding SKU per vCPU in the Cloud Billing API.
   * The estimated price information can be retrieved using that API.
   * Format: `services/{service}/skus/{sku}`
   *
   * @generated from field: string billing_sku_per_vcpu = 4;
   */
  billingSkuPerVcpu: string;

  /**
   * Subscription duration for the hardware in months.
   *
   * @generated from field: int32 subscription_duration_months = 5;
   */
  subscriptionDurationMonths: number;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.SkuInstance.
 * Use `create(SkuInstanceSchema)` to create a new message.
 */
export const SkuInstanceSchema: GenMessage<SkuInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 12);

/**
 * Physical properties of a hardware.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo
 */
export type HardwarePhysicalInfo = Message<"google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo"> & {
  /**
   * Required. The power receptacle type.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType power_receptacle = 1;
   */
  powerReceptacle: HardwarePhysicalInfo_PowerReceptacleType;

  /**
   * Required. Type of the uplink network connection.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType network_uplink = 2;
   */
  networkUplink: HardwarePhysicalInfo_NetworkUplinkType;

  /**
   * Required. Voltage of the power supply.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage voltage = 3;
   */
  voltage: HardwarePhysicalInfo_Voltage;

  /**
   * Required. Amperes of the power supply.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes amperes = 4;
   */
  amperes: HardwarePhysicalInfo_Amperes;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.
 * Use `create(HardwarePhysicalInfoSchema)` to create a new message.
 */
export const HardwarePhysicalInfoSchema: GenMessage<HardwarePhysicalInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 13);

/**
 * Valid power receptacle types.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
 */
export enum HardwarePhysicalInfo_PowerReceptacleType {
  /**
   * Facility plug type is unspecified.
   *
   * @generated from enum value: POWER_RECEPTACLE_TYPE_UNSPECIFIED = 0;
   */
  POWER_RECEPTACLE_TYPE_UNSPECIFIED = 0,

  /**
   * NEMA 5-15.
   *
   * @generated from enum value: NEMA_5_15 = 1;
   */
  NEMA_5_15 = 1,

  /**
   * C13.
   *
   * @generated from enum value: C_13 = 2;
   */
  C_13 = 2,

  /**
   * Standard european receptacle.
   *
   * @generated from enum value: STANDARD_EU = 3;
   */
  STANDARD_EU = 3,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType.
 */
export const HardwarePhysicalInfo_PowerReceptacleTypeSchema: GenEnum<HardwarePhysicalInfo_PowerReceptacleType> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 13, 0);

/**
 * Valid network uplink types.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
 */
export enum HardwarePhysicalInfo_NetworkUplinkType {
  /**
   * Network uplink type is unspecified.
   *
   * @generated from enum value: NETWORK_UPLINK_TYPE_UNSPECIFIED = 0;
   */
  NETWORK_UPLINK_TYPE_UNSPECIFIED = 0,

  /**
   * RJ-45.
   *
   * @generated from enum value: RJ_45 = 1;
   */
  RJ_45 = 1,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType.
 */
export const HardwarePhysicalInfo_NetworkUplinkTypeSchema: GenEnum<HardwarePhysicalInfo_NetworkUplinkType> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 13, 1);

/**
 * Valid voltage values.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage
 */
export enum HardwarePhysicalInfo_Voltage {
  /**
   * Voltage is unspecified.
   *
   * @generated from enum value: VOLTAGE_UNSPECIFIED = 0;
   */
  VOLTAGE_UNSPECIFIED = 0,

  /**
   * 120V.
   *
   * @generated from enum value: VOLTAGE_110 = 1;
   */
  VOLTAGE_110 = 1,

  /**
   * 220V.
   *
   * @generated from enum value: VOLTAGE_220 = 3;
   */
  VOLTAGE_220 = 3,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage.
 */
export const HardwarePhysicalInfo_VoltageSchema: GenEnum<HardwarePhysicalInfo_Voltage> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 13, 2);

/**
 * Valid amperes values.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes
 */
export enum HardwarePhysicalInfo_Amperes {
  /**
   * Amperes is unspecified.
   *
   * @generated from enum value: AMPERES_UNSPECIFIED = 0;
   */
  AMPERES_UNSPECIFIED = 0,

  /**
   * 15A.
   *
   * @generated from enum value: AMPERES_15 = 1;
   */
  AMPERES_15 = 1,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes.
 */
export const HardwarePhysicalInfo_AmperesSchema: GenEnum<HardwarePhysicalInfo_Amperes> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 13, 3);

/**
 * Information for installation of a Hardware.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo
 */
export type HardwareInstallationInfo = Message<"google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo"> & {
  /**
   * Optional. Location of the rack in the site e.g. Floor 2, Room 201, Row 7,
   * Rack 3.
   *
   * @generated from field: string rack_location = 1;
   */
  rackLocation: string;

  /**
   * Required. Distance from the power outlet in meters.
   *
   * @generated from field: int32 power_distance_meters = 2;
   */
  powerDistanceMeters: number;

  /**
   * Required. Distance from the network switch in meters.
   *
   * @generated from field: int32 switch_distance_meters = 3;
   */
  switchDistanceMeters: number;

  /**
   * Required. Dimensions of the rack unit.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.Dimensions rack_unit_dimensions = 4;
   */
  rackUnitDimensions?: Dimensions;

  /**
   * Required. Rack space allocated for the hardware.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.RackSpace rack_space = 5;
   */
  rackSpace?: RackSpace;

  /**
   * Required. Type of the rack.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo.RackType rack_type = 6;
   */
  rackType: HardwareInstallationInfo_RackType;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo.
 * Use `create(HardwareInstallationInfoSchema)` to create a new message.
 */
export const HardwareInstallationInfoSchema: GenMessage<HardwareInstallationInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 14);

/**
 * Valid rack types.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo.RackType
 */
export enum HardwareInstallationInfo_RackType {
  /**
   * Rack type is unspecified.
   *
   * @generated from enum value: RACK_TYPE_UNSPECIFIED = 0;
   */
  RACK_TYPE_UNSPECIFIED = 0,

  /**
   * Two post rack.
   *
   * @generated from enum value: TWO_POST = 1;
   */
  TWO_POST = 1,

  /**
   * Four post rack.
   *
   * @generated from enum value: FOUR_POST = 2;
   */
  FOUR_POST = 2,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo.RackType.
 */
export const HardwareInstallationInfo_RackTypeSchema: GenEnum<HardwareInstallationInfo_RackType> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 14, 0);

/**
 * Networking configuration for a zone.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig
 */
export type ZoneNetworkConfig = Message<"google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig"> & {
  /**
   * Required. An IPv4 address block for machine management.
   * Should be a private RFC1918 or public CIDR block large enough to allocate
   * at least one address per machine in the Zone.
   * Should be in `management_ipv4_subnet`, and disjoint with other address
   * ranges.
   *
   * @generated from field: string machine_mgmt_ipv4_range = 1;
   */
  machineMgmtIpv4Range: string;

  /**
   * Required. An IPv4 address block for kubernetes nodes.
   * Should be a private RFC1918 or public CIDR block large enough to allocate
   * at least one address per machine in the Zone.
   * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
   * ranges.
   *
   * @generated from field: string kubernetes_node_ipv4_range = 2;
   */
  kubernetesNodeIpv4Range: string;

  /**
   * Required. An IPv4 address block for kubernetes control plane.
   * Should be a private RFC1918 or public CIDR block large enough to allocate
   * at least one address per cluster in the Zone.
   * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
   * ranges.
   *
   * @generated from field: string kubernetes_control_plane_ipv4_range = 3;
   */
  kubernetesControlPlaneIpv4Range: string;

  /**
   * Required. An IPv4 subnet for the management network.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4;
   */
  managementIpv4Subnet?: Subnet;

  /**
   * Optional. An IPv4 subnet for the kubernetes network.
   * If unspecified, the kubernetes subnet will be the same as the management
   * subnet.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5;
   */
  kubernetesIpv4Subnet?: Subnet;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig.
 * Use `create(ZoneNetworkConfigSchema)` to create a new message.
 */
export const ZoneNetworkConfigSchema: GenMessage<ZoneNetworkConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 15);

/**
 * Represents a subnet.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.Subnet
 */
export type Subnet = Message<"google.cloud.gdchardwaremanagement.v1alpha.Subnet"> & {
  /**
   * Required. Address range for this subnet in CIDR notation.
   *
   * @generated from field: string address_range = 1;
   */
  addressRange: string;

  /**
   * Required. Default gateway for this subnet.
   *
   * @generated from field: string default_gateway_ip_address = 2;
   */
  defaultGatewayIpAddress: string;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.Subnet.
 * Use `create(SubnetSchema)` to create a new message.
 */
export const SubnetSchema: GenMessage<Subnet> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 16);

/**
 * Represents a time period in a week.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.TimePeriod
 */
export type TimePeriod = Message<"google.cloud.gdchardwaremanagement.v1alpha.TimePeriod"> & {
  /**
   * Required. The start of the time period.
   *
   * @generated from field: google.type.TimeOfDay start_time = 1;
   */
  startTime?: TimeOfDay;

  /**
   * Required. The end of the time period.
   *
   * @generated from field: google.type.TimeOfDay end_time = 2;
   */
  endTime?: TimeOfDay;

  /**
   * Required. The days of the week that the time period is active.
   *
   * @generated from field: repeated google.type.DayOfWeek days = 3;
   */
  days: DayOfWeek[];
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.TimePeriod.
 * Use `create(TimePeriodSchema)` to create a new message.
 */
export const TimePeriodSchema: GenMessage<TimePeriod> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 17);

/**
 * Represents the dimensions of an object.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.Dimensions
 */
export type Dimensions = Message<"google.cloud.gdchardwaremanagement.v1alpha.Dimensions"> & {
  /**
   * Required. Width in inches.
   *
   * @generated from field: float width_inches = 1;
   */
  widthInches: number;

  /**
   * Required. Height in inches.
   *
   * @generated from field: float height_inches = 2;
   */
  heightInches: number;

  /**
   * Required. Depth in inches.
   *
   * @generated from field: float depth_inches = 3;
   */
  depthInches: number;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.Dimensions.
 * Use `create(DimensionsSchema)` to create a new message.
 */
export const DimensionsSchema: GenMessage<Dimensions> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 18);

/**
 * Represents contiguous space in a rack.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.RackSpace
 */
export type RackSpace = Message<"google.cloud.gdchardwaremanagement.v1alpha.RackSpace"> & {
  /**
   * Required. First rack unit of the rack space (inclusive).
   *
   * @generated from field: int32 start_rack_unit = 1;
   */
  startRackUnit: number;

  /**
   * Required. Last rack unit of the rack space (inclusive).
   *
   * @generated from field: int32 end_rack_unit = 2;
   */
  endRackUnit: number;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.RackSpace.
 * Use `create(RackSpaceSchema)` to create a new message.
 */
export const RackSpaceSchema: GenMessage<RackSpace> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 19);

/**
 * Represents the location of one or many hardware.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.HardwareLocation
 */
export type HardwareLocation = Message<"google.cloud.gdchardwaremanagement.v1alpha.HardwareLocation"> & {
  /**
   * Required. Name of the site where the hardware are present.
   * Format: `projects/{project}/locations/{location}/sites/{site}`
   *
   * @generated from field: string site = 1;
   */
  site: string;

  /**
   * Required. Location of the rack in the site e.g. Floor 2, Room 201, Row 7,
   * Rack 3.
   *
   * @generated from field: string rack_location = 2;
   */
  rackLocation: string;

  /**
   * Optional. Spaces occupied by the hardware in the rack.
   * If unset, this location is assumed to be the entire rack.
   *
   * @generated from field: repeated google.cloud.gdchardwaremanagement.v1alpha.RackSpace rack_space = 3;
   */
  rackSpace: RackSpace[];
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.HardwareLocation.
 * Use `create(HardwareLocationSchema)` to create a new message.
 */
export const HardwareLocationSchema: GenMessage<HardwareLocation> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 20);

/**
 * A message to store a subscription configuration.
 *
 * @generated from message google.cloud.gdchardwaremanagement.v1alpha.SubscriptionConfig
 */
export type SubscriptionConfig = Message<"google.cloud.gdchardwaremanagement.v1alpha.SubscriptionConfig"> & {
  /**
   * Output only. The unique identifier of the subscription.
   *
   * @generated from field: string subscription_id = 1;
   */
  subscriptionId: string;

  /**
   * Output only. The Google Cloud Billing ID that the subscription is created
   * under.
   *
   * @generated from field: string billing_id = 2;
   */
  billingId: string;

  /**
   * Output only. The current state of the subscription.
   *
   * @generated from field: google.cloud.gdchardwaremanagement.v1alpha.SubscriptionConfig.SubscriptionState state = 3;
   */
  state: SubscriptionConfig_SubscriptionState;
};

/**
 * Describes the message google.cloud.gdchardwaremanagement.v1alpha.SubscriptionConfig.
 * Use `create(SubscriptionConfigSchema)` to create a new message.
 */
export const SubscriptionConfigSchema: GenMessage<SubscriptionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 21);

/**
 * Enum to represent the state of the subscription.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.SubscriptionConfig.SubscriptionState
 */
export enum SubscriptionConfig_SubscriptionState {
  /**
   * State is unspecified.
   *
   * @generated from enum value: SUBSCRIPTION_STATE_UNSPECIFIED = 0;
   */
  SUBSCRIPTION_STATE_UNSPECIFIED = 0,

  /**
   * Active state means that the subscription has been created successfully
   * and billing is happening.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * Inactive means that the subscription has been created successfully, but
   * billing has not started yet.
   *
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * The subscription is in an erroneous state.
   *
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,

  /**
   * The subscription state failed to be retrieved. This may be a transient
   * issue. The user should retry the request.
   *
   * @generated from enum value: FAILED_TO_RETRIEVE = 4;
   */
  FAILED_TO_RETRIEVE = 4,

  /**
   * The subscription has been completed, because it has reached the end date.
   *
   * @generated from enum value: COMPLETED = 5;
   */
  COMPLETED = 5,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.SubscriptionConfig.SubscriptionState.
 */
export const SubscriptionConfig_SubscriptionStateSchema: GenEnum<SubscriptionConfig_SubscriptionState> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 21, 0);

/**
 * The power supply options.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.PowerSupply
 */
export enum PowerSupply {
  /**
   * Power supply is unspecified.
   *
   * @generated from enum value: POWER_SUPPLY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * AC power supply.
   *
   * @generated from enum value: POWER_SUPPLY_AC = 1;
   */
  AC = 1,

  /**
   * DC power supply.
   *
   * @generated from enum value: POWER_SUPPLY_DC = 2;
   */
  DC = 2,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.PowerSupply.
 */
export const PowerSupplySchema: GenEnum<PowerSupply> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 0);

/**
 * Entity is used to denote an organization or party.
 *
 * @generated from enum google.cloud.gdchardwaremanagement.v1alpha.Entity
 */
export enum Entity {
  /**
   * Entity is unspecified.
   *
   * @generated from enum value: ENTITY_UNSPECIFIED = 0;
   */
  ENTITY_UNSPECIFIED = 0,

  /**
   * Google.
   *
   * @generated from enum value: GOOGLE = 1;
   */
  GOOGLE = 1,

  /**
   * Customer.
   *
   * @generated from enum value: CUSTOMER = 2;
   */
  CUSTOMER = 2,

  /**
   * Vendor.
   *
   * @generated from enum value: VENDOR = 3;
   */
  VENDOR = 3,
}

/**
 * Describes the enum google.cloud.gdchardwaremanagement.v1alpha.Entity.
 */
export const EntitySchema: GenEnum<Entity> = /*@__PURE__*/
  enumDesc(file_google_cloud_gdchardwaremanagement_v1alpha_resources, 1);

